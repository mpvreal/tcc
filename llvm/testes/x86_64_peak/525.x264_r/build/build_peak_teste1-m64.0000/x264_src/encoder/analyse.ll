; ModuleID = 'x264_src/encoder/analyse.c'
source_filename = "x264_src/encoder/analyse.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.vlc_t = type { i8, i8 }
%struct.vlc_large_t = type { i16, i8, i8 }
%struct.anon.15 = type { i32, i32 }
%struct.x264_weight_t = type { [8 x i16], [8 x i16], i32, i32, i32, ptr, [8 x i8] }
%struct.x264_cabac_t = type { i32, i32, i32, i32, ptr, ptr, ptr, [8 x i8], i32, [460 x i8] }
%struct.x264_param_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, [16 x i8], [16 x i8], [16 x i8], [16 x i8], [64 x i8], [64 x i8], ptr, ptr, i32, i32, ptr, %struct.anon.0, %struct.anon.1, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.anon = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.0 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i32, [2 x i32], i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, float, float, float, i32, i32, float, float, float, i32, float, i32, i32, i32, ptr, i32, ptr, float, float, float, ptr, i32, ptr }
%struct.x264_t = type { %struct.x264_param_t, [129 x ptr], i32, i32, i32, i32, i32, %struct.anon.2, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x %struct.x264_sps_t], ptr, [1 x %struct.x264_pps_t], ptr, i32, i32, [4 x ptr], [2 x ptr], [4 x ptr], [2 x ptr], [4 x ptr], [2 x ptr], [4 x ptr], [2 x ptr], [92 x ptr], [92 x [4 x ptr]], ptr, [8 x i8], %struct.x264_slice_header_t, %struct.x264_cabac_t, %struct.anon.8, ptr, ptr, i32, [19 x ptr], i32, [19 x ptr], [2 x i32], i32, i32, i64, %struct.anon.9, %struct.anon.10, ptr, %struct.anon.13, [2 x [64 x i32]], [2 x [64 x i16]], [2 x i32], ptr, [2 x [3 x ptr]], [2 x ptr], [7 x ptr], [7 x ptr], [12 x ptr], [12 x ptr], ptr, %struct.x264_pixel_function_t, %struct.x264_mc_functions_t, %struct.x264_dct_function_t, %struct.x264_zigzag_function_t, %struct.x264_quant_function_t, %struct.x264_deblock_function_t, ptr, [8 x i8] }
%struct.anon.2 = type { i32, i32, ptr, i32, ptr, %struct.bs_s }
%struct.bs_s = type { ptr, ptr, ptr, i64, i32, i32 }
%struct.x264_sps_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon.3, i32, %struct.anon.4, i32 }
%struct.anon.3 = type { i32, i32, i32, i32 }
%struct.anon.4 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon.5, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.5 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.x264_pps_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x ptr] }
%struct.x264_slice_header_t = type { ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, [2 x [16 x %struct.anon.6]], [32 x [3 x %struct.x264_weight_t]], i32, i32, [16 x %struct.anon.7], i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8] }
%struct.anon.6 = type { i32, i32 }
%struct.anon.7 = type { i32, i32 }
%struct.anon.8 = type { ptr, [2 x ptr], ptr, [18 x ptr], i32, i32, i32, i32, i32, i32, i32, i64, i64, [2 x i64], i64, i64, i32, i32 }
%struct.anon.9 = type { [16 x i16], [2 x [4 x i16]], [4 x [64 x i16]], [24 x [16 x i16]] }
%struct.anon.10 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], i32, [4 x i32], [16 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [2 x ptr], [2 x ptr], [2 x ptr], [2 x [32 x ptr]], ptr, ptr, ptr, [16 x ptr], i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], %struct.anon.11, %struct.anon.12, i32, i32, i32, i32, i32, i32, i32, i32, [2 x [2 x i32]], i32, i32, [2 x [32 x [4 x i16]]], ptr, [2 x [32 x [4 x i8]]], ptr, [18 x i8], i32, [34 x i8], [14 x i8] }
%struct.anon.11 = type { [384 x i8], [864 x i8], [256 x i8], [256 x i8], [3 x [64 x i16]], [15 x [16 x i16]], [4 x i32], [4 x i32], i32, i32, [8 x i8], [4 x [64 x i16]], [16 x [16 x i16]], [9 x i64], [8 x i8], [32 x i32], [3 x ptr], [3 x ptr], [3 x ptr], [2 x i32], [2 x [32 x [6 x ptr]]], [32 x ptr], [2 x [16 x ptr]], [3 x i32] }
%struct.anon.12 = type { [40 x i8], [8 x i8], [48 x i8], [2 x [40 x i8]], [2 x [40 x [2 x i16]]], [2 x [40 x [2 x i8]]], [40 x i8], [2 x [4 x [2 x i16]]], [2 x [4 x i8]], i32, [2 x i16], i32, i32, i32, i32, [8 x i8] }
%struct.anon.13 = type { %struct.anon.14, [5 x i32], [5 x i64], [5 x double], [17 x i32], [5 x i64], [5 x double], [5 x double], [5 x double], [5 x double], [5 x double], [5 x [19 x i64]], [2 x [17 x i64]], [2 x i64], [2 x [2 x [32 x i64]]], [6 x i64], [4 x [13 x i64]], [2 x i32], [2 x i32], [3 x i32] }
%struct.anon.14 = type { i32, i32, i32, [19 x i32], i32, i32, i32, [2 x i32], [2 x [32 x i32]], [17 x i32], [6 x i32], [4 x [13 x i32]], [2 x i32], [3 x i64], double }
%struct.x264_pixel_function_t = type { [7 x ptr], [7 x ptr], [7 x ptr], [7 x ptr], [4 x ptr], [7 x ptr], [7 x ptr], [7 x ptr], [7 x ptr], [7 x ptr], [7 x ptr], ptr, [4 x ptr], [4 x ptr], ptr, ptr, [7 x ptr], [7 x ptr], [7 x ptr], [7 x ptr], [7 x ptr], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.x264_mc_functions_t = type { ptr, ptr, ptr, [10 x ptr], [7 x ptr], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.x264_dct_function_t = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.x264_zigzag_function_t = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.x264_quant_function_t = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [6 x ptr], [5 x ptr] }
%struct.x264_deblock_function_t = type { [2 x ptr], [2 x ptr], [2 x ptr], [2 x ptr], ptr }
%struct.trellis_node_t = type { i64, i32, [10 x i8] }
%struct.anon.16 = type { i16, i16 }
%struct.x264_frame = type { i32, i32, i32, i64, i64, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, float, float, i32, i32, [3 x i32], [3 x i32], [3 x i32], i32, i32, i32, [3 x ptr], [4 x ptr], [4 x ptr], ptr, [4 x ptr], [4 x ptr], [8 x i8], [16 x [3 x %struct.x264_weight_t]], [16 x ptr], i32, ptr, ptr, ptr, [2 x ptr], ptr, [2 x [17 x ptr]], [18 x [18 x ptr]], [2 x [17 x ptr]], [2 x ptr], [2 x i32], [2 x [16 x i32]], [2 x i16], [18 x [18 x i32]], [18 x [18 x i32]], i32, [18 x i32], [18 x [18 x ptr]], ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, [18 x float], i32, i64, %struct.x264_hrd_t, [251 x i8], [251 x i32], [251 x double], i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32 }
%struct.x264_hrd_t = type { double, double, double, double }
%struct.x264_me_t = type { i32, ptr, i32, i32, ptr, [6 x ptr], ptr, [3 x ptr], ptr, [2 x i32], [2 x i16], i32, i32, [2 x i16] }
%struct.x264_mb_analysis_t = type { i32, i32, i32, ptr, [2 x ptr], i32, i32, i32, i32, i32, [7 x i32], i32, i32, i32, [12 x [4 x i32]], [4 x i32], i32, [16 x i32], i32, i32, [7 x i32], i32, %struct.x264_mb_analysis_list_t, %struct.x264_mb_analysis_list_t, i32, i32, i32, [4 x i32], [3 x [4 x i32]], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], i32, i32, i32, [12 x i8] }
%struct.x264_mb_analysis_list_t = type { i32, [12 x i8], %struct.x264_me_t, %struct.x264_me_t, i32, [32 x [5 x [2 x i16]]], [12 x i8], [4 x %struct.x264_me_t], [4 x i32], [4 x [4 x %struct.x264_me_t]], [4 x i32], [4 x [2 x %struct.x264_me_t]], [4 x i32], [4 x [2 x %struct.x264_me_t]], i32, [12 x i8], [2 x %struct.x264_me_t], i32, [12 x i8], [2 x %struct.x264_me_t] }
%struct.x264_lookahead_t = type { i8, i8, i8, i32, i32, ptr, %struct.x264_synch_frame_list_t, %struct.x264_synch_frame_list_t, %struct.x264_synch_frame_list_t }
%struct.x264_synch_frame_list_t = type { ptr, i32, i32, i32, i32, i32 }
%struct.x264_run_level_t = type { i32, [16 x i16], [16 x i8] }

@cabac_size_unary = internal unnamed_addr global [15 x [128 x i16]] zeroinitializer, align 16
@cabac_transition_unary = internal unnamed_addr global [15 x [128 x i8]] zeroinitializer, align 16
@cabac_size_5ones = internal unnamed_addr global [128 x i16] zeroinitializer, align 16
@cabac_transition_5ones = internal unnamed_addr global [128 x i8] zeroinitializer, align 16
@x264_zigzag_scan2 = internal constant [4 x i8] c"\00\01\02\03", align 1
@x264_zigzag_scan4 = internal constant [2 x [16 x i8]] [[16 x i8] c"\00\04\01\02\05\08\0C\09\06\03\07\0A\0D\0E\0B\0F", [16 x i8] c"\00\01\04\02\03\05\06\07\08\09\0A\0B\0C\0D\0E\0F"], align 16
@x264_dct4_weight2_zigzag = external global [2 x [16 x i32]], align 16
@x264_dct8_weight2_zigzag = external global [2 x [64 x i32]], align 16
@x264_zigzag_scan8 = internal constant [2 x [64 x i8]] [[64 x i8] c"\00\08\01\02\09\10\18\11\0A\03\04\0B\12\19 (!\1A\13\0C\05\06\0D\14\1B\22)081*#\1C\15\0E\07\0F\16\1D$+29:3,%\1E\17\1F&-4;<5.'/6=>7?", [64 x i8] c"\00\01\02\08\09\03\04\0A\10\0B\05\06\07\0C\11\18\12\0D\0E\0F\13\19 \1A\14\15\16\17\1B!(\22\1C\1D\1E\1F#)0*$%&'+12,-./3894567:;<=>?"], align 16
@x264_lambda_tab = dso_local local_unnamed_addr constant [52 x i8] c"\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\02\02\02\02\03\03\03\04\04\04\05\06\06\07\08\09\0A\0B\0D\0E\10\12\14\17\19\1D $(-39@HQ[", align 16
@x264_lambda2_tab = dso_local local_unnamed_addr constant [52 x i32] [i32 14, i32 18, i32 22, i32 28, i32 36, i32 45, i32 57, i32 72, i32 91, i32 115, i32 145, i32 182, i32 230, i32 290, i32 365, i32 460, i32 580, i32 731, i32 921, i32 1161, i32 1462, i32 1843, i32 2322, i32 2925, i32 3686, i32 4644, i32 5851, i32 7372, i32 9289, i32 11703, i32 14745, i32 18578, i32 23407, i32 29491, i32 37156, i32 46814, i32 58982, i32 74313, i32 93628, i32 117964, i32 148626, i32 187257, i32 235929, i32 297252, i32 374514, i32 471859, i32 594505, i32 749029, i32 943718, i32 1189010, i32 1498059, i32 1887436], align 16
@x264_exp2_lut = dso_local local_unnamed_addr constant [64 x i8] c"\00\03\06\08\0B\0E\11\14\17\1A\1D $'*-047:>AEHLPSW[^bfjnrvz~\82\87\8B\8F\93\98\9C\A1\A5\AA\AF\B3\B8\BD\C2\C6\CB\D0\D6\DB\E0\E5\EA\F0\F5\FA", align 16
@x264_log2_lut = dso_local local_unnamed_addr constant [128 x float] [float 0.000000e+00, float 0x3F86FFC120000000, float 0x3F96E82940000000, float 0x3FA11C6D20000000, float 0x3FA6BA4940000000, float 0x3FAC4DA900000000, float 0x3FB0EB4640000000, float 0x3FB3AA79C0000000, float 0x3FB663C740000000, float 0x3FB9187E80000000, float 0x3FBBC7F780000000, float 0x3FBE72DA20000000, float 0x3FC08C3F40000000, float 0x3FC1DCC640000000, float 0x3FC32B0200000000, float 0x3FC4769EC0000000, float 0x3FC5C04420000000, float 0x3FC7074A80000000, float 0x3FC84C05A0000000, float 0x3FC98EC960000000, float 0x3FCACF4200000000, float 0x3FCC0DC340000000, float 0x3FCD49F940000000, float 0x3FCE83E420000000, float 0x3FCFBC2BA0000000, float 0x3FD07913E0000000, float 0x3FD1131660000000, float 0x3FD1ABF340000000, float 0x3FD243FE60000000, float 0x3FD2DB0DE0000000, float 0x3FD37121A0000000, float 0x3FD40639E0000000, float 0x3FD49A8040000000, float 0x3FD52DCB20000000, float 0x3FD5C01A40000000, float 0x3FD65197A0000000, float 0x3FD6E21960000000, float 0x3FD771C980000000, float 0x3FD800A7C0000000, float 0x3FD88E8A80000000, float 0x3FD91BC560000000, float 0x3FD9A804A0000000, float 0x3FDA337220000000, float 0x3FDABE0DE0000000, float 0x3FDB47D800000000, float 0x3FDBD0FA60000000, float 0x3FDC592100000000, float 0x3FDCE09FE0000000, float 0x3FDD674D20000000, float 0x3FDDED5280000000, float 0x3FDE725C40000000, float 0x3FDEF6E820000000, float 0x3FDF7A7860000000, float 0x3FDFFD8AE0000000, float 0x3FE03FD0E0000000, float 0x3FE0809D40000000, float 0x3FE0C100E0000000, float 0x3FE10110A0000000, float 0x3FE140CC80000000, float 0x3FE1801F80000000, float 0x3FE1BF3380000000, float 0x3FE1FDDEC0000000, float 0x3FE23C4B00000000, float 0x3FE27A4E80000000, float 0x3FE2B7FE00000000, float 0x3FE2F56EA0000000, float 0x3FE3327680000000, float 0x3FE36F3F60000000, float 0x3FE3ABB440000000, float 0x3FE3E7D560000000, float 0x3FE423B7A0000000, float 0x3FE45F30E0000000, float 0x3FE49A8040000000, float 0x3FE4D566C0000000, float 0x3FE5100E60000000, float 0x3FE54A7720000000, float 0x3FE5848BE0000000, float 0x3FE5BE4CE0000000, float 0x3FE5F7CEE0000000, float 0x3FE6311200000000, float 0x3FE66A0120000000, float 0x3FE6A2B180000000, float 0x3FE6DB22E0000000, float 0x3FE7134040000000, float 0x3FE74B1EE0000000, float 0x3FE782BE80000000, float 0x3FE7BA1F40000000, float 0x3FE7F12C20000000, float 0x3FE8280F20000000, float 0x3FE85E9E20000000, float 0x3FE894EE40000000, float 0x3FE8CB1460000000, float 0x3FE900E6A0000000, float 0x3FE9367A00000000, float 0x3FE96BE380000000, float 0x3FE9A0F900000000, float 0x3FE9D5CFA0000000, float 0x3FEA0A7C60000000, float 0x3FEA3EEA20000000, float 0x3FEA731900000000, float 0x3FEAA708E0000000, float 0x3FEADABA00000000, float 0x3FEB0E4100000000, float 0x3FEB418940000000, float 0x3FEB749280000000, float 0x3FEBA771C0000000, float 0x3FEBD9FD40000000, float 0x3FEC0C73A0000000, float 0x3FEC3E9640000000, float 0x3FEC708EE0000000, float 0x3FECA25D80000000, float 0x3FECD3ED60000000, float 0x3FED053E20000000, float 0x3FED366520000000, float 0x3FED674D20000000, float 0x3FED980B20000000, float 0x3FEDC89F40000000, float 0x3FEDF8F480000000, float 0x3FEE290AC0000000, float 0x3FEE590C00000000, float 0x3FEE88CE80000000, float 0x3FEEB851E0000000, float 0x3FEEE7AB80000000, float 0x3FEF16DB00000000, float 0x3FEF45E0C0000000, float 0x3FEF74A780000000, float 0x3FEFA34440000000, float 0x3FEFD1B720000000], align 16
@x264_log2_lz_lut = dso_local local_unnamed_addr constant [32 x float] [float 3.100000e+01, float 3.000000e+01, float 2.900000e+01, float 2.800000e+01, float 2.700000e+01, float 2.600000e+01, float 2.500000e+01, float 2.400000e+01, float 2.300000e+01, float 2.200000e+01, float 2.100000e+01, float 2.000000e+01, float 1.900000e+01, float 1.800000e+01, float 1.700000e+01, float 1.600000e+01, float 1.500000e+01, float 1.400000e+01, float 1.300000e+01, float 1.200000e+01, float 1.100000e+01, float 1.000000e+01, float 9.000000e+00, float 8.000000e+00, float 7.000000e+00, float 6.000000e+00, float 5.000000e+00, float 4.000000e+00, float 3.000000e+00, float 2.000000e+00, float 1.000000e+00, float 0.000000e+00], align 16
@x264_cost_ref = internal global [92 x [3 x [33 x i16]]] zeroinitializer, align 16
@.str = private unnamed_addr constant [31 x i8] c"internal error (!8x8 && !4x4)\0A\00", align 1
@i_mb_b16x8_cost_table = internal unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\05\07\07\07\05\07\09\09\09", align 16
@x264_mb_partition_listX_table = internal unnamed_addr constant [2 x [17 x i8]] [[17 x i8] c"\01\01\01\01\00\00\00\00\01\01\01\01\00\00\00\00\00", [17 x i8] c"\00\00\00\00\01\01\01\01\01\01\01\01\00\00\00\00\00"], align 16
@x264_macroblock_analyse.check_mv_lists = internal unnamed_addr constant [19 x i8] c"\00\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\00\00\00", align 16
@x264_scan8 = internal unnamed_addr constant [27 x i32] [i32 12, i32 13, i32 20, i32 21, i32 14, i32 15, i32 22, i32 23, i32 28, i32 29, i32 36, i32 37, i32 30, i32 31, i32 38, i32 39, i32 9, i32 10, i32 17, i32 18, i32 33, i32 34, i32 41, i32 42, i32 44, i32 46, i32 47], align 16
@.str.1 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@delta_tfi_divisor = internal unnamed_addr constant [10 x i8] c"\00\02\01\01\02\02\03\03\04\06", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"B-ref at frame %d incompatible with B-pyramid %s \0A\00", align 1
@x264_b_pyramid_names = internal unnamed_addr constant [4 x ptr] [ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr null], align 16
@.str.3 = private unnamed_addr constant [74 x i8] c"B-ref at frame %d incompatible with B-pyramid %s and %d reference frames\0A\00", align 1
@.str.4 = private unnamed_addr constant [68 x i8] c"specified frame type (%d) is not compatible with keyframe interval\0A\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"specified frame type is not compatible with max B-frames\0A\00", align 1
@x264_mb_pred_mode4x4_fix = internal unnamed_addr constant [13 x i8] c"\FF\00\01\02\03\04\05\06\07\08\02\02\02", align 1
@block_idx_x = internal unnamed_addr constant [16 x i8] c"\00\01\00\01\02\03\02\03\00\01\00\01\02\03\02\03", align 16
@block_idx_y = internal unnamed_addr constant [16 x i8] c"\00\00\01\01\00\00\01\01\02\02\03\03\02\02\03\03", align 16
@x264_mb_type_list_table = internal unnamed_addr constant [19 x [2 x [2 x i8]]] [[2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] zeroinitializer], [2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] zeroinitializer], [2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] zeroinitializer], [2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\00\01"], [2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] c"\00\01"], [2 x [2 x i8]] [[2 x i8] c"\00\01", [2 x i8] c"\01\00"], [2 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\01"], [2 x [2 x i8]] [[2 x i8] c"\00\01", [2 x i8] c"\01\01"], [2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] c"\01\00"], [2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\01\01"], [2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] c"\01\01"], [2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] zeroinitializer], align 16
@x264_cabac_mb_type.i_mb_bits = internal unnamed_addr constant [27 x i8] c"1)\045-\00Cc\00=/\009%\06Ss\00Kk\00[{\00Gg!", align 16
@x264_cabac_entropy = external local_unnamed_addr constant [128 x i16], align 16
@x264_mb_pred_mode16x16_fix = internal unnamed_addr constant [7 x i8] c"\00\01\02\03\02\02\02", align 1
@x264_mb_pred_mode8x8c_fix = internal unnamed_addr constant [7 x i8] c"\00\01\02\03\00\00\00", align 1
@x264_ue_size_tab = internal unnamed_addr constant [256 x i8] calign 16
@x264_mb_transform_8x8_allowed.partition_tab = internal unnamed_addr constant [19 x i8] c"\00\00\00\00\01\02\00\01\01\01\01\01\01\01\01\01\01\01\00", align 16
@x264_cabac_transition = external local_unnamed_addr constant [128 x [2 x i8]], align 16
@significant_coeff_flag_offset = internal unnamed_addr constant [2 x [6 x i16]] [[6 x i16] [i16 105, i16 120, i16 134, i16 149, i16 152, i16 402], [6 x i16] [i16 277, i16 292, i16 306, i16 321, i16 324, i16 436]], align 16
@last_coeff_flag_offset = internal unnamed_addr constant [2 x [6 x i16]] [[6 x i16] [i16 166, i16 181, i16 195, i16 210, i16 213, i16 417], [6 x i16] [i16 338, i16 353, i16 367, i16 382, i16 385, i16 451]], align 16
@coeff_abs_level_m1_offset = internal unnamed_addr constant [6 x i16] [i16 227, i16 237, i16 247, i16 257, i16 266, i16 426], align 2
@significant_coeff_flag_offset_8x8 = internal unnamed_addr constant [2 x [63 x i8]] [[63 x i8] c"\00\01\02\03\04\05\05\04\04\03\03\04\04\04\05\05\04\04\04\04\03\03\06\07\07\07\08\09\0A\09\08\07\07\06\0B\0C\0D\0B\06\07\08\09\0E\0A\09\08\06\0B\0C\0D\0B\06\09\0E\0A\09\0B\0C\0D\0B\0E\0A\0C", [63 x i8] c"\00\01\01\02\02\03\03\04\05\06\07\07\07\08\04\05\06\09\0A\0A\08\0B\0C\0B\09\09\0A\0A\08\0B\0C\0B\09\09\0A\0A\08\0B\0C\0B\09\09\0A\0A\08\0D\0D\09\09\0A\0A\08\0D\0D\09\09\0A\0A\0E\0E\0E\0E\0E"], align 16
@coeff_abs_level1_ctx = internal unnamed_addr constant [8 x i8] c"\01\02\03\04\00\00\00\00", align 1
@count_cat_m1 = internal unnamed_addr constant [5 x i8] c"\0F\0E\0F\03\0E", align 1
@last_coeff_flag_offset_8x8 = internal unnamed_addr constant [63 x i8] c"\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\04\04\04\04\04\04\04\04\05\05\05\05\06\06\06\06\07\07\07\07\08\08\08", align 16
@coeff_abs_levelgt1_ctx = internal unnamed_addr constant [8 x i8] c"\05\05\05\05\06\07\08\09", align 1
@coeff_abs_level_transition = internal unnamed_addr constant [2 x [8 x i8]] [[8 x i8] c"\01\02\03\03\04\05\06\07", [8 x i8] c"\04\04\04\04\05\06\07\07"], align 16
@x264_macroblock_size_cavlc.i_offsets = internal unnamed_addr constant [3 x i8] c"\05\17\00", align 1
@sub_mb_type_p_to_golomb = internal unnamed_addr constant [4 x i8] c"\03\01\02\00", align 1
@sub_mb_type_b_to_golomb = internal unnamed_addr constant [13 x i8] c"\0A\04\05\01\0B\06\07\02\0C\08\09\03\00", align 1
@mb_type_b_to_golomb = internal unnamed_addr constant [3 x [9 x i8]] [[9 x i8] c"\04\08\0C\0A\06\0E\10\12\14", [9 x i8] c"\05\09\0D\0B\07\0F\11\13\15", [9 x i8] c"\01\FF\FF\FF\02\FF\FF\FF\03"], align 16
@intra4x4_cbp_to_golomb = internal unnamed_addr constant [48 x i8] c"\03\1D\1E\11\1F\12%\08 &\13\09\14\0A\0B\02\10!\22\15#\16'\04$(\17\05\18\06\07\01)*+\19,\1A.\0C-/\1B\0D\1C\0E\0F\00", align 16
@inter_cbp_to_golomb = internal unnamed_addr constant [48 x i8] c"\00\02\03\07\04\08\11\0D\05\12\09\0E\0A\0F\10\0B\01 !$\22%,(#-&)'*+\13\06\18\19\14\1A\15.\1C\1B/\16\1D\17\1E\1F\0C", align 16
@ct_index = internal unnamed_addr constant [17 x i8] c"\00\00\01\01\02\02\02\02\03\03\03\03\03\03\03\03\03", align 16
@x264_coeff0_token = external local_unnamed_addr constant [5 x %struct.vlc_t], align 1
@block_residual_write_cavlc.ctz_index = internal unnamed_addr constant [8 x i8] c"\03\00\01\00\02\00\01\00", align 1
@block_residual_write_cavlc.count_cat = internal unnamed_addr constant [5 x i8] c"\10\0F\10\04\0F", align 1
@x264_coeff_token = external local_unnamed_addr constant [5 x [16 x [4 x %struct.vlc_t]]], align 16
@x264_level_token = external local_unnamed_addr global [7 x [128 x %struct.vlc_large_t]], align 16
@x264_total_zeros_dc = external local_unnamed_addr constant [3 x [4 x %struct.vlc_t]], align 16
@x264_total_zeros = external local_unnamed_addr constant [15 x [16 x %struct.vlc_t]], align 16
@x264_run_before = external local_unnamed_addr constant [7 x [16 x %struct.vlc_t]], align 16
@block_residual_write_cavlc_escape.next_suffix = internal unnamed_addr constant [7 x i16] [i16 0, i16 3, i16 6, i16 12, i16 24, i16 48, i16 -1], align 2
@ssd_plane.zero = internal global [16 x i8] zeroinitializer, align 16
@cached_hadamard.hadamard_shift_x = internal unnamed_addr constant [4 x i8] c"\04\04\03\03", align 1
@cached_hadamard.hadamard_shift_y = internal unnamed_addr constant [4 x i8] c"\04\03\03\02", align 1
@cached_hadamard.hadamard_offset = internal unnamed_addr constant [4 x i8] c"\00\01\03\05", align 1
@cached_satd.satd_shift_x = internal unnamed_addr constant [3 x i8] c"\03\02\02", align 1
@cached_satd.satd_shift_y = internal unnamed_addr constant [3 x i8] c"\01\01\00", align 1
@cached_satd.satd_offset = internal unnamed_addr constant [3 x i8] c"\00\08\10", align 1
@cached_satd.zero = internal global [16 x i8] zeroinitializer, align 16
@x264_pixel_size = internal unnamed_addr constant [7 x %struct.anon.15] [%struct.anon.15 { i32 16, i32 16 }, %struct.anon.15 { i32 16, i32 8 }, %struct.anon.15 { i32 8, i32 16 }, %struct.anon.15 { i32 8, i32 8 }, %struct.anon.15 { i32 8, i32 4 }, %struct.anon.15 { i32 4, i32 8 }, %struct.anon.15 { i32 4, i32 4 }], align 16
@x264_dct8_weight_tab = internal unnamed_addr constant [64 x i16] [i16 256, i16 241, i16 324, i16 241, i16 256, i16 241, i16 324, i16 241, i16 241, i16 227, i16 305, i16 227, i16 241, i16 227, i16 305, i16 227, i16 324, i16 305, i16 410, i16 305, i16 324, i16 305, i16 410, i16 305, i16 241, i16 227, i16 305, i16 227, i16 241, i16 227, i16 305, i16 227, i16 256, i16 241, i16 324, i16 241, i16 256, i16 241, i16 324, i16 241, i16 241, i16 227, i16 305, i16 227, i16 241, i16 227, i16 305, i16 227, i16 324, i16 305, i16 410, i16 305, i16 324, i16 305, i16 410, i16 305, i16 241, i16 227, i16 305, i16 227, i16 241, i16 227, i16 305, i16 227], align 16
@x264_dct4_weight_tab = internal unnamed_addr constant [16 x i16] [i16 453, i16 286, i16 453, i16 286, i16 286, i16 181, i16 286, i16 181, i16 453, i16 286, i16 453, i16 286, i16 286, i16 181, i16 286, i16 181], align 16
@__const.x264_mb_analyse_intra.i16x16_thresh = private unnamed_addr constant [11 x i8] c"\02\02\02\03\03\04\04\04\04\04\04", align 1
@x264_mb_analyse_intra.cost_div_fix8 = internal unnamed_addr constant [3 x i16] [i16 1024, i16 512, i16 341], align 2
@__const.x264_mb_analyse_intra.i8x8_thresh = private unnamed_addr constant [11 x i8] c"\04\04\04\05\05\05\06\06\06\06\06", align 1
@block_idx_xy_fenc = internal unnamed_addr constant [16 x i8] c"\00\04@D\08\0CHL\80\84\C0\C4\88\8C\C8\CC", align 16
@block_idx_xy_fdec = internal unnamed_addr constant [16 x i16] [i16 0, i16 4, i16 128, i16 132, i16 8, i16 12, i16 136, i16 140, i16 256, i16 260, i16 384, i16 388, i16 264, i16 268, i16 392, i16 396], align 16
@i16x16_mode_available = internal unnamed_addr constant [5 x [5 x i8]] [[5 x i8] c"\06\FF\FF\FF\FF", [5 x i8] c"\04\01\FF\FF\FF", [5 x i8] c"\05\00\FF\FF\FF", [5 x i8] c"\00\01\02\FF\FF", [5 x i8] c"\00\01\02\03\FF"], align 16
@i4x4_mode_available = internal unnamed_addr constant [5 x [10 x i8]] [[10 x i8] c"\0B\FF\FF\FF\FF\FF\FF\FF\FF\FF", [10 x i8] c"\09\01\08\FF\FF\FF\FF\FF\FF\FF", [10 x i8] c"\0A\00\03\07\FF\FF\FF\FF\FF\FF", [10 x i8] c"\02\01\00\03\07\08\FF\FF\FF\FF", [10 x i8] c"\02\01\00\03\04\05\06\07\08\FF"], align 16
@i8x8chroma_mode_available = internal unnamed_addr constant [5 x [5 x i8]] [[5 x i8] c"\06\FF\FF\FF\FF", [5 x i8] c"\04\01\FF\FF\FF", [5 x i8] c"\05\02\FF\FF\FF", [5 x i8] c"\02\01\00\FF\FF", [5 x i8] c"\02\01\00\03\FF"], align 16
@x264_trellis_lambda2_tab = internal unnamed_addr constant [2 x [52 x i32]] [[52 x i32] [i32 46, i32 58, i32 73, i32 92, i32 117, i32 147, i32 185, i32 233, i32 294, i32 370, i32 466, i32 587, i32 740, i32 932, i32 1174, i32 1480, i32 1864, i32 2349, i32 2959, i32 3728, i32 4697, i32 5918, i32 7457, i32 9395, i32 11837, i32 14914, i32 18790, i32 23674, i32 29828, i32 37581, i32 47349, i32 59656, i32 75163, i32 94699, i32 119313, i32 150326, i32 189399, i32 238627, i32 300652, i32 378798, i32 477255, i32 601304, i32 757596, i32 954511, i32 1202608, i32 1515192, i32 1909022, i32 2405217, i32 3030384, i32 3818045, i32 4810435, i32 6060769], [52 x i32] [i32 27, i32 34, i32 43, i32 54, i32 68, i32 86, i32 108, i32 136, i32 172, i32 216, i32 273, i32 343, i32 433, i32 545, i32 687, i32 865, i32 1090, i32 1374, i32 1731, i32 2180, i32 2747, i32 3461, i32 4361, i32 5494, i32 6922, i32 8721, i32 10988, i32 13844, i32 17442, i32 21976, i32 27688, i32 34885, i32 43953, i32 55377, i32 69771, i32 87906, i32 110755, i32 139543, i32 175813, i32 221511, i32 279087, i32 351627, i32 443023, i32 558174, i32 703255, i32 886046, i32 1116348, i32 1406511, i32 1772093, i32 2232697, i32 2813022, i32 3544186]], align 16
@x264_chroma_lambda2_offset_tab = internal unnamed_addr constant [37 x i16] [i16 16, i16 20, i16 25, i16 32, i16 40, i16 50, i16 64, i16 80, i16 101, i16 128, i16 161, i16 203, i16 256, i16 322, i16 406, i16 512, i16 645, i16 812, i16 1024, i16 1290, i16 1625, i16 2048, i16 2580, i16 3250, i16 4096, i16 5160, i16 6501, i16 8192, i16 10321, i16 13003, i16 16384, i16 20642, i16 26007, i16 -32768, i16 -24251, i16 -13521, i16 -1], align 16
@weight_none = external constant [3 x %struct.x264_weight_t], align 16
@.str.6 = private unnamed_addr constant [16 x i8] c"internal error\0A\00", align 1
@x264_psy_trellis_init.zero = internal global [512 x i8] zeroinitializer, align 16
@.str.7 = private unnamed_addr constant [38 x i8] c"internal error P_L0 and partition=%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"internal error (invalid MB type)\0A\00", align 1
@.str.9 = private unnamed_addr constant [79 x i8] c"scene cut at %d Icost:%d Pcost:%d ratio:%.4f bias:%.4f gop:%d (imb:%d pmb:%d)\0A\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"normal\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @x264_rd_cost_part(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 {
  %5 = alloca [2 x i16], align 4
  %6 = alloca [2 x i16], align 4
  %7 = alloca [2 x i16], align 4
  %8 = alloca [2 x i16], align 4
  %9 = alloca [2 x i16], align 4
  %10 = alloca [2 x i16], align 4
  %11 = alloca [2 x i16], align 4
  %12 = alloca [2 x i16], align 4
  %13 = alloca [2 x i16], align 4
  %14 = alloca [2 x i16], align 4
  %15 = alloca [2 x i16], align 4
  %16 = alloca [2 x i16], align 4
  %17 = alloca [2 x i16], align 4
  %18 = alloca %struct.x264_cabac_t, align 16
  %19 = alloca %struct.x264_cabac_t, align 16
  %20 = ashr i32 %2, 2
  %21 = icmp eq i32 %3, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %4
  %23 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef %0, i32 noundef %1)
  %24 = sext i32 %23 to i64
  br label %1691

25:                                               ; preds = %4
  %26 = icmp sgt i32 %3, 3
  br i1 %26, label %27, label %415

27:                                               ; preds = %25
  tail call void @x264_macroblock_encode_p4x4(ptr noundef %0, i32 noundef %2) #17
  switch i32 %3, label %32 [
    i32 4, label %29
    i32 5, label %28
  ]

28:                                               ; preds = %27
  br label %29

29:                                               ; preds = %28, %27
  %30 = phi i32 [ 2, %28 ], [ 1, %27 ]
  %31 = add nsw i32 %30, %2
  tail call void @x264_macroblock_encode_p4x4(ptr noundef %0, i32 noundef %31) #17
  br label %32

32:                                               ; preds = %29, %27
  %33 = sext i32 %2 to i64
  %34 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !5
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 2
  %38 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %33
  %39 = load i8, ptr %38, align 1, !tbaa !5
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 2
  %42 = tail call fastcc i32 @ssd_plane(ptr noundef %0, i32 noundef %3, i32 noundef 0, i32 noundef %37, i32 noundef %41)
  %43 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %44 = load i32, ptr %43, align 16, !tbaa !8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %270, label %46

46:                                               ; preds = %32
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %18) #17
  %47 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 9, i64 40
  %48 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 40
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %47, ptr noundef nonnull align 4 dereferenceable(16) %48, i64 16, i1 false)
  %49 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 9, i64 93
  %50 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 93
  %51 = load i32, ptr %50, align 1
  store i32 %51, ptr %49, align 1
  %52 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %53 = load i32, ptr %52, align 4, !tbaa !36
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [2 x [6 x i16]], ptr @significant_coeff_flag_offset, i64 0, i64 %54, i64 2
  %56 = load i16, ptr %55, align 4, !tbaa !37
  %57 = zext i16 %56 to i64
  %58 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 9, i64 %57
  %59 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %57
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %58, ptr noundef nonnull align 1 dereferenceable(16) %59, i64 16, i1 false)
  %60 = getelementptr inbounds [2 x [6 x i16]], ptr @last_coeff_flag_offset, i64 0, i64 %54, i64 2
  %61 = load i16, ptr %60, align 4, !tbaa !37
  %62 = zext i16 %61 to i64
  %63 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 9, i64 %62
  %64 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %62
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %63, ptr noundef nonnull align 1 dereferenceable(16) %64, i64 16, i1 false)
  %65 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 9, i64 247
  %66 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 247
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(10) %65, ptr noundef nonnull align 1 dereferenceable(10) %66, i64 10, i1 false)
  %67 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 8
  %68 = icmp eq i32 %3, 4
  %69 = sext i1 %68 to i32
  %70 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %33
  %71 = load i32, ptr %70, align 4, !tbaa !39
  %72 = add nsw i32 %71, -1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !5
  %76 = add nsw i32 %71, -8
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %77
  %79 = load i8, ptr %78, align 1, !tbaa !5
  %80 = and i8 %75, 127
  %81 = and i8 %79, 127
  %82 = icmp eq i8 %81, 0
  %83 = select i1 %82, i64 0, i64 2
  %84 = icmp eq i8 %80, 0
  %85 = select i1 %84, i64 93, i64 94
  %86 = add nuw nsw i64 %83, %85
  %87 = sext i32 %71 to i64
  %88 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %87
  %89 = load i8, ptr %88, align 1, !tbaa !5
  %90 = icmp eq i8 %89, 0
  %91 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 9, i64 %86
  %92 = load i8, ptr %91, align 1, !tbaa !5
  %93 = zext i8 %92 to i64
  br i1 %90, label %102, label %94

94:                                               ; preds = %46
  %95 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %93, i64 1
  %96 = load i8, ptr %95, align 1, !tbaa !5
  store i8 %96, ptr %91, align 1, !tbaa !5
  %97 = xor i64 %93, 1
  %98 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %97
  %99 = load i16, ptr %98, align 2, !tbaa !37
  %100 = zext i16 %99 to i32
  store i32 %100, ptr %67, align 16, !tbaa !40
  %101 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %33
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %18, i32 noundef 2, ptr noundef nonnull %101, i32 noundef 0)
  br label %108

102:                                              ; preds = %46
  %103 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %93, i64 0
  %104 = load i8, ptr %103, align 2, !tbaa !5
  store i8 %104, ptr %91, align 1, !tbaa !5
  %105 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %93
  %106 = load i16, ptr %105, align 2, !tbaa !37
  %107 = zext i16 %106 to i32
  store i32 %107, ptr %67, align 16, !tbaa !40
  br label %108

108:                                              ; preds = %102, %94
  %109 = icmp eq i32 %3, 6
  br i1 %109, label %110, label %159

110:                                              ; preds = %108
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %2, i32 noundef 1, ptr noundef nonnull %17) #17
  %111 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %87
  %112 = load i16, ptr %111, align 4, !tbaa !37
  %113 = sext i16 %112 to i32
  %114 = load i16, ptr %17, align 4, !tbaa !37
  %115 = sext i16 %114 to i32
  %116 = sub nsw i32 %113, %115
  %117 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %87, i64 1
  %118 = load i16, ptr %117, align 2, !tbaa !37
  %119 = sext i16 %118 to i32
  %120 = getelementptr inbounds [2 x i16], ptr %17, i64 0, i64 1
  %121 = load i16, ptr %120, align 2, !tbaa !37
  %122 = sext i16 %121 to i32
  %123 = sub nsw i32 %119, %122
  %124 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %73
  %125 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %77
  %126 = load i8, ptr %124, align 1, !tbaa !5
  %127 = getelementptr i8, ptr %124, i64 1
  %128 = load i8, ptr %127, align 1, !tbaa !5
  %129 = load i8, ptr %125, align 1, !tbaa !5
  %130 = getelementptr i8, ptr %125, i64 1
  %131 = load i8, ptr %130, align 1, !tbaa !5
  %132 = zext i8 %126 to i32
  %133 = zext i8 %129 to i32
  %134 = add nuw nsw i32 %133, %132
  %135 = zext i8 %128 to i32
  %136 = zext i8 %131 to i32
  %137 = add nuw nsw i32 %136, %135
  %138 = icmp ugt i32 %134, 2
  %139 = zext i1 %138 to i32
  %140 = icmp ugt i32 %134, 32
  %141 = zext i1 %140 to i32
  %142 = add nuw nsw i32 %139, %141
  %143 = icmp ugt i32 %137, 2
  %144 = zext i1 %143 to i32
  %145 = icmp ugt i32 %137, 32
  %146 = zext i1 %145 to i32
  %147 = add nuw nsw i32 %144, %146
  %148 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %18, i32 noundef 0, i32 noundef %116, i32 noundef %142)
  %149 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %18, i32 noundef 1, i32 noundef %123, i32 noundef %147)
  %150 = shl i32 %149, 8
  %151 = add nsw i32 %150, %148
  %152 = trunc i32 %151 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #17
  %153 = zext i8 %35 to i64
  %154 = zext i8 %39 to i64
  %155 = add nuw nsw i64 %153, 12
  %156 = shl nuw nsw i64 %154, 3
  %157 = add nuw nsw i64 %155, %156
  %158 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %157
  store i16 %152, ptr %158, align 2, !tbaa !5
  br label %263

159:                                              ; preds = %108
  %160 = select i1 %68, i32 2, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %2, i32 noundef %160, ptr noundef nonnull %16) #17
  %161 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %87
  %162 = load i16, ptr %161, align 4, !tbaa !37
  %163 = sext i16 %162 to i32
  %164 = load i16, ptr %16, align 4, !tbaa !37
  %165 = sext i16 %164 to i32
  %166 = sub nsw i32 %163, %165
  %167 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %87, i64 1
  %168 = load i16, ptr %167, align 2, !tbaa !37
  %169 = sext i16 %168 to i32
  %170 = getelementptr inbounds [2 x i16], ptr %16, i64 0, i64 1
  %171 = load i16, ptr %170, align 2, !tbaa !37
  %172 = sext i16 %171 to i32
  %173 = sub nsw i32 %169, %172
  %174 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %73
  %175 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %77
  %176 = load i8, ptr %174, align 1, !tbaa !5
  %177 = getelementptr i8, ptr %174, i64 1
  %178 = load i8, ptr %177, align 1, !tbaa !5
  %179 = load i8, ptr %175, align 1, !tbaa !5
  %180 = getelementptr i8, ptr %175, i64 1
  %181 = load i8, ptr %180, align 1, !tbaa !5
  %182 = zext i8 %176 to i32
  %183 = zext i8 %179 to i32
  %184 = add nuw nsw i32 %183, %182
  %185 = zext i8 %178 to i32
  %186 = zext i8 %181 to i32
  %187 = add nuw nsw i32 %186, %185
  %188 = icmp ugt i32 %184, 2
  %189 = zext i1 %188 to i32
  %190 = icmp ugt i32 %184, 32
  %191 = zext i1 %190 to i32
  %192 = add nuw nsw i32 %189, %191
  %193 = icmp ugt i32 %187, 2
  %194 = zext i1 %193 to i32
  %195 = icmp ugt i32 %187, 32
  %196 = zext i1 %195 to i32
  %197 = add nuw nsw i32 %194, %196
  %198 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %18, i32 noundef 0, i32 noundef %166, i32 noundef %192)
  %199 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %18, i32 noundef 1, i32 noundef %173, i32 noundef %197)
  %200 = shl i32 %199, 8
  %201 = add nsw i32 %200, %198
  %202 = trunc i32 %201 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #17
  %203 = zext i8 %35 to i64
  %204 = zext i8 %39 to i64
  %205 = add nuw nsw i64 %203, 12
  %206 = shl nuw nsw i64 %204, 3
  %207 = add nuw nsw i64 %205, %206
  %208 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %207
  %209 = and i32 %201, 65535
  %210 = mul nuw i32 %209, 65537
  %211 = add nuw i32 %160, 2147483647
  %212 = and i32 %211, 2147483647
  switch i32 %212, label %219 [
    i32 0, label %213
    i32 1, label %216
  ]

213:                                              ; preds = %159
  store i16 %202, ptr %208, align 2, !tbaa !5
  br i1 %68, label %219, label %214

214:                                              ; preds = %213
  %215 = getelementptr inbounds i8, ptr %208, i64 16
  store i16 %202, ptr %215, align 2, !tbaa !5
  br label %219

216:                                              ; preds = %159
  store i32 %210, ptr %208, align 4, !tbaa !5
  br i1 %68, label %219, label %217

217:                                              ; preds = %216
  %218 = getelementptr inbounds i8, ptr %208, i64 16
  store i32 %210, ptr %218, align 4, !tbaa !5
  br label %219

219:                                              ; preds = %217, %216, %214, %213, %159
  %220 = add nsw i32 %2, 2
  %221 = add nsw i32 %220, %69
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %222
  %224 = load i32, ptr %223, align 4, !tbaa !39
  %225 = add nsw i32 %224, -1
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %226
  %228 = load i8, ptr %227, align 1, !tbaa !5
  %229 = add nsw i32 %224, -8
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !5
  %233 = and i8 %228, 127
  %234 = and i8 %232, 127
  %235 = icmp eq i8 %234, 0
  %236 = select i1 %235, i64 0, i64 2
  %237 = icmp eq i8 %233, 0
  %238 = select i1 %237, i64 93, i64 94
  %239 = add nuw nsw i64 %236, %238
  %240 = sext i32 %224 to i64
  %241 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !5
  %243 = icmp eq i8 %242, 0
  %244 = getelementptr inbounds %struct.x264_cabac_t, ptr %18, i64 0, i32 9, i64 %239
  %245 = load i8, ptr %244, align 1, !tbaa !5
  %246 = zext i8 %245 to i64
  br i1 %243, label %257, label %247

247:                                              ; preds = %219
  %248 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %246, i64 1
  %249 = load i8, ptr %248, align 1, !tbaa !5
  store i8 %249, ptr %244, align 1, !tbaa !5
  %250 = xor i64 %246, 1
  %251 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %250
  %252 = load i16, ptr %251, align 2, !tbaa !37
  %253 = zext i16 %252 to i32
  %254 = load i32, ptr %67, align 16, !tbaa !40
  %255 = add nsw i32 %254, %253
  store i32 %255, ptr %67, align 16, !tbaa !40
  %256 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %222
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %18, i32 noundef 2, ptr noundef nonnull %256, i32 noundef 0)
  br label %263

257:                                              ; preds = %219
  %258 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %246
  %259 = load i16, ptr %258, align 2, !tbaa !37
  %260 = zext i16 %259 to i32
  %261 = load i32, ptr %67, align 16, !tbaa !40
  %262 = add nsw i32 %261, %260
  store i32 %262, ptr %67, align 16, !tbaa !40
  br label %263

263:                                              ; preds = %257, %247, %110
  %264 = load i32, ptr %67, align 16, !tbaa !40
  %265 = sext i32 %264 to i64
  %266 = sext i32 %1 to i64
  %267 = mul nsw i64 %265, %266
  %268 = add nsw i64 %267, 128
  %269 = lshr i64 %268, 8
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %18) #17
  br label %410

270:                                              ; preds = %32
  %271 = icmp eq i32 %3, 4
  %272 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  store i32 0, ptr %272, align 4, !tbaa !41
  %273 = select i1 %271, i32 2, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %2, i32 noundef %273, ptr noundef nonnull %15) #17
  %274 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %33
  %275 = load i32, ptr %274, align 4, !tbaa !39
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %276
  %278 = load i16, ptr %277, align 4, !tbaa !37
  %279 = sext i16 %278 to i32
  %280 = load i16, ptr %15, align 4, !tbaa !37
  %281 = sext i16 %280 to i32
  %282 = sub nsw i32 %279, %281
  %283 = shl nsw i32 %282, 1
  %284 = sub nsw i32 1, %283
  %285 = icmp sgt i32 %282, 0
  %286 = select i1 %285, i32 %283, i32 %284
  %287 = icmp slt i32 %286, 256
  br i1 %287, label %288, label %293

288:                                              ; preds = %270
  %289 = sext i32 %286 to i64
  %290 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !5
  %292 = zext i8 %291 to i32
  br label %300

293:                                              ; preds = %270
  %294 = lshr i32 %286, 8
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %295
  %297 = load i8, ptr %296, align 1, !tbaa !5
  %298 = zext i8 %297 to i32
  %299 = add nuw nsw i32 %298, 16
  br label %300

300:                                              ; preds = %293, %288
  %301 = phi i32 [ %292, %288 ], [ %299, %293 ]
  %302 = load i32, ptr %272, align 4, !tbaa !42
  %303 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %276, i64 1
  %304 = load i16, ptr %303, align 2, !tbaa !37
  %305 = sext i16 %304 to i32
  %306 = getelementptr inbounds [2 x i16], ptr %15, i64 0, i64 1
  %307 = load i16, ptr %306, align 2, !tbaa !37
  %308 = sext i16 %307 to i32
  %309 = sub nsw i32 %305, %308
  %310 = shl nsw i32 %309, 1
  %311 = sub nsw i32 1, %310
  %312 = icmp sgt i32 %309, 0
  %313 = select i1 %312, i32 %310, i32 %311
  %314 = icmp slt i32 %313, 256
  br i1 %314, label %315, label %320

315:                                              ; preds = %300
  %316 = sext i32 %313 to i64
  %317 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %316
  %318 = load i8, ptr %317, align 1, !tbaa !5
  %319 = zext i8 %318 to i32
  br label %327

320:                                              ; preds = %300
  %321 = lshr i32 %313, 8
  %322 = zext i32 %321 to i64
  %323 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %322
  %324 = load i8, ptr %323, align 1, !tbaa !5
  %325 = zext i8 %324 to i32
  %326 = add nuw nsw i32 %325, 16
  br label %327

327:                                              ; preds = %320, %315
  %328 = phi i32 [ %319, %315 ], [ %326, %320 ]
  %329 = add nsw i32 %302, %301
  %330 = add nsw i32 %329, %328
  store i32 %330, ptr %272, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #17
  %331 = add nsw i32 %275, -1
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %332
  %334 = load i8, ptr %333, align 1, !tbaa !5
  %335 = zext i8 %334 to i32
  %336 = add nsw i32 %275, -8
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %337
  %339 = load i8, ptr %338, align 1, !tbaa !5
  %340 = zext i8 %339 to i32
  %341 = add nuw nsw i32 %340, %335
  %342 = icmp ult i32 %341, 128
  %343 = add nuw nsw i32 %341, 1
  %344 = lshr i32 %343, 1
  %345 = select i1 %342, i32 %344, i32 %341
  %346 = and i32 %345, 127
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %347
  %349 = load i8, ptr %348, align 1, !tbaa !5
  %350 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %276
  %351 = load i8, ptr %350, align 1, !tbaa !5
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %353, label %359

353:                                              ; preds = %327
  %354 = zext i8 %349 to i64
  %355 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %354, i32 1
  %356 = load i8, ptr %355, align 1, !tbaa !43
  %357 = zext i8 %356 to i32
  %358 = add nsw i32 %330, %357
  store i32 %358, ptr %272, align 4, !tbaa !41
  br label %364

359:                                              ; preds = %327
  %360 = zext i8 %349 to i32
  %361 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %33
  %362 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %361, i32 noundef %360)
  %363 = trunc i32 %362 to i8
  store i8 %363, ptr %350, align 1, !tbaa !5
  br label %364

364:                                              ; preds = %359, %353
  %365 = icmp eq i32 %3, 6
  br i1 %365, label %407, label %366

366:                                              ; preds = %364
  %367 = select i1 %271, i32 1, i32 2
  %368 = add nsw i32 %367, %2
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %369
  %371 = load i32, ptr %370, align 4, !tbaa !39
  %372 = add nsw i32 %371, -1
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %373
  %375 = load i8, ptr %374, align 1, !tbaa !5
  %376 = zext i8 %375 to i32
  %377 = add nsw i32 %371, -8
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %378
  %380 = load i8, ptr %379, align 1, !tbaa !5
  %381 = zext i8 %380 to i32
  %382 = add nuw nsw i32 %381, %376
  %383 = icmp ult i32 %382, 128
  %384 = add nuw nsw i32 %382, 1
  %385 = lshr i32 %384, 1
  %386 = select i1 %383, i32 %385, i32 %382
  %387 = and i32 %386, 127
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %388
  %390 = load i8, ptr %389, align 1, !tbaa !5
  %391 = sext i32 %371 to i64
  %392 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %391
  %393 = load i8, ptr %392, align 1, !tbaa !5
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %395, label %402

395:                                              ; preds = %366
  %396 = zext i8 %390 to i64
  %397 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %396, i32 1
  %398 = load i8, ptr %397, align 1, !tbaa !43
  %399 = zext i8 %398 to i32
  %400 = load i32, ptr %272, align 4, !tbaa !41
  %401 = add nsw i32 %400, %399
  store i32 %401, ptr %272, align 4, !tbaa !41
  br label %407

402:                                              ; preds = %366
  %403 = zext i8 %390 to i32
  %404 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %369
  %405 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %404, i32 noundef %403)
  %406 = trunc i32 %405 to i8
  store i8 %406, ptr %392, align 1, !tbaa !5
  br label %407

407:                                              ; preds = %402, %395, %364
  %408 = load i32, ptr %272, align 4, !tbaa !41
  %409 = sext i32 %408 to i64
  br label %410

410:                                              ; preds = %263, %407
  %411 = phi i64 [ %269, %263 ], [ %409, %407 ]
  %412 = sext i32 %42 to i64
  %413 = shl nsw i64 %412, 8
  %414 = add nsw i64 %411, %413
  br label %1691

415:                                              ; preds = %25
  %416 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  store i32 0, ptr %416, align 8, !tbaa !45
  tail call void @x264_macroblock_encode_p8x8(ptr noundef %0, i32 noundef %20) #17
  %417 = icmp ult i32 %3, 3
  br i1 %417, label %418, label %420

418:                                              ; preds = %415
  %419 = add nsw i32 %20, %3
  tail call void @x264_macroblock_encode_p8x8(ptr noundef nonnull %0, i32 noundef %419) #17
  br label %420

420:                                              ; preds = %415, %418
  %421 = add nsw i32 %3, 3
  %422 = and i32 %20, 1
  %423 = shl nuw nsw i32 %422, 2
  %424 = ashr i32 %2, 1
  %425 = and i32 %424, -4
  %426 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %427 = load ptr, ptr %426, align 8, !tbaa !46
  %428 = zext i32 %423 to i64
  %429 = getelementptr inbounds i8, ptr %427, i64 %428
  %430 = shl nsw i32 %425, 5
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds i8, ptr %429, i64 %431
  %433 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %434 = load ptr, ptr %433, align 8, !tbaa !46
  %435 = getelementptr inbounds i8, ptr %434, i64 %428
  %436 = shl nsw i32 %425, 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i8, ptr %435, i64 %437
  %439 = sext i32 %421 to i64
  %440 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 %439
  %441 = load ptr, ptr %440, align 8, !tbaa !46
  %442 = tail call i32 %441(ptr noundef %438, i32 noundef 16, ptr noundef %432, i32 noundef 32) #17
  %443 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %444 = load ptr, ptr %443, align 8, !tbaa !46
  %445 = getelementptr inbounds i8, ptr %444, i64 %428
  %446 = getelementptr inbounds i8, ptr %445, i64 %431
  %447 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %448 = load ptr, ptr %447, align 8, !tbaa !46
  %449 = getelementptr inbounds i8, ptr %448, i64 %428
  %450 = getelementptr inbounds i8, ptr %449, i64 %437
  %451 = load ptr, ptr %440, align 8, !tbaa !46
  %452 = tail call i32 %451(ptr noundef %450, i32 noundef 16, ptr noundef %446, i32 noundef 32) #17
  %453 = add nsw i32 %452, %442
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 78
  %456 = load i32, ptr %455, align 4, !tbaa !47
  %457 = sext i32 %456 to i64
  %458 = mul nsw i64 %454, %457
  %459 = add nsw i64 %458, 128
  %460 = lshr i64 %459, 8
  %461 = trunc i64 %460 to i32
  %462 = shl nuw nsw i32 %422, 3
  %463 = and i32 %2, -8
  %464 = tail call fastcc i32 @ssd_plane(ptr noundef nonnull %0, i32 noundef %3, i32 noundef 0, i32 noundef %462, i32 noundef %463)
  %465 = add nsw i32 %464, %461
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %468 = load i32, ptr %467, align 16, !tbaa !8
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %1229, label %470

470:                                              ; preds = %420
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %19) #17
  %471 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %472 = load ptr, ptr %471, align 8, !tbaa !48
  %473 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 8
  %474 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 8
  %475 = call ptr %472(ptr noundef nonnull %473, ptr noundef nonnull %474, i64 noundef 464) #17
  %476 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %477 = load i32, ptr %476, align 8, !tbaa !49
  %478 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %479 = load i32, ptr %478, align 4, !tbaa !50
  %480 = icmp eq i32 %479, 15
  %481 = zext i1 %480 to i32
  switch i32 %477, label %616 [
    i32 5, label %482
    i32 4, label %538
  ]

482:                                              ; preds = %470
  call fastcc void @x264_cabac_mb8x8_mvd(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef %20)
  %483 = sext i32 %20 to i64
  %484 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %483
  %485 = load i8, ptr %484, align 1, !tbaa !5
  %486 = icmp eq i8 %485, 3
  %487 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 21
  %488 = load i8, ptr %487, align 1, !tbaa !5
  %489 = zext i8 %488 to i64
  br i1 %486, label %490, label %499

490:                                              ; preds = %482
  %491 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %489, i64 1
  %492 = load i8, ptr %491, align 1, !tbaa !5
  store i8 %492, ptr %487, align 1, !tbaa !5
  %493 = xor i64 %489, 1
  %494 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %493
  %495 = load i16, ptr %494, align 2, !tbaa !37
  %496 = zext i16 %495 to i32
  %497 = load i32, ptr %473, align 16, !tbaa !40
  %498 = add nsw i32 %497, %496
  store i32 %498, ptr %473, align 16, !tbaa !40
  br label %930

499:                                              ; preds = %482
  %500 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %489, i64 0
  %501 = load i8, ptr %500, align 2, !tbaa !5
  store i8 %501, ptr %487, align 1, !tbaa !5
  %502 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %489
  %503 = load i16, ptr %502, align 2, !tbaa !37
  %504 = zext i16 %503 to i32
  %505 = load i32, ptr %473, align 16, !tbaa !40
  %506 = add nsw i32 %505, %504
  %507 = icmp eq i8 %485, 1
  %508 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 22
  %509 = load i8, ptr %508, align 2, !tbaa !5
  %510 = zext i8 %509 to i64
  br i1 %507, label %511, label %518

511:                                              ; preds = %499
  %512 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %510, i64 0
  %513 = load i8, ptr %512, align 2, !tbaa !5
  store i8 %513, ptr %508, align 2, !tbaa !5
  %514 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %510
  %515 = load i16, ptr %514, align 2, !tbaa !37
  %516 = zext i16 %515 to i32
  %517 = add nsw i32 %506, %516
  store i32 %517, ptr %473, align 16, !tbaa !40
  br label %930

518:                                              ; preds = %499
  %519 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %510, i64 1
  %520 = load i8, ptr %519, align 1, !tbaa !5
  store i8 %520, ptr %508, align 2, !tbaa !5
  %521 = xor i64 %510, 1
  %522 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %521
  %523 = load i16, ptr %522, align 2, !tbaa !37
  %524 = zext i16 %523 to i32
  %525 = add nsw i32 %506, %524
  %526 = icmp eq i8 %485, 2
  %527 = zext i1 %526 to i64
  %528 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 23
  %529 = load i8, ptr %528, align 1, !tbaa !5
  %530 = zext i8 %529 to i64
  %531 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %530, i64 %527
  %532 = load i8, ptr %531, align 1, !tbaa !5
  store i8 %532, ptr %528, align 1, !tbaa !5
  %533 = xor i64 %530, %527
  %534 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %533
  %535 = load i16, ptr %534, align 2, !tbaa !37
  %536 = zext i16 %535 to i32
  %537 = add nsw i32 %525, %536
  store i32 %537, ptr %473, align 16, !tbaa !40
  br label %930

538:                                              ; preds = %470
  %539 = and i32 %2, -4
  %540 = lshr i32 4, %481
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %539, i32 noundef %540, ptr noundef nonnull %14) #17
  %541 = sext i32 %539 to i64
  %542 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %541
  %543 = load i32, ptr %542, align 16, !tbaa !39
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %544
  %546 = load i16, ptr %545, align 4, !tbaa !37
  %547 = sext i16 %546 to i32
  %548 = load i16, ptr %14, align 4, !tbaa !37
  %549 = sext i16 %548 to i32
  %550 = sub nsw i32 %547, %549
  %551 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %544, i64 1
  %552 = load i16, ptr %551, align 2, !tbaa !37
  %553 = sext i16 %552 to i32
  %554 = getelementptr inbounds [2 x i16], ptr %14, i64 0, i64 1
  %555 = load i16, ptr %554, align 2, !tbaa !37
  %556 = sext i16 %555 to i32
  %557 = sub nsw i32 %553, %556
  %558 = add nsw i32 %543, -1
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %559
  %561 = add nsw i32 %543, -8
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %562
  %564 = load i8, ptr %560, align 1, !tbaa !5
  %565 = getelementptr i8, ptr %560, i64 1
  %566 = load i8, ptr %565, align 1, !tbaa !5
  %567 = load i8, ptr %563, align 1, !tbaa !5
  %568 = getelementptr i8, ptr %563, i64 1
  %569 = load i8, ptr %568, align 1, !tbaa !5
  %570 = zext i8 %564 to i32
  %571 = zext i8 %567 to i32
  %572 = add nuw nsw i32 %571, %570
  %573 = zext i8 %566 to i32
  %574 = zext i8 %569 to i32
  %575 = add nuw nsw i32 %574, %573
  %576 = icmp ugt i32 %572, 2
  %577 = zext i1 %576 to i32
  %578 = icmp ugt i32 %572, 32
  %579 = zext i1 %578 to i32
  %580 = add nuw nsw i32 %577, %579
  %581 = icmp ugt i32 %575, 2
  %582 = zext i1 %581 to i32
  %583 = icmp ugt i32 %575, 32
  %584 = zext i1 %583 to i32
  %585 = add nuw nsw i32 %582, %584
  %586 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 0, i32 noundef %550, i32 noundef %580)
  %587 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 1, i32 noundef %557, i32 noundef %585)
  %588 = shl i32 %587, 8
  %589 = add nsw i32 %588, %586
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #17
  %590 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %541
  %591 = load i8, ptr %590, align 4, !tbaa !5
  %592 = zext i8 %591 to i64
  %593 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %541
  %594 = load i8, ptr %593, align 4, !tbaa !5
  %595 = zext i8 %594 to i64
  %596 = add nuw nsw i64 %592, 12
  %597 = shl nuw nsw i64 %595, 3
  %598 = add nuw nsw i64 %596, %597
  %599 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %598
  %600 = and i32 %589, 65535
  %601 = mul nuw i32 %600, 65537
  %602 = zext i32 %601 to i64
  %603 = mul nuw i64 %602, 4294967297
  %604 = add nuw i32 %540, 2147483647
  %605 = and i32 %604, 2147483647
  switch i32 %605, label %930 [
    i32 3, label %611
    i32 1, label %606
  ]

606:                                              ; preds = %538
  store i32 %601, ptr %599, align 4, !tbaa !5
  %607 = getelementptr inbounds i8, ptr %599, i64 16
  store i32 %601, ptr %607, align 4, !tbaa !5
  br i1 %480, label %608, label %930

608:                                              ; preds = %606
  %609 = getelementptr inbounds i8, ptr %599, i64 32
  store i32 %601, ptr %609, align 4, !tbaa !5
  %610 = getelementptr inbounds i8, ptr %599, i64 48
  store i32 %601, ptr %610, align 4, !tbaa !5
  br label %930

611:                                              ; preds = %538
  store i64 %603, ptr %599, align 8, !tbaa !5
  %612 = getelementptr inbounds i8, ptr %599, i64 16
  store i64 %603, ptr %612, align 8, !tbaa !5
  br i1 %480, label %613, label %930

613:                                              ; preds = %611
  %614 = getelementptr inbounds i8, ptr %599, i64 32
  store i64 %603, ptr %614, align 8, !tbaa !5
  %615 = getelementptr inbounds i8, ptr %599, i64 48
  store i64 %603, ptr %615, align 8, !tbaa !5
  br label %930

616:                                              ; preds = %470
  %617 = add i32 %477, -8
  %618 = icmp ult i32 %617, 9
  br i1 %618, label %619, label %787

619:                                              ; preds = %616
  %620 = zext i32 %477 to i64
  %621 = getelementptr inbounds [19 x [2 x [2 x i8]]], ptr @x264_mb_type_list_table, i64 0, i64 %620
  %622 = icmp ugt i32 %2, 3
  %623 = zext i1 %622 to i64
  %624 = getelementptr inbounds [2 x i8], ptr %621, i64 0, i64 %623
  %625 = load i8, ptr %624, align 1, !tbaa !5
  %626 = icmp eq i8 %625, 0
  br i1 %626, label %705, label %627

627:                                              ; preds = %619
  %628 = and i32 %2, -4
  %629 = lshr i32 4, %481
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %628, i32 noundef %629, ptr noundef nonnull %13) #17
  %630 = sext i32 %628 to i64
  %631 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %630
  %632 = load i32, ptr %631, align 16, !tbaa !39
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %633
  %635 = load i16, ptr %634, align 4, !tbaa !37
  %636 = sext i16 %635 to i32
  %637 = load i16, ptr %13, align 4, !tbaa !37
  %638 = sext i16 %637 to i32
  %639 = sub nsw i32 %636, %638
  %640 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %633, i64 1
  %641 = load i16, ptr %640, align 2, !tbaa !37
  %642 = sext i16 %641 to i32
  %643 = getelementptr inbounds [2 x i16], ptr %13, i64 0, i64 1
  %644 = load i16, ptr %643, align 2, !tbaa !37
  %645 = sext i16 %644 to i32
  %646 = sub nsw i32 %642, %645
  %647 = add nsw i32 %632, -1
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %648
  %650 = add nsw i32 %632, -8
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %651
  %653 = load i8, ptr %649, align 1, !tbaa !5
  %654 = getelementptr i8, ptr %649, i64 1
  %655 = load i8, ptr %654, align 1, !tbaa !5
  %656 = load i8, ptr %652, align 1, !tbaa !5
  %657 = getelementptr i8, ptr %652, i64 1
  %658 = load i8, ptr %657, align 1, !tbaa !5
  %659 = zext i8 %653 to i32
  %660 = zext i8 %656 to i32
  %661 = add nuw nsw i32 %660, %659
  %662 = zext i8 %655 to i32
  %663 = zext i8 %658 to i32
  %664 = add nuw nsw i32 %663, %662
  %665 = icmp ugt i32 %661, 2
  %666 = zext i1 %665 to i32
  %667 = icmp ugt i32 %661, 32
  %668 = zext i1 %667 to i32
  %669 = add nuw nsw i32 %666, %668
  %670 = icmp ugt i32 %664, 2
  %671 = zext i1 %670 to i32
  %672 = icmp ugt i32 %664, 32
  %673 = zext i1 %672 to i32
  %674 = add nuw nsw i32 %671, %673
  %675 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 0, i32 noundef %639, i32 noundef %669)
  %676 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 1, i32 noundef %646, i32 noundef %674)
  %677 = shl i32 %676, 8
  %678 = add nsw i32 %677, %675
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #17
  %679 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %630
  %680 = load i8, ptr %679, align 4, !tbaa !5
  %681 = zext i8 %680 to i64
  %682 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %630
  %683 = load i8, ptr %682, align 4, !tbaa !5
  %684 = zext i8 %683 to i64
  %685 = add nuw nsw i64 %681, 12
  %686 = shl nuw nsw i64 %684, 3
  %687 = add nuw nsw i64 %685, %686
  %688 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %687
  %689 = and i32 %678, 65535
  %690 = mul nuw i32 %689, 65537
  %691 = zext i32 %690 to i64
  %692 = mul nuw i64 %691, 4294967297
  %693 = add nuw i32 %629, 2147483647
  %694 = and i32 %693, 2147483647
  switch i32 %694, label %705 [
    i32 3, label %700
    i32 1, label %695
  ]

695:                                              ; preds = %627
  store i32 %690, ptr %688, align 4, !tbaa !5
  %696 = getelementptr inbounds i8, ptr %688, i64 16
  store i32 %690, ptr %696, align 4, !tbaa !5
  br i1 %480, label %697, label %705

697:                                              ; preds = %695
  %698 = getelementptr inbounds i8, ptr %688, i64 32
  store i32 %690, ptr %698, align 4, !tbaa !5
  %699 = getelementptr inbounds i8, ptr %688, i64 48
  store i32 %690, ptr %699, align 4, !tbaa !5
  br label %705

700:                                              ; preds = %627
  store i64 %692, ptr %688, align 8, !tbaa !5
  %701 = getelementptr inbounds i8, ptr %688, i64 16
  store i64 %692, ptr %701, align 8, !tbaa !5
  br i1 %480, label %702, label %705

702:                                              ; preds = %700
  %703 = getelementptr inbounds i8, ptr %688, i64 32
  store i64 %692, ptr %703, align 8, !tbaa !5
  %704 = getelementptr inbounds i8, ptr %688, i64 48
  store i64 %692, ptr %704, align 8, !tbaa !5
  br label %705

705:                                              ; preds = %702, %700, %697, %695, %627, %619
  %706 = getelementptr inbounds [19 x [2 x [2 x i8]]], ptr @x264_mb_type_list_table, i64 0, i64 %620, i64 1, i64 %623
  %707 = load i8, ptr %706, align 1, !tbaa !5
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %930, label %709

709:                                              ; preds = %705
  %710 = and i32 %2, -4
  %711 = lshr i32 4, %481
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %710, i32 noundef %711, ptr noundef nonnull %12) #17
  %712 = sext i32 %710 to i64
  %713 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %712
  %714 = load i32, ptr %713, align 16, !tbaa !39
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %715
  %717 = load i16, ptr %716, align 4, !tbaa !37
  %718 = sext i16 %717 to i32
  %719 = load i16, ptr %12, align 4, !tbaa !37
  %720 = sext i16 %719 to i32
  %721 = sub nsw i32 %718, %720
  %722 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %715, i64 1
  %723 = load i16, ptr %722, align 2, !tbaa !37
  %724 = sext i16 %723 to i32
  %725 = getelementptr inbounds [2 x i16], ptr %12, i64 0, i64 1
  %726 = load i16, ptr %725, align 2, !tbaa !37
  %727 = sext i16 %726 to i32
  %728 = sub nsw i32 %724, %727
  %729 = add nsw i32 %714, -1
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %730
  %732 = add nsw i32 %714, -8
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %733
  %735 = load i8, ptr %731, align 1, !tbaa !5
  %736 = getelementptr i8, ptr %731, i64 1
  %737 = load i8, ptr %736, align 1, !tbaa !5
  %738 = load i8, ptr %734, align 1, !tbaa !5
  %739 = getelementptr i8, ptr %734, i64 1
  %740 = load i8, ptr %739, align 1, !tbaa !5
  %741 = zext i8 %735 to i32
  %742 = zext i8 %738 to i32
  %743 = add nuw nsw i32 %742, %741
  %744 = zext i8 %737 to i32
  %745 = zext i8 %740 to i32
  %746 = add nuw nsw i32 %745, %744
  %747 = icmp ugt i32 %743, 2
  %748 = zext i1 %747 to i32
  %749 = icmp ugt i32 %743, 32
  %750 = zext i1 %749 to i32
  %751 = add nuw nsw i32 %748, %750
  %752 = icmp ugt i32 %746, 2
  %753 = zext i1 %752 to i32
  %754 = icmp ugt i32 %746, 32
  %755 = zext i1 %754 to i32
  %756 = add nuw nsw i32 %753, %755
  %757 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 0, i32 noundef %721, i32 noundef %751)
  %758 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 1, i32 noundef %728, i32 noundef %756)
  %759 = shl i32 %758, 8
  %760 = add nsw i32 %759, %757
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #17
  %761 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %712
  %762 = load i8, ptr %761, align 4, !tbaa !5
  %763 = zext i8 %762 to i64
  %764 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %712
  %765 = load i8, ptr %764, align 4, !tbaa !5
  %766 = zext i8 %765 to i64
  %767 = add nuw nsw i64 %763, 12
  %768 = shl nuw nsw i64 %766, 3
  %769 = add nuw nsw i64 %767, %768
  %770 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %769
  %771 = and i32 %760, 65535
  %772 = mul nuw i32 %771, 65537
  %773 = zext i32 %772 to i64
  %774 = mul nuw i64 %773, 4294967297
  %775 = add nuw i32 %711, 2147483647
  %776 = and i32 %775, 2147483647
  switch i32 %776, label %930 [
    i32 3, label %782
    i32 1, label %777
  ]

777:                                              ; preds = %709
  store i32 %772, ptr %770, align 4, !tbaa !5
  %778 = getelementptr inbounds i8, ptr %770, i64 16
  store i32 %772, ptr %778, align 4, !tbaa !5
  br i1 %480, label %779, label %930

779:                                              ; preds = %777
  %780 = getelementptr inbounds i8, ptr %770, i64 32
  store i32 %772, ptr %780, align 4, !tbaa !5
  %781 = getelementptr inbounds i8, ptr %770, i64 48
  store i32 %772, ptr %781, align 4, !tbaa !5
  br label %930

782:                                              ; preds = %709
  store i64 %774, ptr %770, align 8, !tbaa !5
  %783 = getelementptr inbounds i8, ptr %770, i64 16
  store i64 %774, ptr %783, align 8, !tbaa !5
  br i1 %480, label %784, label %930

784:                                              ; preds = %782
  %785 = getelementptr inbounds i8, ptr %770, i64 32
  store i64 %774, ptr %785, align 8, !tbaa !5
  %786 = getelementptr inbounds i8, ptr %770, i64 48
  store i64 %774, ptr %786, align 8, !tbaa !5
  br label %930

787:                                              ; preds = %616
  %788 = sext i32 %20 to i64
  %789 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %788
  %790 = load i8, ptr %789, align 1, !tbaa !5
  %791 = zext i8 %790 to i64
  %792 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %791
  %793 = load i8, ptr %792, align 1, !tbaa !5
  %794 = icmp eq i8 %793, 0
  br i1 %794, label %861, label %795

795:                                              ; preds = %787
  %796 = and i32 %2, -4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %796, i32 noundef 2, ptr noundef nonnull %11) #17
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %797
  %799 = load i32, ptr %798, align 16, !tbaa !39
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %800
  %802 = load i16, ptr %801, align 4, !tbaa !37
  %803 = sext i16 %802 to i32
  %804 = load i16, ptr %11, align 4, !tbaa !37
  %805 = sext i16 %804 to i32
  %806 = sub nsw i32 %803, %805
  %807 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %800, i64 1
  %808 = load i16, ptr %807, align 2, !tbaa !37
  %809 = sext i16 %808 to i32
  %810 = getelementptr inbounds [2 x i16], ptr %11, i64 0, i64 1
  %811 = load i16, ptr %810, align 2, !tbaa !37
  %812 = sext i16 %811 to i32
  %813 = sub nsw i32 %809, %812
  %814 = add nsw i32 %799, -1
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %815
  %817 = add nsw i32 %799, -8
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %818
  %820 = load i8, ptr %816, align 1, !tbaa !5
  %821 = getelementptr i8, ptr %816, i64 1
  %822 = load i8, ptr %821, align 1, !tbaa !5
  %823 = load i8, ptr %819, align 1, !tbaa !5
  %824 = getelementptr i8, ptr %819, i64 1
  %825 = load i8, ptr %824, align 1, !tbaa !5
  %826 = zext i8 %820 to i32
  %827 = zext i8 %823 to i32
  %828 = add nuw nsw i32 %827, %826
  %829 = zext i8 %822 to i32
  %830 = zext i8 %825 to i32
  %831 = add nuw nsw i32 %830, %829
  %832 = icmp ugt i32 %828, 2
  %833 = zext i1 %832 to i32
  %834 = icmp ugt i32 %828, 32
  %835 = zext i1 %834 to i32
  %836 = add nuw nsw i32 %833, %835
  %837 = icmp ugt i32 %831, 2
  %838 = zext i1 %837 to i32
  %839 = icmp ugt i32 %831, 32
  %840 = zext i1 %839 to i32
  %841 = add nuw nsw i32 %838, %840
  %842 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 0, i32 noundef %806, i32 noundef %836)
  %843 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 1, i32 noundef %813, i32 noundef %841)
  %844 = shl i32 %843, 8
  %845 = add nsw i32 %844, %842
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #17
  %846 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %797
  %847 = load i8, ptr %846, align 4, !tbaa !5
  %848 = zext i8 %847 to i64
  %849 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %797
  %850 = load i8, ptr %849, align 4, !tbaa !5
  %851 = zext i8 %850 to i64
  %852 = add nuw nsw i64 %848, 12
  %853 = shl nuw nsw i64 %851, 3
  %854 = add nuw nsw i64 %852, %853
  %855 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %854
  %856 = and i32 %845, 65535
  %857 = mul nuw i32 %856, 65537
  store i32 %857, ptr %855, align 4, !tbaa !5
  %858 = getelementptr inbounds i8, ptr %855, i64 16
  store i32 %857, ptr %858, align 4, !tbaa !5
  %859 = load i8, ptr %789, align 1, !tbaa !5
  %860 = zext i8 %859 to i64
  br label %861

861:                                              ; preds = %795, %787
  %862 = phi i64 [ %860, %795 ], [ %791, %787 ]
  %863 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %862
  %864 = load i8, ptr %863, align 1, !tbaa !5
  %865 = icmp eq i8 %864, 0
  br i1 %865, label %930, label %866

866:                                              ; preds = %861
  %867 = and i32 %2, -4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %867, i32 noundef 2, ptr noundef nonnull %10) #17
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %868
  %870 = load i32, ptr %869, align 16, !tbaa !39
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %871
  %873 = load i16, ptr %872, align 4, !tbaa !37
  %874 = sext i16 %873 to i32
  %875 = load i16, ptr %10, align 4, !tbaa !37
  %876 = sext i16 %875 to i32
  %877 = sub nsw i32 %874, %876
  %878 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %871, i64 1
  %879 = load i16, ptr %878, align 2, !tbaa !37
  %880 = sext i16 %879 to i32
  %881 = getelementptr inbounds [2 x i16], ptr %10, i64 0, i64 1
  %882 = load i16, ptr %881, align 2, !tbaa !37
  %883 = sext i16 %882 to i32
  %884 = sub nsw i32 %880, %883
  %885 = add nsw i32 %870, -1
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %886
  %888 = add nsw i32 %870, -8
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %889
  %891 = load i8, ptr %887, align 1, !tbaa !5
  %892 = getelementptr i8, ptr %887, i64 1
  %893 = load i8, ptr %892, align 1, !tbaa !5
  %894 = load i8, ptr %890, align 1, !tbaa !5
  %895 = getelementptr i8, ptr %890, i64 1
  %896 = load i8, ptr %895, align 1, !tbaa !5
  %897 = zext i8 %891 to i32
  %898 = zext i8 %894 to i32
  %899 = add nuw nsw i32 %898, %897
  %900 = zext i8 %893 to i32
  %901 = zext i8 %896 to i32
  %902 = add nuw nsw i32 %901, %900
  %903 = icmp ugt i32 %899, 2
  %904 = zext i1 %903 to i32
  %905 = icmp ugt i32 %899, 32
  %906 = zext i1 %905 to i32
  %907 = add nuw nsw i32 %904, %906
  %908 = icmp ugt i32 %902, 2
  %909 = zext i1 %908 to i32
  %910 = icmp ugt i32 %902, 32
  %911 = zext i1 %910 to i32
  %912 = add nuw nsw i32 %909, %911
  %913 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 0, i32 noundef %877, i32 noundef %907)
  %914 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %19, i32 noundef 1, i32 noundef %884, i32 noundef %912)
  %915 = shl i32 %914, 8
  %916 = add nsw i32 %915, %913
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #17
  %917 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %868
  %918 = load i8, ptr %917, align 4, !tbaa !5
  %919 = zext i8 %918 to i64
  %920 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %868
  %921 = load i8, ptr %920, align 4, !tbaa !5
  %922 = zext i8 %921 to i64
  %923 = add nuw nsw i64 %919, 12
  %924 = shl nuw nsw i64 %922, 3
  %925 = add nuw nsw i64 %923, %924
  %926 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %925
  %927 = and i32 %916, 65535
  %928 = mul nuw i32 %927, 65537
  store i32 %928, ptr %926, align 4, !tbaa !5
  %929 = getelementptr inbounds i8, ptr %926, i64 16
  store i32 %928, ptr %929, align 4, !tbaa !5
  br label %930

930:                                              ; preds = %866, %861, %784, %782, %779, %777, %709, %705, %613, %611, %608, %606, %538, %518, %511, %490
  %931 = icmp slt i32 %3, 3
  %932 = zext i1 %931 to i32
  %933 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  %934 = sext i32 %3 to i64
  %935 = getelementptr inbounds [7 x %struct.anon.15], ptr @x264_pixel_size, i64 0, i64 %934, i32 1
  br label %936

936:                                              ; preds = %1216, %930
  %937 = phi i32 [ %20, %930 ], [ %1219, %1216 ]
  %938 = phi i32 [ %932, %930 ], [ %1220, %1216 ]
  %939 = load i32, ptr %416, align 8, !tbaa !45
  %940 = shl nuw i32 1, %937
  %941 = and i32 %939, %940
  %942 = icmp eq i32 %941, 0
  br i1 %942, label %1126, label %943

943:                                              ; preds = %936
  %944 = load i32, ptr %933, align 4, !tbaa !51
  %945 = icmp eq i32 %944, 0
  br i1 %945, label %946, label %973

946:                                              ; preds = %943
  %947 = shl nsw i32 %937, 2
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %948
  %950 = load i32, ptr %949, align 16, !tbaa !39
  %951 = add nsw i32 %950, -1
  %952 = sext i32 %951 to i64
  %953 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %952
  %954 = load i8, ptr %953, align 1, !tbaa !5
  %955 = add nsw i32 %950, -8
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %956
  %958 = load i8, ptr %957, align 1, !tbaa !5
  %959 = and i8 %954, 127
  %960 = and i8 %958, 127
  %961 = icmp eq i8 %960, 0
  %962 = select i1 %961, i64 0, i64 2
  %963 = icmp eq i8 %959, 0
  %964 = select i1 %963, i64 93, i64 94
  %965 = add nuw nsw i64 %962, %964
  %966 = sext i32 %950 to i64
  %967 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %966
  %968 = load i8, ptr %967, align 1, !tbaa !5
  %969 = icmp eq i8 %968, 0
  %970 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 %965
  %971 = load i8, ptr %970, align 1, !tbaa !5
  %972 = zext i8 %971 to i64
  br i1 %969, label %986, label %976

973:                                              ; preds = %943
  %974 = sext i32 %937 to i64
  %975 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2, i64 %974
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef 5, ptr noundef nonnull %975, i32 noundef 1)
  br label %1126

976:                                              ; preds = %946
  %977 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %972, i64 1
  %978 = load i8, ptr %977, align 1, !tbaa !5
  store i8 %978, ptr %970, align 1, !tbaa !5
  %979 = xor i64 %972, 1
  %980 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %979
  %981 = load i16, ptr %980, align 2, !tbaa !37
  %982 = zext i16 %981 to i32
  %983 = load i32, ptr %473, align 16, !tbaa !40
  %984 = add nsw i32 %983, %982
  store i32 %984, ptr %473, align 16, !tbaa !40
  %985 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %948
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef 2, ptr noundef nonnull %985, i32 noundef 0)
  br label %994

986:                                              ; preds = %946
  %987 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %972, i64 0
  %988 = load i8, ptr %987, align 2, !tbaa !5
  store i8 %988, ptr %970, align 1, !tbaa !5
  %989 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %972
  %990 = load i16, ptr %989, align 2, !tbaa !37
  %991 = zext i16 %990 to i32
  %992 = load i32, ptr %473, align 16, !tbaa !40
  %993 = add nsw i32 %992, %991
  store i32 %993, ptr %473, align 16, !tbaa !40
  br label %994

994:                                              ; preds = %986, %976
  %995 = or i64 %948, 1
  %996 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %995
  %997 = load i32, ptr %996, align 4, !tbaa !39
  %998 = add nsw i32 %997, -1
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %999
  %1001 = load i8, ptr %1000, align 1, !tbaa !5
  %1002 = add nsw i32 %997, -8
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1003
  %1005 = load i8, ptr %1004, align 1, !tbaa !5
  %1006 = and i8 %1001, 127
  %1007 = and i8 %1005, 127
  %1008 = icmp eq i8 %1007, 0
  %1009 = select i1 %1008, i64 0, i64 2
  %1010 = icmp eq i8 %1006, 0
  %1011 = select i1 %1010, i64 93, i64 94
  %1012 = add nuw nsw i64 %1009, %1011
  %1013 = sext i32 %997 to i64
  %1014 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1013
  %1015 = load i8, ptr %1014, align 1, !tbaa !5
  %1016 = icmp eq i8 %1015, 0
  %1017 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 %1012
  %1018 = load i8, ptr %1017, align 1, !tbaa !5
  %1019 = zext i8 %1018 to i64
  br i1 %1016, label %1030, label %1020

1020:                                             ; preds = %994
  %1021 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1019, i64 1
  %1022 = load i8, ptr %1021, align 1, !tbaa !5
  store i8 %1022, ptr %1017, align 1, !tbaa !5
  %1023 = xor i64 %1019, 1
  %1024 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1023
  %1025 = load i16, ptr %1024, align 2, !tbaa !37
  %1026 = zext i16 %1025 to i32
  %1027 = load i32, ptr %473, align 16, !tbaa !40
  %1028 = add nsw i32 %1027, %1026
  store i32 %1028, ptr %473, align 16, !tbaa !40
  %1029 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %995
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef 2, ptr noundef nonnull %1029, i32 noundef 0)
  br label %1038

1030:                                             ; preds = %994
  %1031 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1019, i64 0
  %1032 = load i8, ptr %1031, align 2, !tbaa !5
  store i8 %1032, ptr %1017, align 1, !tbaa !5
  %1033 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1019
  %1034 = load i16, ptr %1033, align 2, !tbaa !37
  %1035 = zext i16 %1034 to i32
  %1036 = load i32, ptr %473, align 16, !tbaa !40
  %1037 = add nsw i32 %1036, %1035
  store i32 %1037, ptr %473, align 16, !tbaa !40
  br label %1038

1038:                                             ; preds = %1030, %1020
  %1039 = or i64 %948, 2
  %1040 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1039
  %1041 = load i32, ptr %1040, align 8, !tbaa !39
  %1042 = add nsw i32 %1041, -1
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1043
  %1045 = load i8, ptr %1044, align 1, !tbaa !5
  %1046 = add nsw i32 %1041, -8
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1047
  %1049 = load i8, ptr %1048, align 1, !tbaa !5
  %1050 = and i8 %1045, 127
  %1051 = and i8 %1049, 127
  %1052 = icmp eq i8 %1051, 0
  %1053 = select i1 %1052, i64 0, i64 2
  %1054 = icmp eq i8 %1050, 0
  %1055 = select i1 %1054, i64 93, i64 94
  %1056 = add nuw nsw i64 %1053, %1055
  %1057 = sext i32 %1041 to i64
  %1058 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1057
  %1059 = load i8, ptr %1058, align 1, !tbaa !5
  %1060 = icmp eq i8 %1059, 0
  %1061 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 %1056
  %1062 = load i8, ptr %1061, align 1, !tbaa !5
  %1063 = zext i8 %1062 to i64
  br i1 %1060, label %1074, label %1064

1064:                                             ; preds = %1038
  %1065 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1063, i64 1
  %1066 = load i8, ptr %1065, align 1, !tbaa !5
  store i8 %1066, ptr %1061, align 1, !tbaa !5
  %1067 = xor i64 %1063, 1
  %1068 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1067
  %1069 = load i16, ptr %1068, align 2, !tbaa !37
  %1070 = zext i16 %1069 to i32
  %1071 = load i32, ptr %473, align 16, !tbaa !40
  %1072 = add nsw i32 %1071, %1070
  store i32 %1072, ptr %473, align 16, !tbaa !40
  %1073 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %1039
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef 2, ptr noundef nonnull %1073, i32 noundef 0)
  br label %1082

1074:                                             ; preds = %1038
  %1075 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1063, i64 0
  %1076 = load i8, ptr %1075, align 2, !tbaa !5
  store i8 %1076, ptr %1061, align 1, !tbaa !5
  %1077 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1063
  %1078 = load i16, ptr %1077, align 2, !tbaa !37
  %1079 = zext i16 %1078 to i32
  %1080 = load i32, ptr %473, align 16, !tbaa !40
  %1081 = add nsw i32 %1080, %1079
  store i32 %1081, ptr %473, align 16, !tbaa !40
  br label %1082

1082:                                             ; preds = %1074, %1064
  %1083 = or i64 %948, 3
  %1084 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1083
  %1085 = load i32, ptr %1084, align 4, !tbaa !39
  %1086 = add nsw i32 %1085, -1
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1087
  %1089 = load i8, ptr %1088, align 1, !tbaa !5
  %1090 = add nsw i32 %1085, -8
  %1091 = sext i32 %1090 to i64
  %1092 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1091
  %1093 = load i8, ptr %1092, align 1, !tbaa !5
  %1094 = and i8 %1089, 127
  %1095 = and i8 %1093, 127
  %1096 = icmp eq i8 %1095, 0
  %1097 = select i1 %1096, i64 0, i64 2
  %1098 = icmp eq i8 %1094, 0
  %1099 = select i1 %1098, i64 93, i64 94
  %1100 = add nuw nsw i64 %1097, %1099
  %1101 = sext i32 %1085 to i64
  %1102 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1101
  %1103 = load i8, ptr %1102, align 1, !tbaa !5
  %1104 = icmp eq i8 %1103, 0
  %1105 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 %1100
  %1106 = load i8, ptr %1105, align 1, !tbaa !5
  %1107 = zext i8 %1106 to i64
  br i1 %1104, label %1118, label %1108

1108:                                             ; preds = %1082
  %1109 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1107, i64 1
  %1110 = load i8, ptr %1109, align 1, !tbaa !5
  store i8 %1110, ptr %1105, align 1, !tbaa !5
  %1111 = xor i64 %1107, 1
  %1112 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1111
  %1113 = load i16, ptr %1112, align 2, !tbaa !37
  %1114 = zext i16 %1113 to i32
  %1115 = load i32, ptr %473, align 16, !tbaa !40
  %1116 = add nsw i32 %1115, %1114
  store i32 %1116, ptr %473, align 16, !tbaa !40
  %1117 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %1083
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef 2, ptr noundef nonnull %1117, i32 noundef 0)
  br label %1126

1118:                                             ; preds = %1082
  %1119 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1107, i64 0
  %1120 = load i8, ptr %1119, align 2, !tbaa !5
  store i8 %1120, ptr %1105, align 1, !tbaa !5
  %1121 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1107
  %1122 = load i16, ptr %1121, align 2, !tbaa !37
  %1123 = zext i16 %1122 to i32
  %1124 = load i32, ptr %473, align 16, !tbaa !40
  %1125 = add nsw i32 %1124, %1123
  store i32 %1125, ptr %473, align 16, !tbaa !40
  br label %1126

1126:                                             ; preds = %1118, %1108, %973, %936
  %1127 = add nsw i32 %937, 16
  %1128 = sext i32 %1127 to i64
  %1129 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1128
  %1130 = load i32, ptr %1129, align 4, !tbaa !39
  %1131 = add nsw i32 %1130, -1
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1132
  %1134 = load i8, ptr %1133, align 1, !tbaa !5
  %1135 = add nsw i32 %1130, -8
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1136
  %1138 = load i8, ptr %1137, align 1, !tbaa !5
  %1139 = and i8 %1134, 127
  %1140 = and i8 %1138, 127
  %1141 = icmp eq i8 %1140, 0
  %1142 = select i1 %1141, i64 0, i64 2
  %1143 = icmp eq i8 %1139, 0
  %1144 = select i1 %1143, i64 101, i64 102
  %1145 = add nuw nsw i64 %1142, %1144
  %1146 = sext i32 %1130 to i64
  %1147 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1146
  %1148 = load i8, ptr %1147, align 1, !tbaa !5
  %1149 = icmp eq i8 %1148, 0
  %1150 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 %1145
  %1151 = load i8, ptr %1150, align 1, !tbaa !5
  %1152 = zext i8 %1151 to i64
  br i1 %1149, label %1163, label %1153

1153:                                             ; preds = %1126
  %1154 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1152, i64 1
  %1155 = load i8, ptr %1154, align 1, !tbaa !5
  store i8 %1155, ptr %1150, align 1, !tbaa !5
  %1156 = xor i64 %1152, 1
  %1157 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1156
  %1158 = load i16, ptr %1157, align 2, !tbaa !37
  %1159 = zext i16 %1158 to i32
  %1160 = load i32, ptr %473, align 16, !tbaa !40
  %1161 = add nsw i32 %1160, %1159
  store i32 %1161, ptr %473, align 16, !tbaa !40
  %1162 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %1128, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef 4, ptr noundef nonnull %1162, i32 noundef 0)
  br label %1171

1163:                                             ; preds = %1126
  %1164 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1152, i64 0
  %1165 = load i8, ptr %1164, align 2, !tbaa !5
  store i8 %1165, ptr %1150, align 1, !tbaa !5
  %1166 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1152
  %1167 = load i16, ptr %1166, align 2, !tbaa !37
  %1168 = zext i16 %1167 to i32
  %1169 = load i32, ptr %473, align 16, !tbaa !40
  %1170 = add nsw i32 %1169, %1168
  store i32 %1170, ptr %473, align 16, !tbaa !40
  br label %1171

1171:                                             ; preds = %1163, %1153
  %1172 = add nsw i32 %937, 20
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1173
  %1175 = load i32, ptr %1174, align 4, !tbaa !39
  %1176 = add nsw i32 %1175, -1
  %1177 = sext i32 %1176 to i64
  %1178 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1177
  %1179 = load i8, ptr %1178, align 1, !tbaa !5
  %1180 = add nsw i32 %1175, -8
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1181
  %1183 = load i8, ptr %1182, align 1, !tbaa !5
  %1184 = and i8 %1179, 127
  %1185 = and i8 %1183, 127
  %1186 = icmp eq i8 %1185, 0
  %1187 = select i1 %1186, i64 0, i64 2
  %1188 = icmp eq i8 %1184, 0
  %1189 = select i1 %1188, i64 101, i64 102
  %1190 = add nuw nsw i64 %1187, %1189
  %1191 = sext i32 %1175 to i64
  %1192 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1191
  %1193 = load i8, ptr %1192, align 1, !tbaa !5
  %1194 = icmp eq i8 %1193, 0
  %1195 = getelementptr inbounds %struct.x264_cabac_t, ptr %19, i64 0, i32 9, i64 %1190
  %1196 = load i8, ptr %1195, align 1, !tbaa !5
  %1197 = zext i8 %1196 to i64
  br i1 %1194, label %1208, label %1198

1198:                                             ; preds = %1171
  %1199 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1197, i64 1
  %1200 = load i8, ptr %1199, align 1, !tbaa !5
  store i8 %1200, ptr %1195, align 1, !tbaa !5
  %1201 = xor i64 %1197, 1
  %1202 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1201
  %1203 = load i16, ptr %1202, align 2, !tbaa !37
  %1204 = zext i16 %1203 to i32
  %1205 = load i32, ptr %473, align 16, !tbaa !40
  %1206 = add nsw i32 %1205, %1204
  store i32 %1206, ptr %473, align 16, !tbaa !40
  %1207 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %1173, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef 4, ptr noundef nonnull %1207, i32 noundef 0)
  br label %1216

1208:                                             ; preds = %1171
  %1209 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1197, i64 0
  %1210 = load i8, ptr %1209, align 2, !tbaa !5
  store i8 %1210, ptr %1195, align 1, !tbaa !5
  %1211 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1197
  %1212 = load i16, ptr %1211, align 2, !tbaa !37
  %1213 = zext i16 %1212 to i32
  %1214 = load i32, ptr %473, align 16, !tbaa !40
  %1215 = add nsw i32 %1214, %1213
  store i32 %1215, ptr %473, align 16, !tbaa !40
  br label %1216

1216:                                             ; preds = %1208, %1198
  %1217 = load i32, ptr %935, align 4, !tbaa !52
  %1218 = ashr i32 %1217, 3
  %1219 = add nsw i32 %1218, %937
  %1220 = add nsw i32 %938, -1
  %1221 = icmp sgt i32 %938, 0
  br i1 %1221, label %936, label %1222, !llvm.loop !54

1222:                                             ; preds = %1216
  %1223 = load i32, ptr %473, align 16, !tbaa !40
  %1224 = sext i32 %1223 to i64
  %1225 = sext i32 %1 to i64
  %1226 = mul nsw i64 %1224, %1225
  %1227 = add nsw i64 %1226, 128
  %1228 = lshr i64 %1227, 8
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %19) #17
  br label %1687

1229:                                             ; preds = %420
  %1230 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %1231 = load i32, ptr %1230, align 8, !tbaa !49
  %1232 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %1233 = load i32, ptr %1232, align 4, !tbaa !50
  %1234 = icmp eq i32 %1233, 15
  %1235 = zext i1 %1234 to i32
  switch i32 %1231, label %1313 [
    i32 5, label %1236
    i32 4, label %1251
  ]

1236:                                             ; preds = %1229
  tail call fastcc void @cavlc_mb8x8_mvd(ptr noundef nonnull %0, i32 noundef %20)
  %1237 = sext i32 %20 to i64
  %1238 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %1237
  %1239 = load i8, ptr %1238, align 1, !tbaa !5
  %1240 = zext i8 %1239 to i64
  %1241 = getelementptr inbounds [4 x i8], ptr @sub_mb_type_p_to_golomb, i64 0, i64 %1240
  %1242 = load i8, ptr %1241, align 1, !tbaa !5
  %1243 = zext i8 %1242 to i64
  %1244 = add nuw nsw i64 %1243, 1
  %1245 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1244
  %1246 = load i8, ptr %1245, align 1, !tbaa !5
  %1247 = zext i8 %1246 to i32
  %1248 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %1249 = load i32, ptr %1248, align 4, !tbaa !42
  %1250 = add nsw i32 %1249, %1247
  store i32 %1250, ptr %1248, align 4, !tbaa !42
  br label %1589

1251:                                             ; preds = %1229
  %1252 = and i32 %2, -4
  %1253 = lshr i32 4, %1235
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1252, i32 noundef %1253, ptr noundef nonnull %9) #17
  %1254 = sext i32 %1252 to i64
  %1255 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1254
  %1256 = load i32, ptr %1255, align 16, !tbaa !39
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1257
  %1259 = load i16, ptr %1258, align 4, !tbaa !37
  %1260 = sext i16 %1259 to i32
  %1261 = load i16, ptr %9, align 4, !tbaa !37
  %1262 = sext i16 %1261 to i32
  %1263 = sub nsw i32 %1260, %1262
  %1264 = shl nsw i32 %1263, 1
  %1265 = sub nsw i32 1, %1264
  %1266 = icmp sgt i32 %1263, 0
  %1267 = select i1 %1266, i32 %1264, i32 %1265
  %1268 = icmp slt i32 %1267, 256
  br i1 %1268, label %1269, label %1274

1269:                                             ; preds = %1251
  %1270 = sext i32 %1267 to i64
  %1271 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1270
  %1272 = load i8, ptr %1271, align 1, !tbaa !5
  %1273 = zext i8 %1272 to i32
  br label %1281

1274:                                             ; preds = %1251
  %1275 = lshr i32 %1267, 8
  %1276 = zext i32 %1275 to i64
  %1277 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1276
  %1278 = load i8, ptr %1277, align 1, !tbaa !5
  %1279 = zext i8 %1278 to i32
  %1280 = add nuw nsw i32 %1279, 16
  br label %1281

1281:                                             ; preds = %1274, %1269
  %1282 = phi i32 [ %1273, %1269 ], [ %1280, %1274 ]
  %1283 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %1284 = load i32, ptr %1283, align 4, !tbaa !42
  %1285 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1257, i64 1
  %1286 = load i16, ptr %1285, align 2, !tbaa !37
  %1287 = sext i16 %1286 to i32
  %1288 = getelementptr inbounds [2 x i16], ptr %9, i64 0, i64 1
  %1289 = load i16, ptr %1288, align 2, !tbaa !37
  %1290 = sext i16 %1289 to i32
  %1291 = sub nsw i32 %1287, %1290
  %1292 = shl nsw i32 %1291, 1
  %1293 = sub nsw i32 1, %1292
  %1294 = icmp sgt i32 %1291, 0
  %1295 = select i1 %1294, i32 %1292, i32 %1293
  %1296 = icmp slt i32 %1295, 256
  br i1 %1296, label %1297, label %1302

1297:                                             ; preds = %1281
  %1298 = sext i32 %1295 to i64
  %1299 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1298
  %1300 = load i8, ptr %1299, align 1, !tbaa !5
  %1301 = zext i8 %1300 to i32
  br label %1309

1302:                                             ; preds = %1281
  %1303 = lshr i32 %1295, 8
  %1304 = zext i32 %1303 to i64
  %1305 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1304
  %1306 = load i8, ptr %1305, align 1, !tbaa !5
  %1307 = zext i8 %1306 to i32
  %1308 = add nuw nsw i32 %1307, 16
  br label %1309

1309:                                             ; preds = %1302, %1297
  %1310 = phi i32 [ %1301, %1297 ], [ %1308, %1302 ]
  %1311 = add nsw i32 %1284, %1282
  %1312 = add nsw i32 %1311, %1310
  store i32 %1312, ptr %1283, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  br label %1589

1313:                                             ; preds = %1229
  %1314 = add i32 %1231, -8
  %1315 = icmp ult i32 %1314, 9
  br i1 %1315, label %1316, label %1452

1316:                                             ; preds = %1313
  %1317 = zext i32 %1231 to i64
  %1318 = getelementptr inbounds [19 x [2 x [2 x i8]]], ptr @x264_mb_type_list_table, i64 0, i64 %1317
  %1319 = icmp ugt i32 %2, 3
  %1320 = zext i1 %1319 to i64
  %1321 = getelementptr inbounds [2 x i8], ptr %1318, i64 0, i64 %1320
  %1322 = load i8, ptr %1321, align 1, !tbaa !5
  %1323 = icmp eq i8 %1322, 0
  br i1 %1323, label %1386, label %1324

1324:                                             ; preds = %1316
  %1325 = and i32 %2, -4
  %1326 = lshr i32 4, %1235
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1325, i32 noundef %1326, ptr noundef nonnull %8) #17
  %1327 = sext i32 %1325 to i64
  %1328 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1327
  %1329 = load i32, ptr %1328, align 16, !tbaa !39
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1330
  %1332 = load i16, ptr %1331, align 4, !tbaa !37
  %1333 = sext i16 %1332 to i32
  %1334 = load i16, ptr %8, align 4, !tbaa !37
  %1335 = sext i16 %1334 to i32
  %1336 = sub nsw i32 %1333, %1335
  %1337 = shl nsw i32 %1336, 1
  %1338 = sub nsw i32 1, %1337
  %1339 = icmp sgt i32 %1336, 0
  %1340 = select i1 %1339, i32 %1337, i32 %1338
  %1341 = icmp slt i32 %1340, 256
  br i1 %1341, label %1342, label %1347

1342:                                             ; preds = %1324
  %1343 = sext i32 %1340 to i64
  %1344 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1343
  %1345 = load i8, ptr %1344, align 1, !tbaa !5
  %1346 = zext i8 %1345 to i32
  br label %1354

1347:                                             ; preds = %1324
  %1348 = lshr i32 %1340, 8
  %1349 = zext i32 %1348 to i64
  %1350 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1349
  %1351 = load i8, ptr %1350, align 1, !tbaa !5
  %1352 = zext i8 %1351 to i32
  %1353 = add nuw nsw i32 %1352, 16
  br label %1354

1354:                                             ; preds = %1347, %1342
  %1355 = phi i32 [ %1346, %1342 ], [ %1353, %1347 ]
  %1356 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %1357 = load i32, ptr %1356, align 4, !tbaa !42
  %1358 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1330, i64 1
  %1359 = load i16, ptr %1358, align 2, !tbaa !37
  %1360 = sext i16 %1359 to i32
  %1361 = getelementptr inbounds [2 x i16], ptr %8, i64 0, i64 1
  %1362 = load i16, ptr %1361, align 2, !tbaa !37
  %1363 = sext i16 %1362 to i32
  %1364 = sub nsw i32 %1360, %1363
  %1365 = shl nsw i32 %1364, 1
  %1366 = sub nsw i32 1, %1365
  %1367 = icmp sgt i32 %1364, 0
  %1368 = select i1 %1367, i32 %1365, i32 %1366
  %1369 = icmp slt i32 %1368, 256
  br i1 %1369, label %1370, label %1375

1370:                                             ; preds = %1354
  %1371 = sext i32 %1368 to i64
  %1372 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1371
  %1373 = load i8, ptr %1372, align 1, !tbaa !5
  %1374 = zext i8 %1373 to i32
  br label %1382

1375:                                             ; preds = %1354
  %1376 = lshr i32 %1368, 8
  %1377 = zext i32 %1376 to i64
  %1378 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1377
  %1379 = load i8, ptr %1378, align 1, !tbaa !5
  %1380 = zext i8 %1379 to i32
  %1381 = add nuw nsw i32 %1380, 16
  br label %1382

1382:                                             ; preds = %1375, %1370
  %1383 = phi i32 [ %1374, %1370 ], [ %1381, %1375 ]
  %1384 = add nsw i32 %1357, %1355
  %1385 = add nsw i32 %1384, %1383
  store i32 %1385, ptr %1356, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  br label %1386

1386:                                             ; preds = %1382, %1316
  %1387 = getelementptr inbounds [19 x [2 x [2 x i8]]], ptr @x264_mb_type_list_table, i64 0, i64 %1317, i64 1, i64 %1320
  %1388 = load i8, ptr %1387, align 1, !tbaa !5
  %1389 = icmp eq i8 %1388, 0
  br i1 %1389, label %1589, label %1390

1390:                                             ; preds = %1386
  %1391 = and i32 %2, -4
  %1392 = lshr i32 4, %1235
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %1391, i32 noundef %1392, ptr noundef nonnull %7) #17
  %1393 = sext i32 %1391 to i64
  %1394 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1393
  %1395 = load i32, ptr %1394, align 16, !tbaa !39
  %1396 = sext i32 %1395 to i64
  %1397 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %1396
  %1398 = load i16, ptr %1397, align 4, !tbaa !37
  %1399 = sext i16 %1398 to i32
  %1400 = load i16, ptr %7, align 4, !tbaa !37
  %1401 = sext i16 %1400 to i32
  %1402 = sub nsw i32 %1399, %1401
  %1403 = shl nsw i32 %1402, 1
  %1404 = sub nsw i32 1, %1403
  %1405 = icmp sgt i32 %1402, 0
  %1406 = select i1 %1405, i32 %1403, i32 %1404
  %1407 = icmp slt i32 %1406, 256
  br i1 %1407, label %1408, label %1413

1408:                                             ; preds = %1390
  %1409 = sext i32 %1406 to i64
  %1410 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1409
  %1411 = load i8, ptr %1410, align 1, !tbaa !5
  %1412 = zext i8 %1411 to i32
  br label %1420

1413:                                             ; preds = %1390
  %1414 = lshr i32 %1406, 8
  %1415 = zext i32 %1414 to i64
  %1416 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1415
  %1417 = load i8, ptr %1416, align 1, !tbaa !5
  %1418 = zext i8 %1417 to i32
  %1419 = add nuw nsw i32 %1418, 16
  br label %1420

1420:                                             ; preds = %1413, %1408
  %1421 = phi i32 [ %1412, %1408 ], [ %1419, %1413 ]
  %1422 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %1423 = load i32, ptr %1422, align 4, !tbaa !42
  %1424 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %1396, i64 1
  %1425 = load i16, ptr %1424, align 2, !tbaa !37
  %1426 = sext i16 %1425 to i32
  %1427 = getelementptr inbounds [2 x i16], ptr %7, i64 0, i64 1
  %1428 = load i16, ptr %1427, align 2, !tbaa !37
  %1429 = sext i16 %1428 to i32
  %1430 = sub nsw i32 %1426, %1429
  %1431 = shl nsw i32 %1430, 1
  %1432 = sub nsw i32 1, %1431
  %1433 = icmp sgt i32 %1430, 0
  %1434 = select i1 %1433, i32 %1431, i32 %1432
  %1435 = icmp slt i32 %1434, 256
  br i1 %1435, label %1436, label %1441

1436:                                             ; preds = %1420
  %1437 = sext i32 %1434 to i64
  %1438 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1437
  %1439 = load i8, ptr %1438, align 1, !tbaa !5
  %1440 = zext i8 %1439 to i32
  br label %1448

1441:                                             ; preds = %1420
  %1442 = lshr i32 %1434, 8
  %1443 = zext i32 %1442 to i64
  %1444 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1443
  %1445 = load i8, ptr %1444, align 1, !tbaa !5
  %1446 = zext i8 %1445 to i32
  %1447 = add nuw nsw i32 %1446, 16
  br label %1448

1448:                                             ; preds = %1441, %1436
  %1449 = phi i32 [ %1440, %1436 ], [ %1447, %1441 ]
  %1450 = add nsw i32 %1423, %1421
  %1451 = add nsw i32 %1450, %1449
  store i32 %1451, ptr %1422, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #17
  br label %1589

1452:                                             ; preds = %1313
  %1453 = sext i32 %20 to i64
  %1454 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %1453
  %1455 = load i8, ptr %1454, align 1, !tbaa !5
  %1456 = zext i8 %1455 to i64
  %1457 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %1456
  %1458 = load i8, ptr %1457, align 1, !tbaa !5
  %1459 = icmp eq i8 %1458, 0
  br i1 %1459, label %1523, label %1460

1460:                                             ; preds = %1452
  %1461 = and i32 %2, -4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1461, i32 noundef 2, ptr noundef nonnull %6) #17
  %1462 = sext i32 %1461 to i64
  %1463 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1462
  %1464 = load i32, ptr %1463, align 16, !tbaa !39
  %1465 = sext i32 %1464 to i64
  %1466 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1465
  %1467 = load i16, ptr %1466, align 4, !tbaa !37
  %1468 = sext i16 %1467 to i32
  %1469 = load i16, ptr %6, align 4, !tbaa !37
  %1470 = sext i16 %1469 to i32
  %1471 = sub nsw i32 %1468, %1470
  %1472 = shl nsw i32 %1471, 1
  %1473 = sub nsw i32 1, %1472
  %1474 = icmp sgt i32 %1471, 0
  %1475 = select i1 %1474, i32 %1472, i32 %1473
  %1476 = icmp slt i32 %1475, 256
  br i1 %1476, label %1477, label %1482

1477:                                             ; preds = %1460
  %1478 = sext i32 %1475 to i64
  %1479 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1478
  %1480 = load i8, ptr %1479, align 1, !tbaa !5
  %1481 = zext i8 %1480 to i32
  br label %1489

1482:                                             ; preds = %1460
  %1483 = lshr i32 %1475, 8
  %1484 = zext i32 %1483 to i64
  %1485 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1484
  %1486 = load i8, ptr %1485, align 1, !tbaa !5
  %1487 = zext i8 %1486 to i32
  %1488 = add nuw nsw i32 %1487, 16
  br label %1489

1489:                                             ; preds = %1482, %1477
  %1490 = phi i32 [ %1481, %1477 ], [ %1488, %1482 ]
  %1491 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %1492 = load i32, ptr %1491, align 4, !tbaa !42
  %1493 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1465, i64 1
  %1494 = load i16, ptr %1493, align 2, !tbaa !37
  %1495 = sext i16 %1494 to i32
  %1496 = getelementptr inbounds [2 x i16], ptr %6, i64 0, i64 1
  %1497 = load i16, ptr %1496, align 2, !tbaa !37
  %1498 = sext i16 %1497 to i32
  %1499 = sub nsw i32 %1495, %1498
  %1500 = shl nsw i32 %1499, 1
  %1501 = sub nsw i32 1, %1500
  %1502 = icmp sgt i32 %1499, 0
  %1503 = select i1 %1502, i32 %1500, i32 %1501
  %1504 = icmp slt i32 %1503, 256
  br i1 %1504, label %1505, label %1510

1505:                                             ; preds = %1489
  %1506 = sext i32 %1503 to i64
  %1507 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1506
  %1508 = load i8, ptr %1507, align 1, !tbaa !5
  %1509 = zext i8 %1508 to i32
  br label %1517

1510:                                             ; preds = %1489
  %1511 = lshr i32 %1503, 8
  %1512 = zext i32 %1511 to i64
  %1513 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1512
  %1514 = load i8, ptr %1513, align 1, !tbaa !5
  %1515 = zext i8 %1514 to i32
  %1516 = add nuw nsw i32 %1515, 16
  br label %1517

1517:                                             ; preds = %1510, %1505
  %1518 = phi i32 [ %1509, %1505 ], [ %1516, %1510 ]
  %1519 = add nsw i32 %1492, %1490
  %1520 = add nsw i32 %1519, %1518
  store i32 %1520, ptr %1491, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  %1521 = load i8, ptr %1454, align 1, !tbaa !5
  %1522 = zext i8 %1521 to i64
  br label %1523

1523:                                             ; preds = %1517, %1452
  %1524 = phi i64 [ %1522, %1517 ], [ %1456, %1452 ]
  %1525 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %1524
  %1526 = load i8, ptr %1525, align 1, !tbaa !5
  %1527 = icmp eq i8 %1526, 0
  br i1 %1527, label %1589, label %1528

1528:                                             ; preds = %1523
  %1529 = and i32 %2, -4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %1529, i32 noundef 2, ptr noundef nonnull %5) #17
  %1530 = sext i32 %1529 to i64
  %1531 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1530
  %1532 = load i32, ptr %1531, align 16, !tbaa !39
  %1533 = sext i32 %1532 to i64
  %1534 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %1533
  %1535 = load i16, ptr %1534, align 4, !tbaa !37
  %1536 = sext i16 %1535 to i32
  %1537 = load i16, ptr %5, align 4, !tbaa !37
  %1538 = sext i16 %1537 to i32
  %1539 = sub nsw i32 %1536, %1538
  %1540 = shl nsw i32 %1539, 1
  %1541 = sub nsw i32 1, %1540
  %1542 = icmp sgt i32 %1539, 0
  %1543 = select i1 %1542, i32 %1540, i32 %1541
  %1544 = icmp slt i32 %1543, 256
  br i1 %1544, label %1545, label %1550

1545:                                             ; preds = %1528
  %1546 = sext i32 %1543 to i64
  %1547 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1546
  %1548 = load i8, ptr %1547, align 1, !tbaa !5
  %1549 = zext i8 %1548 to i32
  br label %1557

1550:                                             ; preds = %1528
  %1551 = lshr i32 %1543, 8
  %1552 = zext i32 %1551 to i64
  %1553 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1552
  %1554 = load i8, ptr %1553, align 1, !tbaa !5
  %1555 = zext i8 %1554 to i32
  %1556 = add nuw nsw i32 %1555, 16
  br label %1557

1557:                                             ; preds = %1550, %1545
  %1558 = phi i32 [ %1549, %1545 ], [ %1556, %1550 ]
  %1559 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %1560 = load i32, ptr %1559, align 4, !tbaa !42
  %1561 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %1533, i64 1
  %1562 = load i16, ptr %1561, align 2, !tbaa !37
  %1563 = sext i16 %1562 to i32
  %1564 = getelementptr inbounds [2 x i16], ptr %5, i64 0, i64 1
  %1565 = load i16, ptr %1564, align 2, !tbaa !37
  %1566 = sext i16 %1565 to i32
  %1567 = sub nsw i32 %1563, %1566
  %1568 = shl nsw i32 %1567, 1
  %1569 = sub nsw i32 1, %1568
  %1570 = icmp sgt i32 %1567, 0
  %1571 = select i1 %1570, i32 %1568, i32 %1569
  %1572 = icmp slt i32 %1571, 256
  br i1 %1572, label %1573, label %1578

1573:                                             ; preds = %1557
  %1574 = sext i32 %1571 to i64
  %1575 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1574
  %1576 = load i8, ptr %1575, align 1, !tbaa !5
  %1577 = zext i8 %1576 to i32
  br label %1585

1578:                                             ; preds = %1557
  %1579 = lshr i32 %1571, 8
  %1580 = zext i32 %1579 to i64
  %1581 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1580
  %1582 = load i8, ptr %1581, align 1, !tbaa !5
  %1583 = zext i8 %1582 to i32
  %1584 = add nuw nsw i32 %1583, 16
  br label %1585

1585:                                             ; preds = %1578, %1573
  %1586 = phi i32 [ %1577, %1573 ], [ %1584, %1578 ]
  %1587 = add nsw i32 %1560, %1558
  %1588 = add nsw i32 %1587, %1586
  store i32 %1588, ptr %1559, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  br label %1589

1589:                                             ; preds = %1585, %1523, %1448, %1386, %1309, %1236
  %1590 = icmp slt i32 %3, 3
  %1591 = zext i1 %1590 to i32
  %1592 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %1593 = sext i32 %3 to i64
  %1594 = getelementptr inbounds [7 x %struct.anon.15], ptr @x264_pixel_size, i64 0, i64 %1593, i32 1
  br label %1595

1595:                                             ; preds = %1677, %1589
  %1596 = phi i32 [ %20, %1589 ], [ %1680, %1677 ]
  %1597 = phi i32 [ %1591, %1589 ], [ %1681, %1677 ]
  call fastcc void @x264_macroblock_luma_write_cavlc(ptr noundef nonnull %0, i32 noundef %1596, i32 noundef %1596)
  %1598 = add nsw i32 %1596, 16
  %1599 = sext i32 %1598 to i64
  %1600 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1599
  %1601 = load i32, ptr %1600, align 4, !tbaa !39
  %1602 = add nsw i32 %1601, -1
  %1603 = sext i32 %1602 to i64
  %1604 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1603
  %1605 = load i8, ptr %1604, align 1, !tbaa !5
  %1606 = zext i8 %1605 to i32
  %1607 = add nsw i32 %1601, -8
  %1608 = sext i32 %1607 to i64
  %1609 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1608
  %1610 = load i8, ptr %1609, align 1, !tbaa !5
  %1611 = zext i8 %1610 to i32
  %1612 = add nuw nsw i32 %1611, %1606
  %1613 = icmp ult i32 %1612, 128
  %1614 = add nuw nsw i32 %1612, 1
  %1615 = lshr i32 %1614, 1
  %1616 = select i1 %1613, i32 %1615, i32 %1612
  %1617 = and i32 %1616, 127
  %1618 = zext i32 %1617 to i64
  %1619 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %1618
  %1620 = load i8, ptr %1619, align 1, !tbaa !5
  %1621 = sext i32 %1601 to i64
  %1622 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1621
  %1623 = load i8, ptr %1622, align 1, !tbaa !5
  %1624 = icmp eq i8 %1623, 0
  br i1 %1624, label %1625, label %1632

1625:                                             ; preds = %1595
  %1626 = zext i8 %1620 to i64
  %1627 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %1626, i32 1
  %1628 = load i8, ptr %1627, align 1, !tbaa !43
  %1629 = zext i8 %1628 to i32
  %1630 = load i32, ptr %1592, align 4, !tbaa !41
  %1631 = add nsw i32 %1630, %1629
  store i32 %1631, ptr %1592, align 4, !tbaa !41
  br label %1637

1632:                                             ; preds = %1595
  %1633 = zext i8 %1620 to i32
  %1634 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %1599, i64 1
  %1635 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %1634, i32 noundef %1633)
  %1636 = trunc i32 %1635 to i8
  store i8 %1636, ptr %1622, align 1, !tbaa !5
  br label %1637

1637:                                             ; preds = %1632, %1625
  %1638 = add nsw i32 %1596, 20
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1639
  %1641 = load i32, ptr %1640, align 4, !tbaa !39
  %1642 = add nsw i32 %1641, -1
  %1643 = sext i32 %1642 to i64
  %1644 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1643
  %1645 = load i8, ptr %1644, align 1, !tbaa !5
  %1646 = zext i8 %1645 to i32
  %1647 = add nsw i32 %1641, -8
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1648
  %1650 = load i8, ptr %1649, align 1, !tbaa !5
  %1651 = zext i8 %1650 to i32
  %1652 = add nuw nsw i32 %1651, %1646
  %1653 = icmp ult i32 %1652, 128
  %1654 = add nuw nsw i32 %1652, 1
  %1655 = lshr i32 %1654, 1
  %1656 = select i1 %1653, i32 %1655, i32 %1652
  %1657 = and i32 %1656, 127
  %1658 = zext i32 %1657 to i64
  %1659 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %1658
  %1660 = load i8, ptr %1659, align 1, !tbaa !5
  %1661 = sext i32 %1641 to i64
  %1662 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1661
  %1663 = load i8, ptr %1662, align 1, !tbaa !5
  %1664 = icmp eq i8 %1663, 0
  br i1 %1664, label %1665, label %1672

1665:                                             ; preds = %1637
  %1666 = zext i8 %1660 to i64
  %1667 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %1666, i32 1
  %1668 = load i8, ptr %1667, align 1, !tbaa !43
  %1669 = zext i8 %1668 to i32
  %1670 = load i32, ptr %1592, align 4, !tbaa !41
  %1671 = add nsw i32 %1670, %1669
  store i32 %1671, ptr %1592, align 4, !tbaa !41
  br label %1677

1672:                                             ; preds = %1637
  %1673 = zext i8 %1660 to i32
  %1674 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %1639, i64 1
  %1675 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %1674, i32 noundef %1673)
  %1676 = trunc i32 %1675 to i8
  store i8 %1676, ptr %1662, align 1, !tbaa !5
  br label %1677

1677:                                             ; preds = %1672, %1665
  %1678 = load i32, ptr %1594, align 4, !tbaa !52
  %1679 = ashr i32 %1678, 3
  %1680 = add nsw i32 %1679, %1596
  %1681 = add nsw i32 %1597, -1
  %1682 = icmp sgt i32 %1597, 0
  br i1 %1682, label %1595, label %1683, !llvm.loop !56

1683:                                             ; preds = %1677
  %1684 = load i32, ptr %1592, align 4, !tbaa !41
  %1685 = mul nsw i32 %1684, %1
  %1686 = sext i32 %1685 to i64
  br label %1687

1687:                                             ; preds = %1683, %1222
  %1688 = phi i64 [ %1228, %1222 ], [ %1686, %1683 ]
  %1689 = shl nsw i64 %466, 8
  %1690 = add nsw i64 %1688, %1689
  br label %1691

1691:                                             ; preds = %1687, %410, %22
  %1692 = phi i64 [ %24, %22 ], [ %414, %410 ], [ %1690, %1687 ]
  ret i64 %1692
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @x264_rd_cost_mb(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = alloca [2 x i16], align 4
  %4 = alloca [2 x i16], align 4
  %5 = alloca [2 x i16], align 4
  %6 = alloca [2 x i16], align 4
  %7 = alloca [2 x i16], align 4
  %8 = alloca [2 x i16], align 4
  %9 = alloca [2 x i16], align 4
  %10 = alloca [2 x i16], align 4
  %11 = alloca [2 x i16], align 4
  %12 = alloca %struct.x264_cabac_t, align 16
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  %14 = load i32, ptr %13, align 4, !tbaa !51
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %16 = load i32, ptr %15, align 8, !tbaa !49
  tail call void @x264_macroblock_encode(ptr noundef %0) #17
  %17 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %18 = load ptr, ptr %17, align 8, !tbaa !46
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %20 = load ptr, ptr %19, align 8, !tbaa !46
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 3
  %22 = load ptr, ptr %21, align 8, !tbaa !46
  %23 = tail call i32 %22(ptr noundef %20, i32 noundef 16, ptr noundef %18, i32 noundef 32) #17
  %24 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %25 = load ptr, ptr %24, align 8, !tbaa !46
  %26 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %27 = load ptr, ptr %26, align 8, !tbaa !46
  %28 = load ptr, ptr %21, align 8, !tbaa !46
  %29 = tail call i32 %28(ptr noundef %27, i32 noundef 16, ptr noundef %25, i32 noundef 32) #17
  %30 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 78
  %31 = load i32, ptr %30, align 4, !tbaa !47
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 0
  %33 = load ptr, ptr %32, align 8, !tbaa !46
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 0
  %35 = load ptr, ptr %34, align 8, !tbaa !46
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %37 = load i32, ptr %36, align 4, !tbaa !57
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %74, label %39

39:                                               ; preds = %2
  %40 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 13, i64 0
  %41 = load ptr, ptr %40, align 8, !tbaa !46
  %42 = tail call i64 %41(ptr noundef %33, i32 noundef 32) #17
  %43 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 13, i64 0
  %44 = load i64, ptr %43, align 8, !tbaa !58
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %39
  %47 = add i64 %44, -1
  br label %53

48:                                               ; preds = %39
  %49 = load ptr, ptr %34, align 16, !tbaa !46
  %50 = load ptr, ptr %40, align 8, !tbaa !46
  %51 = tail call i64 %50(ptr noundef %49, i32 noundef 16) #17
  %52 = add i64 %51, 1
  store i64 %52, ptr %43, align 8, !tbaa !58
  br label %53

53:                                               ; preds = %48, %46
  %54 = phi i64 [ %47, %46 ], [ %51, %48 ]
  %55 = trunc i64 %42 to i32
  %56 = trunc i64 %54 to i32
  %57 = sub nsw i32 %55, %56
  %58 = tail call i32 @llvm.abs.i32(i32 %57, i1 true)
  %59 = lshr i64 %42, 32
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %54, 32
  %62 = trunc i64 %61 to i32
  %63 = sub nsw i32 %60, %62
  %64 = tail call i32 @llvm.abs.i32(i32 %63, i1 true)
  %65 = add nuw nsw i32 %64, %58
  %66 = lshr i32 %65, 1
  %67 = load i32, ptr %36, align 4, !tbaa !57
  %68 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 77
  %69 = load i32, ptr %68, align 16, !tbaa !59
  %70 = mul i32 %69, %67
  %71 = mul i32 %70, %66
  %72 = add nsw i32 %71, 128
  %73 = ashr i32 %72, 8
  br label %74

74:                                               ; preds = %2, %53
  %75 = phi i32 [ %73, %53 ], [ 0, %2 ]
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 0
  %77 = load ptr, ptr %76, align 8, !tbaa !46
  %78 = tail call i32 %77(ptr noundef %35, i32 noundef 16, ptr noundef %33, i32 noundef 32) #17
  %79 = load i32, ptr %15, align 8, !tbaa !49
  switch i32 %79, label %83 [
    i32 6, label %80
    i32 18, label %80
  ]

80:                                               ; preds = %74, %74
  %81 = add nsw i32 %1, 128
  %82 = ashr i32 %81, 8
  br label %2163

83:                                               ; preds = %74
  %84 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %85 = load i32, ptr %84, align 16, !tbaa !8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %100, label %87

87:                                               ; preds = %83
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %12) #17
  %88 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %89 = load ptr, ptr %88, align 8, !tbaa !48
  %90 = getelementptr inbounds %struct.x264_cabac_t, ptr %12, i64 0, i32 8
  %91 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 8
  %92 = call ptr %89(ptr noundef nonnull %90, ptr noundef nonnull %91, i64 noundef 464) #17
  call fastcc void @x264_macroblock_size_cabac(ptr noundef nonnull %0, ptr noundef nonnull %12)
  %93 = load i32, ptr %90, align 16, !tbaa !40
  %94 = sext i32 %93 to i64
  %95 = sext i32 %1 to i64
  %96 = mul nsw i64 %94, %95
  %97 = add nsw i64 %96, 32768
  %98 = lshr i64 %97, 16
  %99 = trunc i64 %98 to i32
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %12) #17
  br label %2163

100:                                              ; preds = %83
  %101 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 2
  %102 = load i32, ptr %101, align 16, !tbaa !60
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [3 x i8], ptr @x264_macroblock_size_cavlc.i_offsets, i64 0, i64 %103
  %105 = load i8, ptr %104, align 1, !tbaa !5
  %106 = zext i8 %105 to i32
  %107 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  store i32 0, ptr %107, align 4, !tbaa !42
  %108 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 7
  %109 = load i32, ptr %108, align 4, !tbaa !61
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %128, label %111

111:                                              ; preds = %100
  %112 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %113 = load i32, ptr %112, align 4, !tbaa !62
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 38
  %118 = load ptr, ptr %117, align 8, !tbaa !63
  %119 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %120 = load i32, ptr %119, align 8, !tbaa !64
  %121 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 1
  %122 = load i32, ptr %121, align 4, !tbaa !65
  %123 = sub nsw i32 %120, %122
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, ptr %118, i64 %124
  %126 = load i8, ptr %125, align 1, !tbaa !5
  switch i8 %126, label %128 [
    i8 6, label %127
    i8 18, label %127
  ]

127:                                              ; preds = %116, %116, %111
  store i32 1, ptr %107, align 4, !tbaa !42
  br label %128

128:                                              ; preds = %127, %116, %100
  %129 = phi i32 [ 0, %116 ], [ 1, %127 ], [ 0, %100 ]
  %130 = icmp ult i32 %79, 2
  br i1 %130, label %131, label %186

131:                                              ; preds = %128
  %132 = icmp eq i32 %79, 1
  %133 = select i1 %132, i64 4, i64 1
  %134 = add nuw nsw i32 %106, 1
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %135
  %137 = load i8, ptr %136, align 1, !tbaa !5
  %138 = zext i8 %137 to i32
  %139 = add nuw nsw i32 %129, %138
  store i32 %139, ptr %107, align 4, !tbaa !42
  %140 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %141 = load ptr, ptr %140, align 16, !tbaa !66
  %142 = getelementptr inbounds %struct.x264_pps_t, ptr %141, i64 0, i32 15
  %143 = load i32, ptr %142, align 4, !tbaa !67
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %131
  %146 = add nuw nsw i32 %139, 1
  store i32 %146, ptr %107, align 4, !tbaa !42
  br label %147

147:                                              ; preds = %145, %131
  %148 = phi i32 [ %146, %145 ], [ %139, %131 ]
  %149 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67
  br label %150

150:                                              ; preds = %150, %147
  %151 = phi i64 [ 0, %147 ], [ %184, %150 ]
  %152 = phi i32 [ %148, %147 ], [ %183, %150 ]
  %153 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %151
  %154 = load i32, ptr %153, align 4, !tbaa !39
  %155 = add nsw i32 %154, -1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [40 x i8], ptr %149, i64 0, i64 %156
  %158 = load i8, ptr %157, align 1, !tbaa !5
  %159 = sext i8 %158 to i64
  %160 = add nsw i32 %154, -8
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [40 x i8], ptr %149, i64 0, i64 %161
  %163 = load i8, ptr %162, align 1, !tbaa !5
  %164 = sext i8 %163 to i64
  %165 = add nsw i64 %159, 1
  %166 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %165
  %167 = load i8, ptr %166, align 1, !tbaa !5
  %168 = add nsw i64 %164, 1
  %169 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !5
  %171 = tail call i8 @llvm.smin.i8(i8 %167, i8 %170)
  %172 = icmp slt i8 %171, 0
  %173 = select i1 %172, i8 2, i8 %171
  %174 = sext i32 %154 to i64
  %175 = getelementptr inbounds [40 x i8], ptr %149, i64 0, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !5
  %177 = sext i8 %176 to i64
  %178 = add nsw i64 %177, 1
  %179 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !5
  %181 = icmp eq i8 %173, %180
  %182 = select i1 %181, i32 1, i32 4
  %183 = add nsw i32 %182, %152
  store i32 %183, ptr %107, align 4, !tbaa !42
  %184 = add nuw nsw i64 %151, %133
  %185 = icmp ult i64 %184, 16
  br i1 %185, label %150, label %1631, !llvm.loop !69

186:                                              ; preds = %128
  switch i32 %79, label %1339 [
    i32 2, label %187
    i32 4, label %214
    i32 5, label %566
    i32 17, label %668
    i32 7, label %1629
  ]

187:                                              ; preds = %186
  %188 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 59
  %189 = load i32, ptr %188, align 16, !tbaa !70
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode16x16_fix, i64 0, i64 %190
  %192 = load i8, ptr %191, align 1, !tbaa !5
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %195 = load i32, ptr %194, align 4, !tbaa !71
  %196 = shl nsw i32 %195, 2
  %197 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %198 = load i32, ptr %197, align 8, !tbaa !45
  %199 = icmp eq i32 %198, 0
  %200 = select i1 %199, i32 0, i32 12
  %201 = add nuw nsw i32 %106, 2
  %202 = add nuw nsw i32 %201, %193
  %203 = add i32 %202, %196
  %204 = add i32 %203, %200
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %205
  %207 = load i8, ptr %206, align 1, !tbaa !5
  %208 = zext i8 %207 to i32
  %209 = add nuw nsw i32 %129, %208
  %210 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 60
  %211 = load i32, ptr %210, align 4, !tbaa !72
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode8x8c_fix, i64 0, i64 %212
  br label %1665

214:                                              ; preds = %186
  %215 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %216 = load i32, ptr %215, align 4, !tbaa !50
  switch i32 %216, label %1655 [
    i32 16, label %217
    i32 14, label %290
    i32 15, label %428
  ]

217:                                              ; preds = %214
  %218 = add nuw nsw i32 %129, 1
  store i32 %218, ptr %107, align 4, !tbaa !42
  %219 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %220 = load i32, ptr %219, align 8, !tbaa !39
  %221 = icmp sgt i32 %220, 1
  br i1 %221, label %222, label %235

222:                                              ; preds = %217
  %223 = icmp eq i32 %220, 2
  br i1 %223, label %232, label %224

224:                                              ; preds = %222
  %225 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %226 = load i8, ptr %225, align 1, !tbaa !5
  %227 = sext i8 %226 to i64
  %228 = add nsw i64 %227, 1
  %229 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %228
  %230 = load i8, ptr %229, align 1, !tbaa !5
  %231 = zext i8 %230 to i32
  br label %232

232:                                              ; preds = %224, %222
  %233 = phi i32 [ %231, %224 ], [ 1, %222 ]
  %234 = add nuw nsw i32 %233, %218
  store i32 %234, ptr %107, align 4, !tbaa !42
  br label %235

235:                                              ; preds = %232, %217
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %11) #17
  %236 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %237 = load i16, ptr %236, align 4, !tbaa !37
  %238 = sext i16 %237 to i32
  %239 = load i16, ptr %11, align 4, !tbaa !37
  %240 = sext i16 %239 to i32
  %241 = sub nsw i32 %238, %240
  %242 = shl nsw i32 %241, 1
  %243 = sub nsw i32 1, %242
  %244 = icmp sgt i32 %241, 0
  %245 = select i1 %244, i32 %242, i32 %243
  %246 = icmp slt i32 %245, 256
  br i1 %246, label %247, label %252

247:                                              ; preds = %235
  %248 = sext i32 %245 to i64
  %249 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !5
  %251 = zext i8 %250 to i32
  br label %259

252:                                              ; preds = %235
  %253 = lshr i32 %245, 8
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !5
  %257 = zext i8 %256 to i32
  %258 = add nuw nsw i32 %257, 16
  br label %259

259:                                              ; preds = %252, %247
  %260 = phi i32 [ %251, %247 ], [ %258, %252 ]
  %261 = load i32, ptr %107, align 4, !tbaa !42
  %262 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %263 = load i16, ptr %262, align 2, !tbaa !37
  %264 = sext i16 %263 to i32
  %265 = getelementptr inbounds [2 x i16], ptr %11, i64 0, i64 1
  %266 = load i16, ptr %265, align 2, !tbaa !37
  %267 = sext i16 %266 to i32
  %268 = sub nsw i32 %264, %267
  %269 = shl nsw i32 %268, 1
  %270 = sub nsw i32 1, %269
  %271 = icmp sgt i32 %268, 0
  %272 = select i1 %271, i32 %269, i32 %270
  %273 = icmp slt i32 %272, 256
  br i1 %273, label %274, label %279

274:                                              ; preds = %259
  %275 = sext i32 %272 to i64
  %276 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %275
  %277 = load i8, ptr %276, align 1, !tbaa !5
  %278 = zext i8 %277 to i32
  br label %286

279:                                              ; preds = %259
  %280 = lshr i32 %272, 8
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %281
  %283 = load i8, ptr %282, align 1, !tbaa !5
  %284 = zext i8 %283 to i32
  %285 = add nuw nsw i32 %284, 16
  br label %286

286:                                              ; preds = %279, %274
  %287 = phi i32 [ %278, %274 ], [ %285, %279 ]
  %288 = add nsw i32 %261, %260
  %289 = add nsw i32 %288, %287
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #17
  br label %1655

290:                                              ; preds = %214
  %291 = add nuw nsw i32 %129, 3
  store i32 %291, ptr %107, align 4, !tbaa !42
  %292 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %293 = load i32, ptr %292, align 8, !tbaa !39
  %294 = icmp sgt i32 %293, 1
  br i1 %294, label %295, label %319

295:                                              ; preds = %290
  %296 = icmp eq i32 %293, 2
  br i1 %296, label %297, label %299

297:                                              ; preds = %295
  %298 = or i32 %129, 4
  br label %315

299:                                              ; preds = %295
  %300 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %301 = load i8, ptr %300, align 1, !tbaa !5
  %302 = sext i8 %301 to i64
  %303 = add nsw i64 %302, 1
  %304 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %303
  %305 = load i8, ptr %304, align 1, !tbaa !5
  %306 = zext i8 %305 to i32
  %307 = add nuw nsw i32 %291, %306
  %308 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %309 = load i8, ptr %308, align 1, !tbaa !5
  %310 = sext i8 %309 to i64
  %311 = add nsw i64 %310, 1
  %312 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %311
  %313 = load i8, ptr %312, align 1, !tbaa !5
  %314 = zext i8 %313 to i32
  br label %315

315:                                              ; preds = %299, %297
  %316 = phi i32 [ %298, %297 ], [ %307, %299 ]
  %317 = phi i32 [ 1, %297 ], [ %314, %299 ]
  %318 = add nuw nsw i32 %317, %316
  store i32 %318, ptr %107, align 4, !tbaa !42
  br label %319

319:                                              ; preds = %315, %290
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %10) #17
  %320 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %321 = load i16, ptr %320, align 4, !tbaa !37
  %322 = sext i16 %321 to i32
  %323 = load i16, ptr %10, align 4, !tbaa !37
  %324 = sext i16 %323 to i32
  %325 = sub nsw i32 %322, %324
  %326 = shl nsw i32 %325, 1
  %327 = sub nsw i32 1, %326
  %328 = icmp sgt i32 %325, 0
  %329 = select i1 %328, i32 %326, i32 %327
  %330 = icmp slt i32 %329, 256
  br i1 %330, label %331, label %336

331:                                              ; preds = %319
  %332 = sext i32 %329 to i64
  %333 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %332
  %334 = load i8, ptr %333, align 1, !tbaa !5
  %335 = zext i8 %334 to i32
  br label %343

336:                                              ; preds = %319
  %337 = lshr i32 %329, 8
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %338
  %340 = load i8, ptr %339, align 1, !tbaa !5
  %341 = zext i8 %340 to i32
  %342 = add nuw nsw i32 %341, 16
  br label %343

343:                                              ; preds = %336, %331
  %344 = phi i32 [ %335, %331 ], [ %342, %336 ]
  %345 = load i32, ptr %107, align 4, !tbaa !42
  %346 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %347 = load i16, ptr %346, align 2, !tbaa !37
  %348 = sext i16 %347 to i32
  %349 = getelementptr inbounds [2 x i16], ptr %10, i64 0, i64 1
  %350 = load i16, ptr %349, align 2, !tbaa !37
  %351 = sext i16 %350 to i32
  %352 = sub nsw i32 %348, %351
  %353 = shl nsw i32 %352, 1
  %354 = sub nsw i32 1, %353
  %355 = icmp sgt i32 %352, 0
  %356 = select i1 %355, i32 %353, i32 %354
  %357 = icmp slt i32 %356, 256
  br i1 %357, label %358, label %363

358:                                              ; preds = %343
  %359 = sext i32 %356 to i64
  %360 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %359
  %361 = load i8, ptr %360, align 1, !tbaa !5
  %362 = zext i8 %361 to i32
  br label %370

363:                                              ; preds = %343
  %364 = lshr i32 %356, 8
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %365
  %367 = load i8, ptr %366, align 1, !tbaa !5
  %368 = zext i8 %367 to i32
  %369 = add nuw nsw i32 %368, 16
  br label %370

370:                                              ; preds = %363, %358
  %371 = phi i32 [ %362, %358 ], [ %369, %363 ]
  %372 = add nsw i32 %345, %344
  %373 = add nsw i32 %372, %371
  store i32 %373, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 8, i32 noundef 4, ptr noundef nonnull %9) #17
  %374 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %375 = load i16, ptr %374, align 4, !tbaa !37
  %376 = sext i16 %375 to i32
  %377 = load i16, ptr %9, align 4, !tbaa !37
  %378 = sext i16 %377 to i32
  %379 = sub nsw i32 %376, %378
  %380 = shl nsw i32 %379, 1
  %381 = sub nsw i32 1, %380
  %382 = icmp sgt i32 %379, 0
  %383 = select i1 %382, i32 %380, i32 %381
  %384 = icmp slt i32 %383, 256
  br i1 %384, label %385, label %390

385:                                              ; preds = %370
  %386 = sext i32 %383 to i64
  %387 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %386
  %388 = load i8, ptr %387, align 1, !tbaa !5
  %389 = zext i8 %388 to i32
  br label %397

390:                                              ; preds = %370
  %391 = lshr i32 %383, 8
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !5
  %395 = zext i8 %394 to i32
  %396 = add nuw nsw i32 %395, 16
  br label %397

397:                                              ; preds = %390, %385
  %398 = phi i32 [ %389, %385 ], [ %396, %390 ]
  %399 = load i32, ptr %107, align 4, !tbaa !42
  %400 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28, i64 1
  %401 = load i16, ptr %400, align 2, !tbaa !37
  %402 = sext i16 %401 to i32
  %403 = getelementptr inbounds [2 x i16], ptr %9, i64 0, i64 1
  %404 = load i16, ptr %403, align 2, !tbaa !37
  %405 = sext i16 %404 to i32
  %406 = sub nsw i32 %402, %405
  %407 = shl nsw i32 %406, 1
  %408 = sub nsw i32 1, %407
  %409 = icmp sgt i32 %406, 0
  %410 = select i1 %409, i32 %407, i32 %408
  %411 = icmp slt i32 %410, 256
  br i1 %411, label %412, label %417

412:                                              ; preds = %397
  %413 = sext i32 %410 to i64
  %414 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %413
  %415 = load i8, ptr %414, align 1, !tbaa !5
  %416 = zext i8 %415 to i32
  br label %424

417:                                              ; preds = %397
  %418 = lshr i32 %410, 8
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %419
  %421 = load i8, ptr %420, align 1, !tbaa !5
  %422 = zext i8 %421 to i32
  %423 = add nuw nsw i32 %422, 16
  br label %424

424:                                              ; preds = %417, %412
  %425 = phi i32 [ %416, %412 ], [ %423, %417 ]
  %426 = add nsw i32 %399, %398
  %427 = add nsw i32 %426, %425
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  br label %1655

428:                                              ; preds = %214
  %429 = add nuw nsw i32 %129, 3
  store i32 %429, ptr %107, align 4, !tbaa !42
  %430 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %431 = load i32, ptr %430, align 8, !tbaa !39
  %432 = icmp sgt i32 %431, 1
  br i1 %432, label %433, label %457

433:                                              ; preds = %428
  %434 = icmp eq i32 %431, 2
  br i1 %434, label %435, label %437

435:                                              ; preds = %433
  %436 = or i32 %129, 4
  br label %453

437:                                              ; preds = %433
  %438 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %439 = load i8, ptr %438, align 1, !tbaa !5
  %440 = sext i8 %439 to i64
  %441 = add nsw i64 %440, 1
  %442 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %441
  %443 = load i8, ptr %442, align 1, !tbaa !5
  %444 = zext i8 %443 to i32
  %445 = add nuw nsw i32 %429, %444
  %446 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %447 = load i8, ptr %446, align 1, !tbaa !5
  %448 = sext i8 %447 to i64
  %449 = add nsw i64 %448, 1
  %450 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %449
  %451 = load i8, ptr %450, align 1, !tbaa !5
  %452 = zext i8 %451 to i32
  br label %453

453:                                              ; preds = %437, %435
  %454 = phi i32 [ %436, %435 ], [ %445, %437 ]
  %455 = phi i32 [ 1, %435 ], [ %452, %437 ]
  %456 = add nuw nsw i32 %455, %454
  store i32 %456, ptr %107, align 4, !tbaa !42
  br label %457

457:                                              ; preds = %453, %428
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 2, ptr noundef nonnull %8) #17
  %458 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %459 = load i16, ptr %458, align 4, !tbaa !37
  %460 = sext i16 %459 to i32
  %461 = load i16, ptr %8, align 4, !tbaa !37
  %462 = sext i16 %461 to i32
  %463 = sub nsw i32 %460, %462
  %464 = shl nsw i32 %463, 1
  %465 = sub nsw i32 1, %464
  %466 = icmp sgt i32 %463, 0
  %467 = select i1 %466, i32 %464, i32 %465
  %468 = icmp slt i32 %467, 256
  br i1 %468, label %469, label %474

469:                                              ; preds = %457
  %470 = sext i32 %467 to i64
  %471 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %470
  %472 = load i8, ptr %471, align 1, !tbaa !5
  %473 = zext i8 %472 to i32
  br label %481

474:                                              ; preds = %457
  %475 = lshr i32 %467, 8
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %476
  %478 = load i8, ptr %477, align 1, !tbaa !5
  %479 = zext i8 %478 to i32
  %480 = add nuw nsw i32 %479, 16
  br label %481

481:                                              ; preds = %474, %469
  %482 = phi i32 [ %473, %469 ], [ %480, %474 ]
  %483 = load i32, ptr %107, align 4, !tbaa !42
  %484 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %485 = load i16, ptr %484, align 2, !tbaa !37
  %486 = sext i16 %485 to i32
  %487 = getelementptr inbounds [2 x i16], ptr %8, i64 0, i64 1
  %488 = load i16, ptr %487, align 2, !tbaa !37
  %489 = sext i16 %488 to i32
  %490 = sub nsw i32 %486, %489
  %491 = shl nsw i32 %490, 1
  %492 = sub nsw i32 1, %491
  %493 = icmp sgt i32 %490, 0
  %494 = select i1 %493, i32 %491, i32 %492
  %495 = icmp slt i32 %494, 256
  br i1 %495, label %496, label %501

496:                                              ; preds = %481
  %497 = sext i32 %494 to i64
  %498 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %497
  %499 = load i8, ptr %498, align 1, !tbaa !5
  %500 = zext i8 %499 to i32
  br label %508

501:                                              ; preds = %481
  %502 = lshr i32 %494, 8
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %503
  %505 = load i8, ptr %504, align 1, !tbaa !5
  %506 = zext i8 %505 to i32
  %507 = add nuw nsw i32 %506, 16
  br label %508

508:                                              ; preds = %501, %496
  %509 = phi i32 [ %500, %496 ], [ %507, %501 ]
  %510 = add nsw i32 %483, %482
  %511 = add nsw i32 %510, %509
  store i32 %511, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %7) #17
  %512 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %513 = load i16, ptr %512, align 4, !tbaa !37
  %514 = sext i16 %513 to i32
  %515 = load i16, ptr %7, align 4, !tbaa !37
  %516 = sext i16 %515 to i32
  %517 = sub nsw i32 %514, %516
  %518 = shl nsw i32 %517, 1
  %519 = sub nsw i32 1, %518
  %520 = icmp sgt i32 %517, 0
  %521 = select i1 %520, i32 %518, i32 %519
  %522 = icmp slt i32 %521, 256
  br i1 %522, label %523, label %528

523:                                              ; preds = %508
  %524 = sext i32 %521 to i64
  %525 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %524
  %526 = load i8, ptr %525, align 1, !tbaa !5
  %527 = zext i8 %526 to i32
  br label %535

528:                                              ; preds = %508
  %529 = lshr i32 %521, 8
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %530
  %532 = load i8, ptr %531, align 1, !tbaa !5
  %533 = zext i8 %532 to i32
  %534 = add nuw nsw i32 %533, 16
  br label %535

535:                                              ; preds = %528, %523
  %536 = phi i32 [ %527, %523 ], [ %534, %528 ]
  %537 = load i32, ptr %107, align 4, !tbaa !42
  %538 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14, i64 1
  %539 = load i16, ptr %538, align 2, !tbaa !37
  %540 = sext i16 %539 to i32
  %541 = getelementptr inbounds [2 x i16], ptr %7, i64 0, i64 1
  %542 = load i16, ptr %541, align 2, !tbaa !37
  %543 = sext i16 %542 to i32
  %544 = sub nsw i32 %540, %543
  %545 = shl nsw i32 %544, 1
  %546 = sub nsw i32 1, %545
  %547 = icmp sgt i32 %544, 0
  %548 = select i1 %547, i32 %545, i32 %546
  %549 = icmp slt i32 %548, 256
  br i1 %549, label %550, label %555

550:                                              ; preds = %535
  %551 = sext i32 %548 to i64
  %552 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %551
  %553 = load i8, ptr %552, align 1, !tbaa !5
  %554 = zext i8 %553 to i32
  br label %562

555:                                              ; preds = %535
  %556 = lshr i32 %548, 8
  %557 = zext i32 %556 to i64
  %558 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %557
  %559 = load i8, ptr %558, align 1, !tbaa !5
  %560 = zext i8 %559 to i32
  %561 = add nuw nsw i32 %560, 16
  br label %562

562:                                              ; preds = %555, %550
  %563 = phi i32 [ %554, %550 ], [ %561, %555 ]
  %564 = add nsw i32 %537, %536
  %565 = add nsw i32 %564, %563
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #17
  br label %1655

566:                                              ; preds = %186
  %567 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %568 = load i8, ptr %567, align 1, !tbaa !5
  %569 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %570 = load i8, ptr %569, align 1, !tbaa !5
  %571 = or i8 %570, %568
  %572 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %573 = load i8, ptr %572, align 1, !tbaa !5
  %574 = or i8 %571, %573
  %575 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %576 = load i8, ptr %575, align 1, !tbaa !5
  %577 = or i8 %574, %576
  %578 = icmp eq i8 %577, 0
  %579 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 1
  %580 = load i32, ptr %579, align 4, !tbaa !73
  %581 = and i32 %580, 32
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %629, label %583

583:                                              ; preds = %566
  %584 = add nuw nsw i32 %129, 5
  %585 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %586 = load i8, ptr %585, align 1, !tbaa !5
  %587 = zext i8 %586 to i64
  %588 = getelementptr inbounds [4 x i8], ptr @sub_mb_type_p_to_golomb, i64 0, i64 %587
  %589 = load i8, ptr %588, align 1, !tbaa !5
  %590 = zext i8 %589 to i64
  %591 = add nuw nsw i64 %590, 1
  %592 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %591
  %593 = load i8, ptr %592, align 1, !tbaa !5
  %594 = zext i8 %593 to i32
  %595 = add nuw nsw i32 %584, %594
  %596 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %597 = load i8, ptr %596, align 1, !tbaa !5
  %598 = zext i8 %597 to i64
  %599 = getelementptr inbounds [4 x i8], ptr @sub_mb_type_p_to_golomb, i64 0, i64 %598
  %600 = load i8, ptr %599, align 1, !tbaa !5
  %601 = zext i8 %600 to i64
  %602 = add nuw nsw i64 %601, 1
  %603 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %602
  %604 = load i8, ptr %603, align 1, !tbaa !5
  %605 = zext i8 %604 to i32
  %606 = add nuw nsw i32 %595, %605
  %607 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %608 = load i8, ptr %607, align 1, !tbaa !5
  %609 = zext i8 %608 to i64
  %610 = getelementptr inbounds [4 x i8], ptr @sub_mb_type_p_to_golomb, i64 0, i64 %609
  %611 = load i8, ptr %610, align 1, !tbaa !5
  %612 = zext i8 %611 to i64
  %613 = add nuw nsw i64 %612, 1
  %614 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %613
  %615 = load i8, ptr %614, align 1, !tbaa !5
  %616 = zext i8 %615 to i32
  %617 = add nuw nsw i32 %606, %616
  %618 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %619 = load i8, ptr %618, align 1, !tbaa !5
  %620 = zext i8 %619 to i64
  %621 = getelementptr inbounds [4 x i8], ptr @sub_mb_type_p_to_golomb, i64 0, i64 %620
  %622 = load i8, ptr %621, align 1, !tbaa !5
  %623 = zext i8 %622 to i64
  %624 = add nuw nsw i64 %623, 1
  %625 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %624
  %626 = load i8, ptr %625, align 1, !tbaa !5
  %627 = zext i8 %626 to i32
  %628 = add nuw nsw i32 %617, %627
  br label %631

629:                                              ; preds = %566
  %630 = add nuw nsw i32 %129, 9
  br label %631

631:                                              ; preds = %629, %583
  %632 = phi i32 [ %628, %583 ], [ %630, %629 ]
  store i32 %632, ptr %107, align 4, !tbaa !42
  br i1 %578, label %667, label %633

633:                                              ; preds = %631
  %634 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %635 = load i32, ptr %634, align 8, !tbaa !39
  %636 = icmp eq i32 %635, 2
  br i1 %636, label %637, label %639

637:                                              ; preds = %633
  %638 = add nuw nsw i32 %632, 3
  br label %663

639:                                              ; preds = %633
  %640 = sext i8 %568 to i64
  %641 = add nsw i64 %640, 1
  %642 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %641
  %643 = load i8, ptr %642, align 1, !tbaa !5
  %644 = zext i8 %643 to i32
  %645 = add nuw nsw i32 %632, %644
  %646 = sext i8 %570 to i64
  %647 = add nsw i64 %646, 1
  %648 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %647
  %649 = load i8, ptr %648, align 1, !tbaa !5
  %650 = zext i8 %649 to i32
  %651 = add nuw nsw i32 %645, %650
  %652 = sext i8 %573 to i64
  %653 = add nsw i64 %652, 1
  %654 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %653
  %655 = load i8, ptr %654, align 1, !tbaa !5
  %656 = zext i8 %655 to i32
  %657 = add nuw nsw i32 %651, %656
  %658 = sext i8 %576 to i64
  %659 = add nsw i64 %658, 1
  %660 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %659
  %661 = load i8, ptr %660, align 1, !tbaa !5
  %662 = zext i8 %661 to i32
  br label %663

663:                                              ; preds = %639, %637
  %664 = phi i32 [ %638, %637 ], [ %657, %639 ]
  %665 = phi i32 [ 1, %637 ], [ %662, %639 ]
  %666 = add nuw nsw i32 %665, %664
  store i32 %666, ptr %107, align 4, !tbaa !42
  br label %667

667:                                              ; preds = %663, %631
  tail call fastcc void @cavlc_mb8x8_mvd(ptr noundef nonnull %0, i32 noundef 0)
  tail call fastcc void @cavlc_mb8x8_mvd(ptr noundef nonnull %0, i32 noundef 1)
  tail call fastcc void @cavlc_mb8x8_mvd(ptr noundef nonnull %0, i32 noundef 2)
  tail call fastcc void @cavlc_mb8x8_mvd(ptr noundef nonnull %0, i32 noundef 3)
  br label %1653

668:                                              ; preds = %186
  %669 = add nuw nsw i32 %129, 9
  %670 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %671 = load i8, ptr %670, align 1, !tbaa !5
  %672 = zext i8 %671 to i64
  %673 = getelementptr inbounds [13 x i8], ptr @sub_mb_type_b_to_golomb, i64 0, i64 %672
  %674 = load i8, ptr %673, align 1, !tbaa !5
  %675 = zext i8 %674 to i64
  %676 = add nuw nsw i64 %675, 1
  %677 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %676
  %678 = load i8, ptr %677, align 1, !tbaa !5
  %679 = zext i8 %678 to i32
  %680 = add nuw nsw i32 %669, %679
  %681 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %682 = load i8, ptr %681, align 1, !tbaa !5
  %683 = zext i8 %682 to i64
  %684 = getelementptr inbounds [13 x i8], ptr @sub_mb_type_b_to_golomb, i64 0, i64 %683
  %685 = load i8, ptr %684, align 1, !tbaa !5
  %686 = zext i8 %685 to i64
  %687 = add nuw nsw i64 %686, 1
  %688 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %687
  %689 = load i8, ptr %688, align 1, !tbaa !5
  %690 = zext i8 %689 to i32
  %691 = add nuw nsw i32 %680, %690
  %692 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %693 = load i8, ptr %692, align 1, !tbaa !5
  %694 = zext i8 %693 to i64
  %695 = getelementptr inbounds [13 x i8], ptr @sub_mb_type_b_to_golomb, i64 0, i64 %694
  %696 = load i8, ptr %695, align 1, !tbaa !5
  %697 = zext i8 %696 to i64
  %698 = add nuw nsw i64 %697, 1
  %699 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %698
  %700 = load i8, ptr %699, align 1, !tbaa !5
  %701 = zext i8 %700 to i32
  %702 = add nuw nsw i32 %691, %701
  %703 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %704 = load i8, ptr %703, align 1, !tbaa !5
  %705 = zext i8 %704 to i64
  %706 = getelementptr inbounds [13 x i8], ptr @sub_mb_type_b_to_golomb, i64 0, i64 %705
  %707 = load i8, ptr %706, align 1, !tbaa !5
  %708 = zext i8 %707 to i64
  %709 = add nuw nsw i64 %708, 1
  %710 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %709
  %711 = load i8, ptr %710, align 1, !tbaa !5
  %712 = zext i8 %711 to i32
  %713 = add nuw nsw i32 %702, %712
  store i32 %713, ptr %107, align 4, !tbaa !42
  %714 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %715 = load i32, ptr %714, align 8, !tbaa !39
  %716 = icmp sgt i32 %715, 1
  br i1 %716, label %717, label %785

717:                                              ; preds = %668
  %718 = icmp eq i32 %715, 2
  %719 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %672
  %720 = load i8, ptr %719, align 1, !tbaa !5
  %721 = icmp eq i8 %720, 0
  br i1 %721, label %734, label %722

722:                                              ; preds = %717
  br i1 %718, label %731, label %723

723:                                              ; preds = %722
  %724 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %725 = load i8, ptr %724, align 1, !tbaa !5
  %726 = sext i8 %725 to i64
  %727 = add nsw i64 %726, 1
  %728 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %727
  %729 = load i8, ptr %728, align 1, !tbaa !5
  %730 = zext i8 %729 to i32
  br label %731

731:                                              ; preds = %723, %722
  %732 = phi i32 [ %730, %723 ], [ 1, %722 ]
  %733 = add nuw nsw i32 %732, %713
  store i32 %733, ptr %107, align 4, !tbaa !42
  br label %734

734:                                              ; preds = %731, %717
  %735 = phi i32 [ %713, %717 ], [ %733, %731 ]
  %736 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %683
  %737 = load i8, ptr %736, align 1, !tbaa !5
  %738 = icmp eq i8 %737, 0
  br i1 %738, label %751, label %739

739:                                              ; preds = %734
  br i1 %718, label %748, label %740

740:                                              ; preds = %739
  %741 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %742 = load i8, ptr %741, align 1, !tbaa !5
  %743 = sext i8 %742 to i64
  %744 = add nsw i64 %743, 1
  %745 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %744
  %746 = load i8, ptr %745, align 1, !tbaa !5
  %747 = zext i8 %746 to i32
  br label %748

748:                                              ; preds = %740, %739
  %749 = phi i32 [ %747, %740 ], [ 1, %739 ]
  %750 = add nuw nsw i32 %749, %735
  store i32 %750, ptr %107, align 4, !tbaa !42
  br label %751

751:                                              ; preds = %748, %734
  %752 = phi i32 [ %750, %748 ], [ %735, %734 ]
  %753 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %694
  %754 = load i8, ptr %753, align 1, !tbaa !5
  %755 = icmp eq i8 %754, 0
  br i1 %755, label %768, label %756

756:                                              ; preds = %751
  br i1 %718, label %765, label %757

757:                                              ; preds = %756
  %758 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %759 = load i8, ptr %758, align 1, !tbaa !5
  %760 = sext i8 %759 to i64
  %761 = add nsw i64 %760, 1
  %762 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %761
  %763 = load i8, ptr %762, align 1, !tbaa !5
  %764 = zext i8 %763 to i32
  br label %765

765:                                              ; preds = %757, %756
  %766 = phi i32 [ %764, %757 ], [ 1, %756 ]
  %767 = add nuw nsw i32 %766, %752
  store i32 %767, ptr %107, align 4, !tbaa !42
  br label %768

768:                                              ; preds = %765, %751
  %769 = phi i32 [ %767, %765 ], [ %752, %751 ]
  %770 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %705
  %771 = load i8, ptr %770, align 1, !tbaa !5
  %772 = icmp eq i8 %771, 0
  br i1 %772, label %785, label %773

773:                                              ; preds = %768
  br i1 %718, label %782, label %774

774:                                              ; preds = %773
  %775 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %776 = load i8, ptr %775, align 1, !tbaa !5
  %777 = sext i8 %776 to i64
  %778 = add nsw i64 %777, 1
  %779 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %778
  %780 = load i8, ptr %779, align 1, !tbaa !5
  %781 = zext i8 %780 to i32
  br label %782

782:                                              ; preds = %774, %773
  %783 = phi i32 [ %781, %774 ], [ 1, %773 ]
  %784 = add nuw nsw i32 %783, %769
  store i32 %784, ptr %107, align 4, !tbaa !42
  br label %785

785:                                              ; preds = %782, %768, %668
  %786 = phi i32 [ %713, %668 ], [ %784, %782 ], [ %769, %768 ]
  %787 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 1
  %788 = load i32, ptr %787, align 4, !tbaa !39
  %789 = icmp sgt i32 %788, 1
  br i1 %789, label %790, label %858

790:                                              ; preds = %785
  %791 = icmp eq i32 %788, 2
  %792 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %672
  %793 = load i8, ptr %792, align 1, !tbaa !5
  %794 = icmp eq i8 %793, 0
  br i1 %794, label %807, label %795

795:                                              ; preds = %790
  br i1 %791, label %804, label %796

796:                                              ; preds = %795
  %797 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %798 = load i8, ptr %797, align 1, !tbaa !5
  %799 = sext i8 %798 to i64
  %800 = add nsw i64 %799, 1
  %801 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %800
  %802 = load i8, ptr %801, align 1, !tbaa !5
  %803 = zext i8 %802 to i32
  br label %804

804:                                              ; preds = %796, %795
  %805 = phi i32 [ %803, %796 ], [ 1, %795 ]
  %806 = add nuw nsw i32 %805, %786
  store i32 %806, ptr %107, align 4, !tbaa !42
  br label %807

807:                                              ; preds = %804, %790
  %808 = phi i32 [ %786, %790 ], [ %806, %804 ]
  %809 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %683
  %810 = load i8, ptr %809, align 1, !tbaa !5
  %811 = icmp eq i8 %810, 0
  br i1 %811, label %824, label %812

812:                                              ; preds = %807
  br i1 %791, label %821, label %813

813:                                              ; preds = %812
  %814 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 14
  %815 = load i8, ptr %814, align 1, !tbaa !5
  %816 = sext i8 %815 to i64
  %817 = add nsw i64 %816, 1
  %818 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %817
  %819 = load i8, ptr %818, align 1, !tbaa !5
  %820 = zext i8 %819 to i32
  br label %821

821:                                              ; preds = %813, %812
  %822 = phi i32 [ %820, %813 ], [ 1, %812 ]
  %823 = add nuw nsw i32 %822, %808
  store i32 %823, ptr %107, align 4, !tbaa !42
  br label %824

824:                                              ; preds = %821, %807
  %825 = phi i32 [ %823, %821 ], [ %808, %807 ]
  %826 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %694
  %827 = load i8, ptr %826, align 1, !tbaa !5
  %828 = icmp eq i8 %827, 0
  br i1 %828, label %841, label %829

829:                                              ; preds = %824
  br i1 %791, label %838, label %830

830:                                              ; preds = %829
  %831 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  %832 = load i8, ptr %831, align 1, !tbaa !5
  %833 = sext i8 %832 to i64
  %834 = add nsw i64 %833, 1
  %835 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %834
  %836 = load i8, ptr %835, align 1, !tbaa !5
  %837 = zext i8 %836 to i32
  br label %838

838:                                              ; preds = %830, %829
  %839 = phi i32 [ %837, %830 ], [ 1, %829 ]
  %840 = add nuw nsw i32 %839, %825
  store i32 %840, ptr %107, align 4, !tbaa !42
  br label %841

841:                                              ; preds = %838, %824
  %842 = phi i32 [ %840, %838 ], [ %825, %824 ]
  %843 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %705
  %844 = load i8, ptr %843, align 1, !tbaa !5
  %845 = icmp eq i8 %844, 0
  br i1 %845, label %858, label %846

846:                                              ; preds = %841
  br i1 %791, label %855, label %847

847:                                              ; preds = %846
  %848 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 30
  %849 = load i8, ptr %848, align 1, !tbaa !5
  %850 = sext i8 %849 to i64
  %851 = add nsw i64 %850, 1
  %852 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %851
  %853 = load i8, ptr %852, align 1, !tbaa !5
  %854 = zext i8 %853 to i32
  br label %855

855:                                              ; preds = %847, %846
  %856 = phi i32 [ %854, %847 ], [ 1, %846 ]
  %857 = add nuw nsw i32 %856, %842
  store i32 %857, ptr %107, align 4, !tbaa !42
  br label %858

858:                                              ; preds = %855, %841, %785
  %859 = getelementptr inbounds [2 x i16], ptr %6, i64 0, i64 1
  %860 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %672
  %861 = load i8, ptr %860, align 1, !tbaa !5
  %862 = icmp eq i8 %861, 0
  br i1 %862, label %919, label %863

863:                                              ; preds = %858
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 2, ptr noundef nonnull %6) #17
  %864 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %865 = load i16, ptr %864, align 4, !tbaa !37
  %866 = sext i16 %865 to i32
  %867 = load i16, ptr %6, align 4, !tbaa !37
  %868 = sext i16 %867 to i32
  %869 = sub nsw i32 %866, %868
  %870 = shl nsw i32 %869, 1
  %871 = sub nsw i32 1, %870
  %872 = icmp sgt i32 %869, 0
  %873 = select i1 %872, i32 %870, i32 %871
  %874 = icmp slt i32 %873, 256
  br i1 %874, label %875, label %880

875:                                              ; preds = %863
  %876 = sext i32 %873 to i64
  %877 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %876
  %878 = load i8, ptr %877, align 1, !tbaa !5
  %879 = zext i8 %878 to i32
  br label %887

880:                                              ; preds = %863
  %881 = lshr i32 %873, 8
  %882 = zext i32 %881 to i64
  %883 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %882
  %884 = load i8, ptr %883, align 1, !tbaa !5
  %885 = zext i8 %884 to i32
  %886 = add nuw nsw i32 %885, 16
  br label %887

887:                                              ; preds = %880, %875
  %888 = phi i32 [ %879, %875 ], [ %886, %880 ]
  %889 = load i32, ptr %107, align 4, !tbaa !42
  %890 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %891 = load i16, ptr %890, align 2, !tbaa !37
  %892 = sext i16 %891 to i32
  %893 = load i16, ptr %859, align 2, !tbaa !37
  %894 = sext i16 %893 to i32
  %895 = sub nsw i32 %892, %894
  %896 = shl nsw i32 %895, 1
  %897 = sub nsw i32 1, %896
  %898 = icmp sgt i32 %895, 0
  %899 = select i1 %898, i32 %896, i32 %897
  %900 = icmp slt i32 %899, 256
  br i1 %900, label %901, label %906

901:                                              ; preds = %887
  %902 = sext i32 %899 to i64
  %903 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %902
  %904 = load i8, ptr %903, align 1, !tbaa !5
  %905 = zext i8 %904 to i32
  br label %913

906:                                              ; preds = %887
  %907 = lshr i32 %899, 8
  %908 = zext i32 %907 to i64
  %909 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %908
  %910 = load i8, ptr %909, align 1, !tbaa !5
  %911 = zext i8 %910 to i32
  %912 = add nuw nsw i32 %911, 16
  br label %913

913:                                              ; preds = %906, %901
  %914 = phi i32 [ %905, %901 ], [ %912, %906 ]
  %915 = add nsw i32 %889, %888
  %916 = add nsw i32 %915, %914
  store i32 %916, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  %917 = load i8, ptr %681, align 1, !tbaa !5
  %918 = zext i8 %917 to i64
  br label %919

919:                                              ; preds = %913, %858
  %920 = phi i64 [ %683, %858 ], [ %918, %913 ]
  %921 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %920
  %922 = load i8, ptr %921, align 1, !tbaa !5
  %923 = icmp eq i8 %922, 0
  br i1 %923, label %978, label %924

924:                                              ; preds = %919
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %6) #17
  %925 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %926 = load i16, ptr %925, align 4, !tbaa !37
  %927 = sext i16 %926 to i32
  %928 = load i16, ptr %6, align 4, !tbaa !37
  %929 = sext i16 %928 to i32
  %930 = sub nsw i32 %927, %929
  %931 = shl nsw i32 %930, 1
  %932 = sub nsw i32 1, %931
  %933 = icmp sgt i32 %930, 0
  %934 = select i1 %933, i32 %931, i32 %932
  %935 = icmp slt i32 %934, 256
  br i1 %935, label %943, label %936

936:                                              ; preds = %924
  %937 = lshr i32 %934, 8
  %938 = zext i32 %937 to i64
  %939 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %938
  %940 = load i8, ptr %939, align 1, !tbaa !5
  %941 = zext i8 %940 to i32
  %942 = add nuw nsw i32 %941, 16
  br label %948

943:                                              ; preds = %924
  %944 = sext i32 %934 to i64
  %945 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %944
  %946 = load i8, ptr %945, align 1, !tbaa !5
  %947 = zext i8 %946 to i32
  br label %948

948:                                              ; preds = %943, %936
  %949 = phi i32 [ %947, %943 ], [ %942, %936 ]
  %950 = load i32, ptr %107, align 4, !tbaa !42
  %951 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14, i64 1
  %952 = load i16, ptr %951, align 2, !tbaa !37
  %953 = sext i16 %952 to i32
  %954 = load i16, ptr %859, align 2, !tbaa !37
  %955 = sext i16 %954 to i32
  %956 = sub nsw i32 %953, %955
  %957 = shl nsw i32 %956, 1
  %958 = sub nsw i32 1, %957
  %959 = icmp sgt i32 %956, 0
  %960 = select i1 %959, i32 %957, i32 %958
  %961 = icmp slt i32 %960, 256
  br i1 %961, label %969, label %962

962:                                              ; preds = %948
  %963 = lshr i32 %960, 8
  %964 = zext i32 %963 to i64
  %965 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %964
  %966 = load i8, ptr %965, align 1, !tbaa !5
  %967 = zext i8 %966 to i32
  %968 = add nuw nsw i32 %967, 16
  br label %974

969:                                              ; preds = %948
  %970 = sext i32 %960 to i64
  %971 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %970
  %972 = load i8, ptr %971, align 1, !tbaa !5
  %973 = zext i8 %972 to i32
  br label %974

974:                                              ; preds = %969, %962
  %975 = phi i32 [ %973, %969 ], [ %968, %962 ]
  %976 = add nsw i32 %950, %949
  %977 = add nsw i32 %976, %975
  store i32 %977, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  br label %978

978:                                              ; preds = %974, %919
  %979 = load i8, ptr %692, align 1, !tbaa !5
  %980 = zext i8 %979 to i64
  %981 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %980
  %982 = load i8, ptr %981, align 1, !tbaa !5
  %983 = icmp eq i8 %982, 0
  br i1 %983, label %1038, label %984

984:                                              ; preds = %978
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 8, i32 noundef 2, ptr noundef nonnull %6) #17
  %985 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %986 = load i16, ptr %985, align 4, !tbaa !37
  %987 = sext i16 %986 to i32
  %988 = load i16, ptr %6, align 4, !tbaa !37
  %989 = sext i16 %988 to i32
  %990 = sub nsw i32 %987, %989
  %991 = shl nsw i32 %990, 1
  %992 = sub nsw i32 1, %991
  %993 = icmp sgt i32 %990, 0
  %994 = select i1 %993, i32 %991, i32 %992
  %995 = icmp slt i32 %994, 256
  br i1 %995, label %1003, label %996

996:                                              ; preds = %984
  %997 = lshr i32 %994, 8
  %998 = zext i32 %997 to i64
  %999 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %998
  %1000 = load i8, ptr %999, align 1, !tbaa !5
  %1001 = zext i8 %1000 to i32
  %1002 = add nuw nsw i32 %1001, 16
  br label %1008

1003:                                             ; preds = %984
  %1004 = sext i32 %994 to i64
  %1005 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1004
  %1006 = load i8, ptr %1005, align 1, !tbaa !5
  %1007 = zext i8 %1006 to i32
  br label %1008

1008:                                             ; preds = %1003, %996
  %1009 = phi i32 [ %1007, %1003 ], [ %1002, %996 ]
  %1010 = load i32, ptr %107, align 4, !tbaa !42
  %1011 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28, i64 1
  %1012 = load i16, ptr %1011, align 2, !tbaa !37
  %1013 = sext i16 %1012 to i32
  %1014 = load i16, ptr %859, align 2, !tbaa !37
  %1015 = sext i16 %1014 to i32
  %1016 = sub nsw i32 %1013, %1015
  %1017 = shl nsw i32 %1016, 1
  %1018 = sub nsw i32 1, %1017
  %1019 = icmp sgt i32 %1016, 0
  %1020 = select i1 %1019, i32 %1017, i32 %1018
  %1021 = icmp slt i32 %1020, 256
  br i1 %1021, label %1029, label %1022

1022:                                             ; preds = %1008
  %1023 = lshr i32 %1020, 8
  %1024 = zext i32 %1023 to i64
  %1025 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1024
  %1026 = load i8, ptr %1025, align 1, !tbaa !5
  %1027 = zext i8 %1026 to i32
  %1028 = add nuw nsw i32 %1027, 16
  br label %1034

1029:                                             ; preds = %1008
  %1030 = sext i32 %1020 to i64
  %1031 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1030
  %1032 = load i8, ptr %1031, align 1, !tbaa !5
  %1033 = zext i8 %1032 to i32
  br label %1034

1034:                                             ; preds = %1029, %1022
  %1035 = phi i32 [ %1033, %1029 ], [ %1028, %1022 ]
  %1036 = add nsw i32 %1010, %1009
  %1037 = add nsw i32 %1036, %1035
  store i32 %1037, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  br label %1038

1038:                                             ; preds = %1034, %978
  %1039 = load i8, ptr %703, align 1, !tbaa !5
  %1040 = zext i8 %1039 to i64
  %1041 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %1040
  %1042 = load i8, ptr %1041, align 1, !tbaa !5
  %1043 = icmp eq i8 %1042, 0
  br i1 %1043, label %1098, label %1044

1044:                                             ; preds = %1038
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 12, i32 noundef 2, ptr noundef nonnull %6) #17
  %1045 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  %1046 = load i16, ptr %1045, align 4, !tbaa !37
  %1047 = sext i16 %1046 to i32
  %1048 = load i16, ptr %6, align 4, !tbaa !37
  %1049 = sext i16 %1048 to i32
  %1050 = sub nsw i32 %1047, %1049
  %1051 = shl nsw i32 %1050, 1
  %1052 = sub nsw i32 1, %1051
  %1053 = icmp sgt i32 %1050, 0
  %1054 = select i1 %1053, i32 %1051, i32 %1052
  %1055 = icmp slt i32 %1054, 256
  br i1 %1055, label %1063, label %1056

1056:                                             ; preds = %1044
  %1057 = lshr i32 %1054, 8
  %1058 = zext i32 %1057 to i64
  %1059 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1058
  %1060 = load i8, ptr %1059, align 1, !tbaa !5
  %1061 = zext i8 %1060 to i32
  %1062 = add nuw nsw i32 %1061, 16
  br label %1068

1063:                                             ; preds = %1044
  %1064 = sext i32 %1054 to i64
  %1065 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1064
  %1066 = load i8, ptr %1065, align 1, !tbaa !5
  %1067 = zext i8 %1066 to i32
  br label %1068

1068:                                             ; preds = %1063, %1056
  %1069 = phi i32 [ %1067, %1063 ], [ %1062, %1056 ]
  %1070 = load i32, ptr %107, align 4, !tbaa !42
  %1071 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30, i64 1
  %1072 = load i16, ptr %1071, align 2, !tbaa !37
  %1073 = sext i16 %1072 to i32
  %1074 = load i16, ptr %859, align 2, !tbaa !37
  %1075 = sext i16 %1074 to i32
  %1076 = sub nsw i32 %1073, %1075
  %1077 = shl nsw i32 %1076, 1
  %1078 = sub nsw i32 1, %1077
  %1079 = icmp sgt i32 %1076, 0
  %1080 = select i1 %1079, i32 %1077, i32 %1078
  %1081 = icmp slt i32 %1080, 256
  br i1 %1081, label %1089, label %1082

1082:                                             ; preds = %1068
  %1083 = lshr i32 %1080, 8
  %1084 = zext i32 %1083 to i64
  %1085 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1084
  %1086 = load i8, ptr %1085, align 1, !tbaa !5
  %1087 = zext i8 %1086 to i32
  %1088 = add nuw nsw i32 %1087, 16
  br label %1094

1089:                                             ; preds = %1068
  %1090 = sext i32 %1080 to i64
  %1091 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1090
  %1092 = load i8, ptr %1091, align 1, !tbaa !5
  %1093 = zext i8 %1092 to i32
  br label %1094

1094:                                             ; preds = %1089, %1082
  %1095 = phi i32 [ %1093, %1089 ], [ %1088, %1082 ]
  %1096 = add nsw i32 %1070, %1069
  %1097 = add nsw i32 %1096, %1095
  store i32 %1097, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  br label %1098

1098:                                             ; preds = %1094, %1038
  %1099 = getelementptr inbounds [2 x i16], ptr %5, i64 0, i64 1
  %1100 = load i8, ptr %670, align 1, !tbaa !5
  %1101 = zext i8 %1100 to i64
  %1102 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %1101
  %1103 = load i8, ptr %1102, align 1, !tbaa !5
  %1104 = icmp eq i8 %1103, 0
  br i1 %1104, label %1159, label %1105

1105:                                             ; preds = %1098
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 0, i32 noundef 2, ptr noundef nonnull %5) #17
  %1106 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %1107 = load i16, ptr %1106, align 4, !tbaa !37
  %1108 = sext i16 %1107 to i32
  %1109 = load i16, ptr %5, align 4, !tbaa !37
  %1110 = sext i16 %1109 to i32
  %1111 = sub nsw i32 %1108, %1110
  %1112 = shl nsw i32 %1111, 1
  %1113 = sub nsw i32 1, %1112
  %1114 = icmp sgt i32 %1111, 0
  %1115 = select i1 %1114, i32 %1112, i32 %1113
  %1116 = icmp slt i32 %1115, 256
  br i1 %1116, label %1117, label %1122

1117:                                             ; preds = %1105
  %1118 = sext i32 %1115 to i64
  %1119 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1118
  %1120 = load i8, ptr %1119, align 1, !tbaa !5
  %1121 = zext i8 %1120 to i32
  br label %1129

1122:                                             ; preds = %1105
  %1123 = lshr i32 %1115, 8
  %1124 = zext i32 %1123 to i64
  %1125 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1124
  %1126 = load i8, ptr %1125, align 1, !tbaa !5
  %1127 = zext i8 %1126 to i32
  %1128 = add nuw nsw i32 %1127, 16
  br label %1129

1129:                                             ; preds = %1122, %1117
  %1130 = phi i32 [ %1121, %1117 ], [ %1128, %1122 ]
  %1131 = load i32, ptr %107, align 4, !tbaa !42
  %1132 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12, i64 1
  %1133 = load i16, ptr %1132, align 2, !tbaa !37
  %1134 = sext i16 %1133 to i32
  %1135 = load i16, ptr %1099, align 2, !tbaa !37
  %1136 = sext i16 %1135 to i32
  %1137 = sub nsw i32 %1134, %1136
  %1138 = shl nsw i32 %1137, 1
  %1139 = sub nsw i32 1, %1138
  %1140 = icmp sgt i32 %1137, 0
  %1141 = select i1 %1140, i32 %1138, i32 %1139
  %1142 = icmp slt i32 %1141, 256
  br i1 %1142, label %1143, label %1148

1143:                                             ; preds = %1129
  %1144 = sext i32 %1141 to i64
  %1145 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1144
  %1146 = load i8, ptr %1145, align 1, !tbaa !5
  %1147 = zext i8 %1146 to i32
  br label %1155

1148:                                             ; preds = %1129
  %1149 = lshr i32 %1141, 8
  %1150 = zext i32 %1149 to i64
  %1151 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1150
  %1152 = load i8, ptr %1151, align 1, !tbaa !5
  %1153 = zext i8 %1152 to i32
  %1154 = add nuw nsw i32 %1153, 16
  br label %1155

1155:                                             ; preds = %1148, %1143
  %1156 = phi i32 [ %1147, %1143 ], [ %1154, %1148 ]
  %1157 = add nsw i32 %1131, %1130
  %1158 = add nsw i32 %1157, %1156
  store i32 %1158, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  br label %1159

1159:                                             ; preds = %1155, %1098
  %1160 = load i8, ptr %681, align 1, !tbaa !5
  %1161 = zext i8 %1160 to i64
  %1162 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %1161
  %1163 = load i8, ptr %1162, align 1, !tbaa !5
  %1164 = icmp eq i8 %1163, 0
  br i1 %1164, label %1219, label %1165

1165:                                             ; preds = %1159
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %5) #17
  %1166 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  %1167 = load i16, ptr %1166, align 4, !tbaa !37
  %1168 = sext i16 %1167 to i32
  %1169 = load i16, ptr %5, align 4, !tbaa !37
  %1170 = sext i16 %1169 to i32
  %1171 = sub nsw i32 %1168, %1170
  %1172 = shl nsw i32 %1171, 1
  %1173 = sub nsw i32 1, %1172
  %1174 = icmp sgt i32 %1171, 0
  %1175 = select i1 %1174, i32 %1172, i32 %1173
  %1176 = icmp slt i32 %1175, 256
  br i1 %1176, label %1184, label %1177

1177:                                             ; preds = %1165
  %1178 = lshr i32 %1175, 8
  %1179 = zext i32 %1178 to i64
  %1180 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1179
  %1181 = load i8, ptr %1180, align 1, !tbaa !5
  %1182 = zext i8 %1181 to i32
  %1183 = add nuw nsw i32 %1182, 16
  br label %1189

1184:                                             ; preds = %1165
  %1185 = sext i32 %1175 to i64
  %1186 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1185
  %1187 = load i8, ptr %1186, align 1, !tbaa !5
  %1188 = zext i8 %1187 to i32
  br label %1189

1189:                                             ; preds = %1184, %1177
  %1190 = phi i32 [ %1188, %1184 ], [ %1183, %1177 ]
  %1191 = load i32, ptr %107, align 4, !tbaa !42
  %1192 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14, i64 1
  %1193 = load i16, ptr %1192, align 2, !tbaa !37
  %1194 = sext i16 %1193 to i32
  %1195 = load i16, ptr %1099, align 2, !tbaa !37
  %1196 = sext i16 %1195 to i32
  %1197 = sub nsw i32 %1194, %1196
  %1198 = shl nsw i32 %1197, 1
  %1199 = sub nsw i32 1, %1198
  %1200 = icmp sgt i32 %1197, 0
  %1201 = select i1 %1200, i32 %1198, i32 %1199
  %1202 = icmp slt i32 %1201, 256
  br i1 %1202, label %1210, label %1203

1203:                                             ; preds = %1189
  %1204 = lshr i32 %1201, 8
  %1205 = zext i32 %1204 to i64
  %1206 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1205
  %1207 = load i8, ptr %1206, align 1, !tbaa !5
  %1208 = zext i8 %1207 to i32
  %1209 = add nuw nsw i32 %1208, 16
  br label %1215

1210:                                             ; preds = %1189
  %1211 = sext i32 %1201 to i64
  %1212 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1211
  %1213 = load i8, ptr %1212, align 1, !tbaa !5
  %1214 = zext i8 %1213 to i32
  br label %1215

1215:                                             ; preds = %1210, %1203
  %1216 = phi i32 [ %1214, %1210 ], [ %1209, %1203 ]
  %1217 = add nsw i32 %1191, %1190
  %1218 = add nsw i32 %1217, %1216
  store i32 %1218, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  br label %1219

1219:                                             ; preds = %1215, %1159
  %1220 = load i8, ptr %692, align 1, !tbaa !5
  %1221 = zext i8 %1220 to i64
  %1222 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %1221
  %1223 = load i8, ptr %1222, align 1, !tbaa !5
  %1224 = icmp eq i8 %1223, 0
  br i1 %1224, label %1279, label %1225

1225:                                             ; preds = %1219
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 8, i32 noundef 2, ptr noundef nonnull %5) #17
  %1226 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %1227 = load i16, ptr %1226, align 4, !tbaa !37
  %1228 = sext i16 %1227 to i32
  %1229 = load i16, ptr %5, align 4, !tbaa !37
  %1230 = sext i16 %1229 to i32
  %1231 = sub nsw i32 %1228, %1230
  %1232 = shl nsw i32 %1231, 1
  %1233 = sub nsw i32 1, %1232
  %1234 = icmp sgt i32 %1231, 0
  %1235 = select i1 %1234, i32 %1232, i32 %1233
  %1236 = icmp slt i32 %1235, 256
  br i1 %1236, label %1244, label %1237

1237:                                             ; preds = %1225
  %1238 = lshr i32 %1235, 8
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1239
  %1241 = load i8, ptr %1240, align 1, !tbaa !5
  %1242 = zext i8 %1241 to i32
  %1243 = add nuw nsw i32 %1242, 16
  br label %1249

1244:                                             ; preds = %1225
  %1245 = sext i32 %1235 to i64
  %1246 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1245
  %1247 = load i8, ptr %1246, align 1, !tbaa !5
  %1248 = zext i8 %1247 to i32
  br label %1249

1249:                                             ; preds = %1244, %1237
  %1250 = phi i32 [ %1248, %1244 ], [ %1243, %1237 ]
  %1251 = load i32, ptr %107, align 4, !tbaa !42
  %1252 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28, i64 1
  %1253 = load i16, ptr %1252, align 2, !tbaa !37
  %1254 = sext i16 %1253 to i32
  %1255 = load i16, ptr %1099, align 2, !tbaa !37
  %1256 = sext i16 %1255 to i32
  %1257 = sub nsw i32 %1254, %1256
  %1258 = shl nsw i32 %1257, 1
  %1259 = sub nsw i32 1, %1258
  %1260 = icmp sgt i32 %1257, 0
  %1261 = select i1 %1260, i32 %1258, i32 %1259
  %1262 = icmp slt i32 %1261, 256
  br i1 %1262, label %1270, label %1263

1263:                                             ; preds = %1249
  %1264 = lshr i32 %1261, 8
  %1265 = zext i32 %1264 to i64
  %1266 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1265
  %1267 = load i8, ptr %1266, align 1, !tbaa !5
  %1268 = zext i8 %1267 to i32
  %1269 = add nuw nsw i32 %1268, 16
  br label %1275

1270:                                             ; preds = %1249
  %1271 = sext i32 %1261 to i64
  %1272 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1271
  %1273 = load i8, ptr %1272, align 1, !tbaa !5
  %1274 = zext i8 %1273 to i32
  br label %1275

1275:                                             ; preds = %1270, %1263
  %1276 = phi i32 [ %1274, %1270 ], [ %1269, %1263 ]
  %1277 = add nsw i32 %1251, %1250
  %1278 = add nsw i32 %1277, %1276
  store i32 %1278, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  br label %1279

1279:                                             ; preds = %1275, %1219
  %1280 = load i8, ptr %703, align 1, !tbaa !5
  %1281 = zext i8 %1280 to i64
  %1282 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %1281
  %1283 = load i8, ptr %1282, align 1, !tbaa !5
  %1284 = icmp eq i8 %1283, 0
  br i1 %1284, label %1653, label %1285

1285:                                             ; preds = %1279
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 12, i32 noundef 2, ptr noundef nonnull %5) #17
  %1286 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  %1287 = load i16, ptr %1286, align 4, !tbaa !37
  %1288 = sext i16 %1287 to i32
  %1289 = load i16, ptr %5, align 4, !tbaa !37
  %1290 = sext i16 %1289 to i32
  %1291 = sub nsw i32 %1288, %1290
  %1292 = shl nsw i32 %1291, 1
  %1293 = sub nsw i32 1, %1292
  %1294 = icmp sgt i32 %1291, 0
  %1295 = select i1 %1294, i32 %1292, i32 %1293
  %1296 = icmp slt i32 %1295, 256
  br i1 %1296, label %1304, label %1297

1297:                                             ; preds = %1285
  %1298 = lshr i32 %1295, 8
  %1299 = zext i32 %1298 to i64
  %1300 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1299
  %1301 = load i8, ptr %1300, align 1, !tbaa !5
  %1302 = zext i8 %1301 to i32
  %1303 = add nuw nsw i32 %1302, 16
  br label %1309

1304:                                             ; preds = %1285
  %1305 = sext i32 %1295 to i64
  %1306 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1305
  %1307 = load i8, ptr %1306, align 1, !tbaa !5
  %1308 = zext i8 %1307 to i32
  br label %1309

1309:                                             ; preds = %1304, %1297
  %1310 = phi i32 [ %1308, %1304 ], [ %1303, %1297 ]
  %1311 = load i32, ptr %107, align 4, !tbaa !42
  %1312 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30, i64 1
  %1313 = load i16, ptr %1312, align 2, !tbaa !37
  %1314 = sext i16 %1313 to i32
  %1315 = load i16, ptr %1099, align 2, !tbaa !37
  %1316 = sext i16 %1315 to i32
  %1317 = sub nsw i32 %1314, %1316
  %1318 = shl nsw i32 %1317, 1
  %1319 = sub nsw i32 1, %1318
  %1320 = icmp sgt i32 %1317, 0
  %1321 = select i1 %1320, i32 %1318, i32 %1319
  %1322 = icmp slt i32 %1321, 256
  br i1 %1322, label %1330, label %1323

1323:                                             ; preds = %1309
  %1324 = lshr i32 %1321, 8
  %1325 = zext i32 %1324 to i64
  %1326 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1325
  %1327 = load i8, ptr %1326, align 1, !tbaa !5
  %1328 = zext i8 %1327 to i32
  %1329 = add nuw nsw i32 %1328, 16
  br label %1335

1330:                                             ; preds = %1309
  %1331 = sext i32 %1321 to i64
  %1332 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1331
  %1333 = load i8, ptr %1332, align 1, !tbaa !5
  %1334 = zext i8 %1333 to i32
  br label %1335

1335:                                             ; preds = %1330, %1323
  %1336 = phi i32 [ %1334, %1330 ], [ %1329, %1323 ]
  %1337 = add nsw i32 %1311, %1310
  %1338 = add nsw i32 %1337, %1336
  store i32 %1338, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  br label %1653

1339:                                             ; preds = %186
  %1340 = sext i32 %79 to i64
  %1341 = getelementptr inbounds [19 x [2 x [2 x i8]]], ptr @x264_mb_type_list_table, i64 0, i64 %1340
  %1342 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %1343 = load i32, ptr %1342, align 8, !tbaa !39
  %1344 = add nsw i32 %1343, -1
  %1345 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 1
  %1346 = load i32, ptr %1345, align 4, !tbaa !39
  %1347 = add nsw i32 %1346, -1
  %1348 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %1349 = load i32, ptr %1348, align 4, !tbaa !50
  %1350 = add nsw i32 %1349, -14
  %1351 = sext i32 %1350 to i64
  %1352 = add nsw i32 %79, -8
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds [3 x [9 x i8]], ptr @mb_type_b_to_golomb, i64 0, i64 %1351, i64 %1353
  %1355 = load i8, ptr %1354, align 1, !tbaa !5
  %1356 = zext i8 %1355 to i64
  %1357 = add nuw nsw i64 %1356, 1
  %1358 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1357
  %1359 = load i8, ptr %1358, align 1, !tbaa !5
  %1360 = zext i8 %1359 to i32
  %1361 = add nuw nsw i32 %129, %1360
  store i32 %1361, ptr %107, align 4, !tbaa !42
  %1362 = icmp eq i32 %1349, 16
  %1363 = icmp eq i32 %1344, 0
  br i1 %1362, label %1364, label %1518

1364:                                             ; preds = %1339
  br i1 %1363, label %1381, label %1365

1365:                                             ; preds = %1364
  %1366 = load i8, ptr %1341, align 4, !tbaa !5
  %1367 = icmp eq i8 %1366, 0
  br i1 %1367, label %1381, label %1368

1368:                                             ; preds = %1365
  %1369 = icmp eq i32 %1344, 1
  br i1 %1369, label %1378, label %1370

1370:                                             ; preds = %1368
  %1371 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %1372 = load i8, ptr %1371, align 1, !tbaa !5
  %1373 = sext i8 %1372 to i64
  %1374 = add nsw i64 %1373, 1
  %1375 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1374
  %1376 = load i8, ptr %1375, align 1, !tbaa !5
  %1377 = zext i8 %1376 to i32
  br label %1378

1378:                                             ; preds = %1370, %1368
  %1379 = phi i32 [ %1377, %1370 ], [ 1, %1368 ]
  %1380 = add nuw nsw i32 %1379, %1361
  store i32 %1380, ptr %107, align 4, !tbaa !42
  br label %1381

1381:                                             ; preds = %1378, %1365, %1364
  %1382 = phi i32 [ %1380, %1378 ], [ %1361, %1365 ], [ %1361, %1364 ]
  %1383 = icmp eq i32 %1347, 0
  br i1 %1383, label %1401, label %1384

1384:                                             ; preds = %1381
  %1385 = getelementptr inbounds [2 x i8], ptr %1341, i64 1
  %1386 = load i8, ptr %1385, align 2, !tbaa !5
  %1387 = icmp eq i8 %1386, 0
  br i1 %1387, label %1401, label %1388

1388:                                             ; preds = %1384
  %1389 = icmp eq i32 %1347, 1
  br i1 %1389, label %1398, label %1390

1390:                                             ; preds = %1388
  %1391 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %1392 = load i8, ptr %1391, align 1, !tbaa !5
  %1393 = sext i8 %1392 to i64
  %1394 = add nsw i64 %1393, 1
  %1395 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1394
  %1396 = load i8, ptr %1395, align 1, !tbaa !5
  %1397 = zext i8 %1396 to i32
  br label %1398

1398:                                             ; preds = %1390, %1388
  %1399 = phi i32 [ %1397, %1390 ], [ 1, %1388 ]
  %1400 = add nuw nsw i32 %1399, %1382
  store i32 %1400, ptr %107, align 4, !tbaa !42
  br label %1401

1401:                                             ; preds = %1398, %1384, %1381
  %1402 = load i8, ptr %1341, align 4, !tbaa !5
  %1403 = icmp eq i8 %1402, 0
  br i1 %1403, label %1459, label %1404

1404:                                             ; preds = %1401
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %4) #17
  %1405 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %1406 = load i16, ptr %1405, align 4, !tbaa !37
  %1407 = sext i16 %1406 to i32
  %1408 = load i16, ptr %4, align 4, !tbaa !37
  %1409 = sext i16 %1408 to i32
  %1410 = sub nsw i32 %1407, %1409
  %1411 = shl nsw i32 %1410, 1
  %1412 = sub nsw i32 1, %1411
  %1413 = icmp sgt i32 %1410, 0
  %1414 = select i1 %1413, i32 %1411, i32 %1412
  %1415 = icmp slt i32 %1414, 256
  br i1 %1415, label %1416, label %1421

1416:                                             ; preds = %1404
  %1417 = sext i32 %1414 to i64
  %1418 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1417
  %1419 = load i8, ptr %1418, align 1, !tbaa !5
  %1420 = zext i8 %1419 to i32
  br label %1428

1421:                                             ; preds = %1404
  %1422 = lshr i32 %1414, 8
  %1423 = zext i32 %1422 to i64
  %1424 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1423
  %1425 = load i8, ptr %1424, align 1, !tbaa !5
  %1426 = zext i8 %1425 to i32
  %1427 = add nuw nsw i32 %1426, 16
  br label %1428

1428:                                             ; preds = %1421, %1416
  %1429 = phi i32 [ %1420, %1416 ], [ %1427, %1421 ]
  %1430 = load i32, ptr %107, align 4, !tbaa !42
  %1431 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %1432 = load i16, ptr %1431, align 2, !tbaa !37
  %1433 = sext i16 %1432 to i32
  %1434 = getelementptr inbounds [2 x i16], ptr %4, i64 0, i64 1
  %1435 = load i16, ptr %1434, align 2, !tbaa !37
  %1436 = sext i16 %1435 to i32
  %1437 = sub nsw i32 %1433, %1436
  %1438 = shl nsw i32 %1437, 1
  %1439 = sub nsw i32 1, %1438
  %1440 = icmp sgt i32 %1437, 0
  %1441 = select i1 %1440, i32 %1438, i32 %1439
  %1442 = icmp slt i32 %1441, 256
  br i1 %1442, label %1443, label %1448

1443:                                             ; preds = %1428
  %1444 = sext i32 %1441 to i64
  %1445 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1444
  %1446 = load i8, ptr %1445, align 1, !tbaa !5
  %1447 = zext i8 %1446 to i32
  br label %1455

1448:                                             ; preds = %1428
  %1449 = lshr i32 %1441, 8
  %1450 = zext i32 %1449 to i64
  %1451 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1450
  %1452 = load i8, ptr %1451, align 1, !tbaa !5
  %1453 = zext i8 %1452 to i32
  %1454 = add nuw nsw i32 %1453, 16
  br label %1455

1455:                                             ; preds = %1448, %1443
  %1456 = phi i32 [ %1447, %1443 ], [ %1454, %1448 ]
  %1457 = add nsw i32 %1430, %1429
  %1458 = add nsw i32 %1457, %1456
  store i32 %1458, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #17
  br label %1459

1459:                                             ; preds = %1455, %1401
  %1460 = getelementptr inbounds [2 x i8], ptr %1341, i64 1
  %1461 = load i8, ptr %1460, align 2, !tbaa !5
  %1462 = icmp eq i8 %1461, 0
  br i1 %1462, label %1651, label %1463

1463:                                             ; preds = %1459
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %3) #17
  %1464 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %1465 = load i16, ptr %1464, align 4, !tbaa !37
  %1466 = sext i16 %1465 to i32
  %1467 = load i16, ptr %3, align 4, !tbaa !37
  %1468 = sext i16 %1467 to i32
  %1469 = sub nsw i32 %1466, %1468
  %1470 = shl nsw i32 %1469, 1
  %1471 = sub nsw i32 1, %1470
  %1472 = icmp sgt i32 %1469, 0
  %1473 = select i1 %1472, i32 %1470, i32 %1471
  %1474 = icmp slt i32 %1473, 256
  br i1 %1474, label %1475, label %1480

1475:                                             ; preds = %1463
  %1476 = sext i32 %1473 to i64
  %1477 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1476
  %1478 = load i8, ptr %1477, align 1, !tbaa !5
  %1479 = zext i8 %1478 to i32
  br label %1487

1480:                                             ; preds = %1463
  %1481 = lshr i32 %1473, 8
  %1482 = zext i32 %1481 to i64
  %1483 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1482
  %1484 = load i8, ptr %1483, align 1, !tbaa !5
  %1485 = zext i8 %1484 to i32
  %1486 = add nuw nsw i32 %1485, 16
  br label %1487

1487:                                             ; preds = %1480, %1475
  %1488 = phi i32 [ %1479, %1475 ], [ %1486, %1480 ]
  %1489 = load i32, ptr %107, align 4, !tbaa !42
  %1490 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12, i64 1
  %1491 = load i16, ptr %1490, align 2, !tbaa !37
  %1492 = sext i16 %1491 to i32
  %1493 = getelementptr inbounds [2 x i16], ptr %3, i64 0, i64 1
  %1494 = load i16, ptr %1493, align 2, !tbaa !37
  %1495 = sext i16 %1494 to i32
  %1496 = sub nsw i32 %1492, %1495
  %1497 = shl nsw i32 %1496, 1
  %1498 = sub nsw i32 1, %1497
  %1499 = icmp sgt i32 %1496, 0
  %1500 = select i1 %1499, i32 %1497, i32 %1498
  %1501 = icmp slt i32 %1500, 256
  br i1 %1501, label %1502, label %1507

1502:                                             ; preds = %1487
  %1503 = sext i32 %1500 to i64
  %1504 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1503
  %1505 = load i8, ptr %1504, align 1, !tbaa !5
  %1506 = zext i8 %1505 to i32
  br label %1514

1507:                                             ; preds = %1487
  %1508 = lshr i32 %1500, 8
  %1509 = zext i32 %1508 to i64
  %1510 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1509
  %1511 = load i8, ptr %1510, align 1, !tbaa !5
  %1512 = zext i8 %1511 to i32
  %1513 = add nuw nsw i32 %1512, 16
  br label %1514

1514:                                             ; preds = %1507, %1502
  %1515 = phi i32 [ %1506, %1502 ], [ %1513, %1507 ]
  %1516 = add nsw i32 %1489, %1488
  %1517 = add nsw i32 %1516, %1515
  store i32 %1517, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #17
  br label %1651

1518:                                             ; preds = %1339
  br i1 %1363, label %1553, label %1519

1519:                                             ; preds = %1518
  %1520 = load i8, ptr %1341, align 4, !tbaa !5
  %1521 = icmp eq i8 %1520, 0
  br i1 %1521, label %1535, label %1522

1522:                                             ; preds = %1519
  %1523 = icmp eq i32 %1344, 1
  br i1 %1523, label %1532, label %1524

1524:                                             ; preds = %1522
  %1525 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %1526 = load i8, ptr %1525, align 1, !tbaa !5
  %1527 = sext i8 %1526 to i64
  %1528 = add nsw i64 %1527, 1
  %1529 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1528
  %1530 = load i8, ptr %1529, align 1, !tbaa !5
  %1531 = zext i8 %1530 to i32
  br label %1532

1532:                                             ; preds = %1524, %1522
  %1533 = phi i32 [ %1531, %1524 ], [ 1, %1522 ]
  %1534 = add nuw nsw i32 %1533, %1361
  store i32 %1534, ptr %107, align 4, !tbaa !42
  br label %1535

1535:                                             ; preds = %1532, %1519
  %1536 = phi i32 [ %1361, %1519 ], [ %1534, %1532 ]
  %1537 = getelementptr inbounds [2 x i8], ptr %1341, i64 0, i64 1
  %1538 = load i8, ptr %1537, align 1, !tbaa !5
  %1539 = icmp eq i8 %1538, 0
  br i1 %1539, label %1553, label %1540

1540:                                             ; preds = %1535
  %1541 = icmp eq i32 %1344, 1
  br i1 %1541, label %1550, label %1542

1542:                                             ; preds = %1540
  %1543 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %1544 = load i8, ptr %1543, align 1, !tbaa !5
  %1545 = sext i8 %1544 to i64
  %1546 = add nsw i64 %1545, 1
  %1547 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1546
  %1548 = load i8, ptr %1547, align 1, !tbaa !5
  %1549 = zext i8 %1548 to i32
  br label %1550

1550:                                             ; preds = %1542, %1540
  %1551 = phi i32 [ %1549, %1542 ], [ 1, %1540 ]
  %1552 = add nuw nsw i32 %1551, %1536
  store i32 %1552, ptr %107, align 4, !tbaa !42
  br label %1553

1553:                                             ; preds = %1550, %1535, %1518
  %1554 = phi i32 [ %1361, %1518 ], [ %1552, %1550 ], [ %1536, %1535 ]
  %1555 = icmp eq i32 %1347, 0
  br i1 %1555, label %1591, label %1556

1556:                                             ; preds = %1553
  %1557 = getelementptr inbounds [2 x i8], ptr %1341, i64 1
  %1558 = load i8, ptr %1557, align 2, !tbaa !5
  %1559 = icmp eq i8 %1558, 0
  br i1 %1559, label %1573, label %1560

1560:                                             ; preds = %1556
  %1561 = icmp eq i32 %1347, 1
  br i1 %1561, label %1570, label %1562

1562:                                             ; preds = %1560
  %1563 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %1564 = load i8, ptr %1563, align 1, !tbaa !5
  %1565 = sext i8 %1564 to i64
  %1566 = add nsw i64 %1565, 1
  %1567 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1566
  %1568 = load i8, ptr %1567, align 1, !tbaa !5
  %1569 = zext i8 %1568 to i32
  br label %1570

1570:                                             ; preds = %1562, %1560
  %1571 = phi i32 [ %1569, %1562 ], [ 1, %1560 ]
  %1572 = add nuw nsw i32 %1571, %1554
  store i32 %1572, ptr %107, align 4, !tbaa !42
  br label %1573

1573:                                             ; preds = %1570, %1556
  %1574 = phi i32 [ %1554, %1556 ], [ %1572, %1570 ]
  %1575 = getelementptr inbounds [2 x i8], ptr %1341, i64 1, i64 1
  %1576 = load i8, ptr %1575, align 1, !tbaa !5
  %1577 = icmp eq i8 %1576, 0
  br i1 %1577, label %1591, label %1578

1578:                                             ; preds = %1573
  %1579 = icmp eq i32 %1347, 1
  br i1 %1579, label %1588, label %1580

1580:                                             ; preds = %1578
  %1581 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 30
  %1582 = load i8, ptr %1581, align 1, !tbaa !5
  %1583 = sext i8 %1582 to i64
  %1584 = add nsw i64 %1583, 1
  %1585 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1584
  %1586 = load i8, ptr %1585, align 1, !tbaa !5
  %1587 = zext i8 %1586 to i32
  br label %1588

1588:                                             ; preds = %1580, %1578
  %1589 = phi i32 [ %1587, %1580 ], [ 1, %1578 ]
  %1590 = add nuw nsw i32 %1589, %1574
  store i32 %1590, ptr %107, align 4, !tbaa !42
  br label %1591

1591:                                             ; preds = %1588, %1573, %1553
  %1592 = icmp eq i32 %1349, 14
  %1593 = load i8, ptr %1341, align 4, !tbaa !5
  %1594 = icmp eq i8 %1593, 0
  br i1 %1592, label %1595, label %1612

1595:                                             ; preds = %1591
  br i1 %1594, label %1597, label %1596

1596:                                             ; preds = %1595
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 4)
  br label %1597

1597:                                             ; preds = %1596, %1595
  %1598 = getelementptr inbounds [2 x i8], ptr %1341, i64 0, i64 1
  %1599 = load i8, ptr %1598, align 1, !tbaa !5
  %1600 = icmp eq i8 %1599, 0
  br i1 %1600, label %1602, label %1601

1601:                                             ; preds = %1597
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 8, i32 noundef 4)
  br label %1602

1602:                                             ; preds = %1601, %1597
  %1603 = getelementptr inbounds [2 x i8], ptr %1341, i64 1
  %1604 = load i8, ptr %1603, align 2, !tbaa !5
  %1605 = icmp eq i8 %1604, 0
  br i1 %1605, label %1607, label %1606

1606:                                             ; preds = %1602
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 0, i32 noundef 4)
  br label %1607

1607:                                             ; preds = %1606, %1602
  %1608 = getelementptr inbounds [2 x i8], ptr %1341, i64 1, i64 1
  %1609 = load i8, ptr %1608, align 1, !tbaa !5
  %1610 = icmp eq i8 %1609, 0
  br i1 %1610, label %1651, label %1611

1611:                                             ; preds = %1607
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 8, i32 noundef 4)
  br label %1651

1612:                                             ; preds = %1591
  br i1 %1594, label %1614, label %1613

1613:                                             ; preds = %1612
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 2)
  br label %1614

1614:                                             ; preds = %1613, %1612
  %1615 = getelementptr inbounds [2 x i8], ptr %1341, i64 0, i64 1
  %1616 = load i8, ptr %1615, align 1, !tbaa !5
  %1617 = icmp eq i8 %1616, 0
  br i1 %1617, label %1619, label %1618

1618:                                             ; preds = %1614
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 4, i32 noundef 2)
  br label %1619

1619:                                             ; preds = %1618, %1614
  %1620 = getelementptr inbounds [2 x i8], ptr %1341, i64 1
  %1621 = load i8, ptr %1620, align 2, !tbaa !5
  %1622 = icmp eq i8 %1621, 0
  br i1 %1622, label %1624, label %1623

1623:                                             ; preds = %1619
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 0, i32 noundef 2)
  br label %1624

1624:                                             ; preds = %1623, %1619
  %1625 = getelementptr inbounds [2 x i8], ptr %1341, i64 1, i64 1
  %1626 = load i8, ptr %1625, align 1, !tbaa !5
  %1627 = icmp eq i8 %1626, 0
  br i1 %1627, label %1651, label %1628

1628:                                             ; preds = %1624
  tail call fastcc void @cavlc_mb_mvd(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 4, i32 noundef 2)
  br label %1651

1629:                                             ; preds = %186
  %1630 = add nuw nsw i32 %129, 1
  br label %1655

1631:                                             ; preds = %150
  %1632 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 60
  %1633 = load i32, ptr %1632, align 4, !tbaa !72
  %1634 = sext i32 %1633 to i64
  %1635 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode8x8c_fix, i64 0, i64 %1634
  %1636 = load i8, ptr %1635, align 1, !tbaa !5
  %1637 = zext i8 %1636 to i64
  %1638 = add nuw nsw i64 %1637, 1
  %1639 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1638
  %1640 = load i8, ptr %1639, align 1, !tbaa !5
  %1641 = zext i8 %1640 to i32
  %1642 = add nsw i32 %183, %1641
  %1643 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %1644 = load i32, ptr %1643, align 4, !tbaa !71
  %1645 = shl i32 %1644, 4
  %1646 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %1647 = load i32, ptr %1646, align 8, !tbaa !45
  %1648 = or i32 %1645, %1647
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds [48 x i8], ptr @intra4x4_cbp_to_golomb, i64 0, i64 %1649
  br label %1665

1651:                                             ; preds = %1628, %1624, %1611, %1607, %1514, %1459
  %1652 = icmp eq i32 %79, 2
  br i1 %1652, label %1675, label %1653

1653:                                             ; preds = %1651, %1335, %1279, %667
  %1654 = load i32, ptr %107, align 4, !tbaa !42
  br label %1655

1655:                                             ; preds = %1653, %1629, %562, %424, %286, %214
  %1656 = phi i32 [ %1654, %1653 ], [ %129, %214 ], [ %1630, %1629 ], [ %289, %286 ], [ %565, %562 ], [ %427, %424 ]
  %1657 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %1658 = load i32, ptr %1657, align 4, !tbaa !71
  %1659 = shl i32 %1658, 4
  %1660 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %1661 = load i32, ptr %1660, align 8, !tbaa !45
  %1662 = or i32 %1659, %1661
  %1663 = sext i32 %1662 to i64
  %1664 = getelementptr inbounds [48 x i8], ptr @inter_cbp_to_golomb, i64 0, i64 %1663
  br label %1665

1665:                                             ; preds = %1655, %1631, %187
  %1666 = phi ptr [ %1664, %1655 ], [ %1650, %1631 ], [ %213, %187 ]
  %1667 = phi i32 [ %1656, %1655 ], [ %1642, %1631 ], [ %209, %187 ]
  %1668 = load i8, ptr %1666, align 1, !tbaa !5
  %1669 = zext i8 %1668 to i64
  %1670 = add nuw nsw i64 %1669, 1
  %1671 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1670
  %1672 = load i8, ptr %1671, align 1, !tbaa !5
  %1673 = zext i8 %1672 to i32
  %1674 = add nsw i32 %1667, %1673
  store i32 %1674, ptr %107, align 4, !tbaa !42
  br label %1675

1675:                                             ; preds = %1665, %1651
  %1676 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %1677 = load ptr, ptr %1676, align 16, !tbaa !66
  %1678 = getelementptr inbounds %struct.x264_pps_t, ptr %1677, i64 0, i32 15
  %1679 = load i32, ptr %1678, align 4, !tbaa !67
  %1680 = icmp eq i32 %1679, 0
  br i1 %1680, label %1704, label %1681

1681:                                             ; preds = %1675
  %1682 = load i32, ptr %15, align 8, !tbaa !49
  %1683 = icmp eq i32 %1682, 5
  br i1 %1683, label %1689, label %1684

1684:                                             ; preds = %1681
  %1685 = sext i32 %1682 to i64
  %1686 = getelementptr inbounds [19 x i8], ptr @x264_mb_transform_8x8_allowed.partition_tab, i64 0, i64 %1685
  %1687 = load i8, ptr %1686, align 1, !tbaa !5
  %1688 = zext i8 %1687 to i32
  br label %1694

1689:                                             ; preds = %1681
  %1690 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %1691 = load i32, ptr %1690, align 16, !tbaa !5
  %1692 = icmp eq i32 %1691, 50529027
  %1693 = zext i1 %1692 to i32
  br label %1694

1694:                                             ; preds = %1689, %1684
  %1695 = phi i32 [ %1688, %1684 ], [ %1693, %1689 ]
  %1696 = icmp eq i32 %1695, 0
  br i1 %1696, label %1704, label %1697

1697:                                             ; preds = %1694
  %1698 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %1699 = load i32, ptr %1698, align 8, !tbaa !45
  %1700 = icmp eq i32 %1699, 0
  br i1 %1700, label %1704, label %1701

1701:                                             ; preds = %1697
  %1702 = load i32, ptr %107, align 4, !tbaa !42
  %1703 = add nsw i32 %1702, 1
  store i32 %1703, ptr %107, align 4, !tbaa !42
  br label %1704

1704:                                             ; preds = %1701, %1697, %1694, %1675
  %1705 = icmp eq i32 %79, 2
  br i1 %1705, label %1706, label %1834

1706:                                             ; preds = %1704
  %1707 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 68
  %1708 = load i32, ptr %1707, align 16, !tbaa !74
  %1709 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 70
  %1710 = load i32, ptr %1709, align 8, !tbaa !75
  %1711 = sub nsw i32 %1708, %1710
  %1712 = load i32, ptr %15, align 8, !tbaa !49
  %1713 = icmp eq i32 %1712, 2
  br i1 %1713, label %1714, label %1727

1714:                                             ; preds = %1706
  %1715 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %1716 = load i32, ptr %1715, align 8, !tbaa !45
  %1717 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %1718 = load i32, ptr %1717, align 4, !tbaa !71
  %1719 = or i32 %1718, %1716
  %1720 = icmp eq i32 %1719, 0
  br i1 %1720, label %1721, label %1727

1721:                                             ; preds = %1714
  %1722 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 44
  %1723 = load i8, ptr %1722, align 1, !tbaa !5
  %1724 = icmp eq i8 %1723, 0
  %1725 = icmp eq i32 %1708, %1710
  %1726 = select i1 %1724, i1 true, i1 %1725
  br i1 %1726, label %1742, label %1729

1727:                                             ; preds = %1714, %1706
  %1728 = icmp eq i32 %1708, %1710
  br i1 %1728, label %1742, label %1729

1729:                                             ; preds = %1727, %1721
  %1730 = icmp slt i32 %1711, -26
  %1731 = add nsw i32 %1711, 52
  %1732 = icmp sgt i32 %1711, 25
  %1733 = add nsw i32 %1711, -52
  %1734 = select i1 %1732, i32 %1733, i32 %1711
  %1735 = select i1 %1730, i32 %1731, i32 %1734
  %1736 = freeze i32 %1735
  %1737 = shl nsw i32 %1736, 1
  %1738 = sub nsw i32 1, %1737
  %1739 = icmp sgt i32 %1736, 0
  %1740 = select i1 %1739, i32 %1737, i32 %1738
  %1741 = icmp slt i32 %1740, 256
  br i1 %1741, label %1742, label %1748

1742:                                             ; preds = %1729, %1727, %1721
  %1743 = phi i32 [ %1740, %1729 ], [ 1, %1721 ], [ 1, %1727 ]
  %1744 = sext i32 %1743 to i64
  %1745 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1744
  %1746 = load i8, ptr %1745, align 1, !tbaa !5
  %1747 = zext i8 %1746 to i32
  br label %1755

1748:                                             ; preds = %1729
  %1749 = lshr i32 %1740, 8
  %1750 = zext i32 %1749 to i64
  %1751 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1750
  %1752 = load i8, ptr %1751, align 1, !tbaa !5
  %1753 = zext i8 %1752 to i32
  %1754 = add nuw nsw i32 %1753, 16
  br label %1755

1755:                                             ; preds = %1748, %1742
  %1756 = phi i32 [ %1747, %1742 ], [ %1754, %1748 ]
  %1757 = load i32, ptr %107, align 4, !tbaa !42
  %1758 = add nsw i32 %1757, %1756
  store i32 %1758, ptr %107, align 4, !tbaa !42
  %1759 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 11
  %1760 = load i8, ptr %1759, align 1, !tbaa !5
  %1761 = zext i8 %1760 to i32
  %1762 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 4
  %1763 = load i8, ptr %1762, align 1, !tbaa !5
  %1764 = zext i8 %1763 to i32
  %1765 = add nuw nsw i32 %1764, %1761
  %1766 = icmp ult i32 %1765, 128
  %1767 = add nuw nsw i32 %1765, 1
  %1768 = lshr i32 %1767, 1
  %1769 = select i1 %1766, i32 %1768, i32 %1765
  %1770 = and i32 %1769, 127
  %1771 = zext i32 %1770 to i64
  %1772 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %1771
  %1773 = load i8, ptr %1772, align 1, !tbaa !5
  %1774 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 44
  %1775 = load i8, ptr %1774, align 1, !tbaa !5
  %1776 = icmp eq i8 %1775, 0
  br i1 %1776, label %1777, label %1783

1777:                                             ; preds = %1755
  %1778 = zext i8 %1773 to i64
  %1779 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %1778, i32 1
  %1780 = load i8, ptr %1779, align 1, !tbaa !43
  %1781 = zext i8 %1780 to i32
  %1782 = add nsw i32 %1758, %1781
  store i32 %1782, ptr %107, align 4, !tbaa !41
  br label %1788

1783:                                             ; preds = %1755
  %1784 = zext i8 %1773 to i32
  %1785 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54
  %1786 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull %1785, i32 noundef %1784)
  %1787 = trunc i32 %1786 to i8
  store i8 %1787, ptr %1774, align 1, !tbaa !5
  br label %1788

1788:                                             ; preds = %1783, %1777
  %1789 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %1790 = load i32, ptr %1789, align 8, !tbaa !45
  %1791 = icmp eq i32 %1790, 0
  br i1 %1791, label %1878, label %1792

1792:                                             ; preds = %1788, %1831
  %1793 = phi i64 [ %1832, %1831 ], [ 0, %1788 ]
  %1794 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1793
  %1795 = load i32, ptr %1794, align 4, !tbaa !39
  %1796 = add nsw i32 %1795, -1
  %1797 = sext i32 %1796 to i64
  %1798 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1797
  %1799 = load i8, ptr %1798, align 1, !tbaa !5
  %1800 = zext i8 %1799 to i32
  %1801 = add nsw i32 %1795, -8
  %1802 = sext i32 %1801 to i64
  %1803 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1802
  %1804 = load i8, ptr %1803, align 1, !tbaa !5
  %1805 = zext i8 %1804 to i32
  %1806 = add nuw nsw i32 %1805, %1800
  %1807 = icmp ult i32 %1806, 128
  %1808 = add nuw nsw i32 %1806, 1
  %1809 = lshr i32 %1808, 1
  %1810 = select i1 %1807, i32 %1809, i32 %1806
  %1811 = and i32 %1810, 127
  %1812 = zext i32 %1811 to i64
  %1813 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %1812
  %1814 = load i8, ptr %1813, align 1, !tbaa !5
  %1815 = sext i32 %1795 to i64
  %1816 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1815
  %1817 = load i8, ptr %1816, align 1, !tbaa !5
  %1818 = icmp eq i8 %1817, 0
  br i1 %1818, label %1819, label %1826

1819:                                             ; preds = %1792
  %1820 = zext i8 %1814 to i64
  %1821 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %1820, i32 1
  %1822 = load i8, ptr %1821, align 1, !tbaa !43
  %1823 = zext i8 %1822 to i32
  %1824 = load i32, ptr %107, align 4, !tbaa !41
  %1825 = add nsw i32 %1824, %1823
  store i32 %1825, ptr %107, align 4, !tbaa !41
  br label %1831

1826:                                             ; preds = %1792
  %1827 = zext i8 %1814 to i32
  %1828 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %1793, i64 1
  %1829 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull %1828, i32 noundef %1827)
  %1830 = trunc i32 %1829 to i8
  store i8 %1830, ptr %1816, align 1, !tbaa !5
  br label %1831

1831:                                             ; preds = %1826, %1819
  %1832 = add nuw nsw i64 %1793, 1
  %1833 = icmp eq i64 %1832, 16
  br i1 %1833, label %1878, label %1792, !llvm.loop !76

1834:                                             ; preds = %1704
  %1835 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %1836 = load i32, ptr %1835, align 8, !tbaa !45
  %1837 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %1838 = load i32, ptr %1837, align 4, !tbaa !71
  %1839 = or i32 %1838, %1836
  %1840 = icmp eq i32 %1839, 0
  br i1 %1840, label %1878, label %1841

1841:                                             ; preds = %1834
  %1842 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 68
  %1843 = load i32, ptr %1842, align 16, !tbaa !74
  %1844 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 70
  %1845 = load i32, ptr %1844, align 8, !tbaa !75
  %1846 = icmp eq i32 %1843, %1845
  br i1 %1846, label %1861, label %1847

1847:                                             ; preds = %1841
  %1848 = sub nsw i32 %1843, %1845
  %1849 = icmp slt i32 %1848, -26
  %1850 = add nsw i32 %1848, 52
  %1851 = icmp sgt i32 %1848, 25
  %1852 = add nsw i32 %1848, -52
  %1853 = select i1 %1851, i32 %1852, i32 %1848
  %1854 = select i1 %1849, i32 %1850, i32 %1853
  %1855 = freeze i32 %1854
  %1856 = shl nsw i32 %1855, 1
  %1857 = sub nsw i32 1, %1856
  %1858 = icmp sgt i32 %1855, 0
  %1859 = select i1 %1858, i32 %1856, i32 %1857
  %1860 = icmp slt i32 %1859, 256
  br i1 %1860, label %1861, label %1867

1861:                                             ; preds = %1847, %1841
  %1862 = phi i32 [ %1859, %1847 ], [ 1, %1841 ]
  %1863 = sext i32 %1862 to i64
  %1864 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1863
  %1865 = load i8, ptr %1864, align 1, !tbaa !5
  %1866 = zext i8 %1865 to i32
  br label %1874

1867:                                             ; preds = %1847
  %1868 = lshr i32 %1859, 8
  %1869 = zext i32 %1868 to i64
  %1870 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %1869
  %1871 = load i8, ptr %1870, align 1, !tbaa !5
  %1872 = zext i8 %1871 to i32
  %1873 = add nuw nsw i32 %1872, 16
  br label %1874

1874:                                             ; preds = %1867, %1861
  %1875 = phi i32 [ %1866, %1861 ], [ %1873, %1867 ]
  %1876 = load i32, ptr %107, align 4, !tbaa !42
  %1877 = add nsw i32 %1876, %1875
  store i32 %1877, ptr %107, align 4, !tbaa !42
  call fastcc void @x264_macroblock_luma_write_cavlc(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 3)
  br label %1878

1878:                                             ; preds = %1831, %1874, %1834, %1788
  %1879 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %1880 = load i32, ptr %1879, align 4, !tbaa !71
  %1881 = icmp eq i32 %1880, 0
  br i1 %1881, label %2158, label %1882

1882:                                             ; preds = %1878
  %1883 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 46
  %1884 = load i8, ptr %1883, align 1, !tbaa !5
  %1885 = icmp eq i8 %1884, 0
  br i1 %1885, label %1886, label %1891

1886:                                             ; preds = %1882
  %1887 = load i8, ptr getelementptr inbounds ([5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 4, i32 1), align 1, !tbaa !43
  %1888 = zext i8 %1887 to i32
  %1889 = load i32, ptr %107, align 4, !tbaa !41
  %1890 = add nsw i32 %1889, %1888
  store i32 %1890, ptr %107, align 4, !tbaa !41
  br label %1895

1891:                                             ; preds = %1882
  %1892 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1
  %1893 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 3, ptr noundef nonnull %1892, i32 noundef 4)
  %1894 = trunc i32 %1893 to i8
  store i8 %1894, ptr %1883, align 1, !tbaa !5
  br label %1895

1895:                                             ; preds = %1891, %1886
  %1896 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 47
  %1897 = load i8, ptr %1896, align 1, !tbaa !5
  %1898 = icmp eq i8 %1897, 0
  br i1 %1898, label %1899, label %1904

1899:                                             ; preds = %1895
  %1900 = load i8, ptr getelementptr inbounds ([5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 4, i32 1), align 1, !tbaa !43
  %1901 = zext i8 %1900 to i32
  %1902 = load i32, ptr %107, align 4, !tbaa !41
  %1903 = add nsw i32 %1902, %1901
  store i32 %1903, ptr %107, align 4, !tbaa !41
  br label %1908

1904:                                             ; preds = %1895
  %1905 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1, i64 1
  %1906 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 3, ptr noundef nonnull %1905, i32 noundef 4)
  %1907 = trunc i32 %1906 to i8
  store i8 %1907, ptr %1896, align 1, !tbaa !5
  br label %1908

1908:                                             ; preds = %1904, %1899
  %1909 = load i32, ptr %1879, align 4, !tbaa !71
  %1910 = and i32 %1909, 2
  %1911 = icmp eq i32 %1910, 0
  br i1 %1911, label %2158, label %1912

1912:                                             ; preds = %1908
  %1913 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 8
  %1914 = load i8, ptr %1913, align 1, !tbaa !5
  %1915 = zext i8 %1914 to i32
  %1916 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 1
  %1917 = load i8, ptr %1916, align 1, !tbaa !5
  %1918 = zext i8 %1917 to i32
  %1919 = add nuw nsw i32 %1918, %1915
  %1920 = icmp ult i32 %1919, 128
  %1921 = add nuw nsw i32 %1919, 1
  %1922 = lshr i32 %1921, 1
  %1923 = select i1 %1920, i32 %1922, i32 %1919
  %1924 = and i32 %1923, 127
  %1925 = zext i32 %1924 to i64
  %1926 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %1925
  %1927 = load i8, ptr %1926, align 1, !tbaa !5
  %1928 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 9
  %1929 = load i8, ptr %1928, align 1, !tbaa !5
  %1930 = icmp eq i8 %1929, 0
  br i1 %1930, label %1931, label %1938

1931:                                             ; preds = %1912
  %1932 = zext i8 %1927 to i64
  %1933 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %1932, i32 1
  %1934 = load i8, ptr %1933, align 1, !tbaa !43
  %1935 = zext i8 %1934 to i32
  %1936 = load i32, ptr %107, align 4, !tbaa !41
  %1937 = add nsw i32 %1936, %1935
  store i32 %1937, ptr %107, align 4, !tbaa !41
  br label %1944

1938:                                             ; preds = %1912
  %1939 = zext i8 %1927 to i32
  %1940 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 16, i64 1
  %1941 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %1940, i32 noundef %1939)
  %1942 = trunc i32 %1941 to i8
  store i8 %1942, ptr %1928, align 1, !tbaa !5
  %1943 = and i32 %1941, 255
  br label %1944

1944:                                             ; preds = %1938, %1931
  %1945 = phi i32 [ %1943, %1938 ], [ 0, %1931 ]
  %1946 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 2
  %1947 = load i8, ptr %1946, align 1, !tbaa !5
  %1948 = zext i8 %1947 to i32
  %1949 = add nuw nsw i32 %1945, %1948
  %1950 = icmp ult i32 %1949, 128
  %1951 = add nuw nsw i32 %1949, 1
  %1952 = lshr i32 %1951, 1
  %1953 = select i1 %1950, i32 %1952, i32 %1949
  %1954 = and i32 %1953, 127
  %1955 = zext i32 %1954 to i64
  %1956 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %1955
  %1957 = load i8, ptr %1956, align 1, !tbaa !5
  %1958 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 10
  %1959 = load i8, ptr %1958, align 1, !tbaa !5
  %1960 = icmp eq i8 %1959, 0
  br i1 %1960, label %1968, label %1961

1961:                                             ; preds = %1944
  %1962 = zext i8 %1957 to i32
  %1963 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 17, i64 1
  %1964 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %1963, i32 noundef %1962)
  %1965 = trunc i32 %1964 to i8
  store i8 %1965, ptr %1958, align 1, !tbaa !5
  %1966 = load i8, ptr %1928, align 1, !tbaa !5
  %1967 = zext i8 %1966 to i32
  br label %1975

1968:                                             ; preds = %1944
  %1969 = zext i8 %1957 to i64
  %1970 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %1969, i32 1
  %1971 = load i8, ptr %1970, align 1, !tbaa !43
  %1972 = zext i8 %1971 to i32
  %1973 = load i32, ptr %107, align 4, !tbaa !41
  %1974 = add nsw i32 %1973, %1972
  store i32 %1974, ptr %107, align 4, !tbaa !41
  br label %1975

1975:                                             ; preds = %1968, %1961
  %1976 = phi i32 [ %1945, %1968 ], [ %1967, %1961 ]
  %1977 = phi i8 [ 0, %1968 ], [ %1965, %1961 ]
  %1978 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 16
  %1979 = load i8, ptr %1978, align 1, !tbaa !5
  %1980 = zext i8 %1979 to i32
  %1981 = add nuw nsw i32 %1976, %1980
  %1982 = icmp ult i32 %1981, 128
  %1983 = add nuw nsw i32 %1981, 1
  %1984 = lshr i32 %1983, 1
  %1985 = select i1 %1982, i32 %1984, i32 %1981
  %1986 = and i32 %1985, 127
  %1987 = zext i32 %1986 to i64
  %1988 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %1987
  %1989 = load i8, ptr %1988, align 1, !tbaa !5
  %1990 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 17
  %1991 = load i8, ptr %1990, align 1, !tbaa !5
  %1992 = icmp eq i8 %1991, 0
  br i1 %1992, label %2000, label %1993

1993:                                             ; preds = %1975
  %1994 = zext i8 %1989 to i32
  %1995 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 18, i64 1
  %1996 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %1995, i32 noundef %1994)
  %1997 = trunc i32 %1996 to i8
  store i8 %1997, ptr %1990, align 1, !tbaa !5
  %1998 = load i8, ptr %1958, align 1, !tbaa !5
  %1999 = and i32 %1996, 255
  br label %2007

2000:                                             ; preds = %1975
  %2001 = zext i8 %1989 to i64
  %2002 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %2001, i32 1
  %2003 = load i8, ptr %2002, align 1, !tbaa !43
  %2004 = zext i8 %2003 to i32
  %2005 = load i32, ptr %107, align 4, !tbaa !41
  %2006 = add nsw i32 %2005, %2004
  store i32 %2006, ptr %107, align 4, !tbaa !41
  br label %2007

2007:                                             ; preds = %2000, %1993
  %2008 = phi i8 [ %1977, %2000 ], [ %1998, %1993 ]
  %2009 = phi i32 [ 0, %2000 ], [ %1999, %1993 ]
  %2010 = zext i8 %2008 to i32
  %2011 = add nuw nsw i32 %2009, %2010
  %2012 = icmp ult i32 %2011, 128
  %2013 = add nuw nsw i32 %2011, 1
  %2014 = lshr i32 %2013, 1
  %2015 = select i1 %2012, i32 %2014, i32 %2011
  %2016 = and i32 %2015, 127
  %2017 = zext i32 %2016 to i64
  %2018 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %2017
  %2019 = load i8, ptr %2018, align 1, !tbaa !5
  %2020 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 18
  %2021 = load i8, ptr %2020, align 1, !tbaa !5
  %2022 = icmp eq i8 %2021, 0
  br i1 %2022, label %2028, label %2023

2023:                                             ; preds = %2007
  %2024 = zext i8 %2019 to i32
  %2025 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 19, i64 1
  %2026 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %2025, i32 noundef %2024)
  %2027 = trunc i32 %2026 to i8
  store i8 %2027, ptr %2020, align 1, !tbaa !5
  br label %2035

2028:                                             ; preds = %2007
  %2029 = zext i8 %2019 to i64
  %2030 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %2029, i32 1
  %2031 = load i8, ptr %2030, align 1, !tbaa !43
  %2032 = zext i8 %2031 to i32
  %2033 = load i32, ptr %107, align 4, !tbaa !41
  %2034 = add nsw i32 %2033, %2032
  store i32 %2034, ptr %107, align 4, !tbaa !41
  br label %2035

2035:                                             ; preds = %2028, %2023
  %2036 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 32
  %2037 = load i8, ptr %2036, align 1, !tbaa !5
  %2038 = zext i8 %2037 to i32
  %2039 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 25
  %2040 = load i8, ptr %2039, align 1, !tbaa !5
  %2041 = zext i8 %2040 to i32
  %2042 = add nuw nsw i32 %2041, %2038
  %2043 = icmp ult i32 %2042, 128
  %2044 = add nuw nsw i32 %2042, 1
  %2045 = lshr i32 %2044, 1
  %2046 = select i1 %2043, i32 %2045, i32 %2042
  %2047 = and i32 %2046, 127
  %2048 = zext i32 %2047 to i64
  %2049 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %2048
  %2050 = load i8, ptr %2049, align 1, !tbaa !5
  %2051 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 33
  %2052 = load i8, ptr %2051, align 1, !tbaa !5
  %2053 = icmp eq i8 %2052, 0
  br i1 %2053, label %2060, label %2054

2054:                                             ; preds = %2035
  %2055 = zext i8 %2050 to i32
  %2056 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 20, i64 1
  %2057 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %2056, i32 noundef %2055)
  %2058 = trunc i32 %2057 to i8
  store i8 %2058, ptr %2051, align 1, !tbaa !5
  %2059 = and i32 %2057, 255
  br label %2067

2060:                                             ; preds = %2035
  %2061 = zext i8 %2050 to i64
  %2062 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %2061, i32 1
  %2063 = load i8, ptr %2062, align 1, !tbaa !43
  %2064 = zext i8 %2063 to i32
  %2065 = load i32, ptr %107, align 4, !tbaa !41
  %2066 = add nsw i32 %2065, %2064
  store i32 %2066, ptr %107, align 4, !tbaa !41
  br label %2067

2067:                                             ; preds = %2060, %2054
  %2068 = phi i32 [ 0, %2060 ], [ %2059, %2054 ]
  %2069 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 26
  %2070 = load i8, ptr %2069, align 1, !tbaa !5
  %2071 = zext i8 %2070 to i32
  %2072 = add nuw nsw i32 %2068, %2071
  %2073 = icmp ult i32 %2072, 128
  %2074 = add nuw nsw i32 %2072, 1
  %2075 = lshr i32 %2074, 1
  %2076 = select i1 %2073, i32 %2075, i32 %2072
  %2077 = and i32 %2076, 127
  %2078 = zext i32 %2077 to i64
  %2079 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %2078
  %2080 = load i8, ptr %2079, align 1, !tbaa !5
  %2081 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 34
  %2082 = load i8, ptr %2081, align 1, !tbaa !5
  %2083 = icmp eq i8 %2082, 0
  br i1 %2083, label %2091, label %2084

2084:                                             ; preds = %2067
  %2085 = zext i8 %2080 to i32
  %2086 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 21, i64 1
  %2087 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %2086, i32 noundef %2085)
  %2088 = trunc i32 %2087 to i8
  store i8 %2088, ptr %2081, align 1, !tbaa !5
  %2089 = load i8, ptr %2051, align 1, !tbaa !5
  %2090 = zext i8 %2089 to i32
  br label %2098

2091:                                             ; preds = %2067
  %2092 = zext i8 %2080 to i64
  %2093 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %2092, i32 1
  %2094 = load i8, ptr %2093, align 1, !tbaa !43
  %2095 = zext i8 %2094 to i32
  %2096 = load i32, ptr %107, align 4, !tbaa !41
  %2097 = add nsw i32 %2096, %2095
  store i32 %2097, ptr %107, align 4, !tbaa !41
  br label %2098

2098:                                             ; preds = %2091, %2084
  %2099 = phi i32 [ %2068, %2091 ], [ %2090, %2084 ]
  %2100 = phi i8 [ 0, %2091 ], [ %2088, %2084 ]
  %2101 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 40
  %2102 = load i8, ptr %2101, align 1, !tbaa !5
  %2103 = zext i8 %2102 to i32
  %2104 = add nuw nsw i32 %2099, %2103
  %2105 = icmp ult i32 %2104, 128
  %2106 = add nuw nsw i32 %2104, 1
  %2107 = lshr i32 %2106, 1
  %2108 = select i1 %2105, i32 %2107, i32 %2104
  %2109 = and i32 %2108, 127
  %2110 = zext i32 %2109 to i64
  %2111 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %2110
  %2112 = load i8, ptr %2111, align 1, !tbaa !5
  %2113 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 41
  %2114 = load i8, ptr %2113, align 1, !tbaa !5
  %2115 = icmp eq i8 %2114, 0
  br i1 %2115, label %2123, label %2116

2116:                                             ; preds = %2098
  %2117 = zext i8 %2112 to i32
  %2118 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 22, i64 1
  %2119 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %2118, i32 noundef %2117)
  %2120 = trunc i32 %2119 to i8
  store i8 %2120, ptr %2113, align 1, !tbaa !5
  %2121 = load i8, ptr %2081, align 1, !tbaa !5
  %2122 = and i32 %2119, 255
  br label %2130

2123:                                             ; preds = %2098
  %2124 = zext i8 %2112 to i64
  %2125 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %2124, i32 1
  %2126 = load i8, ptr %2125, align 1, !tbaa !43
  %2127 = zext i8 %2126 to i32
  %2128 = load i32, ptr %107, align 4, !tbaa !41
  %2129 = add nsw i32 %2128, %2127
  store i32 %2129, ptr %107, align 4, !tbaa !41
  br label %2130

2130:                                             ; preds = %2123, %2116
  %2131 = phi i8 [ %2100, %2123 ], [ %2121, %2116 ]
  %2132 = phi i32 [ 0, %2123 ], [ %2122, %2116 ]
  %2133 = zext i8 %2131 to i32
  %2134 = add nuw nsw i32 %2132, %2133
  %2135 = icmp ult i32 %2134, 128
  %2136 = add nuw nsw i32 %2134, 1
  %2137 = lshr i32 %2136, 1
  %2138 = select i1 %2135, i32 %2137, i32 %2134
  %2139 = and i32 %2138, 127
  %2140 = zext i32 %2139 to i64
  %2141 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %2140
  %2142 = load i8, ptr %2141, align 1, !tbaa !5
  %2143 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 42
  %2144 = load i8, ptr %2143, align 1, !tbaa !5
  %2145 = icmp eq i8 %2144, 0
  br i1 %2145, label %2151, label %2146

2146:                                             ; preds = %2130
  %2147 = zext i8 %2142 to i32
  %2148 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 23, i64 1
  %2149 = call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %2148, i32 noundef %2147)
  %2150 = trunc i32 %2149 to i8
  store i8 %2150, ptr %2143, align 1, !tbaa !5
  br label %2158

2151:                                             ; preds = %2130
  %2152 = zext i8 %2142 to i64
  %2153 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %2152, i32 1
  %2154 = load i8, ptr %2153, align 1, !tbaa !43
  %2155 = zext i8 %2154 to i32
  %2156 = load i32, ptr %107, align 4, !tbaa !41
  %2157 = add nsw i32 %2156, %2155
  store i32 %2157, ptr %107, align 4, !tbaa !41
  br label %2158

2158:                                             ; preds = %1878, %1908, %2146, %2151
  %2159 = load i32, ptr %107, align 4, !tbaa !41
  %2160 = mul nsw i32 %2159, %1
  %2161 = add nsw i32 %2160, 128
  %2162 = ashr i32 %2161, 8
  br label %2163

2163:                                             ; preds = %87, %2158, %80
  %2164 = phi i32 [ %82, %80 ], [ %99, %87 ], [ %2162, %2158 ]
  %2165 = add nsw i32 %29, %23
  %2166 = sext i32 %2165 to i64
  %2167 = sext i32 %31 to i64
  %2168 = mul nsw i64 %2166, %2167
  %2169 = add nsw i64 %2168, 128
  %2170 = lshr i64 %2169, 8
  %2171 = trunc i64 %2170 to i32
  %2172 = add i32 %75, %2171
  %2173 = add i32 %2172, %78
  store i32 %14, ptr %13, align 4, !tbaa !51
  store i32 %16, ptr %15, align 8, !tbaa !49
  %2174 = add nsw i32 %2173, %2164
  ret i32 %2174
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

declare void @x264_macroblock_encode_p8x8(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc i32 @ssd_plane(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #3 {
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !46
  %9 = zext i32 %3 to i64
  %10 = getelementptr inbounds i8, ptr %8, i64 %9
  %11 = shl nsw i32 %4, 5
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, ptr %10, i64 %12
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 %6
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %17, label %130

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %19 = load i32, ptr %18, align 4, !tbaa !57
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %130, label %21

21:                                               ; preds = %17
  %22 = icmp slt i32 %1, 4
  br i1 %22, label %23, label %71

23:                                               ; preds = %21
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 13, i64 %24
  %26 = load ptr, ptr %25, align 8, !tbaa !46
  %27 = tail call i64 %26(ptr noundef %13, i32 noundef 32) #17
  %28 = getelementptr inbounds [4 x i8], ptr @cached_hadamard.hadamard_shift_x, i64 0, i64 %24
  %29 = load i8, ptr %28, align 1, !tbaa !5
  %30 = zext i8 %29 to i32
  %31 = lshr i32 %3, %30
  %32 = getelementptr inbounds [4 x i8], ptr @cached_hadamard.hadamard_shift_y, i64 0, i64 %24
  %33 = load i8, ptr %32, align 1, !tbaa !5
  %34 = zext i8 %33 to i32
  %35 = ashr i32 %4, %34
  %36 = add nsw i32 %35, %31
  %37 = getelementptr inbounds [4 x i8], ptr @cached_hadamard.hadamard_offset, i64 0, i64 %24
  %38 = load i8, ptr %37, align 1, !tbaa !5
  %39 = zext i8 %38 to i32
  %40 = add nsw i32 %36, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 13, i64 %41
  %43 = load i64, ptr %42, align 8, !tbaa !58
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %23
  %46 = add i64 %43, -1
  br label %57

47:                                               ; preds = %23
  %48 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %49 = load ptr, ptr %48, align 16, !tbaa !46
  %50 = getelementptr inbounds i8, ptr %49, i64 %9
  %51 = shl nsw i32 %4, 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, ptr %50, i64 %52
  %54 = load ptr, ptr %25, align 8, !tbaa !46
  %55 = tail call i64 %54(ptr noundef %53, i32 noundef 16) #17
  %56 = add i64 %55, 1
  store i64 %56, ptr %42, align 8, !tbaa !58
  br label %57

57:                                               ; preds = %45, %47
  %58 = phi i64 [ %46, %45 ], [ %55, %47 ]
  %59 = trunc i64 %27 to i32
  %60 = trunc i64 %58 to i32
  %61 = sub nsw i32 %59, %60
  %62 = tail call i32 @llvm.abs.i32(i32 %61, i1 true)
  %63 = lshr i64 %27, 32
  %64 = trunc i64 %63 to i32
  %65 = lshr i64 %58, 32
  %66 = trunc i64 %65 to i32
  %67 = sub nsw i32 %64, %66
  %68 = tail call i32 @llvm.abs.i32(i32 %67, i1 true)
  %69 = add nuw nsw i32 %68, %62
  %70 = lshr i32 %69, 1
  br label %121

71:                                               ; preds = %21
  %72 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69
  %73 = zext i32 %1 to i64
  %74 = getelementptr inbounds [7 x ptr], ptr %72, i64 0, i64 %73
  %75 = load ptr, ptr %74, align 8, !tbaa !46
  %76 = tail call i32 %75(ptr noundef %13, i32 noundef 32, ptr noundef nonnull @ssd_plane.zero, i32 noundef 0) #17
  %77 = ashr i32 %76, 1
  %78 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 2, i64 %73
  %79 = load ptr, ptr %78, align 8, !tbaa !46
  %80 = tail call i32 %79(ptr noundef %13, i32 noundef 32, ptr noundef nonnull @ssd_plane.zero, i32 noundef 0) #17
  %81 = add nsw i32 %1, -4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds [3 x i8], ptr @cached_satd.satd_shift_x, i64 0, i64 %82
  %84 = load i8, ptr %83, align 1, !tbaa !5
  %85 = zext i8 %84 to i32
  %86 = lshr i32 %3, %85
  %87 = getelementptr inbounds [3 x i8], ptr @cached_satd.satd_shift_y, i64 0, i64 %82
  %88 = load i8, ptr %87, align 1, !tbaa !5
  %89 = zext i8 %88 to i32
  %90 = ashr i32 %4, %89
  %91 = add nsw i32 %90, %86
  %92 = getelementptr inbounds [3 x i8], ptr @cached_satd.satd_offset, i64 0, i64 %82
  %93 = load i8, ptr %92, align 1, !tbaa !5
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 15, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !39
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %71
  %101 = add nsw i32 %98, -1
  br label %116

102:                                              ; preds = %71
  %103 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %104 = load ptr, ptr %103, align 16, !tbaa !46
  %105 = getelementptr inbounds i8, ptr %104, i64 %9
  %106 = shl nsw i32 %4, 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, ptr %105, i64 %107
  %109 = load ptr, ptr %74, align 8, !tbaa !46
  %110 = tail call i32 %109(ptr noundef %108, i32 noundef 16, ptr noundef nonnull @cached_satd.zero, i32 noundef 0) #17
  %111 = ashr i32 %110, 1
  %112 = load ptr, ptr %78, align 8, !tbaa !46
  %113 = tail call i32 %112(ptr noundef %108, i32 noundef 16, ptr noundef nonnull @cached_satd.zero, i32 noundef 0) #17
  %114 = sub nsw i32 %113, %111
  %115 = add nsw i32 %114, 1
  store i32 %115, ptr %97, align 4, !tbaa !39
  br label %116

116:                                              ; preds = %100, %102
  %117 = phi i32 [ %101, %100 ], [ %114, %102 ]
  %118 = add i32 %77, %117
  %119 = sub i32 %80, %118
  %120 = tail call i32 @llvm.abs.i32(i32 %119, i1 true)
  br label %121

121:                                              ; preds = %116, %57
  %122 = phi i32 [ %70, %57 ], [ %120, %116 ]
  %123 = load i32, ptr %18, align 4, !tbaa !57
  %124 = mul nsw i32 %123, %122
  %125 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 77
  %126 = load i32, ptr %125, align 16, !tbaa !59
  %127 = mul nsw i32 %124, %126
  %128 = add nsw i32 %127, 128
  %129 = ashr i32 %128, 8
  br label %130

130:                                              ; preds = %121, %17, %5
  %131 = phi i32 [ %129, %121 ], [ 0, %17 ], [ 0, %5 ]
  %132 = getelementptr inbounds i8, ptr %15, i64 %9
  %133 = shl nsw i32 %4, 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, ptr %132, i64 %134
  %136 = sext i32 %1 to i64
  %137 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 %136
  %138 = load ptr, ptr %137, align 8, !tbaa !46
  %139 = tail call i32 %138(ptr noundef %135, i32 noundef 16, ptr noundef %13, i32 noundef 32) #17
  %140 = add nsw i32 %139, %131
  ret i32 %140
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @x264_rdo_init() local_unnamed_addr #4 {
  %1 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 112, i64 0), align 16
  %2 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 112), align 16
  %3 = add i16 %2, 256
  %4 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 113, i64 0), align 2
  %5 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 113), align 2
  %6 = add i16 %5, 256
  %7 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 114, i64 0), align 4
  %8 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 114), align 4
  %9 = add i16 %8, 256
  %10 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 115, i64 0), align 2
  %11 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 115), align 2
  %12 = add i16 %11, 256
  %13 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 116, i64 0), align 8
  %14 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 116), align 8
  %15 = add i16 %14, 256
  %16 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 117, i64 0), align 2
  %17 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 117), align 2
  %18 = add i16 %17, 256
  %19 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 118, i64 0), align 4
  %20 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 118), align 4
  %21 = add i16 %20, 256
  %22 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 119, i64 0), align 2
  %23 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 119), align 2
  %24 = add i16 %23, 256
  %25 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 120, i64 0), align 16
  %26 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 120), align 16
  %27 = add i16 %26, 256
  %28 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 121, i64 0), align 2
  %29 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 121), align 2
  %30 = add i16 %29, 256
  %31 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 122, i64 0), align 4
  %32 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 122), align 4
  %33 = add i16 %32, 256
  %34 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 123, i64 0), align 2
  %35 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 123), align 2
  %36 = add i16 %35, 256
  %37 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 124, i64 0), align 8
  %38 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 124), align 8
  %39 = add i16 %38, 256
  %40 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 125, i64 0), align 2
  %41 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 125), align 2
  %42 = add i16 %41, 256
  %43 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 126, i64 0), align 4
  %44 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 126), align 4
  %45 = add i16 %44, 256
  %46 = load i8, ptr getelementptr inbounds ([128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 127, i64 0), align 2
  %47 = load i16, ptr getelementptr inbounds ([128 x i16], ptr @x264_cabac_entropy, i64 0, i64 127), align 2
  %48 = add i16 %47, 256
  br label %49

49:                                               ; preds = %0, %238
  %50 = phi i64 [ 0, %0 ], [ %239, %238 ]
  %51 = add nsw i64 %50, -1
  %52 = icmp ugt i64 %50, 1
  %53 = trunc i64 %50 to i32
  %54 = add i32 %53, -1
  %55 = icmp ult i32 %54, 13
  br i1 %52, label %56, label %115

56:                                               ; preds = %49
  %57 = and i64 %51, 1
  %58 = icmp eq i64 %50, 2
  %59 = and i64 %51, -2
  %60 = icmp eq i64 %57, 0
  br label %61

61:                                               ; preds = %56, %71
  %62 = phi i64 [ %77, %71 ], [ 0, %56 ]
  %63 = trunc i64 %62 to i8
  br i1 %58, label %99, label %79

64:                                               ; preds = %112
  %65 = zext i8 %113 to i64
  %66 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %65, i64 0
  %67 = load i8, ptr %66, align 2, !tbaa !5
  %68 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %65
  %69 = load i16, ptr %68, align 2, !tbaa !37
  %70 = add i16 %69, %114
  br label %71

71:                                               ; preds = %64, %112
  %72 = phi i8 [ %67, %64 ], [ %113, %112 ]
  %73 = phi i16 [ %70, %64 ], [ %114, %112 ]
  %74 = add i16 %73, 256
  %75 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 %62
  store i16 %74, ptr %75, align 2, !tbaa !37
  %76 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 %62
  store i8 %72, ptr %76, align 1, !tbaa !5
  %77 = add nuw nsw i64 %62, 1
  %78 = icmp eq i64 %77, 128
  br i1 %78, label %238, label %61, !llvm.loop !77

79:                                               ; preds = %61, %79
  %80 = phi i16 [ %96, %79 ], [ 0, %61 ]
  %81 = phi i8 [ %92, %79 ], [ %63, %61 ]
  %82 = phi i64 [ %97, %79 ], [ 0, %61 ]
  %83 = zext i8 %81 to i64
  %84 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %83, i64 1
  %85 = load i8, ptr %84, align 1, !tbaa !5
  %86 = xor i64 %83, 1
  %87 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %86
  %88 = load i16, ptr %87, align 2, !tbaa !37
  %89 = add i16 %88, %80
  %90 = zext i8 %85 to i64
  %91 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %90, i64 1
  %92 = load i8, ptr %91, align 1, !tbaa !5
  %93 = xor i64 %90, 1
  %94 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %93
  %95 = load i16, ptr %94, align 2, !tbaa !37
  %96 = add i16 %95, %89
  %97 = add i64 %82, 2
  %98 = icmp eq i64 %97, %59
  br i1 %98, label %99, label %79, !llvm.loop !78

99:                                               ; preds = %79, %61
  %100 = phi i8 [ undef, %61 ], [ %92, %79 ]
  %101 = phi i16 [ undef, %61 ], [ %96, %79 ]
  %102 = phi i16 [ 0, %61 ], [ %96, %79 ]
  %103 = phi i8 [ %63, %61 ], [ %92, %79 ]
  br i1 %60, label %112, label %104

104:                                              ; preds = %99
  %105 = zext i8 %103 to i64
  %106 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %105, i64 1
  %107 = load i8, ptr %106, align 1, !tbaa !5
  %108 = xor i64 %105, 1
  %109 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %108
  %110 = load i16, ptr %109, align 2, !tbaa !37
  %111 = add i16 %110, %102
  br label %112

112:                                              ; preds = %99, %104
  %113 = phi i8 [ %100, %99 ], [ %107, %104 ]
  %114 = phi i16 [ %101, %99 ], [ %111, %104 ]
  br i1 %55, label %64, label %71

115:                                              ; preds = %49
  br i1 %55, label %133, label %116

116:                                              ; preds = %115
  %117 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 0
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %117, align 16, !tbaa !37
  %118 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 0
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, ptr %118, align 16, !tbaa !5
  %119 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 16
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %119, align 16, !tbaa !37
  %120 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 16
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, ptr %120, align 16, !tbaa !5
  %121 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 32
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %121, align 16, !tbaa !37
  %122 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 32
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, ptr %122, align 16, !tbaa !5
  %123 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 48
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %123, align 16, !tbaa !37
  %124 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 48
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, ptr %124, align 16, !tbaa !5
  %125 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 64
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %125, align 16, !tbaa !37
  %126 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 64
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, ptr %126, align 16, !tbaa !5
  %127 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 80
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %127, align 16, !tbaa !37
  %128 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 80
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, ptr %128, align 16, !tbaa !5
  %129 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 96
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %129, align 16, !tbaa !37
  %130 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 96
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, ptr %130, align 16, !tbaa !5
  %131 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 112
  store <16 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, ptr %131, align 16, !tbaa !37
  %132 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 112
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, ptr %132, align 16, !tbaa !5
  br label %238

133:                                              ; preds = %115, %133
  %134 = phi i64 [ %203, %133 ], [ 0, %115 ]
  %135 = or i64 %134, 1
  %136 = or i64 %134, 2
  %137 = or i64 %134, 3
  %138 = or i64 %134, 4
  %139 = or i64 %134, 5
  %140 = or i64 %134, 6
  %141 = or i64 %134, 7
  %142 = or i64 %134, 8
  %143 = or i64 %134, 9
  %144 = or i64 %134, 10
  %145 = or i64 %134, 11
  %146 = or i64 %134, 12
  %147 = or i64 %134, 13
  %148 = or i64 %134, 14
  %149 = or i64 %134, 15
  %150 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %134, i64 0
  %151 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %135, i64 0
  %152 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %136, i64 0
  %153 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %137, i64 0
  %154 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %138, i64 0
  %155 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %139, i64 0
  %156 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %140, i64 0
  %157 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %141, i64 0
  %158 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %142, i64 0
  %159 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %143, i64 0
  %160 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %144, i64 0
  %161 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %145, i64 0
  %162 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %146, i64 0
  %163 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %147, i64 0
  %164 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %148, i64 0
  %165 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %149, i64 0
  %166 = load i8, ptr %150, align 16, !tbaa !5
  %167 = load i8, ptr %151, align 2, !tbaa !5
  %168 = load i8, ptr %152, align 4, !tbaa !5
  %169 = load i8, ptr %153, align 2, !tbaa !5
  %170 = load i8, ptr %154, align 8, !tbaa !5
  %171 = load i8, ptr %155, align 2, !tbaa !5
  %172 = load i8, ptr %156, align 4, !tbaa !5
  %173 = load i8, ptr %157, align 2, !tbaa !5
  %174 = load i8, ptr %158, align 16, !tbaa !5
  %175 = load i8, ptr %159, align 2, !tbaa !5
  %176 = load i8, ptr %160, align 4, !tbaa !5
  %177 = load i8, ptr %161, align 2, !tbaa !5
  %178 = load i8, ptr %162, align 8, !tbaa !5
  %179 = load i8, ptr %163, align 2, !tbaa !5
  %180 = load i8, ptr %164, align 4, !tbaa !5
  %181 = load i8, ptr %165, align 2, !tbaa !5
  %182 = insertelement <16 x i8> poison, i8 %166, i64 0
  %183 = insertelement <16 x i8> %182, i8 %167, i64 1
  %184 = insertelement <16 x i8> %183, i8 %168, i64 2
  %185 = insertelement <16 x i8> %184, i8 %169, i64 3
  %186 = insertelement <16 x i8> %185, i8 %170, i64 4
  %187 = insertelement <16 x i8> %186, i8 %171, i64 5
  %188 = insertelement <16 x i8> %187, i8 %172, i64 6
  %189 = insertelement <16 x i8> %188, i8 %173, i64 7
  %190 = insertelement <16 x i8> %189, i8 %174, i64 8
  %191 = insertelement <16 x i8> %190, i8 %175, i64 9
  %192 = insertelement <16 x i8> %191, i8 %176, i64 10
  %193 = insertelement <16 x i8> %192, i8 %177, i64 11
  %194 = insertelement <16 x i8> %193, i8 %178, i64 12
  %195 = insertelement <16 x i8> %194, i8 %179, i64 13
  %196 = insertelement <16 x i8> %195, i8 %180, i64 14
  %197 = insertelement <16 x i8> %196, i8 %181, i64 15
  %198 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %134
  %199 = load <16 x i16>, ptr %198, align 16, !tbaa !37
  %200 = add <16 x i16> %199, <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>
  %201 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 %134
  store <16 x i16> %200, ptr %201, align 16, !tbaa !37
  %202 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 %134
  store <16 x i8> %197, ptr %202, align 16, !tbaa !5
  %203 = add nuw i64 %134, 16
  %204 = icmp eq i64 %203, 112
  br i1 %204, label %205, label %133, !llvm.loop !79

205:                                              ; preds = %133
  %206 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 112
  store i16 %3, ptr %206, align 16, !tbaa !37
  %207 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 112
  store i8 %1, ptr %207, align 16, !tbaa !5
  %208 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 113
  store i16 %6, ptr %208, align 2, !tbaa !37
  %209 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 113
  store i8 %4, ptr %209, align 1, !tbaa !5
  %210 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 114
  store i16 %9, ptr %210, align 4, !tbaa !37
  %211 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 114
  store i8 %7, ptr %211, align 2, !tbaa !5
  %212 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 115
  store i16 %12, ptr %212, align 2, !tbaa !37
  %213 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 115
  store i8 %10, ptr %213, align 1, !tbaa !5
  %214 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 116
  store i16 %15, ptr %214, align 8, !tbaa !37
  %215 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 116
  store i8 %13, ptr %215, align 4, !tbaa !5
  %216 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 117
  store i16 %18, ptr %216, align 2, !tbaa !37
  %217 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 117
  store i8 %16, ptr %217, align 1, !tbaa !5
  %218 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 118
  store i16 %21, ptr %218, align 4, !tbaa !37
  %219 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 118
  store i8 %19, ptr %219, align 2, !tbaa !5
  %220 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 119
  store i16 %24, ptr %220, align 2, !tbaa !37
  %221 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 119
  store i8 %22, ptr %221, align 1, !tbaa !5
  %222 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 120
  store i16 %27, ptr %222, align 16, !tbaa !37
  %223 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 120
  store i8 %25, ptr %223, align 8, !tbaa !5
  %224 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 121
  store i16 %30, ptr %224, align 2, !tbaa !37
  %225 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 121
  store i8 %28, ptr %225, align 1, !tbaa !5
  %226 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 122
  store i16 %33, ptr %226, align 4, !tbaa !37
  %227 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 122
  store i8 %31, ptr %227, align 2, !tbaa !5
  %228 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 123
  store i16 %36, ptr %228, align 2, !tbaa !37
  %229 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 123
  store i8 %34, ptr %229, align 1, !tbaa !5
  %230 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 124
  store i16 %39, ptr %230, align 8, !tbaa !37
  %231 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 124
  store i8 %37, ptr %231, align 4, !tbaa !5
  %232 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 125
  store i16 %42, ptr %232, align 2, !tbaa !37
  %233 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 125
  store i8 %40, ptr %233, align 1, !tbaa !5
  %234 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 126
  store i16 %45, ptr %234, align 4, !tbaa !37
  %235 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 126
  store i8 %43, ptr %235, align 2, !tbaa !5
  %236 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %50, i64 127
  store i16 %48, ptr %236, align 2, !tbaa !37
  %237 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %50, i64 127
  store i8 %46, ptr %237, align 1, !tbaa !5
  br label %238

238:                                              ; preds = %71, %116, %205
  %239 = add nuw nsw i64 %50, 1
  %240 = icmp eq i64 %239, 15
  br i1 %240, label %242, label %49, !llvm.loop !82

241:                                              ; preds = %242
  ret void

242:                                              ; preds = %238, %242
  %243 = phi i64 [ %281, %242 ], [ 0, %238 ]
  %244 = and i64 %243, 255
  %245 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %244, i64 1
  %246 = load i8, ptr %245, align 1, !tbaa !5
  %247 = xor i64 %244, 1
  %248 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %247
  %249 = load i16, ptr %248, align 2, !tbaa !37
  %250 = zext i8 %246 to i64
  %251 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %250, i64 1
  %252 = load i8, ptr %251, align 1, !tbaa !5
  %253 = xor i64 %250, 1
  %254 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %253
  %255 = load i16, ptr %254, align 2, !tbaa !37
  %256 = add i16 %255, %249
  %257 = zext i8 %252 to i64
  %258 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %257, i64 1
  %259 = load i8, ptr %258, align 1, !tbaa !5
  %260 = xor i64 %257, 1
  %261 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %260
  %262 = load i16, ptr %261, align 2, !tbaa !37
  %263 = add i16 %262, %256
  %264 = zext i8 %259 to i64
  %265 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %264, i64 1
  %266 = load i8, ptr %265, align 1, !tbaa !5
  %267 = xor i64 %264, 1
  %268 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %267
  %269 = load i16, ptr %268, align 2, !tbaa !37
  %270 = add i16 %269, %263
  %271 = zext i8 %266 to i64
  %272 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %271, i64 1
  %273 = load i8, ptr %272, align 1, !tbaa !5
  %274 = xor i64 %271, 1
  %275 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %274
  %276 = load i16, ptr %275, align 2, !tbaa !37
  %277 = add i16 %276, %270
  %278 = add i16 %277, 256
  %279 = getelementptr inbounds [128 x i16], ptr @cabac_size_5ones, i64 0, i64 %243
  store i16 %278, ptr %279, align 2, !tbaa !37
  %280 = getelementptr inbounds [128 x i8], ptr @cabac_transition_5ones, i64 0, i64 %243
  store i8 %273, ptr %280, align 1, !tbaa !5
  %281 = add nuw nsw i64 %243, 1
  %282 = icmp eq i64 %281, 128
  br i1 %282, label %241, label %242, !llvm.loop !83
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @x264_quant_dc_trellis(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) local_unnamed_addr #5 {
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 33, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = sext i32 %3 to i64
  %12 = getelementptr inbounds [16 x i16], ptr %10, i64 %11
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 31, i64 %8
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = getelementptr inbounds [16 x i32], ptr %14, i64 %11
  %16 = icmp eq i32 %4, 3
  br i1 %16, label %17, label %23

17:                                               ; preds = %7
  %18 = sext i32 %6 to i64
  %19 = sext i32 %5 to i64
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 %18, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !39
  %22 = tail call fastcc i32 @quant_trellis_cabac(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %12, ptr noundef %15, ptr noundef null, ptr noundef nonnull @x264_zigzag_scan2, i32 noundef 3, i32 noundef %21, i32 noundef 0, i32 noundef 1, i32 noundef 4, i32 noundef 0), !range !84
  br label %33

23:                                               ; preds = %7
  %24 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %25 = load i32, ptr %24, align 4, !tbaa !36
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [2 x [16 x i8]], ptr @x264_zigzag_scan4, i64 0, i64 %26
  %28 = sext i32 %6 to i64
  %29 = sext i32 %5 to i64
  %30 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 %28, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !39
  %32 = tail call fastcc i32 @quant_trellis_cabac(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %12, ptr noundef %15, ptr noundef null, ptr noundef nonnull %27, i32 noundef %4, i32 noundef %31, i32 noundef 0, i32 noundef 1, i32 noundef 16, i32 noundef 0), !range !84
  br label %33

33:                                               ; preds = %17, %23
  %34 = phi i32 [ %32, %23 ], [ %22, %17 ]
  ret i32 %34
}

; Function Attrs: inlinehint nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc i32 @quant_trellis_cabac(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4, ptr nocapture noundef readonly %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10, i32 noundef %11) unnamed_addr #6 {
  %13 = alloca [64 x i32], align 16
  %14 = alloca [64 x i32], align 16
  %15 = alloca [2 x [8 x %struct.trellis_node_t]], align 16
  %16 = alloca [1024 x %struct.anon.16], align 16
  %17 = alloca [2 x i32], align 4
  %18 = alloca [2 x i32], align 4
  %19 = alloca %struct.trellis_node_t, align 8
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %13) #17
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %14) #17
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %15) #17
  %20 = getelementptr inbounds [2 x [8 x %struct.trellis_node_t]], ptr %15, i64 0, i64 1
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %22 = load i32, ptr %21, align 4, !tbaa !36
  %23 = sext i32 %22 to i64
  %24 = sext i32 %6 to i64
  %25 = getelementptr inbounds [2 x [6 x i16]], ptr @significant_coeff_flag_offset, i64 0, i64 %23, i64 %24
  %26 = load i16, ptr %25, align 2, !tbaa !37
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %27
  %29 = getelementptr inbounds [2 x [6 x i16]], ptr @last_coeff_flag_offset, i64 0, i64 %23, i64 %24
  %30 = load i16, ptr %29, align 2, !tbaa !37
  %31 = zext i16 %30 to i64
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %31
  call void @llvm.lifetime.start.p0(i64 4096, ptr nonnull %16) #17
  %33 = add nsw i32 %10, -1
  %34 = icmp sgt i32 %10, %8
  br i1 %34, label %35, label %99

35:                                               ; preds = %12
  %36 = icmp eq i32 %9, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %35, %52
  %38 = phi i32 [ %53, %52 ], [ %33, %35 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, ptr %5, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !5
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds i16, ptr %1, i64 %42
  %44 = load i16, ptr %43, align 2, !tbaa !37
  %45 = sext i16 %44 to i32
  %46 = getelementptr inbounds i16, ptr %2, i64 %42
  %47 = load i16, ptr %46, align 2, !tbaa !37
  %48 = zext i16 %47 to i32
  %49 = mul nsw i32 %48, %45
  %50 = add i32 %49, -32769
  %51 = icmp ult i32 %50, -65536
  br i1 %51, label %71, label %52

52:                                               ; preds = %37
  %53 = add nsw i32 %38, -1
  %54 = icmp sgt i32 %38, %8
  br i1 %54, label %37, label %99, !llvm.loop !85

55:                                               ; preds = %35
  %56 = load i16, ptr %2, align 2, !tbaa !37
  %57 = lshr i16 %56, 1
  %58 = zext i16 %57 to i32
  br label %59

59:                                               ; preds = %55, %96
  %60 = phi i32 [ %33, %55 ], [ %97, %96 ]
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, ptr %5, i64 %61
  %63 = load i8, ptr %62, align 1, !tbaa !5
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds i16, ptr %1, i64 %64
  %66 = load i16, ptr %65, align 2, !tbaa !37
  %67 = sext i16 %66 to i32
  %68 = mul nsw i32 %58, %67
  %69 = add nsw i32 %68, -32769
  %70 = icmp ult i32 %69, -65536
  br i1 %70, label %71, label %96

71:                                               ; preds = %59, %37
  %72 = phi i32 [ %38, %37 ], [ %60, %59 ]
  %73 = icmp slt i32 %72, %8
  br i1 %73, label %103, label %74

74:                                               ; preds = %71
  %75 = add i32 %72, 1
  %76 = sub i32 %75, %8
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %74
  %80 = zext i32 %72 to i64
  %81 = getelementptr inbounds i8, ptr %5, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !5
  %83 = zext i8 %82 to i64
  %84 = getelementptr inbounds i16, ptr %1, i64 %83
  %85 = load i16, ptr %84, align 2, !tbaa !37
  %86 = tail call i16 @llvm.abs.i16(i16 %85, i1 false)
  %87 = zext i16 %86 to i32
  %88 = getelementptr inbounds [64 x i32], ptr %13, i64 0, i64 %80
  store i32 %87, ptr %88, align 4, !tbaa !39
  %89 = icmp slt i16 %85, 0
  %90 = select i1 %89, i32 -1, i32 1
  %91 = getelementptr inbounds [64 x i32], ptr %14, i64 0, i64 %80
  store i32 %90, ptr %91, align 4, !tbaa !39
  %92 = add nsw i32 %72, -1
  br label %93

93:                                               ; preds = %79, %74
  %94 = phi i32 [ %72, %74 ], [ %92, %79 ]
  %95 = icmp eq i32 %72, %8
  br i1 %95, label %103, label %118

96:                                               ; preds = %59
  %97 = add nsw i32 %60, -1
  %98 = icmp sgt i32 %60, %8
  br i1 %98, label %59, label %99, !llvm.loop !85

99:                                               ; preds = %96, %52, %12
  %100 = icmp ne i32 %10, 16
  %101 = icmp ne i32 %9, 0
  %102 = or i1 %101, %100
  br i1 %102, label %674, label %673

103:                                              ; preds = %93, %118, %71
  %104 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 1
  store i64 1125899906842624, ptr %104, align 8, !tbaa !86
  %105 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 2
  store i64 1125899906842624, ptr %105, align 16, !tbaa !86
  %106 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 3
  store i64 1125899906842624, ptr %106, align 8, !tbaa !86
  %107 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 4
  store i64 1125899906842624, ptr %107, align 16, !tbaa !86
  %108 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 5
  store i64 1125899906842624, ptr %108, align 8, !tbaa !86
  %109 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 6
  store i64 1125899906842624, ptr %109, align 16, !tbaa !86
  %110 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 7
  store i64 1125899906842624, ptr %110, align 8, !tbaa !86
  store i64 0, ptr %15, align 16, !tbaa !86
  %111 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 0, i32 1
  store i32 0, ptr %111, align 8, !tbaa !88
  store i16 0, ptr %16, align 16, !tbaa !89
  %112 = getelementptr inbounds %struct.anon.16, ptr %16, i64 0, i32 1
  store i16 0, ptr %112, align 2, !tbaa !91
  %113 = getelementptr inbounds %struct.trellis_node_t, ptr %15, i64 0, i32 2
  %114 = getelementptr inbounds [6 x i16], ptr @coeff_abs_level_m1_offset, i64 0, i64 %24
  %115 = load i16, ptr %114, align 2, !tbaa !37
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(10) %113, ptr noundef nonnull align 1 dereferenceable(10) %117, i64 10, i1 false)
  br i1 %73, label %172, label %147

118:                                              ; preds = %93, %118
  %119 = phi i32 [ %145, %118 ], [ %94, %93 ]
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds i8, ptr %5, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !5
  %123 = zext i8 %122 to i64
  %124 = getelementptr inbounds i16, ptr %1, i64 %123
  %125 = load i16, ptr %124, align 2, !tbaa !37
  %126 = tail call i16 @llvm.abs.i16(i16 %125, i1 false)
  %127 = zext i16 %126 to i32
  %128 = getelementptr inbounds [64 x i32], ptr %13, i64 0, i64 %120
  store i32 %127, ptr %128, align 4, !tbaa !39
  %129 = icmp slt i16 %125, 0
  %130 = select i1 %129, i32 -1, i32 1
  %131 = getelementptr inbounds [64 x i32], ptr %14, i64 0, i64 %120
  store i32 %130, ptr %131, align 4, !tbaa !39
  %132 = add nsw i32 %119, -1
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i8, ptr %5, i64 %133
  %135 = load i8, ptr %134, align 1, !tbaa !5
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds i16, ptr %1, i64 %136
  %138 = load i16, ptr %137, align 2, !tbaa !37
  %139 = tail call i16 @llvm.abs.i16(i16 %138, i1 false)
  %140 = zext i16 %139 to i32
  %141 = getelementptr inbounds [64 x i32], ptr %13, i64 0, i64 %133
  store i32 %140, ptr %141, align 4, !tbaa !39
  %142 = icmp slt i16 %138, 0
  %143 = select i1 %142, i32 -1, i32 1
  %144 = getelementptr inbounds [64 x i32], ptr %14, i64 0, i64 %133
  store i32 %143, ptr %144, align 4, !tbaa !39
  %145 = add nsw i32 %119, -2
  %146 = icmp sgt i32 %132, %8
  br i1 %146, label %118, label %103, !llvm.loop !92

147:                                              ; preds = %103
  %148 = getelementptr inbounds [2 x i32], ptr %17, i64 0, i64 1
  %149 = getelementptr inbounds [2 x i32], ptr %18, i64 0, i64 1
  %150 = icmp eq i32 %10, 64
  %151 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 16
  %152 = icmp ne i32 %6, 4
  %153 = sext i32 %7 to i64
  %154 = getelementptr inbounds %struct.trellis_node_t, ptr %19, i64 0, i32 1
  %155 = sext i32 %11 to i64
  br label %209

156:                                              ; preds = %585
  %157 = getelementptr inbounds %struct.trellis_node_t, ptr %588, i64 1
  %158 = load i64, ptr %157, align 8, !tbaa !86
  %159 = load i64, ptr %588, align 8, !tbaa !86
  %160 = getelementptr inbounds %struct.trellis_node_t, ptr %588, i64 2
  %161 = load i64, ptr %160, align 8, !tbaa !86
  %162 = getelementptr inbounds %struct.trellis_node_t, ptr %588, i64 3
  %163 = load i64, ptr %162, align 8, !tbaa !86
  %164 = getelementptr inbounds %struct.trellis_node_t, ptr %588, i64 4
  %165 = load i64, ptr %164, align 8, !tbaa !86
  %166 = getelementptr inbounds %struct.trellis_node_t, ptr %588, i64 5
  %167 = load i64, ptr %166, align 8, !tbaa !86
  %168 = getelementptr inbounds %struct.trellis_node_t, ptr %588, i64 6
  %169 = load i64, ptr %168, align 8, !tbaa !86
  %170 = getelementptr inbounds %struct.trellis_node_t, ptr %588, i64 7
  %171 = load i64, ptr %170, align 8, !tbaa !86
  br label %172

172:                                              ; preds = %156, %103
  %173 = phi i64 [ 1125899906842624, %103 ], [ %171, %156 ]
  %174 = phi i64 [ 1125899906842624, %103 ], [ %169, %156 ]
  %175 = phi i64 [ 1125899906842624, %103 ], [ %167, %156 ]
  %176 = phi i64 [ 1125899906842624, %103 ], [ %165, %156 ]
  %177 = phi i64 [ 1125899906842624, %103 ], [ %163, %156 ]
  %178 = phi i64 [ 1125899906842624, %103 ], [ %161, %156 ]
  %179 = phi i64 [ 0, %103 ], [ %159, %156 ]
  %180 = phi i64 [ 1125899906842624, %103 ], [ %158, %156 ]
  %181 = phi ptr [ %15, %103 ], [ %588, %156 ]
  %182 = icmp slt i64 %180, %179
  %183 = zext i1 %182 to i64
  %184 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 %183
  %185 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 2
  %186 = load i64, ptr %184, align 8, !tbaa !86
  %187 = icmp slt i64 %178, %186
  %188 = select i1 %187, ptr %185, ptr %184
  %189 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 3
  %190 = load i64, ptr %188, align 8, !tbaa !86
  %191 = icmp slt i64 %177, %190
  %192 = select i1 %191, ptr %189, ptr %188
  %193 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 4
  %194 = load i64, ptr %192, align 8, !tbaa !86
  %195 = icmp slt i64 %176, %194
  %196 = select i1 %195, ptr %193, ptr %192
  %197 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 5
  %198 = load i64, ptr %196, align 8, !tbaa !86
  %199 = icmp slt i64 %175, %198
  %200 = select i1 %199, ptr %197, ptr %196
  %201 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 6
  %202 = load i64, ptr %200, align 8, !tbaa !86
  %203 = icmp slt i64 %174, %202
  %204 = select i1 %203, ptr %201, ptr %200
  %205 = load i64, ptr %204, align 8, !tbaa !86
  %206 = icmp sge i64 %173, %205
  %207 = icmp eq ptr %204, %181
  %208 = and i1 %206, %207
  br i1 %208, label %591, label %595

209:                                              ; preds = %147, %585
  %210 = phi ptr [ %15, %147 ], [ %588, %585 ]
  %211 = phi ptr [ %20, %147 ], [ %587, %585 ]
  %212 = phi i32 [ %72, %147 ], [ %589, %585 ]
  %213 = phi i32 [ 1, %147 ], [ %586, %585 ]
  %214 = zext i32 %212 to i64
  %215 = getelementptr inbounds [64 x i32], ptr %13, i64 0, i64 %214
  %216 = load i32, ptr %215, align 4, !tbaa !39
  br i1 %36, label %220, label %217

217:                                              ; preds = %209
  %218 = load i16, ptr %2, align 2, !tbaa !37
  %219 = lshr i16 %218, 1
  br label %226

220:                                              ; preds = %209
  %221 = getelementptr inbounds i8, ptr %5, i64 %214
  %222 = load i8, ptr %221, align 1, !tbaa !5
  %223 = zext i8 %222 to i64
  %224 = getelementptr inbounds i16, ptr %2, i64 %223
  %225 = load i16, ptr %224, align 2, !tbaa !37
  br label %226

226:                                              ; preds = %220, %217
  %227 = phi i16 [ %219, %217 ], [ %225, %220 ]
  %228 = zext i16 %227 to i32
  %229 = mul nsw i32 %216, %228
  %230 = add nsw i32 %229, 32768
  %231 = ashr i32 %230, 16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %19) #17
  %232 = icmp ult i32 %230, 65536
  br i1 %232, label %242, label %233

233:                                              ; preds = %226
  store i64 1125899906842624, ptr %211, align 8, !tbaa !86
  %234 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 1
  store i64 1125899906842624, ptr %234, align 8, !tbaa !86
  %235 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 2
  store i64 1125899906842624, ptr %235, align 8, !tbaa !86
  %236 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 3
  store i64 1125899906842624, ptr %236, align 8, !tbaa !86
  %237 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 4
  store i64 1125899906842624, ptr %237, align 8, !tbaa !86
  %238 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 5
  store i64 1125899906842624, ptr %238, align 8, !tbaa !86
  %239 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 6
  store i64 1125899906842624, ptr %239, align 8, !tbaa !86
  %240 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 7
  store i64 1125899906842624, ptr %240, align 8, !tbaa !86
  %241 = icmp slt i32 %212, %33
  br i1 %241, label %354, label %385

242:                                              ; preds = %226
  br i1 %150, label %243, label %247

243:                                              ; preds = %242
  %244 = getelementptr inbounds [2 x [63 x i8]], ptr @significant_coeff_flag_offset_8x8, i64 0, i64 %23, i64 %214
  %245 = load i8, ptr %244, align 1, !tbaa !5
  %246 = zext i8 %245 to i64
  br label %247

247:                                              ; preds = %242, %243
  %248 = phi i64 [ %214, %242 ], [ %246, %243 ]
  %249 = getelementptr inbounds i8, ptr %28, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !5
  %251 = zext i8 %250 to i64
  %252 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %251
  %253 = load i16, ptr %252, align 2, !tbaa !37
  %254 = zext i16 %253 to i64
  %255 = mul nsw i64 %254, %153
  %256 = lshr i64 %255, 4
  %257 = and i64 %256, 4294967295
  %258 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 1
  %259 = load i64, ptr %258, align 8, !tbaa !86
  %260 = icmp eq i64 %259, 1125899906842624
  br i1 %260, label %270, label %261

261:                                              ; preds = %247
  %262 = sext i32 %213 to i64
  %263 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %262
  store i16 0, ptr %263, align 4, !tbaa !89
  %264 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 1, i32 1
  %265 = load i32, ptr %264, align 8, !tbaa !88
  %266 = trunc i32 %265 to i16
  %267 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %262, i32 1
  store i16 %266, ptr %267, align 2, !tbaa !91
  store i32 %213, ptr %264, align 8, !tbaa !88
  %268 = add nsw i32 %213, 1
  %269 = add nsw i64 %259, %257
  store i64 %269, ptr %258, align 8, !tbaa !86
  br label %270

270:                                              ; preds = %247, %261
  %271 = phi i32 [ %268, %261 ], [ %213, %247 ]
  %272 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 2
  %273 = load i64, ptr %272, align 8, !tbaa !86
  %274 = icmp eq i64 %273, 1125899906842624
  br i1 %274, label %284, label %275

275:                                              ; preds = %270
  %276 = sext i32 %271 to i64
  %277 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %276
  store i16 0, ptr %277, align 4, !tbaa !89
  %278 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 2, i32 1
  %279 = load i32, ptr %278, align 8, !tbaa !88
  %280 = trunc i32 %279 to i16
  %281 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %276, i32 1
  store i16 %280, ptr %281, align 2, !tbaa !91
  store i32 %271, ptr %278, align 8, !tbaa !88
  %282 = add nsw i32 %271, 1
  %283 = add nsw i64 %273, %257
  store i64 %283, ptr %272, align 8, !tbaa !86
  br label %284

284:                                              ; preds = %275, %270
  %285 = phi i32 [ %282, %275 ], [ %271, %270 ]
  %286 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 3
  %287 = load i64, ptr %286, align 8, !tbaa !86
  %288 = icmp eq i64 %287, 1125899906842624
  br i1 %288, label %298, label %289

289:                                              ; preds = %284
  %290 = sext i32 %285 to i64
  %291 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %290
  store i16 0, ptr %291, align 4, !tbaa !89
  %292 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 3, i32 1
  %293 = load i32, ptr %292, align 8, !tbaa !88
  %294 = trunc i32 %293 to i16
  %295 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %290, i32 1
  store i16 %294, ptr %295, align 2, !tbaa !91
  store i32 %285, ptr %292, align 8, !tbaa !88
  %296 = add nsw i32 %285, 1
  %297 = add nsw i64 %287, %257
  store i64 %297, ptr %286, align 8, !tbaa !86
  br label %298

298:                                              ; preds = %289, %284
  %299 = phi i32 [ %296, %289 ], [ %285, %284 ]
  %300 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 4
  %301 = load i64, ptr %300, align 8, !tbaa !86
  %302 = icmp eq i64 %301, 1125899906842624
  br i1 %302, label %312, label %303

303:                                              ; preds = %298
  %304 = sext i32 %299 to i64
  %305 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %304
  store i16 0, ptr %305, align 4, !tbaa !89
  %306 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 4, i32 1
  %307 = load i32, ptr %306, align 8, !tbaa !88
  %308 = trunc i32 %307 to i16
  %309 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %304, i32 1
  store i16 %308, ptr %309, align 2, !tbaa !91
  store i32 %299, ptr %306, align 8, !tbaa !88
  %310 = add nsw i32 %299, 1
  %311 = add nsw i64 %301, %257
  store i64 %311, ptr %300, align 8, !tbaa !86
  br label %312

312:                                              ; preds = %303, %298
  %313 = phi i32 [ %310, %303 ], [ %299, %298 ]
  %314 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 5
  %315 = load i64, ptr %314, align 8, !tbaa !86
  %316 = icmp eq i64 %315, 1125899906842624
  br i1 %316, label %326, label %317

317:                                              ; preds = %312
  %318 = sext i32 %313 to i64
  %319 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %318
  store i16 0, ptr %319, align 4, !tbaa !89
  %320 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 5, i32 1
  %321 = load i32, ptr %320, align 8, !tbaa !88
  %322 = trunc i32 %321 to i16
  %323 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %318, i32 1
  store i16 %322, ptr %323, align 2, !tbaa !91
  store i32 %313, ptr %320, align 8, !tbaa !88
  %324 = add nsw i32 %313, 1
  %325 = add nsw i64 %315, %257
  store i64 %325, ptr %314, align 8, !tbaa !86
  br label %326

326:                                              ; preds = %317, %312
  %327 = phi i32 [ %324, %317 ], [ %313, %312 ]
  %328 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 6
  %329 = load i64, ptr %328, align 8, !tbaa !86
  %330 = icmp eq i64 %329, 1125899906842624
  br i1 %330, label %340, label %331

331:                                              ; preds = %326
  %332 = sext i32 %327 to i64
  %333 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %332
  store i16 0, ptr %333, align 4, !tbaa !89
  %334 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 6, i32 1
  %335 = load i32, ptr %334, align 8, !tbaa !88
  %336 = trunc i32 %335 to i16
  %337 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %332, i32 1
  store i16 %336, ptr %337, align 2, !tbaa !91
  store i32 %327, ptr %334, align 8, !tbaa !88
  %338 = add nsw i32 %327, 1
  %339 = add nsw i64 %329, %257
  store i64 %339, ptr %328, align 8, !tbaa !86
  br label %340

340:                                              ; preds = %331, %326
  %341 = phi i32 [ %338, %331 ], [ %327, %326 ]
  %342 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 7
  %343 = load i64, ptr %342, align 8, !tbaa !86
  %344 = icmp eq i64 %343, 1125899906842624
  br i1 %344, label %585, label %345

345:                                              ; preds = %340
  %346 = sext i32 %341 to i64
  %347 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %346
  store i16 0, ptr %347, align 4, !tbaa !89
  %348 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 7, i32 1
  %349 = load i32, ptr %348, align 8, !tbaa !88
  %350 = trunc i32 %349 to i16
  %351 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %346, i32 1
  store i16 %350, ptr %351, align 2, !tbaa !91
  store i32 %341, ptr %348, align 8, !tbaa !88
  %352 = add nsw i32 %341, 1
  %353 = add nsw i64 %343, %257
  store i64 %353, ptr %342, align 8, !tbaa !86
  br label %585

354:                                              ; preds = %233
  br i1 %150, label %355, label %362

355:                                              ; preds = %354
  %356 = getelementptr inbounds [2 x [63 x i8]], ptr @significant_coeff_flag_offset_8x8, i64 0, i64 %23, i64 %214
  %357 = load i8, ptr %356, align 1, !tbaa !5
  %358 = getelementptr inbounds [63 x i8], ptr @last_coeff_flag_offset_8x8, i64 0, i64 %214
  %359 = load i8, ptr %358, align 1, !tbaa !5
  %360 = zext i8 %357 to i64
  %361 = zext i8 %359 to i64
  br label %362

362:                                              ; preds = %354, %355
  %363 = phi i64 [ %214, %354 ], [ %361, %355 ]
  %364 = phi i64 [ %214, %354 ], [ %360, %355 ]
  %365 = getelementptr inbounds i8, ptr %28, i64 %364
  %366 = load i8, ptr %365, align 1, !tbaa !5
  %367 = zext i8 %366 to i64
  %368 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %367
  %369 = load i16, ptr %368, align 2, !tbaa !37
  %370 = zext i16 %369 to i32
  store i32 %370, ptr %17, align 4, !tbaa !39
  %371 = xor i64 %367, 1
  %372 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %371
  %373 = load i16, ptr %372, align 2, !tbaa !37
  %374 = zext i16 %373 to i32
  store i32 %374, ptr %148, align 4, !tbaa !39
  %375 = getelementptr inbounds i8, ptr %32, i64 %363
  %376 = load i8, ptr %375, align 1, !tbaa !5
  %377 = zext i8 %376 to i64
  %378 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %377
  %379 = load i16, ptr %378, align 2, !tbaa !37
  %380 = zext i16 %379 to i32
  store i32 %380, ptr %18, align 4, !tbaa !39
  %381 = xor i64 %377, 1
  %382 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %381
  %383 = load i16, ptr %382, align 2, !tbaa !37
  %384 = zext i16 %383 to i32
  store i32 %384, ptr %149, align 4, !tbaa !39
  br label %386

385:                                              ; preds = %233
  store i32 0, ptr %148, align 4, !tbaa !39
  store i32 0, ptr %17, align 4, !tbaa !39
  store i32 0, ptr %149, align 4, !tbaa !39
  store i32 0, ptr %18, align 4, !tbaa !39
  br label %386

386:                                              ; preds = %385, %362
  %387 = icmp ne i32 %212, 0
  %388 = or i32 %212, %9
  %389 = getelementptr inbounds i32, ptr %4, i64 %214
  %390 = getelementptr inbounds i8, ptr %5, i64 %214
  %391 = getelementptr inbounds [64 x i32], ptr %14, i64 0, i64 %214
  br label %392

392:                                              ; preds = %386, %472
  %393 = phi i32 [ %213, %386 ], [ %582, %472 ]
  %394 = phi i32 [ %231, %386 ], [ %473, %472 ]
  br i1 %36, label %398, label %395

395:                                              ; preds = %392
  %396 = load i32, ptr %3, align 4, !tbaa !39
  %397 = shl i32 %396, 1
  br label %403

398:                                              ; preds = %392
  %399 = load i8, ptr %390, align 1, !tbaa !5
  %400 = zext i8 %399 to i64
  %401 = getelementptr inbounds i32, ptr %3, i64 %400
  %402 = load i32, ptr %401, align 4, !tbaa !39
  br label %403

403:                                              ; preds = %398, %395
  %404 = phi i32 [ %397, %395 ], [ %402, %398 ]
  %405 = mul nsw i32 %404, %394
  %406 = add nsw i32 %405, 128
  %407 = ashr i32 %406, 8
  %408 = sub nsw i32 %216, %407
  %409 = load i32, ptr %151, align 16, !tbaa !93
  %410 = icmp ne i32 %409, 0
  %411 = and i1 %152, %410
  %412 = and i1 %387, %411
  %413 = and i1 %36, %412
  br i1 %413, label %414, label %443

414:                                              ; preds = %403
  %415 = load i8, ptr %390, align 1, !tbaa !5
  %416 = zext i8 %415 to i64
  %417 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11, i64 %155, i64 %416
  %418 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 12, i64 %155, i64 %416
  %419 = select i1 %150, ptr %417, ptr %418
  %420 = load i16, ptr %419, align 2, !tbaa !37
  %421 = sext i16 %420 to i32
  %422 = load i32, ptr %391, align 4, !tbaa !39
  %423 = sub i32 %407, %216
  %424 = mul i32 %423, %422
  %425 = add i32 %424, %421
  %426 = tail call i32 @llvm.abs.i32(i32 %425, i1 true)
  %427 = mul nsw i32 %426, %409
  %428 = zext i8 %415 to i64
  %429 = getelementptr inbounds [64 x i16], ptr @x264_dct8_weight_tab, i64 0, i64 %428
  %430 = zext i8 %415 to i64
  %431 = getelementptr inbounds [16 x i16], ptr @x264_dct4_weight_tab, i64 0, i64 %430
  %432 = select i1 %150, ptr %429, ptr %431
  %433 = load i16, ptr %432, align 2, !tbaa !37
  %434 = zext i16 %433 to i32
  %435 = sext i32 %408 to i64
  %436 = mul nsw i64 %435, %435
  %437 = load i32, ptr %389, align 4, !tbaa !39
  %438 = sext i32 %437 to i64
  %439 = mul nsw i64 %436, %438
  %440 = mul nsw i32 %427, %434
  %441 = sext i32 %440 to i64
  %442 = sub nsw i64 %439, %441
  br label %452

443:                                              ; preds = %403
  %444 = sext i32 %408 to i64
  %445 = mul nsw i64 %444, %444
  br i1 %36, label %446, label %448

446:                                              ; preds = %443
  %447 = load i32, ptr %389, align 4, !tbaa !39
  br label %448

448:                                              ; preds = %443, %446
  %449 = phi i32 [ %447, %446 ], [ 256, %443 ]
  %450 = sext i32 %449 to i64
  %451 = mul nsw i64 %445, %450
  br label %452

452:                                              ; preds = %448, %414
  %453 = phi i64 [ %442, %414 ], [ %451, %448 ]
  %454 = icmp ne i32 %394, 0
  %455 = zext i1 %454 to i64
  %456 = getelementptr inbounds [2 x i32], ptr %17, i64 0, i64 %455
  %457 = tail call i32 @llvm.smin.i32(i32 %394, i32 15)
  %458 = icmp sgt i32 %457, 1
  %459 = zext i1 %458 to i64
  %460 = add nsw i32 %457, -1
  %461 = zext i32 %460 to i64
  %462 = icmp sgt i32 %394, 14
  %463 = add nsw i32 %394, -15
  %464 = icmp ult i32 %463, 255
  %465 = add nsw i32 %394, -14
  %466 = lshr i32 %465, 8
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %467
  %469 = zext i32 %465 to i64
  %470 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %469
  %471 = trunc i32 %394 to i16
  br label %475

472:                                              ; preds = %581
  %473 = add nsw i32 %394, -1
  %474 = icmp slt i32 %394, %231
  br i1 %474, label %585, label %392, !llvm.loop !94

475:                                              ; preds = %452, %581
  %476 = phi i64 [ 0, %452 ], [ %583, %581 ]
  %477 = phi i32 [ %393, %452 ], [ %582, %581 ]
  %478 = getelementptr inbounds %struct.trellis_node_t, ptr %210, i64 %476
  %479 = load i64, ptr %478, align 8, !tbaa !86
  %480 = icmp eq i64 %479, 1125899906842624
  br i1 %480, label %581, label %481

481:                                              ; preds = %475
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr noundef nonnull align 8 dereferenceable(24) %478, i64 24, i1 false), !tbaa.struct !95
  %482 = trunc i64 %476 to i32
  %483 = or i32 %394, %482
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %547, label %485

485:                                              ; preds = %481
  %486 = load i32, ptr %456, align 4, !tbaa !39
  br i1 %454, label %487, label %539

487:                                              ; preds = %485
  %488 = icmp eq i64 %476, 0
  %489 = zext i1 %488 to i64
  %490 = getelementptr inbounds [2 x i32], ptr %18, i64 0, i64 %489
  %491 = load i32, ptr %490, align 4, !tbaa !39
  %492 = add i32 %491, %486
  %493 = getelementptr inbounds [8 x i8], ptr @coeff_abs_level1_ctx, i64 0, i64 %476
  %494 = load i8, ptr %493, align 1, !tbaa !5
  %495 = zext i8 %494 to i64
  %496 = getelementptr inbounds %struct.trellis_node_t, ptr %19, i64 0, i32 2, i64 %495
  %497 = load i8, ptr %496, align 1, !tbaa !5
  %498 = zext i8 %497 to i64
  %499 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %498, i64 %459
  %500 = load i8, ptr %499, align 1, !tbaa !5
  store i8 %500, ptr %496, align 1, !tbaa !5
  %501 = xor i64 %498, %459
  %502 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %501
  %503 = load i16, ptr %502, align 2, !tbaa !37
  %504 = zext i16 %503 to i32
  %505 = add i32 %492, %504
  br i1 %458, label %506, label %531

506:                                              ; preds = %487
  %507 = getelementptr inbounds [8 x i8], ptr @coeff_abs_levelgt1_ctx, i64 0, i64 %476
  %508 = load i8, ptr %507, align 1, !tbaa !5
  %509 = zext i8 %508 to i64
  %510 = getelementptr inbounds %struct.trellis_node_t, ptr %19, i64 0, i32 2, i64 %509
  %511 = load i8, ptr %510, align 1, !tbaa !5
  %512 = zext i8 %511 to i64
  %513 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %461, i64 %512
  %514 = load i16, ptr %513, align 2, !tbaa !37
  %515 = zext i16 %514 to i32
  %516 = add i32 %505, %515
  %517 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %461, i64 %512
  %518 = load i8, ptr %517, align 1, !tbaa !5
  store i8 %518, ptr %510, align 1, !tbaa !5
  br i1 %462, label %519, label %533

519:                                              ; preds = %506
  br i1 %464, label %520, label %523

520:                                              ; preds = %519
  %521 = load i8, ptr %470, align 1, !tbaa !5
  %522 = zext i8 %521 to i32
  br label %527

523:                                              ; preds = %519
  %524 = load i8, ptr %468, align 1, !tbaa !5
  %525 = zext i8 %524 to i32
  %526 = add nuw nsw i32 %525, 16
  br label %527

527:                                              ; preds = %520, %523
  %528 = phi i32 [ %522, %520 ], [ %526, %523 ]
  %529 = shl nuw nsw i32 %528, 8
  %530 = add i32 %529, %516
  br label %533

531:                                              ; preds = %487
  %532 = add i32 %505, 256
  br label %533

533:                                              ; preds = %506, %527, %531
  %534 = phi ptr [ @coeff_abs_level_transition, %531 ], [ getelementptr inbounds ([2 x [8 x i8]], ptr @coeff_abs_level_transition, i64 0, i64 1), %527 ], [ getelementptr inbounds ([2 x [8 x i8]], ptr @coeff_abs_level_transition, i64 0, i64 1), %506 ]
  %535 = phi i32 [ %532, %531 ], [ %530, %527 ], [ %516, %506 ]
  %536 = getelementptr inbounds [8 x i8], ptr %534, i64 0, i64 %476
  %537 = load i8, ptr %536, align 1, !tbaa !5
  %538 = zext i8 %537 to i64
  br label %539

539:                                              ; preds = %533, %485
  %540 = phi i64 [ %538, %533 ], [ %476, %485 ]
  %541 = phi i32 [ %535, %533 ], [ %486, %485 ]
  %542 = zext i32 %541 to i64
  %543 = mul nsw i64 %542, %153
  %544 = lshr i64 %543, 4
  %545 = load i64, ptr %19, align 8, !tbaa !86
  %546 = add i64 %544, %545
  store i64 %546, ptr %19, align 8, !tbaa !86
  br label %547

547:                                              ; preds = %481, %539
  %548 = phi i64 [ %540, %539 ], [ 0, %481 ]
  %549 = or i32 %388, %482
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %554, label %551

551:                                              ; preds = %547
  %552 = load i64, ptr %19, align 8, !tbaa !86
  %553 = add nsw i64 %552, %453
  br label %568

554:                                              ; preds = %547
  %555 = load i32, ptr %14, align 16, !tbaa !39
  %556 = mul nsw i32 %555, %216
  %557 = mul nsw i32 %555, %407
  %558 = add nsw i32 %557, 8
  %559 = and i32 %558, -16
  %560 = sub nsw i32 %556, %559
  %561 = sext i32 %560 to i64
  %562 = load i32, ptr %389, align 4, !tbaa !39
  %563 = sext i32 %562 to i64
  %564 = mul nsw i64 %561, %563
  %565 = mul i64 %564, %561
  %566 = load i64, ptr %19, align 8, !tbaa !86
  %567 = add nsw i64 %565, %566
  br label %568

568:                                              ; preds = %554, %551
  %569 = phi i64 [ %567, %554 ], [ %553, %551 ]
  store i64 %569, ptr %19, align 8, !tbaa !86
  %570 = and i64 %548, 4294967295
  %571 = getelementptr inbounds %struct.trellis_node_t, ptr %211, i64 %570
  %572 = load i64, ptr %571, align 8, !tbaa !86
  %573 = icmp slt i64 %569, %572
  br i1 %573, label %574, label %581

574:                                              ; preds = %568
  %575 = sext i32 %477 to i64
  %576 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %575
  store i16 %471, ptr %576, align 4, !tbaa !89
  %577 = load i32, ptr %154, align 8, !tbaa !88
  %578 = trunc i32 %577 to i16
  %579 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %575, i32 1
  store i16 %578, ptr %579, align 2, !tbaa !91
  store i32 %477, ptr %154, align 8, !tbaa !88
  %580 = add nsw i32 %477, 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %571, ptr noundef nonnull align 8 dereferenceable(24) %19, i64 24, i1 false), !tbaa.struct !95
  br label %581

581:                                              ; preds = %568, %574, %475
  %582 = phi i32 [ %477, %475 ], [ %580, %574 ], [ %477, %568 ]
  %583 = add nuw nsw i64 %476, 1
  %584 = icmp eq i64 %583, 8
  br i1 %584, label %472, label %475, !llvm.loop !96

585:                                              ; preds = %472, %340, %345
  %586 = phi i32 [ %352, %345 ], [ %341, %340 ], [ %582, %472 ]
  %587 = phi ptr [ %211, %345 ], [ %211, %340 ], [ %210, %472 ]
  %588 = phi ptr [ %210, %345 ], [ %210, %340 ], [ %211, %472 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #17
  %589 = add nsw i32 %212, -1
  %590 = icmp sgt i32 %212, %8
  br i1 %590, label %209, label %156, !llvm.loop !97

591:                                              ; preds = %172
  %592 = icmp ne i32 %10, 16
  %593 = icmp ne i32 %9, 0
  %594 = or i1 %593, %592
  br i1 %594, label %674, label %673

595:                                              ; preds = %172
  %596 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 7, i32 1
  %597 = getelementptr inbounds %struct.trellis_node_t, ptr %181, i64 6, i32 1
  %598 = getelementptr inbounds %struct.trellis_node_t, ptr %200, i64 0, i32 1
  %599 = select i1 %203, ptr %597, ptr %598
  %600 = select i1 %206, ptr %599, ptr %596
  %601 = load i32, ptr %600, align 8, !tbaa !88
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %607, label %603

603:                                              ; preds = %595
  %604 = sext i32 %8 to i64
  br label %631

605:                                              ; preds = %631
  %606 = trunc i64 %648 to i32
  br label %607

607:                                              ; preds = %605, %595
  %608 = phi i32 [ %8, %595 ], [ %606, %605 ]
  %609 = icmp slt i32 %608, %10
  br i1 %609, label %610, label %674

610:                                              ; preds = %607
  %611 = sext i32 %608 to i64
  %612 = sext i32 %10 to i64
  %613 = sub nsw i64 %612, %611
  %614 = xor i64 %611, -1
  %615 = add nsw i64 %614, %612
  %616 = and i64 %613, 3
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %628, label %618

618:                                              ; preds = %610, %618
  %619 = phi i64 [ %625, %618 ], [ %611, %610 ]
  %620 = phi i64 [ %626, %618 ], [ 0, %610 ]
  %621 = getelementptr inbounds i8, ptr %5, i64 %619
  %622 = load i8, ptr %621, align 1, !tbaa !5
  %623 = zext i8 %622 to i64
  %624 = getelementptr inbounds i16, ptr %1, i64 %623
  store i16 0, ptr %624, align 2, !tbaa !37
  %625 = add nsw i64 %619, 1
  %626 = add i64 %620, 1
  %627 = icmp eq i64 %626, %616
  br i1 %627, label %628, label %618, !llvm.loop !98

628:                                              ; preds = %618, %610
  %629 = phi i64 [ %611, %610 ], [ %625, %618 ]
  %630 = icmp ult i64 %615, 3
  br i1 %630, label %674, label %650

631:                                              ; preds = %603, %631
  %632 = phi i64 [ %604, %603 ], [ %648, %631 ]
  %633 = phi i32 [ %601, %603 ], [ %647, %631 ]
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %634
  %636 = load i16, ptr %635, align 4, !tbaa !89
  %637 = getelementptr inbounds [64 x i32], ptr %14, i64 0, i64 %632
  %638 = load i32, ptr %637, align 4, !tbaa !39
  %639 = trunc i32 %638 to i16
  %640 = mul i16 %636, %639
  %641 = getelementptr inbounds i8, ptr %5, i64 %632
  %642 = load i8, ptr %641, align 1, !tbaa !5
  %643 = zext i8 %642 to i64
  %644 = getelementptr inbounds i16, ptr %1, i64 %643
  store i16 %640, ptr %644, align 2, !tbaa !37
  %645 = getelementptr inbounds [1024 x %struct.anon.16], ptr %16, i64 0, i64 %634, i32 1
  %646 = load i16, ptr %645, align 2, !tbaa !91
  %647 = zext i16 %646 to i32
  %648 = add i64 %632, 1
  %649 = icmp eq i16 %646, 0
  br i1 %649, label %605, label %631, !llvm.loop !100

650:                                              ; preds = %628, %650
  %651 = phi i64 [ %671, %650 ], [ %629, %628 ]
  %652 = getelementptr inbounds i8, ptr %5, i64 %651
  %653 = load i8, ptr %652, align 1, !tbaa !5
  %654 = zext i8 %653 to i64
  %655 = getelementptr inbounds i16, ptr %1, i64 %654
  store i16 0, ptr %655, align 2, !tbaa !37
  %656 = add nsw i64 %651, 1
  %657 = getelementptr inbounds i8, ptr %5, i64 %656
  %658 = load i8, ptr %657, align 1, !tbaa !5
  %659 = zext i8 %658 to i64
  %660 = getelementptr inbounds i16, ptr %1, i64 %659
  store i16 0, ptr %660, align 2, !tbaa !37
  %661 = add nsw i64 %651, 2
  %662 = getelementptr inbounds i8, ptr %5, i64 %661
  %663 = load i8, ptr %662, align 1, !tbaa !5
  %664 = zext i8 %663 to i64
  %665 = getelementptr inbounds i16, ptr %1, i64 %664
  store i16 0, ptr %665, align 2, !tbaa !37
  %666 = add nsw i64 %651, 3
  %667 = getelementptr inbounds i8, ptr %5, i64 %666
  %668 = load i8, ptr %667, align 1, !tbaa !5
  %669 = zext i8 %668 to i64
  %670 = getelementptr inbounds i16, ptr %1, i64 %669
  store i16 0, ptr %670, align 2, !tbaa !37
  %671 = add nsw i64 %651, 4
  %672 = icmp eq i64 %671, %612
  br i1 %672, label %674, label %650, !llvm.loop !101

673:                                              ; preds = %591, %99
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %1, i8 0, i64 32, i1 false)
  br label %674

674:                                              ; preds = %628, %650, %673, %607, %591, %99
  %675 = phi i32 [ 0, %99 ], [ 0, %591 ], [ 1, %607 ], [ 0, %673 ], [ 1, %650 ], [ 1, %628 ]
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %16) #17
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %15) #17
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %14) #17
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %13) #17
  ret i32 %675
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @x264_quant_4x4_trellis(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) local_unnamed_addr #5 {
  %9 = icmp eq i32 %4, 1
  %10 = icmp eq i32 %4, 4
  %11 = or i1 %9, %10
  %12 = zext i1 %11 to i32
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 33, i64 %13
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = sext i32 %3 to i64
  %17 = getelementptr inbounds [16 x i16], ptr %15, i64 %16
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 31, i64 %13
  %19 = load ptr, ptr %18, align 8, !tbaa !46
  %20 = getelementptr inbounds [16 x i32], ptr %19, i64 %16
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %22 = load i32, ptr %21, align 4, !tbaa !36
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [2 x [16 x i32]], ptr @x264_dct4_weight2_zigzag, i64 0, i64 %23
  %25 = getelementptr inbounds [2 x [16 x i8]], ptr @x264_zigzag_scan4, i64 0, i64 %23
  %26 = sext i32 %6 to i64
  %27 = sext i32 %5 to i64
  %28 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 %26, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !39
  %30 = tail call fastcc i32 @quant_trellis_cabac(ptr noundef %0, ptr noundef %1, ptr noundef %17, ptr noundef %20, ptr noundef nonnull %24, ptr noundef nonnull %25, i32 noundef %4, i32 noundef %29, i32 noundef %12, i32 noundef 0, i32 noundef 16, i32 noundef %7), !range !84
  ret i32 %30
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @x264_quant_8x8_trellis(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #5 {
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 34, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !46
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds [64 x i16], ptr %9, i64 %10
  %12 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 32, i64 %7
  %13 = load ptr, ptr %12, align 8, !tbaa !46
  %14 = getelementptr inbounds [64 x i32], ptr %13, i64 %10
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %16 = load i32, ptr %15, align 4, !tbaa !36
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [2 x [64 x i32]], ptr @x264_dct8_weight2_zigzag, i64 0, i64 %17
  %19 = getelementptr inbounds [2 x [64 x i8]], ptr @x264_zigzag_scan8, i64 0, i64 %17
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76
  %21 = sext i32 %4 to i64
  %22 = getelementptr inbounds [2 x i32], ptr %20, i64 0, i64 %21
  %23 = load i32, ptr %22, align 4, !tbaa !39
  %24 = tail call fastcc i32 @quant_trellis_cabac(ptr noundef %0, ptr noundef %1, ptr noundef %11, ptr noundef %14, ptr noundef nonnull %18, ptr noundef nonnull %19, i32 noundef 5, i32 noundef %23, i32 noundef 0, i32 noundef 0, i32 noundef 64, i32 noundef %5), !range !84
  ret i32 %24
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @x264_analyse_init_costs(ptr nocapture noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [52 x i8], ptr @x264_lambda_tab, i64 0, i64 %3
  %5 = load i8, ptr %4, align 1, !tbaa !5
  %6 = zext i8 %5 to i16
  %7 = zext i8 %5 to i64
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 37, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !46
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %296

11:                                               ; preds = %2
  %12 = tail call ptr @x264_malloc(i32 noundef 65538) #17
  store ptr %12, ptr %8, align 8, !tbaa !46
  %13 = icmp eq ptr %12, null
  br i1 %13, label %296, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i16, ptr %12, i64 16384
  store ptr %15, ptr %8, align 8, !tbaa !46
  %16 = uitofp i8 %5 to float
  br label %17

17:                                               ; preds = %14, %17
  %18 = phi i64 [ 0, %14 ], [ %19, %17 ]
  %19 = add nuw nsw i64 %18, 1
  %20 = trunc i64 %19 to i32
  %21 = sitofp i32 %20 to float
  %22 = tail call fast float @llvm.log2.f32(float %21)
  %23 = fmul fast float %22, 2.000000e+00
  %24 = icmp ne i64 %18, 0
  %25 = uitofp i1 %24 to float
  %26 = fadd fast float %25, 0x3FE6F9DB20000000
  %27 = fadd fast float %26, %23
  %28 = fmul fast float %27, %16
  %29 = fadd fast float %28, 5.000000e-01
  %30 = fptoui float %29 to i16
  %31 = getelementptr inbounds i16, ptr %15, i64 %18
  store i16 %30, ptr %31, align 2, !tbaa !37
  %32 = sub nsw i64 0, %18
  %33 = getelementptr inbounds i16, ptr %15, i64 %32
  store i16 %30, ptr %33, align 2, !tbaa !37
  %34 = icmp eq i64 %19, 16385
  br i1 %34, label %35, label %17, !llvm.loop !102

35:                                               ; preds = %17
  %36 = mul nuw nsw i64 %7, 198
  %37 = getelementptr i8, ptr @x264_cost_ref, i64 %36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(66) %37, i8 0, i64 66, i1 false), !tbaa !37
  %38 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %7, i64 1, i64 0
  %39 = insertelement <16 x i16> poison, i16 %6, i64 0
  %40 = shufflevector <16 x i16> %39, <16 x i16> poison, <16 x i32> zeroinitializer
  store <16 x i16> %40, ptr %38, align 2, !tbaa !37
  %41 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %7, i64 1, i64 16
  store <16 x i16> %40, ptr %41, align 2, !tbaa !37
  %42 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %7, i64 1, i64 32
  store i16 %6, ptr %42, align 2, !tbaa !37
  %43 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %7, i64 2, i64 0
  store i16 %6, ptr %43, align 2, !tbaa !37
  %44 = insertelement <4 x i16> poison, i16 %6, i64 0
  %45 = shufflevector <4 x i16> %44, <4 x i16> poison, <4 x i32> zeroinitializer
  %46 = mul nuw nsw <4 x i16> %45, <i16 3, i16 5, i16 7, i16 9>
  %47 = shufflevector <4 x i16> %46, <4 x i16> poison, <16 x i32> <i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3>
  %48 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %7, i64 2, i64 1
  store <16 x i16> %47, ptr %48, align 2, !tbaa !37
  %49 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %7, i64 2, i64 17
  %50 = mul nuw nsw i16 %6, 11
  %51 = shufflevector <4 x i16> %46, <4 x i16> poison, <2 x i32> <i32 3, i32 poison>
  %52 = insertelement <2 x i16> %51, i16 %50, i64 1
  %53 = shufflevector <2 x i16> %52, <2 x i16> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1>
  store <16 x i16> %53, ptr %49, align 2, !tbaa !37
  %54 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 7
  %55 = load i32, ptr %54, align 4, !tbaa !103
  %56 = icmp sgt i32 %55, 2
  br i1 %56, label %57, label %296

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %7
  %59 = load ptr, ptr %58, align 16, !tbaa !46
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %296

61:                                               ; preds = %57
  %62 = tail call ptr @x264_malloc(i32 noundef 16386) #17
  store ptr %62, ptr %58, align 8, !tbaa !46
  %63 = icmp eq ptr %62, null
  br i1 %63, label %296, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds i16, ptr %62, i64 4096
  store ptr %65, ptr %58, align 8, !tbaa !46
  %66 = load ptr, ptr %8, align 8, !tbaa !46
  %67 = getelementptr i8, ptr %62, i64 16384
  %68 = getelementptr i8, ptr %66, i64 -32768
  %69 = getelementptr i8, ptr %66, i64 32762
  %70 = icmp ult ptr %62, %69
  %71 = icmp ult ptr %68, %67
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %75, %64
  %74 = phi i64 [ -4096, %64 ], [ 4080, %75 ]
  br label %273

75:                                               ; preds = %64, %85
  %76 = phi i64 [ %92, %85 ], [ 0, %64 ]
  %77 = shl i64 %76, 2
  %78 = add nsw i64 %77, -16384
  %79 = getelementptr inbounds i16, ptr %66, i64 %78
  %80 = load <64 x i16>, ptr %79, align 2, !tbaa !37
  %81 = shufflevector <64 x i16> %80, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %82 = getelementptr inbounds i16, ptr %62, i64 %76
  store <16 x i16> %81, ptr %82, align 2, !tbaa !37, !alias.scope !104, !noalias !107
  %83 = or i64 %76, 16
  %84 = icmp eq i64 %83, 8176
  br i1 %84, label %73, label %85, !llvm.loop !109

85:                                               ; preds = %75
  %86 = shl i64 %83, 2
  %87 = add nsw i64 %86, -16384
  %88 = getelementptr inbounds i16, ptr %66, i64 %87
  %89 = load <64 x i16>, ptr %88, align 2, !tbaa !37
  %90 = shufflevector <64 x i16> %89, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %91 = getelementptr inbounds i16, ptr %62, i64 %83
  store <16 x i16> %90, ptr %91, align 2, !tbaa !37, !alias.scope !104, !noalias !107
  %92 = add nuw nsw i64 %76, 32
  br label %75

93:                                               ; preds = %273
  %94 = tail call ptr @x264_malloc(i32 noundef 16386) #17
  %95 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %7, i64 1
  store ptr %94, ptr %95, align 8, !tbaa !46
  %96 = icmp eq ptr %94, null
  br i1 %96, label %296, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds i16, ptr %94, i64 4096
  store ptr %98, ptr %95, align 8, !tbaa !46
  %99 = load ptr, ptr %8, align 8, !tbaa !46
  %100 = getelementptr i8, ptr %94, i64 16384
  %101 = getelementptr i8, ptr %99, i64 -32766
  %102 = getelementptr i8, ptr %99, i64 32764
  %103 = icmp ult ptr %94, %102
  %104 = icmp ult ptr %101, %100
  %105 = and i1 %103, %104
  br i1 %105, label %124, label %106

106:                                              ; preds = %97, %116
  %107 = phi i64 [ %123, %116 ], [ 0, %97 ]
  %108 = shl i64 %107, 2
  %109 = add nsw i64 %108, -16383
  %110 = getelementptr inbounds i16, ptr %99, i64 %109
  %111 = load <64 x i16>, ptr %110, align 2, !tbaa !37
  %112 = shufflevector <64 x i16> %111, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %113 = getelementptr inbounds i16, ptr %94, i64 %107
  store <16 x i16> %112, ptr %113, align 2, !tbaa !37, !alias.scope !110, !noalias !113
  %114 = or i64 %107, 16
  %115 = icmp eq i64 %114, 8176
  br i1 %115, label %124, label %116, !llvm.loop !115

116:                                              ; preds = %106
  %117 = shl i64 %114, 2
  %118 = add nsw i64 %117, -16383
  %119 = getelementptr inbounds i16, ptr %99, i64 %118
  %120 = load <64 x i16>, ptr %119, align 2, !tbaa !37
  %121 = shufflevector <64 x i16> %120, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %122 = getelementptr inbounds i16, ptr %94, i64 %114
  store <16 x i16> %121, ptr %122, align 2, !tbaa !37, !alias.scope !110, !noalias !113
  %123 = add nuw nsw i64 %107, 32
  br label %106

124:                                              ; preds = %106, %97
  %125 = phi i64 [ -4096, %97 ], [ 4080, %106 ]
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ %125, %124 ], [ %151, %126 ]
  %128 = shl nsw i64 %127, 2
  %129 = or i64 %128, 1
  %130 = getelementptr inbounds i16, ptr %99, i64 %129
  %131 = load i16, ptr %130, align 2, !tbaa !37
  %132 = getelementptr inbounds i16, ptr %98, i64 %127
  store i16 %131, ptr %132, align 2, !tbaa !37
  %133 = or i64 %127, 1
  %134 = shl nsw i64 %133, 2
  %135 = or i64 %134, 1
  %136 = getelementptr inbounds i16, ptr %99, i64 %135
  %137 = load i16, ptr %136, align 2, !tbaa !37
  %138 = getelementptr inbounds i16, ptr %98, i64 %133
  store i16 %137, ptr %138, align 2, !tbaa !37
  %139 = or i64 %127, 2
  %140 = shl nsw i64 %139, 2
  %141 = or i64 %140, 1
  %142 = getelementptr inbounds i16, ptr %99, i64 %141
  %143 = load i16, ptr %142, align 2, !tbaa !37
  %144 = getelementptr inbounds i16, ptr %98, i64 %139
  store i16 %143, ptr %144, align 2, !tbaa !37
  %145 = or i64 %127, 3
  %146 = shl nsw i64 %145, 2
  %147 = or i64 %146, 1
  %148 = getelementptr inbounds i16, ptr %99, i64 %147
  %149 = load i16, ptr %148, align 2, !tbaa !37
  %150 = getelementptr inbounds i16, ptr %98, i64 %145
  store i16 %149, ptr %150, align 2, !tbaa !37
  %151 = add nsw i64 %127, 4
  %152 = icmp eq i64 %151, 4096
  br i1 %152, label %153, label %126, !llvm.loop !116

153:                                              ; preds = %126
  %154 = tail call ptr @x264_malloc(i32 noundef 16386) #17
  %155 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %7, i64 2
  store ptr %154, ptr %155, align 8, !tbaa !46
  %156 = icmp eq ptr %154, null
  br i1 %156, label %296, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds i16, ptr %154, i64 4096
  store ptr %158, ptr %155, align 8, !tbaa !46
  %159 = load ptr, ptr %8, align 8, !tbaa !46
  %160 = getelementptr i8, ptr %154, i64 16384
  %161 = getelementptr i8, ptr %159, i64 -32764
  %162 = getelementptr i8, ptr %159, i64 32766
  %163 = icmp ult ptr %154, %162
  %164 = icmp ult ptr %161, %160
  %165 = and i1 %163, %164
  br i1 %165, label %184, label %166

166:                                              ; preds = %157, %176
  %167 = phi i64 [ %183, %176 ], [ 0, %157 ]
  %168 = shl i64 %167, 2
  %169 = add nsw i64 %168, -16382
  %170 = getelementptr inbounds i16, ptr %159, i64 %169
  %171 = load <64 x i16>, ptr %170, align 2, !tbaa !37
  %172 = shufflevector <64 x i16> %171, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %173 = getelementptr inbounds i16, ptr %154, i64 %167
  store <16 x i16> %172, ptr %173, align 2, !tbaa !37, !alias.scope !117, !noalias !120
  %174 = or i64 %167, 16
  %175 = icmp eq i64 %174, 8176
  br i1 %175, label %184, label %176, !llvm.loop !122

176:                                              ; preds = %166
  %177 = shl i64 %174, 2
  %178 = add nsw i64 %177, -16382
  %179 = getelementptr inbounds i16, ptr %159, i64 %178
  %180 = load <64 x i16>, ptr %179, align 2, !tbaa !37
  %181 = shufflevector <64 x i16> %180, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %182 = getelementptr inbounds i16, ptr %154, i64 %174
  store <16 x i16> %181, ptr %182, align 2, !tbaa !37, !alias.scope !117, !noalias !120
  %183 = add nuw nsw i64 %167, 32
  br label %166

184:                                              ; preds = %166, %157
  %185 = phi i64 [ -4096, %157 ], [ 4080, %166 ]
  br label %186

186:                                              ; preds = %186, %184
  %187 = phi i64 [ %185, %184 ], [ %211, %186 ]
  %188 = shl nsw i64 %187, 2
  %189 = or i64 %188, 2
  %190 = getelementptr inbounds i16, ptr %159, i64 %189
  %191 = load i16, ptr %190, align 2, !tbaa !37
  %192 = getelementptr inbounds i16, ptr %158, i64 %187
  store i16 %191, ptr %192, align 2, !tbaa !37
  %193 = or i64 %187, 1
  %194 = shl nsw i64 %193, 2
  %195 = or i64 %194, 2
  %196 = getelementptr inbounds i16, ptr %159, i64 %195
  %197 = load i16, ptr %196, align 2, !tbaa !37
  %198 = getelementptr inbounds i16, ptr %158, i64 %193
  store i16 %197, ptr %198, align 2, !tbaa !37
  %199 = or i64 %187, 2
  %200 = shl nsw i64 %199, 2
  %201 = or i64 %200, 2
  %202 = getelementptr inbounds i16, ptr %159, i64 %201
  %203 = load i16, ptr %202, align 2, !tbaa !37
  %204 = getelementptr inbounds i16, ptr %158, i64 %199
  store i16 %203, ptr %204, align 2, !tbaa !37
  %205 = or i64 %187, 3
  %206 = shl nsw i64 %205, 2
  %207 = or i64 %206, 2
  %208 = getelementptr inbounds i16, ptr %159, i64 %207
  %209 = load i16, ptr %208, align 2, !tbaa !37
  %210 = getelementptr inbounds i16, ptr %158, i64 %205
  store i16 %209, ptr %210, align 2, !tbaa !37
  %211 = add nsw i64 %187, 4
  %212 = icmp eq i64 %211, 4096
  br i1 %212, label %213, label %186, !llvm.loop !123

213:                                              ; preds = %186
  %214 = tail call ptr @x264_malloc(i32 noundef 16386) #17
  %215 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %7, i64 3
  store ptr %214, ptr %215, align 8, !tbaa !46
  %216 = icmp eq ptr %214, null
  br i1 %216, label %296, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds i16, ptr %214, i64 4096
  store ptr %218, ptr %215, align 8, !tbaa !46
  %219 = load ptr, ptr %8, align 8, !tbaa !46
  %220 = getelementptr i8, ptr %214, i64 16384
  %221 = getelementptr i8, ptr %219, i64 -32762
  %222 = getelementptr i8, ptr %219, i64 32768
  %223 = icmp ult ptr %214, %222
  %224 = icmp ult ptr %221, %220
  %225 = and i1 %223, %224
  br i1 %225, label %244, label %226

226:                                              ; preds = %217, %236
  %227 = phi i64 [ %243, %236 ], [ 0, %217 ]
  %228 = shl i64 %227, 2
  %229 = add nsw i64 %228, -16381
  %230 = getelementptr inbounds i16, ptr %219, i64 %229
  %231 = load <64 x i16>, ptr %230, align 2, !tbaa !37
  %232 = shufflevector <64 x i16> %231, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %233 = getelementptr inbounds i16, ptr %214, i64 %227
  store <16 x i16> %232, ptr %233, align 2, !tbaa !37, !alias.scope !124, !noalias !127
  %234 = or i64 %227, 16
  %235 = icmp eq i64 %234, 8176
  br i1 %235, label %244, label %236, !llvm.loop !129

236:                                              ; preds = %226
  %237 = shl i64 %234, 2
  %238 = add nsw i64 %237, -16381
  %239 = getelementptr inbounds i16, ptr %219, i64 %238
  %240 = load <64 x i16>, ptr %239, align 2, !tbaa !37
  %241 = shufflevector <64 x i16> %240, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %242 = getelementptr inbounds i16, ptr %214, i64 %234
  store <16 x i16> %241, ptr %242, align 2, !tbaa !37, !alias.scope !124, !noalias !127
  %243 = add nuw nsw i64 %227, 32
  br label %226

244:                                              ; preds = %226, %217
  %245 = phi i64 [ -4096, %217 ], [ 4080, %226 ]
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ %245, %244 ], [ %271, %246 ]
  %248 = shl nsw i64 %247, 2
  %249 = or i64 %248, 3
  %250 = getelementptr inbounds i16, ptr %219, i64 %249
  %251 = load i16, ptr %250, align 2, !tbaa !37
  %252 = getelementptr inbounds i16, ptr %218, i64 %247
  store i16 %251, ptr %252, align 2, !tbaa !37
  %253 = or i64 %247, 1
  %254 = shl nsw i64 %253, 2
  %255 = or i64 %254, 3
  %256 = getelementptr inbounds i16, ptr %219, i64 %255
  %257 = load i16, ptr %256, align 2, !tbaa !37
  %258 = getelementptr inbounds i16, ptr %218, i64 %253
  store i16 %257, ptr %258, align 2, !tbaa !37
  %259 = or i64 %247, 2
  %260 = shl nsw i64 %259, 2
  %261 = or i64 %260, 3
  %262 = getelementptr inbounds i16, ptr %219, i64 %261
  %263 = load i16, ptr %262, align 2, !tbaa !37
  %264 = getelementptr inbounds i16, ptr %218, i64 %259
  store i16 %263, ptr %264, align 2, !tbaa !37
  %265 = or i64 %247, 3
  %266 = shl nsw i64 %265, 2
  %267 = or i64 %266, 3
  %268 = getelementptr inbounds i16, ptr %219, i64 %267
  %269 = load i16, ptr %268, align 2, !tbaa !37
  %270 = getelementptr inbounds i16, ptr %218, i64 %265
  store i16 %269, ptr %270, align 2, !tbaa !37
  %271 = add nsw i64 %247, 4
  %272 = icmp eq i64 %271, 4096
  br i1 %272, label %296, label %246, !llvm.loop !130

273:                                              ; preds = %273, %73
  %274 = phi i64 [ %74, %73 ], [ %294, %273 ]
  %275 = shl nsw i64 %274, 2
  %276 = getelementptr inbounds i16, ptr %66, i64 %275
  %277 = load i16, ptr %276, align 2, !tbaa !37
  %278 = getelementptr inbounds i16, ptr %65, i64 %274
  store i16 %277, ptr %278, align 2, !tbaa !37
  %279 = or i64 %274, 1
  %280 = shl nsw i64 %279, 2
  %281 = getelementptr inbounds i16, ptr %66, i64 %280
  %282 = load i16, ptr %281, align 2, !tbaa !37
  %283 = getelementptr inbounds i16, ptr %65, i64 %279
  store i16 %282, ptr %283, align 2, !tbaa !37
  %284 = or i64 %274, 2
  %285 = shl nsw i64 %284, 2
  %286 = getelementptr inbounds i16, ptr %66, i64 %285
  %287 = load i16, ptr %286, align 2, !tbaa !37
  %288 = getelementptr inbounds i16, ptr %65, i64 %284
  store i16 %287, ptr %288, align 2, !tbaa !37
  %289 = or i64 %274, 3
  %290 = shl nsw i64 %289, 2
  %291 = getelementptr inbounds i16, ptr %66, i64 %290
  %292 = load i16, ptr %291, align 2, !tbaa !37
  %293 = getelementptr inbounds i16, ptr %65, i64 %289
  store i16 %292, ptr %293, align 2, !tbaa !37
  %294 = add nsw i64 %274, 4
  %295 = icmp eq i64 %294, 4096
  br i1 %295, label %93, label %273, !llvm.loop !131

296:                                              ; preds = %246, %61, %93, %153, %213, %11, %35, %57, %2
  %297 = phi i32 [ 0, %2 ], [ 0, %57 ], [ 0, %35 ], [ -1, %11 ], [ -1, %61 ], [ -1, %93 ], [ -1, %153 ], [ -1, %213 ], [ 0, %246 ]
  ret i32 %297
}

declare ptr @x264_malloc(i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.log2.f32(float) #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @x264_analyse_free_costs(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  br label %3

2:                                                ; preds = %25
  ret void

3:                                                ; preds = %1, %25
  %4 = phi i64 [ 0, %1 ], [ %26, %25 ]
  %5 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 37, i64 %4
  %6 = load ptr, ptr %5, align 8, !tbaa !46
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i16, ptr %6, i64 -16384
  tail call void @x264_free(ptr noundef nonnull %9) #17
  br label %10

10:                                               ; preds = %8, %3
  %11 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %4
  %12 = load ptr, ptr %11, align 16, !tbaa !46
  %13 = icmp eq ptr %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i16, ptr %12, i64 -4096
  tail call void @x264_free(ptr noundef nonnull %15) #17
  %16 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %4, i64 1
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = getelementptr inbounds i16, ptr %17, i64 -4096
  tail call void @x264_free(ptr noundef nonnull %18) #17
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %4, i64 2
  %20 = load ptr, ptr %19, align 8, !tbaa !46
  %21 = getelementptr inbounds i16, ptr %20, i64 -4096
  tail call void @x264_free(ptr noundef nonnull %21) #17
  %22 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 38, i64 %4, i64 3
  %23 = load ptr, ptr %22, align 8, !tbaa !46
  %24 = getelementptr inbounds i16, ptr %23, i64 -4096
  tail call void @x264_free(ptr noundef nonnull %24) #17
  br label %25

25:                                               ; preds = %14, %10
  %26 = add nuw nsw i64 %4, 1
  %27 = icmp eq i64 %26, 92
  br i1 %27, label %2, label %3, !llvm.loop !132
}

declare void @x264_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @x264_analyse_weight_frame(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 46
  %4 = load i32, ptr %3, align 8, !tbaa !133
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  br label %8

8:                                                ; preds = %6, %77
  %9 = phi i64 [ 0, %6 ], [ %78, %77 ]
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %9, i64 0, i32 5
  %11 = load ptr, ptr %10, align 16, !tbaa !134
  %12 = icmp eq ptr %11, null
  br i1 %12, label %77, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 47, i64 %9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds %struct.x264_frame, ptr %15, i64 0, i32 25
  %17 = load i32, ptr %16, align 4, !tbaa !39
  %18 = add nsw i32 %17, 64
  %19 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 26
  %20 = load i32, ptr %19, align 8, !tbaa !136
  %21 = shl i32 32, %20
  %22 = getelementptr inbounds %struct.x264_frame, ptr %15, i64 0, i32 31
  %23 = load ptr, ptr %22, align 16, !tbaa !46
  %24 = getelementptr inbounds %struct.x264_frame, ptr %15, i64 0, i32 24
  %25 = load i32, ptr %24, align 8, !tbaa !39
  %26 = add nsw i32 %1, 16
  %27 = add nsw i32 %26, %21
  %28 = getelementptr inbounds %struct.x264_frame, ptr %15, i64 0, i32 26
  %29 = load i32, ptr %28, align 16, !tbaa !39
  %30 = shl i32 64, %20
  %31 = add nsw i32 %29, %30
  %32 = tail call i32 @llvm.smin.i32(i32 %27, i32 %31)
  %33 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 44
  %34 = load ptr, ptr %33, align 8, !tbaa !137
  %35 = getelementptr inbounds %struct.x264_frame, ptr %34, i64 0, i32 77
  %36 = load i32, ptr %35, align 4, !tbaa !138
  %37 = sub nsw i32 %32, %36
  store i32 %32, ptr %35, align 4, !tbaa !138
  %38 = icmp ne i32 %32, %36
  %39 = trunc i64 %9 to i32
  %40 = icmp sgt i32 %4, %39
  %41 = and i1 %38, %40
  br i1 %41, label %42, label %80

42:                                               ; preds = %13
  %43 = mul nsw i32 %36, %25
  %44 = mul nsw i32 %25, %21
  %45 = sext i32 %44 to i64
  %46 = sub nsw i64 0, %45
  %47 = getelementptr inbounds i8, ptr %23, i64 %46
  %48 = getelementptr inbounds i8, ptr %47, i64 -32
  %49 = sext i32 %43 to i64
  %50 = getelementptr inbounds i8, ptr %48, i64 %49
  br label %51

51:                                               ; preds = %42, %72
  %52 = phi i32 [ %4, %42 ], [ %73, %72 ]
  %53 = phi i64 [ %9, %42 ], [ %74, %72 ]
  %54 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %53
  %55 = getelementptr inbounds %struct.x264_weight_t, ptr %54, i64 0, i32 5
  %56 = load ptr, ptr %55, align 16, !tbaa !134
  %57 = icmp eq ptr %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %51
  %59 = load ptr, ptr %33, align 8, !tbaa !137
  %60 = getelementptr inbounds %struct.x264_frame, ptr %59, i64 0, i32 38, i64 %53
  %61 = load ptr, ptr %60, align 8, !tbaa !46
  %62 = getelementptr inbounds %struct.x264_frame, ptr %59, i64 0, i32 24
  %63 = load i32, ptr %62, align 8, !tbaa !39
  %64 = mul nsw i32 %63, %21
  %65 = sext i32 %64 to i64
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i8, ptr %61, i64 %66
  %68 = getelementptr inbounds i8, ptr %67, i64 -32
  %69 = getelementptr inbounds i8, ptr %68, i64 %49
  %70 = load i32, ptr %24, align 8, !tbaa !39
  tail call void @x264_weight_scale_plane(ptr noundef nonnull %0, ptr noundef nonnull %69, i32 noundef %70, ptr noundef nonnull %50, i32 noundef %70, i32 noundef %18, i32 noundef %37, ptr noundef nonnull %54) #17
  %71 = load i32, ptr %3, align 8, !tbaa !133
  br label %72

72:                                               ; preds = %51, %58
  %73 = phi i32 [ %52, %51 ], [ %71, %58 ]
  %74 = add nuw nsw i64 %53, 1
  %75 = trunc i64 %74 to i32
  %76 = icmp sgt i32 %73, %75
  br i1 %76, label %51, label %80, !llvm.loop !141

77:                                               ; preds = %8
  %78 = add nuw nsw i64 %9, 1
  %79 = icmp eq i64 %78, %7
  br i1 %79, label %80, label %8, !llvm.loop !142

80:                                               ; preds = %77, %72, %2, %13
  ret void
}

declare void @x264_weight_scale_plane(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @x264_macroblock_analyse(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca [256 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [9 x [2 x i16]], align 4
  %8 = alloca [2 x i32], align 8
  %9 = alloca [2 x ptr], align 16
  %10 = alloca %struct.x264_me_t, align 16
  %11 = alloca %struct.x264_me_t, align 16
  %12 = alloca i32, align 4
  %13 = alloca [8 x [2 x i16]], align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.x264_mb_analysis_t, align 16
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 14176, ptr nonnull %15) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #17
  store i32 268435456, ptr %16, align 4, !tbaa !39
  %19 = tail call i32 @x264_ratecontrol_mb_qp(ptr noundef %0) #17
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 68
  store i32 %19, ptr %20, align 16, !tbaa !74
  %21 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 14
  %22 = load i32, ptr %21, align 8, !tbaa !143
  %23 = icmp ne i32 %22, 0
  %24 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %25 = load i32, ptr %24, align 4, !tbaa !144
  %26 = icmp slt i32 %25, 10
  %27 = select i1 %23, i1 %26, i1 false
  br i1 %27, label %28, label %35

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 70
  %30 = load i32, ptr %29, align 8, !tbaa !75
  %31 = sub nsw i32 %19, %30
  %32 = tail call i32 @llvm.abs.i32(i32 %31, i1 true)
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store i32 %30, ptr %20, align 16, !tbaa !74
  br label %35

35:                                               ; preds = %1, %34, %28
  %36 = phi i32 [ %30, %34 ], [ %19, %28 ], [ %19, %1 ]
  %37 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %38 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 2
  %39 = load i32, ptr %38, align 16, !tbaa !60
  %40 = icmp eq i32 %39, 1
  %41 = sext i1 %40 to i32
  %42 = add i32 %25, %41
  %43 = icmp sgt i32 %42, 5
  %44 = zext i1 %43 to i32
  %45 = icmp sgt i32 %42, 7
  %46 = zext i1 %45 to i32
  %47 = icmp sgt i32 %25, 9
  %48 = zext i1 %47 to i32
  %49 = add nuw nsw i32 %46, %48
  %50 = add nuw nsw i32 %49, %44
  %51 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 5
  store i32 %50, ptr %51, align 8, !tbaa !145
  %52 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 2
  store i32 %36, ptr %52, align 8, !tbaa !149
  %53 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 39
  %54 = load ptr, ptr %53, align 16, !tbaa !150
  %55 = sext i32 %36 to i64
  %56 = getelementptr inbounds i8, ptr %54, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !5
  %58 = zext i8 %57 to i32
  %59 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 69
  store i32 %58, ptr %59, align 4, !tbaa !151
  %60 = getelementptr inbounds [52 x i8], ptr @x264_lambda_tab, i64 0, i64 %55
  %61 = load i8, ptr %60, align 1, !tbaa !5
  %62 = zext i8 %61 to i32
  store i32 %62, ptr %15, align 16, !tbaa !152
  %63 = getelementptr inbounds [52 x i32], ptr @x264_lambda2_tab, i64 0, i64 %55
  %64 = load i32, ptr %63, align 4, !tbaa !39
  %65 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 1
  store i32 %64, ptr %65, align 4, !tbaa !153
  %66 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 14
  %67 = load i32, ptr %66, align 8, !tbaa !154
  %68 = icmp sgt i32 %67, 1
  br i1 %68, label %69, label %73

69:                                               ; preds = %35
  %70 = icmp ne i32 %50, 0
  %71 = zext i1 %70 to i32
  %72 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 12
  store i32 %71, ptr %72, align 16, !tbaa !155
  br label %76

73:                                               ; preds = %35
  %74 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 12
  store i32 0, ptr %74, align 16, !tbaa !155
  %75 = icmp eq i32 %67, 0
  br i1 %75, label %90, label %76

76:                                               ; preds = %73, %69
  %77 = getelementptr inbounds [52 x i32], ptr @x264_trellis_lambda2_tab, i64 0, i64 %55
  %78 = load i32, ptr %77, align 4, !tbaa !39
  %79 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76
  store i32 %78, ptr %79, align 16, !tbaa !39
  %80 = getelementptr inbounds [2 x [52 x i32]], ptr @x264_trellis_lambda2_tab, i64 0, i64 1, i64 %55
  %81 = load i32, ptr %80, align 4, !tbaa !39
  %82 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 0, i64 1
  store i32 %81, ptr %82, align 4, !tbaa !39
  %83 = zext i8 %57 to i64
  %84 = getelementptr inbounds [52 x i32], ptr @x264_trellis_lambda2_tab, i64 0, i64 %83
  %85 = load i32, ptr %84, align 4, !tbaa !39
  %86 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 1
  store i32 %85, ptr %86, align 8, !tbaa !39
  %87 = getelementptr inbounds [2 x [52 x i32]], ptr @x264_trellis_lambda2_tab, i64 0, i64 1, i64 %83
  %88 = load i32, ptr %87, align 4, !tbaa !39
  %89 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 1, i64 1
  store i32 %88, ptr %89, align 4, !tbaa !39
  br label %90

90:                                               ; preds = %76, %73
  %91 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 77
  store i32 %62, ptr %91, align 16, !tbaa !59
  %92 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 20
  %93 = load i32, ptr %92, align 16, !tbaa !156
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %102, label %95

95:                                               ; preds = %90
  %96 = add i32 %36, 12
  %97 = sub i32 %96, %58
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [37 x i16], ptr @x264_chroma_lambda2_offset_tab, i64 0, i64 %98
  %100 = load i16, ptr %99, align 2, !tbaa !37
  %101 = zext i16 %100 to i32
  br label %102

102:                                              ; preds = %95, %90
  %103 = phi i32 [ %101, %95 ], [ 256, %90 ]
  %104 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 78
  store i32 %103, ptr %104, align 4, !tbaa !47
  %105 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  store i32 0, ptr %105, align 4, !tbaa !51
  %106 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 13
  store i32 0, ptr %106, align 4, !tbaa !157
  %107 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 19
  store i32 268435456, ptr %107, align 4, !tbaa !158
  %108 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 16
  store i32 268435456, ptr %108, align 4, !tbaa !159
  %109 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 12
  store i32 268435456, ptr %109, align 4, !tbaa !160
  %110 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 9
  store i32 268435456, ptr %110, align 8, !tbaa !161
  %111 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %112 = load i32, ptr %111, align 4, !tbaa !57
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %121

114:                                              ; preds = %102
  %115 = icmp eq i32 %50, 0
  br i1 %115, label %129, label %116

116:                                              ; preds = %114
  %117 = sext i32 %64 to i64
  %118 = mul nsw i64 %117, 3088
  %119 = add nsw i64 %118, 128
  %120 = lshr i64 %119, 8
  br label %121

121:                                              ; preds = %116, %102
  %122 = phi i64 [ %120, %116 ], [ 268435456, %102 ]
  %123 = trunc i64 %122 to i32
  %124 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 18
  store i32 %123, ptr %124, align 8, !tbaa !162
  %125 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 6
  store i32 0, ptr %125, align 4, !tbaa !163
  %126 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %127 = load i32, ptr %126, align 4, !tbaa !164
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %135, label %149

129:                                              ; preds = %114
  %130 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 18
  store i32 268435456, ptr %130, align 8, !tbaa !162
  %131 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 6
  store i32 0, ptr %131, align 4, !tbaa !163
  %132 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %133 = load i32, ptr %132, align 4, !tbaa !164
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %137, label %149

135:                                              ; preds = %121
  %136 = icmp eq i32 %50, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %129, %135
  %138 = phi ptr [ %124, %135 ], [ %130, %129 ]
  %139 = phi ptr [ %125, %135 ], [ %131, %129 ]
  %140 = phi ptr [ %126, %135 ], [ %132, %129 ]
  %141 = icmp eq i32 %67, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %137
  %143 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 17
  %144 = load i32, ptr %143, align 4, !tbaa !165
  %145 = icmp eq i32 %144, 0
  br label %146

146:                                              ; preds = %142, %137
  %147 = phi i1 [ false, %137 ], [ %145, %142 ]
  %148 = zext i1 %147 to i32
  br label %149

149:                                              ; preds = %129, %146, %135, %121
  %150 = phi ptr [ %126, %121 ], [ %140, %146 ], [ %126, %135 ], [ %132, %129 ]
  %151 = phi ptr [ %125, %121 ], [ %139, %146 ], [ %125, %135 ], [ %131, %129 ]
  %152 = phi ptr [ %124, %121 ], [ %138, %146 ], [ %124, %135 ], [ %130, %129 ]
  %153 = phi i32 [ 0, %121 ], [ %148, %146 ], [ 2, %135 ], [ 0, %129 ]
  %154 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 61
  store i32 %153, ptr %154, align 8, !tbaa !166
  %155 = icmp eq i32 %39, 2
  br i1 %155, label %419, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 9
  %158 = load i32, ptr %157, align 4, !tbaa !167
  %159 = shl nsw i32 %158, 2
  %160 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  %161 = load i32, ptr %160, align 16, !tbaa !168
  %162 = shl i32 %161, 6
  %163 = sub i32 -96, %162
  %164 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 18
  store i32 %163, ptr %164, align 8, !tbaa !39
  %165 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %166 = load ptr, ptr %165, align 16, !tbaa !169
  %167 = getelementptr inbounds %struct.x264_sps_t, ptr %166, i64 0, i32 16
  %168 = load i32, ptr %167, align 4, !tbaa !170
  %169 = xor i32 %161, -1
  %170 = add i32 %168, %169
  %171 = shl i32 %170, 6
  %172 = add i32 %171, 96
  %173 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 19
  store i32 %172, ptr %173, align 16, !tbaa !39
  %174 = sub nsw i32 0, %159
  %175 = add nsw i32 %159, -1
  %176 = icmp slt i32 %163, %174
  %177 = tail call i32 @llvm.smin.i32(i32 %163, i32 %175)
  %178 = select i1 %176, i32 %174, i32 %177
  %179 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 20
  store i32 %178, ptr %179, align 8, !tbaa !39
  %180 = icmp slt i32 %172, %174
  %181 = tail call i32 @llvm.smin.i32(i32 %172, i32 %175)
  %182 = select i1 %180, i32 %174, i32 %181
  %183 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 21
  store i32 %182, ptr %183, align 16, !tbaa !39
  %184 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 16
  %185 = load i32, ptr %184, align 16, !tbaa !175
  %186 = icmp ne i32 %185, 0
  %187 = icmp eq i32 %39, 0
  %188 = select i1 %186, i1 %187, i1 false
  br i1 %188, label %189, label %206

189:                                              ; preds = %156
  %190 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 47
  %191 = load ptr, ptr %190, align 16, !tbaa !46
  %192 = getelementptr inbounds %struct.x264_frame, ptr %191, i64 0, i32 83
  %193 = load i32, ptr %192, align 4, !tbaa !176
  %194 = sub i32 %193, %161
  %195 = shl i32 %194, 6
  %196 = add i32 %195, -12
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %206

198:                                              ; preds = %189
  %199 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 45
  %200 = load ptr, ptr %199, align 16, !tbaa !177
  %201 = getelementptr inbounds %struct.x264_frame, ptr %200, i64 0, i32 82
  %202 = load i32, ptr %201, align 16, !tbaa !178
  %203 = icmp slt i32 %161, %202
  br i1 %203, label %204, label %206

204:                                              ; preds = %198
  %205 = tail call i32 @llvm.smin.i32(i32 %182, i32 %196)
  store i32 %205, ptr %183, align 16, !tbaa !39
  br label %206

206:                                              ; preds = %204, %198, %189, %156
  %207 = phi i32 [ %182, %189 ], [ %182, %198 ], [ %205, %204 ], [ %182, %156 ]
  %208 = ashr i32 %178, 2
  %209 = add nsw i32 %208, 6
  %210 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 22
  store i32 %209, ptr %210, align 8, !tbaa !39
  %211 = ashr i32 %207, 2
  %212 = add nsw i32 %211, -6
  %213 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 23
  store i32 %212, ptr %213, align 16, !tbaa !39
  %214 = icmp eq i32 %161, 0
  br i1 %214, label %215, label %311

215:                                              ; preds = %206
  %216 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %217 = load i32, ptr %216, align 4, !tbaa !62
  %218 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 7
  %219 = load i32, ptr %218, align 4, !tbaa !61
  %220 = ashr i32 %217, %219
  %221 = getelementptr inbounds %struct.x264_sps_t, ptr %166, i64 0, i32 17
  %222 = load i32, ptr %221, align 4, !tbaa !179
  %223 = ashr i32 %222, %219
  %224 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 12
  %225 = load i32, ptr %224, align 4, !tbaa !180
  %226 = icmp sgt i32 %225, 1
  br i1 %226, label %227, label %284

227:                                              ; preds = %215
  %228 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %229 = load i32, ptr %228, align 4, !tbaa !36
  %230 = or i32 %229, %217
  %231 = shl nsw i32 %230, 4
  %232 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 10
  %233 = load i32, ptr %232, align 8, !tbaa !181
  %234 = add nsw i32 %231, %233
  %235 = zext i1 %40 to i32
  %236 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 49
  %237 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 47
  %238 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 48
  %239 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 46
  br label %244

240:                                              ; preds = %254
  %241 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 3
  %242 = load i32, ptr %241, align 4, !tbaa !182
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %276, label %274

244:                                              ; preds = %254, %227
  %245 = phi i32 [ %159, %227 ], [ %255, %254 ]
  %246 = phi i32 [ %235, %227 ], [ %256, %254 ]
  %247 = icmp eq i32 %246, 0
  %248 = select i1 %247, ptr %237, ptr %236
  %249 = select i1 %247, ptr %239, ptr %238
  %250 = load i32, ptr %249, align 8, !tbaa !39
  %251 = icmp sgt i32 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %244
  %253 = zext i32 %250 to i64
  br label %258

254:                                              ; preds = %258, %244
  %255 = phi i32 [ %245, %244 ], [ %271, %258 ]
  %256 = add nsw i32 %246, -1
  %257 = icmp sgt i32 %246, 0
  br i1 %257, label %244, label %240, !llvm.loop !183

258:                                              ; preds = %258, %252
  %259 = phi i64 [ 0, %252 ], [ %272, %258 ]
  %260 = phi i32 [ %245, %252 ], [ %271, %258 ]
  %261 = getelementptr inbounds ptr, ptr %248, i64 %259
  %262 = load ptr, ptr %261, align 8, !tbaa !46
  %263 = getelementptr inbounds %struct.x264_frame, ptr %262, i64 0, i32 40
  %264 = load ptr, ptr %263, align 8, !tbaa !184
  tail call void @x264_frame_cond_wait(ptr noundef %264, i32 noundef %234) #17
  %265 = load ptr, ptr %261, align 8, !tbaa !46
  %266 = getelementptr inbounds %struct.x264_frame, ptr %265, i64 0, i32 40
  %267 = load ptr, ptr %266, align 8, !tbaa !184
  %268 = getelementptr inbounds %struct.x264_frame, ptr %267, i64 0, i32 76
  %269 = load i32, ptr %268, align 8, !tbaa !185
  %270 = sub nsw i32 %269, %231
  %271 = tail call i32 @llvm.smin.i32(i32 %260, i32 %270)
  %272 = add nuw nsw i64 %259, 1
  %273 = icmp eq i64 %272, %253
  br i1 %273, label %254, label %258, !llvm.loop !186

274:                                              ; preds = %240
  %275 = load i32, ptr %232, align 8, !tbaa !181
  br label %276

276:                                              ; preds = %274, %240
  %277 = phi i32 [ %275, %274 ], [ %255, %240 ]
  %278 = load i32, ptr %228, align 4, !tbaa !36
  %279 = icmp ne i32 %278, 0
  %280 = zext i1 %279 to i32
  %281 = ashr i32 %277, %280
  %282 = add nsw i32 %281, %231
  tail call void @x264_analyse_weight_frame(ptr noundef nonnull %0, i32 noundef %282)
  %283 = load i32, ptr %38, align 16, !tbaa !60
  br label %284

284:                                              ; preds = %276, %215
  %285 = phi i32 [ %283, %276 ], [ %39, %215 ]
  %286 = phi i32 [ %281, %276 ], [ %159, %215 ]
  %287 = shl i32 %220, 6
  %288 = sub i32 -96, %287
  %289 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 18, i64 1
  store i32 %288, ptr %289, align 4, !tbaa !39
  %290 = xor i32 %220, -1
  %291 = add i32 %223, %290
  %292 = shl i32 %291, 6
  %293 = add i32 %292, 96
  %294 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 19, i64 1
  store i32 %293, ptr %294, align 4, !tbaa !39
  %295 = icmp slt i32 %288, %174
  %296 = tail call i32 @llvm.smin.i32(i32 %288, i32 %159)
  %297 = select i1 %295, i32 %174, i32 %296
  %298 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 20, i64 1
  store i32 %297, ptr %298, align 4, !tbaa !39
  %299 = icmp slt i32 %293, %174
  %300 = tail call i32 @llvm.smin.i32(i32 %293, i32 %175)
  %301 = select i1 %299, i32 %174, i32 %300
  %302 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 21, i64 1
  %303 = shl nsw i32 %286, 2
  %304 = tail call i32 @llvm.smin.i32(i32 %301, i32 %303)
  store i32 %304, ptr %302, align 4, !tbaa !39
  %305 = ashr exact i32 %297, 2
  %306 = add nsw i32 %305, 6
  %307 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 22, i64 1
  store i32 %306, ptr %307, align 4, !tbaa !39
  %308 = ashr i32 %304, 2
  %309 = add nsw i32 %308, -6
  %310 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 23, i64 1
  store i32 %309, ptr %310, align 4, !tbaa !39
  br label %311

311:                                              ; preds = %284, %206
  %312 = phi i32 [ %285, %284 ], [ %39, %206 ]
  %313 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22
  %314 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 17
  store i32 268435456, ptr %314, align 16, !tbaa !187
  %315 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 14
  store i32 268435456, ptr %315, align 16, !tbaa !188
  %316 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 4
  store i32 268435456, ptr %316, align 16, !tbaa !189
  store i32 268435456, ptr %313, align 16, !tbaa !190
  %317 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2, i32 12
  store i32 268435456, ptr %317, align 8, !tbaa !191
  %318 = icmp eq i32 %312, 1
  br i1 %318, label %319, label %333

319:                                              ; preds = %311
  %320 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 31
  %321 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 24
  %322 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 36
  store i32 268435456, ptr %322, align 16, !tbaa !192
  %323 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 35
  store i32 268435456, ptr %323, align 4, !tbaa !193
  %324 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 37
  store i32 268435456, ptr %324, align 4, !tbaa !194
  store <4 x i32> <i32 268435456, i32 268435456, i32 268435456, i32 268435456>, ptr %320, align 4, !tbaa !39
  %325 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23
  %326 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 17
  store i32 268435456, ptr %326, align 16, !tbaa !195
  %327 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 14
  store i32 268435456, ptr %327, align 16, !tbaa !196
  %328 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 27, i64 3
  store i32 268435456, ptr %328, align 8, !tbaa !39
  %329 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 27, i64 2
  store i32 268435456, ptr %329, align 4, !tbaa !39
  %330 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 27, i64 1
  store i32 268435456, ptr %330, align 16, !tbaa !39
  store <4 x i32> <i32 268435456, i32 268435456, i32 268435456, i32 268435456>, ptr %321, align 16, !tbaa !39
  %331 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 4
  store i32 268435456, ptr %331, align 16, !tbaa !197
  store i32 268435456, ptr %325, align 16, !tbaa !198
  %332 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 2, i32 12
  store i32 268435456, ptr %332, align 8, !tbaa !199
  br label %342

333:                                              ; preds = %311
  %334 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 1
  %335 = load i32, ptr %334, align 4, !tbaa !73
  %336 = and i32 %335, 32
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %342, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 12, i64 0
  %340 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 10, i64 0
  %341 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 8, i64 0
  store <4 x i32> <i32 268435456, i32 268435456, i32 268435456, i32 268435456>, ptr %339, align 16, !tbaa !39
  store <4 x i32> <i32 268435456, i32 268435456, i32 268435456, i32 268435456>, ptr %340, align 16, !tbaa !39
  store <4 x i32> <i32 268435456, i32 268435456, i32 268435456, i32 268435456>, ptr %341, align 16, !tbaa !39
  br label %342

342:                                              ; preds = %338, %333, %319
  %343 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %344 = load i32, ptr %343, align 8, !tbaa !64
  %345 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 3
  %346 = load i32, ptr %345, align 4, !tbaa !200
  %347 = sub nsw i32 %344, %346
  %348 = icmp sgt i32 %347, 4
  br i1 %348, label %349, label %392

349:                                              ; preds = %342
  %350 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  %351 = load i32, ptr %350, align 8, !tbaa !201
  %352 = icmp sgt i32 %351, 2
  br i1 %352, label %353, label %391

353:                                              ; preds = %349
  %354 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 30
  %355 = load i32, ptr %354, align 8, !tbaa !202
  %356 = icmp ult i32 %355, 4
  br i1 %356, label %392, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 29
  %359 = load i32, ptr %358, align 4, !tbaa !203
  %360 = icmp ult i32 %359, 4
  br i1 %360, label %392, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 31
  %363 = load i32, ptr %362, align 4, !tbaa !204
  %364 = icmp ult i32 %363, 4
  br i1 %364, label %392, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 32
  %367 = load i32, ptr %366, align 16, !tbaa !205
  %368 = icmp ult i32 %367, 4
  br i1 %368, label %392, label %369

369:                                              ; preds = %365
  %370 = icmp eq i32 %312, 0
  br i1 %370, label %371, label %380

371:                                              ; preds = %369
  %372 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 47
  %373 = load ptr, ptr %372, align 16, !tbaa !46
  %374 = getelementptr inbounds %struct.x264_frame, ptr %373, i64 0, i32 41
  %375 = load ptr, ptr %374, align 16, !tbaa !206
  %376 = sext i32 %344 to i64
  %377 = getelementptr inbounds i8, ptr %375, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !5
  %379 = icmp ult i8 %378, 4
  br i1 %379, label %398, label %380

380:                                              ; preds = %371, %369
  %381 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 57, i32 0, i32 3
  %382 = load i32, ptr %381, align 4, !tbaa !39
  %383 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 57, i32 0, i32 3, i64 1
  %384 = load i32, ptr %383, align 4, !tbaa !39
  %385 = add nsw i32 %384, %382
  %386 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 57, i32 0, i32 3, i64 2
  %387 = load i32, ptr %386, align 4, !tbaa !39
  %388 = add nsw i32 %385, %387
  %389 = mul nsw i32 %388, 3
  %390 = icmp slt i32 %347, %389
  br i1 %390, label %392, label %391

391:                                              ; preds = %380, %349
  store i32 1, ptr %151, align 4, !tbaa !163
  br label %392

392:                                              ; preds = %391, %380, %365, %361, %357, %353, %342
  %393 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 62
  store i32 0, ptr %393, align 4, !tbaa !207
  %394 = load i32, ptr %184, align 16, !tbaa !175
  %395 = icmp ne i32 %394, 0
  %396 = icmp eq i32 %312, 0
  %397 = and i1 %395, %396
  br i1 %397, label %402, label %417

398:                                              ; preds = %371
  %399 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 62
  store i32 0, ptr %399, align 4, !tbaa !207
  %400 = load i32, ptr %184, align 16, !tbaa !175
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %415, label %402

402:                                              ; preds = %392, %398
  %403 = load i32, ptr %160, align 16, !tbaa !168
  %404 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 45
  %405 = load ptr, ptr %404, align 16, !tbaa !177
  %406 = getelementptr inbounds %struct.x264_frame, ptr %405, i64 0, i32 82
  %407 = load i32, ptr %406, align 16, !tbaa !178
  %408 = icmp slt i32 %403, %407
  br i1 %408, label %415, label %409

409:                                              ; preds = %402
  %410 = getelementptr inbounds %struct.x264_frame, ptr %405, i64 0, i32 83
  %411 = load i32, ptr %410, align 4, !tbaa !176
  %412 = icmp sgt i32 %403, %411
  br i1 %412, label %415, label %413

413:                                              ; preds = %409
  %414 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 7
  store i32 1, ptr %414, align 16, !tbaa !208
  store i32 0, ptr %151, align 4, !tbaa !163
  br label %491

415:                                              ; preds = %402, %409, %398
  %416 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 7
  store i32 0, ptr %416, align 16, !tbaa !208
  br label %491

417:                                              ; preds = %392
  %418 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 7
  store i32 0, ptr %418, align 16, !tbaa !208
  switch i32 %312, label %3629 [
    i32 2, label %419
    i32 0, label %491
    i32 1, label %2122
  ]

419:                                              ; preds = %149, %2099, %550, %417
  %420 = phi i32 [ %2121, %2099 ], [ %50, %550 ], [ %50, %417 ], [ %50, %149 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %467, label %422

422:                                              ; preds = %419
  %423 = icmp slt i32 %420, 2
  %424 = load i32, ptr %66, align 8, !tbaa !154
  %425 = icmp eq i32 %424, 2
  br i1 %425, label %426, label %457

426:                                              ; preds = %422
  %427 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 16
  %428 = load i32, ptr %427, align 16, !tbaa !93
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %457, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 2
  %432 = load i32, ptr %431, align 8, !tbaa !209
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %437

434:                                              ; preds = %430
  %435 = load i32, ptr %105, align 4, !tbaa !51
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %451, label %443

437:                                              ; preds = %430
  %438 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 11
  %439 = load ptr, ptr %438, align 8, !tbaa !210
  %440 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11
  %441 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %442 = load ptr, ptr %441, align 16, !tbaa !46
  call void %439(ptr noundef nonnull %440, ptr noundef %442, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  br label %451

443:                                              ; preds = %434
  %444 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 11
  %445 = load ptr, ptr %444, align 8, !tbaa !210
  %446 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11
  %447 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %448 = load ptr, ptr %447, align 16, !tbaa !46
  call void %445(ptr noundef nonnull %446, ptr noundef %448, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  %449 = load i32, ptr %105, align 4, !tbaa !51
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %457

451:                                              ; preds = %443, %437, %434
  %452 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 6
  %453 = load ptr, ptr %452, align 16, !tbaa !211
  %454 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 12
  %455 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %456 = load ptr, ptr %455, align 16, !tbaa !46
  call void %453(ptr noundef nonnull %454, ptr noundef %456, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  br label %457

457:                                              ; preds = %451, %443, %426, %422
  %458 = load i32, ptr %111, align 4, !tbaa !57
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %467, label %460

460:                                              ; preds = %457
  %461 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 11
  %462 = load ptr, ptr %461, align 8, !tbaa !212
  %463 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 13
  call void %462(ptr noundef nonnull %463, i32 noundef 72) #17
  br i1 %423, label %467, label %464

464:                                              ; preds = %460
  %465 = load ptr, ptr %461, align 8, !tbaa !212
  %466 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 15
  call void %465(ptr noundef nonnull %466, i32 noundef 128) #17
  br label %467

467:                                              ; preds = %464, %460, %457, %419
  call fastcc void @x264_mb_analyse_intra(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef 268435456)
  %468 = load i32, ptr %51, align 8, !tbaa !145
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %471, label %470

470:                                              ; preds = %467
  call fastcc void @x264_intra_rd(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef 268435456)
  br label %471

471:                                              ; preds = %470, %467
  %472 = load i32, ptr %110, align 8, !tbaa !161
  store i32 %472, ptr %16, align 4, !tbaa !39
  %473 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 2, ptr %473, align 8, !tbaa !49
  %474 = load i32, ptr %108, align 4, !tbaa !159
  %475 = icmp slt i32 %474, %472
  br i1 %475, label %476, label %477

476:                                              ; preds = %471
  store i32 %474, ptr %16, align 4, !tbaa !39
  store i32 0, ptr %473, align 8, !tbaa !49
  br label %477

477:                                              ; preds = %476, %471
  %478 = phi i32 [ %474, %476 ], [ %472, %471 ]
  %479 = load i32, ptr %109, align 4, !tbaa !160
  %480 = icmp slt i32 %479, %478
  br i1 %480, label %481, label %482

481:                                              ; preds = %477
  store i32 %479, ptr %16, align 4, !tbaa !39
  store i32 1, ptr %473, align 8, !tbaa !49
  br label %482

482:                                              ; preds = %481, %477
  %483 = phi i32 [ %479, %481 ], [ %478, %477 ]
  %484 = load i32, ptr %152, align 8, !tbaa !162
  %485 = icmp slt i32 %484, %483
  br i1 %485, label %486, label %487

486:                                              ; preds = %482
  store i32 3, ptr %473, align 8, !tbaa !49
  br label %3629

487:                                              ; preds = %482
  %488 = load i32, ptr %51, align 8, !tbaa !145
  %489 = icmp sgt i32 %488, 1
  br i1 %489, label %490, label %3629

490:                                              ; preds = %487
  call fastcc void @x264_intra_rd_refine(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %3629

491:                                              ; preds = %415, %413, %417
  %492 = phi i1 [ false, %413 ], [ true, %417 ], [ true, %415 ]
  %493 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 9
  %494 = load ptr, ptr %493, align 8, !tbaa !213
  %495 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20
  %496 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  %497 = load i32, ptr %496, align 16, !tbaa !168
  %498 = and i32 %497, 3
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds [6 x ptr], ptr %495, i64 0, i64 %499
  %501 = load ptr, ptr %500, align 8, !tbaa !46
  %502 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %503 = load i32, ptr %502, align 16, !tbaa !39
  tail call void %494(ptr noundef %501, i32 noundef %503, i32 noundef 0) #17
  %504 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 8
  store i32 0, ptr %504, align 4, !tbaa !214
  %505 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 7
  br i1 %492, label %551, label %506

506:                                              ; preds = %491
  %507 = load i32, ptr %92, align 16, !tbaa !156
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %588

509:                                              ; preds = %506
  %510 = load i32, ptr %20, align 16, !tbaa !74
  %511 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 64
  %512 = load i32, ptr %511, align 4, !tbaa !215
  %513 = sub nsw i32 %510, %512
  %514 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 2
  %515 = load i32, ptr %514, align 8, !tbaa !216
  %516 = tail call i32 @llvm.smax.i32(i32 %513, i32 %515)
  store i32 %516, ptr %20, align 16, !tbaa !74
  store i32 %516, ptr %52, align 8, !tbaa !149
  %517 = load ptr, ptr %53, align 16, !tbaa !150
  %518 = sext i32 %516 to i64
  %519 = getelementptr inbounds i8, ptr %517, i64 %518
  %520 = load i8, ptr %519, align 1, !tbaa !5
  %521 = zext i8 %520 to i32
  store i32 %521, ptr %59, align 4, !tbaa !151
  %522 = getelementptr inbounds [52 x i8], ptr @x264_lambda_tab, i64 0, i64 %518
  %523 = load i8, ptr %522, align 1, !tbaa !5
  %524 = zext i8 %523 to i32
  store i32 %524, ptr %15, align 16, !tbaa !152
  %525 = getelementptr inbounds [52 x i32], ptr @x264_lambda2_tab, i64 0, i64 %518
  %526 = load i32, ptr %525, align 4, !tbaa !39
  store i32 %526, ptr %65, align 4, !tbaa !153
  %527 = load i32, ptr %66, align 8, !tbaa !154
  %528 = icmp sgt i32 %527, 1
  br i1 %528, label %529, label %533

529:                                              ; preds = %509
  %530 = icmp ne i32 %50, 0
  %531 = zext i1 %530 to i32
  %532 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 12
  store i32 %531, ptr %532, align 16, !tbaa !155
  br label %536

533:                                              ; preds = %509
  %534 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 12
  store i32 0, ptr %534, align 16, !tbaa !155
  %535 = icmp eq i32 %527, 0
  br i1 %535, label %550, label %536

536:                                              ; preds = %533, %529
  %537 = getelementptr inbounds [52 x i32], ptr @x264_trellis_lambda2_tab, i64 0, i64 %518
  %538 = load i32, ptr %537, align 4, !tbaa !39
  %539 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76
  store i32 %538, ptr %539, align 16, !tbaa !39
  %540 = getelementptr inbounds [2 x [52 x i32]], ptr @x264_trellis_lambda2_tab, i64 0, i64 1, i64 %518
  %541 = load i32, ptr %540, align 4, !tbaa !39
  %542 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 0, i64 1
  store i32 %541, ptr %542, align 4, !tbaa !39
  %543 = zext i8 %520 to i64
  %544 = getelementptr inbounds [52 x i32], ptr @x264_trellis_lambda2_tab, i64 0, i64 %543
  %545 = load i32, ptr %544, align 4, !tbaa !39
  %546 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 1
  store i32 %545, ptr %546, align 8, !tbaa !39
  %547 = getelementptr inbounds [2 x [52 x i32]], ptr @x264_trellis_lambda2_tab, i64 0, i64 1, i64 %543
  %548 = load i32, ptr %547, align 4, !tbaa !39
  %549 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 1, i64 1
  store i32 %548, ptr %549, align 4, !tbaa !39
  br label %550

550:                                              ; preds = %536, %533
  store i32 %524, ptr %91, align 16, !tbaa !59
  store i32 256, ptr %104, align 4, !tbaa !47
  br label %419

551:                                              ; preds = %491
  %552 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 15
  %553 = load i32, ptr %552, align 4, !tbaa !217
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %588, label %555

555:                                              ; preds = %551
  %556 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 12
  %557 = load i32, ptr %556, align 4, !tbaa !180
  %558 = icmp sgt i32 %557, 1
  br i1 %558, label %559, label %566

559:                                              ; preds = %555
  %560 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 10, i64 1
  %561 = load i16, ptr %560, align 2, !tbaa !37
  %562 = sext i16 %561 to i32
  %563 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 21, i64 1
  %564 = load i32, ptr %563, align 4, !tbaa !39
  %565 = icmp slt i32 %564, %562
  br i1 %565, label %588, label %566

566:                                              ; preds = %559, %555
  %567 = load i32, ptr %37, align 4, !tbaa !144
  %568 = icmp sgt i32 %567, 2
  br i1 %568, label %569, label %570

569:                                              ; preds = %566
  store i32 1, ptr %504, align 4, !tbaa !214
  br label %588

570:                                              ; preds = %566
  %571 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 30
  %572 = load i32, ptr %571, align 8, !tbaa !202
  %573 = icmp eq i32 %572, 6
  br i1 %573, label %586, label %574

574:                                              ; preds = %570
  %575 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 29
  %576 = load i32, ptr %575, align 4, !tbaa !203
  %577 = icmp eq i32 %576, 6
  br i1 %577, label %586, label %578

578:                                              ; preds = %574
  %579 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 31
  %580 = load i32, ptr %579, align 4, !tbaa !204
  %581 = icmp eq i32 %580, 6
  br i1 %581, label %586, label %582

582:                                              ; preds = %578
  %583 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 32
  %584 = load i32, ptr %583, align 16, !tbaa !205
  %585 = icmp eq i32 %584, 6
  br i1 %585, label %586, label %588

586:                                              ; preds = %582, %578, %574, %570
  %587 = tail call i32 @x264_macroblock_probe_skip(ptr noundef nonnull %0, i32 noundef 0) #17
  br label %588

588:                                              ; preds = %551, %569, %586, %582, %559, %506
  %589 = phi i32 [ 0, %506 ], [ 0, %559 ], [ 0, %569 ], [ %587, %586 ], [ 0, %582 ], [ 0, %551 ]
  %590 = load ptr, ptr %493, align 8, !tbaa !213
  %591 = load i32, ptr %496, align 16, !tbaa !168
  %592 = and i32 %591, 3
  %593 = zext i32 %592 to i64
  %594 = getelementptr inbounds [6 x ptr], ptr %495, i64 0, i64 %593
  %595 = load ptr, ptr %594, align 8, !tbaa !46
  %596 = load i32, ptr %502, align 16, !tbaa !39
  tail call void %590(ptr noundef %595, i32 noundef %596, i32 noundef 1) #17
  %597 = icmp eq i32 %589, 0
  br i1 %597, label %618, label %598

598:                                              ; preds = %588
  %599 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 6, ptr %599, align 8, !tbaa !49
  %600 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 16, ptr %600, align 4, !tbaa !50
  %601 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %602 = load i32, ptr %601, align 8, !tbaa !39
  %603 = icmp sgt i32 %602, 0
  br i1 %603, label %604, label %3629

604:                                              ; preds = %598
  %605 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48
  %606 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  br label %607

607:                                              ; preds = %604, %607
  %608 = phi i64 [ 0, %604 ], [ %614, %607 ]
  %609 = getelementptr inbounds [32 x ptr], ptr %605, i64 0, i64 %608
  %610 = load ptr, ptr %609, align 8, !tbaa !46
  %611 = load i32, ptr %606, align 8, !tbaa !64
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds [2 x i16], ptr %610, i64 %612
  store i32 0, ptr %613, align 4, !tbaa !5
  %614 = add nuw nsw i64 %608, 1
  %615 = load i32, ptr %601, align 8, !tbaa !39
  %616 = sext i32 %615 to i64
  %617 = icmp slt i64 %614, %616
  br i1 %617, label %607, label %3629, !llvm.loop !218

618:                                              ; preds = %588
  %619 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 1
  %620 = load i32, ptr %619, align 4, !tbaa !73
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #17
  %621 = zext i8 %61 to i64
  %622 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 37, i64 %621
  %623 = load ptr, ptr %622, align 8, !tbaa !46
  %624 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 3
  store ptr %623, ptr %624, align 16, !tbaa !219
  %625 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 17
  %626 = load i32, ptr %625, align 16, !tbaa !220
  %627 = tail call i32 @llvm.smin.i32(i32 %626, i32 3)
  %628 = tail call i32 @llvm.smax.i32(i32 %627, i32 1)
  %629 = add nsw i32 %628, -1
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %621, i64 %630
  %632 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 4
  store ptr %631, ptr %632, align 8, !tbaa !46
  %633 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 18
  %634 = load i32, ptr %633, align 4, !tbaa !221
  %635 = tail call i32 @llvm.smin.i32(i32 %634, i32 3)
  %636 = tail call i32 @llvm.smax.i32(i32 %635, i32 1)
  %637 = add nsw i32 %636, -1
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %621, i64 %638
  %640 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 4, i64 1
  store ptr %639, ptr %640, align 16, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %11) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #17
  store i32 2147483647, ptr %14, align 4, !tbaa !39
  %641 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %642 = load i32, ptr %641, align 8, !tbaa !39
  %643 = icmp sgt i32 %642, 1
  %644 = select i1 %643, ptr %14, ptr null
  store i32 0, ptr %11, align 16, !tbaa !222
  %645 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 1
  store ptr %623, ptr %645, align 8, !tbaa !223
  %646 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 9
  %647 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23, i64 1
  %648 = load <2 x i32>, ptr %502, align 16, !tbaa !39
  store <2 x i32> %648, ptr %646, align 8, !tbaa !39
  %649 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %650 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 7
  %651 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %652 = load <2 x ptr>, ptr %649, align 16, !tbaa !46
  store <2 x ptr> %652, ptr %650, align 8, !tbaa !46
  %653 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %654 = load ptr, ptr %653, align 16, !tbaa !46
  %655 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 7, i64 2
  store ptr %654, ptr %655, align 8, !tbaa !46
  %656 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22
  %657 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2
  %658 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2, i32 12
  store i32 2147483647, ptr %658, align 8, !tbaa !191
  %659 = icmp sgt i32 %642, 0
  br i1 %659, label %660, label %796

660:                                              ; preds = %618
  %661 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 2
  %662 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 5
  %663 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 6
  %664 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 5, i64 4
  %665 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22
  %666 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 8
  %667 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 4
  %668 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 3
  %669 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 10
  %670 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %671 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 5
  %672 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 13
  %673 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48
  %674 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %675 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 12
  %676 = getelementptr inbounds %struct.x264_me_t, ptr %11, i64 0, i32 11
  %677 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 10
  %678 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 10, i64 1
  %679 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %680 = load i16, ptr %631, align 2, !tbaa !37
  %681 = zext i16 %680 to i32
  store i32 %681, ptr %661, align 16, !tbaa !224
  %682 = xor i32 %681, 2147483647
  store i32 %682, ptr %14, align 4, !tbaa !39
  %683 = load <4 x ptr>, ptr %495, align 16, !tbaa !46
  store <4 x ptr> %683, ptr %662, align 16, !tbaa !46
  %684 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 0, i64 4
  %685 = load <2 x ptr>, ptr %684, align 16, !tbaa !46
  store <2 x ptr> %685, ptr %664, align 16, !tbaa !46
  %686 = load ptr, ptr %665, align 8, !tbaa !46
  store ptr %686, ptr %666, align 16, !tbaa !225
  store i32 0, ptr %668, align 4, !tbaa !226
  %687 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 0
  %688 = load ptr, ptr %687, align 8, !tbaa !46
  store ptr %688, ptr %663, align 16, !tbaa !227
  %689 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 0
  store ptr %689, ptr %667, align 8, !tbaa !228
  call void @x264_mb_predict_mv_16x16(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %669) #17
  %690 = load i32, ptr %670, align 4, !tbaa !229
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %694, label %692

692:                                              ; preds = %660
  call void @x264_mb_predict_mv_ref16x16(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %13, ptr noundef nonnull %12) #17
  %693 = load i32, ptr %12, align 4, !tbaa !39
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %11, ptr noundef nonnull %13, i32 noundef %693, ptr noundef %644) #17
  br label %696

694:                                              ; preds = %660
  %695 = load i32, ptr %671, align 4, !tbaa !5
  store i32 %695, ptr %672, align 4, !tbaa !5
  call void @x264_me_refine_qpel_refdupe(ptr noundef nonnull %0, ptr noundef nonnull %11, ptr noundef %644) #17
  br label %696

696:                                              ; preds = %694, %692
  %697 = load i32, ptr %672, align 4, !tbaa !5
  %698 = load ptr, ptr %673, align 8, !tbaa !46
  %699 = load i32, ptr %674, align 8, !tbaa !64
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds [2 x i16], ptr %698, i64 %700
  store i32 %697, ptr %701, align 4, !tbaa !5
  %702 = load i32, ptr %672, align 4
  store i32 %702, ptr %671, align 4, !tbaa !5
  %703 = load i32, ptr %504, align 4, !tbaa !214
  %704 = icmp eq i32 %703, 0
  %705 = load i32, ptr %675, align 8, !tbaa !230
  br i1 %704, label %731, label %706

706:                                              ; preds = %696
  %707 = load i32, ptr %676, align 4, !tbaa !231
  %708 = sub nsw i32 %705, %707
  %709 = load i32, ptr %15, align 16, !tbaa !152
  %710 = mul nsw i32 %709, 300
  %711 = icmp slt i32 %708, %710
  br i1 %711, label %712, label %731

712:                                              ; preds = %706
  %713 = shl i32 %702, 16
  %714 = ashr exact i32 %713, 16
  %715 = load i16, ptr %677, align 4, !tbaa !37
  %716 = sext i16 %715 to i32
  %717 = sub nsw i32 %714, %716
  %718 = call i32 @llvm.abs.i32(i32 %717, i1 true)
  %719 = ashr i32 %702, 16
  %720 = load i16, ptr %678, align 2, !tbaa !37
  %721 = sext i16 %720 to i32
  %722 = sub nsw i32 %719, %721
  %723 = call i32 @llvm.abs.i32(i32 %722, i1 true)
  %724 = add nuw nsw i32 %723, %718
  %725 = icmp ult i32 %724, 2
  br i1 %725, label %726, label %731

726:                                              ; preds = %712
  %727 = call i32 @x264_macroblock_probe_skip(ptr noundef nonnull %0, i32 noundef 0) #17
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %729, label %770

729:                                              ; preds = %726
  %730 = load i32, ptr %675, align 8, !tbaa !230
  br label %731

731:                                              ; preds = %729, %712, %706, %696
  %732 = phi i32 [ %730, %729 ], [ %705, %712 ], [ %705, %706 ], [ %705, %696 ]
  %733 = load i32, ptr %661, align 16, !tbaa !224
  %734 = add nsw i32 %732, %733
  store i32 %734, ptr %675, align 8, !tbaa !230
  %735 = load i32, ptr %14, align 4, !tbaa !39
  %736 = add nsw i32 %735, %733
  store i32 %736, ptr %14, align 4, !tbaa !39
  %737 = load i32, ptr %658, align 8, !tbaa !191
  %738 = icmp slt i32 %734, %737
  br i1 %738, label %739, label %742

739:                                              ; preds = %731
  %740 = load ptr, ptr %679, align 8, !tbaa !48
  %741 = call ptr %740(ptr noundef nonnull %657, ptr noundef nonnull %11, i64 noundef 144) #17
  br label %742

742:                                              ; preds = %739, %731
  %743 = load i32, ptr %641, align 8, !tbaa !39
  %744 = icmp sgt i32 %743, 1
  br i1 %744, label %745, label %796

745:                                              ; preds = %742, %791
  %746 = phi i64 [ %792, %791 ], [ 1, %742 ]
  %747 = load ptr, ptr %632, align 8, !tbaa !46
  %748 = getelementptr inbounds i16, ptr %747, i64 %746
  %749 = load i16, ptr %748, align 2, !tbaa !37
  %750 = zext i16 %749 to i32
  store i32 %750, ptr %661, align 16, !tbaa !224
  %751 = load i32, ptr %14, align 4, !tbaa !39
  %752 = sub nsw i32 %751, %750
  store i32 %752, ptr %14, align 4, !tbaa !39
  %753 = getelementptr inbounds [32 x [6 x ptr]], ptr %495, i64 0, i64 %746
  %754 = load <4 x ptr>, ptr %753, align 16, !tbaa !46
  store <4 x ptr> %754, ptr %662, align 16, !tbaa !46
  %755 = getelementptr inbounds [32 x [6 x ptr]], ptr %495, i64 0, i64 %746, i64 4
  %756 = load <2 x ptr>, ptr %755, align 16, !tbaa !46
  store <2 x ptr> %756, ptr %664, align 16, !tbaa !46
  %757 = getelementptr inbounds [16 x ptr], ptr %665, i64 0, i64 %746
  %758 = load ptr, ptr %757, align 8, !tbaa !46
  store ptr %758, ptr %666, align 16, !tbaa !225
  %759 = trunc i64 %746 to i32
  store i32 %759, ptr %668, align 4, !tbaa !226
  %760 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %746
  %761 = load ptr, ptr %760, align 8, !tbaa !46
  store ptr %761, ptr %663, align 16, !tbaa !227
  %762 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %746
  store ptr %762, ptr %667, align 8, !tbaa !228
  call void @x264_mb_predict_mv_16x16(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %759, ptr noundef nonnull %669) #17
  %763 = load i32, ptr %670, align 4, !tbaa !229
  %764 = zext i32 %763 to i64
  %765 = icmp eq i64 %746, %764
  br i1 %765, label %766, label %768

766:                                              ; preds = %745
  %767 = load i32, ptr %671, align 4, !tbaa !5
  store i32 %767, ptr %672, align 4, !tbaa !5
  call void @x264_me_refine_qpel_refdupe(ptr noundef nonnull %0, ptr noundef nonnull %11, ptr noundef %644) #17
  br label %772

768:                                              ; preds = %745
  call void @x264_mb_predict_mv_ref16x16(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %759, ptr noundef nonnull %13, ptr noundef nonnull %12) #17
  %769 = load i32, ptr %12, align 4, !tbaa !39
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %11, ptr noundef nonnull %13, i32 noundef %769, ptr noundef %644) #17
  br label %772

770:                                              ; preds = %726
  %771 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 6, ptr %771, align 8, !tbaa !49
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %890

772:                                              ; preds = %768, %766
  %773 = load i32, ptr %672, align 4, !tbaa !5
  %774 = getelementptr inbounds [32 x ptr], ptr %673, i64 0, i64 %746
  %775 = load ptr, ptr %774, align 8, !tbaa !46
  %776 = load i32, ptr %674, align 8, !tbaa !64
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds [2 x i16], ptr %775, i64 %777
  store i32 %773, ptr %778, align 4, !tbaa !5
  %779 = load i32, ptr %672, align 4, !tbaa !5
  %780 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 5, i64 %746
  store i32 %779, ptr %780, align 4, !tbaa !5
  %781 = load i32, ptr %661, align 16, !tbaa !224
  %782 = load i32, ptr %675, align 8, !tbaa !230
  %783 = add nsw i32 %782, %781
  store i32 %783, ptr %675, align 8, !tbaa !230
  %784 = load i32, ptr %14, align 4, !tbaa !39
  %785 = add nsw i32 %784, %781
  store i32 %785, ptr %14, align 4, !tbaa !39
  %786 = load i32, ptr %658, align 8, !tbaa !191
  %787 = icmp slt i32 %783, %786
  br i1 %787, label %788, label %791

788:                                              ; preds = %772
  %789 = load ptr, ptr %679, align 8, !tbaa !48
  %790 = call ptr %789(ptr noundef nonnull %657, ptr noundef nonnull %11, i64 noundef 144) #17
  br label %791

791:                                              ; preds = %788, %772
  %792 = add nuw nsw i64 %746, 1
  %793 = load i32, ptr %641, align 8, !tbaa !39
  %794 = sext i32 %793 to i64
  %795 = icmp slt i64 %792, %794
  br i1 %795, label %745, label %796, !llvm.loop !232

796:                                              ; preds = %791, %742, %618
  %797 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2, i32 3
  %798 = load i32, ptr %797, align 4, !tbaa !234
  %799 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %800 = and i32 %798, 255
  %801 = mul nuw i32 %800, 16843009
  store i32 %801, ptr %799, align 4, !tbaa !5
  %802 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %801, ptr %802, align 4, !tbaa !5
  %803 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 %801, ptr %803, align 4, !tbaa !5
  %804 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %801, ptr %804, align 4, !tbaa !5
  %805 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 4, ptr %805, align 8, !tbaa !49
  %806 = load i32, ptr %51, align 8, !tbaa !145
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %890, label %808

808:                                              ; preds = %796
  %809 = icmp sgt i32 %806, 1
  br i1 %809, label %814, label %810

810:                                              ; preds = %808
  %811 = load i32, ptr %619, align 4, !tbaa !73
  %812 = lshr i32 %811, 5
  %813 = and i32 %812, 1
  br label %814

814:                                              ; preds = %810, %808
  %815 = phi i32 [ 1, %808 ], [ %813, %810 ]
  %816 = load i32, ptr %66, align 8, !tbaa !154
  %817 = icmp eq i32 %816, 2
  br i1 %817, label %818, label %846

818:                                              ; preds = %814
  %819 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 16
  %820 = load i32, ptr %819, align 16, !tbaa !93
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %846, label %822

822:                                              ; preds = %818
  %823 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 2
  %824 = load i32, ptr %823, align 8, !tbaa !209
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %829

826:                                              ; preds = %822
  %827 = load i32, ptr %105, align 4, !tbaa !51
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %841, label %834

829:                                              ; preds = %822
  %830 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 11
  %831 = load ptr, ptr %830, align 8, !tbaa !210
  %832 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11
  %833 = load ptr, ptr %649, align 16, !tbaa !46
  call void %831(ptr noundef nonnull %832, ptr noundef %833, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  br label %841

834:                                              ; preds = %826
  %835 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 11
  %836 = load ptr, ptr %835, align 8, !tbaa !210
  %837 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11
  %838 = load ptr, ptr %649, align 16, !tbaa !46
  call void %836(ptr noundef nonnull %837, ptr noundef %838, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  %839 = load i32, ptr %105, align 4, !tbaa !51
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %846

841:                                              ; preds = %834, %829, %826
  %842 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 6
  %843 = load ptr, ptr %842, align 16, !tbaa !211
  %844 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 12
  %845 = load ptr, ptr %649, align 16, !tbaa !46
  call void %843(ptr noundef nonnull %844, ptr noundef %845, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  br label %846

846:                                              ; preds = %841, %834, %818, %814
  %847 = load i32, ptr %111, align 4, !tbaa !57
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %857, label %849

849:                                              ; preds = %846
  %850 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 11
  %851 = load ptr, ptr %850, align 8, !tbaa !212
  %852 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 13
  call void %851(ptr noundef nonnull %852, i32 noundef 72) #17
  %853 = icmp eq i32 %815, 0
  br i1 %853, label %857, label %854

854:                                              ; preds = %849
  %855 = load ptr, ptr %850, align 8, !tbaa !212
  %856 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 15
  call void %855(ptr noundef nonnull %856, i32 noundef 128) #17
  br label %857

857:                                              ; preds = %854, %849, %846
  %858 = load i32, ptr %797, align 4, !tbaa !234
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %860, label %890

860:                                              ; preds = %857
  %861 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2, i32 13
  %862 = load i32, ptr %861, align 4, !tbaa !5
  %863 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 10
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = icmp eq i32 %862, %864
  %866 = load i32, ptr %505, align 16
  %867 = icmp eq i32 %866, 0
  %868 = select i1 %865, i1 %867, i1 false
  br i1 %868, label %869, label %890

869:                                              ; preds = %860
  %870 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 16, ptr %870, align 4, !tbaa !50
  %871 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %872 = zext i32 %862 to i64
  %873 = mul nuw i64 %872, 4294967297
  store i64 %873, ptr %871, align 8, !tbaa !5
  %874 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 %873, ptr %874, align 8, !tbaa !5
  %875 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %873, ptr %875, align 8, !tbaa !5
  %876 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %873, ptr %876, align 8, !tbaa !5
  %877 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 %873, ptr %877, align 8, !tbaa !5
  %878 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %873, ptr %878, align 8, !tbaa !5
  %879 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %873, ptr %879, align 8, !tbaa !5
  %880 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %873, ptr %880, align 8, !tbaa !5
  %881 = load i32, ptr %65, align 4, !tbaa !153
  %882 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %881)
  store i32 %882, ptr %656, align 16, !tbaa !190
  %883 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %884 = load i32, ptr %883, align 8, !tbaa !45
  %885 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %886 = load i32, ptr %885, align 4, !tbaa !71
  %887 = or i32 %886, %884
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %890

889:                                              ; preds = %869
  store i32 6, ptr %805, align 8, !tbaa !49
  br label %890

890:                                              ; preds = %770, %796, %857, %860, %869, %889
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #17
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #17
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %11) #17
  %891 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %892 = load i32, ptr %891, align 8, !tbaa !49
  %893 = icmp eq i32 %892, 6
  br i1 %893, label %894, label %912

894:                                              ; preds = %890
  %895 = load i32, ptr %641, align 8, !tbaa !39
  %896 = icmp sgt i32 %895, 1
  br i1 %896, label %897, label %900

897:                                              ; preds = %894
  %898 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48
  %899 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  br label %901

900:                                              ; preds = %901, %894
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #17
  br label %3986

901:                                              ; preds = %897, %901
  %902 = phi i64 [ 1, %897 ], [ %908, %901 ]
  %903 = getelementptr inbounds [32 x ptr], ptr %898, i64 0, i64 %902
  %904 = load ptr, ptr %903, align 8, !tbaa !46
  %905 = load i32, ptr %899, align 8, !tbaa !64
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds [2 x i16], ptr %904, i64 %906
  store i32 0, ptr %907, align 4, !tbaa !5
  %908 = add nuw nsw i64 %902, 1
  %909 = load i32, ptr %641, align 8, !tbaa !39
  %910 = sext i32 %909 to i64
  %911 = icmp slt i64 %908, %910
  br i1 %911, label %901, label %900, !llvm.loop !235

912:                                              ; preds = %890
  %913 = and i32 %620, 16
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %921, label %915

915:                                              ; preds = %912
  %916 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 13
  %917 = load i32, ptr %916, align 4, !tbaa !236
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %920, label %919

919:                                              ; preds = %915
  call fastcc void @x264_mb_analyse_inter_p8x8_mixed_ref(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %923

920:                                              ; preds = %915
  call fastcc void @x264_mb_analyse_inter_p8x8(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %923

921:                                              ; preds = %912
  %922 = load i32, ptr %658, align 8, !tbaa !191
  br label %1502

923:                                              ; preds = %919, %920
  %924 = load i32, ptr %658, align 8, !tbaa !191
  store i32 %924, ptr %16, align 4, !tbaa !39
  %925 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 4
  %926 = load i32, ptr %925, align 16, !tbaa !189
  %927 = icmp slt i32 %926, %924
  br i1 %927, label %928, label %1431

928:                                              ; preds = %923
  store i32 %926, ptr %16, align 4, !tbaa !39
  %929 = and i32 %620, 32
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %1431, label %931

931:                                              ; preds = %928
  %932 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %933 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22
  %934 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 11
  %935 = load i32, ptr %16, align 4, !tbaa !39
  br label %936

936:                                              ; preds = %931, %1426
  %937 = phi i32 [ %935, %931 ], [ %1427, %1426 ]
  %938 = phi i64 [ 0, %931 ], [ %1429, %1426 ]
  %939 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 %938, i32 3
  %940 = load i32, ptr %939, align 4, !tbaa !226
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds [32 x [6 x ptr]], ptr %495, i64 0, i64 %941
  store i32 13, ptr %932, align 4, !tbaa !50
  %943 = shl nuw nsw i64 %938, 2
  %944 = getelementptr inbounds ptr, ptr %942, i64 1
  %945 = getelementptr inbounds ptr, ptr %942, i64 2
  %946 = getelementptr inbounds ptr, ptr %942, i64 3
  %947 = getelementptr inbounds ptr, ptr %942, i64 4
  %948 = getelementptr inbounds ptr, ptr %942, i64 5
  %949 = getelementptr inbounds [16 x ptr], ptr %933, i64 0, i64 %941
  %950 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %941
  %951 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %941
  %952 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 %938, i32 13
  br label %976

953:                                              ; preds = %976
  %954 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 0, i32 12
  %955 = load i32, ptr %954, align 8, !tbaa !230
  %956 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 1, i32 12
  %957 = load i32, ptr %956, align 8, !tbaa !230
  %958 = add nsw i32 %957, %955
  %959 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 2, i32 12
  %960 = load i32, ptr %959, align 8, !tbaa !230
  %961 = add nsw i32 %958, %960
  %962 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 3, i32 12
  %963 = load i32, ptr %962, align 8, !tbaa !230
  %964 = add nsw i32 %961, %963
  %965 = load ptr, ptr %632, align 8, !tbaa !46
  %966 = getelementptr inbounds i16, ptr %965, i64 %941
  %967 = load i16, ptr %966, align 2, !tbaa !37
  %968 = zext i16 %967 to i32
  %969 = add nsw i32 %964, %968
  %970 = load i32, ptr %15, align 16, !tbaa !152
  %971 = mul nsw i32 %970, 5
  %972 = add nsw i32 %969, %971
  %973 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 8, i64 %938
  store i32 %972, ptr %973, align 4, !tbaa !39
  %974 = load i32, ptr %934, align 4, !tbaa !237
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %1061, label %1056

976:                                              ; preds = %976, %936
  %977 = phi i64 [ 0, %936 ], [ %1054, %976 ]
  %978 = add nuw nsw i64 %977, %943
  %979 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %978
  %980 = load i8, ptr %979, align 1, !tbaa !5
  %981 = zext i8 %980 to i32
  %982 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %978
  %983 = load i8, ptr %982, align 1, !tbaa !5
  %984 = zext i8 %983 to i32
  %985 = icmp eq i64 %977, 0
  %986 = zext i1 %985 to i32
  %987 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977
  store i32 6, ptr %987, align 16, !tbaa !222
  %988 = load ptr, ptr %624, align 16, !tbaa !219
  %989 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 1
  store ptr %988, ptr %989, align 8, !tbaa !223
  %990 = load i32, ptr %502, align 16, !tbaa !39
  %991 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 9
  store i32 %990, ptr %991, align 8, !tbaa !39
  %992 = load i32, ptr %647, align 4, !tbaa !39
  %993 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 9, i64 1
  store i32 %992, ptr %993, align 4, !tbaa !39
  %994 = load ptr, ptr %649, align 8, !tbaa !46
  %995 = shl nuw nsw i32 %981, 2
  %996 = shl nuw nsw i32 %984, 2
  %997 = shl nuw nsw i32 %984, 6
  %998 = add nuw nsw i32 %997, %995
  %999 = zext i32 %998 to i64
  %1000 = getelementptr inbounds i8, ptr %994, i64 %999
  %1001 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 7
  store ptr %1000, ptr %1001, align 8, !tbaa !46
  %1002 = load ptr, ptr %651, align 8, !tbaa !46
  %1003 = shl nuw nsw i32 %981, 1
  %1004 = shl nuw nsw i32 %984, 1
  %1005 = shl nuw nsw i32 %984, 5
  %1006 = add nuw nsw i32 %1005, %1003
  %1007 = zext i32 %1006 to i64
  %1008 = getelementptr inbounds i8, ptr %1002, i64 %1007
  %1009 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 7, i64 1
  store ptr %1008, ptr %1009, align 16, !tbaa !46
  %1010 = load ptr, ptr %653, align 8, !tbaa !46
  %1011 = getelementptr inbounds i8, ptr %1010, i64 %1007
  %1012 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 7, i64 2
  store ptr %1011, ptr %1012, align 8, !tbaa !46
  %1013 = load ptr, ptr %942, align 8, !tbaa !46
  %1014 = mul nsw i32 %996, %990
  %1015 = add nsw i32 %1014, %995
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i8, ptr %1013, i64 %1016
  %1018 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 5
  store ptr %1017, ptr %1018, align 16, !tbaa !46
  %1019 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 6
  %1020 = load ptr, ptr %944, align 8, !tbaa !46
  %1021 = getelementptr inbounds i8, ptr %1020, i64 %1016
  %1022 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 5, i64 1
  store ptr %1021, ptr %1022, align 8, !tbaa !46
  %1023 = load ptr, ptr %945, align 8, !tbaa !46
  %1024 = getelementptr inbounds i8, ptr %1023, i64 %1016
  %1025 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 5, i64 2
  store ptr %1024, ptr %1025, align 16, !tbaa !46
  %1026 = load ptr, ptr %946, align 8, !tbaa !46
  %1027 = getelementptr inbounds i8, ptr %1026, i64 %1016
  %1028 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 5, i64 3
  store ptr %1027, ptr %1028, align 8, !tbaa !46
  %1029 = load ptr, ptr %947, align 8, !tbaa !46
  %1030 = mul nsw i32 %1004, %992
  %1031 = add nsw i32 %1030, %1003
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds i8, ptr %1029, i64 %1032
  %1034 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 5, i64 4
  store ptr %1033, ptr %1034, align 16, !tbaa !46
  %1035 = load ptr, ptr %948, align 8, !tbaa !46
  %1036 = getelementptr inbounds i8, ptr %1035, i64 %1032
  %1037 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 5, i64 5
  store ptr %1036, ptr %1037, align 8, !tbaa !46
  %1038 = load ptr, ptr %949, align 8, !tbaa !46
  %1039 = getelementptr inbounds i16, ptr %1038, i64 %1016
  %1040 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 8
  store ptr %1039, ptr %1040, align 16, !tbaa !225
  %1041 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 4
  %1042 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 3
  store i32 %940, ptr %1042, align 4, !tbaa !226
  %1043 = load ptr, ptr %950, align 8, !tbaa !46
  %1044 = getelementptr inbounds i8, ptr %1043, i64 %1016
  store ptr %1044, ptr %1019, align 16, !tbaa !227
  store ptr %951, ptr %1041, align 8, !tbaa !228
  %1045 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 10
  %1046 = trunc i64 %978 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1046, i32 noundef 1, ptr noundef nonnull %1045) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %987, ptr noundef nonnull %952, i32 noundef %986, ptr noundef null) #17
  %1047 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 %977, i32 13
  %1048 = load i32, ptr %1047, align 4, !tbaa !5
  %1049 = add nuw nsw i32 %981, 12
  %1050 = shl nuw nsw i32 %984, 3
  %1051 = add nuw nsw i32 %1049, %1050
  %1052 = zext i32 %1051 to i64
  %1053 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1052
  store i32 %1048, ptr %1053, align 4, !tbaa !5
  %1054 = add nuw nsw i64 %977, 1
  %1055 = icmp eq i64 %1054, 4
  br i1 %1055, label %953, label %976, !llvm.loop !238

1056:                                             ; preds = %953
  %1057 = trunc i64 %938 to i32
  %1058 = call fastcc i32 @x264_mb_analyse_inter_p4x4_chroma(ptr noundef nonnull %0, ptr noundef nonnull %15, ptr noundef nonnull %942, i32 noundef %1057, i32 noundef 6)
  %1059 = load i32, ptr %973, align 4, !tbaa !39
  %1060 = add nsw i32 %1059, %1058
  store i32 %1060, ptr %973, align 4, !tbaa !39
  br label %1061

1061:                                             ; preds = %953, %1056
  %1062 = phi i32 [ %972, %953 ], [ %1060, %1056 ]
  %1063 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 %938, i32 12
  %1064 = load i32, ptr %1063, align 8, !tbaa !230
  %1065 = icmp slt i32 %1062, %1064
  br i1 %1065, label %1066, label %1426

1066:                                             ; preds = %1061
  %1067 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %938
  store i8 0, ptr %1067, align 1, !tbaa !5
  %1068 = load i32, ptr %939, align 4, !tbaa !226
  %1069 = sext i32 %1068 to i64
  %1070 = getelementptr inbounds [32 x [6 x ptr]], ptr %495, i64 0, i64 %1069
  store i32 13, ptr %932, align 4, !tbaa !50
  %1071 = getelementptr inbounds ptr, ptr %1070, i64 1
  %1072 = getelementptr inbounds ptr, ptr %1070, i64 2
  %1073 = getelementptr inbounds ptr, ptr %1070, i64 3
  %1074 = getelementptr inbounds ptr, ptr %1070, i64 4
  %1075 = getelementptr inbounds ptr, ptr %1070, i64 5
  %1076 = getelementptr inbounds [16 x ptr], ptr %933, i64 0, i64 %1069
  %1077 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %1069
  %1078 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %1069
  %1079 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %938, i64 0, i32 13
  %1080 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %943
  %1081 = load i8, ptr %1080, align 4, !tbaa !5
  %1082 = zext i8 %1081 to i32
  %1083 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %943
  %1084 = load i8, ptr %1083, align 4, !tbaa !5
  %1085 = zext i8 %1084 to i32
  %1086 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0
  store i32 4, ptr %1086, align 16, !tbaa !222
  %1087 = load ptr, ptr %624, align 16, !tbaa !219
  %1088 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 1
  store ptr %1087, ptr %1088, align 8, !tbaa !223
  %1089 = load i32, ptr %502, align 16, !tbaa !39
  %1090 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 9
  store i32 %1089, ptr %1090, align 8, !tbaa !39
  %1091 = load i32, ptr %647, align 4, !tbaa !39
  %1092 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 9, i64 1
  store i32 %1091, ptr %1092, align 4, !tbaa !39
  %1093 = load ptr, ptr %649, align 8, !tbaa !46
  %1094 = shl nuw nsw i32 %1082, 2
  %1095 = shl nuw nsw i32 %1085, 2
  %1096 = shl nuw nsw i32 %1085, 6
  %1097 = add nuw nsw i32 %1096, %1094
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds i8, ptr %1093, i64 %1098
  %1100 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 7
  store ptr %1099, ptr %1100, align 8, !tbaa !46
  %1101 = load ptr, ptr %651, align 8, !tbaa !46
  %1102 = shl nuw nsw i32 %1082, 1
  %1103 = shl nuw nsw i32 %1085, 1
  %1104 = shl nuw nsw i32 %1085, 5
  %1105 = add nuw nsw i32 %1104, %1102
  %1106 = zext i32 %1105 to i64
  %1107 = getelementptr inbounds i8, ptr %1101, i64 %1106
  %1108 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 7, i64 1
  store ptr %1107, ptr %1108, align 16, !tbaa !46
  %1109 = load ptr, ptr %653, align 8, !tbaa !46
  %1110 = getelementptr inbounds i8, ptr %1109, i64 %1106
  %1111 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 7, i64 2
  store ptr %1110, ptr %1111, align 8, !tbaa !46
  %1112 = load ptr, ptr %1070, align 8, !tbaa !46
  %1113 = mul nsw i32 %1089, %1095
  %1114 = add nsw i32 %1113, %1094
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds i8, ptr %1112, i64 %1115
  %1117 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 5
  store ptr %1116, ptr %1117, align 16, !tbaa !46
  %1118 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 6
  %1119 = load ptr, ptr %1071, align 8, !tbaa !46
  %1120 = getelementptr inbounds i8, ptr %1119, i64 %1115
  %1121 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 5, i64 1
  store ptr %1120, ptr %1121, align 8, !tbaa !46
  %1122 = load ptr, ptr %1072, align 8, !tbaa !46
  %1123 = getelementptr inbounds i8, ptr %1122, i64 %1115
  %1124 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 5, i64 2
  store ptr %1123, ptr %1124, align 16, !tbaa !46
  %1125 = load ptr, ptr %1073, align 8, !tbaa !46
  %1126 = getelementptr inbounds i8, ptr %1125, i64 %1115
  %1127 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 5, i64 3
  store ptr %1126, ptr %1127, align 8, !tbaa !46
  %1128 = load ptr, ptr %1074, align 8, !tbaa !46
  %1129 = mul nsw i32 %1091, %1103
  %1130 = add nsw i32 %1129, %1102
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds i8, ptr %1128, i64 %1131
  %1133 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 5, i64 4
  store ptr %1132, ptr %1133, align 16, !tbaa !46
  %1134 = load ptr, ptr %1075, align 8, !tbaa !46
  %1135 = getelementptr inbounds i8, ptr %1134, i64 %1131
  %1136 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 5, i64 5
  store ptr %1135, ptr %1136, align 8, !tbaa !46
  %1137 = load ptr, ptr %1076, align 8, !tbaa !46
  %1138 = getelementptr inbounds i16, ptr %1137, i64 %1115
  %1139 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 8
  store ptr %1138, ptr %1139, align 16, !tbaa !225
  %1140 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 4
  %1141 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 3
  store i32 %1068, ptr %1141, align 4, !tbaa !226
  %1142 = load ptr, ptr %1077, align 8, !tbaa !46
  %1143 = getelementptr inbounds i8, ptr %1142, i64 %1115
  store ptr %1143, ptr %1118, align 16, !tbaa !227
  store ptr %1078, ptr %1140, align 8, !tbaa !228
  %1144 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 10
  %1145 = trunc i64 %943 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1145, i32 noundef 2, ptr noundef nonnull %1144) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %1086, ptr noundef nonnull %1079, i32 noundef 1, ptr noundef null) #17
  %1146 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 13
  %1147 = load i32, ptr %1146, align 4, !tbaa !5
  %1148 = add nuw nsw i32 %1082, 12
  %1149 = shl nuw nsw i32 %1085, 3
  %1150 = add nuw nsw i32 %1148, %1149
  %1151 = zext i32 %1150 to i64
  %1152 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1151
  %1153 = zext i32 %1147 to i64
  %1154 = mul nuw i64 %1153, 4294967297
  store i64 %1154, ptr %1152, align 8, !tbaa !5
  %1155 = or i64 %943, 2
  %1156 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %1155
  %1157 = load i8, ptr %1156, align 2, !tbaa !5
  %1158 = zext i8 %1157 to i32
  %1159 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %1155
  %1160 = load i8, ptr %1159, align 2, !tbaa !5
  %1161 = zext i8 %1160 to i32
  %1162 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1
  store i32 4, ptr %1162, align 16, !tbaa !222
  %1163 = load ptr, ptr %624, align 16, !tbaa !219
  %1164 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 1
  store ptr %1163, ptr %1164, align 8, !tbaa !223
  %1165 = load i32, ptr %502, align 16, !tbaa !39
  %1166 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 9
  store i32 %1165, ptr %1166, align 8, !tbaa !39
  %1167 = load i32, ptr %647, align 4, !tbaa !39
  %1168 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 9, i64 1
  store i32 %1167, ptr %1168, align 4, !tbaa !39
  %1169 = load ptr, ptr %649, align 8, !tbaa !46
  %1170 = shl nuw nsw i32 %1158, 2
  %1171 = shl nuw nsw i32 %1161, 2
  %1172 = shl nuw nsw i32 %1161, 6
  %1173 = add nuw nsw i32 %1172, %1170
  %1174 = zext i32 %1173 to i64
  %1175 = getelementptr inbounds i8, ptr %1169, i64 %1174
  %1176 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 7
  store ptr %1175, ptr %1176, align 8, !tbaa !46
  %1177 = load ptr, ptr %651, align 8, !tbaa !46
  %1178 = shl nuw nsw i32 %1158, 1
  %1179 = shl nuw nsw i32 %1161, 1
  %1180 = shl nuw nsw i32 %1161, 5
  %1181 = add nuw nsw i32 %1180, %1178
  %1182 = zext i32 %1181 to i64
  %1183 = getelementptr inbounds i8, ptr %1177, i64 %1182
  %1184 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 7, i64 1
  store ptr %1183, ptr %1184, align 16, !tbaa !46
  %1185 = load ptr, ptr %653, align 8, !tbaa !46
  %1186 = getelementptr inbounds i8, ptr %1185, i64 %1182
  %1187 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 7, i64 2
  store ptr %1186, ptr %1187, align 8, !tbaa !46
  %1188 = load ptr, ptr %1070, align 8, !tbaa !46
  %1189 = mul nsw i32 %1171, %1165
  %1190 = add nsw i32 %1189, %1170
  %1191 = sext i32 %1190 to i64
  %1192 = getelementptr inbounds i8, ptr %1188, i64 %1191
  %1193 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 5
  store ptr %1192, ptr %1193, align 16, !tbaa !46
  %1194 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 6
  %1195 = load ptr, ptr %1071, align 8, !tbaa !46
  %1196 = getelementptr inbounds i8, ptr %1195, i64 %1191
  %1197 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 5, i64 1
  store ptr %1196, ptr %1197, align 8, !tbaa !46
  %1198 = load ptr, ptr %1072, align 8, !tbaa !46
  %1199 = getelementptr inbounds i8, ptr %1198, i64 %1191
  %1200 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 5, i64 2
  store ptr %1199, ptr %1200, align 16, !tbaa !46
  %1201 = load ptr, ptr %1073, align 8, !tbaa !46
  %1202 = getelementptr inbounds i8, ptr %1201, i64 %1191
  %1203 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 5, i64 3
  store ptr %1202, ptr %1203, align 8, !tbaa !46
  %1204 = load ptr, ptr %1074, align 8, !tbaa !46
  %1205 = mul nsw i32 %1179, %1167
  %1206 = add nsw i32 %1205, %1178
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds i8, ptr %1204, i64 %1207
  %1209 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 5, i64 4
  store ptr %1208, ptr %1209, align 16, !tbaa !46
  %1210 = load ptr, ptr %1075, align 8, !tbaa !46
  %1211 = getelementptr inbounds i8, ptr %1210, i64 %1207
  %1212 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 5, i64 5
  store ptr %1211, ptr %1212, align 8, !tbaa !46
  %1213 = load ptr, ptr %1076, align 8, !tbaa !46
  %1214 = getelementptr inbounds i16, ptr %1213, i64 %1191
  %1215 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 8
  store ptr %1214, ptr %1215, align 16, !tbaa !225
  %1216 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 4
  %1217 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 3
  store i32 %1068, ptr %1217, align 4, !tbaa !226
  %1218 = load ptr, ptr %1077, align 8, !tbaa !46
  %1219 = getelementptr inbounds i8, ptr %1218, i64 %1191
  store ptr %1219, ptr %1194, align 16, !tbaa !227
  store ptr %1078, ptr %1216, align 8, !tbaa !228
  %1220 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 10
  %1221 = trunc i64 %1155 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1221, i32 noundef 2, ptr noundef nonnull %1220) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %1162, ptr noundef nonnull %1079, i32 noundef 0, ptr noundef null) #17
  %1222 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 13
  %1223 = load i32, ptr %1222, align 4, !tbaa !5
  %1224 = add nuw nsw i32 %1158, 12
  %1225 = shl nuw nsw i32 %1161, 3
  %1226 = add nuw nsw i32 %1224, %1225
  %1227 = zext i32 %1226 to i64
  %1228 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1227
  %1229 = zext i32 %1223 to i64
  %1230 = mul nuw i64 %1229, 4294967297
  store i64 %1230, ptr %1228, align 8, !tbaa !5
  %1231 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 0, i32 12
  %1232 = load i32, ptr %1231, align 8, !tbaa !230
  %1233 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %938, i64 1, i32 12
  %1234 = load i32, ptr %1233, align 8, !tbaa !230
  %1235 = add nsw i32 %1234, %1232
  %1236 = load ptr, ptr %632, align 8, !tbaa !46
  %1237 = getelementptr inbounds i16, ptr %1236, i64 %1069
  %1238 = load i16, ptr %1237, align 2, !tbaa !37
  %1239 = zext i16 %1238 to i32
  %1240 = add nsw i32 %1235, %1239
  %1241 = load i32, ptr %15, align 16, !tbaa !152
  %1242 = mul nsw i32 %1241, 3
  %1243 = add nsw i32 %1240, %1242
  %1244 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 10, i64 %938
  store i32 %1243, ptr %1244, align 4, !tbaa !39
  %1245 = load i32, ptr %934, align 4, !tbaa !237
  %1246 = icmp eq i32 %1245, 0
  br i1 %1246, label %1252, label %1247

1247:                                             ; preds = %1066
  %1248 = trunc i64 %938 to i32
  %1249 = call fastcc i32 @x264_mb_analyse_inter_p4x4_chroma(ptr noundef nonnull %0, ptr noundef nonnull %15, ptr noundef nonnull %1070, i32 noundef %1248, i32 noundef 4)
  %1250 = load i32, ptr %1244, align 4, !tbaa !39
  %1251 = add nsw i32 %1250, %1249
  store i32 %1251, ptr %1244, align 4, !tbaa !39
  br label %1252

1252:                                             ; preds = %1066, %1247
  %1253 = phi i32 [ %1243, %1066 ], [ %1251, %1247 ]
  %1254 = icmp slt i32 %1253, %1062
  br i1 %1254, label %1255, label %1256

1255:                                             ; preds = %1252
  store i8 1, ptr %1067, align 1, !tbaa !5
  br label %1256

1256:                                             ; preds = %1255, %1252
  %1257 = phi i32 [ %1253, %1255 ], [ %1062, %1252 ]
  %1258 = load i32, ptr %939, align 4, !tbaa !226
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds [32 x [6 x ptr]], ptr %495, i64 0, i64 %1259
  store i32 13, ptr %932, align 4, !tbaa !50
  %1261 = getelementptr inbounds ptr, ptr %1260, i64 1
  %1262 = getelementptr inbounds ptr, ptr %1260, i64 2
  %1263 = getelementptr inbounds ptr, ptr %1260, i64 3
  %1264 = getelementptr inbounds ptr, ptr %1260, i64 4
  %1265 = getelementptr inbounds ptr, ptr %1260, i64 5
  %1266 = getelementptr inbounds [16 x ptr], ptr %933, i64 0, i64 %1259
  %1267 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %1259
  %1268 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %1259
  %1269 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0
  store i32 5, ptr %1269, align 16, !tbaa !222
  %1270 = load ptr, ptr %624, align 16, !tbaa !219
  %1271 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 1
  store ptr %1270, ptr %1271, align 8, !tbaa !223
  %1272 = load i32, ptr %502, align 16, !tbaa !39
  %1273 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 9
  store i32 %1272, ptr %1273, align 8, !tbaa !39
  %1274 = load i32, ptr %647, align 4, !tbaa !39
  %1275 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 9, i64 1
  store i32 %1274, ptr %1275, align 4, !tbaa !39
  %1276 = load ptr, ptr %649, align 8, !tbaa !46
  %1277 = getelementptr inbounds i8, ptr %1276, i64 %1098
  %1278 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 7
  store ptr %1277, ptr %1278, align 8, !tbaa !46
  %1279 = load ptr, ptr %651, align 8, !tbaa !46
  %1280 = getelementptr inbounds i8, ptr %1279, i64 %1106
  %1281 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 7, i64 1
  store ptr %1280, ptr %1281, align 16, !tbaa !46
  %1282 = load ptr, ptr %653, align 8, !tbaa !46
  %1283 = getelementptr inbounds i8, ptr %1282, i64 %1106
  %1284 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 7, i64 2
  store ptr %1283, ptr %1284, align 8, !tbaa !46
  %1285 = load ptr, ptr %1260, align 8, !tbaa !46
  %1286 = mul nsw i32 %1272, %1095
  %1287 = add nsw i32 %1286, %1094
  %1288 = sext i32 %1287 to i64
  %1289 = getelementptr inbounds i8, ptr %1285, i64 %1288
  %1290 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 5
  store ptr %1289, ptr %1290, align 16, !tbaa !46
  %1291 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 6
  %1292 = load ptr, ptr %1261, align 8, !tbaa !46
  %1293 = getelementptr inbounds i8, ptr %1292, i64 %1288
  %1294 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 5, i64 1
  store ptr %1293, ptr %1294, align 8, !tbaa !46
  %1295 = load ptr, ptr %1262, align 8, !tbaa !46
  %1296 = getelementptr inbounds i8, ptr %1295, i64 %1288
  %1297 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 5, i64 2
  store ptr %1296, ptr %1297, align 16, !tbaa !46
  %1298 = load ptr, ptr %1263, align 8, !tbaa !46
  %1299 = getelementptr inbounds i8, ptr %1298, i64 %1288
  %1300 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 5, i64 3
  store ptr %1299, ptr %1300, align 8, !tbaa !46
  %1301 = load ptr, ptr %1264, align 8, !tbaa !46
  %1302 = mul nsw i32 %1274, %1103
  %1303 = add nsw i32 %1302, %1102
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds i8, ptr %1301, i64 %1304
  %1306 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 5, i64 4
  store ptr %1305, ptr %1306, align 16, !tbaa !46
  %1307 = load ptr, ptr %1265, align 8, !tbaa !46
  %1308 = getelementptr inbounds i8, ptr %1307, i64 %1304
  %1309 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 5, i64 5
  store ptr %1308, ptr %1309, align 8, !tbaa !46
  %1310 = load ptr, ptr %1266, align 8, !tbaa !46
  %1311 = getelementptr inbounds i16, ptr %1310, i64 %1288
  %1312 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 8
  store ptr %1311, ptr %1312, align 16, !tbaa !225
  %1313 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 4
  %1314 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 3
  store i32 %1258, ptr %1314, align 4, !tbaa !226
  %1315 = load ptr, ptr %1267, align 8, !tbaa !46
  %1316 = getelementptr inbounds i8, ptr %1315, i64 %1288
  store ptr %1316, ptr %1291, align 16, !tbaa !227
  store ptr %1268, ptr %1313, align 8, !tbaa !228
  %1317 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 10
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1145, i32 noundef 1, ptr noundef nonnull %1317) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %1269, ptr noundef nonnull %1079, i32 noundef 1, ptr noundef null) #17
  %1318 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 13
  %1319 = load i32, ptr %1318, align 4, !tbaa !5
  store i32 %1319, ptr %1152, align 4, !tbaa !5
  %1320 = getelementptr inbounds i8, ptr %1152, i64 32
  store i32 %1319, ptr %1320, align 4, !tbaa !5
  %1321 = or i64 %943, 1
  %1322 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %1321
  %1323 = load i8, ptr %1322, align 1, !tbaa !5
  %1324 = zext i8 %1323 to i32
  %1325 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %1321
  %1326 = load i8, ptr %1325, align 1, !tbaa !5
  %1327 = zext i8 %1326 to i32
  %1328 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1
  store i32 5, ptr %1328, align 16, !tbaa !222
  %1329 = load ptr, ptr %624, align 16, !tbaa !219
  %1330 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 1
  store ptr %1329, ptr %1330, align 8, !tbaa !223
  %1331 = load i32, ptr %502, align 16, !tbaa !39
  %1332 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 9
  store i32 %1331, ptr %1332, align 8, !tbaa !39
  %1333 = load i32, ptr %647, align 4, !tbaa !39
  %1334 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 9, i64 1
  store i32 %1333, ptr %1334, align 4, !tbaa !39
  %1335 = load ptr, ptr %649, align 8, !tbaa !46
  %1336 = shl nuw nsw i32 %1324, 2
  %1337 = shl nuw nsw i32 %1327, 2
  %1338 = shl nuw nsw i32 %1327, 6
  %1339 = add nuw nsw i32 %1338, %1336
  %1340 = zext i32 %1339 to i64
  %1341 = getelementptr inbounds i8, ptr %1335, i64 %1340
  %1342 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 7
  store ptr %1341, ptr %1342, align 8, !tbaa !46
  %1343 = load ptr, ptr %651, align 8, !tbaa !46
  %1344 = shl nuw nsw i32 %1324, 1
  %1345 = shl nuw nsw i32 %1327, 1
  %1346 = shl nuw nsw i32 %1327, 5
  %1347 = add nuw nsw i32 %1346, %1344
  %1348 = zext i32 %1347 to i64
  %1349 = getelementptr inbounds i8, ptr %1343, i64 %1348
  %1350 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 7, i64 1
  store ptr %1349, ptr %1350, align 16, !tbaa !46
  %1351 = load ptr, ptr %653, align 8, !tbaa !46
  %1352 = getelementptr inbounds i8, ptr %1351, i64 %1348
  %1353 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 7, i64 2
  store ptr %1352, ptr %1353, align 8, !tbaa !46
  %1354 = load ptr, ptr %1260, align 8, !tbaa !46
  %1355 = mul nsw i32 %1337, %1331
  %1356 = add nsw i32 %1355, %1336
  %1357 = sext i32 %1356 to i64
  %1358 = getelementptr inbounds i8, ptr %1354, i64 %1357
  %1359 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 5
  store ptr %1358, ptr %1359, align 16, !tbaa !46
  %1360 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 6
  %1361 = load ptr, ptr %1261, align 8, !tbaa !46
  %1362 = getelementptr inbounds i8, ptr %1361, i64 %1357
  %1363 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 5, i64 1
  store ptr %1362, ptr %1363, align 8, !tbaa !46
  %1364 = load ptr, ptr %1262, align 8, !tbaa !46
  %1365 = getelementptr inbounds i8, ptr %1364, i64 %1357
  %1366 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 5, i64 2
  store ptr %1365, ptr %1366, align 16, !tbaa !46
  %1367 = load ptr, ptr %1263, align 8, !tbaa !46
  %1368 = getelementptr inbounds i8, ptr %1367, i64 %1357
  %1369 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 5, i64 3
  store ptr %1368, ptr %1369, align 8, !tbaa !46
  %1370 = load ptr, ptr %1264, align 8, !tbaa !46
  %1371 = mul nsw i32 %1345, %1333
  %1372 = add nsw i32 %1371, %1344
  %1373 = sext i32 %1372 to i64
  %1374 = getelementptr inbounds i8, ptr %1370, i64 %1373
  %1375 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 5, i64 4
  store ptr %1374, ptr %1375, align 16, !tbaa !46
  %1376 = load ptr, ptr %1265, align 8, !tbaa !46
  %1377 = getelementptr inbounds i8, ptr %1376, i64 %1373
  %1378 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 5, i64 5
  store ptr %1377, ptr %1378, align 8, !tbaa !46
  %1379 = load ptr, ptr %1266, align 8, !tbaa !46
  %1380 = getelementptr inbounds i16, ptr %1379, i64 %1357
  %1381 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 8
  store ptr %1380, ptr %1381, align 16, !tbaa !225
  %1382 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 4
  %1383 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 3
  store i32 %1258, ptr %1383, align 4, !tbaa !226
  %1384 = load ptr, ptr %1267, align 8, !tbaa !46
  %1385 = getelementptr inbounds i8, ptr %1384, i64 %1357
  store ptr %1385, ptr %1360, align 16, !tbaa !227
  store ptr %1268, ptr %1382, align 8, !tbaa !228
  %1386 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 10
  %1387 = trunc i64 %1321 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %1387, i32 noundef 1, ptr noundef nonnull %1386) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %1328, ptr noundef nonnull %1079, i32 noundef 0, ptr noundef null) #17
  %1388 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 13
  %1389 = load i32, ptr %1388, align 4, !tbaa !5
  %1390 = add nuw nsw i32 %1324, 12
  %1391 = shl nuw nsw i32 %1327, 3
  %1392 = add nuw nsw i32 %1390, %1391
  %1393 = zext i32 %1392 to i64
  %1394 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1393
  store i32 %1389, ptr %1394, align 4, !tbaa !5
  %1395 = getelementptr inbounds i8, ptr %1394, i64 32
  store i32 %1389, ptr %1395, align 4, !tbaa !5
  %1396 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 0, i32 12
  %1397 = load i32, ptr %1396, align 8, !tbaa !230
  %1398 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %938, i64 1, i32 12
  %1399 = load i32, ptr %1398, align 8, !tbaa !230
  %1400 = add nsw i32 %1399, %1397
  %1401 = load ptr, ptr %632, align 8, !tbaa !46
  %1402 = getelementptr inbounds i16, ptr %1401, i64 %1259
  %1403 = load i16, ptr %1402, align 2, !tbaa !37
  %1404 = zext i16 %1403 to i32
  %1405 = add nsw i32 %1400, %1404
  %1406 = load i32, ptr %15, align 16, !tbaa !152
  %1407 = mul nsw i32 %1406, 3
  %1408 = add nsw i32 %1405, %1407
  %1409 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 12, i64 %938
  store i32 %1408, ptr %1409, align 4, !tbaa !39
  %1410 = load i32, ptr %934, align 4, !tbaa !237
  %1411 = icmp eq i32 %1410, 0
  br i1 %1411, label %1417, label %1412

1412:                                             ; preds = %1256
  %1413 = trunc i64 %938 to i32
  %1414 = call fastcc i32 @x264_mb_analyse_inter_p4x4_chroma(ptr noundef nonnull %0, ptr noundef nonnull %15, ptr noundef nonnull %1260, i32 noundef %1413, i32 noundef 5)
  %1415 = load i32, ptr %1409, align 4, !tbaa !39
  %1416 = add nsw i32 %1415, %1414
  store i32 %1416, ptr %1409, align 4, !tbaa !39
  br label %1417

1417:                                             ; preds = %1256, %1412
  %1418 = phi i32 [ %1408, %1256 ], [ %1416, %1412 ]
  %1419 = icmp slt i32 %1418, %1257
  br i1 %1419, label %1420, label %1421

1420:                                             ; preds = %1417
  store i8 2, ptr %1067, align 1, !tbaa !5
  br label %1421

1421:                                             ; preds = %1420, %1417
  %1422 = phi i32 [ %1418, %1420 ], [ %1257, %1417 ]
  %1423 = load i32, ptr %1063, align 8, !tbaa !230
  %1424 = sub i32 %1422, %1423
  %1425 = add nsw i32 %1424, %937
  br label %1426

1426:                                             ; preds = %1421, %1061
  %1427 = phi i32 [ %1425, %1421 ], [ %937, %1061 ]
  %1428 = trunc i64 %938 to i32
  call fastcc void @x264_mb_cache_mv_p8x8(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %1428)
  %1429 = add nuw nsw i64 %938, 1
  %1430 = icmp eq i64 %1429, 4
  br i1 %1430, label %1438, label %936, !llvm.loop !239

1431:                                             ; preds = %928, %923
  %1432 = phi i32 [ %924, %923 ], [ %926, %928 ]
  %1433 = phi i32 [ 16, %923 ], [ 13, %928 ]
  %1434 = phi i32 [ 4, %923 ], [ 5, %928 ]
  %1435 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 11
  %1436 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 11
  %1437 = load i32, ptr %1436, align 4, !tbaa !231
  br label %1443

1438:                                             ; preds = %1426
  store i32 %1427, ptr %16, align 4, !tbaa !39
  store i32 %1427, ptr %925, align 16, !tbaa !189
  %1439 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 11
  %1440 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 11
  %1441 = load i32, ptr %1440, align 4, !tbaa !231
  %1442 = load i32, ptr %658, align 8, !tbaa !191
  br label %1443

1443:                                             ; preds = %1438, %1431
  %1444 = phi i32 [ %1432, %1431 ], [ %1427, %1438 ]
  %1445 = phi i32 [ %924, %1431 ], [ %1442, %1438 ]
  %1446 = phi i32 [ %926, %1431 ], [ %1427, %1438 ]
  %1447 = phi i32 [ %1437, %1431 ], [ %1441, %1438 ]
  %1448 = phi ptr [ %1435, %1431 ], [ %1439, %1438 ]
  %1449 = phi i32 [ %1434, %1431 ], [ 5, %1438 ]
  %1450 = phi i32 [ %1433, %1431 ], [ 13, %1438 ]
  %1451 = load i32, ptr %1448, align 4, !tbaa !231
  %1452 = add nsw i32 %1451, %1447
  %1453 = add nsw i32 %1452, %1445
  %1454 = icmp slt i32 %1446, %1453
  br i1 %1454, label %1455, label %1502

1455:                                             ; preds = %1443
  %1456 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 2
  %1457 = load i32, ptr %1456, align 16, !tbaa !224
  %1458 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 11
  %1459 = load i32, ptr %1458, align 4, !tbaa !231
  %1460 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 2
  %1461 = load i32, ptr %1460, align 16, !tbaa !224
  %1462 = add i32 %1447, 1
  %1463 = add i32 %1462, %1457
  %1464 = add i32 %1463, %1459
  %1465 = add i32 %1464, %1461
  %1466 = ashr i32 %1465, 1
  %1467 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 0, i64 2
  %1468 = load i32, ptr %1467, align 4, !tbaa !39
  %1469 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 0, i64 3
  %1470 = load i32, ptr %1469, align 8, !tbaa !39
  %1471 = add nsw i32 %1470, %1468
  %1472 = add nsw i32 %1471, %1466
  %1473 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 29, i64 1
  store i32 %1472, ptr %1473, align 16, !tbaa !39
  call fastcc void @x264_mb_analyse_inter_p16x8(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %1444)
  %1474 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 14
  %1475 = load i32, ptr %1474, align 16, !tbaa !188
  %1476 = icmp slt i32 %1475, %1444
  br i1 %1476, label %1477, label %1478

1477:                                             ; preds = %1455
  store i32 %1475, ptr %16, align 4, !tbaa !39
  br label %1478

1478:                                             ; preds = %1477, %1455
  %1479 = phi i32 [ %1475, %1477 ], [ %1444, %1455 ]
  %1480 = phi i32 [ 14, %1477 ], [ %1450, %1455 ]
  %1481 = phi i32 [ 4, %1477 ], [ %1449, %1455 ]
  %1482 = load i32, ptr %1448, align 4, !tbaa !231
  %1483 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 2
  %1484 = load i32, ptr %1483, align 16, !tbaa !224
  %1485 = load i32, ptr %1458, align 4, !tbaa !231
  %1486 = load i32, ptr %1460, align 16, !tbaa !224
  %1487 = add i32 %1482, 1
  %1488 = add i32 %1487, %1484
  %1489 = add i32 %1488, %1485
  %1490 = add i32 %1489, %1486
  %1491 = ashr i32 %1490, 1
  %1492 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 0, i64 1
  %1493 = load i32, ptr %1492, align 16, !tbaa !39
  %1494 = load i32, ptr %1469, align 8, !tbaa !39
  %1495 = add nsw i32 %1494, %1493
  %1496 = add nsw i32 %1495, %1491
  %1497 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 30, i64 1
  store i32 %1496, ptr %1497, align 8, !tbaa !39
  call fastcc void @x264_mb_analyse_inter_p8x16(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %1479)
  %1498 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 17
  %1499 = load i32, ptr %1498, align 16, !tbaa !187
  %1500 = icmp slt i32 %1499, %1479
  br i1 %1500, label %1501, label %1502

1501:                                             ; preds = %1478
  br label %1502

1502:                                             ; preds = %921, %1478, %1501, %1443
  %1503 = phi i32 [ %1444, %1443 ], [ %1499, %1501 ], [ %1479, %1478 ], [ %922, %921 ]
  %1504 = phi i32 [ %1450, %1443 ], [ 15, %1501 ], [ %1480, %1478 ], [ 16, %921 ]
  %1505 = phi i32 [ %1449, %1443 ], [ 4, %1501 ], [ %1481, %1478 ], [ 4, %921 ]
  %1506 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 %1504, ptr %1506, align 4, !tbaa !50
  %1507 = load i32, ptr %51, align 8, !tbaa !145
  %1508 = icmp eq i32 %1507, 0
  br i1 %1508, label %1509, label %1709

1509:                                             ; preds = %1502
  %1510 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  %1511 = load i32, ptr %1510, align 8, !tbaa !201
  %1512 = icmp eq i32 %1511, 0
  br i1 %1512, label %1709, label %1513

1513:                                             ; preds = %1509
  switch i32 %1504, label %1709 [
    i32 16, label %1514
    i32 14, label %1516
    i32 15, label %1524
    i32 13, label %1532
  ]

1514:                                             ; preds = %1513
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %657) #17
  %1515 = load i32, ptr %658, align 8, !tbaa !191
  store i32 %1515, ptr %16, align 4, !tbaa !39
  br label %1709

1516:                                             ; preds = %1513
  %1517 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1517) #17
  %1518 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1518) #17
  %1519 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 0, i32 12
  %1520 = load i32, ptr %1519, align 8, !tbaa !230
  %1521 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1, i32 12
  %1522 = load i32, ptr %1521, align 8, !tbaa !230
  %1523 = add nsw i32 %1522, %1520
  store i32 %1523, ptr %16, align 4, !tbaa !39
  br label %1709

1524:                                             ; preds = %1513
  %1525 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1525) #17
  %1526 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1526) #17
  %1527 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 0, i32 12
  %1528 = load i32, ptr %1527, align 8, !tbaa !230
  %1529 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1, i32 12
  %1530 = load i32, ptr %1529, align 8, !tbaa !230
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %16, align 4, !tbaa !39
  br label %1709

1532:                                             ; preds = %1513
  store i32 0, ptr %16, align 4, !tbaa !39
  %1533 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %1534 = load i8, ptr %1533, align 1, !tbaa !5
  switch i8 %1534, label %1571 [
    i8 3, label %1535
    i8 1, label %1539
    i8 2, label %1547
    i8 0, label %1555
  ]

1535:                                             ; preds = %1532
  %1536 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1536) #17
  %1537 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0, i32 12
  %1538 = load i32, ptr %1537, align 8, !tbaa !230
  br label %1572

1539:                                             ; preds = %1532
  %1540 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1540) #17
  %1541 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 0, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1541) #17
  %1542 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 0, i64 0, i32 12
  %1543 = load i32, ptr %1542, align 8, !tbaa !230
  %1544 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 0, i64 1, i32 12
  %1545 = load i32, ptr %1544, align 8, !tbaa !230
  %1546 = add nsw i32 %1545, %1543
  br label %1572

1547:                                             ; preds = %1532
  %1548 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1548) #17
  %1549 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 0, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1549) #17
  %1550 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 0, i64 0, i32 12
  %1551 = load i32, ptr %1550, align 8, !tbaa !230
  %1552 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 0, i64 1, i32 12
  %1553 = load i32, ptr %1552, align 8, !tbaa !230
  %1554 = add nsw i32 %1553, %1551
  br label %1572

1555:                                             ; preds = %1532
  %1556 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1556) #17
  %1557 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1557) #17
  %1558 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1558) #17
  %1559 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1559) #17
  %1560 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0, i64 0, i32 12
  %1561 = load i32, ptr %1560, align 8, !tbaa !230
  %1562 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0, i64 1, i32 12
  %1563 = load i32, ptr %1562, align 8, !tbaa !230
  %1564 = add nsw i32 %1563, %1561
  %1565 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0, i64 2, i32 12
  %1566 = load i32, ptr %1565, align 8, !tbaa !230
  %1567 = add nsw i32 %1564, %1566
  %1568 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 0, i64 3, i32 12
  %1569 = load i32, ptr %1568, align 8, !tbaa !230
  %1570 = add nsw i32 %1567, %1569
  br label %1572

1571:                                             ; preds = %1532
  call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull @.str) #17
  br label %1572

1572:                                             ; preds = %1535, %1539, %1547, %1555, %1571
  %1573 = phi i32 [ %1538, %1535 ], [ %1546, %1539 ], [ %1554, %1547 ], [ %1570, %1555 ], [ 0, %1571 ]
  %1574 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %1575 = load i8, ptr %1574, align 1, !tbaa !5
  switch i8 %1575, label %1616 [
    i8 3, label %1611
    i8 1, label %1602
    i8 2, label %1593
    i8 0, label %1576
  ]

1576:                                             ; preds = %1572
  %1577 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1577) #17
  %1578 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1578) #17
  %1579 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1579) #17
  %1580 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1580) #17
  %1581 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1, i64 0, i32 12
  %1582 = load i32, ptr %1581, align 8, !tbaa !230
  %1583 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1, i64 1, i32 12
  %1584 = load i32, ptr %1583, align 8, !tbaa !230
  %1585 = add nsw i32 %1584, %1582
  %1586 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1, i64 2, i32 12
  %1587 = load i32, ptr %1586, align 8, !tbaa !230
  %1588 = add nsw i32 %1585, %1587
  %1589 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 1, i64 3, i32 12
  %1590 = load i32, ptr %1589, align 8, !tbaa !230
  %1591 = add nsw i32 %1588, %1590
  %1592 = add nsw i32 %1591, %1573
  br label %1617

1593:                                             ; preds = %1572
  %1594 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1594) #17
  %1595 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 1, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1595) #17
  %1596 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 1, i64 0, i32 12
  %1597 = load i32, ptr %1596, align 8, !tbaa !230
  %1598 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 1, i64 1, i32 12
  %1599 = load i32, ptr %1598, align 8, !tbaa !230
  %1600 = add nsw i32 %1599, %1597
  %1601 = add nsw i32 %1600, %1573
  br label %1617

1602:                                             ; preds = %1572
  %1603 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1603) #17
  %1604 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 1, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1604) #17
  %1605 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 1, i64 0, i32 12
  %1606 = load i32, ptr %1605, align 8, !tbaa !230
  %1607 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 1, i64 1, i32 12
  %1608 = load i32, ptr %1607, align 8, !tbaa !230
  %1609 = add nsw i32 %1608, %1606
  %1610 = add nsw i32 %1609, %1573
  br label %1617

1611:                                             ; preds = %1572
  %1612 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1612) #17
  %1613 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 12
  %1614 = load i32, ptr %1613, align 8, !tbaa !230
  %1615 = add nsw i32 %1573, %1614
  br label %1617

1616:                                             ; preds = %1572
  call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull @.str) #17
  br label %1617

1617:                                             ; preds = %1616, %1611, %1602, %1593, %1576
  %1618 = phi i32 [ %1615, %1611 ], [ %1610, %1602 ], [ %1601, %1593 ], [ %1592, %1576 ], [ %1573, %1616 ]
  %1619 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %1620 = load i8, ptr %1619, align 1, !tbaa !5
  switch i8 %1620, label %1661 [
    i8 3, label %1656
    i8 1, label %1647
    i8 2, label %1638
    i8 0, label %1621
  ]

1621:                                             ; preds = %1617
  %1622 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1622) #17
  %1623 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1623) #17
  %1624 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1624) #17
  %1625 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1625) #17
  %1626 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2, i64 0, i32 12
  %1627 = load i32, ptr %1626, align 8, !tbaa !230
  %1628 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2, i64 1, i32 12
  %1629 = load i32, ptr %1628, align 8, !tbaa !230
  %1630 = add nsw i32 %1629, %1627
  %1631 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2, i64 2, i32 12
  %1632 = load i32, ptr %1631, align 8, !tbaa !230
  %1633 = add nsw i32 %1630, %1632
  %1634 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 2, i64 3, i32 12
  %1635 = load i32, ptr %1634, align 8, !tbaa !230
  %1636 = add nsw i32 %1633, %1635
  %1637 = add nsw i32 %1636, %1618
  br label %1662

1638:                                             ; preds = %1617
  %1639 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1639) #17
  %1640 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 2, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1640) #17
  %1641 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 2, i64 0, i32 12
  %1642 = load i32, ptr %1641, align 8, !tbaa !230
  %1643 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 2, i64 1, i32 12
  %1644 = load i32, ptr %1643, align 8, !tbaa !230
  %1645 = add nsw i32 %1644, %1642
  %1646 = add nsw i32 %1645, %1618
  br label %1662

1647:                                             ; preds = %1617
  %1648 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1648) #17
  %1649 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 2, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1649) #17
  %1650 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 2, i64 0, i32 12
  %1651 = load i32, ptr %1650, align 8, !tbaa !230
  %1652 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 2, i64 1, i32 12
  %1653 = load i32, ptr %1652, align 8, !tbaa !230
  %1654 = add nsw i32 %1653, %1651
  %1655 = add nsw i32 %1654, %1618
  br label %1662

1656:                                             ; preds = %1617
  %1657 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1657) #17
  %1658 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 12
  %1659 = load i32, ptr %1658, align 8, !tbaa !230
  %1660 = add nsw i32 %1618, %1659
  br label %1662

1661:                                             ; preds = %1617
  call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull @.str) #17
  br label %1662

1662:                                             ; preds = %1661, %1656, %1647, %1638, %1621
  %1663 = phi i32 [ %1660, %1656 ], [ %1655, %1647 ], [ %1646, %1638 ], [ %1637, %1621 ], [ %1618, %1661 ]
  %1664 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %1665 = load i8, ptr %1664, align 1, !tbaa !5
  switch i8 %1665, label %1706 [
    i8 3, label %1701
    i8 1, label %1692
    i8 2, label %1683
    i8 0, label %1666
  ]

1666:                                             ; preds = %1662
  %1667 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1667) #17
  %1668 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1668) #17
  %1669 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3, i64 2
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1669) #17
  %1670 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1670) #17
  %1671 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3, i64 0, i32 12
  %1672 = load i32, ptr %1671, align 8, !tbaa !230
  %1673 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3, i64 1, i32 12
  %1674 = load i32, ptr %1673, align 8, !tbaa !230
  %1675 = add nsw i32 %1674, %1672
  %1676 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3, i64 2, i32 12
  %1677 = load i32, ptr %1676, align 8, !tbaa !230
  %1678 = add nsw i32 %1675, %1677
  %1679 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 3, i64 3, i32 12
  %1680 = load i32, ptr %1679, align 8, !tbaa !230
  %1681 = add nsw i32 %1678, %1680
  %1682 = add nsw i32 %1681, %1663
  br label %1707

1683:                                             ; preds = %1662
  %1684 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1684) #17
  %1685 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 3, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1685) #17
  %1686 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 3, i64 0, i32 12
  %1687 = load i32, ptr %1686, align 8, !tbaa !230
  %1688 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 3, i64 1, i32 12
  %1689 = load i32, ptr %1688, align 8, !tbaa !230
  %1690 = add nsw i32 %1689, %1687
  %1691 = add nsw i32 %1690, %1663
  br label %1707

1692:                                             ; preds = %1662
  %1693 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1693) #17
  %1694 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 3, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1694) #17
  %1695 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 3, i64 0, i32 12
  %1696 = load i32, ptr %1695, align 8, !tbaa !230
  %1697 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 3, i64 1, i32 12
  %1698 = load i32, ptr %1697, align 8, !tbaa !230
  %1699 = add nsw i32 %1698, %1696
  %1700 = add nsw i32 %1699, %1663
  br label %1707

1701:                                             ; preds = %1662
  %1702 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %1702) #17
  %1703 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 12
  %1704 = load i32, ptr %1703, align 8, !tbaa !230
  %1705 = add nsw i32 %1663, %1704
  br label %1707

1706:                                             ; preds = %1662
  call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull @.str) #17
  br label %1707

1707:                                             ; preds = %1706, %1701, %1692, %1683, %1666
  %1708 = phi i32 [ %1705, %1701 ], [ %1700, %1692 ], [ %1691, %1683 ], [ %1682, %1666 ], [ %1663, %1706 ]
  store i32 %1708, ptr %16, align 4, !tbaa !39
  br label %1709

1709:                                             ; preds = %1707, %1513, %1514, %1524, %1516, %1502, %1509
  %1710 = phi i32 [ %1708, %1707 ], [ %1503, %1513 ], [ %1515, %1514 ], [ %1531, %1524 ], [ %1523, %1516 ], [ %1503, %1502 ], [ %1503, %1509 ]
  %1711 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 11
  %1712 = load i32, ptr %1711, align 4, !tbaa !237
  %1713 = icmp eq i32 %1712, 0
  br i1 %1713, label %1724, label %1714

1714:                                             ; preds = %1709
  call fastcc void @x264_mb_analyse_intra_chroma(ptr noundef nonnull %0, ptr noundef nonnull %15)
  %1715 = load i32, ptr %107, align 4, !tbaa !158
  %1716 = sub nsw i32 %1710, %1715
  call fastcc void @x264_mb_analyse_intra(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %1716)
  %1717 = load i32, ptr %107, align 4, !tbaa !158
  %1718 = load i32, ptr %110, align 8, !tbaa !161
  %1719 = add nsw i32 %1718, %1717
  store i32 %1719, ptr %110, align 8, !tbaa !161
  %1720 = load i32, ptr %109, align 4, !tbaa !160
  %1721 = add nsw i32 %1720, %1717
  store i32 %1721, ptr %109, align 4, !tbaa !160
  %1722 = load i32, ptr %108, align 4, !tbaa !159
  %1723 = add nsw i32 %1722, %1717
  store i32 %1723, ptr %108, align 4, !tbaa !159
  br label %1728

1724:                                             ; preds = %1709
  call fastcc void @x264_mb_analyse_intra(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %1710)
  %1725 = load i32, ptr %110, align 8, !tbaa !161
  %1726 = load i32, ptr %109, align 4
  %1727 = load i32, ptr %108, align 4
  br label %1728

1728:                                             ; preds = %1724, %1714
  %1729 = phi i32 [ %1727, %1724 ], [ %1723, %1714 ]
  %1730 = phi i32 [ %1726, %1724 ], [ %1721, %1714 ]
  %1731 = phi i32 [ %1725, %1724 ], [ %1719, %1714 ]
  store i32 %1710, ptr %17, align 4, !tbaa !39
  %1732 = load i32, ptr %51, align 8, !tbaa !145
  %1733 = icmp eq i32 %1732, 0
  br i1 %1733, label %1960, label %1734

1734:                                             ; preds = %1728
  %1735 = call i32 @llvm.smin.i32(i32 %1730, i32 %1729)
  %1736 = call i32 @llvm.smin.i32(i32 %1731, i32 %1735)
  %1737 = call i32 @llvm.smin.i32(i32 %1710, i32 %1736)
  %1738 = mul nsw i32 %1737, 5
  %1739 = sdiv i32 %1738, 4
  store i32 4, ptr %891, align 8, !tbaa !49
  %1740 = load i32, ptr %656, align 16, !tbaa !190
  %1741 = icmp eq i32 %1740, 268435456
  br i1 %1741, label %1742, label %1750

1742:                                             ; preds = %1734
  %1743 = load i32, ptr %658, align 8, !tbaa !191
  %1744 = mul nsw i32 %1737, 3
  %1745 = sdiv i32 %1744, 2
  %1746 = icmp sgt i32 %1743, %1745
  br i1 %1746, label %1750, label %1747

1747:                                             ; preds = %1742
  store i32 16, ptr %1506, align 4, !tbaa !50
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  %1748 = load i32, ptr %65, align 4, !tbaa !153
  %1749 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %1748)
  store i32 %1749, ptr %656, align 16, !tbaa !190
  br label %1750

1750:                                             ; preds = %1747, %1742, %1734
  %1751 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 14
  %1752 = load i32, ptr %1751, align 16, !tbaa !188
  %1753 = icmp sgt i32 %1752, %1739
  br i1 %1753, label %1757, label %1754

1754:                                             ; preds = %1750
  store i32 14, ptr %1506, align 4, !tbaa !50
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  %1755 = load i32, ptr %65, align 4, !tbaa !153
  %1756 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %1755)
  br label %1757

1757:                                             ; preds = %1754, %1750
  %1758 = phi i32 [ %1756, %1754 ], [ 268435456, %1750 ]
  store i32 %1758, ptr %1751, align 16, !tbaa !188
  %1759 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 17
  %1760 = load i32, ptr %1759, align 16, !tbaa !187
  %1761 = icmp sgt i32 %1760, %1739
  br i1 %1761, label %1765, label %1762

1762:                                             ; preds = %1757
  store i32 15, ptr %1506, align 4, !tbaa !50
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  %1763 = load i32, ptr %65, align 4, !tbaa !153
  %1764 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %1763)
  br label %1765

1765:                                             ; preds = %1762, %1757
  %1766 = phi i32 [ %1764, %1762 ], [ 268435456, %1757 ]
  store i32 %1766, ptr %1759, align 16, !tbaa !187
  %1767 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 4
  %1768 = load i32, ptr %1767, align 16, !tbaa !189
  %1769 = icmp sgt i32 %1768, %1739
  br i1 %1769, label %1933, label %1770

1770:                                             ; preds = %1765
  store i32 5, ptr %891, align 8, !tbaa !49
  store i32 13, ptr %1506, align 4, !tbaa !50
  %1771 = load i32, ptr %619, align 4, !tbaa !73
  %1772 = and i32 %1771, 32
  %1773 = icmp eq i32 %1772, 0
  br i1 %1773, label %1928, label %1774

1774:                                             ; preds = %1770
  %1775 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0, i32 3
  %1776 = load i32, ptr %1775, align 4, !tbaa !226
  %1777 = trunc i32 %1776 to i16
  %1778 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %1779 = and i16 %1777, 255
  %1780 = mul nuw i16 %1779, 257
  store i16 %1780, ptr %1778, align 2, !tbaa !5
  %1781 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i16 %1780, ptr %1781, align 2, !tbaa !5
  %1782 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 3
  %1783 = load i32, ptr %1782, align 4, !tbaa !226
  %1784 = trunc i32 %1783 to i16
  %1785 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %1786 = and i16 %1784, 255
  %1787 = mul nuw i16 %1786, 257
  store i16 %1787, ptr %1785, align 2, !tbaa !5
  %1788 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  store i16 %1787, ptr %1788, align 2, !tbaa !5
  %1789 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 3
  %1790 = load i32, ptr %1789, align 4, !tbaa !226
  %1791 = trunc i32 %1790 to i16
  %1792 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %1793 = and i16 %1791, 255
  %1794 = mul nuw i16 %1793, 257
  store i16 %1794, ptr %1792, align 2, !tbaa !5
  %1795 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i16 %1794, ptr %1795, align 2, !tbaa !5
  %1796 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 3
  %1797 = load i32, ptr %1796, align 4, !tbaa !226
  %1798 = trunc i32 %1797 to i16
  %1799 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %1800 = and i16 %1798, 255
  %1801 = mul nuw i16 %1800, 257
  store i16 %1801, ptr %1799, align 2, !tbaa !5
  %1802 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 38
  store i16 %1801, ptr %1802, align 2, !tbaa !5
  br label %1803

1803:                                             ; preds = %1925, %1774
  %1804 = phi i64 [ 0, %1774 ], [ %1926, %1925 ]
  %1805 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 8, i64 %1804
  %1806 = load i32, ptr %1805, align 4, !tbaa !39
  %1807 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 10, i64 %1804
  %1808 = load i32, ptr %1807, align 4, !tbaa !39
  %1809 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 12, i64 %1804
  %1810 = load i32, ptr %1809, align 4, !tbaa !39
  %1811 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 %1804, i32 12
  %1812 = load i32, ptr %1811, align 8, !tbaa !230
  %1813 = call i32 @llvm.smin.i32(i32 %1810, i32 %1812)
  %1814 = call i32 @llvm.smin.i32(i32 %1808, i32 %1813)
  %1815 = call i32 @llvm.smin.i32(i32 %1806, i32 %1814)
  %1816 = mul nsw i32 %1815, 5
  %1817 = sdiv i32 %1816, 4
  %1818 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %1804
  %1819 = trunc i64 %1804 to i32
  %1820 = shl i32 %1819, 1
  %1821 = and i32 %1820, 2
  %1822 = or i32 %1821, 12
  %1823 = shl i32 %1819, 3
  %1824 = and i32 %1823, -16
  %1825 = or i32 %1822, %1824
  %1826 = sext i32 %1825 to i64
  %1827 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1826
  %1828 = or i32 %1823, 8
  %1829 = add nsw i32 %1822, %1828
  %1830 = sext i32 %1829 to i64
  %1831 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1830
  %1832 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %1804, i64 0, i32 13
  %1833 = or i32 %1824, %1821
  %1834 = or i32 %1833, 12
  %1835 = zext i32 %1834 to i64
  %1836 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1835
  %1837 = getelementptr inbounds i8, ptr %1836, i64 32
  %1838 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %1804, i64 1, i32 13
  %1839 = or i32 %1833, 13
  %1840 = zext i32 %1839 to i64
  %1841 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1840
  %1842 = getelementptr inbounds i8, ptr %1841, i64 32
  %1843 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %1804, i64 0, i32 13
  %1844 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %1804, i64 1, i32 13
  %1845 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 %1804, i32 13
  %1846 = sext i32 %1834 to i64
  %1847 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1846
  %1848 = getelementptr inbounds i8, ptr %1847, i64 32
  %1849 = shl i64 %1804, 2
  %1850 = icmp sgt i32 %1806, %1817
  br i1 %1850, label %1873, label %1851

1851:                                             ; preds = %1803
  %1852 = or i32 %1821, 13
  %1853 = add nsw i32 %1852, %1828
  %1854 = sext i32 %1853 to i64
  %1855 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1854
  %1856 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %1804, i64 3, i32 13
  %1857 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %1804, i64 2, i32 13
  %1858 = or i32 %1852, %1824
  %1859 = sext i32 %1858 to i64
  %1860 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %1859
  %1861 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %1804, i64 1, i32 13
  %1862 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %1804, i64 0, i32 13
  store i8 0, ptr %1818, align 1, !tbaa !5
  %1863 = load i32, ptr %1862, align 4, !tbaa !5
  store i32 %1863, ptr %1827, align 4, !tbaa !5
  %1864 = load i32, ptr %1861, align 4, !tbaa !5
  store i32 %1864, ptr %1860, align 4, !tbaa !5
  %1865 = load i32, ptr %1857, align 4, !tbaa !5
  store i32 %1865, ptr %1831, align 4, !tbaa !5
  %1866 = load i32, ptr %1856, align 4, !tbaa !5
  store i32 %1866, ptr %1855, align 4, !tbaa !5
  %1867 = load i32, ptr %65, align 4, !tbaa !153
  %1868 = trunc i64 %1849 to i32
  %1869 = call i64 @x264_rd_cost_part(ptr noundef nonnull %0, i32 noundef %1867, i32 noundef %1868, i32 noundef 3)
  %1870 = icmp ult i64 %1869, 1152921504606846976
  %1871 = select i1 %1870, i32 0, i32 3
  %1872 = call i64 @llvm.umin.i64(i64 %1869, i64 1152921504606846976)
  br label %1873

1873:                                             ; preds = %1851, %1803
  %1874 = phi i32 [ %1871, %1851 ], [ 3, %1803 ]
  %1875 = phi i64 [ %1872, %1851 ], [ 1152921504606846976, %1803 ]
  %1876 = icmp sgt i32 %1808, %1817
  br i1 %1876, label %1890, label %1877

1877:                                             ; preds = %1873
  store i8 1, ptr %1818, align 1, !tbaa !5
  %1878 = load i32, ptr %1843, align 4, !tbaa !5
  %1879 = zext i32 %1878 to i64
  %1880 = mul nuw i64 %1879, 4294967297
  store i64 %1880, ptr %1827, align 8, !tbaa !5
  %1881 = load i32, ptr %1844, align 4, !tbaa !5
  %1882 = zext i32 %1881 to i64
  %1883 = mul nuw i64 %1882, 4294967297
  store i64 %1883, ptr %1831, align 8, !tbaa !5
  %1884 = load i32, ptr %65, align 4, !tbaa !153
  %1885 = trunc i64 %1849 to i32
  %1886 = call i64 @x264_rd_cost_part(ptr noundef nonnull %0, i32 noundef %1884, i32 noundef %1885, i32 noundef 3)
  %1887 = icmp ult i64 %1886, %1875
  %1888 = select i1 %1887, i32 1, i32 %1874
  %1889 = call i64 @llvm.umin.i64(i64 %1886, i64 %1875)
  br label %1890

1890:                                             ; preds = %1877, %1873
  %1891 = phi i32 [ %1888, %1877 ], [ %1874, %1873 ]
  %1892 = phi i64 [ %1889, %1877 ], [ %1875, %1873 ]
  %1893 = icmp sgt i32 %1810, %1817
  br i1 %1893, label %1903, label %1894

1894:                                             ; preds = %1890
  store i8 2, ptr %1818, align 1, !tbaa !5
  %1895 = load i32, ptr %1832, align 4, !tbaa !5
  store i32 %1895, ptr %1836, align 4, !tbaa !5
  store i32 %1895, ptr %1837, align 4, !tbaa !5
  %1896 = load i32, ptr %1838, align 4, !tbaa !5
  store i32 %1896, ptr %1841, align 4, !tbaa !5
  store i32 %1896, ptr %1842, align 4, !tbaa !5
  %1897 = load i32, ptr %65, align 4, !tbaa !153
  %1898 = trunc i64 %1849 to i32
  %1899 = call i64 @x264_rd_cost_part(ptr noundef nonnull %0, i32 noundef %1897, i32 noundef %1898, i32 noundef 3)
  %1900 = icmp ult i64 %1899, %1892
  %1901 = select i1 %1900, i32 2, i32 %1891
  %1902 = call i64 @llvm.umin.i64(i64 %1899, i64 %1892)
  br label %1903

1903:                                             ; preds = %1894, %1890
  %1904 = phi i32 [ %1901, %1894 ], [ %1891, %1890 ]
  %1905 = phi i64 [ %1902, %1894 ], [ %1892, %1890 ]
  %1906 = icmp sgt i32 %1812, %1817
  %1907 = icmp eq i64 %1905, 1152921504606846976
  %1908 = select i1 %1906, i1 true, i1 %1907
  br i1 %1908, label %1918, label %1909

1909:                                             ; preds = %1903
  store i8 3, ptr %1818, align 1, !tbaa !5
  %1910 = load i32, ptr %1845, align 4, !tbaa !5
  %1911 = zext i32 %1910 to i64
  %1912 = mul nuw i64 %1911, 4294967297
  store i64 %1912, ptr %1847, align 8, !tbaa !5
  store i64 %1912, ptr %1848, align 8, !tbaa !5
  %1913 = load i32, ptr %65, align 4, !tbaa !153
  %1914 = trunc i64 %1849 to i32
  %1915 = call i64 @x264_rd_cost_part(ptr noundef nonnull %0, i32 noundef %1913, i32 noundef %1914, i32 noundef 3)
  %1916 = icmp ult i64 %1915, %1905
  %1917 = select i1 %1916, i32 3, i32 %1904
  br label %1918

1918:                                             ; preds = %1909, %1903
  %1919 = phi i32 [ %1917, %1909 ], [ %1904, %1903 ]
  %1920 = load i8, ptr %1818, align 1, !tbaa !5
  %1921 = zext i8 %1920 to i32
  %1922 = icmp eq i32 %1919, %1921
  br i1 %1922, label %1925, label %1923

1923:                                             ; preds = %1918
  %1924 = trunc i32 %1919 to i8
  store i8 %1924, ptr %1818, align 1, !tbaa !5
  call fastcc void @x264_mb_cache_mv_p8x8(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %1819)
  br label %1925

1925:                                             ; preds = %1923, %1918
  %1926 = add nuw nsw i64 %1804, 1
  %1927 = icmp eq i64 %1926, 4
  br i1 %1927, label %1929, label %1803, !llvm.loop !240

1928:                                             ; preds = %1770
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %1929

1929:                                             ; preds = %1925, %1928
  %1930 = load i32, ptr %65, align 4, !tbaa !153
  %1931 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %1930)
  %1932 = load i32, ptr %1759, align 16, !tbaa !187
  br label %1933

1933:                                             ; preds = %1765, %1929
  %1934 = phi i32 [ %1932, %1929 ], [ %1766, %1765 ]
  %1935 = phi i32 [ %1931, %1929 ], [ 268435456, %1765 ]
  store i32 %1935, ptr %1767, align 16, !tbaa !189
  %1936 = load i32, ptr %656, align 16, !tbaa !190
  %1937 = load i32, ptr %1751, align 16, !tbaa !188
  %1938 = icmp slt i32 %1937, %1936
  %1939 = call i32 @llvm.smin.i32(i32 %1937, i32 %1936)
  %1940 = select i1 %1938, i32 14, i32 16
  %1941 = icmp slt i32 %1934, %1939
  %1942 = call i32 @llvm.smin.i32(i32 %1934, i32 %1939)
  %1943 = select i1 %1941, i32 15, i32 %1940
  %1944 = icmp slt i32 %1935, %1942
  %1945 = call i32 @llvm.smin.i32(i32 %1935, i32 %1942)
  store i32 %1945, ptr %16, align 4
  %1946 = select i1 %1944, i32 13, i32 %1943
  %1947 = select i1 %1944, i32 5, i32 4
  store i32 %1947, ptr %891, align 8, !tbaa !49
  store i32 %1946, ptr %1506, align 4, !tbaa !50
  %1948 = icmp slt i32 %1945, 268435456
  br i1 %1948, label %1949, label %1952

1949:                                             ; preds = %1933
  call fastcc void @x264_mb_analyse_transform_rd(ptr noundef nonnull %0, ptr noundef nonnull %15, ptr noundef nonnull %17, ptr noundef nonnull %16)
  %1950 = load i32, ptr %17, align 4, !tbaa !39
  %1951 = load i32, ptr %16, align 4, !tbaa !39
  br label %1952

1952:                                             ; preds = %1949, %1933
  %1953 = phi i32 [ %1951, %1949 ], [ %1945, %1933 ]
  %1954 = phi i32 [ %1950, %1949 ], [ %1710, %1933 ]
  %1955 = mul nsw i32 %1954, 5
  %1956 = sdiv i32 %1955, 4
  call fastcc void @x264_intra_rd(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %1956)
  %1957 = load i32, ptr %110, align 8, !tbaa !161
  %1958 = load i32, ptr %109, align 4, !tbaa !160
  %1959 = load i32, ptr %108, align 4, !tbaa !159
  br label %1960

1960:                                             ; preds = %1952, %1728
  %1961 = phi i32 [ %1959, %1952 ], [ %1729, %1728 ]
  %1962 = phi i32 [ %1958, %1952 ], [ %1730, %1728 ]
  %1963 = phi i32 [ %1953, %1952 ], [ %1710, %1728 ]
  %1964 = phi i32 [ %1957, %1952 ], [ %1731, %1728 ]
  %1965 = phi i32 [ %1946, %1952 ], [ %1504, %1728 ]
  %1966 = phi i32 [ %1947, %1952 ], [ %1505, %1728 ]
  %1967 = icmp slt i32 %1964, %1963
  %1968 = call i32 @llvm.smin.i32(i32 %1964, i32 %1963)
  %1969 = select i1 %1967, i32 2, i32 %1966
  %1970 = icmp slt i32 %1962, %1968
  %1971 = call i32 @llvm.smin.i32(i32 %1962, i32 %1968)
  %1972 = select i1 %1970, i32 1, i32 %1969
  %1973 = icmp slt i32 %1961, %1971
  %1974 = call i32 @llvm.smin.i32(i32 %1961, i32 %1971)
  store i32 %1974, ptr %16, align 4
  %1975 = select i1 %1973, i32 0, i32 %1972
  %1976 = load i32, ptr %152, align 8, !tbaa !162
  %1977 = icmp slt i32 %1976, %1974
  %1978 = call i32 @llvm.smin.i32(i32 %1976, i32 %1974)
  store i32 %1978, ptr %16, align 4
  %1979 = select i1 %1977, i32 3, i32 %1975
  store i32 %1979, ptr %891, align 8, !tbaa !49
  %1980 = load i32, ptr %505, align 16, !tbaa !208
  %1981 = insertelement <4 x i32> poison, i32 %1979, i64 0
  %1982 = insertelement <4 x i32> %1981, i32 %1980, i64 1
  %1983 = shufflevector <4 x i32> %1982, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %1984 = freeze <4 x i32> %1983
  %1985 = icmp eq <4 x i32> %1984, <i32 0, i32 0, i32 1, i32 2>
  %1986 = icmp eq i32 %1979, 3
  %1987 = bitcast <4 x i1> %1985 to i4
  %1988 = icmp ne i4 %1987, 0
  %1989 = select i1 %1988, i1 true, i1 %1986
  br i1 %1989, label %1990, label %2099

1990:                                             ; preds = %1960
  %1991 = load i32, ptr %51, align 8, !tbaa !145
  %1992 = icmp slt i32 %1991, 2
  %1993 = select i1 %1992, i1 true, i1 %1986
  br i1 %1993, label %2098, label %1994

1994:                                             ; preds = %1990
  %1995 = icmp ult i32 %1979, 4
  br i1 %1995, label %1996, label %1997

1996:                                             ; preds = %1994
  call fastcc void @x264_intra_rd_refine(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %2098

1997:                                             ; preds = %1994
  switch i32 %1965, label %2098 [
    i32 16, label %1998
    i32 14, label %2008
    i32 15, label %2026
    i32 13, label %2050
  ]

1998:                                             ; preds = %1997
  %1999 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2, i32 3
  %2000 = load i32, ptr %1999, align 4, !tbaa !234
  %2001 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %2002 = and i32 %2000, 255
  %2003 = mul nuw i32 %2002, 16843009
  store i32 %2003, ptr %2001, align 4, !tbaa !5
  %2004 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %2003, ptr %2004, align 4, !tbaa !5
  %2005 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 %2003, ptr %2005, align 4, !tbaa !5
  %2006 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %2003, ptr %2006, align 4, !tbaa !5
  store i32 %1978, ptr %658, align 8, !tbaa !191
  %2007 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %657, i32 noundef %2007, i32 noundef 0, i32 noundef 0) #17
  br label %2098

2008:                                             ; preds = %1997
  %2009 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %2010 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16
  %2011 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 0, i32 3
  store i32 50529027, ptr %2009, align 16
  %2012 = load i32, ptr %2011, align 4, !tbaa !226
  %2013 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %2014 = and i32 %2012, 255
  %2015 = mul nuw i32 %2014, 16843009
  store i32 %2015, ptr %2013, align 4, !tbaa !5
  %2016 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %2015, ptr %2016, align 4, !tbaa !5
  %2017 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1
  %2018 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1, i32 3
  %2019 = load i32, ptr %2018, align 4, !tbaa !226
  %2020 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %2021 = and i32 %2019, 255
  %2022 = mul nuw i32 %2021, 16843009
  store i32 %2022, ptr %2020, align 4, !tbaa !5
  %2023 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %2022, ptr %2023, align 4, !tbaa !5
  %2024 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2010, i32 noundef %2024, i32 noundef 0, i32 noundef 0) #17
  %2025 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2017, i32 noundef %2025, i32 noundef 8, i32 noundef 0) #17
  br label %2098

2026:                                             ; preds = %1997
  %2027 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %2028 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19
  %2029 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 0, i32 3
  store i32 50529027, ptr %2027, align 16
  %2030 = load i32, ptr %2029, align 4, !tbaa !226
  %2031 = trunc i32 %2030 to i16
  %2032 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %2033 = and i16 %2031, 255
  %2034 = mul nuw i16 %2033, 257
  store i16 %2034, ptr %2032, align 2, !tbaa !5
  %2035 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i16 %2034, ptr %2035, align 2, !tbaa !5
  %2036 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i16 %2034, ptr %2036, align 2, !tbaa !5
  %2037 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i16 %2034, ptr %2037, align 2, !tbaa !5
  %2038 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1
  %2039 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1, i32 3
  %2040 = load i32, ptr %2039, align 4, !tbaa !226
  %2041 = trunc i32 %2040 to i16
  %2042 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %2043 = and i16 %2041, 255
  %2044 = mul nuw i16 %2043, 257
  store i16 %2044, ptr %2042, align 2, !tbaa !5
  %2045 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  store i16 %2044, ptr %2045, align 2, !tbaa !5
  %2046 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  store i16 %2044, ptr %2046, align 2, !tbaa !5
  %2047 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 38
  store i16 %2044, ptr %2047, align 2, !tbaa !5
  %2048 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2028, i32 noundef %2048, i32 noundef 0, i32 noundef 0) #17
  %2049 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2038, i32 noundef %2049, i32 noundef 4, i32 noundef 0) #17
  br label %2098

2050:                                             ; preds = %1997
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %2051

2051:                                             ; preds = %2050, %2095
  %2052 = phi i64 [ 0, %2050 ], [ %2096, %2095 ]
  %2053 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %2052
  %2054 = load i8, ptr %2053, align 1, !tbaa !5
  switch i8 %2054, label %2095 [
    i8 3, label %2055
    i8 1, label %2060
    i8 2, label %2069
    i8 0, label %2078
  ]

2055:                                             ; preds = %2051
  %2056 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 %2052
  %2057 = load i32, ptr %65, align 4, !tbaa !153
  %2058 = trunc i64 %2052 to i32
  %2059 = shl i32 %2058, 2
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2056, i32 noundef %2057, i32 noundef %2059, i32 noundef 0) #17
  br label %2095

2060:                                             ; preds = %2051
  %2061 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %2052
  %2062 = load i32, ptr %65, align 4, !tbaa !153
  %2063 = shl nuw nsw i64 %2052, 2
  %2064 = trunc i64 %2063 to i32
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2061, i32 noundef %2062, i32 noundef %2064, i32 noundef 0) #17
  %2065 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 11, i64 %2052, i64 1
  %2066 = load i32, ptr %65, align 4, !tbaa !153
  %2067 = trunc i64 %2063 to i32
  %2068 = or i32 %2067, 2
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2065, i32 noundef %2066, i32 noundef %2068, i32 noundef 0) #17
  br label %2095

2069:                                             ; preds = %2051
  %2070 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %2052
  %2071 = load i32, ptr %65, align 4, !tbaa !153
  %2072 = shl nuw nsw i64 %2052, 2
  %2073 = trunc i64 %2072 to i32
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2070, i32 noundef %2071, i32 noundef %2073, i32 noundef 0) #17
  %2074 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 13, i64 %2052, i64 1
  %2075 = load i32, ptr %65, align 4, !tbaa !153
  %2076 = trunc i64 %2072 to i32
  %2077 = or i32 %2076, 1
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2074, i32 noundef %2075, i32 noundef %2077, i32 noundef 0) #17
  br label %2095

2078:                                             ; preds = %2051
  %2079 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %2052
  %2080 = load i32, ptr %65, align 4, !tbaa !153
  %2081 = shl nuw nsw i64 %2052, 2
  %2082 = trunc i64 %2081 to i32
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2079, i32 noundef %2080, i32 noundef %2082, i32 noundef 0) #17
  %2083 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %2052, i64 1
  %2084 = load i32, ptr %65, align 4, !tbaa !153
  %2085 = trunc i64 %2081 to i32
  %2086 = or i32 %2085, 1
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2083, i32 noundef %2084, i32 noundef %2086, i32 noundef 0) #17
  %2087 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %2052, i64 2
  %2088 = load i32, ptr %65, align 4, !tbaa !153
  %2089 = trunc i64 %2081 to i32
  %2090 = or i32 %2089, 2
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2087, i32 noundef %2088, i32 noundef %2090, i32 noundef 0) #17
  %2091 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 9, i64 %2052, i64 3
  %2092 = load i32, ptr %65, align 4, !tbaa !153
  %2093 = trunc i64 %2081 to i32
  %2094 = or i32 %2093, 3
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2091, i32 noundef %2092, i32 noundef %2094, i32 noundef 0) #17
  br label %2095

2095:                                             ; preds = %2051, %2055, %2069, %2078, %2060
  %2096 = add nuw nsw i64 %2052, 1
  %2097 = icmp eq i64 %2096, 4
  br i1 %2097, label %2098, label %2051, !llvm.loop !241

2098:                                             ; preds = %2095, %1997, %1996, %2008, %2026, %1998, %1990
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #17
  br label %3629

2099:                                             ; preds = %1960
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  call void @x264_macroblock_encode(ptr noundef nonnull %0) #17
  %2100 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 4
  %2101 = load ptr, ptr %2100, align 8, !tbaa !46
  %2102 = load ptr, ptr %649, align 16, !tbaa !46
  %2103 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18
  %2104 = load ptr, ptr %2103, align 16, !tbaa !46
  call void %2101(ptr noundef %2102, i32 noundef 16, ptr noundef %2104, i32 noundef 32, i32 noundef 16) #17
  %2105 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 4, i64 3
  %2106 = load ptr, ptr %2105, align 8, !tbaa !46
  %2107 = load ptr, ptr %651, align 8, !tbaa !46
  %2108 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %2109 = load ptr, ptr %2108, align 8, !tbaa !46
  call void %2106(ptr noundef %2107, i32 noundef 16, ptr noundef %2109, i32 noundef 32, i32 noundef 8) #17
  %2110 = load ptr, ptr %2105, align 8, !tbaa !46
  %2111 = load ptr, ptr %653, align 16, !tbaa !46
  %2112 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %2113 = load ptr, ptr %2112, align 16, !tbaa !46
  call void %2110(ptr noundef %2111, i32 noundef 16, ptr noundef %2113, i32 noundef 32, i32 noundef 8) #17
  %2114 = load i32, ptr %20, align 16, !tbaa !74
  %2115 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 64
  %2116 = load i32, ptr %2115, align 4, !tbaa !215
  %2117 = sub nsw i32 %2114, %2116
  %2118 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 2
  %2119 = load i32, ptr %2118, align 8, !tbaa !216
  %2120 = call i32 @llvm.smax.i32(i32 %2117, i32 %2119)
  call fastcc void @x264_mb_analyse_init_qp(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %2120)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #17
  %2121 = load i32, ptr %51, align 8, !tbaa !145
  br label %419

2122:                                             ; preds = %417
  %2123 = icmp eq i32 %50, 0
  br i1 %2123, label %2169, label %2124

2124:                                             ; preds = %2122
  %2125 = icmp eq i32 %50, 1
  %2126 = load i32, ptr %66, align 8, !tbaa !154
  %2127 = icmp eq i32 %2126, 2
  br i1 %2127, label %2128, label %2159

2128:                                             ; preds = %2124
  %2129 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 16
  %2130 = load i32, ptr %2129, align 16, !tbaa !93
  %2131 = icmp eq i32 %2130, 0
  br i1 %2131, label %2159, label %2132

2132:                                             ; preds = %2128
  %2133 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 2
  %2134 = load i32, ptr %2133, align 8, !tbaa !209
  %2135 = icmp eq i32 %2134, 0
  br i1 %2135, label %2136, label %2139

2136:                                             ; preds = %2132
  %2137 = load i32, ptr %105, align 4, !tbaa !51
  %2138 = icmp eq i32 %2137, 0
  br i1 %2138, label %2153, label %2145

2139:                                             ; preds = %2132
  %2140 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 11
  %2141 = load ptr, ptr %2140, align 8, !tbaa !210
  %2142 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11
  %2143 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %2144 = load ptr, ptr %2143, align 16, !tbaa !46
  tail call void %2141(ptr noundef nonnull %2142, ptr noundef %2144, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  br label %2153

2145:                                             ; preds = %2136
  %2146 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 11
  %2147 = load ptr, ptr %2146, align 8, !tbaa !210
  %2148 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11
  %2149 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %2150 = load ptr, ptr %2149, align 16, !tbaa !46
  tail call void %2147(ptr noundef nonnull %2148, ptr noundef %2150, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  %2151 = load i32, ptr %105, align 4, !tbaa !51
  %2152 = icmp eq i32 %2151, 0
  br i1 %2152, label %2153, label %2159

2153:                                             ; preds = %2145, %2139, %2136
  %2154 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 6
  %2155 = load ptr, ptr %2154, align 16, !tbaa !211
  %2156 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 12
  %2157 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %2158 = load ptr, ptr %2157, align 16, !tbaa !46
  tail call void %2155(ptr noundef nonnull %2156, ptr noundef %2158, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  br label %2159

2159:                                             ; preds = %2153, %2145, %2128, %2124
  %2160 = load i32, ptr %111, align 4, !tbaa !57
  %2161 = icmp eq i32 %2160, 0
  br i1 %2161, label %2169, label %2162

2162:                                             ; preds = %2159
  %2163 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 11
  %2164 = load ptr, ptr %2163, align 8, !tbaa !212
  %2165 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 13
  tail call void %2164(ptr noundef nonnull %2165, i32 noundef 72) #17
  br i1 %2125, label %2169, label %2166

2166:                                             ; preds = %2162
  %2167 = load ptr, ptr %2163, align 8, !tbaa !212
  %2168 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 15
  tail call void %2167(ptr noundef nonnull %2168, i32 noundef 128) #17
  br label %2169

2169:                                             ; preds = %2166, %2162, %2159, %2122
  %2170 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 18, ptr %2170, align 8, !tbaa !49
  %2171 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 75
  %2172 = load i32, ptr %2171, align 4, !tbaa !242
  %2173 = icmp eq i32 %2172, 0
  %2174 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 42
  br i1 %2173, label %2234, label %2175

2175:                                             ; preds = %2169
  %2176 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #17
  store i32 1, ptr %18, align 4, !tbaa !39
  %2177 = load i32, ptr %2176, align 8, !tbaa !243
  %2178 = xor i32 %2177, 1
  store i32 %2178, ptr %2176, align 8, !tbaa !243
  %2179 = tail call i32 @x264_mb_predict_mv_direct16x16(ptr noundef nonnull %0, ptr noundef null) #17
  store i32 %2179, ptr %2174, align 16, !tbaa !244
  %2180 = icmp eq i32 %2179, 0
  br i1 %2180, label %2181, label %2184

2181:                                             ; preds = %2175
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #17
  store i32 1, ptr %18, align 4, !tbaa !39
  %2182 = load i32, ptr %2176, align 8, !tbaa !243
  %2183 = xor i32 %2182, 1
  store i32 %2183, ptr %2176, align 8, !tbaa !243
  br label %2202

2184:                                             ; preds = %2175
  %2185 = load i32, ptr %18, align 4, !tbaa !39
  %2186 = icmp eq i32 %2185, 0
  br i1 %2186, label %2190, label %2187

2187:                                             ; preds = %2184
  tail call void @x264_mb_mc(ptr noundef nonnull %0) #17
  %2188 = tail call i32 @x264_macroblock_probe_skip(ptr noundef nonnull %0, i32 noundef 1) #17
  %2189 = load i32, ptr %2174, align 16
  br label %2190

2190:                                             ; preds = %2184, %2187
  %2191 = phi i32 [ %2189, %2187 ], [ 1, %2184 ]
  %2192 = phi i32 [ %2188, %2187 ], [ 0, %2184 ]
  %2193 = load i32, ptr %2176, align 8, !tbaa !243
  %2194 = sext i32 %2193 to i64
  %2195 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 57, i32 0, i32 12, i64 %2194
  %2196 = load i32, ptr %2195, align 4, !tbaa !39
  %2197 = add nsw i32 %2196, %2192
  store i32 %2197, ptr %2195, align 4, !tbaa !39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #17
  store i32 1, ptr %18, align 4, !tbaa !39
  %2198 = load i32, ptr %2176, align 8, !tbaa !243
  %2199 = xor i32 %2198, 1
  store i32 %2199, ptr %2176, align 8, !tbaa !243
  %2200 = freeze i32 %2191
  %2201 = icmp eq i32 %2200, 0
  br i1 %2201, label %2202, label %2204

2202:                                             ; preds = %2181, %2190
  %2203 = phi i32 [ 0, %2181 ], [ %2192, %2190 ]
  br label %2204

2204:                                             ; preds = %2190, %2202
  %2205 = phi i32 [ %2203, %2202 ], [ %2192, %2190 ]
  %2206 = phi ptr [ null, %2202 ], [ %18, %2190 ]
  %2207 = call i32 @x264_mb_predict_mv_direct16x16(ptr noundef nonnull %0, ptr noundef %2206) #17
  store i32 %2207, ptr %2174, align 16, !tbaa !244
  %2208 = icmp eq i32 %2207, 0
  br i1 %2208, label %2209, label %2212

2209:                                             ; preds = %2204
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #17
  %2210 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 8
  store i32 0, ptr %2210, align 4, !tbaa !214
  %2211 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 42
  br label %2374

2212:                                             ; preds = %2204
  %2213 = load i32, ptr %18, align 4, !tbaa !39
  %2214 = icmp eq i32 %2213, 0
  br i1 %2214, label %2215, label %2223

2215:                                             ; preds = %2212
  %2216 = load i32, ptr %2176, align 8, !tbaa !243
  %2217 = sext i32 %2216 to i64
  %2218 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 57, i32 0, i32 12, i64 %2217
  %2219 = load i32, ptr %2218, align 4, !tbaa !39
  %2220 = add nsw i32 %2219, %2205
  store i32 %2220, ptr %2218, align 4, !tbaa !39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #17
  %2221 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 8
  store i32 0, ptr %2221, align 4, !tbaa !214
  %2222 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 42
  br label %2239

2223:                                             ; preds = %2212
  call void @x264_mb_mc(ptr noundef nonnull %0) #17
  %2224 = call i32 @x264_macroblock_probe_skip(ptr noundef nonnull %0, i32 noundef 1) #17
  %2225 = load i32, ptr %2174, align 16, !tbaa !244
  %2226 = load i32, ptr %2176, align 8, !tbaa !243
  %2227 = sext i32 %2226 to i64
  %2228 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 57, i32 0, i32 12, i64 %2227
  %2229 = load i32, ptr %2228, align 4, !tbaa !39
  %2230 = add nsw i32 %2229, %2224
  store i32 %2230, ptr %2228, align 4, !tbaa !39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #17
  %2231 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 8
  store i32 0, ptr %2231, align 4, !tbaa !214
  %2232 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 42
  %2233 = icmp eq i32 %2225, 0
  br i1 %2233, label %2372, label %2239

2234:                                             ; preds = %2169
  %2235 = tail call i32 @x264_mb_predict_mv_direct16x16(ptr noundef nonnull %0, ptr noundef null) #17
  store i32 %2235, ptr %2174, align 16, !tbaa !244
  %2236 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 8
  store i32 0, ptr %2236, align 4, !tbaa !214
  %2237 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 42
  %2238 = icmp eq i32 %2235, 0
  br i1 %2238, label %2374, label %2239

2239:                                             ; preds = %2215, %2234, %2223
  %2240 = phi ptr [ %2237, %2234 ], [ %2232, %2223 ], [ %2222, %2215 ]
  %2241 = phi ptr [ %2236, %2234 ], [ %2231, %2223 ], [ %2221, %2215 ]
  %2242 = phi i32 [ 0, %2234 ], [ %2224, %2223 ], [ %2205, %2215 ]
  %2243 = load i32, ptr %2171, align 4, !tbaa !242
  %2244 = icmp eq i32 %2243, 0
  br i1 %2244, label %2245, label %2246

2245:                                             ; preds = %2239
  call void @x264_mb_mc(ptr noundef nonnull %0) #17
  br label %2246

2246:                                             ; preds = %2245, %2239
  %2247 = load i32, ptr %51, align 8, !tbaa !145
  %2248 = icmp eq i32 %2247, 0
  br i1 %2248, label %2325, label %2249

2249:                                             ; preds = %2246
  %2250 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %2251 = load ptr, ptr %2250, align 8, !tbaa !46
  %2252 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %2253 = load ptr, ptr %2252, align 8, !tbaa !46
  %2254 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 3
  %2255 = load ptr, ptr %2254, align 8, !tbaa !46
  %2256 = call i32 %2255(ptr noundef %2253, i32 noundef 16, ptr noundef %2251, i32 noundef 32) #17
  %2257 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %2258 = load ptr, ptr %2257, align 8, !tbaa !46
  %2259 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %2260 = load ptr, ptr %2259, align 8, !tbaa !46
  %2261 = load ptr, ptr %2254, align 8, !tbaa !46
  %2262 = call i32 %2261(ptr noundef %2260, i32 noundef 16, ptr noundef %2258, i32 noundef 32) #17
  %2263 = load i32, ptr %104, align 4, !tbaa !47
  %2264 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 0
  %2265 = load ptr, ptr %2264, align 8, !tbaa !46
  %2266 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 0
  %2267 = load ptr, ptr %2266, align 8, !tbaa !46
  %2268 = load i32, ptr %111, align 4, !tbaa !57
  %2269 = icmp eq i32 %2268, 0
  br i1 %2269, label %2304, label %2270

2270:                                             ; preds = %2249
  %2271 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 13, i64 0
  %2272 = load ptr, ptr %2271, align 8, !tbaa !46
  %2273 = call i64 %2272(ptr noundef %2265, i32 noundef 32) #17
  %2274 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 13, i64 0
  %2275 = load i64, ptr %2274, align 8, !tbaa !58
  %2276 = icmp eq i64 %2275, 0
  br i1 %2276, label %2279, label %2277

2277:                                             ; preds = %2270
  %2278 = add i64 %2275, -1
  br label %2284

2279:                                             ; preds = %2270
  %2280 = load ptr, ptr %2266, align 16, !tbaa !46
  %2281 = load ptr, ptr %2271, align 8, !tbaa !46
  %2282 = call i64 %2281(ptr noundef %2280, i32 noundef 16) #17
  %2283 = add i64 %2282, 1
  store i64 %2283, ptr %2274, align 8, !tbaa !58
  br label %2284

2284:                                             ; preds = %2279, %2277
  %2285 = phi i64 [ %2278, %2277 ], [ %2282, %2279 ]
  %2286 = trunc i64 %2273 to i32
  %2287 = trunc i64 %2285 to i32
  %2288 = sub nsw i32 %2286, %2287
  %2289 = call i32 @llvm.abs.i32(i32 %2288, i1 true)
  %2290 = lshr i64 %2273, 32
  %2291 = trunc i64 %2290 to i32
  %2292 = lshr i64 %2285, 32
  %2293 = trunc i64 %2292 to i32
  %2294 = sub nsw i32 %2291, %2293
  %2295 = call i32 @llvm.abs.i32(i32 %2294, i1 true)
  %2296 = add nuw nsw i32 %2295, %2289
  %2297 = lshr i32 %2296, 1
  %2298 = load i32, ptr %111, align 4, !tbaa !57
  %2299 = load i32, ptr %91, align 16, !tbaa !59
  %2300 = mul i32 %2299, %2298
  %2301 = mul i32 %2300, %2297
  %2302 = add nsw i32 %2301, 128
  %2303 = ashr i32 %2302, 8
  br label %2304

2304:                                             ; preds = %2249, %2284
  %2305 = phi i32 [ %2303, %2284 ], [ 0, %2249 ]
  %2306 = add nsw i32 %2262, %2256
  %2307 = sext i32 %2306 to i64
  %2308 = sext i32 %2263 to i64
  %2309 = mul nsw i64 %2307, %2308
  %2310 = add nsw i64 %2309, 128
  %2311 = lshr i64 %2310, 8
  %2312 = trunc i64 %2311 to i32
  %2313 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 0
  %2314 = load ptr, ptr %2313, align 8, !tbaa !46
  %2315 = call i32 %2314(ptr noundef %2267, i32 noundef 16, ptr noundef %2265, i32 noundef 32) #17
  %2316 = add i32 %2305, %2312
  %2317 = add i32 %2316, %2315
  %2318 = load i32, ptr %65, align 4, !tbaa !153
  %2319 = mul nsw i32 %2318, 6
  %2320 = add nsw i32 %2319, 128
  %2321 = ashr i32 %2320, 8
  %2322 = icmp sle i32 %2317, %2321
  %2323 = zext i1 %2322 to i32
  %2324 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 62
  store i32 %2323, ptr %2324, align 4, !tbaa !207
  br label %2333

2325:                                             ; preds = %2246
  %2326 = load i32, ptr %2171, align 4, !tbaa !242
  %2327 = icmp eq i32 %2326, 0
  br i1 %2327, label %2328, label %2333

2328:                                             ; preds = %2325
  %2329 = call i32 @x264_macroblock_probe_skip(ptr noundef nonnull %0, i32 noundef 1) #17
  store i32 %2329, ptr %2241, align 4, !tbaa !214
  %2330 = load i32, ptr %37, align 4, !tbaa !144
  %2331 = icmp slt i32 %2330, 3
  %2332 = select i1 %2331, i32 %2329, i32 %2242
  br label %2333

2333:                                             ; preds = %2328, %2325, %2304
  %2334 = phi i32 [ %2317, %2304 ], [ 268435456, %2325 ], [ 268435456, %2328 ]
  %2335 = phi i32 [ %2323, %2304 ], [ %2242, %2325 ], [ %2332, %2328 ]
  %2336 = icmp eq i32 %2335, 0
  br i1 %2336, label %2374, label %2337

2337:                                             ; preds = %2333
  %2338 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %2339 = load i32, ptr %2338, align 8, !tbaa !39
  %2340 = icmp sgt i32 %2339, 0
  br i1 %2340, label %2341, label %2344

2341:                                             ; preds = %2337
  %2342 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48
  %2343 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  br label %2350

2344:                                             ; preds = %2350, %2337
  %2345 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 1
  %2346 = load i32, ptr %2345, align 4, !tbaa !39
  %2347 = icmp sgt i32 %2346, 0
  br i1 %2347, label %2348, label %3629

2348:                                             ; preds = %2344
  %2349 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  br label %2361

2350:                                             ; preds = %2341, %2350
  %2351 = phi i64 [ 0, %2341 ], [ %2357, %2350 ]
  %2352 = getelementptr inbounds [32 x ptr], ptr %2342, i64 0, i64 %2351
  %2353 = load ptr, ptr %2352, align 8, !tbaa !46
  %2354 = load i32, ptr %2343, align 8, !tbaa !64
  %2355 = sext i32 %2354 to i64
  %2356 = getelementptr inbounds [2 x i16], ptr %2353, i64 %2355
  store i32 0, ptr %2356, align 4, !tbaa !5
  %2357 = add nuw nsw i64 %2351, 1
  %2358 = load i32, ptr %2338, align 8, !tbaa !39
  %2359 = sext i32 %2358 to i64
  %2360 = icmp slt i64 %2357, %2359
  br i1 %2360, label %2350, label %2344, !llvm.loop !245

2361:                                             ; preds = %2348, %2361
  %2362 = phi i64 [ 0, %2348 ], [ %2368, %2361 ]
  %2363 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48, i64 1, i64 %2362
  %2364 = load ptr, ptr %2363, align 8, !tbaa !46
  %2365 = load i32, ptr %2349, align 8, !tbaa !64
  %2366 = sext i32 %2365 to i64
  %2367 = getelementptr inbounds [2 x i16], ptr %2364, i64 %2366
  store i32 0, ptr %2367, align 4, !tbaa !5
  %2368 = add nuw nsw i64 %2362, 1
  %2369 = load i32, ptr %2345, align 4, !tbaa !39
  %2370 = sext i32 %2369 to i64
  %2371 = icmp slt i64 %2368, %2370
  br i1 %2371, label %2361, label %3629, !llvm.loop !246

2372:                                             ; preds = %2223
  %2373 = icmp eq i32 %2224, 0
  br i1 %2373, label %2374, label %3629

2374:                                             ; preds = %2209, %2234, %2333, %2372
  %2375 = phi ptr [ %2232, %2372 ], [ %2240, %2333 ], [ %2237, %2234 ], [ %2211, %2209 ]
  %2376 = phi ptr [ %2231, %2372 ], [ %2241, %2333 ], [ %2236, %2234 ], [ %2210, %2209 ]
  %2377 = phi i32 [ 268435456, %2372 ], [ %2334, %2333 ], [ 268435456, %2234 ], [ 268435456, %2209 ]
  %2378 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 1
  %2379 = load i32, ptr %2378, align 4, !tbaa !73
  %2380 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 62
  store i32 0, ptr %2380, align 4, !tbaa !207
  store i32 7, ptr %2170, align 8, !tbaa !49
  %2381 = load i32, ptr %15, align 16, !tbaa !152
  %2382 = sext i32 %2381 to i64
  %2383 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 37, i64 %2382
  %2384 = load ptr, ptr %2383, align 8, !tbaa !46
  %2385 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 3
  store ptr %2384, ptr %2385, align 16, !tbaa !219
  %2386 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 17
  %2387 = load i32, ptr %2386, align 16, !tbaa !220
  %2388 = call i32 @llvm.smin.i32(i32 %2387, i32 3)
  %2389 = call i32 @llvm.smax.i32(i32 %2388, i32 1)
  %2390 = add nsw i32 %2389, -1
  %2391 = zext i32 %2390 to i64
  %2392 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %2382, i64 %2391
  %2393 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 4
  store ptr %2392, ptr %2393, align 8, !tbaa !46
  %2394 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 18
  %2395 = load i32, ptr %2394, align 4, !tbaa !221
  %2396 = call i32 @llvm.smin.i32(i32 %2395, i32 3)
  %2397 = call i32 @llvm.smax.i32(i32 %2396, i32 1)
  %2398 = add nsw i32 %2397, -1
  %2399 = zext i32 %2398 to i64
  %2400 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 %2382, i64 %2399
  %2401 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 4, i64 1
  store ptr %2400, ptr %2401, align 16, !tbaa !46
  %2402 = load i32, ptr %2375, align 16, !tbaa !244
  %2403 = icmp eq i32 %2402, 0
  br i1 %2403, label %2454, label %2404

2404:                                             ; preds = %2374
  %2405 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %2406 = load ptr, ptr %2405, align 16, !tbaa !46
  %2407 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18
  %2408 = load ptr, ptr %2407, align 16, !tbaa !46
  %2409 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 25
  store i32 %2381, ptr %2409, align 4, !tbaa !247
  %2410 = and i32 %2379, 256
  %2411 = icmp eq i32 %2410, 0
  br i1 %2411, label %2448, label %2412

2412:                                             ; preds = %2404
  %2413 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %2414 = load ptr, ptr %2413, align 8, !tbaa !46
  %2415 = call i32 %2414(ptr noundef %2406, i32 noundef 16, ptr noundef %2408, i32 noundef 32) #17
  %2416 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 27, i64 0
  %2417 = load i32, ptr %2409, align 4, !tbaa !247
  %2418 = add nsw i32 %2417, %2415
  store i32 %2418, ptr %2409, align 4, !tbaa !247
  %2419 = load i32, ptr %15, align 16, !tbaa !152
  %2420 = add nsw i32 %2419, %2415
  store i32 %2420, ptr %2416, align 4, !tbaa !39
  %2421 = load ptr, ptr %2413, align 8, !tbaa !46
  %2422 = getelementptr inbounds i8, ptr %2406, i64 8
  %2423 = getelementptr inbounds i8, ptr %2408, i64 8
  %2424 = call i32 %2421(ptr noundef nonnull %2422, i32 noundef 16, ptr noundef nonnull %2423, i32 noundef 32) #17
  %2425 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 27, i64 1
  %2426 = load i32, ptr %2409, align 4, !tbaa !247
  %2427 = add nsw i32 %2426, %2424
  store i32 %2427, ptr %2409, align 4, !tbaa !247
  %2428 = load i32, ptr %15, align 16, !tbaa !152
  %2429 = add nsw i32 %2428, %2424
  store i32 %2429, ptr %2425, align 16, !tbaa !39
  %2430 = load ptr, ptr %2413, align 8, !tbaa !46
  %2431 = getelementptr inbounds i8, ptr %2406, i64 128
  %2432 = getelementptr inbounds i8, ptr %2408, i64 256
  %2433 = call i32 %2430(ptr noundef nonnull %2431, i32 noundef 16, ptr noundef nonnull %2432, i32 noundef 32) #17
  %2434 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 27, i64 2
  %2435 = load i32, ptr %2409, align 4, !tbaa !247
  %2436 = add nsw i32 %2435, %2433
  store i32 %2436, ptr %2409, align 4, !tbaa !247
  %2437 = load i32, ptr %15, align 16, !tbaa !152
  %2438 = add nsw i32 %2437, %2433
  store i32 %2438, ptr %2434, align 4, !tbaa !39
  %2439 = load ptr, ptr %2413, align 8, !tbaa !46
  %2440 = getelementptr inbounds i8, ptr %2406, i64 136
  %2441 = getelementptr inbounds i8, ptr %2408, i64 264
  %2442 = call i32 %2439(ptr noundef nonnull %2440, i32 noundef 16, ptr noundef nonnull %2441, i32 noundef 32) #17
  %2443 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 27, i64 3
  %2444 = load i32, ptr %2409, align 4, !tbaa !247
  %2445 = add nsw i32 %2444, %2442
  store i32 %2445, ptr %2409, align 4, !tbaa !247
  %2446 = load i32, ptr %15, align 16, !tbaa !152
  %2447 = add nsw i32 %2446, %2442
  store i32 %2447, ptr %2443, align 8, !tbaa !39
  br label %2454

2448:                                             ; preds = %2404
  %2449 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5
  %2450 = load ptr, ptr %2449, align 8, !tbaa !46
  %2451 = call i32 %2450(ptr noundef %2406, i32 noundef 16, ptr noundef %2408, i32 noundef 32) #17
  %2452 = load i32, ptr %2409, align 4, !tbaa !247
  %2453 = add nsw i32 %2452, %2451
  store i32 %2453, ptr %2409, align 4, !tbaa !247
  br label %2454

2454:                                             ; preds = %2448, %2412, %2374
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %2) #17
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %3) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #17
  store i32 16, ptr %4, align 4, !tbaa !39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  store i32 16, ptr %5, align 4, !tbaa !39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %7) #17
  %2455 = load i32, ptr %2376, align 4, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #17
  store i64 9223372034707292159, ptr %8, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #17
  %2456 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %2457 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 1
  %2458 = getelementptr inbounds [2 x i32], ptr %8, i64 0, i64 1
  %2459 = load <2 x i32>, ptr %2456, align 8, !tbaa !39
  %2460 = icmp sgt <2 x i32> %2459, <i32 1, i32 1>
  %2461 = insertelement <2 x ptr> poison, ptr %8, i64 0
  %2462 = insertelement <2 x ptr> %2461, ptr %2458, i64 1
  %2463 = select <2 x i1> %2460, <2 x ptr> %2462, <2 x ptr> zeroinitializer
  store <2 x ptr> %2463, ptr %9, align 16, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %10) #17
  store i32 0, ptr %10, align 16, !tbaa !222
  %2464 = load ptr, ptr %2385, align 16, !tbaa !219
  %2465 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 1
  store ptr %2464, ptr %2465, align 8, !tbaa !223
  %2466 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %2467 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 9
  %2468 = load <2 x i32>, ptr %2466, align 16, !tbaa !39
  store <2 x i32> %2468, ptr %2467, align 8, !tbaa !39
  %2469 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %2470 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 7
  %2471 = load <2 x ptr>, ptr %2469, align 16, !tbaa !46
  store <2 x ptr> %2471, ptr %2470, align 8, !tbaa !46
  %2472 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %2473 = load ptr, ptr %2472, align 16, !tbaa !46
  %2474 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 7, i64 2
  store ptr %2473, ptr %2474, align 8, !tbaa !46
  %2475 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22
  %2476 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2
  %2477 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2, i32 12
  store i32 2147483647, ptr %2477, align 8, !tbaa !191
  %2478 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23
  %2479 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 2
  %2480 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 2, i32 12
  store i32 2147483647, ptr %2480, align 8, !tbaa !199
  %2481 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 2
  %2482 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 5
  %2483 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 6
  %2484 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 5, i64 4
  %2485 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 8
  %2486 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 4
  %2487 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 3
  %2488 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 10
  %2489 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 12
  %2490 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %2491 = getelementptr inbounds %struct.x264_me_t, ptr %10, i64 0, i32 13
  %2492 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %2493 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 2, i32 13
  %2494 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 2, i32 13
  br label %2495

2495:                                             ; preds = %2592, %2454
  %2496 = phi i32 [ %2455, %2454 ], [ %2584, %2592 ]
  %2497 = phi i32 [ 0, %2454 ], [ %2586, %2592 ]
  %2498 = phi i32 [ 1, %2454 ], [ %2595, %2592 ]
  %2499 = icmp eq i32 %2498, 0
  %2500 = select i1 %2499, ptr %2475, ptr %2478
  %2501 = icmp ne i32 %2497, 0
  %2502 = icmp eq i32 %2498, 1
  %2503 = and i1 %2501, %2502
  %2504 = zext i1 %2503 to i32
  %2505 = zext i32 %2498 to i64
  %2506 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 %2505
  %2507 = load i32, ptr %2506, align 4, !tbaa !39
  %2508 = icmp sgt i32 %2507, %2504
  br i1 %2508, label %2509, label %2583

2509:                                             ; preds = %2495
  %2510 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 4, i64 %2505
  %2511 = getelementptr inbounds [2 x ptr], ptr %9, i64 0, i64 %2505
  %2512 = select i1 %2499, ptr %2476, ptr %2479
  %2513 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 %2505
  %2514 = call i1 @llvm.umin.i1(i1 %2501, i1 %2502)
  %2515 = zext i1 %2514 to i64
  %2516 = insertelement <2 x i1> poison, i1 %2499, i64 0
  %2517 = shufflevector <2 x i1> %2516, <2 x i1> poison, <2 x i32> zeroinitializer
  br label %2518

2518:                                             ; preds = %2576, %2509
  %2519 = phi i64 [ %2515, %2509 ], [ %2578, %2576 ]
  %2520 = phi i32 [ %2504, %2509 ], [ %2579, %2576 ]
  %2521 = phi i32 [ %2496, %2509 ], [ %2577, %2576 ]
  %2522 = icmp ne i32 %2521, 0
  %2523 = icmp ne i64 %2519, 0
  %2524 = and i1 %2502, %2523
  %2525 = and i1 %2524, %2522
  %2526 = trunc i64 %2519 to i32
  br i1 %2525, label %2583, label %2527

2527:                                             ; preds = %2518
  %2528 = load ptr, ptr %2510, align 8, !tbaa !46
  %2529 = getelementptr inbounds i16, ptr %2528, i64 %2519
  %2530 = load i16, ptr %2529, align 2, !tbaa !37
  %2531 = zext i16 %2530 to i32
  store i32 %2531, ptr %2481, align 16, !tbaa !224
  %2532 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 %2505, i64 %2519
  %2533 = load <4 x ptr>, ptr %2532, align 16, !tbaa !46
  %2534 = extractelement <4 x ptr> %2533, i64 0
  store ptr %2534, ptr %2483, align 16, !tbaa !227
  store <4 x ptr> %2533, ptr %2482, align 16, !tbaa !46
  %2535 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 %2505, i64 %2519, i64 4
  %2536 = load <2 x ptr>, ptr %2535, align 16, !tbaa !46
  store <2 x ptr> %2536, ptr %2484, align 16, !tbaa !46
  %2537 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 %2505, i64 %2519
  %2538 = load ptr, ptr %2537, align 8, !tbaa !46
  store ptr %2538, ptr %2485, align 16, !tbaa !225
  store ptr @weight_none, ptr %2486, align 8, !tbaa !228
  store i32 %2526, ptr %2487, align 4, !tbaa !226
  call void @x264_mb_predict_mv_16x16(ptr noundef nonnull %0, i32 noundef %2498, i32 noundef %2526, ptr noundef nonnull %2488) #17
  call void @x264_mb_predict_mv_ref16x16(ptr noundef nonnull %0, i32 noundef %2498, i32 noundef %2526, ptr noundef nonnull %7, ptr noundef nonnull %6) #17
  %2539 = load i32, ptr %6, align 4, !tbaa !39
  %2540 = load ptr, ptr %2511, align 8, !tbaa !46
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %10, ptr noundef nonnull %7, i32 noundef %2539, ptr noundef %2540) #17
  %2541 = load i32, ptr %2481, align 16, !tbaa !224
  %2542 = load i32, ptr %2489, align 8, !tbaa !230
  %2543 = add nsw i32 %2542, %2541
  store i32 %2543, ptr %2489, align 8, !tbaa !230
  %2544 = load i32, ptr %2477, align 8
  %2545 = load i32, ptr %2480, align 8
  %2546 = select i1 %2499, i32 %2544, i32 %2545
  %2547 = icmp slt i32 %2543, %2546
  br i1 %2547, label %2548, label %2551

2548:                                             ; preds = %2527
  %2549 = load ptr, ptr %2490, align 8, !tbaa !48
  %2550 = call ptr %2549(ptr noundef nonnull %2512, ptr noundef nonnull %10, i64 noundef 144) #17
  br label %2551

2551:                                             ; preds = %2548, %2527
  %2552 = load i32, ptr %2491, align 4, !tbaa !5
  %2553 = getelementptr inbounds %struct.x264_mb_analysis_list_t, ptr %2500, i64 0, i32 5, i64 %2519
  store i32 %2552, ptr %2553, align 4, !tbaa !5
  %2554 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48, i64 %2505, i64 %2519
  %2555 = load ptr, ptr %2554, align 8, !tbaa !46
  %2556 = load i32, ptr %2492, align 8, !tbaa !64
  %2557 = sext i32 %2556 to i64
  %2558 = getelementptr inbounds [2 x i16], ptr %2555, i64 %2557
  store i32 %2552, ptr %2558, align 4, !tbaa !5
  %2559 = icmp eq i64 %2519, 0
  %2560 = and i1 %2559, %2522
  br i1 %2560, label %2561, label %2576

2561:                                             ; preds = %2551
  %2562 = load <2 x i16>, ptr %2493, align 4
  %2563 = load <2 x i16>, ptr %2494, align 4
  %2564 = select <2 x i1> %2517, <2 x i16> %2562, <2 x i16> %2563
  %2565 = sext <2 x i16> %2564 to <2 x i32>
  %2566 = load <2 x i16>, ptr %2513, align 8, !tbaa !37
  %2567 = sext <2 x i16> %2566 to <2 x i32>
  %2568 = sub nsw <2 x i32> %2565, %2567
  %2569 = call <2 x i32> @llvm.abs.v2i32(<2 x i32> %2568, i1 true)
  %2570 = shufflevector <2 x i32> %2569, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>
  %2571 = add nuw nsw <2 x i32> %2570, %2569
  %2572 = extractelement <2 x i32> %2571, i64 0
  %2573 = icmp ult i32 %2572, 2
  %2574 = and i1 %2499, %2573
  %2575 = select i1 %2573, i32 %2521, i32 0
  br i1 %2574, label %2597, label %2576

2576:                                             ; preds = %2561, %2551
  %2577 = phi i32 [ %2521, %2551 ], [ %2575, %2561 ]
  %2578 = add nuw nsw i64 %2519, 1
  %2579 = add nuw nsw i32 %2520, 1
  %2580 = load i32, ptr %2506, align 4, !tbaa !39
  %2581 = trunc i64 %2578 to i32
  %2582 = icmp sgt i32 %2580, %2581
  br i1 %2582, label %2518, label %2583, !llvm.loop !248

2583:                                             ; preds = %2576, %2518, %2495
  %2584 = phi i32 [ %2496, %2495 ], [ %2577, %2576 ], [ %2521, %2518 ]
  %2585 = phi i32 [ %2504, %2495 ], [ %2579, %2576 ], [ %2526, %2518 ]
  %2586 = phi i32 [ %2497, %2495 ], [ %2497, %2576 ], [ 1, %2518 ]
  %2587 = icmp ne i32 %2586, 0
  %2588 = and i1 %2502, %2587
  br i1 %2588, label %2589, label %2592

2589:                                             ; preds = %2583
  %2590 = load i32, ptr %2457, align 4, !tbaa !39
  %2591 = icmp eq i32 %2585, %2590
  br i1 %2591, label %2598, label %2592

2592:                                             ; preds = %2589, %2583
  %2593 = and i1 %2499, %2587
  %2594 = add nsw i32 %2498, -1
  %2595 = select i1 %2593, i32 1, i32 %2594
  %2596 = icmp sgt i32 %2595, -1
  br i1 %2596, label %2495, label %2598

2597:                                             ; preds = %2561
  store i32 18, ptr %2170, align 8, !tbaa !49
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %2741

2598:                                             ; preds = %2592, %2589
  %2599 = load ptr, ptr %2490, align 8, !tbaa !48
  %2600 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3
  %2601 = call ptr %2599(ptr noundef nonnull %2600, ptr noundef nonnull %2476, i64 noundef 144) #17
  %2602 = load ptr, ptr %2490, align 8, !tbaa !48
  %2603 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3
  %2604 = call ptr %2602(ptr noundef nonnull %2603, ptr noundef nonnull %2479, i64 noundef 144) #17
  %2605 = load ptr, ptr %2393, align 8, !tbaa !46
  %2606 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 3
  %2607 = load i32, ptr %2606, align 4, !tbaa !249
  %2608 = sext i32 %2607 to i64
  %2609 = getelementptr inbounds i16, ptr %2605, i64 %2608
  %2610 = load i16, ptr %2609, align 2, !tbaa !37
  %2611 = zext i16 %2610 to i32
  %2612 = load ptr, ptr %2401, align 16, !tbaa !46
  %2613 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 3
  %2614 = load i32, ptr %2613, align 4, !tbaa !250
  %2615 = sext i32 %2614 to i64
  %2616 = getelementptr inbounds i16, ptr %2612, i64 %2615
  %2617 = load i16, ptr %2616, align 2, !tbaa !37
  %2618 = zext i16 %2617 to i32
  %2619 = add nuw nsw i32 %2618, %2611
  %2620 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 1
  %2621 = load ptr, ptr %2620, align 8, !tbaa !251
  %2622 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20
  %2623 = getelementptr inbounds [32 x [6 x ptr]], ptr %2622, i64 0, i64 %2608
  %2624 = load i32, ptr %2466, align 16, !tbaa !39
  %2625 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 13
  %2626 = load i16, ptr %2625, align 4, !tbaa !37
  %2627 = sext i16 %2626 to i32
  %2628 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 13, i64 1
  %2629 = load i16, ptr %2628, align 2, !tbaa !37
  %2630 = sext i16 %2629 to i32
  %2631 = call ptr %2621(ptr noundef nonnull %2, ptr noundef nonnull %4, ptr noundef nonnull %2623, i32 noundef %2624, i32 noundef %2627, i32 noundef %2630, i32 noundef 16, i32 noundef 16, ptr noundef nonnull @weight_none) #17
  %2632 = load ptr, ptr %2620, align 8, !tbaa !251
  %2633 = load i32, ptr %2613, align 4, !tbaa !250
  %2634 = sext i32 %2633 to i64
  %2635 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %2634
  %2636 = load i32, ptr %2466, align 16, !tbaa !39
  %2637 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 13
  %2638 = load i16, ptr %2637, align 4, !tbaa !37
  %2639 = sext i16 %2638 to i32
  %2640 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 13, i64 1
  %2641 = load i16, ptr %2640, align 2, !tbaa !37
  %2642 = sext i16 %2641 to i32
  %2643 = call ptr %2632(ptr noundef nonnull %3, ptr noundef nonnull %5, ptr noundef nonnull %2635, i32 noundef %2636, i32 noundef %2639, i32 noundef %2642, i32 noundef 16, i32 noundef 16, ptr noundef nonnull @weight_none) #17
  %2644 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3
  %2645 = load ptr, ptr %2644, align 8, !tbaa !46
  %2646 = load i32, ptr %4, align 4, !tbaa !39
  %2647 = load i32, ptr %5, align 4, !tbaa !39
  %2648 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %2649 = load ptr, ptr %2648, align 16, !tbaa !252
  %2650 = load i32, ptr %2606, align 4, !tbaa !249
  %2651 = sext i32 %2650 to i64
  %2652 = load i32, ptr %2613, align 4, !tbaa !250
  %2653 = sext i32 %2652 to i64
  %2654 = getelementptr inbounds [4 x i8], ptr %2649, i64 %2651, i64 %2653
  %2655 = load i8, ptr %2654, align 1, !tbaa !5
  %2656 = sext i8 %2655 to i32
  call void %2645(ptr noundef nonnull %2, i32 noundef 16, ptr noundef %2631, i32 noundef %2646, ptr noundef %2643, i32 noundef %2647, i32 noundef %2656) #17
  %2657 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5
  %2658 = load ptr, ptr %2657, align 8, !tbaa !46
  %2659 = load ptr, ptr %2469, align 16, !tbaa !46
  %2660 = call i32 %2658(ptr noundef %2659, i32 noundef 16, ptr noundef nonnull %2, i32 noundef 16) #17
  %2661 = add nsw i32 %2660, %2619
  %2662 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 11
  %2663 = load i32, ptr %2662, align 4, !tbaa !253
  %2664 = add nsw i32 %2661, %2663
  %2665 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 11
  %2666 = load i32, ptr %2665, align 4, !tbaa !254
  %2667 = add nsw i32 %2664, %2666
  %2668 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 24
  store i32 %2667, ptr %2668, align 16, !tbaa !255
  %2669 = load i32, ptr %2625, align 4, !tbaa !5
  %2670 = load i32, ptr %2637, align 4, !tbaa !5
  %2671 = or i32 %2670, %2669
  %2672 = icmp eq i32 %2671, 0
  br i1 %2672, label %2731, label %2673

2673:                                             ; preds = %2598
  %2674 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 1
  %2675 = load ptr, ptr %2674, align 8, !tbaa !256
  %2676 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 10
  %2677 = load i16, ptr %2676, align 16, !tbaa !37
  %2678 = sext i16 %2677 to i64
  %2679 = sub nsw i64 0, %2678
  %2680 = getelementptr inbounds i16, ptr %2675, i64 %2679
  %2681 = load i16, ptr %2680, align 2, !tbaa !37
  %2682 = zext i16 %2681 to i32
  %2683 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 10, i64 1
  %2684 = load i16, ptr %2683, align 2, !tbaa !37
  %2685 = sext i16 %2684 to i64
  %2686 = sub nsw i64 0, %2685
  %2687 = getelementptr inbounds i16, ptr %2675, i64 %2686
  %2688 = load i16, ptr %2687, align 2, !tbaa !37
  %2689 = zext i16 %2688 to i32
  %2690 = add nuw nsw i32 %2689, %2682
  %2691 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 1
  %2692 = load ptr, ptr %2691, align 8, !tbaa !257
  %2693 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 10
  %2694 = load i16, ptr %2693, align 16, !tbaa !37
  %2695 = sext i16 %2694 to i64
  %2696 = sub nsw i64 0, %2695
  %2697 = getelementptr inbounds i16, ptr %2692, i64 %2696
  %2698 = load i16, ptr %2697, align 2, !tbaa !37
  %2699 = zext i16 %2698 to i32
  %2700 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 10, i64 1
  %2701 = load i16, ptr %2700, align 2, !tbaa !37
  %2702 = sext i16 %2701 to i64
  %2703 = sub nsw i64 0, %2702
  %2704 = getelementptr inbounds i16, ptr %2692, i64 %2703
  %2705 = load i16, ptr %2704, align 2, !tbaa !37
  %2706 = zext i16 %2705 to i32
  %2707 = add nuw nsw i32 %2706, %2699
  %2708 = load ptr, ptr %2644, align 8, !tbaa !46
  %2709 = load i32, ptr %2606, align 4, !tbaa !249
  %2710 = sext i32 %2709 to i64
  %2711 = getelementptr inbounds [32 x [6 x ptr]], ptr %2622, i64 0, i64 %2710
  %2712 = load ptr, ptr %2711, align 16, !tbaa !46
  %2713 = load i32, ptr %2466, align 16, !tbaa !39
  %2714 = load i32, ptr %2613, align 4, !tbaa !250
  %2715 = sext i32 %2714 to i64
  %2716 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %2715
  %2717 = load ptr, ptr %2716, align 16, !tbaa !46
  %2718 = load ptr, ptr %2648, align 16, !tbaa !252
  %2719 = getelementptr inbounds [4 x i8], ptr %2718, i64 %2710, i64 %2715
  %2720 = load i8, ptr %2719, align 1, !tbaa !5
  %2721 = sext i8 %2720 to i32
  call void %2708(ptr noundef nonnull %2, i32 noundef 16, ptr noundef %2712, i32 noundef %2713, ptr noundef %2717, i32 noundef %2713, i32 noundef %2721) #17
  %2722 = load ptr, ptr %2657, align 8, !tbaa !46
  %2723 = load ptr, ptr %2469, align 16, !tbaa !46
  %2724 = call i32 %2722(ptr noundef %2723, i32 noundef 16, ptr noundef nonnull %2, i32 noundef 16) #17
  %2725 = add nuw nsw i32 %2690, %2619
  %2726 = add nuw nsw i32 %2725, %2707
  %2727 = add i32 %2726, %2724
  %2728 = load i32, ptr %2668, align 16, !tbaa !255
  %2729 = icmp slt i32 %2727, %2728
  br i1 %2729, label %2730, label %2731

2730:                                             ; preds = %2673
  store i32 0, ptr %2625, align 4, !tbaa !5
  store i32 0, ptr %2637, align 4, !tbaa !5
  store i32 %2690, ptr %2662, align 4, !tbaa !253
  store i32 %2707, ptr %2665, align 4, !tbaa !254
  br label %2731

2731:                                             ; preds = %2730, %2673, %2598
  %2732 = phi i32 [ %2728, %2673 ], [ %2727, %2730 ], [ %2667, %2598 ]
  %2733 = load i32, ptr %15, align 16, !tbaa !152
  %2734 = mul nsw i32 %2733, 5
  %2735 = add nsw i32 %2734, %2732
  store i32 %2735, ptr %2668, align 16, !tbaa !255
  %2736 = mul nsw i32 %2733, 3
  %2737 = load i32, ptr %2477, align 8, !tbaa !191
  %2738 = add nsw i32 %2737, %2736
  store i32 %2738, ptr %2477, align 8, !tbaa !191
  %2739 = load i32, ptr %2480, align 8, !tbaa !199
  %2740 = add nsw i32 %2739, %2736
  store i32 %2740, ptr %2480, align 8, !tbaa !199
  br label %2741

2741:                                             ; preds = %2597, %2731
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %10) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #17
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %7) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #17
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %3) #17
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %2) #17
  %2742 = load i32, ptr %2170, align 8, !tbaa !49
  %2743 = icmp eq i32 %2742, 18
  br i1 %2743, label %2744, label %2776

2744:                                             ; preds = %2741
  %2745 = load i32, ptr %2456, align 8, !tbaa !39
  %2746 = icmp sgt i32 %2745, 1
  br i1 %2746, label %2747, label %2749

2747:                                             ; preds = %2744
  %2748 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48
  br label %2754

2749:                                             ; preds = %2754, %2744
  %2750 = load i32, ptr %2457, align 4, !tbaa !39
  %2751 = icmp sgt i32 %2750, 1
  br i1 %2751, label %2752, label %3986

2752:                                             ; preds = %2749
  %2753 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48
  br label %2765

2754:                                             ; preds = %2747, %2754
  %2755 = phi i64 [ 1, %2747 ], [ %2761, %2754 ]
  %2756 = getelementptr inbounds [32 x ptr], ptr %2748, i64 0, i64 %2755
  %2757 = load ptr, ptr %2756, align 8, !tbaa !46
  %2758 = load i32, ptr %2492, align 8, !tbaa !64
  %2759 = sext i32 %2758 to i64
  %2760 = getelementptr inbounds [2 x i16], ptr %2757, i64 %2759
  store i32 0, ptr %2760, align 4, !tbaa !5
  %2761 = add nuw nsw i64 %2755, 1
  %2762 = load i32, ptr %2456, align 8, !tbaa !39
  %2763 = sext i32 %2762 to i64
  %2764 = icmp slt i64 %2761, %2763
  br i1 %2764, label %2754, label %2749, !llvm.loop !258

2765:                                             ; preds = %2752, %2765
  %2766 = phi i64 [ 1, %2752 ], [ %2772, %2765 ]
  %2767 = getelementptr inbounds [32 x ptr], ptr %2753, i64 0, i64 %2766
  %2768 = load ptr, ptr %2767, align 8, !tbaa !46
  %2769 = load i32, ptr %2492, align 8, !tbaa !64
  %2770 = sext i32 %2769 to i64
  %2771 = getelementptr inbounds [2 x i16], ptr %2768, i64 %2770
  store i32 0, ptr %2771, align 4, !tbaa !5
  %2772 = add nuw nsw i64 %2766, 1
  %2773 = load i32, ptr %2457, align 4, !tbaa !39
  %2774 = sext i32 %2773 to i64
  %2775 = icmp slt i64 %2772, %2774
  br i1 %2775, label %2765, label %3986, !llvm.loop !259

2776:                                             ; preds = %2741
  %2777 = load i32, ptr %2477, align 8, !tbaa !191
  %2778 = load i32, ptr %2480, align 8, !tbaa !199
  %2779 = icmp slt i32 %2778, %2777
  %2780 = call i32 @llvm.smin.i32(i32 %2778, i32 %2777)
  %2781 = select i1 %2779, i32 12, i32 8
  %2782 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 24
  %2783 = load i32, ptr %2782, align 16, !tbaa !255
  %2784 = icmp slt i32 %2783, %2780
  %2785 = call i32 @llvm.smin.i32(i32 %2783, i32 %2780)
  %2786 = select i1 %2784, i32 16, i32 %2781
  %2787 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 25
  %2788 = load i32, ptr %2787, align 4, !tbaa !247
  %2789 = icmp slt i32 %2788, %2785
  %2790 = call i32 @llvm.smin.i32(i32 %2788, i32 %2785)
  store i32 %2790, ptr %16, align 4
  %2791 = select i1 %2789, i32 7, i32 %2786
  %2792 = load i32, ptr %51, align 8, !tbaa !145
  %2793 = icmp eq i32 %2792, 0
  br i1 %2793, label %2813, label %2794

2794:                                             ; preds = %2776
  %2795 = mul nsw i32 %2790, 33
  %2796 = sdiv i32 %2795, 32
  %2797 = icmp sgt i32 %2788, %2796
  br i1 %2797, label %2813, label %2798

2798:                                             ; preds = %2794
  call fastcc void @x264_mb_analyse_b_rd(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %2790)
  %2799 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 34
  %2800 = load i32, ptr %2799, align 8, !tbaa !260
  %2801 = icmp slt i32 %2377, %2800
  %2802 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 33
  %2803 = load i32, ptr %2802, align 4
  %2804 = icmp slt i32 %2377, %2803
  %2805 = select i1 %2801, i1 %2804, i1 false
  %2806 = load i32, ptr %2475, align 16
  %2807 = icmp slt i32 %2377, %2806
  %2808 = select i1 %2805, i1 %2807, i1 false
  %2809 = load i32, ptr %2478, align 16
  %2810 = icmp slt i32 %2377, %2809
  %2811 = select i1 %2808, i1 %2810, i1 false
  br i1 %2811, label %2812, label %2813

2812:                                             ; preds = %2798
  store i32 18, ptr %2170, align 8, !tbaa !49
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %3986

2813:                                             ; preds = %2798, %2794, %2776
  %2814 = and i32 %2379, 256
  %2815 = icmp eq i32 %2814, 0
  br i1 %2815, label %3033, label %2816

2816:                                             ; preds = %2813
  %2817 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 13
  %2818 = load i32, ptr %2817, align 4, !tbaa !236
  %2819 = icmp eq i32 %2818, 0
  br i1 %2819, label %2821, label %2820

2820:                                             ; preds = %2816
  call fastcc void @x264_mb_analyse_inter_b8x8_mixed_ref(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %2822

2821:                                             ; preds = %2816
  call fastcc void @x264_mb_analyse_inter_b8x8(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %2822

2822:                                             ; preds = %2821, %2820
  %2823 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 26
  %2824 = load i32, ptr %2823, align 8, !tbaa !261
  %2825 = icmp slt i32 %2824, %2790
  br i1 %2825, label %2826, label %2827

2826:                                             ; preds = %2822
  store i32 %2824, ptr %16, align 4, !tbaa !39
  br label %2827

2827:                                             ; preds = %2826, %2822
  %2828 = phi i32 [ %2824, %2826 ], [ %2790, %2822 ]
  %2829 = phi i32 [ 17, %2826 ], [ %2791, %2822 ]
  %2830 = phi i32 [ 13, %2826 ], [ 16, %2822 ]
  %2831 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28
  %2832 = load i32, ptr %2831, align 4, !tbaa !39
  %2833 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 0, i64 1
  %2834 = load i32, ptr %2833, align 16, !tbaa !39
  %2835 = add nsw i32 %2834, %2832
  %2836 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 1, i64 0
  %2837 = load i32, ptr %2836, align 4, !tbaa !39
  %2838 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 1, i64 1
  %2839 = load i32, ptr %2838, align 16, !tbaa !39
  %2840 = add nsw i32 %2839, %2837
  %2841 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 2, i64 0
  %2842 = load i32, ptr %2841, align 4, !tbaa !39
  %2843 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 2, i64 1
  %2844 = load i32, ptr %2843, align 16, !tbaa !39
  %2845 = add nsw i32 %2844, %2842
  %2846 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0, i32 11
  %2847 = load i32, ptr %2846, align 4, !tbaa !231
  %2848 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0, i32 2
  %2849 = load i32, ptr %2848, align 16, !tbaa !224
  %2850 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 11
  %2851 = load i32, ptr %2850, align 4, !tbaa !231
  %2852 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 2
  %2853 = load i32, ptr %2852, align 16, !tbaa !224
  %2854 = add i32 %2847, 1
  %2855 = add i32 %2854, %2849
  %2856 = add i32 %2855, %2851
  %2857 = add i32 %2856, %2853
  %2858 = ashr i32 %2857, 1
  %2859 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 0, i32 11
  %2860 = load i32, ptr %2859, align 4, !tbaa !231
  %2861 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 0, i32 2
  %2862 = load i32, ptr %2861, align 16, !tbaa !224
  %2863 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 1, i32 11
  %2864 = load i32, ptr %2863, align 4, !tbaa !231
  %2865 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 1, i32 2
  %2866 = load i32, ptr %2865, align 16, !tbaa !224
  %2867 = add i32 %2860, 1
  %2868 = add i32 %2867, %2862
  %2869 = add i32 %2868, %2864
  %2870 = add i32 %2869, %2866
  %2871 = ashr i32 %2870, 1
  %2872 = add nsw i32 %2835, %2858
  %2873 = call i32 @llvm.smin.i32(i32 %2872, i32 268435456)
  %2874 = add nsw i32 %2840, %2871
  %2875 = icmp slt i32 %2874, %2873
  %2876 = call i32 @llvm.smin.i32(i32 %2874, i32 %2873)
  %2877 = add nsw i32 %2845, %2858
  %2878 = add nsw i32 %2877, %2871
  %2879 = icmp slt i32 %2878, %2876
  %2880 = call i32 @llvm.smin.i32(i32 %2878, i32 %2876)
  %2881 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 29, i64 0
  store i32 %2880, ptr %2881, align 4, !tbaa !39
  %2882 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 0, i64 2
  %2883 = load i32, ptr %2882, align 4, !tbaa !39
  %2884 = add nsw i32 %2883, %2832
  %2885 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 1, i64 2
  %2886 = load i32, ptr %2885, align 4, !tbaa !39
  %2887 = add nsw i32 %2886, %2837
  %2888 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 2, i64 2
  %2889 = load i32, ptr %2888, align 4, !tbaa !39
  %2890 = add nsw i32 %2889, %2842
  %2891 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 11
  %2892 = load i32, ptr %2891, align 4, !tbaa !231
  %2893 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 2
  %2894 = load i32, ptr %2893, align 16, !tbaa !224
  %2895 = add i32 %2855, %2892
  %2896 = add i32 %2895, %2894
  %2897 = ashr i32 %2896, 1
  %2898 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 2, i32 11
  %2899 = load i32, ptr %2898, align 4, !tbaa !231
  %2900 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 2, i32 2
  %2901 = load i32, ptr %2900, align 16, !tbaa !224
  %2902 = add i32 %2868, %2899
  %2903 = add i32 %2902, %2901
  %2904 = ashr i32 %2903, 1
  %2905 = add nsw i32 %2884, %2897
  %2906 = call i32 @llvm.smin.i32(i32 %2905, i32 268435456)
  %2907 = add nsw i32 %2887, %2904
  %2908 = icmp slt i32 %2907, %2906
  %2909 = call i32 @llvm.smin.i32(i32 %2907, i32 %2906)
  %2910 = add nsw i32 %2890, %2897
  %2911 = add nsw i32 %2910, %2904
  %2912 = icmp slt i32 %2911, %2909
  %2913 = call i32 @llvm.smin.i32(i32 %2911, i32 %2909)
  %2914 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 30, i64 0
  store i32 %2913, ptr %2914, align 4, !tbaa !39
  %2915 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 0, i64 3
  %2916 = load i32, ptr %2915, align 8, !tbaa !39
  %2917 = add nsw i32 %2916, %2883
  %2918 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 1, i64 3
  %2919 = load i32, ptr %2918, align 8, !tbaa !39
  %2920 = add nsw i32 %2919, %2886
  %2921 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 28, i64 2, i64 3
  %2922 = load i32, ptr %2921, align 8, !tbaa !39
  %2923 = add nsw i32 %2922, %2889
  %2924 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 11
  %2925 = load i32, ptr %2924, align 4, !tbaa !231
  %2926 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 2
  %2927 = load i32, ptr %2926, align 16, !tbaa !224
  %2928 = add i32 %2892, 1
  %2929 = add i32 %2928, %2894
  %2930 = add i32 %2929, %2925
  %2931 = add i32 %2930, %2927
  %2932 = ashr i32 %2931, 1
  %2933 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 3, i32 11
  %2934 = load i32, ptr %2933, align 4, !tbaa !231
  %2935 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 3, i32 2
  %2936 = load i32, ptr %2935, align 16, !tbaa !224
  %2937 = add i32 %2899, 1
  %2938 = add i32 %2937, %2901
  %2939 = add i32 %2938, %2934
  %2940 = add i32 %2939, %2936
  %2941 = ashr i32 %2940, 1
  %2942 = add nsw i32 %2917, %2932
  %2943 = call i32 @llvm.smin.i32(i32 %2942, i32 268435456)
  %2944 = add nsw i32 %2920, %2941
  %2945 = icmp slt i32 %2944, %2943
  %2946 = zext i1 %2945 to i64
  %2947 = call i32 @llvm.smin.i32(i32 %2944, i32 %2943)
  %2948 = add nsw i32 %2923, %2932
  %2949 = add nsw i32 %2948, %2941
  %2950 = icmp slt i32 %2949, %2947
  %2951 = select i1 %2950, i64 2, i64 %2946
  %2952 = call i32 @llvm.smin.i32(i32 %2949, i32 %2947)
  %2953 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 29, i64 1
  %2954 = add nsw i32 %2916, %2834
  %2955 = add nsw i32 %2919, %2839
  %2956 = add nsw i32 %2922, %2844
  %2957 = add i32 %2851, 1
  %2958 = add i32 %2957, %2853
  %2959 = add i32 %2958, %2925
  %2960 = add i32 %2959, %2927
  %2961 = ashr i32 %2960, 1
  %2962 = add i32 %2864, 1
  %2963 = add i32 %2962, %2866
  %2964 = add i32 %2963, %2934
  %2965 = add i32 %2964, %2936
  %2966 = ashr i32 %2965, 1
  %2967 = add nsw i32 %2954, %2961
  %2968 = call i32 @llvm.smin.i32(i32 %2967, i32 268435456)
  %2969 = add nsw i32 %2955, %2966
  %2970 = icmp slt i32 %2969, %2968
  %2971 = zext i1 %2970 to i64
  %2972 = call i32 @llvm.smin.i32(i32 %2969, i32 %2968)
  %2973 = add nsw i32 %2956, %2961
  %2974 = add nsw i32 %2973, %2966
  %2975 = icmp slt i32 %2974, %2972
  %2976 = select i1 %2975, i64 2, i64 %2971
  %2977 = call i32 @llvm.smin.i32(i32 %2974, i32 %2972)
  %2978 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 30, i64 1
  %2979 = select i1 %2875, i64 11, i64 8
  %2980 = select i1 %2879, i64 14, i64 %2979
  %2981 = add nuw nsw i64 %2980, %2951
  %2982 = load i32, ptr %15, align 16, !tbaa !152
  %2983 = getelementptr inbounds [17 x i8], ptr @i_mb_b16x8_cost_table, i64 0, i64 %2981
  %2984 = load i8, ptr %2983, align 1, !tbaa !5
  %2985 = zext i8 %2984 to i32
  %2986 = mul nsw i32 %2982, %2985
  %2987 = add nsw i32 %2986, %2952
  store i32 %2987, ptr %2953, align 16, !tbaa !39
  %2988 = add nsw i32 %2880, %2987
  %2989 = select i1 %2908, i64 11, i64 8
  %2990 = select i1 %2912, i64 14, i64 %2989
  %2991 = add nuw nsw i64 %2990, %2976
  %2992 = getelementptr inbounds [17 x i8], ptr @i_mb_b16x8_cost_table, i64 0, i64 %2991
  %2993 = load i8, ptr %2992, align 1, !tbaa !5
  %2994 = zext i8 %2993 to i32
  %2995 = mul nsw i32 %2982, %2994
  %2996 = add nsw i32 %2995, %2977
  store i32 %2996, ptr %2978, align 8, !tbaa !39
  %2997 = add nsw i32 %2913, %2996
  %2998 = icmp slt i32 %2988, %2997
  %2999 = icmp slt i32 %2988, %2828
  %3000 = select i1 %2998, i1 %2999, i1 false
  br i1 %3000, label %3001, label %3008

3001:                                             ; preds = %2827
  call fastcc void @x264_mb_analyse_inter_b16x8(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %2828)
  %3002 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 31
  %3003 = load i32, ptr %3002, align 4, !tbaa !262
  %3004 = icmp slt i32 %3003, %2828
  br i1 %3004, label %3005, label %3008

3005:                                             ; preds = %3001
  store i32 %3003, ptr %16, align 4, !tbaa !39
  %3006 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 40
  %3007 = load i32, ptr %3006, align 8, !tbaa !263
  br label %3008

3008:                                             ; preds = %3001, %3005, %2827
  %3009 = phi i32 [ %3003, %3005 ], [ %2828, %3001 ], [ %2828, %2827 ]
  %3010 = phi i32 [ %3007, %3005 ], [ %2829, %3001 ], [ %2829, %2827 ]
  %3011 = phi i32 [ 14, %3005 ], [ %2830, %3001 ], [ %2830, %2827 ]
  %3012 = icmp slt i32 %2997, %3009
  br i1 %3012, label %3013, label %3020

3013:                                             ; preds = %3008
  call fastcc void @x264_mb_analyse_inter_b8x16(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %3009)
  %3014 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 32
  %3015 = load i32, ptr %3014, align 16, !tbaa !264
  %3016 = icmp slt i32 %3015, %3009
  br i1 %3016, label %3017, label %3020

3017:                                             ; preds = %3013
  store i32 %3015, ptr %16, align 4, !tbaa !39
  %3018 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 41
  %3019 = load i32, ptr %3018, align 4, !tbaa !265
  br label %3020

3020:                                             ; preds = %3013, %3017, %3008
  %3021 = phi i32 [ %3015, %3017 ], [ %3009, %3013 ], [ %3009, %3008 ]
  %3022 = phi i32 [ %3019, %3017 ], [ %3010, %3013 ], [ %3010, %3008 ]
  %3023 = phi i32 [ 15, %3017 ], [ %3011, %3013 ], [ %3011, %3008 ]
  %3024 = icmp sge i32 %2988, %3021
  %3025 = or i1 %3024, %2998
  br i1 %3025, label %3033, label %3026

3026:                                             ; preds = %3020
  call fastcc void @x264_mb_analyse_inter_b16x8(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %3021)
  %3027 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 31
  %3028 = load i32, ptr %3027, align 4, !tbaa !262
  %3029 = icmp slt i32 %3028, %3021
  br i1 %3029, label %3030, label %3033

3030:                                             ; preds = %3026
  %3031 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 40
  %3032 = load i32, ptr %3031, align 8, !tbaa !263
  br label %3033

3033:                                             ; preds = %3020, %3030, %3026, %2813
  %3034 = phi i32 [ %2790, %2813 ], [ %3021, %3020 ], [ %3028, %3030 ], [ %3021, %3026 ]
  %3035 = phi i32 [ %2791, %2813 ], [ %3022, %3020 ], [ %3032, %3030 ], [ %3022, %3026 ]
  %3036 = phi i32 [ 16, %2813 ], [ %3023, %3020 ], [ 14, %3030 ], [ %3023, %3026 ]
  %3037 = load i32, ptr %51, align 8, !tbaa !145
  %3038 = icmp eq i32 %3037, 0
  br i1 %3038, label %3039, label %3269

3039:                                             ; preds = %3033
  %3040 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  %3041 = load i32, ptr %3040, align 8, !tbaa !201
  %3042 = icmp eq i32 %3041, 0
  br i1 %3042, label %3265, label %3043

3043:                                             ; preds = %3039
  switch i32 %3036, label %3265 [
    i32 16, label %3058
    i32 14, label %3048
    i32 15, label %3044
    i32 13, label %3052
  ]

3044:                                             ; preds = %3043
  %3045 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 39, i64 0
  %3046 = load i32, ptr %3045, align 16, !tbaa !39
  %3047 = icmp eq i32 %3046, 7
  br i1 %3047, label %3098, label %3094

3048:                                             ; preds = %3043
  %3049 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 38, i64 0
  %3050 = load i32, ptr %3049, align 8, !tbaa !39
  %3051 = icmp eq i32 %3050, 7
  br i1 %3051, label %3082, label %3078

3052:                                             ; preds = %3043
  %3053 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 26
  %3054 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %3055 = load i8, ptr %3054, align 1, !tbaa !5
  %3056 = icmp eq i8 %3055, 11
  %3057 = icmp eq i8 %3055, 12
  br i1 %3057, label %3145, label %3110

3058:                                             ; preds = %3043
  %3059 = load i32, ptr %15, align 16, !tbaa !152
  %3060 = mul i32 %3059, -3
  %3061 = load i32, ptr %2477, align 8, !tbaa !191
  %3062 = add i32 %3060, %3061
  store i32 %3062, ptr %2477, align 8, !tbaa !191
  %3063 = load i32, ptr %2480, align 8, !tbaa !199
  %3064 = add i32 %3063, %3060
  store i32 %3064, ptr %2480, align 8, !tbaa !199
  switch i32 %3035, label %3265 [
    i32 8, label %3065
    i32 12, label %3070
    i32 16, label %3075
  ]

3065:                                             ; preds = %3058
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %2476) #17
  %3066 = load i32, ptr %2477, align 8, !tbaa !191
  %3067 = load i32, ptr %15, align 16, !tbaa !152
  %3068 = mul nsw i32 %3067, 3
  %3069 = add nsw i32 %3068, %3066
  br label %3265

3070:                                             ; preds = %3058
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %2479) #17
  %3071 = load i32, ptr %2480, align 8, !tbaa !199
  %3072 = load i32, ptr %15, align 16, !tbaa !152
  %3073 = mul nsw i32 %3072, 3
  %3074 = add nsw i32 %3073, %3071
  br label %3265

3075:                                             ; preds = %3058
  %3076 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3076) #17
  %3077 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3077) #17
  br label %3265

3078:                                             ; preds = %3048
  %3079 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3079) #17
  %3080 = load i32, ptr %3049, align 8, !tbaa !39
  %3081 = icmp eq i32 %3080, 3
  br i1 %3081, label %3084, label %3082

3082:                                             ; preds = %3048, %3078
  %3083 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3083) #17
  br label %3084

3084:                                             ; preds = %3078, %3082
  %3085 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 38, i64 1
  %3086 = load i32, ptr %3085, align 4, !tbaa !39
  %3087 = icmp eq i32 %3086, 7
  br i1 %3087, label %3092, label %3088

3088:                                             ; preds = %3084
  %3089 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3089) #17
  %3090 = load i32, ptr %3085, align 4, !tbaa !39
  %3091 = icmp eq i32 %3090, 3
  br i1 %3091, label %3265, label %3092

3092:                                             ; preds = %3088, %3084
  %3093 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3093) #17
  br label %3265

3094:                                             ; preds = %3044
  %3095 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3095) #17
  %3096 = load i32, ptr %3045, align 16, !tbaa !39
  %3097 = icmp eq i32 %3096, 3
  br i1 %3097, label %3100, label %3098

3098:                                             ; preds = %3044, %3094
  %3099 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 0
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3099) #17
  br label %3100

3100:                                             ; preds = %3094, %3098
  %3101 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 39, i64 1
  %3102 = load i32, ptr %3101, align 4, !tbaa !39
  %3103 = icmp eq i32 %3102, 7
  br i1 %3103, label %3108, label %3104

3104:                                             ; preds = %3100
  %3105 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3105) #17
  %3106 = load i32, ptr %3101, align 4, !tbaa !39
  %3107 = icmp eq i32 %3106, 3
  br i1 %3107, label %3265, label %3108

3108:                                             ; preds = %3104, %3100
  %3109 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 1
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3109) #17
  br label %3265

3110:                                             ; preds = %3052
  %3111 = zext i8 %3055 to i64
  %3112 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %3111
  %3113 = load i8, ptr %3112, align 1, !tbaa !5
  %3114 = icmp eq i8 %3113, 0
  br i1 %3114, label %3128, label %3115

3115:                                             ; preds = %3110
  %3116 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0
  %3117 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0, i32 12
  %3118 = load i32, ptr %3117, align 8, !tbaa !230
  %3119 = load i32, ptr %15, align 16, !tbaa !152
  %3120 = mul nsw i32 %3119, 3
  %3121 = sub nsw i32 %3118, %3120
  store i32 %3121, ptr %3117, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3116) #17
  br i1 %3056, label %3128, label %3122

3122:                                             ; preds = %3115
  %3123 = load i32, ptr %3117, align 8, !tbaa !230
  %3124 = load i32, ptr %3053, align 8, !tbaa !261
  %3125 = sub i32 %3120, %3118
  %3126 = add i32 %3125, %3123
  %3127 = add nsw i32 %3126, %3124
  store i32 %3127, ptr %3053, align 8, !tbaa !261
  br label %3128

3128:                                             ; preds = %3115, %3122, %3110
  %3129 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3111
  %3130 = load i8, ptr %3129, align 1, !tbaa !5
  %3131 = icmp eq i8 %3130, 0
  br i1 %3131, label %3145, label %3132

3132:                                             ; preds = %3128
  %3133 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 0
  %3134 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 0, i32 12
  %3135 = load i32, ptr %3134, align 8, !tbaa !230
  %3136 = load i32, ptr %15, align 16, !tbaa !152
  %3137 = mul nsw i32 %3136, 3
  %3138 = sub nsw i32 %3135, %3137
  store i32 %3138, ptr %3134, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3133) #17
  br i1 %3056, label %3145, label %3139

3139:                                             ; preds = %3132
  %3140 = load i32, ptr %3134, align 8, !tbaa !230
  %3141 = load i32, ptr %3053, align 8, !tbaa !261
  %3142 = sub i32 %3137, %3135
  %3143 = add i32 %3142, %3140
  %3144 = add nsw i32 %3143, %3141
  store i32 %3144, ptr %3053, align 8, !tbaa !261
  br label %3145

3145:                                             ; preds = %3128, %3139, %3132, %3052
  %3146 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %3147 = load i8, ptr %3146, align 1, !tbaa !5
  %3148 = icmp eq i8 %3147, 11
  %3149 = icmp eq i8 %3147, 12
  br i1 %3149, label %3185, label %3150

3150:                                             ; preds = %3145
  %3151 = zext i8 %3147 to i64
  %3152 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %3151
  %3153 = load i8, ptr %3152, align 1, !tbaa !5
  %3154 = icmp eq i8 %3153, 0
  br i1 %3154, label %3168, label %3155

3155:                                             ; preds = %3150
  %3156 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1
  %3157 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 12
  %3158 = load i32, ptr %3157, align 8, !tbaa !230
  %3159 = load i32, ptr %15, align 16, !tbaa !152
  %3160 = mul nsw i32 %3159, 3
  %3161 = sub nsw i32 %3158, %3160
  store i32 %3161, ptr %3157, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3156) #17
  br i1 %3148, label %3168, label %3162

3162:                                             ; preds = %3155
  %3163 = load i32, ptr %3157, align 8, !tbaa !230
  %3164 = load i32, ptr %3053, align 8, !tbaa !261
  %3165 = sub i32 %3160, %3158
  %3166 = add i32 %3165, %3163
  %3167 = add nsw i32 %3166, %3164
  store i32 %3167, ptr %3053, align 8, !tbaa !261
  br label %3168

3168:                                             ; preds = %3162, %3155, %3150
  %3169 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3151
  %3170 = load i8, ptr %3169, align 1, !tbaa !5
  %3171 = icmp eq i8 %3170, 0
  br i1 %3171, label %3185, label %3172

3172:                                             ; preds = %3168
  %3173 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 1
  %3174 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 1, i32 12
  %3175 = load i32, ptr %3174, align 8, !tbaa !230
  %3176 = load i32, ptr %15, align 16, !tbaa !152
  %3177 = mul nsw i32 %3176, 3
  %3178 = sub nsw i32 %3175, %3177
  store i32 %3178, ptr %3174, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3173) #17
  br i1 %3148, label %3185, label %3179

3179:                                             ; preds = %3172
  %3180 = load i32, ptr %3174, align 8, !tbaa !230
  %3181 = load i32, ptr %3053, align 8, !tbaa !261
  %3182 = sub i32 %3177, %3175
  %3183 = add i32 %3182, %3180
  %3184 = add nsw i32 %3183, %3181
  store i32 %3184, ptr %3053, align 8, !tbaa !261
  br label %3185

3185:                                             ; preds = %3179, %3172, %3168, %3145
  %3186 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %3187 = load i8, ptr %3186, align 1, !tbaa !5
  %3188 = icmp eq i8 %3187, 11
  %3189 = icmp eq i8 %3187, 12
  br i1 %3189, label %3225, label %3190

3190:                                             ; preds = %3185
  %3191 = zext i8 %3187 to i64
  %3192 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %3191
  %3193 = load i8, ptr %3192, align 1, !tbaa !5
  %3194 = icmp eq i8 %3193, 0
  br i1 %3194, label %3208, label %3195

3195:                                             ; preds = %3190
  %3196 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2
  %3197 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 12
  %3198 = load i32, ptr %3197, align 8, !tbaa !230
  %3199 = load i32, ptr %15, align 16, !tbaa !152
  %3200 = mul nsw i32 %3199, 3
  %3201 = sub nsw i32 %3198, %3200
  store i32 %3201, ptr %3197, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3196) #17
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3195
  %3203 = load i32, ptr %3197, align 8, !tbaa !230
  %3204 = load i32, ptr %3053, align 8, !tbaa !261
  %3205 = sub i32 %3200, %3198
  %3206 = add i32 %3205, %3203
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3053, align 8, !tbaa !261
  br label %3208

3208:                                             ; preds = %3202, %3195, %3190
  %3209 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3191
  %3210 = load i8, ptr %3209, align 1, !tbaa !5
  %3211 = icmp eq i8 %3210, 0
  br i1 %3211, label %3225, label %3212

3212:                                             ; preds = %3208
  %3213 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 2
  %3214 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 2, i32 12
  %3215 = load i32, ptr %3214, align 8, !tbaa !230
  %3216 = load i32, ptr %15, align 16, !tbaa !152
  %3217 = mul nsw i32 %3216, 3
  %3218 = sub nsw i32 %3215, %3217
  store i32 %3218, ptr %3214, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3213) #17
  br i1 %3188, label %3225, label %3219

3219:                                             ; preds = %3212
  %3220 = load i32, ptr %3214, align 8, !tbaa !230
  %3221 = load i32, ptr %3053, align 8, !tbaa !261
  %3222 = sub i32 %3217, %3215
  %3223 = add i32 %3222, %3220
  %3224 = add nsw i32 %3223, %3221
  store i32 %3224, ptr %3053, align 8, !tbaa !261
  br label %3225

3225:                                             ; preds = %3219, %3212, %3208, %3185
  %3226 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %3227 = load i8, ptr %3226, align 1, !tbaa !5
  %3228 = icmp eq i8 %3227, 11
  %3229 = icmp eq i8 %3227, 12
  br i1 %3229, label %3265, label %3230

3230:                                             ; preds = %3225
  %3231 = zext i8 %3227 to i64
  %3232 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %3231
  %3233 = load i8, ptr %3232, align 1, !tbaa !5
  %3234 = icmp eq i8 %3233, 0
  br i1 %3234, label %3248, label %3235

3235:                                             ; preds = %3230
  %3236 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3
  %3237 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 12
  %3238 = load i32, ptr %3237, align 8, !tbaa !230
  %3239 = load i32, ptr %15, align 16, !tbaa !152
  %3240 = mul nsw i32 %3239, 3
  %3241 = sub nsw i32 %3238, %3240
  store i32 %3241, ptr %3237, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3236) #17
  br i1 %3228, label %3248, label %3242

3242:                                             ; preds = %3235
  %3243 = load i32, ptr %3237, align 8, !tbaa !230
  %3244 = load i32, ptr %3053, align 8, !tbaa !261
  %3245 = sub i32 %3240, %3238
  %3246 = add i32 %3245, %3243
  %3247 = add nsw i32 %3246, %3244
  store i32 %3247, ptr %3053, align 8, !tbaa !261
  br label %3248

3248:                                             ; preds = %3242, %3235, %3230
  %3249 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3231
  %3250 = load i8, ptr %3249, align 1, !tbaa !5
  %3251 = icmp eq i8 %3250, 0
  br i1 %3251, label %3265, label %3252

3252:                                             ; preds = %3248
  %3253 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 3
  %3254 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 3, i32 12
  %3255 = load i32, ptr %3254, align 8, !tbaa !230
  %3256 = load i32, ptr %15, align 16, !tbaa !152
  %3257 = mul nsw i32 %3256, 3
  %3258 = sub nsw i32 %3255, %3257
  store i32 %3258, ptr %3254, align 8, !tbaa !230
  call void @x264_me_refine_qpel(ptr noundef nonnull %0, ptr noundef nonnull %3253) #17
  br i1 %3228, label %3265, label %3259

3259:                                             ; preds = %3252
  %3260 = load i32, ptr %3254, align 8, !tbaa !230
  %3261 = load i32, ptr %3053, align 8, !tbaa !261
  %3262 = sub i32 %3257, %3255
  %3263 = add i32 %3262, %3260
  %3264 = add nsw i32 %3263, %3261
  store i32 %3264, ptr %3053, align 8, !tbaa !261
  br label %3265

3265:                                             ; preds = %3225, %3248, %3252, %3259, %3104, %3108, %3088, %3092, %3043, %3058, %3070, %3075, %3065, %3039
  %3266 = phi i32 [ %3034, %3043 ], [ %3034, %3058 ], [ %3074, %3070 ], [ %3034, %3075 ], [ %3069, %3065 ], [ %3034, %3039 ], [ %3034, %3092 ], [ %3034, %3088 ], [ %3034, %3108 ], [ %3034, %3104 ], [ %3034, %3259 ], [ %3034, %3252 ], [ %3034, %3248 ], [ %3034, %3225 ]
  %3267 = load i32, ptr %51, align 8, !tbaa !145
  %3268 = icmp eq i32 %3267, 0
  br i1 %3268, label %3314, label %3269

3269:                                             ; preds = %3033, %3265
  %3270 = phi i32 [ %3266, %3265 ], [ %3034, %3033 ]
  call fastcc void @x264_mb_analyse_b_rd(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %3270)
  %3271 = load i32, ptr %2475, align 16, !tbaa !190
  %3272 = icmp slt i32 %3271, %2377
  %3273 = call i32 @llvm.smin.i32(i32 %3271, i32 %2377)
  store i32 %3273, ptr %16, align 4
  %3274 = select i1 %3272, i32 8, i32 18
  %3275 = load i32, ptr %2478, align 16, !tbaa !198
  %3276 = icmp slt i32 %3275, %3273
  %3277 = call i32 @llvm.smin.i32(i32 %3275, i32 %3273)
  %3278 = select i1 %3276, i32 12, i32 %3274
  %3279 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 33
  %3280 = load i32, ptr %3279, align 4, !tbaa !266
  %3281 = icmp slt i32 %3280, %3277
  %3282 = call i32 @llvm.smin.i32(i32 %3280, i32 %3277)
  %3283 = select i1 %3281, i32 16, i32 %3278
  %3284 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 34
  %3285 = load i32, ptr %3284, align 8, !tbaa !260
  %3286 = icmp slt i32 %3285, %3282
  %3287 = call i32 @llvm.smin.i32(i32 %3285, i32 %3282)
  %3288 = select i1 %3286, i32 7, i32 %3283
  %3289 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 35
  %3290 = load i32, ptr %3289, align 4, !tbaa !193
  %3291 = icmp slt i32 %3290, %3287
  %3292 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 40
  %3293 = load i32, ptr %3292, align 8
  %3294 = call i32 @llvm.smin.i32(i32 %3290, i32 %3287)
  %3295 = select i1 %3291, i32 %3293, i32 %3288
  %3296 = select i1 %3291, i32 14, i32 16
  %3297 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 36
  %3298 = load i32, ptr %3297, align 16, !tbaa !192
  %3299 = icmp slt i32 %3298, %3294
  br i1 %3299, label %3300, label %3303

3300:                                             ; preds = %3269
  store i32 %3298, ptr %16, align 4, !tbaa !39
  %3301 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 41
  %3302 = load i32, ptr %3301, align 4, !tbaa !265
  br label %3303

3303:                                             ; preds = %3300, %3269
  %3304 = phi i32 [ %3298, %3300 ], [ %3294, %3269 ]
  %3305 = phi i32 [ %3302, %3300 ], [ %3295, %3269 ]
  %3306 = phi i32 [ 15, %3300 ], [ %3296, %3269 ]
  %3307 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 37
  %3308 = load i32, ptr %3307, align 4, !tbaa !194
  %3309 = icmp slt i32 %3308, %3304
  %3310 = call i32 @llvm.smin.i32(i32 %3308, i32 %3304)
  %3311 = select i1 %3309, i32 17, i32 %3305
  %3312 = select i1 %3309, i32 13, i32 %3306
  store i32 %3311, ptr %2170, align 8, !tbaa !49
  %3313 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 %3312, ptr %3313, align 4, !tbaa !50
  br label %3314

3314:                                             ; preds = %3303, %3265
  %3315 = phi i32 [ %3310, %3303 ], [ %3266, %3265 ]
  %3316 = phi i32 [ %3270, %3303 ], [ %3266, %3265 ]
  %3317 = phi i32 [ %3311, %3303 ], [ %3035, %3265 ]
  %3318 = phi i32 [ %3312, %3303 ], [ %3036, %3265 ]
  call fastcc void @x264_mb_analyse_intra(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %3316)
  %3319 = load i32, ptr %51, align 8, !tbaa !145
  %3320 = icmp eq i32 %3319, 0
  br i1 %3320, label %3370, label %3321

3321:                                             ; preds = %3314
  %3322 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %3323 = load ptr, ptr %3322, align 16, !tbaa !66
  %3324 = getelementptr inbounds %struct.x264_pps_t, ptr %3323, i64 0, i32 15
  %3325 = load i32, ptr %3324, align 4, !tbaa !67
  %3326 = icmp eq i32 %3325, 0
  br i1 %3326, label %3365, label %3327

3327:                                             ; preds = %3321
  %3328 = load i32, ptr %2170, align 8, !tbaa !49
  %3329 = icmp eq i32 %3328, 5
  br i1 %3329, label %3335, label %3330

3330:                                             ; preds = %3327
  %3331 = sext i32 %3328 to i64
  %3332 = getelementptr inbounds [19 x i8], ptr @x264_mb_transform_8x8_allowed.partition_tab, i64 0, i64 %3331
  %3333 = load i8, ptr %3332, align 1, !tbaa !5
  %3334 = zext i8 %3333 to i32
  br label %3340

3335:                                             ; preds = %3327
  %3336 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %3337 = load i32, ptr %3336, align 16, !tbaa !5
  %3338 = icmp eq i32 %3337, 50529027
  %3339 = zext i1 %3338 to i32
  br label %3340

3340:                                             ; preds = %3335, %3330
  %3341 = phi i32 [ %3334, %3330 ], [ %3339, %3335 ]
  %3342 = icmp eq i32 %3341, 0
  br i1 %3342, label %3365, label %3343

3343:                                             ; preds = %3340
  %3344 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 2
  %3345 = load i32, ptr %3344, align 8, !tbaa !209
  %3346 = icmp eq i32 %3345, 0
  br i1 %3346, label %3365, label %3347

3347:                                             ; preds = %3343
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  %3348 = load i32, ptr %105, align 4, !tbaa !51
  %3349 = xor i32 %3348, 1
  store i32 %3349, ptr %105, align 4, !tbaa !51
  %3350 = load i32, ptr %65, align 4, !tbaa !153
  %3351 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %3350)
  %3352 = icmp slt i32 %3315, %3351
  br i1 %3352, label %3362, label %3353

3353:                                             ; preds = %3347
  %3354 = icmp sgt i32 %3315, 0
  br i1 %3354, label %3355, label %3365

3355:                                             ; preds = %3353
  %3356 = sext i32 %3316 to i64
  %3357 = sext i32 %3351 to i64
  %3358 = mul nsw i64 %3357, %3356
  %3359 = zext i32 %3315 to i64
  %3360 = sdiv i64 %3358, %3359
  %3361 = trunc i64 %3360 to i32
  br label %3365

3362:                                             ; preds = %3347
  %3363 = load i32, ptr %105, align 4, !tbaa !51
  %3364 = xor i32 %3363, 1
  store i32 %3364, ptr %105, align 4, !tbaa !51
  br label %3365

3365:                                             ; preds = %3353, %3355, %3321, %3340, %3343, %3362
  %3366 = phi i32 [ %3315, %3321 ], [ %3315, %3340 ], [ %3315, %3343 ], [ %3315, %3362 ], [ %3351, %3355 ], [ %3351, %3353 ]
  %3367 = phi i32 [ %3316, %3321 ], [ %3316, %3340 ], [ %3316, %3343 ], [ %3316, %3362 ], [ %3361, %3355 ], [ %3316, %3353 ]
  %3368 = mul nsw i32 %3367, 17
  %3369 = sdiv i32 %3368, 16
  call fastcc void @x264_intra_rd(ptr noundef nonnull %0, ptr noundef nonnull %15, i32 noundef %3369)
  br label %3370

3370:                                             ; preds = %3365, %3314
  %3371 = phi i32 [ %3366, %3365 ], [ %3315, %3314 ]
  %3372 = load i32, ptr %110, align 8, !tbaa !161
  %3373 = icmp slt i32 %3372, %3371
  %3374 = call i32 @llvm.smin.i32(i32 %3372, i32 %3371)
  %3375 = select i1 %3373, i32 2, i32 %3317
  %3376 = load i32, ptr %109, align 4, !tbaa !160
  %3377 = icmp slt i32 %3376, %3374
  %3378 = call i32 @llvm.smin.i32(i32 %3376, i32 %3374)
  %3379 = select i1 %3377, i32 1, i32 %3375
  %3380 = load i32, ptr %108, align 4, !tbaa !159
  %3381 = icmp slt i32 %3380, %3378
  %3382 = call i32 @llvm.smin.i32(i32 %3380, i32 %3378)
  store i32 %3382, ptr %16, align 4
  %3383 = select i1 %3381, i32 0, i32 %3379
  %3384 = load i32, ptr %152, align 8, !tbaa !162
  %3385 = icmp slt i32 %3384, %3382
  br i1 %3385, label %3386, label %3388

3386:                                             ; preds = %3370
  store i32 %3384, ptr %16, align 4, !tbaa !39
  store i32 3, ptr %2170, align 8, !tbaa !49
  %3387 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 %3318, ptr %3387, align 4, !tbaa !50
  br label %3395

3388:                                             ; preds = %3370
  store i32 %3383, ptr %2170, align 8, !tbaa !49
  %3389 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 %3318, ptr %3389, align 4, !tbaa !50
  %3390 = load i32, ptr %51, align 8, !tbaa !145
  %3391 = icmp sgt i32 %3390, 1
  %3392 = icmp ult i32 %3383, 3
  %3393 = select i1 %3391, i1 %3392, i1 false
  br i1 %3393, label %3394, label %3395

3394:                                             ; preds = %3388
  call fastcc void @x264_intra_rd_refine(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %3395

3395:                                             ; preds = %3386, %3394, %3388
  %3396 = phi i32 [ %3384, %3386 ], [ %3382, %3394 ], [ %3382, %3388 ]
  %3397 = phi i32 [ 3, %3386 ], [ %3383, %3394 ], [ %3383, %3388 ]
  %3398 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  %3399 = load i32, ptr %3398, align 8, !tbaa !201
  %3400 = icmp sgt i32 %3399, 4
  br i1 %3400, label %3401, label %3402

3401:                                             ; preds = %3395
  call fastcc void @x264_refine_bidir(ptr noundef nonnull %0, ptr noundef nonnull %15)
  br label %3402

3402:                                             ; preds = %3401, %3395
  %3403 = load i32, ptr %51, align 8, !tbaa !145
  %3404 = icmp sgt i32 %3403, 1
  %3405 = icmp sgt i32 %3397, 7
  %3406 = select i1 %3404, i1 %3405, i1 false
  %3407 = icmp slt i32 %3397, 18
  %3408 = select i1 %3406, i1 %3407, i1 false
  br i1 %3408, label %3409, label %3629

3409:                                             ; preds = %3402
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  switch i32 %3318, label %3629 [
    i32 16, label %3428
    i32 14, label %3421
    i32 15, label %3414
    i32 13, label %3410
  ]

3410:                                             ; preds = %3409
  %3411 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %3412 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %3413 = load i8, ptr %3412, align 1, !tbaa !5
  switch i8 %3413, label %3560 [
    i8 3, label %3540
    i8 7, label %3543
    i8 11, label %3546
  ]

3414:                                             ; preds = %3409
  %3415 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %3416 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 39, i64 0
  %3417 = load i32, ptr %3416, align 16, !tbaa !39
  %3418 = trunc i32 %3417 to i8
  %3419 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  store i8 %3418, ptr %3419, align 1, !tbaa !5
  %3420 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  store i8 %3418, ptr %3420, align 1, !tbaa !5
  switch i32 %3417, label %3514 [
    i32 3, label %3494
    i32 7, label %3497
    i32 11, label %3500
  ]

3421:                                             ; preds = %3409
  %3422 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %3423 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 38, i64 0
  %3424 = load i32, ptr %3423, align 8, !tbaa !39
  %3425 = trunc i32 %3424 to i8
  %3426 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  store i8 %3425, ptr %3426, align 1, !tbaa !5
  %3427 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  store i8 %3425, ptr %3427, align 1, !tbaa !5
  switch i32 %3424, label %3468 [
    i32 3, label %3448
    i32 7, label %3451
    i32 11, label %3454
  ]

3428:                                             ; preds = %3409
  switch i32 %3397, label %3629 [
    i32 8, label %3429
    i32 12, label %3431
    i32 16, label %3433
  ]

3429:                                             ; preds = %3428
  store i32 %3396, ptr %2477, align 8, !tbaa !191
  %3430 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2476, i32 noundef %3430, i32 noundef 0, i32 noundef 0) #17
  br label %3629

3431:                                             ; preds = %3428
  store i32 %3396, ptr %2480, align 8, !tbaa !199
  %3432 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %2479, i32 noundef %3432, i32 noundef 0, i32 noundef 1) #17
  br label %3629

3433:                                             ; preds = %3428
  %3434 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %3435 = load ptr, ptr %3434, align 16, !tbaa !252
  %3436 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3
  %3437 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 3, i32 3
  %3438 = load i32, ptr %3437, align 4, !tbaa !249
  %3439 = sext i32 %3438 to i64
  %3440 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3
  %3441 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 3, i32 3
  %3442 = load i32, ptr %3441, align 4, !tbaa !250
  %3443 = sext i32 %3442 to i64
  %3444 = getelementptr inbounds [4 x i8], ptr %3435, i64 %3439, i64 %3443
  %3445 = load i8, ptr %3444, align 1, !tbaa !5
  %3446 = sext i8 %3445 to i32
  %3447 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3436, ptr noundef nonnull %3440, i32 noundef %3446, i32 noundef 0, i32 noundef %3447) #17
  br label %3629

3448:                                             ; preds = %3421
  %3449 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 0
  %3450 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3449, i32 noundef %3450, i32 noundef 0, i32 noundef 0) #17
  br label %3468

3451:                                             ; preds = %3421
  %3452 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 0
  %3453 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3452, i32 noundef %3453, i32 noundef 0, i32 noundef 1) #17
  br label %3468

3454:                                             ; preds = %3421
  %3455 = load ptr, ptr %3422, align 16, !tbaa !252
  %3456 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 0
  %3457 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 0, i32 3
  %3458 = load i32, ptr %3457, align 4, !tbaa !226
  %3459 = sext i32 %3458 to i64
  %3460 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 0
  %3461 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 0, i32 3
  %3462 = load i32, ptr %3461, align 4, !tbaa !226
  %3463 = sext i32 %3462 to i64
  %3464 = getelementptr inbounds [4 x i8], ptr %3455, i64 %3459, i64 %3463
  %3465 = load i8, ptr %3464, align 1, !tbaa !5
  %3466 = sext i8 %3465 to i32
  %3467 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3456, ptr noundef nonnull %3460, i32 noundef %3466, i32 noundef 0, i32 noundef %3467) #17
  br label %3468

3468:                                             ; preds = %3421, %3448, %3454, %3451
  %3469 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 38, i64 1
  %3470 = load i32, ptr %3469, align 4, !tbaa !39
  %3471 = trunc i32 %3470 to i8
  %3472 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  store i8 %3471, ptr %3472, align 1, !tbaa !5
  %3473 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  store i8 %3471, ptr %3473, align 1, !tbaa !5
  switch i32 %3470, label %3629 [
    i32 3, label %3491
    i32 7, label %3488
    i32 11, label %3474
  ]

3474:                                             ; preds = %3468
  %3475 = load ptr, ptr %3422, align 16, !tbaa !252
  %3476 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1
  %3477 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1, i32 3
  %3478 = load i32, ptr %3477, align 4, !tbaa !226
  %3479 = sext i32 %3478 to i64
  %3480 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 1
  %3481 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 1, i32 3
  %3482 = load i32, ptr %3481, align 4, !tbaa !226
  %3483 = sext i32 %3482 to i64
  %3484 = getelementptr inbounds [4 x i8], ptr %3475, i64 %3479, i64 %3483
  %3485 = load i8, ptr %3484, align 1, !tbaa !5
  %3486 = sext i8 %3485 to i32
  %3487 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3476, ptr noundef nonnull %3480, i32 noundef %3486, i32 noundef 2, i32 noundef %3487) #17
  br label %3629

3488:                                             ; preds = %3468
  %3489 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 16, i64 1
  %3490 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3489, i32 noundef %3490, i32 noundef 8, i32 noundef 1) #17
  br label %3629

3491:                                             ; preds = %3468
  %3492 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 16, i64 1
  %3493 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3492, i32 noundef %3493, i32 noundef 8, i32 noundef 0) #17
  br label %3629

3494:                                             ; preds = %3414
  %3495 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 0
  %3496 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3495, i32 noundef %3496, i32 noundef 0, i32 noundef 0) #17
  br label %3514

3497:                                             ; preds = %3414
  %3498 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 0
  %3499 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3498, i32 noundef %3499, i32 noundef 0, i32 noundef 1) #17
  br label %3514

3500:                                             ; preds = %3414
  %3501 = load ptr, ptr %3415, align 16, !tbaa !252
  %3502 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 0
  %3503 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 0, i32 3
  %3504 = load i32, ptr %3503, align 4, !tbaa !226
  %3505 = sext i32 %3504 to i64
  %3506 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 0
  %3507 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 0, i32 3
  %3508 = load i32, ptr %3507, align 4, !tbaa !226
  %3509 = sext i32 %3508 to i64
  %3510 = getelementptr inbounds [4 x i8], ptr %3501, i64 %3505, i64 %3509
  %3511 = load i8, ptr %3510, align 1, !tbaa !5
  %3512 = sext i8 %3511 to i32
  %3513 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3502, ptr noundef nonnull %3506, i32 noundef %3512, i32 noundef 0, i32 noundef %3513) #17
  br label %3514

3514:                                             ; preds = %3414, %3494, %3500, %3497
  %3515 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 39, i64 1
  %3516 = load i32, ptr %3515, align 4, !tbaa !39
  %3517 = trunc i32 %3516 to i8
  %3518 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  store i8 %3517, ptr %3518, align 1, !tbaa !5
  %3519 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  store i8 %3517, ptr %3519, align 1, !tbaa !5
  switch i32 %3516, label %3629 [
    i32 3, label %3537
    i32 7, label %3534
    i32 11, label %3520
  ]

3520:                                             ; preds = %3514
  %3521 = load ptr, ptr %3415, align 16, !tbaa !252
  %3522 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1
  %3523 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1, i32 3
  %3524 = load i32, ptr %3523, align 4, !tbaa !226
  %3525 = sext i32 %3524 to i64
  %3526 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 1
  %3527 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 1, i32 3
  %3528 = load i32, ptr %3527, align 4, !tbaa !226
  %3529 = sext i32 %3528 to i64
  %3530 = getelementptr inbounds [4 x i8], ptr %3521, i64 %3525, i64 %3529
  %3531 = load i8, ptr %3530, align 1, !tbaa !5
  %3532 = sext i8 %3531 to i32
  %3533 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3522, ptr noundef nonnull %3526, i32 noundef %3532, i32 noundef 1, i32 noundef %3533) #17
  br label %3629

3534:                                             ; preds = %3514
  %3535 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 19, i64 1
  %3536 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3535, i32 noundef %3536, i32 noundef 4, i32 noundef 1) #17
  br label %3629

3537:                                             ; preds = %3514
  %3538 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 19, i64 1
  %3539 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3538, i32 noundef %3539, i32 noundef 4, i32 noundef 0) #17
  br label %3629

3540:                                             ; preds = %3410
  %3541 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0
  %3542 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3541, i32 noundef %3542, i32 noundef 0, i32 noundef 0) #17
  br label %3560

3543:                                             ; preds = %3410
  %3544 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 0
  %3545 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3544, i32 noundef %3545, i32 noundef 0, i32 noundef 1) #17
  br label %3560

3546:                                             ; preds = %3410
  %3547 = load ptr, ptr %3411, align 16, !tbaa !252
  %3548 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0
  %3549 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 0, i32 3
  %3550 = load i32, ptr %3549, align 4, !tbaa !226
  %3551 = sext i32 %3550 to i64
  %3552 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 0
  %3553 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 0, i32 3
  %3554 = load i32, ptr %3553, align 4, !tbaa !226
  %3555 = sext i32 %3554 to i64
  %3556 = getelementptr inbounds [4 x i8], ptr %3547, i64 %3551, i64 %3555
  %3557 = load i8, ptr %3556, align 1, !tbaa !5
  %3558 = sext i8 %3557 to i32
  %3559 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3548, ptr noundef nonnull %3552, i32 noundef %3558, i32 noundef 0, i32 noundef %3559) #17
  br label %3560

3560:                                             ; preds = %3410, %3540, %3546, %3543
  %3561 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %3562 = load i8, ptr %3561, align 1, !tbaa !5
  switch i8 %3562, label %3583 [
    i8 3, label %3580
    i8 7, label %3577
    i8 11, label %3563
  ]

3563:                                             ; preds = %3560
  %3564 = load ptr, ptr %3411, align 16, !tbaa !252
  %3565 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1
  %3566 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1, i32 3
  %3567 = load i32, ptr %3566, align 4, !tbaa !226
  %3568 = sext i32 %3567 to i64
  %3569 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 1
  %3570 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 1, i32 3
  %3571 = load i32, ptr %3570, align 4, !tbaa !226
  %3572 = sext i32 %3571 to i64
  %3573 = getelementptr inbounds [4 x i8], ptr %3564, i64 %3568, i64 %3572
  %3574 = load i8, ptr %3573, align 1, !tbaa !5
  %3575 = sext i8 %3574 to i32
  %3576 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3565, ptr noundef nonnull %3569, i32 noundef %3575, i32 noundef 1, i32 noundef %3576) #17
  br label %3583

3577:                                             ; preds = %3560
  %3578 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 1
  %3579 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3578, i32 noundef %3579, i32 noundef 4, i32 noundef 1) #17
  br label %3583

3580:                                             ; preds = %3560
  %3581 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 1
  %3582 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3581, i32 noundef %3582, i32 noundef 4, i32 noundef 0) #17
  br label %3583

3583:                                             ; preds = %3580, %3577, %3563, %3560
  %3584 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %3585 = load i8, ptr %3584, align 1, !tbaa !5
  switch i8 %3585, label %3606 [
    i8 3, label %3603
    i8 7, label %3600
    i8 11, label %3586
  ]

3586:                                             ; preds = %3583
  %3587 = load ptr, ptr %3411, align 16, !tbaa !252
  %3588 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2
  %3589 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2, i32 3
  %3590 = load i32, ptr %3589, align 4, !tbaa !226
  %3591 = sext i32 %3590 to i64
  %3592 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 2
  %3593 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 2, i32 3
  %3594 = load i32, ptr %3593, align 4, !tbaa !226
  %3595 = sext i32 %3594 to i64
  %3596 = getelementptr inbounds [4 x i8], ptr %3587, i64 %3591, i64 %3595
  %3597 = load i8, ptr %3596, align 1, !tbaa !5
  %3598 = sext i8 %3597 to i32
  %3599 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3588, ptr noundef nonnull %3592, i32 noundef %3598, i32 noundef 2, i32 noundef %3599) #17
  br label %3606

3600:                                             ; preds = %3583
  %3601 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 2
  %3602 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3601, i32 noundef %3602, i32 noundef 8, i32 noundef 1) #17
  br label %3606

3603:                                             ; preds = %3583
  %3604 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 2
  %3605 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3604, i32 noundef %3605, i32 noundef 8, i32 noundef 0) #17
  br label %3606

3606:                                             ; preds = %3603, %3600, %3586, %3583
  %3607 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %3608 = load i8, ptr %3607, align 1, !tbaa !5
  switch i8 %3608, label %3629 [
    i8 3, label %3626
    i8 7, label %3623
    i8 11, label %3609
  ]

3609:                                             ; preds = %3606
  %3610 = load ptr, ptr %3411, align 16, !tbaa !252
  %3611 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3
  %3612 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3, i32 3
  %3613 = load i32, ptr %3612, align 4, !tbaa !226
  %3614 = sext i32 %3613 to i64
  %3615 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 3
  %3616 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 3, i32 3
  %3617 = load i32, ptr %3616, align 4, !tbaa !226
  %3618 = sext i32 %3617 to i64
  %3619 = getelementptr inbounds [4 x i8], ptr %3610, i64 %3614, i64 %3618
  %3620 = load i8, ptr %3619, align 1, !tbaa !5
  %3621 = sext i8 %3620 to i32
  %3622 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_bidir_rd(ptr noundef nonnull %0, ptr noundef nonnull %3611, ptr noundef nonnull %3615, i32 noundef %3621, i32 noundef 3, i32 noundef %3622) #17
  br label %3629

3623:                                             ; preds = %3606
  %3624 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 23, i32 7, i64 3
  %3625 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3624, i32 noundef %3625, i32 noundef 12, i32 noundef 1) #17
  br label %3629

3626:                                             ; preds = %3606
  %3627 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %15, i64 0, i32 22, i32 7, i64 3
  %3628 = load i32, ptr %65, align 4, !tbaa !153
  call void @x264_me_refine_qpel_rd(ptr noundef nonnull %0, ptr noundef nonnull %3627, i32 noundef %3628, i32 noundef 12, i32 noundef 0) #17
  br label %3629

3629:                                             ; preds = %2361, %607, %3606, %3609, %3623, %3626, %3514, %3520, %3534, %3537, %3468, %3474, %3488, %3491, %2344, %598, %2098, %3431, %3433, %3429, %3428, %3409, %3402, %2372, %417, %486, %490, %487
  call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %15)
  %3630 = load i32, ptr %51, align 8, !tbaa !145
  %3631 = icmp sgt i32 %3630, 1
  br i1 %3631, label %3632, label %3661

3632:                                             ; preds = %3629
  %3633 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %3634 = load i32, ptr %3633, align 8, !tbaa !49
  %3635 = sext i32 %3634 to i64
  %3636 = getelementptr inbounds [19 x i8], ptr @x264_macroblock_analyse.check_mv_lists, i64 0, i64 %3635
  %3637 = load i8, ptr %3636, align 1, !tbaa !5
  %3638 = zext i8 %3637 to i64
  %3639 = add nuw nsw i64 %3638, 4294967295
  %3640 = lshr i64 519919, %3635
  %3641 = and i64 %3640, 1
  %3642 = icmp eq i64 %3641, 0
  br i1 %3642, label %3643, label %3710

3643:                                             ; preds = %3632
  %3644 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %3645 = load i32, ptr %3644, align 4, !tbaa !50
  %3646 = icmp eq i32 %3645, 16
  br i1 %3646, label %3710, label %3647

3647:                                             ; preds = %3643
  %3648 = and i64 %3639, 4294967295
  %3649 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3648, i64 12
  %3650 = load i32, ptr %3649, align 4, !tbaa !5
  %3651 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3648, i64 30
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = icmp eq i32 %3650, %3652
  br i1 %3653, label %3654, label %3710

3654:                                             ; preds = %3647
  %3655 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 %3648, i64 12
  %3656 = load i8, ptr %3655, align 1, !tbaa !5
  %3657 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 %3648, i64 30
  %3658 = load i8, ptr %3657, align 1, !tbaa !5
  %3659 = icmp eq i8 %3656, %3658
  br i1 %3659, label %3660, label %3710

3660:                                             ; preds = %3654
  store i32 16, ptr %3644, align 4, !tbaa !50
  br label %3710

3661:                                             ; preds = %3629
  %3662 = icmp eq i32 %3630, 0
  br i1 %3662, label %3663, label %3947

3663:                                             ; preds = %3661
  %3664 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %3665 = load ptr, ptr %3664, align 16, !tbaa !66
  %3666 = getelementptr inbounds %struct.x264_pps_t, ptr %3665, i64 0, i32 15
  %3667 = load i32, ptr %3666, align 4, !tbaa !67
  %3668 = icmp eq i32 %3667, 0
  br i1 %3668, label %3947, label %3669

3669:                                             ; preds = %3663
  %3670 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %3671 = load i32, ptr %3670, align 8, !tbaa !49
  %3672 = icmp eq i32 %3671, 5
  br i1 %3672, label %3678, label %3673

3673:                                             ; preds = %3669
  %3674 = sext i32 %3671 to i64
  %3675 = getelementptr inbounds [19 x i8], ptr @x264_mb_transform_8x8_allowed.partition_tab, i64 0, i64 %3674
  %3676 = load i8, ptr %3675, align 1, !tbaa !5
  %3677 = zext i8 %3676 to i32
  br label %3683

3678:                                             ; preds = %3669
  %3679 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %3680 = load i32, ptr %3679, align 16, !tbaa !5
  %3681 = icmp eq i32 %3680, 50529027
  %3682 = zext i1 %3681 to i32
  br label %3683

3683:                                             ; preds = %3678, %3673
  %3684 = phi i32 [ %3677, %3673 ], [ %3682, %3678 ]
  %3685 = icmp eq i32 %3684, 0
  br i1 %3685, label %3947, label %3686

3686:                                             ; preds = %3683
  %3687 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 2
  %3688 = load i32, ptr %3687, align 8, !tbaa !209
  %3689 = icmp eq i32 %3688, 0
  br i1 %3689, label %3947, label %3690

3690:                                             ; preds = %3686
  %3691 = load i32, ptr %150, align 4, !tbaa !164
  %3692 = icmp eq i32 %3691, 0
  br i1 %3692, label %3693, label %3947

3693:                                             ; preds = %3690
  call void @x264_mb_mc(ptr noundef nonnull %0) #17
  %3694 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 4
  %3695 = load ptr, ptr %3694, align 8, !tbaa !46
  %3696 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %3697 = load ptr, ptr %3696, align 16, !tbaa !46
  %3698 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18
  %3699 = load ptr, ptr %3698, align 16, !tbaa !46
  %3700 = call i32 %3695(ptr noundef %3697, i32 noundef 16, ptr noundef %3699, i32 noundef 32) #17
  %3701 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 2
  %3702 = load ptr, ptr %3701, align 8, !tbaa !46
  %3703 = load ptr, ptr %3696, align 16, !tbaa !46
  %3704 = load ptr, ptr %3698, align 16, !tbaa !46
  %3705 = call i32 %3702(ptr noundef %3703, i32 noundef 16, ptr noundef %3704, i32 noundef 32) #17
  %3706 = icmp slt i32 %3700, %3705
  %3707 = zext i1 %3706 to i32
  store i32 %3707, ptr %105, align 4, !tbaa !51
  %3708 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 62
  store i32 1, ptr %3708, align 4, !tbaa !207
  %3709 = load i32, ptr %51, align 8, !tbaa !145
  br label %3710

3710:                                             ; preds = %3660, %3654, %3647, %3643, %3632, %3693
  %3711 = phi i32 [ %3630, %3660 ], [ %3630, %3654 ], [ %3630, %3647 ], [ %3630, %3643 ], [ %3630, %3632 ], [ %3709, %3693 ]
  %3712 = icmp eq i32 %3711, 3
  br i1 %3712, label %3713, label %3947

3713:                                             ; preds = %3710
  %3714 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %3715 = load i32, ptr %3714, align 8, !tbaa !49
  switch i32 %3715, label %3716 [
    i32 6, label %3947
    i32 18, label %3947
  ]

3716:                                             ; preds = %3713
  %3717 = load i32, ptr %20, align 16, !tbaa !74
  %3718 = load i32, ptr %65, align 4, !tbaa !153
  %3719 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %3718)
  %3720 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 41
  %3721 = load ptr, ptr %3720, align 16, !tbaa !267
  %3722 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %3723 = load i32, ptr %3722, align 8, !tbaa !64
  %3724 = sext i32 %3723 to i64
  %3725 = getelementptr inbounds i16, ptr %3721, i64 %3724
  %3726 = load i16, ptr %3725, align 2, !tbaa !37
  %3727 = freeze i16 %3726
  %3728 = icmp ne i16 %3727, 0
  %3729 = select i1 %3728, i32 1, i32 -1
  %3730 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 70
  %3731 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 2
  %3732 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 3
  %3733 = add nsw i32 %3717, -1
  br label %3734

3734:                                             ; preds = %3876, %3716
  %3735 = phi i32 [ %3729, %3716 ], [ %3880, %3876 ]
  %3736 = phi i32 [ %3719, %3716 ], [ %3879, %3876 ]
  %3737 = phi i32 [ 0, %3716 ], [ %3878, %3876 ]
  %3738 = phi i32 [ %3717, %3716 ], [ %3877, %3876 ]
  %3739 = load i32, ptr %111, align 4, !tbaa !57
  %3740 = icmp ne i32 %3739, 0
  %3741 = load i32, ptr %3730, align 8, !tbaa !75
  %3742 = icmp slt i32 %3741, %3717
  %3743 = icmp eq i32 %3735, -1
  %3744 = and i1 %3743, %3742
  br i1 %3744, label %3750, label %3745

3745:                                             ; preds = %3734
  %3746 = zext i1 %3740 to i32
  %3747 = icmp sgt i32 %3741, %3717
  %3748 = icmp eq i32 %3735, 1
  %3749 = and i1 %3748, %3747
  br i1 %3749, label %3750, label %3752

3750:                                             ; preds = %3745, %3734
  %3751 = select i1 %3740, i32 2, i32 1
  br label %3752

3752:                                             ; preds = %3750, %3745
  %3753 = phi i32 [ %3751, %3750 ], [ %3746, %3745 ]
  %3754 = icmp ne i32 %3735, -1
  %3755 = or i1 %3728, %3754
  %3756 = load i32, ptr %3731, align 8, !tbaa !216
  br i1 %3755, label %3774, label %3757

3757:                                             ; preds = %3752
  %3758 = xor i32 %3753, -1
  %3759 = add i32 %3717, %3758
  %3760 = call i32 @llvm.smax.i32(i32 %3759, i32 %3756)
  store i32 %3760, ptr %20, align 16, !tbaa !74
  %3761 = load ptr, ptr %53, align 16, !tbaa !150
  %3762 = sext i32 %3760 to i64
  %3763 = getelementptr inbounds i8, ptr %3761, i64 %3762
  %3764 = load i8, ptr %3763, align 1, !tbaa !5
  %3765 = zext i8 %3764 to i32
  store i32 %3765, ptr %59, align 4, !tbaa !151
  %3766 = load i32, ptr %65, align 4, !tbaa !153
  %3767 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %3766)
  %3768 = load ptr, ptr %3720, align 16, !tbaa !267
  %3769 = load i32, ptr %3722, align 8, !tbaa !64
  %3770 = sext i32 %3769 to i64
  %3771 = getelementptr inbounds i16, ptr %3768, i64 %3770
  %3772 = load i16, ptr %3771, align 2, !tbaa !37
  %3773 = icmp eq i16 %3772, 0
  br i1 %3773, label %3870, label %3777

3774:                                             ; preds = %3752
  %3775 = add nsw i32 %3735, %3717
  store i32 %3775, ptr %20, align 16, !tbaa !74
  %3776 = icmp slt i32 %3775, %3756
  br i1 %3776, label %3876, label %3781

3777:                                             ; preds = %3757
  %3778 = load i32, ptr %20, align 16, !tbaa !74
  %3779 = load i32, ptr %3731, align 8, !tbaa !216
  store i32 %3733, ptr %20, align 16, !tbaa !74
  %3780 = icmp sgt i32 %3717, %3779
  br i1 %3780, label %3783, label %3882

3781:                                             ; preds = %3774
  %3782 = icmp eq i32 %3735, 1
  br i1 %3782, label %3787, label %3783

3783:                                             ; preds = %3781, %3777
  %3784 = phi i32 [ -1, %3781 ], [ %3778, %3777 ]
  %3785 = phi i32 [ 268435456, %3781 ], [ %3767, %3777 ]
  %3786 = phi i32 [ %3775, %3781 ], [ %3733, %3777 ]
  br label %3832

3787:                                             ; preds = %3781, %3827
  %3788 = phi i32 [ %3829, %3827 ], [ %3775, %3781 ]
  %3789 = phi i32 [ %3815, %3827 ], [ %3736, %3781 ]
  %3790 = phi i32 [ %3799, %3827 ], [ %3737, %3781 ]
  %3791 = phi i32 [ %3814, %3827 ], [ %3738, %3781 ]
  %3792 = phi i32 [ %3818, %3827 ], [ 0, %3781 ]
  %3793 = phi i32 [ %3813, %3827 ], [ %3719, %3781 ]
  %3794 = load i32, ptr %3732, align 4, !tbaa !268
  %3795 = icmp sgt i32 %3788, %3794
  br i1 %3795, label %3876, label %3796

3796:                                             ; preds = %3787
  %3797 = load i32, ptr %3730, align 8, !tbaa !75
  %3798 = icmp eq i32 %3797, %3788
  %3799 = select i1 %3798, i32 1, i32 %3790
  %3800 = icmp eq i32 %3788, -1
  br i1 %3800, label %3812, label %3801

3801:                                             ; preds = %3796
  %3802 = load ptr, ptr %53, align 16, !tbaa !150
  %3803 = sext i32 %3788 to i64
  %3804 = getelementptr inbounds i8, ptr %3802, i64 %3803
  %3805 = load i8, ptr %3804, align 1, !tbaa !5
  %3806 = zext i8 %3805 to i32
  store i32 %3806, ptr %59, align 4, !tbaa !151
  %3807 = load i32, ptr %65, align 4, !tbaa !153
  %3808 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %3807)
  %3809 = icmp slt i32 %3808, %3789
  br i1 %3809, label %3810, label %3812

3810:                                             ; preds = %3801
  %3811 = load i32, ptr %20, align 16, !tbaa !74
  br label %3812

3812:                                             ; preds = %3810, %3801, %3796
  %3813 = phi i32 [ %3808, %3810 ], [ %3808, %3801 ], [ 268435456, %3796 ]
  %3814 = phi i32 [ %3811, %3810 ], [ %3791, %3801 ], [ %3791, %3796 ]
  %3815 = phi i32 [ %3808, %3810 ], [ %3789, %3801 ], [ %3789, %3796 ]
  %3816 = icmp slt i32 %3813, %3793
  %3817 = add nsw i32 %3792, 1
  %3818 = select i1 %3816, i32 0, i32 %3817
  %3819 = icmp sgt i32 %3818, %3753
  br i1 %3819, label %3876, label %3820

3820:                                             ; preds = %3812
  %3821 = load ptr, ptr %3720, align 16, !tbaa !267
  %3822 = load i32, ptr %3722, align 8, !tbaa !64
  %3823 = sext i32 %3822 to i64
  %3824 = getelementptr inbounds i16, ptr %3821, i64 %3823
  %3825 = load i16, ptr %3824, align 2, !tbaa !37
  %3826 = icmp eq i16 %3825, 0
  br i1 %3826, label %3876, label %3827

3827:                                             ; preds = %3820
  %3828 = load i32, ptr %20, align 16, !tbaa !74
  %3829 = add nsw i32 %3828, 1
  store i32 %3829, ptr %20, align 16, !tbaa !74
  %3830 = load i32, ptr %3731, align 8, !tbaa !216
  %3831 = icmp slt i32 %3829, %3830
  br i1 %3831, label %3876, label %3787, !llvm.loop !269

3832:                                             ; preds = %3865, %3783
  %3833 = phi i32 [ %3867, %3865 ], [ %3786, %3783 ]
  %3834 = phi i32 [ %3860, %3865 ], [ %3736, %3783 ]
  %3835 = phi i32 [ %3844, %3865 ], [ %3737, %3783 ]
  %3836 = phi i32 [ %3859, %3865 ], [ %3738, %3783 ]
  %3837 = phi i32 [ %3863, %3865 ], [ 0, %3783 ]
  %3838 = phi i32 [ %3858, %3865 ], [ %3719, %3783 ]
  %3839 = load i32, ptr %3732, align 4, !tbaa !268
  %3840 = icmp sgt i32 %3833, %3839
  br i1 %3840, label %3876, label %3841

3841:                                             ; preds = %3832
  %3842 = load i32, ptr %3730, align 8, !tbaa !75
  %3843 = icmp eq i32 %3842, %3833
  %3844 = select i1 %3843, i32 1, i32 %3835
  %3845 = icmp eq i32 %3833, %3784
  br i1 %3845, label %3857, label %3846

3846:                                             ; preds = %3841
  %3847 = load ptr, ptr %53, align 16, !tbaa !150
  %3848 = sext i32 %3833 to i64
  %3849 = getelementptr inbounds i8, ptr %3847, i64 %3848
  %3850 = load i8, ptr %3849, align 1, !tbaa !5
  %3851 = zext i8 %3850 to i32
  store i32 %3851, ptr %59, align 4, !tbaa !151
  %3852 = load i32, ptr %65, align 4, !tbaa !153
  %3853 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %3852)
  %3854 = icmp slt i32 %3853, %3834
  br i1 %3854, label %3855, label %3857

3855:                                             ; preds = %3846
  %3856 = load i32, ptr %20, align 16, !tbaa !74
  br label %3857

3857:                                             ; preds = %3855, %3846, %3841
  %3858 = phi i32 [ %3853, %3855 ], [ %3853, %3846 ], [ %3785, %3841 ]
  %3859 = phi i32 [ %3856, %3855 ], [ %3836, %3846 ], [ %3836, %3841 ]
  %3860 = phi i32 [ %3853, %3855 ], [ %3834, %3846 ], [ %3834, %3841 ]
  %3861 = icmp slt i32 %3858, %3838
  %3862 = add nsw i32 %3837, 1
  %3863 = select i1 %3861, i32 0, i32 %3862
  %3864 = icmp sgt i32 %3863, %3753
  br i1 %3864, label %3876, label %3865

3865:                                             ; preds = %3857
  %3866 = load i32, ptr %20, align 16, !tbaa !74
  %3867 = add nsw i32 %3866, %3735
  store i32 %3867, ptr %20, align 16, !tbaa !74
  %3868 = load i32, ptr %3731, align 8, !tbaa !216
  %3869 = icmp slt i32 %3867, %3868
  br i1 %3869, label %3876, label %3832, !llvm.loop !269

3870:                                             ; preds = %3757
  %3871 = load i32, ptr %3730, align 8, !tbaa !75
  %3872 = load i32, ptr %20, align 16, !tbaa !74
  %3873 = icmp sle i32 %3871, %3872
  %3874 = icmp eq i32 %3737, 0
  %3875 = select i1 %3873, i1 %3874, i1 false
  br i1 %3875, label %3889, label %3903

3876:                                             ; preds = %3865, %3857, %3832, %3827, %3820, %3812, %3787, %3774
  %3877 = phi i32 [ %3738, %3774 ], [ %3791, %3787 ], [ %3814, %3812 ], [ %3814, %3827 ], [ %3814, %3820 ], [ %3836, %3832 ], [ %3859, %3857 ], [ %3859, %3865 ]
  %3878 = phi i32 [ %3737, %3774 ], [ %3790, %3787 ], [ %3799, %3812 ], [ %3799, %3827 ], [ %3799, %3820 ], [ %3835, %3832 ], [ %3844, %3857 ], [ %3844, %3865 ]
  %3879 = phi i32 [ %3736, %3774 ], [ %3789, %3787 ], [ %3815, %3812 ], [ %3815, %3827 ], [ %3815, %3820 ], [ %3834, %3832 ], [ %3860, %3857 ], [ %3860, %3865 ]
  %3880 = add nsw i32 %3735, -2
  %3881 = icmp sgt i32 %3735, 0
  br i1 %3881, label %3734, label %3882, !llvm.loop !270

3882:                                             ; preds = %3876, %3777
  %3883 = phi i32 [ %3879, %3876 ], [ %3736, %3777 ]
  %3884 = phi i32 [ %3878, %3876 ], [ %3737, %3777 ]
  %3885 = phi i32 [ %3877, %3876 ], [ %3738, %3777 ]
  %3886 = icmp eq i32 %3884, 0
  br i1 %3886, label %3887, label %3903

3887:                                             ; preds = %3882
  %3888 = load i32, ptr %3730, align 8, !tbaa !75
  br label %3889

3889:                                             ; preds = %3887, %3870
  %3890 = phi i32 [ %3871, %3870 ], [ %3888, %3887 ]
  %3891 = phi i32 [ %3738, %3870 ], [ %3885, %3887 ]
  %3892 = phi i32 [ %3736, %3870 ], [ %3883, %3887 ]
  store i32 %3890, ptr %20, align 16, !tbaa !74
  %3893 = load ptr, ptr %53, align 16, !tbaa !150
  %3894 = sext i32 %3890 to i64
  %3895 = getelementptr inbounds i8, ptr %3893, i64 %3894
  %3896 = load i8, ptr %3895, align 1, !tbaa !5
  %3897 = zext i8 %3896 to i32
  store i32 %3897, ptr %59, align 4, !tbaa !151
  %3898 = load i32, ptr %65, align 4, !tbaa !153
  %3899 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %3898)
  %3900 = icmp slt i32 %3899, %3892
  br i1 %3900, label %3901, label %3903

3901:                                             ; preds = %3889
  %3902 = load i32, ptr %20, align 16, !tbaa !74
  br label %3903

3903:                                             ; preds = %3901, %3889, %3882, %3870
  %3904 = phi i32 [ %3885, %3882 ], [ %3902, %3901 ], [ %3891, %3889 ], [ %3738, %3870 ]
  %3905 = phi i32 [ %3883, %3882 ], [ %3899, %3901 ], [ %3892, %3889 ], [ %3736, %3870 ]
  store i32 %3904, ptr %20, align 16, !tbaa !74
  %3906 = load ptr, ptr %53, align 16, !tbaa !150
  %3907 = sext i32 %3904 to i64
  %3908 = getelementptr inbounds i8, ptr %3906, i64 %3907
  %3909 = load i8, ptr %3908, align 1, !tbaa !5
  %3910 = zext i8 %3909 to i32
  store i32 %3910, ptr %59, align 4, !tbaa !151
  %3911 = icmp eq i32 %3904, %3717
  br i1 %3911, label %3947, label %3912

3912:                                             ; preds = %3903
  %3913 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 2
  %3914 = load i32, ptr %3913, align 8, !tbaa !209
  %3915 = icmp eq i32 %3914, 0
  br i1 %3915, label %3947, label %3916

3916:                                             ; preds = %3912
  %3917 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %3918 = load ptr, ptr %3917, align 16, !tbaa !66
  %3919 = getelementptr inbounds %struct.x264_pps_t, ptr %3918, i64 0, i32 15
  %3920 = load i32, ptr %3919, align 4, !tbaa !67
  %3921 = icmp eq i32 %3920, 0
  br i1 %3921, label %3947, label %3922

3922:                                             ; preds = %3916
  %3923 = load i32, ptr %3714, align 8, !tbaa !49
  %3924 = icmp eq i32 %3923, 5
  br i1 %3924, label %3930, label %3925

3925:                                             ; preds = %3922
  %3926 = sext i32 %3923 to i64
  %3927 = getelementptr inbounds [19 x i8], ptr @x264_mb_transform_8x8_allowed.partition_tab, i64 0, i64 %3926
  %3928 = load i8, ptr %3927, align 1, !tbaa !5
  %3929 = zext i8 %3928 to i32
  br label %3935

3930:                                             ; preds = %3922
  %3931 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %3932 = load i32, ptr %3931, align 16, !tbaa !5
  %3933 = icmp eq i32 %3932, 50529027
  %3934 = zext i1 %3933 to i32
  br label %3935

3935:                                             ; preds = %3930, %3925
  %3936 = phi i32 [ %3929, %3925 ], [ %3934, %3930 ]
  %3937 = icmp eq i32 %3936, 0
  br i1 %3937, label %3947, label %3938

3938:                                             ; preds = %3935
  %3939 = load i32, ptr %105, align 4, !tbaa !51
  %3940 = xor i32 %3939, 1
  store i32 %3940, ptr %105, align 4, !tbaa !51
  %3941 = load i32, ptr %65, align 4, !tbaa !153
  %3942 = call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %3941)
  %3943 = icmp sgt i32 %3942, %3905
  br i1 %3943, label %3944, label %3947

3944:                                             ; preds = %3938
  %3945 = load i32, ptr %105, align 4, !tbaa !51
  %3946 = xor i32 %3945, 1
  store i32 %3946, ptr %105, align 4, !tbaa !51
  br label %3947

3947:                                             ; preds = %3663, %3683, %3686, %3690, %3661, %3944, %3938, %3935, %3916, %3912, %3903, %3713, %3713, %3710
  %3948 = load i32, ptr %66, align 8, !tbaa !154
  %3949 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 12
  store i32 %3948, ptr %3949, align 16, !tbaa !155
  %3950 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 17
  %3951 = load i32, ptr %3950, align 4, !tbaa !165
  %3952 = icmp ne i32 %3951, 0
  %3953 = zext i1 %3952 to i32
  store i32 %3953, ptr %106, align 4, !tbaa !157
  %3954 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %3955 = load i32, ptr %3954, align 8, !tbaa !49
  switch i32 %3955, label %3956 [
    i32 6, label %3979
    i32 18, label %3979
  ]

3956:                                             ; preds = %3947
  %3957 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 16
  %3958 = load i32, ptr %3957, align 16, !tbaa !93
  %3959 = icmp ne i32 %3958, 0
  %3960 = icmp eq i32 %3948, 1
  %3961 = select i1 %3959, i1 %3960, i1 false
  br i1 %3961, label %3962, label %3979

3962:                                             ; preds = %3956
  %3963 = load i32, ptr %105, align 4, !tbaa !51
  %3964 = icmp eq i32 %3963, 0
  br i1 %3964, label %3973, label %3965

3965:                                             ; preds = %3962
  %3966 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 11
  %3967 = load ptr, ptr %3966, align 8, !tbaa !210
  %3968 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 11
  %3969 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %3970 = load ptr, ptr %3969, align 16, !tbaa !46
  call void %3967(ptr noundef nonnull %3968, ptr noundef %3970, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  %3971 = load i32, ptr %105, align 4, !tbaa !51
  %3972 = icmp eq i32 %3971, 0
  br i1 %3972, label %3973, label %3979

3973:                                             ; preds = %3965, %3962
  %3974 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 71, i32 6
  %3975 = load ptr, ptr %3974, align 16, !tbaa !211
  %3976 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 12
  %3977 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %3978 = load ptr, ptr %3977, align 16, !tbaa !46
  call void %3975(ptr noundef nonnull %3976, ptr noundef %3978, ptr noundef nonnull @x264_psy_trellis_init.zero) #17
  br label %3979

3979:                                             ; preds = %3973, %3965, %3947, %3947, %3956
  %3980 = load i32, ptr %3949, align 16, !tbaa !155
  %3981 = icmp eq i32 %3980, 1
  br i1 %3981, label %3985, label %3982

3982:                                             ; preds = %3979
  %3983 = load i32, ptr %106, align 4, !tbaa !157
  %3984 = icmp eq i32 %3983, 0
  br i1 %3984, label %3986, label %3985

3985:                                             ; preds = %3982, %3979
  store i32 0, ptr %154, align 8, !tbaa !166
  br label %3986

3986:                                             ; preds = %2765, %2749, %2812, %900, %3982, %3985
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #17
  call void @llvm.lifetime.end.p0(i64 14176, ptr nonnull %15) #17
  ret void
}

declare i32 @x264_ratecontrol_mb_qp(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_intra(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca [33 x i8], align 16
  %5 = alloca [9 x i32], align 16
  %6 = alloca [9 x i32], align 16
  %7 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 2
  %8 = load i32, ptr %7, align 16, !tbaa !60
  %9 = icmp eq i32 %8, 2
  %10 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41
  %11 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 1
  %12 = select i1 %9, ptr %10, ptr %11
  %13 = load i32, ptr %12, align 4, !tbaa !39
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %15 = load ptr, ptr %14, align 16, !tbaa !46
  %16 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18
  %17 = load ptr, ptr %16, align 16, !tbaa !46
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 21
  %19 = load ptr, ptr %18, align 8, !tbaa !271
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 27
  %23 = load i32, ptr %22, align 4, !tbaa !272
  %24 = and i32 %23, 11
  %25 = and i32 %23, 8
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 %24, i32 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [5 x [5 x i8]], ptr @i16x16_mode_available, i64 0, i64 %28
  br label %83

30:                                               ; preds = %3
  %31 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %32 = load i32, ptr %31, align 4, !tbaa !164
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 27
  %35 = load i32, ptr %34, align 4, !tbaa !272
  %36 = and i32 %35, 11
  %37 = and i32 %35, 8
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i32 %36, i32 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [5 x [5 x i8]], ptr @i16x16_mode_available, i64 0, i64 %40
  br i1 %33, label %42, label %83

42:                                               ; preds = %30
  %43 = getelementptr inbounds i8, ptr %41, i64 3
  %44 = load i8, ptr %43, align 1, !tbaa !5
  %45 = icmp sgt i8 %44, -1
  br i1 %45, label %46, label %83

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 10
  tail call void %19(ptr noundef %15, ptr noundef %17, ptr noundef nonnull %47) #17
  %48 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 64, i64 3
  %49 = load ptr, ptr %48, align 8, !tbaa !46
  tail call void %49(ptr noundef %17) #17
  %50 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5
  %51 = load ptr, ptr %50, align 8, !tbaa !46
  %52 = tail call i32 %51(ptr noundef %17, i32 noundef 32, ptr noundef %15, i32 noundef 16) #17
  %53 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 10, i64 3
  %54 = load i32, ptr %1, align 16, !tbaa !152
  %55 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %56 = load i32, ptr %55, align 8, !tbaa !161
  %57 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 11
  %58 = load i32, ptr %47, align 4, !tbaa !39
  %59 = add nsw i32 %54, %58
  store i32 %59, ptr %47, align 4, !tbaa !39
  %60 = icmp slt i32 %59, %56
  br i1 %60, label %61, label %62

61:                                               ; preds = %46
  store i32 %59, ptr %55, align 8, !tbaa !161
  store i32 0, ptr %57, align 8, !tbaa !273
  br label %62

62:                                               ; preds = %61, %46
  %63 = phi i32 [ %59, %61 ], [ %56, %46 ]
  %64 = mul nsw i32 %54, 3
  %65 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 10, i64 1
  %66 = load i32, ptr %65, align 4, !tbaa !39
  %67 = add nsw i32 %64, %66
  store i32 %67, ptr %65, align 4, !tbaa !39
  %68 = icmp slt i32 %67, %63
  br i1 %68, label %69, label %70

69:                                               ; preds = %62
  store i32 %67, ptr %55, align 8, !tbaa !161
  store i32 1, ptr %57, align 8, !tbaa !273
  br label %70

70:                                               ; preds = %69, %62
  %71 = phi i32 [ %67, %69 ], [ %63, %62 ]
  %72 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 10, i64 2
  %73 = load i32, ptr %72, align 4, !tbaa !39
  %74 = add nsw i32 %64, %73
  store i32 %74, ptr %72, align 4, !tbaa !39
  %75 = icmp slt i32 %74, %71
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  store i32 %74, ptr %55, align 8, !tbaa !161
  store i32 2, ptr %57, align 8, !tbaa !273
  br label %77

77:                                               ; preds = %76, %70
  %78 = phi i32 [ %74, %76 ], [ %71, %70 ]
  %79 = mul nsw i32 %54, 5
  %80 = add nsw i32 %79, %52
  store i32 %80, ptr %53, align 4, !tbaa !39
  %81 = icmp slt i32 %80, %78
  br i1 %81, label %82, label %126

82:                                               ; preds = %77
  store i32 %80, ptr %55, align 8, !tbaa !161
  store i32 3, ptr %57, align 8, !tbaa !273
  br label %126

83:                                               ; preds = %21, %42, %30
  %84 = phi ptr [ %29, %21 ], [ %41, %42 ], [ %41, %30 ]
  %85 = load i8, ptr %84, align 1, !tbaa !5
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %87, label %126

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %89 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5
  %90 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %91 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 11
  br label %92

92:                                               ; preds = %87, %121
  %93 = phi i8 [ %85, %87 ], [ %124, %121 ]
  %94 = phi ptr [ %84, %87 ], [ %123, %121 ]
  %95 = zext i8 %93 to i32
  %96 = load i32, ptr %88, align 4, !tbaa !164
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %92
  tail call void @x264_predict_lossless_16x16(ptr noundef nonnull %0, i32 noundef %95) #17
  %99 = zext i8 %93 to i64
  br label %104

100:                                              ; preds = %92
  %101 = zext i8 %93 to i64
  %102 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 64, i64 %101
  %103 = load ptr, ptr %102, align 8, !tbaa !46
  tail call void %103(ptr noundef %17) #17
  br label %104

104:                                              ; preds = %100, %98
  %105 = phi i64 [ %101, %100 ], [ %99, %98 ]
  %106 = load ptr, ptr %89, align 8, !tbaa !46
  %107 = tail call i32 %106(ptr noundef %17, i32 noundef 32, ptr noundef %15, i32 noundef 16) #17
  %108 = load i32, ptr %1, align 16, !tbaa !152
  %109 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode16x16_fix, i64 0, i64 %105
  %110 = load i8, ptr %109, align 1, !tbaa !5
  %111 = zext i8 %110 to i64
  %112 = add nuw nsw i64 %111, 1
  %113 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !5
  %115 = zext i8 %114 to i32
  %116 = mul nsw i32 %108, %115
  %117 = add nsw i32 %116, %107
  %118 = load i32, ptr %90, align 8, !tbaa !161
  %119 = icmp slt i32 %117, %118
  br i1 %119, label %120, label %121

120:                                              ; preds = %104
  store i32 %117, ptr %90, align 8, !tbaa !161
  store i32 %95, ptr %91, align 8, !tbaa !273
  br label %121

121:                                              ; preds = %120, %104
  %122 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 10, i64 %105
  store i32 %117, ptr %122, align 4, !tbaa !39
  %123 = getelementptr inbounds i8, ptr %94, i64 1
  %124 = load i8, ptr %123, align 1, !tbaa !5
  %125 = icmp sgt i8 %124, -1
  br i1 %125, label %92, label %126, !llvm.loop !274

126:                                              ; preds = %121, %77, %82, %83
  %127 = load i32, ptr %7, align 16, !tbaa !60
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %135

129:                                              ; preds = %126
  %130 = load i32, ptr %1, align 16, !tbaa !152
  %131 = mul nsw i32 %130, 9
  %132 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %133 = load i32, ptr %132, align 8, !tbaa !161
  %134 = add nsw i32 %133, %131
  store i32 %134, ptr %132, align 8, !tbaa !161
  br label %135

135:                                              ; preds = %129, %126
  %136 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 6
  %137 = load i32, ptr %136, align 4, !tbaa !163
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %141 = load i32, ptr %140, align 8, !tbaa !161
  %142 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  %143 = load i32, ptr %142, align 8, !tbaa !201
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [11 x i8], ptr @__const.x264_mb_analyse_intra.i16x16_thresh, i64 0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !5
  %147 = zext i8 %146 to i32
  %148 = mul nsw i32 %147, %2
  %149 = ashr i32 %148, 1
  %150 = icmp sgt i32 %141, %149
  br i1 %150, label %626, label %151

151:                                              ; preds = %139, %135
  %152 = and i32 %13, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %405, label %154

154:                                              ; preds = %151
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %4) #17
  %155 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5
  %156 = load ptr, ptr %155, align 8, !tbaa !46
  %157 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 2
  %158 = load ptr, ptr %157, align 8, !tbaa !46
  %159 = icmp eq ptr %156, %158
  %160 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 4, i64 3
  %161 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %162 = select i1 %159, ptr %160, ptr %161
  %163 = load ptr, ptr %162, align 8, !tbaa !46
  %164 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 5
  %165 = load i32, ptr %164, align 8, !tbaa !145
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %154
  %168 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %169 = load i32, ptr %168, align 8, !tbaa !161
  %170 = tail call i32 @llvm.smin.i32(i32 %169, i32 %2)
  br label %171

171:                                              ; preds = %167, %154
  %172 = phi i32 [ 268435456, %154 ], [ %170, %167 ]
  %173 = load i32, ptr %1, align 16, !tbaa !152
  %174 = shl nsw i32 %173, 2
  %175 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  store i32 0, ptr %175, align 8, !tbaa !45
  %176 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 30
  %177 = load ptr, ptr %176, align 8, !tbaa !275
  %178 = icmp eq ptr %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %171
  %180 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %181 = load i32, ptr %180, align 4, !tbaa !164
  %182 = icmp eq i32 %181, 0
  br label %183

183:                                              ; preds = %179, %171
  %184 = phi i1 [ false, %171 ], [ %182, %179 ]
  %185 = mul nsw i32 %173, 13
  %186 = select i1 %128, i32 %185, i32 %174
  %187 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67
  %188 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 68
  %189 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %190 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 2
  %191 = getelementptr inbounds [9 x i32], ptr %5, i64 0, i64 2
  %192 = getelementptr inbounds [9 x i32], ptr %5, i64 0, i64 1
  br label %193

193:                                              ; preds = %331, %183
  %194 = phi i64 [ %349, %331 ], [ 0, %183 ]
  %195 = phi i32 [ %327, %331 ], [ %186, %183 ]
  %196 = trunc i64 %194 to i32
  %197 = and i32 %196, 1
  %198 = lshr i32 %196, 1
  %199 = shl nuw nsw i32 %197, 3
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds i8, ptr %15, i64 %200
  %202 = shl nsw i32 %198, 7
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i8, ptr %201, i64 %203
  %205 = getelementptr inbounds i8, ptr %17, i64 %200
  %206 = shl nsw i32 %198, 8
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds i8, ptr %205, i64 %207
  %209 = shl nsw i64 %194, 2
  %210 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %209
  %211 = load i32, ptr %210, align 16, !tbaa !39
  %212 = add nsw i32 %211, -1
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [40 x i8], ptr %187, i64 0, i64 %213
  %215 = load i8, ptr %214, align 1, !tbaa !5
  %216 = sext i8 %215 to i64
  %217 = add nsw i32 %211, -8
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [40 x i8], ptr %187, i64 0, i64 %218
  %220 = load i8, ptr %219, align 1, !tbaa !5
  %221 = sext i8 %220 to i64
  %222 = add nsw i64 %216, 1
  %223 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %222
  %224 = load i8, ptr %223, align 1, !tbaa !5
  %225 = add nsw i64 %221, 1
  %226 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %225
  %227 = load i8, ptr %226, align 1, !tbaa !5
  %228 = call i8 @llvm.smin.i8(i8 %224, i8 %227)
  %229 = icmp slt i8 %228, 0
  %230 = select i1 %229, i8 2, i8 %228
  %231 = sext i8 %230 to i64
  %232 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 25, i64 %194
  %233 = load i32, ptr %232, align 4, !tbaa !39
  %234 = and i32 %233, 11
  %235 = and i32 %233, 8
  %236 = icmp eq i32 %235, 0
  %237 = select i1 %236, i32 %234, i32 4
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds [5 x [10 x i8]], ptr @i4x4_mode_available, i64 0, i64 %238
  %240 = load ptr, ptr %188, align 16, !tbaa !276
  call void %240(ptr noundef %208, ptr noundef nonnull %4, i32 noundef %233, i32 noundef 15) #17
  br i1 %184, label %241, label %273

241:                                              ; preds = %193
  %242 = getelementptr inbounds i8, ptr %239, i64 8
  %243 = load i8, ptr %242, align 2, !tbaa !5
  %244 = icmp sgt i8 %243, -1
  br i1 %244, label %245, label %273

245:                                              ; preds = %241
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #17
  %246 = load ptr, ptr %176, align 8, !tbaa !275
  call void %246(ptr noundef %204, ptr noundef nonnull %4, ptr noundef nonnull %5) #17
  %247 = load i32, ptr %1, align 16, !tbaa !152
  %248 = mul i32 %247, -3
  %249 = and i64 %231, 4294967295
  %250 = getelementptr inbounds [9 x i32], ptr %5, i64 0, i64 %249
  %251 = load i32, ptr %250, align 4, !tbaa !39
  %252 = add i32 %248, %251
  store i32 %252, ptr %250, align 4, !tbaa !39
  %253 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 %194
  %254 = load i32, ptr %191, align 8, !tbaa !39
  %255 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 14, i64 2, i64 %194
  store i32 %254, ptr %255, align 4, !tbaa !39
  %256 = icmp slt i32 %254, 268435456
  br i1 %256, label %257, label %258

257:                                              ; preds = %245
  store i32 2, ptr %253, align 4, !tbaa !39
  br label %258

258:                                              ; preds = %257, %245
  %259 = phi i32 [ %254, %257 ], [ 268435456, %245 ]
  %260 = load i32, ptr %192, align 4, !tbaa !39
  %261 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 14, i64 1, i64 %194
  store i32 %260, ptr %261, align 4, !tbaa !39
  %262 = icmp slt i32 %260, %259
  br i1 %262, label %263, label %264

263:                                              ; preds = %258
  store i32 1, ptr %253, align 4, !tbaa !39
  br label %264

264:                                              ; preds = %263, %258
  %265 = phi i32 [ %260, %263 ], [ %259, %258 ]
  %266 = load i32, ptr %5, align 16, !tbaa !39
  %267 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 14, i64 0, i64 %194
  store i32 %266, ptr %267, align 4, !tbaa !39
  %268 = icmp slt i32 %266, %265
  br i1 %268, label %269, label %270

269:                                              ; preds = %264
  store i32 0, ptr %253, align 4, !tbaa !39
  br label %270

270:                                              ; preds = %269, %264
  %271 = phi i32 [ %266, %269 ], [ %265, %264 ]
  %272 = getelementptr inbounds i8, ptr %239, i64 3
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #17
  br label %273

273:                                              ; preds = %270, %241, %193
  %274 = phi i32 [ %271, %270 ], [ 268435456, %241 ], [ 268435456, %193 ]
  %275 = phi ptr [ %272, %270 ], [ %239, %241 ], [ %239, %193 ]
  %276 = load i8, ptr %275, align 1, !tbaa !5
  %277 = icmp sgt i8 %276, -1
  br i1 %277, label %278, label %322

278:                                              ; preds = %273
  %279 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 %194
  br label %280

280:                                              ; preds = %278, %312
  %281 = phi i8 [ %276, %278 ], [ %320, %312 ]
  %282 = phi ptr [ %275, %278 ], [ %319, %312 ]
  %283 = phi i32 [ %274, %278 ], [ %313, %312 ]
  %284 = icmp sgt i32 %283, -1
  br i1 %284, label %288, label %285

285:                                              ; preds = %280
  %286 = load i32, ptr %164, align 8, !tbaa !145
  %287 = icmp sgt i32 %286, 1
  br i1 %287, label %288, label %322

288:                                              ; preds = %280, %285
  %289 = zext i8 %281 to i32
  %290 = load i32, ptr %189, align 4, !tbaa !164
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  call void @x264_predict_lossless_8x8(ptr noundef nonnull %0, ptr noundef %208, i32 noundef %196, i32 noundef %289, ptr noundef nonnull %4) #17
  br label %297

293:                                              ; preds = %288
  %294 = zext i8 %281 to i64
  %295 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 %294
  %296 = load ptr, ptr %295, align 8, !tbaa !46
  call void %296(ptr noundef %208, ptr noundef nonnull %4) #17
  br label %297

297:                                              ; preds = %293, %292
  %298 = call i32 %163(ptr noundef %208, i32 noundef 32, ptr noundef %204, i32 noundef 16) #17
  %299 = add nuw nsw i32 %289, 1
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %300
  %302 = load i8, ptr %301, align 1, !tbaa !5
  %303 = icmp eq i8 %230, %302
  br i1 %303, label %304, label %308

304:                                              ; preds = %297
  %305 = load i32, ptr %1, align 16, !tbaa !152
  %306 = mul i32 %305, -3
  %307 = add i32 %306, %298
  br label %308

308:                                              ; preds = %304, %297
  %309 = phi i32 [ %307, %304 ], [ %298, %297 ]
  %310 = icmp slt i32 %309, %283
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  store i32 %289, ptr %279, align 4, !tbaa !39
  br label %312

312:                                              ; preds = %311, %308
  %313 = phi i32 [ %309, %311 ], [ %283, %308 ]
  %314 = load i32, ptr %1, align 16, !tbaa !152
  %315 = shl nsw i32 %314, 2
  %316 = add nsw i32 %315, %309
  %317 = zext i8 %281 to i64
  %318 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 14, i64 %317, i64 %194
  store i32 %316, ptr %318, align 4, !tbaa !39
  %319 = getelementptr inbounds i8, ptr %282, i64 1
  %320 = load i8, ptr %319, align 1, !tbaa !5
  %321 = icmp sgt i8 %320, -1
  br i1 %321, label %280, label %322, !llvm.loop !277

322:                                              ; preds = %285, %312, %273
  %323 = phi i32 [ %274, %273 ], [ %313, %312 ], [ %283, %285 ]
  %324 = load i32, ptr %1, align 16, !tbaa !152
  %325 = mul nsw i32 %324, 3
  %326 = add i32 %323, %195
  %327 = add i32 %326, %325
  %328 = icmp eq i64 %194, 3
  %329 = icmp sgt i32 %327, %172
  %330 = select i1 %328, i1 true, i1 %329
  br i1 %330, label %350, label %331

331:                                              ; preds = %322
  %332 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 %194
  %333 = load i32, ptr %332, align 4, !tbaa !39
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 %334
  %336 = load ptr, ptr %335, align 8, !tbaa !46
  call void %336(ptr noundef %208, ptr noundef nonnull %4) #17
  %337 = load i32, ptr %190, align 8, !tbaa !149
  call void @x264_mb_encode_i8x8(ptr noundef nonnull %0, i32 noundef %196, i32 noundef %337) #17
  %338 = shl nuw nsw i32 %197, 1
  %339 = load i32, ptr %332, align 4, !tbaa !39
  %340 = trunc i64 %194 to i32
  %341 = shl i32 %340, 3
  %342 = or i32 %338, %341
  %343 = or i32 %342, 12
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [40 x i8], ptr %187, i64 0, i64 %344
  %346 = trunc i32 %339 to i16
  %347 = mul i16 %346, 257
  store i16 %347, ptr %345, align 2, !tbaa !5
  %348 = getelementptr inbounds i8, ptr %345, i64 8
  store i16 %347, ptr %348, align 2, !tbaa !5
  %349 = add nuw nsw i64 %194, 1
  br label %193

350:                                              ; preds = %322
  %351 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 12
  br i1 %328, label %352, label %382

352:                                              ; preds = %350
  store i32 %327, ptr %351, align 4, !tbaa !160
  %353 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 61
  %354 = load i32, ptr %353, align 8, !tbaa !166
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %388, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 4
  %358 = load ptr, ptr %357, align 8, !tbaa !46
  %359 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 3
  call void %358(ptr noundef nonnull %359, i32 noundef 16, ptr noundef %17, i32 noundef 32, i32 noundef 16) #17
  %360 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 12
  %361 = load i32, ptr %360, align 1, !tbaa !5
  %362 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 7
  store i32 %361, ptr %362, align 16, !tbaa !39
  %363 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 20
  %364 = load i32, ptr %363, align 1, !tbaa !5
  %365 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 7, i64 1
  store i32 %364, ptr %365, align 4, !tbaa !39
  %366 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 28
  %367 = load i32, ptr %366, align 1, !tbaa !5
  %368 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 7, i64 2
  store i32 %367, ptr %368, align 8, !tbaa !39
  %369 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 36
  %370 = load i32, ptr %369, align 1, !tbaa !5
  %371 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 7, i64 3
  store i32 %370, ptr %371, align 4, !tbaa !39
  %372 = load i32, ptr %175, align 8, !tbaa !45
  %373 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 9
  store i32 %372, ptr %373, align 4, !tbaa !278
  %374 = load i32, ptr %353, align 8, !tbaa !166
  %375 = icmp eq i32 %374, 2
  br i1 %375, label %376, label %388

376:                                              ; preds = %356
  %377 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %378 = load ptr, ptr %377, align 8, !tbaa !48
  %379 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 4
  %380 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2
  %381 = call ptr %378(ptr noundef nonnull %379, ptr noundef nonnull %380, i64 noundef 384) #17
  br label %388

382:                                              ; preds = %350
  store i32 268435456, ptr %351, align 4, !tbaa !160
  %383 = getelementptr inbounds [3 x i16], ptr @x264_mb_analyse_intra.cost_div_fix8, i64 0, i64 %194
  %384 = load i16, ptr %383, align 2, !tbaa !37
  %385 = zext i16 %384 to i32
  %386 = mul nsw i32 %327, %385
  %387 = ashr i32 %386, 8
  br label %388

388:                                              ; preds = %352, %376, %356, %382
  %389 = phi i32 [ %327, %376 ], [ %327, %356 ], [ %327, %352 ], [ %387, %382 ]
  %390 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %391 = load i32, ptr %390, align 8, !tbaa !161
  %392 = call i32 @llvm.smin.i32(i32 %389, i32 %391)
  %393 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  %394 = load i32, ptr %393, align 8, !tbaa !201
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [11 x i8], ptr @__const.x264_mb_analyse_intra.i8x8_thresh, i64 0, i64 %395
  %397 = load i8, ptr %396, align 1, !tbaa !5
  %398 = zext i8 %397 to i32
  %399 = mul nsw i32 %398, %2
  %400 = ashr i32 %399, 2
  %401 = icmp sgt i32 %392, %400
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %4) #17
  %402 = and i32 %13, 1
  %403 = icmp eq i32 %402, 0
  %404 = select i1 %401, i1 true, i1 %403
  br i1 %404, label %626, label %411

405:                                              ; preds = %151
  %406 = and i32 %13, 1
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %626, label %408

408:                                              ; preds = %405
  %409 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %410 = load i32, ptr %409, align 8, !tbaa !161
  br label %411

411:                                              ; preds = %408, %388
  %412 = phi i32 [ %410, %408 ], [ %391, %388 ]
  %413 = load i32, ptr %1, align 16, !tbaa !152
  %414 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 12
  %415 = load i32, ptr %414, align 4, !tbaa !160
  %416 = call i32 @llvm.smin.i32(i32 %412, i32 %415)
  %417 = call i32 @llvm.smin.i32(i32 %416, i32 %2)
  %418 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  store i32 0, ptr %418, align 8, !tbaa !45
  %419 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 27
  %420 = load ptr, ptr %419, align 8, !tbaa !279
  %421 = icmp eq ptr %420, null
  br i1 %421, label %426, label %422

422:                                              ; preds = %411
  %423 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %424 = load i32, ptr %423, align 4, !tbaa !164
  %425 = icmp eq i32 %424, 0
  br label %426

426:                                              ; preds = %422, %411
  %427 = phi i1 [ false, %411 ], [ %425, %422 ]
  %428 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 5
  %429 = load i32, ptr %428, align 8, !tbaa !145
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %436, label %431

431:                                              ; preds = %426
  %432 = load i32, ptr %136, align 4, !tbaa !163
  %433 = sub nsw i32 10, %432
  %434 = mul nsw i32 %433, %417
  %435 = sdiv i32 %434, 8
  br label %436

436:                                              ; preds = %431, %426
  %437 = phi i32 [ %435, %431 ], [ %417, %426 ]
  %438 = load i32, ptr %7, align 16, !tbaa !60
  %439 = icmp eq i32 %438, 1
  %440 = select i1 %439, i32 49, i32 40
  %441 = mul nsw i32 %440, %413
  %442 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67
  %443 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %444 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 6
  %445 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 2
  %446 = getelementptr inbounds [9 x i32], ptr %6, i64 0, i64 2
  %447 = getelementptr inbounds [9 x i32], ptr %6, i64 0, i64 1
  br label %448

448:                                              ; preds = %580, %436
  %449 = phi i64 [ %592, %580 ], [ 0, %436 ]
  %450 = phi i32 [ %576, %580 ], [ %441, %436 ]
  %451 = getelementptr inbounds [16 x i8], ptr @block_idx_xy_fenc, i64 0, i64 %449
  %452 = load i8, ptr %451, align 1, !tbaa !5
  %453 = zext i8 %452 to i64
  %454 = getelementptr inbounds i8, ptr %15, i64 %453
  %455 = getelementptr inbounds [16 x i16], ptr @block_idx_xy_fdec, i64 0, i64 %449
  %456 = load i16, ptr %455, align 2, !tbaa !37
  %457 = zext i16 %456 to i64
  %458 = getelementptr inbounds i8, ptr %17, i64 %457
  %459 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %449
  %460 = load i32, ptr %459, align 4, !tbaa !39
  %461 = add nsw i32 %460, -1
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds [40 x i8], ptr %442, i64 0, i64 %462
  %464 = load i8, ptr %463, align 1, !tbaa !5
  %465 = sext i8 %464 to i64
  %466 = add nsw i32 %460, -8
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [40 x i8], ptr %442, i64 0, i64 %467
  %469 = load i8, ptr %468, align 1, !tbaa !5
  %470 = sext i8 %469 to i64
  %471 = add nsw i64 %465, 1
  %472 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %471
  %473 = load i8, ptr %472, align 1, !tbaa !5
  %474 = add nsw i64 %470, 1
  %475 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %474
  %476 = load i8, ptr %475, align 1, !tbaa !5
  %477 = call i8 @llvm.smin.i8(i8 %473, i8 %476)
  %478 = icmp slt i8 %477, 0
  %479 = select i1 %478, i8 2, i8 %477
  %480 = sext i8 %479 to i64
  %481 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 26, i64 %449
  %482 = load i32, ptr %481, align 4, !tbaa !39
  %483 = and i32 %482, 11
  %484 = and i32 %482, 8
  %485 = icmp eq i32 %484, 0
  %486 = select i1 %485, i32 %483, i32 4
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds [5 x [10 x i8]], ptr @i4x4_mode_available, i64 0, i64 %487
  %489 = and i32 %482, 6
  %490 = icmp eq i32 %489, 2
  br i1 %490, label %491, label %497

491:                                              ; preds = %448
  %492 = getelementptr inbounds i8, ptr %458, i64 -29
  %493 = load i8, ptr %492, align 1, !tbaa !5
  %494 = zext i8 %493 to i32
  %495 = mul nuw i32 %494, 16843009
  %496 = getelementptr inbounds i8, ptr %458, i64 -28
  store i32 %495, ptr %496, align 4, !tbaa !5
  br label %497

497:                                              ; preds = %491, %448
  br i1 %427, label %498, label %528

498:                                              ; preds = %497
  %499 = getelementptr inbounds i8, ptr %488, i64 5
  %500 = load i8, ptr %499, align 1, !tbaa !5
  %501 = icmp sgt i8 %500, -1
  br i1 %501, label %502, label %528

502:                                              ; preds = %498
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %6) #17
  %503 = load ptr, ptr %419, align 8, !tbaa !279
  call void %503(ptr noundef %454, ptr noundef %458, ptr noundef nonnull %6) #17
  %504 = load i32, ptr %1, align 16, !tbaa !152
  %505 = mul i32 %504, -3
  %506 = and i64 %480, 4294967295
  %507 = getelementptr inbounds [9 x i32], ptr %6, i64 0, i64 %506
  %508 = load i32, ptr %507, align 4, !tbaa !39
  %509 = add i32 %505, %508
  store i32 %509, ptr %507, align 4, !tbaa !39
  %510 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 %449
  %511 = load i32, ptr %446, align 8, !tbaa !39
  %512 = icmp slt i32 %511, 268435456
  br i1 %512, label %513, label %514

513:                                              ; preds = %502
  store i32 2, ptr %510, align 4, !tbaa !39
  br label %514

514:                                              ; preds = %502, %513
  %515 = phi i32 [ %511, %513 ], [ 268435456, %502 ]
  %516 = load i32, ptr %447, align 4, !tbaa !39
  %517 = icmp slt i32 %516, %515
  br i1 %517, label %518, label %519

518:                                              ; preds = %514
  store i32 1, ptr %510, align 4, !tbaa !39
  br label %519

519:                                              ; preds = %518, %514
  %520 = phi i32 [ %516, %518 ], [ %515, %514 ]
  %521 = load i32, ptr %6, align 16, !tbaa !39
  %522 = icmp slt i32 %521, %520
  br i1 %522, label %523, label %524

523:                                              ; preds = %519
  store i32 0, ptr %510, align 4, !tbaa !39
  br label %524

524:                                              ; preds = %519, %523
  %525 = phi i32 [ %521, %523 ], [ %520, %519 ]
  %526 = getelementptr inbounds i8, ptr %488, i64 3
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %6) #17
  %527 = icmp sgt i32 %525, 0
  br i1 %527, label %528, label %571

528:                                              ; preds = %497, %498, %524
  %529 = phi i32 [ %525, %524 ], [ 268435456, %498 ], [ 268435456, %497 ]
  %530 = phi ptr [ %526, %524 ], [ %488, %498 ], [ %488, %497 ]
  %531 = load i8, ptr %530, align 1, !tbaa !5
  %532 = icmp sgt i8 %531, -1
  br i1 %532, label %533, label %571

533:                                              ; preds = %528
  %534 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 %449
  %535 = trunc i64 %449 to i32
  br label %536

536:                                              ; preds = %533, %566
  %537 = phi i8 [ %531, %533 ], [ %569, %566 ]
  %538 = phi i32 [ %529, %533 ], [ %567, %566 ]
  %539 = phi ptr [ %530, %533 ], [ %568, %566 ]
  %540 = zext i8 %537 to i32
  %541 = load i32, ptr %443, align 4, !tbaa !164
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %544, label %543

543:                                              ; preds = %536
  call void @x264_predict_lossless_4x4(ptr noundef nonnull %0, ptr noundef %458, i32 noundef %535, i32 noundef %540) #17
  br label %548

544:                                              ; preds = %536
  %545 = zext i8 %537 to i64
  %546 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 67, i64 %545
  %547 = load ptr, ptr %546, align 8, !tbaa !46
  call void %547(ptr noundef %458) #17
  br label %548

548:                                              ; preds = %544, %543
  %549 = load ptr, ptr %444, align 8, !tbaa !46
  %550 = call i32 %549(ptr noundef %458, i32 noundef 32, ptr noundef %454, i32 noundef 16) #17
  %551 = add nuw nsw i32 %540, 1
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %552
  %554 = load i8, ptr %553, align 1, !tbaa !5
  %555 = icmp eq i8 %479, %554
  br i1 %555, label %556, label %561

556:                                              ; preds = %548
  %557 = load i32, ptr %1, align 16, !tbaa !152
  %558 = mul i32 %557, -3
  %559 = add i32 %558, %550
  %560 = icmp slt i32 %559, 1
  br i1 %560, label %565, label %561

561:                                              ; preds = %556, %548
  %562 = phi i32 [ %559, %556 ], [ %550, %548 ]
  %563 = icmp slt i32 %562, %538
  br i1 %563, label %564, label %566

564:                                              ; preds = %561
  store i32 %540, ptr %534, align 4, !tbaa !39
  br label %566

565:                                              ; preds = %556
  store i32 %540, ptr %534, align 4, !tbaa !39
  br label %571

566:                                              ; preds = %564, %561
  %567 = phi i32 [ %538, %561 ], [ %562, %564 ]
  %568 = getelementptr inbounds i8, ptr %539, i64 1
  %569 = load i8, ptr %568, align 1, !tbaa !5
  %570 = icmp sgt i8 %569, -1
  br i1 %570, label %536, label %571, !llvm.loop !280

571:                                              ; preds = %566, %528, %565, %524
  %572 = phi i32 [ %559, %565 ], [ %525, %524 ], [ %529, %528 ], [ %567, %566 ]
  %573 = load i32, ptr %1, align 16, !tbaa !152
  %574 = mul nsw i32 %573, 3
  %575 = add i32 %572, %450
  %576 = add i32 %575, %574
  %577 = icmp sgt i32 %576, %437
  %578 = icmp eq i64 %449, 15
  %579 = or i1 %578, %577
  br i1 %579, label %593, label %580

580:                                              ; preds = %571
  %581 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 %449
  %582 = load i32, ptr %581, align 4, !tbaa !39
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 67, i64 %583
  %585 = load ptr, ptr %584, align 8, !tbaa !46
  call void %585(ptr noundef %458) #17
  %586 = load i32, ptr %445, align 8, !tbaa !149
  %587 = trunc i64 %449 to i32
  call void @x264_mb_encode_i4x4(ptr noundef nonnull %0, i32 noundef %587, i32 noundef %586) #17
  %588 = load i32, ptr %581, align 4, !tbaa !39
  %589 = trunc i32 %588 to i8
  %590 = sext i32 %460 to i64
  %591 = getelementptr inbounds [40 x i8], ptr %442, i64 0, i64 %590
  store i8 %589, ptr %591, align 1, !tbaa !5
  %592 = add nuw nsw i64 %449, 1
  br label %448

593:                                              ; preds = %571
  %594 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 16
  br i1 %578, label %595, label %625

595:                                              ; preds = %593
  store i32 %576, ptr %594, align 4, !tbaa !159
  %596 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 61
  %597 = load i32, ptr %596, align 8, !tbaa !166
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %626, label %599

599:                                              ; preds = %595
  %600 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 4
  %601 = load ptr, ptr %600, align 8, !tbaa !46
  %602 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 2
  call void %601(ptr noundef nonnull %602, i32 noundef 16, ptr noundef %17, i32 noundef 32, i32 noundef 16) #17
  %603 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 12
  %604 = load i32, ptr %603, align 1, !tbaa !5
  %605 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 6
  store i32 %604, ptr %605, align 16, !tbaa !39
  %606 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 20
  %607 = load i32, ptr %606, align 1, !tbaa !5
  %608 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 6, i64 1
  store i32 %607, ptr %608, align 4, !tbaa !39
  %609 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 28
  %610 = load i32, ptr %609, align 1, !tbaa !5
  %611 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 6, i64 2
  store i32 %610, ptr %611, align 8, !tbaa !39
  %612 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 36
  %613 = load i32, ptr %612, align 1, !tbaa !5
  %614 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 6, i64 3
  store i32 %613, ptr %614, align 4, !tbaa !39
  %615 = load i32, ptr %418, align 8, !tbaa !45
  %616 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 8
  store i32 %615, ptr %616, align 16, !tbaa !281
  %617 = load i32, ptr %596, align 8, !tbaa !166
  %618 = icmp eq i32 %617, 2
  br i1 %618, label %619, label %626

619:                                              ; preds = %599
  %620 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %621 = load ptr, ptr %620, align 8, !tbaa !48
  %622 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 5
  %623 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3
  %624 = call ptr %621(ptr noundef nonnull %622, ptr noundef nonnull %623, i64 noundef 480) #17
  br label %626

625:                                              ; preds = %593
  store i32 268435456, ptr %594, align 4, !tbaa !159
  br label %626

626:                                              ; preds = %405, %595, %619, %599, %625, %139, %388
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_intra_rd(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = icmp sgt i32 %5, %2
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 2, ptr %8, align 8, !tbaa !49
  tail call fastcc void @x264_analyse_update_cache(ptr noundef %0, ptr noundef nonnull %1)
  %9 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %10 = load i32, ptr %9, align 4, !tbaa !153
  %11 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef %0, i32 noundef %10)
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i32 [ %11, %7 ], [ 268435456, %3 ]
  store i32 %13, ptr %4, align 8, !tbaa !161
  %14 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 16
  %15 = load i32, ptr %14, align 4, !tbaa !159
  %16 = icmp sle i32 %15, %2
  %17 = icmp slt i32 %15, 268435456
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 0, ptr %20, align 8, !tbaa !49
  tail call fastcc void @x264_analyse_update_cache(ptr noundef %0, ptr noundef nonnull %1)
  %21 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %22 = load i32, ptr %21, align 4, !tbaa !153
  %23 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef %0, i32 noundef %22)
  br label %24

24:                                               ; preds = %12, %19
  %25 = phi i32 [ %23, %19 ], [ 268435456, %12 ]
  store i32 %25, ptr %14, align 4, !tbaa !159
  %26 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 12
  %27 = load i32, ptr %26, align 4, !tbaa !160
  %28 = icmp sle i32 %27, %2
  %29 = icmp slt i32 %27, 268435456
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %39

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 1, ptr %32, align 8, !tbaa !49
  tail call fastcc void @x264_analyse_update_cache(ptr noundef %0, ptr noundef nonnull %1)
  %33 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %34 = load i32, ptr %33, align 4, !tbaa !153
  %35 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef %0, i32 noundef %34)
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %37 = load i32, ptr %36, align 8, !tbaa !45
  %38 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 13
  store i32 %37, ptr %38, align 16, !tbaa !282
  br label %39

39:                                               ; preds = %24, %31
  %40 = phi i32 [ %35, %31 ], [ 268435456, %24 ]
  store i32 %40, ptr %26, align 4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_intra_rd_refine(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.x264_cabac_t, align 16
  %4 = alloca %struct.x264_cabac_t, align 16
  %5 = alloca [4 x i8], align 1
  %6 = alloca [33 x i8], align 16
  %7 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18
  %8 = load ptr, ptr %7, align 16, !tbaa !46
  %9 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 61
  store i32 0, ptr %9, align 8, !tbaa !166
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %11 = load i32, ptr %10, align 8, !tbaa !49
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %59

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 11
  %15 = load i32, ptr %14, align 8, !tbaa !273
  %16 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 27
  %17 = load i32, ptr %16, align 4, !tbaa !272
  %18 = and i32 %17, 11
  %19 = and i32 %17, 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 %18, i32 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [5 x [5 x i8]], ptr @i16x16_mode_available, i64 0, i64 %22
  %24 = sext i32 %15 to i64
  %25 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 10, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !39
  %27 = mul nsw i32 %26, 9
  %28 = sdiv i32 %27, 8
  %29 = load i8, ptr %23, align 1, !tbaa !5
  %30 = icmp sgt i8 %29, -1
  br i1 %30, label %31, label %59

31:                                               ; preds = %13
  %32 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 9
  %33 = load i32, ptr %32, align 8, !tbaa !161
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 59
  %36 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  br label %37

37:                                               ; preds = %31, %54
  %38 = phi i8 [ %29, %31 ], [ %57, %54 ]
  %39 = phi i64 [ %34, %31 ], [ %55, %54 ]
  %40 = phi ptr [ %23, %31 ], [ %56, %54 ]
  %41 = zext i8 %38 to i32
  %42 = icmp eq i32 %15, %41
  br i1 %42, label %54, label %43

43:                                               ; preds = %37
  %44 = zext i8 %38 to i64
  %45 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 10, i64 %44
  %46 = load i32, ptr %45, align 4, !tbaa !39
  %47 = icmp sgt i32 %46, %28
  br i1 %47, label %54, label %48

48:                                               ; preds = %43
  store i32 %41, ptr %35, align 16, !tbaa !70
  %49 = load i32, ptr %36, align 4, !tbaa !153
  %50 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef %0, i32 noundef %49)
  %51 = sext i32 %50 to i64
  %52 = icmp ugt i64 %39, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  store i32 %41, ptr %14, align 8, !tbaa !273
  br label %54

54:                                               ; preds = %48, %53, %37, %43
  %55 = phi i64 [ %39, %43 ], [ %39, %37 ], [ %51, %53 ], [ %39, %48 ]
  %56 = getelementptr inbounds i8, ptr %40, i64 1
  %57 = load i8, ptr %56, align 1, !tbaa !5
  %58 = icmp sgt i8 %57, -1
  br i1 %58, label %37, label %59, !llvm.loop !283

59:                                               ; preds = %54, %13, %2
  %60 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 27
  %61 = load i32, ptr %60, align 4, !tbaa !272
  %62 = and i32 %61, 11
  %63 = and i32 %61, 8
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, i32 %62, i32 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [5 x [5 x i8]], ptr @i8x8chroma_mode_available, i64 0, i64 %66
  %68 = getelementptr inbounds i8, ptr %67, i64 1
  %69 = load i8, ptr %68, align 1, !tbaa !5
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %71, label %152

71:                                               ; preds = %59
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  %72 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 19
  %73 = load i32, ptr %72, align 4, !tbaa !158
  %74 = mul nsw i32 %73, 5
  %75 = sdiv i32 %74, 4
  %76 = load i8, ptr %67, align 1, !tbaa !5
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %78, label %151

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 21
  br label %80

80:                                               ; preds = %78, %96
  %81 = phi i8 [ %76, %78 ], [ %99, %96 ]
  %82 = phi ptr [ %67, %78 ], [ %98, %96 ]
  %83 = phi i32 [ 0, %78 ], [ %97, %96 ]
  %84 = zext i8 %81 to i64
  %85 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 20, i64 %84
  %86 = load i32, ptr %85, align 4, !tbaa !39
  %87 = icmp slt i32 %86, %75
  br i1 %87, label %88, label %96

88:                                               ; preds = %80
  %89 = zext i8 %81 to i32
  %90 = load i32, ptr %79, align 4, !tbaa !284
  %91 = icmp eq i32 %90, %89
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = add nsw i32 %83, 1
  %94 = sext i32 %83 to i64
  %95 = getelementptr inbounds [4 x i8], ptr %5, i64 0, i64 %94
  store i8 %81, ptr %95, align 1, !tbaa !5
  br label %96

96:                                               ; preds = %92, %88, %80
  %97 = phi i32 [ %93, %92 ], [ %83, %88 ], [ %83, %80 ]
  %98 = getelementptr inbounds i8, ptr %82, i64 1
  %99 = load i8, ptr %98, align 1, !tbaa !5
  %100 = icmp sgt i8 %99, -1
  br i1 %100, label %80, label %101, !llvm.loop !285

101:                                              ; preds = %96
  %102 = icmp sgt i32 %97, 0
  br i1 %102, label %103, label %151

103:                                              ; preds = %101
  %104 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %105 = load i32, ptr %104, align 4, !tbaa !71
  %106 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 69
  %107 = load i32, ptr %106, align 4, !tbaa !151
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [52 x i32], ptr @x264_lambda2_tab, i64 0, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !39
  %111 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 21
  %112 = load i32, ptr %111, align 4, !tbaa !284
  %113 = tail call fastcc i64 @x264_rd_cost_i8x8_chroma(ptr noundef %0, i32 noundef %110, i32 noundef %112, i32 noundef 0)
  %114 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %115 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %116 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %117 = zext i32 %97 to i64
  br label %121

118:                                              ; preds = %146
  %119 = load i32, ptr %111, align 4, !tbaa !284
  %120 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 60
  store i32 %119, ptr %120, align 4, !tbaa !72
  store i32 %147, ptr %104, align 4, !tbaa !71
  br label %151

121:                                              ; preds = %103, %146
  %122 = phi i64 [ 0, %103 ], [ %149, %146 ]
  %123 = phi i64 [ %113, %103 ], [ %148, %146 ]
  %124 = phi i32 [ %105, %103 ], [ %147, %146 ]
  %125 = getelementptr inbounds [4 x i8], ptr %5, i64 0, i64 %122
  %126 = load i8, ptr %125, align 1, !tbaa !5
  %127 = sext i8 %126 to i32
  %128 = load i32, ptr %114, align 4, !tbaa !164
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %121
  tail call void @x264_predict_lossless_8x8_chroma(ptr noundef nonnull %0, i32 noundef %127) #17
  br label %138

131:                                              ; preds = %121
  %132 = sext i8 %126 to i64
  %133 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 65, i64 %132
  %134 = load ptr, ptr %133, align 8, !tbaa !46
  %135 = load ptr, ptr %115, align 8, !tbaa !46
  tail call void %134(ptr noundef %135) #17
  %136 = load ptr, ptr %133, align 8, !tbaa !46
  %137 = load ptr, ptr %116, align 16, !tbaa !46
  tail call void %136(ptr noundef %137) #17
  br label %138

138:                                              ; preds = %131, %130
  %139 = load i32, ptr %104, align 4, !tbaa !71
  %140 = icmp ne i32 %139, 0
  %141 = zext i1 %140 to i32
  %142 = tail call fastcc i64 @x264_rd_cost_i8x8_chroma(ptr noundef nonnull %0, i32 noundef %110, i32 noundef %127, i32 noundef %141)
  %143 = icmp ult i64 %142, %123
  br i1 %143, label %144, label %146

144:                                              ; preds = %138
  store i32 %127, ptr %111, align 4, !tbaa !284
  %145 = load i32, ptr %104, align 4, !tbaa !71
  br label %146

146:                                              ; preds = %144, %138
  %147 = phi i32 [ %145, %144 ], [ %124, %138 ]
  %148 = phi i64 [ %142, %144 ], [ %123, %138 ]
  %149 = add nuw nsw i64 %122, 1
  %150 = icmp eq i64 %149, %117
  br i1 %150, label %118, label %121, !llvm.loop !286

151:                                              ; preds = %71, %118, %101
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  br label %152

152:                                              ; preds = %151, %59
  %153 = load i32, ptr %10, align 8, !tbaa !49
  switch i32 %153, label %1036 [
    i32 0, label %154
    i32 1, label %540
  ]

154:                                              ; preds = %152
  %155 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %156 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %157 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 68
  %158 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 0
  %159 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %160 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 0, i64 6
  %161 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 2, i64 6
  %162 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 77
  %163 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 6
  %164 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %165 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 9, i64 68
  %166 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 68
  %167 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 9, i64 93
  %168 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 93
  %169 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %170 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 9, i64 247
  %171 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 247
  %172 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 8
  %173 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67
  %174 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 9, i64 69
  %175 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  br label %176

176:                                              ; preds = %154, %522
  %177 = phi i64 [ 0, %154 ], [ %538, %522 ]
  %178 = phi i8 [ 0, %154 ], [ %528, %522 ]
  %179 = phi i32 [ 0, %154 ], [ %527, %522 ]
  %180 = phi i32 [ 0, %154 ], [ %526, %522 ]
  %181 = phi i32 [ 0, %154 ], [ %525, %522 ]
  %182 = phi i32 [ 0, %154 ], [ %524, %522 ]
  %183 = getelementptr inbounds [16 x i16], ptr @block_idx_xy_fdec, i64 0, i64 %177
  %184 = load i16, ptr %183, align 2, !tbaa !37
  %185 = zext i16 %184 to i64
  %186 = getelementptr inbounds i8, ptr %8, i64 %185
  %187 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 26, i64 %177
  %188 = load i32, ptr %187, align 4, !tbaa !39
  %189 = and i32 %188, 11
  %190 = and i32 %188, 8
  %191 = icmp eq i32 %190, 0
  %192 = select i1 %191, i32 %189, i32 4
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds [5 x [10 x i8]], ptr @i4x4_mode_available, i64 0, i64 %193
  %195 = and i32 %188, 6
  %196 = icmp eq i32 %195, 2
  br i1 %196, label %197, label %203

197:                                              ; preds = %176
  %198 = getelementptr inbounds i8, ptr %186, i64 -29
  %199 = load i8, ptr %198, align 1, !tbaa !5
  %200 = zext i8 %199 to i32
  %201 = mul nuw i32 %200, 16843009
  %202 = getelementptr inbounds i8, ptr %186, i64 -28
  store i32 %201, ptr %202, align 4, !tbaa !5
  br label %203

203:                                              ; preds = %197, %176
  %204 = load i8, ptr %194, align 2, !tbaa !5
  %205 = icmp sgt i8 %204, -1
  br i1 %205, label %209, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %177
  %208 = load i32, ptr %207, align 4, !tbaa !39
  br label %522

209:                                              ; preds = %203
  %210 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %177
  %211 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %177
  %212 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %177
  %213 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %177
  %214 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 %177
  %215 = getelementptr inbounds i8, ptr %186, i64 32
  %216 = getelementptr inbounds i8, ptr %186, i64 64
  %217 = getelementptr inbounds i8, ptr %186, i64 96
  %218 = trunc i64 %177 to i32
  %219 = trunc i64 %177 to i32
  br label %220

220:                                              ; preds = %209, %512
  %221 = phi i8 [ %204, %209 ], [ %520, %512 ]
  %222 = phi i64 [ 1152921504606846976, %209 ], [ %518, %512 ]
  %223 = phi ptr [ %194, %209 ], [ %519, %512 ]
  %224 = phi i8 [ %178, %209 ], [ %517, %512 ]
  %225 = phi i32 [ %179, %209 ], [ %516, %512 ]
  %226 = phi i32 [ %180, %209 ], [ %515, %512 ]
  %227 = phi i32 [ %181, %209 ], [ %514, %512 ]
  %228 = phi i32 [ %182, %209 ], [ %513, %512 ]
  %229 = zext i8 %221 to i32
  %230 = load i32, ptr %155, align 4, !tbaa !164
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %233, label %232

232:                                              ; preds = %220
  tail call void @x264_predict_lossless_4x4(ptr noundef nonnull %0, ptr noundef %186, i32 noundef %218, i32 noundef %229) #17
  br label %237

233:                                              ; preds = %220
  %234 = zext i8 %221 to i64
  %235 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 67, i64 %234
  %236 = load ptr, ptr %235, align 8, !tbaa !46
  tail call void %236(ptr noundef %186) #17
  br label %237

237:                                              ; preds = %233, %232
  %238 = phi i32 [ %219, %233 ], [ %218, %232 ]
  %239 = load i32, ptr %156, align 4, !tbaa !153
  %240 = load i32, ptr %157, align 16, !tbaa !74
  tail call void @x264_mb_encode_i4x4(ptr noundef nonnull %0, i32 noundef %238, i32 noundef %240) #17
  %241 = load i8, ptr %210, align 1, !tbaa !5
  %242 = zext i8 %241 to i32
  %243 = shl nuw nsw i32 %242, 2
  %244 = load i8, ptr %211, align 1, !tbaa !5
  %245 = zext i8 %244 to i32
  %246 = load ptr, ptr %7, align 8, !tbaa !46
  %247 = zext i32 %243 to i64
  %248 = getelementptr inbounds i8, ptr %246, i64 %247
  %249 = shl nuw nsw i32 %245, 7
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i8, ptr %248, i64 %250
  %252 = load ptr, ptr %158, align 8, !tbaa !46
  %253 = load i32, ptr %159, align 4, !tbaa !57
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %294, label %255

255:                                              ; preds = %237
  %256 = shl nuw nsw i32 %245, 2
  %257 = load ptr, ptr %160, align 8, !tbaa !46
  %258 = tail call i32 %257(ptr noundef %251, i32 noundef 32, ptr noundef nonnull @ssd_plane.zero, i32 noundef 0) #17
  %259 = ashr i32 %258, 1
  %260 = load ptr, ptr %161, align 8, !tbaa !46
  %261 = tail call i32 %260(ptr noundef %251, i32 noundef 32, ptr noundef nonnull @ssd_plane.zero, i32 noundef 0) #17
  %262 = add nuw nsw i32 %242, 16
  %263 = add nuw nsw i32 %262, %256
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 15, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !39
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %255
  %269 = add nsw i32 %266, -1
  br label %283

270:                                              ; preds = %255
  %271 = load ptr, ptr %158, align 16, !tbaa !46
  %272 = getelementptr inbounds i8, ptr %271, i64 %247
  %273 = shl nuw nsw i32 %245, 6
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds i8, ptr %272, i64 %274
  %276 = load ptr, ptr %160, align 8, !tbaa !46
  %277 = tail call i32 %276(ptr noundef %275, i32 noundef 16, ptr noundef nonnull @cached_satd.zero, i32 noundef 0) #17
  %278 = ashr i32 %277, 1
  %279 = load ptr, ptr %161, align 8, !tbaa !46
  %280 = tail call i32 %279(ptr noundef %275, i32 noundef 16, ptr noundef nonnull @cached_satd.zero, i32 noundef 0) #17
  %281 = sub nsw i32 %280, %278
  %282 = add nsw i32 %281, 1
  store i32 %282, ptr %265, align 4, !tbaa !39
  br label %283

283:                                              ; preds = %270, %268
  %284 = phi i32 [ %269, %268 ], [ %281, %270 ]
  %285 = add i32 %259, %284
  %286 = sub i32 %261, %285
  %287 = tail call i32 @llvm.abs.i32(i32 %286, i1 true)
  %288 = load i32, ptr %159, align 4, !tbaa !57
  %289 = mul nsw i32 %287, %288
  %290 = load i32, ptr %162, align 16, !tbaa !59
  %291 = mul nsw i32 %289, %290
  %292 = add nsw i32 %291, 128
  %293 = ashr i32 %292, 8
  br label %294

294:                                              ; preds = %283, %237
  %295 = phi i32 [ %293, %283 ], [ 0, %237 ]
  %296 = getelementptr inbounds i8, ptr %252, i64 %247
  %297 = shl nuw nsw i32 %245, 6
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds i8, ptr %296, i64 %298
  %300 = load ptr, ptr %163, align 8, !tbaa !46
  %301 = tail call i32 %300(ptr noundef %299, i32 noundef 16, ptr noundef %251, i32 noundef 32) #17
  %302 = load i32, ptr %164, align 16, !tbaa !8
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %435, label %304

304:                                              ; preds = %294
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %4) #17
  %305 = load i16, ptr %166, align 4
  store i16 %305, ptr %165, align 8
  %306 = load i32, ptr %168, align 1
  store i32 %306, ptr %167, align 1
  %307 = load i32, ptr %169, align 4, !tbaa !36
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [2 x [6 x i16]], ptr @significant_coeff_flag_offset, i64 0, i64 %308, i64 2
  %310 = load i16, ptr %309, align 4, !tbaa !37
  %311 = zext i16 %310 to i64
  %312 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 9, i64 %311
  %313 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %311
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %312, ptr noundef nonnull align 1 dereferenceable(16) %313, i64 16, i1 false)
  %314 = getelementptr inbounds [2 x [6 x i16]], ptr @last_coeff_flag_offset, i64 0, i64 %308, i64 2
  %315 = load i16, ptr %314, align 4, !tbaa !37
  %316 = zext i16 %315 to i64
  %317 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 9, i64 %316
  %318 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %316
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %317, ptr noundef nonnull align 1 dereferenceable(16) %318, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(10) %170, ptr noundef nonnull align 1 dereferenceable(10) %171, i64 10, i1 false)
  %319 = load i32, ptr %212, align 4, !tbaa !39
  %320 = add nsw i32 %319, -1
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [40 x i8], ptr %173, i64 0, i64 %321
  %323 = load i8, ptr %322, align 1, !tbaa !5
  %324 = sext i8 %323 to i64
  %325 = add nsw i32 %319, -8
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [40 x i8], ptr %173, i64 0, i64 %326
  %328 = load i8, ptr %327, align 1, !tbaa !5
  %329 = sext i8 %328 to i64
  %330 = add nsw i64 %324, 1
  %331 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %330
  %332 = load i8, ptr %331, align 1, !tbaa !5
  %333 = add nsw i64 %329, 1
  %334 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %333
  %335 = load i8, ptr %334, align 1, !tbaa !5
  %336 = tail call i8 @llvm.smin.i8(i8 %332, i8 %335)
  %337 = icmp slt i8 %336, 0
  %338 = select i1 %337, i8 2, i8 %336
  %339 = add nuw nsw i32 %229, 1
  %340 = zext i32 %339 to i64
  %341 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %340
  %342 = load i8, ptr %341, align 1, !tbaa !5
  %343 = icmp eq i8 %338, %342
  %344 = load i8, ptr %165, align 8, !tbaa !5
  %345 = zext i8 %344 to i64
  br i1 %343, label %346, label %353

346:                                              ; preds = %304
  %347 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %345, i64 1
  %348 = load i8, ptr %347, align 1, !tbaa !5
  %349 = xor i64 %345, 1
  %350 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %349
  %351 = load i16, ptr %350, align 2, !tbaa !37
  %352 = zext i16 %351 to i32
  br label %395

353:                                              ; preds = %304
  %354 = sext i8 %342 to i32
  %355 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %345, i64 0
  %356 = load i8, ptr %355, align 2, !tbaa !5
  %357 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %345
  %358 = load i16, ptr %357, align 2, !tbaa !37
  %359 = zext i16 %358 to i32
  %360 = icmp sgt i8 %342, %338
  %361 = sext i1 %360 to i32
  %362 = add nsw i32 %361, %354
  %363 = and i32 %362, 1
  %364 = zext i32 %363 to i64
  %365 = load i8, ptr %174, align 1, !tbaa !5
  %366 = zext i8 %365 to i64
  %367 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %366, i64 %364
  %368 = load i8, ptr %367, align 1, !tbaa !5
  %369 = xor i64 %366, %364
  %370 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %369
  %371 = load i16, ptr %370, align 2, !tbaa !37
  %372 = zext i16 %371 to i32
  %373 = add nuw nsw i32 %372, %359
  %374 = lshr i32 %362, 1
  %375 = and i32 %374, 1
  %376 = zext i32 %375 to i64
  %377 = zext i8 %368 to i64
  %378 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %377, i64 %376
  %379 = load i8, ptr %378, align 1, !tbaa !5
  %380 = xor i64 %377, %376
  %381 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %380
  %382 = load i16, ptr %381, align 2, !tbaa !37
  %383 = zext i16 %382 to i32
  %384 = add nuw nsw i32 %373, %383
  %385 = ashr i32 %362, 2
  %386 = sext i32 %385 to i64
  %387 = zext i8 %379 to i64
  %388 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %387, i64 %386
  %389 = load i8, ptr %388, align 1, !tbaa !5
  store i8 %389, ptr %174, align 1, !tbaa !5
  %390 = xor i64 %387, %386
  %391 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %390
  %392 = load i16, ptr %391, align 2, !tbaa !37
  %393 = zext i16 %392 to i32
  %394 = add nuw nsw i32 %384, %393
  br label %395

395:                                              ; preds = %353, %346
  %396 = phi i8 [ %348, %346 ], [ %356, %353 ]
  %397 = phi i32 [ %352, %346 ], [ %394, %353 ]
  store i8 %396, ptr %165, align 8
  %398 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %321
  %399 = load i8, ptr %398, align 1, !tbaa !5
  %400 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %326
  %401 = load i8, ptr %400, align 1, !tbaa !5
  %402 = icmp eq i8 %401, 0
  %403 = select i1 %402, i64 0, i64 2
  %404 = icmp eq i8 %399, 0
  %405 = select i1 %404, i64 93, i64 94
  %406 = add nuw nsw i64 %403, %405
  %407 = sext i32 %319 to i64
  %408 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %407
  %409 = load i8, ptr %408, align 1, !tbaa !5
  %410 = icmp eq i8 %409, 0
  %411 = getelementptr inbounds %struct.x264_cabac_t, ptr %4, i64 0, i32 9, i64 %406
  %412 = load i8, ptr %411, align 1, !tbaa !5
  %413 = zext i8 %412 to i64
  br i1 %410, label %423, label %414

414:                                              ; preds = %395
  %415 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %413, i64 1
  %416 = load i8, ptr %415, align 1, !tbaa !5
  store i8 %416, ptr %411, align 1, !tbaa !5
  %417 = xor i64 %413, 1
  %418 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %417
  %419 = load i16, ptr %418, align 2, !tbaa !37
  %420 = zext i16 %419 to i32
  %421 = add nuw nsw i32 %397, %420
  store i32 %421, ptr %172, align 16, !tbaa !40
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef 2, ptr noundef nonnull %213, i32 noundef 0)
  %422 = load i32, ptr %172, align 16, !tbaa !40
  br label %428

423:                                              ; preds = %395
  %424 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %413
  %425 = load i16, ptr %424, align 2, !tbaa !37
  %426 = zext i16 %425 to i32
  %427 = add nuw nsw i32 %397, %426
  br label %428

428:                                              ; preds = %423, %414
  %429 = phi i32 [ %422, %414 ], [ %427, %423 ]
  %430 = sext i32 %429 to i64
  %431 = sext i32 %239 to i64
  %432 = mul nsw i64 %430, %431
  %433 = add nsw i64 %432, 128
  %434 = lshr i64 %433, 8
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %4) #17
  br label %496

435:                                              ; preds = %294
  %436 = load i32, ptr %212, align 4, !tbaa !39
  %437 = add nsw i32 %436, -1
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds [40 x i8], ptr %173, i64 0, i64 %438
  %440 = load i8, ptr %439, align 1, !tbaa !5
  %441 = sext i8 %440 to i64
  %442 = add nsw i32 %436, -8
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [40 x i8], ptr %173, i64 0, i64 %443
  %445 = load i8, ptr %444, align 1, !tbaa !5
  %446 = sext i8 %445 to i64
  %447 = add nsw i64 %441, 1
  %448 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %447
  %449 = load i8, ptr %448, align 1, !tbaa !5
  %450 = add nsw i64 %446, 1
  %451 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %450
  %452 = load i8, ptr %451, align 1, !tbaa !5
  %453 = tail call i8 @llvm.smin.i8(i8 %449, i8 %452)
  %454 = icmp slt i8 %453, 0
  %455 = select i1 %454, i8 2, i8 %453
  %456 = add nuw nsw i32 %229, 1
  %457 = zext i32 %456 to i64
  %458 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %457
  %459 = load i8, ptr %458, align 1, !tbaa !5
  %460 = icmp eq i8 %455, %459
  %461 = select i1 %460, i32 1, i32 4
  store i32 %461, ptr %175, align 4, !tbaa !41
  %462 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %438
  %463 = load i8, ptr %462, align 1, !tbaa !5
  %464 = zext i8 %463 to i32
  %465 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %443
  %466 = load i8, ptr %465, align 1, !tbaa !5
  %467 = zext i8 %466 to i32
  %468 = add nuw nsw i32 %467, %464
  %469 = icmp ult i32 %468, 128
  %470 = add nuw nsw i32 %468, 1
  %471 = lshr i32 %470, 1
  %472 = select i1 %469, i32 %471, i32 %468
  %473 = and i32 %472, 127
  %474 = zext i32 %473 to i64
  %475 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %474
  %476 = load i8, ptr %475, align 1, !tbaa !5
  %477 = sext i32 %436 to i64
  %478 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %477
  %479 = load i8, ptr %478, align 1, !tbaa !5
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %481, label %487

481:                                              ; preds = %435
  %482 = zext i8 %476 to i64
  %483 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %482, i32 1
  %484 = load i8, ptr %483, align 1, !tbaa !43
  %485 = zext i8 %484 to i32
  %486 = add nuw nsw i32 %461, %485
  store i32 %486, ptr %175, align 4, !tbaa !41
  br label %492

487:                                              ; preds = %435
  %488 = zext i8 %476 to i32
  %489 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %213, i32 noundef %488)
  %490 = trunc i32 %489 to i8
  store i8 %490, ptr %478, align 1, !tbaa !5
  %491 = load i32, ptr %175, align 4, !tbaa !41
  br label %492

492:                                              ; preds = %487, %481
  %493 = phi i32 [ %491, %487 ], [ %486, %481 ]
  %494 = mul nsw i32 %493, %239
  %495 = sext i32 %494 to i64
  br label %496

496:                                              ; preds = %428, %492
  %497 = phi i32 [ %319, %428 ], [ %436, %492 ]
  %498 = phi i64 [ %434, %428 ], [ %495, %492 ]
  %499 = add nsw i32 %301, %295
  %500 = sext i32 %499 to i64
  %501 = shl nsw i64 %500, 8
  %502 = add nsw i64 %498, %501
  %503 = icmp ugt i64 %222, %502
  br i1 %503, label %504, label %512

504:                                              ; preds = %496
  store i32 %229, ptr %214, align 4, !tbaa !39
  %505 = load i32, ptr %186, align 4, !tbaa !5
  %506 = load i32, ptr %215, align 4, !tbaa !5
  %507 = load i32, ptr %216, align 4, !tbaa !5
  %508 = load i32, ptr %217, align 4, !tbaa !5
  %509 = sext i32 %497 to i64
  %510 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %509
  %511 = load i8, ptr %510, align 1, !tbaa !5
  br label %512

512:                                              ; preds = %504, %496
  %513 = phi i32 [ %505, %504 ], [ %228, %496 ]
  %514 = phi i32 [ %506, %504 ], [ %227, %496 ]
  %515 = phi i32 [ %507, %504 ], [ %226, %496 ]
  %516 = phi i32 [ %508, %504 ], [ %225, %496 ]
  %517 = phi i8 [ %511, %504 ], [ %224, %496 ]
  %518 = phi i64 [ %502, %504 ], [ %222, %496 ]
  %519 = getelementptr inbounds i8, ptr %223, i64 1
  %520 = load i8, ptr %519, align 1, !tbaa !5
  %521 = icmp sgt i8 %520, -1
  br i1 %521, label %220, label %522, !llvm.loop !287

522:                                              ; preds = %512, %206
  %523 = phi i32 [ %208, %206 ], [ %497, %512 ]
  %524 = phi i32 [ %182, %206 ], [ %513, %512 ]
  %525 = phi i32 [ %181, %206 ], [ %514, %512 ]
  %526 = phi i32 [ %180, %206 ], [ %515, %512 ]
  %527 = phi i32 [ %179, %206 ], [ %516, %512 ]
  %528 = phi i8 [ %178, %206 ], [ %517, %512 ]
  store i32 %524, ptr %186, align 4, !tbaa !5
  %529 = getelementptr inbounds i8, ptr %186, i64 32
  store i32 %525, ptr %529, align 4, !tbaa !5
  %530 = getelementptr inbounds i8, ptr %186, i64 64
  store i32 %526, ptr %530, align 4, !tbaa !5
  %531 = getelementptr inbounds i8, ptr %186, i64 96
  store i32 %527, ptr %531, align 4, !tbaa !5
  %532 = sext i32 %523 to i64
  %533 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %532
  store i8 %528, ptr %533, align 1, !tbaa !5
  %534 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 %177
  %535 = load i32, ptr %534, align 4, !tbaa !39
  %536 = trunc i32 %535 to i8
  %537 = getelementptr inbounds [40 x i8], ptr %173, i64 0, i64 %532
  store i8 %536, ptr %537, align 1, !tbaa !5
  %538 = add nuw nsw i64 %177, 1
  %539 = icmp eq i64 %538, 16
  br i1 %539, label %1036, label %176, !llvm.loop !288

540:                                              ; preds = %152
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %6) #17
  %541 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 68
  %542 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %543 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 13
  %544 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %545 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %546 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  %547 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 68
  %548 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 0
  %549 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %550 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 13, i64 3
  %551 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 77
  %552 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 3
  %553 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %554 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 68
  %555 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 68
  %556 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 73
  %557 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 73
  %558 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %559 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 426
  %560 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 426
  %561 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 8
  %562 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67
  %563 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 69
  %564 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 14
  %565 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 13
  %566 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %567 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  br label %569

568:                                              ; preds = %1012
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %6) #17
  br label %1036

569:                                              ; preds = %540, %1012
  %570 = phi i8 [ undef, %540 ], [ %991, %1012 ]
  %571 = phi i8 [ undef, %540 ], [ %992, %1012 ]
  %572 = phi i8 [ undef, %540 ], [ %993, %1012 ]
  %573 = phi i8 [ undef, %540 ], [ %994, %1012 ]
  %574 = phi i8 [ undef, %540 ], [ %995, %1012 ]
  %575 = phi i8 [ undef, %540 ], [ %996, %1012 ]
  %576 = phi i8 [ undef, %540 ], [ %997, %1012 ]
  %577 = phi i64 [ 0, %540 ], [ %1034, %1012 ]
  %578 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 %577
  %579 = load i32, ptr %578, align 4, !tbaa !39
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 14, i64 %580, i64 %577
  %582 = load i32, ptr %581, align 4, !tbaa !39
  %583 = mul nsw i32 %582, 11
  %584 = sdiv i32 %583, 8
  %585 = trunc i64 %577 to i32
  %586 = and i32 %585, 1
  %587 = shl nuw nsw i32 %586, 3
  %588 = zext i32 %587 to i64
  %589 = getelementptr inbounds i8, ptr %8, i64 %588
  %590 = shl i64 %577, 7
  %591 = and i64 %590, 2147483392
  %592 = getelementptr inbounds i8, ptr %589, i64 %591
  %593 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 25, i64 %577
  %594 = load i32, ptr %593, align 4, !tbaa !39
  %595 = and i32 %594, 11
  %596 = and i32 %594, 8
  %597 = icmp eq i32 %596, 0
  %598 = select i1 %597, i32 %595, i32 4
  %599 = zext i32 %598 to i64
  %600 = getelementptr inbounds [5 x [10 x i8]], ptr @i4x4_mode_available, i64 0, i64 %599
  %601 = load ptr, ptr %541, align 16, !tbaa !276
  call void %601(ptr noundef %592, ptr noundef nonnull %6, i32 noundef %594, i32 noundef 15) #17
  %602 = load i8, ptr %600, align 2, !tbaa !5
  %603 = icmp sgt i8 %602, -1
  br i1 %603, label %604, label %990

604:                                              ; preds = %569
  %605 = shl nuw nsw i32 1, %585
  %606 = xor i32 %605, -1
  %607 = trunc i64 %577 to i32
  %608 = shl i32 %607, 3
  %609 = and i32 %608, 8
  %610 = shl nsw i64 %577, 2
  %611 = trunc i64 %610 to i32
  %612 = and i32 %611, 2147483640
  %613 = zext i32 %609 to i64
  %614 = shl nsw i32 %612, 5
  %615 = zext i32 %614 to i64
  %616 = lshr exact i32 %609, 3
  %617 = lshr exact i32 %612, 2
  %618 = add nuw nsw i32 %616, 5
  %619 = add nuw nsw i32 %618, %617
  %620 = zext i32 %619 to i64
  %621 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 13, i64 %620
  %622 = shl nsw i32 %612, 4
  %623 = zext i32 %622 to i64
  %624 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %610
  %625 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2, i64 %577
  %626 = getelementptr inbounds i8, ptr %592, i64 224
  %627 = icmp eq i32 %586, 0
  %628 = or i64 %610, 2
  %629 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %628
  %630 = getelementptr inbounds i8, ptr %592, i64 7
  %631 = getelementptr inbounds i8, ptr %592, i64 39
  %632 = getelementptr inbounds i8, ptr %592, i64 71
  %633 = getelementptr inbounds i8, ptr %592, i64 103
  %634 = getelementptr inbounds i8, ptr %592, i64 135
  %635 = getelementptr inbounds i8, ptr %592, i64 167
  %636 = getelementptr inbounds i8, ptr %592, i64 199
  br label %637

637:                                              ; preds = %604, %974
  %638 = phi i8 [ %570, %604 ], [ %975, %974 ]
  %639 = phi i8 [ %571, %604 ], [ %976, %974 ]
  %640 = phi i8 [ %572, %604 ], [ %977, %974 ]
  %641 = phi i8 [ %573, %604 ], [ %978, %974 ]
  %642 = phi i8 [ %574, %604 ], [ %979, %974 ]
  %643 = phi i8 [ %575, %604 ], [ %980, %974 ]
  %644 = phi i8 [ %576, %604 ], [ %981, %974 ]
  %645 = phi i8 [ %602, %604 ], [ %988, %974 ]
  %646 = phi i64 [ 1152921504606846976, %604 ], [ %986, %974 ]
  %647 = phi i32 [ 0, %604 ], [ %985, %974 ]
  %648 = phi i16 [ 0, %604 ], [ %984, %974 ]
  %649 = phi i16 [ 0, %604 ], [ %983, %974 ]
  %650 = phi i64 [ 0, %604 ], [ %982, %974 ]
  %651 = phi ptr [ %600, %604 ], [ %987, %974 ]
  %652 = zext i8 %645 to i32
  %653 = zext i8 %645 to i64
  %654 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 14, i64 %653, i64 %577
  %655 = load i32, ptr %654, align 4, !tbaa !39
  %656 = icmp sgt i32 %655, %584
  br i1 %656, label %974, label %657

657:                                              ; preds = %637
  %658 = load i32, ptr %542, align 4, !tbaa !164
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %661, label %660

660:                                              ; preds = %657
  call void @x264_predict_lossless_8x8(ptr noundef nonnull %0, ptr noundef %592, i32 noundef %585, i32 noundef %652, ptr noundef nonnull %6) #17
  br label %664

661:                                              ; preds = %657
  %662 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 %653
  %663 = load ptr, ptr %662, align 8, !tbaa !46
  call void %663(ptr noundef %592, ptr noundef nonnull %6) #17
  br label %664

664:                                              ; preds = %661, %660
  %665 = load i32, ptr %543, align 16, !tbaa !282
  %666 = load i32, ptr %545, align 4, !tbaa !153
  %667 = and i32 %665, %606
  store i32 %667, ptr %544, align 8, !tbaa !45
  store i32 1, ptr %546, align 4, !tbaa !51
  %668 = load i32, ptr %547, align 16, !tbaa !74
  call void @x264_mb_encode_i8x8(ptr noundef nonnull %0, i32 noundef %585, i32 noundef %668) #17
  %669 = load ptr, ptr %7, align 8, !tbaa !46
  %670 = getelementptr inbounds i8, ptr %669, i64 %613
  %671 = getelementptr inbounds i8, ptr %670, i64 %615
  %672 = load ptr, ptr %548, align 8, !tbaa !46
  %673 = load i32, ptr %549, align 4, !tbaa !57
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %709, label %675

675:                                              ; preds = %664
  %676 = load ptr, ptr %550, align 8, !tbaa !46
  %677 = call i64 %676(ptr noundef %671, i32 noundef 32) #17
  %678 = load i64, ptr %621, align 8, !tbaa !58
  %679 = icmp eq i64 %678, 0
  br i1 %679, label %682, label %680

680:                                              ; preds = %675
  %681 = add i64 %678, -1
  br label %689

682:                                              ; preds = %675
  %683 = load ptr, ptr %548, align 16, !tbaa !46
  %684 = getelementptr inbounds i8, ptr %683, i64 %613
  %685 = getelementptr inbounds i8, ptr %684, i64 %623
  %686 = load ptr, ptr %550, align 8, !tbaa !46
  %687 = call i64 %686(ptr noundef %685, i32 noundef 16) #17
  %688 = add i64 %687, 1
  store i64 %688, ptr %621, align 8, !tbaa !58
  br label %689

689:                                              ; preds = %682, %680
  %690 = phi i64 [ %681, %680 ], [ %687, %682 ]
  %691 = trunc i64 %677 to i32
  %692 = trunc i64 %690 to i32
  %693 = sub nsw i32 %691, %692
  %694 = call i32 @llvm.abs.i32(i32 %693, i1 true)
  %695 = lshr i64 %677, 32
  %696 = trunc i64 %695 to i32
  %697 = lshr i64 %690, 32
  %698 = trunc i64 %697 to i32
  %699 = sub nsw i32 %696, %698
  %700 = call i32 @llvm.abs.i32(i32 %699, i1 true)
  %701 = add nuw nsw i32 %700, %694
  %702 = lshr i32 %701, 1
  %703 = load i32, ptr %549, align 4, !tbaa !57
  %704 = load i32, ptr %551, align 16, !tbaa !59
  %705 = mul i32 %704, %703
  %706 = mul i32 %705, %702
  %707 = add nsw i32 %706, 128
  %708 = ashr i32 %707, 8
  br label %709

709:                                              ; preds = %689, %664
  %710 = phi i32 [ %708, %689 ], [ 0, %664 ]
  %711 = getelementptr inbounds i8, ptr %672, i64 %613
  %712 = getelementptr inbounds i8, ptr %711, i64 %623
  %713 = load ptr, ptr %552, align 8, !tbaa !46
  %714 = call i32 %713(ptr noundef %712, i32 noundef 16, ptr noundef %671, i32 noundef 32) #17
  %715 = load i32, ptr %553, align 16, !tbaa !8
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %897, label %717

717:                                              ; preds = %709
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %3) #17
  %718 = load i16, ptr %555, align 4
  store i16 %718, ptr %554, align 8
  %719 = load i32, ptr %557, align 1
  store i32 %719, ptr %556, align 1
  %720 = load i32, ptr %558, align 4, !tbaa !36
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds [2 x [6 x i16]], ptr @significant_coeff_flag_offset, i64 0, i64 %721, i64 5
  %723 = load i16, ptr %722, align 2, !tbaa !37
  %724 = zext i16 %723 to i64
  %725 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 %724
  %726 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %724
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %725, ptr noundef nonnull align 1 dereferenceable(16) %726, i64 16, i1 false)
  %727 = getelementptr inbounds [2 x [6 x i16]], ptr @last_coeff_flag_offset, i64 0, i64 %721, i64 5
  %728 = load i16, ptr %727, align 2, !tbaa !37
  %729 = zext i16 %728 to i64
  %730 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 %729
  %731 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 9, i64 %729
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %730, ptr noundef nonnull align 1 dereferenceable(16) %731, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(10) %559, ptr noundef nonnull align 1 dereferenceable(10) %560, i64 10, i1 false)
  %732 = load i32, ptr %624, align 16, !tbaa !39
  %733 = add nsw i32 %732, -1
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds [40 x i8], ptr %562, i64 0, i64 %734
  %736 = load i8, ptr %735, align 1, !tbaa !5
  %737 = sext i8 %736 to i64
  %738 = add nsw i32 %732, -8
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [40 x i8], ptr %562, i64 0, i64 %739
  %741 = load i8, ptr %740, align 1, !tbaa !5
  %742 = sext i8 %741 to i64
  %743 = add nsw i64 %737, 1
  %744 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %743
  %745 = load i8, ptr %744, align 1, !tbaa !5
  %746 = add nsw i64 %742, 1
  %747 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %746
  %748 = load i8, ptr %747, align 1, !tbaa !5
  %749 = call i8 @llvm.smin.i8(i8 %745, i8 %748)
  %750 = icmp slt i8 %749, 0
  %751 = select i1 %750, i8 2, i8 %749
  %752 = add nuw nsw i32 %652, 1
  %753 = zext i32 %752 to i64
  %754 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %753
  %755 = load i8, ptr %754, align 1, !tbaa !5
  %756 = icmp eq i8 %751, %755
  %757 = load i8, ptr %554, align 8, !tbaa !5
  %758 = zext i8 %757 to i64
  br i1 %756, label %759, label %766

759:                                              ; preds = %717
  %760 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %758, i64 1
  %761 = load i8, ptr %760, align 1, !tbaa !5
  %762 = xor i64 %758, 1
  %763 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %762
  %764 = load i16, ptr %763, align 2, !tbaa !37
  %765 = zext i16 %764 to i32
  br label %808

766:                                              ; preds = %717
  %767 = sext i8 %755 to i32
  %768 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %758, i64 0
  %769 = load i8, ptr %768, align 2, !tbaa !5
  %770 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %758
  %771 = load i16, ptr %770, align 2, !tbaa !37
  %772 = zext i16 %771 to i32
  %773 = icmp sgt i8 %755, %751
  %774 = sext i1 %773 to i32
  %775 = add nsw i32 %774, %767
  %776 = and i32 %775, 1
  %777 = zext i32 %776 to i64
  %778 = load i8, ptr %563, align 1, !tbaa !5
  %779 = zext i8 %778 to i64
  %780 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %779, i64 %777
  %781 = load i8, ptr %780, align 1, !tbaa !5
  %782 = xor i64 %779, %777
  %783 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %782
  %784 = load i16, ptr %783, align 2, !tbaa !37
  %785 = zext i16 %784 to i32
  %786 = add nuw nsw i32 %785, %772
  %787 = lshr i32 %775, 1
  %788 = and i32 %787, 1
  %789 = zext i32 %788 to i64
  %790 = zext i8 %781 to i64
  %791 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %790, i64 %789
  %792 = load i8, ptr %791, align 1, !tbaa !5
  %793 = xor i64 %790, %789
  %794 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %793
  %795 = load i16, ptr %794, align 2, !tbaa !37
  %796 = zext i16 %795 to i32
  %797 = add nuw nsw i32 %786, %796
  %798 = ashr i32 %775, 2
  %799 = sext i32 %798 to i64
  %800 = zext i8 %792 to i64
  %801 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %800, i64 %799
  %802 = load i8, ptr %801, align 1, !tbaa !5
  store i8 %802, ptr %563, align 1, !tbaa !5
  %803 = xor i64 %800, %799
  %804 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %803
  %805 = load i16, ptr %804, align 2, !tbaa !37
  %806 = zext i16 %805 to i32
  %807 = add nuw nsw i32 %797, %806
  br label %808

808:                                              ; preds = %766, %759
  %809 = phi i8 [ %761, %759 ], [ %769, %766 ]
  %810 = phi i32 [ %765, %759 ], [ %807, %766 ]
  store i8 %809, ptr %554, align 8
  %811 = load i32, ptr %544, align 8, !tbaa !45
  %812 = load i32, ptr %564, align 4, !tbaa !289
  %813 = load i32, ptr %565, align 16, !tbaa !290
  %814 = shl i32 %812, 30
  %815 = ashr i32 %814, 31
  %816 = add nsw i32 %815, 76
  %817 = lshr i32 %813, 1
  %818 = and i32 %817, 2
  %819 = sub nuw nsw i32 %816, %818
  %820 = zext i32 %819 to i64
  %821 = and i32 %811, 1
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 %820
  %824 = load i8, ptr %823, align 1, !tbaa !5
  %825 = zext i8 %824 to i64
  %826 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %825, i64 %822
  %827 = load i8, ptr %826, align 1, !tbaa !5
  store i8 %827, ptr %823, align 1, !tbaa !5
  %828 = xor i64 %825, %822
  %829 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %828
  %830 = load i16, ptr %829, align 2, !tbaa !37
  %831 = zext i16 %830 to i32
  %832 = add nuw nsw i32 %810, %831
  %833 = lshr i32 %813, 2
  %834 = and i32 %833, 2
  %835 = or i32 %821, %834
  %836 = sub nuw nsw i32 76, %835
  %837 = zext i32 %836 to i64
  %838 = lshr i32 %811, 1
  %839 = and i32 %838, 1
  %840 = zext i32 %839 to i64
  %841 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 %837
  %842 = load i8, ptr %841, align 1, !tbaa !5
  %843 = zext i8 %842 to i64
  %844 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %843, i64 %840
  %845 = load i8, ptr %844, align 1, !tbaa !5
  store i8 %845, ptr %841, align 1, !tbaa !5
  %846 = xor i64 %843, %840
  %847 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %846
  %848 = load i16, ptr %847, align 2, !tbaa !37
  %849 = zext i16 %848 to i32
  %850 = add nuw nsw i32 %832, %849
  %851 = shl i32 %812, 28
  %852 = ashr i32 %851, 31
  %853 = shl i32 %811, 1
  %854 = and i32 %853, 2
  %855 = sub nsw i32 %852, %854
  %856 = add nsw i32 %855, 76
  %857 = zext i32 %856 to i64
  %858 = lshr i32 %811, 2
  %859 = and i32 %858, 1
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 %857
  %862 = load i8, ptr %861, align 1, !tbaa !5
  %863 = zext i8 %862 to i64
  %864 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %863, i64 %860
  %865 = load i8, ptr %864, align 1, !tbaa !5
  store i8 %865, ptr %861, align 1, !tbaa !5
  %866 = xor i64 %863, %860
  %867 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %866
  %868 = load i16, ptr %867, align 2, !tbaa !37
  %869 = zext i16 %868 to i32
  %870 = add nuw nsw i32 %850, %869
  %871 = and i32 %811, 2
  %872 = or i32 %871, %859
  %873 = sub nuw nsw i32 76, %872
  %874 = zext i32 %873 to i64
  %875 = lshr i32 %811, 3
  %876 = and i32 %875, 1
  %877 = getelementptr inbounds %struct.x264_cabac_t, ptr %3, i64 0, i32 9, i64 %874
  %878 = load i8, ptr %877, align 1, !tbaa !5
  %879 = zext i8 %878 to i32
  %880 = xor i32 %876, %879
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %881
  %883 = load i16, ptr %882, align 2, !tbaa !37
  %884 = zext i16 %883 to i32
  %885 = add nuw nsw i32 %870, %884
  store i32 %885, ptr %561, align 16, !tbaa !40
  %886 = and i32 %811, %605
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %890, label %888

888:                                              ; preds = %808
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %3, i32 noundef 5, ptr noundef nonnull %625, i32 noundef 1)
  %889 = load i32, ptr %561, align 16, !tbaa !40
  br label %890

890:                                              ; preds = %888, %808
  %891 = phi i32 [ %885, %808 ], [ %889, %888 ]
  %892 = sext i32 %891 to i64
  %893 = sext i32 %666 to i64
  %894 = mul nsw i64 %892, %893
  %895 = add nsw i64 %894, 128
  %896 = lshr i64 %895, 8
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %3) #17
  br label %940

897:                                              ; preds = %709
  %898 = load i32, ptr %624, align 16, !tbaa !39
  %899 = add nsw i32 %898, -1
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds [40 x i8], ptr %562, i64 0, i64 %900
  %902 = load i8, ptr %901, align 1, !tbaa !5
  %903 = sext i8 %902 to i64
  %904 = add nsw i32 %898, -8
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds [40 x i8], ptr %562, i64 0, i64 %905
  %907 = load i8, ptr %906, align 1, !tbaa !5
  %908 = sext i8 %907 to i64
  %909 = add nsw i64 %903, 1
  %910 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %909
  %911 = load i8, ptr %910, align 1, !tbaa !5
  %912 = add nsw i64 %908, 1
  %913 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %912
  %914 = load i8, ptr %913, align 1, !tbaa !5
  %915 = call i8 @llvm.smin.i8(i8 %911, i8 %914)
  %916 = icmp slt i8 %915, 0
  %917 = select i1 %916, i8 2, i8 %915
  %918 = add nuw nsw i32 %652, 1
  %919 = zext i32 %918 to i64
  %920 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %919
  %921 = load i8, ptr %920, align 1, !tbaa !5
  %922 = icmp eq i8 %917, %921
  %923 = select i1 %922, i32 1, i32 4
  %924 = load i32, ptr %567, align 4, !tbaa !71
  %925 = shl i32 %924, 4
  %926 = load i32, ptr %544, align 8, !tbaa !45
  %927 = or i32 %925, %926
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds [48 x i8], ptr @intra4x4_cbp_to_golomb, i64 0, i64 %928
  %930 = load i8, ptr %929, align 1, !tbaa !5
  %931 = zext i8 %930 to i64
  %932 = add nuw nsw i64 %931, 1
  %933 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %932
  %934 = load i8, ptr %933, align 1, !tbaa !5
  %935 = zext i8 %934 to i32
  %936 = add nuw nsw i32 %923, %935
  store i32 %936, ptr %566, align 4, !tbaa !41
  call fastcc void @x264_macroblock_luma_write_cavlc(ptr noundef nonnull %0, i32 noundef %585, i32 noundef %585)
  %937 = load i32, ptr %566, align 4, !tbaa !41
  %938 = mul nsw i32 %937, %666
  %939 = sext i32 %938 to i64
  br label %940

940:                                              ; preds = %890, %897
  %941 = phi i32 [ %732, %890 ], [ %898, %897 ]
  %942 = phi i64 [ %896, %890 ], [ %939, %897 ]
  %943 = add nsw i32 %714, %710
  %944 = sext i32 %943 to i64
  %945 = shl nsw i64 %944, 8
  %946 = add nsw i64 %942, %945
  %947 = icmp ugt i64 %646, %946
  br i1 %947, label %948, label %974

948:                                              ; preds = %940
  store i32 %652, ptr %578, align 4, !tbaa !39
  %949 = load i32, ptr %544, align 8, !tbaa !45
  %950 = load i64, ptr %626, align 8, !tbaa !5
  br i1 %627, label %951, label %959

951:                                              ; preds = %948
  %952 = load i8, ptr %630, align 1, !tbaa !5
  %953 = load i8, ptr %631, align 1, !tbaa !5
  %954 = load i8, ptr %632, align 1, !tbaa !5
  %955 = load i8, ptr %633, align 1, !tbaa !5
  %956 = load i8, ptr %634, align 1, !tbaa !5
  %957 = load i8, ptr %635, align 1, !tbaa !5
  %958 = load i8, ptr %636, align 1, !tbaa !5
  br label %959

959:                                              ; preds = %951, %948
  %960 = phi i8 [ %958, %951 ], [ %638, %948 ]
  %961 = phi i8 [ %957, %951 ], [ %639, %948 ]
  %962 = phi i8 [ %956, %951 ], [ %640, %948 ]
  %963 = phi i8 [ %955, %951 ], [ %641, %948 ]
  %964 = phi i8 [ %954, %951 ], [ %642, %948 ]
  %965 = phi i8 [ %953, %951 ], [ %643, %948 ]
  %966 = phi i8 [ %952, %951 ], [ %644, %948 ]
  %967 = sext i32 %941 to i64
  %968 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %967
  %969 = load i16, ptr %968, align 1, !tbaa !5
  %970 = load i32, ptr %629, align 8, !tbaa !39
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %971
  %973 = load i16, ptr %972, align 1, !tbaa !5
  br label %974

974:                                              ; preds = %940, %959, %637
  %975 = phi i8 [ %638, %637 ], [ %960, %959 ], [ %638, %940 ]
  %976 = phi i8 [ %639, %637 ], [ %961, %959 ], [ %639, %940 ]
  %977 = phi i8 [ %640, %637 ], [ %962, %959 ], [ %640, %940 ]
  %978 = phi i8 [ %641, %637 ], [ %963, %959 ], [ %641, %940 ]
  %979 = phi i8 [ %642, %637 ], [ %964, %959 ], [ %642, %940 ]
  %980 = phi i8 [ %643, %637 ], [ %965, %959 ], [ %643, %940 ]
  %981 = phi i8 [ %644, %637 ], [ %966, %959 ], [ %644, %940 ]
  %982 = phi i64 [ %650, %637 ], [ %950, %959 ], [ %650, %940 ]
  %983 = phi i16 [ %649, %637 ], [ %969, %959 ], [ %649, %940 ]
  %984 = phi i16 [ %648, %637 ], [ %973, %959 ], [ %648, %940 ]
  %985 = phi i32 [ %647, %637 ], [ %949, %959 ], [ %647, %940 ]
  %986 = phi i64 [ %646, %637 ], [ %946, %959 ], [ %646, %940 ]
  %987 = getelementptr inbounds i8, ptr %651, i64 1
  %988 = load i8, ptr %987, align 1, !tbaa !5
  %989 = icmp sgt i8 %988, -1
  br i1 %989, label %637, label %990, !llvm.loop !291

990:                                              ; preds = %974, %569
  %991 = phi i8 [ %570, %569 ], [ %975, %974 ]
  %992 = phi i8 [ %571, %569 ], [ %976, %974 ]
  %993 = phi i8 [ %572, %569 ], [ %977, %974 ]
  %994 = phi i8 [ %573, %569 ], [ %978, %974 ]
  %995 = phi i8 [ %574, %569 ], [ %979, %974 ]
  %996 = phi i8 [ %575, %569 ], [ %980, %974 ]
  %997 = phi i8 [ %576, %569 ], [ %981, %974 ]
  %998 = phi i64 [ 0, %569 ], [ %982, %974 ]
  %999 = phi i16 [ 0, %569 ], [ %983, %974 ]
  %1000 = phi i16 [ 0, %569 ], [ %984, %974 ]
  %1001 = phi i32 [ 0, %569 ], [ %985, %974 ]
  store i32 %1001, ptr %543, align 16, !tbaa !282
  %1002 = getelementptr inbounds i8, ptr %592, i64 224
  store i64 %998, ptr %1002, align 8, !tbaa !5
  %1003 = icmp eq i32 %586, 0
  br i1 %1003, label %1004, label %1012

1004:                                             ; preds = %990
  %1005 = getelementptr inbounds i8, ptr %592, i64 7
  store i8 %997, ptr %1005, align 1, !tbaa !5
  %1006 = getelementptr inbounds i8, ptr %592, i64 39
  store i8 %996, ptr %1006, align 1, !tbaa !5
  %1007 = getelementptr inbounds i8, ptr %592, i64 71
  store i8 %995, ptr %1007, align 1, !tbaa !5
  %1008 = getelementptr inbounds i8, ptr %592, i64 103
  store i8 %994, ptr %1008, align 1, !tbaa !5
  %1009 = getelementptr inbounds i8, ptr %592, i64 135
  store i8 %993, ptr %1009, align 1, !tbaa !5
  %1010 = getelementptr inbounds i8, ptr %592, i64 167
  store i8 %992, ptr %1010, align 1, !tbaa !5
  %1011 = getelementptr inbounds i8, ptr %592, i64 199
  store i8 %991, ptr %1011, align 1, !tbaa !5
  br label %1012

1012:                                             ; preds = %1004, %990
  %1013 = shl nsw i64 %577, 2
  %1014 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1013
  %1015 = load i32, ptr %1014, align 16, !tbaa !39
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1016
  store i16 %999, ptr %1017, align 1, !tbaa !5
  %1018 = or i64 %1013, 2
  %1019 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %1018
  %1020 = load i32, ptr %1019, align 8, !tbaa !39
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %1021
  store i16 %1000, ptr %1022, align 1, !tbaa !5
  %1023 = shl nuw nsw i32 %586, 1
  %1024 = load i32, ptr %578, align 4, !tbaa !39
  %1025 = trunc i64 %577 to i32
  %1026 = shl i32 %1025, 3
  %1027 = or i32 %1023, %1026
  %1028 = or i32 %1027, 12
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds [40 x i8], ptr %562, i64 0, i64 %1029
  %1031 = trunc i32 %1024 to i16
  %1032 = mul i16 %1031, 257
  store i16 %1032, ptr %1030, align 2, !tbaa !5
  %1033 = getelementptr inbounds i8, ptr %1030, i64 8
  store i16 %1032, ptr %1033, align 2, !tbaa !5
  %1034 = add nuw nsw i64 %577, 1
  %1035 = icmp eq i64 %1034, 4
  br i1 %1035, label %568, label %569, !llvm.loop !292

1036:                                             ; preds = %522, %152, %568
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @x264_mb_analyse_init_qp(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 68
  store i32 %2, ptr %4, align 16, !tbaa !74
  %5 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 2
  store i32 %2, ptr %5, align 8, !tbaa !149
  %6 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 39
  %7 = load ptr, ptr %6, align 16, !tbaa !150
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i8, ptr %7, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !5
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 69
  store i32 %11, ptr %12, align 4, !tbaa !151
  %13 = getelementptr inbounds [52 x i8], ptr @x264_lambda_tab, i64 0, i64 %8
  %14 = load i8, ptr %13, align 1, !tbaa !5
  %15 = zext i8 %14 to i32
  store i32 %15, ptr %1, align 16, !tbaa !152
  %16 = getelementptr inbounds [52 x i32], ptr @x264_lambda2_tab, i64 0, i64 %8
  %17 = load i32, ptr %16, align 4, !tbaa !39
  %18 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  store i32 %17, ptr %18, align 4, !tbaa !153
  %19 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 14
  %20 = load i32, ptr %19, align 8, !tbaa !154
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 5
  %24 = load i32, ptr %23, align 8, !tbaa !145
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i32
  %27 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 12
  store i32 %26, ptr %27, align 16, !tbaa !155
  br label %31

28:                                               ; preds = %3
  %29 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 12
  store i32 0, ptr %29, align 16, !tbaa !155
  %30 = icmp eq i32 %20, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %22, %28
  %32 = getelementptr inbounds [52 x i32], ptr @x264_trellis_lambda2_tab, i64 0, i64 %8
  %33 = load i32, ptr %32, align 4, !tbaa !39
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76
  store i32 %33, ptr %34, align 16, !tbaa !39
  %35 = getelementptr inbounds [2 x [52 x i32]], ptr @x264_trellis_lambda2_tab, i64 0, i64 1, i64 %8
  %36 = load i32, ptr %35, align 4, !tbaa !39
  %37 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 0, i64 1
  store i32 %36, ptr %37, align 4, !tbaa !39
  %38 = zext i8 %10 to i64
  %39 = getelementptr inbounds [52 x i32], ptr @x264_trellis_lambda2_tab, i64 0, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !39
  %41 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 1
  store i32 %40, ptr %41, align 8, !tbaa !39
  %42 = getelementptr inbounds [2 x [52 x i32]], ptr @x264_trellis_lambda2_tab, i64 0, i64 1, i64 %38
  %43 = load i32, ptr %42, align 4, !tbaa !39
  %44 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 76, i64 1, i64 1
  store i32 %43, ptr %44, align 4, !tbaa !39
  %45 = load i32, ptr %1, align 16, !tbaa !152
  br label %46

46:                                               ; preds = %31, %28
  %47 = phi i32 [ %45, %31 ], [ %15, %28 ]
  %48 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 77
  store i32 %47, ptr %48, align 16, !tbaa !59
  %49 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 20
  %50 = load i32, ptr %49, align 16, !tbaa !156
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %46
  %53 = add i32 %2, 12
  %54 = sub i32 %53, %11
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [37 x i16], ptr @x264_chroma_lambda2_offset_tab, i64 0, i64 %55
  %57 = load i16, ptr %56, align 2, !tbaa !37
  %58 = zext i16 %57 to i32
  br label %59

59:                                               ; preds = %46, %52
  %60 = phi i32 [ %58, %52 ], [ 256, %46 ]
  %61 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 78
  store i32 %60, ptr %61, align 4, !tbaa !47
  ret void
}

declare i32 @x264_macroblock_probe_skip(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_p8x8_mixed_ref(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.x264_me_t, align 16
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %3) #17
  %4 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %5 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %6 = load i32, ptr %5, align 8, !tbaa !39
  %7 = add nsw i32 %6, -1
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 13, ptr %8, align 4, !tbaa !50
  %9 = icmp sgt i32 %6, 1
  br i1 %9, label %10, label %91

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 3
  %12 = load i32, ptr %11, align 4, !tbaa !234
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %16 = load i32, ptr %15, align 4, !tbaa !229
  %17 = icmp eq i32 %12, %16
  br i1 %17, label %18, label %94

18:                                               ; preds = %14, %10
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 29
  %20 = load i32, ptr %19, align 4, !tbaa !203
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %94

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 30
  %24 = load i32, ptr %23, align 8, !tbaa !202
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %94

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 3
  %28 = load i8, ptr %27, align 1, !tbaa !5
  %29 = icmp sgt i8 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = zext i8 %28 to i32
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %33 = load i32, ptr %32, align 4, !tbaa !229
  %34 = icmp eq i32 %33, %31
  %35 = select i1 %34, i32 0, i32 %31
  br label %36

36:                                               ; preds = %30, %26
  %37 = phi i32 [ 0, %26 ], [ %35, %30 ]
  %38 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 4
  %39 = load i8, ptr %38, align 4, !tbaa !5
  %40 = sext i8 %39 to i32
  %41 = icmp slt i32 %37, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %44 = load i32, ptr %43, align 4, !tbaa !229
  %45 = icmp eq i32 %44, %40
  %46 = select i1 %45, i32 %37, i32 %40
  br label %47

47:                                               ; preds = %42, %36
  %48 = phi i32 [ %37, %36 ], [ %46, %42 ]
  %49 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 6
  %50 = load i8, ptr %49, align 2, !tbaa !5
  %51 = sext i8 %50 to i32
  %52 = icmp slt i32 %48, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %55 = load i32, ptr %54, align 4, !tbaa !229
  %56 = icmp eq i32 %55, %51
  %57 = select i1 %56, i32 %48, i32 %51
  br label %58

58:                                               ; preds = %53, %47
  %59 = phi i32 [ %48, %47 ], [ %57, %53 ]
  %60 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 8
  %61 = load i8, ptr %60, align 8, !tbaa !5
  %62 = sext i8 %61 to i32
  %63 = icmp slt i32 %59, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %66 = load i32, ptr %65, align 4, !tbaa !229
  %67 = icmp eq i32 %66, %62
  %68 = select i1 %67, i32 %59, i32 %62
  br label %69

69:                                               ; preds = %64, %58
  %70 = phi i32 [ %59, %58 ], [ %68, %64 ]
  %71 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 11
  %72 = load i8, ptr %71, align 1, !tbaa !5
  %73 = sext i8 %72 to i32
  %74 = icmp slt i32 %70, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %77 = load i32, ptr %76, align 4, !tbaa !229
  %78 = icmp eq i32 %77, %73
  %79 = select i1 %78, i32 %70, i32 %73
  br label %80

80:                                               ; preds = %75, %69
  %81 = phi i32 [ %70, %69 ], [ %79, %75 ]
  %82 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 27
  %83 = load i8, ptr %82, align 1, !tbaa !5
  %84 = sext i8 %83 to i32
  %85 = icmp slt i32 %81, %84
  br i1 %85, label %86, label %91

86:                                               ; preds = %80
  %87 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %88 = load i32, ptr %87, align 4, !tbaa !229
  %89 = icmp eq i32 %88, %84
  %90 = select i1 %89, i32 %81, i32 %84
  br label %91

91:                                               ; preds = %86, %80, %2
  %92 = phi i32 [ %7, %2 ], [ %81, %80 ], [ %90, %86 ]
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %115, label %94

94:                                               ; preds = %14, %18, %22, %91
  %95 = phi i32 [ %92, %91 ], [ %7, %22 ], [ %7, %18 ], [ %7, %14 ]
  %96 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 48
  %97 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %98 = add nuw nsw i32 %95, 1
  %99 = zext i32 %98 to i64
  %100 = and i64 %99, 1
  %101 = icmp eq i32 %95, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %94
  %103 = and i64 %99, 4294967294
  br label %150

104:                                              ; preds = %150, %94
  %105 = phi i64 [ 0, %94 ], [ %168, %150 ]
  %106 = icmp eq i64 %100, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds [32 x ptr], ptr %96, i64 0, i64 %105
  %109 = load ptr, ptr %108, align 8, !tbaa !46
  %110 = load i32, ptr %97, align 8, !tbaa !64
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [2 x i16], ptr %109, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %105
  store i32 %113, ptr %114, align 4, !tbaa !5
  br label %115

115:                                              ; preds = %107, %104, %91
  %116 = phi i32 [ %92, %91 ], [ %95, %104 ], [ %95, %107 ]
  %117 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %118 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 1
  %119 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %120 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 9
  %121 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 9, i64 1
  %122 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 7
  %123 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %124 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 7, i64 1
  %125 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %126 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 7, i64 2
  %127 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %128 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4
  %129 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 2
  %130 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20
  %131 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 5
  %132 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 6
  %133 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 5, i64 1
  %134 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 5, i64 2
  %135 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 5, i64 3
  %136 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 5, i64 4
  %137 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 5, i64 5
  %138 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22
  %139 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 8
  %140 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 4
  %141 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 3
  %142 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 10
  %143 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5
  %144 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 13
  %145 = getelementptr inbounds %struct.x264_me_t, ptr %3, i64 0, i32 12
  %146 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %147 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28
  %148 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %149 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 1
  br label %184

150:                                              ; preds = %150, %102
  %151 = phi i64 [ 0, %102 ], [ %168, %150 ]
  %152 = phi i64 [ 0, %102 ], [ %169, %150 ]
  %153 = getelementptr inbounds [32 x ptr], ptr %96, i64 0, i64 %151
  %154 = load ptr, ptr %153, align 8, !tbaa !46
  %155 = load i32, ptr %97, align 8, !tbaa !64
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [2 x i16], ptr %154, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %151
  store i32 %158, ptr %159, align 4, !tbaa !5
  %160 = or i64 %151, 1
  %161 = getelementptr inbounds [32 x ptr], ptr %96, i64 0, i64 %160
  %162 = load ptr, ptr %161, align 8, !tbaa !46
  %163 = load i32, ptr %97, align 8, !tbaa !64
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [2 x i16], ptr %162, i64 %164
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %160
  store i32 %166, ptr %167, align 4, !tbaa !5
  %168 = add nuw nsw i64 %151, 2
  %169 = add i64 %152, 2
  %170 = icmp eq i64 %169, %103
  br i1 %170, label %104, label %150, !llvm.loop !293

171:                                              ; preds = %326
  %172 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 0, i32 12
  %173 = load i32, ptr %172, align 8, !tbaa !230
  %174 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 1, i32 12
  %175 = load i32, ptr %174, align 8, !tbaa !230
  %176 = add nsw i32 %175, %173
  %177 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 2, i32 12
  %178 = load i32, ptr %177, align 8, !tbaa !230
  %179 = add nsw i32 %176, %178
  %180 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 3, i32 12
  %181 = load i32, ptr %180, align 8, !tbaa !230
  %182 = add nsw i32 %179, %181
  %183 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 4
  store i32 %182, ptr %183, align 16, !tbaa !189
  br i1 %249, label %328, label %347

184:                                              ; preds = %115, %326
  %185 = phi i64 [ 0, %115 ], [ %217, %326 ]
  %186 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %185
  %187 = trunc i64 %185 to i32
  %188 = and i32 %187, 1
  %189 = lshr i32 %187, 1
  store i32 3, ptr %3, align 16, !tbaa !222
  %190 = load ptr, ptr %117, align 16, !tbaa !219
  store ptr %190, ptr %118, align 8, !tbaa !223
  %191 = load <2 x i32>, ptr %119, align 16, !tbaa !39
  store <2 x i32> %191, ptr %120, align 8, !tbaa !39
  %192 = load ptr, ptr %4, align 8, !tbaa !46
  %193 = shl nuw nsw i32 %188, 3
  %194 = shl nuw nsw i32 %189, 3
  %195 = shl nuw nsw i32 %189, 7
  %196 = or i32 %193, %195
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i8, ptr %192, i64 %197
  store ptr %198, ptr %122, align 8, !tbaa !46
  %199 = load ptr, ptr %123, align 8, !tbaa !46
  %200 = shl nuw nsw i32 %188, 2
  %201 = shl nuw i32 %189, 2
  %202 = shl nuw nsw i32 %189, 6
  %203 = or i32 %200, %202
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %199, i64 %204
  store ptr %205, ptr %124, align 16, !tbaa !46
  %206 = load ptr, ptr %125, align 8, !tbaa !46
  %207 = getelementptr inbounds i8, ptr %206, i64 %204
  store ptr %207, ptr %126, align 8, !tbaa !46
  %208 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %185, i32 12
  store i32 2147483647, ptr %208, align 8, !tbaa !230
  %209 = shl nuw nsw i32 %188, 1
  %210 = trunc i64 %185 to i32
  %211 = shl i32 %210, 3
  %212 = or i32 %209, %211
  %213 = or i32 %212, 12
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %214
  %216 = getelementptr inbounds i8, ptr %215, i64 8
  %217 = add nuw nsw i64 %185, 1
  %218 = getelementptr inbounds [5 x [2 x i16]], ptr %143, i64 0, i64 %217
  %219 = trunc i64 %185 to i32
  %220 = shl i32 %219, 2
  %221 = trunc i64 %217 to i32
  br label %222

222:                                              ; preds = %314, %184
  %223 = phi i32 [ 0, %184 ], [ %315, %314 ]
  %224 = icmp sgt i32 %223, %116
  br i1 %224, label %225, label %250

225:                                              ; preds = %222
  %226 = load i32, ptr %127, align 4, !tbaa !229
  %227 = icmp eq i32 %223, %226
  br i1 %227, label %250, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %185, i32 13
  %230 = load i32, ptr %229, align 4, !tbaa !5
  %231 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %214
  %232 = zext i32 %230 to i64
  %233 = mul nuw i64 %232, 4294967297
  store i64 %233, ptr %231, align 8, !tbaa !5
  %234 = getelementptr inbounds i8, ptr %231, i64 32
  store i64 %233, ptr %234, align 8, !tbaa !5
  %235 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %185, i32 3
  %236 = load i32, ptr %235, align 4, !tbaa !226
  %237 = trunc i32 %236 to i16
  %238 = and i16 %237, 255
  %239 = mul nuw i16 %238, 257
  store i16 %239, ptr %215, align 2, !tbaa !5
  store i16 %239, ptr %216, align 2, !tbaa !5
  %240 = load i32, ptr %208, align 8, !tbaa !230
  %241 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %185, i32 11
  %242 = load i32, ptr %241, align 4, !tbaa !231
  %243 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %185, i32 2
  %244 = load i32, ptr %243, align 16, !tbaa !224
  %245 = add i32 %242, %244
  %246 = sub i32 %240, %245
  %247 = getelementptr inbounds [4 x i32], ptr %147, i64 0, i64 %185
  store i32 %246, ptr %247, align 4, !tbaa !39
  %248 = load i32, ptr %148, align 16, !tbaa !8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %322, label %318

250:                                              ; preds = %222, %225
  %251 = load ptr, ptr %128, align 8, !tbaa !46
  %252 = sext i32 %223 to i64
  %253 = getelementptr inbounds i16, ptr %251, i64 %252
  %254 = load i16, ptr %253, align 2, !tbaa !37
  %255 = zext i16 %254 to i32
  store i32 %255, ptr %129, align 16, !tbaa !224
  %256 = getelementptr inbounds [32 x [6 x ptr]], ptr %130, i64 0, i64 %252
  %257 = load ptr, ptr %256, align 16, !tbaa !46
  %258 = load i32, ptr %120, align 8, !tbaa !39
  %259 = mul nsw i32 %194, %258
  %260 = add nsw i32 %259, %193
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8, ptr %257, i64 %261
  store ptr %262, ptr %131, align 16, !tbaa !46
  %263 = getelementptr inbounds [32 x [6 x ptr]], ptr %130, i64 0, i64 %252, i64 1
  %264 = load ptr, ptr %263, align 8, !tbaa !46
  %265 = getelementptr inbounds i8, ptr %264, i64 %261
  store ptr %265, ptr %133, align 8, !tbaa !46
  %266 = getelementptr inbounds [32 x [6 x ptr]], ptr %130, i64 0, i64 %252, i64 2
  %267 = load ptr, ptr %266, align 16, !tbaa !46
  %268 = getelementptr inbounds i8, ptr %267, i64 %261
  store ptr %268, ptr %134, align 16, !tbaa !46
  %269 = getelementptr inbounds [32 x [6 x ptr]], ptr %130, i64 0, i64 %252, i64 3
  %270 = load ptr, ptr %269, align 8, !tbaa !46
  %271 = getelementptr inbounds i8, ptr %270, i64 %261
  store ptr %271, ptr %135, align 8, !tbaa !46
  %272 = getelementptr inbounds [32 x [6 x ptr]], ptr %130, i64 0, i64 %252, i64 4
  %273 = load ptr, ptr %272, align 16, !tbaa !46
  %274 = load i32, ptr %121, align 4, !tbaa !39
  %275 = mul nsw i32 %201, %274
  %276 = add nsw i32 %275, %200
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, ptr %273, i64 %277
  store ptr %278, ptr %136, align 16, !tbaa !46
  %279 = getelementptr inbounds [32 x [6 x ptr]], ptr %130, i64 0, i64 %252, i64 5
  %280 = load ptr, ptr %279, align 8, !tbaa !46
  %281 = getelementptr inbounds i8, ptr %280, i64 %277
  store ptr %281, ptr %137, align 8, !tbaa !46
  %282 = getelementptr inbounds [16 x ptr], ptr %138, i64 0, i64 %252
  %283 = load ptr, ptr %282, align 8, !tbaa !46
  %284 = getelementptr inbounds i16, ptr %283, i64 %261
  store ptr %284, ptr %139, align 16, !tbaa !225
  store i32 %223, ptr %141, align 4, !tbaa !226
  %285 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %252
  %286 = load ptr, ptr %285, align 8, !tbaa !46
  %287 = getelementptr inbounds i8, ptr %286, i64 %261
  store ptr %287, ptr %132, align 16, !tbaa !227
  %288 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %252
  store ptr %288, ptr %140, align 8, !tbaa !228
  %289 = trunc i32 %223 to i16
  %290 = and i16 %289, 255
  %291 = mul nuw i16 %290, 257
  store i16 %291, ptr %215, align 2, !tbaa !5
  store i16 %291, ptr %216, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %220, i32 noundef 2, ptr noundef nonnull %142) #17
  %292 = load i32, ptr %127, align 4, !tbaa !229
  %293 = icmp eq i32 %292, %223
  br i1 %293, label %294, label %296

294:                                              ; preds = %250
  %295 = load i32, ptr %218, align 4, !tbaa !5
  store i32 %295, ptr %144, align 4, !tbaa !5
  call void @x264_me_refine_qpel_refdupe(ptr noundef nonnull %0, ptr noundef nonnull %3, ptr noundef null) #17
  br label %298

296:                                              ; preds = %250
  %297 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %252
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %3, ptr noundef nonnull %297, i32 noundef %221, ptr noundef null) #17
  br label %298

298:                                              ; preds = %296, %294
  %299 = load i32, ptr %129, align 16, !tbaa !224
  %300 = load i32, ptr %145, align 8, !tbaa !230
  %301 = add nsw i32 %300, %299
  store i32 %301, ptr %145, align 8, !tbaa !230
  %302 = load i32, ptr %144, align 4, !tbaa !5
  %303 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %252, i64 %217
  store i32 %302, ptr %303, align 4, !tbaa !5
  %304 = load i32, ptr %208, align 8, !tbaa !230
  %305 = icmp slt i32 %301, %304
  br i1 %305, label %306, label %309

306:                                              ; preds = %298
  %307 = load ptr, ptr %146, align 8, !tbaa !48
  %308 = call ptr %307(ptr noundef nonnull %186, ptr noundef nonnull %3, i64 noundef 144) #17
  br label %309

309:                                              ; preds = %306, %298
  %310 = icmp eq i32 %223, %116
  br i1 %310, label %311, label %316

311:                                              ; preds = %309
  %312 = load i32, ptr %127, align 4, !tbaa !229
  %313 = icmp slt i32 %116, %312
  br i1 %313, label %314, label %316

314:                                              ; preds = %311, %316
  %315 = phi i32 [ %317, %316 ], [ %312, %311 ]
  br label %222, !llvm.loop !294

316:                                              ; preds = %311, %309
  %317 = add nsw i32 %223, 1
  br label %314

318:                                              ; preds = %228
  %319 = load i32, ptr %149, align 4, !tbaa !73
  %320 = and i32 %319, 32
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %326, label %322

322:                                              ; preds = %318, %228
  %323 = load i32, ptr %1, align 16, !tbaa !152
  %324 = load i32, ptr %208, align 8, !tbaa !230
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %208, align 8, !tbaa !230
  br label %326

326:                                              ; preds = %322, %318
  %327 = icmp eq i64 %217, 4
  br i1 %327, label %171, label %184, !llvm.loop !295

328:                                              ; preds = %171
  %329 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 0, i32 3
  %330 = load i32, ptr %329, align 4, !tbaa !226
  %331 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 1, i32 3
  %332 = load i32, ptr %331, align 4, !tbaa !226
  %333 = or i32 %332, %330
  %334 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 2, i32 3
  %335 = load i32, ptr %334, align 4, !tbaa !226
  %336 = or i32 %333, %335
  %337 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 3, i32 3
  %338 = load i32, ptr %337, align 4, !tbaa !226
  %339 = or i32 %336, %338
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %347

341:                                              ; preds = %328
  %342 = load ptr, ptr %128, align 8, !tbaa !46
  %343 = load i16, ptr %342, align 2, !tbaa !37
  %344 = zext i16 %343 to i32
  %345 = shl nuw nsw i32 %344, 2
  %346 = sub nsw i32 %182, %345
  store i32 %346, ptr %183, align 16, !tbaa !189
  br label %347

347:                                              ; preds = %341, %328, %171
  %348 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  store i32 50529027, ptr %348, align 16
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %3) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_p8x8(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %4 = load i32, ptr %3, align 4, !tbaa !229
  %5 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 3
  %6 = load i32, ptr %5, align 4, !tbaa !234
  %7 = icmp eq i32 %4, %6
  %8 = select i1 %7, i32 0, i32 %6
  %9 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %10 = load i32, ptr %9, align 16, !tbaa !8
  %11 = or i32 %8, %10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = sext i32 %8 to i64
  br label %22

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = sext i32 %8 to i64
  %19 = getelementptr inbounds i16, ptr %17, i64 %18
  %20 = load i16, ptr %19, align 2, !tbaa !37
  %21 = zext i16 %20 to i32
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i64 [ %14, %13 ], [ %18, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %21, %15 ]
  %25 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %26 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %23
  %27 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 13, ptr %27, align 4, !tbaa !50
  %28 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 13
  %29 = load i32, ptr %28, align 4, !tbaa !5
  store i32 %29, ptr %26, align 4, !tbaa !5
  %30 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %31 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23, i64 1
  %33 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20
  %36 = getelementptr inbounds [32 x [6 x ptr]], ptr %35, i64 0, i64 %23
  %37 = getelementptr inbounds [32 x [6 x ptr]], ptr %35, i64 0, i64 %23, i64 1
  %38 = getelementptr inbounds [32 x [6 x ptr]], ptr %35, i64 0, i64 %23, i64 2
  %39 = getelementptr inbounds [32 x [6 x ptr]], ptr %35, i64 0, i64 %23, i64 3
  %40 = getelementptr inbounds [32 x [6 x ptr]], ptr %35, i64 0, i64 %23, i64 4
  %41 = getelementptr inbounds [32 x [6 x ptr]], ptr %35, i64 0, i64 %23, i64 5
  %42 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22
  %43 = getelementptr inbounds [16 x ptr], ptr %42, i64 0, i64 %23
  %44 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %23
  %45 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %23
  %46 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28
  %47 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 1
  br label %64

48:                                               ; preds = %165
  %49 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 0, i32 12
  %50 = load i32, ptr %49, align 8, !tbaa !230
  %51 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 1, i32 12
  %52 = load i32, ptr %51, align 8, !tbaa !230
  %53 = add nsw i32 %52, %50
  %54 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 2, i32 12
  %55 = load i32, ptr %54, align 8, !tbaa !230
  %56 = add nsw i32 %53, %55
  %57 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 3, i32 12
  %58 = load i32, ptr %57, align 8, !tbaa !230
  %59 = add nsw i32 %56, %58
  %60 = select i1 %157, i32 0, i32 %24
  %61 = sub nsw i32 %59, %60
  %62 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 4
  store i32 %61, ptr %62, align 16, !tbaa !189
  %63 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  store i32 50529027, ptr %63, align 16
  ret void

64:                                               ; preds = %22, %165
  %65 = phi i64 [ 0, %22 ], [ %166, %165 ]
  %66 = phi i64 [ 1, %22 ], [ %147, %165 ]
  %67 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65
  %68 = trunc i64 %65 to i32
  %69 = and i32 %68, 1
  %70 = lshr i32 %68, 1
  store i32 3, ptr %67, align 16, !tbaa !222
  %71 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 2
  store i32 %24, ptr %71, align 16, !tbaa !224
  %72 = load ptr, ptr %30, align 16, !tbaa !219
  %73 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 1
  store ptr %72, ptr %73, align 8, !tbaa !223
  %74 = load i32, ptr %31, align 16, !tbaa !39
  %75 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 9
  store i32 %74, ptr %75, align 8, !tbaa !39
  %76 = load i32, ptr %32, align 4, !tbaa !39
  %77 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 9, i64 1
  store i32 %76, ptr %77, align 4, !tbaa !39
  %78 = load ptr, ptr %25, align 8, !tbaa !46
  %79 = shl nuw nsw i32 %69, 3
  %80 = shl nuw nsw i32 %70, 3
  %81 = shl nuw nsw i32 %70, 7
  %82 = or i32 %79, %81
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, ptr %78, i64 %83
  %85 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 7
  store ptr %84, ptr %85, align 8, !tbaa !46
  %86 = load ptr, ptr %33, align 8, !tbaa !46
  %87 = shl nuw nsw i32 %69, 2
  %88 = shl nuw i32 %70, 2
  %89 = shl nuw nsw i32 %70, 6
  %90 = or i32 %87, %89
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i8, ptr %86, i64 %91
  %93 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 7, i64 1
  store ptr %92, ptr %93, align 8, !tbaa !46
  %94 = load ptr, ptr %34, align 8, !tbaa !46
  %95 = getelementptr inbounds i8, ptr %94, i64 %91
  %96 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 7, i64 2
  store ptr %95, ptr %96, align 8, !tbaa !46
  %97 = load ptr, ptr %36, align 16, !tbaa !46
  %98 = mul nsw i32 %80, %74
  %99 = add nsw i32 %98, %79
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, ptr %97, i64 %100
  %102 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 5
  store ptr %101, ptr %102, align 16, !tbaa !46
  %103 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 6
  store ptr %101, ptr %103, align 16, !tbaa !227
  %104 = load ptr, ptr %37, align 8, !tbaa !46
  %105 = getelementptr inbounds i8, ptr %104, i64 %100
  %106 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 5, i64 1
  store ptr %105, ptr %106, align 8, !tbaa !46
  %107 = load ptr, ptr %38, align 16, !tbaa !46
  %108 = getelementptr inbounds i8, ptr %107, i64 %100
  %109 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 5, i64 2
  store ptr %108, ptr %109, align 16, !tbaa !46
  %110 = load ptr, ptr %39, align 8, !tbaa !46
  %111 = getelementptr inbounds i8, ptr %110, i64 %100
  %112 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 5, i64 3
  store ptr %111, ptr %112, align 8, !tbaa !46
  %113 = load ptr, ptr %40, align 16, !tbaa !46
  %114 = mul nsw i32 %88, %76
  %115 = add nsw i32 %114, %87
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, ptr %113, i64 %116
  %118 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 5, i64 4
  store ptr %117, ptr %118, align 16, !tbaa !46
  %119 = load ptr, ptr %41, align 8, !tbaa !46
  %120 = getelementptr inbounds i8, ptr %119, i64 %116
  %121 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 5, i64 5
  store ptr %120, ptr %121, align 8, !tbaa !46
  %122 = load ptr, ptr %43, align 8, !tbaa !46
  %123 = getelementptr inbounds i16, ptr %122, i64 %100
  %124 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 8
  store ptr %123, ptr %124, align 16, !tbaa !225
  %125 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 4
  store ptr @weight_none, ptr %125, align 8, !tbaa !228
  %126 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 3
  store i32 %8, ptr %126, align 4, !tbaa !226
  %127 = load ptr, ptr %44, align 8, !tbaa !46
  %128 = getelementptr inbounds i8, ptr %127, i64 %100
  store ptr %128, ptr %103, align 16, !tbaa !227
  store ptr %45, ptr %125, align 8, !tbaa !228
  %129 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 10
  %130 = trunc i64 %65 to i32
  %131 = shl i32 %130, 2
  tail call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %131, i32 noundef 2, ptr noundef nonnull %129) #17
  %132 = trunc i64 %66 to i32
  tail call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %67, ptr noundef nonnull %26, i32 noundef %132, ptr noundef null) #17
  %133 = shl nuw nsw i32 %69, 1
  %134 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 13
  %135 = load i32, ptr %134, align 4, !tbaa !5
  %136 = trunc i64 %65 to i32
  %137 = shl i32 %136, 3
  %138 = or i32 %133, %137
  %139 = or i32 %138, 12
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %140
  %142 = zext i32 %135 to i64
  %143 = mul nuw i64 %142, 4294967297
  store i64 %143, ptr %141, align 8, !tbaa !5
  %144 = getelementptr inbounds i8, ptr %141, i64 32
  store i64 %143, ptr %144, align 8, !tbaa !5
  %145 = load i32, ptr %134, align 4, !tbaa !5
  %146 = getelementptr inbounds [2 x i16], ptr %26, i64 %66
  store i32 %145, ptr %146, align 4, !tbaa !5
  %147 = add nuw nsw i64 %66, 1
  %148 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 12
  %149 = load i32, ptr %148, align 8, !tbaa !230
  %150 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %65, i32 11
  %151 = load i32, ptr %150, align 4, !tbaa !231
  %152 = sub nsw i32 %149, %151
  %153 = getelementptr inbounds [4 x i32], ptr %46, i64 0, i64 %65
  store i32 %152, ptr %153, align 4, !tbaa !39
  %154 = load i32, ptr %148, align 8, !tbaa !230
  %155 = add nsw i32 %154, %24
  store i32 %155, ptr %148, align 8, !tbaa !230
  %156 = load i32, ptr %9, align 16, !tbaa !8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %64
  %159 = load i32, ptr %47, align 4, !tbaa !73
  %160 = and i32 %159, 32
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %158, %64
  %163 = load i32, ptr %1, align 16, !tbaa !152
  %164 = add nsw i32 %163, %155
  store i32 %164, ptr %148, align 8, !tbaa !230
  br label %165

165:                                              ; preds = %162, %158
  %166 = add nuw nsw i64 %65, 1
  %167 = icmp eq i64 %166, 4
  br i1 %167, label %48, label %64, !llvm.loop !296
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @x264_mb_cache_mv_p8x8(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #3 {
  %4 = srem i32 %2, 2
  %5 = shl nsw i32 %4, 1
  %6 = sdiv i32 %2, 2
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %7
  %9 = load i8, ptr %8, align 1, !tbaa !5
  switch i8 %9, label %80 [
    i8 3, label %10
    i8 1, label %21
    i8 2, label %39
    i8 0, label %55
  ]

10:                                               ; preds = %3
  %11 = shl i32 %6, 4
  %12 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %7, i32 13
  %13 = load i32, ptr %12, align 4, !tbaa !5
  %14 = add nsw i32 %5, 12
  %15 = add nsw i32 %14, %11
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %16
  %18 = zext i32 %13 to i64
  %19 = mul nuw i64 %18, 4294967297
  store i64 %19, ptr %17, align 8, !tbaa !5
  %20 = getelementptr inbounds i8, ptr %17, i64 32
  store i64 %19, ptr %20, align 8, !tbaa !5
  br label %81

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 11, i64 %7, i64 0, i32 13
  %23 = load i32, ptr %22, align 4, !tbaa !5
  %24 = add nsw i32 %5, 12
  %25 = shl i32 %6, 4
  %26 = add nsw i32 %24, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %27
  %29 = zext i32 %23 to i64
  %30 = mul nuw i64 %29, 4294967297
  store i64 %30, ptr %28, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 11, i64 %7, i64 1, i32 13
  %32 = load i32, ptr %31, align 4, !tbaa !5
  %33 = or i32 %25, 8
  %34 = add nsw i32 %33, %24
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %35
  %37 = zext i32 %32 to i64
  %38 = mul nuw i64 %37, 4294967297
  store i64 %38, ptr %36, align 8, !tbaa !5
  br label %81

39:                                               ; preds = %3
  %40 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 13, i64 %7, i64 0, i32 13
  %41 = load i32, ptr %40, align 4, !tbaa !5
  %42 = add nsw i32 %5, 12
  %43 = shl nsw i32 %6, 4
  %44 = add nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %45
  store i32 %41, ptr %46, align 4, !tbaa !5
  %47 = getelementptr inbounds i8, ptr %46, i64 32
  store i32 %41, ptr %47, align 4, !tbaa !5
  %48 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 13, i64 %7, i64 1, i32 13
  %49 = load i32, ptr %48, align 4, !tbaa !5
  %50 = add nsw i32 %5, 13
  %51 = add nsw i32 %50, %43
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %52
  store i32 %49, ptr %53, align 4, !tbaa !5
  %54 = getelementptr inbounds i8, ptr %53, i64 32
  store i32 %49, ptr %54, align 4, !tbaa !5
  br label %81

55:                                               ; preds = %3
  %56 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 9, i64 %7, i64 0, i32 13
  %57 = load i32, ptr %56, align 4, !tbaa !5
  %58 = add nsw i32 %5, 12
  %59 = shl i32 %6, 4
  %60 = add nsw i32 %58, %59
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %61
  store i32 %57, ptr %62, align 4, !tbaa !5
  %63 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 9, i64 %7, i64 1, i32 13
  %64 = load i32, ptr %63, align 4, !tbaa !5
  %65 = add nsw i32 %5, 13
  %66 = add nsw i32 %65, %59
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %67
  store i32 %64, ptr %68, align 4, !tbaa !5
  %69 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 9, i64 %7, i64 2, i32 13
  %70 = load i32, ptr %69, align 4, !tbaa !5
  %71 = or i32 %59, 8
  %72 = add nsw i32 %58, %71
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %73
  store i32 %70, ptr %74, align 4, !tbaa !5
  %75 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 9, i64 %7, i64 3, i32 13
  %76 = load i32, ptr %75, align 4, !tbaa !5
  %77 = add nsw i32 %65, %71
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %78
  store i32 %76, ptr %79, align 4, !tbaa !5
  br label %81

80:                                               ; preds = %3
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull @.str.6) #17
  br label %81

81:                                               ; preds = %80, %55, %39, %21, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_p16x8(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca %struct.x264_me_t, align 16
  %5 = alloca [3 x [2 x i16]], align 4
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %4) #17
  %6 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #17
  %7 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 14, ptr %7, align 4, !tbaa !50
  %8 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %9 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %11 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 9
  %12 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 9, i64 1
  %13 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 7
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %15 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 7, i64 1
  %16 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %17 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 7, i64 2
  %18 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4
  %19 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 2
  %20 = getelementptr inbounds [3 x [2 x i16]], ptr %5, i64 0, i64 1
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20
  %22 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5
  %23 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 6
  %24 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 1
  %25 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 2
  %26 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 3
  %27 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 4
  %28 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 5
  %29 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22
  %30 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 8
  %31 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 4
  %32 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 3
  %33 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 10
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %35 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 12
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %37 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 29, i64 1
  %38 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 5
  br label %39

39:                                               ; preds = %3, %198
  %40 = phi i1 [ true, %3 ], [ false, %198 ]
  %41 = phi i64 [ 0, %3 ], [ 1, %198 ]
  %42 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %41
  %43 = shl nuw nsw i64 %41, 1
  %44 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %43, i32 3
  %45 = load i32, ptr %44, align 4, !tbaa !226
  %46 = or i64 %43, 1
  %47 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %46, i32 3
  %48 = load i32, ptr %47, align 4, !tbaa !226
  %49 = call i32 @llvm.smin.i32(i32 %45, i32 %48)
  %50 = call i32 @llvm.smax.i32(i32 %45, i32 %48)
  %51 = icmp eq i32 %49, %50
  store i32 1, ptr %4, align 16, !tbaa !222
  %52 = load ptr, ptr %8, align 16, !tbaa !219
  store ptr %52, ptr %9, align 8, !tbaa !223
  %53 = load <2 x i32>, ptr %10, align 16, !tbaa !39
  store <2 x i32> %53, ptr %11, align 8, !tbaa !39
  %54 = load ptr, ptr %6, align 8, !tbaa !46
  %55 = shl nuw nsw i64 %41, 3
  %56 = shl nuw nsw i64 %41, 7
  %57 = getelementptr inbounds i8, ptr %54, i64 %56
  store ptr %57, ptr %13, align 8, !tbaa !46
  %58 = load ptr, ptr %14, align 8, !tbaa !46
  %59 = shl nuw nsw i64 %41, 2
  %60 = shl nuw nsw i64 %41, 6
  %61 = getelementptr inbounds i8, ptr %58, i64 %60
  store ptr %61, ptr %15, align 16, !tbaa !46
  %62 = load ptr, ptr %16, align 8, !tbaa !46
  %63 = getelementptr inbounds i8, ptr %62, i64 %60
  store ptr %63, ptr %17, align 8, !tbaa !46
  %64 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %41, i32 12
  store i32 2147483647, ptr %64, align 8, !tbaa !230
  %65 = shl nuw nsw i64 %41, 4
  %66 = or i64 %65, 12
  %67 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %66
  %68 = getelementptr inbounds i8, ptr %67, i64 8
  %69 = icmp ne i32 %49, 0
  %70 = trunc i64 %55 to i32
  %71 = load ptr, ptr %18, align 8, !tbaa !46
  %72 = sext i32 %49 to i64
  %73 = getelementptr inbounds i16, ptr %71, i64 %72
  %74 = load i16, ptr %73, align 2, !tbaa !37
  %75 = zext i16 %74 to i32
  store i32 %75, ptr %19, align 16, !tbaa !224
  %76 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %72
  %77 = load i32, ptr %76, align 4, !tbaa !5
  store i32 %77, ptr %5, align 4, !tbaa !5
  %78 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %72, i64 %46
  %79 = load <2 x i32>, ptr %78, align 4, !tbaa !5
  store <2 x i32> %79, ptr %20, align 4, !tbaa !5
  %80 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %72
  %81 = load ptr, ptr %80, align 16, !tbaa !46
  %82 = load i32, ptr %11, align 8, !tbaa !39
  %83 = sext i32 %82 to i64
  %84 = mul nsw i64 %55, %83
  %85 = getelementptr inbounds i8, ptr %81, i64 %84
  store ptr %85, ptr %22, align 16, !tbaa !46
  %86 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %72, i64 1
  %87 = load ptr, ptr %86, align 8, !tbaa !46
  %88 = getelementptr inbounds i8, ptr %87, i64 %84
  store ptr %88, ptr %24, align 8, !tbaa !46
  %89 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %72, i64 2
  %90 = load ptr, ptr %89, align 16, !tbaa !46
  %91 = getelementptr inbounds i8, ptr %90, i64 %84
  store ptr %91, ptr %25, align 16, !tbaa !46
  %92 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %72, i64 3
  %93 = load ptr, ptr %92, align 8, !tbaa !46
  %94 = getelementptr inbounds i8, ptr %93, i64 %84
  store ptr %94, ptr %26, align 8, !tbaa !46
  %95 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %72, i64 4
  %96 = load ptr, ptr %95, align 16, !tbaa !46
  %97 = load i32, ptr %12, align 4, !tbaa !39
  %98 = sext i32 %97 to i64
  %99 = mul nsw i64 %59, %98
  %100 = getelementptr inbounds i8, ptr %96, i64 %99
  store ptr %100, ptr %27, align 16, !tbaa !46
  %101 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %72, i64 5
  %102 = load ptr, ptr %101, align 8, !tbaa !46
  %103 = getelementptr inbounds i8, ptr %102, i64 %99
  store ptr %103, ptr %28, align 8, !tbaa !46
  %104 = getelementptr inbounds [16 x ptr], ptr %29, i64 0, i64 %72
  %105 = load ptr, ptr %104, align 8, !tbaa !46
  %106 = getelementptr inbounds i16, ptr %105, i64 %84
  store ptr %106, ptr %30, align 16, !tbaa !225
  store i32 %49, ptr %32, align 4, !tbaa !226
  %107 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %72
  %108 = load ptr, ptr %107, align 8, !tbaa !46
  %109 = getelementptr inbounds i8, ptr %108, i64 %84
  store ptr %109, ptr %23, align 16, !tbaa !227
  %110 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %72
  store ptr %110, ptr %31, align 8, !tbaa !228
  %111 = and i32 %49, 255
  %112 = mul nuw i32 %111, 16843009
  store i32 %112, ptr %67, align 4, !tbaa !5
  store i32 %112, ptr %68, align 4, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %70, i32 noundef 4, ptr noundef nonnull %33) #17
  %113 = load i32, ptr %34, align 4, !tbaa !229
  %114 = or i32 %49, %113
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %39
  call void @x264_me_refine_qpel_refdupe(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef null) #17
  br label %118

117:                                              ; preds = %39
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  br label %118

118:                                              ; preds = %117, %116
  %119 = load i32, ptr %19, align 16, !tbaa !224
  %120 = load i32, ptr %35, align 8, !tbaa !230
  %121 = add nsw i32 %120, %119
  store i32 %121, ptr %35, align 8, !tbaa !230
  %122 = load i32, ptr %64, align 8, !tbaa !230
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = load ptr, ptr %36, align 8, !tbaa !48
  %126 = call ptr %125(ptr noundef nonnull %42, ptr noundef nonnull %4, i64 noundef 144) #17
  br label %127

127:                                              ; preds = %124, %118
  br i1 %51, label %174, label %128

128:                                              ; preds = %127
  %129 = sext i32 %50 to i64
  %130 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %129
  %131 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %129, i64 %46
  %132 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %129
  %133 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %129, i64 1
  %134 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %129, i64 2
  %135 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %129, i64 3
  %136 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %129, i64 4
  %137 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %129, i64 5
  %138 = getelementptr inbounds [16 x ptr], ptr %29, i64 0, i64 %129
  %139 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %129
  %140 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %129
  %141 = and i32 %50, 255
  %142 = mul nuw i32 %141, 16843009
  %143 = load ptr, ptr %18, align 8, !tbaa !46
  %144 = getelementptr inbounds i16, ptr %143, i64 %129
  %145 = load i16, ptr %144, align 2, !tbaa !37
  %146 = zext i16 %145 to i32
  store i32 %146, ptr %19, align 16, !tbaa !224
  %147 = load i32, ptr %130, align 4, !tbaa !5
  store i32 %147, ptr %5, align 4, !tbaa !5
  %148 = load <2 x i32>, ptr %131, align 4, !tbaa !5
  store <2 x i32> %148, ptr %20, align 4, !tbaa !5
  %149 = load ptr, ptr %132, align 16, !tbaa !46
  %150 = load i32, ptr %11, align 8, !tbaa !39
  %151 = sext i32 %150 to i64
  %152 = mul nsw i64 %55, %151
  %153 = getelementptr inbounds i8, ptr %149, i64 %152
  store ptr %153, ptr %22, align 16, !tbaa !46
  %154 = load ptr, ptr %133, align 8, !tbaa !46
  %155 = getelementptr inbounds i8, ptr %154, i64 %152
  store ptr %155, ptr %24, align 8, !tbaa !46
  %156 = load ptr, ptr %134, align 16, !tbaa !46
  %157 = getelementptr inbounds i8, ptr %156, i64 %152
  store ptr %157, ptr %25, align 16, !tbaa !46
  %158 = load ptr, ptr %135, align 8, !tbaa !46
  %159 = getelementptr inbounds i8, ptr %158, i64 %152
  store ptr %159, ptr %26, align 8, !tbaa !46
  %160 = load ptr, ptr %136, align 16, !tbaa !46
  %161 = load i32, ptr %12, align 4, !tbaa !39
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %59, %162
  %164 = getelementptr inbounds i8, ptr %160, i64 %163
  store ptr %164, ptr %27, align 16, !tbaa !46
  %165 = load ptr, ptr %137, align 8, !tbaa !46
  %166 = getelementptr inbounds i8, ptr %165, i64 %163
  store ptr %166, ptr %28, align 8, !tbaa !46
  %167 = load ptr, ptr %138, align 8, !tbaa !46
  %168 = getelementptr inbounds i16, ptr %167, i64 %152
  store ptr %168, ptr %30, align 16, !tbaa !225
  store i32 %50, ptr %32, align 4, !tbaa !226
  %169 = load ptr, ptr %139, align 8, !tbaa !46
  %170 = getelementptr inbounds i8, ptr %169, i64 %152
  store ptr %170, ptr %23, align 16, !tbaa !227
  store ptr %140, ptr %31, align 8, !tbaa !228
  store i32 %142, ptr %67, align 4, !tbaa !5
  store i32 %142, ptr %68, align 4, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %70, i32 noundef 4, ptr noundef nonnull %33) #17
  %171 = load i32, ptr %34, align 4, !tbaa !229
  %172 = icmp ne i32 %171, %50
  %173 = select i1 %172, i1 true, i1 %69
  br i1 %173, label %176, label %175

174:                                              ; preds = %177, %183, %127
  br i1 %40, label %186, label %198

175:                                              ; preds = %128
  call void @x264_me_refine_qpel_refdupe(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef null) #17
  br label %177

176:                                              ; preds = %128
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  br label %177

177:                                              ; preds = %176, %175
  %178 = load i32, ptr %19, align 16, !tbaa !224
  %179 = load i32, ptr %35, align 8, !tbaa !230
  %180 = add nsw i32 %179, %178
  store i32 %180, ptr %35, align 8, !tbaa !230
  %181 = load i32, ptr %64, align 8, !tbaa !230
  %182 = icmp slt i32 %180, %181
  br i1 %182, label %183, label %174

183:                                              ; preds = %177
  %184 = load ptr, ptr %36, align 8, !tbaa !48
  %185 = call ptr %184(ptr noundef nonnull %42, ptr noundef nonnull %4, i64 noundef 144) #17
  br label %174

186:                                              ; preds = %174
  %187 = load i32, ptr %64, align 8, !tbaa !230
  %188 = load i32, ptr %37, align 4, !tbaa !39
  %189 = add nsw i32 %188, %187
  %190 = load i32, ptr %38, align 8, !tbaa !145
  %191 = icmp eq i32 %190, 0
  %192 = select i1 %191, i32 4, i32 5
  %193 = mul nsw i32 %192, %2
  %194 = sdiv i32 %193, 4
  %195 = icmp sgt i32 %189, %194
  br i1 %195, label %196, label %198

196:                                              ; preds = %186
  %197 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 14
  store i32 268435456, ptr %197, align 16, !tbaa !188
  br label %218

198:                                              ; preds = %186, %174
  %199 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %41, i32 13
  %200 = load i32, ptr %199, align 4, !tbaa !5
  %201 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %66
  %202 = zext i32 %200 to i64
  %203 = mul nuw i64 %202, 4294967297
  store i64 %203, ptr %201, align 8, !tbaa !5
  %204 = getelementptr inbounds i8, ptr %201, i64 8
  store i64 %203, ptr %204, align 8, !tbaa !5
  %205 = getelementptr inbounds i8, ptr %201, i64 32
  store i64 %203, ptr %205, align 8, !tbaa !5
  %206 = getelementptr inbounds i8, ptr %201, i64 40
  store i64 %203, ptr %206, align 8, !tbaa !5
  %207 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %41, i32 3
  %208 = load i32, ptr %207, align 4, !tbaa !226
  %209 = and i32 %208, 255
  %210 = mul nuw i32 %209, 16843009
  store i32 %210, ptr %67, align 4, !tbaa !5
  store i32 %210, ptr %68, align 4, !tbaa !5
  br i1 %40, label %39, label %211, !llvm.loop !297

211:                                              ; preds = %198
  %212 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 12
  %213 = load i32, ptr %212, align 8, !tbaa !230
  %214 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 12
  %215 = load i32, ptr %214, align 8, !tbaa !230
  %216 = add nsw i32 %215, %213
  %217 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 14
  store i32 %216, ptr %217, align 16, !tbaa !188
  br label %218

218:                                              ; preds = %196, %211
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %4) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_p8x16(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca %struct.x264_me_t, align 16
  %5 = alloca [3 x [2 x i16]], align 4
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %4) #17
  %6 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #17
  %7 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 15, ptr %7, align 4, !tbaa !50
  %8 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %9 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %11 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 9
  %12 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 7
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %14 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 7, i64 1
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %16 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 7, i64 2
  %17 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4
  %18 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 2
  %19 = getelementptr inbounds [3 x [2 x i16]], ptr %5, i64 0, i64 1
  %20 = getelementptr inbounds [3 x [2 x i16]], ptr %5, i64 0, i64 2
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20
  %22 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5
  %23 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 6
  %24 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 1
  %25 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 2
  %26 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 3
  %27 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 4
  %28 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 5, i64 5
  %29 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22
  %30 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 8
  %31 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 4
  %32 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 3
  %33 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 10
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 84
  %35 = getelementptr inbounds %struct.x264_me_t, ptr %4, i64 0, i32 12
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %37 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 30, i64 1
  %38 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 5
  br label %39

39:                                               ; preds = %3, %193
  %40 = phi i1 [ true, %3 ], [ false, %193 ]
  %41 = phi i64 [ 0, %3 ], [ 1, %193 ]
  %42 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %41
  %43 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %41, i32 3
  %44 = load i32, ptr %43, align 4, !tbaa !226
  %45 = or i64 %41, 2
  %46 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %45, i32 3
  %47 = load i32, ptr %46, align 4, !tbaa !226
  %48 = call i32 @llvm.smin.i32(i32 %44, i32 %47)
  %49 = call i32 @llvm.smax.i32(i32 %44, i32 %47)
  %50 = icmp eq i32 %48, %49
  store i32 2, ptr %4, align 16, !tbaa !222
  %51 = load ptr, ptr %8, align 16, !tbaa !219
  store ptr %51, ptr %9, align 8, !tbaa !223
  %52 = load <2 x i32>, ptr %10, align 16, !tbaa !39
  store <2 x i32> %52, ptr %11, align 8, !tbaa !39
  %53 = load ptr, ptr %6, align 8, !tbaa !46
  %54 = shl nuw nsw i64 %41, 3
  %55 = getelementptr inbounds i8, ptr %53, i64 %54
  store ptr %55, ptr %12, align 8, !tbaa !46
  %56 = load ptr, ptr %13, align 8, !tbaa !46
  %57 = shl nuw nsw i64 %41, 2
  %58 = getelementptr inbounds i8, ptr %56, i64 %57
  store ptr %58, ptr %14, align 16, !tbaa !46
  %59 = load ptr, ptr %15, align 8, !tbaa !46
  %60 = getelementptr inbounds i8, ptr %59, i64 %57
  store ptr %60, ptr %16, align 8, !tbaa !46
  %61 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %41, i32 12
  store i32 2147483647, ptr %61, align 8, !tbaa !230
  %62 = add nuw nsw i64 %41, 1
  %63 = add nuw nsw i64 %41, 3
  %64 = shl nuw nsw i64 %41, 1
  %65 = or i64 %64, 12
  %66 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %65
  %67 = getelementptr inbounds i8, ptr %66, i64 8
  %68 = getelementptr inbounds i8, ptr %66, i64 16
  %69 = getelementptr inbounds i8, ptr %66, i64 24
  %70 = icmp ne i32 %48, 0
  %71 = trunc i64 %57 to i32
  %72 = load ptr, ptr %17, align 8, !tbaa !46
  %73 = sext i32 %48 to i64
  %74 = getelementptr inbounds i16, ptr %72, i64 %73
  %75 = load i16, ptr %74, align 2, !tbaa !37
  %76 = zext i16 %75 to i32
  store i32 %76, ptr %18, align 16, !tbaa !224
  %77 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %73
  %78 = load i32, ptr %77, align 4, !tbaa !5
  store i32 %78, ptr %5, align 4, !tbaa !5
  %79 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %73, i64 %62
  %80 = load i32, ptr %79, align 4, !tbaa !5
  store i32 %80, ptr %19, align 4, !tbaa !5
  %81 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %73, i64 %63
  %82 = load i32, ptr %81, align 4, !tbaa !5
  store i32 %82, ptr %20, align 4, !tbaa !5
  %83 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %73
  %84 = load ptr, ptr %83, align 16, !tbaa !46
  %85 = getelementptr inbounds i8, ptr %84, i64 %54
  store ptr %85, ptr %22, align 16, !tbaa !46
  %86 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %73, i64 1
  %87 = load ptr, ptr %86, align 8, !tbaa !46
  %88 = getelementptr inbounds i8, ptr %87, i64 %54
  store ptr %88, ptr %24, align 8, !tbaa !46
  %89 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %73, i64 2
  %90 = load ptr, ptr %89, align 16, !tbaa !46
  %91 = getelementptr inbounds i8, ptr %90, i64 %54
  store ptr %91, ptr %25, align 16, !tbaa !46
  %92 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %73, i64 3
  %93 = load ptr, ptr %92, align 8, !tbaa !46
  %94 = getelementptr inbounds i8, ptr %93, i64 %54
  store ptr %94, ptr %26, align 8, !tbaa !46
  %95 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %73, i64 4
  %96 = load ptr, ptr %95, align 16, !tbaa !46
  %97 = getelementptr inbounds i8, ptr %96, i64 %57
  store ptr %97, ptr %27, align 16, !tbaa !46
  %98 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %73, i64 5
  %99 = load ptr, ptr %98, align 8, !tbaa !46
  %100 = getelementptr inbounds i8, ptr %99, i64 %57
  store ptr %100, ptr %28, align 8, !tbaa !46
  %101 = getelementptr inbounds [16 x ptr], ptr %29, i64 0, i64 %73
  %102 = load ptr, ptr %101, align 8, !tbaa !46
  %103 = getelementptr inbounds i16, ptr %102, i64 %54
  store ptr %103, ptr %30, align 16, !tbaa !225
  store i32 %48, ptr %32, align 4, !tbaa !226
  %104 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %73
  %105 = load ptr, ptr %104, align 8, !tbaa !46
  %106 = getelementptr inbounds i8, ptr %105, i64 %54
  store ptr %106, ptr %23, align 16, !tbaa !227
  %107 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %73
  store ptr %107, ptr %31, align 8, !tbaa !228
  %108 = trunc i32 %48 to i16
  %109 = and i16 %108, 255
  %110 = mul nuw i16 %109, 257
  store i16 %110, ptr %66, align 2, !tbaa !5
  store i16 %110, ptr %67, align 2, !tbaa !5
  store i16 %110, ptr %68, align 2, !tbaa !5
  store i16 %110, ptr %69, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %71, i32 noundef 2, ptr noundef nonnull %33) #17
  %111 = load i32, ptr %34, align 4, !tbaa !229
  %112 = or i32 %48, %111
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %39
  call void @x264_me_refine_qpel_refdupe(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef null) #17
  br label %116

115:                                              ; preds = %39
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  br label %116

116:                                              ; preds = %115, %114
  %117 = load i32, ptr %18, align 16, !tbaa !224
  %118 = load i32, ptr %35, align 8, !tbaa !230
  %119 = add nsw i32 %118, %117
  store i32 %119, ptr %35, align 8, !tbaa !230
  %120 = load i32, ptr %61, align 8, !tbaa !230
  %121 = icmp slt i32 %119, %120
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = load ptr, ptr %36, align 8, !tbaa !48
  %124 = call ptr %123(ptr noundef nonnull %42, ptr noundef nonnull %4, i64 noundef 144) #17
  br label %125

125:                                              ; preds = %122, %116
  br i1 %50, label %169, label %126

126:                                              ; preds = %125
  %127 = sext i32 %49 to i64
  %128 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %127
  %129 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %127, i64 %62
  %130 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %127, i64 %63
  %131 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %127
  %132 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %127, i64 1
  %133 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %127, i64 2
  %134 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %127, i64 3
  %135 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %127, i64 4
  %136 = getelementptr inbounds [32 x [6 x ptr]], ptr %21, i64 0, i64 %127, i64 5
  %137 = getelementptr inbounds [16 x ptr], ptr %29, i64 0, i64 %127
  %138 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 21, i64 %127
  %139 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %127
  %140 = trunc i32 %49 to i16
  %141 = and i16 %140, 255
  %142 = mul nuw i16 %141, 257
  %143 = load ptr, ptr %17, align 8, !tbaa !46
  %144 = getelementptr inbounds i16, ptr %143, i64 %127
  %145 = load i16, ptr %144, align 2, !tbaa !37
  %146 = zext i16 %145 to i32
  store i32 %146, ptr %18, align 16, !tbaa !224
  %147 = load i32, ptr %128, align 4, !tbaa !5
  store i32 %147, ptr %5, align 4, !tbaa !5
  %148 = load i32, ptr %129, align 4, !tbaa !5
  store i32 %148, ptr %19, align 4, !tbaa !5
  %149 = load i32, ptr %130, align 4, !tbaa !5
  store i32 %149, ptr %20, align 4, !tbaa !5
  %150 = load ptr, ptr %131, align 16, !tbaa !46
  %151 = getelementptr inbounds i8, ptr %150, i64 %54
  store ptr %151, ptr %22, align 16, !tbaa !46
  %152 = load ptr, ptr %132, align 8, !tbaa !46
  %153 = getelementptr inbounds i8, ptr %152, i64 %54
  store ptr %153, ptr %24, align 8, !tbaa !46
  %154 = load ptr, ptr %133, align 16, !tbaa !46
  %155 = getelementptr inbounds i8, ptr %154, i64 %54
  store ptr %155, ptr %25, align 16, !tbaa !46
  %156 = load ptr, ptr %134, align 8, !tbaa !46
  %157 = getelementptr inbounds i8, ptr %156, i64 %54
  store ptr %157, ptr %26, align 8, !tbaa !46
  %158 = load ptr, ptr %135, align 16, !tbaa !46
  %159 = getelementptr inbounds i8, ptr %158, i64 %57
  store ptr %159, ptr %27, align 16, !tbaa !46
  %160 = load ptr, ptr %136, align 8, !tbaa !46
  %161 = getelementptr inbounds i8, ptr %160, i64 %57
  store ptr %161, ptr %28, align 8, !tbaa !46
  %162 = load ptr, ptr %137, align 8, !tbaa !46
  %163 = getelementptr inbounds i16, ptr %162, i64 %54
  store ptr %163, ptr %30, align 16, !tbaa !225
  store i32 %49, ptr %32, align 4, !tbaa !226
  %164 = load ptr, ptr %138, align 8, !tbaa !46
  %165 = getelementptr inbounds i8, ptr %164, i64 %54
  store ptr %165, ptr %23, align 16, !tbaa !227
  store ptr %139, ptr %31, align 8, !tbaa !228
  store i16 %142, ptr %66, align 2, !tbaa !5
  store i16 %142, ptr %67, align 2, !tbaa !5
  store i16 %142, ptr %68, align 2, !tbaa !5
  store i16 %142, ptr %69, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %71, i32 noundef 2, ptr noundef nonnull %33) #17
  %166 = load i32, ptr %34, align 4, !tbaa !229
  %167 = icmp ne i32 %166, %49
  %168 = select i1 %167, i1 true, i1 %70
  br i1 %168, label %171, label %170

169:                                              ; preds = %172, %178, %125
  br i1 %40, label %181, label %193

170:                                              ; preds = %126
  call void @x264_me_refine_qpel_refdupe(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef null) #17
  br label %172

171:                                              ; preds = %126
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  br label %172

172:                                              ; preds = %171, %170
  %173 = load i32, ptr %18, align 16, !tbaa !224
  %174 = load i32, ptr %35, align 8, !tbaa !230
  %175 = add nsw i32 %174, %173
  store i32 %175, ptr %35, align 8, !tbaa !230
  %176 = load i32, ptr %61, align 8, !tbaa !230
  %177 = icmp slt i32 %175, %176
  br i1 %177, label %178, label %169

178:                                              ; preds = %172
  %179 = load ptr, ptr %36, align 8, !tbaa !48
  %180 = call ptr %179(ptr noundef nonnull %42, ptr noundef nonnull %4, i64 noundef 144) #17
  br label %169

181:                                              ; preds = %169
  %182 = load i32, ptr %61, align 8, !tbaa !230
  %183 = load i32, ptr %37, align 4, !tbaa !39
  %184 = add nsw i32 %183, %182
  %185 = load i32, ptr %38, align 8, !tbaa !145
  %186 = icmp eq i32 %185, 0
  %187 = select i1 %186, i32 4, i32 5
  %188 = mul nsw i32 %187, %2
  %189 = sdiv i32 %188, 4
  %190 = icmp sgt i32 %184, %189
  br i1 %190, label %191, label %193

191:                                              ; preds = %181
  %192 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 17
  store i32 268435456, ptr %192, align 16, !tbaa !187
  br label %214

193:                                              ; preds = %181, %169
  %194 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %41, i32 13
  %195 = load i32, ptr %194, align 4, !tbaa !5
  %196 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %65
  %197 = zext i32 %195 to i64
  %198 = mul nuw i64 %197, 4294967297
  store i64 %198, ptr %196, align 8, !tbaa !5
  %199 = getelementptr inbounds i8, ptr %196, i64 32
  store i64 %198, ptr %199, align 8, !tbaa !5
  %200 = getelementptr inbounds i8, ptr %196, i64 64
  store i64 %198, ptr %200, align 8, !tbaa !5
  %201 = getelementptr inbounds i8, ptr %196, i64 96
  store i64 %198, ptr %201, align 8, !tbaa !5
  %202 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %41, i32 3
  %203 = load i32, ptr %202, align 4, !tbaa !226
  %204 = trunc i32 %203 to i16
  %205 = and i16 %204, 255
  %206 = mul nuw i16 %205, 257
  store i16 %206, ptr %66, align 2, !tbaa !5
  store i16 %206, ptr %67, align 2, !tbaa !5
  store i16 %206, ptr %68, align 2, !tbaa !5
  store i16 %206, ptr %69, align 2, !tbaa !5
  br i1 %40, label %39, label %207, !llvm.loop !298

207:                                              ; preds = %193
  %208 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 12
  %209 = load i32, ptr %208, align 8, !tbaa !230
  %210 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 12
  %211 = load i32, ptr %210, align 8, !tbaa !230
  %212 = add nsw i32 %211, %209
  %213 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 17
  store i32 %212, ptr %213, align 16, !tbaa !187
  br label %214

214:                                              ; preds = %191, %207
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %4) #17
  ret void
}

declare void @x264_me_refine_qpel(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @x264_log(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_intra_chroma(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #0 {
  %3 = alloca [4 x i32], align 16
  %4 = alloca [4 x i32], align 16
  %5 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 24
  %6 = load ptr, ptr %5, align 8, !tbaa !299
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %10 = load i32, ptr %9, align 4, !tbaa !164
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi i1 [ false, %2 ], [ %11, %8 ]
  %14 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 19
  %15 = load i32, ptr %14, align 4, !tbaa !158
  %16 = icmp slt i32 %15, 268435456
  br i1 %16, label %148, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 27
  %19 = load i32, ptr %18, align 4, !tbaa !272
  %20 = and i32 %19, 11
  %21 = and i32 %19, 8
  %22 = icmp eq i32 %21, 0
  %23 = select i1 %22, i32 %20, i32 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [5 x [5 x i8]], ptr @i8x8chroma_mode_available, i64 0, i64 %24
  %26 = getelementptr inbounds i8, ptr %25, i64 3
  %27 = load i8, ptr %26, align 1, !tbaa !5
  %28 = icmp sgt i8 %27, -1
  %29 = select i1 %28, i1 %13, i1 false
  br i1 %29, label %41, label %30

30:                                               ; preds = %17
  %31 = load i8, ptr %25, align 1, !tbaa !5
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %144

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 73
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %37 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %38 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %39 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %40 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 21
  br label %100

41:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #17
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #17
  %42 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %43 = load ptr, ptr %42, align 8, !tbaa !46
  %44 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %45 = load ptr, ptr %44, align 8, !tbaa !46
  call void %6(ptr noundef %43, ptr noundef %45, ptr noundef nonnull %3) #17
  %46 = load ptr, ptr %5, align 8, !tbaa !299
  %47 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %48 = load ptr, ptr %47, align 16, !tbaa !46
  %49 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %50 = load ptr, ptr %49, align 16, !tbaa !46
  call void %46(ptr noundef %48, ptr noundef %50, ptr noundef nonnull %4) #17
  %51 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 65, i64 3
  %52 = load ptr, ptr %51, align 8, !tbaa !46
  %53 = load ptr, ptr %44, align 8, !tbaa !46
  call void %52(ptr noundef %53) #17
  %54 = load ptr, ptr %51, align 8, !tbaa !46
  %55 = load ptr, ptr %49, align 16, !tbaa !46
  call void %54(ptr noundef %55) #17
  %56 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %57 = load ptr, ptr %56, align 8, !tbaa !46
  %58 = load ptr, ptr %44, align 8, !tbaa !46
  %59 = load ptr, ptr %42, align 8, !tbaa !46
  %60 = call i32 %57(ptr noundef %58, i32 noundef 32, ptr noundef %59, i32 noundef 16) #17
  %61 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 3
  store i32 %60, ptr %61, align 4, !tbaa !39
  %62 = load ptr, ptr %56, align 8, !tbaa !46
  %63 = load ptr, ptr %49, align 16, !tbaa !46
  %64 = load ptr, ptr %47, align 16, !tbaa !46
  %65 = call i32 %62(ptr noundef %63, i32 noundef 32, ptr noundef %64, i32 noundef 16) #17
  %66 = getelementptr inbounds [4 x i32], ptr %4, i64 0, i64 3
  store i32 %65, ptr %66, align 4, !tbaa !39
  %67 = load i8, ptr %25, align 1, !tbaa !5
  %68 = icmp sgt i8 %67, -1
  br i1 %68, label %69, label %99

69:                                               ; preds = %41
  %70 = load i32, ptr %1, align 16, !tbaa !152
  %71 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 21
  %72 = load i32, ptr %14, align 4, !tbaa !158
  br label %73

73:                                               ; preds = %69, %94
  %74 = phi i32 [ %72, %69 ], [ %95, %94 ]
  %75 = phi i8 [ %67, %69 ], [ %97, %94 ]
  %76 = phi ptr [ %25, %69 ], [ %96, %94 ]
  %77 = zext i8 %75 to i32
  %78 = zext i8 %75 to i64
  %79 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !39
  %81 = getelementptr inbounds [4 x i32], ptr %4, i64 0, i64 %78
  %82 = load i32, ptr %81, align 4, !tbaa !39
  %83 = add nsw i32 %82, %80
  %84 = add nuw nsw i32 %77, 1
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %85
  %87 = load i8, ptr %86, align 1, !tbaa !5
  %88 = zext i8 %87 to i32
  %89 = mul nsw i32 %70, %88
  %90 = add nsw i32 %83, %89
  %91 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 20, i64 %78
  store i32 %90, ptr %91, align 4, !tbaa !39
  %92 = icmp slt i32 %90, %74
  br i1 %92, label %93, label %94

93:                                               ; preds = %73
  store i32 %90, ptr %14, align 4, !tbaa !158
  store i32 %77, ptr %71, align 4, !tbaa !284
  br label %94

94:                                               ; preds = %93, %73
  %95 = phi i32 [ %90, %93 ], [ %74, %73 ]
  %96 = getelementptr inbounds i8, ptr %76, i64 1
  %97 = load i8, ptr %96, align 1, !tbaa !5
  %98 = icmp sgt i8 %97, -1
  br i1 %98, label %73, label %99, !llvm.loop !300

99:                                               ; preds = %94, %41
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #17
  br label %144

100:                                              ; preds = %33, %140
  %101 = phi i8 [ %31, %33 ], [ %142, %140 ]
  %102 = phi ptr [ %25, %33 ], [ %141, %140 ]
  %103 = zext i8 %101 to i32
  %104 = load i32, ptr %34, align 4, !tbaa !164
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %100
  tail call void @x264_predict_lossless_8x8_chroma(ptr noundef nonnull %0, i32 noundef %103) #17
  %107 = zext i8 %101 to i64
  br label %115

108:                                              ; preds = %100
  %109 = zext i8 %101 to i64
  %110 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 65, i64 %109
  %111 = load ptr, ptr %110, align 8, !tbaa !46
  %112 = load ptr, ptr %35, align 8, !tbaa !46
  tail call void %111(ptr noundef %112) #17
  %113 = load ptr, ptr %110, align 8, !tbaa !46
  %114 = load ptr, ptr %36, align 16, !tbaa !46
  tail call void %113(ptr noundef %114) #17
  br label %115

115:                                              ; preds = %108, %106
  %116 = phi i64 [ %109, %108 ], [ %107, %106 ]
  %117 = load ptr, ptr %37, align 8, !tbaa !46
  %118 = load ptr, ptr %35, align 8, !tbaa !46
  %119 = load ptr, ptr %38, align 8, !tbaa !46
  %120 = tail call i32 %117(ptr noundef %118, i32 noundef 32, ptr noundef %119, i32 noundef 16) #17
  %121 = load ptr, ptr %37, align 8, !tbaa !46
  %122 = load ptr, ptr %36, align 16, !tbaa !46
  %123 = load ptr, ptr %39, align 16, !tbaa !46
  %124 = tail call i32 %121(ptr noundef %122, i32 noundef 32, ptr noundef %123, i32 noundef 16) #17
  %125 = add nsw i32 %124, %120
  %126 = load i32, ptr %1, align 16, !tbaa !152
  %127 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode8x8c_fix, i64 0, i64 %116
  %128 = load i8, ptr %127, align 1, !tbaa !5
  %129 = zext i8 %128 to i64
  %130 = add nuw nsw i64 %129, 1
  %131 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %130
  %132 = load i8, ptr %131, align 1, !tbaa !5
  %133 = zext i8 %132 to i32
  %134 = mul nsw i32 %126, %133
  %135 = add nsw i32 %125, %134
  %136 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 20, i64 %116
  store i32 %135, ptr %136, align 4, !tbaa !39
  %137 = load i32, ptr %14, align 4, !tbaa !158
  %138 = icmp slt i32 %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %115
  store i32 %135, ptr %14, align 4, !tbaa !158
  store i32 %103, ptr %40, align 4, !tbaa !284
  br label %140

140:                                              ; preds = %139, %115
  %141 = getelementptr inbounds i8, ptr %102, i64 1
  %142 = load i8, ptr %141, align 1, !tbaa !5
  %143 = icmp sgt i8 %142, -1
  br i1 %143, label %100, label %144, !llvm.loop !301

144:                                              ; preds = %140, %30, %99
  %145 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 21
  %146 = load i32, ptr %145, align 4, !tbaa !284
  %147 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 60
  store i32 %146, ptr %147, align 4, !tbaa !72
  br label %148

148:                                              ; preds = %12, %144
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_transform_rd(ptr noundef %0, ptr noundef %1, ptr nocapture noundef %2, ptr nocapture noundef %3) unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %6 = load ptr, ptr %5, align 16, !tbaa !66
  %7 = getelementptr inbounds %struct.x264_pps_t, ptr %6, i64 0, i32 15
  %8 = load i32, ptr %7, align 4, !tbaa !67
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %12 = load i32, ptr %11, align 8, !tbaa !49
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds [19 x i8], ptr @x264_mb_transform_8x8_allowed.partition_tab, i64 0, i64 %15
  %17 = load i8, ptr %16, align 1, !tbaa !5
  %18 = zext i8 %17 to i32
  br label %24

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %21 = load i32, ptr %20, align 16, !tbaa !5
  %22 = icmp eq i32 %21, 50529027
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %14, %19
  %25 = phi i32 [ %18, %14 ], [ %23, %19 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 2
  %29 = load i32, ptr %28, align 8, !tbaa !209
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %27
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef %1)
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  %33 = load i32, ptr %32, align 4, !tbaa !51
  %34 = xor i32 %33, 1
  store i32 %34, ptr %32, align 4, !tbaa !51
  %35 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %36 = load i32, ptr %35, align 4, !tbaa !153
  %37 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %36)
  %38 = load i32, ptr %3, align 4, !tbaa !39
  %39 = icmp slt i32 %38, %37
  br i1 %39, label %51, label %40

40:                                               ; preds = %31
  %41 = icmp sgt i32 %38, 0
  br i1 %41, label %42, label %50

42:                                               ; preds = %40
  %43 = load i32, ptr %2, align 4, !tbaa !39
  %44 = sext i32 %43 to i64
  %45 = sext i32 %37 to i64
  %46 = mul nsw i64 %44, %45
  %47 = zext i32 %38 to i64
  %48 = sdiv i64 %46, %47
  %49 = trunc i64 %48 to i32
  store i32 %49, ptr %2, align 4, !tbaa !39
  br label %50

50:                                               ; preds = %42, %40
  store i32 %37, ptr %3, align 4, !tbaa !39
  br label %54

51:                                               ; preds = %31
  %52 = load i32, ptr %32, align 4, !tbaa !51
  %53 = xor i32 %52, 1
  store i32 %53, ptr %32, align 4, !tbaa !51
  br label %54

54:                                               ; preds = %4, %50, %51, %27, %24
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_analyse_update_cache(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %4 = load i32, ptr %3, align 8, !tbaa !49
  switch i32 %4, label %312 [
    i32 0, label %31
    i32 1, label %6
    i32 2, label %96
    i32 3, label %688
    i32 4, label %100
    i32 5, label %189
    i32 6, label %218
    i32 18, label %236
    i32 7, label %236
    i32 17, label %5
  ]

5:                                                ; preds = %2
  tail call fastcc void @x264_mb_cache_mv_b8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 0, i32 noundef 1)
  tail call fastcc void @x264_mb_cache_mv_b8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 1, i32 noundef 1)
  tail call fastcc void @x264_mb_cache_mv_b8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 2, i32 noundef 1)
  tail call fastcc void @x264_mb_cache_mv_b8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 3, i32 noundef 1)
  br label %688

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 0
  %8 = load i32, ptr %7, align 4, !tbaa !39
  %9 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 12
  %10 = trunc i32 %8 to i16
  %11 = mul i16 %10, 257
  store i16 %11, ptr %9, align 2, !tbaa !5
  %12 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 20
  store i16 %11, ptr %12, align 2, !tbaa !5
  %13 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 1
  %14 = load i32, ptr %13, align 4, !tbaa !39
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 14
  %16 = trunc i32 %14 to i16
  %17 = mul i16 %16, 257
  store i16 %17, ptr %15, align 2, !tbaa !5
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 22
  store i16 %17, ptr %18, align 2, !tbaa !5
  %19 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 2
  %20 = load i32, ptr %19, align 4, !tbaa !39
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 28
  %22 = trunc i32 %20 to i16
  %23 = mul i16 %22, 257
  store i16 %23, ptr %21, align 2, !tbaa !5
  %24 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 36
  store i16 %23, ptr %24, align 2, !tbaa !5
  %25 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 15, i64 3
  %26 = load i32, ptr %25, align 4, !tbaa !39
  %27 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 30
  %28 = trunc i32 %26 to i16
  %29 = mul i16 %28, 257
  store i16 %29, ptr %27, align 2, !tbaa !5
  %30 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 38
  store i16 %29, ptr %30, align 2, !tbaa !5
  tail call fastcc void @x264_mb_analyse_intra_chroma(ptr noundef nonnull %0, ptr noundef %1)
  br label %688

31:                                               ; preds = %2
  %32 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 0
  %33 = load i32, ptr %32, align 4, !tbaa !39
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 12
  store i8 %34, ptr %35, align 1, !tbaa !5
  %36 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 1
  %37 = load i32, ptr %36, align 4, !tbaa !39
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 13
  store i8 %38, ptr %39, align 1, !tbaa !5
  %40 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 2
  %41 = load i32, ptr %40, align 4, !tbaa !39
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 20
  store i8 %42, ptr %43, align 1, !tbaa !5
  %44 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 3
  %45 = load i32, ptr %44, align 4, !tbaa !39
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 21
  store i8 %46, ptr %47, align 1, !tbaa !5
  %48 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 4
  %49 = load i32, ptr %48, align 4, !tbaa !39
  %50 = trunc i32 %49 to i8
  %51 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 14
  store i8 %50, ptr %51, align 1, !tbaa !5
  %52 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 5
  %53 = load i32, ptr %52, align 4, !tbaa !39
  %54 = trunc i32 %53 to i8
  %55 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 15
  store i8 %54, ptr %55, align 1, !tbaa !5
  %56 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 6
  %57 = load i32, ptr %56, align 4, !tbaa !39
  %58 = trunc i32 %57 to i8
  %59 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 22
  store i8 %58, ptr %59, align 1, !tbaa !5
  %60 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 7
  %61 = load i32, ptr %60, align 4, !tbaa !39
  %62 = trunc i32 %61 to i8
  %63 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 23
  store i8 %62, ptr %63, align 1, !tbaa !5
  %64 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 8
  %65 = load i32, ptr %64, align 4, !tbaa !39
  %66 = trunc i32 %65 to i8
  %67 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 28
  store i8 %66, ptr %67, align 1, !tbaa !5
  %68 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 9
  %69 = load i32, ptr %68, align 4, !tbaa !39
  %70 = trunc i32 %69 to i8
  %71 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 29
  store i8 %70, ptr %71, align 1, !tbaa !5
  %72 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 10
  %73 = load i32, ptr %72, align 4, !tbaa !39
  %74 = trunc i32 %73 to i8
  %75 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 36
  store i8 %74, ptr %75, align 1, !tbaa !5
  %76 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 11
  %77 = load i32, ptr %76, align 4, !tbaa !39
  %78 = trunc i32 %77 to i8
  %79 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 37
  store i8 %78, ptr %79, align 1, !tbaa !5
  %80 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 12
  %81 = load i32, ptr %80, align 4, !tbaa !39
  %82 = trunc i32 %81 to i8
  %83 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 30
  store i8 %82, ptr %83, align 1, !tbaa !5
  %84 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 13
  %85 = load i32, ptr %84, align 4, !tbaa !39
  %86 = trunc i32 %85 to i8
  %87 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 31
  store i8 %86, ptr %87, align 1, !tbaa !5
  %88 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 14
  %89 = load i32, ptr %88, align 4, !tbaa !39
  %90 = trunc i32 %89 to i8
  %91 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 38
  store i8 %90, ptr %91, align 1, !tbaa !5
  %92 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 17, i64 15
  %93 = load i32, ptr %92, align 4, !tbaa !39
  %94 = trunc i32 %93 to i8
  %95 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 0, i64 39
  store i8 %94, ptr %95, align 1, !tbaa !5
  tail call fastcc void @x264_mb_analyse_intra_chroma(ptr noundef nonnull %0, ptr noundef %1)
  br label %688

96:                                               ; preds = %2
  %97 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 11
  %98 = load i32, ptr %97, align 8, !tbaa !273
  %99 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 59
  store i32 %98, ptr %99, align 16, !tbaa !70
  tail call fastcc void @x264_mb_analyse_intra_chroma(ptr noundef nonnull %0, ptr noundef %1)
  br label %688

100:                                              ; preds = %2
  %101 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %102 = load i32, ptr %101, align 4, !tbaa !50
  switch i32 %102, label %188 [
    i32 16, label %103
    i32 14, label %124
    i32 15, label %153
  ]

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 3
  %105 = load i32, ptr %104, align 4, !tbaa !234
  %106 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %107 = and i32 %105, 255
  %108 = mul nuw i32 %107, 16843009
  store i32 %108, ptr %106, align 4, !tbaa !5
  %109 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %108, ptr %109, align 4, !tbaa !5
  %110 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 %108, ptr %110, align 4, !tbaa !5
  %111 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %108, ptr %111, align 4, !tbaa !5
  %112 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 13
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %115 = zext i32 %113 to i64
  %116 = mul nuw i64 %115, 4294967297
  store i64 %116, ptr %114, align 8, !tbaa !5
  %117 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 %116, ptr %117, align 8, !tbaa !5
  %118 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %116, ptr %118, align 8, !tbaa !5
  %119 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %116, ptr %119, align 8, !tbaa !5
  %120 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 %116, ptr %120, align 8, !tbaa !5
  %121 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %116, ptr %121, align 8, !tbaa !5
  %122 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %116, ptr %122, align 8, !tbaa !5
  %123 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %116, ptr %123, align 8, !tbaa !5
  br label %688

124:                                              ; preds = %100
  %125 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 3
  %126 = load i32, ptr %125, align 4, !tbaa !226
  %127 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %128 = and i32 %126, 255
  %129 = mul nuw i32 %128, 16843009
  store i32 %129, ptr %127, align 4, !tbaa !5
  %130 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %129, ptr %130, align 4, !tbaa !5
  %131 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 3
  %132 = load i32, ptr %131, align 4, !tbaa !226
  %133 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %134 = and i32 %132, 255
  %135 = mul nuw i32 %134, 16843009
  store i32 %135, ptr %133, align 4, !tbaa !5
  %136 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %135, ptr %136, align 4, !tbaa !5
  %137 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 13
  %138 = load i32, ptr %137, align 4, !tbaa !5
  %139 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %140 = zext i32 %138 to i64
  %141 = mul nuw i64 %140, 4294967297
  store i64 %141, ptr %139, align 8, !tbaa !5
  %142 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 %141, ptr %142, align 8, !tbaa !5
  %143 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %141, ptr %143, align 8, !tbaa !5
  %144 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %141, ptr %144, align 8, !tbaa !5
  %145 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 13
  %146 = load i32, ptr %145, align 4, !tbaa !5
  %147 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %148 = zext i32 %146 to i64
  %149 = mul nuw i64 %148, 4294967297
  store i64 %149, ptr %147, align 8, !tbaa !5
  %150 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %149, ptr %150, align 8, !tbaa !5
  %151 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %149, ptr %151, align 8, !tbaa !5
  %152 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %149, ptr %152, align 8, !tbaa !5
  br label %688

153:                                              ; preds = %100
  %154 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 3
  %155 = load i32, ptr %154, align 4, !tbaa !226
  %156 = trunc i32 %155 to i16
  %157 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %158 = and i16 %156, 255
  %159 = mul nuw i16 %158, 257
  store i16 %159, ptr %157, align 2, !tbaa !5
  %160 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i16 %159, ptr %160, align 2, !tbaa !5
  %161 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i16 %159, ptr %161, align 2, !tbaa !5
  %162 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i16 %159, ptr %162, align 2, !tbaa !5
  %163 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 3
  %164 = load i32, ptr %163, align 4, !tbaa !226
  %165 = trunc i32 %164 to i16
  %166 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %167 = and i16 %165, 255
  %168 = mul nuw i16 %167, 257
  store i16 %168, ptr %166, align 2, !tbaa !5
  %169 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  store i16 %168, ptr %169, align 2, !tbaa !5
  %170 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  store i16 %168, ptr %170, align 2, !tbaa !5
  %171 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 38
  store i16 %168, ptr %171, align 2, !tbaa !5
  %172 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 13
  %173 = load i32, ptr %172, align 4, !tbaa !5
  %174 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %175 = zext i32 %173 to i64
  %176 = mul nuw i64 %175, 4294967297
  store i64 %176, ptr %174, align 8, !tbaa !5
  %177 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %176, ptr %177, align 8, !tbaa !5
  %178 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 %176, ptr %178, align 8, !tbaa !5
  %179 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %176, ptr %179, align 8, !tbaa !5
  %180 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 13
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %183 = zext i32 %181 to i64
  %184 = mul nuw i64 %183, 4294967297
  store i64 %184, ptr %182, align 8, !tbaa !5
  %185 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %184, ptr %185, align 8, !tbaa !5
  %186 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %184, ptr %186, align 8, !tbaa !5
  %187 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %184, ptr %187, align 8, !tbaa !5
  br label %688

188:                                              ; preds = %100
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull @.str.7, i32 noundef %102) #17
  br label %688

189:                                              ; preds = %2
  %190 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 0, i32 3
  %191 = load i32, ptr %190, align 4, !tbaa !226
  %192 = trunc i32 %191 to i16
  %193 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %194 = and i16 %192, 255
  %195 = mul nuw i16 %194, 257
  store i16 %195, ptr %193, align 2, !tbaa !5
  %196 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i16 %195, ptr %196, align 2, !tbaa !5
  %197 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 1, i32 3
  %198 = load i32, ptr %197, align 4, !tbaa !226
  %199 = trunc i32 %198 to i16
  %200 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %201 = and i16 %199, 255
  %202 = mul nuw i16 %201, 257
  store i16 %202, ptr %200, align 2, !tbaa !5
  %203 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  store i16 %202, ptr %203, align 2, !tbaa !5
  %204 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 2, i32 3
  %205 = load i32, ptr %204, align 4, !tbaa !226
  %206 = trunc i32 %205 to i16
  %207 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %208 = and i16 %206, 255
  %209 = mul nuw i16 %208, 257
  store i16 %209, ptr %207, align 2, !tbaa !5
  %210 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i16 %209, ptr %210, align 2, !tbaa !5
  %211 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 3, i32 3
  %212 = load i32, ptr %211, align 4, !tbaa !226
  %213 = trunc i32 %212 to i16
  %214 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %215 = and i16 %213, 255
  %216 = mul nuw i16 %215, 257
  store i16 %216, ptr %214, align 2, !tbaa !5
  %217 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 38
  store i16 %216, ptr %217, align 2, !tbaa !5
  tail call fastcc void @x264_mb_cache_mv_p8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 0)
  tail call fastcc void @x264_mb_cache_mv_p8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 1)
  tail call fastcc void @x264_mb_cache_mv_p8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 2)
  tail call fastcc void @x264_mb_cache_mv_p8x8(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 3)
  br label %688

218:                                              ; preds = %2
  %219 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 16, ptr %219, align 4, !tbaa !50
  %220 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  store i32 0, ptr %220, align 4, !tbaa !5
  %221 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 0, ptr %221, align 4, !tbaa !5
  %222 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 0, ptr %222, align 4, !tbaa !5
  %223 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 0, ptr %223, align 4, !tbaa !5
  %224 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 10
  %225 = load i32, ptr %224, align 4, !tbaa !5
  %226 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %227 = zext i32 %225 to i64
  %228 = mul nuw i64 %227, 4294967297
  store i64 %228, ptr %226, align 8, !tbaa !5
  %229 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 %228, ptr %229, align 8, !tbaa !5
  %230 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %228, ptr %230, align 8, !tbaa !5
  %231 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %228, ptr %231, align 8, !tbaa !5
  %232 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 %228, ptr %232, align 8, !tbaa !5
  %233 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %228, ptr %233, align 8, !tbaa !5
  %234 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %228, ptr %234, align 8, !tbaa !5
  %235 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %228, ptr %235, align 8, !tbaa !5
  br label %688

236:                                              ; preds = %2, %2
  %237 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 9
  %238 = load i32, ptr %237, align 16, !tbaa !302
  %239 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 %238, ptr %239, align 4, !tbaa !50
  %240 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 8
  %241 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %242 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  %243 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 8, i64 1, i64 0
  %244 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %245 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  %246 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7
  %247 = load i32, ptr %246, align 4, !tbaa !5
  %248 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %249 = zext i32 %247 to i64
  %250 = mul nuw i64 %249, 4294967297
  store i64 %250, ptr %248, align 8, !tbaa !5
  %251 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %250, ptr %251, align 8, !tbaa !5
  %252 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 1, i64 0
  %253 = load i32, ptr %252, align 4, !tbaa !5
  %254 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %255 = zext i32 %253 to i64
  %256 = mul nuw i64 %255, 4294967297
  store i64 %256, ptr %254, align 8, !tbaa !5
  %257 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  store i64 %256, ptr %257, align 8, !tbaa !5
  %258 = load <2 x i8>, ptr %240, align 1, !tbaa !5
  %259 = zext <2 x i8> %258 to <2 x i16>
  %260 = mul nuw <2 x i16> %259, <i16 257, i16 257>
  store <2 x i16> %260, ptr %241, align 2, !tbaa !5
  store <2 x i16> %260, ptr %242, align 2, !tbaa !5
  %261 = load <2 x i8>, ptr %243, align 1, !tbaa !5
  %262 = zext <2 x i8> %261 to <2 x i16>
  %263 = mul nuw <2 x i16> %262, <i16 257, i16 257>
  store <2 x i16> %263, ptr %244, align 2, !tbaa !5
  store <2 x i16> %263, ptr %245, align 2, !tbaa !5
  %264 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 0, i64 1
  %265 = load i32, ptr %264, align 4, !tbaa !5
  %266 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %267 = zext i32 %265 to i64
  %268 = mul nuw i64 %267, 4294967297
  store i64 %268, ptr %266, align 8, !tbaa !5
  %269 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %268, ptr %269, align 8, !tbaa !5
  %270 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 1, i64 1
  %271 = load i32, ptr %270, align 4, !tbaa !5
  %272 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  %273 = zext i32 %271 to i64
  %274 = mul nuw i64 %273, 4294967297
  store i64 %274, ptr %272, align 8, !tbaa !5
  %275 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  store i64 %274, ptr %275, align 8, !tbaa !5
  %276 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 8, i64 0, i64 2
  %277 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %278 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  %279 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 8, i64 1, i64 2
  %280 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  %281 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  %282 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 0, i64 2
  %283 = load i32, ptr %282, align 4, !tbaa !5
  %284 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %285 = zext i32 %283 to i64
  %286 = mul nuw i64 %285, 4294967297
  store i64 %286, ptr %284, align 8, !tbaa !5
  %287 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %286, ptr %287, align 8, !tbaa !5
  %288 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 1, i64 2
  %289 = load i32, ptr %288, align 4, !tbaa !5
  %290 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %291 = zext i32 %289 to i64
  %292 = mul nuw i64 %291, 4294967297
  store i64 %292, ptr %290, align 8, !tbaa !5
  %293 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  store i64 %292, ptr %293, align 8, !tbaa !5
  %294 = load <2 x i8>, ptr %276, align 1, !tbaa !5
  %295 = zext <2 x i8> %294 to <2 x i16>
  %296 = mul nuw <2 x i16> %295, <i16 257, i16 257>
  store <2 x i16> %296, ptr %277, align 2, !tbaa !5
  store <2 x i16> %296, ptr %278, align 2, !tbaa !5
  %297 = load <2 x i8>, ptr %279, align 1, !tbaa !5
  %298 = zext <2 x i8> %297 to <2 x i16>
  %299 = mul nuw <2 x i16> %298, <i16 257, i16 257>
  store <2 x i16> %299, ptr %280, align 2, !tbaa !5
  store <2 x i16> %299, ptr %281, align 2, !tbaa !5
  %300 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 0, i64 3
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  %303 = zext i32 %301 to i64
  %304 = mul nuw i64 %303, 4294967297
  store i64 %304, ptr %302, align 8, !tbaa !5
  %305 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %304, ptr %305, align 8, !tbaa !5
  %306 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 1, i64 3
  %307 = load i32, ptr %306, align 4, !tbaa !5
  %308 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  %309 = zext i32 %307 to i64
  %310 = mul nuw i64 %309, 4294967297
  store i64 %310, ptr %308, align 8, !tbaa !5
  %311 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  store i64 %310, ptr %311, align 8, !tbaa !5
  br label %688

312:                                              ; preds = %2
  %313 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %314 = load i32, ptr %313, align 4, !tbaa !50
  switch i32 %314, label %687 [
    i32 16, label %315
    i32 14, label %423
    i32 15, label %537
  ]

315:                                              ; preds = %312
  switch i32 %4, label %688 [
    i32 8, label %316
    i32 12, label %349
    i32 16, label %382
  ]

316:                                              ; preds = %315
  %317 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 3
  %318 = load i32, ptr %317, align 4, !tbaa !234
  %319 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %320 = and i32 %318, 255
  %321 = mul nuw i32 %320, 16843009
  store i32 %321, ptr %319, align 4, !tbaa !5
  %322 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %321, ptr %322, align 4, !tbaa !5
  %323 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 %321, ptr %323, align 4, !tbaa !5
  %324 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %321, ptr %324, align 4, !tbaa !5
  %325 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 13
  %326 = load i32, ptr %325, align 4, !tbaa !5
  %327 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %328 = zext i32 %326 to i64
  %329 = mul nuw i64 %328, 4294967297
  store i64 %329, ptr %327, align 8, !tbaa !5
  %330 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 %329, ptr %330, align 8, !tbaa !5
  %331 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %329, ptr %331, align 8, !tbaa !5
  %332 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %329, ptr %332, align 8, !tbaa !5
  %333 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 %329, ptr %333, align 8, !tbaa !5
  %334 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %329, ptr %334, align 8, !tbaa !5
  %335 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %329, ptr %335, align 8, !tbaa !5
  %336 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %329, ptr %336, align 8, !tbaa !5
  %337 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  store i32 -1, ptr %337, align 4, !tbaa !5
  %338 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  store i32 -1, ptr %338, align 4, !tbaa !5
  %339 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  store i32 -1, ptr %339, align 4, !tbaa !5
  %340 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  store i32 -1, ptr %340, align 4, !tbaa !5
  %341 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %342 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  %343 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %344 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  %345 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 12
  store i64 0, ptr %345, align 8, !tbaa !5
  %346 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 20
  store i64 0, ptr %346, align 8, !tbaa !5
  %347 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 28
  store i64 0, ptr %347, align 8, !tbaa !5
  %348 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 36
  store i64 0, ptr %348, align 8, !tbaa !5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %341, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %342, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %343, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %344, i8 0, i64 16, i1 false)
  br label %688

349:                                              ; preds = %315
  %350 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  store i32 -1, ptr %350, align 4, !tbaa !5
  %351 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 -1, ptr %351, align 4, !tbaa !5
  %352 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 -1, ptr %352, align 4, !tbaa !5
  %353 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 -1, ptr %353, align 4, !tbaa !5
  %354 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %355 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  %356 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %357 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  %358 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 12
  store i64 0, ptr %358, align 8, !tbaa !5
  %359 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  store i64 0, ptr %359, align 8, !tbaa !5
  %360 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 28
  store i64 0, ptr %360, align 8, !tbaa !5
  %361 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 36
  store i64 0, ptr %361, align 8, !tbaa !5
  %362 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 2, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %354, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %355, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %356, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %357, i8 0, i64 16, i1 false)
  %363 = load i32, ptr %362, align 4, !tbaa !303
  %364 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %365 = and i32 %363, 255
  %366 = mul nuw i32 %365, 16843009
  store i32 %366, ptr %364, align 4, !tbaa !5
  %367 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  store i32 %366, ptr %367, align 4, !tbaa !5
  %368 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  store i32 %366, ptr %368, align 4, !tbaa !5
  %369 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  store i32 %366, ptr %369, align 4, !tbaa !5
  %370 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 2, i32 13
  %371 = load i32, ptr %370, align 4, !tbaa !5
  %372 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %373 = zext i32 %371 to i64
  %374 = mul nuw i64 %373, 4294967297
  store i64 %374, ptr %372, align 8, !tbaa !5
  %375 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  store i64 %374, ptr %375, align 8, !tbaa !5
  %376 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  store i64 %374, ptr %376, align 8, !tbaa !5
  %377 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  store i64 %374, ptr %377, align 8, !tbaa !5
  %378 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  store i64 %374, ptr %378, align 8, !tbaa !5
  %379 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  store i64 %374, ptr %379, align 8, !tbaa !5
  %380 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  store i64 %374, ptr %380, align 8, !tbaa !5
  %381 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  store i64 %374, ptr %381, align 8, !tbaa !5
  br label %688

382:                                              ; preds = %315
  %383 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 3, i32 3
  %384 = load i32, ptr %383, align 4, !tbaa !249
  %385 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %386 = and i32 %384, 255
  %387 = mul nuw i32 %386, 16843009
  store i32 %387, ptr %385, align 4, !tbaa !5
  %388 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %387, ptr %388, align 4, !tbaa !5
  %389 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 %387, ptr %389, align 4, !tbaa !5
  %390 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %387, ptr %390, align 4, !tbaa !5
  %391 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 3, i32 13
  %392 = load i32, ptr %391, align 4, !tbaa !5
  %393 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %394 = zext i32 %392 to i64
  %395 = mul nuw i64 %394, 4294967297
  store i64 %395, ptr %393, align 8, !tbaa !5
  %396 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 %395, ptr %396, align 8, !tbaa !5
  %397 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %395, ptr %397, align 8, !tbaa !5
  %398 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %395, ptr %398, align 8, !tbaa !5
  %399 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 %395, ptr %399, align 8, !tbaa !5
  %400 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %395, ptr %400, align 8, !tbaa !5
  %401 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %395, ptr %401, align 8, !tbaa !5
  %402 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %395, ptr %402, align 8, !tbaa !5
  %403 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 3, i32 3
  %404 = load i32, ptr %403, align 4, !tbaa !250
  %405 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %406 = and i32 %404, 255
  %407 = mul nuw i32 %406, 16843009
  store i32 %407, ptr %405, align 4, !tbaa !5
  %408 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  store i32 %407, ptr %408, align 4, !tbaa !5
  %409 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  store i32 %407, ptr %409, align 4, !tbaa !5
  %410 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  store i32 %407, ptr %410, align 4, !tbaa !5
  %411 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 3, i32 13
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %414 = zext i32 %412 to i64
  %415 = mul nuw i64 %414, 4294967297
  store i64 %415, ptr %413, align 8, !tbaa !5
  %416 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  store i64 %415, ptr %416, align 8, !tbaa !5
  %417 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  store i64 %415, ptr %417, align 8, !tbaa !5
  %418 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  store i64 %415, ptr %418, align 8, !tbaa !5
  %419 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  store i64 %415, ptr %419, align 8, !tbaa !5
  %420 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  store i64 %415, ptr %420, align 8, !tbaa !5
  %421 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  store i64 %415, ptr %421, align 8, !tbaa !5
  %422 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  store i64 %415, ptr %422, align 8, !tbaa !5
  br label %688

423:                                              ; preds = %312
  %424 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 38, i64 0
  %425 = load i32, ptr %424, align 4, !tbaa !39
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %426
  %428 = load i8, ptr %427, align 1, !tbaa !5
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %445, label %430

430:                                              ; preds = %423
  %431 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 3
  %432 = load i32, ptr %431, align 4, !tbaa !226
  %433 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %434 = and i32 %432, 255
  %435 = mul nuw i32 %434, 16843009
  store i32 %435, ptr %433, align 4, !tbaa !5
  %436 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 %435, ptr %436, align 4, !tbaa !5
  %437 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 13
  %438 = load i32, ptr %437, align 4, !tbaa !5
  %439 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %440 = zext i32 %438 to i64
  %441 = mul nuw i64 %440, 4294967297
  store i64 %441, ptr %439, align 8, !tbaa !5
  %442 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 %441, ptr %442, align 8, !tbaa !5
  %443 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %441, ptr %443, align 8, !tbaa !5
  %444 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %441, ptr %444, align 8, !tbaa !5
  br label %452

445:                                              ; preds = %423
  %446 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  store i32 -1, ptr %446, align 4, !tbaa !5
  %447 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i32 -1, ptr %447, align 4, !tbaa !5
  %448 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %449 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %448, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %449, i8 0, i64 16, i1 false)
  %450 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 12
  store i64 0, ptr %450, align 8, !tbaa !5
  %451 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  store i64 0, ptr %451, align 8, !tbaa !5
  br label %452

452:                                              ; preds = %445, %430
  %453 = load i32, ptr %424, align 4, !tbaa !39
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %454
  %456 = load i8, ptr %455, align 1, !tbaa !5
  %457 = icmp eq i8 %456, 0
  br i1 %457, label %473, label %458

458:                                              ; preds = %452
  %459 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 0, i32 3
  %460 = load i32, ptr %459, align 4, !tbaa !226
  %461 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %462 = and i32 %460, 255
  %463 = mul nuw i32 %462, 16843009
  store i32 %463, ptr %461, align 4, !tbaa !5
  %464 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  store i32 %463, ptr %464, align 4, !tbaa !5
  %465 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 0, i32 13
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %468 = zext i32 %466 to i64
  %469 = mul nuw i64 %468, 4294967297
  store i64 %469, ptr %467, align 8, !tbaa !5
  %470 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  store i64 %469, ptr %470, align 8, !tbaa !5
  %471 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  store i64 %469, ptr %471, align 8, !tbaa !5
  %472 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  store i64 %469, ptr %472, align 8, !tbaa !5
  br label %480

473:                                              ; preds = %452
  %474 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  store i32 -1, ptr %474, align 4, !tbaa !5
  %475 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  store i32 -1, ptr %475, align 4, !tbaa !5
  %476 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %477 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %476, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %477, i8 0, i64 16, i1 false)
  %478 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 12
  store i64 0, ptr %478, align 8, !tbaa !5
  %479 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 20
  store i64 0, ptr %479, align 8, !tbaa !5
  br label %480

480:                                              ; preds = %458, %473
  %481 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 38, i64 1
  %482 = load i32, ptr %481, align 4, !tbaa !39
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %483
  %485 = load i8, ptr %484, align 1, !tbaa !5
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %502, label %487

487:                                              ; preds = %480
  %488 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 3
  %489 = load i32, ptr %488, align 4, !tbaa !226
  %490 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %491 = and i32 %489, 255
  %492 = mul nuw i32 %491, 16843009
  store i32 %492, ptr %490, align 4, !tbaa !5
  %493 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 %492, ptr %493, align 4, !tbaa !5
  %494 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 13
  %495 = load i32, ptr %494, align 4, !tbaa !5
  %496 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %497 = zext i32 %495 to i64
  %498 = mul nuw i64 %497, 4294967297
  store i64 %498, ptr %496, align 8, !tbaa !5
  %499 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %498, ptr %499, align 8, !tbaa !5
  %500 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %498, ptr %500, align 8, !tbaa !5
  %501 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %498, ptr %501, align 8, !tbaa !5
  br label %509

502:                                              ; preds = %480
  %503 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i32 -1, ptr %503, align 4, !tbaa !5
  %504 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i32 -1, ptr %504, align 4, !tbaa !5
  %505 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %506 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %505, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %506, i8 0, i64 16, i1 false)
  %507 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 28
  store i64 0, ptr %507, align 8, !tbaa !5
  %508 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 36
  store i64 0, ptr %508, align 8, !tbaa !5
  br label %509

509:                                              ; preds = %502, %487
  %510 = load i32, ptr %481, align 4, !tbaa !39
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %511
  %513 = load i8, ptr %512, align 1, !tbaa !5
  %514 = icmp eq i8 %513, 0
  br i1 %514, label %530, label %515

515:                                              ; preds = %509
  %516 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 1, i32 3
  %517 = load i32, ptr %516, align 4, !tbaa !226
  %518 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  %519 = and i32 %517, 255
  %520 = mul nuw i32 %519, 16843009
  store i32 %520, ptr %518, align 4, !tbaa !5
  %521 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  store i32 %520, ptr %521, align 4, !tbaa !5
  %522 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 1, i32 13
  %523 = load i32, ptr %522, align 4, !tbaa !5
  %524 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %525 = zext i32 %523 to i64
  %526 = mul nuw i64 %525, 4294967297
  store i64 %526, ptr %524, align 8, !tbaa !5
  %527 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  store i64 %526, ptr %527, align 8, !tbaa !5
  %528 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  store i64 %526, ptr %528, align 8, !tbaa !5
  %529 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  store i64 %526, ptr %529, align 8, !tbaa !5
  br label %688

530:                                              ; preds = %509
  %531 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  store i32 -1, ptr %531, align 4, !tbaa !5
  %532 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  store i32 -1, ptr %532, align 4, !tbaa !5
  %533 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %534 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %533, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %534, i8 0, i64 16, i1 false)
  %535 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 28
  store i64 0, ptr %535, align 8, !tbaa !5
  %536 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 36
  store i64 0, ptr %536, align 8, !tbaa !5
  br label %688

537:                                              ; preds = %312
  %538 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 39, i64 0
  %539 = load i32, ptr %538, align 4, !tbaa !39
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %540
  %542 = load i8, ptr %541, align 1, !tbaa !5
  %543 = icmp eq i8 %542, 0
  br i1 %543, label %561, label %544

544:                                              ; preds = %537
  %545 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 3
  %546 = load i32, ptr %545, align 4, !tbaa !226
  %547 = trunc i32 %546 to i16
  %548 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %549 = and i16 %547, 255
  %550 = mul nuw i16 %549, 257
  store i16 %550, ptr %548, align 2, !tbaa !5
  %551 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i16 %550, ptr %551, align 2, !tbaa !5
  %552 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i16 %550, ptr %552, align 2, !tbaa !5
  %553 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i16 %550, ptr %553, align 2, !tbaa !5
  %554 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 13
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %557 = zext i32 %555 to i64
  %558 = mul nuw i64 %557, 4294967297
  store i64 %558, ptr %556, align 8, !tbaa !5
  %559 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 %558, ptr %559, align 8, !tbaa !5
  %560 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 %558, ptr %560, align 8, !tbaa !5
  br label %573

561:                                              ; preds = %537
  %562 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  store i16 -1, ptr %562, align 2, !tbaa !5
  %563 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  store i16 -1, ptr %563, align 2, !tbaa !5
  %564 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  store i16 -1, ptr %564, align 2, !tbaa !5
  %565 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  store i16 -1, ptr %565, align 2, !tbaa !5
  %566 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  store i64 0, ptr %566, align 8, !tbaa !5
  %567 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  store i64 0, ptr %567, align 8, !tbaa !5
  %568 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  store i64 0, ptr %568, align 8, !tbaa !5
  %569 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 12
  store i32 0, ptr %569, align 4, !tbaa !5
  %570 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  store i32 0, ptr %570, align 4, !tbaa !5
  %571 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 28
  store i32 0, ptr %571, align 4, !tbaa !5
  %572 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 36
  store i32 0, ptr %572, align 4, !tbaa !5
  br label %573

573:                                              ; preds = %561, %544
  %574 = phi i64 [ 0, %561 ], [ %558, %544 ]
  %575 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  store i64 %574, ptr %575, align 8
  %576 = load i32, ptr %538, align 4, !tbaa !39
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %577
  %579 = load i8, ptr %578, align 1, !tbaa !5
  %580 = icmp eq i8 %579, 0
  br i1 %580, label %598, label %581

581:                                              ; preds = %573
  %582 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 0, i32 3
  %583 = load i32, ptr %582, align 4, !tbaa !226
  %584 = trunc i32 %583 to i16
  %585 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %586 = and i16 %584, 255
  %587 = mul nuw i16 %586, 257
  store i16 %587, ptr %585, align 2, !tbaa !5
  %588 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  store i16 %587, ptr %588, align 2, !tbaa !5
  %589 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  store i16 %587, ptr %589, align 2, !tbaa !5
  %590 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  store i16 %587, ptr %590, align 2, !tbaa !5
  %591 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 0, i32 13
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %594 = zext i32 %592 to i64
  %595 = mul nuw i64 %594, 4294967297
  store i64 %595, ptr %593, align 8, !tbaa !5
  %596 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  store i64 %595, ptr %596, align 8, !tbaa !5
  %597 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  store i64 %595, ptr %597, align 8, !tbaa !5
  br label %610

598:                                              ; preds = %573
  %599 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  store i16 -1, ptr %599, align 2, !tbaa !5
  %600 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  store i16 -1, ptr %600, align 2, !tbaa !5
  %601 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  store i16 -1, ptr %601, align 2, !tbaa !5
  %602 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  store i16 -1, ptr %602, align 2, !tbaa !5
  %603 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  store i64 0, ptr %603, align 8, !tbaa !5
  %604 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  store i64 0, ptr %604, align 8, !tbaa !5
  %605 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  store i64 0, ptr %605, align 8, !tbaa !5
  %606 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 12
  store i32 0, ptr %606, align 4, !tbaa !5
  %607 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 20
  store i32 0, ptr %607, align 4, !tbaa !5
  %608 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 28
  store i32 0, ptr %608, align 4, !tbaa !5
  %609 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 36
  store i32 0, ptr %609, align 4, !tbaa !5
  br label %610

610:                                              ; preds = %581, %598
  %611 = phi i64 [ 0, %598 ], [ %595, %581 ]
  %612 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  store i64 %611, ptr %612, align 8
  %613 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 39, i64 1
  %614 = load i32, ptr %613, align 4, !tbaa !39
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %615
  %617 = load i8, ptr %616, align 1, !tbaa !5
  %618 = icmp eq i8 %617, 0
  br i1 %618, label %636, label %619

619:                                              ; preds = %610
  %620 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 3
  %621 = load i32, ptr %620, align 4, !tbaa !226
  %622 = trunc i32 %621 to i16
  %623 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %624 = and i16 %622, 255
  %625 = mul nuw i16 %624, 257
  store i16 %625, ptr %623, align 2, !tbaa !5
  %626 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  store i16 %625, ptr %626, align 2, !tbaa !5
  %627 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  store i16 %625, ptr %627, align 2, !tbaa !5
  %628 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 38
  store i16 %625, ptr %628, align 2, !tbaa !5
  %629 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 13
  %630 = load i32, ptr %629, align 4, !tbaa !5
  %631 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %632 = zext i32 %630 to i64
  %633 = mul nuw i64 %632, 4294967297
  store i64 %633, ptr %631, align 8, !tbaa !5
  %634 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 %633, ptr %634, align 8, !tbaa !5
  %635 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 %633, ptr %635, align 8, !tbaa !5
  br label %648

636:                                              ; preds = %610
  %637 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  store i16 -1, ptr %637, align 2, !tbaa !5
  %638 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  store i16 -1, ptr %638, align 2, !tbaa !5
  %639 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  store i16 -1, ptr %639, align 2, !tbaa !5
  %640 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 38
  store i16 -1, ptr %640, align 2, !tbaa !5
  %641 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  store i64 0, ptr %641, align 8, !tbaa !5
  %642 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  store i64 0, ptr %642, align 8, !tbaa !5
  %643 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  store i64 0, ptr %643, align 8, !tbaa !5
  %644 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 14
  store i32 0, ptr %644, align 4, !tbaa !5
  %645 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 22
  store i32 0, ptr %645, align 4, !tbaa !5
  %646 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 30
  store i32 0, ptr %646, align 4, !tbaa !5
  %647 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 38
  store i32 0, ptr %647, align 4, !tbaa !5
  br label %648

648:                                              ; preds = %636, %619
  %649 = phi i64 [ 0, %636 ], [ %633, %619 ]
  %650 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  store i64 %649, ptr %650, align 8
  %651 = load i32, ptr %613, align 4, !tbaa !39
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %652
  %654 = load i8, ptr %653, align 1, !tbaa !5
  %655 = icmp eq i8 %654, 0
  br i1 %655, label %674, label %656

656:                                              ; preds = %648
  %657 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 1, i32 3
  %658 = load i32, ptr %657, align 4, !tbaa !226
  %659 = trunc i32 %658 to i16
  %660 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 14
  %661 = and i16 %659, 255
  %662 = mul nuw i16 %661, 257
  store i16 %662, ptr %660, align 2, !tbaa !5
  %663 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 22
  store i16 %662, ptr %663, align 2, !tbaa !5
  %664 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 30
  store i16 %662, ptr %664, align 2, !tbaa !5
  %665 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 38
  store i16 %662, ptr %665, align 2, !tbaa !5
  %666 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 1, i32 13
  %667 = load i32, ptr %666, align 4, !tbaa !5
  %668 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  %669 = zext i32 %667 to i64
  %670 = mul nuw i64 %669, 4294967297
  store i64 %670, ptr %668, align 8, !tbaa !5
  %671 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  store i64 %670, ptr %671, align 8, !tbaa !5
  %672 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  store i64 %670, ptr %672, align 8, !tbaa !5
  %673 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  store i64 %670, ptr %673, align 8, !tbaa !5
  br label %688

674:                                              ; preds = %648
  %675 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 14
  store i16 -1, ptr %675, align 2, !tbaa !5
  %676 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 22
  store i16 -1, ptr %676, align 2, !tbaa !5
  %677 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 30
  store i16 -1, ptr %677, align 2, !tbaa !5
  %678 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 38
  store i16 -1, ptr %678, align 2, !tbaa !5
  %679 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  store i64 0, ptr %679, align 8, !tbaa !5
  %680 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  store i64 0, ptr %680, align 8, !tbaa !5
  %681 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  store i64 0, ptr %681, align 8, !tbaa !5
  %682 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  store i64 0, ptr %682, align 8, !tbaa !5
  %683 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 14
  store i32 0, ptr %683, align 4, !tbaa !5
  %684 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 22
  store i32 0, ptr %684, align 4, !tbaa !5
  %685 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 30
  store i32 0, ptr %685, align 4, !tbaa !5
  %686 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 38
  store i32 0, ptr %686, align 4, !tbaa !5
  br label %688

687:                                              ; preds = %312
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 0, ptr noundef nonnull @.str.8) #17
  br label %688

688:                                              ; preds = %5, %218, %189, %124, %103, %382, %349, %674, %656, %530, %515, %687, %315, %316, %153, %188, %236, %2, %96, %6, %31
  ret void
}

declare void @x264_macroblock_encode(ptr noundef) local_unnamed_addr #2

declare void @x264_me_refine_qpel_rd(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare i32 @x264_mb_predict_mv_direct16x16(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @x264_mb_mc(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_b_rd(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %5 = load i32, ptr %4, align 4, !tbaa !57
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 17, i32 18
  %8 = mul nsw i32 %7, %2
  %9 = sdiv i32 %8, 16
  %10 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 42
  %11 = load i32, ptr %10, align 16, !tbaa !244
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 34
  %15 = load i32, ptr %14, align 8, !tbaa !260
  %16 = icmp eq i32 %15, 268435456
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 7, ptr %18, align 8, !tbaa !49
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 62
  store i32 1, ptr %19, align 4, !tbaa !207
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %20 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %21 = load i32, ptr %20, align 4, !tbaa !153
  %22 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %21)
  store i32 %22, ptr %14, align 8, !tbaa !260
  store i32 0, ptr %19, align 4, !tbaa !207
  br label %23

23:                                               ; preds = %17, %13, %3
  %24 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 16, ptr %24, align 4, !tbaa !50
  %25 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22
  %26 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 12
  %27 = load i32, ptr %26, align 8, !tbaa !191
  %28 = icmp sgt i32 %27, %9
  br i1 %28, label %37, label %29

29:                                               ; preds = %23
  %30 = load i32, ptr %25, align 16, !tbaa !190
  %31 = icmp eq i32 %30, 268435456
  br i1 %31, label %32, label %37

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 8, ptr %33, align 8, !tbaa !49
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %34 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %35 = load i32, ptr %34, align 4, !tbaa !153
  %36 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %35)
  store i32 %36, ptr %25, align 16, !tbaa !190
  br label %37

37:                                               ; preds = %32, %29, %23
  %38 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23
  %39 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 2, i32 12
  %40 = load i32, ptr %39, align 8, !tbaa !199
  %41 = icmp sgt i32 %40, %9
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = load i32, ptr %38, align 16, !tbaa !198
  %44 = icmp eq i32 %43, 268435456
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 12, ptr %46, align 8, !tbaa !49
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %47 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %48 = load i32, ptr %47, align 4, !tbaa !153
  %49 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %48)
  store i32 %49, ptr %38, align 16, !tbaa !198
  br label %50

50:                                               ; preds = %45, %42, %37
  %51 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 24
  %52 = load i32, ptr %51, align 16, !tbaa !255
  %53 = icmp sgt i32 %52, %9
  br i1 %53, label %63, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 33
  %56 = load i32, ptr %55, align 4, !tbaa !266
  %57 = icmp eq i32 %56, 268435456
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 16, ptr %59, align 8, !tbaa !49
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %60 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %61 = load i32, ptr %60, align 4, !tbaa !153
  %62 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %61)
  store i32 %62, ptr %55, align 4, !tbaa !266
  br label %63

63:                                               ; preds = %58, %54, %50
  %64 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 26
  %65 = load i32, ptr %64, align 8, !tbaa !261
  %66 = icmp sgt i32 %65, %9
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 37
  %69 = load i32, ptr %68, align 4, !tbaa !194
  %70 = icmp eq i32 %69, 268435456
  br i1 %70, label %71, label %80

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 17, ptr %72, align 8, !tbaa !49
  store i32 13, ptr %24, align 4, !tbaa !50
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %73 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %74 = load i32, ptr %73, align 4, !tbaa !153
  %75 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %74)
  store i32 %75, ptr %68, align 4, !tbaa !194
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 12
  store i32 0, ptr %76, align 4, !tbaa !5
  %77 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 20
  store i32 0, ptr %77, align 4, !tbaa !5
  %78 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 28
  store i32 0, ptr %78, align 4, !tbaa !5
  %79 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 36
  store i32 0, ptr %79, align 4, !tbaa !5
  br label %80

80:                                               ; preds = %71, %67, %63
  %81 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 31
  %82 = load i32, ptr %81, align 4, !tbaa !262
  %83 = icmp sgt i32 %82, %9
  br i1 %83, label %95, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 35
  %86 = load i32, ptr %85, align 4, !tbaa !193
  %87 = icmp eq i32 %86, 268435456
  br i1 %87, label %88, label %95

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 40
  %90 = load i32, ptr %89, align 8, !tbaa !263
  %91 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 %90, ptr %91, align 8, !tbaa !49
  store i32 14, ptr %24, align 4, !tbaa !50
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %92 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %93 = load i32, ptr %92, align 4, !tbaa !153
  %94 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %93)
  store i32 %94, ptr %85, align 4, !tbaa !193
  br label %95

95:                                               ; preds = %88, %84, %80
  %96 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 32
  %97 = load i32, ptr %96, align 16, !tbaa !264
  %98 = icmp sgt i32 %97, %9
  br i1 %98, label %110, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 36
  %101 = load i32, ptr %100, align 16, !tbaa !192
  %102 = icmp eq i32 %101, 268435456
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 41
  %105 = load i32, ptr %104, align 4, !tbaa !265
  %106 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  store i32 %105, ptr %106, align 8, !tbaa !49
  store i32 15, ptr %24, align 4, !tbaa !50
  tail call fastcc void @x264_analyse_update_cache(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %107 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 1
  %108 = load i32, ptr %107, align 4, !tbaa !153
  %109 = tail call fastcc i32 @x264_rd_cost_mb(ptr noundef nonnull %0, i32 noundef %108)
  store i32 %109, ptr %100, align 16, !tbaa !192
  br label %110

110:                                              ; preds = %103, %99, %95
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_b8x8_mixed_ref(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca [2 x [64 x i8]], align 8
  %4 = alloca [2 x i32], align 8
  %5 = alloca %struct.x264_me_t, align 16
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %3) #17
  %6 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %7 = load i32, ptr %6, align 8, !tbaa !39
  %8 = add nsw i32 %7, -1
  %9 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 1
  %10 = load i32, ptr %9, align 4, !tbaa !39
  %11 = add nsw i32 %10, -1
  %12 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 29
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 30
  %14 = icmp sgt i32 %7, 1
  br i1 %14, label %15, label %50

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 3
  %17 = load i32, ptr %16, align 4, !tbaa !304
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %50

19:                                               ; preds = %15
  %20 = load i32, ptr %12, align 4, !tbaa !203
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %50

22:                                               ; preds = %19
  %23 = load i32, ptr %13, align 8, !tbaa !202
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %50

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 3
  %27 = load i8, ptr %26, align 1, !tbaa !5
  %28 = tail call i8 @llvm.smax.i8(i8 %27, i8 0)
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 4
  %31 = load i8, ptr %30, align 4, !tbaa !5
  %32 = sext i8 %31 to i32
  %33 = tail call i32 @llvm.smax.i32(i32 %29, i32 %32)
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 6
  %35 = load i8, ptr %34, align 2, !tbaa !5
  %36 = sext i8 %35 to i32
  %37 = tail call i32 @llvm.smax.i32(i32 %33, i32 %36)
  %38 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 8
  %39 = load i8, ptr %38, align 8, !tbaa !5
  %40 = sext i8 %39 to i32
  %41 = tail call i32 @llvm.smax.i32(i32 %37, i32 %40)
  %42 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 11
  %43 = load i8, ptr %42, align 1, !tbaa !5
  %44 = sext i8 %43 to i32
  %45 = tail call i32 @llvm.smax.i32(i32 %41, i32 %44)
  %46 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 27
  %47 = load i8, ptr %46, align 1, !tbaa !5
  %48 = sext i8 %47 to i32
  %49 = tail call i32 @llvm.smax.i32(i32 %45, i32 %48)
  br label %50

50:                                               ; preds = %25, %22, %19, %15, %2
  %51 = phi i32 [ %49, %25 ], [ %8, %22 ], [ %8, %19 ], [ %8, %15 ], [ %8, %2 ]
  %52 = icmp sgt i32 %10, 1
  br i1 %52, label %53, label %88

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 2, i32 3
  %55 = load i32, ptr %54, align 4, !tbaa !304
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %88

57:                                               ; preds = %53
  %58 = load i32, ptr %12, align 4, !tbaa !203
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %88

60:                                               ; preds = %57
  %61 = load i32, ptr %13, align 8, !tbaa !202
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %88

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 3
  %65 = load i8, ptr %64, align 1, !tbaa !5
  %66 = tail call i8 @llvm.smax.i8(i8 %65, i8 0)
  %67 = zext i8 %66 to i32
  %68 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 4
  %69 = load i8, ptr %68, align 4, !tbaa !5
  %70 = sext i8 %69 to i32
  %71 = tail call i32 @llvm.smax.i32(i32 %67, i32 %70)
  %72 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 6
  %73 = load i8, ptr %72, align 2, !tbaa !5
  %74 = sext i8 %73 to i32
  %75 = tail call i32 @llvm.smax.i32(i32 %71, i32 %74)
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 8
  %77 = load i8, ptr %76, align 8, !tbaa !5
  %78 = sext i8 %77 to i32
  %79 = tail call i32 @llvm.smax.i32(i32 %75, i32 %78)
  %80 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 11
  %81 = load i8, ptr %80, align 1, !tbaa !5
  %82 = sext i8 %81 to i32
  %83 = tail call i32 @llvm.smax.i32(i32 %79, i32 %82)
  %84 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 27
  %85 = load i8, ptr %84, align 1, !tbaa !5
  %86 = sext i8 %85 to i32
  %87 = tail call i32 @llvm.smax.i32(i32 %83, i32 %86)
  br label %88

88:                                               ; preds = %63, %60, %57, %53, %50
  %89 = phi i32 [ %87, %63 ], [ %11, %60 ], [ %11, %57 ], [ %11, %53 ], [ %11, %50 ]
  %90 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 13, ptr %90, align 4, !tbaa !50
  %91 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 26
  store i32 0, ptr %91, align 8, !tbaa !261
  %92 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %93 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 1
  %94 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %95 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 9
  %96 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 9, i64 1
  %97 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %98 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 7
  %99 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %100 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 7, i64 1
  %101 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %102 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 7, i64 2
  %103 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 2
  %104 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 5
  %105 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 6
  %106 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 5, i64 1
  %107 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 5, i64 2
  %108 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 5, i64 3
  %109 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 5, i64 4
  %110 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 5, i64 5
  %111 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 8
  %112 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 4
  %113 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 3
  %114 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 10
  %115 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 12
  %116 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %117 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 11
  %118 = getelementptr inbounds %struct.x264_me_t, ptr %5, i64 0, i32 13
  %119 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 1
  %120 = getelementptr inbounds [2 x [64 x i8]], ptr %3, i64 0, i64 1
  %121 = getelementptr inbounds [2 x i32], ptr %4, i64 0, i64 1
  %122 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 3
  %123 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %124 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %125 = icmp slt i32 %51, 0
  %126 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 0
  %127 = sext i32 %51 to i64
  %128 = icmp slt i32 %89, 0
  %129 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 1
  %130 = sext i32 %89 to i64
  br label %136

131:                                              ; preds = %242
  %132 = load i32, ptr %1, align 16, !tbaa !152
  %133 = mul nsw i32 %132, 9
  %134 = load i32, ptr %91, align 8, !tbaa !261
  %135 = add nsw i32 %134, %133
  store i32 %135, ptr %91, align 8, !tbaa !261
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #17
  ret void

136:                                              ; preds = %88, %242
  %137 = phi i64 [ 0, %88 ], [ %166, %242 ]
  %138 = trunc i64 %137 to i32
  %139 = and i32 %138, 1
  %140 = lshr i32 %138, 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  store i64 34359738376, ptr %4, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %5) #17
  store i32 3, ptr %5, align 16, !tbaa !222
  %141 = load ptr, ptr %92, align 16, !tbaa !219
  store ptr %141, ptr %93, align 8, !tbaa !223
  %142 = load <2 x i32>, ptr %94, align 16, !tbaa !39
  store <2 x i32> %142, ptr %95, align 8, !tbaa !39
  %143 = load ptr, ptr %97, align 16, !tbaa !46
  %144 = shl nuw nsw i32 %139, 3
  %145 = shl nuw nsw i32 %140, 3
  %146 = shl nuw nsw i32 %140, 7
  %147 = or i32 %144, %146
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %143, i64 %148
  store ptr %149, ptr %98, align 8, !tbaa !46
  %150 = load ptr, ptr %99, align 8, !tbaa !46
  %151 = shl nuw nsw i32 %139, 2
  %152 = shl nuw i32 %140, 2
  %153 = shl nuw nsw i32 %140, 6
  %154 = or i32 %151, %153
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i8, ptr %150, i64 %155
  store ptr %156, ptr %100, align 16, !tbaa !46
  %157 = load ptr, ptr %101, align 16, !tbaa !46
  %158 = getelementptr inbounds i8, ptr %157, i64 %155
  store ptr %158, ptr %102, align 8, !tbaa !46
  %159 = shl nuw nsw i32 %139, 1
  %160 = trunc i64 %137 to i32
  %161 = shl i32 %160, 3
  %162 = or i32 %159, %161
  %163 = or i32 %162, 12
  %164 = sext i32 %163 to i64
  %165 = shl nsw i64 %137, 2
  %166 = add nuw nsw i64 %137, 1
  %167 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137
  %168 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 12
  store i32 2147483647, ptr %168, align 8, !tbaa !230
  br i1 %125, label %175, label %169

169:                                              ; preds = %136
  %170 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %164
  %171 = getelementptr inbounds i8, ptr %170, i64 8
  %172 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28, i64 0, i64 %137
  %173 = trunc i64 %165 to i32
  %174 = trunc i64 %166 to i32
  br label %321

175:                                              ; preds = %374, %136
  %176 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137
  %177 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 12
  store i32 2147483647, ptr %177, align 8, !tbaa !230
  br i1 %128, label %242, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 %164
  %180 = getelementptr inbounds i8, ptr %179, i64 8
  %181 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28, i64 1, i64 %137
  %182 = trunc i64 %165 to i32
  %183 = trunc i64 %166 to i32
  br label %184

184:                                              ; preds = %237, %178
  %185 = phi i64 [ 0, %178 ], [ %240, %237 ]
  %186 = load ptr, ptr %129, align 8, !tbaa !46
  %187 = getelementptr inbounds i16, ptr %186, i64 %185
  %188 = load i16, ptr %187, align 2, !tbaa !37
  %189 = zext i16 %188 to i32
  store i32 %189, ptr %103, align 16, !tbaa !224
  %190 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %185
  %191 = load ptr, ptr %190, align 16, !tbaa !46
  %192 = load i32, ptr %95, align 8, !tbaa !39
  %193 = mul nsw i32 %145, %192
  %194 = add nsw i32 %193, %144
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %191, i64 %195
  store ptr %196, ptr %104, align 16, !tbaa !46
  store ptr %196, ptr %105, align 16, !tbaa !227
  %197 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %185, i64 1
  %198 = load ptr, ptr %197, align 8, !tbaa !46
  %199 = getelementptr inbounds i8, ptr %198, i64 %195
  store ptr %199, ptr %106, align 8, !tbaa !46
  %200 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %185, i64 2
  %201 = load ptr, ptr %200, align 16, !tbaa !46
  %202 = getelementptr inbounds i8, ptr %201, i64 %195
  store ptr %202, ptr %107, align 16, !tbaa !46
  %203 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %185, i64 3
  %204 = load ptr, ptr %203, align 8, !tbaa !46
  %205 = getelementptr inbounds i8, ptr %204, i64 %195
  store ptr %205, ptr %108, align 8, !tbaa !46
  %206 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %185, i64 4
  %207 = load ptr, ptr %206, align 16, !tbaa !46
  %208 = load i32, ptr %96, align 4, !tbaa !39
  %209 = mul nsw i32 %152, %208
  %210 = add nsw i32 %209, %151
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %207, i64 %211
  store ptr %212, ptr %109, align 16, !tbaa !46
  %213 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %185, i64 5
  %214 = load ptr, ptr %213, align 8, !tbaa !46
  %215 = getelementptr inbounds i8, ptr %214, i64 %211
  store ptr %215, ptr %110, align 8, !tbaa !46
  %216 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 1, i64 %185
  %217 = load ptr, ptr %216, align 8, !tbaa !46
  %218 = getelementptr inbounds i16, ptr %217, i64 %195
  store ptr %218, ptr %111, align 16, !tbaa !225
  store ptr @weight_none, ptr %112, align 8, !tbaa !228
  %219 = trunc i64 %185 to i32
  store i32 %219, ptr %113, align 4, !tbaa !226
  %220 = trunc i64 %185 to i16
  %221 = and i16 %220, 255
  %222 = mul nuw i16 %221, 257
  store i16 %222, ptr %179, align 2, !tbaa !5
  store i16 %222, ptr %180, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %182, i32 noundef 2, ptr noundef nonnull %114) #17
  %223 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %185
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %5, ptr noundef nonnull %223, i32 noundef %183, ptr noundef null) #17
  %224 = load i32, ptr %103, align 16, !tbaa !224
  %225 = load i32, ptr %115, align 8, !tbaa !230
  %226 = add nsw i32 %225, %224
  store i32 %226, ptr %115, align 8, !tbaa !230
  %227 = load i32, ptr %177, align 8, !tbaa !230
  %228 = icmp slt i32 %226, %227
  br i1 %228, label %229, label %237

229:                                              ; preds = %184
  %230 = load ptr, ptr %116, align 8, !tbaa !48
  %231 = call ptr %230(ptr noundef nonnull %176, ptr noundef nonnull %5, i64 noundef 144) #17
  %232 = load i32, ptr %115, align 8, !tbaa !230
  %233 = load i32, ptr %117, align 4, !tbaa !231
  %234 = load i32, ptr %103, align 16, !tbaa !224
  %235 = add i32 %233, %234
  %236 = sub i32 %232, %235
  store i32 %236, ptr %181, align 4, !tbaa !39
  br label %237

237:                                              ; preds = %229, %184
  %238 = load i32, ptr %118, align 4, !tbaa !5
  %239 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %185, i64 %166
  store i32 %238, ptr %239, align 4, !tbaa !5
  %240 = add nuw nsw i64 %185, 1
  %241 = icmp slt i64 %185, %130
  br i1 %241, label %184, label %242, !llvm.loop !305

242:                                              ; preds = %237, %175
  %243 = load ptr, ptr %119, align 8, !tbaa !251
  %244 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 5
  %245 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 9
  %246 = load i32, ptr %245, align 8, !tbaa !39
  %247 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 13
  %248 = load i16, ptr %247, align 4, !tbaa !37
  %249 = sext i16 %248 to i32
  %250 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 13, i64 1
  %251 = load i16, ptr %250, align 2, !tbaa !37
  %252 = sext i16 %251 to i32
  %253 = call ptr %243(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef nonnull %244, i32 noundef %246, i32 noundef %249, i32 noundef %252, i32 noundef 8, i32 noundef 8, ptr noundef nonnull @weight_none) #17
  %254 = load ptr, ptr %119, align 8, !tbaa !251
  %255 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 5
  %256 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 9
  %257 = load i32, ptr %256, align 8, !tbaa !39
  %258 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 13
  %259 = load i16, ptr %258, align 4, !tbaa !37
  %260 = sext i16 %259 to i32
  %261 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 13, i64 1
  %262 = load i16, ptr %261, align 2, !tbaa !37
  %263 = sext i16 %262 to i32
  %264 = call ptr %254(ptr noundef nonnull %120, ptr noundef nonnull %121, ptr noundef nonnull %255, i32 noundef %257, i32 noundef %260, i32 noundef %263, i32 noundef 8, i32 noundef 8, ptr noundef nonnull @weight_none) #17
  %265 = load ptr, ptr %122, align 8, !tbaa !46
  %266 = load i32, ptr %4, align 8, !tbaa !39
  %267 = load i32, ptr %121, align 4, !tbaa !39
  %268 = load ptr, ptr %123, align 16, !tbaa !252
  %269 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 3
  %270 = load i32, ptr %269, align 4, !tbaa !226
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 3
  %273 = load i32, ptr %272, align 4, !tbaa !226
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [4 x i8], ptr %268, i64 %271, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !5
  %277 = sext i8 %276 to i32
  call void %265(ptr noundef nonnull %3, i32 noundef 8, ptr noundef %253, i32 noundef %266, ptr noundef %264, i32 noundef %267, i32 noundef %277) #17
  %278 = load ptr, ptr %124, align 8, !tbaa !46
  %279 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 7
  %280 = load ptr, ptr %279, align 8, !tbaa !46
  %281 = call i32 %278(ptr noundef %280, i32 noundef 16, ptr noundef nonnull %3, i32 noundef 8) #17
  %282 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28, i64 2, i64 %137
  store i32 %281, ptr %282, align 4, !tbaa !39
  %283 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 11
  %284 = load i32, ptr %283, align 4, !tbaa !231
  %285 = add nsw i32 %284, %281
  %286 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 11
  %287 = load i32, ptr %286, align 4, !tbaa !231
  %288 = add nsw i32 %285, %287
  %289 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 2
  %290 = load i32, ptr %289, align 16, !tbaa !224
  %291 = add nsw i32 %288, %290
  %292 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 2
  %293 = load i32, ptr %292, align 16, !tbaa !224
  %294 = add nsw i32 %291, %293
  %295 = load i32, ptr %1, align 16, !tbaa !152
  %296 = mul nsw i32 %295, 5
  %297 = add nsw i32 %294, %296
  %298 = mul nsw i32 %295, 3
  %299 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %137, i32 12
  %300 = load i32, ptr %299, align 8, !tbaa !230
  %301 = add nsw i32 %300, %298
  store i32 %301, ptr %299, align 8, !tbaa !230
  %302 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %137, i32 12
  %303 = load i32, ptr %302, align 8, !tbaa !230
  %304 = add nsw i32 %303, %298
  store i32 %304, ptr %302, align 8, !tbaa !230
  %305 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %137
  store i8 3, ptr %305, align 1, !tbaa !5
  %306 = load i32, ptr %302, align 8, !tbaa !230
  %307 = icmp slt i32 %306, %301
  %308 = select i1 %307, i8 7, i8 3
  %309 = call i32 @llvm.smin.i32(i32 %306, i32 %301)
  %310 = icmp slt i32 %297, %309
  %311 = select i1 %310, i8 11, i8 %308
  store i8 %311, ptr %305, align 1
  %312 = call i32 @llvm.smin.i32(i32 %297, i32 %309)
  %313 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 27, i64 %137
  %314 = load i32, ptr %313, align 4, !tbaa !39
  %315 = icmp slt i32 %314, %312
  %316 = select i1 %315, i8 12, i8 %311
  store i8 %316, ptr %305, align 1
  %317 = call i32 @llvm.smin.i32(i32 %314, i32 %312)
  %318 = load i32, ptr %91, align 8, !tbaa !261
  %319 = add nsw i32 %318, %317
  store i32 %319, ptr %91, align 8, !tbaa !261
  call fastcc void @x264_mb_cache_mv_b8x8(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %138, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  %320 = icmp eq i64 %166, 4
  br i1 %320, label %131, label %136, !llvm.loop !306

321:                                              ; preds = %169, %374
  %322 = phi i64 [ 0, %169 ], [ %377, %374 ]
  %323 = load ptr, ptr %126, align 8, !tbaa !46
  %324 = getelementptr inbounds i16, ptr %323, i64 %322
  %325 = load i16, ptr %324, align 2, !tbaa !37
  %326 = zext i16 %325 to i32
  store i32 %326, ptr %103, align 16, !tbaa !224
  %327 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %322
  %328 = load ptr, ptr %327, align 16, !tbaa !46
  %329 = load i32, ptr %95, align 8, !tbaa !39
  %330 = mul nsw i32 %145, %329
  %331 = add nsw i32 %330, %144
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds i8, ptr %328, i64 %332
  store ptr %333, ptr %104, align 16, !tbaa !46
  store ptr %333, ptr %105, align 16, !tbaa !227
  %334 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %322, i64 1
  %335 = load ptr, ptr %334, align 8, !tbaa !46
  %336 = getelementptr inbounds i8, ptr %335, i64 %332
  store ptr %336, ptr %106, align 8, !tbaa !46
  %337 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %322, i64 2
  %338 = load ptr, ptr %337, align 16, !tbaa !46
  %339 = getelementptr inbounds i8, ptr %338, i64 %332
  store ptr %339, ptr %107, align 16, !tbaa !46
  %340 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %322, i64 3
  %341 = load ptr, ptr %340, align 8, !tbaa !46
  %342 = getelementptr inbounds i8, ptr %341, i64 %332
  store ptr %342, ptr %108, align 8, !tbaa !46
  %343 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %322, i64 4
  %344 = load ptr, ptr %343, align 16, !tbaa !46
  %345 = load i32, ptr %96, align 4, !tbaa !39
  %346 = mul nsw i32 %152, %345
  %347 = add nsw i32 %346, %151
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8, ptr %344, i64 %348
  store ptr %349, ptr %109, align 16, !tbaa !46
  %350 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %322, i64 5
  %351 = load ptr, ptr %350, align 8, !tbaa !46
  %352 = getelementptr inbounds i8, ptr %351, i64 %348
  store ptr %352, ptr %110, align 8, !tbaa !46
  %353 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 0, i64 %322
  %354 = load ptr, ptr %353, align 8, !tbaa !46
  %355 = getelementptr inbounds i16, ptr %354, i64 %332
  store ptr %355, ptr %111, align 16, !tbaa !225
  store ptr @weight_none, ptr %112, align 8, !tbaa !228
  %356 = trunc i64 %322 to i32
  store i32 %356, ptr %113, align 4, !tbaa !226
  %357 = trunc i64 %322 to i16
  %358 = and i16 %357, 255
  %359 = mul nuw i16 %358, 257
  store i16 %359, ptr %170, align 2, !tbaa !5
  store i16 %359, ptr %171, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %173, i32 noundef 2, ptr noundef nonnull %114) #17
  %360 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %322
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %5, ptr noundef nonnull %360, i32 noundef %174, ptr noundef null) #17
  %361 = load i32, ptr %103, align 16, !tbaa !224
  %362 = load i32, ptr %115, align 8, !tbaa !230
  %363 = add nsw i32 %362, %361
  store i32 %363, ptr %115, align 8, !tbaa !230
  %364 = load i32, ptr %168, align 8, !tbaa !230
  %365 = icmp slt i32 %363, %364
  br i1 %365, label %366, label %374

366:                                              ; preds = %321
  %367 = load ptr, ptr %116, align 8, !tbaa !48
  %368 = call ptr %367(ptr noundef nonnull %167, ptr noundef nonnull %5, i64 noundef 144) #17
  %369 = load i32, ptr %115, align 8, !tbaa !230
  %370 = load i32, ptr %117, align 4, !tbaa !231
  %371 = load i32, ptr %103, align 16, !tbaa !224
  %372 = add i32 %370, %371
  %373 = sub i32 %369, %372
  store i32 %373, ptr %172, align 4, !tbaa !39
  br label %374

374:                                              ; preds = %366, %321
  %375 = load i32, ptr %118, align 4, !tbaa !5
  %376 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %322, i64 %166
  store i32 %375, ptr %376, align 4, !tbaa !5
  %377 = add nuw nsw i64 %322, 1
  %378 = icmp slt i64 %322, %127
  br i1 %378, label %321, label %175, !llvm.loop !305
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_b8x8(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca [2 x [64 x i8]], align 8
  %4 = alloca [2 x i32], align 8
  %5 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20
  %6 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !234
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [32 x [6 x ptr]], ptr %5, i64 0, i64 %8
  %10 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 2, i32 3
  %11 = load i32, ptr %10, align 4, !tbaa !303
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %12
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %3) #17
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 13, ptr %14, align 4, !tbaa !50
  %15 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 26
  store i32 0, ptr %15, align 8, !tbaa !261
  %16 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %17 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23, i64 1
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %22 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 1
  %23 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 3
  %24 = getelementptr inbounds [2 x i32], ptr %4, i64 0, i64 1
  %25 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %26 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %27 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 0
  %28 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 3
  %29 = getelementptr inbounds ptr, ptr %9, i64 1
  %30 = getelementptr inbounds ptr, ptr %9, i64 2
  %31 = getelementptr inbounds ptr, ptr %9, i64 3
  %32 = getelementptr inbounds ptr, ptr %9, i64 4
  %33 = getelementptr inbounds ptr, ptr %9, i64 5
  %34 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 2, i32 13
  %35 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 1
  %36 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 2, i32 3
  %37 = getelementptr inbounds ptr, ptr %13, i64 1
  %38 = getelementptr inbounds ptr, ptr %13, i64 2
  %39 = getelementptr inbounds ptr, ptr %13, i64 3
  %40 = getelementptr inbounds ptr, ptr %13, i64 4
  %41 = getelementptr inbounds ptr, ptr %13, i64 5
  %42 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 2, i32 13
  %43 = getelementptr inbounds [2 x [64 x i8]], ptr %3, i64 0, i64 1
  %44 = getelementptr inbounds [2 x i32], ptr %4, i64 0, i64 1
  br label %50

45:                                               ; preds = %50
  %46 = load i32, ptr %1, align 16, !tbaa !152
  %47 = mul nsw i32 %46, 9
  %48 = load i32, ptr %15, align 8, !tbaa !261
  %49 = add nsw i32 %48, %47
  store i32 %49, ptr %15, align 8, !tbaa !261
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #17
  ret void

50:                                               ; preds = %2, %50
  %51 = phi i64 [ 0, %2 ], [ %54, %50 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  store i64 34359738376, ptr %4, align 8
  %52 = trunc i64 %51 to i32
  %53 = shl i32 %52, 2
  %54 = add nuw nsw i64 %51, 1
  %55 = trunc i64 %51 to i32
  %56 = and i32 %55, 1
  %57 = shl nuw nsw i32 %56, 1
  %58 = trunc i64 %51 to i32
  %59 = shl i32 %58, 3
  %60 = or i32 %57, %59
  %61 = or i32 %60, 12
  %62 = sext i32 %61 to i64
  %63 = shl nuw nsw i32 %56, 2
  %64 = lshr i32 %55, 1
  %65 = shl nsw i32 %64, 6
  %66 = or i32 %63, %65
  %67 = zext i32 %66 to i64
  %68 = shl nsw i32 %64, 3
  %69 = lshr exact i32 %68, 1
  %70 = shl nuw nsw i32 %56, 3
  %71 = shl nsw i32 %64, 7
  %72 = or i32 %70, %71
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51
  store i32 3, ptr %74, align 16, !tbaa !222
  %75 = load ptr, ptr %16, align 16, !tbaa !219
  %76 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 1
  store ptr %75, ptr %76, align 8, !tbaa !223
  %77 = load i32, ptr %17, align 16, !tbaa !39
  %78 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 9
  store i32 %77, ptr %78, align 8, !tbaa !39
  %79 = load i32, ptr %18, align 4, !tbaa !39
  %80 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 9, i64 1
  store i32 %79, ptr %80, align 4, !tbaa !39
  %81 = load ptr, ptr %19, align 16, !tbaa !46
  %82 = getelementptr inbounds i8, ptr %81, i64 %73
  %83 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 7
  store ptr %82, ptr %83, align 8, !tbaa !46
  %84 = load ptr, ptr %20, align 8, !tbaa !46
  %85 = getelementptr inbounds i8, ptr %84, i64 %67
  %86 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 7, i64 1
  store ptr %85, ptr %86, align 8, !tbaa !46
  %87 = load ptr, ptr %21, align 16, !tbaa !46
  %88 = getelementptr inbounds i8, ptr %87, i64 %67
  %89 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 7, i64 2
  store ptr %88, ptr %89, align 8, !tbaa !46
  %90 = load ptr, ptr %27, align 8, !tbaa !46
  %91 = load i32, ptr %28, align 4, !tbaa !304
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, ptr %90, i64 %92
  %94 = load i16, ptr %93, align 2, !tbaa !37
  %95 = zext i16 %94 to i32
  %96 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 2
  store i32 %95, ptr %96, align 16, !tbaa !224
  %97 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 3
  %98 = load ptr, ptr %9, align 8, !tbaa !46
  %99 = mul nsw i32 %77, %68
  %100 = add nsw i32 %99, %70
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, ptr %98, i64 %101
  %103 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 5
  store ptr %102, ptr %103, align 16, !tbaa !46
  %104 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 6
  store ptr %102, ptr %104, align 16, !tbaa !227
  %105 = load ptr, ptr %29, align 8, !tbaa !46
  %106 = getelementptr inbounds i8, ptr %105, i64 %101
  %107 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 5, i64 1
  store ptr %106, ptr %107, align 8, !tbaa !46
  %108 = load ptr, ptr %30, align 8, !tbaa !46
  %109 = getelementptr inbounds i8, ptr %108, i64 %101
  %110 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 5, i64 2
  store ptr %109, ptr %110, align 16, !tbaa !46
  %111 = load ptr, ptr %31, align 8, !tbaa !46
  %112 = getelementptr inbounds i8, ptr %111, i64 %101
  %113 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 5, i64 3
  store ptr %112, ptr %113, align 8, !tbaa !46
  %114 = load ptr, ptr %32, align 8, !tbaa !46
  %115 = mul nsw i32 %79, %69
  %116 = add nsw i32 %115, %63
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, ptr %114, i64 %117
  %119 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 5, i64 4
  store ptr %118, ptr %119, align 16, !tbaa !46
  %120 = load ptr, ptr %33, align 8, !tbaa !46
  %121 = getelementptr inbounds i8, ptr %120, i64 %117
  %122 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 5, i64 5
  store ptr %121, ptr %122, align 8, !tbaa !46
  %123 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 0, i64 %92
  %124 = load ptr, ptr %123, align 8, !tbaa !46
  %125 = getelementptr inbounds i16, ptr %124, i64 %101
  %126 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 8
  store ptr %125, ptr %126, align 16, !tbaa !225
  %127 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 4
  store ptr @weight_none, ptr %127, align 8, !tbaa !228
  store i32 %91, ptr %97, align 4, !tbaa !226
  %128 = trunc i32 %91 to i16
  %129 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %62
  %130 = and i16 %128, 255
  %131 = mul nuw i16 %130, 257
  store i16 %131, ptr %129, align 2, !tbaa !5
  %132 = getelementptr inbounds i8, ptr %129, i64 8
  store i16 %131, ptr %132, align 2, !tbaa !5
  %133 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 10
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %53, i32 noundef 2, ptr noundef nonnull %133) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %74, ptr noundef nonnull %34, i32 noundef 1, ptr noundef null) #17
  %134 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 12
  %135 = load i32, ptr %134, align 8, !tbaa !230
  %136 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 11
  %137 = load i32, ptr %136, align 4, !tbaa !231
  %138 = sub nsw i32 %135, %137
  %139 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28, i64 0, i64 %51
  store i32 %138, ptr %139, align 4, !tbaa !39
  %140 = load i32, ptr %96, align 16, !tbaa !224
  %141 = load i32, ptr %134, align 8, !tbaa !230
  %142 = add nsw i32 %141, %140
  store i32 %142, ptr %134, align 8, !tbaa !230
  %143 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 13
  %144 = load i32, ptr %143, align 4, !tbaa !5
  %145 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %62
  %146 = zext i32 %144 to i64
  %147 = mul nuw i64 %146, 4294967297
  store i64 %147, ptr %145, align 8, !tbaa !5
  %148 = getelementptr inbounds i8, ptr %145, i64 32
  store i64 %147, ptr %148, align 8, !tbaa !5
  %149 = load i32, ptr %143, align 4, !tbaa !5
  %150 = load i32, ptr %28, align 4, !tbaa !304
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %151, i64 %54
  store i32 %149, ptr %152, align 4, !tbaa !5
  %153 = load ptr, ptr %22, align 8, !tbaa !251
  %154 = load i32, ptr %78, align 8, !tbaa !39
  %155 = load i16, ptr %143, align 4, !tbaa !37
  %156 = sext i16 %155 to i32
  %157 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 13, i64 1
  %158 = load i16, ptr %157, align 2, !tbaa !37
  %159 = sext i16 %158 to i32
  %160 = call ptr %153(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef nonnull %103, i32 noundef %154, i32 noundef %156, i32 noundef %159, i32 noundef 8, i32 noundef 8, ptr noundef nonnull @weight_none) #17
  %161 = load i32, ptr %136, align 4, !tbaa !231
  %162 = load i32, ptr %96, align 16, !tbaa !224
  %163 = add i32 %161, %162
  %164 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51
  store i32 3, ptr %164, align 16, !tbaa !222
  %165 = load ptr, ptr %16, align 16, !tbaa !219
  %166 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 1
  store ptr %165, ptr %166, align 8, !tbaa !223
  %167 = load i32, ptr %17, align 16, !tbaa !39
  %168 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 9
  store i32 %167, ptr %168, align 8, !tbaa !39
  %169 = load i32, ptr %18, align 4, !tbaa !39
  %170 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 9, i64 1
  store i32 %169, ptr %170, align 4, !tbaa !39
  %171 = load ptr, ptr %19, align 16, !tbaa !46
  %172 = getelementptr inbounds i8, ptr %171, i64 %73
  %173 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 7
  store ptr %172, ptr %173, align 8, !tbaa !46
  %174 = load ptr, ptr %20, align 8, !tbaa !46
  %175 = getelementptr inbounds i8, ptr %174, i64 %67
  %176 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 7, i64 1
  store ptr %175, ptr %176, align 8, !tbaa !46
  %177 = load ptr, ptr %21, align 16, !tbaa !46
  %178 = getelementptr inbounds i8, ptr %177, i64 %67
  %179 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 7, i64 2
  store ptr %178, ptr %179, align 8, !tbaa !46
  %180 = load ptr, ptr %35, align 8, !tbaa !46
  %181 = load i32, ptr %36, align 4, !tbaa !304
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i16, ptr %180, i64 %182
  %184 = load i16, ptr %183, align 2, !tbaa !37
  %185 = zext i16 %184 to i32
  %186 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 2
  store i32 %185, ptr %186, align 16, !tbaa !224
  %187 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 3
  %188 = load ptr, ptr %13, align 8, !tbaa !46
  %189 = mul nsw i32 %167, %68
  %190 = add nsw i32 %189, %70
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8, ptr %188, i64 %191
  %193 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 5
  store ptr %192, ptr %193, align 16, !tbaa !46
  %194 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 6
  store ptr %192, ptr %194, align 16, !tbaa !227
  %195 = load ptr, ptr %37, align 8, !tbaa !46
  %196 = getelementptr inbounds i8, ptr %195, i64 %191
  %197 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 5, i64 1
  store ptr %196, ptr %197, align 8, !tbaa !46
  %198 = load ptr, ptr %38, align 8, !tbaa !46
  %199 = getelementptr inbounds i8, ptr %198, i64 %191
  %200 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 5, i64 2
  store ptr %199, ptr %200, align 16, !tbaa !46
  %201 = load ptr, ptr %39, align 8, !tbaa !46
  %202 = getelementptr inbounds i8, ptr %201, i64 %191
  %203 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 5, i64 3
  store ptr %202, ptr %203, align 8, !tbaa !46
  %204 = load ptr, ptr %40, align 8, !tbaa !46
  %205 = mul nsw i32 %169, %69
  %206 = add nsw i32 %205, %63
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8, ptr %204, i64 %207
  %209 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 5, i64 4
  store ptr %208, ptr %209, align 16, !tbaa !46
  %210 = load ptr, ptr %41, align 8, !tbaa !46
  %211 = getelementptr inbounds i8, ptr %210, i64 %207
  %212 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 5, i64 5
  store ptr %211, ptr %212, align 8, !tbaa !46
  %213 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 1, i64 %182
  %214 = load ptr, ptr %213, align 8, !tbaa !46
  %215 = getelementptr inbounds i16, ptr %214, i64 %191
  %216 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 8
  store ptr %215, ptr %216, align 16, !tbaa !225
  %217 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 4
  store ptr @weight_none, ptr %217, align 8, !tbaa !228
  store i32 %181, ptr %187, align 4, !tbaa !226
  %218 = trunc i32 %181 to i16
  %219 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 %62
  %220 = and i16 %218, 255
  %221 = mul nuw i16 %220, 257
  store i16 %221, ptr %219, align 2, !tbaa !5
  %222 = getelementptr inbounds i8, ptr %219, i64 8
  store i16 %221, ptr %222, align 2, !tbaa !5
  %223 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 10
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %53, i32 noundef 2, ptr noundef nonnull %223) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %164, ptr noundef nonnull %42, i32 noundef 1, ptr noundef null) #17
  %224 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 12
  %225 = load i32, ptr %224, align 8, !tbaa !230
  %226 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 11
  %227 = load i32, ptr %226, align 4, !tbaa !231
  %228 = sub nsw i32 %225, %227
  %229 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28, i64 1, i64 %51
  store i32 %228, ptr %229, align 4, !tbaa !39
  %230 = load i32, ptr %186, align 16, !tbaa !224
  %231 = load i32, ptr %224, align 8, !tbaa !230
  %232 = add nsw i32 %231, %230
  store i32 %232, ptr %224, align 8, !tbaa !230
  %233 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 13
  %234 = load i32, ptr %233, align 4, !tbaa !5
  %235 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %62
  %236 = zext i32 %234 to i64
  %237 = mul nuw i64 %236, 4294967297
  store i64 %237, ptr %235, align 8, !tbaa !5
  %238 = getelementptr inbounds i8, ptr %235, i64 32
  store i64 %237, ptr %238, align 8, !tbaa !5
  %239 = load i32, ptr %233, align 4, !tbaa !5
  %240 = load i32, ptr %36, align 4, !tbaa !304
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %241, i64 %54
  store i32 %239, ptr %242, align 4, !tbaa !5
  %243 = load ptr, ptr %22, align 8, !tbaa !251
  %244 = load i32, ptr %168, align 8, !tbaa !39
  %245 = load i16, ptr %233, align 4, !tbaa !37
  %246 = sext i16 %245 to i32
  %247 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 13, i64 1
  %248 = load i16, ptr %247, align 2, !tbaa !37
  %249 = sext i16 %248 to i32
  %250 = call ptr %243(ptr noundef nonnull %43, ptr noundef nonnull %44, ptr noundef nonnull %193, i32 noundef %244, i32 noundef %246, i32 noundef %249, i32 noundef 8, i32 noundef 8, ptr noundef nonnull @weight_none) #17
  %251 = load i32, ptr %226, align 4, !tbaa !231
  %252 = load i32, ptr %186, align 16, !tbaa !224
  %253 = add i32 %251, %163
  %254 = add i32 %253, %252
  %255 = load ptr, ptr %23, align 8, !tbaa !46
  %256 = load i32, ptr %4, align 8, !tbaa !39
  %257 = load i32, ptr %24, align 4, !tbaa !39
  %258 = load ptr, ptr %25, align 16, !tbaa !252
  %259 = load i32, ptr %6, align 4, !tbaa !234
  %260 = sext i32 %259 to i64
  %261 = load i32, ptr %10, align 4, !tbaa !303
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [4 x i8], ptr %258, i64 %260, i64 %262
  %264 = load i8, ptr %263, align 1, !tbaa !5
  %265 = sext i8 %264 to i32
  call void %255(ptr noundef nonnull %3, i32 noundef 8, ptr noundef %160, i32 noundef %256, ptr noundef %250, i32 noundef %257, i32 noundef %265) #17
  %266 = load ptr, ptr %26, align 8, !tbaa !46
  %267 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 7
  %268 = load ptr, ptr %267, align 8, !tbaa !46
  %269 = call i32 %266(ptr noundef %268, i32 noundef 16, ptr noundef nonnull %3, i32 noundef 8) #17
  %270 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 28, i64 2, i64 %51
  store i32 %269, ptr %270, align 4, !tbaa !39
  %271 = load i32, ptr %1, align 16, !tbaa !152
  %272 = mul nsw i32 %271, 5
  %273 = add i32 %269, %254
  %274 = add i32 %273, %272
  %275 = mul nsw i32 %271, 3
  %276 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %51, i32 12
  %277 = load i32, ptr %276, align 8, !tbaa !230
  %278 = add nsw i32 %277, %275
  store i32 %278, ptr %276, align 8, !tbaa !230
  %279 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %51, i32 12
  %280 = load i32, ptr %279, align 8, !tbaa !230
  %281 = add nsw i32 %280, %275
  store i32 %281, ptr %279, align 8, !tbaa !230
  %282 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %51
  store i8 3, ptr %282, align 1, !tbaa !5
  %283 = load i32, ptr %279, align 8, !tbaa !230
  %284 = icmp slt i32 %283, %278
  %285 = select i1 %284, i8 7, i8 3
  %286 = call i32 @llvm.smin.i32(i32 %283, i32 %278)
  %287 = icmp slt i32 %274, %286
  %288 = select i1 %287, i8 11, i8 %285
  store i8 %288, ptr %282, align 1
  %289 = call i32 @llvm.smin.i32(i32 %274, i32 %286)
  %290 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 27, i64 %51
  %291 = load i32, ptr %290, align 4, !tbaa !39
  %292 = icmp slt i32 %291, %289
  %293 = select i1 %292, i8 12, i8 %288
  store i8 %293, ptr %282, align 1
  %294 = call i32 @llvm.smin.i32(i32 %291, i32 %289)
  %295 = load i32, ptr %15, align 8, !tbaa !261
  %296 = add nsw i32 %295, %294
  store i32 %296, ptr %15, align 8, !tbaa !261
  call fastcc void @x264_mb_cache_mv_b8x8(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %55, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  %297 = icmp eq i64 %54, 4
  br i1 %297, label %45, label %50, !llvm.loop !307
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_b16x8(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca [2 x [128 x i8]], align 16
  %5 = alloca [3 x [2 x i16]], align 4
  %6 = alloca [2 x i32], align 8
  %7 = alloca %struct.x264_me_t, align 16
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %4) #17
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #17
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 14, ptr %8, align 4, !tbaa !50
  %9 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 31
  store i32 0, ptr %9, align 4, !tbaa !262
  %10 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %11 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 1
  %12 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %13 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 9
  %14 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 9, i64 1
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %16 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 7
  %17 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %18 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 7, i64 1
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %20 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 7, i64 2
  %21 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 2
  %22 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5
  %23 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 6
  %24 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 1
  %25 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 2
  %26 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 3
  %27 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 4
  %28 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 5
  %29 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 8
  %30 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 4
  %31 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 3
  %32 = getelementptr inbounds [3 x [2 x i16]], ptr %5, i64 0, i64 1
  %33 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 10
  %34 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 12
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 1
  %37 = getelementptr inbounds [2 x [128 x i8]], ptr %4, i64 0, i64 1
  %38 = getelementptr inbounds [2 x i32], ptr %6, i64 0, i64 1
  %39 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 1
  %40 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %41 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 1
  %42 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 38, i64 1
  %43 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 3
  %44 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %45 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  %46 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 13
  %47 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %48 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  %49 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  %50 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  %51 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 1, i32 3
  %52 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  %53 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  %54 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 1, i32 13
  %55 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %56 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  %57 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  %58 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  %59 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 29, i64 1
  %60 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 5
  %61 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %62 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 38, i64 0
  %63 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 3
  %64 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %65 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  %66 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 13
  %67 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %68 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %69 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  %70 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  %71 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 0, i32 3
  %72 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %73 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  %74 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 0, i32 13
  %75 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  %77 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  %78 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  %79 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 0
  %80 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 1
  br label %81

81:                                               ; preds = %446, %3
  %82 = phi i1 [ true, %3 ], [ false, %446 ]
  %83 = phi i64 [ 0, %3 ], [ 1, %446 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #17
  store i64 68719476752, ptr %6, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %7) #17
  store i32 1, ptr %7, align 16, !tbaa !222
  %84 = load ptr, ptr %10, align 16, !tbaa !219
  store ptr %84, ptr %11, align 8, !tbaa !223
  %85 = load <2 x i32>, ptr %12, align 16, !tbaa !39
  store <2 x i32> %85, ptr %13, align 8, !tbaa !39
  %86 = load ptr, ptr %15, align 16, !tbaa !46
  %87 = shl nuw nsw i64 %83, 3
  %88 = shl nuw nsw i64 %83, 7
  %89 = getelementptr inbounds i8, ptr %86, i64 %88
  store ptr %89, ptr %16, align 8, !tbaa !46
  %90 = load ptr, ptr %17, align 8, !tbaa !46
  %91 = shl nuw nsw i64 %83, 2
  %92 = shl nuw nsw i64 %83, 6
  %93 = getelementptr inbounds i8, ptr %90, i64 %92
  store ptr %93, ptr %18, align 16, !tbaa !46
  %94 = load ptr, ptr %19, align 16, !tbaa !46
  %95 = getelementptr inbounds i8, ptr %94, i64 %92
  store ptr %95, ptr %20, align 8, !tbaa !46
  %96 = shl nuw nsw i64 %83, 1
  %97 = or i64 %96, 1
  %98 = shl nuw nsw i64 %83, 4
  %99 = or i64 %98, 12
  %100 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %96, i32 3
  %101 = load i32, ptr %100, align 4, !tbaa !226
  %102 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %97, i32 3
  %103 = load i32, ptr %102, align 4, !tbaa !226
  %104 = icmp eq i32 %101, %103
  %105 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83
  %106 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 12
  store i32 2147483647, ptr %106, align 8, !tbaa !230
  %107 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %99
  %108 = getelementptr inbounds i8, ptr %107, i64 8
  %109 = trunc i64 %87 to i32
  %110 = load ptr, ptr %79, align 8, !tbaa !46
  %111 = sext i32 %101 to i64
  %112 = getelementptr inbounds i16, ptr %110, i64 %111
  %113 = load i16, ptr %112, align 2, !tbaa !37
  %114 = zext i16 %113 to i32
  store i32 %114, ptr %21, align 16, !tbaa !224
  %115 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %111
  %116 = load ptr, ptr %115, align 16, !tbaa !46
  %117 = load i32, ptr %13, align 8, !tbaa !39
  %118 = sext i32 %117 to i64
  %119 = mul nsw i64 %87, %118
  %120 = getelementptr inbounds i8, ptr %116, i64 %119
  store ptr %120, ptr %22, align 16, !tbaa !46
  store ptr %120, ptr %23, align 16, !tbaa !227
  %121 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %111, i64 1
  %122 = load ptr, ptr %121, align 8, !tbaa !46
  %123 = getelementptr inbounds i8, ptr %122, i64 %119
  store ptr %123, ptr %24, align 8, !tbaa !46
  %124 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %111, i64 2
  %125 = load ptr, ptr %124, align 16, !tbaa !46
  %126 = getelementptr inbounds i8, ptr %125, i64 %119
  store ptr %126, ptr %25, align 16, !tbaa !46
  %127 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %111, i64 3
  %128 = load ptr, ptr %127, align 8, !tbaa !46
  %129 = getelementptr inbounds i8, ptr %128, i64 %119
  store ptr %129, ptr %26, align 8, !tbaa !46
  %130 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %111, i64 4
  %131 = load ptr, ptr %130, align 16, !tbaa !46
  %132 = load i32, ptr %14, align 4, !tbaa !39
  %133 = sext i32 %132 to i64
  %134 = mul nsw i64 %91, %133
  %135 = getelementptr inbounds i8, ptr %131, i64 %134
  store ptr %135, ptr %27, align 16, !tbaa !46
  %136 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %111, i64 5
  %137 = load ptr, ptr %136, align 8, !tbaa !46
  %138 = getelementptr inbounds i8, ptr %137, i64 %134
  store ptr %138, ptr %28, align 8, !tbaa !46
  %139 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 0, i64 %111
  %140 = load ptr, ptr %139, align 8, !tbaa !46
  %141 = getelementptr inbounds i16, ptr %140, i64 %119
  store ptr %141, ptr %29, align 16, !tbaa !225
  store ptr @weight_none, ptr %30, align 8, !tbaa !228
  store i32 %101, ptr %31, align 4, !tbaa !226
  %142 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %111
  %143 = load i32, ptr %142, align 4, !tbaa !5
  store i32 %143, ptr %5, align 4, !tbaa !5
  %144 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %111, i64 %97
  %145 = load <2 x i32>, ptr %144, align 4, !tbaa !5
  store <2 x i32> %145, ptr %32, align 4, !tbaa !5
  %146 = and i32 %101, 255
  %147 = mul nuw i32 %146, 16843009
  store i32 %147, ptr %107, align 4, !tbaa !5
  store i32 %147, ptr %108, align 4, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %109, i32 noundef 4, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %148 = load i32, ptr %21, align 16, !tbaa !224
  %149 = load i32, ptr %34, align 8, !tbaa !230
  %150 = add nsw i32 %149, %148
  store i32 %150, ptr %34, align 8, !tbaa !230
  %151 = load i32, ptr %106, align 8, !tbaa !230
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %153, label %156

153:                                              ; preds = %81
  %154 = load ptr, ptr %35, align 8, !tbaa !48
  %155 = call ptr %154(ptr noundef nonnull %105, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %156

156:                                              ; preds = %153, %81
  br i1 %104, label %201, label %157

157:                                              ; preds = %156
  %158 = sext i32 %103 to i64
  %159 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %158
  %160 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %158, i64 1
  %161 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %158, i64 2
  %162 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %158, i64 3
  %163 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %158, i64 4
  %164 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %158, i64 5
  %165 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 0, i64 %158
  %166 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %158
  %167 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %158, i64 %97
  %168 = and i32 %103, 255
  %169 = mul nuw i32 %168, 16843009
  %170 = load ptr, ptr %79, align 8, !tbaa !46
  %171 = getelementptr inbounds i16, ptr %170, i64 %158
  %172 = load i16, ptr %171, align 2, !tbaa !37
  %173 = zext i16 %172 to i32
  store i32 %173, ptr %21, align 16, !tbaa !224
  %174 = load ptr, ptr %159, align 16, !tbaa !46
  %175 = load i32, ptr %13, align 8, !tbaa !39
  %176 = sext i32 %175 to i64
  %177 = mul nsw i64 %87, %176
  %178 = getelementptr inbounds i8, ptr %174, i64 %177
  store ptr %178, ptr %22, align 16, !tbaa !46
  store ptr %178, ptr %23, align 16, !tbaa !227
  %179 = load ptr, ptr %160, align 8, !tbaa !46
  %180 = getelementptr inbounds i8, ptr %179, i64 %177
  store ptr %180, ptr %24, align 8, !tbaa !46
  %181 = load ptr, ptr %161, align 16, !tbaa !46
  %182 = getelementptr inbounds i8, ptr %181, i64 %177
  store ptr %182, ptr %25, align 16, !tbaa !46
  %183 = load ptr, ptr %162, align 8, !tbaa !46
  %184 = getelementptr inbounds i8, ptr %183, i64 %177
  store ptr %184, ptr %26, align 8, !tbaa !46
  %185 = load ptr, ptr %163, align 16, !tbaa !46
  %186 = load i32, ptr %14, align 4, !tbaa !39
  %187 = sext i32 %186 to i64
  %188 = mul nsw i64 %91, %187
  %189 = getelementptr inbounds i8, ptr %185, i64 %188
  store ptr %189, ptr %27, align 16, !tbaa !46
  %190 = load ptr, ptr %164, align 8, !tbaa !46
  %191 = getelementptr inbounds i8, ptr %190, i64 %188
  store ptr %191, ptr %28, align 8, !tbaa !46
  %192 = load ptr, ptr %165, align 8, !tbaa !46
  %193 = getelementptr inbounds i16, ptr %192, i64 %177
  store ptr %193, ptr %29, align 16, !tbaa !225
  store ptr @weight_none, ptr %30, align 8, !tbaa !228
  store i32 %103, ptr %31, align 4, !tbaa !226
  %194 = load i32, ptr %166, align 4, !tbaa !5
  store i32 %194, ptr %5, align 4, !tbaa !5
  %195 = load <2 x i32>, ptr %167, align 4, !tbaa !5
  store <2 x i32> %195, ptr %32, align 4, !tbaa !5
  store i32 %169, ptr %107, align 4, !tbaa !5
  store i32 %169, ptr %108, align 4, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %109, i32 noundef 4, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %196 = load i32, ptr %21, align 16, !tbaa !224
  %197 = load i32, ptr %34, align 8, !tbaa !230
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %34, align 8, !tbaa !230
  %199 = load i32, ptr %106, align 8, !tbaa !230
  %200 = icmp slt i32 %198, %199
  br i1 %200, label %372, label %201

201:                                              ; preds = %157, %372, %156
  %202 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %96, i32 3
  %203 = load i32, ptr %202, align 4, !tbaa !226
  %204 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %97, i32 3
  %205 = load i32, ptr %204, align 4, !tbaa !226
  %206 = icmp eq i32 %203, %205
  %207 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83
  %208 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 12
  store i32 2147483647, ptr %208, align 8, !tbaa !230
  %209 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 %99
  %210 = getelementptr inbounds i8, ptr %209, i64 8
  %211 = load ptr, ptr %80, align 8, !tbaa !46
  %212 = sext i32 %203 to i64
  %213 = getelementptr inbounds i16, ptr %211, i64 %212
  %214 = load i16, ptr %213, align 2, !tbaa !37
  %215 = zext i16 %214 to i32
  store i32 %215, ptr %21, align 16, !tbaa !224
  %216 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %212
  %217 = load ptr, ptr %216, align 16, !tbaa !46
  %218 = load i32, ptr %13, align 8, !tbaa !39
  %219 = sext i32 %218 to i64
  %220 = mul nsw i64 %87, %219
  %221 = getelementptr inbounds i8, ptr %217, i64 %220
  store ptr %221, ptr %22, align 16, !tbaa !46
  store ptr %221, ptr %23, align 16, !tbaa !227
  %222 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %212, i64 1
  %223 = load ptr, ptr %222, align 8, !tbaa !46
  %224 = getelementptr inbounds i8, ptr %223, i64 %220
  store ptr %224, ptr %24, align 8, !tbaa !46
  %225 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %212, i64 2
  %226 = load ptr, ptr %225, align 16, !tbaa !46
  %227 = getelementptr inbounds i8, ptr %226, i64 %220
  store ptr %227, ptr %25, align 16, !tbaa !46
  %228 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %212, i64 3
  %229 = load ptr, ptr %228, align 8, !tbaa !46
  %230 = getelementptr inbounds i8, ptr %229, i64 %220
  store ptr %230, ptr %26, align 8, !tbaa !46
  %231 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %212, i64 4
  %232 = load ptr, ptr %231, align 16, !tbaa !46
  %233 = load i32, ptr %14, align 4, !tbaa !39
  %234 = sext i32 %233 to i64
  %235 = mul nsw i64 %91, %234
  %236 = getelementptr inbounds i8, ptr %232, i64 %235
  store ptr %236, ptr %27, align 16, !tbaa !46
  %237 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %212, i64 5
  %238 = load ptr, ptr %237, align 8, !tbaa !46
  %239 = getelementptr inbounds i8, ptr %238, i64 %235
  store ptr %239, ptr %28, align 8, !tbaa !46
  %240 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 1, i64 %212
  %241 = load ptr, ptr %240, align 8, !tbaa !46
  %242 = getelementptr inbounds i16, ptr %241, i64 %220
  store ptr %242, ptr %29, align 16, !tbaa !225
  store ptr @weight_none, ptr %30, align 8, !tbaa !228
  store i32 %203, ptr %31, align 4, !tbaa !226
  %243 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %212
  %244 = load i32, ptr %243, align 4, !tbaa !5
  store i32 %244, ptr %5, align 4, !tbaa !5
  %245 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %212, i64 %97
  %246 = load <2 x i32>, ptr %245, align 4, !tbaa !5
  store <2 x i32> %246, ptr %32, align 4, !tbaa !5
  %247 = and i32 %203, 255
  %248 = mul nuw i32 %247, 16843009
  store i32 %248, ptr %209, align 4, !tbaa !5
  store i32 %248, ptr %210, align 4, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %109, i32 noundef 4, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %249 = load i32, ptr %21, align 16, !tbaa !224
  %250 = load i32, ptr %34, align 8, !tbaa !230
  %251 = add nsw i32 %250, %249
  store i32 %251, ptr %34, align 8, !tbaa !230
  %252 = load i32, ptr %208, align 8, !tbaa !230
  %253 = icmp slt i32 %251, %252
  br i1 %253, label %254, label %257

254:                                              ; preds = %201
  %255 = load ptr, ptr %35, align 8, !tbaa !48
  %256 = call ptr %255(ptr noundef nonnull %207, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %257

257:                                              ; preds = %254, %201
  br i1 %206, label %305, label %258

258:                                              ; preds = %257
  %259 = sext i32 %205 to i64
  %260 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %259
  %261 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %259, i64 1
  %262 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %259, i64 2
  %263 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %259, i64 3
  %264 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %259, i64 4
  %265 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %259, i64 5
  %266 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 1, i64 %259
  %267 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %259
  %268 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %259, i64 %97
  %269 = and i32 %205, 255
  %270 = mul nuw i32 %269, 16843009
  %271 = load ptr, ptr %80, align 8, !tbaa !46
  %272 = getelementptr inbounds i16, ptr %271, i64 %259
  %273 = load i16, ptr %272, align 2, !tbaa !37
  %274 = zext i16 %273 to i32
  store i32 %274, ptr %21, align 16, !tbaa !224
  %275 = load ptr, ptr %260, align 16, !tbaa !46
  %276 = load i32, ptr %13, align 8, !tbaa !39
  %277 = sext i32 %276 to i64
  %278 = mul nsw i64 %87, %277
  %279 = getelementptr inbounds i8, ptr %275, i64 %278
  store ptr %279, ptr %22, align 16, !tbaa !46
  store ptr %279, ptr %23, align 16, !tbaa !227
  %280 = load ptr, ptr %261, align 8, !tbaa !46
  %281 = getelementptr inbounds i8, ptr %280, i64 %278
  store ptr %281, ptr %24, align 8, !tbaa !46
  %282 = load ptr, ptr %262, align 16, !tbaa !46
  %283 = getelementptr inbounds i8, ptr %282, i64 %278
  store ptr %283, ptr %25, align 16, !tbaa !46
  %284 = load ptr, ptr %263, align 8, !tbaa !46
  %285 = getelementptr inbounds i8, ptr %284, i64 %278
  store ptr %285, ptr %26, align 8, !tbaa !46
  %286 = load ptr, ptr %264, align 16, !tbaa !46
  %287 = load i32, ptr %14, align 4, !tbaa !39
  %288 = sext i32 %287 to i64
  %289 = mul nsw i64 %91, %288
  %290 = getelementptr inbounds i8, ptr %286, i64 %289
  store ptr %290, ptr %27, align 16, !tbaa !46
  %291 = load ptr, ptr %265, align 8, !tbaa !46
  %292 = getelementptr inbounds i8, ptr %291, i64 %289
  store ptr %292, ptr %28, align 8, !tbaa !46
  %293 = load ptr, ptr %266, align 8, !tbaa !46
  %294 = getelementptr inbounds i16, ptr %293, i64 %278
  store ptr %294, ptr %29, align 16, !tbaa !225
  store ptr @weight_none, ptr %30, align 8, !tbaa !228
  store i32 %205, ptr %31, align 4, !tbaa !226
  %295 = load i32, ptr %267, align 4, !tbaa !5
  store i32 %295, ptr %5, align 4, !tbaa !5
  %296 = load <2 x i32>, ptr %268, align 4, !tbaa !5
  store <2 x i32> %296, ptr %32, align 4, !tbaa !5
  store i32 %270, ptr %209, align 4, !tbaa !5
  store i32 %270, ptr %210, align 4, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %109, i32 noundef 4, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %297 = load i32, ptr %21, align 16, !tbaa !224
  %298 = load i32, ptr %34, align 8, !tbaa !230
  %299 = add nsw i32 %298, %297
  store i32 %299, ptr %34, align 8, !tbaa !230
  %300 = load i32, ptr %208, align 8, !tbaa !230
  %301 = icmp slt i32 %299, %300
  br i1 %301, label %302, label %305

302:                                              ; preds = %258
  %303 = load ptr, ptr %35, align 8, !tbaa !48
  %304 = call ptr %303(ptr noundef nonnull %207, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %305

305:                                              ; preds = %302, %258, %257
  %306 = load ptr, ptr %36, align 8, !tbaa !251
  %307 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 5
  %308 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 9
  %309 = load i32, ptr %308, align 8, !tbaa !39
  %310 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 13
  %311 = load i16, ptr %310, align 4, !tbaa !37
  %312 = sext i16 %311 to i32
  %313 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 13, i64 1
  %314 = load i16, ptr %313, align 2, !tbaa !37
  %315 = sext i16 %314 to i32
  %316 = call ptr %306(ptr noundef nonnull %4, ptr noundef nonnull %6, ptr noundef nonnull %307, i32 noundef %309, i32 noundef %312, i32 noundef %315, i32 noundef 16, i32 noundef 8, ptr noundef nonnull @weight_none) #17
  %317 = load ptr, ptr %36, align 8, !tbaa !251
  %318 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 5
  %319 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 9
  %320 = load i32, ptr %319, align 8, !tbaa !39
  %321 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 13
  %322 = load i16, ptr %321, align 4, !tbaa !37
  %323 = sext i16 %322 to i32
  %324 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 13, i64 1
  %325 = load i16, ptr %324, align 2, !tbaa !37
  %326 = sext i16 %325 to i32
  %327 = call ptr %317(ptr noundef nonnull %37, ptr noundef nonnull %38, ptr noundef nonnull %318, i32 noundef %320, i32 noundef %323, i32 noundef %326, i32 noundef 16, i32 noundef 8, ptr noundef nonnull @weight_none) #17
  %328 = load ptr, ptr %39, align 8, !tbaa !46
  %329 = load i32, ptr %6, align 8, !tbaa !39
  %330 = load i32, ptr %38, align 4, !tbaa !39
  %331 = load ptr, ptr %40, align 16, !tbaa !252
  %332 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 3
  %333 = load i32, ptr %332, align 4, !tbaa !226
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 3
  %336 = load i32, ptr %335, align 4, !tbaa !226
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [4 x i8], ptr %331, i64 %334, i64 %337
  %339 = load i8, ptr %338, align 1, !tbaa !5
  %340 = sext i8 %339 to i32
  call void %328(ptr noundef nonnull %4, i32 noundef 16, ptr noundef %316, i32 noundef %329, ptr noundef %327, i32 noundef %330, i32 noundef %340) #17
  %341 = load ptr, ptr %41, align 8, !tbaa !46
  %342 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 7
  %343 = load ptr, ptr %342, align 8, !tbaa !46
  %344 = call i32 %341(ptr noundef %343, i32 noundef 16, ptr noundef nonnull %4, i32 noundef 16) #17
  %345 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 11
  %346 = load i32, ptr %345, align 4, !tbaa !231
  %347 = add nsw i32 %346, %344
  %348 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 11
  %349 = load i32, ptr %348, align 4, !tbaa !231
  %350 = add nsw i32 %347, %349
  %351 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 2
  %352 = load i32, ptr %351, align 16, !tbaa !224
  %353 = add nsw i32 %350, %352
  %354 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 2
  %355 = load i32, ptr %354, align 16, !tbaa !224
  %356 = add nsw i32 %353, %355
  %357 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 %83, i32 12
  %358 = load i32, ptr %357, align 8, !tbaa !230
  %359 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 38, i64 %83
  %360 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 %83, i32 12
  %361 = load i32, ptr %360, align 8, !tbaa !230
  %362 = icmp slt i32 %361, %358
  %363 = select i1 %362, i32 7, i32 3
  %364 = call i32 @llvm.smin.i32(i32 %361, i32 %358)
  %365 = load i32, ptr %1, align 16, !tbaa !152
  %366 = add nsw i32 %365, %356
  %367 = icmp slt i32 %366, %364
  %368 = select i1 %367, i32 11, i32 %363
  store i32 %368, ptr %359, align 4
  %369 = select i1 %367, i32 %356, i32 %364
  %370 = load i32, ptr %9, align 4, !tbaa !262
  %371 = add nsw i32 %369, %370
  store i32 %371, ptr %9, align 4, !tbaa !262
  br i1 %82, label %403, label %375

372:                                              ; preds = %157
  %373 = load ptr, ptr %35, align 8, !tbaa !48
  %374 = call ptr %373(ptr noundef nonnull %105, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %201

375:                                              ; preds = %305
  %376 = load i32, ptr %42, align 4, !tbaa !39
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %377
  %379 = load i8, ptr %378, align 1, !tbaa !5
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %375
  %382 = load i32, ptr %43, align 4, !tbaa !226
  %383 = and i32 %382, 255
  %384 = mul nuw i32 %383, 16843009
  store i32 %384, ptr %44, align 4, !tbaa !5
  store i32 %384, ptr %45, align 4, !tbaa !5
  %385 = load i32, ptr %46, align 4, !tbaa !5
  %386 = zext i32 %385 to i64
  %387 = mul nuw i64 %386, 4294967297
  store i64 %387, ptr %47, align 8, !tbaa !5
  store i64 %387, ptr %48, align 8, !tbaa !5
  store i64 %387, ptr %49, align 8, !tbaa !5
  store i64 %387, ptr %50, align 8, !tbaa !5
  br label %389

388:                                              ; preds = %375
  store i32 -1, ptr %44, align 4, !tbaa !5
  store i32 -1, ptr %45, align 4, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %47, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %49, i8 0, i64 16, i1 false)
  br label %389

389:                                              ; preds = %388, %381
  %390 = load i32, ptr %42, align 4, !tbaa !39
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %391
  %393 = load i8, ptr %392, align 1, !tbaa !5
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %402, label %395

395:                                              ; preds = %389
  %396 = load i32, ptr %51, align 4, !tbaa !226
  %397 = and i32 %396, 255
  %398 = mul nuw i32 %397, 16843009
  store i32 %398, ptr %52, align 4, !tbaa !5
  store i32 %398, ptr %53, align 4, !tbaa !5
  %399 = load i32, ptr %54, align 4, !tbaa !5
  %400 = zext i32 %399 to i64
  %401 = mul nuw i64 %400, 4294967297
  store i64 %401, ptr %55, align 8, !tbaa !5
  store i64 %401, ptr %56, align 8, !tbaa !5
  store i64 %401, ptr %57, align 8, !tbaa !5
  store i64 %401, ptr %58, align 8, !tbaa !5
  br label %447

402:                                              ; preds = %389
  store i32 -1, ptr %52, align 4, !tbaa !5
  store i32 -1, ptr %53, align 4, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %57, i8 0, i64 16, i1 false)
  br label %447

403:                                              ; preds = %305
  %404 = load i32, ptr %59, align 4, !tbaa !39
  %405 = add nsw i32 %404, %369
  %406 = load i32, ptr %60, align 8, !tbaa !145
  %407 = icmp ne i32 %406, 0
  %408 = zext i1 %407 to i32
  %409 = load i32, ptr %61, align 4, !tbaa !57
  %410 = icmp ne i32 %409, 0
  %411 = zext i1 %410 to i32
  %412 = add nuw nsw i32 %411, %408
  %413 = or i32 %412, 16
  %414 = mul nsw i32 %413, %2
  %415 = sdiv i32 %414, 16
  %416 = icmp sgt i32 %405, %415
  br i1 %416, label %445, label %417

417:                                              ; preds = %403
  %418 = load i32, ptr %62, align 4, !tbaa !39
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %419
  %421 = load i8, ptr %420, align 1, !tbaa !5
  %422 = icmp eq i8 %421, 0
  br i1 %422, label %430, label %423

423:                                              ; preds = %417
  %424 = load i32, ptr %63, align 4, !tbaa !226
  %425 = and i32 %424, 255
  %426 = mul nuw i32 %425, 16843009
  store i32 %426, ptr %64, align 4, !tbaa !5
  store i32 %426, ptr %65, align 4, !tbaa !5
  %427 = load i32, ptr %66, align 4, !tbaa !5
  %428 = zext i32 %427 to i64
  %429 = mul nuw i64 %428, 4294967297
  store i64 %429, ptr %67, align 8, !tbaa !5
  store i64 %429, ptr %68, align 8, !tbaa !5
  store i64 %429, ptr %69, align 8, !tbaa !5
  store i64 %429, ptr %70, align 8, !tbaa !5
  br label %431

430:                                              ; preds = %417
  store i32 -1, ptr %64, align 4, !tbaa !5
  store i32 -1, ptr %65, align 4, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %67, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %69, i8 0, i64 16, i1 false)
  br label %431

431:                                              ; preds = %430, %423
  %432 = load i32, ptr %62, align 4, !tbaa !39
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %433
  %435 = load i8, ptr %434, align 1, !tbaa !5
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %444, label %437

437:                                              ; preds = %431
  %438 = load i32, ptr %71, align 4, !tbaa !226
  %439 = and i32 %438, 255
  %440 = mul nuw i32 %439, 16843009
  store i32 %440, ptr %72, align 4, !tbaa !5
  store i32 %440, ptr %73, align 4, !tbaa !5
  %441 = load i32, ptr %74, align 4, !tbaa !5
  %442 = zext i32 %441 to i64
  %443 = mul nuw i64 %442, 4294967297
  store i64 %443, ptr %75, align 8, !tbaa !5
  store i64 %443, ptr %76, align 8, !tbaa !5
  store i64 %443, ptr %77, align 8, !tbaa !5
  store i64 %443, ptr %78, align 8, !tbaa !5
  br label %446

444:                                              ; preds = %431
  store i32 -1, ptr %72, align 4, !tbaa !5
  store i32 -1, ptr %73, align 4, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %75, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %77, i8 0, i64 16, i1 false)
  br label %446

445:                                              ; preds = %403
  store i32 268435456, ptr %9, align 4, !tbaa !262
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %7) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  br label %464

446:                                              ; preds = %444, %437
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %7) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  br label %81, !llvm.loop !308

447:                                              ; preds = %402, %395
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %7) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  %448 = load i32, ptr %62, align 8, !tbaa !39
  %449 = ashr i32 %448, 2
  %450 = mul nsw i32 %449, 3
  %451 = add nsw i32 %450, 8
  %452 = load i32, ptr %42, align 4, !tbaa !39
  %453 = ashr i32 %452, 2
  %454 = add nsw i32 %451, %453
  %455 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 40
  store i32 %454, ptr %455, align 8, !tbaa !263
  %456 = load i32, ptr %1, align 16, !tbaa !152
  %457 = sext i32 %454 to i64
  %458 = getelementptr inbounds [17 x i8], ptr @i_mb_b16x8_cost_table, i64 0, i64 %457
  %459 = load i8, ptr %458, align 1, !tbaa !5
  %460 = zext i8 %459 to i32
  %461 = mul nsw i32 %456, %460
  %462 = load i32, ptr %9, align 4, !tbaa !262
  %463 = add nsw i32 %461, %462
  store i32 %463, ptr %9, align 4, !tbaa !262
  br label %464

464:                                              ; preds = %445, %447
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %4) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_mb_analyse_inter_b8x16(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca [2 x [128 x i8]], align 8
  %5 = alloca [3 x [2 x i16]], align 4
  %6 = alloca [2 x i32], align 8
  %7 = alloca %struct.x264_me_t, align 16
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %4) #17
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #17
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  store i32 15, ptr %8, align 4, !tbaa !50
  %9 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 32
  store i32 0, ptr %9, align 16, !tbaa !264
  %10 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %11 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 1
  %12 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23
  %13 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 9
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  %15 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 7
  %16 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %17 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 7, i64 1
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %19 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 7, i64 2
  %20 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 2
  %21 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5
  %22 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 6
  %23 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 1
  %24 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 2
  %25 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 3
  %26 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 4
  %27 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 5, i64 5
  %28 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 8
  %29 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 4
  %30 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 3
  %31 = getelementptr inbounds [3 x [2 x i16]], ptr %5, i64 0, i64 1
  %32 = getelementptr inbounds [3 x [2 x i16]], ptr %5, i64 0, i64 2
  %33 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 10
  %34 = getelementptr inbounds %struct.x264_me_t, ptr %7, i64 0, i32 12
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 1
  %37 = getelementptr inbounds [2 x [128 x i8]], ptr %4, i64 0, i64 1
  %38 = getelementptr inbounds [2 x i32], ptr %6, i64 0, i64 1
  %39 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 2
  %40 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %41 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 2
  %42 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 39, i64 1
  %43 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 3
  %44 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %45 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  %46 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %47 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 38
  %48 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 13
  %49 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %50 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 22
  %51 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  %52 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 38
  %53 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 1, i32 3
  %54 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 14
  %55 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 22
  %56 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 30
  %57 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 38
  %58 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 1, i32 13
  %59 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  %60 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 22
  %61 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  %62 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 38
  %63 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 30, i64 1
  %64 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 5
  %65 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 15
  %66 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 39, i64 0
  %67 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 3
  %68 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %69 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  %70 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %71 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 36
  %72 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 13
  %73 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %74 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 20
  %75 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 36
  %77 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 0, i32 3
  %78 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %79 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  %80 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  %81 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 36
  %82 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 0, i32 13
  %83 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %84 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 20
  %85 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %86 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 36
  %87 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 0
  %88 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 4, i64 1
  br label %89

89:                                               ; preds = %451, %3
  %90 = phi i1 [ true, %3 ], [ false, %451 ]
  %91 = phi i64 [ 0, %3 ], [ 1, %451 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #17
  store i64 34359738376, ptr %6, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %7) #17
  store i32 2, ptr %7, align 16, !tbaa !222
  %92 = load ptr, ptr %10, align 16, !tbaa !219
  store ptr %92, ptr %11, align 8, !tbaa !223
  %93 = load <2 x i32>, ptr %12, align 16, !tbaa !39
  store <2 x i32> %93, ptr %13, align 8, !tbaa !39
  %94 = load ptr, ptr %14, align 16, !tbaa !46
  %95 = shl nuw nsw i64 %91, 3
  %96 = getelementptr inbounds i8, ptr %94, i64 %95
  store ptr %96, ptr %15, align 8, !tbaa !46
  %97 = load ptr, ptr %16, align 8, !tbaa !46
  %98 = shl nuw nsw i64 %91, 2
  %99 = getelementptr inbounds i8, ptr %97, i64 %98
  store ptr %99, ptr %17, align 16, !tbaa !46
  %100 = load ptr, ptr %18, align 16, !tbaa !46
  %101 = getelementptr inbounds i8, ptr %100, i64 %98
  store ptr %101, ptr %19, align 8, !tbaa !46
  %102 = or i64 %91, 2
  %103 = add nuw nsw i64 %91, 1
  %104 = add nuw nsw i64 %91, 3
  %105 = shl nuw nsw i64 %91, 1
  %106 = or i64 %105, 12
  %107 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %91, i32 3
  %108 = load i32, ptr %107, align 4, !tbaa !226
  %109 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %102, i32 3
  %110 = load i32, ptr %109, align 4, !tbaa !226
  %111 = icmp eq i32 %108, %110
  %112 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91
  %113 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 12
  store i32 2147483647, ptr %113, align 8, !tbaa !230
  %114 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %106
  %115 = getelementptr inbounds i8, ptr %114, i64 8
  %116 = getelementptr inbounds i8, ptr %114, i64 16
  %117 = getelementptr inbounds i8, ptr %114, i64 24
  %118 = trunc i64 %98 to i32
  %119 = load ptr, ptr %87, align 8, !tbaa !46
  %120 = sext i32 %108 to i64
  %121 = getelementptr inbounds i16, ptr %119, i64 %120
  %122 = load i16, ptr %121, align 2, !tbaa !37
  %123 = zext i16 %122 to i32
  store i32 %123, ptr %20, align 16, !tbaa !224
  %124 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %120
  %125 = load ptr, ptr %124, align 16, !tbaa !46
  %126 = getelementptr inbounds i8, ptr %125, i64 %95
  store ptr %126, ptr %21, align 16, !tbaa !46
  store ptr %126, ptr %22, align 16, !tbaa !227
  %127 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %120, i64 1
  %128 = load ptr, ptr %127, align 8, !tbaa !46
  %129 = getelementptr inbounds i8, ptr %128, i64 %95
  store ptr %129, ptr %23, align 8, !tbaa !46
  %130 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %120, i64 2
  %131 = load ptr, ptr %130, align 16, !tbaa !46
  %132 = getelementptr inbounds i8, ptr %131, i64 %95
  store ptr %132, ptr %24, align 16, !tbaa !46
  %133 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %120, i64 3
  %134 = load ptr, ptr %133, align 8, !tbaa !46
  %135 = getelementptr inbounds i8, ptr %134, i64 %95
  store ptr %135, ptr %25, align 8, !tbaa !46
  %136 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %120, i64 4
  %137 = load ptr, ptr %136, align 16, !tbaa !46
  %138 = getelementptr inbounds i8, ptr %137, i64 %98
  store ptr %138, ptr %26, align 16, !tbaa !46
  %139 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %120, i64 5
  %140 = load ptr, ptr %139, align 8, !tbaa !46
  %141 = getelementptr inbounds i8, ptr %140, i64 %98
  store ptr %141, ptr %27, align 8, !tbaa !46
  %142 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 0, i64 %120
  %143 = load ptr, ptr %142, align 8, !tbaa !46
  %144 = getelementptr inbounds i16, ptr %143, i64 %95
  store ptr %144, ptr %28, align 16, !tbaa !225
  store ptr @weight_none, ptr %29, align 8, !tbaa !228
  store i32 %108, ptr %30, align 4, !tbaa !226
  %145 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %120
  %146 = load i32, ptr %145, align 4, !tbaa !5
  store i32 %146, ptr %5, align 4, !tbaa !5
  %147 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %120, i64 %103
  %148 = load i32, ptr %147, align 4, !tbaa !5
  store i32 %148, ptr %31, align 4, !tbaa !5
  %149 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %120, i64 %104
  %150 = load i32, ptr %149, align 4, !tbaa !5
  store i32 %150, ptr %32, align 4, !tbaa !5
  %151 = trunc i32 %108 to i16
  %152 = and i16 %151, 255
  %153 = mul nuw i16 %152, 257
  store i16 %153, ptr %114, align 2, !tbaa !5
  store i16 %153, ptr %115, align 2, !tbaa !5
  store i16 %153, ptr %116, align 2, !tbaa !5
  store i16 %153, ptr %117, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %118, i32 noundef 2, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %154 = load i32, ptr %20, align 16, !tbaa !224
  %155 = load i32, ptr %34, align 8, !tbaa !230
  %156 = add nsw i32 %155, %154
  store i32 %156, ptr %34, align 8, !tbaa !230
  %157 = load i32, ptr %113, align 8, !tbaa !230
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %159, label %162

159:                                              ; preds = %89
  %160 = load ptr, ptr %35, align 8, !tbaa !48
  %161 = call ptr %160(ptr noundef nonnull %112, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %162

162:                                              ; preds = %159, %89
  br i1 %111, label %204, label %163

163:                                              ; preds = %162
  %164 = sext i32 %110 to i64
  %165 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %164
  %166 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %164, i64 1
  %167 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %164, i64 2
  %168 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %164, i64 3
  %169 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %164, i64 4
  %170 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 0, i64 %164, i64 5
  %171 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 0, i64 %164
  %172 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %164
  %173 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %164, i64 %103
  %174 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 5, i64 %164, i64 %104
  %175 = trunc i32 %110 to i16
  %176 = and i16 %175, 255
  %177 = mul nuw i16 %176, 257
  %178 = load ptr, ptr %87, align 8, !tbaa !46
  %179 = getelementptr inbounds i16, ptr %178, i64 %164
  %180 = load i16, ptr %179, align 2, !tbaa !37
  %181 = zext i16 %180 to i32
  store i32 %181, ptr %20, align 16, !tbaa !224
  %182 = load ptr, ptr %165, align 16, !tbaa !46
  %183 = getelementptr inbounds i8, ptr %182, i64 %95
  store ptr %183, ptr %21, align 16, !tbaa !46
  store ptr %183, ptr %22, align 16, !tbaa !227
  %184 = load ptr, ptr %166, align 8, !tbaa !46
  %185 = getelementptr inbounds i8, ptr %184, i64 %95
  store ptr %185, ptr %23, align 8, !tbaa !46
  %186 = load ptr, ptr %167, align 16, !tbaa !46
  %187 = getelementptr inbounds i8, ptr %186, i64 %95
  store ptr %187, ptr %24, align 16, !tbaa !46
  %188 = load ptr, ptr %168, align 8, !tbaa !46
  %189 = getelementptr inbounds i8, ptr %188, i64 %95
  store ptr %189, ptr %25, align 8, !tbaa !46
  %190 = load ptr, ptr %169, align 16, !tbaa !46
  %191 = getelementptr inbounds i8, ptr %190, i64 %98
  store ptr %191, ptr %26, align 16, !tbaa !46
  %192 = load ptr, ptr %170, align 8, !tbaa !46
  %193 = getelementptr inbounds i8, ptr %192, i64 %98
  store ptr %193, ptr %27, align 8, !tbaa !46
  %194 = load ptr, ptr %171, align 8, !tbaa !46
  %195 = getelementptr inbounds i16, ptr %194, i64 %95
  store ptr %195, ptr %28, align 16, !tbaa !225
  store ptr @weight_none, ptr %29, align 8, !tbaa !228
  store i32 %110, ptr %30, align 4, !tbaa !226
  %196 = load i32, ptr %172, align 4, !tbaa !5
  store i32 %196, ptr %5, align 4, !tbaa !5
  %197 = load i32, ptr %173, align 4, !tbaa !5
  store i32 %197, ptr %31, align 4, !tbaa !5
  %198 = load i32, ptr %174, align 4, !tbaa !5
  store i32 %198, ptr %32, align 4, !tbaa !5
  store i16 %177, ptr %114, align 2, !tbaa !5
  store i16 %177, ptr %115, align 2, !tbaa !5
  store i16 %177, ptr %116, align 2, !tbaa !5
  store i16 %177, ptr %117, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %118, i32 noundef 2, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %199 = load i32, ptr %20, align 16, !tbaa !224
  %200 = load i32, ptr %34, align 8, !tbaa !230
  %201 = add nsw i32 %200, %199
  store i32 %201, ptr %34, align 8, !tbaa !230
  %202 = load i32, ptr %113, align 8, !tbaa !230
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %371, label %204

204:                                              ; preds = %163, %371, %162
  %205 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %91, i32 3
  %206 = load i32, ptr %205, align 4, !tbaa !226
  %207 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %102, i32 3
  %208 = load i32, ptr %207, align 4, !tbaa !226
  %209 = icmp eq i32 %206, %208
  %210 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91
  %211 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 12
  store i32 2147483647, ptr %211, align 8, !tbaa !230
  %212 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 %106
  %213 = getelementptr inbounds i8, ptr %212, i64 8
  %214 = getelementptr inbounds i8, ptr %212, i64 16
  %215 = getelementptr inbounds i8, ptr %212, i64 24
  %216 = load ptr, ptr %88, align 8, !tbaa !46
  %217 = sext i32 %206 to i64
  %218 = getelementptr inbounds i16, ptr %216, i64 %217
  %219 = load i16, ptr %218, align 2, !tbaa !37
  %220 = zext i16 %219 to i32
  store i32 %220, ptr %20, align 16, !tbaa !224
  %221 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %217
  %222 = load ptr, ptr %221, align 16, !tbaa !46
  %223 = getelementptr inbounds i8, ptr %222, i64 %95
  store ptr %223, ptr %21, align 16, !tbaa !46
  store ptr %223, ptr %22, align 16, !tbaa !227
  %224 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %217, i64 1
  %225 = load ptr, ptr %224, align 8, !tbaa !46
  %226 = getelementptr inbounds i8, ptr %225, i64 %95
  store ptr %226, ptr %23, align 8, !tbaa !46
  %227 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %217, i64 2
  %228 = load ptr, ptr %227, align 16, !tbaa !46
  %229 = getelementptr inbounds i8, ptr %228, i64 %95
  store ptr %229, ptr %24, align 16, !tbaa !46
  %230 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %217, i64 3
  %231 = load ptr, ptr %230, align 8, !tbaa !46
  %232 = getelementptr inbounds i8, ptr %231, i64 %95
  store ptr %232, ptr %25, align 8, !tbaa !46
  %233 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %217, i64 4
  %234 = load ptr, ptr %233, align 16, !tbaa !46
  %235 = getelementptr inbounds i8, ptr %234, i64 %98
  store ptr %235, ptr %26, align 16, !tbaa !46
  %236 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %217, i64 5
  %237 = load ptr, ptr %236, align 8, !tbaa !46
  %238 = getelementptr inbounds i8, ptr %237, i64 %98
  store ptr %238, ptr %27, align 8, !tbaa !46
  %239 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 1, i64 %217
  %240 = load ptr, ptr %239, align 8, !tbaa !46
  %241 = getelementptr inbounds i16, ptr %240, i64 %95
  store ptr %241, ptr %28, align 16, !tbaa !225
  store ptr @weight_none, ptr %29, align 8, !tbaa !228
  store i32 %206, ptr %30, align 4, !tbaa !226
  %242 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %217
  %243 = load i32, ptr %242, align 4, !tbaa !5
  store i32 %243, ptr %5, align 4, !tbaa !5
  %244 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %217, i64 %103
  %245 = load i32, ptr %244, align 4, !tbaa !5
  store i32 %245, ptr %31, align 4, !tbaa !5
  %246 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %217, i64 %104
  %247 = load i32, ptr %246, align 4, !tbaa !5
  store i32 %247, ptr %32, align 4, !tbaa !5
  %248 = trunc i32 %206 to i16
  %249 = and i16 %248, 255
  %250 = mul nuw i16 %249, 257
  store i16 %250, ptr %212, align 2, !tbaa !5
  store i16 %250, ptr %213, align 2, !tbaa !5
  store i16 %250, ptr %214, align 2, !tbaa !5
  store i16 %250, ptr %215, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %118, i32 noundef 2, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %251 = load i32, ptr %20, align 16, !tbaa !224
  %252 = load i32, ptr %34, align 8, !tbaa !230
  %253 = add nsw i32 %252, %251
  store i32 %253, ptr %34, align 8, !tbaa !230
  %254 = load i32, ptr %211, align 8, !tbaa !230
  %255 = icmp slt i32 %253, %254
  br i1 %255, label %256, label %259

256:                                              ; preds = %204
  %257 = load ptr, ptr %35, align 8, !tbaa !48
  %258 = call ptr %257(ptr noundef nonnull %210, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %259

259:                                              ; preds = %256, %204
  br i1 %209, label %304, label %260

260:                                              ; preds = %259
  %261 = sext i32 %208 to i64
  %262 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %261
  %263 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %261, i64 1
  %264 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %261, i64 2
  %265 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %261, i64 3
  %266 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %261, i64 4
  %267 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 20, i64 1, i64 %261, i64 5
  %268 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 22, i64 1, i64 %261
  %269 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %261
  %270 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %261, i64 %103
  %271 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 5, i64 %261, i64 %104
  %272 = trunc i32 %208 to i16
  %273 = and i16 %272, 255
  %274 = mul nuw i16 %273, 257
  %275 = load ptr, ptr %88, align 8, !tbaa !46
  %276 = getelementptr inbounds i16, ptr %275, i64 %261
  %277 = load i16, ptr %276, align 2, !tbaa !37
  %278 = zext i16 %277 to i32
  store i32 %278, ptr %20, align 16, !tbaa !224
  %279 = load ptr, ptr %262, align 16, !tbaa !46
  %280 = getelementptr inbounds i8, ptr %279, i64 %95
  store ptr %280, ptr %21, align 16, !tbaa !46
  store ptr %280, ptr %22, align 16, !tbaa !227
  %281 = load ptr, ptr %263, align 8, !tbaa !46
  %282 = getelementptr inbounds i8, ptr %281, i64 %95
  store ptr %282, ptr %23, align 8, !tbaa !46
  %283 = load ptr, ptr %264, align 16, !tbaa !46
  %284 = getelementptr inbounds i8, ptr %283, i64 %95
  store ptr %284, ptr %24, align 16, !tbaa !46
  %285 = load ptr, ptr %265, align 8, !tbaa !46
  %286 = getelementptr inbounds i8, ptr %285, i64 %95
  store ptr %286, ptr %25, align 8, !tbaa !46
  %287 = load ptr, ptr %266, align 16, !tbaa !46
  %288 = getelementptr inbounds i8, ptr %287, i64 %98
  store ptr %288, ptr %26, align 16, !tbaa !46
  %289 = load ptr, ptr %267, align 8, !tbaa !46
  %290 = getelementptr inbounds i8, ptr %289, i64 %98
  store ptr %290, ptr %27, align 8, !tbaa !46
  %291 = load ptr, ptr %268, align 8, !tbaa !46
  %292 = getelementptr inbounds i16, ptr %291, i64 %95
  store ptr %292, ptr %28, align 16, !tbaa !225
  store ptr @weight_none, ptr %29, align 8, !tbaa !228
  store i32 %208, ptr %30, align 4, !tbaa !226
  %293 = load i32, ptr %269, align 4, !tbaa !5
  store i32 %293, ptr %5, align 4, !tbaa !5
  %294 = load i32, ptr %270, align 4, !tbaa !5
  store i32 %294, ptr %31, align 4, !tbaa !5
  %295 = load i32, ptr %271, align 4, !tbaa !5
  store i32 %295, ptr %32, align 4, !tbaa !5
  store i16 %274, ptr %212, align 2, !tbaa !5
  store i16 %274, ptr %213, align 2, !tbaa !5
  store i16 %274, ptr %214, align 2, !tbaa !5
  store i16 %274, ptr %215, align 2, !tbaa !5
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef %118, i32 noundef 2, ptr noundef nonnull %33) #17
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %5, i32 noundef 3, ptr noundef null) #17
  %296 = load i32, ptr %20, align 16, !tbaa !224
  %297 = load i32, ptr %34, align 8, !tbaa !230
  %298 = add nsw i32 %297, %296
  store i32 %298, ptr %34, align 8, !tbaa !230
  %299 = load i32, ptr %211, align 8, !tbaa !230
  %300 = icmp slt i32 %298, %299
  br i1 %300, label %301, label %304

301:                                              ; preds = %260
  %302 = load ptr, ptr %35, align 8, !tbaa !48
  %303 = call ptr %302(ptr noundef nonnull %210, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %304

304:                                              ; preds = %301, %260, %259
  %305 = load ptr, ptr %36, align 8, !tbaa !251
  %306 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 5
  %307 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 9
  %308 = load i32, ptr %307, align 8, !tbaa !39
  %309 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 13
  %310 = load i16, ptr %309, align 4, !tbaa !37
  %311 = sext i16 %310 to i32
  %312 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 13, i64 1
  %313 = load i16, ptr %312, align 2, !tbaa !37
  %314 = sext i16 %313 to i32
  %315 = call ptr %305(ptr noundef nonnull %4, ptr noundef nonnull %6, ptr noundef nonnull %306, i32 noundef %308, i32 noundef %311, i32 noundef %314, i32 noundef 8, i32 noundef 16, ptr noundef nonnull @weight_none) #17
  %316 = load ptr, ptr %36, align 8, !tbaa !251
  %317 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 5
  %318 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 9
  %319 = load i32, ptr %318, align 8, !tbaa !39
  %320 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 13
  %321 = load i16, ptr %320, align 4, !tbaa !37
  %322 = sext i16 %321 to i32
  %323 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 13, i64 1
  %324 = load i16, ptr %323, align 2, !tbaa !37
  %325 = sext i16 %324 to i32
  %326 = call ptr %316(ptr noundef nonnull %37, ptr noundef nonnull %38, ptr noundef nonnull %317, i32 noundef %319, i32 noundef %322, i32 noundef %325, i32 noundef 8, i32 noundef 16, ptr noundef nonnull @weight_none) #17
  %327 = load ptr, ptr %39, align 8, !tbaa !46
  %328 = load i32, ptr %6, align 8, !tbaa !39
  %329 = load i32, ptr %38, align 4, !tbaa !39
  %330 = load ptr, ptr %40, align 16, !tbaa !252
  %331 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 3
  %332 = load i32, ptr %331, align 4, !tbaa !226
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 3
  %335 = load i32, ptr %334, align 4, !tbaa !226
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [4 x i8], ptr %330, i64 %333, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !5
  %339 = sext i8 %338 to i32
  call void %327(ptr noundef nonnull %4, i32 noundef 8, ptr noundef %315, i32 noundef %328, ptr noundef %326, i32 noundef %329, i32 noundef %339) #17
  %340 = load ptr, ptr %41, align 8, !tbaa !46
  %341 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 7
  %342 = load ptr, ptr %341, align 8, !tbaa !46
  %343 = call i32 %340(ptr noundef %342, i32 noundef 16, ptr noundef nonnull %4, i32 noundef 8) #17
  %344 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 11
  %345 = load i32, ptr %344, align 4, !tbaa !231
  %346 = add nsw i32 %345, %343
  %347 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 11
  %348 = load i32, ptr %347, align 4, !tbaa !231
  %349 = add nsw i32 %346, %348
  %350 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 2
  %351 = load i32, ptr %350, align 16, !tbaa !224
  %352 = add nsw i32 %349, %351
  %353 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 2
  %354 = load i32, ptr %353, align 16, !tbaa !224
  %355 = add nsw i32 %352, %354
  %356 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 %91, i32 12
  %357 = load i32, ptr %356, align 8, !tbaa !230
  %358 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 39, i64 %91
  %359 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 %91, i32 12
  %360 = load i32, ptr %359, align 8, !tbaa !230
  %361 = icmp slt i32 %360, %357
  %362 = select i1 %361, i32 7, i32 3
  %363 = call i32 @llvm.smin.i32(i32 %360, i32 %357)
  %364 = load i32, ptr %1, align 16, !tbaa !152
  %365 = add nsw i32 %364, %355
  %366 = icmp slt i32 %365, %363
  %367 = select i1 %366, i32 11, i32 %362
  store i32 %367, ptr %358, align 4
  %368 = select i1 %366, i32 %355, i32 %363
  %369 = load i32, ptr %9, align 16, !tbaa !264
  %370 = add nsw i32 %368, %369
  store i32 %370, ptr %9, align 16, !tbaa !264
  br i1 %90, label %405, label %374

371:                                              ; preds = %163
  %372 = load ptr, ptr %35, align 8, !tbaa !48
  %373 = call ptr %372(ptr noundef nonnull %112, ptr noundef nonnull %7, i64 noundef 144) #17
  br label %204

374:                                              ; preds = %304
  %375 = load i32, ptr %42, align 4, !tbaa !39
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !5
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %388, label %380

380:                                              ; preds = %374
  %381 = load i32, ptr %43, align 4, !tbaa !226
  %382 = trunc i32 %381 to i16
  %383 = and i16 %382, 255
  %384 = mul nuw i16 %383, 257
  store i16 %384, ptr %44, align 2, !tbaa !5
  store i16 %384, ptr %45, align 2, !tbaa !5
  store i16 %384, ptr %46, align 2, !tbaa !5
  store i16 %384, ptr %47, align 2, !tbaa !5
  %385 = load i32, ptr %48, align 4, !tbaa !5
  %386 = zext i32 %385 to i64
  %387 = mul nuw i64 %386, 4294967297
  br label %389

388:                                              ; preds = %374
  store i16 -1, ptr %44, align 2, !tbaa !5
  store i16 -1, ptr %45, align 2, !tbaa !5
  store i16 -1, ptr %46, align 2, !tbaa !5
  store i16 -1, ptr %47, align 2, !tbaa !5
  br label %389

389:                                              ; preds = %388, %380
  %390 = phi i64 [ %387, %380 ], [ 0, %388 ]
  store i64 %390, ptr %49, align 8, !tbaa !5
  store i64 %390, ptr %50, align 8, !tbaa !5
  store i64 %390, ptr %51, align 8, !tbaa !5
  store i64 %390, ptr %52, align 8, !tbaa !5
  %391 = load i32, ptr %42, align 4, !tbaa !39
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !5
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %404, label %396

396:                                              ; preds = %389
  %397 = load i32, ptr %53, align 4, !tbaa !226
  %398 = trunc i32 %397 to i16
  %399 = and i16 %398, 255
  %400 = mul nuw i16 %399, 257
  store i16 %400, ptr %54, align 2, !tbaa !5
  store i16 %400, ptr %55, align 2, !tbaa !5
  store i16 %400, ptr %56, align 2, !tbaa !5
  store i16 %400, ptr %57, align 2, !tbaa !5
  %401 = load i32, ptr %58, align 4, !tbaa !5
  %402 = zext i32 %401 to i64
  %403 = mul nuw i64 %402, 4294967297
  br label %453

404:                                              ; preds = %389
  store i16 -1, ptr %54, align 2, !tbaa !5
  store i16 -1, ptr %55, align 2, !tbaa !5
  store i16 -1, ptr %56, align 2, !tbaa !5
  store i16 -1, ptr %57, align 2, !tbaa !5
  br label %453

405:                                              ; preds = %304
  %406 = load i32, ptr %63, align 4, !tbaa !39
  %407 = add nsw i32 %406, %368
  %408 = load i32, ptr %64, align 8, !tbaa !145
  %409 = icmp ne i32 %408, 0
  %410 = zext i1 %409 to i32
  %411 = load i32, ptr %65, align 4, !tbaa !57
  %412 = icmp ne i32 %411, 0
  %413 = zext i1 %412 to i32
  %414 = add nuw nsw i32 %413, %410
  %415 = or i32 %414, 16
  %416 = mul nsw i32 %415, %2
  %417 = sdiv i32 %416, 16
  %418 = icmp sgt i32 %407, %417
  br i1 %418, label %450, label %419

419:                                              ; preds = %405
  %420 = load i32, ptr %66, align 4, !tbaa !39
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %421
  %423 = load i8, ptr %422, align 1, !tbaa !5
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %433, label %425

425:                                              ; preds = %419
  %426 = load i32, ptr %67, align 4, !tbaa !226
  %427 = trunc i32 %426 to i16
  %428 = and i16 %427, 255
  %429 = mul nuw i16 %428, 257
  store i16 %429, ptr %68, align 2, !tbaa !5
  store i16 %429, ptr %69, align 2, !tbaa !5
  store i16 %429, ptr %70, align 2, !tbaa !5
  store i16 %429, ptr %71, align 2, !tbaa !5
  %430 = load i32, ptr %72, align 4, !tbaa !5
  %431 = zext i32 %430 to i64
  %432 = mul nuw i64 %431, 4294967297
  br label %434

433:                                              ; preds = %419
  store i16 -1, ptr %68, align 2, !tbaa !5
  store i16 -1, ptr %69, align 2, !tbaa !5
  store i16 -1, ptr %70, align 2, !tbaa !5
  store i16 -1, ptr %71, align 2, !tbaa !5
  br label %434

434:                                              ; preds = %433, %425
  %435 = phi i64 [ %432, %425 ], [ 0, %433 ]
  store i64 %435, ptr %73, align 8, !tbaa !5
  store i64 %435, ptr %74, align 8, !tbaa !5
  store i64 %435, ptr %75, align 8, !tbaa !5
  store i64 %435, ptr %76, align 8, !tbaa !5
  %436 = load i32, ptr %66, align 4, !tbaa !39
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %437
  %439 = load i8, ptr %438, align 1, !tbaa !5
  %440 = icmp eq i8 %439, 0
  br i1 %440, label %449, label %441

441:                                              ; preds = %434
  %442 = load i32, ptr %77, align 4, !tbaa !226
  %443 = trunc i32 %442 to i16
  %444 = and i16 %443, 255
  %445 = mul nuw i16 %444, 257
  store i16 %445, ptr %78, align 2, !tbaa !5
  store i16 %445, ptr %79, align 2, !tbaa !5
  store i16 %445, ptr %80, align 2, !tbaa !5
  store i16 %445, ptr %81, align 2, !tbaa !5
  %446 = load i32, ptr %82, align 4, !tbaa !5
  %447 = zext i32 %446 to i64
  %448 = mul nuw i64 %447, 4294967297
  br label %451

449:                                              ; preds = %434
  store i16 -1, ptr %78, align 2, !tbaa !5
  store i16 -1, ptr %79, align 2, !tbaa !5
  store i16 -1, ptr %80, align 2, !tbaa !5
  store i16 -1, ptr %81, align 2, !tbaa !5
  br label %451

450:                                              ; preds = %405
  store i32 268435456, ptr %9, align 16, !tbaa !264
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %7) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  br label %471

451:                                              ; preds = %449, %441
  %452 = phi i64 [ 0, %449 ], [ %448, %441 ]
  store i64 %452, ptr %83, align 8, !tbaa !5
  store i64 %452, ptr %84, align 8, !tbaa !5
  store i64 %452, ptr %85, align 8, !tbaa !5
  store i64 %452, ptr %86, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %7) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  br label %89, !llvm.loop !309

453:                                              ; preds = %404, %396
  %454 = phi i64 [ 0, %404 ], [ %403, %396 ]
  store i64 %454, ptr %59, align 8, !tbaa !5
  store i64 %454, ptr %60, align 8, !tbaa !5
  store i64 %454, ptr %61, align 8, !tbaa !5
  store i64 %454, ptr %62, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %7) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  %455 = load i32, ptr %66, align 16, !tbaa !39
  %456 = ashr i32 %455, 2
  %457 = mul nsw i32 %456, 3
  %458 = add nsw i32 %457, 8
  %459 = load i32, ptr %42, align 4, !tbaa !39
  %460 = ashr i32 %459, 2
  %461 = add nsw i32 %458, %460
  %462 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 41
  store i32 %461, ptr %462, align 4, !tbaa !265
  %463 = load i32, ptr %1, align 16, !tbaa !152
  %464 = sext i32 %461 to i64
  %465 = getelementptr inbounds [17 x i8], ptr @i_mb_b16x8_cost_table, i64 0, i64 %464
  %466 = load i8, ptr %465, align 1, !tbaa !5
  %467 = zext i8 %466 to i32
  %468 = mul nsw i32 %463, %467
  %469 = load i32, ptr %9, align 16, !tbaa !264
  %470 = add nsw i32 %468, %469
  store i32 %470, ptr %9, align 16, !tbaa !264
  br label %471

471:                                              ; preds = %450, %453
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %4) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_refine_bidir(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %4 = load i32, ptr %3, align 8, !tbaa !49
  %5 = icmp ult i32 %4, 4
  br i1 %5, label %164, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %8 = load i32, ptr %7, align 4, !tbaa !50
  switch i32 %8, label %164 [
    i32 16, label %24
    i32 14, label %19
    i32 15, label %14
    i32 13, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %11 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %12 = load i8, ptr %11, align 1, !tbaa !5
  %13 = icmp eq i8 %12, 11
  br i1 %13, label %100, label %113

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %16 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 39, i64 0
  %17 = load i32, ptr %16, align 4, !tbaa !39
  %18 = icmp eq i32 %17, 11
  br i1 %18, label %70, label %83

19:                                               ; preds = %6
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %21 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 38, i64 0
  %22 = load i32, ptr %21, align 4, !tbaa !39
  %23 = icmp eq i32 %22, 11
  br i1 %23, label %40, label %53

24:                                               ; preds = %6
  %25 = icmp eq i32 %4, 16
  br i1 %25, label %26, label %164

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 82
  %28 = load ptr, ptr %27, align 16, !tbaa !252
  %29 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 3
  %30 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 3, i32 3
  %31 = load i32, ptr %30, align 4, !tbaa !249
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 3
  %34 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 3, i32 3
  %35 = load i32, ptr %34, align 4, !tbaa !250
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [4 x i8], ptr %28, i64 %32, i64 %36
  %38 = load i8, ptr %37, align 1, !tbaa !5
  %39 = sext i8 %38 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %29, ptr noundef nonnull %33, i32 noundef %39) #17
  br label %164

40:                                               ; preds = %19
  %41 = load ptr, ptr %20, align 16, !tbaa !252
  %42 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0
  %43 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 0, i32 3
  %44 = load i32, ptr %43, align 4, !tbaa !226
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 0
  %47 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 0, i32 3
  %48 = load i32, ptr %47, align 4, !tbaa !226
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [4 x i8], ptr %41, i64 %45, i64 %49
  %51 = load i8, ptr %50, align 1, !tbaa !5
  %52 = sext i8 %51 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %42, ptr noundef nonnull %46, i32 noundef %52) #17
  br label %53

53:                                               ; preds = %19, %40
  %54 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 38, i64 1
  %55 = load i32, ptr %54, align 4, !tbaa !39
  %56 = icmp eq i32 %55, 11
  br i1 %56, label %57, label %164

57:                                               ; preds = %53
  %58 = load ptr, ptr %20, align 16, !tbaa !252
  %59 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1
  %60 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 16, i64 1, i32 3
  %61 = load i32, ptr %60, align 4, !tbaa !226
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 1
  %64 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 16, i64 1, i32 3
  %65 = load i32, ptr %64, align 4, !tbaa !226
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [4 x i8], ptr %58, i64 %62, i64 %66
  %68 = load i8, ptr %67, align 1, !tbaa !5
  %69 = sext i8 %68 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %59, ptr noundef nonnull %63, i32 noundef %69) #17
  br label %164

70:                                               ; preds = %14
  %71 = load ptr, ptr %15, align 16, !tbaa !252
  %72 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0
  %73 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 0, i32 3
  %74 = load i32, ptr %73, align 4, !tbaa !226
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 0
  %77 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 0, i32 3
  %78 = load i32, ptr %77, align 4, !tbaa !226
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [4 x i8], ptr %71, i64 %75, i64 %79
  %81 = load i8, ptr %80, align 1, !tbaa !5
  %82 = sext i8 %81 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %72, ptr noundef nonnull %76, i32 noundef %82) #17
  br label %83

83:                                               ; preds = %14, %70
  %84 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 39, i64 1
  %85 = load i32, ptr %84, align 4, !tbaa !39
  %86 = icmp eq i32 %85, 11
  br i1 %86, label %87, label %164

87:                                               ; preds = %83
  %88 = load ptr, ptr %15, align 16, !tbaa !252
  %89 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1
  %90 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 19, i64 1, i32 3
  %91 = load i32, ptr %90, align 4, !tbaa !226
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 1
  %94 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 19, i64 1, i32 3
  %95 = load i32, ptr %94, align 4, !tbaa !226
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [4 x i8], ptr %88, i64 %92, i64 %96
  %98 = load i8, ptr %97, align 1, !tbaa !5
  %99 = sext i8 %98 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %89, ptr noundef nonnull %93, i32 noundef %99) #17
  br label %164

100:                                              ; preds = %9
  %101 = load ptr, ptr %10, align 16, !tbaa !252
  %102 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 0
  %103 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 0, i32 3
  %104 = load i32, ptr %103, align 4, !tbaa !226
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 0
  %107 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 0, i32 3
  %108 = load i32, ptr %107, align 4, !tbaa !226
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [4 x i8], ptr %101, i64 %105, i64 %109
  %111 = load i8, ptr %110, align 1, !tbaa !5
  %112 = sext i8 %111 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %102, ptr noundef nonnull %106, i32 noundef %112) #17
  br label %113

113:                                              ; preds = %9, %100
  %114 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %115 = load i8, ptr %114, align 1, !tbaa !5
  %116 = icmp eq i8 %115, 11
  br i1 %116, label %117, label %130

117:                                              ; preds = %113
  %118 = load ptr, ptr %10, align 16, !tbaa !252
  %119 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 1
  %120 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 1, i32 3
  %121 = load i32, ptr %120, align 4, !tbaa !226
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 1
  %124 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 1, i32 3
  %125 = load i32, ptr %124, align 4, !tbaa !226
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [4 x i8], ptr %118, i64 %122, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !5
  %129 = sext i8 %128 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %119, ptr noundef nonnull %123, i32 noundef %129) #17
  br label %130

130:                                              ; preds = %117, %113
  %131 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %132 = load i8, ptr %131, align 1, !tbaa !5
  %133 = icmp eq i8 %132, 11
  br i1 %133, label %134, label %147

134:                                              ; preds = %130
  %135 = load ptr, ptr %10, align 16, !tbaa !252
  %136 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 2
  %137 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 2, i32 3
  %138 = load i32, ptr %137, align 4, !tbaa !226
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 2
  %141 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 2, i32 3
  %142 = load i32, ptr %141, align 4, !tbaa !226
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [4 x i8], ptr %135, i64 %139, i64 %143
  %145 = load i8, ptr %144, align 1, !tbaa !5
  %146 = sext i8 %145 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %136, ptr noundef nonnull %140, i32 noundef %146) #17
  br label %147

147:                                              ; preds = %134, %130
  %148 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %149 = load i8, ptr %148, align 1, !tbaa !5
  %150 = icmp eq i8 %149, 11
  br i1 %150, label %151, label %164

151:                                              ; preds = %147
  %152 = load ptr, ptr %10, align 16, !tbaa !252
  %153 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 3
  %154 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 3, i32 3
  %155 = load i32, ptr %154, align 4, !tbaa !226
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 3
  %158 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 3, i32 3
  %159 = load i32, ptr %158, align 4, !tbaa !226
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [4 x i8], ptr %152, i64 %156, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !5
  %163 = sext i8 %162 to i32
  tail call void @x264_me_refine_bidir_satd(ptr noundef nonnull %0, ptr noundef nonnull %153, ptr noundef nonnull %157, i32 noundef %163) #17
  br label %164

164:                                              ; preds = %147, %151, %83, %87, %53, %57, %2, %6, %26, %24
  ret void
}

declare void @x264_me_refine_bidir_rd(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @x264_weight_plane_analyse(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 24
  %4 = load i32, ptr %3, align 8, !tbaa !39
  %5 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 25
  %6 = load i32, ptr %5, align 4, !tbaa !39
  %7 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 26
  %8 = load i32, ptr %7, align 16, !tbaa !39
  %9 = ashr i32 %8, 4
  %10 = icmp sgt i32 %8, 15
  br i1 %10, label %11, label %43

11:                                               ; preds = %2
  %12 = icmp sgt i32 %6, 0
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 12
  %14 = shl nsw i32 %4, 4
  %15 = sext i32 %14 to i64
  br i1 %12, label %16, label %43

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 30
  %18 = load ptr, ptr %17, align 8, !tbaa !46
  %19 = tail call i32 @llvm.smax.i32(i32 %9, i32 1)
  br label %20

20:                                               ; preds = %16, %39
  %21 = phi i32 [ %33, %39 ], [ 0, %16 ]
  %22 = phi i32 [ %40, %39 ], [ 0, %16 ]
  %23 = phi i64 [ %35, %39 ], [ 0, %16 ]
  %24 = phi ptr [ %41, %39 ], [ %18, %16 ]
  br label %25

25:                                               ; preds = %20, %25
  %26 = phi i64 [ 0, %20 ], [ %36, %25 ]
  %27 = phi i32 [ %21, %20 ], [ %33, %25 ]
  %28 = phi i64 [ %23, %20 ], [ %35, %25 ]
  %29 = load ptr, ptr %13, align 8, !tbaa !46
  %30 = getelementptr inbounds i8, ptr %24, i64 %26
  %31 = tail call i64 %29(ptr noundef %30, i32 noundef %4) #17
  %32 = trunc i64 %31 to i32
  %33 = add i32 %27, %32
  %34 = lshr i64 %31, 32
  %35 = add i64 %34, %28
  %36 = add nuw i64 %26, 16
  %37 = trunc i64 %36 to i32
  %38 = icmp sgt i32 %6, %37
  br i1 %38, label %25, label %39, !llvm.loop !310

39:                                               ; preds = %25
  %40 = add nuw nsw i32 %22, 1
  %41 = getelementptr inbounds i8, ptr %24, i64 %15
  %42 = icmp eq i32 %40, %19
  br i1 %42, label %43, label %20, !llvm.loop !311

43:                                               ; preds = %39, %11, %2
  %44 = phi i64 [ 0, %2 ], [ 0, %11 ], [ %35, %39 ]
  %45 = phi i32 [ 0, %2 ], [ 0, %11 ], [ %33, %39 ]
  %46 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 68
  store i32 %45, ptr %46, align 4, !tbaa !312
  %47 = zext i32 %45 to i64
  %48 = mul nuw i64 %47, %47
  %49 = mul nsw i32 %8, %6
  %50 = sdiv i32 %49, 2
  %51 = sext i32 %50 to i64
  %52 = add i64 %48, %51
  %53 = sext i32 %49 to i64
  %54 = udiv i64 %52, %53
  %55 = sub i64 %44, %54
  %56 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 69
  store i64 %55, ptr %56, align 8, !tbaa !313
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @x264_weights_analyse(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #0 {
  %5 = alloca [64 x i8], align 8
  %6 = alloca ptr, align 8
  %7 = alloca %struct.x264_mb_analysis_t, align 16
  store ptr %1, ptr %6, align 8, !tbaa !46
  %8 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 10
  %9 = load i32, ptr %8, align 8, !tbaa !314
  %10 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 10
  %11 = load i32, ptr %10, align 8, !tbaa !314
  %12 = xor i32 %11, -1
  %13 = add i32 %9, %12
  %14 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37
  %15 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 69
  %16 = load i64, ptr %15, align 8, !tbaa !313
  %17 = uitofp i64 %16 to double
  %18 = tail call fast double @llvm.sqrt.f64(double %17)
  %19 = tail call fast double @llvm.round.f64(double %18)
  %20 = fptrunc double %19 to float
  %21 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 69
  %22 = load i64, ptr %21, align 8, !tbaa !313
  %23 = uitofp i64 %22 to double
  %24 = tail call fast double @llvm.sqrt.f64(double %23)
  %25 = tail call fast double @llvm.round.f64(double %24)
  %26 = fptrunc double %25 to float
  %27 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 68
  %28 = load i32, ptr %27, align 4, !tbaa !312
  %29 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 26
  %30 = load i32, ptr %29, align 16, !tbaa !39
  %31 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 25
  %32 = load i32, ptr %31, align 4, !tbaa !39
  %33 = mul nsw i32 %32, %30
  %34 = sitofp i32 %33 to float
  %35 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 68
  %36 = load i32, ptr %35, align 4, !tbaa !312
  %37 = insertelement <2 x i32> poison, i32 %36, i64 0
  %38 = insertelement <2 x i32> %37, i32 %28, i64 1
  %39 = uitofp <2 x i32> %38 to <2 x float>
  %40 = insertelement <2 x float> poison, float %34, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = fdiv fast <2 x float> %39, %41
  %43 = extractelement <2 x float> %42, i64 0
  %44 = extractelement <2 x float> %42, i64 1
  %45 = fsub fast float %43, %44
  %46 = tail call fast float @llvm.fabs.f32(float %45)
  %47 = fcmp fast olt float %46, 5.000000e-01
  br i1 %47, label %48, label %58

48:                                               ; preds = %4
  %49 = fdiv fast float %20, %26
  %50 = fsub fast float 1.000000e+00, %49
  %51 = tail call fast float @llvm.fabs.f32(float %50)
  %52 = fcmp fast olt float %51, 7.812500e-03
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 3
  store i32 1, ptr %54, align 4, !tbaa !315
  %55 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 2
  store i32 0, ptr %55, align 16, !tbaa !316
  %56 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 4
  store i32 0, ptr %56, align 8, !tbaa !317
  %57 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 5
  store ptr null, ptr %57, align 16, !tbaa !134
  br label %473

58:                                               ; preds = %48, %4
  %59 = fcmp fast une float %26, 0.000000e+00
  %60 = fmul fast float %20, 1.280000e+02
  %61 = fdiv fast float %60, %26
  %62 = select i1 %59, float %61, float 0.000000e+00
  %63 = tail call fast float @llvm.round.f32(float %62)
  %64 = fptoui float %63 to i32
  %65 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 4
  store i32 0, ptr %65, align 8, !tbaa !317
  %66 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 2
  store i32 7, ptr %66, align 16, !tbaa !316
  %67 = icmp sgt i32 %64, 127
  %68 = and i32 %64, 1
  %69 = icmp eq i32 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %109

71:                                               ; preds = %58
  store i32 6, ptr %66, align 16, !tbaa !316
  %72 = ashr i32 %64, 1
  %73 = icmp sgt i32 %64, 255
  %74 = and i32 %64, 2
  %75 = icmp eq i32 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %109

77:                                               ; preds = %71
  store i32 5, ptr %66, align 16, !tbaa !316
  %78 = ashr i32 %64, 2
  %79 = icmp sgt i32 %64, 511
  %80 = and i32 %64, 4
  %81 = icmp eq i32 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %109

83:                                               ; preds = %77
  store i32 4, ptr %66, align 16, !tbaa !316
  %84 = ashr i32 %64, 3
  %85 = icmp sgt i32 %64, 1023
  %86 = and i32 %64, 8
  %87 = icmp eq i32 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %109

89:                                               ; preds = %83
  store i32 3, ptr %66, align 16, !tbaa !316
  %90 = ashr i32 %64, 4
  %91 = icmp sgt i32 %64, 2047
  %92 = and i32 %64, 16
  %93 = icmp eq i32 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %109

95:                                               ; preds = %89
  store i32 2, ptr %66, align 16, !tbaa !316
  %96 = ashr i32 %64, 5
  %97 = icmp sgt i32 %64, 4095
  %98 = and i32 %64, 32
  %99 = icmp eq i32 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %109

101:                                              ; preds = %95
  store i32 1, ptr %66, align 16, !tbaa !316
  %102 = ashr i32 %64, 6
  %103 = icmp sgt i32 %64, 8191
  %104 = and i32 %64, 64
  %105 = icmp eq i32 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %101
  store i32 0, ptr %66, align 16, !tbaa !316
  %108 = ashr i32 %64, 7
  br label %109

109:                                              ; preds = %58, %71, %77, %83, %89, %95, %101, %107
  %110 = phi i32 [ 7, %58 ], [ 6, %71 ], [ 5, %77 ], [ 4, %83 ], [ 3, %89 ], [ 2, %95 ], [ 1, %101 ], [ 0, %107 ]
  %111 = phi i32 [ %64, %58 ], [ %72, %71 ], [ %78, %77 ], [ %84, %83 ], [ %90, %89 ], [ %96, %95 ], [ %102, %101 ], [ %108, %107 ]
  %112 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 3
  %113 = tail call i32 @llvm.smin.i32(i32 %111, i32 127)
  store i32 %113, ptr %112, align 4, !tbaa !315
  %114 = sitofp i32 %113 to float
  %115 = shl nuw nsw i32 1, %110
  %116 = sitofp i32 %115 to float
  %117 = fneg fast float %43
  %118 = fmul fast float %117, %114
  %119 = fdiv fast float %118, %116
  %120 = sitofp i32 %3 to float
  %121 = fmul fast float %120, 5.000000e-01
  %122 = fadd fast float %44, %121
  %123 = fadd fast float %122, %119
  %124 = tail call fast float @llvm.floor.f32(float %123)
  %125 = fptosi float %124 to i32
  %126 = tail call i32 @llvm.smin.i32(i32 %125, i32 126)
  %127 = tail call i32 @llvm.smax.i32(i32 %126, i32 -128)
  %128 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 62
  %129 = load i32, ptr %128, align 8, !tbaa !318
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %170

131:                                              ; preds = %109
  call void @llvm.lifetime.start.p0(i64 14176, ptr nonnull %7) #17
  %132 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %7, i64 0, i32 2
  store i32 12, ptr %132, align 8, !tbaa !149
  store i32 1, ptr %7, align 16, !tbaa !152
  %133 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 37, i64 1
  %134 = load ptr, ptr %133, align 8, !tbaa !46
  %135 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %7, i64 0, i32 3
  store ptr %134, ptr %135, align 16, !tbaa !219
  %136 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 17
  %137 = load i32, ptr %136, align 16, !tbaa !220
  %138 = tail call i32 @llvm.smin.i32(i32 %137, i32 3)
  %139 = tail call i32 @llvm.smax.i32(i32 %138, i32 1)
  %140 = add nsw i32 %139, -1
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 1, i64 %141
  %143 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %7, i64 0, i32 4
  store ptr %142, ptr %143, align 8, !tbaa !46
  %144 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 18
  %145 = load i32, ptr %144, align 4, !tbaa !221
  %146 = tail call i32 @llvm.smin.i32(i32 %145, i32 3)
  %147 = tail call i32 @llvm.smax.i32(i32 %146, i32 1)
  %148 = add nsw i32 %147, -1
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 1, i64 %149
  %151 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %7, i64 0, i32 4, i64 1
  store ptr %150, ptr %151, align 16, !tbaa !46
  %152 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %153 = load i32, ptr %152, align 4, !tbaa !144
  %154 = icmp sgt i32 %153, 1
  br i1 %154, label %155, label %159

155:                                              ; preds = %131
  %156 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 7
  %157 = load i32, ptr %156, align 4, !tbaa !103
  %158 = tail call i32 @llvm.smin.i32(i32 %157, i32 1)
  br label %159

159:                                              ; preds = %131, %155
  %160 = phi i32 [ %158, %155 ], [ 0, %131 ]
  %161 = phi i32 [ 4, %155 ], [ 2, %131 ]
  %162 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 9
  store i32 %160, ptr %162, align 4
  %163 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  store i32 %161, ptr %163, align 8
  %164 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 11
  store i32 0, ptr %164, align 4, !tbaa !237
  %165 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef nonnull %6, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 14176, ptr nonnull %7) #17
  %166 = load i32, ptr %8, align 8, !tbaa !314
  %167 = load i32, ptr %10, align 8, !tbaa !314
  %168 = xor i32 %167, -1
  %169 = add i32 %166, %168
  br label %170

170:                                              ; preds = %159, %109
  %171 = phi i32 [ %169, %159 ], [ %13, %109 ]
  %172 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 52
  %173 = load ptr, ptr %172, align 8, !tbaa !46
  %174 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 45
  %175 = sext i32 %171 to i64
  %176 = getelementptr inbounds [17 x ptr], ptr %174, i64 0, i64 %175
  %177 = load ptr, ptr %176, align 8, !tbaa !46
  %178 = load i16, ptr %177, align 2, !tbaa !37
  %179 = icmp eq i16 %178, 32767
  br i1 %179, label %225, label %180

180:                                              ; preds = %170
  %181 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 27
  %182 = load i32, ptr %181, align 4, !tbaa !319
  %183 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 29
  %184 = load i32, ptr %183, align 4, !tbaa !320
  %185 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 28
  %186 = load i32, ptr %185, align 16, !tbaa !321
  %187 = icmp sgt i32 %184, 0
  br i1 %187, label %188, label %228

188:                                              ; preds = %180
  %189 = icmp sgt i32 %186, 0
  %190 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70
  %191 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 32
  %192 = shl nsw i32 %182, 3
  %193 = sext i32 %192 to i64
  br i1 %189, label %194, label %228

194:                                              ; preds = %188, %221
  %195 = phi i64 [ %218, %221 ], [ 0, %188 ]
  %196 = phi i32 [ %222, %221 ], [ 0, %188 ]
  %197 = phi ptr [ %223, %221 ], [ %173, %188 ]
  %198 = shl i32 %196, 2
  %199 = shl i64 %195, 32
  %200 = ashr exact i64 %199, 32
  br label %201

201:                                              ; preds = %201, %194
  %202 = phi i64 [ 0, %194 ], [ %217, %201 ]
  %203 = phi i64 [ %200, %194 ], [ %218, %201 ]
  %204 = load ptr, ptr %176, align 8, !tbaa !46
  %205 = getelementptr inbounds [2 x i16], ptr %204, i64 %203
  %206 = load i16, ptr %205, align 2, !tbaa !37
  %207 = sext i16 %206 to i32
  %208 = getelementptr inbounds [2 x i16], ptr %204, i64 %203, i64 1
  %209 = load i16, ptr %208, align 2, !tbaa !37
  %210 = sext i16 %209 to i32
  %211 = load ptr, ptr %190, align 8, !tbaa !322
  %212 = getelementptr inbounds i8, ptr %197, i64 %202
  %213 = trunc i64 %202 to i32
  %214 = shl i32 %213, 2
  %215 = add nsw i32 %214, %207
  %216 = add nsw i32 %198, %210
  tail call void %211(ptr noundef %212, i32 noundef %182, ptr noundef nonnull %191, i32 noundef %182, i32 noundef %215, i32 noundef %216, i32 noundef 8, i32 noundef 8, ptr noundef nonnull @weight_none) #17
  %217 = add nuw i64 %202, 8
  %218 = add i64 %203, 1
  %219 = trunc i64 %217 to i32
  %220 = icmp sgt i32 %186, %219
  br i1 %220, label %201, label %221, !llvm.loop !323

221:                                              ; preds = %201
  %222 = add nuw nsw i32 %196, 8
  %223 = getelementptr inbounds i8, ptr %197, i64 %193
  %224 = icmp slt i32 %222, %184
  br i1 %224, label %194, label %228, !llvm.loop !324

225:                                              ; preds = %170
  %226 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 32
  %227 = load ptr, ptr %226, align 16, !tbaa !46
  br label %228

228:                                              ; preds = %221, %180, %188, %225
  %229 = phi ptr [ %227, %225 ], [ %173, %180 ], [ %173, %188 ], [ %173, %221 ]
  %230 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 27
  %231 = load i32, ptr %230, align 4, !tbaa !319
  %232 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 29
  %233 = load i32, ptr %232, align 4, !tbaa !320
  %234 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 28
  %235 = load i32, ptr %234, align 16, !tbaa !321
  %236 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 32
  %237 = load ptr, ptr %236, align 16, !tbaa !46
  %238 = icmp sgt i32 %233, 0
  br i1 %238, label %239, label %294

239:                                              ; preds = %228
  %240 = icmp sgt i32 %235, 0
  %241 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %242 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 63
  br i1 %240, label %243, label %294

243:                                              ; preds = %239
  %244 = shl i32 %231, 3
  br label %245

245:                                              ; preds = %277, %243
  %246 = phi i32 [ 0, %243 ], [ %280, %277 ]
  %247 = phi i32 [ 0, %243 ], [ %278, %277 ]
  %248 = phi i64 [ 0, %243 ], [ %274, %277 ]
  %249 = phi i32 [ 0, %243 ], [ %272, %277 ]
  %250 = shl i64 %248, 32
  %251 = ashr exact i64 %250, 32
  %252 = sext i32 %246 to i64
  br label %253

253:                                              ; preds = %270, %245
  %254 = phi i64 [ %252, %245 ], [ %275, %270 ]
  %255 = phi i64 [ %251, %245 ], [ %274, %270 ]
  %256 = phi i32 [ 0, %245 ], [ %273, %270 ]
  %257 = phi i32 [ %249, %245 ], [ %272, %270 ]
  %258 = load ptr, ptr %241, align 8, !tbaa !46
  %259 = getelementptr inbounds i8, ptr %229, i64 %254
  %260 = getelementptr inbounds i8, ptr %237, i64 %254
  %261 = tail call i32 %258(ptr noundef %259, i32 noundef %231, ptr noundef %260, i32 noundef %231) #17
  %262 = load ptr, ptr %242, align 16, !tbaa !325
  %263 = getelementptr inbounds i16, ptr %262, i64 %255
  %264 = load i16, ptr %263, align 2, !tbaa !37
  %265 = zext i16 %264 to i32
  %266 = icmp slt i32 %261, %265
  br i1 %266, label %267, label %270

267:                                              ; preds = %253
  %268 = load ptr, ptr %241, align 8, !tbaa !46
  %269 = tail call i32 %268(ptr noundef %259, i32 noundef %231, ptr noundef %260, i32 noundef %231) #17
  br label %270

270:                                              ; preds = %267, %253
  %271 = phi i32 [ %269, %267 ], [ %265, %253 ]
  %272 = add i32 %271, %257
  %273 = add nuw nsw i32 %256, 8
  %274 = add i64 %255, 1
  %275 = add i64 %254, 8
  %276 = icmp slt i32 %273, %235
  br i1 %276, label %253, label %277, !llvm.loop !326

277:                                              ; preds = %270
  %278 = add nuw nsw i32 %247, 8
  %279 = icmp slt i32 %278, %233
  %280 = add i32 %246, %244
  br i1 %279, label %245, label %281, !llvm.loop !327

281:                                              ; preds = %277
  %282 = icmp eq i32 %272, 0
  br i1 %282, label %294, label %283

283:                                              ; preds = %281
  %284 = icmp ne i32 %3, 0
  %285 = xor i1 %284, true
  %286 = zext i1 %285 to i32
  %287 = add nsw i32 %127, %286
  %288 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 20
  %289 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 5
  %290 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 58
  %291 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 57
  %292 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %293 = tail call i32 @llvm.smax.i32(i32 %126, i32 %287)
  br label %298

294:                                              ; preds = %239, %228, %281
  store i32 1, ptr %112, align 4, !tbaa !315
  store i32 0, ptr %66, align 16, !tbaa !316
  store i32 0, ptr %65, align 8, !tbaa !317
  %295 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 37, i64 0, i64 0, i32 5
  store ptr null, ptr %295, align 16, !tbaa !134
  br label %473

296:                                              ; preds = %416
  %297 = icmp eq i32 %424, 0
  br i1 %297, label %439, label %429

298:                                              ; preds = %283, %416
  %299 = phi i32 [ 0, %283 ], [ %426, %416 ]
  %300 = phi i32 [ %272, %283 ], [ %425, %416 ]
  %301 = phi i32 [ 0, %283 ], [ %424, %416 ]
  %302 = phi i32 [ %127, %283 ], [ %427, %416 ]
  store i32 %113, ptr %112, align 4, !tbaa !315
  store i32 %110, ptr %66, align 16, !tbaa !316
  store i32 %302, ptr %65, align 8, !tbaa !317
  %303 = load ptr, ptr %288, align 8, !tbaa !328
  call void %303(ptr noundef nonnull %0, ptr noundef nonnull %14) #17
  %304 = load i32, ptr %230, align 4, !tbaa !319
  %305 = load i32, ptr %232, align 4, !tbaa !320
  %306 = load i32, ptr %234, align 16, !tbaa !321
  %307 = load ptr, ptr %236, align 16, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #17
  %308 = icmp sgt i32 %305, 0
  %309 = icmp sgt i32 %306, 0
  %310 = select i1 %308, i1 %309, i1 false
  br i1 %310, label %311, label %352

311:                                              ; preds = %298
  %312 = shl i32 %304, 3
  br label %313

313:                                              ; preds = %348, %311
  %314 = phi i32 [ 0, %311 ], [ %351, %348 ]
  %315 = phi i32 [ 0, %311 ], [ %349, %348 ]
  %316 = phi i64 [ 0, %311 ], [ %345, %348 ]
  %317 = phi i32 [ 0, %311 ], [ %343, %348 ]
  %318 = shl i64 %316, 32
  %319 = ashr exact i64 %318, 32
  %320 = sext i32 %314 to i64
  br label %321

321:                                              ; preds = %341, %313
  %322 = phi i64 [ %320, %313 ], [ %346, %341 ]
  %323 = phi i64 [ %319, %313 ], [ %345, %341 ]
  %324 = phi i32 [ 0, %313 ], [ %344, %341 ]
  %325 = phi i32 [ %317, %313 ], [ %343, %341 ]
  %326 = load ptr, ptr %289, align 16, !tbaa !134
  %327 = getelementptr inbounds ptr, ptr %326, i64 2
  %328 = load ptr, ptr %327, align 8, !tbaa !46
  %329 = getelementptr inbounds i8, ptr %229, i64 %322
  call void %328(ptr noundef nonnull %5, i32 noundef 8, ptr noundef %329, i32 noundef %304, ptr noundef nonnull %14, i32 noundef 8) #17
  %330 = load ptr, ptr %241, align 8, !tbaa !46
  %331 = getelementptr inbounds i8, ptr %307, i64 %322
  %332 = call i32 %330(ptr noundef nonnull %5, i32 noundef 8, ptr noundef %331, i32 noundef %304) #17
  %333 = load ptr, ptr %242, align 16, !tbaa !325
  %334 = getelementptr inbounds i16, ptr %333, i64 %323
  %335 = load i16, ptr %334, align 2, !tbaa !37
  %336 = zext i16 %335 to i32
  %337 = icmp slt i32 %332, %336
  br i1 %337, label %338, label %341

338:                                              ; preds = %321
  %339 = load ptr, ptr %241, align 8, !tbaa !46
  %340 = call i32 %339(ptr noundef nonnull %5, i32 noundef 8, ptr noundef %331, i32 noundef %304) #17
  br label %341

341:                                              ; preds = %338, %321
  %342 = phi i32 [ %340, %338 ], [ %336, %321 ]
  %343 = add i32 %342, %325
  %344 = add nuw nsw i32 %324, 8
  %345 = add i64 %323, 1
  %346 = add i64 %322, 8
  %347 = icmp slt i32 %344, %306
  br i1 %347, label %321, label %348, !llvm.loop !329

348:                                              ; preds = %341
  %349 = add nuw nsw i32 %315, 8
  %350 = icmp slt i32 %349, %305
  %351 = add i32 %314, %312
  br i1 %350, label %313, label %352, !llvm.loop !330

352:                                              ; preds = %348, %298
  %353 = phi i32 [ 0, %298 ], [ %343, %348 ]
  %354 = load i32, ptr %290, align 4, !tbaa !331
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %369

356:                                              ; preds = %352
  %357 = load i32, ptr %291, align 16, !tbaa !332
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %369, label %359

359:                                              ; preds = %356
  %360 = load ptr, ptr %292, align 16, !tbaa !169
  %361 = getelementptr inbounds %struct.x264_sps_t, ptr %360, i64 0, i32 16
  %362 = load i32, ptr %361, align 4, !tbaa !170
  %363 = getelementptr inbounds %struct.x264_sps_t, ptr %360, i64 0, i32 17
  %364 = load i32, ptr %363, align 4, !tbaa !179
  %365 = mul nsw i32 %364, %362
  %366 = add i32 %357, -1
  %367 = add i32 %366, %365
  %368 = sdiv i32 %367, %357
  br label %369

369:                                              ; preds = %359, %356, %352
  %370 = phi i32 [ %368, %359 ], [ %354, %352 ], [ 1, %356 ]
  %371 = load i32, ptr %66, align 16, !tbaa !316
  %372 = add i32 %371, 1
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %373
  %375 = load i8, ptr %374, align 1, !tbaa !5
  %376 = zext i8 %375 to i32
  %377 = load i32, ptr %112, align 4, !tbaa !315
  %378 = shl nsw i32 %377, 1
  %379 = sub nsw i32 1, %378
  %380 = icmp sgt i32 %377, 0
  %381 = select i1 %380, i32 %378, i32 %379
  %382 = icmp slt i32 %381, 256
  br i1 %382, label %383, label %388

383:                                              ; preds = %369
  %384 = sext i32 %381 to i64
  %385 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !5
  %387 = zext i8 %386 to i32
  br label %395

388:                                              ; preds = %369
  %389 = lshr i32 %381, 8
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %390
  %392 = load i8, ptr %391, align 1, !tbaa !5
  %393 = zext i8 %392 to i32
  %394 = add nuw nsw i32 %393, 16
  br label %395

395:                                              ; preds = %388, %383
  %396 = phi i32 [ %387, %383 ], [ %394, %388 ]
  %397 = add nuw nsw i32 %396, %376
  %398 = load i32, ptr %65, align 8, !tbaa !317
  %399 = shl nsw i32 %398, 1
  %400 = sub nsw i32 1, %399
  %401 = icmp sgt i32 %398, 0
  %402 = select i1 %401, i32 %399, i32 %400
  %403 = icmp slt i32 %402, 256
  br i1 %403, label %404, label %409

404:                                              ; preds = %395
  %405 = sext i32 %402 to i64
  %406 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %405
  %407 = load i8, ptr %406, align 1, !tbaa !5
  %408 = zext i8 %407 to i32
  br label %416

409:                                              ; preds = %395
  %410 = lshr i32 %402, 8
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %411
  %413 = load i8, ptr %412, align 1, !tbaa !5
  %414 = zext i8 %413 to i32
  %415 = add nuw nsw i32 %414, 16
  br label %416

416:                                              ; preds = %404, %409
  %417 = phi i32 [ %408, %404 ], [ %415, %409 ]
  %418 = add nuw nsw i32 %397, %417
  %419 = shl nuw nsw i32 %418, 1
  %420 = add nuw nsw i32 %419, 10
  %421 = mul nsw i32 %420, %370
  %422 = add i32 %421, %353
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #17
  %423 = icmp ult i32 %422, %300
  %424 = select i1 %423, i32 1, i32 %301
  %425 = call i32 @llvm.umin.i32(i32 %422, i32 %300)
  %426 = select i1 %423, i32 %302, i32 %299
  %427 = add nsw i32 %302, 1
  %428 = icmp eq i32 %302, %293
  br i1 %428, label %296, label %298, !llvm.loop !333

429:                                              ; preds = %296
  %430 = icmp eq i32 %113, %115
  %431 = icmp eq i32 %426, 0
  %432 = select i1 %430, i1 %431, i1 false
  br i1 %432, label %439, label %433

433:                                              ; preds = %429
  %434 = uitofp i32 %425 to float
  %435 = uitofp i32 %272 to float
  %436 = fdiv fast float %434, %435
  %437 = fpext float %436 to double
  %438 = fcmp fast ogt double %437, 0x3FEFEF9DB22D0E56
  br i1 %438, label %439, label %440

439:                                              ; preds = %429, %433, %296
  store i32 1, ptr %112, align 4, !tbaa !315
  store i32 0, ptr %66, align 16, !tbaa !316
  store i32 0, ptr %65, align 8, !tbaa !317
  store ptr null, ptr %289, align 16, !tbaa !134
  br label %473

440:                                              ; preds = %433
  store i32 %113, ptr %112, align 4, !tbaa !315
  store i32 %110, ptr %66, align 16, !tbaa !316
  store i32 %426, ptr %65, align 8, !tbaa !317
  %441 = load ptr, ptr %288, align 8, !tbaa !328
  call void %441(ptr noundef nonnull %0, ptr noundef nonnull %14) #17
  %442 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 3
  %443 = load i32, ptr %442, align 4, !tbaa !334
  %444 = icmp eq i32 %443, -1
  %445 = load ptr, ptr %289, align 16, !tbaa !134
  br i1 %444, label %446, label %451

446:                                              ; preds = %440
  %447 = icmp eq ptr %445, null
  br i1 %447, label %473, label %448

448:                                              ; preds = %446
  %449 = sext i32 %13 to i64
  %450 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 67, i64 %449
  store float %436, ptr %450, align 4, !tbaa !335
  br label %451

451:                                              ; preds = %448, %440
  %452 = icmp ne ptr %445, null
  %453 = and i1 %284, %452
  br i1 %453, label %454, label %473

454:                                              ; preds = %451
  %455 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 35
  %456 = load ptr, ptr %455, align 8, !tbaa !46
  %457 = load ptr, ptr %172, align 8, !tbaa !46
  %458 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 28
  %459 = load i32, ptr %458, align 16, !tbaa !321
  %460 = add nsw i32 %459, 64
  %461 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 29
  %462 = load i32, ptr %461, align 4, !tbaa !320
  %463 = add nsw i32 %462, 64
  %464 = getelementptr inbounds %struct.x264_frame, ptr %2, i64 0, i32 27
  %465 = load i32, ptr %464, align 4, !tbaa !319
  call void @x264_weight_scale_plane(ptr noundef nonnull %0, ptr noundef %457, i32 noundef %465, ptr noundef %456, i32 noundef %465, i32 noundef %460, i32 noundef %463, ptr noundef nonnull %14) #17
  %466 = load ptr, ptr %172, align 8, !tbaa !46
  %467 = getelementptr inbounds i8, ptr %466, i64 32
  %468 = load i32, ptr %464, align 4, !tbaa !319
  %469 = shl nsw i32 %468, 5
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds i8, ptr %467, i64 %470
  %472 = getelementptr inbounds %struct.x264_frame, ptr %1, i64 0, i32 38
  store ptr %471, ptr %472, align 16, !tbaa !46
  br label %473

473:                                              ; preds = %446, %294, %439, %454, %451, %53
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.sqrt.f64(double) #7

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.round.f64(double) #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = alloca [2 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #17
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds ptr, ptr %2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !46
  %12 = sub nsw i32 %5, %3
  %13 = sext i32 %12 to i64
  %14 = sub nsw i32 %4, %5
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.x264_frame, ptr %11, i64 0, i32 52, i64 %13, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !39
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %22, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.x264_frame, ptr %11, i64 0, i32 56, i64 %13, i64 %15
  %21 = load ptr, ptr %20, align 8, !tbaa !46
  br label %31

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %24 = load i32, ptr %23, align 8, !tbaa !336
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %198, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.x264_frame, ptr %11, i64 0, i32 56, i64 %13, i64 %15
  %28 = load ptr, ptr %27, align 8, !tbaa !46
  %29 = load i32, ptr %28, align 4, !tbaa !39
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %198

31:                                               ; preds = %19, %26
  %32 = phi ptr [ %21, %19 ], [ %28, %26 ]
  %33 = getelementptr inbounds %struct.x264_frame, ptr %11, i64 0, i32 56
  %34 = load ptr, ptr %33, align 16, !tbaa !46
  %35 = icmp eq i32 %5, %3
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.x264_frame, ptr %11, i64 0, i32 45
  %38 = add nsw i32 %12, -1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [17 x ptr], ptr %37, i64 0, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !46
  %42 = load i16, ptr %41, align 2, !tbaa !37
  %43 = icmp eq i16 %42, 32767
  br label %44

44:                                               ; preds = %36, %31
  %45 = phi i1 [ false, %31 ], [ %43, %36 ]
  %46 = zext i1 %45 to i32
  store i32 %46, ptr %8, align 4, !tbaa !39
  %47 = icmp eq i32 %5, %4
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = add nsw i32 %14, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.x264_frame, ptr %11, i64 0, i32 45, i64 1, i64 %50
  %52 = load ptr, ptr %51, align 8, !tbaa !46
  %53 = load i16, ptr %52, align 2, !tbaa !37
  %54 = icmp eq i16 %53, 32767
  br label %55

55:                                               ; preds = %48, %44
  %56 = phi i1 [ false, %44 ], [ %54, %48 ]
  %57 = zext i1 %56 to i32
  %58 = getelementptr inbounds [2 x i32], ptr %8, i64 0, i64 1
  store i32 %57, ptr %58, align 4, !tbaa !39
  br i1 %45, label %59, label %77

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 3
  %61 = load i32, ptr %60, align 4, !tbaa !334
  switch i32 %61, label %69 [
    i32 2, label %62
    i32 -1, label %62
  ]

62:                                               ; preds = %59, %59
  br i1 %47, label %63, label %69

63:                                               ; preds = %62
  %64 = sext i32 %3 to i64
  %65 = getelementptr inbounds ptr, ptr %2, i64 %64
  %66 = load ptr, ptr %65, align 8, !tbaa !46
  tail call void @x264_weights_analyse(ptr noundef nonnull %0, ptr noundef nonnull %11, ptr noundef %66, i32 noundef 1)
  %67 = load ptr, ptr %10, align 8, !tbaa !46
  %68 = getelementptr inbounds %struct.x264_frame, ptr %67, i64 0, i32 37
  br label %69

69:                                               ; preds = %59, %63, %62
  %70 = phi ptr [ %67, %63 ], [ %11, %62 ], [ %11, %59 ]
  %71 = phi ptr [ %68, %63 ], [ @weight_none, %62 ], [ @weight_none, %59 ]
  %72 = getelementptr inbounds %struct.x264_frame, ptr %70, i64 0, i32 45
  %73 = add nsw i32 %12, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [17 x ptr], ptr %72, i64 0, i64 %74
  %76 = load ptr, ptr %75, align 8, !tbaa !46
  store i16 0, ptr %76, align 2, !tbaa !37
  br label %77

77:                                               ; preds = %69, %55
  %78 = phi ptr [ %70, %69 ], [ %11, %55 ]
  %79 = phi ptr [ %71, %69 ], [ @weight_none, %55 ]
  br i1 %56, label %80, label %85

80:                                               ; preds = %77
  %81 = add nsw i32 %14, -1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 45, i64 1, i64 %82
  %84 = load ptr, ptr %83, align 8, !tbaa !46
  store i16 0, ptr %84, align 2, !tbaa !37
  br label %85

85:                                               ; preds = %80, %77
  br i1 %47, label %86, label %88

86:                                               ; preds = %85
  %87 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 55, i64 %13
  store i32 0, ptr %87, align 4, !tbaa !39
  br label %88

88:                                               ; preds = %86, %85
  %89 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 62
  %90 = load i32, ptr %89, align 8, !tbaa !318
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 52
  store i32 0, ptr %93, align 4, !tbaa !39
  %94 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 53
  store i32 0, ptr %94, align 4, !tbaa !39
  br label %95

95:                                               ; preds = %92, %88
  %96 = icmp eq i32 %4, %3
  br i1 %96, label %103, label %97

97:                                               ; preds = %95
  %98 = shl i32 %12, 8
  %99 = sub nsw i32 %4, %3
  %100 = ashr i32 %99, 1
  %101 = add nsw i32 %98, %100
  %102 = sdiv i32 %101, %99
  br label %103

103:                                              ; preds = %97, %95
  %104 = phi i32 [ %102, %97 ], [ 128, %95 ]
  %105 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 52, i64 %13, i64 %15
  store i32 0, ptr %105, align 4, !tbaa !39
  %106 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 53, i64 %13, i64 %15
  store i32 0, ptr %106, align 4, !tbaa !39
  %107 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 16
  %108 = load i32, ptr %107, align 8, !tbaa !337
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %124

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %112 = load i32, ptr %111, align 8, !tbaa !336
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %116 = load ptr, ptr %115, align 16, !tbaa !169
  %117 = getelementptr inbounds %struct.x264_sps_t, ptr %116, i64 0, i32 16
  %118 = load i32, ptr %117, align 4, !tbaa !170
  %119 = icmp slt i32 %118, 3
  br i1 %119, label %124, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %struct.x264_sps_t, ptr %116, i64 0, i32 17
  %122 = load i32, ptr %121, align 4, !tbaa !179
  %123 = icmp slt i32 %122, 3
  br i1 %123, label %124, label %160

124:                                              ; preds = %120, %114, %110, %103
  %125 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %126 = load ptr, ptr %125, align 16, !tbaa !169
  %127 = getelementptr inbounds %struct.x264_sps_t, ptr %126, i64 0, i32 17
  %128 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %129 = load i32, ptr %127, align 4, !tbaa !39
  %130 = add nsw i32 %129, -1
  store i32 %130, ptr %128, align 4, !tbaa !62
  %131 = icmp sgt i32 %129, 0
  br i1 %131, label %132, label %181

132:                                              ; preds = %124
  %133 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  br label %138

134:                                              ; preds = %156, %150
  %135 = load i32, ptr %128, align 4, !tbaa !39
  %136 = add nsw i32 %135, -1
  store i32 %136, ptr %128, align 4, !tbaa !62
  %137 = icmp sgt i32 %135, 0
  br i1 %137, label %138, label %181, !llvm.loop !338

138:                                              ; preds = %132, %134
  %139 = phi i32 [ %130, %132 ], [ %136, %134 ]
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds i32, ptr %32, i64 %140
  store i32 0, ptr %141, align 4, !tbaa !39
  %142 = load ptr, ptr %10, align 8, !tbaa !46
  %143 = getelementptr inbounds %struct.x264_frame, ptr %142, i64 0, i32 62
  %144 = load i32, ptr %143, align 8, !tbaa !318
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load i32, ptr %128, align 4, !tbaa !62
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i32, ptr %34, i64 %148
  store i32 0, ptr %149, align 4, !tbaa !39
  br label %150

150:                                              ; preds = %146, %138
  %151 = load ptr, ptr %125, align 16, !tbaa !169
  %152 = getelementptr inbounds %struct.x264_sps_t, ptr %151, i64 0, i32 16
  %153 = load i32, ptr %152, align 4, !tbaa !39
  %154 = add nsw i32 %153, -1
  store i32 %154, ptr %133, align 16, !tbaa !168
  %155 = icmp sgt i32 %153, 0
  br i1 %155, label %156, label %134

156:                                              ; preds = %150, %156
  call fastcc void @x264_slicetype_mb_cost(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %104, ptr noundef nonnull %8, ptr noundef %79)
  %157 = load i32, ptr %133, align 4, !tbaa !39
  %158 = add nsw i32 %157, -1
  store i32 %158, ptr %133, align 16, !tbaa !168
  %159 = icmp sgt i32 %157, 0
  br i1 %159, label %156, label %134, !llvm.loop !339

160:                                              ; preds = %120
  %161 = add nsw i32 %122, -2
  %162 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  store i32 %161, ptr %162, align 4, !tbaa !62
  %163 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  br label %164

164:                                              ; preds = %160, %177
  %165 = phi i32 [ %161, %160 ], [ %179, %177 ]
  %166 = load ptr, ptr %115, align 16, !tbaa !169
  %167 = getelementptr inbounds %struct.x264_sps_t, ptr %166, i64 0, i32 16
  %168 = load i32, ptr %167, align 4, !tbaa !170
  %169 = add nsw i32 %168, -2
  store i32 %169, ptr %163, align 16, !tbaa !168
  %170 = icmp sgt i32 %168, 2
  br i1 %170, label %171, label %177

171:                                              ; preds = %164, %171
  call fastcc void @x264_slicetype_mb_cost(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %104, ptr noundef nonnull %8, ptr noundef %79)
  %172 = load i32, ptr %163, align 16, !tbaa !168
  %173 = add nsw i32 %172, -1
  store i32 %173, ptr %163, align 16, !tbaa !168
  %174 = icmp sgt i32 %172, 1
  br i1 %174, label %171, label %175, !llvm.loop !340

175:                                              ; preds = %171
  %176 = load i32, ptr %162, align 4, !tbaa !62
  br label %177

177:                                              ; preds = %175, %164
  %178 = phi i32 [ %176, %175 ], [ %165, %164 ]
  %179 = add nsw i32 %178, -1
  store i32 %179, ptr %162, align 4, !tbaa !62
  %180 = icmp sgt i32 %178, 1
  br i1 %180, label %164, label %181, !llvm.loop !341

181:                                              ; preds = %177, %134, %124
  %182 = load ptr, ptr %10, align 8, !tbaa !46
  %183 = getelementptr inbounds %struct.x264_frame, ptr %182, i64 0, i32 52, i64 %13, i64 %15
  %184 = load i32, ptr %183, align 4, !tbaa !39
  br i1 %47, label %194, label %185

185:                                              ; preds = %181
  %186 = sext i32 %184 to i64
  %187 = mul nsw i64 %186, 100
  %188 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 19
  %189 = load i32, ptr %188, align 4, !tbaa !342
  %190 = add nsw i32 %189, 120
  %191 = sext i32 %190 to i64
  %192 = udiv i64 %187, %191
  %193 = trunc i64 %192 to i32
  br label %196

194:                                              ; preds = %181
  %195 = getelementptr inbounds %struct.x264_frame, ptr %182, i64 0, i32 62
  store i32 1, ptr %195, align 8, !tbaa !318
  br label %196

196:                                              ; preds = %194, %185
  %197 = phi i32 [ %193, %185 ], [ %184, %194 ]
  store i32 %197, ptr %183, align 4, !tbaa !39
  br label %198

198:                                              ; preds = %22, %26, %196
  %199 = phi ptr [ %182, %196 ], [ %11, %26 ], [ %11, %22 ]
  %200 = phi i32 [ %197, %196 ], [ %17, %26 ], [ %17, %22 ]
  %201 = icmp eq i32 %6, 0
  br i1 %201, label %223, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %204 = load ptr, ptr %203, align 16, !tbaa !169
  %205 = getelementptr inbounds %struct.x264_sps_t, ptr %204, i64 0, i32 16
  %206 = load i32, ptr %205, align 4, !tbaa !170
  %207 = icmp sgt i32 %206, 2
  %208 = getelementptr inbounds %struct.x264_sps_t, ptr %204, i64 0, i32 17
  %209 = load i32, ptr %208, align 4, !tbaa !179
  %210 = icmp sgt i32 %209, 2
  %211 = and i1 %207, %210
  %212 = add nsw i32 %206, -2
  %213 = add nsw i32 %209, -2
  %214 = mul nsw i32 %213, %212
  %215 = mul nsw i32 %209, %206
  %216 = select i1 %211, i32 %214, i32 %215
  %217 = getelementptr inbounds %struct.x264_frame, ptr %199, i64 0, i32 55, i64 %13
  %218 = load i32, ptr %217, align 4, !tbaa !39
  %219 = mul nsw i32 %218, %200
  %220 = shl nsw i32 %216, 3
  %221 = sdiv i32 %219, %220
  %222 = add nsw i32 %221, %200
  br label %223

223:                                              ; preds = %202, %198
  %224 = phi i32 [ %222, %202 ], [ %200, %198 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #17
  ret i32 %224
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @x264_slicetype_analyse(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = alloca [2 x [250 x i8]], align 16
  %4 = alloca %struct.x264_mb_analysis_t, align 16
  %5 = alloca [253 x ptr], align 16
  %6 = alloca [17 x [250 x i8]], align 16
  call void @llvm.lifetime.start.p0(i64 14176, ptr nonnull %4) #17
  call void @llvm.lifetime.start.p0(i64 2024, ptr nonnull %5) #17
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(2024) %5, i8 0, i64 2024, i1 false)
  %7 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 24
  %8 = load ptr, ptr %7, align 16, !tbaa !169
  %9 = getelementptr inbounds %struct.x264_sps_t, ptr %8, i64 0, i32 16
  %10 = load i32, ptr %9, align 4, !tbaa !170
  %11 = icmp sgt i32 %10, 2
  %12 = getelementptr inbounds %struct.x264_sps_t, ptr %8, i64 0, i32 17
  %13 = load i32, ptr %12, align 4, !tbaa !179
  %14 = icmp sgt i32 %13, 2
  %15 = select i1 %11, i1 %14, i1 false
  %16 = add nsw i32 %10, -2
  %17 = add nsw i32 %13, -2
  %18 = mul nsw i32 %17, %16
  %19 = mul nsw i32 %13, %10
  %20 = select i1 %15, i32 %18, i32 %19
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 75
  %22 = load ptr, ptr %21, align 16, !tbaa !343
  %23 = getelementptr inbounds %struct.x264_lookahead_t, ptr %22, i64 0, i32 7, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !344
  %25 = tail call i32 @llvm.smin.i32(i32 %24, i32 250)
  %26 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 3
  %27 = load i32, ptr %26, align 4, !tbaa !182
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.x264_lookahead_t, ptr %22, i64 0, i32 4
  %31 = load i32, ptr %30, align 8, !tbaa !347
  %32 = icmp eq i32 %1, 0
  %33 = zext i1 %32 to i32
  %34 = add nsw i32 %31, %33
  %35 = tail call i32 @llvm.smin.i32(i32 %25, i32 %34)
  br label %36

36:                                               ; preds = %29, %2
  %37 = phi i32 [ %35, %29 ], [ %25, %2 ]
  %38 = getelementptr inbounds %struct.x264_lookahead_t, ptr %22, i64 0, i32 5
  %39 = load ptr, ptr %38, align 8, !tbaa !348
  %40 = icmp eq ptr %39, null
  br i1 %40, label %1392, label %41

41:                                               ; preds = %36
  store ptr %39, ptr %5, align 16, !tbaa !46
  %42 = getelementptr inbounds %struct.x264_lookahead_t, ptr %22, i64 0, i32 7
  %43 = icmp sgt i32 %37, 0
  br i1 %43, label %44, label %1392

44:                                               ; preds = %41
  %45 = zext i32 %37 to i64
  br label %46

46:                                               ; preds = %44, %54
  %47 = phi i64 [ 0, %44 ], [ %55, %54 ]
  %48 = load ptr, ptr %42, align 8, !tbaa !349
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8, !tbaa !46
  %51 = getelementptr inbounds %struct.x264_frame, ptr %50, i64 0, i32 1
  %52 = load i32, ptr %51, align 4, !tbaa !350
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %46
  %55 = add nuw nsw i64 %47, 1
  %56 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %55
  store ptr %50, ptr %56, align 8, !tbaa !46
  %57 = icmp eq i64 %55, %45
  br i1 %57, label %60, label %46, !llvm.loop !351

58:                                               ; preds = %46
  %59 = trunc i64 %47 to i32
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi i32 [ %59, %58 ], [ %37, %54 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %1392, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 13
  %65 = load i32, ptr %64, align 4, !tbaa !352
  %66 = getelementptr inbounds %struct.x264_frame, ptr %39, i64 0, i32 10
  %67 = load i32, ptr %66, align 8, !tbaa !314
  %68 = getelementptr inbounds %struct.x264_lookahead_t, ptr %22, i64 0, i32 3
  %69 = load i32, ptr %68, align 4, !tbaa !353
  %70 = xor i32 %67, -1
  %71 = add i32 %65, %70
  %72 = add i32 %71, %69
  %73 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 16
  %74 = load i32, ptr %73, align 16, !tbaa !175
  %75 = icmp eq i32 %74, 0
  %76 = tail call i32 @llvm.smin.i32(i32 %61, i32 %72)
  %77 = select i1 %75, i32 %76, i32 %61
  %78 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %4, i64 0, i32 2
  store i32 12, ptr %78, align 8, !tbaa !149
  store i32 1, ptr %4, align 16, !tbaa !152
  %79 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 37, i64 1
  %80 = load ptr, ptr %79, align 8, !tbaa !46
  %81 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %4, i64 0, i32 3
  store ptr %80, ptr %81, align 16, !tbaa !219
  %82 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 17
  %83 = load i32, ptr %82, align 16, !tbaa !220
  %84 = tail call i32 @llvm.smin.i32(i32 %83, i32 3)
  %85 = tail call i32 @llvm.smax.i32(i32 %84, i32 1)
  %86 = add nsw i32 %85, -1
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 1, i64 %87
  %89 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %4, i64 0, i32 4
  store ptr %88, ptr %89, align 8, !tbaa !46
  %90 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 18
  %91 = load i32, ptr %90, align 4, !tbaa !221
  %92 = tail call i32 @llvm.smin.i32(i32 %91, i32 3)
  %93 = tail call i32 @llvm.smax.i32(i32 %92, i32 1)
  %94 = add nsw i32 %93, -1
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 1, i64 %95
  %97 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %4, i64 0, i32 4, i64 1
  store ptr %96, ptr %97, align 16, !tbaa !46
  %98 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %99 = load i32, ptr %98, align 4, !tbaa !144
  %100 = icmp sgt i32 %99, 1
  br i1 %100, label %101, label %105

101:                                              ; preds = %63
  %102 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 7
  %103 = load i32, ptr %102, align 4, !tbaa !103
  %104 = tail call i32 @llvm.smin.i32(i32 %103, i32 1)
  br label %105

105:                                              ; preds = %63, %101
  %106 = phi i32 [ %104, %101 ], [ 0, %63 ]
  %107 = phi i32 [ 4, %101 ], [ 2, %63 ]
  %108 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 9
  store i32 %106, ptr %108, align 4
  %109 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  store i32 %107, ptr %109, align 8
  %110 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 11
  store i32 0, ptr %110, align 4, !tbaa !237
  %111 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 1
  %112 = load ptr, ptr %111, align 8, !tbaa !46
  %113 = getelementptr inbounds %struct.x264_frame, ptr %112, i64 0, i32 10
  %114 = load i32, ptr %113, align 8, !tbaa !314
  %115 = load i32, ptr %68, align 4, !tbaa !353
  %116 = sub nsw i32 %114, %115
  %117 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 14
  %118 = load i32, ptr %117, align 8, !tbaa !354
  %119 = icmp slt i32 %116, %118
  %120 = select i1 %119, i32 2, i32 1
  %121 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 20
  %122 = load i32, ptr %121, align 16, !tbaa !156
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %105
  %125 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 16
  %126 = load i32, ptr %125, align 8, !tbaa !337
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %143

128:                                              ; preds = %124, %105
  %129 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %130 = load i32, ptr %129, align 8, !tbaa !336
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %143

132:                                              ; preds = %128
  switch i32 %77, label %143 [
    i32 1, label %133
    i32 0, label %1389
  ]

133:                                              ; preds = %132
  %134 = getelementptr inbounds %struct.x264_frame, ptr %112, i64 0, i32 1
  store i32 3, ptr %134, align 4, !tbaa !350
  %135 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 15
  %136 = load i32, ptr %135, align 4, !tbaa !355
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %1392, label %138

138:                                              ; preds = %133
  %139 = call fastcc i32 @scenecut(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef 0, i32 noundef 1, i32 noundef 1, i32 noundef 1), !range !84
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %1392, label %141

141:                                              ; preds = %138
  %142 = load ptr, ptr %111, align 8, !tbaa !46
  br label %1389

143:                                              ; preds = %132, %124, %128
  %144 = phi i32 [ %61, %128 ], [ %61, %124 ], [ %77, %132 ]
  %145 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 15
  %146 = load i32, ptr %145, align 4, !tbaa !355
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %153, label %148

148:                                              ; preds = %143
  %149 = call fastcc i32 @scenecut(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef 0, i32 noundef 1, i32 noundef 1, i32 noundef %77), !range !84
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = load ptr, ptr %111, align 8, !tbaa !46
  br label %1389

153:                                              ; preds = %148, %143
  %154 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 17
  %155 = load i32, ptr %154, align 4, !tbaa !356
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %168

157:                                              ; preds = %153
  %158 = icmp slt i32 %144, 1
  br i1 %158, label %567, label %159

159:                                              ; preds = %157
  %160 = add nuw i32 %144, 1
  %161 = zext i32 %160 to i64
  %162 = add nsw i64 %161, -1
  %163 = add nsw i64 %161, -2
  %164 = and i64 %162, 7
  %165 = icmp ult i64 %163, 7
  br i1 %165, label %555, label %166

166:                                              ; preds = %159
  %167 = and i64 %162, -8
  br label %570

168:                                              ; preds = %153
  %169 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 18
  %170 = load i32, ptr %169, align 8, !tbaa !357
  switch i32 %170, label %462 [
    i32 2, label %179
    i32 1, label %171
  ]

171:                                              ; preds = %168
  %172 = add nsw i32 %144, -2
  %173 = icmp slt i32 %144, 2
  br i1 %173, label %362, label %174

174:                                              ; preds = %171
  %175 = sdiv i32 %20, 2
  %176 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 19
  %177 = add nsw i32 %144, -1
  %178 = sdiv i32 %20, 3
  br label %369

179:                                              ; preds = %168
  %180 = icmp sgt i32 %144, 1
  br i1 %180, label %181, label %356

181:                                              ; preds = %179
  call void @llvm.lifetime.start.p0(i64 4250, ptr nonnull %6) #17
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(4250) %6, i8 0, i64 4250, i1 false)
  %182 = getelementptr inbounds <{ [250 x i8], [250 x i8], [15 x [250 x i8]] }>, ptr %6, i64 0, i32 1
  store i8 80, ptr %182, align 2
  %183 = add nsw i32 %144, -1
  %184 = urem i32 %183, 17
  %185 = icmp eq i32 %144, 2
  br i1 %185, label %189, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 20
  %188 = zext i32 %144 to i64
  br label %200

189:                                              ; preds = %312, %181
  %190 = zext i32 %184 to i64
  %191 = getelementptr inbounds [17 x [250 x i8]], ptr %6, i64 0, i64 %190
  %192 = call i64 @strspn(ptr noundef nonnull %191, ptr noundef nonnull @.str.1) #18
  %193 = trunc i64 %192 to i32
  %194 = zext i32 %144 to i64
  %195 = add nsw i64 %194, -1
  %196 = and i64 %195, 1
  %197 = icmp eq i32 %144, 2
  br i1 %197, label %321, label %198

198:                                              ; preds = %189
  %199 = and i64 %195, -2
  br label %334

200:                                              ; preds = %186, %312
  %201 = phi i64 [ 2, %186 ], [ %319, %312 ]
  call void @llvm.lifetime.start.p0(i64 500, ptr nonnull %3) #17
  %202 = load i32, ptr %154, align 4, !tbaa !356
  %203 = icmp sgt i32 %202, -1
  br i1 %203, label %206, label %204

204:                                              ; preds = %200
  %205 = trunc i64 %201 to i32
  br label %312

206:                                              ; preds = %200
  %207 = add nuw nsw i32 %202, 1
  %208 = trunc i64 %201 to i32
  %209 = tail call i32 @llvm.smin.i32(i32 %207, i32 %208)
  %210 = zext i32 %209 to i64
  br label %214

211:                                              ; preds = %305
  %212 = xor i32 %309, 1
  %213 = zext i32 %212 to i64
  br label %312

214:                                              ; preds = %305, %206
  %215 = phi i64 [ 0, %206 ], [ %218, %305 ]
  %216 = phi i32 [ 268435456, %206 ], [ %310, %305 ]
  %217 = phi i32 [ 0, %206 ], [ %309, %305 ]
  %218 = add nuw nsw i64 %215, 1
  %219 = sub nsw i64 %201, %218
  %220 = zext i32 %217 to i64
  %221 = getelementptr inbounds [2 x [250 x i8]], ptr %3, i64 0, i64 %220
  %222 = trunc i64 %219 to i32
  %223 = srem i32 %222, 17
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [250 x i8], ptr %6, i64 %224
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %221, ptr nonnull align 2 %225, i64 %219, i1 false)
  %226 = getelementptr inbounds i8, ptr %221, i64 %219
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %226, i8 66, i64 %215, i1 false)
  %227 = getelementptr inbounds i8, ptr %226, i64 %215
  store i16 80, ptr %227, align 1
  %228 = getelementptr inbounds i8, ptr %221, i64 -1
  %229 = load i8, ptr %221, align 2, !tbaa !5
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %305, label %231

231:                                              ; preds = %214, %298
  %232 = phi i32 [ %243, %298 ], [ 0, %214 ]
  %233 = phi i32 [ %299, %298 ], [ 0, %214 ]
  %234 = phi i32 [ %300, %298 ], [ 1, %214 ]
  %235 = sext i32 %234 to i64
  br label %236

236:                                              ; preds = %236, %231
  %237 = phi i64 [ %241, %236 ], [ %235, %231 ]
  %238 = getelementptr inbounds i8, ptr %228, i64 %237
  %239 = load i8, ptr %238, align 1, !tbaa !5
  %240 = icmp eq i8 %239, 80
  %241 = add i64 %237, 1
  br i1 %240, label %242, label %236, !llvm.loop !358

242:                                              ; preds = %236
  %243 = trunc i64 %237 to i32
  %244 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %232, i32 noundef %243, i32 noundef %243, i32 noundef 0)
  %245 = add nsw i32 %244, %233
  %246 = icmp sgt i32 %245, %216
  br i1 %246, label %305, label %247

247:                                              ; preds = %242
  %248 = load i32, ptr %187, align 16, !tbaa !359
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %285, label %250

250:                                              ; preds = %247
  %251 = sub nsw i32 %243, %232
  %252 = icmp sgt i32 %251, 2
  br i1 %252, label %253, label %285

253:                                              ; preds = %250
  %254 = lshr i32 %251, 1
  %255 = add nsw i32 %254, %232
  %256 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %232, i32 noundef %243, i32 noundef %255, i32 noundef 0)
  %257 = add nsw i32 %256, %245
  %258 = icmp slt i32 %234, %255
  %259 = icmp slt i32 %257, %216
  %260 = select i1 %258, i1 %259, i1 false
  br i1 %260, label %267, label %261

261:                                              ; preds = %267, %253
  %262 = phi i32 [ %257, %253 ], [ %271, %267 ]
  %263 = add nsw i32 %255, 1
  %264 = icmp slt i32 %263, %243
  %265 = icmp slt i32 %262, %216
  %266 = select i1 %264, i1 %265, i1 false
  br i1 %266, label %276, label %298

267:                                              ; preds = %253, %267
  %268 = phi i32 [ %272, %267 ], [ %234, %253 ]
  %269 = phi i32 [ %271, %267 ], [ %257, %253 ]
  %270 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %232, i32 noundef %255, i32 noundef %268, i32 noundef 0)
  %271 = add nsw i32 %270, %269
  %272 = add nsw i32 %268, 1
  %273 = icmp slt i32 %272, %255
  %274 = icmp slt i32 %271, %216
  %275 = select i1 %273, i1 %274, i1 false
  br i1 %275, label %267, label %261, !llvm.loop !360

276:                                              ; preds = %261, %276
  %277 = phi i32 [ %281, %276 ], [ %263, %261 ]
  %278 = phi i32 [ %280, %276 ], [ %262, %261 ]
  %279 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %255, i32 noundef %243, i32 noundef %277, i32 noundef 0)
  %280 = add nsw i32 %279, %278
  %281 = add nsw i32 %277, 1
  %282 = icmp slt i32 %281, %243
  %283 = icmp slt i32 %280, %216
  %284 = select i1 %282, i1 %283, i1 false
  br i1 %284, label %276, label %298, !llvm.loop !361

285:                                              ; preds = %250, %247
  %286 = icmp slt i32 %234, %243
  %287 = icmp slt i32 %245, %216
  %288 = and i1 %286, %287
  br i1 %288, label %289, label %298

289:                                              ; preds = %285, %289
  %290 = phi i32 [ %294, %289 ], [ %234, %285 ]
  %291 = phi i32 [ %293, %289 ], [ %245, %285 ]
  %292 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %232, i32 noundef %243, i32 noundef %290, i32 noundef 0)
  %293 = add nsw i32 %292, %291
  %294 = add nsw i32 %290, 1
  %295 = icmp slt i32 %294, %243
  %296 = icmp slt i32 %293, %216
  %297 = select i1 %295, i1 %296, i1 false
  br i1 %297, label %289, label %298, !llvm.loop !362

298:                                              ; preds = %276, %289, %285, %261
  %299 = phi i32 [ %245, %285 ], [ %262, %261 ], [ %293, %289 ], [ %280, %276 ]
  %300 = add nsw i32 %243, 1
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i8, ptr %228, i64 %301
  %303 = load i8, ptr %302, align 1, !tbaa !5
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %231

305:                                              ; preds = %298, %242, %214
  %306 = phi i32 [ 0, %214 ], [ %245, %242 ], [ %299, %298 ]
  %307 = icmp slt i32 %306, %216
  %308 = zext i1 %307 to i32
  %309 = xor i32 %217, %308
  %310 = tail call i32 @llvm.smin.i32(i32 %306, i32 %216)
  %311 = icmp eq i64 %218, %210
  br i1 %311, label %211, label %214, !llvm.loop !363

312:                                              ; preds = %204, %211
  %313 = phi i32 [ %205, %204 ], [ %208, %211 ]
  %314 = phi i64 [ 1, %204 ], [ %213, %211 ]
  %315 = urem i32 %313, 17
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds [250 x i8], ptr %6, i64 %316
  %318 = getelementptr inbounds [2 x [250 x i8]], ptr %3, i64 0, i64 %314
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(1) %317, ptr noundef nonnull align 2 dereferenceable(1) %318, i64 %201, i1 false)
  call void @llvm.lifetime.end.p0(i64 500, ptr nonnull %3) #17
  %319 = add nuw nsw i64 %201, 1
  %320 = icmp eq i64 %319, %188
  br i1 %320, label %189, label %200, !llvm.loop !364

321:                                              ; preds = %334, %189
  %322 = phi i64 [ 1, %189 ], [ %353, %334 ]
  %323 = icmp eq i64 %196, 0
  br i1 %323, label %333, label %324

324:                                              ; preds = %321
  %325 = add nsw i64 %322, -1
  %326 = getelementptr inbounds [17 x [250 x i8]], ptr %6, i64 0, i64 %190, i64 %325
  %327 = load i8, ptr %326, align 1, !tbaa !5
  %328 = icmp eq i8 %327, 66
  %329 = select i1 %328, i32 5, i32 3
  %330 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %322
  %331 = load ptr, ptr %330, align 8, !tbaa !46
  %332 = getelementptr inbounds %struct.x264_frame, ptr %331, i64 0, i32 1
  store i32 %329, ptr %332, align 4, !tbaa !350
  br label %333

333:                                              ; preds = %321, %324
  call void @llvm.lifetime.end.p0(i64 4250, ptr nonnull %6) #17
  br label %356

334:                                              ; preds = %334, %198
  %335 = phi i64 [ 1, %198 ], [ %353, %334 ]
  %336 = phi i64 [ 0, %198 ], [ %354, %334 ]
  %337 = add nsw i64 %335, -1
  %338 = getelementptr inbounds [17 x [250 x i8]], ptr %6, i64 0, i64 %190, i64 %337
  %339 = load i8, ptr %338, align 1, !tbaa !5
  %340 = icmp eq i8 %339, 66
  %341 = select i1 %340, i32 5, i32 3
  %342 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %335
  %343 = load ptr, ptr %342, align 8, !tbaa !46
  %344 = getelementptr inbounds %struct.x264_frame, ptr %343, i64 0, i32 1
  store i32 %341, ptr %344, align 4, !tbaa !350
  %345 = add nuw nsw i64 %335, 1
  %346 = getelementptr inbounds [17 x [250 x i8]], ptr %6, i64 0, i64 %190, i64 %335
  %347 = load i8, ptr %346, align 1, !tbaa !5
  %348 = icmp eq i8 %347, 66
  %349 = select i1 %348, i32 5, i32 3
  %350 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %345
  %351 = load ptr, ptr %350, align 8, !tbaa !46
  %352 = getelementptr inbounds %struct.x264_frame, ptr %351, i64 0, i32 1
  store i32 %349, ptr %352, align 4, !tbaa !350
  %353 = add nuw nsw i64 %335, 2
  %354 = add i64 %336, 2
  %355 = icmp eq i64 %354, %199
  br i1 %355, label %321, label %334, !llvm.loop !365

356:                                              ; preds = %333, %179
  %357 = phi i32 [ %193, %333 ], [ 0, %179 ]
  %358 = sext i32 %144 to i64
  %359 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %358
  %360 = load ptr, ptr %359, align 8, !tbaa !46
  %361 = getelementptr inbounds %struct.x264_frame, ptr %360, i64 0, i32 1
  store i32 3, ptr %361, align 4, !tbaa !350
  br label %514

362:                                              ; preds = %385, %171
  %363 = sext i32 %144 to i64
  %364 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %363
  %365 = load ptr, ptr %364, align 8, !tbaa !46
  %366 = getelementptr inbounds %struct.x264_frame, ptr %365, i64 0, i32 1
  store i32 3, ptr %366, align 4, !tbaa !350
  %367 = tail call i32 @llvm.smax.i32(i32 %144, i32 0)
  %368 = zext i32 %367 to i64
  br label %452

369:                                              ; preds = %174, %385
  %370 = phi i32 [ 0, %174 ], [ %387, %385 ]
  %371 = add nsw i32 %370, 2
  %372 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %370, i32 noundef %371, i32 noundef %371, i32 noundef 1)
  %373 = sext i32 %371 to i64
  %374 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %373
  %375 = load ptr, ptr %374, align 8, !tbaa !46
  %376 = getelementptr inbounds %struct.x264_frame, ptr %375, i64 0, i32 55, i64 2
  %377 = load i32, ptr %376, align 8, !tbaa !39
  %378 = icmp sgt i32 %377, %175
  %379 = add nsw i32 %370, 1
  br i1 %378, label %380, label %390

380:                                              ; preds = %369
  %381 = sext i32 %379 to i64
  %382 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %381
  %383 = load ptr, ptr %382, align 8, !tbaa !46
  %384 = getelementptr inbounds %struct.x264_frame, ptr %383, i64 0, i32 1
  store i32 3, ptr %384, align 4, !tbaa !350
  br label %385

385:                                              ; preds = %390, %380, %447
  %386 = phi ptr [ %375, %380 ], [ %451, %447 ], [ %399, %390 ]
  %387 = phi i32 [ %371, %380 ], [ %449, %447 ], [ %379, %390 ]
  %388 = getelementptr inbounds %struct.x264_frame, ptr %386, i64 0, i32 1
  store i32 3, ptr %388, align 4, !tbaa !350
  %389 = icmp sgt i32 %387, %172
  br i1 %389, label %362, label %369, !llvm.loop !366

390:                                              ; preds = %369
  %391 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %370, i32 noundef %371, i32 noundef %379, i32 noundef 0)
  %392 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %370, i32 noundef %379, i32 noundef %379, i32 noundef 0)
  %393 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %379, i32 noundef %371, i32 noundef %371, i32 noundef 0)
  %394 = add nsw i32 %393, %392
  %395 = add nsw i32 %391, %372
  %396 = icmp slt i32 %394, %395
  %397 = sext i32 %379 to i64
  %398 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %397
  %399 = load ptr, ptr %398, align 8, !tbaa !46
  br i1 %396, label %385, label %400

400:                                              ; preds = %390
  %401 = getelementptr inbounds %struct.x264_frame, ptr %399, i64 0, i32 1
  store i32 5, ptr %401, align 4, !tbaa !350
  %402 = load i32, ptr %154, align 4, !tbaa !356
  %403 = add nsw i32 %402, %370
  %404 = tail call i32 @llvm.smin.i32(i32 %403, i32 %177)
  %405 = icmp sgt i32 %371, %404
  br i1 %405, label %447, label %406

406:                                              ; preds = %400
  %407 = sext i32 %370 to i64
  %408 = add nsw i64 %407, 2
  br label %409

409:                                              ; preds = %406, %431
  %410 = phi i64 [ %408, %406 ], [ %419, %431 ]
  %411 = load i32, ptr %176, align 4, !tbaa !342
  %412 = add i32 %411, -50
  %413 = sub nsw i64 %410, %407
  %414 = trunc i64 %413 to i32
  %415 = add i32 %414, -1
  %416 = mul i32 %412, %415
  %417 = add i32 %416, 300
  %418 = tail call i32 @llvm.smax.i32(i32 %417, i32 30)
  %419 = add nsw i64 %410, 1
  %420 = trunc i64 %419 to i32
  %421 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %370, i32 noundef %420, i32 noundef %420, i32 noundef 1)
  %422 = mul nsw i32 %418, %20
  %423 = icmp sgt i32 %421, %422
  br i1 %423, label %440, label %424

424:                                              ; preds = %409
  %425 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %419
  %426 = load ptr, ptr %425, align 8, !tbaa !46
  %427 = add nuw nsw i64 %413, 1
  %428 = getelementptr inbounds %struct.x264_frame, ptr %426, i64 0, i32 55, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !39
  %430 = icmp sgt i32 %429, %178
  br i1 %430, label %442, label %431

431:                                              ; preds = %424
  %432 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %410
  %433 = load ptr, ptr %432, align 8, !tbaa !46
  %434 = getelementptr inbounds %struct.x264_frame, ptr %433, i64 0, i32 1
  store i32 5, ptr %434, align 4, !tbaa !350
  %435 = load i32, ptr %154, align 4, !tbaa !356
  %436 = add nsw i32 %435, %370
  %437 = tail call i32 @llvm.smin.i32(i32 %436, i32 %177)
  %438 = sext i32 %437 to i64
  %439 = icmp slt i64 %410, %438
  br i1 %439, label %409, label %444, !llvm.loop !367

440:                                              ; preds = %409
  %441 = trunc i64 %410 to i32
  br label %444

442:                                              ; preds = %424
  %443 = trunc i64 %410 to i32
  br label %444

444:                                              ; preds = %431, %442, %440
  %445 = phi i32 [ %441, %440 ], [ %443, %442 ], [ %420, %431 ]
  %446 = sext i32 %445 to i64
  br label %447

447:                                              ; preds = %444, %400
  %448 = phi i64 [ %446, %444 ], [ %373, %400 ]
  %449 = phi i32 [ %445, %444 ], [ %371, %400 ]
  %450 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %448
  %451 = load ptr, ptr %450, align 8, !tbaa !46
  br label %385

452:                                              ; preds = %455, %362
  %453 = phi i64 [ %456, %455 ], [ 0, %362 ]
  %454 = icmp eq i64 %453, %368
  br i1 %454, label %514, label %455

455:                                              ; preds = %452
  %456 = add nuw nsw i64 %453, 1
  %457 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %456
  %458 = load ptr, ptr %457, align 8, !tbaa !46
  %459 = getelementptr inbounds %struct.x264_frame, ptr %458, i64 0, i32 1
  %460 = load i32, ptr %459, align 4, !tbaa !350
  %461 = icmp eq i32 %460, 5
  br i1 %461, label %452, label %512, !llvm.loop !368

462:                                              ; preds = %168
  %463 = icmp sgt i32 %144, %155
  %464 = add nsw i32 %144, -1
  %465 = select i1 %463, i32 %155, i32 %464
  %466 = icmp sgt i32 %144, 1
  br i1 %466, label %467, label %486

467:                                              ; preds = %462
  %468 = add nsw i32 %465, 1
  %469 = zext i32 %144 to i64
  %470 = add nsw i64 %469, -1
  %471 = and i64 %470, 1
  %472 = icmp eq i32 %144, 2
  br i1 %472, label %475, label %473

473:                                              ; preds = %467
  %474 = and i64 %470, -2
  br label %491

475:                                              ; preds = %491, %467
  %476 = phi i64 [ 1, %467 ], [ %509, %491 ]
  %477 = icmp eq i64 %471, 0
  br i1 %477, label %486, label %478

478:                                              ; preds = %475
  %479 = trunc i64 %476 to i32
  %480 = srem i32 %479, %468
  %481 = icmp eq i32 %480, 0
  %482 = select i1 %481, i32 3, i32 5
  %483 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %476
  %484 = load ptr, ptr %483, align 8, !tbaa !46
  %485 = getelementptr inbounds %struct.x264_frame, ptr %484, i64 0, i32 1
  store i32 %482, ptr %485, align 4, !tbaa !350
  br label %486

486:                                              ; preds = %478, %475, %462
  %487 = sext i32 %144 to i64
  %488 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %487
  %489 = load ptr, ptr %488, align 8, !tbaa !46
  %490 = getelementptr inbounds %struct.x264_frame, ptr %489, i64 0, i32 1
  store i32 3, ptr %490, align 4, !tbaa !350
  br label %514

491:                                              ; preds = %491, %473
  %492 = phi i64 [ 1, %473 ], [ %509, %491 ]
  %493 = phi i64 [ 0, %473 ], [ %510, %491 ]
  %494 = trunc i64 %492 to i32
  %495 = srem i32 %494, %468
  %496 = icmp eq i32 %495, 0
  %497 = select i1 %496, i32 3, i32 5
  %498 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %492
  %499 = load ptr, ptr %498, align 8, !tbaa !46
  %500 = getelementptr inbounds %struct.x264_frame, ptr %499, i64 0, i32 1
  store i32 %497, ptr %500, align 4, !tbaa !350
  %501 = add nuw nsw i64 %492, 1
  %502 = trunc i64 %501 to i32
  %503 = srem i32 %502, %468
  %504 = icmp eq i32 %503, 0
  %505 = select i1 %504, i32 3, i32 5
  %506 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %501
  %507 = load ptr, ptr %506, align 8, !tbaa !46
  %508 = getelementptr inbounds %struct.x264_frame, ptr %507, i64 0, i32 1
  store i32 %505, ptr %508, align 4, !tbaa !350
  %509 = add nuw nsw i64 %492, 2
  %510 = add i64 %493, 2
  %511 = icmp eq i64 %510, %474
  br i1 %511, label %475, label %491, !llvm.loop !369

512:                                              ; preds = %455
  %513 = trunc i64 %453 to i32
  br label %514

514:                                              ; preds = %452, %512, %486, %356
  %515 = phi i32 [ %357, %356 ], [ %465, %486 ], [ %513, %512 ], [ %367, %452 ]
  %516 = icmp slt i32 %515, 1
  br i1 %516, label %548, label %517

517:                                              ; preds = %514
  %518 = load i32, ptr %145, align 4, !tbaa !355
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %548, label %520

520:                                              ; preds = %517
  %521 = add nuw i32 %515, 1
  %522 = zext i32 %521 to i64
  br label %525

523:                                              ; preds = %546
  %524 = load i32, ptr %145, align 4, !tbaa !355
  br label %525

525:                                              ; preds = %523, %520
  %526 = phi i32 [ %524, %523 ], [ 1, %520 ]
  %527 = phi i64 [ %530, %523 ], [ 1, %520 ]
  %528 = trunc i64 %527 to i32
  %529 = icmp eq i32 %526, 0
  %530 = add nuw nsw i64 %527, 1
  br i1 %529, label %546, label %531

531:                                              ; preds = %525
  %532 = getelementptr inbounds ptr, ptr %5, i64 %530
  %533 = load ptr, ptr %532, align 8, !tbaa !46
  %534 = getelementptr inbounds %struct.x264_frame, ptr %533, i64 0, i32 66
  %535 = load i32, ptr %534, align 8, !tbaa !370
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %546, label %537

537:                                              ; preds = %531
  %538 = add nuw nsw i32 %528, 1
  %539 = call fastcc i32 @scenecut_internal(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %528, i32 noundef %538, i32 noundef 0), !range !84
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %546, label %541

541:                                              ; preds = %537
  %542 = and i64 %527, 4294967295
  %543 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %542
  %544 = load ptr, ptr %543, align 8, !tbaa !46
  %545 = getelementptr inbounds %struct.x264_frame, ptr %544, i64 0, i32 1
  store i32 3, ptr %545, align 4, !tbaa !350
  br label %548

546:                                              ; preds = %525, %531, %537
  %547 = icmp eq i64 %530, %522
  br i1 %547, label %548, label %523, !llvm.loop !371

548:                                              ; preds = %546, %517, %514, %541
  %549 = phi i32 [ %528, %541 ], [ %144, %514 ], [ %144, %517 ], [ %144, %546 ]
  %550 = icmp eq i32 %1, 0
  br i1 %550, label %551, label %607

551:                                              ; preds = %548
  %552 = add nsw i32 %515, 2
  %553 = add nsw i32 %549, 1
  %554 = tail call i32 @llvm.smin.i32(i32 %552, i32 %553)
  br label %607

555:                                              ; preds = %570, %159
  %556 = phi i64 [ 1, %159 ], [ %604, %570 ]
  %557 = icmp eq i64 %164, 0
  br i1 %557, label %567, label %558

558:                                              ; preds = %555, %558
  %559 = phi i64 [ %564, %558 ], [ %556, %555 ]
  %560 = phi i64 [ %565, %558 ], [ 0, %555 ]
  %561 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %559
  %562 = load ptr, ptr %561, align 8, !tbaa !46
  %563 = getelementptr inbounds %struct.x264_frame, ptr %562, i64 0, i32 1
  store i32 3, ptr %563, align 4, !tbaa !350
  %564 = add nuw nsw i64 %559, 1
  %565 = add i64 %560, 1
  %566 = icmp eq i64 %565, %164
  br i1 %566, label %567, label %558, !llvm.loop !373

567:                                              ; preds = %555, %558, %157
  %568 = icmp eq i32 %1, 0
  %569 = select i1 %568, i32 2, i32 1
  br label %607

570:                                              ; preds = %570, %166
  %571 = phi i64 [ 1, %166 ], [ %604, %570 ]
  %572 = phi i64 [ 0, %166 ], [ %605, %570 ]
  %573 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %571
  %574 = load ptr, ptr %573, align 8, !tbaa !46
  %575 = getelementptr inbounds %struct.x264_frame, ptr %574, i64 0, i32 1
  store i32 3, ptr %575, align 4, !tbaa !350
  %576 = add nuw nsw i64 %571, 1
  %577 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %576
  %578 = load ptr, ptr %577, align 8, !tbaa !46
  %579 = getelementptr inbounds %struct.x264_frame, ptr %578, i64 0, i32 1
  store i32 3, ptr %579, align 4, !tbaa !350
  %580 = add nuw nsw i64 %571, 2
  %581 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %580
  %582 = load ptr, ptr %581, align 8, !tbaa !46
  %583 = getelementptr inbounds %struct.x264_frame, ptr %582, i64 0, i32 1
  store i32 3, ptr %583, align 4, !tbaa !350
  %584 = add nuw nsw i64 %571, 3
  %585 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %584
  %586 = load ptr, ptr %585, align 8, !tbaa !46
  %587 = getelementptr inbounds %struct.x264_frame, ptr %586, i64 0, i32 1
  store i32 3, ptr %587, align 4, !tbaa !350
  %588 = add nuw nsw i64 %571, 4
  %589 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %588
  %590 = load ptr, ptr %589, align 8, !tbaa !46
  %591 = getelementptr inbounds %struct.x264_frame, ptr %590, i64 0, i32 1
  store i32 3, ptr %591, align 4, !tbaa !350
  %592 = add nuw nsw i64 %571, 5
  %593 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %592
  %594 = load ptr, ptr %593, align 8, !tbaa !46
  %595 = getelementptr inbounds %struct.x264_frame, ptr %594, i64 0, i32 1
  store i32 3, ptr %595, align 4, !tbaa !350
  %596 = add nuw nsw i64 %571, 6
  %597 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %596
  %598 = load ptr, ptr %597, align 8, !tbaa !46
  %599 = getelementptr inbounds %struct.x264_frame, ptr %598, i64 0, i32 1
  store i32 3, ptr %599, align 4, !tbaa !350
  %600 = add nuw nsw i64 %571, 7
  %601 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %600
  %602 = load ptr, ptr %601, align 8, !tbaa !46
  %603 = getelementptr inbounds %struct.x264_frame, ptr %602, i64 0, i32 1
  store i32 3, ptr %603, align 4, !tbaa !350
  %604 = add nuw nsw i64 %571, 8
  %605 = add i64 %572, 8
  %606 = icmp eq i64 %605, %167
  br i1 %606, label %555, label %570, !llvm.loop !374

607:                                              ; preds = %551, %548, %567
  %608 = phi i32 [ %569, %567 ], [ %554, %551 ], [ 1, %548 ]
  %609 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 16
  %610 = load i32, ptr %609, align 8, !tbaa !337
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %894, label %612

612:                                              ; preds = %607
  %613 = load i32, ptr %64, align 4, !tbaa !352
  %614 = tail call i32 @llvm.smin.i32(i32 %144, i32 %613)
  %615 = icmp eq i32 %1, 0
  %616 = zext i1 %615 to i32
  br i1 %615, label %619, label %617

617:                                              ; preds = %612
  %618 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  br label %619

619:                                              ; preds = %617, %612
  %620 = zext i32 %614 to i64
  %621 = tail call i32 @llvm.smin.i32(i32 %614, i32 1)
  %622 = add i32 %621, -1
  br label %623

623:                                              ; preds = %627, %619
  %624 = phi i64 [ %628, %627 ], [ %620, %619 ]
  %625 = trunc i64 %624 to i32
  %626 = icmp sgt i32 %625, 1
  br i1 %626, label %627, label %637

627:                                              ; preds = %623
  %628 = add nsw i64 %624, -1
  %629 = and i64 %628, 4294967295
  %630 = getelementptr inbounds ptr, ptr %5, i64 %629
  %631 = load ptr, ptr %630, align 8, !tbaa !46
  %632 = getelementptr inbounds %struct.x264_frame, ptr %631, i64 0, i32 1
  %633 = load i32, ptr %632, align 4, !tbaa !350
  %634 = icmp eq i32 %633, 5
  br i1 %634, label %623, label %635, !llvm.loop !375

635:                                              ; preds = %627
  %636 = trunc i64 %628 to i32
  br label %637

637:                                              ; preds = %623, %635
  %638 = phi i32 [ %625, %635 ], [ %621, %623 ]
  %639 = phi i32 [ %636, %635 ], [ %622, %623 ]
  %640 = icmp sgt i32 %638, %616
  br i1 %640, label %641, label %894

641:                                              ; preds = %637
  %642 = zext i32 %639 to i64
  %643 = getelementptr inbounds ptr, ptr %5, i64 %642
  %644 = load ptr, ptr %643, align 8, !tbaa !46
  %645 = getelementptr inbounds %struct.x264_frame, ptr %644, i64 0, i32 64
  %646 = load ptr, ptr %645, align 8, !tbaa !376
  %647 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55
  %648 = load i32, ptr %647, align 16, !tbaa !377
  %649 = sext i32 %648 to i64
  %650 = shl nsw i64 %649, 1
  tail call void @llvm.memset.p0.i64(ptr align 2 %646, i8 0, i64 %650, i1 false)
  %651 = icmp sgt i32 %639, %616
  br i1 %651, label %652, label %732

652:                                              ; preds = %641
  %653 = add nsw i32 %638, -2
  %654 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 20
  br label %655

655:                                              ; preds = %722, %652
  %656 = phi i32 [ %653, %652 ], [ %724, %722 ]
  %657 = phi i32 [ %639, %652 ], [ %671, %722 ]
  %658 = phi i32 [ 0, %652 ], [ %683, %722 ]
  %659 = sext i32 %656 to i64
  br label %660

660:                                              ; preds = %660, %655
  %661 = phi i64 [ %669, %660 ], [ %659, %655 ]
  %662 = getelementptr inbounds ptr, ptr %5, i64 %661
  %663 = load ptr, ptr %662, align 8, !tbaa !46
  %664 = getelementptr inbounds %struct.x264_frame, ptr %663, i64 0, i32 1
  %665 = load i32, ptr %664, align 4, !tbaa !350
  %666 = icmp eq i32 %665, 5
  %667 = icmp sgt i64 %661, 0
  %668 = and i1 %667, %666
  %669 = add nsw i64 %661, -1
  br i1 %668, label %660, label %670, !llvm.loop !378

670:                                              ; preds = %660
  %671 = trunc i64 %661 to i32
  %672 = icmp slt i32 %671, %616
  br i1 %672, label %726, label %673

673:                                              ; preds = %670
  %674 = getelementptr inbounds ptr, ptr %5, i64 %661
  %675 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %671, i32 noundef %657, i32 noundef %657, i32 noundef 0)
  %676 = load ptr, ptr %674, align 8, !tbaa !46
  %677 = getelementptr inbounds %struct.x264_frame, ptr %676, i64 0, i32 64
  %678 = load ptr, ptr %677, align 8, !tbaa !376
  %679 = load i32, ptr %647, align 16, !tbaa !377
  %680 = sext i32 %679 to i64
  %681 = shl nsw i64 %680, 1
  tail call void @llvm.memset.p0.i64(ptr align 2 %678, i8 0, i64 %681, i1 false)
  %682 = sub nsw i32 %657, %671
  %683 = add nsw i32 %682, -1
  %684 = load i32, ptr %654, align 16, !tbaa !359
  %685 = icmp ne i32 %684, 0
  %686 = icmp sgt i32 %682, 2
  %687 = select i1 %685, i1 %686, i1 false
  br i1 %687, label %690, label %688

688:                                              ; preds = %673
  %689 = icmp sgt i32 %656, %671
  br i1 %689, label %717, label %722

690:                                              ; preds = %673
  %691 = lshr i32 %682, 1
  %692 = add nsw i32 %691, %671
  %693 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %671, i32 noundef %657, i32 noundef %692, i32 noundef 0)
  %694 = sext i32 %692 to i64
  %695 = getelementptr inbounds ptr, ptr %5, i64 %694
  %696 = load ptr, ptr %695, align 8, !tbaa !46
  %697 = getelementptr inbounds %struct.x264_frame, ptr %696, i64 0, i32 64
  %698 = load ptr, ptr %697, align 8, !tbaa !376
  %699 = load i32, ptr %647, align 16, !tbaa !377
  %700 = sext i32 %699 to i64
  %701 = shl nsw i64 %700, 1
  tail call void @llvm.memset.p0.i64(ptr align 2 %698, i8 0, i64 %701, i1 false)
  %702 = icmp sgt i32 %656, %671
  br i1 %702, label %703, label %715

703:                                              ; preds = %690, %712
  %704 = phi i32 [ %713, %712 ], [ %656, %690 ]
  %705 = icmp eq i32 %704, %692
  br i1 %705, label %712, label %706

706:                                              ; preds = %703
  %707 = icmp slt i32 %704, %692
  %708 = select i1 %707, i32 %692, i32 %657
  %709 = icmp sgt i32 %704, %692
  %710 = select i1 %709, i32 %692, i32 %671
  %711 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %710, i32 noundef %708, i32 noundef %704, i32 noundef 0)
  call fastcc void @x264_macroblock_tree_propagate(ptr noundef %0, ptr noundef nonnull %5, i32 noundef %710, i32 noundef %708, i32 noundef %704, i32 noundef 0)
  br label %712

712:                                              ; preds = %706, %703
  %713 = add nsw i32 %704, -1
  %714 = icmp sgt i32 %713, %671
  br i1 %714, label %703, label %715, !llvm.loop !379

715:                                              ; preds = %712, %690
  %716 = phi i32 [ %656, %690 ], [ %713, %712 ]
  call fastcc void @x264_macroblock_tree_propagate(ptr noundef %0, ptr noundef nonnull %5, i32 noundef %671, i32 noundef %657, i32 noundef %692, i32 noundef 1)
  br label %722

717:                                              ; preds = %688, %717
  %718 = phi i32 [ %720, %717 ], [ %656, %688 ]
  %719 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %671, i32 noundef %657, i32 noundef %718, i32 noundef 0)
  call fastcc void @x264_macroblock_tree_propagate(ptr noundef %0, ptr noundef nonnull %5, i32 noundef %671, i32 noundef %657, i32 noundef %718, i32 noundef 0)
  %720 = add nsw i32 %718, -1
  %721 = icmp sgt i32 %720, %671
  br i1 %721, label %717, label %722, !llvm.loop !380

722:                                              ; preds = %717, %715, %688
  %723 = phi i32 [ %716, %715 ], [ %656, %688 ], [ %720, %717 ]
  call fastcc void @x264_macroblock_tree_propagate(ptr noundef %0, ptr noundef nonnull %5, i32 noundef %671, i32 noundef %657, i32 noundef %657, i32 noundef 1)
  %724 = add nsw i32 %723, -1
  %725 = icmp sgt i32 %723, %616
  br i1 %725, label %655, label %726, !llvm.loop !381

726:                                              ; preds = %722, %670
  %727 = phi i32 [ %683, %722 ], [ %658, %670 ]
  %728 = phi i32 [ %671, %722 ], [ %657, %670 ]
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds ptr, ptr %5, i64 %729
  %731 = load ptr, ptr %730, align 8, !tbaa !46
  br label %732

732:                                              ; preds = %726, %641
  %733 = phi ptr [ %731, %726 ], [ %644, %641 ]
  %734 = phi i32 [ %727, %726 ], [ 0, %641 ]
  %735 = phi i32 [ %728, %726 ], [ %639, %641 ]
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %745, label %737

737:                                              ; preds = %732
  %738 = add nsw i32 %735, -1
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds %struct.x264_frame, ptr %733, i64 0, i32 67, i64 %739
  %741 = load float, ptr %740, align 4, !tbaa !335
  %742 = fcmp fast ogt float %741, 0.000000e+00
  br i1 %742, label %743, label %745

743:                                              ; preds = %737
  %744 = fsub fast float 1.000000e+00, %741
  br label %745

745:                                              ; preds = %743, %737, %732
  %746 = phi float [ %744, %743 ], [ 0.000000e+00, %737 ], [ 0.000000e+00, %732 ]
  %747 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 22
  %748 = load float, ptr %747, align 8, !tbaa !382
  %749 = fmul fast float %748, 5.000000e+00
  %750 = fsub fast float 5.000000e+00, %749
  %751 = load i32, ptr %647, align 16, !tbaa !377
  %752 = icmp sgt i32 %751, 0
  br i1 %752, label %753, label %814

753:                                              ; preds = %745
  %754 = getelementptr inbounds %struct.x264_frame, ptr %733, i64 0, i32 63
  %755 = load ptr, ptr %754, align 16, !tbaa !325
  %756 = getelementptr inbounds %struct.x264_frame, ptr %733, i64 0, i32 65
  %757 = load ptr, ptr %756, align 16, !tbaa !383
  %758 = getelementptr inbounds %struct.x264_frame, ptr %733, i64 0, i32 64
  %759 = getelementptr inbounds %struct.x264_frame, ptr %733, i64 0, i32 61
  %760 = getelementptr inbounds %struct.x264_frame, ptr %733, i64 0, i32 60
  %761 = zext i32 %751 to i64
  br label %762

762:                                              ; preds = %811, %753
  %763 = phi i64 [ 0, %753 ], [ %812, %811 ]
  %764 = getelementptr inbounds i16, ptr %755, i64 %763
  %765 = load i16, ptr %764, align 2, !tbaa !37
  %766 = zext i16 %765 to i32
  %767 = getelementptr inbounds i16, ptr %757, i64 %763
  %768 = load i16, ptr %767, align 2, !tbaa !37
  %769 = zext i16 %768 to i32
  %770 = mul nuw nsw i32 %769, %766
  %771 = icmp ult i32 %770, 128
  br i1 %771, label %811, label %772

772:                                              ; preds = %762
  %773 = add nuw nsw i32 %770, 128
  %774 = lshr i32 %773, 8
  %775 = load ptr, ptr %758, align 8, !tbaa !376
  %776 = getelementptr inbounds i16, ptr %775, i64 %763
  %777 = load i16, ptr %776, align 2, !tbaa !37
  %778 = zext i16 %777 to i32
  %779 = add nuw nsw i32 %774, %778
  %780 = tail call i32 @llvm.ctlz.i32(i32 %779, i1 true), !range !384
  %781 = shl i32 %779, %780
  %782 = lshr i32 %781, 24
  %783 = and i32 %782, 127
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds [128 x float], ptr @x264_log2_lut, i64 0, i64 %784
  %786 = load float, ptr %785, align 4, !tbaa !335
  %787 = zext i32 %780 to i64
  %788 = getelementptr inbounds [32 x float], ptr @x264_log2_lz_lut, i64 0, i64 %787
  %789 = load float, ptr %788, align 4, !tbaa !335
  %790 = tail call i32 @llvm.ctlz.i32(i32 %774, i1 true), !range !384
  %791 = shl i32 %774, %790
  %792 = lshr i32 %791, 24
  %793 = and i32 %792, 127
  %794 = zext i32 %793 to i64
  %795 = getelementptr inbounds [128 x float], ptr @x264_log2_lut, i64 0, i64 %794
  %796 = load float, ptr %795, align 4, !tbaa !335
  %797 = zext i32 %790 to i64
  %798 = getelementptr inbounds [32 x float], ptr @x264_log2_lz_lut, i64 0, i64 %797
  %799 = load float, ptr %798, align 4, !tbaa !335
  %800 = fadd fast float %786, %746
  %801 = fadd fast float %800, %789
  %802 = fadd fast float %796, %799
  %803 = fsub fast float %801, %802
  %804 = load ptr, ptr %759, align 16, !tbaa !385
  %805 = getelementptr inbounds float, ptr %804, i64 %763
  %806 = load float, ptr %805, align 4, !tbaa !335
  %807 = fmul fast float %803, %750
  %808 = fsub fast float %806, %807
  %809 = load ptr, ptr %760, align 8, !tbaa !386
  %810 = getelementptr inbounds float, ptr %809, i64 %763
  store float %808, ptr %810, align 4, !tbaa !335
  br label %811

811:                                              ; preds = %772, %762
  %812 = add nuw nsw i64 %763, 1
  %813 = icmp eq i64 %812, %761
  br i1 %813, label %814, label %762, !llvm.loop !387

814:                                              ; preds = %811, %745
  %815 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 20
  %816 = load i32, ptr %815, align 16, !tbaa !359
  %817 = icmp ne i32 %816, 0
  %818 = icmp sgt i32 %734, 1
  %819 = select i1 %817, i1 %818, i1 false
  br i1 %819, label %820, label %894

820:                                              ; preds = %814
  %821 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %822 = load i32, ptr %821, align 8, !tbaa !336
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %824, label %894

824:                                              ; preds = %820
  %825 = load float, ptr %747, align 8, !tbaa !382
  %826 = fmul fast float %825, 5.000000e+00
  %827 = fsub fast float 5.000000e+00, %826
  br i1 %752, label %828, label %894

828:                                              ; preds = %824
  %829 = add nuw nsw i32 %734, 1
  %830 = lshr i32 %829, 1
  %831 = add nsw i32 %830, %735
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds ptr, ptr %5, i64 %832
  %834 = load ptr, ptr %833, align 8, !tbaa !46
  %835 = getelementptr inbounds %struct.x264_frame, ptr %834, i64 0, i32 63
  %836 = load ptr, ptr %835, align 16, !tbaa !325
  %837 = getelementptr inbounds %struct.x264_frame, ptr %834, i64 0, i32 65
  %838 = load ptr, ptr %837, align 16, !tbaa !383
  %839 = getelementptr inbounds %struct.x264_frame, ptr %834, i64 0, i32 64
  %840 = getelementptr inbounds %struct.x264_frame, ptr %834, i64 0, i32 61
  %841 = getelementptr inbounds %struct.x264_frame, ptr %834, i64 0, i32 60
  %842 = zext i32 %751 to i64
  br label %843

843:                                              ; preds = %891, %828
  %844 = phi i64 [ 0, %828 ], [ %892, %891 ]
  %845 = getelementptr inbounds i16, ptr %836, i64 %844
  %846 = load i16, ptr %845, align 2, !tbaa !37
  %847 = zext i16 %846 to i32
  %848 = getelementptr inbounds i16, ptr %838, i64 %844
  %849 = load i16, ptr %848, align 2, !tbaa !37
  %850 = zext i16 %849 to i32
  %851 = mul nuw nsw i32 %850, %847
  %852 = icmp ult i32 %851, 128
  br i1 %852, label %891, label %853

853:                                              ; preds = %843
  %854 = add nuw nsw i32 %851, 128
  %855 = lshr i32 %854, 8
  %856 = load ptr, ptr %839, align 8, !tbaa !376
  %857 = getelementptr inbounds i16, ptr %856, i64 %844
  %858 = load i16, ptr %857, align 2, !tbaa !37
  %859 = zext i16 %858 to i32
  %860 = add nuw nsw i32 %855, %859
  %861 = tail call i32 @llvm.ctlz.i32(i32 %860, i1 true), !range !384
  %862 = shl i32 %860, %861
  %863 = lshr i32 %862, 24
  %864 = and i32 %863, 127
  %865 = zext i32 %864 to i64
  %866 = getelementptr inbounds [128 x float], ptr @x264_log2_lut, i64 0, i64 %865
  %867 = load float, ptr %866, align 4, !tbaa !335
  %868 = zext i32 %861 to i64
  %869 = getelementptr inbounds [32 x float], ptr @x264_log2_lz_lut, i64 0, i64 %868
  %870 = load float, ptr %869, align 4, !tbaa !335
  %871 = tail call i32 @llvm.ctlz.i32(i32 %855, i1 true), !range !384
  %872 = shl i32 %855, %871
  %873 = lshr i32 %872, 24
  %874 = and i32 %873, 127
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds [128 x float], ptr @x264_log2_lut, i64 0, i64 %875
  %877 = load float, ptr %876, align 4, !tbaa !335
  %878 = zext i32 %871 to i64
  %879 = getelementptr inbounds [32 x float], ptr @x264_log2_lz_lut, i64 0, i64 %878
  %880 = load float, ptr %879, align 4, !tbaa !335
  %881 = fadd fast float %870, %867
  %882 = fadd fast float %877, %880
  %883 = fsub fast float %881, %882
  %884 = load ptr, ptr %840, align 16, !tbaa !385
  %885 = getelementptr inbounds float, ptr %884, i64 %844
  %886 = load float, ptr %885, align 4, !tbaa !335
  %887 = fmul fast float %883, %827
  %888 = fsub fast float %886, %887
  %889 = load ptr, ptr %841, align 8, !tbaa !386
  %890 = getelementptr inbounds float, ptr %889, i64 %844
  store float %888, ptr %890, align 4, !tbaa !335
  br label %891

891:                                              ; preds = %853, %843
  %892 = add nuw nsw i64 %844, 1
  %893 = icmp eq i64 %892, %842
  br i1 %893, label %894, label %843, !llvm.loop !387

894:                                              ; preds = %891, %824, %820, %814, %637, %607
  %895 = load i32, ptr %73, align 16, !tbaa !175
  %896 = icmp eq i32 %895, 0
  %897 = icmp sgt i32 %144, 0
  %898 = select i1 %896, i1 %897, i1 false
  br i1 %898, label %899, label %931

899:                                              ; preds = %894
  %900 = load i32, ptr %64, align 4, !tbaa !352
  %901 = icmp sgt i32 %900, 1
  %902 = zext i32 %144 to i64
  br label %903

903:                                              ; preds = %899, %927
  %904 = phi i64 [ 0, %899 ], [ %928, %927 ]
  %905 = phi i32 [ %608, %899 ], [ %929, %927 ]
  %906 = trunc i64 %904 to i32
  %907 = sub nsw i32 %906, %72
  %908 = srem i32 %907, %900
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %912, label %910

910:                                              ; preds = %903
  %911 = add nuw nsw i64 %904, 1
  br label %927

912:                                              ; preds = %903
  %913 = icmp ne i64 %904, 0
  %914 = and i1 %913, %901
  br i1 %914, label %915, label %919

915:                                              ; preds = %912
  %916 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %904
  %917 = load ptr, ptr %916, align 8, !tbaa !46
  %918 = getelementptr inbounds %struct.x264_frame, ptr %917, i64 0, i32 1
  store i32 3, ptr %918, align 4, !tbaa !350
  br label %919

919:                                              ; preds = %915, %912
  %920 = add nuw nsw i64 %904, 1
  %921 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %920
  %922 = load ptr, ptr %921, align 8, !tbaa !46
  %923 = getelementptr inbounds %struct.x264_frame, ptr %922, i64 0, i32 1
  store i32 1, ptr %923, align 4, !tbaa !350
  %924 = trunc i64 %904 to i32
  %925 = add i32 %924, 2
  %926 = tail call i32 @llvm.smin.i32(i32 %905, i32 %925)
  br label %927

927:                                              ; preds = %910, %919
  %928 = phi i64 [ %911, %910 ], [ %920, %919 ]
  %929 = phi i32 [ %905, %910 ], [ %926, %919 ]
  %930 = icmp eq i64 %928, %902
  br i1 %930, label %931, label %903, !llvm.loop !388

931:                                              ; preds = %927, %894
  %932 = phi i32 [ %608, %894 ], [ %929, %927 ]
  %933 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %934 = load i32, ptr %933, align 8, !tbaa !336
  %935 = icmp eq i32 %934, 0
  br i1 %935, label %1332, label %936

936:                                              ; preds = %931
  %937 = icmp sgt i32 %144, 1
  br i1 %937, label %938, label %952

938:                                              ; preds = %936
  %939 = zext i32 %144 to i64
  br label %940

940:                                              ; preds = %947, %938
  %941 = phi i64 [ 1, %938 ], [ %948, %947 ]
  %942 = getelementptr inbounds ptr, ptr %5, i64 %941
  %943 = load ptr, ptr %942, align 8, !tbaa !46
  %944 = getelementptr inbounds %struct.x264_frame, ptr %943, i64 0, i32 1
  %945 = load i32, ptr %944, align 4, !tbaa !350
  %946 = icmp eq i32 %945, 5
  br i1 %946, label %947, label %950

947:                                              ; preds = %940
  %948 = add nuw nsw i64 %941, 1
  %949 = icmp eq i64 %948, %939
  br i1 %949, label %952, label %940, !llvm.loop !389

950:                                              ; preds = %940
  %951 = trunc i64 %941 to i32
  br label %952

952:                                              ; preds = %947, %950, %936
  %953 = phi i32 [ 1, %936 ], [ %951, %950 ], [ %144, %947 ]
  %954 = icmp eq i32 %1, 0
  %955 = select i1 %954, i32 %953, i32 0
  %956 = zext i32 %953 to i64
  %957 = getelementptr inbounds ptr, ptr %5, i64 %956
  %958 = load ptr, ptr %957, align 8, !tbaa !46
  %959 = getelementptr inbounds %struct.x264_frame, ptr %958, i64 0, i32 74
  %960 = load i32, ptr %959, align 16, !tbaa !390
  %961 = icmp sgt i32 %960, -1
  br i1 %961, label %962, label %967

962:                                              ; preds = %952
  %963 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 20
  store i32 %960, ptr %963, align 4, !tbaa !391
  %964 = getelementptr inbounds %struct.x264_frame, ptr %958, i64 0, i32 75
  %965 = load i32, ptr %964, align 4, !tbaa !392
  %966 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 21
  store i32 %965, ptr %966, align 16, !tbaa !393
  br label %967

967:                                              ; preds = %962, %952
  %968 = icmp slt i32 %953, %144
  br i1 %968, label %971, label %969

969:                                              ; preds = %967
  %970 = zext i32 %955 to i64
  br label %1325

971:                                              ; preds = %967
  %972 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 14
  %973 = zext i32 %955 to i64
  %974 = getelementptr inbounds ptr, ptr %5, i64 %973
  %975 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 20
  %976 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 21
  %977 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %978 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  %979 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 1
  %980 = sext i32 %144 to i64
  br label %981

981:                                              ; preds = %1322, %971
  %982 = phi i32 [ 0, %971 ], [ %983, %1322 ]
  %983 = phi i32 [ %953, %971 ], [ %1323, %1322 ]
  %984 = phi i32 [ 0, %971 ], [ %1108, %1322 ]
  %985 = phi ptr [ null, %971 ], [ %1107, %1322 ]
  %986 = phi i32 [ 0, %971 ], [ %1106, %1322 ]
  %987 = icmp eq i32 %955, %983
  br i1 %987, label %1089, label %988

988:                                              ; preds = %981
  %989 = sext i32 %983 to i64
  %990 = getelementptr inbounds ptr, ptr %5, i64 %989
  %991 = load ptr, ptr %990, align 8, !tbaa !46
  %992 = getelementptr inbounds %struct.x264_frame, ptr %991, i64 0, i32 1
  %993 = load i32, ptr %992, align 4, !tbaa !350
  %994 = add i32 %993, -1
  %995 = icmp ult i32 %994, 2
  %996 = select i1 %995, i32 %983, i32 %982
  %997 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %996, i32 noundef %983, i32 noundef %983, i32 noundef 0)
  %998 = load i32, ptr %972, align 8, !tbaa !143
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1011, label %1000

1000:                                             ; preds = %988
  %1001 = load i32, ptr %609, align 8, !tbaa !337
  %1002 = icmp eq i32 %1001, 0
  br i1 %1002, label %1005, label %1003

1003:                                             ; preds = %1000
  %1004 = call fastcc i32 @x264_slicetype_frame_cost_recalculate(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef %996, i32 noundef %983, i32 noundef %983)
  br label %1011

1005:                                             ; preds = %1000
  %1006 = load ptr, ptr %990, align 8, !tbaa !46
  %1007 = sub nsw i32 %983, %996
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds %struct.x264_frame, ptr %1006, i64 0, i32 53, i64 %1008, i64 0
  %1010 = load i32, ptr %1009, align 4, !tbaa !39
  br label %1011

1011:                                             ; preds = %1005, %1003, %988
  %1012 = phi i32 [ %1004, %1003 ], [ %1010, %1005 ], [ %997, %988 ]
  %1013 = load ptr, ptr %974, align 8, !tbaa !46
  %1014 = sext i32 %986 to i64
  %1015 = getelementptr inbounds %struct.x264_frame, ptr %1013, i64 0, i32 72, i64 %1014
  store i32 %1012, ptr %1015, align 4, !tbaa !39
  %1016 = load ptr, ptr %990, align 8, !tbaa !46
  %1017 = getelementptr inbounds %struct.x264_frame, ptr %1016, i64 0, i32 1
  %1018 = load i32, ptr %1017, align 4, !tbaa !350
  %1019 = trunc i32 %1018 to i8
  %1020 = getelementptr inbounds %struct.x264_frame, ptr %1013, i64 0, i32 71, i64 %1014
  store i8 %1019, ptr %1020, align 1, !tbaa !5
  %1021 = load ptr, ptr %990, align 8, !tbaa !46
  %1022 = getelementptr inbounds %struct.x264_frame, ptr %1021, i64 0, i32 74
  %1023 = load <2 x i32>, ptr %975, align 4, !tbaa !39
  store <2 x i32> %1023, ptr %1022, align 16, !tbaa !39
  %1024 = load ptr, ptr %7, align 16, !tbaa !169
  %1025 = getelementptr i8, ptr %1024, i64 1288
  %1026 = load i32, ptr %1025, align 4, !tbaa !394
  %1027 = load i32, ptr %976, align 4, !tbaa !39
  %1028 = getelementptr inbounds %struct.x264_frame, ptr %1021, i64 0, i32 7
  store i32 %1027, ptr %1028, align 8, !tbaa !395
  %1029 = getelementptr inbounds %struct.x264_frame, ptr %1021, i64 0, i32 12
  %1030 = load i32, ptr %1029, align 16, !tbaa !396
  %1031 = load i32, ptr %975, align 4, !tbaa !39
  %1032 = sub nsw i32 %1030, %1031
  %1033 = getelementptr inbounds %struct.x264_frame, ptr %1021, i64 0, i32 8
  %1034 = shl nsw i32 %1026, 1
  %1035 = add nsw i32 %1032, %1034
  store i32 %1035, ptr %1033, align 4, !tbaa !397
  %1036 = icmp slt i32 %1035, 0
  br i1 %1036, label %1037, label %1039

1037:                                             ; preds = %1011
  %1038 = add nsw i32 %1035, %1027
  store i32 %1038, ptr %1028, align 8, !tbaa !395
  store i32 0, ptr %1033, align 4, !tbaa !397
  br label %1039

1039:                                             ; preds = %1037, %1011
  %1040 = getelementptr inbounds %struct.x264_frame, ptr %1021, i64 0, i32 16
  %1041 = load i32, ptr %1040, align 16, !tbaa !398
  %1042 = icmp eq i32 %1041, 0
  br i1 %1042, label %1043, label %1045

1043:                                             ; preds = %1039
  %1044 = load i32, ptr %976, align 4, !tbaa !39
  br label %1046

1045:                                             ; preds = %1039
  store i32 0, ptr %976, align 4, !tbaa !39
  br label %1046

1046:                                             ; preds = %1045, %1043
  %1047 = phi i32 [ %1044, %1043 ], [ 0, %1045 ]
  %1048 = getelementptr inbounds %struct.x264_frame, ptr %1021, i64 0, i32 5
  %1049 = load i32, ptr %1048, align 16, !tbaa !399
  %1050 = add nsw i32 %1049, %1047
  store i32 %1050, ptr %976, align 4, !tbaa !39
  %1051 = load i32, ptr %1048, align 16, !tbaa !399
  %1052 = load i32, ptr %975, align 4, !tbaa !39
  %1053 = add nsw i32 %1052, %1051
  store i32 %1053, ptr %975, align 4, !tbaa !39
  %1054 = load i32, ptr %1048, align 16, !tbaa !399
  %1055 = getelementptr inbounds %struct.x264_frame, ptr %1021, i64 0, i32 6
  store i32 %1054, ptr %1055, align 4, !tbaa !400
  %1056 = icmp eq ptr %985, null
  br i1 %1056, label %1057, label %1065

1057:                                             ; preds = %1046
  %1058 = getelementptr inbounds %struct.x264_sps_t, ptr %1024, i64 0, i32 24, i32 16
  %1059 = load i32, ptr %1058, align 4, !tbaa !401
  %1060 = getelementptr inbounds %struct.x264_sps_t, ptr %1024, i64 0, i32 24, i32 17
  %1061 = load i32, ptr %1060, align 4, !tbaa !402
  %1062 = load ptr, ptr %974, align 8, !tbaa !46
  %1063 = uitofp i32 %1059 to double
  %1064 = uitofp i32 %1061 to double
  br label %1080

1065:                                             ; preds = %1046
  %1066 = getelementptr inbounds %struct.x264_frame, ptr %985, i64 0, i32 6
  %1067 = load i32, ptr %1066, align 4, !tbaa !400
  %1068 = sitofp i32 %1067 to double
  %1069 = getelementptr inbounds %struct.x264_sps_t, ptr %1024, i64 0, i32 24, i32 16
  %1070 = load i32, ptr %1069, align 4, !tbaa !401
  %1071 = uitofp i32 %1070 to double
  %1072 = fmul fast double %1071, %1068
  %1073 = getelementptr inbounds %struct.x264_sps_t, ptr %1024, i64 0, i32 24, i32 17
  %1074 = load i32, ptr %1073, align 4, !tbaa !402
  %1075 = uitofp i32 %1074 to double
  %1076 = fdiv fast double %1072, %1075
  %1077 = load ptr, ptr %974, align 8, !tbaa !46
  %1078 = sext i32 %984 to i64
  %1079 = getelementptr inbounds %struct.x264_frame, ptr %1077, i64 0, i32 73, i64 %1078
  store double %1076, ptr %1079, align 8, !tbaa !403
  br label %1080

1080:                                             ; preds = %1065, %1057
  %1081 = phi double [ %1064, %1057 ], [ %1075, %1065 ]
  %1082 = phi double [ %1063, %1057 ], [ %1071, %1065 ]
  %1083 = phi ptr [ %1062, %1057 ], [ %1077, %1065 ]
  %1084 = sitofp i32 %1054 to double
  %1085 = fmul fast double %1082, %1084
  %1086 = fdiv fast double %1085, %1081
  %1087 = getelementptr inbounds %struct.x264_frame, ptr %1083, i64 0, i32 73, i64 %1014
  store double %1086, ptr %1087, align 8, !tbaa !403
  %1088 = add nsw i32 %986, 1
  br label %1089

1089:                                             ; preds = %1080, %981
  %1090 = phi i32 [ %1088, %1080 ], [ %986, %981 ]
  %1091 = phi ptr [ %1021, %1080 ], [ %985, %981 ]
  %1092 = phi i32 [ %986, %1080 ], [ %984, %981 ]
  %1093 = add nsw i32 %982, 1
  %1094 = icmp slt i32 %1093, %983
  br i1 %1094, label %1097, label %1095

1095:                                             ; preds = %1089
  %1096 = sext i32 %983 to i64
  br label %1104

1097:                                             ; preds = %1089
  %1098 = sext i32 %1093 to i64
  %1099 = sext i32 %983 to i64
  %1100 = sext i32 %982 to i64
  %1101 = sext i32 %1090 to i64
  br label %1111

1102:                                             ; preds = %1297
  %1103 = trunc i64 %1305 to i32
  br label %1104

1104:                                             ; preds = %1102, %1095
  %1105 = phi i64 [ %1096, %1095 ], [ %1099, %1102 ]
  %1106 = phi i32 [ %1090, %1095 ], [ %1103, %1102 ]
  %1107 = phi ptr [ %1091, %1095 ], [ %1238, %1102 ]
  %1108 = phi i32 [ %1092, %1095 ], [ %1307, %1102 ]
  %1109 = tail call i32 @llvm.smax.i32(i32 %983, i32 %144)
  %1110 = add i32 %1109, 1
  br label %1310

1111:                                             ; preds = %1297, %1097
  %1112 = phi i64 [ %1101, %1097 ], [ %1305, %1297 ]
  %1113 = phi i64 [ %1098, %1097 ], [ %1306, %1297 ]
  %1114 = phi i32 [ %1092, %1097 ], [ %1307, %1297 ]
  %1115 = phi ptr [ %1091, %1097 ], [ %1238, %1297 ]
  %1116 = trunc i64 %1113 to i32
  %1117 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %982, i32 noundef %983, i32 noundef %1116, i32 noundef 0)
  %1118 = load i32, ptr %972, align 8, !tbaa !143
  %1119 = icmp eq i32 %1118, 0
  br i1 %1119, label %1232, label %1120

1120:                                             ; preds = %1111
  %1121 = load i32, ptr %609, align 8, !tbaa !337
  %1122 = icmp eq i32 %1121, 0
  %1123 = getelementptr inbounds ptr, ptr %5, i64 %1113
  %1124 = load ptr, ptr %1123, align 8, !tbaa !46
  %1125 = sub nsw i64 %1113, %1100
  %1126 = sub nsw i64 %1099, %1113
  br i1 %1122, label %1229, label %1127

1127:                                             ; preds = %1120
  %1128 = getelementptr inbounds %struct.x264_frame, ptr %1124, i64 0, i32 56, i64 %1125, i64 %1126
  %1129 = load ptr, ptr %1128, align 8, !tbaa !46
  %1130 = getelementptr inbounds %struct.x264_frame, ptr %1124, i64 0, i32 1
  %1131 = load i32, ptr %1130, align 4, !tbaa !350
  %1132 = and i32 %1131, -2
  %1133 = icmp eq i32 %1132, 4
  %1134 = getelementptr inbounds %struct.x264_frame, ptr %1124, i64 0, i32 61
  %1135 = getelementptr inbounds %struct.x264_frame, ptr %1124, i64 0, i32 60
  %1136 = select i1 %1133, ptr %1134, ptr %1135
  %1137 = load ptr, ptr %1136, align 8, !tbaa !46
  %1138 = load ptr, ptr %7, align 16, !tbaa !169
  %1139 = getelementptr inbounds %struct.x264_sps_t, ptr %1138, i64 0, i32 17
  %1140 = load i32, ptr %1139, align 4, !tbaa !39
  %1141 = add nsw i32 %1140, -1
  store i32 %1141, ptr %977, align 4, !tbaa !62
  %1142 = icmp sgt i32 %1140, 0
  br i1 %1142, label %1143, label %1232

1143:                                             ; preds = %1127
  %1144 = getelementptr inbounds %struct.x264_sps_t, ptr %1138, i64 0, i32 16
  %1145 = getelementptr inbounds %struct.x264_frame, ptr %1124, i64 0, i32 46, i64 %1125, i64 %1126
  br label %1151

1146:                                             ; preds = %1224, %1151
  %1147 = phi i32 [ %1159, %1151 ], [ %1201, %1224 ]
  %1148 = phi i32 [ %1153, %1151 ], [ %1225, %1224 ]
  %1149 = add nsw i32 %1147, -1
  store i32 %1149, ptr %977, align 4, !tbaa !62
  %1150 = icmp sgt i32 %1147, 0
  br i1 %1150, label %1151, label %1232, !llvm.loop !404

1151:                                             ; preds = %1146, %1143
  %1152 = phi i32 [ %1141, %1143 ], [ %1149, %1146 ]
  %1153 = phi i32 [ 0, %1143 ], [ %1148, %1146 ]
  %1154 = zext i32 %1152 to i64
  %1155 = getelementptr inbounds i32, ptr %1129, i64 %1154
  store i32 0, ptr %1155, align 4, !tbaa !39
  %1156 = load i32, ptr %1144, align 4, !tbaa !39
  %1157 = add nsw i32 %1156, -1
  store i32 %1157, ptr %978, align 16, !tbaa !168
  %1158 = icmp sgt i32 %1156, 0
  %1159 = load i32, ptr %977, align 4, !tbaa !39
  br i1 %1158, label %1160, label %1146

1160:                                             ; preds = %1151
  %1161 = load ptr, ptr %1145, align 8, !tbaa !46
  br label %1162

1162:                                             ; preds = %1224, %1160
  %1163 = phi i32 [ %1159, %1160 ], [ %1201, %1224 ]
  %1164 = phi i32 [ %1157, %1160 ], [ %1227, %1224 ]
  %1165 = phi i32 [ %1153, %1160 ], [ %1225, %1224 ]
  %1166 = load i32, ptr %979, align 4, !tbaa !65
  %1167 = mul nsw i32 %1166, %1163
  %1168 = add nsw i32 %1167, %1164
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds i16, ptr %1161, i64 %1169
  %1171 = load i16, ptr %1170, align 2, !tbaa !37
  %1172 = and i16 %1171, 16383
  %1173 = zext i16 %1172 to i32
  %1174 = getelementptr inbounds float, ptr %1137, i64 %1169
  %1175 = load float, ptr %1174, align 4, !tbaa !335
  %1176 = fmul fast float %1175, 0x4025555560000000
  %1177 = fsub fast float 5.125000e+02, %1176
  %1178 = fptosi float %1177 to i32
  %1179 = icmp slt i32 %1178, 0
  br i1 %1179, label %1192, label %1180

1180:                                             ; preds = %1162
  %1181 = icmp ugt i32 %1178, 1023
  br i1 %1181, label %1192, label %1182

1182:                                             ; preds = %1180
  %1183 = and i32 %1178, 63
  %1184 = zext i32 %1183 to i64
  %1185 = getelementptr inbounds [64 x i8], ptr @x264_exp2_lut, i64 0, i64 %1184
  %1186 = load i8, ptr %1185, align 1, !tbaa !5
  %1187 = zext i8 %1186 to i32
  %1188 = or i32 %1187, 256
  %1189 = lshr i32 %1178, 6
  %1190 = shl nuw nsw i32 %1188, %1189
  %1191 = lshr i32 %1190, 8
  br label %1192

1192:                                             ; preds = %1182, %1180, %1162
  %1193 = phi i32 [ %1191, %1182 ], [ 0, %1162 ], [ 65535, %1180 ]
  %1194 = mul nuw nsw i32 %1193, %1173
  %1195 = add nuw nsw i32 %1194, 128
  %1196 = lshr i32 %1195, 8
  %1197 = sext i32 %1163 to i64
  %1198 = getelementptr inbounds i32, ptr %1129, i64 %1197
  %1199 = load i32, ptr %1198, align 4, !tbaa !39
  %1200 = add nsw i32 %1196, %1199
  store i32 %1200, ptr %1198, align 4, !tbaa !39
  %1201 = load i32, ptr %977, align 4, !tbaa !39
  %1202 = icmp sgt i32 %1201, 0
  br i1 %1202, label %1203, label %1214

1203:                                             ; preds = %1192
  %1204 = load i32, ptr %1139, align 4, !tbaa !179
  %1205 = add nsw i32 %1204, -1
  %1206 = icmp slt i32 %1201, %1205
  br i1 %1206, label %1207, label %1214

1207:                                             ; preds = %1203
  %1208 = load i32, ptr %978, align 16, !tbaa !168
  %1209 = icmp sgt i32 %1208, 0
  br i1 %1209, label %1210, label %1214

1210:                                             ; preds = %1207
  %1211 = load i32, ptr %1144, align 4, !tbaa !170
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1208, %1212
  br i1 %1213, label %1222, label %1216

1214:                                             ; preds = %1207, %1203, %1192
  %1215 = load i32, ptr %1144, align 4, !tbaa !170
  br label %1216

1216:                                             ; preds = %1214, %1210
  %1217 = phi i32 [ %1215, %1214 ], [ %1211, %1210 ]
  %1218 = icmp slt i32 %1217, 3
  br i1 %1218, label %1222, label %1219

1219:                                             ; preds = %1216
  %1220 = load i32, ptr %1139, align 4, !tbaa !179
  %1221 = icmp slt i32 %1220, 3
  br i1 %1221, label %1222, label %1224

1222:                                             ; preds = %1219, %1216, %1210
  %1223 = add nsw i32 %1196, %1165
  br label %1224

1224:                                             ; preds = %1222, %1219
  %1225 = phi i32 [ %1223, %1222 ], [ %1165, %1219 ]
  %1226 = load i32, ptr %978, align 4, !tbaa !39
  %1227 = add nsw i32 %1226, -1
  store i32 %1227, ptr %978, align 16, !tbaa !168
  %1228 = icmp sgt i32 %1226, 0
  br i1 %1228, label %1162, label %1146, !llvm.loop !405

1229:                                             ; preds = %1120
  %1230 = getelementptr inbounds %struct.x264_frame, ptr %1124, i64 0, i32 53, i64 %1125, i64 %1126
  %1231 = load i32, ptr %1230, align 4, !tbaa !39
  br label %1232

1232:                                             ; preds = %1146, %1229, %1127, %1111
  %1233 = phi i32 [ %1231, %1229 ], [ %1117, %1111 ], [ 0, %1127 ], [ %1148, %1146 ]
  %1234 = load ptr, ptr %974, align 8, !tbaa !46
  %1235 = getelementptr inbounds %struct.x264_frame, ptr %1234, i64 0, i32 72, i64 %1112
  store i32 %1233, ptr %1235, align 4, !tbaa !39
  %1236 = getelementptr inbounds %struct.x264_frame, ptr %1234, i64 0, i32 71, i64 %1112
  store i8 5, ptr %1236, align 1, !tbaa !5
  %1237 = getelementptr inbounds ptr, ptr %5, i64 %1113
  %1238 = load ptr, ptr %1237, align 8, !tbaa !46
  %1239 = getelementptr inbounds %struct.x264_frame, ptr %1238, i64 0, i32 74
  %1240 = load <2 x i32>, ptr %975, align 4, !tbaa !39
  store <2 x i32> %1240, ptr %1239, align 16, !tbaa !39
  %1241 = load ptr, ptr %7, align 16, !tbaa !169
  %1242 = getelementptr i8, ptr %1241, i64 1288
  %1243 = load i32, ptr %1242, align 4, !tbaa !394
  %1244 = load i32, ptr %976, align 4, !tbaa !39
  %1245 = getelementptr inbounds %struct.x264_frame, ptr %1238, i64 0, i32 7
  store i32 %1244, ptr %1245, align 8, !tbaa !395
  %1246 = getelementptr inbounds %struct.x264_frame, ptr %1238, i64 0, i32 12
  %1247 = load i32, ptr %1246, align 16, !tbaa !396
  %1248 = load i32, ptr %975, align 4, !tbaa !39
  %1249 = sub nsw i32 %1247, %1248
  %1250 = getelementptr inbounds %struct.x264_frame, ptr %1238, i64 0, i32 8
  %1251 = shl nsw i32 %1243, 1
  %1252 = add nsw i32 %1249, %1251
  store i32 %1252, ptr %1250, align 4, !tbaa !397
  %1253 = icmp slt i32 %1252, 0
  br i1 %1253, label %1254, label %1256

1254:                                             ; preds = %1232
  %1255 = add nsw i32 %1252, %1244
  store i32 %1255, ptr %1245, align 8, !tbaa !395
  store i32 0, ptr %1250, align 4, !tbaa !397
  br label %1256

1256:                                             ; preds = %1254, %1232
  %1257 = getelementptr inbounds %struct.x264_frame, ptr %1238, i64 0, i32 16
  %1258 = load i32, ptr %1257, align 16, !tbaa !398
  %1259 = icmp eq i32 %1258, 0
  br i1 %1259, label %1260, label %1262

1260:                                             ; preds = %1256
  %1261 = load i32, ptr %976, align 4, !tbaa !39
  br label %1263

1262:                                             ; preds = %1256
  store i32 0, ptr %976, align 4, !tbaa !39
  br label %1263

1263:                                             ; preds = %1262, %1260
  %1264 = phi i32 [ %1261, %1260 ], [ 0, %1262 ]
  %1265 = getelementptr inbounds %struct.x264_frame, ptr %1238, i64 0, i32 5
  %1266 = load i32, ptr %1265, align 16, !tbaa !399
  %1267 = add nsw i32 %1266, %1264
  store i32 %1267, ptr %976, align 4, !tbaa !39
  %1268 = load i32, ptr %1265, align 16, !tbaa !399
  %1269 = load i32, ptr %975, align 4, !tbaa !39
  %1270 = add nsw i32 %1269, %1268
  store i32 %1270, ptr %975, align 4, !tbaa !39
  %1271 = load i32, ptr %1265, align 16, !tbaa !399
  %1272 = getelementptr inbounds %struct.x264_frame, ptr %1238, i64 0, i32 6
  store i32 %1271, ptr %1272, align 4, !tbaa !400
  %1273 = icmp eq ptr %1115, null
  br i1 %1273, label %1274, label %1282

1274:                                             ; preds = %1263
  %1275 = getelementptr inbounds %struct.x264_sps_t, ptr %1241, i64 0, i32 24, i32 16
  %1276 = load i32, ptr %1275, align 4, !tbaa !401
  %1277 = getelementptr inbounds %struct.x264_sps_t, ptr %1241, i64 0, i32 24, i32 17
  %1278 = load i32, ptr %1277, align 4, !tbaa !402
  %1279 = load ptr, ptr %974, align 8, !tbaa !46
  %1280 = uitofp i32 %1276 to double
  %1281 = uitofp i32 %1278 to double
  br label %1297

1282:                                             ; preds = %1263
  %1283 = getelementptr inbounds %struct.x264_frame, ptr %1115, i64 0, i32 6
  %1284 = load i32, ptr %1283, align 4, !tbaa !400
  %1285 = sitofp i32 %1284 to double
  %1286 = getelementptr inbounds %struct.x264_sps_t, ptr %1241, i64 0, i32 24, i32 16
  %1287 = load i32, ptr %1286, align 4, !tbaa !401
  %1288 = uitofp i32 %1287 to double
  %1289 = fmul fast double %1288, %1285
  %1290 = getelementptr inbounds %struct.x264_sps_t, ptr %1241, i64 0, i32 24, i32 17
  %1291 = load i32, ptr %1290, align 4, !tbaa !402
  %1292 = uitofp i32 %1291 to double
  %1293 = fdiv fast double %1289, %1292
  %1294 = load ptr, ptr %974, align 8, !tbaa !46
  %1295 = sext i32 %1114 to i64
  %1296 = getelementptr inbounds %struct.x264_frame, ptr %1294, i64 0, i32 73, i64 %1295
  store double %1293, ptr %1296, align 8, !tbaa !403
  br label %1297

1297:                                             ; preds = %1282, %1274
  %1298 = phi double [ %1281, %1274 ], [ %1292, %1282 ]
  %1299 = phi double [ %1280, %1274 ], [ %1288, %1282 ]
  %1300 = phi ptr [ %1279, %1274 ], [ %1294, %1282 ]
  %1301 = sitofp i32 %1271 to double
  %1302 = fmul fast double %1299, %1301
  %1303 = fdiv fast double %1302, %1298
  %1304 = getelementptr inbounds %struct.x264_frame, ptr %1300, i64 0, i32 73, i64 %1112
  store double %1303, ptr %1304, align 8, !tbaa !403
  %1305 = add nsw i64 %1112, 1
  %1306 = add nsw i64 %1113, 1
  %1307 = trunc i64 %1112 to i32
  %1308 = trunc i64 %1306 to i32
  %1309 = icmp eq i32 %983, %1308
  br i1 %1309, label %1102, label %1111, !llvm.loop !406

1310:                                             ; preds = %1313, %1104
  %1311 = phi i64 [ %1105, %1104 ], [ %1314, %1313 ]
  %1312 = icmp slt i64 %1311, %980
  br i1 %1312, label %1313, label %1322

1313:                                             ; preds = %1310
  %1314 = add nsw i64 %1311, 1
  %1315 = getelementptr inbounds ptr, ptr %5, i64 %1314
  %1316 = load ptr, ptr %1315, align 8, !tbaa !46
  %1317 = getelementptr inbounds %struct.x264_frame, ptr %1316, i64 0, i32 1
  %1318 = load i32, ptr %1317, align 4, !tbaa !350
  %1319 = icmp eq i32 %1318, 5
  br i1 %1319, label %1310, label %1320, !llvm.loop !407

1320:                                             ; preds = %1313
  %1321 = trunc i64 %1314 to i32
  br label %1322

1322:                                             ; preds = %1310, %1320
  %1323 = phi i32 [ %1321, %1320 ], [ %1110, %1310 ]
  %1324 = icmp slt i32 %1323, %144
  br i1 %1324, label %981, label %1325, !llvm.loop !408

1325:                                             ; preds = %1322, %969
  %1326 = phi i64 [ %970, %969 ], [ %973, %1322 ]
  %1327 = phi i32 [ 0, %969 ], [ %1106, %1322 ]
  %1328 = getelementptr inbounds ptr, ptr %5, i64 %1326
  %1329 = load ptr, ptr %1328, align 8, !tbaa !46
  %1330 = sext i32 %1327 to i64
  %1331 = getelementptr inbounds %struct.x264_frame, ptr %1329, i64 0, i32 71, i64 %1330
  store i8 0, ptr %1331, align 1, !tbaa !5
  br label %1332

1332:                                             ; preds = %1325, %931
  %1333 = icmp sgt i32 %932, %144
  br i1 %1333, label %1392, label %1334

1334:                                             ; preds = %1332
  %1335 = sext i32 %932 to i64
  %1336 = add i32 %144, 1
  %1337 = sub i32 %1336, %932
  %1338 = sub i32 %144, %932
  %1339 = and i32 %1337, 7
  %1340 = icmp eq i32 %1339, 0
  br i1 %1340, label %1350, label %1341

1341:                                             ; preds = %1334, %1341
  %1342 = phi i64 [ %1347, %1341 ], [ %1335, %1334 ]
  %1343 = phi i32 [ %1348, %1341 ], [ 0, %1334 ]
  %1344 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1342
  %1345 = load ptr, ptr %1344, align 8, !tbaa !46
  %1346 = getelementptr inbounds %struct.x264_frame, ptr %1345, i64 0, i32 1
  store i32 0, ptr %1346, align 4, !tbaa !350
  %1347 = add nsw i64 %1342, 1
  %1348 = add i32 %1343, 1
  %1349 = icmp eq i32 %1348, %1339
  br i1 %1349, label %1350, label %1341, !llvm.loop !409

1350:                                             ; preds = %1341, %1334
  %1351 = phi i64 [ %1335, %1334 ], [ %1347, %1341 ]
  %1352 = icmp ult i32 %1338, 7
  br i1 %1352, label %1392, label %1353

1353:                                             ; preds = %1350, %1353
  %1354 = phi i64 [ %1386, %1353 ], [ %1351, %1350 ]
  %1355 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1354
  %1356 = load ptr, ptr %1355, align 8, !tbaa !46
  %1357 = getelementptr inbounds %struct.x264_frame, ptr %1356, i64 0, i32 1
  store i32 0, ptr %1357, align 4, !tbaa !350
  %1358 = add nsw i64 %1354, 1
  %1359 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1358
  %1360 = load ptr, ptr %1359, align 8, !tbaa !46
  %1361 = getelementptr inbounds %struct.x264_frame, ptr %1360, i64 0, i32 1
  store i32 0, ptr %1361, align 4, !tbaa !350
  %1362 = add nsw i64 %1354, 2
  %1363 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1362
  %1364 = load ptr, ptr %1363, align 8, !tbaa !46
  %1365 = getelementptr inbounds %struct.x264_frame, ptr %1364, i64 0, i32 1
  store i32 0, ptr %1365, align 4, !tbaa !350
  %1366 = add nsw i64 %1354, 3
  %1367 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1366
  %1368 = load ptr, ptr %1367, align 8, !tbaa !46
  %1369 = getelementptr inbounds %struct.x264_frame, ptr %1368, i64 0, i32 1
  store i32 0, ptr %1369, align 4, !tbaa !350
  %1370 = add nsw i64 %1354, 4
  %1371 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1370
  %1372 = load ptr, ptr %1371, align 8, !tbaa !46
  %1373 = getelementptr inbounds %struct.x264_frame, ptr %1372, i64 0, i32 1
  store i32 0, ptr %1373, align 4, !tbaa !350
  %1374 = add nsw i64 %1354, 5
  %1375 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1374
  %1376 = load ptr, ptr %1375, align 8, !tbaa !46
  %1377 = getelementptr inbounds %struct.x264_frame, ptr %1376, i64 0, i32 1
  store i32 0, ptr %1377, align 4, !tbaa !350
  %1378 = add nsw i64 %1354, 6
  %1379 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1378
  %1380 = load ptr, ptr %1379, align 8, !tbaa !46
  %1381 = getelementptr inbounds %struct.x264_frame, ptr %1380, i64 0, i32 1
  store i32 0, ptr %1381, align 4, !tbaa !350
  %1382 = add nsw i64 %1354, 7
  %1383 = getelementptr inbounds [253 x ptr], ptr %5, i64 0, i64 %1382
  %1384 = load ptr, ptr %1383, align 8, !tbaa !46
  %1385 = getelementptr inbounds %struct.x264_frame, ptr %1384, i64 0, i32 1
  store i32 0, ptr %1385, align 4, !tbaa !350
  %1386 = add nsw i64 %1354, 8
  %1387 = trunc i64 %1386 to i32
  %1388 = icmp eq i32 %1336, %1387
  br i1 %1388, label %1392, label %1353, !llvm.loop !410

1389:                                             ; preds = %132, %141, %151
  %1390 = phi ptr [ %152, %151 ], [ %142, %141 ], [ %112, %132 ]
  %1391 = getelementptr inbounds %struct.x264_frame, ptr %1390, i64 0, i32 1
  store i32 %120, ptr %1391, align 4, !tbaa !350
  br label %1392

1392:                                             ; preds = %1350, %1353, %1389, %41, %1332, %133, %138, %60, %36
  call void @llvm.lifetime.end.p0(i64 2024, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 14176, ptr nonnull %4) #17
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @scenecut(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %60, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 17
  %11 = load i32, ptr %10, align 4, !tbaa !356
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 18
  %15 = load i32, ptr %14, align 8, !tbaa !357
  %16 = icmp eq i32 %15, 2
  %17 = add nsw i32 %3, 1
  %18 = add nsw i32 %17, %11
  %19 = add nsw i32 %3, 2
  %20 = select i1 %16, i32 %18, i32 %19
  %21 = tail call i32 @llvm.smin.i32(i32 %20, i32 %6)
  %22 = icmp slt i32 %21, %4
  br i1 %22, label %26, label %23

23:                                               ; preds = %13
  %24 = sext i32 %4 to i64
  %25 = sext i32 %3 to i64
  br label %30

26:                                               ; preds = %44, %13
  %27 = icmp sgt i32 %21, %3
  br i1 %27, label %28, label %60

28:                                               ; preds = %26
  %29 = sext i32 %3 to i64
  br label %47

30:                                               ; preds = %23, %44
  %31 = phi i64 [ %24, %23 ], [ %45, %44 ]
  %32 = trunc i64 %31 to i32
  %33 = tail call fastcc i32 @scenecut_internal(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %32, i32 noundef 0), !range !84
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %32, %3
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %30, %37
  %38 = phi i64 [ %42, %37 ], [ %31, %30 ]
  %39 = getelementptr inbounds ptr, ptr %2, i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !46
  %41 = getelementptr inbounds %struct.x264_frame, ptr %40, i64 0, i32 66
  store i32 0, ptr %41, align 8, !tbaa !370
  %42 = add nsw i64 %38, -1
  %43 = icmp sgt i64 %42, %25
  br i1 %43, label %37, label %44, !llvm.loop !411

44:                                               ; preds = %37, %30
  %45 = add nsw i64 %31, 1
  %46 = icmp sgt i32 %21, %32
  br i1 %46, label %30, label %26, !llvm.loop !412

47:                                               ; preds = %28, %56
  %48 = phi i64 [ %29, %28 ], [ %57, %56 ]
  %49 = trunc i64 %48 to i32
  %50 = tail call fastcc i32 @scenecut_internal(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %49, i32 noundef %21, i32 noundef 0), !range !84
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds ptr, ptr %2, i64 %48
  %54 = load ptr, ptr %53, align 8, !tbaa !46
  %55 = getelementptr inbounds %struct.x264_frame, ptr %54, i64 0, i32 66
  store i32 0, ptr %55, align 8, !tbaa !370
  br label %56

56:                                               ; preds = %47, %52
  %57 = add nsw i64 %48, 1
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %21, %58
  br i1 %59, label %60, label %47, !llvm.loop !413

60:                                               ; preds = %56, %26, %9, %7
  %61 = sext i32 %4 to i64
  %62 = getelementptr inbounds ptr, ptr %2, i64 %61
  %63 = load ptr, ptr %62, align 8, !tbaa !46
  %64 = getelementptr inbounds %struct.x264_frame, ptr %63, i64 0, i32 66
  %65 = load i32, ptr %64, align 8, !tbaa !370
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  %68 = tail call fastcc i32 @scenecut_internal(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %2, i32 noundef %3, i32 noundef %4, i32 noundef %5), !range !84
  br label %69

69:                                               ; preds = %60, %67
  %70 = phi i32 [ %68, %67 ], [ 0, %60 ]
  ret i32 %70
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strspn(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @x264_slicetype_decide(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca [18 x ptr], align 16
  %3 = alloca %struct.x264_mb_analysis_t, align 16
  %4 = alloca [2 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %2) #17
  %5 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 75
  %6 = load ptr, ptr %5, align 16, !tbaa !343
  %7 = getelementptr inbounds %struct.x264_lookahead_t, ptr %6, i64 0, i32 7, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !344
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %593, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42
  %12 = load i32, ptr %11, align 8, !tbaa !414
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 18
  %16 = load i32, ptr %15, align 8, !tbaa !415
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %20 = load i32, ptr %19, align 8, !tbaa !336
  %21 = icmp ne i32 %20, 0
  %22 = icmp sgt i32 %8, 0
  %23 = and i1 %21, %22
  br i1 %23, label %26, label %105

24:                                               ; preds = %14, %10
  %25 = icmp sgt i32 %8, 0
  br i1 %25, label %26, label %105

26:                                               ; preds = %18, %24
  %27 = getelementptr inbounds %struct.x264_lookahead_t, ptr %6, i64 0, i32 7
  %28 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 47
  %29 = load i32, ptr %28, align 8, !tbaa !416
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 17
  %32 = load ptr, ptr %27, align 8, !tbaa !349
  %33 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 16
  %34 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 15
  %35 = load i32, ptr %31, align 16, !tbaa !417
  %36 = load i32, ptr %33, align 4, !tbaa !418
  %37 = zext i32 %8 to i64
  br label %38

38:                                               ; preds = %26, %98
  %39 = phi i64 [ 0, %26 ], [ %102, %98 ]
  %40 = phi i32 [ %36, %26 ], [ %101, %98 ]
  %41 = phi i32 [ %35, %26 ], [ %99, %98 ]
  %42 = phi i32 [ %8, %26 ], [ %100, %98 ]
  br i1 %30, label %63, label %43

43:                                               ; preds = %38
  %44 = add nsw i32 %42, -1
  %45 = icmp sgt i32 %42, 1
  br i1 %45, label %46, label %59

46:                                               ; preds = %43
  %47 = add nuw nsw i64 %39, 1
  %48 = getelementptr inbounds ptr, ptr %32, i64 %47
  %49 = load ptr, ptr %48, align 8, !tbaa !46
  %50 = getelementptr inbounds %struct.x264_frame, ptr %49, i64 0, i32 3
  %51 = load i64, ptr %50, align 16, !tbaa !419
  %52 = getelementptr inbounds ptr, ptr %32, i64 %39
  %53 = load ptr, ptr %52, align 8, !tbaa !46
  %54 = getelementptr inbounds %struct.x264_frame, ptr %53, i64 0, i32 3
  %55 = load i64, ptr %54, align 16, !tbaa !419
  %56 = sub nsw i64 %51, %55
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %57, 1
  br label %72

59:                                               ; preds = %43
  %60 = getelementptr inbounds ptr, ptr %32, i64 %39
  %61 = load ptr, ptr %60, align 8, !tbaa !46
  %62 = getelementptr inbounds %struct.x264_frame, ptr %61, i64 0, i32 5
  store i32 %41, ptr %62, align 16, !tbaa !399
  br label %90

63:                                               ; preds = %38
  %64 = getelementptr inbounds ptr, ptr %32, i64 %39
  %65 = load ptr, ptr %64, align 8, !tbaa !46
  %66 = getelementptr inbounds %struct.x264_frame, ptr %65, i64 0, i32 15
  %67 = load i32, ptr %66, align 4, !tbaa !420
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [10 x i8], ptr @delta_tfi_divisor, i64 0, i64 %68
  %70 = load i8, ptr %69, align 1, !tbaa !5
  %71 = zext i8 %70 to i32
  br label %72

72:                                               ; preds = %46, %63
  %73 = phi ptr [ %53, %46 ], [ %65, %63 ]
  %74 = phi i32 [ %58, %46 ], [ %71, %63 ]
  %75 = phi i32 [ %44, %46 ], [ %42, %63 ]
  %76 = getelementptr inbounds %struct.x264_frame, ptr %73, i64 0, i32 5
  store i32 %74, ptr %76, align 16, !tbaa !399
  %77 = getelementptr inbounds ptr, ptr %32, i64 %39
  %78 = load ptr, ptr %77, align 8, !tbaa !46
  %79 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 5
  %80 = load i32, ptr %79, align 16, !tbaa !399
  %81 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 10
  %82 = load i32, ptr %81, align 8, !tbaa !314
  %83 = icmp sgt i32 %82, %40
  %84 = icmp sgt i32 %75, 0
  %85 = select i1 %83, i1 %84, i1 false
  br i1 %85, label %86, label %90

86:                                               ; preds = %72
  %87 = load i32, ptr %34, align 8, !tbaa !421
  %88 = getelementptr inbounds %struct.x264_frame, ptr %78, i64 0, i32 12
  store i32 %87, ptr %88, align 16, !tbaa !396
  %89 = add nsw i32 %87, %80
  store i32 %89, ptr %34, align 8, !tbaa !421
  store i32 %82, ptr %33, align 4, !tbaa !418
  br label %98

90:                                               ; preds = %59, %72
  %91 = phi i32 [ %41, %59 ], [ %80, %72 ]
  %92 = phi ptr [ %61, %59 ], [ %78, %72 ]
  %93 = phi i32 [ %44, %59 ], [ %75, %72 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = load i32, ptr %34, align 8, !tbaa !421
  %97 = getelementptr inbounds %struct.x264_frame, ptr %92, i64 0, i32 12
  store i32 %96, ptr %97, align 16, !tbaa !396
  br label %98

98:                                               ; preds = %86, %95, %90
  %99 = phi i32 [ %80, %86 ], [ %91, %95 ], [ %91, %90 ]
  %100 = phi i32 [ %75, %86 ], [ 0, %95 ], [ %93, %90 ]
  %101 = phi i32 [ %82, %86 ], [ %40, %95 ], [ %40, %90 ]
  %102 = add nuw nsw i64 %39, 1
  %103 = icmp eq i64 %102, %37
  br i1 %103, label %104, label %38, !llvm.loop !422

104:                                              ; preds = %98
  store i32 %99, ptr %31, align 16, !tbaa !417
  br label %105

105:                                              ; preds = %24, %104, %18
  %106 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 20
  %107 = load i32, ptr %106, align 8, !tbaa !423
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %133, label %109

109:                                              ; preds = %105
  %110 = icmp sgt i32 %8, 0
  br i1 %110, label %111, label %158

111:                                              ; preds = %109
  %112 = getelementptr inbounds %struct.x264_lookahead_t, ptr %6, i64 0, i32 7
  %113 = load ptr, ptr %112, align 8, !tbaa !349
  br label %114

114:                                              ; preds = %111, %114
  %115 = phi ptr [ %113, %111 ], [ %124, %114 ]
  %116 = phi i64 [ 0, %111 ], [ %128, %114 ]
  %117 = getelementptr inbounds ptr, ptr %115, i64 %116
  %118 = load ptr, ptr %117, align 8, !tbaa !46
  %119 = getelementptr inbounds %struct.x264_frame, ptr %118, i64 0, i32 10
  %120 = load i32, ptr %119, align 8, !tbaa !314
  %121 = tail call i32 @x264_ratecontrol_slice_type(ptr noundef nonnull %0, i32 noundef %120) #17
  %122 = load ptr, ptr %5, align 16, !tbaa !343
  %123 = getelementptr inbounds %struct.x264_lookahead_t, ptr %122, i64 0, i32 7
  %124 = load ptr, ptr %123, align 8, !tbaa !349
  %125 = getelementptr inbounds ptr, ptr %124, i64 %116
  %126 = load ptr, ptr %125, align 8, !tbaa !46
  %127 = getelementptr inbounds %struct.x264_frame, ptr %126, i64 0, i32 1
  store i32 %121, ptr %127, align 4, !tbaa !350
  %128 = add nuw nsw i64 %116, 1
  %129 = getelementptr inbounds %struct.x264_lookahead_t, ptr %122, i64 0, i32 7, i32 2
  %130 = load i32, ptr %129, align 4, !tbaa !344
  %131 = sext i32 %130 to i64
  %132 = icmp slt i64 %128, %131
  br i1 %132, label %114, label %158, !llvm.loop !424

133:                                              ; preds = %105
  %134 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 17
  %135 = load i32, ptr %134, align 4, !tbaa !356
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 18
  %139 = load i32, ptr %138, align 8, !tbaa !357
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %157

141:                                              ; preds = %137, %133
  %142 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 15
  %143 = load i32, ptr %142, align 4, !tbaa !355
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 16
  %147 = load i32, ptr %146, align 8, !tbaa !337
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %157

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %151 = load i32, ptr %150, align 8, !tbaa !336
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 17
  %155 = load i32, ptr %154, align 4, !tbaa !425
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %158, label %157

157:                                              ; preds = %153, %145, %141, %137
  tail call void @x264_slicetype_analyse(ptr noundef nonnull %0, i32 noundef 0)
  br label %158

158:                                              ; preds = %114, %109, %149, %153, %157
  %159 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 20
  %160 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 12
  %161 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 16
  %162 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 13
  %163 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 17
  br label %164

164:                                              ; preds = %268, %158
  %165 = phi i32 [ 0, %158 ], [ %269, %268 ]
  %166 = phi i32 [ 0, %158 ], [ %270, %268 ]
  %167 = load ptr, ptr %5, align 16, !tbaa !343
  %168 = getelementptr inbounds %struct.x264_lookahead_t, ptr %167, i64 0, i32 7
  %169 = load ptr, ptr %168, align 8, !tbaa !349
  %170 = sext i32 %166 to i64
  %171 = getelementptr inbounds ptr, ptr %169, i64 %170
  %172 = load ptr, ptr %171, align 8, !tbaa !46
  %173 = getelementptr inbounds %struct.x264_frame, ptr %172, i64 0, i32 1
  %174 = load i32, ptr %173, align 4, !tbaa !350
  %175 = icmp eq i32 %174, 4
  br i1 %175, label %176, label %198

176:                                              ; preds = %164
  %177 = load i32, ptr %159, align 16, !tbaa !359
  %178 = icmp slt i32 %177, 2
  %179 = icmp eq i32 %165, %177
  %180 = select i1 %178, i1 %179, i1 false
  br i1 %180, label %181, label %187

181:                                              ; preds = %176
  store i32 5, ptr %173, align 4, !tbaa !350
  %182 = getelementptr inbounds %struct.x264_frame, ptr %172, i64 0, i32 10
  %183 = load i32, ptr %182, align 8, !tbaa !314
  %184 = sext i32 %165 to i64
  %185 = getelementptr inbounds [4 x ptr], ptr @x264_b_pyramid_names, i64 0, i64 %184
  %186 = load ptr, ptr %185, align 8, !tbaa !46
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull @.str.2, i32 noundef %183, ptr noundef %186) #17
  br label %198

187:                                              ; preds = %176
  %188 = icmp eq i32 %177, 2
  %189 = icmp ne i32 %165, 0
  %190 = select i1 %188, i1 %189, i1 false
  br i1 %190, label %191, label %198

191:                                              ; preds = %187
  %192 = load i32, ptr %160, align 16, !tbaa !426
  %193 = add nsw i32 %165, 3
  %194 = icmp sgt i32 %192, %193
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  store i32 5, ptr %173, align 4, !tbaa !350
  %196 = getelementptr inbounds %struct.x264_frame, ptr %172, i64 0, i32 10
  %197 = load i32, ptr %196, align 8, !tbaa !314
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull @.str.3, i32 noundef %197, ptr noundef nonnull @.str.13, i32 noundef %192) #17
  br label %198

198:                                              ; preds = %164, %187, %191, %195, %181
  %199 = load i32, ptr %161, align 16, !tbaa !175
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %struct.x264_frame, ptr %172, i64 0, i32 10
  %202 = load i32, ptr %201, align 8, !tbaa !314
  br i1 %200, label %205, label %203

203:                                              ; preds = %198
  %204 = icmp eq i32 %202, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %198, %203
  %206 = phi i32 [ 0, %203 ], [ %202, %198 ]
  %207 = load ptr, ptr %5, align 16, !tbaa !343
  %208 = getelementptr inbounds %struct.x264_lookahead_t, ptr %207, i64 0, i32 3
  %209 = load i32, ptr %208, align 4, !tbaa !353
  %210 = sub nsw i32 %206, %209
  %211 = load i32, ptr %162, align 4, !tbaa !352
  %212 = icmp slt i32 %210, %211
  br i1 %212, label %217, label %213

213:                                              ; preds = %205
  %214 = load i32, ptr %173, align 4, !tbaa !350
  switch i32 %214, label %216 [
    i32 0, label %215
    i32 1, label %220
  ]

215:                                              ; preds = %213
  store i32 1, ptr %173, align 4, !tbaa !350
  br label %224

216:                                              ; preds = %213
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull @.str.4, i32 noundef %214) #17
  br label %217

217:                                              ; preds = %216, %205, %203
  %218 = load i32, ptr %173, align 4, !tbaa !350
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %238

220:                                              ; preds = %213, %217
  %221 = getelementptr inbounds %struct.x264_frame, ptr %172, i64 0, i32 10
  %222 = load i32, ptr %221, align 8, !tbaa !314
  %223 = load ptr, ptr %5, align 16, !tbaa !343
  br label %224

224:                                              ; preds = %220, %215
  %225 = phi ptr [ %223, %220 ], [ %207, %215 ]
  %226 = phi i32 [ %222, %220 ], [ %206, %215 ]
  %227 = getelementptr inbounds %struct.x264_lookahead_t, ptr %225, i64 0, i32 3
  store i32 %226, ptr %227, align 4, !tbaa !353
  %228 = getelementptr inbounds %struct.x264_frame, ptr %172, i64 0, i32 16
  store i32 1, ptr %228, align 16, !tbaa !398
  %229 = icmp sgt i32 %166, 0
  br i1 %229, label %230, label %238

230:                                              ; preds = %224
  %231 = add nsw i32 %166, -1
  %232 = getelementptr inbounds %struct.x264_lookahead_t, ptr %225, i64 0, i32 7
  %233 = load ptr, ptr %232, align 8, !tbaa !349
  %234 = zext i32 %231 to i64
  %235 = getelementptr inbounds ptr, ptr %233, i64 %234
  %236 = load ptr, ptr %235, align 8, !tbaa !46
  %237 = getelementptr inbounds %struct.x264_frame, ptr %236, i64 0, i32 1
  store i32 3, ptr %237, align 4, !tbaa !350
  br label %238

238:                                              ; preds = %224, %230, %217
  %239 = phi i32 [ %231, %230 ], [ %166, %224 ], [ %166, %217 ]
  %240 = load i32, ptr %163, align 4, !tbaa !356
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = load i32, ptr %173, align 4, !tbaa !350
  br label %254

244:                                              ; preds = %238
  %245 = load ptr, ptr %5, align 16, !tbaa !343
  %246 = getelementptr inbounds %struct.x264_lookahead_t, ptr %245, i64 0, i32 7
  %247 = load ptr, ptr %246, align 8, !tbaa !349
  %248 = add nsw i32 %239, 1
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds ptr, ptr %247, i64 %249
  %251 = load ptr, ptr %250, align 8, !tbaa !46
  %252 = icmp eq ptr %251, null
  %253 = load i32, ptr %173, align 4, !tbaa !350
  br i1 %252, label %254, label %263

254:                                              ; preds = %242, %244
  %255 = phi i32 [ %243, %242 ], [ %253, %244 ]
  %256 = and i32 %255, -2
  %257 = icmp eq i32 %256, 4
  br i1 %257, label %258, label %260

258:                                              ; preds = %254
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull @.str.5) #17
  %259 = load i32, ptr %173, align 4, !tbaa !350
  br label %260

260:                                              ; preds = %254, %258
  %261 = phi i32 [ %255, %254 ], [ %259, %258 ]
  switch i32 %261, label %263 [
    i32 0, label %262
    i32 5, label %262
    i32 4, label %262
  ]

262:                                              ; preds = %260, %260, %260
  store i32 3, ptr %173, align 4, !tbaa !350
  br label %271

263:                                              ; preds = %244, %260
  %264 = phi i32 [ %261, %260 ], [ %253, %244 ]
  %265 = add nsw i32 %165, 1
  switch i32 %264, label %271 [
    i32 4, label %268
    i32 0, label %266
    i32 5, label %267
  ]

266:                                              ; preds = %263
  store i32 5, ptr %173, align 4, !tbaa !350
  br label %268

267:                                              ; preds = %263
  br label %268

268:                                              ; preds = %263, %267, %266
  %269 = phi i32 [ %165, %266 ], [ %265, %263 ], [ %165, %267 ]
  %270 = add nsw i32 %239, 1
  br label %164

271:                                              ; preds = %263, %262
  %272 = icmp ne i32 %239, 0
  %273 = load ptr, ptr %5, align 16, !tbaa !343
  %274 = getelementptr inbounds %struct.x264_lookahead_t, ptr %273, i64 0, i32 7
  %275 = load ptr, ptr %274, align 8, !tbaa !349
  br i1 %272, label %276, label %282

276:                                              ; preds = %271
  %277 = add nsw i32 %239, -1
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds ptr, ptr %275, i64 %278
  %280 = load ptr, ptr %279, align 8, !tbaa !46
  %281 = getelementptr inbounds %struct.x264_frame, ptr %280, i64 0, i32 18
  store i8 1, ptr %281, align 1, !tbaa !427
  br label %282

282:                                              ; preds = %271, %276
  %283 = trunc i32 %239 to i8
  %284 = getelementptr inbounds %struct.x264_lookahead_t, ptr %273, i64 0, i32 7
  %285 = sext i32 %239 to i64
  %286 = getelementptr inbounds ptr, ptr %275, i64 %285
  %287 = load ptr, ptr %286, align 8, !tbaa !46
  %288 = getelementptr inbounds %struct.x264_frame, ptr %287, i64 0, i32 19
  store i8 %283, ptr %288, align 2, !tbaa !428
  %289 = load i32, ptr %159, align 16, !tbaa !359
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %239, 2
  %292 = or i1 %291, %290
  %293 = icmp ne i32 %165, 0
  %294 = select i1 %292, i1 true, i1 %293
  br i1 %294, label %301, label %295

295:                                              ; preds = %282
  %296 = lshr i32 %239, 1
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds ptr, ptr %275, i64 %297
  %299 = load ptr, ptr %298, align 8, !tbaa !46
  %300 = getelementptr inbounds %struct.x264_frame, ptr %299, i64 0, i32 1
  store i32 4, ptr %300, align 4, !tbaa !350
  br label %301

301:                                              ; preds = %295, %282
  %302 = phi i32 [ %165, %282 ], [ 1, %295 ]
  %303 = load i32, ptr %11, align 8, !tbaa !414
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %394, label %305

305:                                              ; preds = %301
  call void @llvm.lifetime.start.p0(i64 14176, ptr nonnull %3) #17
  %306 = add i32 %239, 1
  %307 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %3, i64 0, i32 2
  store i32 12, ptr %307, align 8, !tbaa !149
  store i32 1, ptr %3, align 16, !tbaa !152
  %308 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 37, i64 1
  %309 = load ptr, ptr %308, align 8, !tbaa !46
  %310 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %3, i64 0, i32 3
  store ptr %309, ptr %310, align 16, !tbaa !219
  %311 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 17
  %312 = load i32, ptr %311, align 16, !tbaa !220
  %313 = tail call i32 @llvm.smin.i32(i32 %312, i32 3)
  %314 = tail call i32 @llvm.smax.i32(i32 %313, i32 1)
  %315 = add nsw i32 %314, -1
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 1, i64 %316
  %318 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %3, i64 0, i32 4
  store ptr %317, ptr %318, align 8, !tbaa !46
  %319 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 18
  %320 = load i32, ptr %319, align 4, !tbaa !221
  %321 = tail call i32 @llvm.smin.i32(i32 %320, i32 3)
  %322 = tail call i32 @llvm.smax.i32(i32 %321, i32 1)
  %323 = add nsw i32 %322, -1
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds [92 x [3 x [33 x i16]]], ptr @x264_cost_ref, i64 0, i64 1, i64 %324
  %326 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %3, i64 0, i32 4, i64 1
  store ptr %325, ptr %326, align 16, !tbaa !46
  %327 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %328 = load i32, ptr %327, align 4, !tbaa !144
  %329 = icmp sgt i32 %328, 1
  br i1 %329, label %330, label %334

330:                                              ; preds = %305
  %331 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 7
  %332 = load i32, ptr %331, align 4, !tbaa !103
  %333 = tail call i32 @llvm.smin.i32(i32 %332, i32 1)
  br label %334

334:                                              ; preds = %305, %330
  %335 = phi i32 [ %333, %330 ], [ 0, %305 ]
  %336 = phi i32 [ 4, %330 ], [ 2, %305 ]
  %337 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 9
  store i32 %335, ptr %337, align 4
  %338 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 10
  store i32 %336, ptr %338, align 8
  %339 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 11
  store i32 0, ptr %339, align 4, !tbaa !237
  %340 = getelementptr inbounds %struct.x264_lookahead_t, ptr %273, i64 0, i32 5
  %341 = load ptr, ptr %340, align 8, !tbaa !348
  store ptr %341, ptr %2, align 16, !tbaa !46
  %342 = getelementptr inbounds [18 x ptr], ptr %2, i64 0, i64 1
  %343 = load ptr, ptr %284, align 8, !tbaa !349
  %344 = sext i32 %306 to i64
  %345 = shl nsw i64 %344, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %342, ptr align 8 %343, i64 %345, i1 false)
  %346 = getelementptr inbounds ptr, ptr %343, i64 %285
  %347 = load ptr, ptr %346, align 8, !tbaa !46
  %348 = getelementptr inbounds %struct.x264_frame, ptr %347, i64 0, i32 1
  %349 = load i32, ptr %348, align 4, !tbaa !350
  %350 = add i32 %349, -1
  %351 = icmp ult i32 %350, 2
  %352 = select i1 %351, i32 %306, i32 0
  %353 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef nonnull %0, ptr noundef nonnull %3, ptr noundef nonnull %2, i32 noundef %352, i32 noundef %306, i32 noundef %306, i32 noundef 0)
  %354 = icmp ne i32 %352, %306
  %355 = or i1 %272, %354
  br i1 %355, label %356, label %392

356:                                              ; preds = %334
  %357 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %358 = load i32, ptr %357, align 8, !tbaa !336
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %392, label %360

360:                                              ; preds = %356
  %361 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef nonnull %0, ptr noundef nonnull %3, ptr noundef nonnull %2, i32 noundef %306, i32 noundef %306, i32 noundef %306, i32 noundef 0)
  %362 = icmp slt i32 %239, 1
  br i1 %362, label %392, label %363

363:                                              ; preds = %360
  %364 = zext i32 %306 to i64
  br label %365

365:                                              ; preds = %363, %383
  %366 = phi i64 [ 1, %363 ], [ %390, %383 ]
  %367 = phi i32 [ 0, %363 ], [ %389, %383 ]
  %368 = getelementptr inbounds [18 x ptr], ptr %2, i64 0, i64 %366
  %369 = load ptr, ptr %368, align 8, !tbaa !46
  %370 = getelementptr inbounds %struct.x264_frame, ptr %369, i64 0, i32 1
  %371 = load i32, ptr %370, align 4, !tbaa !350
  %372 = icmp eq i32 %371, 5
  br i1 %372, label %373, label %383

373:                                              ; preds = %365, %373
  %374 = phi i64 [ %380, %373 ], [ %366, %365 ]
  %375 = getelementptr inbounds [18 x ptr], ptr %2, i64 0, i64 %374
  %376 = load ptr, ptr %375, align 8, !tbaa !46
  %377 = getelementptr inbounds %struct.x264_frame, ptr %376, i64 0, i32 1
  %378 = load i32, ptr %377, align 4, !tbaa !350
  %379 = icmp eq i32 %378, 5
  %380 = add nuw i64 %374, 1
  br i1 %379, label %373, label %381, !llvm.loop !429

381:                                              ; preds = %373
  %382 = trunc i64 %374 to i32
  br label %383

383:                                              ; preds = %381, %365
  %384 = phi i32 [ %306, %365 ], [ %382, %381 ]
  %385 = trunc i64 %366 to i32
  %386 = call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %2, i32 noundef %367, i32 noundef %384, i32 noundef %385, i32 noundef 0)
  %387 = load i32, ptr %370, align 4, !tbaa !350
  %388 = icmp eq i32 %387, 4
  %389 = select i1 %388, i32 %385, i32 %367
  %390 = add nuw nsw i64 %366, 1
  %391 = icmp eq i64 %390, %364
  br i1 %391, label %392, label %365, !llvm.loop !430

392:                                              ; preds = %383, %360, %334, %356
  call void @llvm.lifetime.end.p0(i64 14176, ptr nonnull %3) #17
  %393 = load ptr, ptr %5, align 16, !tbaa !343
  br label %394

394:                                              ; preds = %392, %301
  %395 = phi ptr [ %393, %392 ], [ %273, %301 ]
  %396 = load i32, ptr %106, align 8, !tbaa !423
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %414

398:                                              ; preds = %394
  %399 = getelementptr inbounds %struct.x264_lookahead_t, ptr %395, i64 0, i32 7
  %400 = load ptr, ptr %399, align 8, !tbaa !349
  %401 = getelementptr inbounds ptr, ptr %400, i64 %285
  %402 = load ptr, ptr %401, align 8, !tbaa !46
  %403 = getelementptr inbounds %struct.x264_frame, ptr %402, i64 0, i32 1
  %404 = load i32, ptr %403, align 4, !tbaa !350
  %405 = icmp eq i32 %404, 3
  br i1 %405, label %406, label %414

406:                                              ; preds = %398
  %407 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 3
  %408 = load i32, ptr %407, align 4, !tbaa !334
  %409 = icmp eq i32 %408, 2
  br i1 %409, label %410, label %414

410:                                              ; preds = %406
  %411 = getelementptr inbounds %struct.x264_lookahead_t, ptr %395, i64 0, i32 5
  %412 = load ptr, ptr %411, align 8, !tbaa !348
  tail call void @x264_weights_analyse(ptr noundef nonnull %0, ptr noundef nonnull %402, ptr noundef %412, i32 noundef 0)
  %413 = load ptr, ptr %5, align 16, !tbaa !343
  br label %414

414:                                              ; preds = %410, %406, %398, %394
  %415 = phi ptr [ %413, %410 ], [ %395, %406 ], [ %395, %398 ], [ %395, %394 ]
  %416 = getelementptr inbounds %struct.x264_lookahead_t, ptr %415, i64 0, i32 7
  %417 = load ptr, ptr %416, align 8, !tbaa !349
  %418 = load ptr, ptr %417, align 8, !tbaa !46
  %419 = getelementptr inbounds %struct.x264_frame, ptr %418, i64 0, i32 10
  %420 = load i32, ptr %419, align 8, !tbaa !314
  br i1 %272, label %421, label %457

421:                                              ; preds = %414
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %422 = add nsw i32 %302, 1
  store i32 %422, ptr %4, align 4, !tbaa !39
  %423 = getelementptr inbounds i32, ptr %4, i64 1
  store i32 1, ptr %423, align 4, !tbaa !39
  %424 = icmp sgt i32 %239, 0
  br i1 %424, label %425, label %447

425:                                              ; preds = %421
  %426 = zext i32 %239 to i64
  br label %427

427:                                              ; preds = %425, %427
  %428 = phi i64 [ 0, %425 ], [ %445, %427 ]
  %429 = getelementptr inbounds ptr, ptr %417, i64 %428
  %430 = load ptr, ptr %429, align 8, !tbaa !46
  %431 = getelementptr inbounds %struct.x264_frame, ptr %430, i64 0, i32 1
  %432 = load i32, ptr %431, align 4, !tbaa !350
  %433 = icmp eq i32 %432, 4
  %434 = zext i1 %433 to i64
  %435 = getelementptr inbounds [2 x i32], ptr %4, i64 0, i64 %434
  %436 = load i32, ptr %435, align 4, !tbaa !39
  %437 = add nsw i32 %436, 1
  store i32 %437, ptr %435, align 4, !tbaa !39
  %438 = sext i32 %436 to i64
  %439 = getelementptr inbounds [18 x ptr], ptr %2, i64 0, i64 %438
  store ptr %430, ptr %439, align 8, !tbaa !46
  %440 = getelementptr inbounds ptr, ptr %417, i64 %438
  %441 = load ptr, ptr %440, align 8, !tbaa !46
  %442 = getelementptr inbounds %struct.x264_frame, ptr %441, i64 0, i32 3
  %443 = load i64, ptr %442, align 16, !tbaa !419
  %444 = getelementptr inbounds %struct.x264_frame, ptr %430, i64 0, i32 4
  store i64 %443, ptr %444, align 8, !tbaa !431
  %445 = add nuw nsw i64 %428, 1
  %446 = icmp eq i64 %445, %426
  br i1 %446, label %447, label %427, !llvm.loop !432

447:                                              ; preds = %427, %421
  %448 = getelementptr inbounds ptr, ptr %417, i64 %285
  %449 = load ptr, ptr %448, align 8, !tbaa !46
  store ptr %449, ptr %2, align 16, !tbaa !46
  %450 = getelementptr inbounds %struct.x264_frame, ptr %418, i64 0, i32 3
  %451 = load i64, ptr %450, align 16, !tbaa !419
  %452 = getelementptr inbounds %struct.x264_frame, ptr %449, i64 0, i32 4
  store i64 %451, ptr %452, align 8, !tbaa !431
  %453 = add nsw i32 %239, 1
  %454 = sext i32 %453 to i64
  %455 = shl nsw i64 %454, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %417, ptr nonnull align 16 %2, i64 %455, i1 false)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  %456 = icmp slt i32 %239, 0
  br i1 %456, label %593, label %457

457:                                              ; preds = %414, %447
  %458 = load ptr, ptr %5, align 16, !tbaa !343
  %459 = getelementptr inbounds %struct.x264_lookahead_t, ptr %458, i64 0, i32 7
  %460 = load ptr, ptr %459, align 8, !tbaa !349
  %461 = load i32, ptr %11, align 8, !tbaa !414
  %462 = icmp eq i32 %461, 2
  %463 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 18
  %464 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %465 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 19
  %466 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 18
  %467 = getelementptr i8, ptr %0, i64 3200
  %468 = add nuw i32 %239, 1
  %469 = zext i32 %468 to i64
  %470 = load ptr, ptr %460, align 8, !tbaa !46
  %471 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 11
  store i32 %420, ptr %471, align 4, !tbaa !433
  br i1 %462, label %478, label %472

472:                                              ; preds = %457
  %473 = load i32, ptr %463, align 8, !tbaa !415
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %478

475:                                              ; preds = %472
  %476 = load i32, ptr %464, align 8, !tbaa !336
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %521, label %478

478:                                              ; preds = %457, %472, %475
  %479 = load ptr, ptr %467, align 16, !tbaa !169
  %480 = getelementptr i8, ptr %479, i64 1288
  %481 = load i32, ptr %480, align 4, !tbaa !394
  %482 = load i32, ptr %465, align 4, !tbaa !39
  %483 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 7
  store i32 %482, ptr %483, align 8, !tbaa !395
  %484 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 12
  %485 = load i32, ptr %484, align 16, !tbaa !396
  %486 = load i32, ptr %466, align 4, !tbaa !39
  %487 = sub nsw i32 %485, %486
  %488 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 8
  %489 = shl nsw i32 %481, 1
  %490 = add nsw i32 %487, %489
  store i32 %490, ptr %488, align 4, !tbaa !397
  %491 = icmp slt i32 %490, 0
  br i1 %491, label %492, label %494

492:                                              ; preds = %478
  %493 = add nsw i32 %490, %482
  store i32 %493, ptr %483, align 8, !tbaa !395
  store i32 0, ptr %488, align 4, !tbaa !397
  br label %494

494:                                              ; preds = %492, %478
  %495 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 16
  %496 = load i32, ptr %495, align 16, !tbaa !398
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %499, label %498

498:                                              ; preds = %494
  store i32 0, ptr %465, align 4, !tbaa !39
  br label %501

499:                                              ; preds = %494
  %500 = load i32, ptr %465, align 4, !tbaa !39
  br label %501

501:                                              ; preds = %498, %499
  %502 = phi i32 [ %500, %499 ], [ 0, %498 ]
  %503 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 5
  %504 = load i32, ptr %503, align 16, !tbaa !399
  %505 = add nsw i32 %504, %502
  store i32 %505, ptr %465, align 4, !tbaa !39
  %506 = load i32, ptr %503, align 16, !tbaa !399
  %507 = load i32, ptr %466, align 4, !tbaa !39
  %508 = add nsw i32 %507, %506
  store i32 %508, ptr %466, align 4, !tbaa !39
  %509 = load i32, ptr %503, align 16, !tbaa !399
  %510 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 6
  store i32 %509, ptr %510, align 4, !tbaa !400
  %511 = sitofp i32 %509 to double
  %512 = getelementptr inbounds %struct.x264_sps_t, ptr %479, i64 0, i32 24, i32 16
  %513 = load i32, ptr %512, align 4, !tbaa !401
  %514 = uitofp i32 %513 to double
  %515 = fmul fast double %514, %511
  %516 = getelementptr inbounds %struct.x264_sps_t, ptr %479, i64 0, i32 24, i32 17
  %517 = load i32, ptr %516, align 4, !tbaa !402
  %518 = uitofp i32 %517 to double
  %519 = fdiv fast double %515, %518
  %520 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 73, i64 0
  store double %519, ptr %520, align 8, !tbaa !403
  br label %521

521:                                              ; preds = %501, %475
  %522 = icmp eq i32 %239, 0
  br i1 %522, label %593, label %523

523:                                              ; preds = %521, %590
  %524 = phi i64 [ %591, %590 ], [ 1, %521 ]
  %525 = phi i32 [ %526, %590 ], [ %420, %521 ]
  %526 = add nsw i32 %525, 1
  %527 = getelementptr inbounds ptr, ptr %460, i64 %524
  %528 = load ptr, ptr %527, align 8, !tbaa !46
  %529 = getelementptr inbounds %struct.x264_frame, ptr %528, i64 0, i32 11
  store i32 %526, ptr %529, align 4, !tbaa !433
  br i1 %462, label %536, label %530

530:                                              ; preds = %523
  %531 = load i32, ptr %463, align 8, !tbaa !415
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %536

533:                                              ; preds = %530
  %534 = load i32, ptr %464, align 8, !tbaa !336
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %590, label %536

536:                                              ; preds = %523, %530, %533
  %537 = add nsw i64 %524, -1
  %538 = load ptr, ptr %467, align 16, !tbaa !169
  %539 = getelementptr i8, ptr %538, i64 1288
  %540 = load i32, ptr %539, align 4, !tbaa !394
  %541 = load i32, ptr %465, align 4, !tbaa !39
  %542 = getelementptr inbounds %struct.x264_frame, ptr %528, i64 0, i32 7
  store i32 %541, ptr %542, align 8, !tbaa !395
  %543 = getelementptr inbounds %struct.x264_frame, ptr %528, i64 0, i32 12
  %544 = load i32, ptr %543, align 16, !tbaa !396
  %545 = load i32, ptr %466, align 4, !tbaa !39
  %546 = sub nsw i32 %544, %545
  %547 = getelementptr inbounds %struct.x264_frame, ptr %528, i64 0, i32 8
  %548 = shl nsw i32 %540, 1
  %549 = add nsw i32 %546, %548
  store i32 %549, ptr %547, align 4, !tbaa !397
  %550 = icmp slt i32 %549, 0
  br i1 %550, label %551, label %553

551:                                              ; preds = %536
  %552 = add nsw i32 %549, %541
  store i32 %552, ptr %542, align 8, !tbaa !395
  store i32 0, ptr %547, align 4, !tbaa !397
  br label %553

553:                                              ; preds = %551, %536
  %554 = getelementptr inbounds %struct.x264_frame, ptr %528, i64 0, i32 16
  %555 = load i32, ptr %554, align 16, !tbaa !398
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %559

557:                                              ; preds = %553
  %558 = load i32, ptr %465, align 4, !tbaa !39
  br label %560

559:                                              ; preds = %553
  store i32 0, ptr %465, align 4, !tbaa !39
  br label %560

560:                                              ; preds = %559, %557
  %561 = phi i32 [ %558, %557 ], [ 0, %559 ]
  %562 = getelementptr inbounds %struct.x264_frame, ptr %528, i64 0, i32 5
  %563 = load i32, ptr %562, align 16, !tbaa !399
  %564 = add nsw i32 %563, %561
  store i32 %564, ptr %465, align 4, !tbaa !39
  %565 = load i32, ptr %562, align 16, !tbaa !399
  %566 = load i32, ptr %466, align 4, !tbaa !39
  %567 = add nsw i32 %566, %565
  store i32 %567, ptr %466, align 4, !tbaa !39
  %568 = load i32, ptr %562, align 16, !tbaa !399
  %569 = getelementptr inbounds %struct.x264_frame, ptr %528, i64 0, i32 6
  store i32 %568, ptr %569, align 4, !tbaa !400
  %570 = getelementptr inbounds ptr, ptr %460, i64 %537
  %571 = load ptr, ptr %570, align 8, !tbaa !46
  %572 = getelementptr inbounds %struct.x264_frame, ptr %571, i64 0, i32 6
  %573 = load i32, ptr %572, align 4, !tbaa !400
  %574 = getelementptr inbounds %struct.x264_sps_t, ptr %538, i64 0, i32 24, i32 16
  %575 = load i32, ptr %574, align 4, !tbaa !401
  %576 = uitofp i32 %575 to double
  %577 = getelementptr inbounds %struct.x264_sps_t, ptr %538, i64 0, i32 24, i32 17
  %578 = load i32, ptr %577, align 4, !tbaa !402
  %579 = uitofp i32 %578 to double
  %580 = getelementptr inbounds %struct.x264_frame, ptr %470, i64 0, i32 73, i64 %537
  %581 = insertelement <2 x i32> poison, i32 %573, i64 0
  %582 = insertelement <2 x i32> %581, i32 %568, i64 1
  %583 = sitofp <2 x i32> %582 to <2 x double>
  %584 = insertelement <2 x double> poison, double %576, i64 0
  %585 = shufflevector <2 x double> %584, <2 x double> poison, <2 x i32> zeroinitializer
  %586 = fmul fast <2 x double> %585, %583
  %587 = insertelement <2 x double> poison, double %579, i64 0
  %588 = shufflevector <2 x double> %587, <2 x double> poison, <2 x i32> zeroinitializer
  %589 = fdiv fast <2 x double> %586, %588
  store <2 x double> %589, ptr %580, align 8, !tbaa !403
  br label %590

590:                                              ; preds = %533, %560
  %591 = add nuw nsw i64 %524, 1
  %592 = icmp eq i64 %591, %469
  br i1 %592, label %593, label %523, !llvm.loop !434

593:                                              ; preds = %590, %521, %447, %1
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %2) #17
  ret void
}

declare i32 @x264_ratecontrol_slice_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #11

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @x264_rc_analyse_slice(ptr nocapture noundef %0) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 44
  %3 = load ptr, ptr %2, align 8, !tbaa !46
  %4 = getelementptr inbounds %struct.x264_frame, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !350
  switch i32 %5, label %11 [
    i32 2, label %23
    i32 1, label %23
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.x264_frame, ptr %3, i64 0, i32 19
  %8 = load i8, ptr %7, align 2, !tbaa !428
  %9 = zext i8 %8 to i32
  %10 = add nuw nsw i32 %9, 1
  br label %23

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 49
  %13 = load ptr, ptr %12, align 16, !tbaa !46
  %14 = load i32, ptr %13, align 16, !tbaa !435
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 47
  %16 = load ptr, ptr %15, align 16, !tbaa !46
  %17 = load i32, ptr %16, align 16, !tbaa !435
  %18 = sub nsw i32 %14, %17
  %19 = sdiv i32 %18, 2
  %20 = load i32, ptr %3, align 16, !tbaa !435
  %21 = sub nsw i32 %20, %17
  %22 = sdiv i32 %21, 2
  br label %23

23:                                               ; preds = %1, %1, %6, %11
  %24 = phi i32 [ %10, %6 ], [ %22, %11 ], [ 0, %1 ], [ 0, %1 ]
  %25 = phi i32 [ %10, %6 ], [ %19, %11 ], [ 0, %1 ], [ 0, %1 ]
  %26 = sext i32 %24 to i64
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds ptr, ptr %2, i64 %27
  %29 = sub nsw i32 %25, %24
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.x264_frame, ptr %3, i64 0, i32 52, i64 %26, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !39
  %33 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 16
  %34 = load i32, ptr %33, align 8, !tbaa !337
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 20
  %38 = load i32, ptr %37, align 8, !tbaa !423
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %36
  %41 = tail call fastcc i32 @x264_slicetype_frame_cost_recalculate(ptr noundef nonnull %0, ptr noundef nonnull %28, i32 noundef 0, i32 noundef %25, i32 noundef %24)
  %42 = icmp eq i32 %24, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %45 = load i32, ptr %44, align 8, !tbaa !336
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = tail call fastcc i32 @x264_slicetype_frame_cost_recalculate(ptr noundef nonnull %0, ptr noundef nonnull %28, i32 noundef %24, i32 noundef %24, i32 noundef %24)
  br label %56

49:                                               ; preds = %36, %23
  %50 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 14
  %51 = load i32, ptr %50, align 8, !tbaa !143
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.x264_frame, ptr %3, i64 0, i32 53, i64 %26, i64 %30
  %55 = load i32, ptr %54, align 4, !tbaa !39
  br label %56

56:                                               ; preds = %49, %53, %40, %43, %47
  %57 = phi i32 [ %55, %53 ], [ %32, %49 ], [ %41, %47 ], [ %41, %43 ], [ %41, %40 ]
  %58 = load ptr, ptr %2, align 8, !tbaa !137
  %59 = getelementptr inbounds %struct.x264_frame, ptr %58, i64 0, i32 56, i64 %26, i64 %30
  %60 = load ptr, ptr %59, align 8, !tbaa !46
  %61 = getelementptr inbounds %struct.x264_frame, ptr %58, i64 0, i32 57
  store ptr %60, ptr %61, align 16, !tbaa !436
  %62 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 45
  %63 = load ptr, ptr %62, align 16, !tbaa !177
  %64 = getelementptr inbounds %struct.x264_frame, ptr %63, i64 0, i32 56, i64 %26, i64 %30
  %65 = load ptr, ptr %64, align 8, !tbaa !46
  %66 = getelementptr inbounds %struct.x264_frame, ptr %63, i64 0, i32 57
  store ptr %65, ptr %66, align 16, !tbaa !436
  %67 = getelementptr inbounds %struct.x264_frame, ptr %63, i64 0, i32 54
  store i32 %57, ptr %67, align 4, !tbaa !437
  %68 = load ptr, ptr %61, align 16, !tbaa !436
  %69 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %70 = load ptr, ptr %69, align 16, !tbaa !169
  %71 = getelementptr inbounds %struct.x264_sps_t, ptr %70, i64 0, i32 17
  %72 = load i32, ptr %71, align 4, !tbaa !179
  %73 = sext i32 %72 to i64
  %74 = shl nsw i64 %73, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %65, ptr align 4 %68, i64 %74, i1 false)
  %75 = load ptr, ptr %2, align 8, !tbaa !137
  %76 = getelementptr inbounds %struct.x264_frame, ptr %75, i64 0, i32 1
  %77 = load i32, ptr %76, align 4, !tbaa !350
  %78 = add i32 %77, -1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %91, label %80

80:                                               ; preds = %56
  %81 = load ptr, ptr %62, align 16, !tbaa !177
  %82 = getelementptr inbounds %struct.x264_frame, ptr %81, i64 0, i32 56
  %83 = load ptr, ptr %82, align 16, !tbaa !46
  %84 = getelementptr inbounds %struct.x264_frame, ptr %75, i64 0, i32 56
  %85 = load ptr, ptr %84, align 16, !tbaa !46
  %86 = load ptr, ptr %69, align 16, !tbaa !169
  %87 = getelementptr inbounds %struct.x264_sps_t, ptr %86, i64 0, i32 17
  %88 = load i32, ptr %87, align 4, !tbaa !179
  %89 = sext i32 %88 to i64
  %90 = shl nsw i64 %89, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %83, ptr align 4 %85, i64 %90, i1 false)
  br label %91

91:                                               ; preds = %56, %80
  %92 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 16
  %93 = load i32, ptr %92, align 16, !tbaa !175
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %191, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %97 = load i32, ptr %96, align 8, !tbaa !336
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %191, label %99

99:                                               ; preds = %95
  %100 = load ptr, ptr %2, align 8, !tbaa !46
  %101 = getelementptr inbounds %struct.x264_frame, ptr %100, i64 0, i32 1
  %102 = load i32, ptr %101, align 4, !tbaa !350
  %103 = icmp eq i32 %102, 3
  br i1 %103, label %104, label %191

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 12
  %106 = load float, ptr %105, align 8, !tbaa !438
  %107 = fmul fast float %106, 2.560000e+02
  %108 = fptosi float %107 to i32
  %109 = load ptr, ptr %69, align 16, !tbaa !169
  %110 = getelementptr inbounds %struct.x264_sps_t, ptr %109, i64 0, i32 17
  %111 = load i32, ptr %110, align 4, !tbaa !179
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %191

113:                                              ; preds = %104
  %114 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 1
  %115 = load ptr, ptr %62, align 16, !tbaa !177
  %116 = getelementptr inbounds %struct.x264_frame, ptr %115, i64 0, i32 82
  %117 = getelementptr inbounds %struct.x264_frame, ptr %115, i64 0, i32 83
  %118 = getelementptr inbounds %struct.x264_frame, ptr %100, i64 0, i32 63
  %119 = getelementptr inbounds %struct.x264_frame, ptr %100, i64 0, i32 46, i64 %26, i64 %30
  %120 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 14
  %121 = getelementptr inbounds %struct.x264_frame, ptr %100, i64 0, i32 65
  %122 = getelementptr inbounds %struct.x264_frame, ptr %115, i64 0, i32 57
  %123 = load i32, ptr %116, align 16, !tbaa !178
  %124 = load i32, ptr %117, align 4, !tbaa !176
  %125 = icmp sgt i32 %123, %124
  br i1 %125, label %191, label %126

126:                                              ; preds = %113, %142
  %127 = phi i32 [ %143, %142 ], [ %111, %113 ]
  %128 = phi i32 [ %144, %142 ], [ %124, %113 ]
  %129 = phi i64 [ %146, %142 ], [ 0, %113 ]
  %130 = phi i32 [ %145, %142 ], [ %57, %113 ]
  %131 = load i32, ptr %116, align 16, !tbaa !178
  %132 = icmp sgt i32 %131, %128
  br i1 %132, label %142, label %133

133:                                              ; preds = %126
  %134 = load i32, ptr %114, align 4, !tbaa !65
  %135 = load ptr, ptr %118, align 16, !tbaa !325
  %136 = load ptr, ptr %119, align 8, !tbaa !46
  %137 = trunc i64 %129 to i32
  %138 = mul i32 %134, %137
  %139 = sext i32 %138 to i64
  br label %149

140:                                              ; preds = %181
  %141 = load i32, ptr %110, align 4, !tbaa !179
  br label %142

142:                                              ; preds = %140, %126
  %143 = phi i32 [ %127, %126 ], [ %141, %140 ]
  %144 = phi i32 [ %128, %126 ], [ %189, %140 ]
  %145 = phi i32 [ %130, %126 ], [ %186, %140 ]
  %146 = add nuw nsw i64 %129, 1
  %147 = sext i32 %143 to i64
  %148 = icmp slt i64 %146, %147
  br i1 %148, label %126, label %191, !llvm.loop !439

149:                                              ; preds = %133, %181
  %150 = phi i64 [ %139, %133 ], [ %188, %181 ]
  %151 = phi i32 [ %130, %133 ], [ %186, %181 ]
  %152 = phi i32 [ %131, %133 ], [ %187, %181 ]
  %153 = getelementptr inbounds i16, ptr %135, i64 %150
  %154 = load i16, ptr %153, align 2, !tbaa !37
  %155 = zext i16 %154 to i32
  %156 = mul nsw i32 %155, %108
  %157 = add nsw i32 %156, 128
  %158 = ashr i32 %157, 8
  %159 = getelementptr inbounds i16, ptr %136, i64 %150
  %160 = load i16, ptr %159, align 2, !tbaa !37
  %161 = and i16 %160, 16383
  %162 = zext i16 %161 to i32
  %163 = sub nsw i32 %158, %162
  %164 = load i32, ptr %120, align 8, !tbaa !143
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %149
  %167 = load ptr, ptr %121, align 16, !tbaa !383
  %168 = getelementptr inbounds i16, ptr %167, i64 %150
  %169 = load i16, ptr %168, align 2, !tbaa !37
  %170 = zext i16 %169 to i32
  %171 = mul nsw i32 %163, %170
  %172 = add nsw i32 %171, 128
  %173 = ashr i32 %172, 8
  %174 = load ptr, ptr %122, align 16, !tbaa !436
  %175 = getelementptr inbounds i32, ptr %174, i64 %129
  %176 = load i32, ptr %175, align 4, !tbaa !39
  br label %181

177:                                              ; preds = %149
  %178 = load ptr, ptr %122, align 16, !tbaa !436
  %179 = getelementptr inbounds i32, ptr %178, i64 %129
  %180 = load i32, ptr %179, align 4, !tbaa !39
  br label %181

181:                                              ; preds = %177, %166
  %182 = phi i32 [ %163, %177 ], [ %176, %166 ]
  %183 = phi i32 [ %180, %177 ], [ %173, %166 ]
  %184 = phi ptr [ %179, %177 ], [ %175, %166 ]
  %185 = add nsw i32 %183, %182
  store i32 %185, ptr %184, align 4, !tbaa !39
  %186 = add nsw i32 %163, %151
  %187 = add nsw i32 %152, 1
  %188 = add nsw i64 %150, 1
  %189 = load i32, ptr %117, align 4, !tbaa !176
  %190 = icmp slt i32 %152, %189
  br i1 %190, label %149, label %140, !llvm.loop !440

191:                                              ; preds = %142, %113, %104, %99, %95, %91
  %192 = phi i32 [ %57, %99 ], [ %57, %95 ], [ %57, %91 ], [ %57, %104 ], [ %57, %113 ], [ %145, %142 ]
  ret i32 %192
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc i32 @x264_slicetype_frame_cost_recalculate(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #12 {
  %6 = sext i32 %4 to i64
  %7 = getelementptr inbounds ptr, ptr %1, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !46
  %9 = sub nsw i32 %4, %2
  %10 = sext i32 %9 to i64
  %11 = sub nsw i32 %3, %4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.x264_frame, ptr %8, i64 0, i32 56, i64 %10, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = getelementptr inbounds %struct.x264_frame, ptr %8, i64 0, i32 1
  %16 = load i32, ptr %15, align 4, !tbaa !350
  %17 = and i32 %16, -2
  %18 = icmp eq i32 %17, 4
  %19 = getelementptr inbounds %struct.x264_frame, ptr %8, i64 0, i32 61
  %20 = getelementptr inbounds %struct.x264_frame, ptr %8, i64 0, i32 60
  %21 = select i1 %18, ptr %19, ptr %20
  %22 = load ptr, ptr %21, align 8, !tbaa !46
  %23 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %24 = load ptr, ptr %23, align 16, !tbaa !169
  %25 = getelementptr inbounds %struct.x264_sps_t, ptr %24, i64 0, i32 17
  %26 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %27 = load i32, ptr %25, align 4, !tbaa !39
  %28 = add nsw i32 %27, -1
  store i32 %28, ptr %26, align 4, !tbaa !62
  %29 = icmp sgt i32 %27, 0
  br i1 %29, label %30, label %118

30:                                               ; preds = %5
  %31 = getelementptr inbounds %struct.x264_sps_t, ptr %24, i64 0, i32 16
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  %33 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 1
  %34 = getelementptr inbounds %struct.x264_frame, ptr %8, i64 0, i32 46, i64 %10, i64 %12
  br label %40

35:                                               ; preds = %113, %40
  %36 = phi i32 [ %48, %40 ], [ %90, %113 ]
  %37 = phi i32 [ %42, %40 ], [ %114, %113 ]
  %38 = add nsw i32 %36, -1
  store i32 %38, ptr %26, align 4, !tbaa !62
  %39 = icmp sgt i32 %36, 0
  br i1 %39, label %40, label %118, !llvm.loop !404

40:                                               ; preds = %30, %35
  %41 = phi i32 [ %28, %30 ], [ %38, %35 ]
  %42 = phi i32 [ 0, %30 ], [ %37, %35 ]
  %43 = zext i32 %41 to i64
  %44 = getelementptr inbounds i32, ptr %14, i64 %43
  store i32 0, ptr %44, align 4, !tbaa !39
  %45 = load i32, ptr %31, align 4, !tbaa !39
  %46 = add nsw i32 %45, -1
  store i32 %46, ptr %32, align 16, !tbaa !168
  %47 = icmp sgt i32 %45, 0
  %48 = load i32, ptr %26, align 4, !tbaa !39
  br i1 %47, label %49, label %35

49:                                               ; preds = %40
  %50 = load ptr, ptr %34, align 8, !tbaa !46
  br label %51

51:                                               ; preds = %49, %113
  %52 = phi i32 [ %48, %49 ], [ %90, %113 ]
  %53 = phi i32 [ %46, %49 ], [ %116, %113 ]
  %54 = phi i32 [ %42, %49 ], [ %114, %113 ]
  %55 = load i32, ptr %33, align 4, !tbaa !65
  %56 = mul nsw i32 %55, %52
  %57 = add nsw i32 %56, %53
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i16, ptr %50, i64 %58
  %60 = load i16, ptr %59, align 2, !tbaa !37
  %61 = and i16 %60, 16383
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds float, ptr %22, i64 %58
  %64 = load float, ptr %63, align 4, !tbaa !335
  %65 = fmul fast float %64, 0x4025555560000000
  %66 = fsub fast float 5.125000e+02, %65
  %67 = fptosi float %66 to i32
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %81, label %69

69:                                               ; preds = %51
  %70 = icmp ugt i32 %67, 1023
  br i1 %70, label %81, label %71

71:                                               ; preds = %69
  %72 = and i32 %67, 63
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds [64 x i8], ptr @x264_exp2_lut, i64 0, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !5
  %76 = zext i8 %75 to i32
  %77 = or i32 %76, 256
  %78 = lshr i32 %67, 6
  %79 = shl nuw nsw i32 %77, %78
  %80 = lshr i32 %79, 8
  br label %81

81:                                               ; preds = %51, %69, %71
  %82 = phi i32 [ %80, %71 ], [ 0, %51 ], [ 65535, %69 ]
  %83 = mul nuw nsw i32 %82, %62
  %84 = add nuw nsw i32 %83, 128
  %85 = lshr i32 %84, 8
  %86 = sext i32 %52 to i64
  %87 = getelementptr inbounds i32, ptr %14, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !39
  %89 = add nsw i32 %85, %88
  store i32 %89, ptr %87, align 4, !tbaa !39
  %90 = load i32, ptr %26, align 4, !tbaa !39
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %103

92:                                               ; preds = %81
  %93 = load i32, ptr %25, align 4, !tbaa !179
  %94 = add nsw i32 %93, -1
  %95 = icmp slt i32 %90, %94
  br i1 %95, label %96, label %103

96:                                               ; preds = %92
  %97 = load i32, ptr %32, align 16, !tbaa !168
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = load i32, ptr %31, align 4, !tbaa !170
  %101 = add nsw i32 %100, -1
  %102 = icmp slt i32 %97, %101
  br i1 %102, label %111, label %105

103:                                              ; preds = %81, %92, %96
  %104 = load i32, ptr %31, align 4, !tbaa !170
  br label %105

105:                                              ; preds = %103, %99
  %106 = phi i32 [ %104, %103 ], [ %100, %99 ]
  %107 = icmp slt i32 %106, 3
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = load i32, ptr %25, align 4, !tbaa !179
  %110 = icmp slt i32 %109, 3
  br i1 %110, label %111, label %113

111:                                              ; preds = %108, %105, %99
  %112 = add nsw i32 %85, %54
  br label %113

113:                                              ; preds = %111, %108
  %114 = phi i32 [ %112, %111 ], [ %54, %108 ]
  %115 = load i32, ptr %32, align 4, !tbaa !39
  %116 = add nsw i32 %115, -1
  store i32 %116, ptr %32, align 16, !tbaa !168
  %117 = icmp sgt i32 %115, 0
  br i1 %117, label %51, label %35, !llvm.loop !405

118:                                              ; preds = %35, %5
  %119 = phi i32 [ 0, %5 ], [ %37, %35 ]
  ret i32 %119
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_macroblock_size_cabac(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca [2 x i16], align 4
  %4 = alloca [2 x i16], align 4
  %5 = alloca [2 x i16], align 4
  %6 = alloca [2 x i16], align 4
  %7 = alloca [2 x i16], align 4
  %8 = alloca [2 x i16], align 4
  %9 = alloca [2 x i16], align 4
  %10 = alloca [2 x i16], align 4
  %11 = alloca [2 x i16], align 4
  %12 = alloca [2 x i16], align 4
  %13 = alloca [2 x i16], align 4
  %14 = alloca [2 x i16], align 4
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 53
  %16 = load i32, ptr %15, align 8, !tbaa !49
  %17 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 7
  %18 = load i32, ptr %17, align 4, !tbaa !61
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %54, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %22 = load i32, ptr %21, align 4, !tbaa !62
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 38
  %27 = load ptr, ptr %26, align 8, !tbaa !63
  %28 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %29 = load i32, ptr %28, align 8, !tbaa !64
  %30 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 1
  %31 = load i32, ptr %30, align 4, !tbaa !65
  %32 = sub nsw i32 %29, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %27, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !5
  switch i8 %35, label %54 [
    i8 6, label %36
    i8 18, label %36
  ]

36:                                               ; preds = %25, %25, %20
  %37 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 12
  %38 = load i32, ptr %37, align 4, !tbaa !441
  %39 = add nsw i32 %38, 70
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %42 = load i32, ptr %41, align 4, !tbaa !36
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %40
  %45 = load i8, ptr %44, align 1, !tbaa !5
  %46 = zext i8 %45 to i64
  %47 = xor i64 %46, %43
  %48 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %47
  %49 = load i16, ptr %48, align 2, !tbaa !37
  %50 = zext i16 %49 to i32
  %51 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %52 = load i32, ptr %51, align 16, !tbaa !40
  %53 = add nsw i32 %52, %50
  store i32 %53, ptr %51, align 16, !tbaa !40
  br label %54

54:                                               ; preds = %36, %25, %2
  %55 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 2
  %56 = load i32, ptr %55, align 16, !tbaa !60
  switch i32 %56, label %327 [
    i32 2, label %57
    i32 0, label %173
  ]

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 24
  %59 = load i32, ptr %58, align 8, !tbaa !442
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 30
  %64 = load i32, ptr %63, align 8, !tbaa !202
  %65 = icmp ne i32 %64, 0
  %66 = zext i1 %65 to i32
  br label %67

67:                                               ; preds = %62, %57
  %68 = phi i32 [ 0, %57 ], [ %66, %62 ]
  %69 = and i32 %59, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 29
  %73 = load i32, ptr %72, align 4, !tbaa !203
  %74 = icmp ne i32 %73, 0
  %75 = zext i1 %74 to i32
  %76 = add nuw nsw i32 %68, %75
  br label %77

77:                                               ; preds = %71, %67
  %78 = phi i32 [ %68, %67 ], [ %76, %71 ]
  %79 = add nuw nsw i32 %78, 3
  %80 = icmp ult i32 %16, 2
  br i1 %80, label %81, label %92

81:                                               ; preds = %77
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %82
  %84 = load i8, ptr %83, align 1, !tbaa !5
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %85
  %87 = load i16, ptr %86, align 2, !tbaa !37
  %88 = zext i16 %87 to i32
  %89 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %90 = load i32, ptr %89, align 16, !tbaa !40
  %91 = add nsw i32 %90, %88
  store i32 %91, ptr %89, align 16, !tbaa !40
  br label %620

92:                                               ; preds = %77
  %93 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 59
  %94 = load i32, ptr %93, align 16, !tbaa !70
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode16x16_fix, i64 0, i64 %95
  %97 = load i8, ptr %96, align 1, !tbaa !5
  %98 = zext i8 %97 to i32
  %99 = zext i32 %79 to i64
  %100 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !5
  %102 = xor i8 %101, 1
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %103
  %105 = load i16, ptr %104, align 2, !tbaa !37
  %106 = zext i16 %105 to i32
  %107 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %108 = load i32, ptr %107, align 16, !tbaa !40
  %109 = add nuw nsw i32 %106, 7
  %110 = add i32 %109, %108
  %111 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %112 = load i32, ptr %111, align 8, !tbaa !45
  %113 = icmp ne i32 %112, 0
  %114 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 6
  %115 = load i8, ptr %114, align 1, !tbaa !5
  %116 = zext i1 %113 to i8
  %117 = xor i8 %115, %116
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %118
  %120 = load i16, ptr %119, align 2, !tbaa !37
  %121 = zext i16 %120 to i32
  %122 = add nsw i32 %110, %121
  %123 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %124 = load i32, ptr %123, align 4, !tbaa !71
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 7
  %127 = load i8, ptr %126, align 1, !tbaa !5
  %128 = zext i8 %127 to i64
  br i1 %125, label %144, label %129

129:                                              ; preds = %92
  %130 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %128, i64 1
  %131 = load i8, ptr %130, align 1, !tbaa !5
  store i8 %131, ptr %126, align 1, !tbaa !5
  %132 = xor i64 %128, 1
  %133 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %132
  %134 = load i16, ptr %133, align 2, !tbaa !37
  %135 = zext i16 %134 to i32
  %136 = add nsw i32 %122, %135
  %137 = load i32, ptr %123, align 4, !tbaa !71
  %138 = ashr i32 %137, 1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 8
  %141 = load i8, ptr %140, align 1, !tbaa !5
  %142 = zext i8 %141 to i64
  %143 = xor i64 %142, %139
  br label %144

144:                                              ; preds = %129, %92
  %145 = phi i64 [ %143, %129 ], [ %128, %92 ]
  %146 = phi i32 [ %136, %129 ], [ %122, %92 ]
  %147 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %145
  %148 = load i16, ptr %147, align 2, !tbaa !37
  %149 = zext i16 %148 to i32
  %150 = add nsw i32 %146, %149
  %151 = lshr i32 %98, 1
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 9
  %154 = load i8, ptr %153, align 1, !tbaa !5
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %155, i64 %152
  %157 = load i8, ptr %156, align 1, !tbaa !5
  store i8 %157, ptr %153, align 1, !tbaa !5
  %158 = xor i64 %155, %152
  %159 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %158
  %160 = load i16, ptr %159, align 2, !tbaa !37
  %161 = zext i16 %160 to i32
  %162 = add nsw i32 %150, %161
  %163 = and i32 %98, 1
  %164 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 10
  %165 = load i8, ptr %164, align 1, !tbaa !5
  %166 = zext i8 %165 to i32
  %167 = xor i32 %163, %166
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %168
  %170 = load i16, ptr %169, align 2, !tbaa !37
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %162, %171
  store i32 %172, ptr %107, align 16, !tbaa !40
  br label %625

173:                                              ; preds = %54
  switch i32 %16, label %233 [
    i32 4, label %174
    i32 5, label %208
  ]

174:                                              ; preds = %173
  %175 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 14
  %176 = load i8, ptr %175, align 1, !tbaa !5
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %177
  %179 = load i16, ptr %178, align 2, !tbaa !37
  %180 = zext i16 %179 to i32
  %181 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %182 = load i32, ptr %181, align 16, !tbaa !40
  %183 = add nsw i32 %182, %180
  %184 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %185 = load i32, ptr %184, align 4, !tbaa !50
  %186 = icmp ne i32 %185, 16
  %187 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 15
  %188 = load i8, ptr %187, align 1, !tbaa !5
  %189 = zext i1 %186 to i8
  %190 = xor i8 %188, %189
  %191 = zext i8 %190 to i64
  %192 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %191
  %193 = load i16, ptr %192, align 2, !tbaa !37
  %194 = zext i16 %193 to i32
  %195 = add nsw i32 %183, %194
  %196 = icmp eq i32 %185, 16
  %197 = select i1 %196, i64 16, i64 17
  %198 = icmp eq i32 %185, 14
  %199 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %197
  %200 = load i8, ptr %199, align 1, !tbaa !5
  %201 = zext i1 %198 to i8
  %202 = xor i8 %200, %201
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %203
  %205 = load i16, ptr %204, align 2, !tbaa !37
  %206 = zext i16 %205 to i32
  %207 = add nsw i32 %195, %206
  store i32 %207, ptr %181, align 16, !tbaa !40
  br label %866

208:                                              ; preds = %173
  %209 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 14
  %210 = load i8, ptr %209, align 1, !tbaa !5
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %211
  %213 = load i16, ptr %212, align 2, !tbaa !37
  %214 = zext i16 %213 to i32
  %215 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %216 = load i32, ptr %215, align 16, !tbaa !40
  %217 = add nsw i32 %216, %214
  %218 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 15
  %219 = load i8, ptr %218, align 1, !tbaa !5
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %220
  %222 = load i16, ptr %221, align 2, !tbaa !37
  %223 = zext i16 %222 to i32
  %224 = add nsw i32 %217, %223
  %225 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 16
  %226 = load i8, ptr %225, align 1, !tbaa !5
  %227 = xor i8 %226, 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %228
  %230 = load i16, ptr %229, align 2, !tbaa !37
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 %224, %231
  store i32 %232, ptr %215, align 16, !tbaa !40
  br label %852

233:                                              ; preds = %173
  %234 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 14
  %235 = load i8, ptr %234, align 1, !tbaa !5
  %236 = xor i8 %235, 1
  %237 = zext i8 %236 to i64
  %238 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %237
  %239 = load i16, ptr %238, align 2, !tbaa !37
  %240 = zext i16 %239 to i32
  %241 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %242 = load i32, ptr %241, align 16, !tbaa !40
  %243 = add nsw i32 %242, %240
  %244 = icmp ult i32 %16, 2
  br i1 %244, label %245, label %253

245:                                              ; preds = %233
  %246 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 17
  %247 = load i8, ptr %246, align 1, !tbaa !5
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %248
  %250 = load i16, ptr %249, align 2, !tbaa !37
  %251 = zext i16 %250 to i32
  %252 = add nsw i32 %243, %251
  store i32 %252, ptr %241, align 16, !tbaa !40
  br label %620

253:                                              ; preds = %233
  %254 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 59
  %255 = load i32, ptr %254, align 16, !tbaa !70
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode16x16_fix, i64 0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !5
  %259 = zext i8 %258 to i32
  %260 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 17
  %261 = load i8, ptr %260, align 1, !tbaa !5
  %262 = xor i8 %261, 1
  %263 = zext i8 %262 to i64
  %264 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %263
  %265 = load i16, ptr %264, align 2, !tbaa !37
  %266 = zext i16 %265 to i32
  %267 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %268 = load i32, ptr %267, align 8, !tbaa !45
  %269 = icmp ne i32 %268, 0
  %270 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 18
  %271 = load i8, ptr %270, align 1, !tbaa !5
  %272 = zext i1 %269 to i8
  %273 = xor i8 %271, %272
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %274
  %276 = load i16, ptr %275, align 2, !tbaa !37
  %277 = zext i16 %276 to i32
  %278 = add i32 %243, 7
  %279 = add i32 %278, %266
  %280 = add nsw i32 %279, %277
  %281 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %282 = load i32, ptr %281, align 4, !tbaa !71
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 19
  %285 = load i8, ptr %284, align 1, !tbaa !5
  %286 = zext i8 %285 to i64
  br i1 %283, label %300, label %287

287:                                              ; preds = %253
  %288 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %286, i64 1
  %289 = load i8, ptr %288, align 1, !tbaa !5
  store i8 %289, ptr %284, align 1, !tbaa !5
  %290 = xor i64 %286, 1
  %291 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %290
  %292 = load i16, ptr %291, align 2, !tbaa !37
  %293 = zext i16 %292 to i32
  %294 = add nsw i32 %280, %293
  %295 = load i32, ptr %281, align 4, !tbaa !71
  %296 = ashr i32 %295, 1
  %297 = sext i32 %296 to i64
  %298 = zext i8 %289 to i64
  %299 = xor i64 %297, %298
  br label %300

300:                                              ; preds = %287, %253
  %301 = phi i64 [ %299, %287 ], [ %286, %253 ]
  %302 = phi i32 [ %294, %287 ], [ %280, %253 ]
  %303 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %301
  %304 = load i16, ptr %303, align 2, !tbaa !37
  %305 = zext i16 %304 to i32
  %306 = add nsw i32 %302, %305
  %307 = lshr i32 %259, 1
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 20
  %310 = load i8, ptr %309, align 1, !tbaa !5
  %311 = zext i8 %310 to i64
  %312 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %311, i64 %308
  %313 = load i8, ptr %312, align 1, !tbaa !5
  store i8 %313, ptr %309, align 1, !tbaa !5
  %314 = xor i64 %311, %308
  %315 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %314
  %316 = load i16, ptr %315, align 2, !tbaa !37
  %317 = zext i16 %316 to i32
  %318 = add nsw i32 %306, %317
  %319 = and i32 %259, 1
  %320 = zext i8 %313 to i32
  %321 = xor i32 %319, %320
  %322 = zext i32 %321 to i64
  %323 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %322
  %324 = load i16, ptr %323, align 2, !tbaa !37
  %325 = zext i16 %324 to i32
  %326 = add nsw i32 %318, %325
  store i32 %326, ptr %241, align 16, !tbaa !40
  br label %625

327:                                              ; preds = %54
  %328 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 24
  %329 = load i32, ptr %328, align 8, !tbaa !442
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %339, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 30
  %334 = load i32, ptr %333, align 8, !tbaa !202
  %335 = icmp ne i32 %334, 18
  %336 = icmp ne i32 %334, 7
  %337 = and i1 %335, %336
  %338 = zext i1 %337 to i32
  br label %339

339:                                              ; preds = %332, %327
  %340 = phi i32 [ 0, %327 ], [ %338, %332 ]
  %341 = and i32 %329, 2
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %348, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 29
  %345 = load i32, ptr %344, align 4, !tbaa !203
  switch i32 %345, label %346 [
    i32 18, label %348
    i32 7, label %348
  ]

346:                                              ; preds = %343
  %347 = add nuw nsw i32 %340, 1
  br label %348

348:                                              ; preds = %346, %343, %343, %339
  %349 = phi i32 [ %347, %346 ], [ %340, %343 ], [ %340, %339 ], [ %340, %343 ]
  %350 = icmp eq i32 %16, 7
  %351 = add nuw nsw i32 %349, 27
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %352
  %354 = load i8, ptr %353, align 1, !tbaa !5
  br i1 %350, label %355, label %363

355:                                              ; preds = %348
  %356 = zext i8 %354 to i64
  %357 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %356
  %358 = load i16, ptr %357, align 2, !tbaa !37
  %359 = zext i16 %358 to i32
  %360 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %361 = load i32, ptr %360, align 16, !tbaa !40
  %362 = add nsw i32 %361, %359
  store i32 %362, ptr %360, align 16, !tbaa !40
  br label %3778

363:                                              ; preds = %348
  %364 = xor i8 %354, 1
  %365 = zext i8 %364 to i64
  %366 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %365
  %367 = load i16, ptr %366, align 2, !tbaa !37
  %368 = zext i16 %367 to i32
  %369 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %370 = load i32, ptr %369, align 16, !tbaa !40
  %371 = add nsw i32 %370, %368
  %372 = icmp eq i32 %16, 17
  br i1 %372, label %373, label %414

373:                                              ; preds = %363
  %374 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 30
  %375 = load i8, ptr %374, align 1, !tbaa !5
  %376 = xor i8 %375, 1
  %377 = zext i8 %376 to i64
  %378 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %377
  %379 = load i16, ptr %378, align 2, !tbaa !37
  %380 = zext i16 %379 to i32
  %381 = add nsw i32 %371, %380
  %382 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 31
  %383 = load i8, ptr %382, align 1, !tbaa !5
  %384 = xor i8 %383, 1
  %385 = zext i8 %384 to i64
  %386 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %385
  %387 = load i16, ptr %386, align 2, !tbaa !37
  %388 = zext i16 %387 to i32
  %389 = add nsw i32 %381, %388
  %390 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 32
  %391 = load i8, ptr %390, align 1, !tbaa !5
  %392 = zext i8 %391 to i64
  %393 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %392, i64 1
  %394 = load i8, ptr %393, align 1, !tbaa !5
  %395 = xor i64 %392, 1
  %396 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %395
  %397 = load i16, ptr %396, align 2, !tbaa !37
  %398 = zext i16 %397 to i32
  %399 = add nsw i32 %389, %398
  %400 = zext i8 %394 to i64
  %401 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %400, i64 1
  %402 = load i8, ptr %401, align 1, !tbaa !5
  store i8 %402, ptr %390, align 1, !tbaa !5
  %403 = xor i64 %400, 1
  %404 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %403
  %405 = load i16, ptr %404, align 2, !tbaa !37
  %406 = zext i16 %405 to i32
  %407 = add nsw i32 %399, %406
  %408 = xor i8 %402, 1
  %409 = zext i8 %408 to i64
  %410 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %409
  %411 = load i16, ptr %410, align 2, !tbaa !37
  %412 = zext i16 %411 to i32
  %413 = add nsw i32 %407, %412
  store i32 %413, ptr %369, align 16, !tbaa !40
  br label %837

414:                                              ; preds = %363
  %415 = icmp ult i32 %16, 4
  br i1 %415, label %416, label %537

416:                                              ; preds = %414
  %417 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 30
  %418 = load i8, ptr %417, align 1, !tbaa !5
  %419 = xor i8 %418, 1
  %420 = zext i8 %419 to i64
  %421 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %420
  %422 = load i16, ptr %421, align 2, !tbaa !37
  %423 = zext i16 %422 to i32
  %424 = add nsw i32 %371, %423
  %425 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 31
  %426 = load i8, ptr %425, align 1, !tbaa !5
  %427 = xor i8 %426, 1
  %428 = zext i8 %427 to i64
  %429 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %428
  %430 = load i16, ptr %429, align 2, !tbaa !37
  %431 = zext i16 %430 to i32
  %432 = add nsw i32 %424, %431
  %433 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 32
  %434 = load i8, ptr %433, align 1, !tbaa !5
  %435 = zext i8 %434 to i64
  %436 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %435, i64 1
  %437 = load i8, ptr %436, align 1, !tbaa !5
  %438 = xor i64 %435, 1
  %439 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %438
  %440 = load i16, ptr %439, align 2, !tbaa !37
  %441 = zext i16 %440 to i32
  %442 = add nsw i32 %432, %441
  %443 = zext i8 %437 to i64
  %444 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %443, i64 0
  %445 = load i8, ptr %444, align 2, !tbaa !5
  %446 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %443
  %447 = load i16, ptr %446, align 2, !tbaa !37
  %448 = zext i16 %447 to i32
  %449 = add nsw i32 %442, %448
  %450 = zext i8 %445 to i64
  %451 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %450, i64 1
  %452 = load i8, ptr %451, align 1, !tbaa !5
  store i8 %452, ptr %433, align 1, !tbaa !5
  %453 = xor i64 %450, 1
  %454 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %453
  %455 = load i16, ptr %454, align 2, !tbaa !37
  %456 = zext i16 %455 to i32
  %457 = add nsw i32 %449, %456
  %458 = icmp ult i32 %16, 2
  br i1 %458, label %459, label %465

459:                                              ; preds = %416
  %460 = zext i8 %452 to i64
  %461 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %460
  %462 = load i16, ptr %461, align 2, !tbaa !37
  %463 = zext i16 %462 to i32
  %464 = add nsw i32 %457, %463
  store i32 %464, ptr %369, align 16, !tbaa !40
  br label %620

465:                                              ; preds = %416
  %466 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 59
  %467 = load i32, ptr %466, align 16, !tbaa !70
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode16x16_fix, i64 0, i64 %468
  %470 = load i8, ptr %469, align 1, !tbaa !5
  %471 = zext i8 %470 to i32
  %472 = xor i8 %452, 1
  %473 = zext i8 %472 to i64
  %474 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %473
  %475 = load i16, ptr %474, align 2, !tbaa !37
  %476 = zext i16 %475 to i32
  %477 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %478 = load i32, ptr %477, align 8, !tbaa !45
  %479 = icmp ne i32 %478, 0
  %480 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 33
  %481 = load i8, ptr %480, align 1, !tbaa !5
  %482 = zext i1 %479 to i8
  %483 = xor i8 %481, %482
  %484 = zext i8 %483 to i64
  %485 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %484
  %486 = load i16, ptr %485, align 2, !tbaa !37
  %487 = zext i16 %486 to i32
  %488 = add i32 %457, 7
  %489 = add i32 %488, %476
  %490 = add nsw i32 %489, %487
  %491 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %492 = load i32, ptr %491, align 4, !tbaa !71
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 34
  %495 = load i8, ptr %494, align 1, !tbaa !5
  %496 = zext i8 %495 to i64
  br i1 %493, label %510, label %497

497:                                              ; preds = %465
  %498 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %496, i64 1
  %499 = load i8, ptr %498, align 1, !tbaa !5
  store i8 %499, ptr %494, align 1, !tbaa !5
  %500 = xor i64 %496, 1
  %501 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %500
  %502 = load i16, ptr %501, align 2, !tbaa !37
  %503 = zext i16 %502 to i32
  %504 = add nsw i32 %490, %503
  %505 = load i32, ptr %491, align 4, !tbaa !71
  %506 = ashr i32 %505, 1
  %507 = sext i32 %506 to i64
  %508 = zext i8 %499 to i64
  %509 = xor i64 %507, %508
  br label %510

510:                                              ; preds = %497, %465
  %511 = phi i64 [ %509, %497 ], [ %496, %465 ]
  %512 = phi i32 [ %504, %497 ], [ %490, %465 ]
  %513 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %511
  %514 = load i16, ptr %513, align 2, !tbaa !37
  %515 = zext i16 %514 to i32
  %516 = add nsw i32 %512, %515
  %517 = lshr i32 %471, 1
  %518 = zext i32 %517 to i64
  %519 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 35
  %520 = load i8, ptr %519, align 1, !tbaa !5
  %521 = zext i8 %520 to i64
  %522 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %521, i64 %518
  %523 = load i8, ptr %522, align 1, !tbaa !5
  store i8 %523, ptr %519, align 1, !tbaa !5
  %524 = xor i64 %521, %518
  %525 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %524
  %526 = load i16, ptr %525, align 2, !tbaa !37
  %527 = zext i16 %526 to i32
  %528 = add nsw i32 %516, %527
  %529 = and i32 %471, 1
  %530 = zext i8 %523 to i32
  %531 = xor i32 %529, %530
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %532
  %534 = load i16, ptr %533, align 2, !tbaa !37
  %535 = zext i16 %534 to i32
  %536 = add nsw i32 %528, %535
  store i32 %536, ptr %369, align 16, !tbaa !40
  br label %620

537:                                              ; preds = %414
  %538 = mul i32 %16, 3
  %539 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %540 = load i32, ptr %539, align 4, !tbaa !50
  %541 = add i32 %538, -38
  %542 = add i32 %541, %540
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [27 x i8], ptr @x264_cabac_mb_type.i_mb_bits, i64 0, i64 %543
  %545 = load i8, ptr %544, align 1, !tbaa !5
  %546 = zext i8 %545 to i32
  %547 = and i32 %546, 1
  %548 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 30
  %549 = load i8, ptr %548, align 1, !tbaa !5
  %550 = zext i8 %549 to i32
  %551 = xor i32 %547, %550
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %552
  %554 = load i16, ptr %553, align 2, !tbaa !37
  %555 = zext i16 %554 to i32
  %556 = add nsw i32 %371, %555
  %557 = sub nuw nsw i32 32, %547
  %558 = zext i32 %557 to i64
  %559 = lshr i32 %546, 1
  %560 = and i32 %559, 1
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %558
  %563 = load i8, ptr %562, align 1, !tbaa !5
  %564 = zext i8 %563 to i64
  %565 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %564, i64 %561
  %566 = load i8, ptr %565, align 1, !tbaa !5
  store i8 %566, ptr %562, align 1, !tbaa !5
  %567 = xor i64 %564, %561
  %568 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %567
  %569 = load i16, ptr %568, align 2, !tbaa !37
  %570 = zext i16 %569 to i32
  %571 = add nsw i32 %556, %570
  store i32 %571, ptr %369, align 16, !tbaa !40
  %572 = lshr i32 %546, 2
  %573 = icmp eq i32 %572, 1
  br i1 %573, label %832, label %574

574:                                              ; preds = %537
  %575 = and i32 %572, 1
  %576 = zext i32 %575 to i64
  %577 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 32
  %578 = load i8, ptr %577, align 1, !tbaa !5
  %579 = zext i8 %578 to i64
  %580 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %579, i64 %576
  %581 = load i8, ptr %580, align 1, !tbaa !5
  %582 = xor i64 %579, %576
  %583 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %582
  %584 = load i16, ptr %583, align 2, !tbaa !37
  %585 = zext i16 %584 to i32
  %586 = add nsw i32 %571, %585
  %587 = lshr i32 %546, 3
  %588 = and i32 %587, 1
  %589 = zext i32 %588 to i64
  %590 = zext i8 %581 to i64
  %591 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %590, i64 %589
  %592 = load i8, ptr %591, align 1, !tbaa !5
  %593 = xor i64 %590, %589
  %594 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %593
  %595 = load i16, ptr %594, align 2, !tbaa !37
  %596 = zext i16 %595 to i32
  %597 = add nsw i32 %586, %596
  %598 = lshr i32 %546, 4
  %599 = and i32 %598, 1
  %600 = zext i32 %599 to i64
  %601 = zext i8 %592 to i64
  %602 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %601, i64 %600
  %603 = load i8, ptr %602, align 1, !tbaa !5
  store i8 %603, ptr %577, align 1, !tbaa !5
  %604 = xor i64 %601, %600
  %605 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %604
  %606 = load i16, ptr %605, align 2, !tbaa !37
  %607 = zext i16 %606 to i32
  %608 = add nsw i32 %597, %607
  store i32 %608, ptr %369, align 16, !tbaa !40
  %609 = lshr i32 %546, 5
  %610 = icmp eq i32 %609, 1
  br i1 %610, label %832, label %611

611:                                              ; preds = %574
  %612 = and i32 %609, 1
  %613 = zext i8 %603 to i32
  %614 = xor i32 %612, %613
  %615 = zext i32 %614 to i64
  %616 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %615
  %617 = load i16, ptr %616, align 2, !tbaa !37
  %618 = zext i16 %617 to i32
  %619 = add nsw i32 %608, %618
  store i32 %619, ptr %369, align 16, !tbaa !40
  br label %832

620:                                              ; preds = %81, %245, %459, %510
  %621 = phi i32 [ %91, %81 ], [ %252, %245 ], [ %464, %459 ], [ %536, %510 ]
  %622 = icmp eq i32 %16, 2
  %623 = icmp ult i32 %16, 3
  %624 = icmp eq i32 %16, 3
  br label %631

625:                                              ; preds = %144, %300
  %626 = phi i32 [ %172, %144 ], [ %326, %300 ]
  %627 = icmp eq i32 %16, 2
  %628 = icmp ult i32 %16, 3
  %629 = icmp eq i32 %16, 3
  %630 = icmp ult i32 %16, 4
  br i1 %630, label %631, label %832

631:                                              ; preds = %620, %625
  %632 = phi i32 [ %621, %620 ], [ %626, %625 ]
  %633 = phi i1 [ %624, %620 ], [ %629, %625 ]
  %634 = phi i1 [ %623, %620 ], [ %628, %625 ]
  %635 = phi i1 [ %622, %620 ], [ %627, %625 ]
  %636 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %637 = load ptr, ptr %636, align 16, !tbaa !66
  %638 = getelementptr inbounds %struct.x264_pps_t, ptr %637, i64 0, i32 15
  %639 = load i32, ptr %638, align 4, !tbaa !67
  %640 = icmp ne i32 %639, 0
  %641 = icmp ne i32 %16, 2
  %642 = select i1 %640, i1 %641, i1 false
  br i1 %642, label %643, label %660

643:                                              ; preds = %631
  %644 = getelementptr i8, ptr %0, i64 17396
  %645 = load i32, ptr %644, align 4, !tbaa !51
  %646 = getelementptr i8, ptr %0, i64 25768
  %647 = load i32, ptr %646, align 8, !tbaa !443
  %648 = add nsw i32 %647, 399
  %649 = sext i32 %648 to i64
  %650 = sext i32 %645 to i64
  %651 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %649
  %652 = load i8, ptr %651, align 1, !tbaa !5
  %653 = zext i8 %652 to i64
  %654 = xor i64 %653, %650
  %655 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %654
  %656 = load i16, ptr %655, align 2, !tbaa !37
  %657 = zext i16 %656 to i32
  %658 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %659 = add nsw i32 %632, %657
  store i32 %659, ptr %658, align 16, !tbaa !40
  br label %660

660:                                              ; preds = %643, %631
  %661 = phi i32 [ %659, %643 ], [ %632, %631 ]
  br i1 %641, label %662, label %759

662:                                              ; preds = %660
  %663 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  %664 = load i32, ptr %663, align 4, !tbaa !51
  %665 = icmp eq i32 %664, 0
  %666 = select i1 %665, i64 1, i64 4
  %667 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67
  %668 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 68
  %669 = load i8, ptr %668, align 1, !tbaa !5
  %670 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %671 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 69
  br label %672

672:                                              ; preds = %662, %749
  %673 = phi i32 [ %661, %662 ], [ %756, %749 ]
  %674 = phi i64 [ 0, %662 ], [ %757, %749 ]
  %675 = phi i8 [ %669, %662 ], [ %752, %749 ]
  %676 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %674
  %677 = load i32, ptr %676, align 4, !tbaa !39
  %678 = add nsw i32 %677, -1
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds [40 x i8], ptr %667, i64 0, i64 %679
  %681 = load i8, ptr %680, align 1, !tbaa !5
  %682 = sext i8 %681 to i64
  %683 = add nsw i32 %677, -8
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds [40 x i8], ptr %667, i64 0, i64 %684
  %686 = load i8, ptr %685, align 1, !tbaa !5
  %687 = sext i8 %686 to i64
  %688 = add nsw i64 %682, 1
  %689 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %688
  %690 = load i8, ptr %689, align 1, !tbaa !5
  %691 = add nsw i64 %687, 1
  %692 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %691
  %693 = load i8, ptr %692, align 1, !tbaa !5
  %694 = tail call i8 @llvm.smin.i8(i8 %690, i8 %693)
  %695 = icmp slt i8 %694, 0
  %696 = select i1 %695, i8 2, i8 %694
  %697 = sext i32 %677 to i64
  %698 = getelementptr inbounds [40 x i8], ptr %667, i64 0, i64 %697
  %699 = load i8, ptr %698, align 1, !tbaa !5
  %700 = sext i8 %699 to i64
  %701 = add nsw i64 %700, 1
  %702 = getelementptr inbounds [13 x i8], ptr @x264_mb_pred_mode4x4_fix, i64 0, i64 %701
  %703 = load i8, ptr %702, align 1, !tbaa !5
  %704 = icmp eq i8 %696, %703
  %705 = zext i8 %675 to i64
  br i1 %704, label %706, label %710

706:                                              ; preds = %672
  %707 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %705, i64 1
  %708 = load i8, ptr %707, align 1, !tbaa !5
  store i8 %708, ptr %668, align 1, !tbaa !5
  %709 = xor i64 %705, 1
  br label %749

710:                                              ; preds = %672
  %711 = sext i8 %703 to i32
  %712 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %705, i64 0
  %713 = load i8, ptr %712, align 2, !tbaa !5
  store i8 %713, ptr %668, align 1, !tbaa !5
  %714 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %705
  %715 = load i16, ptr %714, align 2, !tbaa !37
  %716 = zext i16 %715 to i32
  %717 = add nsw i32 %673, %716
  %718 = icmp sgt i8 %703, %696
  %719 = sext i1 %718 to i32
  %720 = add nsw i32 %719, %711
  %721 = and i32 %720, 1
  %722 = zext i32 %721 to i64
  %723 = load i8, ptr %671, align 1, !tbaa !5
  %724 = zext i8 %723 to i64
  %725 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %724, i64 %722
  %726 = load i8, ptr %725, align 1, !tbaa !5
  %727 = xor i64 %724, %722
  %728 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %727
  %729 = load i16, ptr %728, align 2, !tbaa !37
  %730 = zext i16 %729 to i32
  %731 = add nsw i32 %717, %730
  %732 = lshr i32 %720, 1
  %733 = and i32 %732, 1
  %734 = zext i32 %733 to i64
  %735 = zext i8 %726 to i64
  %736 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %735, i64 %734
  %737 = load i8, ptr %736, align 1, !tbaa !5
  %738 = xor i64 %735, %734
  %739 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %738
  %740 = load i16, ptr %739, align 2, !tbaa !37
  %741 = zext i16 %740 to i32
  %742 = add nsw i32 %731, %741
  %743 = ashr i32 %720, 2
  %744 = sext i32 %743 to i64
  %745 = zext i8 %737 to i64
  %746 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %745, i64 %744
  %747 = load i8, ptr %746, align 1, !tbaa !5
  store i8 %747, ptr %671, align 1, !tbaa !5
  %748 = xor i64 %745, %744
  br label %749

749:                                              ; preds = %706, %710
  %750 = phi i64 [ %709, %706 ], [ %748, %710 ]
  %751 = phi i32 [ %673, %706 ], [ %742, %710 ]
  %752 = phi i8 [ %708, %706 ], [ %713, %710 ]
  %753 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %750
  %754 = load i16, ptr %753, align 2, !tbaa !37
  %755 = zext i16 %754 to i32
  %756 = add nsw i32 %751, %755
  store i32 %756, ptr %670, align 16, !tbaa !40
  %757 = add nuw nsw i64 %674, %666
  %758 = icmp ult i64 %757, 16
  br i1 %758, label %672, label %759, !llvm.loop !444

759:                                              ; preds = %749, %660
  %760 = phi i32 [ %661, %660 ], [ %756, %749 ]
  %761 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 60
  %762 = load i32, ptr %761, align 4, !tbaa !72
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 24
  %765 = load i32, ptr %764, align 8, !tbaa !442
  %766 = and i32 %765, 1
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %778, label %768

768:                                              ; preds = %759
  %769 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 44
  %770 = load ptr, ptr %769, align 8, !tbaa !445
  %771 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 34
  %772 = load i32, ptr %771, align 8, !tbaa !446
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds i8, ptr %770, i64 %773
  %775 = load i8, ptr %774, align 1, !tbaa !5
  %776 = icmp ne i8 %775, 0
  %777 = zext i1 %776 to i32
  br label %778

778:                                              ; preds = %768, %759
  %779 = phi i32 [ 0, %759 ], [ %777, %768 ]
  %780 = and i32 %765, 2
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %793, label %782

782:                                              ; preds = %778
  %783 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 44
  %784 = load ptr, ptr %783, align 8, !tbaa !445
  %785 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 35
  %786 = load i32, ptr %785, align 4, !tbaa !447
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds i8, ptr %784, i64 %787
  %789 = load i8, ptr %788, align 1, !tbaa !5
  %790 = icmp ne i8 %789, 0
  %791 = zext i1 %790 to i32
  %792 = add nuw nsw i32 %779, %791
  br label %793

793:                                              ; preds = %782, %778
  %794 = phi i32 [ %779, %778 ], [ %792, %782 ]
  %795 = add nuw nsw i32 %794, 64
  %796 = zext i32 %795 to i64
  %797 = add nsw i64 %763, -1
  %798 = icmp ult i64 %797, 3
  %799 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %796
  %800 = load i8, ptr %799, align 1, !tbaa !5
  %801 = zext i1 %798 to i8
  %802 = xor i8 %800, %801
  %803 = zext i8 %802 to i64
  %804 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %803
  %805 = load i16, ptr %804, align 2, !tbaa !37
  %806 = zext i16 %805 to i32
  %807 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %808 = add nsw i32 %760, %806
  store i32 %808, ptr %807, align 16, !tbaa !40
  br i1 %798, label %809, label %3774

809:                                              ; preds = %793
  %810 = and i32 %762, -2
  %811 = icmp eq i32 %810, 2
  %812 = zext i1 %811 to i64
  %813 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 67
  %814 = load i8, ptr %813, align 1, !tbaa !5
  %815 = zext i8 %814 to i64
  %816 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %815, i64 %812
  %817 = load i8, ptr %816, align 1, !tbaa !5
  store i8 %817, ptr %813, align 1, !tbaa !5
  %818 = xor i64 %815, %812
  %819 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %818
  %820 = load i16, ptr %819, align 2, !tbaa !37
  %821 = zext i16 %820 to i32
  %822 = add nsw i32 %808, %821
  store i32 %822, ptr %807, align 16, !tbaa !40
  br i1 %811, label %823, label %3774

823:                                              ; preds = %809
  %824 = icmp eq i32 %762, 3
  %825 = zext i1 %824 to i8
  %826 = xor i8 %817, %825
  %827 = zext i8 %826 to i64
  %828 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %827
  %829 = load i16, ptr %828, align 2, !tbaa !37
  %830 = zext i16 %829 to i32
  %831 = add nsw i32 %822, %830
  store i32 %831, ptr %807, align 16, !tbaa !40
  br i1 %635, label %3911, label %3778

832:                                              ; preds = %611, %574, %537, %625
  %833 = phi i32 [ %626, %625 ], [ %571, %537 ], [ %608, %574 ], [ %619, %611 ]
  %834 = phi i1 [ %629, %625 ], [ false, %537 ], [ false, %574 ], [ false, %611 ]
  %835 = phi i1 [ %628, %625 ], [ false, %537 ], [ false, %574 ], [ false, %611 ]
  %836 = phi i1 [ %627, %625 ], [ false, %537 ], [ false, %574 ], [ false, %611 ]
  switch i32 %16, label %3250 [
    i32 4, label %866
    i32 5, label %852
    i32 17, label %837
    i32 7, label %3778
  ]

837:                                              ; preds = %373, %832
  %838 = phi i1 [ false, %373 ], [ %836, %832 ]
  %839 = phi i1 [ false, %373 ], [ %835, %832 ]
  %840 = phi i1 [ false, %373 ], [ %834, %832 ]
  %841 = phi i32 [ %413, %373 ], [ %833, %832 ]
  %842 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 36
  %843 = load i8, ptr %842, align 1, !tbaa !5
  %844 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %845 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 37
  %846 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 39
  %847 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 38
  %848 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %849 = load i8, ptr %848, align 1, !tbaa !5
  %850 = icmp eq i8 %849, 12
  %851 = zext i8 %843 to i64
  br i1 %850, label %1707, label %1710

852:                                              ; preds = %208, %832
  %853 = phi i1 [ false, %208 ], [ %836, %832 ]
  %854 = phi i1 [ false, %208 ], [ %835, %832 ]
  %855 = phi i1 [ false, %208 ], [ %834, %832 ]
  %856 = phi i32 [ %232, %208 ], [ %833, %832 ]
  %857 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 21
  %858 = load i8, ptr %857, align 1, !tbaa !5
  %859 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %860 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 22
  %861 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 23
  %862 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 0
  %863 = load i8, ptr %862, align 1, !tbaa !5
  %864 = icmp eq i8 %863, 3
  %865 = zext i8 %858 to i64
  br i1 %864, label %1126, label %1130

866:                                              ; preds = %174, %832
  %867 = phi i1 [ false, %174 ], [ %836, %832 ]
  %868 = phi i1 [ false, %174 ], [ %835, %832 ]
  %869 = phi i1 [ false, %174 ], [ %834, %832 ]
  %870 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %871 = load i32, ptr %870, align 4, !tbaa !50
  switch i32 %871, label %1026 [
    i32 16, label %872
    i32 14, label %927
  ]

872:                                              ; preds = %866
  %873 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %874 = load i32, ptr %873, align 8, !tbaa !39
  %875 = icmp sgt i32 %874, 1
  br i1 %875, label %876, label %877

876:                                              ; preds = %872
  tail call fastcc void @x264_cabac_mb_ref(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0, i32 noundef 0)
  br label %877

877:                                              ; preds = %872, %876
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %14) #17
  %878 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %879 = load i16, ptr %878, align 4, !tbaa !37
  %880 = sext i16 %879 to i32
  %881 = load i16, ptr %14, align 4, !tbaa !37
  %882 = sext i16 %881 to i32
  %883 = sub nsw i32 %880, %882
  %884 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %885 = load i16, ptr %884, align 2, !tbaa !37
  %886 = sext i16 %885 to i32
  %887 = getelementptr inbounds [2 x i16], ptr %14, i64 0, i64 1
  %888 = load i16, ptr %887, align 2, !tbaa !37
  %889 = sext i16 %888 to i32
  %890 = sub nsw i32 %886, %889
  %891 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11
  %892 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4
  %893 = load i8, ptr %891, align 1, !tbaa !5
  %894 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11, i64 1
  %895 = load i8, ptr %894, align 1, !tbaa !5
  %896 = load i8, ptr %892, align 1, !tbaa !5
  %897 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4, i64 1
  %898 = load i8, ptr %897, align 1, !tbaa !5
  %899 = zext i8 %893 to i32
  %900 = zext i8 %896 to i32
  %901 = add nuw nsw i32 %900, %899
  %902 = zext i8 %895 to i32
  %903 = zext i8 %898 to i32
  %904 = add nuw nsw i32 %903, %902
  %905 = icmp ugt i32 %901, 2
  %906 = zext i1 %905 to i32
  %907 = icmp ugt i32 %901, 32
  %908 = zext i1 %907 to i32
  %909 = add nuw nsw i32 %906, %908
  %910 = icmp ugt i32 %904, 2
  %911 = zext i1 %910 to i32
  %912 = icmp ugt i32 %904, 32
  %913 = zext i1 %912 to i32
  %914 = add nuw nsw i32 %911, %913
  %915 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %883, i32 noundef %909)
  %916 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %890, i32 noundef %914)
  %917 = shl i32 %916, 8
  %918 = add nsw i32 %917, %915
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #17
  %919 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 12
  %920 = and i32 %918, 65535
  %921 = mul nuw i32 %920, 65537
  %922 = zext i32 %921 to i64
  %923 = mul nuw i64 %922, 4294967297
  store i64 %923, ptr %919, align 8, !tbaa !5
  %924 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  store i64 %923, ptr %924, align 8, !tbaa !5
  %925 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 28
  store i64 %923, ptr %925, align 8, !tbaa !5
  %926 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 36
  store i64 %923, ptr %926, align 8, !tbaa !5
  br i1 %867, label %3911, label %3778

927:                                              ; preds = %866
  %928 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %929 = load i32, ptr %928, align 8, !tbaa !39
  %930 = icmp sgt i32 %929, 1
  br i1 %930, label %931, label %932

931:                                              ; preds = %927
  tail call fastcc void @x264_cabac_mb_ref(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0, i32 noundef 0)
  tail call fastcc void @x264_cabac_mb_ref(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0, i32 noundef 8)
  br label %932

932:                                              ; preds = %927, %931
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %13) #17
  %933 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %934 = load i16, ptr %933, align 4, !tbaa !37
  %935 = sext i16 %934 to i32
  %936 = load i16, ptr %13, align 4, !tbaa !37
  %937 = sext i16 %936 to i32
  %938 = sub nsw i32 %935, %937
  %939 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %940 = load i16, ptr %939, align 2, !tbaa !37
  %941 = sext i16 %940 to i32
  %942 = getelementptr inbounds [2 x i16], ptr %13, i64 0, i64 1
  %943 = load i16, ptr %942, align 2, !tbaa !37
  %944 = sext i16 %943 to i32
  %945 = sub nsw i32 %941, %944
  %946 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11
  %947 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4
  %948 = load i8, ptr %946, align 1, !tbaa !5
  %949 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11, i64 1
  %950 = load i8, ptr %949, align 1, !tbaa !5
  %951 = load i8, ptr %947, align 1, !tbaa !5
  %952 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4, i64 1
  %953 = load i8, ptr %952, align 1, !tbaa !5
  %954 = zext i8 %948 to i32
  %955 = zext i8 %951 to i32
  %956 = add nuw nsw i32 %955, %954
  %957 = zext i8 %950 to i32
  %958 = zext i8 %953 to i32
  %959 = add nuw nsw i32 %958, %957
  %960 = icmp ugt i32 %956, 2
  %961 = zext i1 %960 to i32
  %962 = icmp ugt i32 %956, 32
  %963 = zext i1 %962 to i32
  %964 = add nuw nsw i32 %961, %963
  %965 = icmp ugt i32 %959, 2
  %966 = zext i1 %965 to i32
  %967 = icmp ugt i32 %959, 32
  %968 = zext i1 %967 to i32
  %969 = add nuw nsw i32 %966, %968
  %970 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %938, i32 noundef %964)
  %971 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %945, i32 noundef %969)
  %972 = shl i32 %971, 8
  %973 = add nsw i32 %972, %970
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #17
  %974 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 12
  %975 = and i32 %973, 65535
  %976 = mul nuw i32 %975, 65537
  %977 = zext i32 %976 to i64
  %978 = mul nuw i64 %977, 4294967297
  store i64 %978, ptr %974, align 8, !tbaa !5
  %979 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  store i64 %978, ptr %979, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 8, i32 noundef 4, ptr noundef nonnull %12) #17
  %980 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %981 = load i16, ptr %980, align 4, !tbaa !37
  %982 = sext i16 %981 to i32
  %983 = load i16, ptr %12, align 4, !tbaa !37
  %984 = sext i16 %983 to i32
  %985 = sub nsw i32 %982, %984
  %986 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28, i64 1
  %987 = load i16, ptr %986, align 2, !tbaa !37
  %988 = sext i16 %987 to i32
  %989 = getelementptr inbounds [2 x i16], ptr %12, i64 0, i64 1
  %990 = load i16, ptr %989, align 2, !tbaa !37
  %991 = sext i16 %990 to i32
  %992 = sub nsw i32 %988, %991
  %993 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 27
  %994 = load i8, ptr %993, align 1, !tbaa !5
  %995 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 27, i64 1
  %996 = load i8, ptr %995, align 1, !tbaa !5
  %997 = load i8, ptr %979, align 1, !tbaa !5
  %998 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20, i64 1
  %999 = load i8, ptr %998, align 1, !tbaa !5
  %1000 = zext i8 %994 to i32
  %1001 = zext i8 %997 to i32
  %1002 = add nuw nsw i32 %1001, %1000
  %1003 = zext i8 %996 to i32
  %1004 = zext i8 %999 to i32
  %1005 = add nuw nsw i32 %1004, %1003
  %1006 = icmp ugt i32 %1002, 2
  %1007 = zext i1 %1006 to i32
  %1008 = icmp ugt i32 %1002, 32
  %1009 = zext i1 %1008 to i32
  %1010 = add nuw nsw i32 %1007, %1009
  %1011 = icmp ugt i32 %1005, 2
  %1012 = zext i1 %1011 to i32
  %1013 = icmp ugt i32 %1005, 32
  %1014 = zext i1 %1013 to i32
  %1015 = add nuw nsw i32 %1012, %1014
  %1016 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %985, i32 noundef %1010)
  %1017 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %992, i32 noundef %1015)
  %1018 = shl i32 %1017, 8
  %1019 = add nsw i32 %1018, %1016
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #17
  %1020 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 28
  %1021 = and i32 %1019, 65535
  %1022 = mul nuw i32 %1021, 65537
  %1023 = zext i32 %1022 to i64
  %1024 = mul nuw i64 %1023, 4294967297
  store i64 %1024, ptr %1020, align 8, !tbaa !5
  %1025 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 36
  store i64 %1024, ptr %1025, align 8, !tbaa !5
  br i1 %867, label %3911, label %3778

1026:                                             ; preds = %866
  %1027 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %1028 = load i32, ptr %1027, align 8, !tbaa !39
  %1029 = icmp sgt i32 %1028, 1
  br i1 %1029, label %1030, label %1031

1030:                                             ; preds = %1026
  tail call fastcc void @x264_cabac_mb_ref(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0, i32 noundef 0)
  tail call fastcc void @x264_cabac_mb_ref(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0, i32 noundef 4)
  br label %1031

1031:                                             ; preds = %1026, %1030
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 2, ptr noundef nonnull %11) #17
  %1032 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %1033 = load i16, ptr %1032, align 4, !tbaa !37
  %1034 = sext i16 %1033 to i32
  %1035 = load i16, ptr %11, align 4, !tbaa !37
  %1036 = sext i16 %1035 to i32
  %1037 = sub nsw i32 %1034, %1036
  %1038 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %1039 = load i16, ptr %1038, align 2, !tbaa !37
  %1040 = sext i16 %1039 to i32
  %1041 = getelementptr inbounds [2 x i16], ptr %11, i64 0, i64 1
  %1042 = load i16, ptr %1041, align 2, !tbaa !37
  %1043 = sext i16 %1042 to i32
  %1044 = sub nsw i32 %1040, %1043
  %1045 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11
  %1046 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4
  %1047 = load i8, ptr %1045, align 1, !tbaa !5
  %1048 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11, i64 1
  %1049 = load i8, ptr %1048, align 1, !tbaa !5
  %1050 = load i8, ptr %1046, align 1, !tbaa !5
  %1051 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4, i64 1
  %1052 = load i8, ptr %1051, align 1, !tbaa !5
  %1053 = zext i8 %1047 to i32
  %1054 = zext i8 %1050 to i32
  %1055 = add nuw nsw i32 %1054, %1053
  %1056 = zext i8 %1049 to i32
  %1057 = zext i8 %1052 to i32
  %1058 = add nuw nsw i32 %1057, %1056
  %1059 = icmp ugt i32 %1055, 2
  %1060 = zext i1 %1059 to i32
  %1061 = icmp ugt i32 %1055, 32
  %1062 = zext i1 %1061 to i32
  %1063 = add nuw nsw i32 %1060, %1062
  %1064 = icmp ugt i32 %1058, 2
  %1065 = zext i1 %1064 to i32
  %1066 = icmp ugt i32 %1058, 32
  %1067 = zext i1 %1066 to i32
  %1068 = add nuw nsw i32 %1065, %1067
  %1069 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %1037, i32 noundef %1063)
  %1070 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %1044, i32 noundef %1068)
  %1071 = shl i32 %1070, 8
  %1072 = add nsw i32 %1071, %1069
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #17
  %1073 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 12
  %1074 = and i32 %1072, 65535
  %1075 = mul nuw i32 %1074, 65537
  store i32 %1075, ptr %1073, align 4, !tbaa !5
  %1076 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  store i32 %1075, ptr %1076, align 4, !tbaa !5
  %1077 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 28
  store i32 %1075, ptr %1077, align 4, !tbaa !5
  %1078 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 36
  store i32 %1075, ptr %1078, align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %10) #17
  %1079 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %1080 = load i16, ptr %1079, align 4, !tbaa !37
  %1081 = sext i16 %1080 to i32
  %1082 = load i16, ptr %10, align 4, !tbaa !37
  %1083 = sext i16 %1082 to i32
  %1084 = sub nsw i32 %1081, %1083
  %1085 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14, i64 1
  %1086 = load i16, ptr %1085, align 2, !tbaa !37
  %1087 = sext i16 %1086 to i32
  %1088 = getelementptr inbounds [2 x i16], ptr %10, i64 0, i64 1
  %1089 = load i16, ptr %1088, align 2, !tbaa !37
  %1090 = sext i16 %1089 to i32
  %1091 = sub nsw i32 %1087, %1090
  %1092 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 13
  %1093 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 6
  %1094 = load i8, ptr %1092, align 1, !tbaa !5
  %1095 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 13, i64 1
  %1096 = load i8, ptr %1095, align 1, !tbaa !5
  %1097 = load i8, ptr %1093, align 1, !tbaa !5
  %1098 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 6, i64 1
  %1099 = load i8, ptr %1098, align 1, !tbaa !5
  %1100 = zext i8 %1094 to i32
  %1101 = zext i8 %1097 to i32
  %1102 = add nuw nsw i32 %1101, %1100
  %1103 = zext i8 %1096 to i32
  %1104 = zext i8 %1099 to i32
  %1105 = add nuw nsw i32 %1104, %1103
  %1106 = icmp ugt i32 %1102, 2
  %1107 = zext i1 %1106 to i32
  %1108 = icmp ugt i32 %1102, 32
  %1109 = zext i1 %1108 to i32
  %1110 = add nuw nsw i32 %1107, %1109
  %1111 = icmp ugt i32 %1105, 2
  %1112 = zext i1 %1111 to i32
  %1113 = icmp ugt i32 %1105, 32
  %1114 = zext i1 %1113 to i32
  %1115 = add nuw nsw i32 %1112, %1114
  %1116 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %1084, i32 noundef %1110)
  %1117 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %1091, i32 noundef %1115)
  %1118 = shl i32 %1117, 8
  %1119 = add nsw i32 %1118, %1116
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #17
  %1120 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 14
  %1121 = and i32 %1119, 65535
  %1122 = mul nuw i32 %1121, 65537
  store i32 %1122, ptr %1120, align 4, !tbaa !5
  %1123 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 22
  store i32 %1122, ptr %1123, align 4, !tbaa !5
  %1124 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 30
  store i32 %1122, ptr %1124, align 4, !tbaa !5
  %1125 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 38
  store i32 %1122, ptr %1125, align 4, !tbaa !5
  br i1 %867, label %3911, label %3778

1126:                                             ; preds = %852
  %1127 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %865, i64 1
  %1128 = load i8, ptr %1127, align 1, !tbaa !5
  store i8 %1128, ptr %857, align 1, !tbaa !5
  %1129 = xor i64 %865, 1
  br label %1158

1130:                                             ; preds = %852
  %1131 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %865, i64 0
  %1132 = load i8, ptr %1131, align 2, !tbaa !5
  store i8 %1132, ptr %857, align 1, !tbaa !5
  %1133 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %865
  %1134 = load i16, ptr %1133, align 2, !tbaa !37
  %1135 = zext i16 %1134 to i32
  %1136 = add nsw i32 %856, %1135
  %1137 = icmp eq i8 %863, 1
  %1138 = load i8, ptr %860, align 1, !tbaa !5
  %1139 = zext i8 %1138 to i64
  br i1 %1137, label %1140, label %1143

1140:                                             ; preds = %1130
  %1141 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1139, i64 0
  %1142 = load i8, ptr %1141, align 2, !tbaa !5
  store i8 %1142, ptr %860, align 1, !tbaa !5
  br label %1158

1143:                                             ; preds = %1130
  %1144 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1139, i64 1
  %1145 = load i8, ptr %1144, align 1, !tbaa !5
  store i8 %1145, ptr %860, align 1, !tbaa !5
  %1146 = xor i64 %1139, 1
  %1147 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1146
  %1148 = load i16, ptr %1147, align 2, !tbaa !37
  %1149 = zext i16 %1148 to i32
  %1150 = add nsw i32 %1136, %1149
  %1151 = icmp eq i8 %863, 2
  %1152 = zext i1 %1151 to i64
  %1153 = load i8, ptr %861, align 1, !tbaa !5
  %1154 = zext i8 %1153 to i64
  %1155 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1154, i64 %1152
  %1156 = load i8, ptr %1155, align 1, !tbaa !5
  store i8 %1156, ptr %861, align 1, !tbaa !5
  %1157 = xor i64 %1154, %1152
  br label %1158

1158:                                             ; preds = %1126, %1140, %1143
  %1159 = phi i64 [ %1129, %1126 ], [ %1139, %1140 ], [ %1157, %1143 ]
  %1160 = phi i32 [ %856, %1126 ], [ %1136, %1140 ], [ %1150, %1143 ]
  %1161 = phi i8 [ %1128, %1126 ], [ %1132, %1140 ], [ %1132, %1143 ]
  %1162 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1159
  %1163 = load i16, ptr %1162, align 2, !tbaa !37
  %1164 = zext i16 %1163 to i32
  %1165 = add nsw i32 %1160, %1164
  store i32 %1165, ptr %859, align 16, !tbaa !40
  %1166 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %1167 = load i8, ptr %1166, align 1, !tbaa !5
  %1168 = icmp eq i8 %1167, 3
  %1169 = zext i8 %1161 to i64
  br i1 %1168, label %1198, label %1170

1170:                                             ; preds = %1158
  %1171 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1169, i64 0
  %1172 = load i8, ptr %1171, align 2, !tbaa !5
  store i8 %1172, ptr %857, align 1, !tbaa !5
  %1173 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1169
  %1174 = load i16, ptr %1173, align 2, !tbaa !37
  %1175 = zext i16 %1174 to i32
  %1176 = add nsw i32 %1165, %1175
  %1177 = icmp eq i8 %1167, 1
  %1178 = load i8, ptr %860, align 1, !tbaa !5
  %1179 = zext i8 %1178 to i64
  br i1 %1177, label %1195, label %1180

1180:                                             ; preds = %1170
  %1181 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1179, i64 1
  %1182 = load i8, ptr %1181, align 1, !tbaa !5
  store i8 %1182, ptr %860, align 1, !tbaa !5
  %1183 = xor i64 %1179, 1
  %1184 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1183
  %1185 = load i16, ptr %1184, align 2, !tbaa !37
  %1186 = zext i16 %1185 to i32
  %1187 = add nsw i32 %1176, %1186
  %1188 = icmp eq i8 %1167, 2
  %1189 = zext i1 %1188 to i64
  %1190 = load i8, ptr %861, align 1, !tbaa !5
  %1191 = zext i8 %1190 to i64
  %1192 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1191, i64 %1189
  %1193 = load i8, ptr %1192, align 1, !tbaa !5
  store i8 %1193, ptr %861, align 1, !tbaa !5
  %1194 = xor i64 %1191, %1189
  br label %1202

1195:                                             ; preds = %1170
  %1196 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1179, i64 0
  %1197 = load i8, ptr %1196, align 2, !tbaa !5
  store i8 %1197, ptr %860, align 1, !tbaa !5
  br label %1202

1198:                                             ; preds = %1158
  %1199 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1169, i64 1
  %1200 = load i8, ptr %1199, align 1, !tbaa !5
  store i8 %1200, ptr %857, align 1, !tbaa !5
  %1201 = xor i64 %1169, 1
  br label %1202

1202:                                             ; preds = %1198, %1195, %1180
  %1203 = phi i64 [ %1201, %1198 ], [ %1179, %1195 ], [ %1194, %1180 ]
  %1204 = phi i32 [ %1165, %1198 ], [ %1176, %1195 ], [ %1187, %1180 ]
  %1205 = phi i8 [ %1200, %1198 ], [ %1172, %1195 ], [ %1172, %1180 ]
  %1206 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1203
  %1207 = load i16, ptr %1206, align 2, !tbaa !37
  %1208 = zext i16 %1207 to i32
  %1209 = add nsw i32 %1204, %1208
  store i32 %1209, ptr %859, align 16, !tbaa !40
  %1210 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %1211 = load i8, ptr %1210, align 1, !tbaa !5
  %1212 = icmp eq i8 %1211, 3
  %1213 = zext i8 %1205 to i64
  br i1 %1212, label %1242, label %1214

1214:                                             ; preds = %1202
  %1215 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1213, i64 0
  %1216 = load i8, ptr %1215, align 2, !tbaa !5
  store i8 %1216, ptr %857, align 1, !tbaa !5
  %1217 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1213
  %1218 = load i16, ptr %1217, align 2, !tbaa !37
  %1219 = zext i16 %1218 to i32
  %1220 = add nsw i32 %1209, %1219
  %1221 = icmp eq i8 %1211, 1
  %1222 = load i8, ptr %860, align 1, !tbaa !5
  %1223 = zext i8 %1222 to i64
  br i1 %1221, label %1239, label %1224

1224:                                             ; preds = %1214
  %1225 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1223, i64 1
  %1226 = load i8, ptr %1225, align 1, !tbaa !5
  store i8 %1226, ptr %860, align 1, !tbaa !5
  %1227 = xor i64 %1223, 1
  %1228 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1227
  %1229 = load i16, ptr %1228, align 2, !tbaa !37
  %1230 = zext i16 %1229 to i32
  %1231 = add nsw i32 %1220, %1230
  %1232 = icmp eq i8 %1211, 2
  %1233 = zext i1 %1232 to i64
  %1234 = load i8, ptr %861, align 1, !tbaa !5
  %1235 = zext i8 %1234 to i64
  %1236 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1235, i64 %1233
  %1237 = load i8, ptr %1236, align 1, !tbaa !5
  store i8 %1237, ptr %861, align 1, !tbaa !5
  %1238 = xor i64 %1235, %1233
  br label %1246

1239:                                             ; preds = %1214
  %1240 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1223, i64 0
  %1241 = load i8, ptr %1240, align 2, !tbaa !5
  store i8 %1241, ptr %860, align 1, !tbaa !5
  br label %1246

1242:                                             ; preds = %1202
  %1243 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1213, i64 1
  %1244 = load i8, ptr %1243, align 1, !tbaa !5
  store i8 %1244, ptr %857, align 1, !tbaa !5
  %1245 = xor i64 %1213, 1
  br label %1246

1246:                                             ; preds = %1242, %1239, %1224
  %1247 = phi i64 [ %1245, %1242 ], [ %1223, %1239 ], [ %1238, %1224 ]
  %1248 = phi i32 [ %1209, %1242 ], [ %1220, %1239 ], [ %1231, %1224 ]
  %1249 = phi i8 [ %1244, %1242 ], [ %1216, %1239 ], [ %1216, %1224 ]
  %1250 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1247
  %1251 = load i16, ptr %1250, align 2, !tbaa !37
  %1252 = zext i16 %1251 to i32
  %1253 = add nsw i32 %1248, %1252
  store i32 %1253, ptr %859, align 16, !tbaa !40
  %1254 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %1255 = load i8, ptr %1254, align 1, !tbaa !5
  %1256 = icmp eq i8 %1255, 3
  %1257 = zext i8 %1249 to i64
  br i1 %1256, label %1286, label %1258

1258:                                             ; preds = %1246
  %1259 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1257, i64 0
  %1260 = load i8, ptr %1259, align 2, !tbaa !5
  store i8 %1260, ptr %857, align 1, !tbaa !5
  %1261 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1257
  %1262 = load i16, ptr %1261, align 2, !tbaa !37
  %1263 = zext i16 %1262 to i32
  %1264 = add nsw i32 %1253, %1263
  %1265 = icmp eq i8 %1255, 1
  %1266 = load i8, ptr %860, align 1, !tbaa !5
  %1267 = zext i8 %1266 to i64
  br i1 %1265, label %1283, label %1268

1268:                                             ; preds = %1258
  %1269 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1267, i64 1
  %1270 = load i8, ptr %1269, align 1, !tbaa !5
  store i8 %1270, ptr %860, align 1, !tbaa !5
  %1271 = xor i64 %1267, 1
  %1272 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1271
  %1273 = load i16, ptr %1272, align 2, !tbaa !37
  %1274 = zext i16 %1273 to i32
  %1275 = add nsw i32 %1264, %1274
  %1276 = icmp eq i8 %1255, 2
  %1277 = zext i1 %1276 to i64
  %1278 = load i8, ptr %861, align 1, !tbaa !5
  %1279 = zext i8 %1278 to i64
  %1280 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1279, i64 %1277
  %1281 = load i8, ptr %1280, align 1, !tbaa !5
  store i8 %1281, ptr %861, align 1, !tbaa !5
  %1282 = xor i64 %1279, %1277
  br label %1290

1283:                                             ; preds = %1258
  %1284 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1267, i64 0
  %1285 = load i8, ptr %1284, align 2, !tbaa !5
  store i8 %1285, ptr %860, align 1, !tbaa !5
  br label %1290

1286:                                             ; preds = %1246
  %1287 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1257, i64 1
  %1288 = load i8, ptr %1287, align 1, !tbaa !5
  store i8 %1288, ptr %857, align 1, !tbaa !5
  %1289 = xor i64 %1257, 1
  br label %1290

1290:                                             ; preds = %1286, %1283, %1268
  %1291 = phi i64 [ %1289, %1286 ], [ %1267, %1283 ], [ %1282, %1268 ]
  %1292 = phi i32 [ %1253, %1286 ], [ %1264, %1283 ], [ %1275, %1268 ]
  %1293 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1291
  %1294 = load i16, ptr %1293, align 2, !tbaa !37
  %1295 = zext i16 %1294 to i32
  %1296 = add nsw i32 %1292, %1295
  store i32 %1296, ptr %859, align 16, !tbaa !40
  %1297 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %1298 = load i32, ptr %1297, align 8, !tbaa !39
  %1299 = icmp sgt i32 %1298, 1
  br i1 %1299, label %1300, label %1701

1300:                                             ; preds = %1290
  %1301 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 11
  %1302 = load i8, ptr %1301, align 1, !tbaa !5
  %1303 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 4
  %1304 = load i8, ptr %1303, align 1, !tbaa !5
  %1305 = icmp sgt i8 %1302, 0
  br i1 %1305, label %1306, label %1311

1306:                                             ; preds = %1300
  %1307 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 11
  %1308 = load i8, ptr %1307, align 1, !tbaa !5
  %1309 = icmp eq i8 %1308, 0
  %1310 = zext i1 %1309 to i32
  br label %1311

1311:                                             ; preds = %1306, %1300
  %1312 = phi i32 [ 0, %1300 ], [ %1310, %1306 ]
  %1313 = icmp sgt i8 %1304, 0
  br i1 %1313, label %1314, label %1320

1314:                                             ; preds = %1311
  %1315 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 4
  %1316 = load i8, ptr %1315, align 1, !tbaa !5
  %1317 = icmp eq i8 %1316, 0
  %1318 = or i32 %1312, 2
  %1319 = select i1 %1317, i32 %1318, i32 %1312
  br label %1320

1320:                                             ; preds = %1314, %1311
  %1321 = phi i32 [ %1312, %1311 ], [ %1319, %1314 ]
  %1322 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %1323 = load i8, ptr %1322, align 1, !tbaa !5
  %1324 = icmp sgt i8 %1323, 0
  br i1 %1324, label %1325, label %1387

1325:                                             ; preds = %1320
  %1326 = zext i8 %1323 to i32
  %1327 = and i32 %1326, 1
  %1328 = icmp eq i32 %1327, 0
  br i1 %1328, label %1345, label %1329

1329:                                             ; preds = %1325
  %1330 = add nuw nsw i32 %1321, 54
  %1331 = zext i32 %1330 to i64
  %1332 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1331
  %1333 = load i8, ptr %1332, align 1, !tbaa !5
  %1334 = zext i8 %1333 to i64
  %1335 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1334, i64 1
  %1336 = load i8, ptr %1335, align 1, !tbaa !5
  store i8 %1336, ptr %1332, align 1, !tbaa !5
  %1337 = xor i64 %1334, 1
  %1338 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1337
  %1339 = load i16, ptr %1338, align 2, !tbaa !37
  %1340 = zext i16 %1339 to i32
  %1341 = add nsw i32 %1296, %1340
  %1342 = lshr i32 %1321, 2
  %1343 = add nuw nsw i32 %1342, 4
  %1344 = add nsw i32 %1326, -1
  br label %1345

1345:                                             ; preds = %1329, %1325
  %1346 = phi i32 [ %1296, %1325 ], [ %1341, %1329 ]
  %1347 = phi i32 [ %1326, %1325 ], [ %1344, %1329 ]
  %1348 = phi i32 [ %1321, %1325 ], [ %1343, %1329 ]
  %1349 = phi i32 [ undef, %1325 ], [ %1341, %1329 ]
  %1350 = phi i32 [ undef, %1325 ], [ %1343, %1329 ]
  %1351 = icmp eq i8 %1323, 1
  br i1 %1351, label %1387, label %1352

1352:                                             ; preds = %1345, %1352
  %1353 = phi i32 [ %1381, %1352 ], [ %1346, %1345 ]
  %1354 = phi i32 [ %1384, %1352 ], [ %1347, %1345 ]
  %1355 = phi i32 [ %1383, %1352 ], [ %1348, %1345 ]
  %1356 = add nuw nsw i32 %1355, 54
  %1357 = zext i32 %1356 to i64
  %1358 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1357
  %1359 = load i8, ptr %1358, align 1, !tbaa !5
  %1360 = zext i8 %1359 to i64
  %1361 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1360, i64 1
  %1362 = load i8, ptr %1361, align 1, !tbaa !5
  store i8 %1362, ptr %1358, align 1, !tbaa !5
  %1363 = xor i64 %1360, 1
  %1364 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1363
  %1365 = load i16, ptr %1364, align 2, !tbaa !37
  %1366 = zext i16 %1365 to i32
  %1367 = add nsw i32 %1353, %1366
  %1368 = lshr i32 %1355, 2
  %1369 = add nuw nsw i32 %1368, 4
  %1370 = add nuw nsw i32 %1368, 58
  %1371 = zext i32 %1370 to i64
  %1372 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1371
  %1373 = load i8, ptr %1372, align 1, !tbaa !5
  %1374 = zext i8 %1373 to i64
  %1375 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1374, i64 1
  %1376 = load i8, ptr %1375, align 1, !tbaa !5
  store i8 %1376, ptr %1372, align 1, !tbaa !5
  %1377 = xor i64 %1374, 1
  %1378 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1377
  %1379 = load i16, ptr %1378, align 2, !tbaa !37
  %1380 = zext i16 %1379 to i32
  %1381 = add nsw i32 %1367, %1380
  %1382 = lshr i32 %1369, 2
  %1383 = add nuw nsw i32 %1382, 4
  %1384 = add nsw i32 %1354, -2
  %1385 = add i32 %1354, -3
  %1386 = icmp ult i32 %1385, -2
  br i1 %1386, label %1352, label %1387, !llvm.loop !448

1387:                                             ; preds = %1345, %1352, %1320
  %1388 = phi i32 [ %1296, %1320 ], [ %1349, %1345 ], [ %1381, %1352 ]
  %1389 = phi i32 [ %1321, %1320 ], [ %1350, %1345 ], [ %1383, %1352 ]
  %1390 = add nuw nsw i32 %1389, 54
  %1391 = zext i32 %1390 to i64
  %1392 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1391
  %1393 = load i8, ptr %1392, align 1, !tbaa !5
  %1394 = zext i8 %1393 to i64
  %1395 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1394, i64 0
  %1396 = load i8, ptr %1395, align 2, !tbaa !5
  store i8 %1396, ptr %1392, align 1, !tbaa !5
  %1397 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1394
  %1398 = load i16, ptr %1397, align 2, !tbaa !37
  %1399 = zext i16 %1398 to i32
  %1400 = add nsw i32 %1388, %1399
  store i32 %1400, ptr %859, align 16, !tbaa !40
  %1401 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 13
  %1402 = load i8, ptr %1401, align 1, !tbaa !5
  %1403 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 6
  %1404 = load i8, ptr %1403, align 1, !tbaa !5
  %1405 = icmp sgt i8 %1402, 0
  br i1 %1405, label %1406, label %1411

1406:                                             ; preds = %1387
  %1407 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 13
  %1408 = load i8, ptr %1407, align 1, !tbaa !5
  %1409 = icmp eq i8 %1408, 0
  %1410 = zext i1 %1409 to i32
  br label %1411

1411:                                             ; preds = %1406, %1387
  %1412 = phi i32 [ 0, %1387 ], [ %1410, %1406 ]
  %1413 = icmp sgt i8 %1404, 0
  br i1 %1413, label %1414, label %1420

1414:                                             ; preds = %1411
  %1415 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 6
  %1416 = load i8, ptr %1415, align 1, !tbaa !5
  %1417 = icmp eq i8 %1416, 0
  %1418 = or i32 %1412, 2
  %1419 = select i1 %1417, i32 %1418, i32 %1412
  br label %1420

1420:                                             ; preds = %1414, %1411
  %1421 = phi i32 [ %1412, %1411 ], [ %1419, %1414 ]
  %1422 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %1423 = load i8, ptr %1422, align 1, !tbaa !5
  %1424 = icmp sgt i8 %1423, 0
  br i1 %1424, label %1425, label %1487

1425:                                             ; preds = %1420
  %1426 = zext i8 %1423 to i32
  %1427 = and i32 %1426, 1
  %1428 = icmp eq i32 %1427, 0
  br i1 %1428, label %1445, label %1429

1429:                                             ; preds = %1425
  %1430 = add nuw nsw i32 %1421, 54
  %1431 = zext i32 %1430 to i64
  %1432 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1431
  %1433 = load i8, ptr %1432, align 1, !tbaa !5
  %1434 = zext i8 %1433 to i64
  %1435 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1434, i64 1
  %1436 = load i8, ptr %1435, align 1, !tbaa !5
  store i8 %1436, ptr %1432, align 1, !tbaa !5
  %1437 = xor i64 %1434, 1
  %1438 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1437
  %1439 = load i16, ptr %1438, align 2, !tbaa !37
  %1440 = zext i16 %1439 to i32
  %1441 = add nsw i32 %1400, %1440
  %1442 = lshr i32 %1421, 2
  %1443 = add nuw nsw i32 %1442, 4
  %1444 = add nsw i32 %1426, -1
  br label %1445

1445:                                             ; preds = %1429, %1425
  %1446 = phi i32 [ %1400, %1425 ], [ %1441, %1429 ]
  %1447 = phi i32 [ %1426, %1425 ], [ %1444, %1429 ]
  %1448 = phi i32 [ %1421, %1425 ], [ %1443, %1429 ]
  %1449 = phi i32 [ undef, %1425 ], [ %1441, %1429 ]
  %1450 = phi i32 [ undef, %1425 ], [ %1443, %1429 ]
  %1451 = icmp eq i8 %1423, 1
  br i1 %1451, label %1487, label %1452

1452:                                             ; preds = %1445, %1452
  %1453 = phi i32 [ %1481, %1452 ], [ %1446, %1445 ]
  %1454 = phi i32 [ %1484, %1452 ], [ %1447, %1445 ]
  %1455 = phi i32 [ %1483, %1452 ], [ %1448, %1445 ]
  %1456 = add nuw nsw i32 %1455, 54
  %1457 = zext i32 %1456 to i64
  %1458 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1457
  %1459 = load i8, ptr %1458, align 1, !tbaa !5
  %1460 = zext i8 %1459 to i64
  %1461 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1460, i64 1
  %1462 = load i8, ptr %1461, align 1, !tbaa !5
  store i8 %1462, ptr %1458, align 1, !tbaa !5
  %1463 = xor i64 %1460, 1
  %1464 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1463
  %1465 = load i16, ptr %1464, align 2, !tbaa !37
  %1466 = zext i16 %1465 to i32
  %1467 = add nsw i32 %1453, %1466
  %1468 = lshr i32 %1455, 2
  %1469 = add nuw nsw i32 %1468, 4
  %1470 = add nuw nsw i32 %1468, 58
  %1471 = zext i32 %1470 to i64
  %1472 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1471
  %1473 = load i8, ptr %1472, align 1, !tbaa !5
  %1474 = zext i8 %1473 to i64
  %1475 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1474, i64 1
  %1476 = load i8, ptr %1475, align 1, !tbaa !5
  store i8 %1476, ptr %1472, align 1, !tbaa !5
  %1477 = xor i64 %1474, 1
  %1478 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1477
  %1479 = load i16, ptr %1478, align 2, !tbaa !37
  %1480 = zext i16 %1479 to i32
  %1481 = add nsw i32 %1467, %1480
  %1482 = lshr i32 %1469, 2
  %1483 = add nuw nsw i32 %1482, 4
  %1484 = add nsw i32 %1454, -2
  %1485 = add i32 %1454, -3
  %1486 = icmp ult i32 %1485, -2
  br i1 %1486, label %1452, label %1487, !llvm.loop !448

1487:                                             ; preds = %1445, %1452, %1420
  %1488 = phi i32 [ %1400, %1420 ], [ %1449, %1445 ], [ %1481, %1452 ]
  %1489 = phi i32 [ %1421, %1420 ], [ %1450, %1445 ], [ %1483, %1452 ]
  %1490 = add nuw nsw i32 %1489, 54
  %1491 = zext i32 %1490 to i64
  %1492 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1491
  %1493 = load i8, ptr %1492, align 1, !tbaa !5
  %1494 = zext i8 %1493 to i64
  %1495 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1494, i64 0
  %1496 = load i8, ptr %1495, align 2, !tbaa !5
  store i8 %1496, ptr %1492, align 1, !tbaa !5
  %1497 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1494
  %1498 = load i16, ptr %1497, align 2, !tbaa !37
  %1499 = zext i16 %1498 to i32
  %1500 = add nsw i32 %1488, %1499
  store i32 %1500, ptr %859, align 16, !tbaa !40
  %1501 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 27
  %1502 = load i8, ptr %1501, align 1, !tbaa !5
  %1503 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  %1504 = load i8, ptr %1503, align 1, !tbaa !5
  %1505 = icmp sgt i8 %1502, 0
  br i1 %1505, label %1506, label %1511

1506:                                             ; preds = %1487
  %1507 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 27
  %1508 = load i8, ptr %1507, align 1, !tbaa !5
  %1509 = icmp eq i8 %1508, 0
  %1510 = zext i1 %1509 to i32
  br label %1511

1511:                                             ; preds = %1506, %1487
  %1512 = phi i32 [ 0, %1487 ], [ %1510, %1506 ]
  %1513 = icmp sgt i8 %1504, 0
  br i1 %1513, label %1514, label %1520

1514:                                             ; preds = %1511
  %1515 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 20
  %1516 = load i8, ptr %1515, align 1, !tbaa !5
  %1517 = icmp eq i8 %1516, 0
  %1518 = or i32 %1512, 2
  %1519 = select i1 %1517, i32 %1518, i32 %1512
  br label %1520

1520:                                             ; preds = %1514, %1511
  %1521 = phi i32 [ %1512, %1511 ], [ %1519, %1514 ]
  %1522 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %1523 = load i8, ptr %1522, align 1, !tbaa !5
  %1524 = icmp sgt i8 %1523, 0
  br i1 %1524, label %1525, label %1587

1525:                                             ; preds = %1520
  %1526 = zext i8 %1523 to i32
  %1527 = and i32 %1526, 1
  %1528 = icmp eq i32 %1527, 0
  br i1 %1528, label %1545, label %1529

1529:                                             ; preds = %1525
  %1530 = add nuw nsw i32 %1521, 54
  %1531 = zext i32 %1530 to i64
  %1532 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1531
  %1533 = load i8, ptr %1532, align 1, !tbaa !5
  %1534 = zext i8 %1533 to i64
  %1535 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1534, i64 1
  %1536 = load i8, ptr %1535, align 1, !tbaa !5
  store i8 %1536, ptr %1532, align 1, !tbaa !5
  %1537 = xor i64 %1534, 1
  %1538 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1537
  %1539 = load i16, ptr %1538, align 2, !tbaa !37
  %1540 = zext i16 %1539 to i32
  %1541 = add nsw i32 %1500, %1540
  %1542 = lshr i32 %1521, 2
  %1543 = add nuw nsw i32 %1542, 4
  %1544 = add nsw i32 %1526, -1
  br label %1545

1545:                                             ; preds = %1529, %1525
  %1546 = phi i32 [ %1500, %1525 ], [ %1541, %1529 ]
  %1547 = phi i32 [ %1526, %1525 ], [ %1544, %1529 ]
  %1548 = phi i32 [ %1521, %1525 ], [ %1543, %1529 ]
  %1549 = phi i32 [ undef, %1525 ], [ %1541, %1529 ]
  %1550 = phi i32 [ undef, %1525 ], [ %1543, %1529 ]
  %1551 = icmp eq i8 %1523, 1
  br i1 %1551, label %1587, label %1552

1552:                                             ; preds = %1545, %1552
  %1553 = phi i32 [ %1581, %1552 ], [ %1546, %1545 ]
  %1554 = phi i32 [ %1584, %1552 ], [ %1547, %1545 ]
  %1555 = phi i32 [ %1583, %1552 ], [ %1548, %1545 ]
  %1556 = add nuw nsw i32 %1555, 54
  %1557 = zext i32 %1556 to i64
  %1558 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1557
  %1559 = load i8, ptr %1558, align 1, !tbaa !5
  %1560 = zext i8 %1559 to i64
  %1561 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1560, i64 1
  %1562 = load i8, ptr %1561, align 1, !tbaa !5
  store i8 %1562, ptr %1558, align 1, !tbaa !5
  %1563 = xor i64 %1560, 1
  %1564 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1563
  %1565 = load i16, ptr %1564, align 2, !tbaa !37
  %1566 = zext i16 %1565 to i32
  %1567 = add nsw i32 %1553, %1566
  %1568 = lshr i32 %1555, 2
  %1569 = add nuw nsw i32 %1568, 4
  %1570 = add nuw nsw i32 %1568, 58
  %1571 = zext i32 %1570 to i64
  %1572 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1571
  %1573 = load i8, ptr %1572, align 1, !tbaa !5
  %1574 = zext i8 %1573 to i64
  %1575 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1574, i64 1
  %1576 = load i8, ptr %1575, align 1, !tbaa !5
  store i8 %1576, ptr %1572, align 1, !tbaa !5
  %1577 = xor i64 %1574, 1
  %1578 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1577
  %1579 = load i16, ptr %1578, align 2, !tbaa !37
  %1580 = zext i16 %1579 to i32
  %1581 = add nsw i32 %1567, %1580
  %1582 = lshr i32 %1569, 2
  %1583 = add nuw nsw i32 %1582, 4
  %1584 = add nsw i32 %1554, -2
  %1585 = add i32 %1554, -3
  %1586 = icmp ult i32 %1585, -2
  br i1 %1586, label %1552, label %1587, !llvm.loop !448

1587:                                             ; preds = %1545, %1552, %1520
  %1588 = phi i32 [ %1500, %1520 ], [ %1549, %1545 ], [ %1581, %1552 ]
  %1589 = phi i32 [ %1521, %1520 ], [ %1550, %1545 ], [ %1583, %1552 ]
  %1590 = add nuw nsw i32 %1589, 54
  %1591 = zext i32 %1590 to i64
  %1592 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1591
  %1593 = load i8, ptr %1592, align 1, !tbaa !5
  %1594 = zext i8 %1593 to i64
  %1595 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1594, i64 0
  %1596 = load i8, ptr %1595, align 2, !tbaa !5
  store i8 %1596, ptr %1592, align 1, !tbaa !5
  %1597 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1594
  %1598 = load i16, ptr %1597, align 2, !tbaa !37
  %1599 = zext i16 %1598 to i32
  %1600 = add nsw i32 %1588, %1599
  store i32 %1600, ptr %859, align 16, !tbaa !40
  %1601 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 29
  %1602 = load i8, ptr %1601, align 1, !tbaa !5
  %1603 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  %1604 = load i8, ptr %1603, align 1, !tbaa !5
  %1605 = icmp sgt i8 %1602, 0
  br i1 %1605, label %1606, label %1611

1606:                                             ; preds = %1587
  %1607 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 29
  %1608 = load i8, ptr %1607, align 1, !tbaa !5
  %1609 = icmp eq i8 %1608, 0
  %1610 = zext i1 %1609 to i32
  br label %1611

1611:                                             ; preds = %1606, %1587
  %1612 = phi i32 [ 0, %1587 ], [ %1610, %1606 ]
  %1613 = icmp sgt i8 %1604, 0
  br i1 %1613, label %1614, label %1620

1614:                                             ; preds = %1611
  %1615 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 22
  %1616 = load i8, ptr %1615, align 1, !tbaa !5
  %1617 = icmp eq i8 %1616, 0
  %1618 = or i32 %1612, 2
  %1619 = select i1 %1617, i32 %1618, i32 %1612
  br label %1620

1620:                                             ; preds = %1614, %1611
  %1621 = phi i32 [ %1612, %1611 ], [ %1619, %1614 ]
  %1622 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %1623 = load i8, ptr %1622, align 1, !tbaa !5
  %1624 = icmp sgt i8 %1623, 0
  br i1 %1624, label %1625, label %1687

1625:                                             ; preds = %1620
  %1626 = zext i8 %1623 to i32
  %1627 = and i32 %1626, 1
  %1628 = icmp eq i32 %1627, 0
  br i1 %1628, label %1645, label %1629

1629:                                             ; preds = %1625
  %1630 = add nuw nsw i32 %1621, 54
  %1631 = zext i32 %1630 to i64
  %1632 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1631
  %1633 = load i8, ptr %1632, align 1, !tbaa !5
  %1634 = zext i8 %1633 to i64
  %1635 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1634, i64 1
  %1636 = load i8, ptr %1635, align 1, !tbaa !5
  store i8 %1636, ptr %1632, align 1, !tbaa !5
  %1637 = xor i64 %1634, 1
  %1638 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1637
  %1639 = load i16, ptr %1638, align 2, !tbaa !37
  %1640 = zext i16 %1639 to i32
  %1641 = add nsw i32 %1600, %1640
  %1642 = lshr i32 %1621, 2
  %1643 = add nuw nsw i32 %1642, 4
  %1644 = add nsw i32 %1626, -1
  br label %1645

1645:                                             ; preds = %1629, %1625
  %1646 = phi i32 [ %1600, %1625 ], [ %1641, %1629 ]
  %1647 = phi i32 [ %1626, %1625 ], [ %1644, %1629 ]
  %1648 = phi i32 [ %1621, %1625 ], [ %1643, %1629 ]
  %1649 = phi i32 [ undef, %1625 ], [ %1641, %1629 ]
  %1650 = phi i32 [ undef, %1625 ], [ %1643, %1629 ]
  %1651 = icmp eq i8 %1623, 1
  br i1 %1651, label %1687, label %1652

1652:                                             ; preds = %1645, %1652
  %1653 = phi i32 [ %1681, %1652 ], [ %1646, %1645 ]
  %1654 = phi i32 [ %1684, %1652 ], [ %1647, %1645 ]
  %1655 = phi i32 [ %1683, %1652 ], [ %1648, %1645 ]
  %1656 = add nuw nsw i32 %1655, 54
  %1657 = zext i32 %1656 to i64
  %1658 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1657
  %1659 = load i8, ptr %1658, align 1, !tbaa !5
  %1660 = zext i8 %1659 to i64
  %1661 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1660, i64 1
  %1662 = load i8, ptr %1661, align 1, !tbaa !5
  store i8 %1662, ptr %1658, align 1, !tbaa !5
  %1663 = xor i64 %1660, 1
  %1664 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1663
  %1665 = load i16, ptr %1664, align 2, !tbaa !37
  %1666 = zext i16 %1665 to i32
  %1667 = add nsw i32 %1653, %1666
  %1668 = lshr i32 %1655, 2
  %1669 = add nuw nsw i32 %1668, 4
  %1670 = add nuw nsw i32 %1668, 58
  %1671 = zext i32 %1670 to i64
  %1672 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1671
  %1673 = load i8, ptr %1672, align 1, !tbaa !5
  %1674 = zext i8 %1673 to i64
  %1675 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1674, i64 1
  %1676 = load i8, ptr %1675, align 1, !tbaa !5
  store i8 %1676, ptr %1672, align 1, !tbaa !5
  %1677 = xor i64 %1674, 1
  %1678 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1677
  %1679 = load i16, ptr %1678, align 2, !tbaa !37
  %1680 = zext i16 %1679 to i32
  %1681 = add nsw i32 %1667, %1680
  %1682 = lshr i32 %1669, 2
  %1683 = add nuw nsw i32 %1682, 4
  %1684 = add nsw i32 %1654, -2
  %1685 = add i32 %1654, -3
  %1686 = icmp ult i32 %1685, -2
  br i1 %1686, label %1652, label %1687, !llvm.loop !448

1687:                                             ; preds = %1645, %1652, %1620
  %1688 = phi i32 [ %1600, %1620 ], [ %1649, %1645 ], [ %1681, %1652 ]
  %1689 = phi i32 [ %1621, %1620 ], [ %1650, %1645 ], [ %1683, %1652 ]
  %1690 = add nuw nsw i32 %1689, 54
  %1691 = zext i32 %1690 to i64
  %1692 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %1691
  %1693 = load i8, ptr %1692, align 1, !tbaa !5
  %1694 = zext i8 %1693 to i64
  %1695 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1694, i64 0
  %1696 = load i8, ptr %1695, align 2, !tbaa !5
  store i8 %1696, ptr %1692, align 1, !tbaa !5
  %1697 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1694
  %1698 = load i16, ptr %1697, align 2, !tbaa !37
  %1699 = zext i16 %1698 to i32
  %1700 = add nsw i32 %1688, %1699
  store i32 %1700, ptr %859, align 16, !tbaa !40
  br label %1701

1701:                                             ; preds = %1687, %1290
  tail call fastcc void @x264_cabac_mb8x8_mvd(ptr noundef %0, ptr noundef nonnull %1, i32 noundef 0)
  tail call fastcc void @x264_cabac_mb8x8_mvd(ptr noundef %0, ptr noundef nonnull %1, i32 noundef 1)
  tail call fastcc void @x264_cabac_mb8x8_mvd(ptr noundef %0, ptr noundef nonnull %1, i32 noundef 2)
  tail call fastcc void @x264_cabac_mb8x8_mvd(ptr noundef %0, ptr noundef nonnull %1, i32 noundef 3)
  br i1 %853, label %3911, label %3778

1702:                                             ; preds = %1963
  %1703 = zext i8 %1973 to i64
  %1704 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %1703
  %1705 = load i8, ptr %1704, align 1, !tbaa !5
  %1706 = icmp eq i8 %1705, 0
  br i1 %1706, label %2075, label %1974

1707:                                             ; preds = %837
  %1708 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %851, i64 0
  %1709 = load i8, ptr %1708, align 2, !tbaa !5
  store i8 %1709, ptr %842, align 1, !tbaa !5
  br label %1762

1710:                                             ; preds = %837
  %1711 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %851, i64 1
  %1712 = load i8, ptr %1711, align 1, !tbaa !5
  store i8 %1712, ptr %842, align 1, !tbaa !5
  %1713 = xor i64 %851, 1
  %1714 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1713
  %1715 = load i16, ptr %1714, align 2, !tbaa !37
  %1716 = zext i16 %1715 to i32
  %1717 = add nsw i32 %841, %1716
  %1718 = icmp eq i8 %849, 11
  %1719 = load i8, ptr %845, align 1, !tbaa !5
  %1720 = zext i8 %1719 to i64
  br i1 %1718, label %1721, label %1748

1721:                                             ; preds = %1710
  %1722 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1720, i64 1
  %1723 = load i8, ptr %1722, align 1, !tbaa !5
  store i8 %1723, ptr %845, align 1, !tbaa !5
  %1724 = xor i64 %1720, 1
  %1725 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1724
  %1726 = load i16, ptr %1725, align 2, !tbaa !37
  %1727 = zext i16 %1726 to i32
  %1728 = add nsw i32 %1717, %1727
  %1729 = load i8, ptr %847, align 1, !tbaa !5
  %1730 = zext i8 %1729 to i64
  %1731 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1730, i64 0
  %1732 = load i8, ptr %1731, align 2, !tbaa !5
  store i8 %1732, ptr %847, align 1, !tbaa !5
  %1733 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1730
  %1734 = load i16, ptr %1733, align 2, !tbaa !37
  %1735 = zext i16 %1734 to i32
  %1736 = add nsw i32 %1728, %1735
  %1737 = load i8, ptr %846, align 1, !tbaa !5
  %1738 = zext i8 %1737 to i64
  %1739 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1738, i64 0
  %1740 = load i8, ptr %1739, align 2, !tbaa !5
  %1741 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1738
  %1742 = load i16, ptr %1741, align 2, !tbaa !37
  %1743 = zext i16 %1742 to i32
  %1744 = add nsw i32 %1736, %1743
  %1745 = zext i8 %1740 to i64
  %1746 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1745, i64 0
  %1747 = load i8, ptr %1746, align 2, !tbaa !5
  store i8 %1747, ptr %846, align 1, !tbaa !5
  br label %1762

1748:                                             ; preds = %1710
  %1749 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1720, i64 0
  %1750 = load i8, ptr %1749, align 2, !tbaa !5
  store i8 %1750, ptr %845, align 1, !tbaa !5
  %1751 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1720
  %1752 = load i16, ptr %1751, align 2, !tbaa !37
  %1753 = zext i16 %1752 to i32
  %1754 = add nsw i32 %1717, %1753
  %1755 = icmp eq i8 %849, 7
  %1756 = zext i1 %1755 to i64
  %1757 = load i8, ptr %846, align 1, !tbaa !5
  %1758 = zext i8 %1757 to i64
  %1759 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1758, i64 %1756
  %1760 = load i8, ptr %1759, align 1, !tbaa !5
  store i8 %1760, ptr %846, align 1, !tbaa !5
  %1761 = xor i64 %1758, %1756
  br label %1762

1762:                                             ; preds = %1707, %1721, %1748
  %1763 = phi i64 [ %851, %1707 ], [ %1745, %1721 ], [ %1761, %1748 ]
  %1764 = phi i32 [ %841, %1707 ], [ %1744, %1721 ], [ %1754, %1748 ]
  %1765 = phi i8 [ %1709, %1707 ], [ %1712, %1721 ], [ %1712, %1748 ]
  %1766 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1763
  %1767 = load i16, ptr %1766, align 2, !tbaa !37
  %1768 = zext i16 %1767 to i32
  %1769 = add nsw i32 %1764, %1768
  store i32 %1769, ptr %844, align 16, !tbaa !40
  %1770 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 1
  %1771 = load i8, ptr %1770, align 1, !tbaa !5
  %1772 = icmp eq i8 %1771, 12
  %1773 = zext i8 %1765 to i64
  br i1 %1772, label %1826, label %1774

1774:                                             ; preds = %1762
  %1775 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1773, i64 1
  %1776 = load i8, ptr %1775, align 1, !tbaa !5
  store i8 %1776, ptr %842, align 1, !tbaa !5
  %1777 = xor i64 %1773, 1
  %1778 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1777
  %1779 = load i16, ptr %1778, align 2, !tbaa !37
  %1780 = zext i16 %1779 to i32
  %1781 = add nsw i32 %1769, %1780
  %1782 = icmp eq i8 %1771, 11
  %1783 = load i8, ptr %845, align 1, !tbaa !5
  %1784 = zext i8 %1783 to i64
  br i1 %1782, label %1799, label %1785

1785:                                             ; preds = %1774
  %1786 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1784, i64 0
  %1787 = load i8, ptr %1786, align 2, !tbaa !5
  store i8 %1787, ptr %845, align 1, !tbaa !5
  %1788 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1784
  %1789 = load i16, ptr %1788, align 2, !tbaa !37
  %1790 = zext i16 %1789 to i32
  %1791 = add nsw i32 %1781, %1790
  %1792 = icmp eq i8 %1771, 7
  %1793 = zext i1 %1792 to i64
  %1794 = load i8, ptr %846, align 1, !tbaa !5
  %1795 = zext i8 %1794 to i64
  %1796 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1795, i64 %1793
  %1797 = load i8, ptr %1796, align 1, !tbaa !5
  store i8 %1797, ptr %846, align 1, !tbaa !5
  %1798 = xor i64 %1795, %1793
  br label %1829

1799:                                             ; preds = %1774
  %1800 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1784, i64 1
  %1801 = load i8, ptr %1800, align 1, !tbaa !5
  store i8 %1801, ptr %845, align 1, !tbaa !5
  %1802 = xor i64 %1784, 1
  %1803 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1802
  %1804 = load i16, ptr %1803, align 2, !tbaa !37
  %1805 = zext i16 %1804 to i32
  %1806 = add nsw i32 %1781, %1805
  %1807 = load i8, ptr %847, align 1, !tbaa !5
  %1808 = zext i8 %1807 to i64
  %1809 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1808, i64 0
  %1810 = load i8, ptr %1809, align 2, !tbaa !5
  store i8 %1810, ptr %847, align 1, !tbaa !5
  %1811 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1808
  %1812 = load i16, ptr %1811, align 2, !tbaa !37
  %1813 = zext i16 %1812 to i32
  %1814 = add nsw i32 %1806, %1813
  %1815 = load i8, ptr %846, align 1, !tbaa !5
  %1816 = zext i8 %1815 to i64
  %1817 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1816, i64 0
  %1818 = load i8, ptr %1817, align 2, !tbaa !5
  %1819 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1816
  %1820 = load i16, ptr %1819, align 2, !tbaa !37
  %1821 = zext i16 %1820 to i32
  %1822 = add nsw i32 %1814, %1821
  %1823 = zext i8 %1818 to i64
  %1824 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1823, i64 0
  %1825 = load i8, ptr %1824, align 2, !tbaa !5
  store i8 %1825, ptr %846, align 1, !tbaa !5
  br label %1829

1826:                                             ; preds = %1762
  %1827 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1773, i64 0
  %1828 = load i8, ptr %1827, align 2, !tbaa !5
  store i8 %1828, ptr %842, align 1, !tbaa !5
  br label %1829

1829:                                             ; preds = %1826, %1799, %1785
  %1830 = phi i64 [ %1773, %1826 ], [ %1823, %1799 ], [ %1798, %1785 ]
  %1831 = phi i32 [ %1769, %1826 ], [ %1822, %1799 ], [ %1791, %1785 ]
  %1832 = phi i8 [ %1828, %1826 ], [ %1776, %1799 ], [ %1776, %1785 ]
  %1833 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1830
  %1834 = load i16, ptr %1833, align 2, !tbaa !37
  %1835 = zext i16 %1834 to i32
  %1836 = add nsw i32 %1831, %1835
  store i32 %1836, ptr %844, align 16, !tbaa !40
  %1837 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 2
  %1838 = load i8, ptr %1837, align 1, !tbaa !5
  %1839 = icmp eq i8 %1838, 12
  %1840 = zext i8 %1832 to i64
  br i1 %1839, label %1893, label %1841

1841:                                             ; preds = %1829
  %1842 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1840, i64 1
  %1843 = load i8, ptr %1842, align 1, !tbaa !5
  store i8 %1843, ptr %842, align 1, !tbaa !5
  %1844 = xor i64 %1840, 1
  %1845 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1844
  %1846 = load i16, ptr %1845, align 2, !tbaa !37
  %1847 = zext i16 %1846 to i32
  %1848 = add nsw i32 %1836, %1847
  %1849 = icmp eq i8 %1838, 11
  %1850 = load i8, ptr %845, align 1, !tbaa !5
  %1851 = zext i8 %1850 to i64
  br i1 %1849, label %1866, label %1852

1852:                                             ; preds = %1841
  %1853 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1851, i64 0
  %1854 = load i8, ptr %1853, align 2, !tbaa !5
  store i8 %1854, ptr %845, align 1, !tbaa !5
  %1855 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1851
  %1856 = load i16, ptr %1855, align 2, !tbaa !37
  %1857 = zext i16 %1856 to i32
  %1858 = add nsw i32 %1848, %1857
  %1859 = icmp eq i8 %1838, 7
  %1860 = zext i1 %1859 to i64
  %1861 = load i8, ptr %846, align 1, !tbaa !5
  %1862 = zext i8 %1861 to i64
  %1863 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1862, i64 %1860
  %1864 = load i8, ptr %1863, align 1, !tbaa !5
  store i8 %1864, ptr %846, align 1, !tbaa !5
  %1865 = xor i64 %1862, %1860
  br label %1896

1866:                                             ; preds = %1841
  %1867 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1851, i64 1
  %1868 = load i8, ptr %1867, align 1, !tbaa !5
  store i8 %1868, ptr %845, align 1, !tbaa !5
  %1869 = xor i64 %1851, 1
  %1870 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1869
  %1871 = load i16, ptr %1870, align 2, !tbaa !37
  %1872 = zext i16 %1871 to i32
  %1873 = add nsw i32 %1848, %1872
  %1874 = load i8, ptr %847, align 1, !tbaa !5
  %1875 = zext i8 %1874 to i64
  %1876 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1875, i64 0
  %1877 = load i8, ptr %1876, align 2, !tbaa !5
  store i8 %1877, ptr %847, align 1, !tbaa !5
  %1878 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1875
  %1879 = load i16, ptr %1878, align 2, !tbaa !37
  %1880 = zext i16 %1879 to i32
  %1881 = add nsw i32 %1873, %1880
  %1882 = load i8, ptr %846, align 1, !tbaa !5
  %1883 = zext i8 %1882 to i64
  %1884 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1883, i64 0
  %1885 = load i8, ptr %1884, align 2, !tbaa !5
  %1886 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1883
  %1887 = load i16, ptr %1886, align 2, !tbaa !37
  %1888 = zext i16 %1887 to i32
  %1889 = add nsw i32 %1881, %1888
  %1890 = zext i8 %1885 to i64
  %1891 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1890, i64 0
  %1892 = load i8, ptr %1891, align 2, !tbaa !5
  store i8 %1892, ptr %846, align 1, !tbaa !5
  br label %1896

1893:                                             ; preds = %1829
  %1894 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1840, i64 0
  %1895 = load i8, ptr %1894, align 2, !tbaa !5
  store i8 %1895, ptr %842, align 1, !tbaa !5
  br label %1896

1896:                                             ; preds = %1893, %1866, %1852
  %1897 = phi i64 [ %1840, %1893 ], [ %1890, %1866 ], [ %1865, %1852 ]
  %1898 = phi i32 [ %1836, %1893 ], [ %1889, %1866 ], [ %1858, %1852 ]
  %1899 = phi i8 [ %1895, %1893 ], [ %1843, %1866 ], [ %1843, %1852 ]
  %1900 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1897
  %1901 = load i16, ptr %1900, align 2, !tbaa !37
  %1902 = zext i16 %1901 to i32
  %1903 = add nsw i32 %1898, %1902
  store i32 %1903, ptr %844, align 16, !tbaa !40
  %1904 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 3
  %1905 = load i8, ptr %1904, align 1, !tbaa !5
  %1906 = icmp eq i8 %1905, 12
  %1907 = zext i8 %1899 to i64
  br i1 %1906, label %1960, label %1908

1908:                                             ; preds = %1896
  %1909 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1907, i64 1
  %1910 = load i8, ptr %1909, align 1, !tbaa !5
  store i8 %1910, ptr %842, align 1, !tbaa !5
  %1911 = xor i64 %1907, 1
  %1912 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1911
  %1913 = load i16, ptr %1912, align 2, !tbaa !37
  %1914 = zext i16 %1913 to i32
  %1915 = add nsw i32 %1903, %1914
  %1916 = icmp eq i8 %1905, 11
  %1917 = load i8, ptr %845, align 1, !tbaa !5
  %1918 = zext i8 %1917 to i64
  br i1 %1916, label %1933, label %1919

1919:                                             ; preds = %1908
  %1920 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1918, i64 0
  %1921 = load i8, ptr %1920, align 2, !tbaa !5
  store i8 %1921, ptr %845, align 1, !tbaa !5
  %1922 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1918
  %1923 = load i16, ptr %1922, align 2, !tbaa !37
  %1924 = zext i16 %1923 to i32
  %1925 = add nsw i32 %1915, %1924
  %1926 = icmp eq i8 %1905, 7
  %1927 = zext i1 %1926 to i64
  %1928 = load i8, ptr %846, align 1, !tbaa !5
  %1929 = zext i8 %1928 to i64
  %1930 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1929, i64 %1927
  %1931 = load i8, ptr %1930, align 1, !tbaa !5
  store i8 %1931, ptr %846, align 1, !tbaa !5
  %1932 = xor i64 %1929, %1927
  br label %1963

1933:                                             ; preds = %1908
  %1934 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1918, i64 1
  %1935 = load i8, ptr %1934, align 1, !tbaa !5
  store i8 %1935, ptr %845, align 1, !tbaa !5
  %1936 = xor i64 %1918, 1
  %1937 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1936
  %1938 = load i16, ptr %1937, align 2, !tbaa !37
  %1939 = zext i16 %1938 to i32
  %1940 = add nsw i32 %1915, %1939
  %1941 = load i8, ptr %847, align 1, !tbaa !5
  %1942 = zext i8 %1941 to i64
  %1943 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1942, i64 0
  %1944 = load i8, ptr %1943, align 2, !tbaa !5
  store i8 %1944, ptr %847, align 1, !tbaa !5
  %1945 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1942
  %1946 = load i16, ptr %1945, align 2, !tbaa !37
  %1947 = zext i16 %1946 to i32
  %1948 = add nsw i32 %1940, %1947
  %1949 = load i8, ptr %846, align 1, !tbaa !5
  %1950 = zext i8 %1949 to i64
  %1951 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1950, i64 0
  %1952 = load i8, ptr %1951, align 2, !tbaa !5
  %1953 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1950
  %1954 = load i16, ptr %1953, align 2, !tbaa !37
  %1955 = zext i16 %1954 to i32
  %1956 = add nsw i32 %1948, %1955
  %1957 = zext i8 %1952 to i64
  %1958 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1957, i64 0
  %1959 = load i8, ptr %1958, align 2, !tbaa !5
  store i8 %1959, ptr %846, align 1, !tbaa !5
  br label %1963

1960:                                             ; preds = %1896
  %1961 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %1907, i64 0
  %1962 = load i8, ptr %1961, align 2, !tbaa !5
  store i8 %1962, ptr %842, align 1, !tbaa !5
  br label %1963

1963:                                             ; preds = %1960, %1933, %1919
  %1964 = phi i64 [ %1907, %1960 ], [ %1957, %1933 ], [ %1932, %1919 ]
  %1965 = phi i32 [ %1903, %1960 ], [ %1956, %1933 ], [ %1925, %1919 ]
  %1966 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %1964
  %1967 = load i16, ptr %1966, align 2, !tbaa !37
  %1968 = zext i16 %1967 to i32
  %1969 = add nsw i32 %1965, %1968
  store i32 %1969, ptr %844, align 16, !tbaa !40
  %1970 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %1971 = load i32, ptr %1970, align 8, !tbaa !39
  %1972 = icmp sgt i32 %1971, 1
  %1973 = load i8, ptr %848, align 1, !tbaa !5
  br i1 %1972, label %1702, label %2402

1974:                                             ; preds = %1702
  %1975 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 11
  %1976 = load i8, ptr %1975, align 1, !tbaa !5
  %1977 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 4
  %1978 = load i8, ptr %1977, align 1, !tbaa !5
  %1979 = icmp sgt i8 %1976, 0
  br i1 %1979, label %1980, label %1985

1980:                                             ; preds = %1974
  %1981 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 11
  %1982 = load i8, ptr %1981, align 1, !tbaa !5
  %1983 = icmp eq i8 %1982, 0
  %1984 = zext i1 %1983 to i32
  br label %1985

1985:                                             ; preds = %1980, %1974
  %1986 = phi i32 [ 0, %1974 ], [ %1984, %1980 ]
  %1987 = icmp sgt i8 %1978, 0
  br i1 %1987, label %1988, label %1994

1988:                                             ; preds = %1985
  %1989 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 4
  %1990 = load i8, ptr %1989, align 1, !tbaa !5
  %1991 = icmp eq i8 %1990, 0
  %1992 = or i32 %1986, 2
  %1993 = select i1 %1991, i32 %1992, i32 %1986
  br label %1994

1994:                                             ; preds = %1988, %1985
  %1995 = phi i32 [ %1986, %1985 ], [ %1993, %1988 ]
  %1996 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %1997 = load i8, ptr %1996, align 1, !tbaa !5
  %1998 = icmp sgt i8 %1997, 0
  br i1 %1998, label %1999, label %2061

1999:                                             ; preds = %1994
  %2000 = zext i8 %1997 to i32
  %2001 = and i32 %2000, 1
  %2002 = icmp eq i32 %2001, 0
  br i1 %2002, label %2019, label %2003

2003:                                             ; preds = %1999
  %2004 = add nuw nsw i32 %1995, 54
  %2005 = zext i32 %2004 to i64
  %2006 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2005
  %2007 = load i8, ptr %2006, align 1, !tbaa !5
  %2008 = zext i8 %2007 to i64
  %2009 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2008, i64 1
  %2010 = load i8, ptr %2009, align 1, !tbaa !5
  store i8 %2010, ptr %2006, align 1, !tbaa !5
  %2011 = xor i64 %2008, 1
  %2012 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2011
  %2013 = load i16, ptr %2012, align 2, !tbaa !37
  %2014 = zext i16 %2013 to i32
  %2015 = add nsw i32 %1969, %2014
  %2016 = lshr i32 %1995, 2
  %2017 = add nuw nsw i32 %2016, 4
  %2018 = add nsw i32 %2000, -1
  br label %2019

2019:                                             ; preds = %2003, %1999
  %2020 = phi i32 [ %1969, %1999 ], [ %2015, %2003 ]
  %2021 = phi i32 [ %2000, %1999 ], [ %2018, %2003 ]
  %2022 = phi i32 [ %1995, %1999 ], [ %2017, %2003 ]
  %2023 = phi i32 [ undef, %1999 ], [ %2015, %2003 ]
  %2024 = phi i32 [ undef, %1999 ], [ %2017, %2003 ]
  %2025 = icmp eq i8 %1997, 1
  br i1 %2025, label %2061, label %2026

2026:                                             ; preds = %2019, %2026
  %2027 = phi i32 [ %2055, %2026 ], [ %2020, %2019 ]
  %2028 = phi i32 [ %2058, %2026 ], [ %2021, %2019 ]
  %2029 = phi i32 [ %2057, %2026 ], [ %2022, %2019 ]
  %2030 = add nuw nsw i32 %2029, 54
  %2031 = zext i32 %2030 to i64
  %2032 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2031
  %2033 = load i8, ptr %2032, align 1, !tbaa !5
  %2034 = zext i8 %2033 to i64
  %2035 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2034, i64 1
  %2036 = load i8, ptr %2035, align 1, !tbaa !5
  store i8 %2036, ptr %2032, align 1, !tbaa !5
  %2037 = xor i64 %2034, 1
  %2038 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2037
  %2039 = load i16, ptr %2038, align 2, !tbaa !37
  %2040 = zext i16 %2039 to i32
  %2041 = add nsw i32 %2027, %2040
  %2042 = lshr i32 %2029, 2
  %2043 = add nuw nsw i32 %2042, 4
  %2044 = add nuw nsw i32 %2042, 58
  %2045 = zext i32 %2044 to i64
  %2046 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2045
  %2047 = load i8, ptr %2046, align 1, !tbaa !5
  %2048 = zext i8 %2047 to i64
  %2049 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2048, i64 1
  %2050 = load i8, ptr %2049, align 1, !tbaa !5
  store i8 %2050, ptr %2046, align 1, !tbaa !5
  %2051 = xor i64 %2048, 1
  %2052 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2051
  %2053 = load i16, ptr %2052, align 2, !tbaa !37
  %2054 = zext i16 %2053 to i32
  %2055 = add nsw i32 %2041, %2054
  %2056 = lshr i32 %2043, 2
  %2057 = add nuw nsw i32 %2056, 4
  %2058 = add nsw i32 %2028, -2
  %2059 = add i32 %2028, -3
  %2060 = icmp ult i32 %2059, -2
  br i1 %2060, label %2026, label %2061, !llvm.loop !448

2061:                                             ; preds = %2019, %2026, %1994
  %2062 = phi i32 [ %1969, %1994 ], [ %2023, %2019 ], [ %2055, %2026 ]
  %2063 = phi i32 [ %1995, %1994 ], [ %2024, %2019 ], [ %2057, %2026 ]
  %2064 = add nuw nsw i32 %2063, 54
  %2065 = zext i32 %2064 to i64
  %2066 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2065
  %2067 = load i8, ptr %2066, align 1, !tbaa !5
  %2068 = zext i8 %2067 to i64
  %2069 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2068, i64 0
  %2070 = load i8, ptr %2069, align 2, !tbaa !5
  store i8 %2070, ptr %2066, align 1, !tbaa !5
  %2071 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2068
  %2072 = load i16, ptr %2071, align 2, !tbaa !37
  %2073 = zext i16 %2072 to i32
  %2074 = add nsw i32 %2062, %2073
  store i32 %2074, ptr %844, align 16, !tbaa !40
  br label %2075

2075:                                             ; preds = %1702, %2061
  %2076 = phi i32 [ %1969, %1702 ], [ %2074, %2061 ]
  %2077 = load i8, ptr %1770, align 1, !tbaa !5
  %2078 = zext i8 %2077 to i64
  %2079 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %2078
  %2080 = load i8, ptr %2079, align 1, !tbaa !5
  %2081 = icmp eq i8 %2080, 0
  br i1 %2081, label %2183, label %2082

2082:                                             ; preds = %2075
  %2083 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 13
  %2084 = load i8, ptr %2083, align 1, !tbaa !5
  %2085 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 6
  %2086 = load i8, ptr %2085, align 1, !tbaa !5
  %2087 = icmp sgt i8 %2084, 0
  br i1 %2087, label %2088, label %2093

2088:                                             ; preds = %2082
  %2089 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 13
  %2090 = load i8, ptr %2089, align 1, !tbaa !5
  %2091 = icmp eq i8 %2090, 0
  %2092 = zext i1 %2091 to i32
  br label %2093

2093:                                             ; preds = %2088, %2082
  %2094 = phi i32 [ 0, %2082 ], [ %2092, %2088 ]
  %2095 = icmp sgt i8 %2086, 0
  br i1 %2095, label %2096, label %2102

2096:                                             ; preds = %2093
  %2097 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 6
  %2098 = load i8, ptr %2097, align 1, !tbaa !5
  %2099 = icmp eq i8 %2098, 0
  %2100 = or i32 %2094, 2
  %2101 = select i1 %2099, i32 %2100, i32 %2094
  br label %2102

2102:                                             ; preds = %2096, %2093
  %2103 = phi i32 [ %2094, %2093 ], [ %2101, %2096 ]
  %2104 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 14
  %2105 = load i8, ptr %2104, align 1, !tbaa !5
  %2106 = icmp sgt i8 %2105, 0
  br i1 %2106, label %2107, label %2169

2107:                                             ; preds = %2102
  %2108 = zext i8 %2105 to i32
  %2109 = and i32 %2108, 1
  %2110 = icmp eq i32 %2109, 0
  br i1 %2110, label %2127, label %2111

2111:                                             ; preds = %2107
  %2112 = add nuw nsw i32 %2103, 54
  %2113 = zext i32 %2112 to i64
  %2114 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2113
  %2115 = load i8, ptr %2114, align 1, !tbaa !5
  %2116 = zext i8 %2115 to i64
  %2117 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2116, i64 1
  %2118 = load i8, ptr %2117, align 1, !tbaa !5
  store i8 %2118, ptr %2114, align 1, !tbaa !5
  %2119 = xor i64 %2116, 1
  %2120 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2119
  %2121 = load i16, ptr %2120, align 2, !tbaa !37
  %2122 = zext i16 %2121 to i32
  %2123 = add nsw i32 %2076, %2122
  %2124 = lshr i32 %2103, 2
  %2125 = add nuw nsw i32 %2124, 4
  %2126 = add nsw i32 %2108, -1
  br label %2127

2127:                                             ; preds = %2111, %2107
  %2128 = phi i32 [ %2076, %2107 ], [ %2123, %2111 ]
  %2129 = phi i32 [ %2108, %2107 ], [ %2126, %2111 ]
  %2130 = phi i32 [ %2103, %2107 ], [ %2125, %2111 ]
  %2131 = phi i32 [ undef, %2107 ], [ %2123, %2111 ]
  %2132 = phi i32 [ undef, %2107 ], [ %2125, %2111 ]
  %2133 = icmp eq i8 %2105, 1
  br i1 %2133, label %2169, label %2134

2134:                                             ; preds = %2127, %2134
  %2135 = phi i32 [ %2163, %2134 ], [ %2128, %2127 ]
  %2136 = phi i32 [ %2166, %2134 ], [ %2129, %2127 ]
  %2137 = phi i32 [ %2165, %2134 ], [ %2130, %2127 ]
  %2138 = add nuw nsw i32 %2137, 54
  %2139 = zext i32 %2138 to i64
  %2140 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2139
  %2141 = load i8, ptr %2140, align 1, !tbaa !5
  %2142 = zext i8 %2141 to i64
  %2143 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2142, i64 1
  %2144 = load i8, ptr %2143, align 1, !tbaa !5
  store i8 %2144, ptr %2140, align 1, !tbaa !5
  %2145 = xor i64 %2142, 1
  %2146 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2145
  %2147 = load i16, ptr %2146, align 2, !tbaa !37
  %2148 = zext i16 %2147 to i32
  %2149 = add nsw i32 %2135, %2148
  %2150 = lshr i32 %2137, 2
  %2151 = add nuw nsw i32 %2150, 4
  %2152 = add nuw nsw i32 %2150, 58
  %2153 = zext i32 %2152 to i64
  %2154 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2153
  %2155 = load i8, ptr %2154, align 1, !tbaa !5
  %2156 = zext i8 %2155 to i64
  %2157 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2156, i64 1
  %2158 = load i8, ptr %2157, align 1, !tbaa !5
  store i8 %2158, ptr %2154, align 1, !tbaa !5
  %2159 = xor i64 %2156, 1
  %2160 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2159
  %2161 = load i16, ptr %2160, align 2, !tbaa !37
  %2162 = zext i16 %2161 to i32
  %2163 = add nsw i32 %2149, %2162
  %2164 = lshr i32 %2151, 2
  %2165 = add nuw nsw i32 %2164, 4
  %2166 = add nsw i32 %2136, -2
  %2167 = add i32 %2136, -3
  %2168 = icmp ult i32 %2167, -2
  br i1 %2168, label %2134, label %2169, !llvm.loop !448

2169:                                             ; preds = %2127, %2134, %2102
  %2170 = phi i32 [ %2076, %2102 ], [ %2131, %2127 ], [ %2163, %2134 ]
  %2171 = phi i32 [ %2103, %2102 ], [ %2132, %2127 ], [ %2165, %2134 ]
  %2172 = add nuw nsw i32 %2171, 54
  %2173 = zext i32 %2172 to i64
  %2174 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2173
  %2175 = load i8, ptr %2174, align 1, !tbaa !5
  %2176 = zext i8 %2175 to i64
  %2177 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2176, i64 0
  %2178 = load i8, ptr %2177, align 2, !tbaa !5
  store i8 %2178, ptr %2174, align 1, !tbaa !5
  %2179 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2176
  %2180 = load i16, ptr %2179, align 2, !tbaa !37
  %2181 = zext i16 %2180 to i32
  %2182 = add nsw i32 %2170, %2181
  store i32 %2182, ptr %844, align 16, !tbaa !40
  br label %2183

2183:                                             ; preds = %2169, %2075
  %2184 = phi i32 [ %2182, %2169 ], [ %2076, %2075 ]
  %2185 = load i8, ptr %1837, align 1, !tbaa !5
  %2186 = zext i8 %2185 to i64
  %2187 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %2186
  %2188 = load i8, ptr %2187, align 1, !tbaa !5
  %2189 = icmp eq i8 %2188, 0
  br i1 %2189, label %2291, label %2190

2190:                                             ; preds = %2183
  %2191 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 27
  %2192 = load i8, ptr %2191, align 1, !tbaa !5
  %2193 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 20
  %2194 = load i8, ptr %2193, align 1, !tbaa !5
  %2195 = icmp sgt i8 %2192, 0
  br i1 %2195, label %2196, label %2201

2196:                                             ; preds = %2190
  %2197 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 27
  %2198 = load i8, ptr %2197, align 1, !tbaa !5
  %2199 = icmp eq i8 %2198, 0
  %2200 = zext i1 %2199 to i32
  br label %2201

2201:                                             ; preds = %2196, %2190
  %2202 = phi i32 [ 0, %2190 ], [ %2200, %2196 ]
  %2203 = icmp sgt i8 %2194, 0
  br i1 %2203, label %2204, label %2210

2204:                                             ; preds = %2201
  %2205 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 20
  %2206 = load i8, ptr %2205, align 1, !tbaa !5
  %2207 = icmp eq i8 %2206, 0
  %2208 = or i32 %2202, 2
  %2209 = select i1 %2207, i32 %2208, i32 %2202
  br label %2210

2210:                                             ; preds = %2204, %2201
  %2211 = phi i32 [ %2202, %2201 ], [ %2209, %2204 ]
  %2212 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 28
  %2213 = load i8, ptr %2212, align 1, !tbaa !5
  %2214 = icmp sgt i8 %2213, 0
  br i1 %2214, label %2215, label %2277

2215:                                             ; preds = %2210
  %2216 = zext i8 %2213 to i32
  %2217 = and i32 %2216, 1
  %2218 = icmp eq i32 %2217, 0
  br i1 %2218, label %2235, label %2219

2219:                                             ; preds = %2215
  %2220 = add nuw nsw i32 %2211, 54
  %2221 = zext i32 %2220 to i64
  %2222 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2221
  %2223 = load i8, ptr %2222, align 1, !tbaa !5
  %2224 = zext i8 %2223 to i64
  %2225 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2224, i64 1
  %2226 = load i8, ptr %2225, align 1, !tbaa !5
  store i8 %2226, ptr %2222, align 1, !tbaa !5
  %2227 = xor i64 %2224, 1
  %2228 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2227
  %2229 = load i16, ptr %2228, align 2, !tbaa !37
  %2230 = zext i16 %2229 to i32
  %2231 = add nsw i32 %2184, %2230
  %2232 = lshr i32 %2211, 2
  %2233 = add nuw nsw i32 %2232, 4
  %2234 = add nsw i32 %2216, -1
  br label %2235

2235:                                             ; preds = %2219, %2215
  %2236 = phi i32 [ %2184, %2215 ], [ %2231, %2219 ]
  %2237 = phi i32 [ %2216, %2215 ], [ %2234, %2219 ]
  %2238 = phi i32 [ %2211, %2215 ], [ %2233, %2219 ]
  %2239 = phi i32 [ undef, %2215 ], [ %2231, %2219 ]
  %2240 = phi i32 [ undef, %2215 ], [ %2233, %2219 ]
  %2241 = icmp eq i8 %2213, 1
  br i1 %2241, label %2277, label %2242

2242:                                             ; preds = %2235, %2242
  %2243 = phi i32 [ %2271, %2242 ], [ %2236, %2235 ]
  %2244 = phi i32 [ %2274, %2242 ], [ %2237, %2235 ]
  %2245 = phi i32 [ %2273, %2242 ], [ %2238, %2235 ]
  %2246 = add nuw nsw i32 %2245, 54
  %2247 = zext i32 %2246 to i64
  %2248 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2247
  %2249 = load i8, ptr %2248, align 1, !tbaa !5
  %2250 = zext i8 %2249 to i64
  %2251 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2250, i64 1
  %2252 = load i8, ptr %2251, align 1, !tbaa !5
  store i8 %2252, ptr %2248, align 1, !tbaa !5
  %2253 = xor i64 %2250, 1
  %2254 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2253
  %2255 = load i16, ptr %2254, align 2, !tbaa !37
  %2256 = zext i16 %2255 to i32
  %2257 = add nsw i32 %2243, %2256
  %2258 = lshr i32 %2245, 2
  %2259 = add nuw nsw i32 %2258, 4
  %2260 = add nuw nsw i32 %2258, 58
  %2261 = zext i32 %2260 to i64
  %2262 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2261
  %2263 = load i8, ptr %2262, align 1, !tbaa !5
  %2264 = zext i8 %2263 to i64
  %2265 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2264, i64 1
  %2266 = load i8, ptr %2265, align 1, !tbaa !5
  store i8 %2266, ptr %2262, align 1, !tbaa !5
  %2267 = xor i64 %2264, 1
  %2268 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2267
  %2269 = load i16, ptr %2268, align 2, !tbaa !37
  %2270 = zext i16 %2269 to i32
  %2271 = add nsw i32 %2257, %2270
  %2272 = lshr i32 %2259, 2
  %2273 = add nuw nsw i32 %2272, 4
  %2274 = add nsw i32 %2244, -2
  %2275 = add i32 %2244, -3
  %2276 = icmp ult i32 %2275, -2
  br i1 %2276, label %2242, label %2277, !llvm.loop !448

2277:                                             ; preds = %2235, %2242, %2210
  %2278 = phi i32 [ %2184, %2210 ], [ %2239, %2235 ], [ %2271, %2242 ]
  %2279 = phi i32 [ %2211, %2210 ], [ %2240, %2235 ], [ %2273, %2242 ]
  %2280 = add nuw nsw i32 %2279, 54
  %2281 = zext i32 %2280 to i64
  %2282 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2281
  %2283 = load i8, ptr %2282, align 1, !tbaa !5
  %2284 = zext i8 %2283 to i64
  %2285 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2284, i64 0
  %2286 = load i8, ptr %2285, align 2, !tbaa !5
  store i8 %2286, ptr %2282, align 1, !tbaa !5
  %2287 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2284
  %2288 = load i16, ptr %2287, align 2, !tbaa !37
  %2289 = zext i16 %2288 to i32
  %2290 = add nsw i32 %2278, %2289
  store i32 %2290, ptr %844, align 16, !tbaa !40
  br label %2291

2291:                                             ; preds = %2277, %2183
  %2292 = phi i32 [ %2290, %2277 ], [ %2184, %2183 ]
  %2293 = load i8, ptr %1904, align 1, !tbaa !5
  %2294 = zext i8 %2293 to i64
  %2295 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %2294
  %2296 = load i8, ptr %2295, align 1, !tbaa !5
  %2297 = icmp eq i8 %2296, 0
  br i1 %2297, label %2399, label %2298

2298:                                             ; preds = %2291
  %2299 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 29
  %2300 = load i8, ptr %2299, align 1, !tbaa !5
  %2301 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 22
  %2302 = load i8, ptr %2301, align 1, !tbaa !5
  %2303 = icmp sgt i8 %2300, 0
  br i1 %2303, label %2304, label %2309

2304:                                             ; preds = %2298
  %2305 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 29
  %2306 = load i8, ptr %2305, align 1, !tbaa !5
  %2307 = icmp eq i8 %2306, 0
  %2308 = zext i1 %2307 to i32
  br label %2309

2309:                                             ; preds = %2304, %2298
  %2310 = phi i32 [ 0, %2298 ], [ %2308, %2304 ]
  %2311 = icmp sgt i8 %2302, 0
  br i1 %2311, label %2312, label %2318

2312:                                             ; preds = %2309
  %2313 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 22
  %2314 = load i8, ptr %2313, align 1, !tbaa !5
  %2315 = icmp eq i8 %2314, 0
  %2316 = or i32 %2310, 2
  %2317 = select i1 %2315, i32 %2316, i32 %2310
  br label %2318

2318:                                             ; preds = %2312, %2309
  %2319 = phi i32 [ %2310, %2309 ], [ %2317, %2312 ]
  %2320 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 30
  %2321 = load i8, ptr %2320, align 1, !tbaa !5
  %2322 = icmp sgt i8 %2321, 0
  br i1 %2322, label %2323, label %2385

2323:                                             ; preds = %2318
  %2324 = zext i8 %2321 to i32
  %2325 = and i32 %2324, 1
  %2326 = icmp eq i32 %2325, 0
  br i1 %2326, label %2343, label %2327

2327:                                             ; preds = %2323
  %2328 = add nuw nsw i32 %2319, 54
  %2329 = zext i32 %2328 to i64
  %2330 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2329
  %2331 = load i8, ptr %2330, align 1, !tbaa !5
  %2332 = zext i8 %2331 to i64
  %2333 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2332, i64 1
  %2334 = load i8, ptr %2333, align 1, !tbaa !5
  store i8 %2334, ptr %2330, align 1, !tbaa !5
  %2335 = xor i64 %2332, 1
  %2336 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2335
  %2337 = load i16, ptr %2336, align 2, !tbaa !37
  %2338 = zext i16 %2337 to i32
  %2339 = add nsw i32 %2292, %2338
  %2340 = lshr i32 %2319, 2
  %2341 = add nuw nsw i32 %2340, 4
  %2342 = add nsw i32 %2324, -1
  br label %2343

2343:                                             ; preds = %2327, %2323
  %2344 = phi i32 [ %2292, %2323 ], [ %2339, %2327 ]
  %2345 = phi i32 [ %2324, %2323 ], [ %2342, %2327 ]
  %2346 = phi i32 [ %2319, %2323 ], [ %2341, %2327 ]
  %2347 = phi i32 [ undef, %2323 ], [ %2339, %2327 ]
  %2348 = phi i32 [ undef, %2323 ], [ %2341, %2327 ]
  %2349 = icmp eq i8 %2321, 1
  br i1 %2349, label %2385, label %2350

2350:                                             ; preds = %2343, %2350
  %2351 = phi i32 [ %2379, %2350 ], [ %2344, %2343 ]
  %2352 = phi i32 [ %2382, %2350 ], [ %2345, %2343 ]
  %2353 = phi i32 [ %2381, %2350 ], [ %2346, %2343 ]
  %2354 = add nuw nsw i32 %2353, 54
  %2355 = zext i32 %2354 to i64
  %2356 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2355
  %2357 = load i8, ptr %2356, align 1, !tbaa !5
  %2358 = zext i8 %2357 to i64
  %2359 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2358, i64 1
  %2360 = load i8, ptr %2359, align 1, !tbaa !5
  store i8 %2360, ptr %2356, align 1, !tbaa !5
  %2361 = xor i64 %2358, 1
  %2362 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2361
  %2363 = load i16, ptr %2362, align 2, !tbaa !37
  %2364 = zext i16 %2363 to i32
  %2365 = add nsw i32 %2351, %2364
  %2366 = lshr i32 %2353, 2
  %2367 = add nuw nsw i32 %2366, 4
  %2368 = add nuw nsw i32 %2366, 58
  %2369 = zext i32 %2368 to i64
  %2370 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2369
  %2371 = load i8, ptr %2370, align 1, !tbaa !5
  %2372 = zext i8 %2371 to i64
  %2373 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2372, i64 1
  %2374 = load i8, ptr %2373, align 1, !tbaa !5
  store i8 %2374, ptr %2370, align 1, !tbaa !5
  %2375 = xor i64 %2372, 1
  %2376 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2375
  %2377 = load i16, ptr %2376, align 2, !tbaa !37
  %2378 = zext i16 %2377 to i32
  %2379 = add nsw i32 %2365, %2378
  %2380 = lshr i32 %2367, 2
  %2381 = add nuw nsw i32 %2380, 4
  %2382 = add nsw i32 %2352, -2
  %2383 = add i32 %2352, -3
  %2384 = icmp ult i32 %2383, -2
  br i1 %2384, label %2350, label %2385, !llvm.loop !448

2385:                                             ; preds = %2343, %2350, %2318
  %2386 = phi i32 [ %2292, %2318 ], [ %2347, %2343 ], [ %2379, %2350 ]
  %2387 = phi i32 [ %2319, %2318 ], [ %2348, %2343 ], [ %2381, %2350 ]
  %2388 = add nuw nsw i32 %2387, 54
  %2389 = zext i32 %2388 to i64
  %2390 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2389
  %2391 = load i8, ptr %2390, align 1, !tbaa !5
  %2392 = zext i8 %2391 to i64
  %2393 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2392, i64 0
  %2394 = load i8, ptr %2393, align 2, !tbaa !5
  store i8 %2394, ptr %2390, align 1, !tbaa !5
  %2395 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2392
  %2396 = load i16, ptr %2395, align 2, !tbaa !37
  %2397 = zext i16 %2396 to i32
  %2398 = add nsw i32 %2386, %2397
  store i32 %2398, ptr %844, align 16, !tbaa !40
  br label %2399

2399:                                             ; preds = %2385, %2291
  %2400 = phi i32 [ %2398, %2385 ], [ %2292, %2291 ]
  %2401 = load i8, ptr %848, align 1, !tbaa !5
  br label %2402

2402:                                             ; preds = %2399, %1963
  %2403 = phi i8 [ %2401, %2399 ], [ %1973, %1963 ]
  %2404 = phi i32 [ %2400, %2399 ], [ %1969, %1963 ]
  %2405 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 1
  %2406 = load i32, ptr %2405, align 4, !tbaa !39
  %2407 = icmp sgt i32 %2406, 1
  br i1 %2407, label %2408, label %2840

2408:                                             ; preds = %2402
  %2409 = zext i8 %2403 to i64
  %2410 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %2409
  %2411 = load i8, ptr %2410, align 1, !tbaa !5
  %2412 = icmp eq i8 %2411, 0
  br i1 %2412, label %2514, label %2413

2413:                                             ; preds = %2408
  %2414 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 11
  %2415 = load i8, ptr %2414, align 1, !tbaa !5
  %2416 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 4
  %2417 = load i8, ptr %2416, align 1, !tbaa !5
  %2418 = icmp sgt i8 %2415, 0
  br i1 %2418, label %2419, label %2424

2419:                                             ; preds = %2413
  %2420 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 11
  %2421 = load i8, ptr %2420, align 1, !tbaa !5
  %2422 = icmp eq i8 %2421, 0
  %2423 = zext i1 %2422 to i32
  br label %2424

2424:                                             ; preds = %2419, %2413
  %2425 = phi i32 [ 0, %2413 ], [ %2423, %2419 ]
  %2426 = icmp sgt i8 %2417, 0
  br i1 %2426, label %2427, label %2433

2427:                                             ; preds = %2424
  %2428 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 4
  %2429 = load i8, ptr %2428, align 1, !tbaa !5
  %2430 = icmp eq i8 %2429, 0
  %2431 = or i32 %2425, 2
  %2432 = select i1 %2430, i32 %2431, i32 %2425
  br label %2433

2433:                                             ; preds = %2427, %2424
  %2434 = phi i32 [ %2425, %2424 ], [ %2432, %2427 ]
  %2435 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %2436 = load i8, ptr %2435, align 1, !tbaa !5
  %2437 = icmp sgt i8 %2436, 0
  br i1 %2437, label %2438, label %2500

2438:                                             ; preds = %2433
  %2439 = zext i8 %2436 to i32
  %2440 = and i32 %2439, 1
  %2441 = icmp eq i32 %2440, 0
  br i1 %2441, label %2458, label %2442

2442:                                             ; preds = %2438
  %2443 = add nuw nsw i32 %2434, 54
  %2444 = zext i32 %2443 to i64
  %2445 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2444
  %2446 = load i8, ptr %2445, align 1, !tbaa !5
  %2447 = zext i8 %2446 to i64
  %2448 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2447, i64 1
  %2449 = load i8, ptr %2448, align 1, !tbaa !5
  store i8 %2449, ptr %2445, align 1, !tbaa !5
  %2450 = xor i64 %2447, 1
  %2451 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2450
  %2452 = load i16, ptr %2451, align 2, !tbaa !37
  %2453 = zext i16 %2452 to i32
  %2454 = add nsw i32 %2404, %2453
  %2455 = lshr i32 %2434, 2
  %2456 = add nuw nsw i32 %2455, 4
  %2457 = add nsw i32 %2439, -1
  br label %2458

2458:                                             ; preds = %2442, %2438
  %2459 = phi i32 [ %2404, %2438 ], [ %2454, %2442 ]
  %2460 = phi i32 [ %2439, %2438 ], [ %2457, %2442 ]
  %2461 = phi i32 [ %2434, %2438 ], [ %2456, %2442 ]
  %2462 = phi i32 [ undef, %2438 ], [ %2454, %2442 ]
  %2463 = phi i32 [ undef, %2438 ], [ %2456, %2442 ]
  %2464 = icmp eq i8 %2436, 1
  br i1 %2464, label %2500, label %2465

2465:                                             ; preds = %2458, %2465
  %2466 = phi i32 [ %2494, %2465 ], [ %2459, %2458 ]
  %2467 = phi i32 [ %2497, %2465 ], [ %2460, %2458 ]
  %2468 = phi i32 [ %2496, %2465 ], [ %2461, %2458 ]
  %2469 = add nuw nsw i32 %2468, 54
  %2470 = zext i32 %2469 to i64
  %2471 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2470
  %2472 = load i8, ptr %2471, align 1, !tbaa !5
  %2473 = zext i8 %2472 to i64
  %2474 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2473, i64 1
  %2475 = load i8, ptr %2474, align 1, !tbaa !5
  store i8 %2475, ptr %2471, align 1, !tbaa !5
  %2476 = xor i64 %2473, 1
  %2477 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2476
  %2478 = load i16, ptr %2477, align 2, !tbaa !37
  %2479 = zext i16 %2478 to i32
  %2480 = add nsw i32 %2466, %2479
  %2481 = lshr i32 %2468, 2
  %2482 = add nuw nsw i32 %2481, 4
  %2483 = add nuw nsw i32 %2481, 58
  %2484 = zext i32 %2483 to i64
  %2485 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2484
  %2486 = load i8, ptr %2485, align 1, !tbaa !5
  %2487 = zext i8 %2486 to i64
  %2488 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2487, i64 1
  %2489 = load i8, ptr %2488, align 1, !tbaa !5
  store i8 %2489, ptr %2485, align 1, !tbaa !5
  %2490 = xor i64 %2487, 1
  %2491 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2490
  %2492 = load i16, ptr %2491, align 2, !tbaa !37
  %2493 = zext i16 %2492 to i32
  %2494 = add nsw i32 %2480, %2493
  %2495 = lshr i32 %2482, 2
  %2496 = add nuw nsw i32 %2495, 4
  %2497 = add nsw i32 %2467, -2
  %2498 = add i32 %2467, -3
  %2499 = icmp ult i32 %2498, -2
  br i1 %2499, label %2465, label %2500, !llvm.loop !448

2500:                                             ; preds = %2458, %2465, %2433
  %2501 = phi i32 [ %2404, %2433 ], [ %2462, %2458 ], [ %2494, %2465 ]
  %2502 = phi i32 [ %2434, %2433 ], [ %2463, %2458 ], [ %2496, %2465 ]
  %2503 = add nuw nsw i32 %2502, 54
  %2504 = zext i32 %2503 to i64
  %2505 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2504
  %2506 = load i8, ptr %2505, align 1, !tbaa !5
  %2507 = zext i8 %2506 to i64
  %2508 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2507, i64 0
  %2509 = load i8, ptr %2508, align 2, !tbaa !5
  store i8 %2509, ptr %2505, align 1, !tbaa !5
  %2510 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2507
  %2511 = load i16, ptr %2510, align 2, !tbaa !37
  %2512 = zext i16 %2511 to i32
  %2513 = add nsw i32 %2501, %2512
  store i32 %2513, ptr %844, align 16, !tbaa !40
  br label %2514

2514:                                             ; preds = %2408, %2500
  %2515 = phi i32 [ %2404, %2408 ], [ %2513, %2500 ]
  %2516 = load i8, ptr %1770, align 1, !tbaa !5
  %2517 = zext i8 %2516 to i64
  %2518 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %2517
  %2519 = load i8, ptr %2518, align 1, !tbaa !5
  %2520 = icmp eq i8 %2519, 0
  br i1 %2520, label %2622, label %2521

2521:                                             ; preds = %2514
  %2522 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 13
  %2523 = load i8, ptr %2522, align 1, !tbaa !5
  %2524 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 6
  %2525 = load i8, ptr %2524, align 1, !tbaa !5
  %2526 = icmp sgt i8 %2523, 0
  br i1 %2526, label %2527, label %2532

2527:                                             ; preds = %2521
  %2528 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 13
  %2529 = load i8, ptr %2528, align 1, !tbaa !5
  %2530 = icmp eq i8 %2529, 0
  %2531 = zext i1 %2530 to i32
  br label %2532

2532:                                             ; preds = %2527, %2521
  %2533 = phi i32 [ 0, %2521 ], [ %2531, %2527 ]
  %2534 = icmp sgt i8 %2525, 0
  br i1 %2534, label %2535, label %2541

2535:                                             ; preds = %2532
  %2536 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 6
  %2537 = load i8, ptr %2536, align 1, !tbaa !5
  %2538 = icmp eq i8 %2537, 0
  %2539 = or i32 %2533, 2
  %2540 = select i1 %2538, i32 %2539, i32 %2533
  br label %2541

2541:                                             ; preds = %2535, %2532
  %2542 = phi i32 [ %2533, %2532 ], [ %2540, %2535 ]
  %2543 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 14
  %2544 = load i8, ptr %2543, align 1, !tbaa !5
  %2545 = icmp sgt i8 %2544, 0
  br i1 %2545, label %2546, label %2608

2546:                                             ; preds = %2541
  %2547 = zext i8 %2544 to i32
  %2548 = and i32 %2547, 1
  %2549 = icmp eq i32 %2548, 0
  br i1 %2549, label %2566, label %2550

2550:                                             ; preds = %2546
  %2551 = add nuw nsw i32 %2542, 54
  %2552 = zext i32 %2551 to i64
  %2553 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2552
  %2554 = load i8, ptr %2553, align 1, !tbaa !5
  %2555 = zext i8 %2554 to i64
  %2556 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2555, i64 1
  %2557 = load i8, ptr %2556, align 1, !tbaa !5
  store i8 %2557, ptr %2553, align 1, !tbaa !5
  %2558 = xor i64 %2555, 1
  %2559 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2558
  %2560 = load i16, ptr %2559, align 2, !tbaa !37
  %2561 = zext i16 %2560 to i32
  %2562 = add nsw i32 %2515, %2561
  %2563 = lshr i32 %2542, 2
  %2564 = add nuw nsw i32 %2563, 4
  %2565 = add nsw i32 %2547, -1
  br label %2566

2566:                                             ; preds = %2550, %2546
  %2567 = phi i32 [ %2515, %2546 ], [ %2562, %2550 ]
  %2568 = phi i32 [ %2547, %2546 ], [ %2565, %2550 ]
  %2569 = phi i32 [ %2542, %2546 ], [ %2564, %2550 ]
  %2570 = phi i32 [ undef, %2546 ], [ %2562, %2550 ]
  %2571 = phi i32 [ undef, %2546 ], [ %2564, %2550 ]
  %2572 = icmp eq i8 %2544, 1
  br i1 %2572, label %2608, label %2573

2573:                                             ; preds = %2566, %2573
  %2574 = phi i32 [ %2602, %2573 ], [ %2567, %2566 ]
  %2575 = phi i32 [ %2605, %2573 ], [ %2568, %2566 ]
  %2576 = phi i32 [ %2604, %2573 ], [ %2569, %2566 ]
  %2577 = add nuw nsw i32 %2576, 54
  %2578 = zext i32 %2577 to i64
  %2579 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2578
  %2580 = load i8, ptr %2579, align 1, !tbaa !5
  %2581 = zext i8 %2580 to i64
  %2582 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2581, i64 1
  %2583 = load i8, ptr %2582, align 1, !tbaa !5
  store i8 %2583, ptr %2579, align 1, !tbaa !5
  %2584 = xor i64 %2581, 1
  %2585 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2584
  %2586 = load i16, ptr %2585, align 2, !tbaa !37
  %2587 = zext i16 %2586 to i32
  %2588 = add nsw i32 %2574, %2587
  %2589 = lshr i32 %2576, 2
  %2590 = add nuw nsw i32 %2589, 4
  %2591 = add nuw nsw i32 %2589, 58
  %2592 = zext i32 %2591 to i64
  %2593 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2592
  %2594 = load i8, ptr %2593, align 1, !tbaa !5
  %2595 = zext i8 %2594 to i64
  %2596 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2595, i64 1
  %2597 = load i8, ptr %2596, align 1, !tbaa !5
  store i8 %2597, ptr %2593, align 1, !tbaa !5
  %2598 = xor i64 %2595, 1
  %2599 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2598
  %2600 = load i16, ptr %2599, align 2, !tbaa !37
  %2601 = zext i16 %2600 to i32
  %2602 = add nsw i32 %2588, %2601
  %2603 = lshr i32 %2590, 2
  %2604 = add nuw nsw i32 %2603, 4
  %2605 = add nsw i32 %2575, -2
  %2606 = add i32 %2575, -3
  %2607 = icmp ult i32 %2606, -2
  br i1 %2607, label %2573, label %2608, !llvm.loop !448

2608:                                             ; preds = %2566, %2573, %2541
  %2609 = phi i32 [ %2515, %2541 ], [ %2570, %2566 ], [ %2602, %2573 ]
  %2610 = phi i32 [ %2542, %2541 ], [ %2571, %2566 ], [ %2604, %2573 ]
  %2611 = add nuw nsw i32 %2610, 54
  %2612 = zext i32 %2611 to i64
  %2613 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2612
  %2614 = load i8, ptr %2613, align 1, !tbaa !5
  %2615 = zext i8 %2614 to i64
  %2616 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2615, i64 0
  %2617 = load i8, ptr %2616, align 2, !tbaa !5
  store i8 %2617, ptr %2613, align 1, !tbaa !5
  %2618 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2615
  %2619 = load i16, ptr %2618, align 2, !tbaa !37
  %2620 = zext i16 %2619 to i32
  %2621 = add nsw i32 %2609, %2620
  store i32 %2621, ptr %844, align 16, !tbaa !40
  br label %2622

2622:                                             ; preds = %2608, %2514
  %2623 = phi i32 [ %2621, %2608 ], [ %2515, %2514 ]
  %2624 = load i8, ptr %1837, align 1, !tbaa !5
  %2625 = zext i8 %2624 to i64
  %2626 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %2625
  %2627 = load i8, ptr %2626, align 1, !tbaa !5
  %2628 = icmp eq i8 %2627, 0
  br i1 %2628, label %2730, label %2629

2629:                                             ; preds = %2622
  %2630 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 27
  %2631 = load i8, ptr %2630, align 1, !tbaa !5
  %2632 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 20
  %2633 = load i8, ptr %2632, align 1, !tbaa !5
  %2634 = icmp sgt i8 %2631, 0
  br i1 %2634, label %2635, label %2640

2635:                                             ; preds = %2629
  %2636 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 27
  %2637 = load i8, ptr %2636, align 1, !tbaa !5
  %2638 = icmp eq i8 %2637, 0
  %2639 = zext i1 %2638 to i32
  br label %2640

2640:                                             ; preds = %2635, %2629
  %2641 = phi i32 [ 0, %2629 ], [ %2639, %2635 ]
  %2642 = icmp sgt i8 %2633, 0
  br i1 %2642, label %2643, label %2649

2643:                                             ; preds = %2640
  %2644 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 20
  %2645 = load i8, ptr %2644, align 1, !tbaa !5
  %2646 = icmp eq i8 %2645, 0
  %2647 = or i32 %2641, 2
  %2648 = select i1 %2646, i32 %2647, i32 %2641
  br label %2649

2649:                                             ; preds = %2643, %2640
  %2650 = phi i32 [ %2641, %2640 ], [ %2648, %2643 ]
  %2651 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 28
  %2652 = load i8, ptr %2651, align 1, !tbaa !5
  %2653 = icmp sgt i8 %2652, 0
  br i1 %2653, label %2654, label %2716

2654:                                             ; preds = %2649
  %2655 = zext i8 %2652 to i32
  %2656 = and i32 %2655, 1
  %2657 = icmp eq i32 %2656, 0
  br i1 %2657, label %2674, label %2658

2658:                                             ; preds = %2654
  %2659 = add nuw nsw i32 %2650, 54
  %2660 = zext i32 %2659 to i64
  %2661 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2660
  %2662 = load i8, ptr %2661, align 1, !tbaa !5
  %2663 = zext i8 %2662 to i64
  %2664 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2663, i64 1
  %2665 = load i8, ptr %2664, align 1, !tbaa !5
  store i8 %2665, ptr %2661, align 1, !tbaa !5
  %2666 = xor i64 %2663, 1
  %2667 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2666
  %2668 = load i16, ptr %2667, align 2, !tbaa !37
  %2669 = zext i16 %2668 to i32
  %2670 = add nsw i32 %2623, %2669
  %2671 = lshr i32 %2650, 2
  %2672 = add nuw nsw i32 %2671, 4
  %2673 = add nsw i32 %2655, -1
  br label %2674

2674:                                             ; preds = %2658, %2654
  %2675 = phi i32 [ %2623, %2654 ], [ %2670, %2658 ]
  %2676 = phi i32 [ %2655, %2654 ], [ %2673, %2658 ]
  %2677 = phi i32 [ %2650, %2654 ], [ %2672, %2658 ]
  %2678 = phi i32 [ undef, %2654 ], [ %2670, %2658 ]
  %2679 = phi i32 [ undef, %2654 ], [ %2672, %2658 ]
  %2680 = icmp eq i8 %2652, 1
  br i1 %2680, label %2716, label %2681

2681:                                             ; preds = %2674, %2681
  %2682 = phi i32 [ %2710, %2681 ], [ %2675, %2674 ]
  %2683 = phi i32 [ %2713, %2681 ], [ %2676, %2674 ]
  %2684 = phi i32 [ %2712, %2681 ], [ %2677, %2674 ]
  %2685 = add nuw nsw i32 %2684, 54
  %2686 = zext i32 %2685 to i64
  %2687 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2686
  %2688 = load i8, ptr %2687, align 1, !tbaa !5
  %2689 = zext i8 %2688 to i64
  %2690 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2689, i64 1
  %2691 = load i8, ptr %2690, align 1, !tbaa !5
  store i8 %2691, ptr %2687, align 1, !tbaa !5
  %2692 = xor i64 %2689, 1
  %2693 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2692
  %2694 = load i16, ptr %2693, align 2, !tbaa !37
  %2695 = zext i16 %2694 to i32
  %2696 = add nsw i32 %2682, %2695
  %2697 = lshr i32 %2684, 2
  %2698 = add nuw nsw i32 %2697, 4
  %2699 = add nuw nsw i32 %2697, 58
  %2700 = zext i32 %2699 to i64
  %2701 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2700
  %2702 = load i8, ptr %2701, align 1, !tbaa !5
  %2703 = zext i8 %2702 to i64
  %2704 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2703, i64 1
  %2705 = load i8, ptr %2704, align 1, !tbaa !5
  store i8 %2705, ptr %2701, align 1, !tbaa !5
  %2706 = xor i64 %2703, 1
  %2707 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2706
  %2708 = load i16, ptr %2707, align 2, !tbaa !37
  %2709 = zext i16 %2708 to i32
  %2710 = add nsw i32 %2696, %2709
  %2711 = lshr i32 %2698, 2
  %2712 = add nuw nsw i32 %2711, 4
  %2713 = add nsw i32 %2683, -2
  %2714 = add i32 %2683, -3
  %2715 = icmp ult i32 %2714, -2
  br i1 %2715, label %2681, label %2716, !llvm.loop !448

2716:                                             ; preds = %2674, %2681, %2649
  %2717 = phi i32 [ %2623, %2649 ], [ %2678, %2674 ], [ %2710, %2681 ]
  %2718 = phi i32 [ %2650, %2649 ], [ %2679, %2674 ], [ %2712, %2681 ]
  %2719 = add nuw nsw i32 %2718, 54
  %2720 = zext i32 %2719 to i64
  %2721 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2720
  %2722 = load i8, ptr %2721, align 1, !tbaa !5
  %2723 = zext i8 %2722 to i64
  %2724 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2723, i64 0
  %2725 = load i8, ptr %2724, align 2, !tbaa !5
  store i8 %2725, ptr %2721, align 1, !tbaa !5
  %2726 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2723
  %2727 = load i16, ptr %2726, align 2, !tbaa !37
  %2728 = zext i16 %2727 to i32
  %2729 = add nsw i32 %2717, %2728
  store i32 %2729, ptr %844, align 16, !tbaa !40
  br label %2730

2730:                                             ; preds = %2716, %2622
  %2731 = phi i32 [ %2729, %2716 ], [ %2623, %2622 ]
  %2732 = load i8, ptr %1904, align 1, !tbaa !5
  %2733 = zext i8 %2732 to i64
  %2734 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %2733
  %2735 = load i8, ptr %2734, align 1, !tbaa !5
  %2736 = icmp eq i8 %2735, 0
  br i1 %2736, label %2838, label %2737

2737:                                             ; preds = %2730
  %2738 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 29
  %2739 = load i8, ptr %2738, align 1, !tbaa !5
  %2740 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 22
  %2741 = load i8, ptr %2740, align 1, !tbaa !5
  %2742 = icmp sgt i8 %2739, 0
  br i1 %2742, label %2743, label %2748

2743:                                             ; preds = %2737
  %2744 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 29
  %2745 = load i8, ptr %2744, align 1, !tbaa !5
  %2746 = icmp eq i8 %2745, 0
  %2747 = zext i1 %2746 to i32
  br label %2748

2748:                                             ; preds = %2743, %2737
  %2749 = phi i32 [ 0, %2737 ], [ %2747, %2743 ]
  %2750 = icmp sgt i8 %2741, 0
  br i1 %2750, label %2751, label %2757

2751:                                             ; preds = %2748
  %2752 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 22
  %2753 = load i8, ptr %2752, align 1, !tbaa !5
  %2754 = icmp eq i8 %2753, 0
  %2755 = or i32 %2749, 2
  %2756 = select i1 %2754, i32 %2755, i32 %2749
  br label %2757

2757:                                             ; preds = %2751, %2748
  %2758 = phi i32 [ %2749, %2748 ], [ %2756, %2751 ]
  %2759 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 30
  %2760 = load i8, ptr %2759, align 1, !tbaa !5
  %2761 = icmp sgt i8 %2760, 0
  br i1 %2761, label %2762, label %2824

2762:                                             ; preds = %2757
  %2763 = zext i8 %2760 to i32
  %2764 = and i32 %2763, 1
  %2765 = icmp eq i32 %2764, 0
  br i1 %2765, label %2782, label %2766

2766:                                             ; preds = %2762
  %2767 = add nuw nsw i32 %2758, 54
  %2768 = zext i32 %2767 to i64
  %2769 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2768
  %2770 = load i8, ptr %2769, align 1, !tbaa !5
  %2771 = zext i8 %2770 to i64
  %2772 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2771, i64 1
  %2773 = load i8, ptr %2772, align 1, !tbaa !5
  store i8 %2773, ptr %2769, align 1, !tbaa !5
  %2774 = xor i64 %2771, 1
  %2775 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2774
  %2776 = load i16, ptr %2775, align 2, !tbaa !37
  %2777 = zext i16 %2776 to i32
  %2778 = add nsw i32 %2731, %2777
  %2779 = lshr i32 %2758, 2
  %2780 = add nuw nsw i32 %2779, 4
  %2781 = add nsw i32 %2763, -1
  br label %2782

2782:                                             ; preds = %2766, %2762
  %2783 = phi i32 [ %2731, %2762 ], [ %2778, %2766 ]
  %2784 = phi i32 [ %2763, %2762 ], [ %2781, %2766 ]
  %2785 = phi i32 [ %2758, %2762 ], [ %2780, %2766 ]
  %2786 = phi i32 [ undef, %2762 ], [ %2778, %2766 ]
  %2787 = phi i32 [ undef, %2762 ], [ %2780, %2766 ]
  %2788 = icmp eq i8 %2760, 1
  br i1 %2788, label %2824, label %2789

2789:                                             ; preds = %2782, %2789
  %2790 = phi i32 [ %2818, %2789 ], [ %2783, %2782 ]
  %2791 = phi i32 [ %2821, %2789 ], [ %2784, %2782 ]
  %2792 = phi i32 [ %2820, %2789 ], [ %2785, %2782 ]
  %2793 = add nuw nsw i32 %2792, 54
  %2794 = zext i32 %2793 to i64
  %2795 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2794
  %2796 = load i8, ptr %2795, align 1, !tbaa !5
  %2797 = zext i8 %2796 to i64
  %2798 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2797, i64 1
  %2799 = load i8, ptr %2798, align 1, !tbaa !5
  store i8 %2799, ptr %2795, align 1, !tbaa !5
  %2800 = xor i64 %2797, 1
  %2801 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2800
  %2802 = load i16, ptr %2801, align 2, !tbaa !37
  %2803 = zext i16 %2802 to i32
  %2804 = add nsw i32 %2790, %2803
  %2805 = lshr i32 %2792, 2
  %2806 = add nuw nsw i32 %2805, 4
  %2807 = add nuw nsw i32 %2805, 58
  %2808 = zext i32 %2807 to i64
  %2809 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2808
  %2810 = load i8, ptr %2809, align 1, !tbaa !5
  %2811 = zext i8 %2810 to i64
  %2812 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2811, i64 1
  %2813 = load i8, ptr %2812, align 1, !tbaa !5
  store i8 %2813, ptr %2809, align 1, !tbaa !5
  %2814 = xor i64 %2811, 1
  %2815 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2814
  %2816 = load i16, ptr %2815, align 2, !tbaa !37
  %2817 = zext i16 %2816 to i32
  %2818 = add nsw i32 %2804, %2817
  %2819 = lshr i32 %2806, 2
  %2820 = add nuw nsw i32 %2819, 4
  %2821 = add nsw i32 %2791, -2
  %2822 = add i32 %2791, -3
  %2823 = icmp ult i32 %2822, -2
  br i1 %2823, label %2789, label %2824, !llvm.loop !448

2824:                                             ; preds = %2782, %2789, %2757
  %2825 = phi i32 [ %2731, %2757 ], [ %2786, %2782 ], [ %2818, %2789 ]
  %2826 = phi i32 [ %2758, %2757 ], [ %2787, %2782 ], [ %2820, %2789 ]
  %2827 = add nuw nsw i32 %2826, 54
  %2828 = zext i32 %2827 to i64
  %2829 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %2828
  %2830 = load i8, ptr %2829, align 1, !tbaa !5
  %2831 = zext i8 %2830 to i64
  %2832 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %2831, i64 0
  %2833 = load i8, ptr %2832, align 2, !tbaa !5
  store i8 %2833, ptr %2829, align 1, !tbaa !5
  %2834 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %2831
  %2835 = load i16, ptr %2834, align 2, !tbaa !37
  %2836 = zext i16 %2835 to i32
  %2837 = add nsw i32 %2825, %2836
  store i32 %2837, ptr %844, align 16, !tbaa !40
  br label %2838

2838:                                             ; preds = %2824, %2730
  %2839 = load i8, ptr %848, align 1, !tbaa !5
  br label %2840

2840:                                             ; preds = %2838, %2402
  %2841 = phi i8 [ %2839, %2838 ], [ %2403, %2402 ]
  %2842 = getelementptr inbounds [2 x i16], ptr %9, i64 0, i64 1
  %2843 = zext i8 %2841 to i64
  %2844 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %2843
  %2845 = load i8, ptr %2844, align 1, !tbaa !5
  %2846 = icmp eq i8 %2845, 0
  br i1 %2846, label %2892, label %2847

2847:                                             ; preds = %2840
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, i32 noundef 2, ptr noundef nonnull %9) #17
  %2848 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12
  %2849 = load i16, ptr %2848, align 4, !tbaa !37
  %2850 = sext i16 %2849 to i32
  %2851 = load i16, ptr %9, align 4, !tbaa !37
  %2852 = sext i16 %2851 to i32
  %2853 = sub nsw i32 %2850, %2852
  %2854 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 12, i64 1
  %2855 = load i16, ptr %2854, align 2, !tbaa !37
  %2856 = sext i16 %2855 to i32
  %2857 = load i16, ptr %2842, align 2, !tbaa !37
  %2858 = sext i16 %2857 to i32
  %2859 = sub nsw i32 %2856, %2858
  %2860 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11
  %2861 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4
  %2862 = load i8, ptr %2860, align 1, !tbaa !5
  %2863 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 11, i64 1
  %2864 = load i8, ptr %2863, align 1, !tbaa !5
  %2865 = load i8, ptr %2861, align 1, !tbaa !5
  %2866 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 4, i64 1
  %2867 = load i8, ptr %2866, align 1, !tbaa !5
  %2868 = zext i8 %2862 to i32
  %2869 = zext i8 %2865 to i32
  %2870 = add nuw nsw i32 %2869, %2868
  %2871 = zext i8 %2864 to i32
  %2872 = zext i8 %2867 to i32
  %2873 = add nuw nsw i32 %2872, %2871
  %2874 = icmp ugt i32 %2870, 2
  %2875 = zext i1 %2874 to i32
  %2876 = icmp ugt i32 %2870, 32
  %2877 = zext i1 %2876 to i32
  %2878 = add nuw nsw i32 %2875, %2877
  %2879 = icmp ugt i32 %2873, 2
  %2880 = zext i1 %2879 to i32
  %2881 = icmp ugt i32 %2873, 32
  %2882 = zext i1 %2881 to i32
  %2883 = add nuw nsw i32 %2880, %2882
  %2884 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %2853, i32 noundef %2878)
  %2885 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %2859, i32 noundef %2883)
  %2886 = shl i32 %2885, 8
  %2887 = add nsw i32 %2886, %2884
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  %2888 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 12
  %2889 = and i32 %2887, 65535
  %2890 = mul nuw i32 %2889, 65537
  store i32 %2890, ptr %2888, align 4, !tbaa !5
  %2891 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  store i32 %2890, ptr %2891, align 4, !tbaa !5
  br label %2892

2892:                                             ; preds = %2840, %2847
  %2893 = load i8, ptr %1770, align 1, !tbaa !5
  %2894 = zext i8 %2893 to i64
  %2895 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %2894
  %2896 = load i8, ptr %2895, align 1, !tbaa !5
  %2897 = icmp eq i8 %2896, 0
  br i1 %2897, label %2943, label %2898

2898:                                             ; preds = %2892
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %9) #17
  %2899 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14
  %2900 = load i16, ptr %2899, align 4, !tbaa !37
  %2901 = sext i16 %2900 to i32
  %2902 = load i16, ptr %9, align 4, !tbaa !37
  %2903 = sext i16 %2902 to i32
  %2904 = sub nsw i32 %2901, %2903
  %2905 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 14, i64 1
  %2906 = load i16, ptr %2905, align 2, !tbaa !37
  %2907 = sext i16 %2906 to i32
  %2908 = load i16, ptr %2842, align 2, !tbaa !37
  %2909 = sext i16 %2908 to i32
  %2910 = sub nsw i32 %2907, %2909
  %2911 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 13
  %2912 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 6
  %2913 = load i8, ptr %2911, align 1, !tbaa !5
  %2914 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 13, i64 1
  %2915 = load i8, ptr %2914, align 1, !tbaa !5
  %2916 = load i8, ptr %2912, align 1, !tbaa !5
  %2917 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 6, i64 1
  %2918 = load i8, ptr %2917, align 1, !tbaa !5
  %2919 = zext i8 %2913 to i32
  %2920 = zext i8 %2916 to i32
  %2921 = add nuw nsw i32 %2920, %2919
  %2922 = zext i8 %2915 to i32
  %2923 = zext i8 %2918 to i32
  %2924 = add nuw nsw i32 %2923, %2922
  %2925 = icmp ugt i32 %2921, 2
  %2926 = zext i1 %2925 to i32
  %2927 = icmp ugt i32 %2921, 32
  %2928 = zext i1 %2927 to i32
  %2929 = add nuw nsw i32 %2926, %2928
  %2930 = icmp ugt i32 %2924, 2
  %2931 = zext i1 %2930 to i32
  %2932 = icmp ugt i32 %2924, 32
  %2933 = zext i1 %2932 to i32
  %2934 = add nuw nsw i32 %2931, %2933
  %2935 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %2904, i32 noundef %2929)
  %2936 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %2910, i32 noundef %2934)
  %2937 = shl i32 %2936, 8
  %2938 = add nsw i32 %2937, %2935
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  %2939 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 14
  %2940 = and i32 %2938, 65535
  %2941 = mul nuw i32 %2940, 65537
  store i32 %2941, ptr %2939, align 4, !tbaa !5
  %2942 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 22
  store i32 %2941, ptr %2942, align 4, !tbaa !5
  br label %2943

2943:                                             ; preds = %2898, %2892
  %2944 = load i8, ptr %1837, align 1, !tbaa !5
  %2945 = zext i8 %2944 to i64
  %2946 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %2945
  %2947 = load i8, ptr %2946, align 1, !tbaa !5
  %2948 = icmp eq i8 %2947, 0
  br i1 %2948, label %2994, label %2949

2949:                                             ; preds = %2943
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 8, i32 noundef 2, ptr noundef nonnull %9) #17
  %2950 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28
  %2951 = load i16, ptr %2950, align 4, !tbaa !37
  %2952 = sext i16 %2951 to i32
  %2953 = load i16, ptr %9, align 4, !tbaa !37
  %2954 = sext i16 %2953 to i32
  %2955 = sub nsw i32 %2952, %2954
  %2956 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 28, i64 1
  %2957 = load i16, ptr %2956, align 2, !tbaa !37
  %2958 = sext i16 %2957 to i32
  %2959 = load i16, ptr %2842, align 2, !tbaa !37
  %2960 = sext i16 %2959 to i32
  %2961 = sub nsw i32 %2958, %2960
  %2962 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 27
  %2963 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20
  %2964 = load i8, ptr %2962, align 1, !tbaa !5
  %2965 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 27, i64 1
  %2966 = load i8, ptr %2965, align 1, !tbaa !5
  %2967 = load i8, ptr %2963, align 1, !tbaa !5
  %2968 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 20, i64 1
  %2969 = load i8, ptr %2968, align 1, !tbaa !5
  %2970 = zext i8 %2964 to i32
  %2971 = zext i8 %2967 to i32
  %2972 = add nuw nsw i32 %2971, %2970
  %2973 = zext i8 %2966 to i32
  %2974 = zext i8 %2969 to i32
  %2975 = add nuw nsw i32 %2974, %2973
  %2976 = icmp ugt i32 %2972, 2
  %2977 = zext i1 %2976 to i32
  %2978 = icmp ugt i32 %2972, 32
  %2979 = zext i1 %2978 to i32
  %2980 = add nuw nsw i32 %2977, %2979
  %2981 = icmp ugt i32 %2975, 2
  %2982 = zext i1 %2981 to i32
  %2983 = icmp ugt i32 %2975, 32
  %2984 = zext i1 %2983 to i32
  %2985 = add nuw nsw i32 %2982, %2984
  %2986 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %2955, i32 noundef %2980)
  %2987 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %2961, i32 noundef %2985)
  %2988 = shl i32 %2987, 8
  %2989 = add nsw i32 %2988, %2986
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  %2990 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 28
  %2991 = and i32 %2989, 65535
  %2992 = mul nuw i32 %2991, 65537
  store i32 %2992, ptr %2990, align 4, !tbaa !5
  %2993 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 36
  store i32 %2992, ptr %2993, align 4, !tbaa !5
  br label %2994

2994:                                             ; preds = %2949, %2943
  %2995 = load i8, ptr %1904, align 1, !tbaa !5
  %2996 = zext i8 %2995 to i64
  %2997 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %2996
  %2998 = load i8, ptr %2997, align 1, !tbaa !5
  %2999 = icmp eq i8 %2998, 0
  br i1 %2999, label %3045, label %3000

3000:                                             ; preds = %2994
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 12, i32 noundef 2, ptr noundef nonnull %9) #17
  %3001 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30
  %3002 = load i16, ptr %3001, align 4, !tbaa !37
  %3003 = sext i16 %3002 to i32
  %3004 = load i16, ptr %9, align 4, !tbaa !37
  %3005 = sext i16 %3004 to i32
  %3006 = sub nsw i32 %3003, %3005
  %3007 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 30, i64 1
  %3008 = load i16, ptr %3007, align 2, !tbaa !37
  %3009 = sext i16 %3008 to i32
  %3010 = load i16, ptr %2842, align 2, !tbaa !37
  %3011 = sext i16 %3010 to i32
  %3012 = sub nsw i32 %3009, %3011
  %3013 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 29
  %3014 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 22
  %3015 = load i8, ptr %3013, align 1, !tbaa !5
  %3016 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 29, i64 1
  %3017 = load i8, ptr %3016, align 1, !tbaa !5
  %3018 = load i8, ptr %3014, align 1, !tbaa !5
  %3019 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 22, i64 1
  %3020 = load i8, ptr %3019, align 1, !tbaa !5
  %3021 = zext i8 %3015 to i32
  %3022 = zext i8 %3018 to i32
  %3023 = add nuw nsw i32 %3022, %3021
  %3024 = zext i8 %3017 to i32
  %3025 = zext i8 %3020 to i32
  %3026 = add nuw nsw i32 %3025, %3024
  %3027 = icmp ugt i32 %3023, 2
  %3028 = zext i1 %3027 to i32
  %3029 = icmp ugt i32 %3023, 32
  %3030 = zext i1 %3029 to i32
  %3031 = add nuw nsw i32 %3028, %3030
  %3032 = icmp ugt i32 %3026, 2
  %3033 = zext i1 %3032 to i32
  %3034 = icmp ugt i32 %3026, 32
  %3035 = zext i1 %3034 to i32
  %3036 = add nuw nsw i32 %3033, %3035
  %3037 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %3006, i32 noundef %3031)
  %3038 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %3012, i32 noundef %3036)
  %3039 = shl i32 %3038, 8
  %3040 = add nsw i32 %3039, %3037
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  %3041 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 30
  %3042 = and i32 %3040, 65535
  %3043 = mul nuw i32 %3042, 65537
  store i32 %3043, ptr %3041, align 4, !tbaa !5
  %3044 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 38
  store i32 %3043, ptr %3044, align 4, !tbaa !5
  br label %3045

3045:                                             ; preds = %3000, %2994
  %3046 = getelementptr inbounds [2 x i16], ptr %8, i64 0, i64 1
  %3047 = load i8, ptr %848, align 1, !tbaa !5
  %3048 = zext i8 %3047 to i64
  %3049 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3048
  %3050 = load i8, ptr %3049, align 1, !tbaa !5
  %3051 = icmp eq i8 %3050, 0
  br i1 %3051, label %3097, label %3052

3052:                                             ; preds = %3045
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 0, i32 noundef 2, ptr noundef nonnull %8) #17
  %3053 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12
  %3054 = load i16, ptr %3053, align 4, !tbaa !37
  %3055 = sext i16 %3054 to i32
  %3056 = load i16, ptr %8, align 4, !tbaa !37
  %3057 = sext i16 %3056 to i32
  %3058 = sub nsw i32 %3055, %3057
  %3059 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 12, i64 1
  %3060 = load i16, ptr %3059, align 2, !tbaa !37
  %3061 = sext i16 %3060 to i32
  %3062 = load i16, ptr %3046, align 2, !tbaa !37
  %3063 = sext i16 %3062 to i32
  %3064 = sub nsw i32 %3061, %3063
  %3065 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 11
  %3066 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 4
  %3067 = load i8, ptr %3065, align 1, !tbaa !5
  %3068 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 11, i64 1
  %3069 = load i8, ptr %3068, align 1, !tbaa !5
  %3070 = load i8, ptr %3066, align 1, !tbaa !5
  %3071 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 4, i64 1
  %3072 = load i8, ptr %3071, align 1, !tbaa !5
  %3073 = zext i8 %3067 to i32
  %3074 = zext i8 %3070 to i32
  %3075 = add nuw nsw i32 %3074, %3073
  %3076 = zext i8 %3069 to i32
  %3077 = zext i8 %3072 to i32
  %3078 = add nuw nsw i32 %3077, %3076
  %3079 = icmp ugt i32 %3075, 2
  %3080 = zext i1 %3079 to i32
  %3081 = icmp ugt i32 %3075, 32
  %3082 = zext i1 %3081 to i32
  %3083 = add nuw nsw i32 %3080, %3082
  %3084 = icmp ugt i32 %3078, 2
  %3085 = zext i1 %3084 to i32
  %3086 = icmp ugt i32 %3078, 32
  %3087 = zext i1 %3086 to i32
  %3088 = add nuw nsw i32 %3085, %3087
  %3089 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %3058, i32 noundef %3083)
  %3090 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %3064, i32 noundef %3088)
  %3091 = shl i32 %3090, 8
  %3092 = add nsw i32 %3091, %3089
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  %3093 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 12
  %3094 = and i32 %3092, 65535
  %3095 = mul nuw i32 %3094, 65537
  store i32 %3095, ptr %3093, align 4, !tbaa !5
  %3096 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 20
  store i32 %3095, ptr %3096, align 4, !tbaa !5
  br label %3097

3097:                                             ; preds = %3045, %3052
  %3098 = load i8, ptr %1770, align 1, !tbaa !5
  %3099 = zext i8 %3098 to i64
  %3100 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3099
  %3101 = load i8, ptr %3100, align 1, !tbaa !5
  %3102 = icmp eq i8 %3101, 0
  br i1 %3102, label %3148, label %3103

3103:                                             ; preds = %3097
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %8) #17
  %3104 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14
  %3105 = load i16, ptr %3104, align 4, !tbaa !37
  %3106 = sext i16 %3105 to i32
  %3107 = load i16, ptr %8, align 4, !tbaa !37
  %3108 = sext i16 %3107 to i32
  %3109 = sub nsw i32 %3106, %3108
  %3110 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 14, i64 1
  %3111 = load i16, ptr %3110, align 2, !tbaa !37
  %3112 = sext i16 %3111 to i32
  %3113 = load i16, ptr %3046, align 2, !tbaa !37
  %3114 = sext i16 %3113 to i32
  %3115 = sub nsw i32 %3112, %3114
  %3116 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 13
  %3117 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 6
  %3118 = load i8, ptr %3116, align 1, !tbaa !5
  %3119 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 13, i64 1
  %3120 = load i8, ptr %3119, align 1, !tbaa !5
  %3121 = load i8, ptr %3117, align 1, !tbaa !5
  %3122 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 6, i64 1
  %3123 = load i8, ptr %3122, align 1, !tbaa !5
  %3124 = zext i8 %3118 to i32
  %3125 = zext i8 %3121 to i32
  %3126 = add nuw nsw i32 %3125, %3124
  %3127 = zext i8 %3120 to i32
  %3128 = zext i8 %3123 to i32
  %3129 = add nuw nsw i32 %3128, %3127
  %3130 = icmp ugt i32 %3126, 2
  %3131 = zext i1 %3130 to i32
  %3132 = icmp ugt i32 %3126, 32
  %3133 = zext i1 %3132 to i32
  %3134 = add nuw nsw i32 %3131, %3133
  %3135 = icmp ugt i32 %3129, 2
  %3136 = zext i1 %3135 to i32
  %3137 = icmp ugt i32 %3129, 32
  %3138 = zext i1 %3137 to i32
  %3139 = add nuw nsw i32 %3136, %3138
  %3140 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %3109, i32 noundef %3134)
  %3141 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %3115, i32 noundef %3139)
  %3142 = shl i32 %3141, 8
  %3143 = add nsw i32 %3142, %3140
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  %3144 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 14
  %3145 = and i32 %3143, 65535
  %3146 = mul nuw i32 %3145, 65537
  store i32 %3146, ptr %3144, align 4, !tbaa !5
  %3147 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 22
  store i32 %3146, ptr %3147, align 4, !tbaa !5
  br label %3148

3148:                                             ; preds = %3103, %3097
  %3149 = load i8, ptr %1837, align 1, !tbaa !5
  %3150 = zext i8 %3149 to i64
  %3151 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3150
  %3152 = load i8, ptr %3151, align 1, !tbaa !5
  %3153 = icmp eq i8 %3152, 0
  br i1 %3153, label %3199, label %3154

3154:                                             ; preds = %3148
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 8, i32 noundef 2, ptr noundef nonnull %8) #17
  %3155 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28
  %3156 = load i16, ptr %3155, align 4, !tbaa !37
  %3157 = sext i16 %3156 to i32
  %3158 = load i16, ptr %8, align 4, !tbaa !37
  %3159 = sext i16 %3158 to i32
  %3160 = sub nsw i32 %3157, %3159
  %3161 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 28, i64 1
  %3162 = load i16, ptr %3161, align 2, !tbaa !37
  %3163 = sext i16 %3162 to i32
  %3164 = load i16, ptr %3046, align 2, !tbaa !37
  %3165 = sext i16 %3164 to i32
  %3166 = sub nsw i32 %3163, %3165
  %3167 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 27
  %3168 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 20
  %3169 = load i8, ptr %3167, align 1, !tbaa !5
  %3170 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 27, i64 1
  %3171 = load i8, ptr %3170, align 1, !tbaa !5
  %3172 = load i8, ptr %3168, align 1, !tbaa !5
  %3173 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 20, i64 1
  %3174 = load i8, ptr %3173, align 1, !tbaa !5
  %3175 = zext i8 %3169 to i32
  %3176 = zext i8 %3172 to i32
  %3177 = add nuw nsw i32 %3176, %3175
  %3178 = zext i8 %3171 to i32
  %3179 = zext i8 %3174 to i32
  %3180 = add nuw nsw i32 %3179, %3178
  %3181 = icmp ugt i32 %3177, 2
  %3182 = zext i1 %3181 to i32
  %3183 = icmp ugt i32 %3177, 32
  %3184 = zext i1 %3183 to i32
  %3185 = add nuw nsw i32 %3182, %3184
  %3186 = icmp ugt i32 %3180, 2
  %3187 = zext i1 %3186 to i32
  %3188 = icmp ugt i32 %3180, 32
  %3189 = zext i1 %3188 to i32
  %3190 = add nuw nsw i32 %3187, %3189
  %3191 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %3160, i32 noundef %3185)
  %3192 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %3166, i32 noundef %3190)
  %3193 = shl i32 %3192, 8
  %3194 = add nsw i32 %3193, %3191
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  %3195 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 28
  %3196 = and i32 %3194, 65535
  %3197 = mul nuw i32 %3196, 65537
  store i32 %3197, ptr %3195, align 4, !tbaa !5
  %3198 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 36
  store i32 %3197, ptr %3198, align 4, !tbaa !5
  br label %3199

3199:                                             ; preds = %3154, %3148
  %3200 = load i8, ptr %1904, align 1, !tbaa !5
  %3201 = zext i8 %3200 to i64
  %3202 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %3201
  %3203 = load i8, ptr %3202, align 1, !tbaa !5
  %3204 = icmp eq i8 %3203, 0
  br i1 %3204, label %3774, label %3205

3205:                                             ; preds = %3199
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 12, i32 noundef 2, ptr noundef nonnull %8) #17
  %3206 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30
  %3207 = load i16, ptr %3206, align 4, !tbaa !37
  %3208 = sext i16 %3207 to i32
  %3209 = load i16, ptr %8, align 4, !tbaa !37
  %3210 = sext i16 %3209 to i32
  %3211 = sub nsw i32 %3208, %3210
  %3212 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 30, i64 1
  %3213 = load i16, ptr %3212, align 2, !tbaa !37
  %3214 = sext i16 %3213 to i32
  %3215 = load i16, ptr %3046, align 2, !tbaa !37
  %3216 = sext i16 %3215 to i32
  %3217 = sub nsw i32 %3214, %3216
  %3218 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 29
  %3219 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 22
  %3220 = load i8, ptr %3218, align 1, !tbaa !5
  %3221 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 29, i64 1
  %3222 = load i8, ptr %3221, align 1, !tbaa !5
  %3223 = load i8, ptr %3219, align 1, !tbaa !5
  %3224 = getelementptr %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 22, i64 1
  %3225 = load i8, ptr %3224, align 1, !tbaa !5
  %3226 = zext i8 %3220 to i32
  %3227 = zext i8 %3223 to i32
  %3228 = add nuw nsw i32 %3227, %3226
  %3229 = zext i8 %3222 to i32
  %3230 = zext i8 %3225 to i32
  %3231 = add nuw nsw i32 %3230, %3229
  %3232 = icmp ugt i32 %3228, 2
  %3233 = zext i1 %3232 to i32
  %3234 = icmp ugt i32 %3228, 32
  %3235 = zext i1 %3234 to i32
  %3236 = add nuw nsw i32 %3233, %3235
  %3237 = icmp ugt i32 %3231, 2
  %3238 = zext i1 %3237 to i32
  %3239 = icmp ugt i32 %3231, 32
  %3240 = zext i1 %3239 to i32
  %3241 = add nuw nsw i32 %3238, %3240
  %3242 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 0, i32 noundef %3211, i32 noundef %3236)
  %3243 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef nonnull %1, i32 noundef 1, i32 noundef %3217, i32 noundef %3241)
  %3244 = shl i32 %3243, 8
  %3245 = add nsw i32 %3244, %3242
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  %3246 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 30
  %3247 = and i32 %3245, 65535
  %3248 = mul nuw i32 %3247, 65537
  store i32 %3248, ptr %3246, align 4, !tbaa !5
  %3249 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 38
  store i32 %3248, ptr %3249, align 4, !tbaa !5
  br i1 %838, label %3911, label %3778

3250:                                             ; preds = %832
  %3251 = sext i32 %16 to i64
  %3252 = getelementptr inbounds [19 x [2 x [2 x i8]]], ptr @x264_mb_type_list_table, i64 0, i64 %3251
  %3253 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19
  %3254 = load i32, ptr %3253, align 8, !tbaa !39
  %3255 = icmp sgt i32 %3254, 1
  br i1 %3255, label %3256, label %3373

3256:                                             ; preds = %3250
  %3257 = load i8, ptr %3252, align 4, !tbaa !5
  %3258 = icmp eq i8 %3257, 0
  br i1 %3258, label %3361, label %3259

3259:                                             ; preds = %3256
  %3260 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 11
  %3261 = load i8, ptr %3260, align 1, !tbaa !5
  %3262 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 4
  %3263 = load i8, ptr %3262, align 1, !tbaa !5
  %3264 = icmp sgt i8 %3261, 0
  br i1 %3264, label %3265, label %3270

3265:                                             ; preds = %3259
  %3266 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 11
  %3267 = load i8, ptr %3266, align 1, !tbaa !5
  %3268 = icmp eq i8 %3267, 0
  %3269 = zext i1 %3268 to i32
  br label %3270

3270:                                             ; preds = %3265, %3259
  %3271 = phi i32 [ 0, %3259 ], [ %3269, %3265 ]
  %3272 = icmp sgt i8 %3263, 0
  br i1 %3272, label %3273, label %3279

3273:                                             ; preds = %3270
  %3274 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 4
  %3275 = load i8, ptr %3274, align 1, !tbaa !5
  %3276 = icmp eq i8 %3275, 0
  %3277 = or i32 %3271, 2
  %3278 = select i1 %3276, i32 %3277, i32 %3271
  br label %3279

3279:                                             ; preds = %3273, %3270
  %3280 = phi i32 [ %3271, %3270 ], [ %3278, %3273 ]
  %3281 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 12
  %3282 = load i8, ptr %3281, align 1, !tbaa !5
  %3283 = icmp sgt i8 %3282, 0
  br i1 %3283, label %3284, label %3346

3284:                                             ; preds = %3279
  %3285 = zext i8 %3282 to i32
  %3286 = and i32 %3285, 1
  %3287 = icmp eq i32 %3286, 0
  br i1 %3287, label %3304, label %3288

3288:                                             ; preds = %3284
  %3289 = add nuw nsw i32 %3280, 54
  %3290 = zext i32 %3289 to i64
  %3291 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3290
  %3292 = load i8, ptr %3291, align 1, !tbaa !5
  %3293 = zext i8 %3292 to i64
  %3294 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3293, i64 1
  %3295 = load i8, ptr %3294, align 1, !tbaa !5
  store i8 %3295, ptr %3291, align 1, !tbaa !5
  %3296 = xor i64 %3293, 1
  %3297 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3296
  %3298 = load i16, ptr %3297, align 2, !tbaa !37
  %3299 = zext i16 %3298 to i32
  %3300 = add nsw i32 %833, %3299
  %3301 = lshr i32 %3280, 2
  %3302 = add nuw nsw i32 %3301, 4
  %3303 = add nsw i32 %3285, -1
  br label %3304

3304:                                             ; preds = %3288, %3284
  %3305 = phi i32 [ %833, %3284 ], [ %3300, %3288 ]
  %3306 = phi i32 [ %3285, %3284 ], [ %3303, %3288 ]
  %3307 = phi i32 [ %3280, %3284 ], [ %3302, %3288 ]
  %3308 = phi i32 [ undef, %3284 ], [ %3300, %3288 ]
  %3309 = phi i32 [ undef, %3284 ], [ %3302, %3288 ]
  %3310 = icmp eq i8 %3282, 1
  br i1 %3310, label %3346, label %3311

3311:                                             ; preds = %3304, %3311
  %3312 = phi i32 [ %3340, %3311 ], [ %3305, %3304 ]
  %3313 = phi i32 [ %3343, %3311 ], [ %3306, %3304 ]
  %3314 = phi i32 [ %3342, %3311 ], [ %3307, %3304 ]
  %3315 = add nuw nsw i32 %3314, 54
  %3316 = zext i32 %3315 to i64
  %3317 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3316
  %3318 = load i8, ptr %3317, align 1, !tbaa !5
  %3319 = zext i8 %3318 to i64
  %3320 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3319, i64 1
  %3321 = load i8, ptr %3320, align 1, !tbaa !5
  store i8 %3321, ptr %3317, align 1, !tbaa !5
  %3322 = xor i64 %3319, 1
  %3323 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3322
  %3324 = load i16, ptr %3323, align 2, !tbaa !37
  %3325 = zext i16 %3324 to i32
  %3326 = add nsw i32 %3312, %3325
  %3327 = lshr i32 %3314, 2
  %3328 = add nuw nsw i32 %3327, 4
  %3329 = add nuw nsw i32 %3327, 58
  %3330 = zext i32 %3329 to i64
  %3331 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3330
  %3332 = load i8, ptr %3331, align 1, !tbaa !5
  %3333 = zext i8 %3332 to i64
  %3334 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3333, i64 1
  %3335 = load i8, ptr %3334, align 1, !tbaa !5
  store i8 %3335, ptr %3331, align 1, !tbaa !5
  %3336 = xor i64 %3333, 1
  %3337 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3336
  %3338 = load i16, ptr %3337, align 2, !tbaa !37
  %3339 = zext i16 %3338 to i32
  %3340 = add nsw i32 %3326, %3339
  %3341 = lshr i32 %3328, 2
  %3342 = add nuw nsw i32 %3341, 4
  %3343 = add nsw i32 %3313, -2
  %3344 = add i32 %3313, -3
  %3345 = icmp ult i32 %3344, -2
  br i1 %3345, label %3311, label %3346, !llvm.loop !448

3346:                                             ; preds = %3304, %3311, %3279
  %3347 = phi i32 [ %833, %3279 ], [ %3308, %3304 ], [ %3340, %3311 ]
  %3348 = phi i32 [ %3280, %3279 ], [ %3309, %3304 ], [ %3342, %3311 ]
  %3349 = add nuw nsw i32 %3348, 54
  %3350 = zext i32 %3349 to i64
  %3351 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3350
  %3352 = load i8, ptr %3351, align 1, !tbaa !5
  %3353 = zext i8 %3352 to i64
  %3354 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3353, i64 0
  %3355 = load i8, ptr %3354, align 2, !tbaa !5
  store i8 %3355, ptr %3351, align 1, !tbaa !5
  %3356 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3353
  %3357 = load i16, ptr %3356, align 2, !tbaa !37
  %3358 = zext i16 %3357 to i32
  %3359 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %3360 = add nsw i32 %3347, %3358
  store i32 %3360, ptr %3359, align 16, !tbaa !40
  br label %3361

3361:                                             ; preds = %3346, %3256
  %3362 = getelementptr inbounds [2 x i8], ptr %3252, i64 0, i64 1
  %3363 = load i8, ptr %3362, align 1, !tbaa !5
  %3364 = icmp eq i8 %3363, 0
  br i1 %3364, label %3373, label %3365

3365:                                             ; preds = %3361
  %3366 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %3367 = load i32, ptr %3366, align 4, !tbaa !50
  %3368 = icmp eq i32 %3367, 16
  br i1 %3368, label %3373, label %3369

3369:                                             ; preds = %3365
  %3370 = icmp eq i32 %3367, 15
  %3371 = zext i1 %3370 to i32
  %3372 = lshr i32 8, %3371
  tail call fastcc void @x264_cabac_mb_ref(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0, i32 noundef %3372)
  br label %3373

3373:                                             ; preds = %3361, %3365, %3369, %3250
  %3374 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 19, i64 1
  %3375 = load i32, ptr %3374, align 4, !tbaa !39
  %3376 = icmp sgt i32 %3375, 1
  br i1 %3376, label %3377, label %3500

3377:                                             ; preds = %3373
  %3378 = getelementptr inbounds [2 x i8], ptr %3252, i64 1
  %3379 = load i8, ptr %3378, align 2, !tbaa !5
  %3380 = icmp eq i8 %3379, 0
  br i1 %3380, label %3488, label %3381

3381:                                             ; preds = %3377
  %3382 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 11
  %3383 = load i8, ptr %3382, align 1, !tbaa !5
  %3384 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 4
  %3385 = load i8, ptr %3384, align 1, !tbaa !5
  %3386 = icmp sgt i8 %3383, 0
  br i1 %3386, label %3387, label %3392

3387:                                             ; preds = %3381
  %3388 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 11
  %3389 = load i8, ptr %3388, align 1, !tbaa !5
  %3390 = icmp eq i8 %3389, 0
  %3391 = zext i1 %3390 to i32
  br label %3392

3392:                                             ; preds = %3387, %3381
  %3393 = phi i32 [ 0, %3381 ], [ %3391, %3387 ]
  %3394 = icmp sgt i8 %3385, 0
  br i1 %3394, label %3395, label %3401

3395:                                             ; preds = %3392
  %3396 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 4
  %3397 = load i8, ptr %3396, align 1, !tbaa !5
  %3398 = icmp eq i8 %3397, 0
  %3399 = or i32 %3393, 2
  %3400 = select i1 %3398, i32 %3399, i32 %3393
  br label %3401

3401:                                             ; preds = %3395, %3392
  %3402 = phi i32 [ %3393, %3392 ], [ %3400, %3395 ]
  %3403 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 12
  %3404 = load i8, ptr %3403, align 1, !tbaa !5
  %3405 = icmp sgt i8 %3404, 0
  br i1 %3405, label %3409, label %3406

3406:                                             ; preds = %3401
  %3407 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %3408 = load i32, ptr %3407, align 16, !tbaa !40
  br label %3473

3409:                                             ; preds = %3401
  %3410 = zext i8 %3404 to i32
  %3411 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %3412 = load i32, ptr %3411, align 16, !tbaa !40
  %3413 = and i32 %3410, 1
  %3414 = icmp eq i32 %3413, 0
  br i1 %3414, label %3431, label %3415

3415:                                             ; preds = %3409
  %3416 = add nuw nsw i32 %3402, 54
  %3417 = zext i32 %3416 to i64
  %3418 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3417
  %3419 = load i8, ptr %3418, align 1, !tbaa !5
  %3420 = zext i8 %3419 to i64
  %3421 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3420, i64 1
  %3422 = load i8, ptr %3421, align 1, !tbaa !5
  store i8 %3422, ptr %3418, align 1, !tbaa !5
  %3423 = xor i64 %3420, 1
  %3424 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3423
  %3425 = load i16, ptr %3424, align 2, !tbaa !37
  %3426 = zext i16 %3425 to i32
  %3427 = add nsw i32 %3412, %3426
  %3428 = lshr i32 %3402, 2
  %3429 = add nuw nsw i32 %3428, 4
  %3430 = add nsw i32 %3410, -1
  br label %3431

3431:                                             ; preds = %3415, %3409
  %3432 = phi i32 [ %3412, %3409 ], [ %3427, %3415 ]
  %3433 = phi i32 [ %3410, %3409 ], [ %3430, %3415 ]
  %3434 = phi i32 [ %3402, %3409 ], [ %3429, %3415 ]
  %3435 = phi i32 [ undef, %3409 ], [ %3427, %3415 ]
  %3436 = phi i32 [ undef, %3409 ], [ %3429, %3415 ]
  %3437 = icmp eq i8 %3404, 1
  br i1 %3437, label %3473, label %3438

3438:                                             ; preds = %3431, %3438
  %3439 = phi i32 [ %3467, %3438 ], [ %3432, %3431 ]
  %3440 = phi i32 [ %3470, %3438 ], [ %3433, %3431 ]
  %3441 = phi i32 [ %3469, %3438 ], [ %3434, %3431 ]
  %3442 = add nuw nsw i32 %3441, 54
  %3443 = zext i32 %3442 to i64
  %3444 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3443
  %3445 = load i8, ptr %3444, align 1, !tbaa !5
  %3446 = zext i8 %3445 to i64
  %3447 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3446, i64 1
  %3448 = load i8, ptr %3447, align 1, !tbaa !5
  store i8 %3448, ptr %3444, align 1, !tbaa !5
  %3449 = xor i64 %3446, 1
  %3450 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3449
  %3451 = load i16, ptr %3450, align 2, !tbaa !37
  %3452 = zext i16 %3451 to i32
  %3453 = add nsw i32 %3439, %3452
  %3454 = lshr i32 %3441, 2
  %3455 = add nuw nsw i32 %3454, 4
  %3456 = add nuw nsw i32 %3454, 58
  %3457 = zext i32 %3456 to i64
  %3458 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3457
  %3459 = load i8, ptr %3458, align 1, !tbaa !5
  %3460 = zext i8 %3459 to i64
  %3461 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3460, i64 1
  %3462 = load i8, ptr %3461, align 1, !tbaa !5
  store i8 %3462, ptr %3458, align 1, !tbaa !5
  %3463 = xor i64 %3460, 1
  %3464 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3463
  %3465 = load i16, ptr %3464, align 2, !tbaa !37
  %3466 = zext i16 %3465 to i32
  %3467 = add nsw i32 %3453, %3466
  %3468 = lshr i32 %3455, 2
  %3469 = add nuw nsw i32 %3468, 4
  %3470 = add nsw i32 %3440, -2
  %3471 = add i32 %3440, -3
  %3472 = icmp ult i32 %3471, -2
  br i1 %3472, label %3438, label %3473, !llvm.loop !448

3473:                                             ; preds = %3431, %3438, %3406
  %3474 = phi i32 [ %3408, %3406 ], [ %3435, %3431 ], [ %3467, %3438 ]
  %3475 = phi i32 [ %3402, %3406 ], [ %3436, %3431 ], [ %3469, %3438 ]
  %3476 = add nuw nsw i32 %3475, 54
  %3477 = zext i32 %3476 to i64
  %3478 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3477
  %3479 = load i8, ptr %3478, align 1, !tbaa !5
  %3480 = zext i8 %3479 to i64
  %3481 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3480, i64 0
  %3482 = load i8, ptr %3481, align 2, !tbaa !5
  store i8 %3482, ptr %3478, align 1, !tbaa !5
  %3483 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3480
  %3484 = load i16, ptr %3483, align 2, !tbaa !37
  %3485 = zext i16 %3484 to i32
  %3486 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %3487 = add nsw i32 %3474, %3485
  store i32 %3487, ptr %3486, align 16, !tbaa !40
  br label %3488

3488:                                             ; preds = %3473, %3377
  %3489 = getelementptr inbounds [2 x i8], ptr %3252, i64 1, i64 1
  %3490 = load i8, ptr %3489, align 1, !tbaa !5
  %3491 = icmp eq i8 %3490, 0
  br i1 %3491, label %3500, label %3492

3492:                                             ; preds = %3488
  %3493 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %3494 = load i32, ptr %3493, align 4, !tbaa !50
  %3495 = icmp eq i32 %3494, 16
  br i1 %3495, label %3500, label %3496

3496:                                             ; preds = %3492
  %3497 = icmp eq i32 %3494, 15
  %3498 = zext i1 %3497 to i32
  %3499 = lshr i32 8, %3498
  tail call fastcc void @x264_cabac_mb_ref(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 1, i32 noundef %3499)
  br label %3500

3500:                                             ; preds = %3488, %3492, %3496, %3373
  %3501 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 54
  %3502 = getelementptr inbounds [2 x i16], ptr %6, i64 0, i64 1
  %3503 = getelementptr inbounds [2 x i16], ptr %5, i64 0, i64 1
  %3504 = getelementptr inbounds [2 x i16], ptr %7, i64 0, i64 1
  %3505 = getelementptr inbounds [2 x i16], ptr %4, i64 0, i64 1
  %3506 = getelementptr inbounds [2 x i16], ptr %3, i64 0, i64 1
  br label %3507

3507:                                             ; preds = %3500, %3773
  %3508 = phi i1 [ true, %3500 ], [ false, %3773 ]
  %3509 = phi i64 [ 0, %3500 ], [ 1, %3773 ]
  %3510 = load i32, ptr %3501, align 4, !tbaa !50
  switch i32 %3510, label %3669 [
    i32 16, label %3511
    i32 14, label %3565
  ]

3511:                                             ; preds = %3507
  %3512 = getelementptr inbounds [2 x i8], ptr %3252, i64 %3509
  %3513 = load i8, ptr %3512, align 2, !tbaa !5
  %3514 = icmp eq i8 %3513, 0
  br i1 %3514, label %3773, label %3515

3515:                                             ; preds = %3511
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #17
  %3516 = trunc i64 %3509 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef %3516, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %7) #17
  %3517 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 12
  %3518 = load i16, ptr %3517, align 4, !tbaa !37
  %3519 = sext i16 %3518 to i32
  %3520 = load i16, ptr %7, align 4, !tbaa !37
  %3521 = sext i16 %3520 to i32
  %3522 = sub nsw i32 %3519, %3521
  %3523 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 12, i64 1
  %3524 = load i16, ptr %3523, align 2, !tbaa !37
  %3525 = sext i16 %3524 to i32
  %3526 = load i16, ptr %3504, align 2, !tbaa !37
  %3527 = sext i16 %3526 to i32
  %3528 = sub nsw i32 %3525, %3527
  %3529 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 11
  %3530 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 4
  %3531 = load i8, ptr %3529, align 1, !tbaa !5
  %3532 = getelementptr i8, ptr %3529, i64 1
  %3533 = load i8, ptr %3532, align 1, !tbaa !5
  %3534 = load i8, ptr %3530, align 1, !tbaa !5
  %3535 = getelementptr i8, ptr %3530, i64 1
  %3536 = load i8, ptr %3535, align 1, !tbaa !5
  %3537 = zext i8 %3531 to i32
  %3538 = zext i8 %3534 to i32
  %3539 = add nuw nsw i32 %3538, %3537
  %3540 = zext i8 %3533 to i32
  %3541 = zext i8 %3536 to i32
  %3542 = add nuw nsw i32 %3541, %3540
  %3543 = icmp ugt i32 %3539, 2
  %3544 = zext i1 %3543 to i32
  %3545 = icmp ugt i32 %3539, 32
  %3546 = zext i1 %3545 to i32
  %3547 = add nuw nsw i32 %3544, %3546
  %3548 = icmp ugt i32 %3542, 2
  %3549 = zext i1 %3548 to i32
  %3550 = icmp ugt i32 %3542, 32
  %3551 = zext i1 %3550 to i32
  %3552 = add nuw nsw i32 %3549, %3551
  %3553 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %3522, i32 noundef %3547)
  %3554 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %3528, i32 noundef %3552)
  %3555 = shl i32 %3554, 8
  %3556 = add nsw i32 %3555, %3553
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #17
  %3557 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 12
  %3558 = and i32 %3556, 65535
  %3559 = mul nuw i32 %3558, 65537
  %3560 = zext i32 %3559 to i64
  %3561 = mul nuw i64 %3560, 4294967297
  store i64 %3561, ptr %3557, align 8, !tbaa !5
  %3562 = getelementptr inbounds i8, ptr %3557, i64 16
  store i64 %3561, ptr %3562, align 8, !tbaa !5
  %3563 = getelementptr inbounds i8, ptr %3557, i64 32
  store i64 %3561, ptr %3563, align 8, !tbaa !5
  %3564 = getelementptr inbounds i8, ptr %3557, i64 48
  store i64 %3561, ptr %3564, align 8, !tbaa !5
  br label %3773

3565:                                             ; preds = %3507
  %3566 = getelementptr inbounds [2 x i8], ptr %3252, i64 %3509
  %3567 = load i8, ptr %3566, align 2, !tbaa !5
  %3568 = icmp eq i8 %3567, 0
  br i1 %3568, label %3617, label %3569

3569:                                             ; preds = %3565
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  %3570 = trunc i64 %3509 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef %3570, i32 noundef 0, i32 noundef 4, ptr noundef nonnull %6) #17
  %3571 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 12
  %3572 = load i16, ptr %3571, align 4, !tbaa !37
  %3573 = sext i16 %3572 to i32
  %3574 = load i16, ptr %6, align 4, !tbaa !37
  %3575 = sext i16 %3574 to i32
  %3576 = sub nsw i32 %3573, %3575
  %3577 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 12, i64 1
  %3578 = load i16, ptr %3577, align 2, !tbaa !37
  %3579 = sext i16 %3578 to i32
  %3580 = load i16, ptr %3502, align 2, !tbaa !37
  %3581 = sext i16 %3580 to i32
  %3582 = sub nsw i32 %3579, %3581
  %3583 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 11
  %3584 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 4
  %3585 = load i8, ptr %3583, align 1, !tbaa !5
  %3586 = getelementptr i8, ptr %3583, i64 1
  %3587 = load i8, ptr %3586, align 1, !tbaa !5
  %3588 = load i8, ptr %3584, align 1, !tbaa !5
  %3589 = getelementptr i8, ptr %3584, i64 1
  %3590 = load i8, ptr %3589, align 1, !tbaa !5
  %3591 = zext i8 %3585 to i32
  %3592 = zext i8 %3588 to i32
  %3593 = add nuw nsw i32 %3592, %3591
  %3594 = zext i8 %3587 to i32
  %3595 = zext i8 %3590 to i32
  %3596 = add nuw nsw i32 %3595, %3594
  %3597 = icmp ugt i32 %3593, 2
  %3598 = zext i1 %3597 to i32
  %3599 = icmp ugt i32 %3593, 32
  %3600 = zext i1 %3599 to i32
  %3601 = add nuw nsw i32 %3598, %3600
  %3602 = icmp ugt i32 %3596, 2
  %3603 = zext i1 %3602 to i32
  %3604 = icmp ugt i32 %3596, 32
  %3605 = zext i1 %3604 to i32
  %3606 = add nuw nsw i32 %3603, %3605
  %3607 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %3576, i32 noundef %3601)
  %3608 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %3582, i32 noundef %3606)
  %3609 = shl i32 %3608, 8
  %3610 = add nsw i32 %3609, %3607
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  %3611 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 12
  %3612 = and i32 %3610, 65535
  %3613 = mul nuw i32 %3612, 65537
  %3614 = zext i32 %3613 to i64
  %3615 = mul nuw i64 %3614, 4294967297
  store i64 %3615, ptr %3611, align 8, !tbaa !5
  %3616 = getelementptr inbounds i8, ptr %3611, i64 16
  store i64 %3615, ptr %3616, align 8, !tbaa !5
  br label %3617

3617:                                             ; preds = %3569, %3565
  %3618 = getelementptr inbounds [2 x i8], ptr %3252, i64 %3509, i64 1
  %3619 = load i8, ptr %3618, align 1, !tbaa !5
  %3620 = icmp eq i8 %3619, 0
  br i1 %3620, label %3773, label %3621

3621:                                             ; preds = %3617
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  %3622 = trunc i64 %3509 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef %3622, i32 noundef 8, i32 noundef 4, ptr noundef nonnull %5) #17
  %3623 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 28
  %3624 = load i16, ptr %3623, align 4, !tbaa !37
  %3625 = sext i16 %3624 to i32
  %3626 = load i16, ptr %5, align 4, !tbaa !37
  %3627 = sext i16 %3626 to i32
  %3628 = sub nsw i32 %3625, %3627
  %3629 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 28, i64 1
  %3630 = load i16, ptr %3629, align 2, !tbaa !37
  %3631 = sext i16 %3630 to i32
  %3632 = load i16, ptr %3503, align 2, !tbaa !37
  %3633 = sext i16 %3632 to i32
  %3634 = sub nsw i32 %3631, %3633
  %3635 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 27
  %3636 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 20
  %3637 = load i8, ptr %3635, align 1, !tbaa !5
  %3638 = getelementptr i8, ptr %3635, i64 1
  %3639 = load i8, ptr %3638, align 1, !tbaa !5
  %3640 = load i8, ptr %3636, align 1, !tbaa !5
  %3641 = getelementptr i8, ptr %3636, i64 1
  %3642 = load i8, ptr %3641, align 1, !tbaa !5
  %3643 = zext i8 %3637 to i32
  %3644 = zext i8 %3640 to i32
  %3645 = add nuw nsw i32 %3644, %3643
  %3646 = zext i8 %3639 to i32
  %3647 = zext i8 %3642 to i32
  %3648 = add nuw nsw i32 %3647, %3646
  %3649 = icmp ugt i32 %3645, 2
  %3650 = zext i1 %3649 to i32
  %3651 = icmp ugt i32 %3645, 32
  %3652 = zext i1 %3651 to i32
  %3653 = add nuw nsw i32 %3650, %3652
  %3654 = icmp ugt i32 %3648, 2
  %3655 = zext i1 %3654 to i32
  %3656 = icmp ugt i32 %3648, 32
  %3657 = zext i1 %3656 to i32
  %3658 = add nuw nsw i32 %3655, %3657
  %3659 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %3628, i32 noundef %3653)
  %3660 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %3634, i32 noundef %3658)
  %3661 = shl i32 %3660, 8
  %3662 = add nsw i32 %3661, %3659
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  %3663 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 28
  %3664 = and i32 %3662, 65535
  %3665 = mul nuw i32 %3664, 65537
  %3666 = zext i32 %3665 to i64
  %3667 = mul nuw i64 %3666, 4294967297
  store i64 %3667, ptr %3663, align 8, !tbaa !5
  %3668 = getelementptr inbounds i8, ptr %3663, i64 16
  store i64 %3667, ptr %3668, align 8, !tbaa !5
  br label %3773

3669:                                             ; preds = %3507
  %3670 = getelementptr inbounds [2 x i8], ptr %3252, i64 %3509
  %3671 = load i8, ptr %3670, align 2, !tbaa !5
  %3672 = icmp eq i8 %3671, 0
  br i1 %3672, label %3721, label %3673

3673:                                             ; preds = %3669
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #17
  %3674 = trunc i64 %3509 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef %3674, i32 noundef 0, i32 noundef 2, ptr noundef nonnull %4) #17
  %3675 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 12
  %3676 = load i16, ptr %3675, align 4, !tbaa !37
  %3677 = sext i16 %3676 to i32
  %3678 = load i16, ptr %4, align 4, !tbaa !37
  %3679 = sext i16 %3678 to i32
  %3680 = sub nsw i32 %3677, %3679
  %3681 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 12, i64 1
  %3682 = load i16, ptr %3681, align 2, !tbaa !37
  %3683 = sext i16 %3682 to i32
  %3684 = load i16, ptr %3505, align 2, !tbaa !37
  %3685 = sext i16 %3684 to i32
  %3686 = sub nsw i32 %3683, %3685
  %3687 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 11
  %3688 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 4
  %3689 = load i8, ptr %3687, align 1, !tbaa !5
  %3690 = getelementptr i8, ptr %3687, i64 1
  %3691 = load i8, ptr %3690, align 1, !tbaa !5
  %3692 = load i8, ptr %3688, align 1, !tbaa !5
  %3693 = getelementptr i8, ptr %3688, i64 1
  %3694 = load i8, ptr %3693, align 1, !tbaa !5
  %3695 = zext i8 %3689 to i32
  %3696 = zext i8 %3692 to i32
  %3697 = add nuw nsw i32 %3696, %3695
  %3698 = zext i8 %3691 to i32
  %3699 = zext i8 %3694 to i32
  %3700 = add nuw nsw i32 %3699, %3698
  %3701 = icmp ugt i32 %3697, 2
  %3702 = zext i1 %3701 to i32
  %3703 = icmp ugt i32 %3697, 32
  %3704 = zext i1 %3703 to i32
  %3705 = add nuw nsw i32 %3702, %3704
  %3706 = icmp ugt i32 %3700, 2
  %3707 = zext i1 %3706 to i32
  %3708 = icmp ugt i32 %3700, 32
  %3709 = zext i1 %3708 to i32
  %3710 = add nuw nsw i32 %3707, %3709
  %3711 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %3680, i32 noundef %3705)
  %3712 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %3686, i32 noundef %3710)
  %3713 = shl i32 %3712, 8
  %3714 = add nsw i32 %3713, %3711
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #17
  %3715 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 12
  %3716 = and i32 %3714, 65535
  %3717 = mul nuw i32 %3716, 65537
  store i32 %3717, ptr %3715, align 4, !tbaa !5
  %3718 = getelementptr inbounds i8, ptr %3715, i64 16
  store i32 %3717, ptr %3718, align 4, !tbaa !5
  %3719 = getelementptr inbounds i8, ptr %3715, i64 32
  store i32 %3717, ptr %3719, align 4, !tbaa !5
  %3720 = getelementptr inbounds i8, ptr %3715, i64 48
  store i32 %3717, ptr %3720, align 4, !tbaa !5
  br label %3721

3721:                                             ; preds = %3673, %3669
  %3722 = getelementptr inbounds [2 x i8], ptr %3252, i64 %3509, i64 1
  %3723 = load i8, ptr %3722, align 1, !tbaa !5
  %3724 = icmp eq i8 %3723, 0
  br i1 %3724, label %3773, label %3725

3725:                                             ; preds = %3721
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #17
  %3726 = trunc i64 %3509 to i32
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef %3726, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %3) #17
  %3727 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 14
  %3728 = load i16, ptr %3727, align 4, !tbaa !37
  %3729 = sext i16 %3728 to i32
  %3730 = load i16, ptr %3, align 4, !tbaa !37
  %3731 = sext i16 %3730 to i32
  %3732 = sub nsw i32 %3729, %3731
  %3733 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %3509, i64 14, i64 1
  %3734 = load i16, ptr %3733, align 2, !tbaa !37
  %3735 = sext i16 %3734 to i32
  %3736 = load i16, ptr %3506, align 2, !tbaa !37
  %3737 = sext i16 %3736 to i32
  %3738 = sub nsw i32 %3735, %3737
  %3739 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 13
  %3740 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 6
  %3741 = load i8, ptr %3739, align 1, !tbaa !5
  %3742 = getelementptr i8, ptr %3739, i64 1
  %3743 = load i8, ptr %3742, align 1, !tbaa !5
  %3744 = load i8, ptr %3740, align 1, !tbaa !5
  %3745 = getelementptr i8, ptr %3740, i64 1
  %3746 = load i8, ptr %3745, align 1, !tbaa !5
  %3747 = zext i8 %3741 to i32
  %3748 = zext i8 %3744 to i32
  %3749 = add nuw nsw i32 %3748, %3747
  %3750 = zext i8 %3743 to i32
  %3751 = zext i8 %3746 to i32
  %3752 = add nuw nsw i32 %3751, %3750
  %3753 = icmp ugt i32 %3749, 2
  %3754 = zext i1 %3753 to i32
  %3755 = icmp ugt i32 %3749, 32
  %3756 = zext i1 %3755 to i32
  %3757 = add nuw nsw i32 %3754, %3756
  %3758 = icmp ugt i32 %3752, 2
  %3759 = zext i1 %3758 to i32
  %3760 = icmp ugt i32 %3752, 32
  %3761 = zext i1 %3760 to i32
  %3762 = add nuw nsw i32 %3759, %3761
  %3763 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %3732, i32 noundef %3757)
  %3764 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %3738, i32 noundef %3762)
  %3765 = shl i32 %3764, 8
  %3766 = add nsw i32 %3765, %3763
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #17
  %3767 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 %3509, i64 14
  %3768 = and i32 %3766, 65535
  %3769 = mul nuw i32 %3768, 65537
  store i32 %3769, ptr %3767, align 4, !tbaa !5
  %3770 = getelementptr inbounds i8, ptr %3767, i64 16
  store i32 %3769, ptr %3770, align 4, !tbaa !5
  %3771 = getelementptr inbounds i8, ptr %3767, i64 32
  store i32 %3769, ptr %3771, align 4, !tbaa !5
  %3772 = getelementptr inbounds i8, ptr %3767, i64 48
  store i32 %3769, ptr %3772, align 4, !tbaa !5
  br label %3773

3773:                                             ; preds = %3515, %3511, %3721, %3725, %3617, %3621
  br i1 %3508, label %3507, label %3774, !llvm.loop !449

3774:                                             ; preds = %3773, %3199, %809, %793
  %3775 = phi i1 [ %633, %793 ], [ %633, %809 ], [ %840, %3199 ], [ %834, %3773 ]
  %3776 = phi i1 [ %634, %793 ], [ %634, %809 ], [ %839, %3199 ], [ %835, %3773 ]
  %3777 = phi i1 [ %635, %793 ], [ %635, %809 ], [ %838, %3199 ], [ %836, %3773 ]
  br i1 %3777, label %3911, label %3778

3778:                                             ; preds = %3205, %1701, %355, %823, %877, %1031, %932, %832, %3774
  %3779 = phi i1 [ %834, %832 ], [ %3775, %3774 ], [ %869, %932 ], [ %869, %1031 ], [ %869, %877 ], [ %633, %823 ], [ false, %355 ], [ %855, %1701 ], [ %840, %3205 ]
  %3780 = phi i1 [ %835, %832 ], [ %3776, %3774 ], [ %868, %932 ], [ %868, %1031 ], [ %868, %877 ], [ %634, %823 ], [ false, %355 ], [ %854, %1701 ], [ %839, %3205 ]
  %3781 = phi i1 [ %836, %832 ], [ false, %3774 ], [ false, %932 ], [ false, %1031 ], [ false, %877 ], [ false, %823 ], [ false, %355 ], [ false, %1701 ], [ false, %3205 ]
  %3782 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %3783 = load i32, ptr %3782, align 8, !tbaa !45
  %3784 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 14
  %3785 = load i32, ptr %3784, align 4, !tbaa !289
  %3786 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 13
  %3787 = load i32, ptr %3786, align 16, !tbaa !290
  %3788 = shl i32 %3785, 30
  %3789 = ashr i32 %3788, 31
  %3790 = add nsw i32 %3789, 76
  %3791 = lshr i32 %3787, 1
  %3792 = and i32 %3791, 2
  %3793 = sub nuw nsw i32 %3790, %3792
  %3794 = zext i32 %3793 to i64
  %3795 = and i32 %3783, 1
  %3796 = zext i32 %3795 to i64
  %3797 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3794
  %3798 = load i8, ptr %3797, align 1, !tbaa !5
  %3799 = zext i8 %3798 to i64
  %3800 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3799, i64 %3796
  %3801 = load i8, ptr %3800, align 1, !tbaa !5
  store i8 %3801, ptr %3797, align 1, !tbaa !5
  %3802 = xor i64 %3799, %3796
  %3803 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3802
  %3804 = load i16, ptr %3803, align 2, !tbaa !37
  %3805 = zext i16 %3804 to i32
  %3806 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %3807 = load i32, ptr %3806, align 16, !tbaa !40
  %3808 = add nsw i32 %3807, %3805
  %3809 = lshr i32 %3787, 2
  %3810 = and i32 %3809, 2
  %3811 = or i32 %3795, %3810
  %3812 = sub nuw nsw i32 76, %3811
  %3813 = zext i32 %3812 to i64
  %3814 = lshr i32 %3783, 1
  %3815 = and i32 %3814, 1
  %3816 = zext i32 %3815 to i64
  %3817 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3813
  %3818 = load i8, ptr %3817, align 1, !tbaa !5
  %3819 = zext i8 %3818 to i64
  %3820 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3819, i64 %3816
  %3821 = load i8, ptr %3820, align 1, !tbaa !5
  store i8 %3821, ptr %3817, align 1, !tbaa !5
  %3822 = xor i64 %3819, %3816
  %3823 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3822
  %3824 = load i16, ptr %3823, align 2, !tbaa !37
  %3825 = zext i16 %3824 to i32
  %3826 = add nsw i32 %3808, %3825
  %3827 = shl i32 %3785, 28
  %3828 = ashr i32 %3827, 31
  %3829 = shl i32 %3783, 1
  %3830 = and i32 %3829, 2
  %3831 = sub nsw i32 %3828, %3830
  %3832 = add nsw i32 %3831, 76
  %3833 = zext i32 %3832 to i64
  %3834 = lshr i32 %3783, 2
  %3835 = and i32 %3834, 1
  %3836 = zext i32 %3835 to i64
  %3837 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3833
  %3838 = load i8, ptr %3837, align 1, !tbaa !5
  %3839 = zext i8 %3838 to i64
  %3840 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %3839, i64 %3836
  %3841 = load i8, ptr %3840, align 1, !tbaa !5
  store i8 %3841, ptr %3837, align 1, !tbaa !5
  %3842 = xor i64 %3839, %3836
  %3843 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3842
  %3844 = load i16, ptr %3843, align 2, !tbaa !37
  %3845 = zext i16 %3844 to i32
  %3846 = add nsw i32 %3826, %3845
  %3847 = and i32 %3783, 2
  %3848 = or i32 %3847, %3835
  %3849 = sub nuw nsw i32 76, %3848
  %3850 = zext i32 %3849 to i64
  %3851 = lshr i32 %3783, 3
  %3852 = and i32 %3851, 1
  %3853 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3850
  %3854 = load i8, ptr %3853, align 1, !tbaa !5
  %3855 = zext i8 %3854 to i32
  %3856 = xor i32 %3852, %3855
  %3857 = zext i32 %3856 to i64
  %3858 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3857
  %3859 = load i16, ptr %3858, align 2, !tbaa !37
  %3860 = zext i16 %3859 to i32
  %3861 = add nsw i32 %3846, %3860
  store i32 %3861, ptr %3806, align 16, !tbaa !40
  %3862 = load i32, ptr %3784, align 4, !tbaa !289
  %3863 = and i32 %3862, 48
  %3864 = load i32, ptr %3786, align 16, !tbaa !290
  %3865 = and i32 %3864, 48
  %3866 = icmp ne i32 %3863, 0
  %3867 = icmp ne i32 %3862, -1
  %3868 = and i1 %3867, %3866
  %3869 = zext i1 %3868 to i32
  %3870 = icmp eq i32 %3865, 0
  %3871 = icmp eq i32 %3864, -1
  %3872 = or i32 %3869, 2
  %3873 = or i1 %3871, %3870
  %3874 = select i1 %3873, i32 %3869, i32 %3872
  %3875 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %3876 = load i32, ptr %3875, align 4, !tbaa !71
  %3877 = icmp eq i32 %3876, 0
  %3878 = add nuw nsw i32 %3874, 77
  %3879 = zext i32 %3878 to i64
  %3880 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3879
  %3881 = load i8, ptr %3880, align 1, !tbaa !5
  br i1 %3877, label %3882, label %3884

3882:                                             ; preds = %3778
  %3883 = zext i8 %3881 to i64
  br label %3904

3884:                                             ; preds = %3778
  %3885 = xor i8 %3881, 1
  %3886 = zext i8 %3885 to i64
  %3887 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3886
  %3888 = load i16, ptr %3887, align 2, !tbaa !37
  %3889 = zext i16 %3888 to i32
  %3890 = add nsw i32 %3861, %3889
  %3891 = icmp eq i32 %3863, 32
  %3892 = select i1 %3891, i32 5, i32 4
  %3893 = icmp eq i32 %3865, 32
  %3894 = or i32 %3892, 2
  %3895 = select i1 %3893, i32 %3894, i32 %3892
  %3896 = add nuw nsw i32 %3895, 77
  %3897 = zext i32 %3896 to i64
  %3898 = ashr i32 %3876, 1
  %3899 = sext i32 %3898 to i64
  %3900 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3897
  %3901 = load i8, ptr %3900, align 1, !tbaa !5
  %3902 = zext i8 %3901 to i64
  %3903 = xor i64 %3902, %3899
  br label %3904

3904:                                             ; preds = %3882, %3884
  %3905 = phi i64 [ %3903, %3884 ], [ %3883, %3882 ]
  %3906 = phi i32 [ %3890, %3884 ], [ %3861, %3882 ]
  %3907 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3905
  %3908 = load i16, ptr %3907, align 2, !tbaa !37
  %3909 = zext i16 %3908 to i32
  %3910 = add nsw i32 %3906, %3909
  store i32 %3910, ptr %3806, align 16, !tbaa !40
  br label %3911

3911:                                             ; preds = %3904, %3205, %1701, %823, %877, %1031, %932, %3774
  %3912 = phi i1 [ %3775, %3774 ], [ %869, %932 ], [ %869, %1031 ], [ %869, %877 ], [ %633, %823 ], [ %855, %1701 ], [ %840, %3205 ], [ %3779, %3904 ]
  %3913 = phi i1 [ %3776, %3774 ], [ %868, %932 ], [ %868, %1031 ], [ %868, %877 ], [ %634, %823 ], [ %854, %1701 ], [ %839, %3205 ], [ %3780, %3904 ]
  %3914 = phi i1 [ true, %3774 ], [ true, %932 ], [ true, %1031 ], [ true, %877 ], [ true, %823 ], [ true, %1701 ], [ true, %3205 ], [ %3781, %3904 ]
  %3915 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 26
  %3916 = load ptr, ptr %3915, align 16, !tbaa !66
  %3917 = getelementptr inbounds %struct.x264_pps_t, ptr %3916, i64 0, i32 15
  %3918 = load i32, ptr %3917, align 4, !tbaa !67
  %3919 = icmp eq i32 %3918, 0
  br i1 %3919, label %3958, label %3920

3920:                                             ; preds = %3911
  %3921 = load i32, ptr %15, align 8, !tbaa !49
  %3922 = icmp eq i32 %3921, 5
  br i1 %3922, label %3928, label %3923

3923:                                             ; preds = %3920
  %3924 = sext i32 %3921 to i64
  %3925 = getelementptr inbounds [19 x i8], ptr @x264_mb_transform_8x8_allowed.partition_tab, i64 0, i64 %3924
  %3926 = load i8, ptr %3925, align 1, !tbaa !5
  %3927 = zext i8 %3926 to i32
  br label %3933

3928:                                             ; preds = %3920
  %3929 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55
  %3930 = load i32, ptr %3929, align 16, !tbaa !5
  %3931 = icmp eq i32 %3930, 50529027
  %3932 = zext i1 %3931 to i32
  br label %3933

3933:                                             ; preds = %3923, %3928
  %3934 = phi i32 [ %3927, %3923 ], [ %3932, %3928 ]
  %3935 = icmp eq i32 %3934, 0
  br i1 %3935, label %3958, label %3936

3936:                                             ; preds = %3933
  %3937 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %3938 = load i32, ptr %3937, align 8, !tbaa !45
  %3939 = icmp eq i32 %3938, 0
  br i1 %3939, label %3958, label %3940

3940:                                             ; preds = %3936
  %3941 = getelementptr i8, ptr %0, i64 17396
  %3942 = load i32, ptr %3941, align 4, !tbaa !51
  %3943 = getelementptr i8, ptr %0, i64 25768
  %3944 = load i32, ptr %3943, align 8, !tbaa !443
  %3945 = add nsw i32 %3944, 399
  %3946 = sext i32 %3945 to i64
  %3947 = sext i32 %3942 to i64
  %3948 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %3946
  %3949 = load i8, ptr %3948, align 1, !tbaa !5
  %3950 = zext i8 %3949 to i64
  %3951 = xor i64 %3950, %3947
  %3952 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %3951
  %3953 = load i16, ptr %3952, align 2, !tbaa !37
  %3954 = zext i16 %3953 to i32
  %3955 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %3956 = load i32, ptr %3955, align 16, !tbaa !40
  %3957 = add nsw i32 %3956, %3954
  store i32 %3957, ptr %3955, align 16, !tbaa !40
  br label %3958

3958:                                             ; preds = %3911, %3940, %3936, %3933
  %3959 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %3960 = load i32, ptr %3959, align 8, !tbaa !45
  %3961 = icmp sgt i32 %3960, 0
  br i1 %3961, label %3967, label %3962

3962:                                             ; preds = %3958
  %3963 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %3964 = load i32, ptr %3963, align 4, !tbaa !71
  %3965 = icmp sgt i32 %3964, 0
  %3966 = select i1 %3965, i1 true, i1 %3914
  br i1 %3966, label %3967, label %4400

3967:                                             ; preds = %3962, %3958
  %3968 = select i1 %3913, i1 true, i1 %3912
  %3969 = zext i1 %3968 to i32
  %3970 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 68
  %3971 = load i32, ptr %3970, align 16, !tbaa !74
  %3972 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 70
  %3973 = load i32, ptr %3972, align 8, !tbaa !75
  %3974 = sub nsw i32 %3971, %3973
  %3975 = load i32, ptr %15, align 8, !tbaa !49
  %3976 = icmp eq i32 %3975, 2
  br i1 %3976, label %3977, label %3987

3977:                                             ; preds = %3967
  %3978 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 41
  %3979 = load ptr, ptr %3978, align 16, !tbaa !267
  %3980 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 6
  %3981 = load i32, ptr %3980, align 8, !tbaa !64
  %3982 = sext i32 %3981 to i64
  %3983 = getelementptr inbounds i16, ptr %3979, i64 %3982
  %3984 = load i16, ptr %3983, align 2, !tbaa !37
  %3985 = icmp eq i16 %3984, 0
  %3986 = select i1 %3985, i32 0, i32 %3974
  br label %3987

3987:                                             ; preds = %3977, %3967
  %3988 = phi i32 [ %3974, %3967 ], [ %3986, %3977 ]
  %3989 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 71
  %3990 = load i32, ptr %3989, align 4, !tbaa !450
  %3991 = icmp eq i32 %3990, 0
  br i1 %3991, label %4002, label %3992

3992:                                             ; preds = %3987
  %3993 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 41
  %3994 = load ptr, ptr %3993, align 16, !tbaa !267
  %3995 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 33
  %3996 = load i32, ptr %3995, align 4, !tbaa !451
  %3997 = sext i32 %3996 to i64
  %3998 = getelementptr inbounds i16, ptr %3994, i64 %3997
  %3999 = load i16, ptr %3998, align 2, !tbaa !37
  %4000 = icmp ne i16 %3999, 0
  %4001 = zext i1 %4000 to i32
  br label %4002

4002:                                             ; preds = %3992, %3987
  %4003 = phi i32 [ 0, %3987 ], [ %4001, %3992 ]
  %4004 = icmp eq i32 %3988, 0
  br i1 %4004, label %4005, label %4008

4005:                                             ; preds = %4002
  %4006 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %4007 = load i32, ptr %4006, align 16, !tbaa !40
  br label %4077

4008:                                             ; preds = %4002
  %4009 = icmp slt i32 %3988, 1
  %4010 = mul nsw i32 %3988, -2
  %4011 = shl nuw nsw i32 %3988, 1
  %4012 = add nsw i32 %4011, -1
  %4013 = select i1 %4009, i32 %4010, i32 %4012
  %4014 = icmp sgt i32 %4013, 50
  %4015 = icmp ne i32 %4013, 52
  %4016 = and i1 %4014, %4015
  %4017 = sub nsw i32 103, %4013
  %4018 = select i1 %4016, i32 %4017, i32 %4013
  %4019 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %4020 = load i32, ptr %4019, align 16, !tbaa !40
  %4021 = and i32 %4018, 1
  %4022 = icmp eq i32 %4021, 0
  br i1 %4022, label %4037, label %4023

4023:                                             ; preds = %4008
  %4024 = or i32 %4003, 60
  %4025 = zext i32 %4024 to i64
  %4026 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4025
  %4027 = load i8, ptr %4026, align 1, !tbaa !5
  %4028 = zext i8 %4027 to i64
  %4029 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4028, i64 1
  %4030 = load i8, ptr %4029, align 1, !tbaa !5
  store i8 %4030, ptr %4026, align 1, !tbaa !5
  %4031 = xor i64 %4028, 1
  %4032 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4031
  %4033 = load i16, ptr %4032, align 2, !tbaa !37
  %4034 = zext i16 %4033 to i32
  %4035 = add nsw i32 %4020, %4034
  %4036 = add nsw i32 %4018, -1
  br label %4037

4037:                                             ; preds = %4023, %4008
  %4038 = phi i32 [ undef, %4008 ], [ %4035, %4023 ]
  %4039 = phi i32 [ %4020, %4008 ], [ %4035, %4023 ]
  %4040 = phi i32 [ %4003, %4008 ], [ 2, %4023 ]
  %4041 = phi i32 [ %4018, %4008 ], [ %4036, %4023 ]
  %4042 = icmp eq i32 %4018, 1
  br i1 %4042, label %4077, label %4043

4043:                                             ; preds = %4037, %4043
  %4044 = phi i32 [ %4072, %4043 ], [ %4039, %4037 ]
  %4045 = phi i32 [ %4074, %4043 ], [ %4040, %4037 ]
  %4046 = phi i32 [ %4075, %4043 ], [ %4041, %4037 ]
  %4047 = add nuw nsw i32 %4045, 60
  %4048 = zext i32 %4047 to i64
  %4049 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4048
  %4050 = load i8, ptr %4049, align 1, !tbaa !5
  %4051 = zext i8 %4050 to i64
  %4052 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4051, i64 1
  %4053 = load i8, ptr %4052, align 1, !tbaa !5
  store i8 %4053, ptr %4049, align 1, !tbaa !5
  %4054 = xor i64 %4051, 1
  %4055 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4054
  %4056 = load i16, ptr %4055, align 2, !tbaa !37
  %4057 = zext i16 %4056 to i32
  %4058 = add nsw i32 %4044, %4057
  %4059 = lshr i32 %4045, 1
  %4060 = add nuw nsw i32 %4059, 2
  %4061 = add nuw nsw i32 %4059, 62
  %4062 = zext i32 %4061 to i64
  %4063 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4062
  %4064 = load i8, ptr %4063, align 1, !tbaa !5
  %4065 = zext i8 %4064 to i64
  %4066 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4065, i64 1
  %4067 = load i8, ptr %4066, align 1, !tbaa !5
  store i8 %4067, ptr %4063, align 1, !tbaa !5
  %4068 = xor i64 %4065, 1
  %4069 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4068
  %4070 = load i16, ptr %4069, align 2, !tbaa !37
  %4071 = zext i16 %4070 to i32
  %4072 = add nsw i32 %4058, %4071
  %4073 = lshr i32 %4060, 1
  %4074 = add nuw nsw i32 %4073, 2
  %4075 = add nsw i32 %4046, -2
  %4076 = icmp eq i32 %4075, 0
  br i1 %4076, label %4077, label %4043, !llvm.loop !452

4077:                                             ; preds = %4037, %4043, %4005
  %4078 = phi i32 [ %4007, %4005 ], [ %4038, %4037 ], [ %4072, %4043 ]
  %4079 = phi i32 [ %4003, %4005 ], [ 2, %4037 ], [ %4074, %4043 ]
  %4080 = add nuw nsw i32 %4079, 60
  %4081 = zext i32 %4080 to i64
  %4082 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4081
  %4083 = load i8, ptr %4082, align 1, !tbaa !5
  %4084 = zext i8 %4083 to i64
  %4085 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4084
  %4086 = load i16, ptr %4085, align 2, !tbaa !37
  %4087 = zext i16 %4086 to i32
  %4088 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %4089 = add nsw i32 %4078, %4087
  store i32 %4089, ptr %4088, align 16, !tbaa !40
  br i1 %3914, label %4090, label %4172

4090:                                             ; preds = %4077
  %4091 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 14
  %4092 = load i32, ptr %4091, align 4, !tbaa !289
  %4093 = lshr i32 %4092, 8
  %4094 = and i32 %4093, 1
  %4095 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 13
  %4096 = load i32, ptr %4095, align 16, !tbaa !290
  %4097 = lshr i32 %4096, 7
  %4098 = and i32 %4097, 2
  %4099 = add nuw nsw i32 %4094, 85
  %4100 = add nuw nsw i32 %4099, %4098
  %4101 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 44
  %4102 = load i8, ptr %4101, align 1, !tbaa !5
  %4103 = icmp eq i8 %4102, 0
  %4104 = zext i32 %4100 to i64
  %4105 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4104
  %4106 = load i8, ptr %4105, align 1, !tbaa !5
  %4107 = zext i8 %4106 to i64
  br i1 %4103, label %4117, label %4108

4108:                                             ; preds = %4090
  %4109 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4107, i64 1
  %4110 = load i8, ptr %4109, align 1, !tbaa !5
  store i8 %4110, ptr %4105, align 1, !tbaa !5
  %4111 = xor i64 %4107, 1
  %4112 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4111
  %4113 = load i16, ptr %4112, align 2, !tbaa !37
  %4114 = zext i16 %4113 to i32
  %4115 = add nsw i32 %4089, %4114
  store i32 %4115, ptr %4088, align 16, !tbaa !40
  %4116 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0, ptr noundef nonnull %4116, i32 noundef 0)
  br label %4124

4117:                                             ; preds = %4090
  %4118 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4107, i64 0
  %4119 = load i8, ptr %4118, align 2, !tbaa !5
  store i8 %4119, ptr %4105, align 1, !tbaa !5
  %4120 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4107
  %4121 = load i16, ptr %4120, align 2, !tbaa !37
  %4122 = zext i16 %4121 to i32
  %4123 = add nsw i32 %4089, %4122
  store i32 %4123, ptr %4088, align 16, !tbaa !40
  br label %4124

4124:                                             ; preds = %4117, %4108
  %4125 = load i32, ptr %3959, align 8, !tbaa !45
  %4126 = icmp eq i32 %4125, 0
  br i1 %4126, label %4261, label %4127

4127:                                             ; preds = %4124, %4169
  %4128 = phi i64 [ %4170, %4169 ], [ 0, %4124 ]
  %4129 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %4128
  %4130 = load i32, ptr %4129, align 4, !tbaa !39
  %4131 = add nsw i32 %4130, -1
  %4132 = sext i32 %4131 to i64
  %4133 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4132
  %4134 = load i8, ptr %4133, align 1, !tbaa !5
  %4135 = add nsw i32 %4130, -8
  %4136 = sext i32 %4135 to i64
  %4137 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4136
  %4138 = load i8, ptr %4137, align 1, !tbaa !5
  %4139 = icmp eq i8 %4138, 0
  %4140 = select i1 %4139, i64 0, i64 2
  %4141 = icmp eq i8 %4134, 0
  %4142 = select i1 %4141, i64 89, i64 90
  %4143 = add nuw nsw i64 %4140, %4142
  %4144 = sext i32 %4130 to i64
  %4145 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4144
  %4146 = load i8, ptr %4145, align 1, !tbaa !5
  %4147 = icmp eq i8 %4146, 0
  %4148 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4143
  %4149 = load i8, ptr %4148, align 1, !tbaa !5
  %4150 = zext i8 %4149 to i64
  br i1 %4147, label %4161, label %4151

4151:                                             ; preds = %4127
  %4152 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4150, i64 1
  %4153 = load i8, ptr %4152, align 1, !tbaa !5
  store i8 %4153, ptr %4148, align 1, !tbaa !5
  %4154 = xor i64 %4150, 1
  %4155 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4154
  %4156 = load i16, ptr %4155, align 2, !tbaa !37
  %4157 = zext i16 %4156 to i32
  %4158 = load i32, ptr %4088, align 16, !tbaa !40
  %4159 = add nsw i32 %4158, %4157
  store i32 %4159, ptr %4088, align 16, !tbaa !40
  %4160 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %4128, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 1, ptr noundef nonnull %4160, i32 noundef 0)
  br label %4169

4161:                                             ; preds = %4127
  %4162 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4150, i64 0
  %4163 = load i8, ptr %4162, align 2, !tbaa !5
  store i8 %4163, ptr %4148, align 1, !tbaa !5
  %4164 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4150
  %4165 = load i16, ptr %4164, align 2, !tbaa !37
  %4166 = zext i16 %4165 to i32
  %4167 = load i32, ptr %4088, align 16, !tbaa !40
  %4168 = add nsw i32 %4167, %4166
  store i32 %4168, ptr %4088, align 16, !tbaa !40
  br label %4169

4169:                                             ; preds = %4161, %4151
  %4170 = add nuw nsw i64 %4128, 1
  %4171 = icmp eq i64 %4170, 16
  br i1 %4171, label %4261, label %4127, !llvm.loop !453

4172:                                             ; preds = %4077
  %4173 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  %4174 = load i32, ptr %4173, align 4, !tbaa !51
  %4175 = icmp eq i32 %4174, 0
  br i1 %4175, label %4180, label %4176

4176:                                             ; preds = %4172
  %4177 = load i32, ptr %3959, align 8, !tbaa !45
  %4178 = and i32 %4177, 1
  %4179 = icmp eq i32 %4178, 0
  br i1 %4179, label %4185, label %4182

4180:                                             ; preds = %4172
  %4181 = select i1 %3968, i32 255, i32 127
  br label %4205

4182:                                             ; preds = %4176
  %4183 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2, i64 0
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 5, ptr noundef nonnull %4183, i32 noundef 1)
  %4184 = load i32, ptr %3959, align 8, !tbaa !45
  br label %4185

4185:                                             ; preds = %4176, %4182
  %4186 = phi i32 [ %4177, %4176 ], [ %4184, %4182 ]
  %4187 = and i32 %4186, 2
  %4188 = icmp eq i32 %4187, 0
  br i1 %4188, label %4192, label %4189

4189:                                             ; preds = %4185
  %4190 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 5, ptr noundef nonnull %4190, i32 noundef 1)
  %4191 = load i32, ptr %3959, align 8, !tbaa !45
  br label %4192

4192:                                             ; preds = %4189, %4185
  %4193 = phi i32 [ %4191, %4189 ], [ %4186, %4185 ]
  %4194 = and i32 %4193, 4
  %4195 = icmp eq i32 %4194, 0
  br i1 %4195, label %4199, label %4196

4196:                                             ; preds = %4192
  %4197 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2, i64 2
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 5, ptr noundef nonnull %4197, i32 noundef 1)
  %4198 = load i32, ptr %3959, align 8, !tbaa !45
  br label %4199

4199:                                             ; preds = %4196, %4192
  %4200 = phi i32 [ %4198, %4196 ], [ %4193, %4192 ]
  %4201 = and i32 %4200, 8
  %4202 = icmp eq i32 %4201, 0
  br i1 %4202, label %4261, label %4203

4203:                                             ; preds = %4199
  %4204 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2, i64 3
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 5, ptr noundef nonnull %4204, i32 noundef 1)
  br label %4261

4205:                                             ; preds = %4180, %4258
  %4206 = phi i64 [ 0, %4180 ], [ %4259, %4258 ]
  %4207 = load i32, ptr %3959, align 8, !tbaa !45
  %4208 = trunc i64 %4206 to i32
  %4209 = lshr i32 %4208, 2
  %4210 = shl nuw nsw i32 1, %4209
  %4211 = and i32 %4207, %4210
  %4212 = icmp eq i32 %4211, 0
  br i1 %4212, label %4258, label %4213

4213:                                             ; preds = %4205
  %4214 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %4206
  %4215 = load i32, ptr %4214, align 4, !tbaa !39
  %4216 = add nsw i32 %4215, -1
  %4217 = sext i32 %4216 to i64
  %4218 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4217
  %4219 = load i8, ptr %4218, align 1, !tbaa !5
  %4220 = zext i8 %4219 to i32
  %4221 = add nsw i32 %4215, -8
  %4222 = sext i32 %4221 to i64
  %4223 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4222
  %4224 = load i8, ptr %4223, align 1, !tbaa !5
  %4225 = zext i8 %4224 to i32
  %4226 = and i32 %4181, %4220
  %4227 = and i32 %4181, %4225
  %4228 = icmp eq i32 %4227, 0
  %4229 = select i1 %4228, i64 0, i64 2
  %4230 = icmp eq i32 %4226, 0
  %4231 = select i1 %4230, i64 93, i64 94
  %4232 = add nuw nsw i64 %4229, %4231
  %4233 = sext i32 %4215 to i64
  %4234 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4233
  %4235 = load i8, ptr %4234, align 1, !tbaa !5
  %4236 = icmp eq i8 %4235, 0
  %4237 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4232
  %4238 = load i8, ptr %4237, align 1, !tbaa !5
  %4239 = zext i8 %4238 to i64
  br i1 %4236, label %4250, label %4240

4240:                                             ; preds = %4213
  %4241 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4239, i64 1
  %4242 = load i8, ptr %4241, align 1, !tbaa !5
  store i8 %4242, ptr %4237, align 1, !tbaa !5
  %4243 = xor i64 %4239, 1
  %4244 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4243
  %4245 = load i16, ptr %4244, align 2, !tbaa !37
  %4246 = zext i16 %4245 to i32
  %4247 = load i32, ptr %4088, align 16, !tbaa !40
  %4248 = add nsw i32 %4247, %4246
  store i32 %4248, ptr %4088, align 16, !tbaa !40
  %4249 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %4206
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 2, ptr noundef nonnull %4249, i32 noundef 0)
  br label %4258

4250:                                             ; preds = %4213
  %4251 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4239, i64 0
  %4252 = load i8, ptr %4251, align 2, !tbaa !5
  store i8 %4252, ptr %4237, align 1, !tbaa !5
  %4253 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4239
  %4254 = load i16, ptr %4253, align 2, !tbaa !37
  %4255 = zext i16 %4254 to i32
  %4256 = load i32, ptr %4088, align 16, !tbaa !40
  %4257 = add nsw i32 %4256, %4255
  store i32 %4257, ptr %4088, align 16, !tbaa !40
  br label %4258

4258:                                             ; preds = %4240, %4250, %4205
  %4259 = add nuw nsw i64 %4206, 1
  %4260 = icmp eq i64 %4259, 16
  br i1 %4260, label %4261, label %4205, !llvm.loop !454

4261:                                             ; preds = %4258, %4169, %4199, %4203, %4124
  %4262 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %4263 = load i32, ptr %4262, align 4, !tbaa !71
  %4264 = icmp eq i32 %4263, 0
  br i1 %4264, label %4400, label %4265

4265:                                             ; preds = %4261
  %4266 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 14
  %4267 = load i32, ptr %4266, align 4, !tbaa !289
  %4268 = icmp eq i32 %4267, -1
  %4269 = lshr i32 %4267, 9
  %4270 = and i32 %4269, 1
  %4271 = select i1 %4268, i32 %3969, i32 %4270
  %4272 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 13
  %4273 = load i32, ptr %4272, align 16, !tbaa !290
  %4274 = icmp eq i32 %4273, -1
  %4275 = lshr i32 %4273, 9
  %4276 = and i32 %4275, 1
  %4277 = select i1 %4274, i32 %3969, i32 %4276
  %4278 = shl nuw nsw i32 %4277, 1
  %4279 = add nuw nsw i32 %4271, 97
  %4280 = add nuw nsw i32 %4279, %4278
  %4281 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 46
  %4282 = load i8, ptr %4281, align 1, !tbaa !5
  %4283 = icmp eq i8 %4282, 0
  %4284 = zext i32 %4280 to i64
  %4285 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4284
  %4286 = load i8, ptr %4285, align 1, !tbaa !5
  %4287 = zext i8 %4286 to i64
  br i1 %4283, label %4298, label %4288

4288:                                             ; preds = %4265
  %4289 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4287, i64 1
  %4290 = load i8, ptr %4289, align 1, !tbaa !5
  store i8 %4290, ptr %4285, align 1, !tbaa !5
  %4291 = xor i64 %4287, 1
  %4292 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4291
  %4293 = load i16, ptr %4292, align 2, !tbaa !37
  %4294 = zext i16 %4293 to i32
  %4295 = load i32, ptr %4088, align 16, !tbaa !40
  %4296 = add nsw i32 %4295, %4294
  store i32 %4296, ptr %4088, align 16, !tbaa !40
  %4297 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 3, ptr noundef nonnull %4297, i32 noundef 0)
  br label %4306

4298:                                             ; preds = %4265
  %4299 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4287, i64 0
  %4300 = load i8, ptr %4299, align 2, !tbaa !5
  store i8 %4300, ptr %4285, align 1, !tbaa !5
  %4301 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4287
  %4302 = load i16, ptr %4301, align 2, !tbaa !37
  %4303 = zext i16 %4302 to i32
  %4304 = load i32, ptr %4088, align 16, !tbaa !40
  %4305 = add nsw i32 %4304, %4303
  store i32 %4305, ptr %4088, align 16, !tbaa !40
  br label %4306

4306:                                             ; preds = %4298, %4288
  %4307 = load i32, ptr %4266, align 4, !tbaa !289
  %4308 = icmp eq i32 %4307, -1
  %4309 = lshr i32 %4307, 10
  %4310 = and i32 %4309, 1
  %4311 = select i1 %4308, i32 %3969, i32 %4310
  %4312 = load i32, ptr %4272, align 16, !tbaa !290
  %4313 = icmp eq i32 %4312, -1
  %4314 = lshr i32 %4312, 10
  %4315 = and i32 %4314, 1
  %4316 = select i1 %4313, i32 %3969, i32 %4315
  %4317 = shl nuw nsw i32 %4316, 1
  %4318 = add nuw nsw i32 %4311, 97
  %4319 = add nuw nsw i32 %4318, %4317
  %4320 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 47
  %4321 = load i8, ptr %4320, align 1, !tbaa !5
  %4322 = icmp eq i8 %4321, 0
  %4323 = zext i32 %4319 to i64
  %4324 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4323
  %4325 = load i8, ptr %4324, align 1, !tbaa !5
  %4326 = zext i8 %4325 to i64
  br i1 %4322, label %4337, label %4327

4327:                                             ; preds = %4306
  %4328 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4326, i64 1
  %4329 = load i8, ptr %4328, align 1, !tbaa !5
  store i8 %4329, ptr %4324, align 1, !tbaa !5
  %4330 = xor i64 %4326, 1
  %4331 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4330
  %4332 = load i16, ptr %4331, align 2, !tbaa !37
  %4333 = zext i16 %4332 to i32
  %4334 = load i32, ptr %4088, align 16, !tbaa !40
  %4335 = add nsw i32 %4334, %4333
  store i32 %4335, ptr %4088, align 16, !tbaa !40
  %4336 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 3, ptr noundef nonnull %4336, i32 noundef 0)
  br label %4345

4337:                                             ; preds = %4306
  %4338 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4326, i64 0
  %4339 = load i8, ptr %4338, align 2, !tbaa !5
  store i8 %4339, ptr %4324, align 1, !tbaa !5
  %4340 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4326
  %4341 = load i16, ptr %4340, align 2, !tbaa !37
  %4342 = zext i16 %4341 to i32
  %4343 = load i32, ptr %4088, align 16, !tbaa !40
  %4344 = add nsw i32 %4343, %4342
  store i32 %4344, ptr %4088, align 16, !tbaa !40
  br label %4345

4345:                                             ; preds = %4337, %4327
  %4346 = load i32, ptr %4262, align 4, !tbaa !71
  %4347 = and i32 %4346, 2
  %4348 = icmp eq i32 %4347, 0
  br i1 %4348, label %4400, label %4349

4349:                                             ; preds = %4345
  %4350 = select i1 %3968, i32 255, i32 127
  br label %4351

4351:                                             ; preds = %4349, %4397
  %4352 = phi i64 [ 16, %4349 ], [ %4398, %4397 ]
  %4353 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %4352
  %4354 = load i32, ptr %4353, align 4, !tbaa !39
  %4355 = add nsw i32 %4354, -1
  %4356 = sext i32 %4355 to i64
  %4357 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4356
  %4358 = load i8, ptr %4357, align 1, !tbaa !5
  %4359 = zext i8 %4358 to i32
  %4360 = add nsw i32 %4354, -8
  %4361 = sext i32 %4360 to i64
  %4362 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4361
  %4363 = load i8, ptr %4362, align 1, !tbaa !5
  %4364 = zext i8 %4363 to i32
  %4365 = and i32 %4350, %4359
  %4366 = and i32 %4350, %4364
  %4367 = icmp eq i32 %4366, 0
  %4368 = select i1 %4367, i64 0, i64 2
  %4369 = icmp eq i32 %4365, 0
  %4370 = select i1 %4369, i64 101, i64 102
  %4371 = add nuw nsw i64 %4368, %4370
  %4372 = sext i32 %4354 to i64
  %4373 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %4372
  %4374 = load i8, ptr %4373, align 1, !tbaa !5
  %4375 = icmp eq i8 %4374, 0
  %4376 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %4371
  %4377 = load i8, ptr %4376, align 1, !tbaa !5
  %4378 = zext i8 %4377 to i64
  br i1 %4375, label %4389, label %4379

4379:                                             ; preds = %4351
  %4380 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4378, i64 1
  %4381 = load i8, ptr %4380, align 1, !tbaa !5
  store i8 %4381, ptr %4376, align 1, !tbaa !5
  %4382 = xor i64 %4378, 1
  %4383 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4382
  %4384 = load i16, ptr %4383, align 2, !tbaa !37
  %4385 = zext i16 %4384 to i32
  %4386 = load i32, ptr %4088, align 16, !tbaa !40
  %4387 = add nsw i32 %4386, %4385
  store i32 %4387, ptr %4088, align 16, !tbaa !40
  %4388 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %4352, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 4, ptr noundef nonnull %4388, i32 noundef 0)
  br label %4397

4389:                                             ; preds = %4351
  %4390 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %4378, i64 0
  %4391 = load i8, ptr %4390, align 2, !tbaa !5
  store i8 %4391, ptr %4376, align 1, !tbaa !5
  %4392 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %4378
  %4393 = load i16, ptr %4392, align 2, !tbaa !37
  %4394 = zext i16 %4393 to i32
  %4395 = load i32, ptr %4088, align 16, !tbaa !40
  %4396 = add nsw i32 %4395, %4394
  store i32 %4396, ptr %4088, align 16, !tbaa !40
  br label %4397

4397:                                             ; preds = %4389, %4379
  %4398 = add nuw nsw i64 %4352, 1
  %4399 = icmp eq i64 %4398, 24
  br i1 %4399, label %4400, label %4351, !llvm.loop !455

4400:                                             ; preds = %4397, %4261, %4345, %3962
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(argmem: readwrite) uwtable
define internal fastcc void @x264_cabac_mb_ref(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 {
  %5 = sext i32 %3 to i64
  %6 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %5
  %7 = load i32, ptr %6, align 4, !tbaa !39
  %8 = zext i32 %2 to i64
  %9 = add nsw i32 %7, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 %8, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !5
  %13 = add nsw i32 %7, -8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 %8, i64 %14
  %16 = load i8, ptr %15, align 1, !tbaa !5
  %17 = icmp sgt i8 %12, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 %10
  %20 = load i8, ptr %19, align 1, !tbaa !5
  %21 = icmp eq i8 %20, 0
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %18, %4
  %24 = phi i32 [ 0, %4 ], [ %22, %18 ]
  %25 = icmp sgt i8 %16, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 %14
  %28 = load i8, ptr %27, align 1, !tbaa !5
  %29 = icmp eq i8 %28, 0
  %30 = or i32 %24, 2
  %31 = select i1 %29, i32 %30, i32 %24
  br label %32

32:                                               ; preds = %26, %23
  %33 = phi i32 [ %24, %23 ], [ %31, %26 ]
  %34 = sext i32 %7 to i64
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 %8, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !5
  %37 = icmp sgt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %40 = load i32, ptr %39, align 16, !tbaa !40
  br label %70

41:                                               ; preds = %32
  %42 = zext i8 %36 to i32
  %43 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %44 = load i32, ptr %43, align 16, !tbaa !40
  %45 = and i32 %42, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %41
  %48 = add nuw nsw i32 %33, 54
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %49
  %51 = load i8, ptr %50, align 1, !tbaa !5
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %52, i64 1
  %54 = load i8, ptr %53, align 1, !tbaa !5
  store i8 %54, ptr %50, align 1, !tbaa !5
  %55 = xor i64 %52, 1
  %56 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %55
  %57 = load i16, ptr %56, align 2, !tbaa !37
  %58 = zext i16 %57 to i32
  %59 = add nsw i32 %44, %58
  %60 = lshr i32 %33, 2
  %61 = add nuw nsw i32 %60, 4
  %62 = add nsw i32 %42, -1
  br label %63

63:                                               ; preds = %47, %41
  %64 = phi i32 [ %44, %41 ], [ %59, %47 ]
  %65 = phi i32 [ %42, %41 ], [ %62, %47 ]
  %66 = phi i32 [ %33, %41 ], [ %61, %47 ]
  %67 = phi i32 [ undef, %41 ], [ %59, %47 ]
  %68 = phi i32 [ undef, %41 ], [ %61, %47 ]
  %69 = icmp eq i8 %36, 1
  br i1 %69, label %70, label %85

70:                                               ; preds = %63, %85, %38
  %71 = phi i32 [ %40, %38 ], [ %67, %63 ], [ %114, %85 ]
  %72 = phi i32 [ %33, %38 ], [ %68, %63 ], [ %116, %85 ]
  %73 = add nuw nsw i32 %72, 54
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !5
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %77, i64 0
  %79 = load i8, ptr %78, align 2, !tbaa !5
  store i8 %79, ptr %75, align 1, !tbaa !5
  %80 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %77
  %81 = load i16, ptr %80, align 2, !tbaa !37
  %82 = zext i16 %81 to i32
  %83 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %84 = add nsw i32 %71, %82
  store i32 %84, ptr %83, align 16, !tbaa !40
  ret void

85:                                               ; preds = %63, %85
  %86 = phi i32 [ %114, %85 ], [ %64, %63 ]
  %87 = phi i32 [ %117, %85 ], [ %65, %63 ]
  %88 = phi i32 [ %116, %85 ], [ %66, %63 ]
  %89 = add nuw nsw i32 %88, 54
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !5
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %93, i64 1
  %95 = load i8, ptr %94, align 1, !tbaa !5
  store i8 %95, ptr %91, align 1, !tbaa !5
  %96 = xor i64 %93, 1
  %97 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %96
  %98 = load i16, ptr %97, align 2, !tbaa !37
  %99 = zext i16 %98 to i32
  %100 = add nsw i32 %86, %99
  %101 = lshr i32 %88, 2
  %102 = add nuw nsw i32 %101, 4
  %103 = add nuw nsw i32 %101, 58
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !5
  %107 = zext i8 %106 to i64
  %108 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %107, i64 1
  %109 = load i8, ptr %108, align 1, !tbaa !5
  store i8 %109, ptr %105, align 1, !tbaa !5
  %110 = xor i64 %107, 1
  %111 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %110
  %112 = load i16, ptr %111, align 2, !tbaa !37
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 %100, %113
  %115 = lshr i32 %102, 2
  %116 = add nuw nsw i32 %115, 4
  %117 = add nsw i32 %87, -2
  %118 = add i32 %87, -3
  %119 = icmp ult i32 %118, -2
  br i1 %119, label %85, label %70, !llvm.loop !448
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @x264_cabac_mb8x8_mvd(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #3 {
  %4 = alloca [2 x i16], align 4
  %5 = alloca [2 x i16], align 4
  %6 = alloca [2 x i16], align 4
  %7 = alloca [2 x i16], align 4
  %8 = alloca [2 x i16], align 4
  %9 = alloca [2 x i16], align 4
  %10 = alloca [2 x i16], align 4
  %11 = alloca [2 x i16], align 4
  %12 = alloca [2 x i16], align 4
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %13
  %15 = load i8, ptr %14, align 1, !tbaa !5
  switch i8 %15, label %575 [
    i8 3, label %16
    i8 1, label %80
    i8 2, label %205
    i8 0, label %330
  ]

16:                                               ; preds = %3
  %17 = shl nsw i32 %2, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %17, i32 noundef 2, ptr noundef nonnull %12) #17
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %18
  %20 = load i32, ptr %19, align 16, !tbaa !39
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %21
  %23 = load i16, ptr %22, align 4, !tbaa !37
  %24 = sext i16 %23 to i32
  %25 = load i16, ptr %12, align 4, !tbaa !37
  %26 = sext i16 %25 to i32
  %27 = sub nsw i32 %24, %26
  %28 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %21, i64 1
  %29 = load i16, ptr %28, align 2, !tbaa !37
  %30 = sext i16 %29 to i32
  %31 = getelementptr inbounds [2 x i16], ptr %12, i64 0, i64 1
  %32 = load i16, ptr %31, align 2, !tbaa !37
  %33 = sext i16 %32 to i32
  %34 = sub nsw i32 %30, %33
  %35 = add nsw i32 %20, -1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %36
  %38 = add nsw i32 %20, -8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %39
  %41 = load i8, ptr %37, align 1, !tbaa !5
  %42 = getelementptr i8, ptr %37, i64 1
  %43 = load i8, ptr %42, align 1, !tbaa !5
  %44 = load i8, ptr %40, align 1, !tbaa !5
  %45 = getelementptr i8, ptr %40, i64 1
  %46 = load i8, ptr %45, align 1, !tbaa !5
  %47 = zext i8 %41 to i32
  %48 = zext i8 %44 to i32
  %49 = add nuw nsw i32 %48, %47
  %50 = zext i8 %43 to i32
  %51 = zext i8 %46 to i32
  %52 = add nuw nsw i32 %51, %50
  %53 = icmp ugt i32 %49, 2
  %54 = zext i1 %53 to i32
  %55 = icmp ugt i32 %49, 32
  %56 = zext i1 %55 to i32
  %57 = add nuw nsw i32 %54, %56
  %58 = icmp ugt i32 %52, 2
  %59 = zext i1 %58 to i32
  %60 = icmp ugt i32 %52, 32
  %61 = zext i1 %60 to i32
  %62 = add nuw nsw i32 %59, %61
  %63 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %27, i32 noundef %57)
  %64 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %34, i32 noundef %62)
  %65 = shl i32 %64, 8
  %66 = add nsw i32 %65, %63
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #17
  %67 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %18
  %68 = load i8, ptr %67, align 4, !tbaa !5
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %18
  %71 = load i8, ptr %70, align 4, !tbaa !5
  %72 = zext i8 %71 to i64
  %73 = add nuw nsw i64 %69, 12
  %74 = shl nuw nsw i64 %72, 3
  %75 = add nuw nsw i64 %73, %74
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %75
  %77 = and i32 %66, 65535
  %78 = mul nuw i32 %77, 65537
  store i32 %78, ptr %76, align 4, !tbaa !5
  %79 = getelementptr inbounds i8, ptr %76, i64 16
  store i32 %78, ptr %79, align 4, !tbaa !5
  br label %575

80:                                               ; preds = %3
  %81 = shl nsw i32 %2, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %81, i32 noundef 2, ptr noundef nonnull %11) #17
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %82
  %84 = load i32, ptr %83, align 16, !tbaa !39
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %85
  %87 = load i16, ptr %86, align 4, !tbaa !37
  %88 = sext i16 %87 to i32
  %89 = load i16, ptr %11, align 4, !tbaa !37
  %90 = sext i16 %89 to i32
  %91 = sub nsw i32 %88, %90
  %92 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %85, i64 1
  %93 = load i16, ptr %92, align 2, !tbaa !37
  %94 = sext i16 %93 to i32
  %95 = getelementptr inbounds [2 x i16], ptr %11, i64 0, i64 1
  %96 = load i16, ptr %95, align 2, !tbaa !37
  %97 = sext i16 %96 to i32
  %98 = sub nsw i32 %94, %97
  %99 = add nsw i32 %84, -1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %100
  %102 = add nsw i32 %84, -8
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %103
  %105 = load i8, ptr %101, align 1, !tbaa !5
  %106 = getelementptr i8, ptr %101, i64 1
  %107 = load i8, ptr %106, align 1, !tbaa !5
  %108 = load i8, ptr %104, align 1, !tbaa !5
  %109 = getelementptr i8, ptr %104, i64 1
  %110 = load i8, ptr %109, align 1, !tbaa !5
  %111 = zext i8 %105 to i32
  %112 = zext i8 %108 to i32
  %113 = add nuw nsw i32 %112, %111
  %114 = zext i8 %107 to i32
  %115 = zext i8 %110 to i32
  %116 = add nuw nsw i32 %115, %114
  %117 = icmp ugt i32 %113, 2
  %118 = zext i1 %117 to i32
  %119 = icmp ugt i32 %113, 32
  %120 = zext i1 %119 to i32
  %121 = add nuw nsw i32 %118, %120
  %122 = icmp ugt i32 %116, 2
  %123 = zext i1 %122 to i32
  %124 = icmp ugt i32 %116, 32
  %125 = zext i1 %124 to i32
  %126 = add nuw nsw i32 %123, %125
  %127 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %91, i32 noundef %121)
  %128 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %98, i32 noundef %126)
  %129 = shl i32 %128, 8
  %130 = add nsw i32 %129, %127
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #17
  %131 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %82
  %132 = load i8, ptr %131, align 4, !tbaa !5
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %82
  %135 = load i8, ptr %134, align 4, !tbaa !5
  %136 = zext i8 %135 to i64
  %137 = add nuw nsw i64 %133, 12
  %138 = shl nuw nsw i64 %136, 3
  %139 = add nuw nsw i64 %137, %138
  %140 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %139
  %141 = and i32 %130, 65535
  %142 = mul nuw i32 %141, 65537
  store i32 %142, ptr %140, align 4, !tbaa !5
  %143 = or i32 %81, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %143, i32 noundef 2, ptr noundef nonnull %10) #17
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %144
  %146 = load i32, ptr %145, align 8, !tbaa !39
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %147
  %149 = load i16, ptr %148, align 4, !tbaa !37
  %150 = sext i16 %149 to i32
  %151 = load i16, ptr %10, align 4, !tbaa !37
  %152 = sext i16 %151 to i32
  %153 = sub nsw i32 %150, %152
  %154 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %147, i64 1
  %155 = load i16, ptr %154, align 2, !tbaa !37
  %156 = sext i16 %155 to i32
  %157 = getelementptr inbounds [2 x i16], ptr %10, i64 0, i64 1
  %158 = load i16, ptr %157, align 2, !tbaa !37
  %159 = sext i16 %158 to i32
  %160 = sub nsw i32 %156, %159
  %161 = add nsw i32 %146, -1
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %162
  %164 = add nsw i32 %146, -8
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %165
  %167 = load i8, ptr %163, align 1, !tbaa !5
  %168 = getelementptr i8, ptr %163, i64 1
  %169 = load i8, ptr %168, align 1, !tbaa !5
  %170 = load i8, ptr %166, align 1, !tbaa !5
  %171 = getelementptr i8, ptr %166, i64 1
  %172 = load i8, ptr %171, align 1, !tbaa !5
  %173 = zext i8 %167 to i32
  %174 = zext i8 %170 to i32
  %175 = add nuw nsw i32 %174, %173
  %176 = zext i8 %169 to i32
  %177 = zext i8 %172 to i32
  %178 = add nuw nsw i32 %177, %176
  %179 = icmp ugt i32 %175, 2
  %180 = zext i1 %179 to i32
  %181 = icmp ugt i32 %175, 32
  %182 = zext i1 %181 to i32
  %183 = add nuw nsw i32 %180, %182
  %184 = icmp ugt i32 %178, 2
  %185 = zext i1 %184 to i32
  %186 = icmp ugt i32 %178, 32
  %187 = zext i1 %186 to i32
  %188 = add nuw nsw i32 %185, %187
  %189 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %153, i32 noundef %183)
  %190 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %160, i32 noundef %188)
  %191 = shl i32 %190, 8
  %192 = add nsw i32 %191, %189
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #17
  %193 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %144
  %194 = load i8, ptr %193, align 2, !tbaa !5
  %195 = zext i8 %194 to i64
  %196 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %144
  %197 = load i8, ptr %196, align 2, !tbaa !5
  %198 = zext i8 %197 to i64
  %199 = add nuw nsw i64 %195, 12
  %200 = shl nuw nsw i64 %198, 3
  %201 = add nuw nsw i64 %199, %200
  %202 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %201
  %203 = and i32 %192, 65535
  %204 = mul nuw i32 %203, 65537
  store i32 %204, ptr %202, align 4, !tbaa !5
  br label %575

205:                                              ; preds = %3
  %206 = shl nsw i32 %2, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %206, i32 noundef 1, ptr noundef nonnull %9) #17
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %207
  %209 = load i32, ptr %208, align 16, !tbaa !39
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %210
  %212 = load i16, ptr %211, align 4, !tbaa !37
  %213 = sext i16 %212 to i32
  %214 = load i16, ptr %9, align 4, !tbaa !37
  %215 = sext i16 %214 to i32
  %216 = sub nsw i32 %213, %215
  %217 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %210, i64 1
  %218 = load i16, ptr %217, align 2, !tbaa !37
  %219 = sext i16 %218 to i32
  %220 = getelementptr inbounds [2 x i16], ptr %9, i64 0, i64 1
  %221 = load i16, ptr %220, align 2, !tbaa !37
  %222 = sext i16 %221 to i32
  %223 = sub nsw i32 %219, %222
  %224 = add nsw i32 %209, -1
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %225
  %227 = add nsw i32 %209, -8
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %228
  %230 = load i8, ptr %226, align 1, !tbaa !5
  %231 = getelementptr i8, ptr %226, i64 1
  %232 = load i8, ptr %231, align 1, !tbaa !5
  %233 = load i8, ptr %229, align 1, !tbaa !5
  %234 = getelementptr i8, ptr %229, i64 1
  %235 = load i8, ptr %234, align 1, !tbaa !5
  %236 = zext i8 %230 to i32
  %237 = zext i8 %233 to i32
  %238 = add nuw nsw i32 %237, %236
  %239 = zext i8 %232 to i32
  %240 = zext i8 %235 to i32
  %241 = add nuw nsw i32 %240, %239
  %242 = icmp ugt i32 %238, 2
  %243 = zext i1 %242 to i32
  %244 = icmp ugt i32 %238, 32
  %245 = zext i1 %244 to i32
  %246 = add nuw nsw i32 %243, %245
  %247 = icmp ugt i32 %241, 2
  %248 = zext i1 %247 to i32
  %249 = icmp ugt i32 %241, 32
  %250 = zext i1 %249 to i32
  %251 = add nuw nsw i32 %248, %250
  %252 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %216, i32 noundef %246)
  %253 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %223, i32 noundef %251)
  %254 = shl i32 %253, 8
  %255 = add nsw i32 %254, %252
  %256 = trunc i32 %255 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  %257 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %207
  %258 = load i8, ptr %257, align 4, !tbaa !5
  %259 = zext i8 %258 to i64
  %260 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %207
  %261 = load i8, ptr %260, align 4, !tbaa !5
  %262 = zext i8 %261 to i64
  %263 = add nuw nsw i64 %259, 12
  %264 = shl nuw nsw i64 %262, 3
  %265 = add nuw nsw i64 %263, %264
  %266 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %265
  store i16 %256, ptr %266, align 2, !tbaa !5
  %267 = getelementptr inbounds i8, ptr %266, i64 16
  store i16 %256, ptr %267, align 2, !tbaa !5
  %268 = or i32 %206, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %268, i32 noundef 1, ptr noundef nonnull %8) #17
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %269
  %271 = load i32, ptr %270, align 4, !tbaa !39
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %272
  %274 = load i16, ptr %273, align 4, !tbaa !37
  %275 = sext i16 %274 to i32
  %276 = load i16, ptr %8, align 4, !tbaa !37
  %277 = sext i16 %276 to i32
  %278 = sub nsw i32 %275, %277
  %279 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %272, i64 1
  %280 = load i16, ptr %279, align 2, !tbaa !37
  %281 = sext i16 %280 to i32
  %282 = getelementptr inbounds [2 x i16], ptr %8, i64 0, i64 1
  %283 = load i16, ptr %282, align 2, !tbaa !37
  %284 = sext i16 %283 to i32
  %285 = sub nsw i32 %281, %284
  %286 = add nsw i32 %271, -1
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %287
  %289 = add nsw i32 %271, -8
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %290
  %292 = load i8, ptr %288, align 1, !tbaa !5
  %293 = getelementptr i8, ptr %288, i64 1
  %294 = load i8, ptr %293, align 1, !tbaa !5
  %295 = load i8, ptr %291, align 1, !tbaa !5
  %296 = getelementptr i8, ptr %291, i64 1
  %297 = load i8, ptr %296, align 1, !tbaa !5
  %298 = zext i8 %292 to i32
  %299 = zext i8 %295 to i32
  %300 = add nuw nsw i32 %299, %298
  %301 = zext i8 %294 to i32
  %302 = zext i8 %297 to i32
  %303 = add nuw nsw i32 %302, %301
  %304 = icmp ugt i32 %300, 2
  %305 = zext i1 %304 to i32
  %306 = icmp ugt i32 %300, 32
  %307 = zext i1 %306 to i32
  %308 = add nuw nsw i32 %305, %307
  %309 = icmp ugt i32 %303, 2
  %310 = zext i1 %309 to i32
  %311 = icmp ugt i32 %303, 32
  %312 = zext i1 %311 to i32
  %313 = add nuw nsw i32 %310, %312
  %314 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %278, i32 noundef %308)
  %315 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %285, i32 noundef %313)
  %316 = shl i32 %315, 8
  %317 = add nsw i32 %316, %314
  %318 = trunc i32 %317 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  %319 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %269
  %320 = load i8, ptr %319, align 1, !tbaa !5
  %321 = zext i8 %320 to i64
  %322 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %269
  %323 = load i8, ptr %322, align 1, !tbaa !5
  %324 = zext i8 %323 to i64
  %325 = add nuw nsw i64 %321, 12
  %326 = shl nuw nsw i64 %324, 3
  %327 = add nuw nsw i64 %325, %326
  %328 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %327
  store i16 %318, ptr %328, align 2, !tbaa !5
  %329 = getelementptr inbounds i8, ptr %328, i64 16
  store i16 %318, ptr %329, align 2, !tbaa !5
  br label %575

330:                                              ; preds = %3
  %331 = shl nsw i32 %2, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %331, i32 noundef 1, ptr noundef nonnull %7) #17
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %332
  %334 = load i32, ptr %333, align 16, !tbaa !39
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %335
  %337 = load i16, ptr %336, align 4, !tbaa !37
  %338 = sext i16 %337 to i32
  %339 = load i16, ptr %7, align 4, !tbaa !37
  %340 = sext i16 %339 to i32
  %341 = sub nsw i32 %338, %340
  %342 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %335, i64 1
  %343 = load i16, ptr %342, align 2, !tbaa !37
  %344 = sext i16 %343 to i32
  %345 = getelementptr inbounds [2 x i16], ptr %7, i64 0, i64 1
  %346 = load i16, ptr %345, align 2, !tbaa !37
  %347 = sext i16 %346 to i32
  %348 = sub nsw i32 %344, %347
  %349 = add nsw i32 %334, -1
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %350
  %352 = add nsw i32 %334, -8
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %353
  %355 = load i8, ptr %351, align 1, !tbaa !5
  %356 = getelementptr i8, ptr %351, i64 1
  %357 = load i8, ptr %356, align 1, !tbaa !5
  %358 = load i8, ptr %354, align 1, !tbaa !5
  %359 = getelementptr i8, ptr %354, i64 1
  %360 = load i8, ptr %359, align 1, !tbaa !5
  %361 = zext i8 %355 to i32
  %362 = zext i8 %358 to i32
  %363 = add nuw nsw i32 %362, %361
  %364 = zext i8 %357 to i32
  %365 = zext i8 %360 to i32
  %366 = add nuw nsw i32 %365, %364
  %367 = icmp ugt i32 %363, 2
  %368 = zext i1 %367 to i32
  %369 = icmp ugt i32 %363, 32
  %370 = zext i1 %369 to i32
  %371 = add nuw nsw i32 %368, %370
  %372 = icmp ugt i32 %366, 2
  %373 = zext i1 %372 to i32
  %374 = icmp ugt i32 %366, 32
  %375 = zext i1 %374 to i32
  %376 = add nuw nsw i32 %373, %375
  %377 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %341, i32 noundef %371)
  %378 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %348, i32 noundef %376)
  %379 = shl i32 %378, 8
  %380 = add nsw i32 %379, %377
  %381 = trunc i32 %380 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #17
  %382 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %332
  %383 = load i8, ptr %382, align 4, !tbaa !5
  %384 = zext i8 %383 to i64
  %385 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %332
  %386 = load i8, ptr %385, align 4, !tbaa !5
  %387 = zext i8 %386 to i64
  %388 = add nuw nsw i64 %384, 12
  %389 = shl nuw nsw i64 %387, 3
  %390 = add nuw nsw i64 %388, %389
  %391 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %390
  store i16 %381, ptr %391, align 2, !tbaa !5
  %392 = or i32 %331, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %392, i32 noundef 1, ptr noundef nonnull %6) #17
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %393
  %395 = load i32, ptr %394, align 4, !tbaa !39
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %396
  %398 = load i16, ptr %397, align 4, !tbaa !37
  %399 = sext i16 %398 to i32
  %400 = load i16, ptr %6, align 4, !tbaa !37
  %401 = sext i16 %400 to i32
  %402 = sub nsw i32 %399, %401
  %403 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %396, i64 1
  %404 = load i16, ptr %403, align 2, !tbaa !37
  %405 = sext i16 %404 to i32
  %406 = getelementptr inbounds [2 x i16], ptr %6, i64 0, i64 1
  %407 = load i16, ptr %406, align 2, !tbaa !37
  %408 = sext i16 %407 to i32
  %409 = sub nsw i32 %405, %408
  %410 = add nsw i32 %395, -1
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %411
  %413 = add nsw i32 %395, -8
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %414
  %416 = load i8, ptr %412, align 1, !tbaa !5
  %417 = getelementptr i8, ptr %412, i64 1
  %418 = load i8, ptr %417, align 1, !tbaa !5
  %419 = load i8, ptr %415, align 1, !tbaa !5
  %420 = getelementptr i8, ptr %415, i64 1
  %421 = load i8, ptr %420, align 1, !tbaa !5
  %422 = zext i8 %416 to i32
  %423 = zext i8 %419 to i32
  %424 = add nuw nsw i32 %423, %422
  %425 = zext i8 %418 to i32
  %426 = zext i8 %421 to i32
  %427 = add nuw nsw i32 %426, %425
  %428 = icmp ugt i32 %424, 2
  %429 = zext i1 %428 to i32
  %430 = icmp ugt i32 %424, 32
  %431 = zext i1 %430 to i32
  %432 = add nuw nsw i32 %429, %431
  %433 = icmp ugt i32 %427, 2
  %434 = zext i1 %433 to i32
  %435 = icmp ugt i32 %427, 32
  %436 = zext i1 %435 to i32
  %437 = add nuw nsw i32 %434, %436
  %438 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %402, i32 noundef %432)
  %439 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %409, i32 noundef %437)
  %440 = shl i32 %439, 8
  %441 = add nsw i32 %440, %438
  %442 = trunc i32 %441 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  %443 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %393
  %444 = load i8, ptr %443, align 1, !tbaa !5
  %445 = zext i8 %444 to i64
  %446 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %393
  %447 = load i8, ptr %446, align 1, !tbaa !5
  %448 = zext i8 %447 to i64
  %449 = add nuw nsw i64 %445, 12
  %450 = shl nuw nsw i64 %448, 3
  %451 = add nuw nsw i64 %449, %450
  %452 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %451
  store i16 %442, ptr %452, align 2, !tbaa !5
  %453 = or i32 %331, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %453, i32 noundef 1, ptr noundef nonnull %5) #17
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %454
  %456 = load i32, ptr %455, align 8, !tbaa !39
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %457
  %459 = load i16, ptr %458, align 4, !tbaa !37
  %460 = sext i16 %459 to i32
  %461 = load i16, ptr %5, align 4, !tbaa !37
  %462 = sext i16 %461 to i32
  %463 = sub nsw i32 %460, %462
  %464 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %457, i64 1
  %465 = load i16, ptr %464, align 2, !tbaa !37
  %466 = sext i16 %465 to i32
  %467 = getelementptr inbounds [2 x i16], ptr %5, i64 0, i64 1
  %468 = load i16, ptr %467, align 2, !tbaa !37
  %469 = sext i16 %468 to i32
  %470 = sub nsw i32 %466, %469
  %471 = add nsw i32 %456, -1
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %472
  %474 = add nsw i32 %456, -8
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %475
  %477 = load i8, ptr %473, align 1, !tbaa !5
  %478 = getelementptr i8, ptr %473, i64 1
  %479 = load i8, ptr %478, align 1, !tbaa !5
  %480 = load i8, ptr %476, align 1, !tbaa !5
  %481 = getelementptr i8, ptr %476, i64 1
  %482 = load i8, ptr %481, align 1, !tbaa !5
  %483 = zext i8 %477 to i32
  %484 = zext i8 %480 to i32
  %485 = add nuw nsw i32 %484, %483
  %486 = zext i8 %479 to i32
  %487 = zext i8 %482 to i32
  %488 = add nuw nsw i32 %487, %486
  %489 = icmp ugt i32 %485, 2
  %490 = zext i1 %489 to i32
  %491 = icmp ugt i32 %485, 32
  %492 = zext i1 %491 to i32
  %493 = add nuw nsw i32 %490, %492
  %494 = icmp ugt i32 %488, 2
  %495 = zext i1 %494 to i32
  %496 = icmp ugt i32 %488, 32
  %497 = zext i1 %496 to i32
  %498 = add nuw nsw i32 %495, %497
  %499 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %463, i32 noundef %493)
  %500 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %470, i32 noundef %498)
  %501 = shl i32 %500, 8
  %502 = add nsw i32 %501, %499
  %503 = trunc i32 %502 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  %504 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %454
  %505 = load i8, ptr %504, align 2, !tbaa !5
  %506 = zext i8 %505 to i64
  %507 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %454
  %508 = load i8, ptr %507, align 2, !tbaa !5
  %509 = zext i8 %508 to i64
  %510 = add nuw nsw i64 %506, 12
  %511 = shl nuw nsw i64 %509, 3
  %512 = add nuw nsw i64 %510, %511
  %513 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %512
  store i16 %503, ptr %513, align 2, !tbaa !5
  %514 = or i32 %331, 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %514, i32 noundef 1, ptr noundef nonnull %4) #17
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %515
  %517 = load i32, ptr %516, align 4, !tbaa !39
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %518
  %520 = load i16, ptr %519, align 4, !tbaa !37
  %521 = sext i16 %520 to i32
  %522 = load i16, ptr %4, align 4, !tbaa !37
  %523 = sext i16 %522 to i32
  %524 = sub nsw i32 %521, %523
  %525 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %518, i64 1
  %526 = load i16, ptr %525, align 2, !tbaa !37
  %527 = sext i16 %526 to i32
  %528 = getelementptr inbounds [2 x i16], ptr %4, i64 0, i64 1
  %529 = load i16, ptr %528, align 2, !tbaa !37
  %530 = sext i16 %529 to i32
  %531 = sub nsw i32 %527, %530
  %532 = add nsw i32 %517, -1
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %533
  %535 = add nsw i32 %517, -8
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %536
  %538 = load i8, ptr %534, align 1, !tbaa !5
  %539 = getelementptr i8, ptr %534, i64 1
  %540 = load i8, ptr %539, align 1, !tbaa !5
  %541 = load i8, ptr %537, align 1, !tbaa !5
  %542 = getelementptr i8, ptr %537, i64 1
  %543 = load i8, ptr %542, align 1, !tbaa !5
  %544 = zext i8 %538 to i32
  %545 = zext i8 %541 to i32
  %546 = add nuw nsw i32 %545, %544
  %547 = zext i8 %540 to i32
  %548 = zext i8 %543 to i32
  %549 = add nuw nsw i32 %548, %547
  %550 = icmp ugt i32 %546, 2
  %551 = zext i1 %550 to i32
  %552 = icmp ugt i32 %546, 32
  %553 = zext i1 %552 to i32
  %554 = add nuw nsw i32 %551, %553
  %555 = icmp ugt i32 %549, 2
  %556 = zext i1 %555 to i32
  %557 = icmp ugt i32 %549, 32
  %558 = zext i1 %557 to i32
  %559 = add nuw nsw i32 %556, %558
  %560 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 0, i32 noundef %524, i32 noundef %554)
  %561 = call fastcc i32 @x264_cabac_mb_mvd_cpn(ptr noundef %1, i32 noundef 1, i32 noundef %531, i32 noundef %559)
  %562 = shl i32 %561, 8
  %563 = add nsw i32 %562, %560
  %564 = trunc i32 %563 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #17
  %565 = getelementptr inbounds [16 x i8], ptr @block_idx_x, i64 0, i64 %515
  %566 = load i8, ptr %565, align 1, !tbaa !5
  %567 = zext i8 %566 to i64
  %568 = getelementptr inbounds [16 x i8], ptr @block_idx_y, i64 0, i64 %515
  %569 = load i8, ptr %568, align 1, !tbaa !5
  %570 = zext i8 %569 to i64
  %571 = add nuw nsw i64 %567, 12
  %572 = shl nuw nsw i64 %570, 3
  %573 = add nuw nsw i64 %571, %572
  %574 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %573
  store i16 %564, ptr %574, align 2, !tbaa !5
  br label %575

575:                                              ; preds = %3, %330, %205, %80, %16
  ret void
}

declare void @x264_mb_predict_mv(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nofree nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc i32 @x264_cabac_mb_mvd_cpn(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 {
  %5 = tail call i32 @llvm.abs.i32(i32 %2, i1 true)
  %6 = icmp eq i32 %1, 0
  %7 = select i1 %6, i32 40, i32 47
  %8 = icmp eq i32 %2, 0
  %9 = add nuw nsw i32 %7, %3
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !5
  %13 = zext i8 %12 to i64
  br i1 %8, label %14, label %23

14:                                               ; preds = %4
  %15 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %13, i64 0
  %16 = load i8, ptr %15, align 2, !tbaa !5
  store i8 %16, ptr %11, align 1, !tbaa !5
  %17 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %13
  %18 = load i16, ptr %17, align 2, !tbaa !37
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 8
  %21 = load i32, ptr %20, align 16, !tbaa !40
  %22 = add nsw i32 %21, %19
  store i32 %22, ptr %20, align 16, !tbaa !40
  br label %190

23:                                               ; preds = %4
  %24 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %13, i64 1
  %25 = load i8, ptr %24, align 1, !tbaa !5
  store i8 %25, ptr %11, align 1, !tbaa !5
  %26 = xor i64 %13, 1
  %27 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %26
  %28 = load i16, ptr %27, align 2, !tbaa !37
  %29 = zext i16 %28 to i32
  %30 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 8
  %31 = load i32, ptr %30, align 16, !tbaa !40
  %32 = add nsw i32 %31, %29
  %33 = icmp ult i32 %5, 4
  br i1 %33, label %34, label %106

34:                                               ; preds = %23
  %35 = icmp ugt i32 %5, 1
  %36 = add nuw nsw i32 %7, 2
  br i1 %35, label %37, label %62

37:                                               ; preds = %34
  %38 = zext i32 %36 to i64
  %39 = zext i32 %5 to i64
  %40 = add nsw i64 %39, -1
  %41 = and i64 %40, 1
  %42 = icmp eq i32 %5, 2
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = and i64 %40, -2
  br label %76

45:                                               ; preds = %76, %37
  %46 = phi i32 [ undef, %37 ], [ %102, %76 ]
  %47 = phi i64 [ 1, %37 ], [ %103, %76 ]
  %48 = phi i32 [ %32, %37 ], [ %102, %76 ]
  %49 = icmp eq i64 %41, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %45
  %51 = add nuw nsw i64 %47, %38
  %52 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %51
  %53 = load i8, ptr %52, align 1, !tbaa !5
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %54, i64 1
  %56 = load i8, ptr %55, align 1, !tbaa !5
  store i8 %56, ptr %52, align 1, !tbaa !5
  %57 = xor i64 %54, 1
  %58 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %57
  %59 = load i16, ptr %58, align 2, !tbaa !37
  %60 = zext i16 %59 to i32
  %61 = add nsw i32 %48, %60
  br label %62

62:                                               ; preds = %50, %45, %34
  %63 = phi i32 [ %32, %34 ], [ %46, %45 ], [ %61, %50 ]
  %64 = add nuw i32 %36, %5
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !5
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %68, i64 0
  %70 = load i8, ptr %69, align 2, !tbaa !5
  store i8 %70, ptr %66, align 1, !tbaa !5
  %71 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %68
  %72 = load i16, ptr %71, align 2, !tbaa !37
  %73 = zext i16 %72 to i32
  %74 = add nuw nsw i32 %73, 256
  %75 = add i32 %74, %63
  store i32 %75, ptr %30, align 16, !tbaa !40
  br label %190

76:                                               ; preds = %76, %43
  %77 = phi i64 [ 1, %43 ], [ %103, %76 ]
  %78 = phi i32 [ %32, %43 ], [ %102, %76 ]
  %79 = phi i64 [ 0, %43 ], [ %104, %76 ]
  %80 = add nuw nsw i64 %77, %38
  %81 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !5
  %83 = zext i8 %82 to i64
  %84 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %83, i64 1
  %85 = load i8, ptr %84, align 1, !tbaa !5
  store i8 %85, ptr %81, align 1, !tbaa !5
  %86 = xor i64 %83, 1
  %87 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %86
  %88 = load i16, ptr %87, align 2, !tbaa !37
  %89 = zext i16 %88 to i32
  %90 = add nsw i32 %78, %89
  %91 = add nuw nsw i64 %77, 1
  %92 = add nuw nsw i64 %91, %38
  %93 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %92
  %94 = load i8, ptr %93, align 1, !tbaa !5
  %95 = zext i8 %94 to i64
  %96 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %95, i64 1
  %97 = load i8, ptr %96, align 1, !tbaa !5
  store i8 %97, ptr %93, align 1, !tbaa !5
  %98 = xor i64 %95, 1
  %99 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %98
  %100 = load i16, ptr %99, align 2, !tbaa !37
  %101 = zext i16 %100 to i32
  %102 = add nsw i32 %90, %101
  %103 = add nuw nsw i64 %77, 2
  %104 = add i64 %79, 2
  %105 = icmp eq i64 %104, %44
  br i1 %105, label %45, label %76, !llvm.loop !456

106:                                              ; preds = %23
  %107 = add nuw nsw i32 %7, 3
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %108
  %110 = load i8, ptr %109, align 1, !tbaa !5
  %111 = zext i8 %110 to i64
  %112 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %111, i64 1
  %113 = load i8, ptr %112, align 1, !tbaa !5
  store i8 %113, ptr %109, align 1, !tbaa !5
  %114 = xor i64 %111, 1
  %115 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %114
  %116 = load i16, ptr %115, align 2, !tbaa !37
  %117 = zext i16 %116 to i32
  %118 = add nsw i32 %32, %117
  %119 = add nuw nsw i32 %7, 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !5
  %123 = zext i8 %122 to i64
  %124 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %123, i64 1
  %125 = load i8, ptr %124, align 1, !tbaa !5
  store i8 %125, ptr %121, align 1, !tbaa !5
  %126 = xor i64 %123, 1
  %127 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %126
  %128 = load i16, ptr %127, align 2, !tbaa !37
  %129 = zext i16 %128 to i32
  %130 = add nsw i32 %118, %129
  %131 = add nuw nsw i32 %7, 5
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %132
  %134 = load i8, ptr %133, align 1, !tbaa !5
  %135 = zext i8 %134 to i64
  %136 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %135, i64 1
  %137 = load i8, ptr %136, align 1, !tbaa !5
  store i8 %137, ptr %133, align 1, !tbaa !5
  %138 = xor i64 %135, 1
  %139 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %138
  %140 = load i16, ptr %139, align 2, !tbaa !37
  %141 = zext i16 %140 to i32
  %142 = add nsw i32 %130, %141
  %143 = icmp ult i32 %5, 9
  br i1 %143, label %144, label %158

144:                                              ; preds = %106
  %145 = add nsw i32 %5, -3
  %146 = zext i32 %145 to i64
  %147 = add nuw nsw i32 %7, 6
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !5
  %151 = zext i8 %150 to i64
  %152 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %146, i64 %151
  %153 = load i16, ptr %152, align 2, !tbaa !37
  %154 = zext i16 %153 to i32
  %155 = add nsw i32 %142, %154
  store i32 %155, ptr %30, align 16, !tbaa !40
  %156 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %146, i64 %151
  %157 = load i8, ptr %156, align 1, !tbaa !5
  store i8 %157, ptr %149, align 1, !tbaa !5
  br label %190

158:                                              ; preds = %106
  %159 = add nuw nsw i32 %7, 6
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %struct.x264_cabac_t, ptr %0, i64 0, i32 9, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !5
  %163 = zext i8 %162 to i64
  %164 = getelementptr inbounds [128 x i16], ptr @cabac_size_5ones, i64 0, i64 %163
  %165 = load i16, ptr %164, align 2, !tbaa !37
  %166 = zext i16 %165 to i32
  %167 = add nsw i32 %142, %166
  %168 = getelementptr inbounds [128 x i8], ptr @cabac_transition_5ones, i64 0, i64 %163
  %169 = load i8, ptr %168, align 1, !tbaa !5
  store i8 %169, ptr %161, align 1, !tbaa !5
  %170 = add nsw i32 %5, -2
  %171 = icmp ult i32 %170, 255
  %172 = add nsw i32 %5, -1
  br i1 %171, label %173, label %178

173:                                              ; preds = %158
  %174 = zext i32 %172 to i64
  %175 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !5
  %177 = zext i8 %176 to i32
  br label %185

178:                                              ; preds = %158
  %179 = lshr i32 %172, 8
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %180
  %182 = load i8, ptr %181, align 1, !tbaa !5
  %183 = zext i8 %182 to i32
  %184 = add nuw nsw i32 %183, 16
  br label %185

185:                                              ; preds = %173, %178
  %186 = phi i32 [ %177, %173 ], [ %184, %178 ]
  %187 = shl nuw nsw i32 %186, 8
  %188 = add i32 %167, -768
  %189 = add i32 %188, %187
  store i32 %189, ptr %30, align 16, !tbaa !40
  br label %190

190:                                              ; preds = %62, %185, %144, %14
  %191 = tail call i32 @llvm.umin.i32(i32 %5, i32 33)
  ret i32 %191
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @block_residual_write_cabac_internal(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) unnamed_addr #3 {
  %6 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %7 = load i32, ptr %6, align 4, !tbaa !36
  %8 = sext i32 %7 to i64
  %9 = zext i32 %2 to i64
  %10 = getelementptr inbounds [2 x [6 x i16]], ptr @significant_coeff_flag_offset, i64 0, i64 %8, i64 %9
  %11 = load i16, ptr %10, align 2, !tbaa !37
  %12 = zext i16 %11 to i32
  %13 = getelementptr inbounds [2 x [6 x i16]], ptr @last_coeff_flag_offset, i64 0, i64 %8, i64 %9
  %14 = load i16, ptr %13, align 2, !tbaa !37
  %15 = zext i16 %14 to i32
  %16 = getelementptr inbounds [6 x i16], ptr @coeff_abs_level_m1_offset, i64 0, i64 %9
  %17 = load i16, ptr %16, align 2, !tbaa !37
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds [2 x [63 x i8]], ptr @significant_coeff_flag_offset_8x8, i64 0, i64 %8
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 73, i32 11, i64 %9
  %21 = load ptr, ptr %20, align 8, !tbaa !46
  %22 = tail call i32 %21(ptr noundef %3) #17
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i16, ptr %3, i64 %23
  %25 = load i16, ptr %24, align 2, !tbaa !37
  %26 = tail call i16 @llvm.abs.i16(i16 %25, i1 false)
  %27 = zext i16 %26 to i32
  %28 = add nuw nsw i32 %18, 1
  %29 = icmp eq i32 %4, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %5
  %31 = getelementptr inbounds [5 x i8], ptr @count_cat_m1, i64 0, i64 %9
  %32 = load i8, ptr %31, align 1, !tbaa !5
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %22, %33
  br i1 %34, label %89, label %58

35:                                               ; preds = %5
  %36 = icmp eq i32 %22, 63
  br i1 %36, label %89, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds i8, ptr %19, i64 %23
  %39 = load i8, ptr %38, align 1, !tbaa !5
  %40 = zext i8 %39 to i32
  %41 = add nuw nsw i32 %40, %12
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %42
  %44 = load i8, ptr %43, align 1, !tbaa !5
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %45, i64 1
  %47 = load i8, ptr %46, align 1, !tbaa !5
  store i8 %47, ptr %43, align 1, !tbaa !5
  %48 = xor i64 %45, 1
  %49 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %48
  %50 = load i16, ptr %49, align 2, !tbaa !37
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %53 = load i32, ptr %52, align 16, !tbaa !40
  %54 = add nsw i32 %53, %51
  store i32 %54, ptr %52, align 16, !tbaa !40
  %55 = getelementptr inbounds [63 x i8], ptr @last_coeff_flag_offset_8x8, i64 0, i64 %23
  %56 = load i8, ptr %55, align 1, !tbaa !5
  %57 = zext i8 %56 to i32
  br label %73

58:                                               ; preds = %30
  %59 = add nsw i32 %22, %12
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %60
  %62 = load i8, ptr %61, align 1, !tbaa !5
  %63 = zext i8 %62 to i64
  %64 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %63, i64 1
  %65 = load i8, ptr %64, align 1, !tbaa !5
  store i8 %65, ptr %61, align 1, !tbaa !5
  %66 = xor i64 %63, 1
  %67 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %66
  %68 = load i16, ptr %67, align 2, !tbaa !37
  %69 = zext i16 %68 to i32
  %70 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %71 = load i32, ptr %70, align 16, !tbaa !40
  %72 = add nsw i32 %71, %69
  store i32 %72, ptr %70, align 16, !tbaa !40
  br label %73

73:                                               ; preds = %58, %37
  %74 = phi i32 [ %57, %37 ], [ %22, %58 ]
  %75 = add nsw i32 %74, %15
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %76
  %78 = load i8, ptr %77, align 1, !tbaa !5
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %79, i64 1
  %81 = load i8, ptr %80, align 1, !tbaa !5
  store i8 %81, ptr %77, align 1, !tbaa !5
  %82 = xor i64 %79, 1
  %83 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %82
  %84 = load i16, ptr %83, align 2, !tbaa !37
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %87 = load i32, ptr %86, align 16, !tbaa !40
  %88 = add nsw i32 %87, %85
  store i32 %88, ptr %86, align 16, !tbaa !40
  br label %89

89:                                               ; preds = %35, %73, %30
  %90 = icmp ugt i16 %26, 1
  %91 = zext i32 %28 to i64
  %92 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %91
  %93 = load i8, ptr %92, align 1, !tbaa !5
  %94 = zext i8 %93 to i64
  br i1 %90, label %95, label %150

95:                                               ; preds = %89
  %96 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %94, i64 1
  %97 = load i8, ptr %96, align 1, !tbaa !5
  store i8 %97, ptr %92, align 1, !tbaa !5
  %98 = xor i64 %94, 1
  %99 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %98
  %100 = load i16, ptr %99, align 2, !tbaa !37
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %103 = load i32, ptr %102, align 16, !tbaa !40
  %104 = add nsw i32 %103, %101
  %105 = add nuw nsw i32 %18, 5
  %106 = icmp ult i16 %26, 15
  br i1 %106, label %107, label %120

107:                                              ; preds = %95
  %108 = add nsw i32 %27, -1
  %109 = zext i32 %108 to i64
  %110 = zext i32 %105 to i64
  %111 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %110
  %112 = load i8, ptr %111, align 1, !tbaa !5
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %109, i64 %113
  %115 = load i16, ptr %114, align 2, !tbaa !37
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %104, %116
  store i32 %117, ptr %102, align 16, !tbaa !40
  %118 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %109, i64 %113
  %119 = load i8, ptr %118, align 1, !tbaa !5
  store i8 %119, ptr %111, align 1, !tbaa !5
  br label %160

120:                                              ; preds = %95
  %121 = zext i32 %105 to i64
  %122 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !5
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 14, i64 %124
  %126 = load i16, ptr %125, align 2, !tbaa !37
  %127 = zext i16 %126 to i32
  %128 = add nsw i32 %104, %127
  %129 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 14, i64 %124
  %130 = load i8, ptr %129, align 1, !tbaa !5
  store i8 %130, ptr %122, align 1, !tbaa !5
  %131 = add nsw i32 %27, -15
  %132 = icmp ult i32 %131, 255
  %133 = add nsw i32 %27, -14
  br i1 %132, label %134, label %139

134:                                              ; preds = %120
  %135 = zext i32 %133 to i64
  %136 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %135
  %137 = load i8, ptr %136, align 1, !tbaa !5
  %138 = zext i8 %137 to i32
  br label %146

139:                                              ; preds = %120
  %140 = lshr i32 %133, 8
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %141
  %143 = load i8, ptr %142, align 1, !tbaa !5
  %144 = zext i8 %143 to i32
  %145 = add nuw nsw i32 %144, 16
  br label %146

146:                                              ; preds = %134, %139
  %147 = phi i32 [ %138, %134 ], [ %145, %139 ]
  %148 = shl nuw nsw i32 %147, 8
  %149 = add nsw i32 %148, %128
  store i32 %149, ptr %102, align 16, !tbaa !40
  br label %160

150:                                              ; preds = %89
  %151 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %94, i64 0
  %152 = load i8, ptr %151, align 2, !tbaa !5
  store i8 %152, ptr %92, align 1, !tbaa !5
  %153 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %94
  %154 = load i16, ptr %153, align 2, !tbaa !37
  %155 = zext i16 %154 to i32
  %156 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %157 = load i32, ptr %156, align 16, !tbaa !40
  %158 = add nuw nsw i32 %155, 256
  %159 = add i32 %158, %157
  store i32 %159, ptr %156, align 16, !tbaa !40
  br label %160

160:                                              ; preds = %107, %146, %150
  %161 = phi i32 [ %159, %150 ], [ %149, %146 ], [ %117, %107 ]
  %162 = phi i32 [ 1, %150 ], [ 4, %146 ], [ 4, %107 ]
  %163 = icmp sgt i32 %22, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 8
  %166 = zext i16 %11 to i64
  br label %168

167:                                              ; preds = %328, %160
  ret void

168:                                              ; preds = %164, %328
  %169 = phi i32 [ %161, %164 ], [ %329, %328 ]
  %170 = phi i64 [ %23, %164 ], [ %172, %328 ]
  %171 = phi i32 [ %162, %164 ], [ %330, %328 ]
  %172 = add nsw i64 %170, -1
  %173 = getelementptr inbounds i16, ptr %3, i64 %172
  %174 = load i16, ptr %173, align 2, !tbaa !37
  %175 = icmp eq i16 %174, 0
  br i1 %175, label %308, label %176

176:                                              ; preds = %168
  %177 = tail call i16 @llvm.abs.i16(i16 %174, i1 false)
  %178 = zext i16 %177 to i32
  br i1 %29, label %198, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds i8, ptr %19, i64 %172
  %181 = load i8, ptr %180, align 1, !tbaa !5
  %182 = zext i8 %181 to i32
  %183 = add nuw nsw i32 %182, %12
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !5
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %187, i64 1
  %189 = load i8, ptr %188, align 1, !tbaa !5
  store i8 %189, ptr %185, align 1, !tbaa !5
  %190 = xor i64 %187, 1
  %191 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %190
  %192 = load i16, ptr %191, align 2, !tbaa !37
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 %169, %193
  store i32 %194, ptr %165, align 16, !tbaa !40
  %195 = getelementptr inbounds [63 x i8], ptr @last_coeff_flag_offset_8x8, i64 0, i64 %172
  %196 = load i8, ptr %195, align 1, !tbaa !5
  %197 = zext i8 %196 to i32
  br label %212

198:                                              ; preds = %176
  %199 = add nuw nsw i64 %172, %166
  %200 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !5
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %202, i64 1
  %204 = load i8, ptr %203, align 1, !tbaa !5
  store i8 %204, ptr %200, align 1, !tbaa !5
  %205 = xor i64 %202, 1
  %206 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %205
  %207 = load i16, ptr %206, align 2, !tbaa !37
  %208 = zext i16 %207 to i32
  %209 = load i32, ptr %165, align 16, !tbaa !40
  %210 = add nsw i32 %209, %208
  store i32 %210, ptr %165, align 16, !tbaa !40
  %211 = trunc i64 %172 to i32
  br label %212

212:                                              ; preds = %198, %179
  %213 = phi i32 [ %197, %179 ], [ %211, %198 ]
  %214 = add nuw nsw i32 %213, %15
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %215
  %217 = load i8, ptr %216, align 1, !tbaa !5
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %218, i64 0
  %220 = load i8, ptr %219, align 2, !tbaa !5
  store i8 %220, ptr %216, align 1, !tbaa !5
  %221 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %218
  %222 = load i16, ptr %221, align 2, !tbaa !37
  %223 = zext i16 %222 to i32
  %224 = load i32, ptr %165, align 16, !tbaa !40
  %225 = add nsw i32 %224, %223
  %226 = sext i32 %171 to i64
  %227 = getelementptr inbounds [8 x i8], ptr @coeff_abs_level1_ctx, i64 0, i64 %226
  %228 = load i8, ptr %227, align 1, !tbaa !5
  %229 = zext i8 %228 to i32
  %230 = add nuw nsw i32 %229, %18
  %231 = icmp ugt i16 %177, 1
  %232 = zext i32 %230 to i64
  %233 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !5
  %235 = zext i8 %234 to i64
  br i1 %231, label %236, label %297

236:                                              ; preds = %212
  %237 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %235, i64 1
  %238 = load i8, ptr %237, align 1, !tbaa !5
  store i8 %238, ptr %233, align 1, !tbaa !5
  %239 = xor i64 %235, 1
  %240 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %239
  %241 = load i16, ptr %240, align 2, !tbaa !37
  %242 = zext i16 %241 to i32
  %243 = add nsw i32 %225, %242
  %244 = getelementptr inbounds [8 x i8], ptr @coeff_abs_levelgt1_ctx, i64 0, i64 %226
  %245 = load i8, ptr %244, align 1, !tbaa !5
  %246 = zext i8 %245 to i32
  %247 = add nuw nsw i32 %246, %18
  %248 = icmp ult i16 %177, 15
  br i1 %248, label %249, label %262

249:                                              ; preds = %236
  %250 = add nsw i32 %178, -1
  %251 = zext i32 %250 to i64
  %252 = zext i32 %247 to i64
  %253 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %252
  %254 = load i8, ptr %253, align 1, !tbaa !5
  %255 = zext i8 %254 to i64
  %256 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 %251, i64 %255
  %257 = load i16, ptr %256, align 2, !tbaa !37
  %258 = zext i16 %257 to i32
  %259 = add nsw i32 %243, %258
  store i32 %259, ptr %165, align 16, !tbaa !40
  %260 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 %251, i64 %255
  %261 = load i8, ptr %260, align 1, !tbaa !5
  store i8 %261, ptr %253, align 1, !tbaa !5
  br label %292

262:                                              ; preds = %236
  %263 = zext i32 %247 to i64
  %264 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %263
  %265 = load i8, ptr %264, align 1, !tbaa !5
  %266 = zext i8 %265 to i64
  %267 = getelementptr inbounds [15 x [128 x i16]], ptr @cabac_size_unary, i64 0, i64 14, i64 %266
  %268 = load i16, ptr %267, align 2, !tbaa !37
  %269 = zext i16 %268 to i32
  %270 = add nsw i32 %243, %269
  %271 = getelementptr inbounds [15 x [128 x i8]], ptr @cabac_transition_unary, i64 0, i64 14, i64 %266
  %272 = load i8, ptr %271, align 1, !tbaa !5
  store i8 %272, ptr %264, align 1, !tbaa !5
  %273 = add nsw i32 %178, -15
  %274 = icmp ult i32 %273, 255
  %275 = add nsw i32 %178, -14
  br i1 %274, label %276, label %281

276:                                              ; preds = %262
  %277 = zext i32 %275 to i64
  %278 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %277
  %279 = load i8, ptr %278, align 1, !tbaa !5
  %280 = zext i8 %279 to i32
  br label %288

281:                                              ; preds = %262
  %282 = lshr i32 %275, 8
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %283
  %285 = load i8, ptr %284, align 1, !tbaa !5
  %286 = zext i8 %285 to i32
  %287 = add nuw nsw i32 %286, 16
  br label %288

288:                                              ; preds = %276, %281
  %289 = phi i32 [ %280, %276 ], [ %287, %281 ]
  %290 = shl nuw nsw i32 %289, 8
  %291 = add nsw i32 %290, %270
  store i32 %291, ptr %165, align 16, !tbaa !40
  br label %292

292:                                              ; preds = %288, %249
  %293 = phi i32 [ %291, %288 ], [ %259, %249 ]
  %294 = getelementptr inbounds [2 x [8 x i8]], ptr @coeff_abs_level_transition, i64 0, i64 1, i64 %226
  %295 = load i8, ptr %294, align 1, !tbaa !5
  %296 = zext i8 %295 to i32
  br label %328

297:                                              ; preds = %212
  %298 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %235, i64 0
  %299 = load i8, ptr %298, align 2, !tbaa !5
  store i8 %299, ptr %233, align 1, !tbaa !5
  %300 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %235
  %301 = load i16, ptr %300, align 2, !tbaa !37
  %302 = zext i16 %301 to i32
  %303 = add nsw i32 %225, %302
  %304 = getelementptr inbounds [8 x i8], ptr @coeff_abs_level_transition, i64 0, i64 %226
  %305 = load i8, ptr %304, align 1, !tbaa !5
  %306 = zext i8 %305 to i32
  %307 = add nsw i32 %303, 256
  store i32 %307, ptr %165, align 16, !tbaa !40
  br label %328

308:                                              ; preds = %168
  %309 = trunc i64 %172 to i32
  br i1 %29, label %314, label %310

310:                                              ; preds = %308
  %311 = getelementptr inbounds i8, ptr %19, i64 %172
  %312 = load i8, ptr %311, align 1, !tbaa !5
  %313 = zext i8 %312 to i32
  br label %314

314:                                              ; preds = %308, %310
  %315 = phi i32 [ %313, %310 ], [ %309, %308 ]
  %316 = add nuw nsw i32 %315, %12
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %struct.x264_cabac_t, ptr %1, i64 0, i32 9, i64 %317
  %319 = load i8, ptr %318, align 1, !tbaa !5
  %320 = zext i8 %319 to i64
  %321 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %320, i64 0
  %322 = load i8, ptr %321, align 2, !tbaa !5
  store i8 %322, ptr %318, align 1, !tbaa !5
  %323 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %320
  %324 = load i16, ptr %323, align 2, !tbaa !37
  %325 = zext i16 %324 to i32
  %326 = load i32, ptr %165, align 16, !tbaa !40
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %165, align 16, !tbaa !40
  br label %328

328:                                              ; preds = %314, %297, %292
  %329 = phi i32 [ %293, %292 ], [ %307, %297 ], [ %327, %314 ]
  %330 = phi i32 [ %296, %292 ], [ %306, %297 ], [ %171, %314 ]
  %331 = icmp sgt i64 %170, 1
  br i1 %331, label %168, label %167, !llvm.loop !457
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @cavlc_mb_mvd(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca [2 x i16], align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull %5) #17
  %6 = zext i32 %1 to i64
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !39
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %6, i64 %10
  %12 = load i16, ptr %11, align 4, !tbaa !37
  %13 = sext i16 %12 to i32
  %14 = load i16, ptr %5, align 4, !tbaa !37
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = shl nsw i32 %16, 1
  %18 = sub nsw i32 1, %17
  %19 = icmp sgt i32 %16, 0
  %20 = select i1 %19, i32 %17, i32 %18
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %27

22:                                               ; preds = %4
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %23
  %25 = load i8, ptr %24, align 1, !tbaa !5
  %26 = zext i8 %25 to i32
  br label %34

27:                                               ; preds = %4
  %28 = lshr i32 %20, 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !5
  %32 = zext i8 %31 to i32
  %33 = add nuw nsw i32 %32, 16
  br label %34

34:                                               ; preds = %22, %27
  %35 = phi i32 [ %26, %22 ], [ %33, %27 ]
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %37 = load i32, ptr %36, align 4, !tbaa !42
  %38 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 %6, i64 %10, i64 1
  %39 = load i16, ptr %38, align 2, !tbaa !37
  %40 = sext i16 %39 to i32
  %41 = getelementptr inbounds [2 x i16], ptr %5, i64 0, i64 1
  %42 = load i16, ptr %41, align 2, !tbaa !37
  %43 = sext i16 %42 to i32
  %44 = sub nsw i32 %40, %43
  %45 = shl nsw i32 %44, 1
  %46 = sub nsw i32 1, %45
  %47 = icmp sgt i32 %44, 0
  %48 = select i1 %47, i32 %45, i32 %46
  %49 = icmp slt i32 %48, 256
  br i1 %49, label %50, label %55

50:                                               ; preds = %34
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %51
  %53 = load i8, ptr %52, align 1, !tbaa !5
  %54 = zext i8 %53 to i32
  br label %62

55:                                               ; preds = %34
  %56 = lshr i32 %48, 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %57
  %59 = load i8, ptr %58, align 1, !tbaa !5
  %60 = zext i8 %59 to i32
  %61 = add nuw nsw i32 %60, 16
  br label %62

62:                                               ; preds = %50, %55
  %63 = phi i32 [ %54, %50 ], [ %61, %55 ]
  %64 = add nsw i32 %37, %35
  %65 = add nsw i32 %63, %64
  store i32 %65, ptr %36, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @cavlc_mb8x8_mvd(ptr noundef %0, i32 noundef %1) unnamed_addr #3 {
  %3 = alloca [2 x i16], align 4
  %4 = alloca [2 x i16], align 4
  %5 = alloca [2 x i16], align 4
  %6 = alloca [2 x i16], align 4
  %7 = alloca [2 x i16], align 4
  %8 = alloca [2 x i16], align 4
  %9 = alloca [2 x i16], align 4
  %10 = alloca [2 x i16], align 4
  %11 = alloca [2 x i16], align 4
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !5
  switch i8 %14, label %554 [
    i8 3, label %15
    i8 1, label %76
    i8 2, label %196
    i8 0, label %316
  ]

15:                                               ; preds = %2
  %16 = shl nsw i32 %1, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %16, i32 noundef 2, ptr noundef nonnull %11) #17
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %17
  %19 = load i32, ptr %18, align 16, !tbaa !39
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %20
  %22 = load i16, ptr %21, align 4, !tbaa !37
  %23 = sext i16 %22 to i32
  %24 = load i16, ptr %11, align 4, !tbaa !37
  %25 = sext i16 %24 to i32
  %26 = sub nsw i32 %23, %25
  %27 = shl nsw i32 %26, 1
  %28 = sub nsw i32 1, %27
  %29 = icmp sgt i32 %26, 0
  %30 = select i1 %29, i32 %27, i32 %28
  %31 = icmp slt i32 %30, 256
  br i1 %31, label %32, label %37

32:                                               ; preds = %15
  %33 = sext i32 %30 to i64
  %34 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !5
  %36 = zext i8 %35 to i32
  br label %44

37:                                               ; preds = %15
  %38 = lshr i32 %30, 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !5
  %42 = zext i8 %41 to i32
  %43 = add nuw nsw i32 %42, 16
  br label %44

44:                                               ; preds = %37, %32
  %45 = phi i32 [ %36, %32 ], [ %43, %37 ]
  %46 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %47 = load i32, ptr %46, align 4, !tbaa !42
  %48 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %20, i64 1
  %49 = load i16, ptr %48, align 2, !tbaa !37
  %50 = sext i16 %49 to i32
  %51 = getelementptr inbounds [2 x i16], ptr %11, i64 0, i64 1
  %52 = load i16, ptr %51, align 2, !tbaa !37
  %53 = sext i16 %52 to i32
  %54 = sub nsw i32 %50, %53
  %55 = shl nsw i32 %54, 1
  %56 = sub nsw i32 1, %55
  %57 = icmp sgt i32 %54, 0
  %58 = select i1 %57, i32 %55, i32 %56
  %59 = icmp slt i32 %58, 256
  br i1 %59, label %60, label %65

60:                                               ; preds = %44
  %61 = sext i32 %58 to i64
  %62 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %61
  %63 = load i8, ptr %62, align 1, !tbaa !5
  %64 = zext i8 %63 to i32
  br label %72

65:                                               ; preds = %44
  %66 = lshr i32 %58, 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !5
  %70 = zext i8 %69 to i32
  %71 = add nuw nsw i32 %70, 16
  br label %72

72:                                               ; preds = %60, %65
  %73 = phi i32 [ %64, %60 ], [ %71, %65 ]
  %74 = add nsw i32 %47, %45
  %75 = add nsw i32 %74, %73
  store i32 %75, ptr %46, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #17
  br label %554

76:                                               ; preds = %2
  %77 = shl nsw i32 %1, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %77, i32 noundef 2, ptr noundef nonnull %10) #17
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %78
  %80 = load i32, ptr %79, align 16, !tbaa !39
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %81
  %83 = load i16, ptr %82, align 4, !tbaa !37
  %84 = sext i16 %83 to i32
  %85 = load i16, ptr %10, align 4, !tbaa !37
  %86 = sext i16 %85 to i32
  %87 = sub nsw i32 %84, %86
  %88 = shl nsw i32 %87, 1
  %89 = sub nsw i32 1, %88
  %90 = icmp sgt i32 %87, 0
  %91 = select i1 %90, i32 %88, i32 %89
  %92 = icmp slt i32 %91, 256
  br i1 %92, label %93, label %98

93:                                               ; preds = %76
  %94 = sext i32 %91 to i64
  %95 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !5
  %97 = zext i8 %96 to i32
  br label %105

98:                                               ; preds = %76
  %99 = lshr i32 %91, 8
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !5
  %103 = zext i8 %102 to i32
  %104 = add nuw nsw i32 %103, 16
  br label %105

105:                                              ; preds = %98, %93
  %106 = phi i32 [ %97, %93 ], [ %104, %98 ]
  %107 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %108 = load i32, ptr %107, align 4, !tbaa !42
  %109 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %81, i64 1
  %110 = load i16, ptr %109, align 2, !tbaa !37
  %111 = sext i16 %110 to i32
  %112 = getelementptr inbounds [2 x i16], ptr %10, i64 0, i64 1
  %113 = load i16, ptr %112, align 2, !tbaa !37
  %114 = sext i16 %113 to i32
  %115 = sub nsw i32 %111, %114
  %116 = shl nsw i32 %115, 1
  %117 = sub nsw i32 1, %116
  %118 = icmp sgt i32 %115, 0
  %119 = select i1 %118, i32 %116, i32 %117
  %120 = icmp slt i32 %119, 256
  br i1 %120, label %121, label %126

121:                                              ; preds = %105
  %122 = sext i32 %119 to i64
  %123 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %122
  %124 = load i8, ptr %123, align 1, !tbaa !5
  %125 = zext i8 %124 to i32
  br label %133

126:                                              ; preds = %105
  %127 = lshr i32 %119, 8
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !5
  %131 = zext i8 %130 to i32
  %132 = add nuw nsw i32 %131, 16
  br label %133

133:                                              ; preds = %121, %126
  %134 = phi i32 [ %125, %121 ], [ %132, %126 ]
  %135 = add nsw i32 %108, %106
  %136 = add nsw i32 %135, %134
  store i32 %136, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #17
  %137 = or i32 %77, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %137, i32 noundef 2, ptr noundef nonnull %9) #17
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %138
  %140 = load i32, ptr %139, align 8, !tbaa !39
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %141
  %143 = load i16, ptr %142, align 4, !tbaa !37
  %144 = sext i16 %143 to i32
  %145 = load i16, ptr %9, align 4, !tbaa !37
  %146 = sext i16 %145 to i32
  %147 = sub nsw i32 %144, %146
  %148 = shl nsw i32 %147, 1
  %149 = sub nsw i32 1, %148
  %150 = icmp sgt i32 %147, 0
  %151 = select i1 %150, i32 %148, i32 %149
  %152 = icmp slt i32 %151, 256
  br i1 %152, label %153, label %158

153:                                              ; preds = %133
  %154 = sext i32 %151 to i64
  %155 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !5
  %157 = zext i8 %156 to i32
  br label %165

158:                                              ; preds = %133
  %159 = lshr i32 %151, 8
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !5
  %163 = zext i8 %162 to i32
  %164 = add nuw nsw i32 %163, 16
  br label %165

165:                                              ; preds = %158, %153
  %166 = phi i32 [ %157, %153 ], [ %164, %158 ]
  %167 = load i32, ptr %107, align 4, !tbaa !42
  %168 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %141, i64 1
  %169 = load i16, ptr %168, align 2, !tbaa !37
  %170 = sext i16 %169 to i32
  %171 = getelementptr inbounds [2 x i16], ptr %9, i64 0, i64 1
  %172 = load i16, ptr %171, align 2, !tbaa !37
  %173 = sext i16 %172 to i32
  %174 = sub nsw i32 %170, %173
  %175 = shl nsw i32 %174, 1
  %176 = sub nsw i32 1, %175
  %177 = icmp sgt i32 %174, 0
  %178 = select i1 %177, i32 %175, i32 %176
  %179 = icmp slt i32 %178, 256
  br i1 %179, label %180, label %185

180:                                              ; preds = %165
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %181
  %183 = load i8, ptr %182, align 1, !tbaa !5
  %184 = zext i8 %183 to i32
  br label %192

185:                                              ; preds = %165
  %186 = lshr i32 %178, 8
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %187
  %189 = load i8, ptr %188, align 1, !tbaa !5
  %190 = zext i8 %189 to i32
  %191 = add nuw nsw i32 %190, 16
  br label %192

192:                                              ; preds = %180, %185
  %193 = phi i32 [ %184, %180 ], [ %191, %185 ]
  %194 = add nsw i32 %167, %166
  %195 = add nsw i32 %194, %193
  store i32 %195, ptr %107, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #17
  br label %554

196:                                              ; preds = %2
  %197 = shl nsw i32 %1, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %197, i32 noundef 1, ptr noundef nonnull %8) #17
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %198
  %200 = load i32, ptr %199, align 16, !tbaa !39
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %201
  %203 = load i16, ptr %202, align 4, !tbaa !37
  %204 = sext i16 %203 to i32
  %205 = load i16, ptr %8, align 4, !tbaa !37
  %206 = sext i16 %205 to i32
  %207 = sub nsw i32 %204, %206
  %208 = shl nsw i32 %207, 1
  %209 = sub nsw i32 1, %208
  %210 = icmp sgt i32 %207, 0
  %211 = select i1 %210, i32 %208, i32 %209
  %212 = icmp slt i32 %211, 256
  br i1 %212, label %213, label %218

213:                                              ; preds = %196
  %214 = sext i32 %211 to i64
  %215 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !5
  %217 = zext i8 %216 to i32
  br label %225

218:                                              ; preds = %196
  %219 = lshr i32 %211, 8
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %220
  %222 = load i8, ptr %221, align 1, !tbaa !5
  %223 = zext i8 %222 to i32
  %224 = add nuw nsw i32 %223, 16
  br label %225

225:                                              ; preds = %218, %213
  %226 = phi i32 [ %217, %213 ], [ %224, %218 ]
  %227 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %228 = load i32, ptr %227, align 4, !tbaa !42
  %229 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %201, i64 1
  %230 = load i16, ptr %229, align 2, !tbaa !37
  %231 = sext i16 %230 to i32
  %232 = getelementptr inbounds [2 x i16], ptr %8, i64 0, i64 1
  %233 = load i16, ptr %232, align 2, !tbaa !37
  %234 = sext i16 %233 to i32
  %235 = sub nsw i32 %231, %234
  %236 = shl nsw i32 %235, 1
  %237 = sub nsw i32 1, %236
  %238 = icmp sgt i32 %235, 0
  %239 = select i1 %238, i32 %236, i32 %237
  %240 = icmp slt i32 %239, 256
  br i1 %240, label %241, label %246

241:                                              ; preds = %225
  %242 = sext i32 %239 to i64
  %243 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %242
  %244 = load i8, ptr %243, align 1, !tbaa !5
  %245 = zext i8 %244 to i32
  br label %253

246:                                              ; preds = %225
  %247 = lshr i32 %239, 8
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !5
  %251 = zext i8 %250 to i32
  %252 = add nuw nsw i32 %251, 16
  br label %253

253:                                              ; preds = %241, %246
  %254 = phi i32 [ %245, %241 ], [ %252, %246 ]
  %255 = add nsw i32 %228, %226
  %256 = add nsw i32 %255, %254
  store i32 %256, ptr %227, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  %257 = or i32 %197, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %257, i32 noundef 1, ptr noundef nonnull %7) #17
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !39
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %261
  %263 = load i16, ptr %262, align 4, !tbaa !37
  %264 = sext i16 %263 to i32
  %265 = load i16, ptr %7, align 4, !tbaa !37
  %266 = sext i16 %265 to i32
  %267 = sub nsw i32 %264, %266
  %268 = shl nsw i32 %267, 1
  %269 = sub nsw i32 1, %268
  %270 = icmp sgt i32 %267, 0
  %271 = select i1 %270, i32 %268, i32 %269
  %272 = icmp slt i32 %271, 256
  br i1 %272, label %273, label %278

273:                                              ; preds = %253
  %274 = sext i32 %271 to i64
  %275 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !5
  %277 = zext i8 %276 to i32
  br label %285

278:                                              ; preds = %253
  %279 = lshr i32 %271, 8
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !5
  %283 = zext i8 %282 to i32
  %284 = add nuw nsw i32 %283, 16
  br label %285

285:                                              ; preds = %278, %273
  %286 = phi i32 [ %277, %273 ], [ %284, %278 ]
  %287 = load i32, ptr %227, align 4, !tbaa !42
  %288 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %261, i64 1
  %289 = load i16, ptr %288, align 2, !tbaa !37
  %290 = sext i16 %289 to i32
  %291 = getelementptr inbounds [2 x i16], ptr %7, i64 0, i64 1
  %292 = load i16, ptr %291, align 2, !tbaa !37
  %293 = sext i16 %292 to i32
  %294 = sub nsw i32 %290, %293
  %295 = shl nsw i32 %294, 1
  %296 = sub nsw i32 1, %295
  %297 = icmp sgt i32 %294, 0
  %298 = select i1 %297, i32 %295, i32 %296
  %299 = icmp slt i32 %298, 256
  br i1 %299, label %300, label %305

300:                                              ; preds = %285
  %301 = sext i32 %298 to i64
  %302 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %301
  %303 = load i8, ptr %302, align 1, !tbaa !5
  %304 = zext i8 %303 to i32
  br label %312

305:                                              ; preds = %285
  %306 = lshr i32 %298, 8
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %307
  %309 = load i8, ptr %308, align 1, !tbaa !5
  %310 = zext i8 %309 to i32
  %311 = add nuw nsw i32 %310, 16
  br label %312

312:                                              ; preds = %300, %305
  %313 = phi i32 [ %304, %300 ], [ %311, %305 ]
  %314 = add nsw i32 %287, %286
  %315 = add nsw i32 %314, %313
  store i32 %315, ptr %227, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #17
  br label %554

316:                                              ; preds = %2
  %317 = shl nsw i32 %1, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %317, i32 noundef 1, ptr noundef nonnull %6) #17
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %318
  %320 = load i32, ptr %319, align 16, !tbaa !39
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %321
  %323 = load i16, ptr %322, align 4, !tbaa !37
  %324 = sext i16 %323 to i32
  %325 = load i16, ptr %6, align 4, !tbaa !37
  %326 = sext i16 %325 to i32
  %327 = sub nsw i32 %324, %326
  %328 = shl nsw i32 %327, 1
  %329 = sub nsw i32 1, %328
  %330 = icmp sgt i32 %327, 0
  %331 = select i1 %330, i32 %328, i32 %329
  %332 = icmp slt i32 %331, 256
  br i1 %332, label %333, label %338

333:                                              ; preds = %316
  %334 = sext i32 %331 to i64
  %335 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %334
  %336 = load i8, ptr %335, align 1, !tbaa !5
  %337 = zext i8 %336 to i32
  br label %345

338:                                              ; preds = %316
  %339 = lshr i32 %331, 8
  %340 = zext i32 %339 to i64
  %341 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %340
  %342 = load i8, ptr %341, align 1, !tbaa !5
  %343 = zext i8 %342 to i32
  %344 = add nuw nsw i32 %343, 16
  br label %345

345:                                              ; preds = %338, %333
  %346 = phi i32 [ %337, %333 ], [ %344, %338 ]
  %347 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %348 = load i32, ptr %347, align 4, !tbaa !42
  %349 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %321, i64 1
  %350 = load i16, ptr %349, align 2, !tbaa !37
  %351 = sext i16 %350 to i32
  %352 = getelementptr inbounds [2 x i16], ptr %6, i64 0, i64 1
  %353 = load i16, ptr %352, align 2, !tbaa !37
  %354 = sext i16 %353 to i32
  %355 = sub nsw i32 %351, %354
  %356 = shl nsw i32 %355, 1
  %357 = sub nsw i32 1, %356
  %358 = icmp sgt i32 %355, 0
  %359 = select i1 %358, i32 %356, i32 %357
  %360 = icmp slt i32 %359, 256
  br i1 %360, label %361, label %366

361:                                              ; preds = %345
  %362 = sext i32 %359 to i64
  %363 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %362
  %364 = load i8, ptr %363, align 1, !tbaa !5
  %365 = zext i8 %364 to i32
  br label %373

366:                                              ; preds = %345
  %367 = lshr i32 %359, 8
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %368
  %370 = load i8, ptr %369, align 1, !tbaa !5
  %371 = zext i8 %370 to i32
  %372 = add nuw nsw i32 %371, 16
  br label %373

373:                                              ; preds = %361, %366
  %374 = phi i32 [ %365, %361 ], [ %372, %366 ]
  %375 = add nsw i32 %348, %346
  %376 = add nsw i32 %375, %374
  store i32 %376, ptr %347, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #17
  %377 = or i32 %317, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %377, i32 noundef 1, ptr noundef nonnull %5) #17
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %378
  %380 = load i32, ptr %379, align 4, !tbaa !39
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %381
  %383 = load i16, ptr %382, align 4, !tbaa !37
  %384 = sext i16 %383 to i32
  %385 = load i16, ptr %5, align 4, !tbaa !37
  %386 = sext i16 %385 to i32
  %387 = sub nsw i32 %384, %386
  %388 = shl nsw i32 %387, 1
  %389 = sub nsw i32 1, %388
  %390 = icmp sgt i32 %387, 0
  %391 = select i1 %390, i32 %388, i32 %389
  %392 = icmp slt i32 %391, 256
  br i1 %392, label %393, label %398

393:                                              ; preds = %373
  %394 = sext i32 %391 to i64
  %395 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %394
  %396 = load i8, ptr %395, align 1, !tbaa !5
  %397 = zext i8 %396 to i32
  br label %405

398:                                              ; preds = %373
  %399 = lshr i32 %391, 8
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %400
  %402 = load i8, ptr %401, align 1, !tbaa !5
  %403 = zext i8 %402 to i32
  %404 = add nuw nsw i32 %403, 16
  br label %405

405:                                              ; preds = %398, %393
  %406 = phi i32 [ %397, %393 ], [ %404, %398 ]
  %407 = load i32, ptr %347, align 4, !tbaa !42
  %408 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %381, i64 1
  %409 = load i16, ptr %408, align 2, !tbaa !37
  %410 = sext i16 %409 to i32
  %411 = getelementptr inbounds [2 x i16], ptr %5, i64 0, i64 1
  %412 = load i16, ptr %411, align 2, !tbaa !37
  %413 = sext i16 %412 to i32
  %414 = sub nsw i32 %410, %413
  %415 = shl nsw i32 %414, 1
  %416 = sub nsw i32 1, %415
  %417 = icmp sgt i32 %414, 0
  %418 = select i1 %417, i32 %415, i32 %416
  %419 = icmp slt i32 %418, 256
  br i1 %419, label %420, label %425

420:                                              ; preds = %405
  %421 = sext i32 %418 to i64
  %422 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %421
  %423 = load i8, ptr %422, align 1, !tbaa !5
  %424 = zext i8 %423 to i32
  br label %432

425:                                              ; preds = %405
  %426 = lshr i32 %418, 8
  %427 = zext i32 %426 to i64
  %428 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %427
  %429 = load i8, ptr %428, align 1, !tbaa !5
  %430 = zext i8 %429 to i32
  %431 = add nuw nsw i32 %430, 16
  br label %432

432:                                              ; preds = %420, %425
  %433 = phi i32 [ %424, %420 ], [ %431, %425 ]
  %434 = add nsw i32 %407, %406
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %347, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #17
  %436 = or i32 %317, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %436, i32 noundef 1, ptr noundef nonnull %4) #17
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %437
  %439 = load i32, ptr %438, align 8, !tbaa !39
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %440
  %442 = load i16, ptr %441, align 4, !tbaa !37
  %443 = sext i16 %442 to i32
  %444 = load i16, ptr %4, align 4, !tbaa !37
  %445 = sext i16 %444 to i32
  %446 = sub nsw i32 %443, %445
  %447 = shl nsw i32 %446, 1
  %448 = sub nsw i32 1, %447
  %449 = icmp sgt i32 %446, 0
  %450 = select i1 %449, i32 %447, i32 %448
  %451 = icmp slt i32 %450, 256
  br i1 %451, label %452, label %457

452:                                              ; preds = %432
  %453 = sext i32 %450 to i64
  %454 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %453
  %455 = load i8, ptr %454, align 1, !tbaa !5
  %456 = zext i8 %455 to i32
  br label %464

457:                                              ; preds = %432
  %458 = lshr i32 %450, 8
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %459
  %461 = load i8, ptr %460, align 1, !tbaa !5
  %462 = zext i8 %461 to i32
  %463 = add nuw nsw i32 %462, 16
  br label %464

464:                                              ; preds = %457, %452
  %465 = phi i32 [ %456, %452 ], [ %463, %457 ]
  %466 = load i32, ptr %347, align 4, !tbaa !42
  %467 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %440, i64 1
  %468 = load i16, ptr %467, align 2, !tbaa !37
  %469 = sext i16 %468 to i32
  %470 = getelementptr inbounds [2 x i16], ptr %4, i64 0, i64 1
  %471 = load i16, ptr %470, align 2, !tbaa !37
  %472 = sext i16 %471 to i32
  %473 = sub nsw i32 %469, %472
  %474 = shl nsw i32 %473, 1
  %475 = sub nsw i32 1, %474
  %476 = icmp sgt i32 %473, 0
  %477 = select i1 %476, i32 %474, i32 %475
  %478 = icmp slt i32 %477, 256
  br i1 %478, label %479, label %484

479:                                              ; preds = %464
  %480 = sext i32 %477 to i64
  %481 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %480
  %482 = load i8, ptr %481, align 1, !tbaa !5
  %483 = zext i8 %482 to i32
  br label %491

484:                                              ; preds = %464
  %485 = lshr i32 %477, 8
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %486
  %488 = load i8, ptr %487, align 1, !tbaa !5
  %489 = zext i8 %488 to i32
  %490 = add nuw nsw i32 %489, 16
  br label %491

491:                                              ; preds = %479, %484
  %492 = phi i32 [ %483, %479 ], [ %490, %484 ]
  %493 = add nsw i32 %466, %465
  %494 = add nsw i32 %493, %492
  store i32 %494, ptr %347, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #17
  %495 = or i32 %317, 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #17
  call void @x264_mb_predict_mv(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %495, i32 noundef 1, ptr noundef nonnull %3) #17
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %496
  %498 = load i32, ptr %497, align 4, !tbaa !39
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %499
  %501 = load i16, ptr %500, align 4, !tbaa !37
  %502 = sext i16 %501 to i32
  %503 = load i16, ptr %3, align 4, !tbaa !37
  %504 = sext i16 %503 to i32
  %505 = sub nsw i32 %502, %504
  %506 = shl nsw i32 %505, 1
  %507 = sub nsw i32 1, %506
  %508 = icmp sgt i32 %505, 0
  %509 = select i1 %508, i32 %506, i32 %507
  %510 = icmp slt i32 %509, 256
  br i1 %510, label %511, label %516

511:                                              ; preds = %491
  %512 = sext i32 %509 to i64
  %513 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %512
  %514 = load i8, ptr %513, align 1, !tbaa !5
  %515 = zext i8 %514 to i32
  br label %523

516:                                              ; preds = %491
  %517 = lshr i32 %509, 8
  %518 = zext i32 %517 to i64
  %519 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %518
  %520 = load i8, ptr %519, align 1, !tbaa !5
  %521 = zext i8 %520 to i32
  %522 = add nuw nsw i32 %521, 16
  br label %523

523:                                              ; preds = %516, %511
  %524 = phi i32 [ %515, %511 ], [ %522, %516 ]
  %525 = load i32, ptr %347, align 4, !tbaa !42
  %526 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %499, i64 1
  %527 = load i16, ptr %526, align 2, !tbaa !37
  %528 = sext i16 %527 to i32
  %529 = getelementptr inbounds [2 x i16], ptr %3, i64 0, i64 1
  %530 = load i16, ptr %529, align 2, !tbaa !37
  %531 = sext i16 %530 to i32
  %532 = sub nsw i32 %528, %531
  %533 = shl nsw i32 %532, 1
  %534 = sub nsw i32 1, %533
  %535 = icmp sgt i32 %532, 0
  %536 = select i1 %535, i32 %533, i32 %534
  %537 = icmp slt i32 %536, 256
  br i1 %537, label %538, label %543

538:                                              ; preds = %523
  %539 = sext i32 %536 to i64
  %540 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %539
  %541 = load i8, ptr %540, align 1, !tbaa !5
  %542 = zext i8 %541 to i32
  br label %550

543:                                              ; preds = %523
  %544 = lshr i32 %536, 8
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %545
  %547 = load i8, ptr %546, align 1, !tbaa !5
  %548 = zext i8 %547 to i32
  %549 = add nuw nsw i32 %548, 16
  br label %550

550:                                              ; preds = %538, %543
  %551 = phi i32 [ %542, %538 ], [ %549, %543 ]
  %552 = add nsw i32 %525, %524
  %553 = add nsw i32 %552, %551
  store i32 %553, ptr %347, align 4, !tbaa !42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #17
  br label %554

554:                                              ; preds = %2, %550, %312, %192, %72
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @block_residual_write_cavlc(ptr nocapture noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca %struct.x264_run_level_t, align 4
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %5) #17
  %6 = getelementptr inbounds %struct.x264_run_level_t, ptr %5, i64 0, i32 1
  %7 = getelementptr inbounds %struct.x264_run_level_t, ptr %5, i64 0, i32 1, i64 1
  store i16 2, ptr %7, align 2, !tbaa !37
  %8 = getelementptr inbounds %struct.x264_run_level_t, ptr %5, i64 0, i32 1, i64 2
  store i16 2, ptr %8, align 4, !tbaa !37
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 73, i32 12, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !46
  %12 = call i32 %11(ptr noundef %2, ptr noundef nonnull %5) #17
  %13 = load i32, ptr %5, align 4, !tbaa !458
  %14 = sub i32 %13, %12
  %15 = add i32 %14, 1
  %16 = load i16, ptr %6, align 4, !tbaa !37
  %17 = sext i16 %16 to i32
  %18 = add nsw i32 %17, 1
  %19 = sub nsw i32 1, %17
  %20 = or i32 %18, %19
  %21 = lshr i32 %20, 31
  %22 = load i16, ptr %7, align 2, !tbaa !37
  %23 = sext i16 %22 to i32
  %24 = add nsw i32 %23, 1
  %25 = sub nsw i32 1, %23
  %26 = or i32 %24, %25
  %27 = lshr i32 %26, 30
  %28 = and i32 %27, 2
  %29 = or i32 %28, %21
  %30 = load i16, ptr %8, align 4, !tbaa !37
  %31 = sext i16 %30 to i32
  %32 = add nsw i32 %31, 1
  %33 = sub nsw i32 1, %31
  %34 = or i32 %32, %33
  %35 = lshr i32 %34, 29
  %36 = and i32 %35, 4
  %37 = or i32 %29, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [8 x i8], ptr @block_residual_write_cavlc.ctz_index, i64 0, i64 %38
  %40 = load i8, ptr %39, align 1, !tbaa !5
  %41 = zext i8 %40 to i32
  %42 = zext i32 %3 to i64
  %43 = add nsw i32 %12, -1
  %44 = sext i32 %43 to i64
  %45 = zext i8 %40 to i64
  %46 = getelementptr inbounds [5 x [16 x [4 x %struct.vlc_t]]], ptr @x264_coeff_token, i64 0, i64 %42, i64 %44, i64 %45, i32 1
  %47 = load i8, ptr %46, align 1, !tbaa !43
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %50 = load i32, ptr %49, align 4, !tbaa !42
  %51 = icmp sgt i32 %12, 10
  %52 = icmp ne i32 %37, 0
  %53 = and i1 %51, %52
  %54 = zext i1 %53 to i32
  %55 = add nuw nsw i32 %48, %41
  %56 = add i32 %55, %50
  store i32 %56, ptr %49, align 4, !tbaa !42
  %57 = icmp sgt i32 %12, %41
  br i1 %57, label %58, label %217

58:                                               ; preds = %4
  %59 = getelementptr inbounds %struct.x264_run_level_t, ptr %5, i64 0, i32 1, i64 %45
  %60 = load i16, ptr %59, align 2, !tbaa !37
  %61 = sext i16 %60 to i32
  %62 = add nsw i32 %61, 64
  %63 = ashr i32 %61, 31
  %64 = or i32 %63, 1
  %65 = select i1 %52, i32 %64, i32 0
  %66 = sub nsw i32 %61, %65
  %67 = icmp ult i32 %62, 128
  br i1 %67, label %68, label %80

68:                                               ; preds = %58
  %69 = add nsw i32 %66, 64
  %70 = zext i1 %53 to i64
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds [7 x [128 x %struct.vlc_large_t]], ptr @x264_level_token, i64 0, i64 %70, i64 %71, i32 1
  %73 = load i8, ptr %72, align 2, !tbaa !460
  %74 = zext i8 %73 to i32
  %75 = add nsw i32 %56, %74
  store i32 %75, ptr %49, align 4, !tbaa !42
  %76 = zext i32 %62 to i64
  %77 = getelementptr inbounds [7 x [128 x %struct.vlc_large_t]], ptr @x264_level_token, i64 0, i64 %70, i64 %76, i32 2
  %78 = load i8, ptr %77, align 1, !tbaa !462
  %79 = zext i8 %78 to i32
  br label %129

80:                                               ; preds = %58
  %81 = ashr i32 %66, 15
  %82 = xor i32 %81, %66
  %83 = sub nsw i32 %82, %81
  %84 = shl nsw i32 %83, 1
  %85 = sub nsw i32 %84, %81
  %86 = add nsw i32 %85, -2
  %87 = ashr i32 %86, %54
  %88 = icmp slt i32 %87, 15
  br i1 %88, label %89, label %93

89:                                               ; preds = %80
  %90 = select i1 %53, i32 2, i32 1
  %91 = add i32 %90, %56
  %92 = add i32 %91, %87
  br label %125

93:                                               ; preds = %80
  %94 = shl nsw i32 -15, %54
  %95 = add i32 %86, %94
  %96 = add nsw i32 %95, -15
  %97 = select i1 %53, i32 %95, i32 %96
  %98 = icmp sgt i32 %97, 4095
  br i1 %98, label %99, label %121

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %101 = load ptr, ptr %100, align 16, !tbaa !169
  %102 = getelementptr inbounds %struct.x264_sps_t, ptr %101, i64 0, i32 1
  %103 = load i32, ptr %102, align 4, !tbaa !463
  %104 = icmp sgt i32 %103, 99
  br i1 %104, label %105, label %116

105:                                              ; preds = %99
  %106 = icmp ugt i32 %97, 4096
  br i1 %106, label %107, label %121

107:                                              ; preds = %105, %107
  %108 = phi i32 [ %114, %107 ], [ 4096, %105 ]
  %109 = phi i32 [ %111, %107 ], [ %97, %105 ]
  %110 = phi i32 [ %112, %107 ], [ 15, %105 ]
  %111 = sub nsw i32 %109, %108
  %112 = add nuw nsw i32 %110, 1
  %113 = add nsw i32 %110, -2
  %114 = shl nuw i32 1, %113
  %115 = icmp sgt i32 %111, %114
  br i1 %115, label %107, label %118, !llvm.loop !464

116:                                              ; preds = %99
  %117 = add nsw i32 %56, 1000000
  br label %121

118:                                              ; preds = %107
  %119 = shl nuw i32 %112, 1
  %120 = add i32 %119, -2
  br label %121

121:                                              ; preds = %118, %116, %105, %93
  %122 = phi i32 [ %117, %116 ], [ %56, %93 ], [ %56, %105 ], [ %56, %118 ]
  %123 = phi i32 [ 28, %116 ], [ 28, %93 ], [ 28, %105 ], [ %120, %118 ]
  %124 = add i32 %123, %122
  br label %125

125:                                              ; preds = %89, %121
  %126 = phi i32 [ %124, %121 ], [ %92, %89 ]
  store i32 %126, ptr %49, align 4, !tbaa !42
  %127 = icmp sgt i32 %83, 3
  %128 = select i1 %127, i32 2, i32 1
  br label %129

129:                                              ; preds = %125, %68
  %130 = phi i32 [ %75, %68 ], [ %126, %125 ]
  %131 = phi i32 [ %79, %68 ], [ %128, %125 ]
  %132 = add nuw nsw i32 %41, 1
  %133 = icmp slt i32 %132, %12
  br i1 %133, label %134, label %217

134:                                              ; preds = %129
  %135 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %136 = add nuw nsw i64 %45, 1
  %137 = zext i32 %12 to i64
  br label %138

138:                                              ; preds = %134, %212
  %139 = phi i32 [ %130, %134 ], [ %213, %212 ]
  %140 = phi i64 [ %136, %134 ], [ %215, %212 ]
  %141 = phi i32 [ %131, %134 ], [ %214, %212 ]
  %142 = getelementptr inbounds %struct.x264_run_level_t, ptr %5, i64 0, i32 1, i64 %140
  %143 = load i16, ptr %142, align 2, !tbaa !37
  %144 = sext i16 %143 to i32
  %145 = add nsw i32 %144, 64
  %146 = icmp ult i32 %145, 128
  br i1 %146, label %147, label %157

147:                                              ; preds = %138
  %148 = sext i32 %141 to i64
  %149 = zext i32 %145 to i64
  %150 = getelementptr inbounds [7 x [128 x %struct.vlc_large_t]], ptr @x264_level_token, i64 0, i64 %148, i64 %149, i32 1
  %151 = load i8, ptr %150, align 2, !tbaa !460
  %152 = zext i8 %151 to i32
  %153 = add nsw i32 %139, %152
  store i32 %153, ptr %49, align 4, !tbaa !42
  %154 = getelementptr inbounds [7 x [128 x %struct.vlc_large_t]], ptr @x264_level_token, i64 0, i64 %148, i64 %149, i32 2
  %155 = load i8, ptr %154, align 1, !tbaa !462
  %156 = zext i8 %155 to i32
  br label %212

157:                                              ; preds = %138
  %158 = ashr i32 %144, 15
  %159 = xor i32 %158, %144
  %160 = sub nsw i32 %159, %158
  %161 = shl nsw i32 %160, 1
  %162 = sub nsw i32 %161, %158
  %163 = add nsw i32 %162, -2
  %164 = ashr i32 %163, %141
  %165 = icmp slt i32 %164, 15
  br i1 %165, label %166, label %170

166:                                              ; preds = %157
  %167 = add i32 %141, 1
  %168 = add i32 %167, %164
  %169 = add nsw i32 %168, %139
  br label %202

170:                                              ; preds = %157
  %171 = shl i32 -15, %141
  %172 = add i32 %163, %171
  %173 = icmp eq i32 %141, 0
  %174 = add nsw i32 %172, -15
  %175 = select i1 %173, i32 %174, i32 %172
  %176 = icmp sgt i32 %175, 4095
  br i1 %176, label %177, label %197

177:                                              ; preds = %170
  %178 = load ptr, ptr %135, align 16, !tbaa !169
  %179 = getelementptr inbounds %struct.x264_sps_t, ptr %178, i64 0, i32 1
  %180 = load i32, ptr %179, align 4, !tbaa !463
  %181 = icmp sgt i32 %180, 99
  br i1 %181, label %182, label %193

182:                                              ; preds = %177
  %183 = icmp ugt i32 %175, 4096
  br i1 %183, label %184, label %197

184:                                              ; preds = %182, %184
  %185 = phi i32 [ %191, %184 ], [ 4096, %182 ]
  %186 = phi i32 [ %188, %184 ], [ %175, %182 ]
  %187 = phi i32 [ %189, %184 ], [ 15, %182 ]
  %188 = sub nsw i32 %186, %185
  %189 = add nuw nsw i32 %187, 1
  %190 = add nsw i32 %187, -2
  %191 = shl nuw i32 1, %190
  %192 = icmp sgt i32 %188, %191
  br i1 %192, label %184, label %195, !llvm.loop !464

193:                                              ; preds = %177
  %194 = add nsw i32 %139, 1000000
  br label %197

195:                                              ; preds = %184
  %196 = shl nuw i32 %189, 1
  br label %197

197:                                              ; preds = %195, %193, %182, %170
  %198 = phi i32 [ %194, %193 ], [ %139, %170 ], [ %139, %182 ], [ %139, %195 ]
  %199 = phi i32 [ 30, %193 ], [ 30, %170 ], [ 30, %182 ], [ %196, %195 ]
  %200 = add i32 %199, -2
  %201 = add i32 %200, %198
  br label %202

202:                                              ; preds = %166, %197
  %203 = phi i32 [ %201, %197 ], [ %169, %166 ]
  store i32 %203, ptr %49, align 4, !tbaa !42
  %204 = call i32 @llvm.umax.i32(i32 %141, i32 1)
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [7 x i16], ptr @block_residual_write_cavlc_escape.next_suffix, i64 0, i64 %205
  %207 = load i16, ptr %206, align 2, !tbaa !37
  %208 = zext i16 %207 to i32
  %209 = icmp sgt i32 %160, %208
  %210 = zext i1 %209 to i32
  %211 = add nsw i32 %204, %210
  br label %212

212:                                              ; preds = %147, %202
  %213 = phi i32 [ %153, %147 ], [ %203, %202 ]
  %214 = phi i32 [ %156, %147 ], [ %211, %202 ]
  %215 = add nuw nsw i64 %140, 1
  %216 = icmp eq i64 %215, %137
  br i1 %216, label %217, label %138, !llvm.loop !465

217:                                              ; preds = %212, %129, %4
  %218 = phi i32 [ %130, %129 ], [ %56, %4 ], [ %213, %212 ]
  %219 = and i32 %12, 255
  %220 = getelementptr inbounds [5 x i8], ptr @block_residual_write_cavlc.count_cat, i64 0, i64 %9
  %221 = load i8, ptr %220, align 1, !tbaa !5
  %222 = zext i8 %221 to i32
  %223 = icmp ult i32 %219, %222
  br i1 %223, label %224, label %233

224:                                              ; preds = %217
  %225 = icmp eq i32 %1, 3
  %226 = sext i32 %15 to i64
  %227 = getelementptr inbounds [3 x [4 x %struct.vlc_t]], ptr @x264_total_zeros_dc, i64 0, i64 %44, i64 %226, i32 1
  %228 = getelementptr inbounds [15 x [16 x %struct.vlc_t]], ptr @x264_total_zeros, i64 0, i64 %44, i64 %226, i32 1
  %229 = select i1 %225, ptr %227, ptr %228
  %230 = load i8, ptr %229, align 1, !tbaa !43
  %231 = zext i8 %230 to i32
  %232 = add nsw i32 %218, %231
  store i32 %232, ptr %49, align 4, !tbaa !42
  br label %233

233:                                              ; preds = %224, %217
  %234 = phi i32 [ %218, %217 ], [ %232, %224 ]
  %235 = icmp sgt i32 %12, 1
  %236 = icmp ult i32 %14, 2147483647
  %237 = select i1 %235, i1 %236, i1 false
  br i1 %237, label %240, label %239

238:                                              ; preds = %240
  store i32 %253, ptr %49, align 4, !tbaa !42
  br label %239

239:                                              ; preds = %238, %233
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %5) #17
  ret i32 %12

240:                                              ; preds = %233, %240
  %241 = phi i64 [ %256, %240 ], [ 0, %233 ]
  %242 = phi i32 [ %253, %240 ], [ %234, %233 ]
  %243 = phi i32 [ %255, %240 ], [ %15, %233 ]
  %244 = call i32 @llvm.smin.i32(i32 %243, i32 7)
  %245 = add nsw i32 %244, -1
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds %struct.x264_run_level_t, ptr %5, i64 0, i32 2, i64 %241
  %248 = load i8, ptr %247, align 1, !tbaa !5
  %249 = zext i8 %248 to i64
  %250 = getelementptr inbounds [7 x [16 x %struct.vlc_t]], ptr @x264_run_before, i64 0, i64 %246, i64 %249, i32 1
  %251 = load i8, ptr %250, align 1, !tbaa !43
  %252 = zext i8 %251 to i32
  %253 = add nsw i32 %242, %252
  %254 = zext i8 %248 to i32
  %255 = sub nsw i32 %243, %254
  %256 = add nuw nsw i64 %241, 1
  %257 = icmp slt i64 %256, %44
  %258 = icmp sgt i32 %255, 0
  %259 = select i1 %257, i1 %258, i1 false
  br i1 %259, label %240, label %238, !llvm.loop !466
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @x264_macroblock_luma_write_cavlc(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 56
  %5 = load i32, ptr %4, align 4, !tbaa !51
  %6 = icmp eq i32 %5, 0
  %7 = icmp sgt i32 %1, %2
  %8 = or i1 %6, %7
  br i1 %8, label %35, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %11 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 72, i32 5
  %12 = sext i32 %1 to i64
  %13 = add i32 %2, 1
  br label %14

14:                                               ; preds = %9, %31
  %15 = phi i64 [ %12, %9 ], [ %32, %31 ]
  %16 = load i32, ptr %10, align 8, !tbaa !45
  %17 = trunc i64 %15 to i32
  %18 = shl nuw i32 1, %17
  %19 = and i32 %16, %18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %14
  %22 = load ptr, ptr %11, align 8, !tbaa !467
  %23 = shl nsw i32 %17, 2
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %24
  %26 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 2, i64 %15
  %27 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %24
  %28 = load i32, ptr %27, align 16, !tbaa !39
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %29
  tail call void %22(ptr noundef nonnull %25, ptr noundef nonnull %26, ptr noundef nonnull %30) #17
  br label %31

31:                                               ; preds = %14, %21
  %32 = add nsw i64 %15, 1
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %13, %33
  br i1 %34, label %35, label %14, !llvm.loop !468

35:                                               ; preds = %31, %3
  br i1 %7, label %41, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 57
  %38 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  %39 = zext i32 %1 to i64
  %40 = add i32 %2, 1
  br label %42

41:                                               ; preds = %206, %35
  ret void

42:                                               ; preds = %36, %206
  %43 = phi i64 [ %39, %36 ], [ %207, %206 ]
  %44 = load i32, ptr %37, align 8, !tbaa !45
  %45 = trunc i64 %43 to i32
  %46 = shl nuw i32 1, %45
  %47 = and i32 %44, %46
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %206, label %49

49:                                               ; preds = %42
  %50 = shl nsw i32 %45, 2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %51
  %53 = load i32, ptr %52, align 16, !tbaa !39
  %54 = add nsw i32 %53, -1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !5
  %58 = zext i8 %57 to i32
  %59 = add nsw i32 %53, -8
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %60
  %62 = load i8, ptr %61, align 1, !tbaa !5
  %63 = zext i8 %62 to i32
  %64 = add nuw nsw i32 %63, %58
  %65 = icmp ult i32 %64, 128
  %66 = add nuw nsw i32 %64, 1
  %67 = lshr i32 %66, 1
  %68 = select i1 %65, i32 %67, i32 %64
  %69 = and i32 %68, 127
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %70
  %72 = load i8, ptr %71, align 1, !tbaa !5
  %73 = sext i32 %53 to i64
  %74 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !5
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %49
  %78 = zext i8 %72 to i64
  %79 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %78, i32 1
  %80 = load i8, ptr %79, align 1, !tbaa !43
  %81 = zext i8 %80 to i32
  %82 = load i32, ptr %38, align 4, !tbaa !41
  %83 = add nsw i32 %82, %81
  store i32 %83, ptr %38, align 4, !tbaa !41
  br label %89

84:                                               ; preds = %49
  %85 = zext i8 %72 to i32
  %86 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %51
  %87 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %86, i32 noundef %85)
  %88 = trunc i32 %87 to i8
  store i8 %88, ptr %74, align 1, !tbaa !5
  br label %89

89:                                               ; preds = %84, %77
  %90 = or i64 %51, 1
  %91 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !39
  %93 = add nsw i32 %92, -1
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !5
  %97 = zext i8 %96 to i32
  %98 = add nsw i32 %92, -8
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !5
  %102 = zext i8 %101 to i32
  %103 = add nuw nsw i32 %102, %97
  %104 = icmp ult i32 %103, 128
  %105 = add nuw nsw i32 %103, 1
  %106 = lshr i32 %105, 1
  %107 = select i1 %104, i32 %106, i32 %103
  %108 = and i32 %107, 127
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %109
  %111 = load i8, ptr %110, align 1, !tbaa !5
  %112 = sext i32 %92 to i64
  %113 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !5
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %89
  %117 = zext i8 %111 to i32
  %118 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %90
  %119 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %118, i32 noundef %117)
  %120 = trunc i32 %119 to i8
  store i8 %120, ptr %113, align 1, !tbaa !5
  br label %128

121:                                              ; preds = %89
  %122 = zext i8 %111 to i64
  %123 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %122, i32 1
  %124 = load i8, ptr %123, align 1, !tbaa !43
  %125 = zext i8 %124 to i32
  %126 = load i32, ptr %38, align 4, !tbaa !41
  %127 = add nsw i32 %126, %125
  store i32 %127, ptr %38, align 4, !tbaa !41
  br label %128

128:                                              ; preds = %121, %116
  %129 = or i64 %51, 2
  %130 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %129
  %131 = load i32, ptr %130, align 8, !tbaa !39
  %132 = add nsw i32 %131, -1
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %133
  %135 = load i8, ptr %134, align 1, !tbaa !5
  %136 = zext i8 %135 to i32
  %137 = add nsw i32 %131, -8
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !5
  %141 = zext i8 %140 to i32
  %142 = add nuw nsw i32 %141, %136
  %143 = icmp ult i32 %142, 128
  %144 = add nuw nsw i32 %142, 1
  %145 = lshr i32 %144, 1
  %146 = select i1 %143, i32 %145, i32 %142
  %147 = and i32 %146, 127
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !5
  %151 = sext i32 %131 to i64
  %152 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %151
  %153 = load i8, ptr %152, align 1, !tbaa !5
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %128
  %156 = zext i8 %150 to i32
  %157 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %129
  %158 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %157, i32 noundef %156)
  %159 = trunc i32 %158 to i8
  store i8 %159, ptr %152, align 1, !tbaa !5
  br label %167

160:                                              ; preds = %128
  %161 = zext i8 %150 to i64
  %162 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %161, i32 1
  %163 = load i8, ptr %162, align 1, !tbaa !43
  %164 = zext i8 %163 to i32
  %165 = load i32, ptr %38, align 4, !tbaa !41
  %166 = add nsw i32 %165, %164
  store i32 %166, ptr %38, align 4, !tbaa !41
  br label %167

167:                                              ; preds = %160, %155
  %168 = or i64 %51, 3
  %169 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %168
  %170 = load i32, ptr %169, align 4, !tbaa !39
  %171 = add nsw i32 %170, -1
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %172
  %174 = load i8, ptr %173, align 1, !tbaa !5
  %175 = zext i8 %174 to i32
  %176 = add nsw i32 %170, -8
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %177
  %179 = load i8, ptr %178, align 1, !tbaa !5
  %180 = zext i8 %179 to i32
  %181 = add nuw nsw i32 %180, %175
  %182 = icmp ult i32 %181, 128
  %183 = add nuw nsw i32 %181, 1
  %184 = lshr i32 %183, 1
  %185 = select i1 %182, i32 %184, i32 %181
  %186 = and i32 %185, 127
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %187
  %189 = load i8, ptr %188, align 1, !tbaa !5
  %190 = sext i32 %170 to i64
  %191 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %190
  %192 = load i8, ptr %191, align 1, !tbaa !5
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %199, label %194

194:                                              ; preds = %167
  %195 = zext i8 %189 to i32
  %196 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %168
  %197 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %196, i32 noundef %195)
  %198 = trunc i32 %197 to i8
  store i8 %198, ptr %191, align 1, !tbaa !5
  br label %206

199:                                              ; preds = %167
  %200 = zext i8 %189 to i64
  %201 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %200, i32 1
  %202 = load i8, ptr %201, align 1, !tbaa !43
  %203 = zext i8 %202 to i32
  %204 = load i32, ptr %38, align 4, !tbaa !41
  %205 = add nsw i32 %204, %203
  store i32 %205, ptr %38, align 4, !tbaa !41
  br label %206

206:                                              ; preds = %194, %199, %42
  %207 = add i64 %43, 1
  %208 = trunc i64 %207 to i32
  %209 = icmp eq i32 %40, %208
  br i1 %209, label %41, label %42, !llvm.loop !469
}

declare void @x264_macroblock_encode_p4x4(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @x264_frame_cond_wait(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @x264_predict_lossless_16x16(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @x264_predict_lossless_8x8(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

declare void @x264_mb_encode_i8x8(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare void @x264_predict_lossless_4x4(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare void @x264_mb_encode_i4x4(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @x264_rd_cost_i8x8_chroma(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca %struct.x264_cabac_t, align 16
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 69
  %9 = load i32, ptr %8, align 4, !tbaa !151
  tail call void @x264_mb_encode_8x8_chroma(ptr noundef %0, i32 noundef 0, i32 noundef %9) #17
  br label %10

10:                                               ; preds = %7, %4
  %11 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 1
  %12 = load ptr, ptr %11, align 8, !tbaa !46
  %13 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 1, i64 3
  %16 = load ptr, ptr %15, align 8, !tbaa !46
  %17 = tail call i32 %16(ptr noundef %14, i32 noundef 16, ptr noundef %12, i32 noundef 32) #17
  %18 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 18, i64 2
  %19 = load ptr, ptr %18, align 8, !tbaa !46
  %20 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %21 = load ptr, ptr %20, align 8, !tbaa !46
  %22 = load ptr, ptr %15, align 8, !tbaa !46
  %23 = tail call i32 %22(ptr noundef %21, i32 noundef 16, ptr noundef %19, i32 noundef 32) #17
  %24 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 60
  store i32 %2, ptr %24, align 4, !tbaa !72
  %25 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 24
  %26 = load i32, ptr %25, align 16, !tbaa !8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %280, label %28

28:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %5) #17
  %29 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 10
  %30 = load ptr, ptr %29, align 8, !tbaa !48
  %31 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 8
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 42, i32 8
  %33 = call ptr %30(ptr noundef nonnull %31, ptr noundef nonnull %32, i64 noundef 464) #17
  %34 = load i32, ptr %24, align 4, !tbaa !72
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 24
  %37 = load i32, ptr %36, align 8, !tbaa !442
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %28
  %41 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 44
  %42 = load ptr, ptr %41, align 8, !tbaa !445
  %43 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 34
  %44 = load i32, ptr %43, align 8, !tbaa !446
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, ptr %42, i64 %45
  %47 = load i8, ptr %46, align 1, !tbaa !5
  %48 = icmp ne i8 %47, 0
  %49 = zext i1 %48 to i32
  br label %50

50:                                               ; preds = %40, %28
  %51 = phi i32 [ 0, %28 ], [ %49, %40 ]
  %52 = and i32 %37, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 44
  %56 = load ptr, ptr %55, align 8, !tbaa !445
  %57 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 35
  %58 = load i32, ptr %57, align 4, !tbaa !447
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, ptr %56, i64 %59
  %61 = load i8, ptr %60, align 1, !tbaa !5
  %62 = icmp ne i8 %61, 0
  %63 = zext i1 %62 to i32
  %64 = add nuw nsw i32 %51, %63
  br label %65

65:                                               ; preds = %54, %50
  %66 = phi i32 [ %51, %50 ], [ %64, %54 ]
  %67 = add nuw nsw i32 %66, 64
  %68 = zext i32 %67 to i64
  %69 = add nsw i64 %35, -1
  %70 = icmp ult i64 %69, 3
  %71 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 9, i64 %68
  %72 = load i8, ptr %71, align 1, !tbaa !5
  %73 = zext i1 %70 to i8
  %74 = xor i8 %72, %73
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %75
  %77 = load i16, ptr %76, align 2, !tbaa !37
  %78 = zext i16 %77 to i32
  %79 = load i32, ptr %31, align 16, !tbaa !40
  %80 = add nsw i32 %79, %78
  br i1 %70, label %81, label %104

81:                                               ; preds = %65
  %82 = and i32 %34, -2
  %83 = icmp eq i32 %82, 2
  %84 = zext i1 %83 to i64
  %85 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 9, i64 67
  %86 = load i8, ptr %85, align 1, !tbaa !5
  %87 = zext i8 %86 to i64
  %88 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %87, i64 %84
  %89 = load i8, ptr %88, align 1, !tbaa !5
  store i8 %89, ptr %85, align 1, !tbaa !5
  %90 = xor i64 %87, %84
  %91 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %90
  %92 = load i16, ptr %91, align 2, !tbaa !37
  %93 = zext i16 %92 to i32
  %94 = add nsw i32 %80, %93
  br i1 %83, label %95, label %104

95:                                               ; preds = %81
  %96 = icmp eq i32 %34, 3
  %97 = zext i1 %96 to i8
  %98 = xor i8 %89, %97
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %99
  %101 = load i16, ptr %100, align 2, !tbaa !37
  %102 = zext i16 %101 to i32
  %103 = add nsw i32 %94, %102
  br label %104

104:                                              ; preds = %95, %81, %65
  %105 = phi i32 [ %80, %65 ], [ %94, %81 ], [ %103, %95 ]
  %106 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 14
  %107 = load i32, ptr %106, align 4, !tbaa !289
  %108 = and i32 %107, 48
  %109 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 13
  %110 = load i32, ptr %109, align 16, !tbaa !290
  %111 = and i32 %110, 48
  %112 = icmp ne i32 %108, 0
  %113 = icmp ne i32 %107, -1
  %114 = and i1 %113, %112
  %115 = zext i1 %114 to i32
  %116 = icmp eq i32 %111, 0
  %117 = icmp eq i32 %110, -1
  %118 = or i32 %115, 2
  %119 = or i1 %117, %116
  %120 = select i1 %119, i32 %115, i32 %118
  %121 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %122 = load i32, ptr %121, align 4, !tbaa !71
  %123 = icmp eq i32 %122, 0
  %124 = add nuw nsw i32 %120, 77
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 9, i64 %125
  %127 = load i8, ptr %126, align 1, !tbaa !5
  br i1 %123, label %128, label %134

128:                                              ; preds = %104
  %129 = zext i8 %127 to i64
  %130 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %129
  %131 = load i16, ptr %130, align 2, !tbaa !37
  %132 = zext i16 %131 to i32
  %133 = add nsw i32 %105, %132
  store i32 %133, ptr %31, align 16, !tbaa !40
  br label %273

134:                                              ; preds = %104
  %135 = xor i8 %127, 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %136
  %138 = load i16, ptr %137, align 2, !tbaa !37
  %139 = zext i16 %138 to i32
  %140 = add nsw i32 %105, %139
  %141 = icmp eq i32 %108, 32
  %142 = select i1 %141, i32 5, i32 4
  %143 = icmp eq i32 %111, 32
  %144 = or i32 %142, 2
  %145 = select i1 %143, i32 %144, i32 %142
  %146 = add nuw nsw i32 %145, 77
  %147 = zext i32 %146 to i64
  %148 = ashr i32 %122, 1
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 9, i64 %147
  %151 = load i8, ptr %150, align 1, !tbaa !5
  %152 = zext i8 %151 to i64
  %153 = xor i64 %152, %149
  %154 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %153
  %155 = load i16, ptr %154, align 2, !tbaa !37
  %156 = zext i16 %155 to i32
  %157 = add nsw i32 %140, %156
  store i32 %157, ptr %31, align 16, !tbaa !40
  %158 = icmp sgt i32 %122, 0
  br i1 %158, label %159, label %273

159:                                              ; preds = %134
  %160 = lshr i32 %107, 9
  %161 = and i32 %160, 1
  %162 = lshr i32 %110, 8
  %163 = and i32 %162, 2
  %164 = add nuw nsw i32 %161, 97
  %165 = add nuw nsw i32 %164, %163
  %166 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 46
  %167 = load i8, ptr %166, align 1, !tbaa !5
  %168 = icmp eq i8 %167, 0
  %169 = zext i32 %165 to i64
  %170 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 9, i64 %169
  %171 = load i8, ptr %170, align 1, !tbaa !5
  %172 = zext i8 %171 to i64
  br i1 %168, label %184, label %173

173:                                              ; preds = %159
  %174 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %172, i64 1
  %175 = load i8, ptr %174, align 1, !tbaa !5
  store i8 %175, ptr %170, align 1, !tbaa !5
  %176 = xor i64 %172, 1
  %177 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %176
  %178 = load i16, ptr %177, align 2, !tbaa !37
  %179 = zext i16 %178 to i32
  %180 = add nsw i32 %157, %179
  store i32 %180, ptr %31, align 16, !tbaa !40
  %181 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 3, ptr noundef nonnull %181, i32 noundef 0)
  %182 = load i32, ptr %106, align 4, !tbaa !289
  %183 = load i32, ptr %109, align 16, !tbaa !290
  br label %191

184:                                              ; preds = %159
  %185 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %172, i64 0
  %186 = load i8, ptr %185, align 2, !tbaa !5
  store i8 %186, ptr %170, align 1, !tbaa !5
  %187 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %172
  %188 = load i16, ptr %187, align 2, !tbaa !37
  %189 = zext i16 %188 to i32
  %190 = add nsw i32 %157, %189
  store i32 %190, ptr %31, align 16, !tbaa !40
  br label %191

191:                                              ; preds = %184, %173
  %192 = phi i32 [ %110, %184 ], [ %183, %173 ]
  %193 = phi i32 [ %107, %184 ], [ %182, %173 ]
  %194 = lshr i32 %193, 10
  %195 = and i32 %194, 1
  %196 = lshr i32 %192, 9
  %197 = and i32 %196, 2
  %198 = add nuw nsw i32 %195, 97
  %199 = add nuw nsw i32 %198, %197
  %200 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 47
  %201 = load i8, ptr %200, align 1, !tbaa !5
  %202 = icmp eq i8 %201, 0
  %203 = zext i32 %199 to i64
  %204 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 9, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !5
  %206 = zext i8 %205 to i64
  br i1 %202, label %217, label %207

207:                                              ; preds = %191
  %208 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %206, i64 1
  %209 = load i8, ptr %208, align 1, !tbaa !5
  store i8 %209, ptr %204, align 1, !tbaa !5
  %210 = xor i64 %206, 1
  %211 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %210
  %212 = load i16, ptr %211, align 2, !tbaa !37
  %213 = zext i16 %212 to i32
  %214 = load i32, ptr %31, align 16, !tbaa !40
  %215 = add nsw i32 %214, %213
  store i32 %215, ptr %31, align 16, !tbaa !40
  %216 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 3, ptr noundef nonnull %216, i32 noundef 0)
  br label %225

217:                                              ; preds = %191
  %218 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %206, i64 0
  %219 = load i8, ptr %218, align 2, !tbaa !5
  store i8 %219, ptr %204, align 1, !tbaa !5
  %220 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %206
  %221 = load i16, ptr %220, align 2, !tbaa !37
  %222 = zext i16 %221 to i32
  %223 = load i32, ptr %31, align 16, !tbaa !40
  %224 = add nsw i32 %223, %222
  store i32 %224, ptr %31, align 16, !tbaa !40
  br label %225

225:                                              ; preds = %217, %207
  %226 = load i32, ptr %121, align 4, !tbaa !71
  %227 = icmp eq i32 %226, 2
  br i1 %227, label %228, label %273

228:                                              ; preds = %225, %270
  %229 = phi i64 [ %271, %270 ], [ 16, %225 ]
  %230 = getelementptr inbounds [27 x i32], ptr @x264_scan8, i64 0, i64 %229
  %231 = load i32, ptr %230, align 4, !tbaa !39
  %232 = add nsw i32 %231, -1
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %233
  %235 = load i8, ptr %234, align 1, !tbaa !5
  %236 = add nsw i32 %231, -8
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %237
  %239 = load i8, ptr %238, align 1, !tbaa !5
  %240 = icmp eq i8 %239, 0
  %241 = select i1 %240, i64 0, i64 2
  %242 = icmp eq i8 %235, 0
  %243 = select i1 %242, i64 101, i64 102
  %244 = add nuw nsw i64 %241, %243
  %245 = sext i32 %231 to i64
  %246 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !5
  %248 = icmp eq i8 %247, 0
  %249 = getelementptr inbounds %struct.x264_cabac_t, ptr %5, i64 0, i32 9, i64 %244
  %250 = load i8, ptr %249, align 1, !tbaa !5
  %251 = zext i8 %250 to i64
  br i1 %248, label %262, label %252

252:                                              ; preds = %228
  %253 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %251, i64 1
  %254 = load i8, ptr %253, align 1, !tbaa !5
  store i8 %254, ptr %249, align 1, !tbaa !5
  %255 = xor i64 %251, 1
  %256 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %255
  %257 = load i16, ptr %256, align 2, !tbaa !37
  %258 = zext i16 %257 to i32
  %259 = load i32, ptr %31, align 16, !tbaa !40
  %260 = add nsw i32 %259, %258
  store i32 %260, ptr %31, align 16, !tbaa !40
  %261 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 %229, i64 1
  call fastcc void @block_residual_write_cabac_internal(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 4, ptr noundef nonnull %261, i32 noundef 0)
  br label %270

262:                                              ; preds = %228
  %263 = getelementptr inbounds [128 x [2 x i8]], ptr @x264_cabac_transition, i64 0, i64 %251, i64 0
  %264 = load i8, ptr %263, align 2, !tbaa !5
  store i8 %264, ptr %249, align 1, !tbaa !5
  %265 = getelementptr inbounds [128 x i16], ptr @x264_cabac_entropy, i64 0, i64 %251
  %266 = load i16, ptr %265, align 2, !tbaa !37
  %267 = zext i16 %266 to i32
  %268 = load i32, ptr %31, align 16, !tbaa !40
  %269 = add nsw i32 %268, %267
  store i32 %269, ptr %31, align 16, !tbaa !40
  br label %270

270:                                              ; preds = %262, %252
  %271 = add nuw nsw i64 %229, 1
  %272 = icmp eq i64 %271, 24
  br i1 %272, label %273, label %228, !llvm.loop !470

273:                                              ; preds = %270, %128, %134, %225
  %274 = load i32, ptr %31, align 16, !tbaa !40
  %275 = sext i32 %274 to i64
  %276 = sext i32 %1 to i64
  %277 = mul nsw i64 %275, %276
  %278 = add nsw i64 %277, 128
  %279 = lshr i64 %278, 8
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %5) #17
  br label %571

280:                                              ; preds = %10
  %281 = sext i32 %2 to i64
  %282 = getelementptr inbounds [7 x i8], ptr @x264_mb_pred_mode8x8c_fix, i64 0, i64 %281
  %283 = load i8, ptr %282, align 1, !tbaa !5
  %284 = zext i8 %283 to i64
  %285 = add nuw nsw i64 %284, 1
  %286 = getelementptr inbounds [256 x i8], ptr @x264_ue_size_tab, i64 0, i64 %285
  %287 = load i8, ptr %286, align 1, !tbaa !5
  %288 = zext i8 %287 to i32
  %289 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 7, i32 5, i32 5
  store i32 %288, ptr %289, align 4, !tbaa !41
  %290 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 58
  %291 = load i32, ptr %290, align 4, !tbaa !71
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %567, label %293

293:                                              ; preds = %280
  %294 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 46
  %295 = load i8, ptr %294, align 1, !tbaa !5
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %297, label %301

297:                                              ; preds = %293
  %298 = load i8, ptr getelementptr inbounds ([5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 4, i32 1), align 1, !tbaa !43
  %299 = zext i8 %298 to i32
  %300 = add nuw nsw i32 %299, %288
  store i32 %300, ptr %289, align 4, !tbaa !41
  br label %305

301:                                              ; preds = %293
  %302 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1
  %303 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 3, ptr noundef nonnull %302, i32 noundef 4)
  %304 = trunc i32 %303 to i8
  store i8 %304, ptr %294, align 1, !tbaa !5
  br label %305

305:                                              ; preds = %301, %297
  %306 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 47
  %307 = load i8, ptr %306, align 1, !tbaa !5
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %309, label %314

309:                                              ; preds = %305
  %310 = load i8, ptr getelementptr inbounds ([5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 4, i32 1), align 1, !tbaa !43
  %311 = zext i8 %310 to i32
  %312 = load i32, ptr %289, align 4, !tbaa !41
  %313 = add nsw i32 %312, %311
  store i32 %313, ptr %289, align 4, !tbaa !41
  br label %318

314:                                              ; preds = %305
  %315 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 1, i64 1
  %316 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 3, ptr noundef nonnull %315, i32 noundef 4)
  %317 = trunc i32 %316 to i8
  store i8 %317, ptr %306, align 1, !tbaa !5
  br label %318

318:                                              ; preds = %314, %309
  %319 = load i32, ptr %290, align 4, !tbaa !71
  %320 = icmp eq i32 %319, 2
  br i1 %320, label %321, label %567

321:                                              ; preds = %318
  %322 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 8
  %323 = load i8, ptr %322, align 1, !tbaa !5
  %324 = zext i8 %323 to i32
  %325 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 1
  %326 = load i8, ptr %325, align 1, !tbaa !5
  %327 = zext i8 %326 to i32
  %328 = add nuw nsw i32 %327, %324
  %329 = icmp ult i32 %328, 128
  %330 = add nuw nsw i32 %328, 1
  %331 = lshr i32 %330, 1
  %332 = select i1 %329, i32 %331, i32 %328
  %333 = and i32 %332, 127
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %334
  %336 = load i8, ptr %335, align 1, !tbaa !5
  %337 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 9
  %338 = load i8, ptr %337, align 1, !tbaa !5
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %340, label %347

340:                                              ; preds = %321
  %341 = zext i8 %336 to i64
  %342 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %341, i32 1
  %343 = load i8, ptr %342, align 1, !tbaa !43
  %344 = zext i8 %343 to i32
  %345 = load i32, ptr %289, align 4, !tbaa !41
  %346 = add nsw i32 %345, %344
  store i32 %346, ptr %289, align 4, !tbaa !41
  br label %353

347:                                              ; preds = %321
  %348 = zext i8 %336 to i32
  %349 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 16, i64 1
  %350 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %349, i32 noundef %348)
  %351 = trunc i32 %350 to i8
  store i8 %351, ptr %337, align 1, !tbaa !5
  %352 = and i32 %350, 255
  br label %353

353:                                              ; preds = %347, %340
  %354 = phi i32 [ %352, %347 ], [ 0, %340 ]
  %355 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 2
  %356 = load i8, ptr %355, align 1, !tbaa !5
  %357 = zext i8 %356 to i32
  %358 = add nuw nsw i32 %354, %357
  %359 = icmp ult i32 %358, 128
  %360 = add nuw nsw i32 %358, 1
  %361 = lshr i32 %360, 1
  %362 = select i1 %359, i32 %361, i32 %358
  %363 = and i32 %362, 127
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %364
  %366 = load i8, ptr %365, align 1, !tbaa !5
  %367 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 10
  %368 = load i8, ptr %367, align 1, !tbaa !5
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %377, label %370

370:                                              ; preds = %353
  %371 = zext i8 %366 to i32
  %372 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 17, i64 1
  %373 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %372, i32 noundef %371)
  %374 = trunc i32 %373 to i8
  store i8 %374, ptr %367, align 1, !tbaa !5
  %375 = load i8, ptr %337, align 1, !tbaa !5
  %376 = zext i8 %375 to i32
  br label %384

377:                                              ; preds = %353
  %378 = zext i8 %366 to i64
  %379 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %378, i32 1
  %380 = load i8, ptr %379, align 1, !tbaa !43
  %381 = zext i8 %380 to i32
  %382 = load i32, ptr %289, align 4, !tbaa !41
  %383 = add nsw i32 %382, %381
  store i32 %383, ptr %289, align 4, !tbaa !41
  br label %384

384:                                              ; preds = %377, %370
  %385 = phi i32 [ %354, %377 ], [ %376, %370 ]
  %386 = phi i8 [ 0, %377 ], [ %374, %370 ]
  %387 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 16
  %388 = load i8, ptr %387, align 1, !tbaa !5
  %389 = zext i8 %388 to i32
  %390 = add nuw nsw i32 %385, %389
  %391 = icmp ult i32 %390, 128
  %392 = add nuw nsw i32 %390, 1
  %393 = lshr i32 %392, 1
  %394 = select i1 %391, i32 %393, i32 %390
  %395 = and i32 %394, 127
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %396
  %398 = load i8, ptr %397, align 1, !tbaa !5
  %399 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 17
  %400 = load i8, ptr %399, align 1, !tbaa !5
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %409, label %402

402:                                              ; preds = %384
  %403 = zext i8 %398 to i32
  %404 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 18, i64 1
  %405 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %404, i32 noundef %403)
  %406 = trunc i32 %405 to i8
  store i8 %406, ptr %399, align 1, !tbaa !5
  %407 = load i8, ptr %367, align 1, !tbaa !5
  %408 = and i32 %405, 255
  br label %416

409:                                              ; preds = %384
  %410 = zext i8 %398 to i64
  %411 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %410, i32 1
  %412 = load i8, ptr %411, align 1, !tbaa !43
  %413 = zext i8 %412 to i32
  %414 = load i32, ptr %289, align 4, !tbaa !41
  %415 = add nsw i32 %414, %413
  store i32 %415, ptr %289, align 4, !tbaa !41
  br label %416

416:                                              ; preds = %409, %402
  %417 = phi i8 [ %386, %409 ], [ %407, %402 ]
  %418 = phi i32 [ 0, %409 ], [ %408, %402 ]
  %419 = zext i8 %417 to i32
  %420 = add nuw nsw i32 %418, %419
  %421 = icmp ult i32 %420, 128
  %422 = add nuw nsw i32 %420, 1
  %423 = lshr i32 %422, 1
  %424 = select i1 %421, i32 %423, i32 %420
  %425 = and i32 %424, 127
  %426 = zext i32 %425 to i64
  %427 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %426
  %428 = load i8, ptr %427, align 1, !tbaa !5
  %429 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 18
  %430 = load i8, ptr %429, align 1, !tbaa !5
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %437, label %432

432:                                              ; preds = %416
  %433 = zext i8 %428 to i32
  %434 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 19, i64 1
  %435 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %434, i32 noundef %433)
  %436 = trunc i32 %435 to i8
  store i8 %436, ptr %429, align 1, !tbaa !5
  br label %444

437:                                              ; preds = %416
  %438 = zext i8 %428 to i64
  %439 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %438, i32 1
  %440 = load i8, ptr %439, align 1, !tbaa !43
  %441 = zext i8 %440 to i32
  %442 = load i32, ptr %289, align 4, !tbaa !41
  %443 = add nsw i32 %442, %441
  store i32 %443, ptr %289, align 4, !tbaa !41
  br label %444

444:                                              ; preds = %437, %432
  %445 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 32
  %446 = load i8, ptr %445, align 1, !tbaa !5
  %447 = zext i8 %446 to i32
  %448 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 25
  %449 = load i8, ptr %448, align 1, !tbaa !5
  %450 = zext i8 %449 to i32
  %451 = add nuw nsw i32 %450, %447
  %452 = icmp ult i32 %451, 128
  %453 = add nuw nsw i32 %451, 1
  %454 = lshr i32 %453, 1
  %455 = select i1 %452, i32 %454, i32 %451
  %456 = and i32 %455, 127
  %457 = zext i32 %456 to i64
  %458 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %457
  %459 = load i8, ptr %458, align 1, !tbaa !5
  %460 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 33
  %461 = load i8, ptr %460, align 1, !tbaa !5
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %469, label %463

463:                                              ; preds = %444
  %464 = zext i8 %459 to i32
  %465 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 20, i64 1
  %466 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %465, i32 noundef %464)
  %467 = trunc i32 %466 to i8
  store i8 %467, ptr %460, align 1, !tbaa !5
  %468 = and i32 %466, 255
  br label %476

469:                                              ; preds = %444
  %470 = zext i8 %459 to i64
  %471 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %470, i32 1
  %472 = load i8, ptr %471, align 1, !tbaa !43
  %473 = zext i8 %472 to i32
  %474 = load i32, ptr %289, align 4, !tbaa !41
  %475 = add nsw i32 %474, %473
  store i32 %475, ptr %289, align 4, !tbaa !41
  br label %476

476:                                              ; preds = %469, %463
  %477 = phi i32 [ 0, %469 ], [ %468, %463 ]
  %478 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 26
  %479 = load i8, ptr %478, align 1, !tbaa !5
  %480 = zext i8 %479 to i32
  %481 = add nuw nsw i32 %477, %480
  %482 = icmp ult i32 %481, 128
  %483 = add nuw nsw i32 %481, 1
  %484 = lshr i32 %483, 1
  %485 = select i1 %482, i32 %484, i32 %481
  %486 = and i32 %485, 127
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %487
  %489 = load i8, ptr %488, align 1, !tbaa !5
  %490 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 34
  %491 = load i8, ptr %490, align 1, !tbaa !5
  %492 = icmp eq i8 %491, 0
  br i1 %492, label %500, label %493

493:                                              ; preds = %476
  %494 = zext i8 %489 to i32
  %495 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 21, i64 1
  %496 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %495, i32 noundef %494)
  %497 = trunc i32 %496 to i8
  store i8 %497, ptr %490, align 1, !tbaa !5
  %498 = load i8, ptr %460, align 1, !tbaa !5
  %499 = zext i8 %498 to i32
  br label %507

500:                                              ; preds = %476
  %501 = zext i8 %489 to i64
  %502 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %501, i32 1
  %503 = load i8, ptr %502, align 1, !tbaa !43
  %504 = zext i8 %503 to i32
  %505 = load i32, ptr %289, align 4, !tbaa !41
  %506 = add nsw i32 %505, %504
  store i32 %506, ptr %289, align 4, !tbaa !41
  br label %507

507:                                              ; preds = %500, %493
  %508 = phi i32 [ %477, %500 ], [ %499, %493 ]
  %509 = phi i8 [ 0, %500 ], [ %497, %493 ]
  %510 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 40
  %511 = load i8, ptr %510, align 1, !tbaa !5
  %512 = zext i8 %511 to i32
  %513 = add nuw nsw i32 %508, %512
  %514 = icmp ult i32 %513, 128
  %515 = add nuw nsw i32 %513, 1
  %516 = lshr i32 %515, 1
  %517 = select i1 %514, i32 %516, i32 %513
  %518 = and i32 %517, 127
  %519 = zext i32 %518 to i64
  %520 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %519
  %521 = load i8, ptr %520, align 1, !tbaa !5
  %522 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 41
  %523 = load i8, ptr %522, align 1, !tbaa !5
  %524 = icmp eq i8 %523, 0
  br i1 %524, label %532, label %525

525:                                              ; preds = %507
  %526 = zext i8 %521 to i32
  %527 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 22, i64 1
  %528 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %527, i32 noundef %526)
  %529 = trunc i32 %528 to i8
  store i8 %529, ptr %522, align 1, !tbaa !5
  %530 = load i8, ptr %490, align 1, !tbaa !5
  %531 = and i32 %528, 255
  br label %539

532:                                              ; preds = %507
  %533 = zext i8 %521 to i64
  %534 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %533, i32 1
  %535 = load i8, ptr %534, align 1, !tbaa !43
  %536 = zext i8 %535 to i32
  %537 = load i32, ptr %289, align 4, !tbaa !41
  %538 = add nsw i32 %537, %536
  store i32 %538, ptr %289, align 4, !tbaa !41
  br label %539

539:                                              ; preds = %532, %525
  %540 = phi i8 [ %509, %532 ], [ %530, %525 ]
  %541 = phi i32 [ 0, %532 ], [ %531, %525 ]
  %542 = zext i8 %540 to i32
  %543 = add nuw nsw i32 %541, %542
  %544 = icmp ult i32 %543, 128
  %545 = add nuw nsw i32 %543, 1
  %546 = lshr i32 %545, 1
  %547 = select i1 %544, i32 %546, i32 %543
  %548 = and i32 %547, 127
  %549 = zext i32 %548 to i64
  %550 = getelementptr inbounds [17 x i8], ptr @ct_index, i64 0, i64 %549
  %551 = load i8, ptr %550, align 1, !tbaa !5
  %552 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 2, i64 42
  %553 = load i8, ptr %552, align 1, !tbaa !5
  %554 = icmp eq i8 %553, 0
  br i1 %554, label %560, label %555

555:                                              ; preds = %539
  %556 = zext i8 %551 to i32
  %557 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 54, i32 3, i64 23, i64 1
  %558 = tail call fastcc i32 @block_residual_write_cavlc(ptr noundef nonnull %0, i32 noundef 4, ptr noundef nonnull %557, i32 noundef %556)
  %559 = trunc i32 %558 to i8
  store i8 %559, ptr %552, align 1, !tbaa !5
  br label %567

560:                                              ; preds = %539
  %561 = zext i8 %551 to i64
  %562 = getelementptr inbounds [5 x %struct.vlc_t], ptr @x264_coeff0_token, i64 0, i64 %561, i32 1
  %563 = load i8, ptr %562, align 1, !tbaa !43
  %564 = zext i8 %563 to i32
  %565 = load i32, ptr %289, align 4, !tbaa !41
  %566 = add nsw i32 %565, %564
  store i32 %566, ptr %289, align 4, !tbaa !41
  br label %567

567:                                              ; preds = %280, %318, %555, %560
  %568 = load i32, ptr %289, align 4, !tbaa !41
  %569 = mul nsw i32 %568, %1
  %570 = sext i32 %569 to i64
  br label %571

571:                                              ; preds = %567, %273
  %572 = phi i64 [ %279, %273 ], [ %570, %567 ]
  %573 = add nsw i32 %23, %17
  %574 = sext i32 %573 to i64
  %575 = shl nsw i64 %574, 8
  %576 = add nsw i64 %572, %575
  ret i64 %576
}

declare void @x264_predict_lossless_8x8_chroma(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @x264_mb_encode_8x8_chroma(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare void @x264_mb_predict_mv_16x16(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

declare void @x264_me_refine_qpel_refdupe(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @x264_mb_predict_mv_ref16x16(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @x264_me_search_ref(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @x264_mb_analyse_inter_p4x4_chroma(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) unnamed_addr #0 {
  %6 = alloca [128 x i8], align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %6) #17
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %8 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 23, i64 1
  %9 = load i32, ptr %8, align 4, !tbaa !39
  %10 = shl i32 %3, 2
  %11 = and i32 %10, 4
  %12 = shl i32 %3, 1
  %13 = and i32 %12, 4
  %14 = mul nsw i32 %9, %13
  %15 = add nsw i32 %14, %11
  %16 = sext i32 %3 to i64
  %17 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %16, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !226
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 17
  %20 = load i32, ptr %19, align 4, !tbaa !36
  %21 = and i32 %20, %18
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %25 = load i32, ptr %24, align 4, !tbaa !62
  %26 = shl i32 %25, 2
  %27 = and i32 %26, 4
  %28 = add nsw i32 %27, -2
  br label %29

29:                                               ; preds = %5, %23
  %30 = phi i32 [ %28, %23 ], [ 0, %5 ]
  %31 = sext i32 %18 to i64
  %32 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 41, i32 22, i64 %31
  switch i32 %4, label %241 [
    i32 6, label %33
    i32 4, label %167
  ]

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 9, i64 %16
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !471
  %37 = getelementptr inbounds ptr, ptr %2, i64 4
  %38 = load ptr, ptr %37, align 8, !tbaa !46
  %39 = sext i32 %15 to i64
  %40 = getelementptr inbounds i8, ptr %38, i64 %39
  %41 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 0, i32 13
  %42 = load i16, ptr %41, align 4, !tbaa !37
  %43 = sext i16 %42 to i32
  %44 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 0, i32 13, i64 1
  %45 = load i16, ptr %44, align 2, !tbaa !37
  %46 = sext i16 %45 to i32
  %47 = add nsw i32 %30, %46
  call void %36(ptr noundef nonnull %6, i32 noundef 16, ptr noundef %40, i32 noundef %9, i32 noundef %43, i32 noundef %47, i32 noundef 2, i32 noundef 2) #17
  %48 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 1
  %49 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 1, i32 5
  %50 = load ptr, ptr %49, align 16, !tbaa !134
  %51 = icmp eq ptr %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %33
  %53 = load ptr, ptr %50, align 8, !tbaa !46
  call void %53(ptr noundef nonnull %6, i32 noundef 16, ptr noundef nonnull %6, i32 noundef 16, ptr noundef nonnull %48, i32 noundef 2) #17
  br label %54

54:                                               ; preds = %52, %33
  %55 = load ptr, ptr %35, align 8, !tbaa !471
  %56 = getelementptr inbounds ptr, ptr %2, i64 5
  %57 = load ptr, ptr %56, align 8, !tbaa !46
  %58 = getelementptr inbounds i8, ptr %57, i64 %39
  %59 = load i16, ptr %41, align 4, !tbaa !37
  %60 = sext i16 %59 to i32
  %61 = load i16, ptr %44, align 2, !tbaa !37
  %62 = sext i16 %61 to i32
  %63 = add nsw i32 %30, %62
  call void %55(ptr noundef nonnull %7, i32 noundef 16, ptr noundef %58, i32 noundef %9, i32 noundef %60, i32 noundef %63, i32 noundef 2, i32 noundef 2) #17
  %64 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 2
  %65 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 2, i32 5
  %66 = load ptr, ptr %65, align 16, !tbaa !134
  %67 = icmp eq ptr %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %54
  %69 = load ptr, ptr %66, align 8, !tbaa !46
  call void %69(ptr noundef nonnull %7, i32 noundef 16, ptr noundef nonnull %7, i32 noundef 16, ptr noundef nonnull %64, i32 noundef 2) #17
  br label %70

70:                                               ; preds = %68, %54
  %71 = load ptr, ptr %35, align 8, !tbaa !471
  %72 = getelementptr inbounds [128 x i8], ptr %6, i64 0, i64 2
  %73 = load ptr, ptr %37, align 8, !tbaa !46
  %74 = or i32 %15, 2
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, ptr %73, i64 %75
  %77 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 1, i32 13
  %78 = load i16, ptr %77, align 4, !tbaa !37
  %79 = sext i16 %78 to i32
  %80 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 1, i32 13, i64 1
  %81 = load i16, ptr %80, align 2, !tbaa !37
  %82 = sext i16 %81 to i32
  %83 = add nsw i32 %30, %82
  call void %71(ptr noundef nonnull %72, i32 noundef 16, ptr noundef nonnull %76, i32 noundef %9, i32 noundef %79, i32 noundef %83, i32 noundef 2, i32 noundef 2) #17
  %84 = load ptr, ptr %49, align 16, !tbaa !134
  %85 = icmp eq ptr %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %70
  %87 = load ptr, ptr %84, align 8, !tbaa !46
  call void %87(ptr noundef nonnull %72, i32 noundef 16, ptr noundef nonnull %72, i32 noundef 16, ptr noundef nonnull %48, i32 noundef 2) #17
  br label %88

88:                                               ; preds = %86, %70
  %89 = load ptr, ptr %35, align 8, !tbaa !471
  %90 = getelementptr inbounds i8, ptr %6, i64 10
  %91 = load ptr, ptr %56, align 8, !tbaa !46
  %92 = getelementptr inbounds i8, ptr %91, i64 %75
  %93 = load i16, ptr %77, align 4, !tbaa !37
  %94 = sext i16 %93 to i32
  %95 = load i16, ptr %80, align 2, !tbaa !37
  %96 = sext i16 %95 to i32
  %97 = add nsw i32 %30, %96
  call void %89(ptr noundef nonnull %90, i32 noundef 16, ptr noundef nonnull %92, i32 noundef %9, i32 noundef %94, i32 noundef %97, i32 noundef 2, i32 noundef 2) #17
  %98 = load ptr, ptr %65, align 16, !tbaa !134
  %99 = icmp eq ptr %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %88
  %101 = load ptr, ptr %98, align 8, !tbaa !46
  call void %101(ptr noundef nonnull %90, i32 noundef 16, ptr noundef nonnull %90, i32 noundef 16, ptr noundef nonnull %64, i32 noundef 2) #17
  br label %102

102:                                              ; preds = %100, %88
  %103 = load ptr, ptr %35, align 8, !tbaa !471
  %104 = getelementptr inbounds [128 x i8], ptr %6, i64 0, i64 32
  %105 = load ptr, ptr %37, align 8, !tbaa !46
  %106 = shl nsw i32 %9, 1
  %107 = add nsw i32 %15, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, ptr %105, i64 %108
  %110 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 2, i32 13
  %111 = load i16, ptr %110, align 4, !tbaa !37
  %112 = sext i16 %111 to i32
  %113 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 2, i32 13, i64 1
  %114 = load i16, ptr %113, align 2, !tbaa !37
  %115 = sext i16 %114 to i32
  %116 = add nsw i32 %30, %115
  call void %103(ptr noundef nonnull %104, i32 noundef 16, ptr noundef %109, i32 noundef %9, i32 noundef %112, i32 noundef %116, i32 noundef 2, i32 noundef 2) #17
  %117 = load ptr, ptr %49, align 16, !tbaa !134
  %118 = icmp eq ptr %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %102
  %120 = load ptr, ptr %117, align 8, !tbaa !46
  call void %120(ptr noundef nonnull %104, i32 noundef 16, ptr noundef nonnull %104, i32 noundef 16, ptr noundef nonnull %48, i32 noundef 2) #17
  br label %121

121:                                              ; preds = %119, %102
  %122 = load ptr, ptr %35, align 8, !tbaa !471
  %123 = getelementptr inbounds i8, ptr %6, i64 40
  %124 = load ptr, ptr %56, align 8, !tbaa !46
  %125 = getelementptr inbounds i8, ptr %124, i64 %108
  %126 = load i16, ptr %110, align 4, !tbaa !37
  %127 = sext i16 %126 to i32
  %128 = load i16, ptr %113, align 2, !tbaa !37
  %129 = sext i16 %128 to i32
  %130 = add nsw i32 %30, %129
  call void %122(ptr noundef nonnull %123, i32 noundef 16, ptr noundef %125, i32 noundef %9, i32 noundef %127, i32 noundef %130, i32 noundef 2, i32 noundef 2) #17
  %131 = load ptr, ptr %65, align 16, !tbaa !134
  %132 = icmp eq ptr %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %121
  %134 = load ptr, ptr %131, align 8, !tbaa !46
  call void %134(ptr noundef nonnull %123, i32 noundef 16, ptr noundef nonnull %123, i32 noundef 16, ptr noundef nonnull %64, i32 noundef 2) #17
  br label %135

135:                                              ; preds = %133, %121
  %136 = load ptr, ptr %35, align 8, !tbaa !471
  %137 = getelementptr inbounds [128 x i8], ptr %6, i64 0, i64 34
  %138 = load ptr, ptr %37, align 8, !tbaa !46
  %139 = add nsw i32 %74, %106
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, ptr %138, i64 %140
  %142 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 3, i32 13
  %143 = load i16, ptr %142, align 4, !tbaa !37
  %144 = sext i16 %143 to i32
  %145 = getelementptr inbounds %struct.x264_me_t, ptr %34, i64 3, i32 13, i64 1
  %146 = load i16, ptr %145, align 2, !tbaa !37
  %147 = sext i16 %146 to i32
  %148 = add nsw i32 %30, %147
  call void %136(ptr noundef nonnull %137, i32 noundef 16, ptr noundef %141, i32 noundef %9, i32 noundef %144, i32 noundef %148, i32 noundef 2, i32 noundef 2) #17
  %149 = load ptr, ptr %49, align 16, !tbaa !134
  %150 = icmp eq ptr %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %135
  %152 = load ptr, ptr %149, align 8, !tbaa !46
  call void %152(ptr noundef nonnull %137, i32 noundef 16, ptr noundef nonnull %137, i32 noundef 16, ptr noundef nonnull %48, i32 noundef 2) #17
  br label %153

153:                                              ; preds = %151, %135
  %154 = load ptr, ptr %35, align 8, !tbaa !471
  %155 = getelementptr inbounds i8, ptr %6, i64 42
  %156 = load ptr, ptr %56, align 8, !tbaa !46
  %157 = getelementptr inbounds i8, ptr %156, i64 %140
  %158 = load i16, ptr %142, align 4, !tbaa !37
  %159 = sext i16 %158 to i32
  %160 = load i16, ptr %145, align 2, !tbaa !37
  %161 = sext i16 %160 to i32
  %162 = add nsw i32 %30, %161
  call void %154(ptr noundef nonnull %155, i32 noundef 16, ptr noundef %157, i32 noundef %9, i32 noundef %159, i32 noundef %162, i32 noundef 2, i32 noundef 2) #17
  %163 = load ptr, ptr %65, align 16, !tbaa !134
  %164 = icmp eq ptr %163, null
  br i1 %164, label %310, label %165

165:                                              ; preds = %153
  %166 = load ptr, ptr %163, align 8, !tbaa !46
  call void %166(ptr noundef nonnull %155, i32 noundef 16, ptr noundef nonnull %155, i32 noundef 16, ptr noundef nonnull %64, i32 noundef 2) #17
  br label %310

167:                                              ; preds = %29
  %168 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 11, i64 %16
  %169 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 2
  %170 = load ptr, ptr %169, align 8, !tbaa !471
  %171 = getelementptr inbounds ptr, ptr %2, i64 4
  %172 = load ptr, ptr %171, align 8, !tbaa !46
  %173 = sext i32 %15 to i64
  %174 = getelementptr inbounds i8, ptr %172, i64 %173
  %175 = getelementptr inbounds %struct.x264_me_t, ptr %168, i64 0, i32 13
  %176 = load i16, ptr %175, align 4, !tbaa !37
  %177 = sext i16 %176 to i32
  %178 = getelementptr inbounds %struct.x264_me_t, ptr %168, i64 0, i32 13, i64 1
  %179 = load i16, ptr %178, align 2, !tbaa !37
  %180 = sext i16 %179 to i32
  %181 = add nsw i32 %30, %180
  call void %170(ptr noundef nonnull %6, i32 noundef 16, ptr noundef %174, i32 noundef %9, i32 noundef %177, i32 noundef %181, i32 noundef 4, i32 noundef 2) #17
  %182 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 1
  %183 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 1, i32 5
  %184 = load ptr, ptr %183, align 16, !tbaa !134
  %185 = icmp eq ptr %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %167
  %187 = getelementptr inbounds ptr, ptr %184, i64 1
  %188 = load ptr, ptr %187, align 8, !tbaa !46
  call void %188(ptr noundef nonnull %6, i32 noundef 16, ptr noundef nonnull %6, i32 noundef 16, ptr noundef nonnull %182, i32 noundef 2) #17
  br label %189

189:                                              ; preds = %186, %167
  %190 = load ptr, ptr %169, align 8, !tbaa !471
  %191 = getelementptr inbounds ptr, ptr %2, i64 5
  %192 = load ptr, ptr %191, align 8, !tbaa !46
  %193 = getelementptr inbounds i8, ptr %192, i64 %173
  %194 = load i16, ptr %175, align 4, !tbaa !37
  %195 = sext i16 %194 to i32
  %196 = load i16, ptr %178, align 2, !tbaa !37
  %197 = sext i16 %196 to i32
  %198 = add nsw i32 %30, %197
  call void %190(ptr noundef nonnull %7, i32 noundef 16, ptr noundef %193, i32 noundef %9, i32 noundef %195, i32 noundef %198, i32 noundef 4, i32 noundef 2) #17
  %199 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 2
  %200 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 2, i32 5
  %201 = load ptr, ptr %200, align 16, !tbaa !134
  %202 = icmp eq ptr %201, null
  br i1 %202, label %206, label %203

203:                                              ; preds = %189
  %204 = getelementptr inbounds ptr, ptr %201, i64 1
  %205 = load ptr, ptr %204, align 8, !tbaa !46
  call void %205(ptr noundef nonnull %7, i32 noundef 16, ptr noundef nonnull %7, i32 noundef 16, ptr noundef nonnull %199, i32 noundef 2) #17
  br label %206

206:                                              ; preds = %203, %189
  %207 = load ptr, ptr %169, align 8, !tbaa !471
  %208 = getelementptr inbounds [128 x i8], ptr %6, i64 0, i64 32
  %209 = load ptr, ptr %171, align 8, !tbaa !46
  %210 = shl nsw i32 %9, 1
  %211 = add nsw i32 %15, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i8, ptr %209, i64 %212
  %214 = getelementptr inbounds %struct.x264_me_t, ptr %168, i64 1, i32 13
  %215 = load i16, ptr %214, align 4, !tbaa !37
  %216 = sext i16 %215 to i32
  %217 = getelementptr inbounds %struct.x264_me_t, ptr %168, i64 1, i32 13, i64 1
  %218 = load i16, ptr %217, align 2, !tbaa !37
  %219 = sext i16 %218 to i32
  %220 = add nsw i32 %30, %219
  call void %207(ptr noundef nonnull %208, i32 noundef 16, ptr noundef %213, i32 noundef %9, i32 noundef %216, i32 noundef %220, i32 noundef 4, i32 noundef 2) #17
  %221 = load ptr, ptr %183, align 16, !tbaa !134
  %222 = icmp eq ptr %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %206
  %224 = getelementptr inbounds ptr, ptr %221, i64 1
  %225 = load ptr, ptr %224, align 8, !tbaa !46
  call void %225(ptr noundef nonnull %208, i32 noundef 16, ptr noundef nonnull %208, i32 noundef 16, ptr noundef nonnull %182, i32 noundef 2) #17
  br label %226

226:                                              ; preds = %223, %206
  %227 = load ptr, ptr %169, align 8, !tbaa !471
  %228 = getelementptr inbounds i8, ptr %6, i64 40
  %229 = load ptr, ptr %191, align 8, !tbaa !46
  %230 = getelementptr inbounds i8, ptr %229, i64 %212
  %231 = load i16, ptr %214, align 4, !tbaa !37
  %232 = sext i16 %231 to i32
  %233 = load i16, ptr %217, align 2, !tbaa !37
  %234 = sext i16 %233 to i32
  %235 = add nsw i32 %30, %234
  call void %227(ptr noundef nonnull %228, i32 noundef 16, ptr noundef %230, i32 noundef %9, i32 noundef %232, i32 noundef %235, i32 noundef 4, i32 noundef 2) #17
  %236 = load ptr, ptr %200, align 16, !tbaa !134
  %237 = icmp eq ptr %236, null
  br i1 %237, label %310, label %238

238:                                              ; preds = %226
  %239 = getelementptr inbounds ptr, ptr %236, i64 1
  %240 = load ptr, ptr %239, align 8, !tbaa !46
  call void %240(ptr noundef nonnull %228, i32 noundef 16, ptr noundef nonnull %228, i32 noundef 16, ptr noundef nonnull %199, i32 noundef 2) #17
  br label %310

241:                                              ; preds = %29
  %242 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 13, i64 %16
  %243 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 2
  %244 = load ptr, ptr %243, align 8, !tbaa !471
  %245 = getelementptr inbounds ptr, ptr %2, i64 4
  %246 = load ptr, ptr %245, align 8, !tbaa !46
  %247 = sext i32 %15 to i64
  %248 = getelementptr inbounds i8, ptr %246, i64 %247
  %249 = getelementptr inbounds %struct.x264_me_t, ptr %242, i64 0, i32 13
  %250 = load i16, ptr %249, align 4, !tbaa !37
  %251 = sext i16 %250 to i32
  %252 = getelementptr inbounds %struct.x264_me_t, ptr %242, i64 0, i32 13, i64 1
  %253 = load i16, ptr %252, align 2, !tbaa !37
  %254 = sext i16 %253 to i32
  %255 = add nsw i32 %30, %254
  call void %244(ptr noundef nonnull %6, i32 noundef 16, ptr noundef %248, i32 noundef %9, i32 noundef %251, i32 noundef %255, i32 noundef 2, i32 noundef 4) #17
  %256 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 1
  %257 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 1, i32 5
  %258 = load ptr, ptr %257, align 16, !tbaa !134
  %259 = icmp eq ptr %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %241
  %261 = load ptr, ptr %258, align 8, !tbaa !46
  call void %261(ptr noundef nonnull %6, i32 noundef 16, ptr noundef nonnull %6, i32 noundef 16, ptr noundef nonnull %256, i32 noundef 4) #17
  br label %262

262:                                              ; preds = %260, %241
  %263 = load ptr, ptr %243, align 8, !tbaa !471
  %264 = getelementptr inbounds ptr, ptr %2, i64 5
  %265 = load ptr, ptr %264, align 8, !tbaa !46
  %266 = getelementptr inbounds i8, ptr %265, i64 %247
  %267 = load i16, ptr %249, align 4, !tbaa !37
  %268 = sext i16 %267 to i32
  %269 = load i16, ptr %252, align 2, !tbaa !37
  %270 = sext i16 %269 to i32
  %271 = add nsw i32 %30, %270
  call void %263(ptr noundef nonnull %7, i32 noundef 16, ptr noundef %266, i32 noundef %9, i32 noundef %268, i32 noundef %271, i32 noundef 2, i32 noundef 4) #17
  %272 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 2
  %273 = getelementptr inbounds %struct.x264_weight_t, ptr %32, i64 2, i32 5
  %274 = load ptr, ptr %273, align 16, !tbaa !134
  %275 = icmp eq ptr %274, null
  br i1 %275, label %278, label %276

276:                                              ; preds = %262
  %277 = load ptr, ptr %274, align 8, !tbaa !46
  call void %277(ptr noundef nonnull %7, i32 noundef 16, ptr noundef nonnull %7, i32 noundef 16, ptr noundef nonnull %272, i32 noundef 4) #17
  br label %278

278:                                              ; preds = %276, %262
  %279 = load ptr, ptr %243, align 8, !tbaa !471
  %280 = getelementptr inbounds [128 x i8], ptr %6, i64 0, i64 2
  %281 = load ptr, ptr %245, align 8, !tbaa !46
  %282 = or i32 %15, 2
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i8, ptr %281, i64 %283
  %285 = getelementptr inbounds %struct.x264_me_t, ptr %242, i64 1, i32 13
  %286 = load i16, ptr %285, align 4, !tbaa !37
  %287 = sext i16 %286 to i32
  %288 = getelementptr inbounds %struct.x264_me_t, ptr %242, i64 1, i32 13, i64 1
  %289 = load i16, ptr %288, align 2, !tbaa !37
  %290 = sext i16 %289 to i32
  %291 = add nsw i32 %30, %290
  call void %279(ptr noundef nonnull %280, i32 noundef 16, ptr noundef nonnull %284, i32 noundef %9, i32 noundef %287, i32 noundef %291, i32 noundef 2, i32 noundef 4) #17
  %292 = load ptr, ptr %257, align 16, !tbaa !134
  %293 = icmp eq ptr %292, null
  br i1 %293, label %296, label %294

294:                                              ; preds = %278
  %295 = load ptr, ptr %292, align 8, !tbaa !46
  call void %295(ptr noundef nonnull %280, i32 noundef 16, ptr noundef nonnull %280, i32 noundef 16, ptr noundef nonnull %256, i32 noundef 4) #17
  br label %296

296:                                              ; preds = %294, %278
  %297 = load ptr, ptr %243, align 8, !tbaa !471
  %298 = getelementptr inbounds i8, ptr %6, i64 10
  %299 = load ptr, ptr %264, align 8, !tbaa !46
  %300 = getelementptr inbounds i8, ptr %299, i64 %283
  %301 = load i16, ptr %285, align 4, !tbaa !37
  %302 = sext i16 %301 to i32
  %303 = load i16, ptr %288, align 2, !tbaa !37
  %304 = sext i16 %303 to i32
  %305 = add nsw i32 %30, %304
  call void %297(ptr noundef nonnull %298, i32 noundef 16, ptr noundef nonnull %300, i32 noundef %9, i32 noundef %302, i32 noundef %305, i32 noundef 2, i32 noundef 4) #17
  %306 = load ptr, ptr %273, align 16, !tbaa !134
  %307 = icmp eq ptr %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %296
  %309 = load ptr, ptr %306, align 8, !tbaa !46
  call void %309(ptr noundef nonnull %298, i32 noundef 16, ptr noundef nonnull %298, i32 noundef 16, ptr noundef nonnull %272, i32 noundef 4) #17
  br label %310

310:                                              ; preds = %296, %308, %226, %238, %153, %165
  %311 = shl nuw nsw i32 %13, 4
  %312 = or i32 %311, %11
  %313 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 6
  %314 = load ptr, ptr %313, align 8, !tbaa !46
  %315 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 1
  %316 = load ptr, ptr %315, align 8, !tbaa !46
  %317 = zext i32 %312 to i64
  %318 = getelementptr inbounds i8, ptr %316, i64 %317
  %319 = call i32 %314(ptr noundef %318, i32 noundef 16, ptr noundef nonnull %6, i32 noundef 16) #17
  %320 = load ptr, ptr %313, align 8, !tbaa !46
  %321 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16, i64 2
  %322 = load ptr, ptr %321, align 16, !tbaa !46
  %323 = getelementptr inbounds i8, ptr %322, i64 %317
  %324 = call i32 %320(ptr noundef %323, i32 noundef 16, ptr noundef nonnull %7, i32 noundef 16) #17
  %325 = add nsw i32 %324, %319
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %6) #17
  ret i32 %325
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define internal fastcc void @x264_mb_cache_mv_b8x8(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 {
  %5 = srem i32 %2, 2
  %6 = shl nsw i32 %5, 1
  %7 = sdiv i32 %2, 2
  %8 = shl i32 %7, 4
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 55, i64 %9
  %11 = load i8, ptr %10, align 1, !tbaa !5
  %12 = icmp eq i8 %11, 12
  br i1 %12, label %13, label %57

13:                                               ; preds = %4
  %14 = shl i32 %2, 1
  %15 = and i32 %14, 2
  %16 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 8
  %17 = getelementptr inbounds [4 x i8], ptr %16, i64 0, i64 %9
  %18 = load i8, ptr %17, align 1, !tbaa !5
  %19 = shl i32 %2, 3
  %20 = or i32 %15, %19
  %21 = or i32 %20, 12
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %22
  %24 = zext i8 %18 to i16
  %25 = mul nuw i16 %24, 257
  store i16 %25, ptr %23, align 2, !tbaa !5
  %26 = getelementptr inbounds i8, ptr %23, i64 8
  store i16 %25, ptr %26, align 2, !tbaa !5
  %27 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 8, i64 1, i64 %9
  %28 = load i8, ptr %27, align 1, !tbaa !5
  %29 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 %22
  %30 = zext i8 %28 to i16
  %31 = mul nuw i16 %30, 257
  store i16 %31, ptr %29, align 2, !tbaa !5
  %32 = getelementptr inbounds i8, ptr %29, i64 8
  store i16 %31, ptr %32, align 2, !tbaa !5
  %33 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7
  %34 = getelementptr inbounds [4 x [2 x i16]], ptr %33, i64 0, i64 %9
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %22
  %37 = zext i32 %35 to i64
  %38 = mul nuw i64 %37, 4294967297
  store i64 %38, ptr %36, align 8, !tbaa !5
  %39 = getelementptr inbounds i8, ptr %36, i64 32
  store i64 %38, ptr %39, align 8, !tbaa !5
  %40 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 7, i64 1, i64 %9
  %41 = load i32, ptr %40, align 4, !tbaa !5
  %42 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %22
  %43 = zext i32 %41 to i64
  %44 = mul nuw i64 %43, 4294967297
  store i64 %44, ptr %42, align 8, !tbaa !5
  %45 = getelementptr inbounds i8, ptr %42, i64 32
  store i64 %44, ptr %45, align 8, !tbaa !5
  %46 = icmp eq i32 %3, 0
  br i1 %46, label %126, label %47

47:                                               ; preds = %13
  %48 = add nsw i32 %6, 12
  %49 = add nsw i32 %48, %8
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %50
  store i32 0, ptr %51, align 4, !tbaa !5
  %52 = getelementptr inbounds i8, ptr %51, i64 16
  store i32 0, ptr %52, align 4, !tbaa !5
  %53 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %50
  store i32 0, ptr %53, align 4, !tbaa !5
  %54 = getelementptr inbounds i8, ptr %53, i64 16
  store i32 0, ptr %54, align 4, !tbaa !5
  %55 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 6, i64 %50
  store i16 257, ptr %55, align 2, !tbaa !5
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i16 257, ptr %56, align 2, !tbaa !5
  br label %126

57:                                               ; preds = %4
  %58 = zext i8 %11 to i64
  %59 = getelementptr inbounds [17 x i8], ptr @x264_mb_partition_listX_table, i64 0, i64 %58
  %60 = load i8, ptr %59, align 1, !tbaa !5
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %9, i32 3
  %64 = load i32, ptr %63, align 4, !tbaa !226
  %65 = trunc i32 %64 to i16
  %66 = add nsw i32 %6, 12
  %67 = add nsw i32 %66, %8
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %68
  %70 = and i16 %65, 255
  %71 = mul nuw i16 %70, 257
  store i16 %71, ptr %69, align 2, !tbaa !5
  %72 = getelementptr inbounds i8, ptr %69, i64 8
  store i16 %71, ptr %72, align 2, !tbaa !5
  %73 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 22, i32 7, i64 %9, i32 13
  %74 = load i32, ptr %73, align 4, !tbaa !5
  %75 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %68
  %76 = zext i32 %74 to i64
  %77 = mul nuw i64 %76, 4294967297
  store i64 %77, ptr %75, align 8, !tbaa !5
  %78 = getelementptr inbounds i8, ptr %75, i64 32
  store i64 %77, ptr %78, align 8, !tbaa !5
  br label %91

79:                                               ; preds = %57
  %80 = add nsw i32 %6, 12
  %81 = add nsw i32 %80, %8
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 0, i64 %82
  store i16 -1, ptr %83, align 2, !tbaa !5
  %84 = getelementptr inbounds i8, ptr %83, i64 8
  store i16 -1, ptr %84, align 2, !tbaa !5
  %85 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 0, i64 %82
  store i64 0, ptr %85, align 8, !tbaa !5
  %86 = getelementptr inbounds i8, ptr %85, i64 32
  store i64 0, ptr %86, align 8, !tbaa !5
  %87 = icmp eq i32 %3, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 0, i64 %82
  store i32 0, ptr %89, align 4, !tbaa !5
  %90 = getelementptr inbounds i8, ptr %89, i64 16
  store i32 0, ptr %90, align 4, !tbaa !5
  br label %91

91:                                               ; preds = %79, %88, %62
  %92 = load i8, ptr %10, align 1, !tbaa !5
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds [2 x [17 x i8]], ptr @x264_mb_partition_listX_table, i64 0, i64 1, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !5
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %114, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %9, i32 3
  %99 = load i32, ptr %98, align 4, !tbaa !226
  %100 = trunc i32 %99 to i16
  %101 = add nsw i32 %6, 12
  %102 = add nsw i32 %101, %8
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 %103
  %105 = and i16 %100, 255
  %106 = mul nuw i16 %105, 257
  store i16 %106, ptr %104, align 2, !tbaa !5
  %107 = getelementptr inbounds i8, ptr %104, i64 8
  store i16 %106, ptr %107, align 2, !tbaa !5
  %108 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 23, i32 7, i64 %9, i32 13
  %109 = load i32, ptr %108, align 4, !tbaa !5
  %110 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %103
  %111 = zext i32 %109 to i64
  %112 = mul nuw i64 %111, 4294967297
  store i64 %112, ptr %110, align 8, !tbaa !5
  %113 = getelementptr inbounds i8, ptr %110, i64 32
  store i64 %112, ptr %113, align 8, !tbaa !5
  br label %126

114:                                              ; preds = %91
  %115 = add nsw i32 %6, 12
  %116 = add nsw i32 %115, %8
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 3, i64 1, i64 %117
  store i16 -1, ptr %118, align 2, !tbaa !5
  %119 = getelementptr inbounds i8, ptr %118, i64 8
  store i16 -1, ptr %119, align 2, !tbaa !5
  %120 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 4, i64 1, i64 %117
  store i64 0, ptr %120, align 8, !tbaa !5
  %121 = getelementptr inbounds i8, ptr %120, i64 32
  store i64 0, ptr %121, align 8, !tbaa !5
  %122 = icmp eq i32 %3, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %114
  %124 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 67, i32 5, i64 1, i64 %117
  store i32 0, ptr %124, align 4, !tbaa !5
  %125 = getelementptr inbounds i8, ptr %124, i64 16
  store i32 0, ptr %125, align 4, !tbaa !5
  br label %126

126:                                              ; preds = %97, %123, %114, %13, %47
  ret void
}

declare void @x264_me_refine_bidir_satd(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_slicetype_mb_cost(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, ptr nocapture noundef readonly %7, ptr noundef %8) unnamed_addr #0 {
  %10 = alloca [2 x ptr], align 16
  %11 = alloca [2 x ptr], align 16
  %12 = alloca [288 x i8], align 8
  %13 = alloca [2 x %struct.x264_me_t], align 16
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca [4 x [2 x i16]], align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca [33 x i8], align 16
  %20 = alloca [3 x i32], align 4
  %21 = sext i32 %3 to i64
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8, !tbaa !46
  %24 = sext i32 %4 to i64
  %25 = getelementptr inbounds ptr, ptr %2, i64 %24
  %26 = load ptr, ptr %25, align 8, !tbaa !46
  %27 = sext i32 %5 to i64
  %28 = getelementptr inbounds ptr, ptr %2, i64 %27
  %29 = load ptr, ptr %28, align 8, !tbaa !46
  %30 = icmp slt i32 %5, %4
  %31 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  %32 = load i32, ptr %31, align 16, !tbaa !168
  %33 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %34 = load i32, ptr %33, align 4, !tbaa !62
  %35 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %36 = load ptr, ptr %35, align 16, !tbaa !169
  %37 = getelementptr inbounds %struct.x264_sps_t, ptr %36, i64 0, i32 16
  %38 = load i32, ptr %37, align 4, !tbaa !170
  %39 = mul nsw i32 %38, %34
  %40 = add nsw i32 %39, %32
  %41 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 27
  %42 = load i32, ptr %41, align 4, !tbaa !319
  %43 = mul nsw i32 %42, %34
  %44 = add nsw i32 %43, %32
  %45 = shl nsw i32 %44, 3
  %46 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 4
  %47 = load i32, ptr %46, align 16, !tbaa !472
  %48 = icmp eq i32 %47, 0
  %49 = ashr i32 %6, 2
  %50 = sub nsw i32 64, %49
  %51 = select i1 %48, i32 32, i32 %50
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #17
  %52 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 45
  %53 = sub nsw i32 %5, %3
  %54 = add nsw i32 %53, -1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [17 x ptr], ptr %52, i64 0, i64 %55
  %57 = load ptr, ptr %56, align 8, !tbaa !46
  %58 = sext i32 %40 to i64
  %59 = getelementptr inbounds [2 x i16], ptr %57, i64 %58
  store ptr %59, ptr %10, align 16, !tbaa !46
  %60 = getelementptr inbounds ptr, ptr %10, i64 1
  %61 = sub nsw i32 %4, %5
  %62 = add nsw i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 45, i64 1, i64 %63
  %65 = load ptr, ptr %64, align 8, !tbaa !46
  %66 = getelementptr inbounds [2 x i16], ptr %65, i64 %58
  store ptr %66, ptr %60, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #17
  %67 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 47
  %68 = getelementptr inbounds [17 x ptr], ptr %67, i64 0, i64 %55
  %69 = load ptr, ptr %68, align 8, !tbaa !46
  %70 = getelementptr inbounds i32, ptr %69, i64 %58
  store ptr %70, ptr %11, align 16, !tbaa !46
  %71 = getelementptr inbounds ptr, ptr %11, i64 1
  %72 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 47, i64 1, i64 %63
  %73 = load ptr, ptr %72, align 8, !tbaa !46
  %74 = getelementptr inbounds i32, ptr %73, i64 %58
  store ptr %74, ptr %71, align 8, !tbaa !46
  %75 = icmp sgt i32 %32, 0
  br i1 %75, label %76, label %86

76:                                               ; preds = %9
  %77 = add nsw i32 %38, -1
  %78 = icmp slt i32 %32, %77
  %79 = icmp sgt i32 %34, 0
  %80 = select i1 %78, i1 %79, i1 false
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.x264_sps_t, ptr %36, i64 0, i32 17
  %83 = load i32, ptr %82, align 4, !tbaa !179
  %84 = add nsw i32 %83, -1
  %85 = icmp slt i32 %34, %84
  br i1 %85, label %94, label %91

86:                                               ; preds = %76, %9
  %87 = icmp slt i32 %38, 3
  br i1 %87, label %94, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.x264_sps_t, ptr %36, i64 0, i32 17
  %90 = load i32, ptr %89, align 4, !tbaa !179
  br label %91

91:                                               ; preds = %88, %81
  %92 = phi i32 [ %90, %88 ], [ %83, %81 ]
  %93 = icmp slt i32 %92, 3
  br label %94

94:                                               ; preds = %91, %86, %81
  %95 = phi i1 [ true, %86 ], [ true, %81 ], [ %93, %91 ]
  call void @llvm.lifetime.start.p0(i64 288, ptr nonnull %12) #17
  %96 = getelementptr inbounds i8, ptr %12, i64 8
  call void @llvm.lifetime.start.p0(i64 288, ptr nonnull %13) #17
  %97 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66
  %98 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 66, i32 16
  store ptr %97, ptr %98, align 16, !tbaa !46
  %99 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 4, i64 3
  %100 = load ptr, ptr %99, align 8, !tbaa !46
  %101 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 32
  %102 = load ptr, ptr %101, align 16, !tbaa !46
  %103 = sext i32 %45 to i64
  %104 = getelementptr inbounds i8, ptr %102, i64 %103
  tail call void %100(ptr noundef nonnull %97, i32 noundef 16, ptr noundef %104, i32 noundef %42, i32 noundef 8) #17
  %105 = icmp eq i32 %3, %4
  br i1 %105, label %542, label %106

106:                                              ; preds = %94
  %107 = load i32, ptr %31, align 16, !tbaa !168
  %108 = shl i32 %107, 3
  %109 = sub nuw nsw i32 -4, %108
  %110 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 22
  store i32 %109, ptr %110, align 8, !tbaa !39
  %111 = load ptr, ptr %35, align 16, !tbaa !169
  %112 = getelementptr inbounds %struct.x264_sps_t, ptr %111, i64 0, i32 16
  %113 = load i32, ptr %112, align 4, !tbaa !170
  %114 = xor i32 %107, -1
  %115 = add i32 %113, %114
  %116 = shl nsw i32 %115, 3
  %117 = or i32 %116, 4
  %118 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 23
  store i32 %117, ptr %118, align 16, !tbaa !39
  %119 = shl i32 %109, 2
  %120 = add i32 %119, -32
  %121 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 20
  store i32 %120, ptr %121, align 8, !tbaa !39
  %122 = shl i32 %115, 5
  %123 = add i32 %122, 48
  %124 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 21
  store i32 %123, ptr %124, align 16, !tbaa !39
  %125 = load i32, ptr %112, align 4, !tbaa !170
  %126 = add nsw i32 %125, -2
  %127 = icmp slt i32 %107, %126
  br i1 %127, label %146, label %128

128:                                              ; preds = %106
  %129 = load i32, ptr %33, align 4, !tbaa !62
  %130 = shl i32 %129, 3
  %131 = sub nuw nsw i32 -4, %130
  %132 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 22, i64 1
  store i32 %131, ptr %132, align 4, !tbaa !39
  %133 = getelementptr inbounds %struct.x264_sps_t, ptr %111, i64 0, i32 17
  %134 = load i32, ptr %133, align 4, !tbaa !179
  %135 = xor i32 %129, -1
  %136 = add i32 %134, %135
  %137 = shl nsw i32 %136, 3
  %138 = or i32 %137, 4
  %139 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 23, i64 1
  store i32 %138, ptr %139, align 4, !tbaa !39
  %140 = shl i32 %131, 2
  %141 = add i32 %140, -32
  %142 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 20, i64 1
  store i32 %141, ptr %142, align 4, !tbaa !39
  %143 = shl i32 %136, 5
  %144 = add i32 %143, 48
  %145 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 21, i64 1
  store i32 %144, ptr %145, align 4, !tbaa !39
  br label %146

146:                                              ; preds = %128, %106
  store i32 3, ptr %13, align 16, !tbaa !222
  %147 = getelementptr inbounds %struct.x264_mb_analysis_t, ptr %1, i64 0, i32 3
  %148 = load ptr, ptr %147, align 16, !tbaa !219
  %149 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 1
  store ptr %148, ptr %149, align 8, !tbaa !223
  %150 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 9
  store i32 %42, ptr %150, align 8, !tbaa !39
  %151 = load ptr, ptr %98, align 16, !tbaa !46
  %152 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 7
  store ptr %151, ptr %152, align 8, !tbaa !46
  %153 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 4
  store ptr %8, ptr %153, align 8, !tbaa !228
  %154 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 3
  store i32 0, ptr %154, align 4, !tbaa !226
  %155 = getelementptr inbounds %struct.x264_frame, ptr %23, i64 0, i32 32
  %156 = load ptr, ptr %155, align 16, !tbaa !46
  %157 = getelementptr inbounds i8, ptr %156, i64 %103
  %158 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 5
  store ptr %157, ptr %158, align 16, !tbaa !46
  %159 = getelementptr inbounds %struct.x264_frame, ptr %23, i64 0, i32 32, i64 1
  %160 = load ptr, ptr %159, align 8, !tbaa !46
  %161 = getelementptr inbounds i8, ptr %160, i64 %103
  %162 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 5, i64 1
  store ptr %161, ptr %162, align 8, !tbaa !46
  %163 = getelementptr inbounds %struct.x264_frame, ptr %23, i64 0, i32 32, i64 2
  %164 = load ptr, ptr %163, align 16, !tbaa !46
  %165 = getelementptr inbounds i8, ptr %164, i64 %103
  %166 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 5, i64 2
  store ptr %165, ptr %166, align 16, !tbaa !46
  %167 = getelementptr inbounds %struct.x264_frame, ptr %23, i64 0, i32 32, i64 3
  %168 = load ptr, ptr %167, align 8, !tbaa !46
  %169 = getelementptr inbounds i8, ptr %168, i64 %103
  %170 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 5, i64 3
  store ptr %169, ptr %170, align 8, !tbaa !46
  %171 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 6
  store ptr %157, ptr %171, align 16, !tbaa !227
  %172 = getelementptr inbounds %struct.x264_weight_t, ptr %8, i64 0, i32 5
  %173 = load ptr, ptr %172, align 16, !tbaa !134
  %174 = icmp eq ptr %173, null
  br i1 %174, label %179, label %175

175:                                              ; preds = %146
  %176 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 38
  %177 = load ptr, ptr %176, align 16, !tbaa !46
  %178 = getelementptr inbounds i8, ptr %177, i64 %103
  store ptr %178, ptr %171, align 16, !tbaa !227
  br label %179

179:                                              ; preds = %175, %146
  br i1 %30, label %180, label %344

180:                                              ; preds = %179
  %181 = getelementptr inbounds %struct.x264_frame, ptr %26, i64 0, i32 45
  %182 = xor i32 %3, -1
  %183 = add i32 %182, %4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [17 x ptr], ptr %181, i64 0, i64 %184
  %186 = load ptr, ptr %185, align 8, !tbaa !46
  %187 = getelementptr inbounds [2 x i16], ptr %186, i64 %58
  %188 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1
  store i32 3, ptr %188, align 16, !tbaa !222
  %189 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 1
  store ptr %148, ptr %189, align 8, !tbaa !223
  %190 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 9
  store i32 %42, ptr %190, align 8, !tbaa !39
  %191 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 7
  store ptr %151, ptr %191, align 8, !tbaa !46
  %192 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 3
  store i32 0, ptr %192, align 4, !tbaa !226
  %193 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 4
  store ptr @weight_none, ptr %193, align 8, !tbaa !228
  %194 = getelementptr inbounds %struct.x264_frame, ptr %26, i64 0, i32 32
  %195 = load ptr, ptr %194, align 16, !tbaa !46
  %196 = getelementptr inbounds i8, ptr %195, i64 %103
  %197 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 5
  store ptr %196, ptr %197, align 16, !tbaa !46
  %198 = getelementptr inbounds %struct.x264_frame, ptr %26, i64 0, i32 32, i64 1
  %199 = load ptr, ptr %198, align 8, !tbaa !46
  %200 = getelementptr inbounds i8, ptr %199, i64 %103
  %201 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 5, i64 1
  store ptr %200, ptr %201, align 8, !tbaa !46
  %202 = getelementptr inbounds %struct.x264_frame, ptr %26, i64 0, i32 32, i64 2
  %203 = load ptr, ptr %202, align 16, !tbaa !46
  %204 = getelementptr inbounds i8, ptr %203, i64 %103
  %205 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 5, i64 2
  store ptr %204, ptr %205, align 16, !tbaa !46
  %206 = getelementptr inbounds %struct.x264_frame, ptr %26, i64 0, i32 32, i64 3
  %207 = load ptr, ptr %206, align 8, !tbaa !46
  %208 = getelementptr inbounds i8, ptr %207, i64 %103
  %209 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 5, i64 3
  store ptr %208, ptr %209, align 8, !tbaa !46
  %210 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 6
  store ptr %196, ptr %210, align 16, !tbaa !227
  %211 = load i16, ptr %187, align 2, !tbaa !37
  %212 = sext i16 %211 to i32
  %213 = getelementptr inbounds i16, ptr %187, i64 1
  %214 = load i16, ptr %213, align 2, !tbaa !37
  %215 = sext i16 %214 to i32
  %216 = shl i32 %6, 8
  %217 = mul i32 %216, %212
  %218 = add i32 %217, 32768
  %219 = ashr i32 %218, 16
  %220 = trunc i32 %219 to i16
  %221 = sub i16 %220, %211
  %222 = mul i32 %216, %215
  %223 = add i32 %222, 32768
  %224 = ashr i32 %223, 16
  %225 = trunc i32 %224 to i16
  %226 = sub i16 %225, %214
  %227 = icmp slt i32 %219, %120
  %228 = tail call i32 @llvm.smin.i32(i32 %219, i32 %123)
  %229 = select i1 %227, i32 %120, i32 %228
  %230 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 20, i64 1
  %231 = load i32, ptr %230, align 4, !tbaa !39
  %232 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 21, i64 1
  %233 = load i32, ptr %232, align 4, !tbaa !39
  %234 = icmp slt i32 %224, %231
  %235 = tail call i32 @llvm.smin.i32(i32 %224, i32 %233)
  %236 = select i1 %234, i32 %231, i32 %235
  %237 = sext i16 %221 to i32
  %238 = icmp sgt i32 %120, %237
  %239 = tail call i32 @llvm.smin.i32(i32 %237, i32 %123)
  %240 = select i1 %238, i32 %120, i32 %239
  %241 = sext i16 %226 to i32
  %242 = icmp sgt i32 %231, %241
  %243 = tail call i32 @llvm.smin.i32(i32 %241, i32 %233)
  %244 = select i1 %242, i32 %231, i32 %243
  %245 = trunc i32 %244 to i16
  %246 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %247 = load i32, ptr %246, align 4, !tbaa !144
  %248 = icmp slt i32 %247, 2
  br i1 %248, label %249, label %288

249:                                              ; preds = %180
  %250 = and i32 %240, 65534
  %251 = and i32 %229, 65534
  %252 = and i16 %245, -2
  %253 = shl nuw i32 %251, 16
  %254 = lshr exact i32 %251, 1
  %255 = and i32 %254, 1
  %256 = shl i32 %236, 16
  %257 = and i32 %256, -131072
  %258 = and i32 %236, 2
  %259 = or i32 %255, %258
  %260 = shl nuw i32 %250, 16
  %261 = lshr exact i32 %250, 1
  %262 = and i32 %261, 1
  %263 = sext i16 %252 to i32
  %264 = and i32 %263, 2
  %265 = or i32 %264, %262
  %266 = zext i32 %259 to i64
  %267 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 5, i64 %266
  %268 = load ptr, ptr %267, align 8, !tbaa !46
  %269 = ashr i32 %253, 18
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %268, i64 %270
  %272 = ashr i32 %256, 18
  %273 = mul nsw i32 %272, %42
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i8, ptr %271, i64 %274
  %276 = zext i32 %265 to i64
  %277 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 5, i64 %276
  %278 = load ptr, ptr %277, align 8, !tbaa !46
  %279 = ashr i32 %260, 18
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8, ptr %278, i64 %280
  %282 = ashr i32 %263, 2
  %283 = mul nsw i32 %282, %42
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i8, ptr %281, i64 %284
  %286 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 3
  %287 = load ptr, ptr %286, align 8, !tbaa !46
  call void %287(ptr noundef nonnull %12, i32 noundef 16, ptr noundef %275, i32 noundef %42, ptr noundef %285, i32 noundef %42, i32 noundef %51) #17
  br label %309

288:                                              ; preds = %180
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #17
  store i32 16, ptr %14, align 4, !tbaa !39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #17
  store i32 16, ptr %15, align 4, !tbaa !39
  %289 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 1
  %290 = load ptr, ptr %289, align 8, !tbaa !251
  %291 = shl i32 %229, 16
  %292 = ashr exact i32 %291, 16
  %293 = shl i32 %236, 16
  %294 = ashr exact i32 %293, 16
  %295 = call ptr %290(ptr noundef nonnull %12, ptr noundef nonnull %14, ptr noundef nonnull %158, i32 noundef %42, i32 noundef %292, i32 noundef %294, i32 noundef 8, i32 noundef 8, ptr noundef nonnull %8) #17
  %296 = load ptr, ptr %289, align 8, !tbaa !251
  %297 = load i32, ptr %190, align 8, !tbaa !39
  %298 = shl i32 %240, 16
  %299 = ashr exact i32 %298, 16
  %300 = shl i32 %244, 16
  %301 = ashr exact i32 %300, 16
  %302 = call ptr %296(ptr noundef nonnull %96, ptr noundef nonnull %15, ptr noundef nonnull %197, i32 noundef %297, i32 noundef %299, i32 noundef %301, i32 noundef 8, i32 noundef 8, ptr noundef nonnull %8) #17
  %303 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 3
  %304 = load ptr, ptr %303, align 8, !tbaa !46
  %305 = load i32, ptr %14, align 4, !tbaa !39
  %306 = load i32, ptr %15, align 4, !tbaa !39
  call void %304(ptr noundef nonnull %12, i32 noundef 16, ptr noundef %295, i32 noundef %305, ptr noundef %302, i32 noundef %306, i32 noundef %51) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #17
  %307 = and i32 %240, 65535
  %308 = and i32 %229, 65535
  br label %309

309:                                              ; preds = %288, %249
  %310 = phi i32 [ %293, %288 ], [ %257, %249 ]
  %311 = phi i16 [ %245, %288 ], [ %252, %249 ]
  %312 = phi i32 [ %307, %288 ], [ %250, %249 ]
  %313 = phi i32 [ %308, %288 ], [ %251, %249 ]
  %314 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %315 = load ptr, ptr %314, align 8, !tbaa !46
  %316 = load ptr, ptr %152, align 8, !tbaa !46
  %317 = call i32 %315(ptr noundef %316, i32 noundef 16, ptr noundef nonnull %12, i32 noundef 16) #17
  %318 = icmp slt i32 %317, 268435456
  %319 = select i1 %318, i32 3, i32 0
  %320 = call i32 @llvm.smin.i32(i32 %317, i32 268435456)
  %321 = zext i16 %311 to i64
  %322 = shl nuw i64 %321, 48
  %323 = zext i32 %312 to i64
  %324 = shl nuw nsw i64 %323, 32
  %325 = or i64 %324, %322
  %326 = zext i32 %310 to i64
  %327 = or i64 %325, %326
  %328 = zext i32 %313 to i64
  %329 = or i64 %327, %328
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %344, label %331

331:                                              ; preds = %309
  %332 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 3
  %333 = load ptr, ptr %332, align 8, !tbaa !46
  %334 = load ptr, ptr %158, align 16, !tbaa !46
  %335 = load i32, ptr %150, align 8, !tbaa !39
  %336 = load ptr, ptr %197, align 16, !tbaa !46
  %337 = load i32, ptr %190, align 8, !tbaa !39
  call void %333(ptr noundef nonnull %12, i32 noundef 16, ptr noundef %334, i32 noundef %335, ptr noundef %336, i32 noundef %337, i32 noundef %51) #17
  %338 = load ptr, ptr %314, align 8, !tbaa !46
  %339 = load ptr, ptr %152, align 8, !tbaa !46
  %340 = call i32 %338(ptr noundef %339, i32 noundef 16, ptr noundef nonnull %12, i32 noundef 16) #17
  %341 = icmp slt i32 %340, %320
  %342 = select i1 %341, i32 3, i32 %319
  %343 = call i32 @llvm.smin.i32(i32 %340, i32 %320)
  br label %344

344:                                              ; preds = %309, %331, %179
  %345 = phi i64 [ 2, %309 ], [ 2, %331 ], [ 1, %179 ]
  %346 = phi i32 [ %319, %309 ], [ %342, %331 ], [ 0, %179 ]
  %347 = phi i32 [ %320, %309 ], [ %343, %331 ], [ 268435456, %179 ]
  %348 = getelementptr inbounds [4 x [2 x i16]], ptr %16, i64 0, i64 2
  %349 = sext i32 %38 to i64
  %350 = add nsw i32 %38, -1
  %351 = sext i32 %350 to i64
  %352 = add nsw i32 %38, 1
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds [4 x [2 x i16]], ptr %16, i64 0, i64 1
  br label %356

355:                                              ; preds = %453
  br i1 %30, label %461, label %542

356:                                              ; preds = %344, %453
  %357 = phi i64 [ 0, %344 ], [ %456, %453 ]
  %358 = phi i32 [ %347, %344 ], [ %459, %453 ]
  %359 = phi i32 [ %346, %344 ], [ %458, %453 ]
  %360 = getelementptr inbounds i32, ptr %7, i64 %357
  %361 = load i32, ptr %360, align 4, !tbaa !39
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds [2 x ptr], ptr %10, i64 0, i64 %357
  %364 = load ptr, ptr %363, align 8, !tbaa !46
  br i1 %362, label %446, label %365

365:                                              ; preds = %356
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %16) #17
  store i32 0, ptr %16, align 4, !tbaa !5
  store i32 0, ptr %348, align 4, !tbaa !5
  %366 = load ptr, ptr %35, align 16, !tbaa !169
  %367 = getelementptr inbounds %struct.x264_sps_t, ptr %366, i64 0, i32 16
  %368 = load i32, ptr %367, align 4, !tbaa !170
  %369 = add nsw i32 %368, -1
  %370 = icmp slt i32 %32, %369
  br i1 %370, label %371, label %374

371:                                              ; preds = %365
  %372 = getelementptr inbounds [2 x i16], ptr %364, i64 1
  %373 = load i32, ptr %372, align 4, !tbaa !5
  store i32 %373, ptr %16, align 4, !tbaa !5
  br label %374

374:                                              ; preds = %371, %365
  %375 = phi i32 [ %373, %371 ], [ 0, %365 ]
  %376 = phi i32 [ 1, %371 ], [ 0, %365 ]
  %377 = getelementptr inbounds %struct.x264_sps_t, ptr %366, i64 0, i32 17
  %378 = load i32, ptr %377, align 4, !tbaa !179
  %379 = add nsw i32 %378, -1
  %380 = icmp slt i32 %34, %379
  br i1 %380, label %381, label %408

381:                                              ; preds = %374
  %382 = getelementptr inbounds [2 x i16], ptr %364, i64 %349
  %383 = load i32, ptr %382, align 4, !tbaa !5
  %384 = zext i32 %376 to i64
  %385 = getelementptr inbounds [4 x [2 x i16]], ptr %16, i64 0, i64 %384
  store i32 %383, ptr %385, align 4, !tbaa !5
  %386 = add nuw nsw i32 %376, 1
  br i1 %75, label %387, label %393

387:                                              ; preds = %381
  %388 = getelementptr inbounds [2 x i16], ptr %364, i64 %351
  %389 = load i32, ptr %388, align 4, !tbaa !5
  %390 = zext i32 %386 to i64
  %391 = getelementptr inbounds [4 x [2 x i16]], ptr %16, i64 0, i64 %390
  store i32 %389, ptr %391, align 4, !tbaa !5
  %392 = or i32 %376, 2
  br label %393

393:                                              ; preds = %387, %381
  %394 = phi i32 [ %392, %387 ], [ %386, %381 ]
  %395 = load i32, ptr %367, align 4, !tbaa !170
  %396 = add nsw i32 %395, -1
  %397 = icmp slt i32 %32, %396
  br i1 %397, label %398, label %404

398:                                              ; preds = %393
  %399 = getelementptr inbounds [2 x i16], ptr %364, i64 %353
  %400 = load i32, ptr %399, align 4, !tbaa !5
  %401 = zext i32 %394 to i64
  %402 = getelementptr inbounds [4 x [2 x i16]], ptr %16, i64 0, i64 %401
  store i32 %400, ptr %402, align 4, !tbaa !5
  %403 = add nuw nsw i32 %394, 1
  br label %412

404:                                              ; preds = %393
  %405 = icmp ult i32 %394, 2
  br i1 %405, label %406, label %412

406:                                              ; preds = %404
  %407 = load i32, ptr %16, align 4, !tbaa !5
  br label %408

408:                                              ; preds = %406, %374
  %409 = phi i32 [ %407, %406 ], [ %375, %374 ]
  %410 = phi i32 [ 1, %406 ], [ %376, %374 ]
  %411 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 %357, i32 10
  store i32 %409, ptr %411, align 16, !tbaa !5
  br label %430

412:                                              ; preds = %398, %404
  %413 = phi i32 [ %403, %398 ], [ %394, %404 ]
  %414 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 %357, i32 10
  %415 = load <2 x i16>, ptr %16, align 4, !tbaa !37
  %416 = sext <2 x i16> %415 to <2 x i32>
  %417 = load <2 x i16>, ptr %354, align 4, !tbaa !37
  %418 = sext <2 x i16> %417 to <2 x i32>
  %419 = load <2 x i16>, ptr %348, align 4, !tbaa !37
  %420 = sext <2 x i16> %419 to <2 x i32>
  %421 = sub nsw <2 x i32> %416, %418
  %422 = call <2 x i32> @llvm.smin.v2i32(<2 x i32> %421, <2 x i32> zeroinitializer)
  %423 = call <2 x i32> @llvm.smax.v2i32(<2 x i32> %416, <2 x i32> %418)
  %424 = add nsw <2 x i32> %422, %418
  %425 = call <2 x i32> @llvm.smax.v2i32(<2 x i32> %424, <2 x i32> %420)
  %426 = sub nsw <2 x i32> %423, %425
  %427 = call <2 x i32> @llvm.smin.v2i32(<2 x i32> %426, <2 x i32> zeroinitializer)
  %428 = add nsw <2 x i32> %427, %425
  %429 = trunc <2 x i32> %428 to <2 x i16>
  store <2 x i16> %429, ptr %414, align 16, !tbaa !37
  br label %430

430:                                              ; preds = %412, %408
  %431 = phi i32 [ %413, %412 ], [ %410, %408 ]
  %432 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 %357
  call void @x264_me_search_ref(ptr noundef nonnull %0, ptr noundef nonnull %432, ptr noundef nonnull %16, i32 noundef %431, ptr noundef null) #17
  %433 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 %357, i32 12
  %434 = load i32, ptr %433, align 8, !tbaa !230
  %435 = add nsw i32 %434, -2
  store i32 %435, ptr %433, align 8, !tbaa !230
  %436 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 %357, i32 13
  %437 = load i32, ptr %436, align 4, !tbaa !5
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %430
  %440 = add nsw i32 %434, 3
  store i32 %440, ptr %433, align 8, !tbaa !230
  br label %441

441:                                              ; preds = %439, %430
  store i32 %437, ptr %364, align 4, !tbaa !5
  %442 = load i32, ptr %433, align 8, !tbaa !230
  %443 = getelementptr inbounds [2 x ptr], ptr %11, i64 0, i64 %357
  %444 = load ptr, ptr %443, align 8, !tbaa !46
  store i32 %442, ptr %444, align 4, !tbaa !39
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %16) #17
  %445 = load i32, ptr %433, align 8, !tbaa !230
  br label %453

446:                                              ; preds = %356
  %447 = load i32, ptr %364, align 4, !tbaa !5
  %448 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 %357, i32 13
  store i32 %447, ptr %448, align 4, !tbaa !5
  %449 = getelementptr inbounds [2 x ptr], ptr %11, i64 0, i64 %357
  %450 = load ptr, ptr %449, align 8, !tbaa !46
  %451 = load i32, ptr %450, align 4, !tbaa !39
  %452 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 %357, i32 12
  store i32 %451, ptr %452, align 8, !tbaa !230
  br label %453

453:                                              ; preds = %446, %441
  %454 = phi i32 [ %451, %446 ], [ %445, %441 ]
  %455 = icmp slt i32 %454, %358
  %456 = add nuw nsw i64 %357, 1
  %457 = trunc i64 %456 to i32
  %458 = select i1 %455, i32 %457, i32 %359
  %459 = call i32 @llvm.smin.i32(i32 %454, i32 %358)
  %460 = icmp eq i64 %456, %345
  br i1 %460, label %355, label %356, !llvm.loop !473

461:                                              ; preds = %355
  %462 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 13
  %463 = load i32, ptr %462, align 4
  %464 = icmp ne i32 %463, 0
  %465 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 13
  %466 = load i32, ptr %465, align 4
  %467 = icmp ne i32 %466, 0
  %468 = select i1 %464, i1 true, i1 %467
  br i1 %468, label %469, label %542

469:                                              ; preds = %461
  %470 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %471 = load i32, ptr %470, align 4, !tbaa !144
  %472 = icmp slt i32 %471, 2
  br i1 %472, label %473, label %511

473:                                              ; preds = %469
  %474 = shl i32 %463, 16
  %475 = lshr i32 %463, 1
  %476 = and i32 %475, 1
  %477 = lshr i32 %463, 16
  %478 = and i32 %477, 2
  %479 = or i32 %476, %478
  %480 = shl i32 %466, 16
  %481 = lshr i32 %466, 1
  %482 = and i32 %481, 1
  %483 = lshr i32 %466, 16
  %484 = and i32 %483, 2
  %485 = or i32 %482, %484
  %486 = zext i32 %479 to i64
  %487 = getelementptr inbounds %struct.x264_me_t, ptr %13, i64 0, i32 5, i64 %486
  %488 = load ptr, ptr %487, align 8, !tbaa !46
  %489 = ashr i32 %474, 18
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds i8, ptr %488, i64 %490
  %492 = ashr i32 %463, 18
  %493 = load i32, ptr %150, align 8, !tbaa !39
  %494 = mul nsw i32 %493, %492
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds i8, ptr %491, i64 %495
  %497 = zext i32 %485 to i64
  %498 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 5, i64 %497
  %499 = load ptr, ptr %498, align 8, !tbaa !46
  %500 = ashr i32 %480, 18
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i8, ptr %499, i64 %501
  %503 = ashr i32 %466, 18
  %504 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 9
  %505 = load i32, ptr %504, align 8, !tbaa !39
  %506 = mul nsw i32 %505, %503
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds i8, ptr %502, i64 %507
  %509 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 3
  %510 = load ptr, ptr %509, align 8, !tbaa !46
  call void %510(ptr noundef nonnull %12, i32 noundef 16, ptr noundef %496, i32 noundef %493, ptr noundef %508, i32 noundef %505, i32 noundef %51) #17
  br label %533

511:                                              ; preds = %469
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #17
  store i32 16, ptr %17, align 4, !tbaa !39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #17
  store i32 16, ptr %18, align 4, !tbaa !39
  %512 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 1
  %513 = load ptr, ptr %512, align 8, !tbaa !251
  %514 = load i32, ptr %150, align 8, !tbaa !39
  %515 = shl i32 %463, 16
  %516 = ashr exact i32 %515, 16
  %517 = ashr i32 %463, 16
  %518 = call ptr %513(ptr noundef nonnull %12, ptr noundef nonnull %17, ptr noundef nonnull %158, i32 noundef %514, i32 noundef %516, i32 noundef %517, i32 noundef 8, i32 noundef 8, ptr noundef %8) #17
  %519 = load ptr, ptr %512, align 8, !tbaa !251
  %520 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 5
  %521 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 9
  %522 = load i32, ptr %521, align 8, !tbaa !39
  %523 = load i16, ptr %465, align 4, !tbaa !37
  %524 = sext i16 %523 to i32
  %525 = getelementptr inbounds [2 x %struct.x264_me_t], ptr %13, i64 0, i64 1, i32 13, i64 1
  %526 = load i16, ptr %525, align 2, !tbaa !37
  %527 = sext i16 %526 to i32
  %528 = call ptr %519(ptr noundef nonnull %96, ptr noundef nonnull %18, ptr noundef nonnull %520, i32 noundef %522, i32 noundef %524, i32 noundef %527, i32 noundef 8, i32 noundef 8, ptr noundef %8) #17
  %529 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 3, i64 3
  %530 = load ptr, ptr %529, align 8, !tbaa !46
  %531 = load i32, ptr %17, align 4, !tbaa !39
  %532 = load i32, ptr %18, align 4, !tbaa !39
  call void %530(ptr noundef nonnull %12, i32 noundef 16, ptr noundef %518, i32 noundef %531, ptr noundef %528, i32 noundef %532, i32 noundef %51) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #17
  br label %533

533:                                              ; preds = %511, %473
  %534 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %535 = load ptr, ptr %534, align 8, !tbaa !46
  %536 = load ptr, ptr %152, align 8, !tbaa !46
  %537 = call i32 %535(ptr noundef %536, i32 noundef 16, ptr noundef nonnull %12, i32 noundef 16) #17
  %538 = add nsw i32 %537, 5
  %539 = icmp slt i32 %538, %459
  %540 = select i1 %539, i32 3, i32 %458
  %541 = call i32 @llvm.smin.i32(i32 %538, i32 %459)
  br label %542

542:                                              ; preds = %355, %533, %461, %94
  %543 = phi i32 [ 0, %94 ], [ %540, %533 ], [ %458, %461 ], [ %458, %355 ]
  %544 = phi i32 [ 268435456, %94 ], [ %541, %533 ], [ %459, %461 ], [ %459, %355 ]
  %545 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 62
  %546 = load i32, ptr %545, align 8, !tbaa !318
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %708

548:                                              ; preds = %542
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %19) #17
  %549 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 39
  %550 = load ptr, ptr %101, align 16, !tbaa !46
  %551 = add nsw i32 %45, -1
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i8, ptr %550, i64 %552
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %20) #17
  %554 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 7
  %555 = sext i32 %42 to i64
  %556 = sub nsw i64 0, %555
  %557 = getelementptr inbounds i8, ptr %553, i64 %556
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %554, ptr noundef nonnull align 1 dereferenceable(17) %557, i64 17, i1 false)
  %558 = load i8, ptr %553, align 1, !tbaa !5
  store i8 %558, ptr %549, align 1, !tbaa !5
  %559 = getelementptr inbounds i8, ptr %553, i64 %555
  %560 = load i8, ptr %559, align 1, !tbaa !5
  %561 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 71
  store i8 %560, ptr %561, align 1, !tbaa !5
  %562 = shl nsw i64 %555, 1
  %563 = getelementptr inbounds i8, ptr %553, i64 %562
  %564 = load i8, ptr %563, align 1, !tbaa !5
  %565 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 103
  store i8 %564, ptr %565, align 1, !tbaa !5
  %566 = mul nsw i64 %555, 3
  %567 = getelementptr inbounds i8, ptr %553, i64 %566
  %568 = load i8, ptr %567, align 1, !tbaa !5
  %569 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 135
  store i8 %568, ptr %569, align 1, !tbaa !5
  %570 = shl nsw i64 %555, 2
  %571 = getelementptr inbounds i8, ptr %553, i64 %570
  %572 = load i8, ptr %571, align 1, !tbaa !5
  %573 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 167
  store i8 %572, ptr %573, align 1, !tbaa !5
  %574 = mul nsw i64 %555, 5
  %575 = getelementptr inbounds i8, ptr %553, i64 %574
  %576 = load i8, ptr %575, align 1, !tbaa !5
  %577 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 199
  store i8 %576, ptr %577, align 1, !tbaa !5
  %578 = mul nsw i64 %555, 6
  %579 = getelementptr inbounds i8, ptr %553, i64 %578
  %580 = load i8, ptr %579, align 1, !tbaa !5
  %581 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 231
  store i8 %580, ptr %581, align 1, !tbaa !5
  %582 = mul nsw i64 %555, 7
  %583 = getelementptr inbounds i8, ptr %553, i64 %582
  %584 = load i8, ptr %583, align 1, !tbaa !5
  %585 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 263
  store i8 %584, ptr %585, align 1, !tbaa !5
  %586 = getelementptr inbounds [288 x i8], ptr %12, i64 0, i64 40
  %587 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 24
  %588 = load ptr, ptr %587, align 8, !tbaa !299
  %589 = icmp eq ptr %588, null
  br i1 %589, label %590, label %609

590:                                              ; preds = %548
  %591 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %592 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 65, i64 0
  %593 = load ptr, ptr %592, align 8, !tbaa !46
  call void %593(ptr noundef nonnull %586) #17
  %594 = load ptr, ptr %591, align 8, !tbaa !46
  %595 = load ptr, ptr %98, align 16, !tbaa !46
  %596 = call i32 %594(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %595, i32 noundef 16) #17
  store i32 %596, ptr %20, align 4, !tbaa !39
  %597 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 65, i64 1
  %598 = load ptr, ptr %597, align 8, !tbaa !46
  call void %598(ptr noundef nonnull %586) #17
  %599 = load ptr, ptr %591, align 8, !tbaa !46
  %600 = load ptr, ptr %98, align 16, !tbaa !46
  %601 = call i32 %599(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %600, i32 noundef 16) #17
  %602 = getelementptr inbounds [3 x i32], ptr %20, i64 0, i64 1
  store i32 %601, ptr %602, align 4, !tbaa !39
  %603 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 65, i64 2
  %604 = load ptr, ptr %603, align 8, !tbaa !46
  call void %604(ptr noundef nonnull %586) #17
  %605 = load ptr, ptr %591, align 8, !tbaa !46
  %606 = load ptr, ptr %98, align 16, !tbaa !46
  %607 = call i32 %605(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %606, i32 noundef 16) #17
  %608 = getelementptr inbounds [3 x i32], ptr %20, i64 0, i64 2
  store i32 %607, ptr %608, align 4, !tbaa !39
  br label %616

609:                                              ; preds = %548
  %610 = load ptr, ptr %98, align 16, !tbaa !46
  call void %588(ptr noundef %610, ptr noundef nonnull %586, ptr noundef nonnull %20) #17
  %611 = load i32, ptr %20, align 4, !tbaa !39
  %612 = getelementptr inbounds [3 x i32], ptr %20, i64 0, i64 1
  %613 = load i32, ptr %612, align 4
  %614 = getelementptr inbounds [3 x i32], ptr %20, i64 0, i64 2
  %615 = load i32, ptr %614, align 4
  br label %616

616:                                              ; preds = %590, %609
  %617 = phi i32 [ %607, %590 ], [ %615, %609 ]
  %618 = phi i32 [ %601, %590 ], [ %613, %609 ]
  %619 = phi i32 [ %596, %590 ], [ %611, %609 ]
  %620 = call i32 @llvm.smin.i32(i32 %618, i32 %617)
  %621 = call i32 @llvm.smin.i32(i32 %619, i32 %620)
  %622 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 11
  %623 = load i32, ptr %622, align 4, !tbaa !144
  %624 = icmp sgt i32 %623, 1
  br i1 %624, label %625, label %671

625:                                              ; preds = %616
  %626 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 65, i64 3
  %627 = load ptr, ptr %626, align 8, !tbaa !46
  call void %627(ptr noundef nonnull %586) #17
  %628 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 69, i32 5, i64 3
  %629 = load ptr, ptr %628, align 8, !tbaa !46
  %630 = load ptr, ptr %98, align 16, !tbaa !46
  %631 = call i32 %629(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %630, i32 noundef 16) #17
  %632 = call i32 @llvm.smin.i32(i32 %621, i32 %631)
  %633 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 68
  %634 = load ptr, ptr %633, align 16, !tbaa !276
  call void %634(ptr noundef nonnull %586, ptr noundef nonnull %19, i32 noundef 15, i32 noundef 15) #17
  %635 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 3
  %636 = load ptr, ptr %635, align 8, !tbaa !46
  call void %636(ptr noundef nonnull %586, ptr noundef nonnull %19) #17
  %637 = load ptr, ptr %628, align 8, !tbaa !46
  %638 = load ptr, ptr %98, align 16, !tbaa !46
  %639 = call i32 %637(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %638, i32 noundef 16) #17
  %640 = call i32 @llvm.smin.i32(i32 %632, i32 %639)
  %641 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 4
  %642 = load ptr, ptr %641, align 8, !tbaa !46
  call void %642(ptr noundef nonnull %586, ptr noundef nonnull %19) #17
  %643 = load ptr, ptr %628, align 8, !tbaa !46
  %644 = load ptr, ptr %98, align 16, !tbaa !46
  %645 = call i32 %643(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %644, i32 noundef 16) #17
  %646 = call i32 @llvm.smin.i32(i32 %640, i32 %645)
  %647 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 5
  %648 = load ptr, ptr %647, align 8, !tbaa !46
  call void %648(ptr noundef nonnull %586, ptr noundef nonnull %19) #17
  %649 = load ptr, ptr %628, align 8, !tbaa !46
  %650 = load ptr, ptr %98, align 16, !tbaa !46
  %651 = call i32 %649(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %650, i32 noundef 16) #17
  %652 = call i32 @llvm.smin.i32(i32 %646, i32 %651)
  %653 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 6
  %654 = load ptr, ptr %653, align 8, !tbaa !46
  call void %654(ptr noundef nonnull %586, ptr noundef nonnull %19) #17
  %655 = load ptr, ptr %628, align 8, !tbaa !46
  %656 = load ptr, ptr %98, align 16, !tbaa !46
  %657 = call i32 %655(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %656, i32 noundef 16) #17
  %658 = call i32 @llvm.smin.i32(i32 %652, i32 %657)
  %659 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 7
  %660 = load ptr, ptr %659, align 8, !tbaa !46
  call void %660(ptr noundef nonnull %586, ptr noundef nonnull %19) #17
  %661 = load ptr, ptr %628, align 8, !tbaa !46
  %662 = load ptr, ptr %98, align 16, !tbaa !46
  %663 = call i32 %661(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %662, i32 noundef 16) #17
  %664 = call i32 @llvm.smin.i32(i32 %658, i32 %663)
  %665 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 66, i64 8
  %666 = load ptr, ptr %665, align 8, !tbaa !46
  call void %666(ptr noundef nonnull %586, ptr noundef nonnull %19) #17
  %667 = load ptr, ptr %628, align 8, !tbaa !46
  %668 = load ptr, ptr %98, align 16, !tbaa !46
  %669 = call i32 %667(ptr noundef nonnull %586, i32 noundef 32, ptr noundef %668, i32 noundef 16) #17
  %670 = call i32 @llvm.smin.i32(i32 %664, i32 %669)
  br label %671

671:                                              ; preds = %625, %616
  %672 = phi i32 [ %621, %616 ], [ %670, %625 ]
  %673 = add nsw i32 %672, 5
  %674 = trunc i32 %673 to i16
  %675 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 63
  %676 = load ptr, ptr %675, align 16, !tbaa !325
  %677 = getelementptr inbounds i16, ptr %676, i64 %58
  store i16 %674, ptr %677, align 2, !tbaa !37
  br i1 %95, label %678, label %707

678:                                              ; preds = %671
  %679 = load ptr, ptr %28, align 8, !tbaa !46
  %680 = getelementptr inbounds %struct.x264_frame, ptr %679, i64 0, i32 56
  %681 = load ptr, ptr %680, align 16, !tbaa !46
  %682 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 14
  %683 = load i32, ptr %682, align 8, !tbaa !143
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %694, label %685

685:                                              ; preds = %678
  %686 = getelementptr inbounds %struct.x264_frame, ptr %679, i64 0, i32 65
  %687 = load ptr, ptr %686, align 16, !tbaa !383
  %688 = getelementptr inbounds i16, ptr %687, i64 %58
  %689 = load i16, ptr %688, align 2, !tbaa !37
  %690 = zext i16 %689 to i32
  %691 = mul nsw i32 %673, %690
  %692 = add nsw i32 %691, 128
  %693 = ashr i32 %692, 8
  br label %694

694:                                              ; preds = %685, %678
  %695 = phi i32 [ %693, %685 ], [ %673, %678 ]
  %696 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 52
  %697 = load i32, ptr %696, align 4, !tbaa !39
  %698 = add nsw i32 %697, %673
  store i32 %698, ptr %696, align 4, !tbaa !39
  %699 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 53
  %700 = load i32, ptr %699, align 4, !tbaa !39
  %701 = add nsw i32 %700, %695
  store i32 %701, ptr %699, align 4, !tbaa !39
  %702 = load i32, ptr %33, align 4, !tbaa !62
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds i32, ptr %681, i64 %703
  %705 = load i32, ptr %704, align 4, !tbaa !39
  %706 = add nsw i32 %705, %695
  store i32 %706, ptr %704, align 4, !tbaa !39
  br label %707

707:                                              ; preds = %694, %671
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %20) #17
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %19) #17
  br label %708

708:                                              ; preds = %707, %542
  br i1 %30, label %724, label %709

709:                                              ; preds = %708
  %710 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 63
  %711 = load ptr, ptr %710, align 16, !tbaa !325
  %712 = getelementptr inbounds i16, ptr %711, i64 %58
  %713 = load i16, ptr %712, align 2, !tbaa !37
  %714 = zext i16 %713 to i32
  %715 = icmp sgt i32 %544, %714
  %716 = select i1 %715, i32 0, i32 %543
  %717 = call i32 @llvm.smin.i32(i32 %544, i32 %714)
  br i1 %95, label %718, label %724

718:                                              ; preds = %709
  %719 = zext i1 %715 to i32
  %720 = sext i32 %53 to i64
  %721 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 55, i64 %720
  %722 = load i32, ptr %721, align 4, !tbaa !39
  %723 = add nsw i32 %722, %719
  store i32 %723, ptr %721, align 4, !tbaa !39
  br label %724

724:                                              ; preds = %709, %718, %708
  %725 = phi i32 [ %543, %708 ], [ %716, %718 ], [ %716, %709 ]
  %726 = phi i32 [ %544, %708 ], [ %717, %718 ], [ %717, %709 ]
  br i1 %105, label %727, label %730

727:                                              ; preds = %724
  %728 = sext i32 %53 to i64
  %729 = sext i32 %61 to i64
  br label %763

730:                                              ; preds = %724
  %731 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 14
  %732 = load i32, ptr %731, align 8, !tbaa !143
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %744, label %734

734:                                              ; preds = %730
  %735 = load ptr, ptr %28, align 8, !tbaa !46
  %736 = getelementptr inbounds %struct.x264_frame, ptr %735, i64 0, i32 65
  %737 = load ptr, ptr %736, align 16, !tbaa !383
  %738 = getelementptr inbounds i16, ptr %737, i64 %58
  %739 = load i16, ptr %738, align 2, !tbaa !37
  %740 = zext i16 %739 to i32
  %741 = mul nsw i32 %726, %740
  %742 = add nsw i32 %741, 128
  %743 = ashr i32 %742, 8
  br label %744

744:                                              ; preds = %734, %730
  %745 = phi i32 [ %743, %734 ], [ %726, %730 ]
  %746 = sext i32 %53 to i64
  %747 = sext i32 %61 to i64
  %748 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 56, i64 %746, i64 %747
  %749 = load ptr, ptr %748, align 8, !tbaa !46
  %750 = load i32, ptr %33, align 4, !tbaa !62
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds i32, ptr %749, i64 %751
  %753 = load i32, ptr %752, align 4, !tbaa !39
  %754 = add nsw i32 %753, %745
  store i32 %754, ptr %752, align 4, !tbaa !39
  br i1 %95, label %755, label %763

755:                                              ; preds = %744
  %756 = load ptr, ptr %28, align 8, !tbaa !46
  %757 = getelementptr inbounds %struct.x264_frame, ptr %756, i64 0, i32 52, i64 %746, i64 %747
  %758 = load i32, ptr %757, align 4, !tbaa !39
  %759 = add nsw i32 %758, %726
  store i32 %759, ptr %757, align 4, !tbaa !39
  %760 = getelementptr inbounds %struct.x264_frame, ptr %756, i64 0, i32 53, i64 %746, i64 %747
  %761 = load i32, ptr %760, align 4, !tbaa !39
  %762 = add nsw i32 %761, %745
  store i32 %762, ptr %760, align 4, !tbaa !39
  br label %763

763:                                              ; preds = %727, %744, %755
  %764 = phi i64 [ %729, %727 ], [ %747, %744 ], [ %747, %755 ]
  %765 = phi i64 [ %728, %727 ], [ %746, %744 ], [ %746, %755 ]
  %766 = shl nuw nsw i32 %725, 14
  %767 = add nsw i32 %726, %766
  %768 = trunc i32 %767 to i16
  %769 = getelementptr inbounds %struct.x264_frame, ptr %29, i64 0, i32 46, i64 %765, i64 %764
  %770 = load ptr, ptr %769, align 8, !tbaa !46
  %771 = getelementptr inbounds i16, ptr %770, i64 %58
  store i16 %768, ptr %771, align 2, !tbaa !37
  call void @llvm.lifetime.end.p0(i64 288, ptr nonnull %13) #17
  call void @llvm.lifetime.end.p0(i64 288, ptr nonnull %12) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @scenecut_internal(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds ptr, ptr %2, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !46
  %10 = tail call fastcc i32 @x264_slicetype_frame_cost(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %4, i32 noundef 0)
  %11 = getelementptr inbounds %struct.x264_frame, ptr %9, i64 0, i32 52
  %12 = load i32, ptr %11, align 4, !tbaa !39
  %13 = sub nsw i32 %4, %3
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.x264_frame, ptr %9, i64 0, i32 52, i64 %14
  %16 = load i32, ptr %15, align 4, !tbaa !39
  %17 = getelementptr inbounds %struct.x264_frame, ptr %9, i64 0, i32 10
  %18 = load i32, ptr %17, align 8, !tbaa !314
  %19 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 75
  %20 = load ptr, ptr %19, align 16, !tbaa !343
  %21 = getelementptr inbounds %struct.x264_lookahead_t, ptr %20, i64 0, i32 3
  %22 = load i32, ptr %21, align 4, !tbaa !353
  %23 = sub nsw i32 %18, %22
  %24 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 15
  %25 = load i32, ptr %24, align 4, !tbaa !355
  %26 = sitofp i32 %25 to double
  %27 = fmul fast double %26, 1.000000e-02
  %28 = fptrunc double %27 to float
  %29 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 14
  %30 = load i32, ptr %29, align 8, !tbaa !354
  %31 = sitofp i32 %30 to float
  %32 = fmul fast float %28, %31
  %33 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 13
  %34 = load i32, ptr %33, align 4, !tbaa !352
  %35 = shl nsw i32 %34, 2
  %36 = sitofp i32 %35 to float
  %37 = fdiv fast float %32, %36
  %38 = icmp eq i32 %30, %34
  %39 = select i1 %38, float %28, float %37
  %40 = sdiv i32 %30, 4
  %41 = icmp slt i32 %23, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %6
  %43 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 16
  %44 = load i32, ptr %43, align 16, !tbaa !175
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42, %6
  %47 = fmul fast float %39, 2.500000e-01
  br label %63

48:                                               ; preds = %42
  %49 = icmp sgt i32 %23, %30
  br i1 %49, label %54, label %50

50:                                               ; preds = %48
  %51 = sitofp i32 %23 to float
  %52 = fmul fast float %39, %51
  %53 = fdiv fast float %52, %31
  br label %63

54:                                               ; preds = %48
  %55 = fsub fast float %28, %39
  %56 = sub nsw i32 %23, %30
  %57 = sitofp i32 %56 to float
  %58 = fmul fast float %55, %57
  %59 = sub nsw i32 %34, %30
  %60 = sitofp i32 %59 to float
  %61 = fdiv fast float %58, %60
  %62 = fadd fast float %61, %39
  br label %63

63:                                               ; preds = %50, %54, %46
  %64 = phi float [ %47, %46 ], [ %53, %50 ], [ %62, %54 ]
  %65 = sitofp i32 %16 to double
  %66 = fpext float %64 to double
  %67 = fsub fast double 1.000000e+00, %66
  %68 = sitofp i32 %12 to double
  %69 = fmul fast double %67, %68
  %70 = fcmp fast ole double %69, %65
  %71 = icmp ne i32 %5, 0
  %72 = and i1 %71, %70
  br i1 %72, label %73, label %93

73:                                               ; preds = %63
  %74 = getelementptr inbounds %struct.x264_frame, ptr %9, i64 0, i32 55, i64 %14
  %75 = load i32, ptr %74, align 4, !tbaa !39
  %76 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %77 = load ptr, ptr %76, align 16, !tbaa !169
  %78 = getelementptr inbounds %struct.x264_sps_t, ptr %77, i64 0, i32 16
  %79 = load i32, ptr %78, align 4, !tbaa !170
  %80 = icmp sgt i32 %79, 2
  %81 = getelementptr inbounds %struct.x264_sps_t, ptr %77, i64 0, i32 17
  %82 = load i32, ptr %81, align 4, !tbaa !179
  %83 = icmp sgt i32 %82, 2
  %84 = and i1 %80, %83
  %85 = add nsw i32 %79, -2
  %86 = add nsw i32 %82, -2
  %87 = mul nsw i32 %86, %85
  %88 = mul nsw i32 %82, %79
  %89 = select i1 %84, i32 %87, i32 %88
  %90 = sub nsw i32 %89, %75
  %91 = fdiv fast double %65, %68
  %92 = fsub fast double 1.000000e+00, %91
  tail call void (ptr, i32, ptr, ...) @x264_log(ptr noundef nonnull %0, i32 noundef 3, ptr noundef nonnull @.str.9, i32 noundef %18, i32 noundef %12, i32 noundef %16, double noundef nofpclass(nan inf) %92, double noundef nofpclass(nan inf) %66, i32 noundef %23, i32 noundef %75, i32 noundef %90) #17
  br label %93

93:                                               ; preds = %73, %63
  %94 = zext i1 %70 to i32
  ret i32 %94
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @x264_macroblock_tree_propagate(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds ptr, ptr %1, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !46
  %10 = getelementptr inbounds %struct.x264_frame, ptr %9, i64 0, i32 64
  %11 = load ptr, ptr %10, align 8, !tbaa !376
  %12 = sext i32 %3 to i64
  %13 = getelementptr inbounds ptr, ptr %1, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = getelementptr inbounds %struct.x264_frame, ptr %14, i64 0, i32 64
  %16 = load ptr, ptr %15, align 8, !tbaa !376
  %17 = sub nsw i32 %4, %2
  %18 = shl i32 %17, 8
  %19 = sub nsw i32 %3, %2
  %20 = ashr i32 %19, 1
  %21 = add nsw i32 %18, %20
  %22 = sdiv i32 %21, %19
  %23 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 41, i32 4
  %24 = load i32, ptr %23, align 16, !tbaa !472
  %25 = icmp eq i32 %24, 0
  %26 = ashr i32 %22, 2
  %27 = sub nsw i32 64, %26
  %28 = select i1 %25, i32 32, i32 %27
  %29 = sext i32 %4 to i64
  %30 = getelementptr inbounds ptr, ptr %1, i64 %29
  %31 = load ptr, ptr %30, align 8, !tbaa !46
  %32 = getelementptr inbounds %struct.x264_frame, ptr %31, i64 0, i32 45
  %33 = add nsw i32 %17, -1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [17 x ptr], ptr %32, i64 0, i64 %34
  %36 = load ptr, ptr %35, align 8, !tbaa !46
  %37 = sub nsw i32 %3, %4
  %38 = add nsw i32 %37, -1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %struct.x264_frame, ptr %31, i64 0, i32 45, i64 1, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !46
  %42 = sub nsw i32 64, %28
  %43 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 61
  %44 = load ptr, ptr %43, align 8, !tbaa !474
  %45 = getelementptr inbounds %struct.x264_frame, ptr %31, i64 0, i32 64
  %46 = load ptr, ptr %45, align 8, !tbaa !376
  %47 = icmp ne i32 %5, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %6
  %49 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  %50 = load ptr, ptr %49, align 16, !tbaa !169
  %51 = getelementptr inbounds %struct.x264_sps_t, ptr %50, i64 0, i32 16
  %52 = load i32, ptr %51, align 4, !tbaa !170
  %53 = sext i32 %52 to i64
  %54 = shl nsw i64 %53, 1
  tail call void @llvm.memset.p0.i64(ptr align 2 %46, i8 0, i64 %54, i1 false)
  br label %55

55:                                               ; preds = %48, %6
  %56 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 5
  %57 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 24
  store i32 0, ptr %56, align 4, !tbaa !62
  %58 = load ptr, ptr %57, align 16, !tbaa !169
  %59 = getelementptr inbounds %struct.x264_sps_t, ptr %58, i64 0, i32 17
  %60 = load i32, ptr %59, align 4, !tbaa !179
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %458

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 1
  %64 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 70, i32 21
  %65 = sext i32 %17 to i64
  %66 = sext i32 %37 to i64
  %67 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55, i32 4
  %68 = getelementptr inbounds %struct.x264_sps_t, ptr %58, i64 0, i32 16
  %69 = load i32, ptr %68, align 4, !tbaa !170
  br label %70

70:                                               ; preds = %62, %452
  %71 = phi i32 [ %69, %62 ], [ %90, %452 ]
  %72 = phi ptr [ %46, %62 ], [ %93, %452 ]
  %73 = phi i32 [ 0, %62 ], [ %454, %452 ]
  %74 = load i32, ptr %63, align 4, !tbaa !65
  %75 = mul nsw i32 %74, %73
  %76 = load ptr, ptr %64, align 8, !tbaa !475
  %77 = load ptr, ptr %30, align 8, !tbaa !46
  %78 = getelementptr inbounds %struct.x264_frame, ptr %77, i64 0, i32 63
  %79 = load ptr, ptr %78, align 16, !tbaa !325
  %80 = sext i32 %75 to i64
  %81 = getelementptr inbounds i16, ptr %79, i64 %80
  %82 = getelementptr inbounds %struct.x264_frame, ptr %77, i64 0, i32 46, i64 %65, i64 %66
  %83 = load ptr, ptr %82, align 8, !tbaa !46
  %84 = getelementptr inbounds i16, ptr %83, i64 %80
  %85 = getelementptr inbounds %struct.x264_frame, ptr %77, i64 0, i32 65
  %86 = load ptr, ptr %85, align 16, !tbaa !383
  %87 = getelementptr inbounds i16, ptr %86, i64 %80
  tail call void %76(ptr noundef %44, ptr noundef %72, ptr noundef %81, ptr noundef %84, ptr noundef %87, i32 noundef %71) #17
  %88 = load ptr, ptr %57, align 16, !tbaa !169
  %89 = getelementptr inbounds %struct.x264_sps_t, ptr %88, i64 0, i32 16
  %90 = load i32, ptr %89, align 4, !tbaa !170
  %91 = select i1 %47, i32 %90, i32 0
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, ptr %72, i64 %92
  store i32 0, ptr %67, align 16, !tbaa !168
  %94 = icmp sgt i32 %90, 0
  br i1 %94, label %95, label %452

95:                                               ; preds = %70
  %96 = add nsw i32 %90, -1
  %97 = getelementptr inbounds %struct.x264_sps_t, ptr %88, i64 0, i32 17
  %98 = zext i32 %90 to i64
  br label %99

99:                                               ; preds = %95, %447
  %100 = phi i64 [ 0, %95 ], [ %448, %447 ]
  %101 = phi i64 [ %80, %95 ], [ %450, %447 ]
  %102 = getelementptr inbounds i32, ptr %44, i64 %100
  %103 = load i32, ptr %102, align 4, !tbaa !39
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %447

105:                                              ; preds = %99
  %106 = load ptr, ptr %30, align 8, !tbaa !46
  %107 = getelementptr inbounds %struct.x264_frame, ptr %106, i64 0, i32 46, i64 %65, i64 %66
  %108 = load ptr, ptr %107, align 8, !tbaa !46
  %109 = getelementptr inbounds i16, ptr %108, i64 %101
  %110 = load i16, ptr %109, align 2, !tbaa !37
  %111 = icmp ugt i16 %110, -16385
  %112 = trunc i64 %100 to i32
  %113 = and i16 %110, 16384
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %280, label %115

115:                                              ; preds = %105
  %116 = mul nsw i32 %28, %103
  %117 = add nsw i32 %116, 32
  %118 = ashr i32 %117, 6
  %119 = select i1 %111, i32 %118, i32 %103
  %120 = getelementptr inbounds [2 x i16], ptr %36, i64 %101
  %121 = load i32, ptr %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %128

123:                                              ; preds = %115
  %124 = getelementptr inbounds i16, ptr %11, i64 %101
  %125 = load i16, ptr %124, align 2, !tbaa !37
  %126 = zext i16 %125 to i32
  %127 = add nsw i32 %119, %126
  br label %275

128:                                              ; preds = %115
  %129 = shl i32 %121, 16
  %130 = lshr i32 %121, 16
  %131 = ashr i32 %129, 21
  %132 = add nsw i32 %131, %112
  %133 = ashr i32 %121, 21
  %134 = load i32, ptr %56, align 4, !tbaa !62
  %135 = add nsw i32 %133, %134
  %136 = load i32, ptr %63, align 4, !tbaa !65
  %137 = mul nsw i32 %135, %136
  %138 = add nsw i32 %137, %132
  %139 = add nsw i32 %138, 1
  %140 = add nsw i32 %138, %136
  %141 = add nsw i32 %140, 1
  %142 = and i32 %121, 31
  %143 = and i32 %130, 31
  %144 = sub nuw nsw i32 32, %143
  %145 = sub nuw nsw i32 32, %142
  %146 = mul nuw nsw i32 %144, %145
  %147 = mul nuw nsw i32 %144, %142
  %148 = mul nuw nsw i32 %143, %145
  %149 = mul nuw nsw i32 %143, %142
  %150 = icmp slt i32 %132, %96
  br i1 %150, label %151, label %197

151:                                              ; preds = %128
  %152 = load i32, ptr %97, align 4, !tbaa !179
  %153 = add nsw i32 %152, -1
  %154 = icmp slt i32 %135, %153
  %155 = or i32 %135, %132
  %156 = icmp sgt i32 %155, -1
  %157 = and i1 %156, %154
  br i1 %157, label %158, label %197

158:                                              ; preds = %151
  %159 = sext i32 %138 to i64
  %160 = getelementptr inbounds i16, ptr %11, i64 %159
  %161 = load i16, ptr %160, align 2, !tbaa !37
  %162 = zext i16 %161 to i32
  %163 = mul nsw i32 %146, %119
  %164 = add nsw i32 %163, 512
  %165 = ashr i32 %164, 10
  %166 = add nsw i32 %165, %162
  %167 = tail call i32 @llvm.smin.i32(i32 %166, i32 65535)
  %168 = trunc i32 %167 to i16
  store i16 %168, ptr %160, align 2, !tbaa !37
  %169 = sext i32 %139 to i64
  %170 = getelementptr inbounds i16, ptr %11, i64 %169
  %171 = load i16, ptr %170, align 2, !tbaa !37
  %172 = zext i16 %171 to i32
  %173 = mul nsw i32 %147, %119
  %174 = add nsw i32 %173, 512
  %175 = ashr i32 %174, 10
  %176 = add nsw i32 %175, %172
  %177 = tail call i32 @llvm.smin.i32(i32 %176, i32 65535)
  %178 = trunc i32 %177 to i16
  store i16 %178, ptr %170, align 2, !tbaa !37
  %179 = sext i32 %140 to i64
  %180 = getelementptr inbounds i16, ptr %11, i64 %179
  %181 = load i16, ptr %180, align 2, !tbaa !37
  %182 = zext i16 %181 to i32
  %183 = mul nsw i32 %148, %119
  %184 = add nsw i32 %183, 512
  %185 = ashr i32 %184, 10
  %186 = add nsw i32 %185, %182
  %187 = tail call i32 @llvm.smin.i32(i32 %186, i32 65535)
  %188 = trunc i32 %187 to i16
  store i16 %188, ptr %180, align 2, !tbaa !37
  %189 = sext i32 %141 to i64
  %190 = getelementptr inbounds i16, ptr %11, i64 %189
  %191 = load i16, ptr %190, align 2, !tbaa !37
  %192 = zext i16 %191 to i32
  %193 = mul nsw i32 %149, %119
  %194 = add nsw i32 %193, 512
  %195 = ashr i32 %194, 10
  %196 = add nsw i32 %195, %192
  br label %275

197:                                              ; preds = %151, %128
  %198 = icmp slt i32 %132, %90
  br i1 %198, label %199, label %216

199:                                              ; preds = %197
  %200 = load i32, ptr %97, align 4, !tbaa !179
  %201 = icmp slt i32 %135, %200
  %202 = or i32 %135, %132
  %203 = icmp sgt i32 %202, -1
  %204 = and i1 %203, %201
  br i1 %204, label %205, label %216

205:                                              ; preds = %199
  %206 = sext i32 %138 to i64
  %207 = getelementptr inbounds i16, ptr %11, i64 %206
  %208 = load i16, ptr %207, align 2, !tbaa !37
  %209 = zext i16 %208 to i32
  %210 = mul nsw i32 %146, %119
  %211 = add nsw i32 %210, 512
  %212 = ashr i32 %211, 10
  %213 = add nsw i32 %212, %209
  %214 = tail call i32 @llvm.smin.i32(i32 %213, i32 65535)
  %215 = trunc i32 %214 to i16
  store i16 %215, ptr %207, align 2, !tbaa !37
  br label %216

216:                                              ; preds = %205, %199, %197
  %217 = add nsw i32 %132, 1
  %218 = icmp slt i32 %217, %90
  br i1 %218, label %219, label %237

219:                                              ; preds = %216
  %220 = load i32, ptr %97, align 4, !tbaa !179
  %221 = icmp slt i32 %135, %220
  br i1 %221, label %222, label %237

222:                                              ; preds = %219
  %223 = icmp sgt i32 %132, -2
  %224 = icmp sgt i32 %135, -1
  %225 = select i1 %223, i1 %224, i1 false
  br i1 %225, label %226, label %237

226:                                              ; preds = %222
  %227 = sext i32 %139 to i64
  %228 = getelementptr inbounds i16, ptr %11, i64 %227
  %229 = load i16, ptr %228, align 2, !tbaa !37
  %230 = zext i16 %229 to i32
  %231 = mul nsw i32 %147, %119
  %232 = add nsw i32 %231, 512
  %233 = ashr i32 %232, 10
  %234 = add nsw i32 %233, %230
  %235 = tail call i32 @llvm.smin.i32(i32 %234, i32 65535)
  %236 = trunc i32 %235 to i16
  store i16 %236, ptr %228, align 2, !tbaa !37
  br label %237

237:                                              ; preds = %226, %222, %219, %216
  br i1 %198, label %238, label %257

238:                                              ; preds = %237
  %239 = add nsw i32 %135, 1
  %240 = load i32, ptr %97, align 4, !tbaa !179
  %241 = icmp slt i32 %239, %240
  %242 = icmp sgt i32 %132, -1
  %243 = and i1 %242, %241
  %244 = icmp sgt i32 %135, -2
  %245 = select i1 %243, i1 %244, i1 false
  br i1 %245, label %246, label %257

246:                                              ; preds = %238
  %247 = sext i32 %140 to i64
  %248 = getelementptr inbounds i16, ptr %11, i64 %247
  %249 = load i16, ptr %248, align 2, !tbaa !37
  %250 = zext i16 %249 to i32
  %251 = mul nsw i32 %148, %119
  %252 = add nsw i32 %251, 512
  %253 = ashr i32 %252, 10
  %254 = add nsw i32 %253, %250
  %255 = tail call i32 @llvm.smin.i32(i32 %254, i32 65535)
  %256 = trunc i32 %255 to i16
  store i16 %256, ptr %248, align 2, !tbaa !37
  br label %257

257:                                              ; preds = %246, %238, %237
  br i1 %218, label %258, label %280

258:                                              ; preds = %257
  %259 = add nsw i32 %135, 1
  %260 = load i32, ptr %97, align 4, !tbaa !179
  %261 = icmp slt i32 %259, %260
  %262 = icmp sgt i32 %132, -2
  %263 = and i1 %262, %261
  %264 = icmp sgt i32 %135, -2
  %265 = select i1 %263, i1 %264, i1 false
  br i1 %265, label %266, label %280

266:                                              ; preds = %258
  %267 = sext i32 %141 to i64
  %268 = getelementptr inbounds i16, ptr %11, i64 %267
  %269 = load i16, ptr %268, align 2, !tbaa !37
  %270 = zext i16 %269 to i32
  %271 = mul nsw i32 %149, %119
  %272 = add nsw i32 %271, 512
  %273 = ashr i32 %272, 10
  %274 = add nsw i32 %273, %270
  br label %275

275:                                              ; preds = %158, %266, %123
  %276 = phi i32 [ %127, %123 ], [ %274, %266 ], [ %196, %158 ]
  %277 = phi ptr [ %124, %123 ], [ %268, %266 ], [ %190, %158 ]
  %278 = tail call i32 @llvm.smin.i32(i32 %276, i32 65535)
  %279 = trunc i32 %278 to i16
  store i16 %279, ptr %277, align 2, !tbaa !37
  br label %280

280:                                              ; preds = %275, %257, %258, %105
  %281 = icmp sgt i16 %110, -1
  br i1 %281, label %447, label %282

282:                                              ; preds = %280
  %283 = mul nsw i32 %42, %103
  %284 = add nsw i32 %283, 32
  %285 = ashr i32 %284, 6
  %286 = select i1 %111, i32 %285, i32 %103
  %287 = getelementptr inbounds [2 x i16], ptr %41, i64 %101
  %288 = load i32, ptr %287, align 4
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %437, label %290

290:                                              ; preds = %282
  %291 = shl i32 %288, 16
  %292 = lshr i32 %288, 16
  %293 = ashr i32 %291, 21
  %294 = add nsw i32 %293, %112
  %295 = ashr i32 %288, 21
  %296 = load i32, ptr %56, align 4, !tbaa !62
  %297 = add nsw i32 %295, %296
  %298 = load i32, ptr %63, align 4, !tbaa !65
  %299 = mul nsw i32 %297, %298
  %300 = add nsw i32 %299, %294
  %301 = add nsw i32 %300, 1
  %302 = add nsw i32 %300, %298
  %303 = add nsw i32 %302, 1
  %304 = and i32 %288, 31
  %305 = and i32 %292, 31
  %306 = sub nuw nsw i32 32, %305
  %307 = sub nuw nsw i32 32, %304
  %308 = mul nuw nsw i32 %306, %307
  %309 = mul nuw nsw i32 %306, %304
  %310 = mul nuw nsw i32 %305, %307
  %311 = mul nuw nsw i32 %305, %304
  %312 = icmp slt i32 %294, %96
  br i1 %312, label %313, label %320

313:                                              ; preds = %290
  %314 = load i32, ptr %97, align 4, !tbaa !179
  %315 = add nsw i32 %314, -1
  %316 = icmp slt i32 %297, %315
  %317 = or i32 %297, %294
  %318 = icmp sgt i32 %317, -1
  %319 = and i1 %318, %316
  br i1 %319, label %398, label %320

320:                                              ; preds = %313, %290
  %321 = icmp slt i32 %294, %90
  br i1 %321, label %322, label %339

322:                                              ; preds = %320
  %323 = load i32, ptr %97, align 4, !tbaa !179
  %324 = icmp slt i32 %297, %323
  %325 = or i32 %297, %294
  %326 = icmp sgt i32 %325, -1
  %327 = and i1 %326, %324
  br i1 %327, label %328, label %339

328:                                              ; preds = %322
  %329 = sext i32 %300 to i64
  %330 = getelementptr inbounds i16, ptr %16, i64 %329
  %331 = load i16, ptr %330, align 2, !tbaa !37
  %332 = zext i16 %331 to i32
  %333 = mul nsw i32 %308, %286
  %334 = add nsw i32 %333, 512
  %335 = ashr i32 %334, 10
  %336 = add nsw i32 %335, %332
  %337 = tail call i32 @llvm.smin.i32(i32 %336, i32 65535)
  %338 = trunc i32 %337 to i16
  store i16 %338, ptr %330, align 2, !tbaa !37
  br label %339

339:                                              ; preds = %328, %322, %320
  %340 = add nsw i32 %294, 1
  %341 = icmp slt i32 %340, %90
  br i1 %341, label %342, label %360

342:                                              ; preds = %339
  %343 = load i32, ptr %97, align 4, !tbaa !179
  %344 = icmp slt i32 %297, %343
  br i1 %344, label %345, label %360

345:                                              ; preds = %342
  %346 = icmp sgt i32 %294, -2
  %347 = icmp sgt i32 %297, -1
  %348 = select i1 %346, i1 %347, i1 false
  br i1 %348, label %349, label %360

349:                                              ; preds = %345
  %350 = sext i32 %301 to i64
  %351 = getelementptr inbounds i16, ptr %16, i64 %350
  %352 = load i16, ptr %351, align 2, !tbaa !37
  %353 = zext i16 %352 to i32
  %354 = mul nsw i32 %309, %286
  %355 = add nsw i32 %354, 512
  %356 = ashr i32 %355, 10
  %357 = add nsw i32 %356, %353
  %358 = tail call i32 @llvm.smin.i32(i32 %357, i32 65535)
  %359 = trunc i32 %358 to i16
  store i16 %359, ptr %351, align 2, !tbaa !37
  br label %360

360:                                              ; preds = %349, %345, %342, %339
  br i1 %321, label %361, label %380

361:                                              ; preds = %360
  %362 = add nsw i32 %297, 1
  %363 = load i32, ptr %97, align 4, !tbaa !179
  %364 = icmp slt i32 %362, %363
  %365 = icmp sgt i32 %294, -1
  %366 = and i1 %365, %364
  %367 = icmp sgt i32 %297, -2
  %368 = select i1 %366, i1 %367, i1 false
  br i1 %368, label %369, label %380

369:                                              ; preds = %361
  %370 = sext i32 %302 to i64
  %371 = getelementptr inbounds i16, ptr %16, i64 %370
  %372 = load i16, ptr %371, align 2, !tbaa !37
  %373 = zext i16 %372 to i32
  %374 = mul nsw i32 %310, %286
  %375 = add nsw i32 %374, 512
  %376 = ashr i32 %375, 10
  %377 = add nsw i32 %376, %373
  %378 = tail call i32 @llvm.smin.i32(i32 %377, i32 65535)
  %379 = trunc i32 %378 to i16
  store i16 %379, ptr %371, align 2, !tbaa !37
  br label %380

380:                                              ; preds = %369, %361, %360
  br i1 %341, label %381, label %447

381:                                              ; preds = %380
  %382 = add nsw i32 %297, 1
  %383 = load i32, ptr %97, align 4, !tbaa !179
  %384 = icmp slt i32 %382, %383
  %385 = icmp sgt i32 %294, -2
  %386 = and i1 %385, %384
  %387 = icmp sgt i32 %297, -2
  %388 = select i1 %386, i1 %387, i1 false
  br i1 %388, label %389, label %447

389:                                              ; preds = %381
  %390 = sext i32 %303 to i64
  %391 = getelementptr inbounds i16, ptr %16, i64 %390
  %392 = load i16, ptr %391, align 2, !tbaa !37
  %393 = zext i16 %392 to i32
  %394 = mul nsw i32 %311, %286
  %395 = add nsw i32 %394, 512
  %396 = ashr i32 %395, 10
  %397 = add nsw i32 %396, %393
  br label %442

398:                                              ; preds = %313
  %399 = sext i32 %300 to i64
  %400 = getelementptr inbounds i16, ptr %16, i64 %399
  %401 = load i16, ptr %400, align 2, !tbaa !37
  %402 = zext i16 %401 to i32
  %403 = mul nsw i32 %308, %286
  %404 = add nsw i32 %403, 512
  %405 = ashr i32 %404, 10
  %406 = add nsw i32 %405, %402
  %407 = tail call i32 @llvm.smin.i32(i32 %406, i32 65535)
  %408 = trunc i32 %407 to i16
  store i16 %408, ptr %400, align 2, !tbaa !37
  %409 = sext i32 %301 to i64
  %410 = getelementptr inbounds i16, ptr %16, i64 %409
  %411 = load i16, ptr %410, align 2, !tbaa !37
  %412 = zext i16 %411 to i32
  %413 = mul nsw i32 %309, %286
  %414 = add nsw i32 %413, 512
  %415 = ashr i32 %414, 10
  %416 = add nsw i32 %415, %412
  %417 = tail call i32 @llvm.smin.i32(i32 %416, i32 65535)
  %418 = trunc i32 %417 to i16
  store i16 %418, ptr %410, align 2, !tbaa !37
  %419 = sext i32 %302 to i64
  %420 = getelementptr inbounds i16, ptr %16, i64 %419
  %421 = load i16, ptr %420, align 2, !tbaa !37
  %422 = zext i16 %421 to i32
  %423 = mul nsw i32 %310, %286
  %424 = add nsw i32 %423, 512
  %425 = ashr i32 %424, 10
  %426 = add nsw i32 %425, %422
  %427 = tail call i32 @llvm.smin.i32(i32 %426, i32 65535)
  %428 = trunc i32 %427 to i16
  store i16 %428, ptr %420, align 2, !tbaa !37
  %429 = sext i32 %303 to i64
  %430 = getelementptr inbounds i16, ptr %16, i64 %429
  %431 = load i16, ptr %430, align 2, !tbaa !37
  %432 = zext i16 %431 to i32
  %433 = mul nsw i32 %311, %286
  %434 = add nsw i32 %433, 512
  %435 = ashr i32 %434, 10
  %436 = add nsw i32 %435, %432
  br label %442

437:                                              ; preds = %282
  %438 = getelementptr inbounds i16, ptr %16, i64 %101
  %439 = load i16, ptr %438, align 2, !tbaa !37
  %440 = zext i16 %439 to i32
  %441 = add nsw i32 %286, %440
  br label %442

442:                                              ; preds = %437, %398, %389
  %443 = phi i32 [ %441, %437 ], [ %397, %389 ], [ %436, %398 ]
  %444 = phi ptr [ %438, %437 ], [ %391, %389 ], [ %430, %398 ]
  %445 = tail call i32 @llvm.smin.i32(i32 %443, i32 65535)
  %446 = trunc i32 %445 to i16
  store i16 %446, ptr %444, align 2, !tbaa !37
  br label %447

447:                                              ; preds = %280, %380, %381, %442, %99
  %448 = add nuw nsw i64 %100, 1
  %449 = trunc i64 %448 to i32
  store i32 %449, ptr %67, align 16, !tbaa !168
  %450 = add nsw i64 %101, 1
  %451 = icmp eq i64 %448, %98
  br i1 %451, label %452, label %99, !llvm.loop !476

452:                                              ; preds = %447, %70
  %453 = load i32, ptr %56, align 4, !tbaa !62
  %454 = add nsw i32 %453, 1
  store i32 %454, ptr %56, align 4, !tbaa !62
  %455 = getelementptr inbounds %struct.x264_sps_t, ptr %88, i64 0, i32 17
  %456 = load i32, ptr %455, align 4, !tbaa !179
  %457 = icmp slt i32 %454, %456
  br i1 %457, label %70, label %458, !llvm.loop !477

458:                                              ; preds = %452, %55
  %459 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 10
  %460 = load i32, ptr %459, align 8, !tbaa !336
  %461 = icmp ne i32 %460, 0
  %462 = and i1 %47, %461
  br i1 %462, label %463, label %544

463:                                              ; preds = %458
  %464 = load ptr, ptr %30, align 8, !tbaa !46
  %465 = icmp ne i32 %4, %3
  %466 = icmp eq i32 %4, %2
  %467 = or i1 %465, %466
  br i1 %467, label %474, label %468

468:                                              ; preds = %463
  %469 = getelementptr inbounds %struct.x264_frame, ptr %464, i64 0, i32 67, i64 %34
  %470 = load float, ptr %469, align 4, !tbaa !335
  %471 = fcmp fast ogt float %470, 0.000000e+00
  br i1 %471, label %472, label %474

472:                                              ; preds = %468
  %473 = fsub fast float 1.000000e+00, %470
  br label %474

474:                                              ; preds = %472, %468, %463
  %475 = phi float [ %473, %472 ], [ 0.000000e+00, %468 ], [ 0.000000e+00, %463 ]
  %476 = getelementptr inbounds %struct.x264_param_t, ptr %0, i64 0, i32 42, i32 22
  %477 = load float, ptr %476, align 8, !tbaa !382
  %478 = fmul fast float %477, 5.000000e+00
  %479 = fsub fast float 5.000000e+00, %478
  %480 = getelementptr inbounds %struct.x264_t, ptr %0, i64 0, i32 55
  %481 = load i32, ptr %480, align 16, !tbaa !377
  %482 = icmp sgt i32 %481, 0
  br i1 %482, label %483, label %544

483:                                              ; preds = %474
  %484 = getelementptr inbounds %struct.x264_frame, ptr %464, i64 0, i32 63
  %485 = load ptr, ptr %484, align 16, !tbaa !325
  %486 = getelementptr inbounds %struct.x264_frame, ptr %464, i64 0, i32 65
  %487 = load ptr, ptr %486, align 16, !tbaa !383
  %488 = getelementptr inbounds %struct.x264_frame, ptr %464, i64 0, i32 64
  %489 = getelementptr inbounds %struct.x264_frame, ptr %464, i64 0, i32 61
  %490 = getelementptr inbounds %struct.x264_frame, ptr %464, i64 0, i32 60
  %491 = zext i32 %481 to i64
  br label %492

492:                                              ; preds = %541, %483
  %493 = phi i64 [ 0, %483 ], [ %542, %541 ]
  %494 = getelementptr inbounds i16, ptr %485, i64 %493
  %495 = load i16, ptr %494, align 2, !tbaa !37
  %496 = zext i16 %495 to i32
  %497 = getelementptr inbounds i16, ptr %487, i64 %493
  %498 = load i16, ptr %497, align 2, !tbaa !37
  %499 = zext i16 %498 to i32
  %500 = mul nuw nsw i32 %499, %496
  %501 = icmp ult i32 %500, 128
  br i1 %501, label %541, label %502

502:                                              ; preds = %492
  %503 = add nuw nsw i32 %500, 128
  %504 = lshr i32 %503, 8
  %505 = load ptr, ptr %488, align 8, !tbaa !376
  %506 = getelementptr inbounds i16, ptr %505, i64 %493
  %507 = load i16, ptr %506, align 2, !tbaa !37
  %508 = zext i16 %507 to i32
  %509 = add nuw nsw i32 %504, %508
  %510 = tail call i32 @llvm.ctlz.i32(i32 %509, i1 true), !range !384
  %511 = shl i32 %509, %510
  %512 = lshr i32 %511, 24
  %513 = and i32 %512, 127
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds [128 x float], ptr @x264_log2_lut, i64 0, i64 %514
  %516 = load float, ptr %515, align 4, !tbaa !335
  %517 = zext i32 %510 to i64
  %518 = getelementptr inbounds [32 x float], ptr @x264_log2_lz_lut, i64 0, i64 %517
  %519 = load float, ptr %518, align 4, !tbaa !335
  %520 = tail call i32 @llvm.ctlz.i32(i32 %504, i1 true), !range !384
  %521 = shl i32 %504, %520
  %522 = lshr i32 %521, 24
  %523 = and i32 %522, 127
  %524 = zext i32 %523 to i64
  %525 = getelementptr inbounds [128 x float], ptr @x264_log2_lut, i64 0, i64 %524
  %526 = load float, ptr %525, align 4, !tbaa !335
  %527 = zext i32 %520 to i64
  %528 = getelementptr inbounds [32 x float], ptr @x264_log2_lz_lut, i64 0, i64 %527
  %529 = load float, ptr %528, align 4, !tbaa !335
  %530 = fadd fast float %516, %475
  %531 = fadd fast float %530, %519
  %532 = fadd fast float %526, %529
  %533 = fsub fast float %531, %532
  %534 = load ptr, ptr %489, align 16, !tbaa !385
  %535 = getelementptr inbounds float, ptr %534, i64 %493
  %536 = load float, ptr %535, align 4, !tbaa !335
  %537 = fmul fast float %533, %479
  %538 = fsub fast float %536, %537
  %539 = load ptr, ptr %490, align 8, !tbaa !386
  %540 = getelementptr inbounds float, ptr %539, i64 %493
  store float %538, ptr %540, align 4, !tbaa !335
  br label %541

541:                                              ; preds = %502, %492
  %542 = add nuw nsw i64 %493, 1
  %543 = icmp eq i64 %542, %491
  br i1 %543, label %544, label %492, !llvm.loop !387

544:                                              ; preds = %541, %474, %458
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.round.f32(float) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.floor.f32(float) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.smin.i8(i8, i8) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i1 @llvm.umin.i1(i1, i1) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.smax.i8(i8, i8) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.smax.v2i32(<2 x i32>, <2 x i32>) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.smin.v2i32(<2 x i32>, <2 x i32>) #16

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { inlinehint nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { nofree norecurse nosync nounwind sspstrong memory(write, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { inlinehint nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #10 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #12 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { nofree norecurse nosync nounwind sspstrong memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { inlinehint nofree nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #17 = { nounwind }
attributes #18 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!9, !11, i64 128}
!9 = !{!"x264_t", !10, i64 0, !6, i64 704, !11, i64 1736, !11, i64 1740, !11, i64 1744, !11, i64 1748, !11, i64 1752, !17, i64 1760, !13, i64 1832, !11, i64 1840, !11, i64 1844, !11, i64 1848, !11, i64 1852, !11, i64 1856, !11, i64 1860, !11, i64 1864, !11, i64 1868, !11, i64 1872, !11, i64 1876, !11, i64 1880, !11, i64 1884, !11, i64 1888, !11, i64 1892, !6, i64 1896, !13, i64 3200, !6, i64 3208, !13, i64 3328, !11, i64 3336, !11, i64 3340, !6, i64 3344, !6, i64 3376, !6, i64 3392, !6, i64 3424, !6, i64 3440, !6, i64 3472, !6, i64 3488, !6, i64 3520, !6, i64 3536, !6, i64 4272, !13, i64 7216, !20, i64 7232, !21, i64 13904, !22, i64 14416, !13, i64 14680, !13, i64 14688, !11, i64 14696, !6, i64 14704, !11, i64 14856, !6, i64 14864, !6, i64 15016, !11, i64 15024, !11, i64 15028, !19, i64 15032, !23, i64 15040, !24, i64 16368, !13, i64 26704, !27, i64 26712, !6, i64 30400, !6, i64 30912, !6, i64 31168, !13, i64 31176, !6, i64 31184, !6, i64 31232, !6, i64 31248, !6, i64 31304, !6, i64 31360, !6, i64 31456, !13, i64 31552, !30, i64 31560, !31, i64 32616, !32, i64 32912, !33, i64 33032, !34, i64 33080, !35, i64 33256, !13, i64 33328}
!10 = !{!"x264_param_t", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !12, i64 44, !11, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96, !11, i64 100, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116, !11, i64 120, !11, i64 124, !11, i64 128, !11, i64 132, !11, i64 136, !11, i64 140, !11, i64 144, !13, i64 152, !6, i64 160, !6, i64 176, !6, i64 192, !6, i64 208, !6, i64 224, !6, i64 288, !13, i64 352, !13, i64 360, !11, i64 368, !11, i64 372, !13, i64 376, !14, i64 384, !16, i64 488, !11, i64 632, !11, i64 636, !11, i64 640, !11, i64 644, !11, i64 648, !11, i64 652, !11, i64 656, !11, i64 660, !11, i64 664, !11, i64 668, !11, i64 672, !11, i64 676, !11, i64 680, !11, i64 684, !11, i64 688, !11, i64 692, !13, i64 696}
!11 = !{!"int", !6, i64 0}
!12 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32}
!13 = !{!"any pointer", !6, i64 0}
!14 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !15, i64 72, !15, i64 76, !11, i64 80, !6, i64 84, !11, i64 92, !11, i64 96}
!15 = !{!"float", !6, i64 0}
!16 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !15, i64 24, !15, i64 28, !15, i64 32, !11, i64 36, !11, i64 40, !15, i64 44, !15, i64 48, !15, i64 52, !11, i64 56, !15, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !13, i64 80, !11, i64 88, !13, i64 96, !15, i64 104, !15, i64 108, !15, i64 112, !13, i64 120, !11, i64 128, !13, i64 136}
!17 = !{!"", !11, i64 0, !11, i64 4, !13, i64 8, !11, i64 16, !13, i64 24, !18, i64 32}
!18 = !{!"bs_s", !13, i64 0, !13, i64 8, !13, i64 16, !19, i64 24, !11, i64 32, !11, i64 36}
!19 = !{!"long", !6, i64 0}
!20 = !{!"", !13, i64 0, !13, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !6, i64 60, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !6, i64 96, !6, i64 352, !11, i64 6496, !11, i64 6500, !6, i64 6504, !11, i64 6632, !11, i64 6636, !11, i64 6640, !11, i64 6644, !11, i64 6648, !11, i64 6652, !11, i64 6656, !11, i64 6660}
!21 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !13, i64 16, !13, i64 24, !13, i64 32, !11, i64 48, !6, i64 52}
!22 = !{!"", !13, i64 0, !6, i64 8, !13, i64 24, !6, i64 32, !11, i64 176, !11, i64 180, !11, i64 184, !11, i64 188, !11, i64 192, !11, i64 196, !11, i64 200, !19, i64 208, !19, i64 216, !6, i64 224, !19, i64 240, !19, i64 248, !11, i64 256, !11, i64 260}
!23 = !{!"", !6, i64 0, !6, i64 32, !6, i64 48, !6, i64 560}
!24 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !11, i64 120, !6, i64 124, !6, i64 140, !11, i64 204, !11, i64 208, !11, i64 212, !11, i64 216, !11, i64 220, !11, i64 224, !11, i64 228, !11, i64 232, !11, i64 236, !11, i64 240, !11, i64 244, !13, i64 248, !13, i64 256, !13, i64 264, !13, i64 272, !13, i64 280, !13, i64 288, !13, i64 296, !6, i64 304, !6, i64 320, !6, i64 336, !6, i64 352, !13, i64 864, !13, i64 872, !13, i64 880, !6, i64 888, !11, i64 1016, !11, i64 1020, !6, i64 1024, !11, i64 1028, !11, i64 1032, !11, i64 1036, !11, i64 1040, !11, i64 1044, !11, i64 1048, !11, i64 1052, !11, i64 1056, !11, i64 1060, !25, i64 1072, !26, i64 8656, !11, i64 9424, !11, i64 9428, !11, i64 9432, !11, i64 9436, !11, i64 9440, !11, i64 9444, !11, i64 9448, !11, i64 9452, !6, i64 9456, !11, i64 9472, !11, i64 9476, !6, i64 9480, !13, i64 9992, !6, i64 10000, !13, i64 10256, !6, i64 10264, !11, i64 10284, !6, i64 10288}
!25 = !{!"", !6, i64 0, !6, i64 384, !6, i64 1248, !6, i64 1504, !6, i64 1760, !6, i64 2144, !6, i64 2624, !6, i64 2640, !11, i64 2656, !11, i64 2660, !6, i64 2672, !6, i64 3184, !6, i64 3696, !6, i64 3776, !6, i64 3904, !6, i64 3928, !6, i64 3952, !6, i64 3976, !6, i64 3984, !6, i64 7056, !6, i64 7312, !6, i64 7568}
!26 = !{!"", !6, i64 0, !6, i64 48, !6, i64 96, !6, i64 176, !6, i64 496, !6, i64 656, !6, i64 696, !6, i64 728, !11, i64 736, !6, i64 740, !11, i64 744, !11, i64 748, !11, i64 752, !11, i64 756}
!27 = !{!"", !28, i64 0, !6, i64 704, !6, i64 728, !6, i64 768, !6, i64 808, !6, i64 880, !6, i64 920, !6, i64 960, !6, i64 1000, !6, i64 1040, !6, i64 1080, !6, i64 1120, !6, i64 1880, !6, i64 2152, !6, i64 2168, !6, i64 3192, !6, i64 3240, !6, i64 3656, !6, i64 3664, !6, i64 3672}
!28 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !6, i64 12, !11, i64 88, !11, i64 92, !11, i64 96, !6, i64 100, !6, i64 108, !6, i64 364, !6, i64 432, !6, i64 456, !6, i64 664, !6, i64 672, !29, i64 696}
!29 = !{!"double", !6, i64 0}
!30 = !{!"", !6, i64 0, !6, i64 56, !6, i64 112, !6, i64 168, !6, i64 224, !6, i64 256, !6, i64 312, !6, i64 368, !6, i64 424, !6, i64 480, !6, i64 536, !13, i64 592, !6, i64 600, !6, i64 632, !13, i64 664, !13, i64 672, !6, i64 680, !6, i64 736, !6, i64 792, !6, i64 848, !6, i64 904, !13, i64 960, !13, i64 968, !13, i64 976, !13, i64 984, !13, i64 992, !13, i64 1000, !13, i64 1008, !13, i64 1016, !13, i64 1024, !13, i64 1032, !13, i64 1040, !13, i64 1048}
!31 = !{!"", !13, i64 0, !13, i64 8, !13, i64 16, !6, i64 24, !6, i64 104, !13, i64 160, !13, i64 168, !13, i64 176, !13, i64 184, !13, i64 192, !13, i64 200, !13, i64 208, !13, i64 216, !13, i64 224, !13, i64 232, !13, i64 240, !13, i64 248, !13, i64 256, !13, i64 264, !13, i64 272, !13, i64 280, !13, i64 288}
!32 = !{!"", !13, i64 0, !13, i64 8, !13, i64 16, !13, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !13, i64 56, !13, i64 64, !13, i64 72, !13, i64 80, !13, i64 88, !13, i64 96, !13, i64 104, !13, i64 112}
!33 = !{!"", !13, i64 0, !13, i64 8, !13, i64 16, !13, i64 24, !13, i64 32, !13, i64 40}
!34 = !{!"", !13, i64 0, !13, i64 8, !13, i64 16, !13, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !13, i64 56, !13, i64 64, !13, i64 72, !13, i64 80, !6, i64 88, !6, i64 136}
!35 = !{!"", !6, i64 0, !6, i64 16, !6, i64 32, !6, i64 48, !13, i64 64}
!36 = !{!9, !11, i64 16436}
!37 = !{!38, !38, i64 0}
!38 = !{!"short", !6, i64 0}
!39 = !{!11, !11, i64 0}
!40 = !{!21, !11, i64 48}
!41 = !{!9, !11, i64 1828}
!42 = !{!18, !11, i64 36}
!43 = !{!44, !6, i64 1}
!44 = !{!"", !6, i64 0, !6, i64 1}
!45 = !{!9, !11, i64 17400}
!46 = !{!13, !13, i64 0}
!47 = !{!9, !11, i64 25844}
!48 = !{!9, !13, i64 32816}
!49 = !{!9, !11, i64 17384}
!50 = !{!9, !11, i64 17388}
!51 = !{!9, !11, i64 17396}
!52 = !{!53, !11, i64 4}
!53 = !{!"", !11, i64 0, !11, i64 4}
!54 = distinct !{!54, !55}
!55 = !{!"llvm.loop.mustprogress"}
!56 = distinct !{!56, !55}
!57 = !{!9, !11, i64 16428}
!58 = !{!19, !19, i64 0}
!59 = !{!9, !11, i64 25840}
!60 = !{!9, !11, i64 7248}
!61 = !{!9, !11, i64 7268}
!62 = !{!9, !11, i64 16388}
!63 = !{!9, !13, i64 16616}
!64 = !{!9, !11, i64 16392}
!65 = !{!9, !11, i64 16372}
!66 = !{!9, !13, i64 3328}
!67 = !{!68, !11, i64 60}
!68 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !6, i64 72}
!69 = distinct !{!69, !55}
!70 = !{!9, !11, i64 17408}
!71 = !{!9, !11, i64 17404}
!72 = !{!9, !11, i64 17412}
!73 = !{!9, !11, i64 388}
!74 = !{!9, !11, i64 25792}
!75 = !{!9, !11, i64 25800}
!76 = distinct !{!76, !55}
!77 = distinct !{!77, !55}
!78 = distinct !{!78, !55}
!79 = distinct !{!79, !55, !80, !81}
!80 = !{!"llvm.loop.isvectorized", i32 1}
!81 = !{!"llvm.loop.unroll.runtime.disable"}
!82 = distinct !{!82, !55}
!83 = distinct !{!83, !55}
!84 = !{i32 0, i32 2}
!85 = distinct !{!85, !55}
!86 = !{!87, !19, i64 0}
!87 = !{!"", !19, i64 0, !11, i64 8, !6, i64 12}
!88 = !{!87, !11, i64 8}
!89 = !{!90, !38, i64 0}
!90 = !{!"", !38, i64 0, !38, i64 2}
!91 = !{!90, !38, i64 2}
!92 = distinct !{!92, !55}
!93 = !{!9, !11, i64 16432}
!94 = distinct !{!94, !55}
!95 = !{i64 0, i64 8, !58, i64 8, i64 4, !39, i64 12, i64 10, !5}
!96 = distinct !{!96, !55}
!97 = distinct !{!97, !55}
!98 = distinct !{!98, !99}
!99 = !{!"llvm.loop.unroll.disable"}
!100 = distinct !{!100, !55}
!101 = distinct !{!101, !55}
!102 = distinct !{!102, !55}
!103 = !{!9, !11, i64 412}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !55, !80, !81}
!110 = !{!111}
!111 = distinct !{!111, !112}
!112 = distinct !{!112, !"LVerDomain"}
!113 = !{!114}
!114 = distinct !{!114, !112}
!115 = distinct !{!115, !55, !80, !81}
!116 = distinct !{!116, !55, !80}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !55, !80, !81}
!123 = distinct !{!123, !55, !80}
!124 = !{!125}
!125 = distinct !{!125, !126}
!126 = distinct !{!126, !"LVerDomain"}
!127 = !{!128}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !55, !80, !81}
!130 = distinct !{!130, !55, !80}
!131 = distinct !{!131, !55, !80}
!132 = distinct !{!132, !55}
!133 = !{!9, !11, i64 14696}
!134 = !{!135, !13, i64 48}
!135 = !{!"x264_weight_t", !6, i64 0, !6, i64 16, !11, i64 32, !11, i64 36, !11, i64 40, !13, i64 48}
!136 = !{!9, !11, i64 136}
!137 = !{!9, !13, i64 14680}
!138 = !{!139, !11, i64 15596}
!139 = !{!"x264_frame", !11, i64 0, !11, i64 4, !11, i64 8, !19, i64 16, !19, i64 24, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !13, i64 48, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !6, i64 84, !6, i64 85, !6, i64 86, !15, i64 88, !15, i64 92, !11, i64 96, !11, i64 100, !6, i64 104, !6, i64 116, !6, i64 128, !11, i64 140, !11, i64 144, !11, i64 148, !6, i64 152, !6, i64 176, !6, i64 208, !13, i64 240, !6, i64 248, !6, i64 280, !6, i64 320, !6, i64 3392, !11, i64 3520, !13, i64 3528, !13, i64 3536, !13, i64 3544, !6, i64 3552, !13, i64 3568, !6, i64 3576, !6, i64 3848, !6, i64 6440, !6, i64 6712, !6, i64 6728, !6, i64 6736, !6, i64 6864, !6, i64 6868, !6, i64 8164, !11, i64 9460, !6, i64 9464, !6, i64 9536, !13, i64 12128, !13, i64 12136, !13, i64 12144, !13, i64 12152, !13, i64 12160, !11, i64 12168, !13, i64 12176, !13, i64 12184, !13, i64 12192, !11, i64 12200, !6, i64 12204, !11, i64 12276, !19, i64 12280, !140, i64 12288, !6, i64 12320, !6, i64 12572, !6, i64 13576, !11, i64 15584, !11, i64 15588, !11, i64 15592, !11, i64 15596, !11, i64 15600, !11, i64 15604, !11, i64 15608, !15, i64 15612, !11, i64 15616, !11, i64 15620, !11, i64 15624}
!140 = !{!"", !29, i64 0, !29, i64 8, !29, i64 16, !29, i64 24}
!141 = distinct !{!141, !55}
!142 = distinct !{!142, !55}
!143 = !{!9, !11, i64 544}
!144 = !{!9, !11, i64 428}
!145 = !{!146, !11, i64 40}
!146 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !6, i64 24, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !6, i64 60, !11, i64 88, !11, i64 92, !11, i64 96, !6, i64 100, !6, i64 292, !11, i64 308, !6, i64 312, !11, i64 376, !11, i64 380, !6, i64 384, !11, i64 412, !147, i64 416, !147, i64 7216, !11, i64 14016, !11, i64 14020, !11, i64 14024, !6, i64 14028, !6, i64 14044, !6, i64 14092, !6, i64 14100, !11, i64 14108, !11, i64 14112, !11, i64 14116, !11, i64 14120, !11, i64 14124, !11, i64 14128, !11, i64 14132, !6, i64 14136, !6, i64 14144, !11, i64 14152, !11, i64 14156, !11, i64 14160}
!147 = !{!"", !11, i64 0, !148, i64 16, !148, i64 160, !11, i64 304, !6, i64 308, !6, i64 960, !6, i64 1536, !6, i64 1552, !6, i64 3856, !6, i64 3872, !6, i64 5024, !6, i64 5040, !11, i64 6192, !6, i64 6208, !11, i64 6496, !6, i64 6512}
!148 = !{!"", !11, i64 0, !13, i64 8, !11, i64 16, !11, i64 20, !13, i64 24, !6, i64 32, !13, i64 80, !6, i64 88, !13, i64 112, !6, i64 120, !6, i64 128, !11, i64 132, !11, i64 136, !6, i64 140}
!149 = !{!146, !11, i64 8}
!150 = !{!9, !13, i64 7216}
!151 = !{!9, !11, i64 25796}
!152 = !{!146, !11, i64 0}
!153 = !{!146, !11, i64 4}
!154 = !{!9, !11, i64 440}
!155 = !{!9, !11, i64 16416}
!156 = !{!9, !11, i64 464}
!157 = !{!9, !11, i64 16420}
!158 = !{!146, !11, i64 380}
!159 = !{!146, !11, i64 308}
!160 = !{!146, !11, i64 92}
!161 = !{!146, !11, i64 56}
!162 = !{!146, !11, i64 376}
!163 = !{!146, !11, i64 44}
!164 = !{!9, !11, i64 25812}
!165 = !{!9, !11, i64 452}
!166 = !{!9, !11, i64 17416}
!167 = !{!9, !11, i64 420}
!168 = !{!9, !11, i64 16384}
!169 = !{!9, !13, i64 3200}
!170 = !{!171, !11, i64 1084}
!171 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !6, i64 52, !11, i64 1076, !11, i64 1080, !11, i64 1084, !11, i64 1088, !11, i64 1092, !11, i64 1096, !11, i64 1100, !11, i64 1104, !172, i64 1108, !11, i64 1124, !173, i64 1128, !11, i64 1296}
!172 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}
!173 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !174, i64 84, !11, i64 132, !11, i64 136, !11, i64 140, !11, i64 144, !11, i64 148, !11, i64 152, !11, i64 156, !11, i64 160, !11, i64 164}
!174 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44}
!175 = !{!9, !11, i64 96}
!176 = !{!139, !11, i64 15620}
!177 = !{!9, !13, i64 14688}
!178 = !{!139, !11, i64 15616}
!179 = !{!171, !11, i64 1088}
!180 = !{!9, !11, i64 1852}
!181 = !{!9, !11, i64 424}
!182 = !{!9, !11, i64 12}
!183 = distinct !{!183, !55}
!184 = !{!139, !13, i64 3528}
!185 = !{!139, !11, i64 15592}
!186 = distinct !{!186, !55}
!187 = !{!146, !11, i64 6912}
!188 = !{!146, !11, i64 6608}
!189 = !{!146, !11, i64 720}
!190 = !{!146, !11, i64 416}
!191 = !{!146, !11, i64 568}
!192 = !{!146, !11, i64 14128}
!193 = !{!146, !11, i64 14124}
!194 = !{!146, !11, i64 14132}
!195 = !{!146, !11, i64 13712}
!196 = !{!146, !11, i64 13408}
!197 = !{!146, !11, i64 7520}
!198 = !{!146, !11, i64 7216}
!199 = !{!146, !11, i64 7368}
!200 = !{!9, !11, i64 7252}
!201 = !{!9, !11, i64 16408}
!202 = !{!9, !11, i64 16584}
!203 = !{!9, !11, i64 16580}
!204 = !{!9, !11, i64 16588}
!205 = !{!9, !11, i64 16592}
!206 = !{!139, !13, i64 3536}
!207 = !{!9, !11, i64 17420}
!208 = !{!146, !11, i64 48}
!209 = !{!9, !11, i64 392}
!210 = !{!9, !13, i64 33000}
!211 = !{!9, !13, i64 32960}
!212 = !{!9, !13, i64 32824}
!213 = !{!9, !13, i64 32808}
!214 = !{!146, !11, i64 52}
!215 = !{!9, !11, i64 17428}
!216 = !{!9, !11, i64 496}
!217 = !{!9, !11, i64 444}
!218 = distinct !{!218, !55}
!219 = !{!146, !13, i64 16}
!220 = !{!9, !11, i64 7312}
!221 = !{!9, !11, i64 7316}
!222 = !{!148, !11, i64 0}
!223 = !{!148, !13, i64 8}
!224 = !{!148, !11, i64 16}
!225 = !{!148, !13, i64 112}
!226 = !{!148, !11, i64 20}
!227 = !{!148, !13, i64 80}
!228 = !{!148, !13, i64 24}
!229 = !{!9, !11, i64 26652}
!230 = !{!148, !11, i64 136}
!231 = !{!148, !11, i64 132}
!232 = distinct !{!232, !55, !233}
!233 = !{!"llvm.loop.peeled.count", i32 1}
!234 = !{!146, !11, i64 452}
!235 = distinct !{!235, !55}
!236 = !{!9, !11, i64 436}
!237 = !{!9, !11, i64 16412}
!238 = distinct !{!238, !55}
!239 = distinct !{!239, !55}
!240 = distinct !{!240, !55}
!241 = distinct !{!241, !55}
!242 = !{!9, !11, i64 25820}
!243 = !{!9, !11, i64 7304}
!244 = !{!146, !11, i64 14160}
!245 = distinct !{!245, !55}
!246 = distinct !{!246, !55}
!247 = !{!146, !11, i64 14020}
!248 = distinct !{!248, !55}
!249 = !{!146, !11, i64 596}
!250 = !{!146, !11, i64 7396}
!251 = !{!9, !13, i64 32624}
!252 = !{!9, !13, i64 26624}
!253 = !{!146, !11, i64 708}
!254 = !{!146, !11, i64 7508}
!255 = !{!146, !11, i64 14016}
!256 = !{!146, !13, i64 584}
!257 = !{!146, !13, i64 7384}
!258 = distinct !{!258, !55}
!259 = distinct !{!259, !55}
!260 = !{!146, !11, i64 14120}
!261 = !{!146, !11, i64 14024}
!262 = !{!146, !11, i64 14108}
!263 = !{!146, !11, i64 14152}
!264 = !{!146, !11, i64 14112}
!265 = !{!146, !11, i64 14156}
!266 = !{!146, !11, i64 14116}
!267 = !{!9, !13, i64 16640}
!268 = !{!9, !11, i64 500}
!269 = distinct !{!269, !55}
!270 = distinct !{!270, !55}
!271 = !{!9, !13, i64 32520}
!272 = !{!9, !11, i64 16572}
!273 = !{!146, !11, i64 88}
!274 = distinct !{!274, !55}
!275 = !{!9, !13, i64 32592}
!276 = !{!9, !13, i64 31552}
!277 = distinct !{!277, !55}
!278 = !{!9, !11, i64 20100}
!279 = !{!9, !13, i64 32568}
!280 = distinct !{!280, !55}
!281 = !{!9, !11, i64 20096}
!282 = !{!146, !11, i64 96}
!283 = distinct !{!283, !55}
!284 = !{!146, !11, i64 412}
!285 = distinct !{!285, !55}
!286 = distinct !{!286, !55}
!287 = distinct !{!287, !55}
!288 = distinct !{!288, !55}
!289 = !{!9, !11, i64 25780}
!290 = !{!9, !11, i64 25776}
!291 = distinct !{!291, !55}
!292 = distinct !{!292, !55}
!293 = distinct !{!293, !55}
!294 = distinct !{!294, !55}
!295 = distinct !{!295, !55}
!296 = distinct !{!296, !55}
!297 = distinct !{!297, !55}
!298 = distinct !{!298, !55}
!299 = !{!9, !13, i64 32544}
!300 = distinct !{!300, !55}
!301 = distinct !{!301, !55}
!302 = !{!9, !11, i64 25760}
!303 = !{!146, !11, i64 7252}
!304 = !{!147, !11, i64 36}
!305 = distinct !{!305, !55}
!306 = distinct !{!306, !55}
!307 = distinct !{!307, !55}
!308 = distinct !{!308, !55}
!309 = distinct !{!309, !55}
!310 = distinct !{!310, !55}
!311 = distinct !{!311, !55}
!312 = !{!139, !11, i64 12276}
!313 = !{!139, !19, i64 12280}
!314 = !{!139, !11, i64 56}
!315 = !{!135, !11, i64 36}
!316 = !{!135, !11, i64 32}
!317 = !{!135, !11, i64 40}
!318 = !{!139, !11, i64 12168}
!319 = !{!139, !11, i64 140}
!320 = !{!139, !11, i64 148}
!321 = !{!139, !11, i64 144}
!322 = !{!9, !13, i64 32616}
!323 = distinct !{!323, !55}
!324 = distinct !{!324, !55}
!325 = !{!139, !13, i64 12176}
!326 = distinct !{!326, !55}
!327 = distinct !{!327, !55}
!328 = !{!9, !13, i64 32896}
!329 = distinct !{!329, !55}
!330 = distinct !{!330, !55}
!331 = !{!9, !11, i64 692}
!332 = !{!9, !11, i64 688}
!333 = distinct !{!333, !55}
!334 = !{!9, !11, i64 396}
!335 = !{!15, !15, i64 0}
!336 = !{!9, !11, i64 528}
!337 = !{!9, !11, i64 552}
!338 = distinct !{!338, !55}
!339 = distinct !{!339, !55}
!340 = distinct !{!340, !55}
!341 = distinct !{!341, !55}
!342 = !{!9, !11, i64 108}
!343 = !{!9, !13, i64 33328}
!344 = !{!345, !11, i64 68}
!345 = !{!"x264_lookahead_t", !6, i64 0, !6, i64 1, !6, i64 2, !11, i64 4, !11, i64 8, !13, i64 16, !346, i64 24, !346, i64 56, !346, i64 88}
!346 = !{!"", !13, i64 0, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24}
!347 = !{!345, !11, i64 8}
!348 = !{!345, !13, i64 16}
!349 = !{!345, !13, i64 56}
!350 = !{!139, !11, i64 4}
!351 = distinct !{!351, !55}
!352 = !{!9, !11, i64 84}
!353 = !{!345, !11, i64 4}
!354 = !{!9, !11, i64 88}
!355 = !{!9, !11, i64 92}
!356 = !{!9, !11, i64 100}
!357 = !{!9, !11, i64 104}
!358 = distinct !{!358, !55}
!359 = !{!9, !11, i64 112}
!360 = distinct !{!360, !55}
!361 = distinct !{!361, !55}
!362 = distinct !{!362, !55}
!363 = distinct !{!363, !55}
!364 = distinct !{!364, !55}
!365 = distinct !{!365, !55}
!366 = distinct !{!366, !55}
!367 = distinct !{!367, !55}
!368 = distinct !{!368, !55}
!369 = distinct !{!369, !55}
!370 = !{!139, !11, i64 12200}
!371 = distinct !{!371, !55, !372}
!372 = !{!"llvm.loop.unswitch.partial.disable"}
!373 = distinct !{!373, !99}
!374 = distinct !{!374, !55}
!375 = distinct !{!375, !55}
!376 = !{!139, !13, i64 12184}
!377 = !{!9, !11, i64 16368}
!378 = distinct !{!378, !55}
!379 = distinct !{!379, !55}
!380 = distinct !{!380, !55}
!381 = distinct !{!381, !55}
!382 = !{!9, !15, i64 592}
!383 = !{!139, !13, i64 12192}
!384 = !{i32 0, i32 33}
!385 = !{!139, !13, i64 12160}
!386 = !{!139, !13, i64 12152}
!387 = distinct !{!387, !55}
!388 = distinct !{!388, !55}
!389 = distinct !{!389, !55}
!390 = !{!139, !11, i64 15584}
!391 = !{!9, !11, i64 1884}
!392 = !{!139, !11, i64 15588}
!393 = !{!9, !11, i64 1888}
!394 = !{!171, !11, i64 1288}
!395 = !{!139, !11, i64 40}
!396 = !{!139, !11, i64 64}
!397 = !{!139, !11, i64 44}
!398 = !{!139, !11, i64 80}
!399 = !{!139, !11, i64 32}
!400 = !{!139, !11, i64 36}
!401 = !{!171, !11, i64 1192}
!402 = !{!171, !11, i64 1196}
!403 = !{!29, !29, i64 0}
!404 = distinct !{!404, !55}
!405 = distinct !{!405, !55}
!406 = distinct !{!406, !55}
!407 = distinct !{!407, !55}
!408 = distinct !{!408, !55}
!409 = distinct !{!409, !99}
!410 = distinct !{!410, !55}
!411 = distinct !{!411, !55}
!412 = distinct !{!412, !55}
!413 = distinct !{!413, !55}
!414 = !{!9, !11, i64 488}
!415 = !{!9, !11, i64 560}
!416 = !{!9, !11, i64 648}
!417 = !{!9, !11, i64 1872}
!418 = !{!9, !11, i64 1868}
!419 = !{!139, !19, i64 16}
!420 = !{!139, !11, i64 76}
!421 = !{!9, !11, i64 1864}
!422 = distinct !{!422, !55}
!423 = !{!9, !11, i64 576}
!424 = distinct !{!424, !55}
!425 = !{!9, !11, i64 556}
!426 = !{!9, !11, i64 80}
!427 = !{!139, !6, i64 85}
!428 = !{!139, !6, i64 86}
!429 = distinct !{!429, !55}
!430 = distinct !{!430, !55}
!431 = !{!139, !19, i64 24}
!432 = distinct !{!432, !55}
!433 = !{!139, !11, i64 60}
!434 = distinct !{!434, !55, !233}
!435 = !{!139, !11, i64 0}
!436 = !{!139, !13, i64 12128}
!437 = !{!139, !11, i64 9460}
!438 = !{!9, !15, i64 536}
!439 = distinct !{!439, !55, !372}
!440 = distinct !{!440, !55}
!441 = !{!9, !11, i64 25772}
!442 = !{!9, !11, i64 16488}
!443 = !{!9, !11, i64 25768}
!444 = distinct !{!444, !55}
!445 = !{!9, !13, i64 16664}
!446 = !{!9, !11, i64 16600}
!447 = !{!9, !11, i64 16604}
!448 = distinct !{!448, !55}
!449 = distinct !{!449, !55}
!450 = !{!9, !11, i64 25804}
!451 = !{!9, !11, i64 16596}
!452 = distinct !{!452, !55}
!453 = distinct !{!453, !55}
!454 = distinct !{!454, !55}
!455 = distinct !{!455, !55}
!456 = distinct !{!456, !55}
!457 = distinct !{!457, !55}
!458 = !{!459, !11, i64 0}
!459 = !{!"", !11, i64 0, !6, i64 4, !6, i64 36}
!460 = !{!461, !6, i64 2}
!461 = !{!"", !38, i64 0, !6, i64 2, !6, i64 3}
!462 = !{!461, !6, i64 3}
!463 = !{!171, !11, i64 4}
!464 = distinct !{!464, !55}
!465 = distinct !{!465, !55}
!466 = distinct !{!466, !55}
!467 = !{!9, !13, i64 33072}
!468 = distinct !{!468, !55}
!469 = distinct !{!469, !55}
!470 = distinct !{!470, !55}
!471 = !{!9, !13, i64 32632}
!472 = !{!9, !11, i64 400}
!473 = distinct !{!473, !55}
!474 = !{!9, !13, i64 31176}
!475 = !{!9, !13, i64 32904}
!476 = distinct !{!476, !55}
!477 = distinct !{!477, !55}
