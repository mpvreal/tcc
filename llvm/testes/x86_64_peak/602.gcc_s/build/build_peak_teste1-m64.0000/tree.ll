; ModuleID = 'tree.c'
source_filename = "tree.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.lang_hooks = type { ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.lang_hooks_for_tree_inlining = type { ptr }
%struct.lang_hooks_for_callgraph = type { ptr }
%struct.lang_hooks_for_tree_dump = type { ptr, ptr }
%struct.lang_hooks_for_decls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lang_hooks_for_types = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.lang_hooks_for_lto = type { ptr, ptr, ptr }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.addr_space, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.calls, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { ptr, ptr, ptr, %struct.asm_int_op, %struct.asm_int_op, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.asm_int_op = type { ptr, ptr, ptr, ptr }
%struct.sched = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vectorize = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.addr_space = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.calls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.c = type { ptr }
%struct.cxx = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.emutls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%struct.target_option_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.simple_ipa_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32 }
%struct.ggc_root_tab = type { ptr, i64, i64, ptr, ptr }
%struct.ggc_cache_tab = type { ptr, i64, i64, ptr, ptr, ptr }
%struct._IO_FILE = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i64, i16, i8, [1 x i8], ptr, i64, ptr, ptr, ptr, ptr, i64, i32, [20 x i8] }
%struct.type_hash = type { i64, ptr }
%struct.tree_common = type { %struct.tree_base, ptr, ptr }
%struct.tree_base = type { i64 }
%struct.tree_type = type { %struct.tree_common, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.tree_type_symtab, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%union.tree_type_symtab = type { ptr }
%struct.tree_map = type { %struct.tree_map_base, i32, ptr }
%struct.tree_map_base = type { ptr }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, ptr, i40, i32, ptr, ptr, ptr, ptr, ptr }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, ptr, ptr }
%struct.tree_label_decl = type { %struct.tree_decl_with_rtl, i32, i32 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, ptr }
%struct.tree_optimization_option = type { %struct.tree_common, %struct.cl_optimization }
%struct.cl_optimization = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.tree_target_option = type { %struct.tree_common, %struct.cl_target_option }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.tree_list = type { %struct.tree_common, ptr, ptr }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, ptr, ptr, ptr, i24 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { ptr, i32, i32 }
%struct.tree_binfo = type { %struct.tree_common, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.VEC_tree_none }
%struct.VEC_tree_none = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x ptr] }
%struct.tree_vec = type { %struct.tree_common, i32, [1 x ptr] }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_omp_clause = type { %struct.tree_common, i32, i32, %union.omp_clause_subcode, ptr, ptr, [1 x ptr] }
%union.omp_clause_subcode = type { i32 }
%struct.tree_exp = type { %struct.tree_common, i32, ptr, [1 x ptr] }
%struct.tree_priority_map = type { %struct.tree_map_base, i16, i16 }
%struct.tree_var_decl = type { %struct.tree_decl_with_vis, ptr }
%struct.tree_parm_decl = type { %struct.tree_decl_with_rtl, ptr, ptr }
%struct.tree_result_decl = type { %struct.tree_decl_with_rtl, ptr }
%struct.param_info = type { ptr, i32, i8, i32, i32, ptr }
%struct.tree_vector = type { %struct.tree_common, ptr }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { ptr, ptr }
%struct.tree_constructor = type { %struct.tree_common, ptr }
%struct.tree_fixed_cst = type { %struct.tree_common, ptr }
%struct.tree_real_cst = type { %struct.tree_common, ptr }
%struct.tree_complex = type { %struct.tree_common, ptr, ptr }
%struct.tree_field_decl = type { %struct.tree_decl_common, ptr, ptr, ptr, ptr, ptr }
%struct.tree_block = type { %struct.tree_common, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, ptr, ptr, ptr, ptr }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.expanded_location = type { ptr, i32, i32, i8 }
%struct.line_map = type { ptr, i32, i32, i32, i8, i8, i8 }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, ptr, ptr, ptr, ptr, i32 }
%struct.gimple_stmt_iterator = type { ptr, ptr, ptr }
%struct.free_lang_data_d = type { ptr, ptr, ptr, ptr }
%struct.function = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, i32 }
%struct.eh_region_d = type { ptr, ptr, ptr, i32, i32, %union.eh_region_u, ptr, ptr, ptr, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { ptr, ptr, i32 }
%struct.eh_catch_d = type { ptr, ptr, ptr, ptr, ptr }
%struct.basic_block_def = type { ptr, ptr, ptr, ptr, [2 x ptr], ptr, ptr, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%union.basic_block_il_dependent = type { ptr }
%struct.control_flow_graph = type { ptr, ptr, ptr, i32, i32, i32, ptr, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, ptr, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, ptr, ptr }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, ptr, i32 }
%struct.ssa_use_operand_d = type { ptr, ptr, %union.anon, ptr }
%union.anon = type { ptr }
%struct.gimple_seq_node_d = type { ptr, ptr, ptr }
%struct.cgraph_node = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_local_info = type { ptr, %struct.inline_summary, i8 }
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, ptr, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { ptr, ptr, ptr }
%struct.cgraph_thunk_info = type { i64, i64, ptr, i8, i8, i8 }
%struct.VEC_alias_pair_base = type { i32, i32, [1 x %struct.alias_pair] }
%struct.alias_pair = type { ptr, ptr }
%struct.varpool_node = type { ptr, ptr, ptr, ptr, i32, i8 }
%struct.diagnostic_context = type { ptr, [12 x i32], i8, i8, [870 x i32], i8, i8, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.pretty_print_info = type { ptr, ptr, i32, i32, i32, %struct.pp_wrapping_mode_t, ptr, i8, i8, i8 }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.tree_statement_list = type { %struct.tree_common, ptr, ptr }
%struct.tree_statement_list_node = type { ptr, ptr, ptr }
%struct.tree_ssa_name = type { %struct.tree_common, ptr, ptr, i32, ptr, %struct.ssa_use_operand_d }
%struct.htab = type { ptr, ptr, ptr, ptr, i64, i64, i64, i32, i32, ptr, ptr, ptr, ptr, ptr, i32 }

@global_trees = dso_local local_unnamed_addr global [131 x ptr] zeroinitializer, align 16
@integer_types = dso_local local_unnamed_addr global [11 x ptr] zeroinitializer, align 16
@tree_contains_struct = dso_local local_unnamed_addr global [191 x [64 x i8]] zeroinitializer, align 16
@stdout = external local_unnamed_addr global ptr, align 8
@stdin = external local_unnamed_addr global ptr, align 8
@tree_code_type = dso_local local_unnamed_addr constant [191 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 10, i32 0, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 9, i32 10, i32 10, i32 0, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 6, i32 6, i32 6, i32 7, i32 7, i32 6, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 6, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 7, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 4, i32 10, i32 10, i32 10, i32 10, i32 7, i32 6, i32 10, i32 10, i32 10, i32 10, i32 10, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 0, i32 8, i32 8, i32 10, i32 10, i32 10, i32 0, i32 10, i32 0, i32 10, i32 10, i32 4, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 0, i32 6, i32 6, i32 6, i32 10, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 6, i32 6, i32 6, i32 6, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 10, i32 0, i32 0, i32 0, i32 10, i32 10], align 16
@tree_code_length = dso_local local_unnamed_addr constant [191 x i8] calign 16
@tree_code_name = dso_local local_unnamed_addr constant [191 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190], align 16
@.str = private unnamed_addr constant [11 x i8] c"error_mark\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"identifier_node\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"tree_list\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"tree_vec\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"block\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"offset_type\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"enumeral_type\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"boolean_type\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"integer_type\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"real_type\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"pointer_type\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"fixed_point_type\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"reference_type\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"complex_type\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"vector_type\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"array_type\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"record_type\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"union_type\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"qual_union_type\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"void_type\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"function_type\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"method_type\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"lang_type\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"integer_cst\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"real_cst\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"fixed_cst\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"complex_cst\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"vector_cst\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"string_cst\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"function_decl\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"label_decl\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"field_decl\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"var_decl\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"const_decl\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"parm_decl\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"type_decl\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"result_decl\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"debug_expr_decl\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"namespace_decl\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"imported_decl\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"translation_unit_decl\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"component_ref\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"bit_field_ref\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"realpart_expr\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"imagpart_expr\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"array_ref\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"array_range_ref\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"indirect_ref\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"align_indirect_ref\00", align 1
@.str.49 = private unnamed_addr constant [24 x i8] c"misaligned_indirect_ref\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"obj_type_ref\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"compound_expr\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"modify_expr\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"init_expr\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"target_expr\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"cond_expr\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"vec_cond_expr\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"bind_expr\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"call_expr\00", align 1
@.str.60 = private unnamed_addr constant [18 x i8] c"with_cleanup_expr\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"cleanup_point_expr\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"placeholder_expr\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"plus_expr\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"minus_expr\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"mult_expr\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"pointer_plus_expr\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"trunc_div_expr\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"ceil_div_expr\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"floor_div_expr\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"round_div_expr\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"trunc_mod_expr\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"ceil_mod_expr\00", align 1
@.str.73 = private unnamed_addr constant [15 x i8] c"floor_mod_expr\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"round_mod_expr\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"rdiv_expr\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"exact_div_expr\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"fix_trunc_expr\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"float_expr\00", align 1
@.str.79 = private unnamed_addr constant [12 x i8] c"negate_expr\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"min_expr\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"max_expr\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"abs_expr\00", align 1
@.str.83 = private unnamed_addr constant [12 x i8] c"lshift_expr\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"rshift_expr\00", align 1
@.str.85 = private unnamed_addr constant [13 x i8] c"lrotate_expr\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"rrotate_expr\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"bit_ior_expr\00", align 1
@.str.88 = private unnamed_addr constant [13 x i8] c"bit_xor_expr\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"bit_and_expr\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"bit_not_expr\00", align 1
@.str.91 = private unnamed_addr constant [17 x i8] c"truth_andif_expr\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"truth_orif_expr\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"truth_and_expr\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"truth_or_expr\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"truth_xor_expr\00", align 1
@.str.96 = private unnamed_addr constant [15 x i8] c"truth_not_expr\00", align 1
@.str.97 = private unnamed_addr constant [8 x i8] c"lt_expr\00", align 1
@.str.98 = private unnamed_addr constant [8 x i8] c"le_expr\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"gt_expr\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"ge_expr\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"eq_expr\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"ne_expr\00", align 1
@.str.103 = private unnamed_addr constant [15 x i8] c"unordered_expr\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"ordered_expr\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"unlt_expr\00", align 1
@.str.106 = private unnamed_addr constant [10 x i8] c"unle_expr\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"ungt_expr\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"unge_expr\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"uneq_expr\00", align 1
@.str.110 = private unnamed_addr constant [10 x i8] c"ltgt_expr\00", align 1
@.str.111 = private unnamed_addr constant [11 x i8] c"range_expr\00", align 1
@.str.112 = private unnamed_addr constant [11 x i8] c"paren_expr\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"convert_expr\00", align 1
@.str.114 = private unnamed_addr constant [24 x i8] c"addr_space_convert_expr\00", align 1
@.str.115 = private unnamed_addr constant [19 x i8] c"fixed_convert_expr\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"nop_expr\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"non_lvalue_expr\00", align 1
@.str.118 = private unnamed_addr constant [18 x i8] c"view_convert_expr\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c"compound_literal_expr\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"save_expr\00", align 1
@.str.121 = private unnamed_addr constant [10 x i8] c"addr_expr\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"fdesc_expr\00", align 1
@.str.123 = private unnamed_addr constant [13 x i8] c"complex_expr\00", align 1
@.str.124 = private unnamed_addr constant [10 x i8] c"conj_expr\00", align 1
@.str.125 = private unnamed_addr constant [18 x i8] c"predecrement_expr\00", align 1
@.str.126 = private unnamed_addr constant [18 x i8] c"preincrement_expr\00", align 1
@.str.127 = private unnamed_addr constant [19 x i8] c"postdecrement_expr\00", align 1
@.str.128 = private unnamed_addr constant [19 x i8] c"postincrement_expr\00", align 1
@.str.129 = private unnamed_addr constant [12 x i8] c"va_arg_expr\00", align 1
@.str.130 = private unnamed_addr constant [15 x i8] c"try_catch_expr\00", align 1
@.str.131 = private unnamed_addr constant [12 x i8] c"try_finally\00", align 1
@.str.132 = private unnamed_addr constant [10 x i8] c"decl_expr\00", align 1
@.str.133 = private unnamed_addr constant [11 x i8] c"label_expr\00", align 1
@.str.134 = private unnamed_addr constant [10 x i8] c"goto_expr\00", align 1
@.str.135 = private unnamed_addr constant [12 x i8] c"return_expr\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"exit_expr\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"loop_expr\00", align 1
@.str.138 = private unnamed_addr constant [12 x i8] c"switch_expr\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"case_label_expr\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"asm_expr\00", align 1
@.str.141 = private unnamed_addr constant [9 x i8] c"ssa_name\00", align 1
@.str.142 = private unnamed_addr constant [11 x i8] c"catch_expr\00", align 1
@.str.143 = private unnamed_addr constant [15 x i8] c"eh_filter_expr\00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"scev_known\00", align 1
@.str.145 = private unnamed_addr constant [15 x i8] c"scev_not_known\00", align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"polynomial_chrec\00", align 1
@.str.147 = private unnamed_addr constant [15 x i8] c"statement_list\00", align 1
@.str.148 = private unnamed_addr constant [12 x i8] c"assert_expr\00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"tree_binfo\00", align 1
@.str.150 = private unnamed_addr constant [15 x i8] c"with_size_expr\00", align 1
@.str.151 = private unnamed_addr constant [13 x i8] c"realign_load\00", align 1
@.str.152 = private unnamed_addr constant [15 x i8] c"target_mem_ref\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"omp_parallel\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"omp_task\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"omp_for\00", align 1
@.str.156 = private unnamed_addr constant [13 x i8] c"omp_sections\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"omp_single\00", align 1
@.str.158 = private unnamed_addr constant [12 x i8] c"omp_section\00", align 1
@.str.159 = private unnamed_addr constant [11 x i8] c"omp_master\00", align 1
@.str.160 = private unnamed_addr constant [12 x i8] c"omp_ordered\00", align 1
@.str.161 = private unnamed_addr constant [13 x i8] c"omp_critical\00", align 1
@.str.162 = private unnamed_addr constant [11 x i8] c"omp_atomic\00", align 1
@.str.163 = private unnamed_addr constant [11 x i8] c"omp_clause\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"reduc_max_expr\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"reduc_min_expr\00", align 1
@.str.166 = private unnamed_addr constant [16 x i8] c"reduc_plus_expr\00", align 1
@.str.167 = private unnamed_addr constant [14 x i8] c"dot_prod_expr\00", align 1
@.str.168 = private unnamed_addr constant [15 x i8] c"widen_sum_expr\00", align 1
@.str.169 = private unnamed_addr constant [16 x i8] c"widen_mult_expr\00", align 1
@.str.170 = private unnamed_addr constant [16 x i8] c"vec_lshift_expr\00", align 1
@.str.171 = private unnamed_addr constant [16 x i8] c"vec_rshift_expr\00", align 1
@.str.172 = private unnamed_addr constant [19 x i8] c"widen_mult_hi_expr\00", align 1
@.str.173 = private unnamed_addr constant [19 x i8] c"widen_mult_lo_expr\00", align 1
@.str.174 = private unnamed_addr constant [19 x i8] c"vec_unpack_hi_expr\00", align 1
@.str.175 = private unnamed_addr constant [19 x i8] c"vec_unpack_lo_expr\00", align 1
@.str.176 = private unnamed_addr constant [25 x i8] c"vec_unpack_float_hi_expr\00", align 1
@.str.177 = private unnamed_addr constant [25 x i8] c"vec_unpack_float_lo_expr\00", align 1
@.str.178 = private unnamed_addr constant [20 x i8] c"vec_pack_trunc_expr\00", align 1
@.str.179 = private unnamed_addr constant [18 x i8] c"vec_pack_sat_expr\00", align 1
@.str.180 = private unnamed_addr constant [24 x i8] c"vec_pack_fix_trunc_expr\00", align 1
@.str.181 = private unnamed_addr constant [21 x i8] c"vec_extracteven_expr\00", align 1
@.str.182 = private unnamed_addr constant [20 x i8] c"vec_extractodd_expr\00", align 1
@.str.183 = private unnamed_addr constant [24 x i8] c"vec_interleavehigh_expr\00", align 1
@.str.184 = private unnamed_addr constant [23 x i8] c"vec_interleavelow_expr\00", align 1
@.str.185 = private unnamed_addr constant [13 x i8] c"predict_expr\00", align 1
@.str.186 = private unnamed_addr constant [18 x i8] c"optimization_node\00", align 1
@.str.187 = private unnamed_addr constant [19 x i8] c"target_option_node\00", align 1
@.str.188 = private unnamed_addr constant [7 x i8] c"@dummy\00", align 1
@.str.189 = private unnamed_addr constant [19 x i8] c"c_maybe_const_expr\00", align 1
@.str.190 = private unnamed_addr constant [22 x i8] c"excess_precision_expr\00", align 1
@tree_code_class_strings = dso_local local_unnamed_addr constant [11 x ptr] [ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201], align 16
@.str.191 = private unnamed_addr constant [12 x i8] c"exceptional\00", align 1
@.str.192 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str.193 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.194 = private unnamed_addr constant [12 x i8] c"declaration\00", align 1
@.str.195 = private unnamed_addr constant [10 x i8] c"reference\00", align 1
@.str.196 = private unnamed_addr constant [11 x i8] c"comparison\00", align 1
@.str.197 = private unnamed_addr constant [6 x i8] c"unary\00", align 1
@.str.198 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str.199 = private unnamed_addr constant [10 x i8] c"statement\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"vl_exp\00", align 1
@.str.201 = private unnamed_addr constant [11 x i8] c"expression\00", align 1
@omp_clause_num_ops = dso_local local_unnamed_addr constant [16 x i8] c"\00\01\01\01\02\04\01\01\01\01\01\00\00\00\03\00", align 16
@omp_clause_code_name = dso_local local_unnamed_addr constant [16 x ptr] [ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217], align 16
@.str.202 = private unnamed_addr constant [13 x i8] c"error_clause\00", align 1
@.str.203 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.205 = private unnamed_addr constant [13 x i8] c"firstprivate\00", align 1
@.str.206 = private unnamed_addr constant [12 x i8] c"lastprivate\00", align 1
@.str.207 = private unnamed_addr constant [10 x i8] c"reduction\00", align 1
@.str.208 = private unnamed_addr constant [7 x i8] c"copyin\00", align 1
@.str.209 = private unnamed_addr constant [12 x i8] c"copyprivate\00", align 1
@.str.210 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.211 = private unnamed_addr constant [12 x i8] c"num_threads\00", align 1
@.str.212 = private unnamed_addr constant [9 x i8] c"schedule\00", align 1
@.str.213 = private unnamed_addr constant [7 x i8] c"nowait\00", align 1
@.str.214 = private unnamed_addr constant [8 x i8] c"ordered\00", align 1
@.str.215 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.216 = private unnamed_addr constant [9 x i8] c"collapse\00", align 1
@.str.217 = private unnamed_addr constant [7 x i8] c"untied\00", align 1
@type_hash_table = internal global ptr null, align 8
@debug_expr_for_decl = internal global ptr null, align 8
@value_expr_for_decl = internal global ptr null, align 8
@init_priority_for_decl = internal global ptr null, align 8
@int_cst_hash_table = internal global ptr null, align 8
@int_cst_node = internal global ptr null, align 8
@cl_option_hash_table = internal global ptr null, align 8
@cl_optimization_node = internal global ptr null, align 8
@cl_target_option_node = internal global ptr null, align 8
@lang_hooks = external local_unnamed_addr global %struct.lang_hooks, align 8
@htab_hash_pointer = external local_unnamed_addr global ptr, align 8
@.str.218 = private unnamed_addr constant [7 x i8] c"tree.c\00", align 1
@.str.219 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@user_label_prefix = external local_unnamed_addr global ptr, align 8
@input_location = external local_unnamed_addr global i32, align 4
@next_debug_decl_uid = internal global i32 0, align 4
@next_decl_uid = internal global i32 0, align 4
@next_type_uid = internal global i32 1, align 4
@targetm = external local_unnamed_addr global %struct.gcc_target, align 8
@compiler_params = external local_unnamed_addr global ptr, align 8
@dconst1 = external global %struct.real_value, align 8
@mode_class = external local_unnamed_addr constant [87 x i8], align 16
@fconst1 = external local_unnamed_addr global [8 x %struct.fixed_value], align 16
@mode_size = external local_unnamed_addr global [87 x i8], align 16
@dconst0 = external global %struct.real_value, align 8
@dconst2 = external global %struct.real_value, align 8
@dconstm1 = external global %struct.real_value, align 8
@current_function_decl = external local_unnamed_addr global ptr, align 8
@sizetype_tab = external local_unnamed_addr global [4 x ptr], align 16
@.str.220 = private unnamed_addr constant [11 x i8] c"<built-in>\00", align 1
@line_table = external local_unnamed_addr global ptr, align 8
@.str.221 = private unnamed_addr constant [52 x i8] c"ignoring attributes applied to %qT after definition\00", align 1
@pass_ipa_free_lang_data = dso_local local_unnamed_addr global %struct.simple_ipa_opt_pass { %struct.opt_pass { i32 2, ptr @.str.222, ptr null, ptr @free_lang_data, ptr null, ptr null, i32 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 2 } }, align 8
@.str.222 = private unnamed_addr constant [16 x i8] c"*free_lang_data\00", align 1
@in_lto_p = external local_unnamed_addr global i8, align 1
@flag_generate_lto = external local_unnamed_addr global i32, align 4
@global_dc = external local_unnamed_addr global ptr, align 8
@cgraph_nodes = external local_unnamed_addr global ptr, align 8
@alias_pairs = external local_unnamed_addr global ptr, align 8
@varpool_nodes_queue = external local_unnamed_addr global ptr, align 8
@cfun = external local_unnamed_addr global ptr, align 8
@debug_info_level = external local_unnamed_addr global i32, align 4
@.str.223 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external local_unnamed_addr constant [0 x i32], align 4
@built_in_decls = external local_unnamed_addr global [721 x ptr], align 16
@.str.224 = private unnamed_addr constant [10 x i8] c"may_alias\00", align 1
@.str.225 = private unnamed_addr constant [39 x i8] c"arrays of functions are not meaningful\00", align 1
@.str.226 = private unnamed_addr constant [40 x i8] c"function return type cannot be function\00", align 1
@.str.227 = private unnamed_addr constant [13 x i8] c"complex char\00", align 1
@.str.228 = private unnamed_addr constant [20 x i8] c"complex signed char\00", align 1
@.str.229 = private unnamed_addr constant [22 x i8] c"complex unsigned char\00", align 1
@.str.230 = private unnamed_addr constant [18 x i8] c"complex short int\00", align 1
@.str.231 = private unnamed_addr constant [27 x i8] c"complex short unsigned int\00", align 1
@.str.232 = private unnamed_addr constant [12 x i8] c"complex int\00", align 1
@.str.233 = private unnamed_addr constant [21 x i8] c"complex unsigned int\00", align 1
@.str.234 = private unnamed_addr constant [17 x i8] c"complex long int\00", align 1
@.str.235 = private unnamed_addr constant [26 x i8] c"complex long unsigned int\00", align 1
@.str.236 = private unnamed_addr constant [22 x i8] c"complex long long int\00", align 1
@.str.237 = private unnamed_addr constant [31 x i8] c"complex long long unsigned int\00", align 1
@flag_excess_precision = external local_unnamed_addr global i32, align 4
@ix86_fpmath = external local_unnamed_addr global i32, align 4
@stderr = external local_unnamed_addr global ptr, align 8
@.str.238 = private unnamed_addr constant [26 x i8] c"\0A??? tree nodes created\0A\0A\00", align 1
@.str.239 = private unnamed_addr constant [26 x i8] c"(No per-node statistics)\0A\00", align 1
@.str.240 = private unnamed_addr constant [50 x i8] c"Type hash: size %ld, %ld elements, %f collisions\0A\00", align 1
@.str.241 = private unnamed_addr constant [62 x i8] c"DECL_DEBUG_EXPR  hash: size %ld, %ld elements, %f collisions\0A\00", align 1
@.str.242 = private unnamed_addr constant [62 x i8] c"DECL_VALUE_EXPR  hash: size %ld, %ld elements, %f collisions\0A\00", align 1
@_sch_istable = external local_unnamed_addr constant [256 x i16], align 16
@first_global_object_name = external local_unnamed_addr global ptr, align 8
@libiberty_optr = external local_unnamed_addr global ptr, align 8
@libiberty_len = external local_unnamed_addr global i64, align 8
@libiberty_nptr = external local_unnamed_addr global ptr, align 8
@main_input_filename = external local_unnamed_addr global ptr, align 8
@weak_global_object_name = external local_unnamed_addr global ptr, align 8
@.str.243 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.244 = private unnamed_addr constant [11 x i8] c"_%08X_%08X\00", align 1
@.str.245 = private unnamed_addr constant [15 x i8] c"_GLOBAL__%s_%s\00", align 1
@.str.246 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.247 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.248 = private unnamed_addr constant [17 x i8] c"__builtin_memcpy\00", align 1
@.str.249 = private unnamed_addr constant [7 x i8] c"memcpy\00", align 1
@.str.250 = private unnamed_addr constant [18 x i8] c"__builtin_memmove\00", align 1
@.str.251 = private unnamed_addr constant [8 x i8] c"memmove\00", align 1
@.str.252 = private unnamed_addr constant [17 x i8] c"__builtin_memcmp\00", align 1
@.str.253 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@.str.254 = private unnamed_addr constant [17 x i8] c"__builtin_memset\00", align 1
@.str.255 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@.str.256 = private unnamed_addr constant [17 x i8] c"__builtin_alloca\00", align 1
@.str.257 = private unnamed_addr constant [7 x i8] c"alloca\00", align 1
@flag_stack_check = external local_unnamed_addr global i32, align 4
@.str.258 = private unnamed_addr constant [26 x i8] c"__builtin_init_trampoline\00", align 1
@.str.259 = private unnamed_addr constant [28 x i8] c"__builtin_adjust_trampoline\00", align 1
@.str.260 = private unnamed_addr constant [24 x i8] c"__builtin_nonlocal_goto\00", align 1
@.str.261 = private unnamed_addr constant [23 x i8] c"__builtin_setjmp_setup\00", align 1
@.str.262 = private unnamed_addr constant [28 x i8] c"__builtin_setjmp_dispatcher\00", align 1
@.str.263 = private unnamed_addr constant [26 x i8] c"__builtin_setjmp_receiver\00", align 1
@.str.264 = private unnamed_addr constant [21 x i8] c"__builtin_stack_save\00", align 1
@.str.265 = private unnamed_addr constant [24 x i8] c"__builtin_stack_restore\00", align 1
@.str.266 = private unnamed_addr constant [29 x i8] c"__builtin_profile_func_enter\00", align 1
@.str.267 = private unnamed_addr constant [19 x i8] c"profile_func_enter\00", align 1
@.str.268 = private unnamed_addr constant [28 x i8] c"__builtin_profile_func_exit\00", align 1
@.str.269 = private unnamed_addr constant [18 x i8] c"profile_func_exit\00", align 1
@.str.270 = private unnamed_addr constant [26 x i8] c"__builtin_cxa_end_cleanup\00", align 1
@.str.271 = private unnamed_addr constant [18 x i8] c"__cxa_end_cleanup\00", align 1
@.str.272 = private unnamed_addr constant [24 x i8] c"__builtin_unwind_resume\00", align 1
@.str.273 = private unnamed_addr constant [15 x i8] c"_Unwind_Resume\00", align 1
@.str.274 = private unnamed_addr constant [21 x i8] c"__builtin_eh_pointer\00", align 1
@.str.275 = private unnamed_addr constant [20 x i8] c"__builtin_eh_filter\00", align 1
@.str.276 = private unnamed_addr constant [25 x i8] c"__builtin_eh_copy_values\00", align 1
@mode_name = external local_unnamed_addr constant [87 x ptr], align 16
@_sch_tolower = external local_unnamed_addr constant [256 x i8], align 16
@.str.277 = private unnamed_addr constant [6 x i8] c"__mul\00", align 1
@.str.278 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@built_in_names = external local_unnamed_addr global [721 x ptr], align 16
@.str.279 = private unnamed_addr constant [6 x i8] c"__div\00", align 1
@implicit_built_in_decls = external local_unnamed_addr global [721 x ptr], align 16
@mode_nunits = external local_unnamed_addr constant [87 x i8], align 16
@.str.280 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.282 = private unnamed_addr constant [11 x i8] c"artificial\00", align 1
@gcc_eh_personality_decl = internal global ptr null, align 8
@.str.283 = private unnamed_addr constant [21 x i8] c"__gcc_personality_v0\00", align 1
@gt_ggc_r_gt_tree_h = dso_local local_unnamed_addr constant [5 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @gcc_eh_personality_decl, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @cl_target_option_node, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @cl_optimization_node, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @int_cst_node, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16
@gt_ggc_rc_gt_tree_h = dso_local local_unnamed_addr constant [7 x %struct.ggc_cache_tab] [%struct.ggc_cache_tab { ptr @init_priority_for_decl, i64 1, i64 8, ptr @gt_ggc_mx_tree_priority_map, ptr @gt_pch_nx_tree_priority_map, ptr @tree_map_base_marked_p }, %struct.ggc_cache_tab { ptr @value_expr_for_decl, i64 1, i64 8, ptr @gt_ggc_mx_tree_map, ptr @gt_pch_nx_tree_map, ptr @tree_map_base_marked_p }, %struct.ggc_cache_tab { ptr @debug_expr_for_decl, i64 1, i64 8, ptr @gt_ggc_mx_tree_map, ptr @gt_pch_nx_tree_map, ptr @tree_map_base_marked_p }, %struct.ggc_cache_tab { ptr @cl_option_hash_table, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node, ptr @ggc_marked_p }, %struct.ggc_cache_tab { ptr @int_cst_hash_table, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node, ptr @ggc_marked_p }, %struct.ggc_cache_tab { ptr @type_hash_table, i64 1, i64 8, ptr @gt_ggc_mx_type_hash, ptr @gt_pch_nx_type_hash, ptr @type_hash_marked_p }, %struct.ggc_cache_tab zeroinitializer], align 16
@gt_pch_rc_gt_tree_h = dso_local local_unnamed_addr constant [7 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @init_priority_for_decl, i64 1, i64 8, ptr @gt_ggc_m_P17tree_priority_map4htab, ptr @gt_pch_n_P17tree_priority_map4htab }, %struct.ggc_root_tab { ptr @value_expr_for_decl, i64 1, i64 8, ptr @gt_ggc_m_P8tree_map4htab, ptr @gt_pch_n_P8tree_map4htab }, %struct.ggc_root_tab { ptr @debug_expr_for_decl, i64 1, i64 8, ptr @gt_ggc_m_P8tree_map4htab, ptr @gt_pch_n_P8tree_map4htab }, %struct.ggc_root_tab { ptr @cl_option_hash_table, i64 1, i64 8, ptr @gt_ggc_m_P9tree_node4htab, ptr @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab { ptr @int_cst_hash_table, i64 1, i64 8, ptr @gt_ggc_m_P9tree_node4htab, ptr @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab { ptr @type_hash_table, i64 1, i64 8, ptr @gt_ggc_m_P9type_hash4htab, ptr @gt_pch_n_P9type_hash4htab }, %struct.ggc_root_tab zeroinitializer], align 16
@gt_pch_rs_gt_tree_h = dso_local local_unnamed_addr constant [4 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @next_debug_decl_uid, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @next_type_uid, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @next_decl_uid, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab zeroinitializer], align 16
@switch.table.tree_node_structure_for_code = private unnamed_addr constant [9 x i32] [i32 21, i32 17, i32 14, i32 15, i32 19, i32 16, i32 20, i32 18, i32 11], align 4
@switch.table.tree_code_size = private unnamed_addr constant [9 x i64] [i64 224, i64 128, i64 152, i64 160, i64 120, i64 136, i64 184, i64 128, i64 120], align 8

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @vprintf(ptr noalias nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = load ptr, ptr @stdout, align 8, !tbaa !6
  %4 = tail call i32 @vfprintf(ptr noundef %3, ptr noundef %0, ptr noundef %1)
  ret i32 %4
}

; Function Attrs: nofree nounwind
declare noundef i32 @vfprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !6
  %2 = tail call i32 @getc(ptr noundef %1)
  ret i32 %2
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fgetc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #29
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

declare i32 @__uflow(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #29
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #2 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %0
  %8 = tail call i32 @__uflow(ptr noundef nonnull %1) #29
  br label %13

9:                                                ; preds = %0
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @putchar(i32 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !6
  %3 = tail call i32 @putc(i32 noundef %0, ptr noundef %2)
  ret i32 %3
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fputc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #29
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

declare i32 @__overflow(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #29
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putchar_unlocked(i32 noundef %0) local_unnamed_addr #2 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %1
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %2, i32 noundef %9) #29
  br label %15

11:                                               ; preds = %1
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @getline(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #2 {
  %4 = tail call i64 @__getdelim(ptr noundef %0, ptr noundef %1, i32 noundef 10, ptr noundef %2) #29
  ret i64 %4
}

declare i64 @__getdelim(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @feof_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = lshr i32 %2, 4
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ferror_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = lshr i32 %2, 5
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @tolower(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_tolower_loc() #29
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !21
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_tolower_loc() local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @toupper(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_toupper_loc() #29
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !21
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_toupper_loc() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @atoi(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #29
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

declare i64 @__isoc23_strtol(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atol(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #29
  ret i64 %2
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atoll(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtoll(ptr noundef %0, ptr noundef null, i32 noundef 10) #29
  ret i64 %2
}

declare i64 @__isoc23_strtoll(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local ptr @bsearch(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, ptr nocapture noundef readonly %4) local_unnamed_addr #2 {
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %5, %20
  %8 = phi i64 [ %22, %20 ], [ 0, %5 ]
  %9 = phi i64 [ %21, %20 ], [ %2, %5 ]
  %10 = add i64 %8, %9
  %11 = lshr i64 %10, 1
  %12 = mul i64 %11, %3
  %13 = getelementptr inbounds i8, ptr %1, i64 %12
  %14 = tail call i32 %4(ptr noundef %0, ptr noundef %13) #29
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 1
  br label %20

20:                                               ; preds = %7, %18
  %21 = phi i64 [ %9, %18 ], [ %11, %7 ]
  %22 = phi i64 [ %19, %18 ], [ %8, %7 ]
  %23 = icmp ult i64 %22, %21
  br i1 %23, label %7, label %24, !llvm.loop !22

24:                                               ; preds = %16, %20, %5
  %25 = phi ptr [ null, %5 ], [ null, %20 ], [ %13, %16 ]
  ret ptr %25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable
define dso_local nofpclass(nan inf) double @atof(ptr nocapture noundef readonly %0) local_unnamed_addr #7 {
  %2 = tail call fast nofpclass(nan inf) double @strtod(ptr nocapture noundef %0, ptr noundef null)
  ret double %2
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare nofpclass(nan inf) double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @init_ttree() local_unnamed_addr #9 {
  %1 = tail call ptr @htab_create_alloc(i64 noundef 1000, ptr noundef nonnull @type_hash_hash, ptr noundef nonnull @type_hash_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #29
  store ptr %1, ptr @type_hash_table, align 8, !tbaa !6
  %2 = tail call ptr @htab_create_alloc(i64 noundef 512, ptr noundef nonnull @tree_map_hash, ptr noundef nonnull @tree_map_base_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #29
  store ptr %2, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %3 = tail call ptr @htab_create_alloc(i64 noundef 512, ptr noundef nonnull @tree_map_hash, ptr noundef nonnull @tree_map_base_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #29
  store ptr %3, ptr @value_expr_for_decl, align 8, !tbaa !6
  %4 = tail call ptr @htab_create_alloc(i64 noundef 512, ptr noundef nonnull @tree_map_base_hash, ptr noundef nonnull @tree_map_base_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #29
  store ptr %4, ptr @init_priority_for_decl, align 8, !tbaa !6
  %5 = tail call ptr @htab_create_alloc(i64 noundef 1024, ptr noundef nonnull @int_cst_hash_hash, ptr noundef nonnull @int_cst_hash_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #29
  store ptr %5, ptr @int_cst_hash_table, align 8, !tbaa !6
  %6 = tail call ptr @make_node_stat(i32 noundef 23)
  store ptr %6, ptr @int_cst_node, align 8, !tbaa !6
  %7 = tail call ptr @htab_create_alloc(i64 noundef 64, ptr noundef nonnull @cl_option_hash_hash, ptr noundef nonnull @cl_option_hash_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #29
  store ptr %7, ptr @cl_option_hash_table, align 8, !tbaa !6
  %8 = tail call ptr @make_node_stat(i32 noundef 186)
  store ptr %8, ptr @cl_optimization_node, align 8, !tbaa !6
  %9 = tail call ptr @make_node_stat(i32 noundef 187)
  store ptr %9, ptr @cl_target_option_node, align 8, !tbaa !6
  br label %10

10:                                               ; preds = %52, %0
  %11 = phi i64 [ 0, %0 ], [ %53, %52 ]
  %12 = trunc i64 %11 to i32
  %13 = tail call fastcc i32 @tree_node_structure_for_code(i32 noundef %12), !range !24
  %14 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11
  %15 = zext i32 %13 to i64
  %16 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 %15
  store i8 1, ptr %16, align 1, !tbaa !17
  switch i32 %13, label %51 [
    i32 1, label %17
    i32 2, label %18
    i32 3, label %18
    i32 4, label %18
    i32 5, label %18
    i32 6, label %18
    i32 7, label %18
    i32 8, label %18
    i32 9, label %18
    i32 22, label %18
    i32 23, label %18
    i32 24, label %18
    i32 25, label %18
    i32 26, label %18
    i32 27, label %18
    i32 28, label %18
    i32 29, label %18
    i32 30, label %18
    i32 31, label %18
    i32 32, label %18
    i32 33, label %18
    i32 10, label %20
    i32 11, label %23
    i32 12, label %27
    i32 13, label %33
    i32 16, label %33
    i32 17, label %33
    i32 18, label %33
    i32 19, label %33
    i32 14, label %38
    i32 15, label %42
    i32 20, label %48
    i32 21, label %48
  ]

17:                                               ; preds = %10
  store i8 1, ptr %14, align 16, !tbaa !17
  br label %52

18:                                               ; preds = %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %19 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %19, align 1, !tbaa !17
  br label %52

20:                                               ; preds = %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %21 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %21, align 1, !tbaa !17
  %22 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 9
  store i8 1, ptr %22, align 1, !tbaa !17
  br label %52

23:                                               ; preds = %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %24 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %24, align 1, !tbaa !17
  %25 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 9
  store i8 1, ptr %25, align 1, !tbaa !17
  %26 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 10
  store i8 1, ptr %26, align 2, !tbaa !17
  br label %52

27:                                               ; preds = %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %28 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %28, align 1, !tbaa !17
  %29 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 9
  store i8 1, ptr %29, align 1, !tbaa !17
  %30 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 10
  store i8 1, ptr %30, align 2, !tbaa !17
  %31 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 11
  store i8 1, ptr %31, align 1, !tbaa !17
  %32 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 13
  store i8 1, ptr %32, align 1, !tbaa !17
  br label %52

33:                                               ; preds = %10, %10, %10, %10, %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %34 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %34, align 1, !tbaa !17
  %35 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 9
  store i8 1, ptr %35, align 1, !tbaa !17
  %36 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 10
  store i8 1, ptr %36, align 2, !tbaa !17
  %37 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 11
  store i8 1, ptr %37, align 1, !tbaa !17
  br label %52

38:                                               ; preds = %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %39 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %39, align 1, !tbaa !17
  %40 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 9
  store i8 1, ptr %40, align 1, !tbaa !17
  %41 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 10
  store i8 1, ptr %41, align 2, !tbaa !17
  br label %52

42:                                               ; preds = %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %43 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %43, align 1, !tbaa !17
  %44 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 9
  store i8 1, ptr %44, align 1, !tbaa !17
  %45 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 10
  store i8 1, ptr %45, align 2, !tbaa !17
  %46 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 11
  store i8 1, ptr %46, align 1, !tbaa !17
  %47 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 13
  store i8 1, ptr %47, align 1, !tbaa !17
  br label %52

48:                                               ; preds = %10, %10
  store i8 1, ptr %14, align 16, !tbaa !17
  %49 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 1
  store i8 1, ptr %49, align 1, !tbaa !17
  %50 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %11, i64 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(5) %50, i8 1, i64 5, i1 false)
  br label %52

51:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 473, ptr noundef nonnull @.str.219) #29
  br label %52

52:                                               ; preds = %51, %48, %42, %38, %33, %27, %23, %20, %18, %17
  %53 = add nuw nsw i64 %11, 1
  %54 = icmp eq i64 %53, 188
  br i1 %54, label %55, label %10, !llvm.loop !25

55:                                               ; preds = %52
  %56 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 29, i64 12), align 4, !tbaa !17
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 478, ptr noundef nonnull @.str.219) #29
  br label %59

59:                                               ; preds = %58, %55
  %60 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 40, i64 12), align 4, !tbaa !17
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 479, ptr noundef nonnull @.str.219) #29
  br label %63

63:                                               ; preds = %62, %59
  %64 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 35, i64 12), align 4, !tbaa !17
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 480, ptr noundef nonnull @.str.219) #29
  br label %67

67:                                               ; preds = %66, %63
  %68 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 33, i64 10), align 2, !tbaa !17
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 481, ptr noundef nonnull @.str.219) #29
  br label %71

71:                                               ; preds = %70, %67
  %72 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 10), align 2, !tbaa !17
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 482, ptr noundef nonnull @.str.219) #29
  br label %75

75:                                               ; preds = %74, %71
  %76 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 34, i64 10), align 2, !tbaa !17
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 483, ptr noundef nonnull @.str.219) #29
  br label %79

79:                                               ; preds = %78, %75
  %80 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 36, i64 10), align 2, !tbaa !17
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 484, ptr noundef nonnull @.str.219) #29
  br label %83

83:                                               ; preds = %82, %79
  %84 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 29, i64 10), align 2, !tbaa !17
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 485, ptr noundef nonnull @.str.219) #29
  br label %87

87:                                               ; preds = %86, %83
  %88 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 35, i64 10), align 2, !tbaa !17
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 486, ptr noundef nonnull @.str.219) #29
  br label %91

91:                                               ; preds = %90, %87
  %92 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 40, i64 10), align 2, !tbaa !17
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 487, ptr noundef nonnull @.str.219) #29
  br label %95

95:                                               ; preds = %94, %91
  %96 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 30, i64 10), align 2, !tbaa !17
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 488, ptr noundef nonnull @.str.219) #29
  br label %99

99:                                               ; preds = %98, %95
  %100 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 31, i64 10), align 2, !tbaa !17
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 489, ptr noundef nonnull @.str.219) #29
  br label %103

103:                                              ; preds = %102, %99
  %104 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 33, i64 11), align 1, !tbaa !17
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 490, ptr noundef nonnull @.str.219) #29
  br label %107

107:                                              ; preds = %106, %103
  %108 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !tbaa !17
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 491, ptr noundef nonnull @.str.219) #29
  br label %111

111:                                              ; preds = %110, %107
  %112 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 34, i64 11), align 1, !tbaa !17
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 492, ptr noundef nonnull @.str.219) #29
  br label %115

115:                                              ; preds = %114, %111
  %116 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 36, i64 11), align 1, !tbaa !17
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 493, ptr noundef nonnull @.str.219) #29
  br label %119

119:                                              ; preds = %118, %115
  %120 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 29, i64 11), align 1, !tbaa !17
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 494, ptr noundef nonnull @.str.219) #29
  br label %123

123:                                              ; preds = %122, %119
  %124 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 30, i64 11), align 1, !tbaa !17
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 495, ptr noundef nonnull @.str.219) #29
  br label %127

127:                                              ; preds = %126, %123
  %128 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 33, i64 9), align 1, !tbaa !17
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 496, ptr noundef nonnull @.str.219) #29
  br label %131

131:                                              ; preds = %130, %127
  %132 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 9), align 1, !tbaa !17
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 497, ptr noundef nonnull @.str.219) #29
  br label %135

135:                                              ; preds = %134, %131
  %136 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 34, i64 9), align 1, !tbaa !17
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 498, ptr noundef nonnull @.str.219) #29
  br label %139

139:                                              ; preds = %138, %135
  %140 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 36, i64 9), align 1, !tbaa !17
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 499, ptr noundef nonnull @.str.219) #29
  br label %143

143:                                              ; preds = %142, %139
  %144 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 29, i64 9), align 1, !tbaa !17
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 500, ptr noundef nonnull @.str.219) #29
  br label %147

147:                                              ; preds = %146, %143
  %148 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 35, i64 9), align 1, !tbaa !17
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 501, ptr noundef nonnull @.str.219) #29
  br label %151

151:                                              ; preds = %150, %147
  %152 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 40, i64 9), align 1, !tbaa !17
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 502, ptr noundef nonnull @.str.219) #29
  br label %155

155:                                              ; preds = %154, %151
  %156 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 30, i64 9), align 1, !tbaa !17
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 503, ptr noundef nonnull @.str.219) #29
  br label %159

159:                                              ; preds = %158, %155
  %160 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 31, i64 9), align 1, !tbaa !17
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 504, ptr noundef nonnull @.str.219) #29
  br label %163

163:                                              ; preds = %162, %159
  %164 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 13), align 1, !tbaa !17
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 505, ptr noundef nonnull @.str.219) #29
  br label %167

167:                                              ; preds = %166, %163
  %168 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 29, i64 13), align 1, !tbaa !17
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 506, ptr noundef nonnull @.str.219) #29
  br label %171

171:                                              ; preds = %170, %167
  %172 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 35, i64 13), align 1, !tbaa !17
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 507, ptr noundef nonnull @.str.219) #29
  br label %175

175:                                              ; preds = %174, %171
  %176 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 40, i64 13), align 1, !tbaa !17
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 508, ptr noundef nonnull @.str.219) #29
  br label %179

179:                                              ; preds = %178, %175
  %180 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 15), align 1, !tbaa !17
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 509, ptr noundef nonnull @.str.219) #29
  br label %183

183:                                              ; preds = %182, %179
  %184 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 31, i64 14), align 2, !tbaa !17
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 510, ptr noundef nonnull @.str.219) #29
  br label %187

187:                                              ; preds = %186, %183
  %188 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 34, i64 16), align 16, !tbaa !17
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 511, ptr noundef nonnull @.str.219) #29
  br label %191

191:                                              ; preds = %190, %187
  %192 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 30, i64 17), align 1, !tbaa !17
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 512, ptr noundef nonnull @.str.219) #29
  br label %195

195:                                              ; preds = %194, %191
  %196 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 36, i64 18), align 2, !tbaa !17
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 513, ptr noundef nonnull @.str.219) #29
  br label %199

199:                                              ; preds = %198, %195
  %200 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 33, i64 19), align 1, !tbaa !17
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 514, ptr noundef nonnull @.str.219) #29
  br label %203

203:                                              ; preds = %202, %199
  %204 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 35, i64 20), align 4, !tbaa !17
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 515, ptr noundef nonnull @.str.219) #29
  br label %207

207:                                              ; preds = %206, %203
  %208 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 29, i64 21), align 1, !tbaa !17
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 516, ptr noundef nonnull @.str.219) #29
  br label %211

211:                                              ; preds = %210, %207
  %212 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 39, i64 9), align 1, !tbaa !17
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 517, ptr noundef nonnull @.str.219) #29
  br label %215

215:                                              ; preds = %214, %211
  %216 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 39, i64 10), align 2, !tbaa !17
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 518, ptr noundef nonnull @.str.219) #29
  br label %219

219:                                              ; preds = %215, %218
  %220 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 43), align 8, !tbaa !26
  tail call void %220() #29
  ret void
}

declare ptr @htab_create_alloc(i64 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @type_hash_hash(ptr nocapture noundef readonly %0) #10 {
  %2 = load i64, ptr %0, align 8, !tbaa !34
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @type_hash_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #9 {
  %3 = load i64, ptr %0, align 8, !tbaa !34
  %4 = load i64, ptr %1, align 8, !tbaa !34
  %5 = icmp eq i64 %3, %4
  br i1 %5, label %6, label %241

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.type_hash, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !36
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds %struct.type_hash, ptr %1, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !36
  %12 = load i64, ptr %11, align 8
  %13 = xor i64 %12, %9
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %241

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %18, %20
  br i1 %21, label %22, label %241

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 4
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 4
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = tail call i32 @attribute_list_contained(ptr noundef %24, ptr noundef %26)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %241, label %29

29:                                               ; preds = %22
  %30 = tail call i32 @attribute_list_contained(ptr noundef %26, ptr noundef %24)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %241, label %32

32:                                               ; preds = %29
  %33 = load ptr, ptr %7, align 8, !tbaa !36
  %34 = getelementptr inbounds %struct.tree_type, ptr %33, i64 0, i32 7
  %35 = load i32, ptr %34, align 8, !tbaa !17
  %36 = load ptr, ptr %10, align 8, !tbaa !36
  %37 = getelementptr inbounds %struct.tree_type, ptr %36, i64 0, i32 7
  %38 = load i32, ptr %37, align 8, !tbaa !17
  %39 = icmp eq i32 %35, %38
  br i1 %39, label %40, label %241

40:                                               ; preds = %32
  %41 = load i64, ptr %33, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %33) #29
  %46 = load ptr, ptr %10, align 8, !tbaa !36
  br label %52

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.tree_type, ptr %33, i64 0, i32 6
  %49 = load i32, ptr %48, align 4
  %50 = lshr i32 %49, 16
  %51 = and i32 %50, 255
  br label %52

52:                                               ; preds = %47, %44
  %53 = phi ptr [ %46, %44 ], [ %36, %47 ]
  %54 = phi i32 [ %45, %44 ], [ %51, %47 ]
  %55 = load i64, ptr %53, align 8
  %56 = and i64 %55, 65535
  %57 = icmp eq i64 %56, 14
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call i32 @vector_type_mode(ptr noundef nonnull %53) #29
  br label %65

60:                                               ; preds = %52
  %61 = getelementptr inbounds %struct.tree_type, ptr %53, i64 0, i32 6
  %62 = load i32, ptr %61, align 4
  %63 = lshr i32 %62, 16
  %64 = and i32 %63, 255
  br label %65

65:                                               ; preds = %60, %58
  %66 = phi i32 [ %59, %58 ], [ %64, %60 ]
  %67 = icmp eq i32 %54, %66
  br i1 %67, label %68, label %241

68:                                               ; preds = %65
  %69 = load ptr, ptr %7, align 8, !tbaa !36
  %70 = load i64, ptr %69, align 8
  %71 = and i64 %70, 65535
  %72 = icmp eq i64 %71, 13
  br i1 %72, label %80, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 12
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = load ptr, ptr %10, align 8, !tbaa !36
  %77 = getelementptr inbounds %struct.tree_type, ptr %76, i64 0, i32 12
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = icmp eq ptr %75, %78
  br i1 %79, label %80, label %241

80:                                               ; preds = %73, %68
  %81 = trunc i64 %70 to i16
  switch i16 %81, label %232 [
    i16 19, label %241
    i16 13, label %241
    i16 10, label %241
    i16 12, label %241
    i16 14, label %82
    i16 6, label %96
    i16 8, label %120
    i16 9, label %120
    i16 7, label %120
    i16 11, label %139
    i16 5, label %146
    i16 21, label %154
    i16 15, label %181
    i16 16, label %189
    i16 17, label %189
    i16 18, label %189
    i16 20, label %210
  ]

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 6
  %84 = load i32, ptr %83, align 4
  %85 = and i32 %84, 1023
  %86 = zext i32 %85 to i64
  %87 = shl nuw i64 1, %86
  %88 = load ptr, ptr %10, align 8, !tbaa !36
  %89 = getelementptr inbounds %struct.tree_type, ptr %88, i64 0, i32 6
  %90 = load i32, ptr %89, align 4
  %91 = and i32 %90, 1023
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 1, %92
  %94 = icmp eq i64 %87, %93
  %95 = zext i1 %94 to i32
  br label %241

96:                                               ; preds = %80
  %97 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = load ptr, ptr %10, align 8, !tbaa !36
  %100 = getelementptr inbounds %struct.tree_type, ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = icmp eq ptr %98, %101
  br i1 %102, label %120, label %103

103:                                              ; preds = %96
  %104 = icmp eq ptr %98, null
  br i1 %104, label %241, label %105

105:                                              ; preds = %103
  %106 = load i64, ptr %98, align 8
  %107 = and i64 %106, 65535
  %108 = icmp ne i64 %107, 2
  %109 = icmp eq ptr %101, null
  %110 = or i1 %109, %108
  br i1 %110, label %241, label %111

111:                                              ; preds = %105
  %112 = load i64, ptr %101, align 8
  %113 = and i64 %112, 65535
  %114 = icmp eq i64 %113, 2
  br i1 %114, label %115, label %241

115:                                              ; preds = %111
  %116 = tail call i32 @type_list_equal(ptr noundef nonnull %98, ptr noundef nonnull %101), !range !37
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %241, label %118

118:                                              ; preds = %115
  %119 = load ptr, ptr %7, align 8, !tbaa !36
  br label %120

120:                                              ; preds = %118, %96, %80, %80, %80
  %121 = phi ptr [ %119, %118 ], [ %69, %96 ], [ %69, %80 ], [ %69, %80 ], [ %69, %80 ]
  %122 = getelementptr inbounds %struct.tree_type, ptr %121, i64 0, i32 14
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = load ptr, ptr %10, align 8, !tbaa !36
  %125 = getelementptr inbounds %struct.tree_type, ptr %124, i64 0, i32 14
  %126 = load ptr, ptr %125, align 8, !tbaa !17
  %127 = icmp eq ptr %123, %126
  br i1 %127, label %131, label %128

128:                                              ; preds = %120
  %129 = tail call i32 @tree_int_cst_equal(ptr noundef %123, ptr noundef %126), !range !37
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %241, label %131

131:                                              ; preds = %128, %120
  %132 = getelementptr inbounds %struct.tree_type, ptr %121, i64 0, i32 13
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  %134 = getelementptr inbounds %struct.tree_type, ptr %124, i64 0, i32 13
  %135 = load ptr, ptr %134, align 8, !tbaa !17
  %136 = icmp eq ptr %133, %135
  br i1 %136, label %241, label %137

137:                                              ; preds = %131
  %138 = tail call i32 @tree_int_cst_equal(ptr noundef %133, ptr noundef %135), !range !37
  br label %241

139:                                              ; preds = %80
  %140 = load ptr, ptr %10, align 8, !tbaa !36
  %141 = load i64, ptr %140, align 8
  %142 = xor i64 %141, %70
  %143 = and i64 %142, 2147483648
  %144 = icmp eq i64 %143, 0
  %145 = zext i1 %144 to i32
  br label %241

146:                                              ; preds = %80
  %147 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 14
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = load ptr, ptr %10, align 8, !tbaa !36
  %150 = getelementptr inbounds %struct.tree_type, ptr %149, i64 0, i32 14
  %151 = load ptr, ptr %150, align 8, !tbaa !17
  %152 = icmp eq ptr %148, %151
  %153 = zext i1 %152 to i32
  br label %241

154:                                              ; preds = %80
  %155 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 14
  %156 = load ptr, ptr %155, align 8, !tbaa !17
  %157 = load ptr, ptr %10, align 8, !tbaa !36
  %158 = getelementptr inbounds %struct.tree_type, ptr %157, i64 0, i32 14
  %159 = load ptr, ptr %158, align 8, !tbaa !17
  %160 = icmp eq ptr %156, %159
  br i1 %160, label %161, label %241

161:                                              ; preds = %154
  %162 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 1
  %163 = load ptr, ptr %162, align 8, !tbaa !17
  %164 = getelementptr inbounds %struct.tree_type, ptr %157, i64 0, i32 1
  %165 = load ptr, ptr %164, align 8, !tbaa !17
  %166 = icmp eq ptr %163, %165
  br i1 %166, label %241, label %167

167:                                              ; preds = %161
  %168 = icmp eq ptr %163, null
  br i1 %168, label %241, label %169

169:                                              ; preds = %167
  %170 = load i64, ptr %163, align 8
  %171 = and i64 %170, 65535
  %172 = icmp ne i64 %171, 2
  %173 = icmp eq ptr %165, null
  %174 = or i1 %173, %172
  br i1 %174, label %241, label %175

175:                                              ; preds = %169
  %176 = load i64, ptr %165, align 8
  %177 = and i64 %176, 65535
  %178 = icmp eq i64 %177, 2
  br i1 %178, label %179, label %241

179:                                              ; preds = %175
  %180 = tail call i32 @type_list_equal(ptr noundef nonnull %163, ptr noundef nonnull %165), !range !37
  br label %241

181:                                              ; preds = %80
  %182 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 1
  %183 = load ptr, ptr %182, align 8, !tbaa !17
  %184 = load ptr, ptr %10, align 8, !tbaa !36
  %185 = getelementptr inbounds %struct.tree_type, ptr %184, i64 0, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !17
  %187 = icmp eq ptr %183, %186
  %188 = zext i1 %187 to i32
  br label %241

189:                                              ; preds = %80, %80, %80
  %190 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 1
  %191 = load ptr, ptr %190, align 8, !tbaa !17
  %192 = load ptr, ptr %10, align 8, !tbaa !36
  %193 = getelementptr inbounds %struct.tree_type, ptr %192, i64 0, i32 1
  %194 = load ptr, ptr %193, align 8, !tbaa !17
  %195 = icmp eq ptr %191, %194
  br i1 %195, label %241, label %196

196:                                              ; preds = %189
  %197 = icmp eq ptr %191, null
  br i1 %197, label %241, label %198

198:                                              ; preds = %196
  %199 = load i64, ptr %191, align 8
  %200 = and i64 %199, 65535
  %201 = icmp ne i64 %200, 2
  %202 = icmp eq ptr %194, null
  %203 = or i1 %202, %201
  br i1 %203, label %241, label %204

204:                                              ; preds = %198
  %205 = load i64, ptr %194, align 8
  %206 = and i64 %205, 65535
  %207 = icmp eq i64 %206, 2
  br i1 %207, label %208, label %241

208:                                              ; preds = %204
  %209 = tail call i32 @type_list_equal(ptr noundef nonnull %191, ptr noundef nonnull %194), !range !37
  br label %241

210:                                              ; preds = %80
  %211 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 1
  %212 = load ptr, ptr %211, align 8, !tbaa !17
  %213 = load ptr, ptr %10, align 8, !tbaa !36
  %214 = getelementptr inbounds %struct.tree_type, ptr %213, i64 0, i32 1
  %215 = load ptr, ptr %214, align 8, !tbaa !17
  %216 = icmp eq ptr %212, %215
  br i1 %216, label %233, label %217

217:                                              ; preds = %210
  %218 = icmp eq ptr %212, null
  br i1 %218, label %241, label %219

219:                                              ; preds = %217
  %220 = load i64, ptr %212, align 8
  %221 = and i64 %220, 65535
  %222 = icmp ne i64 %221, 2
  %223 = icmp eq ptr %215, null
  %224 = or i1 %223, %222
  br i1 %224, label %241, label %225

225:                                              ; preds = %219
  %226 = load i64, ptr %215, align 8
  %227 = and i64 %226, 65535
  %228 = icmp eq i64 %227, 2
  br i1 %228, label %229, label %241

229:                                              ; preds = %225
  %230 = tail call i32 @type_list_equal(ptr noundef nonnull %212, ptr noundef nonnull %215), !range !37
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %241, label %233

232:                                              ; preds = %80
  br label %241

233:                                              ; preds = %210, %229
  %234 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 11), align 8, !tbaa !38
  %235 = icmp eq ptr %234, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %233
  %237 = load ptr, ptr %7, align 8, !tbaa !36
  %238 = load ptr, ptr %10, align 8, !tbaa !36
  %239 = tail call zeroext i8 %234(ptr noundef %237, ptr noundef %238) #29
  %240 = zext i8 %239 to i32
  br label %241

241:                                              ; preds = %22, %233, %217, %219, %225, %229, %189, %208, %204, %198, %196, %154, %167, %169, %175, %179, %161, %128, %137, %131, %103, %105, %111, %115, %80, %80, %80, %80, %2, %6, %16, %29, %32, %65, %73, %236, %232, %181, %146, %139, %82
  %242 = phi i32 [ 0, %232 ], [ %240, %236 ], [ %188, %181 ], [ %153, %146 ], [ %145, %139 ], [ %95, %82 ], [ 0, %73 ], [ 0, %65 ], [ 0, %32 ], [ 0, %29 ], [ 0, %16 ], [ 0, %6 ], [ 0, %2 ], [ 1, %80 ], [ 1, %80 ], [ 1, %80 ], [ 1, %80 ], [ 0, %115 ], [ 0, %111 ], [ 0, %105 ], [ 0, %103 ], [ 0, %128 ], [ 1, %131 ], [ %138, %137 ], [ 0, %154 ], [ 1, %161 ], [ 0, %175 ], [ 0, %169 ], [ 0, %167 ], [ %180, %179 ], [ 1, %189 ], [ 0, %204 ], [ 0, %198 ], [ 0, %196 ], [ %209, %208 ], [ 0, %229 ], [ 0, %225 ], [ 0, %219 ], [ 0, %217 ], [ 1, %233 ], [ 0, %22 ]
  ret i32 %242
}

declare ptr @ggc_calloc(i64 noundef, i64 noundef) #3

declare void @ggc_free(ptr noundef) #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @tree_map_hash(ptr nocapture noundef readonly %0) #10 {
  %2 = getelementptr inbounds %struct.tree_map, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !39
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @tree_map_base_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !42
  %4 = load ptr, ptr %1, align 8, !tbaa !42
  %5 = icmp eq ptr %3, %4
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_map_base_hash(ptr nocapture noundef readonly %0) #9 {
  %2 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %3 = load ptr, ptr %0, align 8, !tbaa !42
  %4 = tail call i32 %2(ptr noundef %3) #29
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @int_cst_hash_hash(ptr nocapture noundef readonly %0) #9 {
  %2 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %4 = load i64, ptr %3, align 8, !tbaa !17
  %5 = load i64, ptr %2, align 8, !tbaa !17
  %6 = xor i64 %5, %4
  %7 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = tail call i32 %7(ptr noundef %9) #29
  %11 = trunc i64 %6 to i32
  %12 = xor i32 %10, %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @int_cst_hash_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #10 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !17
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %16 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !17
  %18 = load i64, ptr %15, align 8, !tbaa !17
  %19 = icmp eq i64 %17, %18
  %20 = zext i1 %19 to i32
  br label %21

21:                                               ; preds = %14, %8, %2
  %22 = phi i32 [ 0, %8 ], [ 0, %2 ], [ %20, %14 ]
  ret i32 %22
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @make_node_stat(i32 noundef %0) local_unnamed_addr #9 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %2
  %4 = load i32, ptr %3, align 4, !tbaa !17
  %5 = tail call i64 @tree_code_size(i32 noundef %0)
  %6 = tail call ptr @ggc_alloc_stat(i64 noundef %5) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %6, i8 0, i64 %5, i1 false)
  %7 = zext i32 %0 to i64
  %8 = load i64, ptr %6, align 8
  %9 = and i64 %7, 65535
  %10 = and i64 %8, -65536
  %11 = or i64 %10, %9
  store i64 %11, ptr %6, align 8
  switch i32 %4, label %57 [
    i32 8, label %12
    i32 3, label %14
    i32 2, label %41
    i32 1, label %52
    i32 10, label %54
  ]

12:                                               ; preds = %1
  %13 = or i64 %11, 65536
  store i64 %13, ptr %6, align 8
  br label %57

14:                                               ; preds = %1
  %15 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %7, i64 10
  %16 = load i8, ptr %15, align 2, !tbaa !17
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %14
  %19 = icmp eq i32 %0, 29
  %20 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 3
  br i1 %19, label %21, label %26

21:                                               ; preds = %18
  store i32 8, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %23 = load i64, ptr %22, align 8
  %24 = and i64 %23, -256
  %25 = or i64 %24, 14
  store i64 %25, ptr %22, align 8
  br label %27

26:                                               ; preds = %18
  store i32 1, ptr %20, align 8, !tbaa !17
  br label %27

27:                                               ; preds = %21, %26, %14
  %28 = load i32, ptr @input_location, align 4, !tbaa !21
  %29 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 1
  store i32 %28, ptr %29, align 8, !tbaa !17
  %30 = icmp eq i64 %9, 37
  %31 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 2
  br i1 %30, label %32, label %35

32:                                               ; preds = %27
  %33 = load i32, ptr @next_debug_decl_uid, align 4, !tbaa !21
  %34 = add nsw i32 %33, -1
  store i32 %34, ptr @next_debug_decl_uid, align 4, !tbaa !21
  store i32 %34, ptr %31, align 4
  br label %57

35:                                               ; preds = %27
  %36 = load i32, ptr @next_decl_uid, align 4, !tbaa !21
  %37 = add nsw i32 %36, 1
  store i32 %37, ptr @next_decl_uid, align 4, !tbaa !21
  store i32 %36, ptr %31, align 4
  %38 = icmp eq i64 %9, 30
  br i1 %38, label %39, label %57

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.tree_label_decl, ptr %6, i64 0, i32 1
  store i32 -1, ptr %40, align 8, !tbaa !17
  br label %57

41:                                               ; preds = %1
  %42 = load i32, ptr @next_type_uid, align 4, !tbaa !21
  %43 = add nsw i32 %42, 1
  store i32 %43, ptr @next_type_uid, align 4, !tbaa !21
  %44 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 5
  store i32 %42, ptr %44, align 8, !tbaa !17
  %45 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 7
  store i32 8, ptr %45, align 8, !tbaa !17
  %46 = and i64 %11, -4398046511105
  store i64 %46, ptr %6, align 8
  %47 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 16
  store ptr %6, ptr %47, align 8, !tbaa !17
  %48 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 19
  store ptr %6, ptr %48, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 4
  store ptr null, ptr %49, align 8, !tbaa !17
  %50 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 15), align 8, !tbaa !43
  tail call void %50(ptr noundef nonnull %6) #29
  %51 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 8
  store i32 -1, ptr %51, align 4, !tbaa !17
  br label %57

52:                                               ; preds = %1
  %53 = or i64 %11, 131072
  store i64 %53, ptr %6, align 8
  br label %57

54:                                               ; preds = %1
  switch i32 %0, label %57 [
    i32 54, label %55
    i32 53, label %55
    i32 129, label %55
    i32 125, label %55
    i32 126, label %55
    i32 127, label %55
    i32 128, label %55
  ]

55:                                               ; preds = %54, %54, %54, %54, %54, %54, %54
  %56 = or i64 %11, 65536
  store i64 %56, ptr %6, align 8
  br label %57

57:                                               ; preds = %32, %1, %55, %54, %35, %39, %52, %41, %12
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @cl_option_hash_hash(ptr nocapture noundef readonly %0) #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %8 [
    i16 186, label %4
    i16 187, label %6
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_optimization_option, ptr %0, i64 0, i32 1
  br label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tree_target_option, ptr %0, i64 0, i32 1
  br label %9

8:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10485, ptr noundef nonnull @.str.219) #29
  br label %38

9:                                                ; preds = %4, %6
  %10 = phi ptr [ %7, %6 ], [ %5, %4 ]
  %11 = phi i64 [ 24, %6 ], [ 184, %4 ]
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i32 [ 0, %9 ], [ %35, %12 ]
  %14 = phi i64 [ 0, %9 ], [ %36, %12 ]
  %15 = getelementptr inbounds i8, ptr %10, i64 %14
  %16 = load i8, ptr %15, align 1, !tbaa !17
  %17 = icmp eq i8 %16, 0
  %18 = shl i32 %13, 4
  %19 = shl nuw nsw i64 %14, 2
  %20 = sext i8 %16 to i64
  %21 = or i64 %19, %20
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %18, %22
  %24 = select i1 %17, i32 %13, i32 %23
  %25 = or i64 %14, 1
  %26 = getelementptr inbounds i8, ptr %10, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !17
  %28 = icmp eq i8 %27, 0
  %29 = shl i32 %24, 4
  %30 = shl nuw nsw i64 %25, 2
  %31 = sext i8 %27 to i64
  %32 = or i64 %30, %31
  %33 = trunc i64 %32 to i32
  %34 = xor i32 %29, %33
  %35 = select i1 %28, i32 %24, i32 %34
  %36 = add nuw nsw i64 %14, 2
  %37 = icmp eq i64 %36, %11
  br i1 %37, label %38, label %12, !llvm.loop !55

38:                                               ; preds = %12, %8
  %39 = phi i32 [ 0, %8 ], [ %35, %12 ]
  ret i32 %39
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @cl_option_hash_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #9 {
  %3 = load i64, ptr %0, align 8
  %4 = load i64, ptr %1, align 8
  %5 = xor i64 %4, %3
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = trunc i64 %3 to i16
  switch i16 %9, label %16 [
    i16 186, label %10
    i16 187, label %13
  ]

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.tree_optimization_option, ptr %0, i64 0, i32 1
  %12 = getelementptr inbounds %struct.tree_optimization_option, ptr %1, i64 0, i32 1
  br label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.tree_target_option, ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %struct.tree_target_option, ptr %1, i64 0, i32 1
  br label %17

16:                                               ; preds = %8
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10527, ptr noundef nonnull @.str.219) #29
  br label %17

17:                                               ; preds = %13, %16, %10
  %18 = phi ptr [ %11, %10 ], [ %14, %13 ], [ undef, %16 ]
  %19 = phi ptr [ %12, %10 ], [ %15, %13 ], [ undef, %16 ]
  %20 = phi i64 [ 184, %10 ], [ 24, %13 ], [ undef, %16 ]
  %21 = tail call i32 @bcmp(ptr %18, ptr %19, i64 %20)
  %22 = icmp eq i32 %21, 0
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %2, %17
  %25 = phi i32 [ %23, %17 ], [ 0, %2 ]
  ret i32 %25
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @attribute_list_equal(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call i32 @attribute_list_contained(ptr noundef %0, ptr noundef %1)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @attribute_list_contained(ptr noundef %1, ptr noundef %0)
  %7 = icmp ne i32 %6, 0
  %8 = zext i1 %7 to i32
  br label %9

9:                                                ; preds = %5, %2
  %10 = phi i32 [ 0, %2 ], [ %8, %5 ]
  ret i32 %10
}

declare i32 @vector_type_mode(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @type_list_equal(ptr noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp ne ptr %0, null
  %4 = icmp ne ptr %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %39

6:                                                ; preds = %2, %31
  %7 = phi ptr [ %35, %31 ], [ %1, %2 ]
  %8 = phi ptr [ %33, %31 ], [ %0, %2 ]
  %9 = getelementptr inbounds %struct.tree_list, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.tree_list, ptr %7, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %10, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.tree_list, ptr %8, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_list, ptr %7, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = icmp eq ptr %16, %18
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = tail call i32 @simple_cst_equal(ptr noundef %16, ptr noundef %18), !range !56
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %44

23:                                               ; preds = %20
  %24 = load ptr, ptr %15, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.tree_common, ptr %24, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = load ptr, ptr %17, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.tree_common, ptr %27, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = icmp eq ptr %26, %29
  br i1 %30, label %31, label %44

31:                                               ; preds = %14, %23
  %32 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp ne ptr %33, null
  %37 = icmp ne ptr %35, null
  %38 = select i1 %36, i1 %37, i1 false
  br i1 %38, label %6, label %39, !llvm.loop !57

39:                                               ; preds = %31, %2
  %40 = phi ptr [ %0, %2 ], [ %33, %31 ]
  %41 = phi ptr [ %1, %2 ], [ %35, %31 ]
  %42 = icmp eq ptr %40, %41
  %43 = zext i1 %42 to i32
  br label %44

44:                                               ; preds = %6, %20, %23, %39
  %45 = phi i32 [ %43, %39 ], [ 0, %23 ], [ 0, %20 ], [ 0, %6 ]
  ret i32 %45
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @tree_int_cst_equal(ptr noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #10 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = icmp eq ptr %0, null
  %6 = icmp eq ptr %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = load i64, ptr %0, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 23
  br i1 %11, label %12, label %28

12:                                               ; preds = %8
  %13 = load i64, ptr %1, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 23
  br i1 %15, label %16, label %28

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %20 = load i64, ptr %19, align 8, !tbaa !17
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !17
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %22, %16, %12, %8
  br label %29

29:                                               ; preds = %22, %4, %2, %28
  %30 = phi i32 [ 0, %28 ], [ 1, %2 ], [ 0, %4 ], [ 1, %22 ]
  ret i32 %30
}

declare void @fancy_abort(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc i32 @tree_node_structure_for_code(i32 noundef %0) unnamed_addr #2 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %2
  %4 = load i32, ptr %3, align 4, !tbaa !17
  switch i32 %4, label %9 [
    i32 3, label %5
    i32 2, label %33
    i32 4, label %8
    i32 5, label %8
    i32 6, label %8
    i32 7, label %8
    i32 10, label %8
    i32 8, label %8
    i32 9, label %8
  ]

5:                                                ; preds = %1
  %6 = add i32 %0, -29
  %7 = icmp ult i32 %6, 9
  br i1 %7, label %29, label %33

8:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %33

9:                                                ; preds = %1
  switch i32 %0, label %28 [
    i32 23, label %33
    i32 24, label %10
    i32 25, label %11
    i32 26, label %12
    i32 27, label %13
    i32 28, label %14
    i32 0, label %15
    i32 1, label %16
    i32 2, label %17
    i32 3, label %18
    i32 141, label %19
    i32 62, label %20
    i32 147, label %21
    i32 4, label %22
    i32 51, label %23
    i32 149, label %24
    i32 163, label %25
    i32 186, label %26
    i32 187, label %27
  ]

10:                                               ; preds = %9
  br label %33

11:                                               ; preds = %9
  br label %33

12:                                               ; preds = %9
  br label %33

13:                                               ; preds = %9
  br label %33

14:                                               ; preds = %9
  br label %33

15:                                               ; preds = %9
  br label %33

16:                                               ; preds = %9
  br label %33

17:                                               ; preds = %9
  br label %33

18:                                               ; preds = %9
  br label %33

19:                                               ; preds = %9
  br label %33

20:                                               ; preds = %9
  br label %33

21:                                               ; preds = %9
  br label %33

22:                                               ; preds = %9
  br label %33

23:                                               ; preds = %9
  br label %33

24:                                               ; preds = %9
  br label %33

25:                                               ; preds = %9
  br label %33

26:                                               ; preds = %9
  br label %33

27:                                               ; preds = %9
  br label %33

28:                                               ; preds = %9
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 341, ptr noundef nonnull @.str.219) #29
  br label %33

29:                                               ; preds = %5
  %30 = sext i32 %6 to i64
  %31 = getelementptr inbounds [9 x i32], ptr @switch.table.tree_node_structure_for_code, i64 0, i64 %30
  %32 = load i32, ptr %31, align 4
  br label %33

33:                                               ; preds = %5, %29, %9, %1, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %8
  %34 = phi i32 [ 0, %28 ], [ 33, %27 ], [ 32, %26 ], [ 31, %25 ], [ 28, %24 ], [ 30, %23 ], [ 27, %22 ], [ 29, %21 ], [ 1, %20 ], [ 26, %19 ], [ 24, %18 ], [ 23, %17 ], [ 8, %16 ], [ 1, %15 ], [ 6, %14 ], [ 5, %13 ], [ 7, %12 ], [ 4, %11 ], [ 3, %10 ], [ 25, %8 ], [ 22, %1 ], [ 2, %9 ], [ %32, %29 ], [ 12, %5 ]
  ret i32 %34
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @decl_assembler_name(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %3, i64 13
  %5 = load i8, ptr %4, align 1, !tbaa !17
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %7, %1
  %12 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 16), align 8, !tbaa !58
  tail call void %12(ptr noundef nonnull %0) #29
  %13 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  br label %15

15:                                               ; preds = %11, %7
  %16 = phi ptr [ %14, %11 ], [ %9, %7 ]
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @decl_assembler_name_equal(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %4, i64 13
  %6 = load i8, ptr %5, align 1, !tbaa !17
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %8, %2
  %13 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 16), align 8, !tbaa !58
  tail call void %13(ptr noundef nonnull %0) #29
  %14 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  br label %16

16:                                               ; preds = %8, %12
  %17 = phi ptr [ %15, %12 ], [ %10, %8 ]
  %18 = icmp eq ptr %17, %1
  br i1 %18, label %58, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.tree_identifier, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.tree_identifier, ptr %1, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = load i8, ptr %21, align 1, !tbaa !17
  %25 = icmp eq i8 %24, 42
  br i1 %25, label %26, label %37

26:                                               ; preds = %19
  %27 = load ptr, ptr @user_label_prefix, align 8, !tbaa !6
  %28 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %27)
  %29 = getelementptr inbounds i8, ptr %21, i64 1
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = tail call i32 @strncmp(ptr noundef nonnull %29, ptr noundef %27, i64 noundef %28)
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds i8, ptr %29, i64 %28
  %35 = zext i1 %33 to i8
  %36 = select i1 %33, ptr %34, ptr %21
  br label %37

37:                                               ; preds = %31, %26, %19
  %38 = phi i8 [ 0, %19 ], [ 1, %26 ], [ %35, %31 ]
  %39 = phi ptr [ %21, %19 ], [ %29, %26 ], [ %36, %31 ]
  %40 = load i8, ptr %23, align 1, !tbaa !17
  %41 = icmp eq i8 %40, 42
  br i1 %41, label %42, label %51

42:                                               ; preds = %37
  %43 = load ptr, ptr @user_label_prefix, align 8, !tbaa !6
  %44 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %43)
  %45 = getelementptr inbounds i8, ptr %23, i64 1
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = tail call i32 @strncmp(ptr noundef nonnull %45, ptr noundef %43, i64 noundef %44)
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds i8, ptr %45, i64 %44
  br i1 %49, label %53, label %51

51:                                               ; preds = %47, %37
  %52 = icmp eq i8 %38, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %47, %42, %51
  %54 = phi ptr [ %23, %51 ], [ %45, %42 ], [ %50, %47 ]
  %55 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %39, ptr noundef nonnull dereferenceable(1) %54)
  %56 = icmp eq i32 %55, 0
  %57 = zext i1 %56 to i8
  br label %58

58:                                               ; preds = %51, %16, %53
  %59 = phi i8 [ %57, %53 ], [ 1, %16 ], [ 0, %51 ]
  ret i8 %59
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #11

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @decl_assembler_name_hash(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_identifier, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = load i8, ptr %3, align 1, !tbaa !17
  %5 = icmp eq i8 %4, 42
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, ptr %3, i64 1
  %8 = load ptr, ptr @user_label_prefix, align 8, !tbaa !6
  %9 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %8)
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @strncmp(ptr noundef nonnull %7, ptr noundef %8, i64 noundef %9)
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i64 %9, i64 0
  %15 = getelementptr inbounds i8, ptr %7, i64 %14
  br label %16

16:                                               ; preds = %1, %6, %11
  %17 = phi ptr [ %7, %6 ], [ %15, %11 ], [ %3, %1 ]
  %18 = tail call i32 @htab_hash_string(ptr noundef nonnull %17) #29
  ret i32 %18
}

declare i32 @htab_hash_string(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @tree_code_size(i32 noundef %0) local_unnamed_addr #9 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %2
  %4 = load i32, ptr %3, align 4, !tbaa !17
  switch i32 %4, label %35 [
    i32 3, label %5
    i32 2, label %40
    i32 4, label %8
    i32 10, label %8
    i32 8, label %8
    i32 5, label %8
    i32 6, label %8
    i32 7, label %8
    i32 1, label %14
    i32 0, label %22
  ]

5:                                                ; preds = %1
  %6 = add i32 %0, -29
  %7 = icmp ult i32 %6, 9
  br i1 %7, label %36, label %40

8:                                                ; preds = %1, %1, %1, %1, %1, %1
  %9 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %2
  %10 = load i8, ptr %9, align 1, !tbaa !17
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 3
  %13 = add nuw nsw i64 %12, 40
  br label %40

14:                                               ; preds = %1
  switch i32 %0, label %19 [
    i32 23, label %40
    i32 24, label %15
    i32 25, label %16
    i32 26, label %40
    i32 27, label %17
    i32 28, label %18
  ]

15:                                               ; preds = %14
  br label %40

16:                                               ; preds = %14
  br label %40

17:                                               ; preds = %14
  br label %40

18:                                               ; preds = %14
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 706, ptr noundef nonnull @.str.219) #29
  br label %19

19:                                               ; preds = %14, %18
  %20 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 3), align 8, !tbaa !59
  %21 = tail call i64 %20(i32 noundef %0) #29
  br label %40

22:                                               ; preds = %1
  switch i32 %0, label %32 [
    i32 1, label %23
    i32 2, label %40
    i32 0, label %25
    i32 62, label %25
    i32 3, label %26
    i32 163, label %26
    i32 141, label %27
    i32 147, label %40
    i32 4, label %28
    i32 51, label %29
    i32 186, label %30
    i32 187, label %31
  ]

23:                                               ; preds = %22
  %24 = load i64, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 1), align 8, !tbaa !60
  br label %40

25:                                               ; preds = %22, %22
  br label %40

26:                                               ; preds = %22, %22
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 721, ptr noundef nonnull @.str.219) #29
  br label %27

27:                                               ; preds = %22, %26
  br label %40

28:                                               ; preds = %22
  br label %40

29:                                               ; preds = %22
  br label %40

30:                                               ; preds = %22
  br label %40

31:                                               ; preds = %22
  br label %40

32:                                               ; preds = %22
  %33 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 3), align 8, !tbaa !59
  %34 = tail call i64 %33(i32 noundef %0) #29
  br label %40

35:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 736, ptr noundef nonnull @.str.219) #29
  br label %40

36:                                               ; preds = %5
  %37 = sext i32 %6 to i64
  %38 = getelementptr inbounds [9 x i64], ptr @switch.table.tree_code_size, i64 0, i64 %37
  %39 = load i64, ptr %38, align 8
  br label %40

40:                                               ; preds = %5, %36, %22, %22, %14, %14, %1, %35, %32, %31, %30, %29, %28, %27, %25, %23, %19, %17, %16, %15, %8
  %41 = phi i64 [ 0, %35 ], [ %34, %32 ], [ 48, %31 ], [ 208, %30 ], [ 32, %29 ], [ 88, %28 ], [ 88, %27 ], [ 24, %25 ], [ %24, %23 ], [ %21, %19 ], [ 32, %17 ], [ 32, %16 ], [ 32, %15 ], [ %13, %8 ], [ 168, %1 ], [ 40, %14 ], [ 40, %14 ], [ 40, %22 ], [ 40, %22 ], [ %39, %36 ], [ 184, %5 ]
  ret i64 %41
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @tree_size(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i32
  %4 = and i32 %3, 65535
  %5 = trunc i64 %2 to i16
  switch i16 %5, label %33 [
    i16 149, label %6
    i16 3, label %12
    i16 28, label %19
    i16 163, label %24
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tree_binfo, ptr %0, i64 0, i32 9
  %8 = load i32, ptr %7, align 8, !tbaa !61
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 3
  %11 = add nsw i64 %10, 96
  br label %47

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.tree_vec, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !17
  %15 = add nsw i32 %14, -1
  %16 = sext i32 %15 to i64
  %17 = shl nsw i64 %16, 3
  %18 = add nsw i64 %17, 40
  br label %47

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.tree_string, ptr %0, i64 0, i32 1
  %21 = load i32, ptr %20, align 8, !tbaa !17
  %22 = sext i32 %21 to i64
  %23 = add nsw i64 %22, 29
  br label %47

24:                                               ; preds = %1
  %25 = getelementptr inbounds %struct.tree_omp_clause, ptr %0, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !17
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [16 x i8], ptr @omp_clause_num_ops, i64 0, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !17
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = add nuw nsw i64 %31, 56
  br label %47

33:                                               ; preds = %1
  %34 = and i64 %2, 65535
  %35 = icmp eq i64 %34, 59
  br i1 %35, label %36, label %45

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = getelementptr inbounds %struct.tree_int_cst, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %39, align 8, !tbaa !17
  %41 = shl i64 %40, 32
  %42 = add i64 %41, -4294967296
  %43 = ashr exact i64 %42, 29
  %44 = add nsw i64 %43, 48
  br label %47

45:                                               ; preds = %33
  %46 = tail call i64 @tree_code_size(i32 noundef %4)
  br label %47

47:                                               ; preds = %45, %36, %24, %19, %12, %6
  %48 = phi i64 [ %44, %36 ], [ %46, %45 ], [ %32, %24 ], [ %23, %19 ], [ %18, %12 ], [ %11, %6 ]
  ret i64 %48
}

declare ptr @ggc_alloc_stat(i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @copy_node_stat(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.tree_priority_map, align 8
  %3 = alloca %struct.tree_map_base, align 8
  %4 = alloca %struct.tree_map, align 8
  %5 = load i64, ptr %0, align 8
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 65535
  %8 = icmp eq i32 %7, 147
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 955, ptr noundef nonnull @.str.219) #29
  %10 = load i64, ptr %0, align 8
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, 65535
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %7, %1 ], [ %12, %9 ]
  %15 = phi i64 [ %5, %1 ], [ %10, %9 ]
  %16 = trunc i64 %15 to i16
  switch i16 %16, label %44 [
    i16 149, label %17
    i16 3, label %23
    i16 28, label %30
    i16 163, label %35
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_binfo, ptr %0, i64 0, i32 9
  %19 = load i32, ptr %18, align 8, !tbaa !61
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 3
  %22 = add nsw i64 %21, 96
  br label %58

23:                                               ; preds = %13
  %24 = getelementptr inbounds %struct.tree_vec, ptr %0, i64 0, i32 1
  %25 = load i32, ptr %24, align 8, !tbaa !17
  %26 = add nsw i32 %25, -1
  %27 = sext i32 %26 to i64
  %28 = shl nsw i64 %27, 3
  %29 = add nsw i64 %28, 40
  br label %58

30:                                               ; preds = %13
  %31 = getelementptr inbounds %struct.tree_string, ptr %0, i64 0, i32 1
  %32 = load i32, ptr %31, align 8, !tbaa !17
  %33 = sext i32 %32 to i64
  %34 = add nsw i64 %33, 29
  br label %58

35:                                               ; preds = %13
  %36 = getelementptr inbounds %struct.tree_omp_clause, ptr %0, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !17
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [16 x i8], ptr @omp_clause_num_ops, i64 0, i64 %38
  %40 = load i8, ptr %39, align 1, !tbaa !17
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 3
  %43 = add nuw nsw i64 %42, 56
  br label %58

44:                                               ; preds = %13
  %45 = and i64 %15, 65535
  %46 = icmp eq i64 %45, 59
  br i1 %46, label %47, label %56

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.tree_int_cst, ptr %49, i64 0, i32 1
  %51 = load i64, ptr %50, align 8, !tbaa !17
  %52 = shl i64 %51, 32
  %53 = add i64 %52, -4294967296
  %54 = ashr exact i64 %53, 29
  %55 = add nsw i64 %54, 48
  br label %58

56:                                               ; preds = %44
  %57 = tail call i64 @tree_code_size(i32 noundef %14)
  br label %58

58:                                               ; preds = %17, %23, %30, %35, %47, %56
  %59 = phi i64 [ %55, %47 ], [ %57, %56 ], [ %43, %35 ], [ %34, %30 ], [ %29, %23 ], [ %22, %17 ]
  %60 = tail call ptr @ggc_alloc_stat(i64 noundef %59) #29
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %60, ptr nonnull align 8 %0, i64 %59, i1 false)
  %61 = getelementptr inbounds %struct.tree_common, ptr %60, i64 0, i32 1
  store ptr null, ptr %61, align 8, !tbaa !17
  %62 = load i64, ptr %60, align 8
  %63 = and i64 %62, -1099515822081
  store i64 %63, ptr %60, align 8
  %64 = and i32 %6, 65533
  %65 = icmp eq i32 %64, 32
  %66 = icmp eq i32 %7, 36
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %58
  %69 = trunc i64 %62 to i16
  switch i16 %69, label %74 [
    i16 32, label %70
    i16 34, label %72
  ]

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.tree_var_decl, ptr %60, i64 0, i32 1
  br label %79

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.tree_parm_decl, ptr %60, i64 0, i32 2
  br label %79

74:                                               ; preds = %68
  %75 = and i64 %62, 65535
  %76 = icmp eq i64 %75, 36
  %77 = getelementptr inbounds %struct.tree_result_decl, ptr %60, i64 0, i32 1
  %78 = select i1 %76, ptr %77, ptr null
  br label %79

79:                                               ; preds = %72, %74, %70
  %80 = phi ptr [ %71, %70 ], [ %73, %72 ], [ %78, %74 ]
  store ptr null, ptr %80, align 8, !tbaa !6
  br label %81

81:                                               ; preds = %58, %79
  %82 = and i64 %5, 65535
  %83 = add nsw i64 %82, -29
  %84 = icmp ult i64 %83, 12
  br i1 %84, label %85, label %164

85:                                               ; preds = %81
  %86 = icmp eq i32 %7, 37
  br i1 %86, label %87, label %90

87:                                               ; preds = %85
  %88 = load i32, ptr @next_debug_decl_uid, align 4, !tbaa !21
  %89 = add nsw i32 %88, -1
  store i32 %89, ptr @next_debug_decl_uid, align 4, !tbaa !21
  br label %93

90:                                               ; preds = %85
  %91 = load i32, ptr @next_decl_uid, align 4, !tbaa !21
  %92 = add nsw i32 %91, 1
  store i32 %92, ptr @next_decl_uid, align 4, !tbaa !21
  br label %93

93:                                               ; preds = %90, %87
  %94 = phi i32 [ %89, %87 ], [ %91, %90 ]
  %95 = getelementptr inbounds %struct.tree_decl_minimal, ptr %60, i64 0, i32 2
  store i32 %94, ptr %95, align 4
  %96 = load i64, ptr %0, align 8
  %97 = trunc i64 %96 to i16
  switch i16 %97, label %125 [
    i16 34, label %98
    i16 32, label %98
  ]

98:                                               ; preds = %93, %93
  %99 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %100 = load i64, ptr %99, align 8
  %101 = and i64 %100, 67108864
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %125, label %103

103:                                              ; preds = %98
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #29
  store ptr %0, ptr %4, align 8, !tbaa !63
  %104 = load ptr, ptr @value_expr_for_decl, align 8, !tbaa !6
  %105 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %106 = tail call i32 %105(ptr noundef nonnull %0) #29
  %107 = call ptr @htab_find_with_hash(ptr noundef %104, ptr noundef nonnull %4, i32 noundef %106) #29
  %108 = icmp eq ptr %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %struct.tree_map, ptr %107, i64 0, i32 2
  %111 = load ptr, ptr %110, align 8, !tbaa !64
  br label %112

112:                                              ; preds = %103, %109
  %113 = phi ptr [ %111, %109 ], [ null, %103 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #29
  %114 = call ptr @ggc_alloc_stat(i64 noundef 24) #29
  %115 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %116 = call i32 %115(ptr noundef nonnull %60) #29
  %117 = getelementptr inbounds %struct.tree_map, ptr %114, i64 0, i32 1
  store i32 %116, ptr %117, align 8, !tbaa !39
  store ptr %60, ptr %114, align 8, !tbaa !63
  %118 = getelementptr inbounds %struct.tree_map, ptr %114, i64 0, i32 2
  store ptr %113, ptr %118, align 8, !tbaa !64
  %119 = load ptr, ptr @value_expr_for_decl, align 8, !tbaa !6
  %120 = call ptr @htab_find_slot_with_hash(ptr noundef %119, ptr noundef nonnull %114, i32 noundef %116, i32 noundef 1) #29
  store ptr %114, ptr %120, align 8, !tbaa !6
  %121 = getelementptr inbounds %struct.tree_decl_common, ptr %60, i64 0, i32 2
  %122 = load i64, ptr %121, align 8
  %123 = or i64 %122, 67108864
  store i64 %123, ptr %121, align 8
  %124 = load i64, ptr %0, align 8
  br label %125

125:                                              ; preds = %93, %112, %98
  %126 = phi i64 [ %96, %93 ], [ %124, %112 ], [ %96, %98 ]
  %127 = and i64 %126, 65535
  %128 = icmp eq i64 %127, 32
  br i1 %128, label %129, label %177

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %131 = load i32, ptr %130, align 8
  %132 = and i32 %131, 65536
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %177, label %134

134:                                              ; preds = %129
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %135 = trunc i64 %126 to i16
  switch i16 %135, label %136 [
    i16 32, label %137
    i16 29, label %137
  ]

136:                                              ; preds = %134
  call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5607, ptr noundef nonnull @.str.219) #29
  br label %137

137:                                              ; preds = %136, %134, %134
  store ptr %0, ptr %3, align 8, !tbaa !42
  %138 = load ptr, ptr @init_priority_for_decl, align 8, !tbaa !6
  %139 = call ptr @htab_find(ptr noundef %138, ptr noundef nonnull %3) #29
  %140 = icmp eq ptr %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.tree_priority_map, ptr %139, i64 0, i32 1
  %143 = load i16, ptr %142, align 8, !tbaa !65
  br label %144

144:                                              ; preds = %137, %141
  %145 = phi i16 [ %143, %141 ], [ -1, %137 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  %146 = load i64, ptr %60, align 8
  %147 = trunc i64 %146 to i16
  switch i16 %147, label %148 [
    i16 32, label %149
    i16 29, label %149
  ]

148:                                              ; preds = %144
  call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5660, ptr noundef nonnull @.str.219) #29
  br label %149

149:                                              ; preds = %148, %144, %144
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #29
  store ptr %60, ptr %2, align 8, !tbaa !67
  %150 = load ptr, ptr @init_priority_for_decl, align 8, !tbaa !6
  %151 = call ptr @htab_find_slot(ptr noundef %150, ptr noundef nonnull %2, i32 noundef 1) #29
  %152 = load ptr, ptr %151, align 8, !tbaa !6
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %158

154:                                              ; preds = %149
  %155 = call ptr @ggc_alloc_cleared_stat(i64 noundef 16) #29
  store ptr %155, ptr %151, align 8, !tbaa !6
  store ptr %60, ptr %155, align 8, !tbaa !67
  %156 = getelementptr inbounds %struct.tree_priority_map, ptr %155, i64 0, i32 1
  store i16 -1, ptr %156, align 8, !tbaa !65
  %157 = getelementptr inbounds %struct.tree_priority_map, ptr %155, i64 0, i32 2
  store i16 -1, ptr %157, align 2, !tbaa !68
  br label %158

158:                                              ; preds = %149, %154
  %159 = phi ptr [ %152, %149 ], [ %155, %154 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #29
  %160 = getelementptr inbounds %struct.tree_priority_map, ptr %159, i64 0, i32 1
  store i16 %145, ptr %160, align 8, !tbaa !65
  %161 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %60, i64 0, i32 4
  %162 = load i32, ptr %161, align 8
  %163 = or i32 %162, 65536
  store i32 %163, ptr %161, align 8
  br label %177

164:                                              ; preds = %81
  %165 = add nsw i64 %82, -5
  %166 = icmp ult i64 %165, 18
  br i1 %166, label %167, label %177

167:                                              ; preds = %164
  %168 = load i32, ptr @next_type_uid, align 4, !tbaa !21
  %169 = add nsw i32 %168, 1
  store i32 %169, ptr @next_type_uid, align 4, !tbaa !21
  %170 = getelementptr inbounds %struct.tree_type, ptr %60, i64 0, i32 5
  store i32 %168, ptr %170, align 8, !tbaa !17
  %171 = getelementptr inbounds %struct.tree_type, ptr %60, i64 0, i32 11
  store ptr null, ptr %171, align 8, !tbaa !17
  store i32 0, ptr %171, align 8, !tbaa !17
  %172 = and i64 %62, 134217728
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %167
  %175 = and i64 %62, -1099650039809
  store i64 %175, ptr %60, align 8
  %176 = getelementptr inbounds %struct.tree_type, ptr %60, i64 0, i32 1
  store ptr null, ptr %176, align 8, !tbaa !17
  br label %177

177:                                              ; preds = %164, %174, %167, %125, %129, %158
  ret ptr %60
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #13

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @decl_value_expr_insert(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @ggc_alloc_stat(i64 noundef 24) #29
  %4 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %5 = tail call i32 %4(ptr noundef %0) #29
  %6 = getelementptr inbounds %struct.tree_map, ptr %3, i64 0, i32 1
  store i32 %5, ptr %6, align 8, !tbaa !39
  store ptr %0, ptr %3, align 8, !tbaa !63
  %7 = getelementptr inbounds %struct.tree_map, ptr %3, i64 0, i32 2
  store ptr %1, ptr %7, align 8, !tbaa !64
  %8 = load ptr, ptr @value_expr_for_decl, align 8, !tbaa !6
  %9 = tail call ptr @htab_find_slot_with_hash(ptr noundef %8, ptr noundef nonnull %3, i32 noundef %5, i32 noundef 1) #29
  store ptr %3, ptr %9, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @decl_value_expr_lookup(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.tree_map, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #29
  store ptr %0, ptr %2, align 8, !tbaa !63
  %3 = load ptr, ptr @value_expr_for_decl, align 8, !tbaa !6
  %4 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %5 = tail call i32 %4(ptr noundef %0) #29
  %6 = call ptr @htab_find_with_hash(ptr noundef %3, ptr noundef nonnull %2, i32 noundef %5) #29
  %7 = icmp eq ptr %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.tree_map, ptr %6, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !64
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi ptr [ %10, %8 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #29
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @decl_init_priority_insert(ptr noundef %0, i16 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = alloca %struct.tree_priority_map, align 8
  %4 = load i64, ptr %0, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %6 [
    i16 32, label %7
    i16 29, label %7
  ]

6:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5660, ptr noundef nonnull @.str.219) #29
  br label %7

7:                                                ; preds = %2, %2, %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #29
  store ptr %0, ptr %3, align 8, !tbaa !67
  %8 = load ptr, ptr @init_priority_for_decl, align 8, !tbaa !6
  %9 = call ptr @htab_find_slot(ptr noundef %8, ptr noundef nonnull %3, i32 noundef 1) #29
  %10 = load ptr, ptr %9, align 8, !tbaa !6
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = call ptr @ggc_alloc_cleared_stat(i64 noundef 16) #29
  store ptr %13, ptr %9, align 8, !tbaa !6
  store ptr %0, ptr %13, align 8, !tbaa !67
  %14 = getelementptr inbounds %struct.tree_priority_map, ptr %13, i64 0, i32 1
  store i16 -1, ptr %14, align 8, !tbaa !65
  %15 = getelementptr inbounds %struct.tree_priority_map, ptr %13, i64 0, i32 2
  store i16 -1, ptr %15, align 2, !tbaa !68
  br label %16

16:                                               ; preds = %7, %12
  %17 = phi ptr [ %10, %7 ], [ %13, %12 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #29
  %18 = getelementptr inbounds %struct.tree_priority_map, ptr %17, i64 0, i32 1
  store i16 %1, ptr %18, align 8, !tbaa !65
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i16 @decl_init_priority_lookup(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.tree_map_base, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %5 [
    i16 32, label %6
    i16 29, label %6
  ]

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5607, ptr noundef nonnull @.str.219) #29
  br label %6

6:                                                ; preds = %1, %1, %5
  store ptr %0, ptr %2, align 8, !tbaa !42
  %7 = load ptr, ptr @init_priority_for_decl, align 8, !tbaa !6
  %8 = call ptr @htab_find(ptr noundef %7, ptr noundef nonnull %2) #29
  %9 = icmp eq ptr %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.tree_priority_map, ptr %8, i64 0, i32 1
  %12 = load i16, ptr %11, align 8, !tbaa !65
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi i16 [ %12, %10 ], [ -1, %6 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  ret i16 %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @copy_list(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = tail call ptr @copy_node_stat(ptr noundef nonnull %0)
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3, %8
  %9 = phi ptr [ %14, %8 ], [ %6, %3 ]
  %10 = phi ptr [ %11, %8 ], [ %4, %3 ]
  %11 = tail call ptr @copy_node_stat(ptr noundef nonnull %9)
  %12 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 1
  store ptr %11, ptr %12, align 8, !tbaa !17
  %13 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8, !llvm.loop !69

16:                                               ; preds = %8, %3, %1
  %17 = phi ptr [ null, %1 ], [ %4, %3 ], [ %4, %8 ]
  ret ptr %17
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_int_cst(ptr noundef %0, i64 noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %0, null
  %4 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %5 = select i1 %3, ptr %4, ptr %0
  %6 = ashr i64 %1, 63
  %7 = tail call ptr @build_int_cst_wide(ptr noundef %5, i64 noundef %1, i64 noundef %6)
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_int_cst_wide(ptr noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #9 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1123, ptr noundef nonnull @.str.219) #29
  br label %6

6:                                                ; preds = %3, %5
  %7 = load i64, ptr %0, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %41 [
    i16 10, label %9
    i16 12, label %9
    i16 7, label %12
    i16 8, label %17
    i16 5, label %17
    i16 6, label %94
  ]

9:                                                ; preds = %6, %6
  %10 = or i64 %2, %1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %46, label %94

12:                                               ; preds = %6
  %13 = icmp eq i64 %2, 0
  %14 = icmp ult i64 %1, 2
  %15 = and i1 %14, %13
  %16 = trunc i64 %1 to i32
  br i1 %15, label %42, label %94

17:                                               ; preds = %6, %6
  %18 = and i64 %7, 2097152
  %19 = icmp eq i64 %18, 0
  %20 = load ptr, ptr @compiler_params, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.param_info, ptr %20, i64 90, i32 1
  %22 = load i32, ptr %21, align 8, !tbaa !70
  br i1 %19, label %29, label %23

23:                                               ; preds = %17
  %24 = icmp eq i64 %2, 0
  %25 = sext i32 %22 to i64
  %26 = icmp ugt i64 %25, %1
  %27 = select i1 %24, i1 %26, i1 false
  %28 = trunc i64 %1 to i32
  br i1 %27, label %42, label %94

29:                                               ; preds = %17
  %30 = add nsw i32 %22, 1
  %31 = icmp eq i64 %2, 0
  %32 = sext i32 %22 to i64
  %33 = icmp ugt i64 %32, %1
  %34 = select i1 %31, i1 %33, i1 false
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = trunc i64 %1 to i32
  %37 = add i32 %36, 1
  br label %42

38:                                               ; preds = %29
  %39 = and i64 %2, %1
  %40 = icmp eq i64 %39, -1
  br i1 %40, label %46, label %94

41:                                               ; preds = %6
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1168, ptr noundef nonnull @.str.219) #29
  br label %94

42:                                               ; preds = %23, %12, %35
  %43 = phi i32 [ %37, %35 ], [ %16, %12 ], [ %28, %23 ]
  %44 = phi i32 [ %30, %35 ], [ 2, %12 ], [ %22, %23 ]
  %45 = icmp sgt i32 %43, -1
  br i1 %45, label %46, label %94

46:                                               ; preds = %38, %9, %42
  %47 = phi i32 [ %44, %42 ], [ 1, %9 ], [ %30, %38 ]
  %48 = phi i32 [ %43, %42 ], [ 0, %9 ], [ 0, %38 ]
  %49 = and i64 %7, 134217728
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  br label %65

54:                                               ; preds = %46
  %55 = or i64 %7, 134217728
  store i64 %55, ptr %0, align 8
  %56 = shl i32 %47, 3
  %57 = add i32 %56, 32
  %58 = sext i32 %57 to i64
  %59 = tail call ptr @ggc_alloc_stat(i64 noundef %58) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %59, i8 0, i64 %58, i1 false)
  %60 = load i64, ptr %59, align 8
  %61 = and i64 %60, -65536
  %62 = or i64 %61, 3
  store i64 %62, ptr %59, align 8
  %63 = getelementptr inbounds %struct.tree_vec, ptr %59, i64 0, i32 1
  store i32 %47, ptr %63, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  store ptr %59, ptr %64, align 8, !tbaa !17
  br label %65

65:                                               ; preds = %51, %54
  %66 = phi ptr [ %53, %51 ], [ %59, %54 ]
  %67 = zext i32 %48 to i64
  %68 = getelementptr inbounds %struct.tree_vec, ptr %66, i64 0, i32 2, i64 %67
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = icmp eq ptr %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.tree_common, ptr %69, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = icmp eq ptr %73, %0
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1184, ptr noundef nonnull @.str.219) #29
  br label %76

76:                                               ; preds = %71, %75
  %77 = getelementptr inbounds %struct.tree_int_cst, ptr %69, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !17
  %79 = icmp eq i64 %78, %1
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1185, ptr noundef nonnull @.str.219) #29
  br label %81

81:                                               ; preds = %76, %80
  %82 = getelementptr inbounds %struct.tree_int_cst, ptr %69, i64 0, i32 1, i32 1
  %83 = load i64, ptr %82, align 8, !tbaa !17
  %84 = icmp eq i64 %83, %2
  br i1 %84, label %106, label %85

85:                                               ; preds = %81
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1186, ptr noundef nonnull @.str.219) #29
  br label %106

86:                                               ; preds = %65
  %87 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %88 = tail call ptr @make_node_stat(i32 noundef 23)
  %89 = getelementptr inbounds %struct.tree_int_cst, ptr %88, i64 0, i32 1
  store i64 %1, ptr %89, align 8, !tbaa !17
  %90 = getelementptr inbounds %struct.tree_int_cst, ptr %88, i64 0, i32 1, i32 1
  store i64 %2, ptr %90, align 8, !tbaa !17
  %91 = getelementptr inbounds %struct.tree_common, ptr %88, i64 0, i32 2
  store ptr %0, ptr %91, align 8, !tbaa !17
  %92 = load ptr, ptr %87, align 8, !tbaa !17
  %93 = getelementptr inbounds %struct.tree_vec, ptr %92, i64 0, i32 2, i64 %67
  store ptr %88, ptr %93, align 8, !tbaa !17
  br label %106

94:                                               ; preds = %23, %38, %12, %9, %6, %41, %42
  %95 = load ptr, ptr @int_cst_node, align 8, !tbaa !6
  %96 = getelementptr inbounds %struct.tree_int_cst, ptr %95, i64 0, i32 1
  store i64 %1, ptr %96, align 8, !tbaa !17
  %97 = getelementptr inbounds %struct.tree_int_cst, ptr %95, i64 0, i32 1, i32 1
  store i64 %2, ptr %97, align 8, !tbaa !17
  %98 = getelementptr inbounds %struct.tree_common, ptr %95, i64 0, i32 2
  store ptr %0, ptr %98, align 8, !tbaa !17
  %99 = load ptr, ptr @int_cst_hash_table, align 8, !tbaa !6
  %100 = tail call ptr @htab_find_slot(ptr noundef %99, ptr noundef %95, i32 noundef 1) #29
  %101 = load ptr, ptr %100, align 8, !tbaa !6
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %94
  %104 = load ptr, ptr @int_cst_node, align 8, !tbaa !6
  store ptr %104, ptr %100, align 8, !tbaa !6
  %105 = tail call ptr @make_node_stat(i32 noundef 23)
  store ptr %105, ptr @int_cst_node, align 8, !tbaa !6
  br label %106

106:                                              ; preds = %94, %103, %85, %81, %86
  %107 = phi ptr [ %69, %81 ], [ %69, %85 ], [ %88, %86 ], [ %101, %94 ], [ %104, %103 ]
  ret ptr %107
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_int_cstu(ptr noundef %0, i64 noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @build_int_cst_wide(ptr noundef %0, i64 noundef %1, i64 noundef 0)
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_int_cst_type(ptr noundef %0, i64 noundef %1) local_unnamed_addr #9 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #29
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1066, ptr noundef nonnull @.str.219) #29
  br label %7

7:                                                ; preds = %2, %6
  %8 = ashr i64 %1, 63
  %9 = call i32 @fit_double_type(i64 noundef %1, i64 noundef %8, ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0) #29
  %10 = load i64, ptr %3, align 8, !tbaa !72
  %11 = load i64, ptr %4, align 8, !tbaa !72
  %12 = call ptr @build_int_cst_wide(ptr noundef %0, i64 noundef %10, i64 noundef %11)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  ret ptr %12
}

declare i32 @fit_double_type(i64 noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_int_cst_wide_type(ptr noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #9 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64 %1, ptr %4, align 8, !tbaa !72
  store i64 %2, ptr %5, align 8, !tbaa !72
  %6 = call i32 @fit_double_type(i64 noundef %1, i64 noundef %2, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef %0) #29
  %7 = load i64, ptr %4, align 8, !tbaa !72
  %8 = load i64, ptr %5, align 8, !tbaa !72
  %9 = call ptr @build_int_cst_wide(ptr noundef %0, i64 noundef %7, i64 noundef %8)
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @make_tree_vec_stat(i32 noundef %0) local_unnamed_addr #9 {
  %2 = shl i32 %0, 3
  %3 = add i32 %2, 32
  %4 = sext i32 %3 to i64
  %5 = tail call ptr @ggc_alloc_stat(i64 noundef %4) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %5, i8 0, i64 %4, i1 false)
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, -65536
  %8 = or i64 %7, 3
  store i64 %8, ptr %5, align 8
  %9 = getelementptr inbounds %struct.tree_vec, ptr %5, i64 0, i32 1
  store i32 %0, ptr %9, align 8, !tbaa !17
  ret ptr %5
}

declare ptr @htab_find_slot(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_low_bits_mask(ptr noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 1023
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1234, ptr noundef nonnull @.str.219) #29
  %8 = load i32, ptr %3, align 4
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i32 [ %4, %2 ], [ %8, %7 ]
  %11 = and i32 %10, 1023
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = load i64, ptr %0, align 8
  %15 = and i64 %14, 2097152
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13, %9
  %18 = icmp ult i32 %1, 65
  br i1 %18, label %19, label %23

19:                                               ; preds = %17
  %20 = sub nuw nsw i32 64, %1
  %21 = zext i32 %20 to i64
  %22 = lshr i64 -1, %21
  br label %27

23:                                               ; preds = %17
  %24 = sub i32 128, %1
  %25 = zext i32 %24 to i64
  %26 = lshr i64 -1, %25
  br label %27

27:                                               ; preds = %13, %19, %23
  %28 = phi i64 [ %22, %19 ], [ -1, %23 ], [ -1, %13 ]
  %29 = phi i64 [ 0, %19 ], [ %26, %23 ], [ -1, %13 ]
  %30 = tail call ptr @build_int_cst_wide(ptr noundef nonnull %0, i64 noundef %28, i64 noundef %29)
  ret ptr %30
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local zeroext i8 @cst_and_fits_in_hwi(ptr nocapture noundef readonly %0) local_unnamed_addr #14 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 23
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 6
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 1023
  %11 = icmp ugt i32 %10, 64
  br i1 %11, label %18, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !17
  %15 = add i64 %14, 1
  %16 = icmp ult i64 %15, 2
  %17 = zext i1 %16 to i8
  br label %18

18:                                               ; preds = %5, %1, %12
  %19 = phi i8 [ %17, %12 ], [ 0, %1 ], [ 0, %5 ]
  ret i8 %19
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_vector(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 27)
  %4 = getelementptr inbounds %struct.tree_vector, ptr %3, i64 0, i32 1
  store ptr %1, ptr %4, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %0, ptr %5, align 8, !tbaa !17
  %6 = icmp eq ptr %1, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %20, %7 ], [ 0, %2 ]
  %9 = phi ptr [ %22, %7 ], [ %1, %2 ]
  %10 = getelementptr inbounds %struct.tree_list, ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, 65535
  %14 = add nsw i64 %13, -23
  %15 = icmp ult i64 %14, 6
  %16 = trunc i64 %12 to i32
  %17 = lshr i32 %16, 27
  %18 = and i32 %17, 1
  %19 = select i1 %15, i32 %18, i32 0
  %20 = or i32 %19, %8
  %21 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %7, !llvm.loop !73

24:                                               ; preds = %7
  %25 = shl nuw nsw i32 %20, 27
  %26 = and i32 %25, 134217728
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %24, %2
  %29 = phi i64 [ 0, %2 ], [ %27, %24 ]
  %30 = load i64, ptr %3, align 8
  %31 = and i64 %30, -134217729
  %32 = or i64 %31, %29
  store i64 %32, ptr %3, align 8
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_vector_from_ctor(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = load i32, ptr %1, align 8, !tbaa !74
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %4, %7
  %8 = phi i64 [ %17, %7 ], [ 0, %4 ]
  %9 = phi ptr [ %12, %7 ], [ null, %4 ]
  %10 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %1, i64 0, i32 2, i64 %8, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !76
  %12 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %13 = getelementptr inbounds i8, ptr %12, i64 16
  store i64 0, ptr %13, align 8
  store i64 2, ptr %12, align 8
  %14 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 1
  store ptr %9, ptr %14, align 8, !tbaa !17
  %15 = getelementptr inbounds %struct.tree_list, ptr %12, i64 0, i32 1
  store ptr null, ptr %15, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.tree_list, ptr %12, i64 0, i32 2
  store ptr %11, ptr %16, align 8, !tbaa !17
  %17 = add nuw nsw i64 %8, 1
  %18 = load i32, ptr %1, align 8, !tbaa !74
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %7, label %21, !llvm.loop !78

21:                                               ; preds = %7, %21
  %22 = phi ptr [ %23, %21 ], [ null, %7 ]
  %23 = phi ptr [ %25, %21 ], [ %12, %7 ]
  %24 = getelementptr inbounds %struct.tree_common, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  store ptr %22, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %21, !llvm.loop !79

27:                                               ; preds = %21, %4, %2
  %28 = phi ptr [ null, %2 ], [ null, %4 ], [ %23, %21 ]
  %29 = tail call ptr @make_node_stat(i32 noundef 27)
  %30 = getelementptr inbounds %struct.tree_vector, ptr %29, i64 0, i32 1
  store ptr %28, ptr %30, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.tree_common, ptr %29, i64 0, i32 2
  store ptr %0, ptr %31, align 8, !tbaa !17
  %32 = icmp eq ptr %28, null
  br i1 %32, label %54, label %33

33:                                               ; preds = %27, %33
  %34 = phi i32 [ %46, %33 ], [ 0, %27 ]
  %35 = phi ptr [ %48, %33 ], [ %28, %27 ]
  %36 = getelementptr inbounds %struct.tree_list, ptr %35, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = load i64, ptr %37, align 8
  %39 = and i64 %38, 65535
  %40 = add nsw i64 %39, -23
  %41 = icmp ult i64 %40, 6
  %42 = trunc i64 %38 to i32
  %43 = lshr i32 %42, 27
  %44 = and i32 %43, 1
  %45 = select i1 %41, i32 %44, i32 0
  %46 = or i32 %45, %34
  %47 = getelementptr inbounds %struct.tree_common, ptr %35, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %33, !llvm.loop !73

50:                                               ; preds = %33
  %51 = shl nuw nsw i32 %46, 27
  %52 = and i32 %51, 134217728
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %27, %50
  %55 = phi i64 [ 0, %27 ], [ %53, %50 ]
  %56 = load i64, ptr %29, align 8
  %57 = and i64 %56, -134217729
  %58 = or i64 %57, %55
  store i64 %58, ptr %29, align 8
  ret ptr %29
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @tree_cons_stat(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %5 = getelementptr inbounds i8, ptr %4, i64 16
  store i64 0, ptr %5, align 8
  store i64 2, ptr %4, align 8
  %6 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 1
  store ptr %2, ptr %6, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_list, ptr %4, i64 0, i32 1
  store ptr %0, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_list, ptr %4, i64 0, i32 2
  store ptr %1, ptr %8, align 8, !tbaa !17
  ret ptr %4
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @nreverse(ptr noundef %0) local_unnamed_addr #15 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1, %3
  %4 = phi ptr [ %5, %3 ], [ null, %1 ]
  %5 = phi ptr [ %7, %3 ], [ %0, %1 ]
  %6 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  store ptr %4, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %3, !llvm.loop !79

9:                                                ; preds = %3, %1
  %10 = phi ptr [ null, %1 ], [ %5, %3 ]
  ret ptr %10
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_constructor(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 51)
  %4 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %0, ptr %4, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_constructor, ptr %3, i64 0, i32 1
  store ptr %1, ptr %5, align 8, !tbaa !17
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_constructor_single(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 16) #29
  %5 = load i32, ptr %4, align 8, !tbaa !74
  %6 = add i32 %5, 1
  store i32 %6, ptr %4, align 8, !tbaa !74
  %7 = zext i32 %5 to i64
  %8 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %4, i64 0, i32 2, i64 %7
  store ptr %1, ptr %8, align 8, !tbaa !80
  %9 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %4, i64 0, i32 2, i64 %7, i32 1
  store ptr %2, ptr %9, align 8, !tbaa !76
  %10 = tail call ptr @make_node_stat(i32 noundef 51)
  %11 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 2
  store ptr %0, ptr %11, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.tree_constructor, ptr %10, i64 0, i32 1
  store ptr %4, ptr %12, align 8, !tbaa !17
  %13 = load i64, ptr %2, align 8
  %14 = and i64 %13, 131072
  %15 = load i64, ptr %10, align 8
  %16 = and i64 %15, -131073
  %17 = or i64 %16, %14
  store i64 %17, ptr %10, align 8
  ret ptr %10
}

declare ptr @vec_gc_o_reserve_exact(ptr noundef, i32 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_constructor_from_list(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %9, %4 ], [ 0, %2 ]
  %6 = phi ptr [ %8, %4 ], [ %1, %2 ]
  %7 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = add nuw nsw i32 %5, 1
  %10 = icmp eq ptr %8, null
  br i1 %10, label %11, label %4, !llvm.loop !81

11:                                               ; preds = %4
  %12 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef %9, i64 noundef 8, i64 noundef 16) #29
  %13 = load i32, ptr %12, align 8, !tbaa !74
  br label %14

14:                                               ; preds = %11, %14
  %15 = phi ptr [ %1, %11 ], [ %29, %14 ]
  %16 = phi i8 [ 1, %11 ], [ %27, %14 ]
  %17 = phi i32 [ %13, %11 ], [ %18, %14 ]
  %18 = add i32 %17, 1
  store i32 %18, ptr %12, align 8, !tbaa !74
  %19 = zext i32 %17 to i64
  %20 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %12, i64 0, i32 2, i64 %19
  %21 = getelementptr inbounds %struct.tree_list, ptr %15, i64 0, i32 1
  %22 = load <2 x ptr>, ptr %21, align 8, !tbaa !17
  store <2 x ptr> %22, ptr %20, align 8, !tbaa !6
  %23 = extractelement <2 x ptr> %22, i64 1
  %24 = load i64, ptr %23, align 8
  %25 = and i64 %24, 131072
  %26 = icmp eq i64 %25, 0
  %27 = select i1 %26, i8 0, i8 %16
  %28 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %14, !llvm.loop !82

31:                                               ; preds = %14
  %32 = and i8 %27, 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 17
  br label %35

35:                                               ; preds = %31, %2
  %36 = phi ptr [ null, %2 ], [ %12, %31 ]
  %37 = phi i64 [ 131072, %2 ], [ %34, %31 ]
  %38 = tail call ptr @make_node_stat(i32 noundef 51)
  %39 = getelementptr inbounds %struct.tree_common, ptr %38, i64 0, i32 2
  store ptr %0, ptr %39, align 8, !tbaa !17
  %40 = getelementptr inbounds %struct.tree_constructor, ptr %38, i64 0, i32 1
  store ptr %36, ptr %40, align 8, !tbaa !17
  %41 = load i64, ptr %38, align 8
  %42 = and i64 %41, -131073
  %43 = or i64 %42, %37
  store i64 %43, ptr %38, align 8
  ret ptr %38
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @list_length(ptr noundef readonly %0) local_unnamed_addr #16 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1, %3
  %4 = phi i32 [ %8, %3 ], [ 0, %1 ]
  %5 = phi ptr [ %7, %3 ], [ %0, %1 ]
  %6 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = add nuw nsw i32 %4, 1
  %9 = icmp eq ptr %7, null
  br i1 %9, label %10, label %3, !llvm.loop !81

10:                                               ; preds = %3, %1
  %11 = phi i32 [ 0, %1 ], [ %8, %3 ]
  ret i32 %11
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_fixed(ptr noundef %0, ptr nocapture noundef readonly byval(%struct.fixed_value) align 8 %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 25)
  %4 = tail call ptr @ggc_alloc_stat(i64 noundef 24) #29
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %5 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %0, ptr %5, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.tree_fixed_cst, ptr %3, i64 0, i32 1
  store ptr %4, ptr %6, align 8, !tbaa !17
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_real(ptr noundef %0, ptr nocapture noundef readonly byval(%struct.real_value) align 8 %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 24)
  %4 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #29
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false)
  %5 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %0, ptr %5, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.tree_real_cst, ptr %3, i64 0, i32 1
  store ptr %4, ptr %6, align 8, !tbaa !17
  %7 = load i64, ptr %3, align 8
  %8 = and i64 %7, -134217729
  store i64 %8, ptr %3, align 8
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @real_value_from_int_cst(ptr noalias sret(%struct.real_value) align 8 %0, ptr noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #9 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, i8 0, i64 32, i1 false)
  %4 = icmp eq ptr %1, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = load i64, ptr %1, align 8
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 14
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #29
  br label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %13 = load i32, ptr %12, align 4
  %14 = lshr i32 %13, 16
  %15 = and i32 %14, 255
  br label %16

16:                                               ; preds = %3, %9, %11
  %17 = phi i32 [ %10, %9 ], [ %15, %11 ], [ 0, %3 ]
  %18 = getelementptr inbounds %struct.tree_int_cst, ptr %2, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.tree_int_cst, ptr %2, i64 0, i32 1, i32 1
  %21 = load i64, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = load i64, ptr %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = lshr i32 %25, 21
  %27 = and i32 %26, 1
  tail call void @real_from_integer(ptr noundef nonnull %0, i32 noundef %17, i64 noundef %19, i64 noundef %21, i32 noundef %27) #29
  ret void
}

declare void @real_from_integer(ptr noundef, i32 noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_real_from_int_cst(ptr noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = alloca %struct.real_value, align 8
  %4 = alloca %struct.real_value, align 8
  %5 = load i64, ptr %1, align 8
  tail call void @llvm.experimental.noalias.scope.decl(metadata !83)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %4, i8 0, i64 32, i1 false), !alias.scope !83
  %6 = icmp eq ptr %0, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = load i64, ptr %0, align 8, !noalias !83
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 14
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29, !noalias !83
  br label %18

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %15 = load i32, ptr %14, align 4, !noalias !83
  %16 = lshr i32 %15, 16
  %17 = and i32 %16, 255
  br label %18

18:                                               ; preds = %2, %11, %13
  %19 = phi i32 [ %12, %11 ], [ %17, %13 ], [ 0, %2 ]
  %20 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %21 = load i64, ptr %20, align 8, !tbaa !17, !noalias !83
  %22 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %23 = load i64, ptr %22, align 8, !tbaa !17, !noalias !83
  %24 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !17, !noalias !83
  %26 = load i64, ptr %25, align 8, !noalias !83
  %27 = trunc i64 %26 to i32
  %28 = lshr i32 %27, 21
  %29 = and i32 %28, 1
  call void @real_from_integer(ptr noundef nonnull %4, i32 noundef %19, i64 noundef %21, i64 noundef %23, i32 noundef %29) #29
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(32) %4, i64 32, i1 false)
  %30 = call ptr @make_node_stat(i32 noundef 24)
  %31 = call ptr @ggc_alloc_stat(i64 noundef 32) #29
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %31, ptr noundef nonnull align 8 dereferenceable(32) %3, i64 32, i1 false)
  %32 = getelementptr inbounds %struct.tree_common, ptr %30, i64 0, i32 2
  store ptr %0, ptr %32, align 8, !tbaa !17
  %33 = getelementptr inbounds %struct.tree_real_cst, ptr %30, i64 0, i32 1
  store ptr %31, ptr %33, align 8, !tbaa !17
  %34 = load i64, ptr %30, align 8
  %35 = and i64 %34, -134217729
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  %36 = and i64 %5, 134217728
  %37 = or i64 %35, %36
  store i64 %37, ptr %30, align 8
  ret ptr %30
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_string(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = sext i32 %0 to i64
  %4 = add nsw i64 %3, 29
  %5 = tail call ptr @ggc_alloc_stat(i64 noundef %4) #29
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 16, i1 false)
  store i64 131100, ptr %5, align 8
  %7 = getelementptr inbounds %struct.tree_string, ptr %5, i64 0, i32 1
  store i32 %0, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_string, ptr %5, i64 0, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %8, ptr align 1 %1, i64 %3, i1 false)
  %9 = getelementptr inbounds %struct.tree_string, ptr %5, i64 0, i32 2, i64 %3
  store i8 0, ptr %9, align 1, !tbaa !17
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_complex(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = tail call ptr @make_node_stat(i32 noundef 26)
  %5 = getelementptr inbounds %struct.tree_complex, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.tree_complex, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8, !tbaa !17
  %7 = icmp eq ptr %0, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = tail call ptr @build_complex_type(ptr noundef %10)
  br label %12

12:                                               ; preds = %3, %8
  %13 = phi ptr [ %11, %8 ], [ %0, %3 ]
  %14 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  store ptr %13, ptr %14, align 8, !tbaa !17
  %15 = load i64, ptr %1, align 8
  %16 = load i64, ptr %2, align 8
  %17 = or i64 %16, %15
  %18 = and i64 %17, 134217728
  %19 = load i64, ptr %4, align 8
  %20 = and i64 %19, -134217729
  %21 = or i64 %20, %18
  store i64 %21, ptr %4, align 8
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_complex_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %4 [
    i16 6, label %5
    i16 7, label %5
    i16 8, label %5
    i16 9, label %5
    i16 11, label %5
  ]

4:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 7457, ptr noundef nonnull @.str.219) #29
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %4
  %6 = tail call ptr @make_node_stat(i32 noundef 13)
  %7 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  store ptr %8, ptr %9, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 5
  %11 = tail call i32 @iterative_hash(ptr noundef nonnull %10, i64 noundef 4, i32 noundef 0) #29
  %12 = tail call ptr @type_hash_canon(i32 noundef %11, ptr noundef %6)
  %13 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %5
  tail call void @layout_type(ptr noundef nonnull %12) #29
  br label %17

17:                                               ; preds = %16, %5
  %18 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 19
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, %12
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = icmp eq ptr %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = icmp eq ptr %23, %0
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = tail call ptr @build_complex_type(ptr noundef nonnull %23)
  br label %29

29:                                               ; preds = %21, %27
  %30 = phi ptr [ %28, %27 ], [ null, %21 ]
  store ptr %30, ptr %18, align 8, !tbaa !17
  br label %31

31:                                               ; preds = %29, %25, %17
  %32 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 12
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %37 = icmp eq ptr %36, %0
  br i1 %37, label %68, label %38

38:                                               ; preds = %35
  %39 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  %40 = icmp eq ptr %39, %0
  br i1 %40, label %68, label %41

41:                                               ; preds = %38
  %42 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16, !tbaa !6
  %43 = icmp eq ptr %42, %0
  br i1 %43, label %68, label %44

44:                                               ; preds = %41
  %45 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8, !tbaa !6
  %46 = icmp eq ptr %45, %0
  br i1 %46, label %68, label %47

47:                                               ; preds = %44
  %48 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16, !tbaa !6
  %49 = icmp eq ptr %48, %0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %52 = icmp eq ptr %51, %0
  br i1 %52, label %68, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !6
  %55 = icmp eq ptr %54, %0
  br i1 %55, label %68, label %56

56:                                               ; preds = %53
  %57 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  %58 = icmp eq ptr %57, %0
  br i1 %58, label %68, label %59

59:                                               ; preds = %56
  %60 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16, !tbaa !6
  %61 = icmp eq ptr %60, %0
  br i1 %61, label %68, label %62

62:                                               ; preds = %59
  %63 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %64 = icmp eq ptr %63, %0
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16, !tbaa !6
  %67 = icmp eq ptr %66, %0
  br i1 %67, label %68, label %75

68:                                               ; preds = %62, %59, %56, %53, %50, %47, %44, %41, %38, %35, %65
  %69 = phi ptr [ @.str.237, %65 ], [ @.str.236, %62 ], [ @.str.235, %59 ], [ @.str.234, %56 ], [ @.str.233, %53 ], [ @.str.232, %50 ], [ @.str.231, %47 ], [ @.str.230, %44 ], [ @.str.229, %41 ], [ @.str.228, %38 ], [ @.str.227, %35 ]
  %70 = tail call ptr @get_identifier(ptr noundef nonnull %69) #29
  %71 = tail call ptr @make_node_stat(i32 noundef 35)
  %72 = getelementptr inbounds %struct.tree_decl_minimal, ptr %71, i64 0, i32 1
  store i32 0, ptr %72, align 8, !tbaa !17
  %73 = getelementptr inbounds %struct.tree_decl_minimal, ptr %71, i64 0, i32 3
  store ptr %70, ptr %73, align 8, !tbaa !17
  %74 = getelementptr inbounds %struct.tree_common, ptr %71, i64 0, i32 2
  store ptr %12, ptr %74, align 8, !tbaa !17
  store ptr %71, ptr %32, align 8, !tbaa !17
  br label %75

75:                                               ; preds = %65, %68, %31
  %76 = load i64, ptr %0, align 8
  %77 = trunc i64 %76 to i32
  %78 = lshr i32 %77, 20
  %79 = and i32 %78, 1
  %80 = lshr i32 %77, 18
  %81 = and i32 %80, 2
  %82 = or i32 %79, %81
  %83 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %84 = load i32, ptr %83, align 4
  %85 = lshr i32 %84, 11
  %86 = and i32 %85, 4
  %87 = or i32 %82, %86
  %88 = lshr i64 %76, 48
  %89 = trunc i64 %88 to i32
  %90 = and i32 %89, 65280
  %91 = or i32 %87, %90
  %92 = tail call ptr @build_qualified_type(ptr noundef nonnull %12, i32 noundef %91)
  ret ptr %92
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_one_cst(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.fixed_value, align 8
  %3 = alloca %struct.real_value, align 8
  %4 = load i64, ptr %0, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %128 [
    i16 8, label %6
    i16 6, label %6
    i16 7, label %6
    i16 10, label %6
    i16 12, label %6
    i16 5, label %6
    i16 9, label %8
    i16 11, label %15
    i16 14, label %55
    i16 13, label %110
  ]

6:                                                ; preds = %1, %1, %1, %1, %1, %1
  %7 = tail call ptr @build_int_cst_wide(ptr noundef nonnull %0, i64 noundef 1, i64 noundef 0)
  br label %108

8:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(32) @dconst1, i64 32, i1 false)
  %9 = tail call ptr @make_node_stat(i32 noundef 24)
  %10 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #29
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(32) %3, i64 32, i1 false)
  %11 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 2
  store ptr %0, ptr %11, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.tree_real_cst, ptr %9, i64 0, i32 1
  store ptr %10, ptr %12, align 8, !tbaa !17
  %13 = load i64, ptr %9, align 8
  %14 = and i64 %13, -134217729
  store i64 %14, ptr %9, align 8
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  br label %108

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %17 = load i32, ptr %16, align 4
  %18 = lshr i32 %17, 16
  %19 = and i32 %18, 255
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %20
  %22 = load i8, ptr %21, align 1, !tbaa !17
  %23 = icmp eq i8 %22, 6
  br i1 %23, label %36, label %24

24:                                               ; preds = %15
  %25 = and i64 %4, 65535
  %26 = icmp eq i64 %25, 14
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !17
  br label %32

32:                                               ; preds = %24, %27
  %33 = phi i8 [ %22, %24 ], [ %31, %27 ]
  %34 = icmp eq i8 %33, 7
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1514, ptr noundef nonnull @.str.219) #29
  br label %36

36:                                               ; preds = %15, %32, %35
  %37 = load i64, ptr %0, align 8
  %38 = and i64 %37, 65535
  %39 = icmp eq i64 %38, 14
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29
  br label %46

42:                                               ; preds = %36
  %43 = load i32, ptr %16, align 4
  %44 = lshr i32 %43, 16
  %45 = and i32 %44, 255
  br label %46

46:                                               ; preds = %42, %40
  %47 = phi i32 [ %41, %40 ], [ %45, %42 ]
  %48 = add i32 %47, -30
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [8 x %struct.fixed_value], ptr @fconst1, i64 0, i64 %49
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %50, i64 24, i1 false)
  %51 = tail call ptr @make_node_stat(i32 noundef 25)
  %52 = tail call ptr @ggc_alloc_stat(i64 noundef 24) #29
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %52, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  %53 = getelementptr inbounds %struct.tree_common, ptr %51, i64 0, i32 2
  store ptr %0, ptr %53, align 8, !tbaa !17
  %54 = getelementptr inbounds %struct.tree_fixed_cst, ptr %51, i64 0, i32 1
  store ptr %52, ptr %54, align 8, !tbaa !17
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2)
  br label %108

55:                                               ; preds = %1
  %56 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = tail call ptr @build_one_cst(ptr noundef %57)
  %59 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %60 = load i32, ptr %59, align 4
  %61 = and i32 %60, 1023
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 1, %62
  %64 = trunc i64 %63 to i32
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %55, %66
  %67 = phi i32 [ %69, %66 ], [ %64, %55 ]
  %68 = phi ptr [ %70, %66 ], [ null, %55 ]
  %69 = add nsw i32 %67, -1
  %70 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %71 = getelementptr inbounds i8, ptr %70, i64 16
  store i64 0, ptr %71, align 8
  store i64 2, ptr %70, align 8
  %72 = getelementptr inbounds %struct.tree_common, ptr %70, i64 0, i32 1
  store ptr %68, ptr %72, align 8, !tbaa !17
  %73 = getelementptr inbounds %struct.tree_list, ptr %70, i64 0, i32 1
  store ptr null, ptr %73, align 8, !tbaa !17
  %74 = getelementptr inbounds %struct.tree_list, ptr %70, i64 0, i32 2
  store ptr %58, ptr %74, align 8, !tbaa !17
  %75 = icmp ugt i32 %67, 1
  br i1 %75, label %66, label %76, !llvm.loop !86

76:                                               ; preds = %66, %55
  %77 = phi ptr [ null, %55 ], [ %70, %66 ]
  %78 = tail call ptr @make_node_stat(i32 noundef 27)
  %79 = getelementptr inbounds %struct.tree_vector, ptr %78, i64 0, i32 1
  store ptr %77, ptr %79, align 8, !tbaa !17
  %80 = getelementptr inbounds %struct.tree_common, ptr %78, i64 0, i32 2
  store ptr %0, ptr %80, align 8, !tbaa !17
  %81 = icmp eq ptr %77, null
  br i1 %81, label %103, label %82

82:                                               ; preds = %76, %82
  %83 = phi i32 [ %95, %82 ], [ 0, %76 ]
  %84 = phi ptr [ %97, %82 ], [ %77, %76 ]
  %85 = getelementptr inbounds %struct.tree_list, ptr %84, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = load i64, ptr %86, align 8
  %88 = and i64 %87, 65535
  %89 = add nsw i64 %88, -23
  %90 = icmp ult i64 %89, 6
  %91 = trunc i64 %87 to i32
  %92 = lshr i32 %91, 27
  %93 = and i32 %92, 1
  %94 = select i1 %90, i32 %93, i32 0
  %95 = or i32 %94, %83
  %96 = getelementptr inbounds %struct.tree_common, ptr %84, i64 0, i32 1
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  %98 = icmp eq ptr %97, null
  br i1 %98, label %99, label %82, !llvm.loop !73

99:                                               ; preds = %82
  %100 = shl nuw nsw i32 %95, 27
  %101 = and i32 %100, 134217728
  %102 = zext i32 %101 to i64
  br label %103

103:                                              ; preds = %76, %99
  %104 = phi i64 [ 0, %76 ], [ %102, %99 ]
  %105 = load i64, ptr %78, align 8
  %106 = and i64 %105, -134217729
  %107 = or i64 %106, %104
  store i64 %107, ptr %78, align 8
  br label %108

108:                                              ; preds = %128, %103, %46, %8, %6, %110
  %109 = phi ptr [ %117, %110 ], [ null, %128 ], [ %78, %103 ], [ %51, %46 ], [ %9, %8 ], [ %7, %6 ]
  ret ptr %109

110:                                              ; preds = %1
  %111 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %112 = load ptr, ptr %111, align 8, !tbaa !17
  %113 = tail call ptr @build_one_cst(ptr noundef %112)
  %114 = load ptr, ptr %111, align 8, !tbaa !17
  %115 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !6
  %116 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef %114, ptr noundef %115) #29
  %117 = tail call ptr @make_node_stat(i32 noundef 26)
  %118 = getelementptr inbounds %struct.tree_complex, ptr %117, i64 0, i32 1
  store ptr %113, ptr %118, align 8, !tbaa !17
  %119 = getelementptr inbounds %struct.tree_complex, ptr %117, i64 0, i32 2
  store ptr %116, ptr %119, align 8, !tbaa !17
  %120 = getelementptr inbounds %struct.tree_common, ptr %117, i64 0, i32 2
  store ptr %0, ptr %120, align 8, !tbaa !17
  %121 = load i64, ptr %113, align 8
  %122 = load i64, ptr %116, align 8
  %123 = or i64 %122, %121
  %124 = and i64 %123, 134217728
  %125 = load i64, ptr %117, align 8
  %126 = and i64 %125, -134217729
  %127 = or i64 %126, %124
  store i64 %127, ptr %117, align 8
  br label %108

128:                                              ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1538, ptr noundef nonnull @.str.219) #29
  br label %108
}

declare ptr @fold_convert_loc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @make_tree_binfo_stat(i32 noundef %0) local_unnamed_addr #9 {
  %2 = sext i32 %0 to i64
  %3 = shl nsw i64 %2, 3
  %4 = add nsw i64 %3, 96
  %5 = tail call ptr @ggc_alloc_stat(i64 noundef %4) #29
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %6, i8 0, i64 80, i1 false)
  store i64 149, ptr %5, align 8
  %7 = getelementptr inbounds %struct.tree_binfo, ptr %5, i64 0, i32 9
  store i32 0, ptr %7, align 8, !tbaa !61
  %8 = getelementptr inbounds %struct.tree_binfo, ptr %5, i64 0, i32 9, i32 0, i32 1
  store i32 %0, ptr %8, align 4, !tbaa !87
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @integer_zerop(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %78, %1
  %3 = phi ptr [ %0, %1 ], [ %79, %78 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %58 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %58, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %78, label %58

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %58

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %78

58:                                               ; preds = %2, %6, %21, %54
  %59 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %60 = trunc i64 %59 to i16
  switch i16 %60, label %80 [
    i16 23, label %61
    i16 26, label %70
  ]

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !17
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %67 = load i64, ptr %66, align 8, !tbaa !17
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %65, %61
  br label %80

70:                                               ; preds = %58
  %71 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = tail call i32 @integer_zerop(ptr noundef %72), !range !37
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  br label %78

78:                                               ; preds = %75, %56, %21
  %79 = phi ptr [ %77, %75 ], [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

80:                                               ; preds = %58, %70, %69, %65
  %81 = phi i32 [ 1, %65 ], [ 0, %69 ], [ 0, %70 ], [ 0, %58 ]
  ret i32 %81
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @tree_strip_nop_conversions(ptr noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %54, %1
  %3 = phi ptr [ %0, %1 ], [ %55, %54 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %56 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %56, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %54, label %56

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %44, %46
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %21, %51
  %55 = load ptr, ptr %7, align 8, !tbaa !17
  br label %2, !llvm.loop !88

56:                                               ; preds = %21, %6, %2, %51
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @integer_onep(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = trunc i64 %61 to i16
  switch i16 %62, label %81 [
    i16 23, label %63
    i16 26, label %72
  ]

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %65 = load i64, ptr %64, align 8, !tbaa !17
  %66 = icmp eq i64 %65, 1
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !17
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %67, %63
  br label %81

72:                                               ; preds = %60
  %73 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  %75 = tail call i32 @integer_onep(ptr noundef %74), !range !37
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = tail call i32 @integer_zerop(ptr noundef %79), !range !37
  br label %81

81:                                               ; preds = %60, %71, %72, %77, %67
  %82 = phi i32 [ 1, %67 ], [ 0, %72 ], [ %80, %77 ], [ 0, %71 ], [ 0, %60 ]
  ret i32 %82
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @integer_all_onesp(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = and i64 %61, 65535
  %63 = icmp eq i64 %62, 26
  br i1 %63, label %64, label %74

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = tail call i32 @integer_all_onesp(ptr noundef %66), !range !37
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = tail call i32 @integer_zerop(ptr noundef %71), !range !37
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %132

74:                                               ; preds = %69, %64, %60
  %75 = load i64, ptr %3, align 8
  %76 = and i64 %75, 65535
  %77 = icmp eq i64 %76, 23
  br i1 %77, label %78, label %132

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = load i64, ptr %80, align 8
  %82 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %83 = load i64, ptr %82, align 8, !tbaa !17
  %84 = icmp eq i64 %83, -1
  br i1 %84, label %85, label %89

85:                                               ; preds = %78
  %86 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %87 = load i64, ptr %86, align 8, !tbaa !17
  %88 = icmp eq i64 %87, -1
  br i1 %88, label %132, label %89

89:                                               ; preds = %85, %78
  %90 = and i64 %81, 2097152
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %132, label %92

92:                                               ; preds = %89
  %93 = and i64 %81, 65535
  %94 = icmp eq i64 %93, 14
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = tail call i32 @vector_type_mode(ptr noundef nonnull %80) #29
  br label %102

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.tree_type, ptr %80, i64 0, i32 6
  %99 = load i32, ptr %98, align 4
  %100 = lshr i32 %99, 16
  %101 = and i32 %100, 255
  br label %102

102:                                              ; preds = %97, %95
  %103 = phi i32 [ %96, %95 ], [ %101, %97 ]
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !17
  %107 = zext i8 %106 to i32
  %108 = shl nuw nsw i32 %107, 3
  %109 = icmp ugt i8 %106, 7
  br i1 %109, label %110, label %126

110:                                              ; preds = %102
  %111 = add nsw i32 %108, -64
  %112 = icmp ult i8 %106, 17
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 1663, ptr noundef nonnull @.str.219) #29
  br label %114

114:                                              ; preds = %110, %113
  %115 = load i64, ptr %82, align 8, !tbaa !17
  %116 = icmp eq i64 %115, -1
  br i1 %116, label %117, label %132

117:                                              ; preds = %114
  %118 = icmp eq i32 %111, 64
  %119 = zext i32 %111 to i64
  %120 = shl nsw i64 -1, %119
  %121 = xor i64 %120, -1
  %122 = select i1 %118, i64 -1, i64 %121
  %123 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %124 = load i64, ptr %123, align 8, !tbaa !17
  %125 = icmp eq i64 %124, %122
  br label %132

126:                                              ; preds = %102
  %127 = load i64, ptr %82, align 8, !tbaa !17
  %128 = zext i32 %108 to i64
  %129 = shl nsw i64 -1, %128
  %130 = xor i64 %129, -1
  %131 = icmp eq i64 %127, %130
  br label %132

132:                                              ; preds = %114, %117, %89, %85, %74, %69, %126
  %133 = phi i1 [ %131, %126 ], [ true, %69 ], [ false, %74 ], [ true, %85 ], [ false, %89 ], [ false, %114 ], [ %125, %117 ]
  %134 = zext i1 %133 to i32
  ret i32 %134
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @integer_pow2p(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = and i64 %61, 65535
  %63 = icmp eq i64 %62, 26
  br i1 %63, label %64, label %74

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = tail call i32 @integer_pow2p(ptr noundef %66), !range !37
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = tail call i32 @integer_zerop(ptr noundef %71), !range !37
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %120

74:                                               ; preds = %69, %64, %60
  %75 = load i64, ptr %3, align 8
  %76 = and i64 %75, 65535
  %77 = icmp eq i64 %76, 23
  br i1 %77, label %78, label %120

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = getelementptr inbounds %struct.tree_type, ptr %80, i64 0, i32 6
  %82 = load i32, ptr %81, align 4
  %83 = and i32 %82, 1023
  %84 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %85 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %86 = load i64, ptr %85, align 8, !tbaa !17
  %87 = load i64, ptr %84, align 8, !tbaa !17
  %88 = icmp eq i32 %83, 128
  br i1 %88, label %104, label %89

89:                                               ; preds = %78
  %90 = icmp ugt i32 %83, 64
  br i1 %90, label %91, label %97

91:                                               ; preds = %89
  %92 = add nsw i32 %83, -64
  %93 = zext i32 %92 to i64
  %94 = shl nsw i64 -1, %93
  %95 = xor i64 %94, -1
  %96 = and i64 %86, %95
  br label %104

97:                                               ; preds = %89
  %98 = icmp eq i32 %83, 64
  br i1 %98, label %104, label %99

99:                                               ; preds = %97
  %100 = zext i32 %83 to i64
  %101 = shl nsw i64 -1, %100
  %102 = xor i64 %101, -1
  %103 = and i64 %87, %102
  br label %104

104:                                              ; preds = %91, %99, %97, %78
  %105 = phi i64 [ %86, %78 ], [ %96, %91 ], [ 0, %99 ], [ 0, %97 ]
  %106 = phi i64 [ %87, %78 ], [ %87, %91 ], [ %103, %99 ], [ %87, %97 ]
  %107 = icmp eq i64 %105, 0
  %108 = icmp eq i64 %106, 0
  %109 = select i1 %107, i1 %108, i1 false
  br i1 %109, label %120, label %110

110:                                              ; preds = %104
  %111 = tail call i64 @llvm.ctpop.i64(i64 %106), !range !89
  %112 = icmp ult i64 %111, 2
  %113 = select i1 %107, i1 %112, i1 false
  %114 = xor i1 %108, true
  %115 = select i1 %113, i1 true, i1 %114
  %116 = tail call i64 @llvm.ctpop.i64(i64 %105), !range !89
  %117 = icmp ult i64 %116, 2
  %118 = select i1 %115, i1 %113, i1 %117
  %119 = zext i1 %118 to i32
  br label %120

120:                                              ; preds = %104, %74, %69, %110
  %121 = phi i32 [ %119, %110 ], [ 1, %69 ], [ 0, %74 ], [ 0, %104 ]
  ret i32 %121
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @integer_nonzerop(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %78, %1
  %3 = phi ptr [ %0, %1 ], [ %79, %78 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %58 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %58, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %78, label %58

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %58

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %78

58:                                               ; preds = %2, %6, %21, %54
  %59 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %60 = trunc i64 %59 to i16
  switch i16 %60, label %80 [
    i16 23, label %61
    i16 26, label %70
  ]

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !17
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %80

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %67 = load i64, ptr %66, align 8, !tbaa !17
  %68 = icmp ne i64 %67, 0
  %69 = zext i1 %68 to i32
  br label %80

70:                                               ; preds = %58
  %71 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = tail call i32 @integer_nonzerop(ptr noundef %72), !range !37
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  br label %78

78:                                               ; preds = %75, %56, %21
  %79 = phi ptr [ %77, %75 ], [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

80:                                               ; preds = %58, %70, %65, %61
  %81 = phi i32 [ 1, %61 ], [ %69, %65 ], [ 0, %58 ], [ 1, %70 ]
  ret i32 %81
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @fixed_zerop(ptr nocapture noundef readonly %0) local_unnamed_addr #14 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 25
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_fixed_cst, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, ptr %7, i64 0, i32 1
  %10 = load i64, ptr %9, align 8
  %11 = icmp eq i64 %8, 0
  %12 = icmp eq i64 %10, 0
  %13 = select i1 %11, i1 %12, i1 false
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %5, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %5 ]
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_log2(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %65, %1
  %3 = phi ptr [ %0, %1 ], [ %66, %65 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %58 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %58, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %65, label %58

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %58

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %65

58:                                               ; preds = %2, %6, %21, %54
  %59 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %60 = and i64 %59, 65535
  %61 = icmp eq i64 %60, 26
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  br label %65

65:                                               ; preds = %62, %56, %21
  %66 = phi ptr [ %64, %62 ], [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 6
  %71 = load i32, ptr %70, align 4
  %72 = and i32 %71, 1023
  %73 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %74 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %75 = load i64, ptr %74, align 8, !tbaa !17
  %76 = load i64, ptr %73, align 8, !tbaa !17
  %77 = icmp eq i32 %72, 128
  br i1 %77, label %93, label %78

78:                                               ; preds = %67
  %79 = icmp ugt i32 %72, 64
  br i1 %79, label %80, label %86

80:                                               ; preds = %78
  %81 = add nsw i32 %72, -64
  %82 = zext i32 %81 to i64
  %83 = shl nsw i64 -1, %82
  %84 = xor i64 %83, -1
  %85 = and i64 %75, %84
  br label %93

86:                                               ; preds = %78
  %87 = icmp eq i32 %72, 64
  br i1 %87, label %99, label %88

88:                                               ; preds = %86
  %89 = zext i32 %72 to i64
  %90 = shl nsw i64 -1, %89
  %91 = xor i64 %90, -1
  %92 = and i64 %76, %91
  br label %99

93:                                               ; preds = %80, %67
  %94 = phi i64 [ %75, %67 ], [ %85, %80 ]
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = tail call i32 @exact_log2(i64 noundef %94) #29
  %98 = add nsw i32 %97, 64
  br label %102

99:                                               ; preds = %86, %88, %93
  %100 = phi i64 [ %76, %93 ], [ %76, %86 ], [ %92, %88 ]
  %101 = tail call i32 @exact_log2(i64 noundef %100) #29
  br label %102

102:                                              ; preds = %96, %99
  %103 = phi i32 [ %98, %96 ], [ %101, %99 ]
  ret i32 %103
}

declare i32 @exact_log2(i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_floor_log2(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = and i64 %61, 65535
  %63 = icmp eq i64 %62, 26
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = tail call i32 @tree_log2(ptr noundef %66)
  br label %104

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.tree_type, ptr %70, i64 0, i32 6
  %72 = load i32, ptr %71, align 4
  %73 = and i32 %72, 1023
  %74 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %75 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %76 = load i64, ptr %75, align 8, !tbaa !17
  %77 = load i64, ptr %74, align 8, !tbaa !17
  %78 = and i32 %72, 895
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %95, label %80

80:                                               ; preds = %68
  %81 = icmp ugt i32 %73, 64
  br i1 %81, label %82, label %88

82:                                               ; preds = %80
  %83 = add nsw i32 %73, -64
  %84 = zext i32 %83 to i64
  %85 = shl nsw i64 -1, %84
  %86 = xor i64 %85, -1
  %87 = and i64 %76, %86
  br label %95

88:                                               ; preds = %80
  %89 = icmp eq i32 %73, 64
  br i1 %89, label %101, label %90

90:                                               ; preds = %88
  %91 = zext i32 %73 to i64
  %92 = shl nsw i64 -1, %91
  %93 = xor i64 %92, -1
  %94 = and i64 %77, %93
  br label %101

95:                                               ; preds = %82, %68
  %96 = phi i64 [ %76, %68 ], [ %87, %82 ]
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = tail call i32 @floor_log2(i64 noundef %96) #29
  %100 = add nsw i32 %99, 64
  br label %104

101:                                              ; preds = %88, %90, %95
  %102 = phi i64 [ %77, %95 ], [ %77, %88 ], [ %94, %90 ]
  %103 = tail call i32 @floor_log2(i64 noundef %102) #29
  br label %104

104:                                              ; preds = %98, %101, %64
  %105 = phi i32 [ %67, %64 ], [ %100, %98 ], [ %103, %101 ]
  ret i32 %105
}

declare i32 @floor_log2(i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @real_zerop(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %98, %1
  %3 = phi ptr [ %0, %1 ], [ %99, %98 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %58 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %58, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %98, label %58

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %58

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %98

58:                                               ; preds = %2, %6, %21, %54
  %59 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %60 = and i64 %59, 65535
  %61 = icmp eq i64 %60, 24
  br i1 %61, label %62, label %86

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.tree_real_cst, ptr %3, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = tail call zeroext i8 @real_compare(i32 noundef 101, ptr noundef %64, ptr noundef nonnull @dconst0) #29
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = load i64, ptr %69, align 8
  %71 = and i64 %70, 65535
  %72 = icmp eq i64 %71, 14
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = tail call i32 @vector_type_mode(ptr noundef nonnull %69) #29
  br label %80

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 6
  %77 = load i32, ptr %76, align 4
  %78 = lshr i32 %77, 16
  %79 = and i32 %78, 255
  br label %80

80:                                               ; preds = %75, %73
  %81 = phi i32 [ %74, %73 ], [ %79, %75 ]
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %82
  %84 = load i8, ptr %83, align 1, !tbaa !17
  %85 = icmp eq i8 %84, 9
  br i1 %85, label %86, label %100

86:                                               ; preds = %80, %62, %58
  %87 = load i64, ptr %3, align 8
  %88 = and i64 %87, 65535
  %89 = icmp eq i64 %88, 26
  br i1 %89, label %90, label %100

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = tail call i32 @real_zerop(ptr noundef %92), !range !37
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  br label %98

98:                                               ; preds = %95, %56, %21
  %99 = phi ptr [ %97, %95 ], [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

100:                                              ; preds = %86, %90, %80
  %101 = phi i32 [ 1, %80 ], [ 0, %90 ], [ 0, %86 ]
  ret i32 %101
}

declare zeroext i8 @real_compare(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @real_onep(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = and i64 %61, 65535
  %63 = icmp eq i64 %62, 24
  br i1 %63, label %64, label %88

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.tree_real_cst, ptr %3, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = tail call zeroext i8 @real_compare(i32 noundef 101, ptr noundef %66, ptr noundef nonnull @dconst1) #29
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = load i64, ptr %71, align 8
  %73 = and i64 %72, 65535
  %74 = icmp eq i64 %73, 14
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = tail call i32 @vector_type_mode(ptr noundef nonnull %71) #29
  br label %82

77:                                               ; preds = %69
  %78 = getelementptr inbounds %struct.tree_type, ptr %71, i64 0, i32 6
  %79 = load i32, ptr %78, align 4
  %80 = lshr i32 %79, 16
  %81 = and i32 %80, 255
  br label %82

82:                                               ; preds = %77, %75
  %83 = phi i32 [ %76, %75 ], [ %81, %77 ]
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = icmp eq i8 %86, 9
  br i1 %87, label %88, label %101

88:                                               ; preds = %82, %64, %60
  %89 = load i64, ptr %3, align 8
  %90 = and i64 %89, 65535
  %91 = icmp eq i64 %90, 26
  br i1 %91, label %92, label %101

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !17
  %95 = tail call i32 @real_onep(ptr noundef %94), !range !37
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  %100 = tail call i32 @real_zerop(ptr noundef %99), !range !37
  br label %101

101:                                              ; preds = %88, %92, %97, %82
  %102 = phi i32 [ 1, %82 ], [ 0, %92 ], [ 0, %88 ], [ %100, %97 ]
  ret i32 %102
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @real_twop(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = and i64 %61, 65535
  %63 = icmp eq i64 %62, 24
  br i1 %63, label %64, label %88

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.tree_real_cst, ptr %3, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = tail call zeroext i8 @real_compare(i32 noundef 101, ptr noundef %66, ptr noundef nonnull @dconst2) #29
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = load i64, ptr %71, align 8
  %73 = and i64 %72, 65535
  %74 = icmp eq i64 %73, 14
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = tail call i32 @vector_type_mode(ptr noundef nonnull %71) #29
  br label %82

77:                                               ; preds = %69
  %78 = getelementptr inbounds %struct.tree_type, ptr %71, i64 0, i32 6
  %79 = load i32, ptr %78, align 4
  %80 = lshr i32 %79, 16
  %81 = and i32 %80, 255
  br label %82

82:                                               ; preds = %77, %75
  %83 = phi i32 [ %76, %75 ], [ %81, %77 ]
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = icmp eq i8 %86, 9
  br i1 %87, label %88, label %101

88:                                               ; preds = %82, %64, %60
  %89 = load i64, ptr %3, align 8
  %90 = and i64 %89, 65535
  %91 = icmp eq i64 %90, 26
  br i1 %91, label %92, label %101

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !17
  %95 = tail call i32 @real_twop(ptr noundef %94), !range !37
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  %100 = tail call i32 @real_zerop(ptr noundef %99), !range !37
  br label %101

101:                                              ; preds = %88, %92, %97, %82
  %102 = phi i32 [ 1, %82 ], [ 0, %92 ], [ 0, %88 ], [ %100, %97 ]
  ret i32 %102
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @real_minus_onep(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = and i64 %61, 65535
  %63 = icmp eq i64 %62, 24
  br i1 %63, label %64, label %88

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.tree_real_cst, ptr %3, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = tail call zeroext i8 @real_compare(i32 noundef 101, ptr noundef %66, ptr noundef nonnull @dconstm1) #29
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = load i64, ptr %71, align 8
  %73 = and i64 %72, 65535
  %74 = icmp eq i64 %73, 14
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = tail call i32 @vector_type_mode(ptr noundef nonnull %71) #29
  br label %82

77:                                               ; preds = %69
  %78 = getelementptr inbounds %struct.tree_type, ptr %71, i64 0, i32 6
  %79 = load i32, ptr %78, align 4
  %80 = lshr i32 %79, 16
  %81 = and i32 %80, 255
  br label %82

82:                                               ; preds = %77, %75
  %83 = phi i32 [ %76, %75 ], [ %81, %77 ]
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = icmp eq i8 %86, 9
  br i1 %87, label %88, label %101

88:                                               ; preds = %82, %64, %60
  %89 = load i64, ptr %3, align 8
  %90 = and i64 %89, 65535
  %91 = icmp eq i64 %90, 26
  br i1 %91, label %92, label %101

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !17
  %95 = tail call i32 @real_minus_onep(ptr noundef %94), !range !37
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  %100 = tail call i32 @real_zerop(ptr noundef %99), !range !37
  br label %101

101:                                              ; preds = %88, %92, %97, %82
  %102 = phi i32 [ 1, %82 ], [ 0, %92 ], [ 0, %88 ], [ %100, %97 ]
  ret i32 %102
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @really_constant_p(ptr nocapture noundef readonly %0) local_unnamed_addr #16 {
  br label %2

2:                                                ; preds = %6, %1
  %3 = phi ptr [ %0, %1 ], [ %8, %6 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %9 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  br label %2, !llvm.loop !90

9:                                                ; preds = %2
  %10 = trunc i64 %4 to i32
  %11 = lshr i32 %10, 17
  %12 = and i32 %11, 1
  ret i32 %12
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @value_member(ptr noundef readnone %0, ptr noundef readonly %1) local_unnamed_addr #16 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %9
  %5 = phi ptr [ %11, %9 ], [ %1, %2 ]
  %6 = getelementptr inbounds %struct.tree_list, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, %0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %4, !llvm.loop !91

13:                                               ; preds = %4, %9, %2
  %14 = phi ptr [ null, %2 ], [ null, %9 ], [ %5, %4 ]
  ret ptr %14
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @purpose_member(ptr noundef readnone %0, ptr noundef readonly %1) local_unnamed_addr #16 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %9
  %5 = phi ptr [ %11, %9 ], [ %1, %2 ]
  %6 = getelementptr inbounds %struct.tree_list, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, %0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %4, !llvm.loop !92

13:                                               ; preds = %4, %9, %2
  %14 = phi ptr [ null, %2 ], [ null, %9 ], [ %5, %4 ]
  ret ptr %14
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @chain_index(i32 noundef %0, ptr noundef readonly %1) local_unnamed_addr #16 {
  %3 = icmp ne ptr %1, null
  %4 = icmp sgt i32 %0, 0
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %15

6:                                                ; preds = %2, %6
  %7 = phi ptr [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %11, %6 ], [ %0, %2 ]
  %9 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = add nsw i32 %8, -1
  %12 = icmp ne ptr %10, null
  %13 = icmp ugt i32 %8, 1
  %14 = select i1 %12, i1 %13, i1 false
  br i1 %14, label %6, label %15, !llvm.loop !93

15:                                               ; preds = %6, %2
  %16 = phi ptr [ %1, %2 ], [ %10, %6 ]
  ret ptr %16
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @chain_member(ptr noundef readnone %0, ptr noundef readonly %1) local_unnamed_addr #16 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %7
  %5 = phi ptr [ %9, %7 ], [ %1, %2 ]
  %6 = icmp eq ptr %5, %0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %4, !llvm.loop !94

11:                                               ; preds = %4, %7, %2
  %12 = phi i32 [ 0, %2 ], [ 0, %7 ], [ 1, %4 ]
  ret i32 %12
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @fields_length(ptr nocapture noundef readonly %0) local_unnamed_addr #16 {
  %2 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1, %5
  %6 = phi ptr [ %14, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %12, %5 ], [ 0, %1 ]
  %8 = load i64, ptr %6, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 31
  %11 = zext i1 %10 to i32
  %12 = add nuw nsw i32 %7, %11
  %13 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %5, !llvm.loop !95

16:                                               ; preds = %5, %1
  %17 = phi i32 [ 0, %1 ], [ %12, %5 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @first_field(ptr nocapture noundef readonly %0) local_unnamed_addr #16 {
  %2 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1, %10
  %6 = phi ptr [ %12, %10 ], [ %3, %1 ]
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 31
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %5, !llvm.loop !96

14:                                               ; preds = %5, %10, %1
  %15 = phi ptr [ null, %1 ], [ null, %10 ], [ %6, %5 ]
  ret ptr %15
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @chainon(ptr noundef %0, ptr noundef %1) local_unnamed_addr #15 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = icmp eq ptr %1, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4, %6
  %7 = phi ptr [ %9, %6 ], [ %0, %4 ]
  %8 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %6, !llvm.loop !97

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  store ptr %1, ptr %12, align 8, !tbaa !17
  br label %13

13:                                               ; preds = %4, %2, %11
  %14 = phi ptr [ %0, %11 ], [ %1, %2 ], [ %0, %4 ]
  ret ptr %14
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @tree_last(ptr noundef readonly %0) local_unnamed_addr #16 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1, %3
  %4 = phi ptr [ %6, %3 ], [ %0, %1 ]
  %5 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %3, !llvm.loop !98

8:                                                ; preds = %3, %1
  %9 = phi ptr [ null, %1 ], [ %4, %3 ]
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_tree_list_stat(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 2)
  %4 = getelementptr inbounds %struct.tree_list, ptr %3, i64 0, i32 1
  store ptr %0, ptr %4, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_list, ptr %3, i64 0, i32 2
  store ptr %1, ptr %5, align 8, !tbaa !17
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_tree_list_vec_stat(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  store ptr null, ptr %2, align 8, !tbaa !6
  %3 = icmp eq ptr %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !61
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %4, %7
  %8 = phi i64 [ %16, %7 ], [ 0, %4 ]
  %9 = phi ptr [ %15, %7 ], [ %2, %4 ]
  %10 = getelementptr inbounds %struct.VEC_tree_base, ptr %0, i64 0, i32 2, i64 %8
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = tail call ptr @make_node_stat(i32 noundef 2)
  %13 = getelementptr inbounds %struct.tree_list, ptr %12, i64 0, i32 1
  store ptr null, ptr %13, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_list, ptr %12, i64 0, i32 2
  store ptr %11, ptr %14, align 8, !tbaa !17
  store ptr %12, ptr %9, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 1
  %16 = add nuw nsw i64 %8, 1
  %17 = load i32, ptr %0, align 8, !tbaa !61
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %7, label %20

20:                                               ; preds = %7
  %21 = load ptr, ptr %2, align 8, !tbaa !6
  br label %22

22:                                               ; preds = %20, %4, %1
  %23 = phi ptr [ %21, %20 ], [ null, %4 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret ptr %23
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @ctor_to_list(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  store ptr null, ptr %2, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.tree_constructor, ptr %0, i64 0, i32 1
  br label %4

4:                                                ; preds = %15, %1
  %5 = phi i64 [ %21, %15 ], [ 0, %1 ]
  %6 = phi ptr [ %20, %15 ], [ %2, %1 ]
  %7 = load ptr, ptr %3, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = load i32, ptr %7, align 8, !tbaa !74
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %4 ]
  %13 = zext i32 %12 to i64
  %14 = icmp ult i64 %5, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %7, i64 0, i32 2, i64 %5
  %17 = load <2 x ptr>, ptr %16, align 8, !tbaa !6
  %18 = tail call ptr @make_node_stat(i32 noundef 2)
  %19 = getelementptr inbounds %struct.tree_list, ptr %18, i64 0, i32 1
  store <2 x ptr> %17, ptr %19, align 8, !tbaa !17
  store ptr %18, ptr %6, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %21 = add nuw nsw i64 %5, 1
  br label %4, !llvm.loop !99

22:                                               ; preds = %11
  %23 = load ptr, ptr %2, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret ptr %23
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @ctor_to_vec(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_constructor, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = load i32, ptr %3, align 8, !tbaa !74
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %1 ]
  %9 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef %8) #29
  br label %10

10:                                               ; preds = %20, %7
  %11 = phi i64 [ %27, %20 ], [ 0, %7 ]
  %12 = load ptr, ptr %2, align 8, !tbaa !17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = load i32, ptr %12, align 8, !tbaa !74
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %10 ]
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %11, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %12, i64 0, i32 2, i64 %11, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !76
  %23 = load i32, ptr %9, align 8, !tbaa !61
  %24 = add i32 %23, 1
  store i32 %24, ptr %9, align 8, !tbaa !61
  %25 = zext i32 %23 to i64
  %26 = getelementptr inbounds %struct.VEC_tree_base, ptr %9, i64 0, i32 2, i64 %25
  store ptr %22, ptr %26, align 8, !tbaa !6
  %27 = add nuw nsw i64 %11, 1
  br label %10, !llvm.loop !100

28:                                               ; preds = %16
  ret ptr %9
}

declare ptr @vec_gc_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @size_in_bytes(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !6
  br label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 8), align 8, !tbaa !101
  tail call void %13(ptr noundef null, ptr noundef nonnull %8) #29
  %14 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  br label %15

15:                                               ; preds = %6, %12, %4
  %16 = phi ptr [ %5, %4 ], [ %14, %12 ], [ %10, %6 ]
  ret ptr %16
}

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @int_size_in_bytes(ptr noundef readonly %0) local_unnamed_addr #17 {
  %2 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = load i64, ptr %8, align 8
  %12 = and i64 %11, 65535
  %13 = icmp eq i64 %12, 23
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !17
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1
  %20 = load i64, ptr %19, align 8, !tbaa !17
  %21 = tail call i64 @llvm.smax.i64(i64 %20, i64 -1)
  br label %22

22:                                               ; preds = %18, %4, %10, %14, %1
  %23 = phi i64 [ 0, %1 ], [ -1, %14 ], [ -1, %10 ], [ -1, %4 ], [ %21, %18 ]
  ret i64 %23
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @max_int_size_in_bytes(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 15
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = load i64, ptr %7, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 23
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.tree_int_cst, ptr %7, i64 0, i32 1, i32 1
  %15 = load i64, ptr %14, align 8, !tbaa !17
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_int_cst, ptr %7, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !17
  %20 = icmp eq i64 %19, -1
  br i1 %20, label %21, label %36

21:                                               ; preds = %13, %9, %1, %5, %17
  %22 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 9), align 8, !tbaa !102
  %23 = tail call ptr %22(ptr noundef nonnull %0) #29
  %24 = icmp eq ptr %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = load i64, ptr %23, align 8
  %27 = and i64 %26, 65535
  %28 = icmp eq i64 %27, 23
  br i1 %28, label %29, label %36

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.tree_int_cst, ptr %23, i64 0, i32 1, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !17
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.tree_int_cst, ptr %23, i64 0, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !17
  br label %36

36:                                               ; preds = %29, %25, %21, %33, %17
  %37 = phi i64 [ %35, %33 ], [ -1, %21 ], [ %19, %17 ], [ -1, %25 ], [ -1, %29 ]
  ret i64 %37
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @host_integerp(ptr noundef readonly %0, i32 noundef %1) local_unnamed_addr #14 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %41, label %4

4:                                                ; preds = %2
  %5 = load i64, ptr %0, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 23
  br i1 %7, label %8, label %41

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !17
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = load i64, ptr %9, align 8, !tbaa !17
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %41, label %18

16:                                               ; preds = %8
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %20, label %39

18:                                               ; preds = %13
  %19 = icmp eq i32 %1, 0
  br i1 %19, label %41, label %39

20:                                               ; preds = %16
  %21 = icmp eq i64 %11, -1
  br i1 %21, label %22, label %41

22:                                               ; preds = %20
  %23 = load i64, ptr %9, align 8, !tbaa !17
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 2097152
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = and i64 %28, 65535
  %33 = icmp eq i64 %32, 8
  br i1 %33, label %34, label %41

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.tree_type, ptr %27, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 10
  %38 = and i32 %37, 1
  br label %41

39:                                               ; preds = %18, %16
  %40 = zext i1 %12 to i32
  br label %41

41:                                               ; preds = %18, %20, %22, %31, %34, %4, %39, %25, %13, %2
  %42 = phi i32 [ 0, %2 ], [ 0, %4 ], [ %38, %34 ], [ 1, %25 ], [ 1, %13 ], [ %40, %39 ], [ 0, %31 ], [ 0, %22 ], [ 0, %20 ], [ 0, %18 ]
  ret i32 %42
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @tree_low_cst(ptr noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %44, label %4

4:                                                ; preds = %2
  %5 = load i64, ptr %0, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 23
  br i1 %7, label %8, label %44

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !17
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = load i64, ptr %9, align 8, !tbaa !17
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %45, label %18

16:                                               ; preds = %8
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %20, label %39

18:                                               ; preds = %13
  %19 = icmp eq i32 %1, 0
  br i1 %19, label %44, label %39

20:                                               ; preds = %16
  %21 = icmp eq i64 %11, -1
  br i1 %21, label %22, label %44

22:                                               ; preds = %20
  %23 = load i64, ptr %9, align 8, !tbaa !17
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %25, label %44

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 2097152
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %25
  %32 = and i64 %28, 65535
  %33 = icmp eq i64 %32, 8
  br i1 %33, label %34, label %44

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.tree_type, ptr %27, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 10
  %38 = and i32 %37, 1
  br label %41

39:                                               ; preds = %18, %16
  %40 = zext i1 %12 to i32
  br label %41

41:                                               ; preds = %34, %39
  %42 = phi i32 [ %38, %34 ], [ %40, %39 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %18, %20, %22, %31, %4, %2, %41
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 6214, ptr noundef nonnull @.str.219) #29
  br label %45

45:                                               ; preds = %13, %25, %41, %44
  %46 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !17
  ret i64 %47
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @tree_expr_size(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = add nsw i64 %3, -29
  %5 = icmp ult i64 %4, 12
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %14 = icmp eq ptr %13, %12
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !6
  br label %26

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 16
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.tree_type, ptr %19, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 8), align 8, !tbaa !101
  tail call void %24(ptr noundef null, ptr noundef nonnull %19) #29
  %25 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  br label %26

26:                                               ; preds = %23, %17, %15, %6
  %27 = phi ptr [ %8, %6 ], [ %16, %15 ], [ %25, %23 ], [ %21, %17 ]
  ret ptr %27
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @bit_position(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = tail call ptr @bit_from_pos(ptr noundef %3, ptr noundef %5) #29
  ret ptr %6
}

declare ptr @bit_from_pos(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @int_bit_position(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = tail call ptr @bit_from_pos(ptr noundef %3, ptr noundef %5) #29
  %7 = icmp eq ptr %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = load i64, ptr %6, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 23
  br i1 %11, label %12, label %36

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1
  %14 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1, i32 1
  %15 = load i64, ptr %14, align 8, !tbaa !17
  switch i64 %15, label %36 [
    i64 0, label %16
    i64 -1, label %19
  ]

16:                                               ; preds = %12
  %17 = load i64, ptr %13, align 8, !tbaa !17
  %18 = icmp sgt i64 %17, -1
  br i1 %18, label %39, label %36

19:                                               ; preds = %12
  %20 = load i64, ptr %13, align 8, !tbaa !17
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %36

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = load i64, ptr %24, align 8
  %26 = and i64 %25, 2097152
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = and i64 %25, 65535
  %30 = icmp eq i64 %29, 8
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.tree_type, ptr %24, i64 0, i32 6
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, 1024
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %12, %16, %31, %28, %19, %8, %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 6214, ptr noundef nonnull @.str.219) #29
  %37 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1
  %38 = load i64, ptr %37, align 8, !tbaa !17
  br label %39

39:                                               ; preds = %16, %22, %31, %36
  %40 = phi i64 [ %17, %16 ], [ %20, %22 ], [ %20, %31 ], [ %38, %36 ]
  ret i64 %40
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @byte_position(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = tail call ptr @byte_from_pos(ptr noundef %3, ptr noundef %5) #29
  ret ptr %6
}

declare ptr @byte_from_pos(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @int_byte_position(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = tail call ptr @byte_from_pos(ptr noundef %3, ptr noundef %5) #29
  %7 = icmp eq ptr %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = load i64, ptr %6, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 23
  br i1 %11, label %12, label %36

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1
  %14 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1, i32 1
  %15 = load i64, ptr %14, align 8, !tbaa !17
  switch i64 %15, label %36 [
    i64 0, label %16
    i64 -1, label %19
  ]

16:                                               ; preds = %12
  %17 = load i64, ptr %13, align 8, !tbaa !17
  %18 = icmp sgt i64 %17, -1
  br i1 %18, label %39, label %36

19:                                               ; preds = %12
  %20 = load i64, ptr %13, align 8, !tbaa !17
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %36

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = load i64, ptr %24, align 8
  %26 = and i64 %25, 2097152
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = and i64 %25, 65535
  %30 = icmp eq i64 %29, 8
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.tree_type, ptr %24, i64 0, i32 6
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, 1024
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %12, %16, %31, %28, %19, %8, %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 6214, ptr noundef nonnull @.str.219) #29
  %37 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1
  %38 = load i64, ptr %37, align 8, !tbaa !17
  br label %39

39:                                               ; preds = %16, %22, %31, %36
  %40 = phi i64 [ %17, %16 ], [ %20, %22 ], [ %20, %31 ], [ %38, %36 ]
  ret i64 %40
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @expr_align(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %17, %1
  %3 = phi ptr [ %0, %1 ], [ %19, %17 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %34 [
    i16 116, label %8
    i16 113, label %8
    i16 117, label %8
    i16 120, label %17
    i16 52, label %17
    i16 53, label %17
    i16 54, label %17
    i16 55, label %17
    i16 60, label %17
    i16 61, label %17
    i16 56, label %20
    i16 30, label %28
    i16 33, label %28
    i16 32, label %28
    i16 34, label %28
    i16 36, label %28
    i16 29, label %28
  ]

6:                                                ; preds = %34, %28, %32, %20, %8
  %7 = phi i32 [ %16, %8 ], [ %27, %20 ], [ %38, %34 ], [ %30, %28 ], [ %33, %32 ]
  ret i32 %7

8:                                                ; preds = %2, %2, %2
  %9 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = tail call i32 @expr_align(ptr noundef %10)
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 7
  %15 = load i32, ptr %14, align 8, !tbaa !17
  %16 = tail call i32 @llvm.umax.i32(i32 %11, i32 %15)
  br label %6

17:                                               ; preds = %2, %2, %2, %2, %2, %2, %2
  %18 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  br label %2

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = tail call i32 @expr_align(ptr noundef %22)
  %24 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 1, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = tail call i32 @expr_align(ptr noundef %25)
  %27 = tail call i32 @llvm.umin.i32(i32 %23, i32 %26)
  br label %6

28:                                               ; preds = %2, %2, %2, %2, %2, %2
  %29 = getelementptr inbounds %struct.tree_decl_common, ptr %3, i64 0, i32 3
  %30 = load i32, ptr %29, align 8, !tbaa !17
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %6

32:                                               ; preds = %28
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 2321, ptr noundef nonnull @.str.219) #29
  %33 = load i32, ptr %29, align 8, !tbaa !17
  br label %6

34:                                               ; preds = %2
  %35 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.tree_type, ptr %36, i64 0, i32 7
  %38 = load i32, ptr %37, align 8, !tbaa !17
  br label %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @array_type_nelts(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 13
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 14
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = tail call i32 @integer_zerop(ptr noundef %9), !range !37
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = tail call ptr @fold_build2_stat_loc(i32 noundef 0, i32 noundef 64, ptr noundef %16, ptr noundef %11, ptr noundef %9) #29
  br label %18

18:                                               ; preds = %14, %7, %5
  %19 = phi ptr [ %6, %5 ], [ %17, %14 ], [ %11, %7 ]
  ret ptr %19
}

declare ptr @fold_build2_stat_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @staticp(ptr noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %50, %1
  %3 = phi ptr [ %0, %1 ], [ %52, %50 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %85 [
    i16 29, label %83
    i16 32, label %6
    i16 33, label %23
    i16 51, label %32
    i16 30, label %83
    i16 28, label %83
    i16 41, label %36
    i16 119, label %74
    i16 49, label %53
    i16 48, label %53
    i16 47, label %53
    i16 45, label %60
    i16 46, label %60
  ]

6:                                                ; preds = %2
  %7 = and i64 %4, 67108864
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.tree_decl_common, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %10, align 8
  %12 = and i64 %11, 33554432
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %85, label %14

14:                                               ; preds = %9, %6
  %15 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %3, i64 0, i32 4
  %16 = load i32, ptr %15, align 8
  %17 = and i32 %16, 49152
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %85

19:                                               ; preds = %14
  %20 = and i32 %16, 32
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %3, ptr null
  br label %85

23:                                               ; preds = %2
  %24 = and i64 %4, 67108864
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %3, i64 0, i32 2
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 33554432
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %85, label %31

31:                                               ; preds = %26, %23
  br label %85

32:                                               ; preds = %2
  %33 = and i64 %4, 67108864
  %34 = icmp eq i64 %33, 0
  %35 = select i1 %34, ptr null, ptr %3
  br label %85

36:                                               ; preds = %2
  %37 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = load i64, ptr %38, align 8
  %40 = and i64 %39, 65535
  %41 = icmp eq i64 %40, 31
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 2389, ptr noundef nonnull @.str.219) #29
  %43 = load ptr, ptr %37, align 8, !tbaa !17
  br label %44

44:                                               ; preds = %36, %42
  %45 = phi ptr [ %38, %36 ], [ %43, %42 ]
  %46 = getelementptr inbounds %struct.tree_decl_common, ptr %45, i64 0, i32 2
  %47 = load i64, ptr %46, align 8
  %48 = and i64 %47, 33554432
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %83

50:                                               ; preds = %68, %44
  %51 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  br label %2

53:                                               ; preds = %2, %2, %2
  %54 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = load i64, ptr %55, align 8
  %57 = and i64 %56, 131072
  %58 = icmp eq i64 %57, 0
  %59 = select i1 %58, ptr null, ptr %3
  br label %85

60:                                               ; preds = %2, %2
  %61 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.tree_type, ptr %62, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = load i64, ptr %64, align 8
  %66 = and i64 %65, 65535
  %67 = icmp eq i64 %66, 23
  br i1 %67, label %68, label %83

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 1
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = load i64, ptr %70, align 8
  %72 = and i64 %71, 65535
  %73 = icmp eq i64 %72, 23
  br i1 %73, label %50, label %83

74:                                               ; preds = %2
  %75 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = getelementptr inbounds %struct.tree_exp, ptr %76, i64 0, i32 3
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = load i64, ptr %78, align 8
  %80 = and i64 %79, 67108864
  %81 = icmp eq i64 %80, 0
  %82 = select i1 %81, ptr null, ptr %3
  br label %85

83:                                               ; preds = %2, %2, %2, %44, %68, %60
  %84 = phi ptr [ null, %60 ], [ null, %68 ], [ null, %44 ], [ %3, %2 ], [ %3, %2 ], [ %3, %2 ]
  br label %85

85:                                               ; preds = %2, %83, %31, %26, %14, %9, %19, %74, %53, %32
  %86 = phi ptr [ %82, %74 ], [ %59, %53 ], [ %35, %32 ], [ null, %14 ], [ null, %9 ], [ %22, %19 ], [ %3, %31 ], [ null, %26 ], [ %84, %83 ], [ null, %2 ]
  ret ptr %86
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local zeroext i8 @decl_address_invariant_p(ptr nocapture noundef readonly %0) local_unnamed_addr #16 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %84 [
    i16 34, label %85
    i16 36, label %85
    i16 30, label %85
    i16 29, label %85
    i16 32, label %4
    i16 33, label %51
  ]

4:                                                ; preds = %1
  %5 = and i64 %2, 67108864
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 33554432
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %14 = load i32, ptr %13, align 8
  br label %20

15:                                               ; preds = %7, %4
  %16 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %17 = load i32, ptr %16, align 8
  %18 = and i32 %17, 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %85, label %20

20:                                               ; preds = %12, %15
  %21 = phi i32 [ %14, %12 ], [ %17, %15 ]
  %22 = and i32 %21, 49152
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %85

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %85, label %29

29:                                               ; preds = %24
  %30 = icmp eq ptr %26, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %29, %44
  %32 = phi ptr [ %46, %44 ], [ %26, %29 ]
  %33 = load i64, ptr %32, align 8
  %34 = trunc i64 %33 to i16
  switch i16 %34, label %37 [
    i16 29, label %48
    i16 4, label %35
  ]

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.tree_block, ptr %32, i64 0, i32 6
  br label %44

37:                                               ; preds = %31
  %38 = and i64 %33, 65535
  %39 = add nsw i64 %38, -5
  %40 = icmp ult i64 %39, 18
  %41 = getelementptr inbounds %struct.tree_type, ptr %32, i64 0, i32 18
  %42 = getelementptr inbounds %struct.tree_decl_minimal, ptr %32, i64 0, i32 4
  %43 = select i1 %40, ptr %41, ptr %42
  br label %44

44:                                               ; preds = %37, %35
  %45 = phi ptr [ %36, %35 ], [ %43, %37 ]
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %31, !llvm.loop !103

48:                                               ; preds = %31, %44, %29
  %49 = phi ptr [ null, %29 ], [ null, %44 ], [ %32, %31 ]
  %50 = icmp eq ptr %49, %27
  br i1 %50, label %85, label %84

51:                                               ; preds = %1
  %52 = and i64 %2, 67108864
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %85

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %56 = load i64, ptr %55, align 8
  %57 = and i64 %56, 33554432
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %85

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = icmp eq ptr %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %59, %76
  %64 = phi ptr [ %78, %76 ], [ %61, %59 ]
  %65 = load i64, ptr %64, align 8
  %66 = trunc i64 %65 to i16
  switch i16 %66, label %69 [
    i16 29, label %80
    i16 4, label %67
  ]

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.tree_block, ptr %64, i64 0, i32 6
  br label %76

69:                                               ; preds = %63
  %70 = and i64 %65, 65535
  %71 = add nsw i64 %70, -5
  %72 = icmp ult i64 %71, 18
  %73 = getelementptr inbounds %struct.tree_type, ptr %64, i64 0, i32 18
  %74 = getelementptr inbounds %struct.tree_decl_minimal, ptr %64, i64 0, i32 4
  %75 = select i1 %72, ptr %73, ptr %74
  br label %76

76:                                               ; preds = %69, %67
  %77 = phi ptr [ %68, %67 ], [ %75, %69 ]
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %63, !llvm.loop !103

80:                                               ; preds = %63, %76, %59
  %81 = phi ptr [ null, %59 ], [ null, %76 ], [ %64, %63 ]
  %82 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %83 = icmp eq ptr %81, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %1, %80, %48
  br label %85

85:                                               ; preds = %51, %54, %80, %15, %20, %24, %48, %1, %1, %1, %1, %84
  %86 = phi i8 [ 0, %84 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %48 ], [ 1, %24 ], [ 1, %20 ], [ 1, %15 ], [ 1, %80 ], [ 1, %54 ], [ 1, %51 ]
  ret i8 %86
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @decl_function_context(ptr nocapture noundef readonly %0) local_unnamed_addr #16 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %18 [
    i16 0, label %41
    i16 29, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp eq ptr %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.tree_type, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = getelementptr inbounds %struct.tree_list, ptr %12, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 16
  br label %20

18:                                               ; preds = %1, %4
  %19 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  br label %20

20:                                               ; preds = %8, %18
  %21 = phi ptr [ %17, %8 ], [ %19, %18 ]
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = icmp eq ptr %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %20, %37
  %25 = phi ptr [ %39, %37 ], [ %22, %20 ]
  %26 = load i64, ptr %25, align 8
  %27 = trunc i64 %26 to i16
  switch i16 %27, label %30 [
    i16 29, label %41
    i16 4, label %28
  ]

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.tree_block, ptr %25, i64 0, i32 6
  br label %37

30:                                               ; preds = %24
  %31 = and i64 %26, 65535
  %32 = add nsw i64 %31, -5
  %33 = icmp ult i64 %32, 18
  %34 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 18
  %35 = getelementptr inbounds %struct.tree_decl_minimal, ptr %25, i64 0, i32 4
  %36 = select i1 %33, ptr %34, ptr %35
  br label %37

37:                                               ; preds = %30, %28
  %38 = phi ptr [ %29, %28 ], [ %36, %30 ]
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %24, !llvm.loop !103

41:                                               ; preds = %24, %37, %20, %1
  %42 = phi ptr [ null, %1 ], [ null, %20 ], [ %25, %24 ], [ null, %37 ]
  ret ptr %42
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local zeroext i8 @decl_address_ip_invariant_p(ptr nocapture noundef readonly %0) local_unnamed_addr #10 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %32 [
    i16 30, label %33
    i16 29, label %33
    i16 28, label %33
    i16 32, label %4
    i16 33, label %24
  ]

4:                                                ; preds = %1
  %5 = and i64 %2, 67108864
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 33554432
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %14 = load i32, ptr %13, align 8
  br label %20

15:                                               ; preds = %7, %4
  %16 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %17 = load i32, ptr %16, align 8
  %18 = and i32 %17, 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %12, %15
  %21 = phi i32 [ %14, %12 ], [ %17, %15 ]
  %22 = and i32 %21, 49152
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %32, label %33

24:                                               ; preds = %1
  %25 = and i64 %2, 67108864
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  %30 = and i64 %29, 33554432
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %1, %27, %20
  br label %33

33:                                               ; preds = %24, %27, %15, %20, %1, %1, %1, %32
  %34 = phi i8 [ 0, %32 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %20 ], [ 1, %15 ], [ 1, %27 ], [ 1, %24 ]
  ret i8 %34
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @save_expr(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call ptr @fold(ptr noundef %0) #29
  %3 = tail call ptr @skip_simple_arithmetic(ptr noundef %2)
  %4 = load i64, ptr %3, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = tail call fastcc zeroext i8 @tree_invariant_p_1(ptr noundef nonnull %3), !range !104
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %30

10:                                               ; preds = %7
  %11 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %3), !range !104
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %30

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = tail call ptr @build1_stat(i32 noundef 120, ptr noundef %15, ptr noundef %2)
  %17 = load i64, ptr %0, align 8
  %18 = and i64 %17, 65535
  %19 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !17
  %21 = icmp ugt i32 %20, 3
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !17
  br label %25

25:                                               ; preds = %13, %22
  %26 = phi i32 [ %24, %22 ], [ 0, %13 ]
  %27 = getelementptr inbounds %struct.tree_exp, ptr %16, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !17
  %28 = load i64, ptr %16, align 8
  %29 = or i64 %28, 65536
  store i64 %29, ptr %16, align 8
  br label %30

30:                                               ; preds = %10, %7, %1, %25
  %31 = phi ptr [ %16, %25 ], [ %3, %1 ], [ %2, %7 ], [ %2, %10 ]
  ret ptr %31
}

declare ptr @fold(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @skip_simple_arithmetic(ptr noundef readonly %0) local_unnamed_addr #18 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 117
  br i1 %4, label %5, label %12

5:                                                ; preds = %1, %5
  %6 = phi ptr [ %8, %5 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 117
  br i1 %11, label %5, label %12, !llvm.loop !105

12:                                               ; preds = %5, %1
  %13 = phi i64 [ %2, %1 ], [ %9, %5 ]
  %14 = phi ptr [ %0, %1 ], [ %8, %5 ]
  br label %15

15:                                               ; preds = %12, %35
  %16 = phi i64 [ %38, %35 ], [ %13, %12 ]
  %17 = phi ptr [ %37, %35 ], [ %14, %12 ]
  %18 = and i64 %16, 65535
  %19 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !17
  switch i32 %20, label %39 [
    i32 6, label %21
    i32 7, label %23
  ]

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.tree_exp, ptr %17, i64 0, i32 3
  br label %35

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.tree_exp, ptr %17, i64 0, i32 3
  %25 = getelementptr inbounds %struct.tree_exp, ptr %17, i64 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = tail call ptr @skip_simple_arithmetic(ptr noundef %26)
  %28 = tail call fastcc zeroext i8 @tree_invariant_p_1(ptr noundef %27), !range !104
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = load ptr, ptr %24, align 8, !tbaa !17
  %32 = tail call ptr @skip_simple_arithmetic(ptr noundef %31)
  %33 = tail call fastcc zeroext i8 @tree_invariant_p_1(ptr noundef %32), !range !104
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30, %23, %21
  %36 = phi ptr [ %22, %21 ], [ %24, %23 ], [ %25, %30 ]
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = load i64, ptr %37, align 8
  br label %15

39:                                               ; preds = %15, %30
  ret ptr %17
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc zeroext i8 @tree_invariant_p_1(ptr nocapture noundef readonly %0) unnamed_addr #18 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 131072
  %4 = icmp ne i64 %3, 0
  %5 = and i64 %2, 1114112
  %6 = icmp eq i64 %5, 1048576
  %7 = or i1 %4, %6
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = trunc i64 %2 to i16
  switch i16 %9, label %41 [
    i16 120, label %42
    i16 121, label %10
  ]

10:                                               ; preds = %8, %16
  %11 = phi ptr [ %13, %16 ], [ %0, %8 ]
  %12 = getelementptr inbounds %struct.tree_exp, ptr %11, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = load i64, ptr %13, align 8
  %15 = trunc i64 %14 to i16
  switch i16 %15, label %35 [
    i16 45, label %17
    i16 46, label %17
    i16 41, label %31
    i16 42, label %16
    i16 43, label %16
    i16 44, label %16
    i16 118, label %16
  ]

16:                                               ; preds = %10, %10, %10, %10, %31, %27
  br label %10, !llvm.loop !106

17:                                               ; preds = %10, %10
  %18 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = tail call ptr @skip_simple_arithmetic(ptr noundef %19)
  %21 = tail call fastcc zeroext i8 @tree_invariant_p_1(ptr noundef %20), !range !104
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %42

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = icmp eq ptr %29, null
  br i1 %30, label %16, label %42

31:                                               ; preds = %10
  %32 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = icmp eq ptr %33, null
  br i1 %34, label %16, label %42

35:                                               ; preds = %10
  %36 = and i64 %14, 65535
  %37 = add nsw i64 %36, -23
  %38 = icmp ult i64 %37, 6
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = tail call zeroext i8 @decl_address_invariant_p(ptr noundef nonnull %13), !range !104
  br label %42

41:                                               ; preds = %8
  br label %42

42:                                               ; preds = %31, %17, %23, %27, %35, %39, %8, %1, %41
  %43 = phi i8 [ 0, %41 ], [ 1, %1 ], [ 1, %8 ], [ 1, %35 ], [ %40, %39 ], [ 0, %27 ], [ 0, %23 ], [ 0, %17 ], [ 0, %31 ]
  ret i8 %43
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local zeroext i8 @contains_placeholder_p(ptr noundef readonly %0) local_unnamed_addr #18 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %152, label %3

3:                                                ; preds = %1
  %4 = load i64, ptr %0, align 8
  %5 = trunc i64 %4 to i32
  %6 = and i32 %5, 65535
  %7 = icmp eq i32 %6, 62
  br i1 %7, label %152, label %8

8:                                                ; preds = %3, %23
  %9 = phi i32 [ %27, %23 ], [ %6, %3 ]
  %10 = phi ptr [ %25, %23 ], [ %0, %3 ]
  %11 = phi i64 [ %24, %23 ], [ %4, %3 ]
  %12 = and i64 %11, 65535
  %13 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %12
  %14 = load i32, ptr %13, align 4, !tbaa !17
  switch i32 %14, label %152 [
    i32 4, label %15
    i32 0, label %29
    i32 6, label %50
    i32 7, label %50
    i32 5, label %50
    i32 10, label %50
    i32 9, label %120
  ]

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, null
  br i1 %18, label %152, label %19

19:                                               ; preds = %15
  %20 = load i64, ptr %17, align 8
  %21 = and i64 %20, 131072
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %152

23:                                               ; preds = %19, %46, %56, %86, %97, %116
  %24 = phi i64 [ %20, %19 ], [ %47, %46 ], [ %57, %56 ], [ %87, %86 ], [ %98, %97 ], [ %117, %116 ]
  %25 = phi ptr [ %17, %19 ], [ %44, %46 ], [ %54, %56 ], [ %84, %86 ], [ %95, %97 ], [ %114, %116 ]
  %26 = trunc i64 %24 to i32
  %27 = and i32 %26, 65535
  %28 = icmp eq i32 %27, 62
  br i1 %28, label %152, label %8

29:                                               ; preds = %8
  %30 = icmp eq i32 %9, 2
  br i1 %30, label %31, label %152

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.tree_list, ptr %10, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = icmp eq ptr %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = load i64, ptr %33, align 8
  %37 = and i64 %36, 131072
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %35
  %40 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %33), !range !104
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %152

42:                                               ; preds = %39, %35, %31
  %43 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = icmp eq ptr %44, null
  br i1 %45, label %152, label %46

46:                                               ; preds = %42
  %47 = load i64, ptr %44, align 8
  %48 = and i64 %47, 131072
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %23, label %152

50:                                               ; preds = %8, %8, %8, %8
  %51 = trunc i64 %11 to i16
  switch i16 %51, label %90 [
    i16 52, label %52
    i16 56, label %60
    i16 120, label %152
  ]

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = icmp eq ptr %54, null
  br i1 %55, label %152, label %56

56:                                               ; preds = %52
  %57 = load i64, ptr %54, align 8
  %58 = and i64 %57, 131072
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %23, label %152

60:                                               ; preds = %50
  %61 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = icmp eq ptr %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %60
  %65 = load i64, ptr %62, align 8
  %66 = and i64 %65, 131072
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %64
  %69 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %62), !range !104
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %152

71:                                               ; preds = %68, %64, %60
  %72 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 1
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = icmp eq ptr %73, null
  br i1 %74, label %82, label %75

75:                                               ; preds = %71
  %76 = load i64, ptr %73, align 8
  %77 = and i64 %76, 131072
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %73), !range !104
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %152

82:                                               ; preds = %79, %75, %71
  %83 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 1, i32 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !17
  %85 = icmp eq ptr %84, null
  br i1 %85, label %152, label %86

86:                                               ; preds = %82
  %87 = load i64, ptr %84, align 8
  %88 = and i64 %87, 131072
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %23, label %152

90:                                               ; preds = %50
  %91 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %12
  %92 = load i8, ptr %91, align 1, !tbaa !17
  switch i8 %92, label %152 [
    i8 1, label %93
    i8 2, label %101
  ]

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !17
  %96 = icmp eq ptr %95, null
  br i1 %96, label %152, label %97

97:                                               ; preds = %93
  %98 = load i64, ptr %95, align 8
  %99 = and i64 %98, 131072
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %23, label %152

101:                                              ; preds = %90
  %102 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = icmp eq ptr %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = load i64, ptr %103, align 8
  %107 = and i64 %106, 131072
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  %110 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %103), !range !104
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %152

112:                                              ; preds = %109, %105, %101
  %113 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 1
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  %115 = icmp eq ptr %114, null
  br i1 %115, label %152, label %116

116:                                              ; preds = %112
  %117 = load i64, ptr %114, align 8
  %118 = and i64 %117, 131072
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %23, label %152

120:                                              ; preds = %8
  %121 = icmp eq i32 %9, 59
  br i1 %121, label %122, label %152

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3
  %124 = load ptr, ptr %123, align 8, !tbaa !17
  %125 = getelementptr inbounds %struct.tree_int_cst, ptr %124, i64 0, i32 1
  %126 = load i64, ptr %125, align 8, !tbaa !17
  %127 = trunc i64 %126 to i32
  %128 = add nsw i32 %127, -3
  %129 = icmp sgt i32 %127, 3
  br i1 %129, label %130, label %152

130:                                              ; preds = %122
  %131 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3, i64 3
  %132 = load ptr, ptr %131, align 8, !tbaa !17
  %133 = icmp eq ptr %132, null
  br i1 %133, label %152, label %134

134:                                              ; preds = %130, %145
  %135 = phi ptr [ %149, %145 ], [ %132, %130 ]
  %136 = phi i32 [ %150, %145 ], [ 1, %130 ]
  %137 = load i64, ptr %135, align 8
  %138 = and i64 %137, 131072
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %134
  %141 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %135), !range !104
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %152

143:                                              ; preds = %134, %140
  %144 = icmp slt i32 %136, %128
  br i1 %144, label %145, label %152

145:                                              ; preds = %143
  %146 = add nuw nsw i32 %136, 3
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3, i64 %147
  %149 = load ptr, ptr %148, align 8, !tbaa !17
  %150 = add nuw nsw i32 %136, 1
  %151 = icmp eq ptr %149, null
  br i1 %151, label %152, label %134, !llvm.loop !107

152:                                              ; preds = %29, %8, %90, %109, %116, %112, %93, %97, %50, %68, %79, %86, %82, %52, %56, %39, %46, %42, %15, %19, %23, %143, %145, %140, %3, %122, %1, %130, %120
  %153 = phi i8 [ 0, %120 ], [ 0, %130 ], [ 0, %1 ], [ 0, %122 ], [ 1, %3 ], [ 0, %143 ], [ 0, %145 ], [ 1, %140 ], [ 1, %23 ], [ 0, %19 ], [ 0, %15 ], [ 0, %42 ], [ 0, %46 ], [ 1, %39 ], [ 0, %56 ], [ 0, %52 ], [ 0, %82 ], [ 0, %86 ], [ 1, %79 ], [ 1, %68 ], [ 0, %50 ], [ 0, %97 ], [ 0, %93 ], [ 0, %112 ], [ 0, %116 ], [ 1, %109 ], [ 0, %90 ], [ 0, %8 ], [ 0, %29 ]
  ret i8 %153
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build1_stat(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %4
  %6 = load i8, ptr %5, align 1, !tbaa !17
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3602, ptr noundef nonnull @.str.219) #29
  br label %9

9:                                                ; preds = %3, %8
  %10 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #29
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 0, ptr %11, align 8
  %12 = and i32 %0, 65535
  %13 = zext i32 %12 to i64
  store i64 %13, ptr %10, align 8
  %14 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 2
  store ptr %1, ptr %14, align 8, !tbaa !17
  %15 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 1
  store i32 0, ptr %15, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 3
  store ptr %2, ptr %16, align 8, !tbaa !17
  %17 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %13
  %18 = load i32, ptr %17, align 4, !tbaa !17
  %19 = shl i32 %18, 24
  %20 = add i32 %19, -50331649
  %21 = icmp ult i32 %20, 134217727
  br i1 %21, label %22, label %25

22:                                               ; preds = %9
  %23 = getelementptr inbounds %struct.tree_exp, ptr %10, i64 0, i32 2
  store ptr null, ptr %23, align 8, !tbaa !6
  %24 = icmp ne ptr %2, null
  br i1 %24, label %26, label %37

25:                                               ; preds = %9
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10311, ptr noundef nonnull @.str.219) #29
  unreachable

26:                                               ; preds = %22
  %27 = load i64, ptr %2, align 8
  %28 = and i64 %27, 65535
  %29 = add nsw i64 %28, -5
  %30 = icmp ult i64 %29, 18
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = and i64 %27, 65536
  %33 = or i64 %32, %13
  store i64 %33, ptr %10, align 8
  %34 = load i64, ptr %2, align 8
  %35 = and i64 %34, 1048576
  %36 = or i64 %33, %35
  store i64 %36, ptr %10, align 8
  br label %37

37:                                               ; preds = %31, %26, %22
  %38 = phi i64 [ %36, %31 ], [ %13, %26 ], [ %13, %22 ]
  %39 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %4
  %40 = load i32, ptr %39, align 4, !tbaa !17
  %41 = icmp eq i32 %40, 8
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = or i64 %38, 65536
  store i64 %43, ptr %10, align 8
  br label %77

44:                                               ; preds = %37
  switch i32 %0, label %52 [
    i32 129, label %45
    i32 49, label %48
    i32 48, label %48
    i32 47, label %48
    i32 121, label %50
  ]

45:                                               ; preds = %44
  %46 = and i64 %38, -1114113
  %47 = or i64 %46, 65536
  store i64 %47, ptr %10, align 8
  br label %77

48:                                               ; preds = %44, %44, %44
  %49 = and i64 %38, -1048577
  store i64 %49, ptr %10, align 8
  br label %77

50:                                               ; preds = %44
  br i1 %24, label %51, label %77

51:                                               ; preds = %50
  tail call void @recompute_tree_invariant_for_addr_expr(ptr noundef nonnull %10)
  br label %77

52:                                               ; preds = %44
  %53 = icmp eq i32 %40, 6
  %54 = icmp eq i32 %0, 118
  %55 = or i1 %54, %53
  %56 = and i1 %24, %55
  br i1 %56, label %57, label %67

57:                                               ; preds = %52
  %58 = load i64, ptr %2, align 8
  %59 = and i64 %58, 65535
  %60 = add nsw i64 %59, -5
  %61 = icmp ult i64 %60, 18
  %62 = and i64 %58, 131072
  %63 = icmp eq i64 %62, 0
  %64 = or i1 %63, %61
  br i1 %64, label %67, label %65

65:                                               ; preds = %57
  %66 = or i64 %38, 131072
  store i64 %66, ptr %10, align 8
  br label %67

67:                                               ; preds = %52, %65, %57
  %68 = phi i64 [ %38, %52 ], [ %66, %65 ], [ %38, %57 ]
  %69 = icmp eq i32 %40, 4
  %70 = and i1 %24, %69
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = load i64, ptr %2, align 8
  %73 = and i64 %72, 524288
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = or i64 %68, 524288
  store i64 %76, ptr %10, align 8
  br label %77

77:                                               ; preds = %45, %48, %51, %50, %75, %71, %67, %42
  ret ptr %10
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_node_structure(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i32
  %4 = and i32 %3, 65535
  %5 = tail call fastcc i32 @tree_node_structure_for_code(i32 noundef %4), !range !24
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @type_contains_placeholder_p(ptr nocapture noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 4
  %4 = lshr i32 %3, 14
  %5 = and i32 %4, 3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = trunc i32 %5 to i8
  %9 = add nsw i8 %8, -1
  br label %122

10:                                               ; preds = %1
  %11 = and i32 %3, -49153
  %12 = or i32 %11, 16384
  store i32 %12, ptr %2, align 4
  %13 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = load i64, ptr %14, align 8
  %18 = and i64 %17, 131072
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %14), !range !104
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %114

23:                                               ; preds = %20, %16, %10
  %24 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = load i64, ptr %25, align 8
  %29 = and i64 %28, 131072
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %25), !range !104
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %114

34:                                               ; preds = %31, %27, %23
  %35 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = tail call zeroext i8 @type_contains_placeholder_p(ptr noundef nonnull %36), !range !108
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %114

41:                                               ; preds = %38, %34
  %42 = load i64, ptr %0, align 8
  %43 = trunc i64 %42 to i16
  switch i16 %43, label %113 [
    i16 19, label %114
    i16 13, label %114
    i16 6, label %114
    i16 7, label %114
    i16 10, label %114
    i16 5, label %114
    i16 12, label %114
    i16 21, label %114
    i16 20, label %114
    i16 14, label %114
    i16 8, label %44
    i16 9, label %44
    i16 11, label %44
    i16 15, label %65
    i16 16, label %69
    i16 17, label %69
    i16 18, label %69
  ]

44:                                               ; preds = %41, %41, %41
  %45 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 13
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  %47 = icmp eq ptr %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = load i64, ptr %46, align 8
  %50 = and i64 %49, 131072
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %46), !range !104
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %114

55:                                               ; preds = %52, %48, %44
  %56 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = icmp eq ptr %57, null
  br i1 %58, label %114, label %59

59:                                               ; preds = %55
  %60 = load i64, ptr %57, align 8
  %61 = and i64 %60, 131072
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %114

63:                                               ; preds = %59
  %64 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %57), !range !104
  br label %114

65:                                               ; preds = %41
  %66 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = tail call zeroext i8 @type_contains_placeholder_p(ptr noundef %67), !range !108
  br label %114

69:                                               ; preds = %41, %41, %41
  %70 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = icmp eq ptr %71, null
  br i1 %72, label %114, label %73

73:                                               ; preds = %69, %109
  %74 = phi ptr [ %111, %109 ], [ %71, %69 ]
  %75 = load i64, ptr %74, align 8
  %76 = and i64 %75, 65535
  %77 = icmp eq i64 %76, 31
  br i1 %77, label %78, label %109

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.tree_field_decl, ptr %74, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = icmp eq ptr %80, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %78
  %83 = load i64, ptr %80, align 8
  %84 = and i64 %83, 131072
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %82
  %87 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %80), !range !104
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %114

89:                                               ; preds = %86, %82, %78
  %90 = load i64, ptr %0, align 8
  %91 = and i64 %90, 65535
  %92 = icmp eq i64 %91, 18
  br i1 %92, label %93, label %104

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.tree_field_decl, ptr %74, i64 0, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !17
  %96 = icmp eq ptr %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %93
  %98 = load i64, ptr %95, align 8
  %99 = and i64 %98, 131072
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = tail call zeroext i8 @contains_placeholder_p(ptr noundef nonnull %95), !range !104
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %114

104:                                              ; preds = %101, %97, %93, %89
  %105 = getelementptr inbounds %struct.tree_common, ptr %74, i64 0, i32 2
  %106 = load ptr, ptr %105, align 8, !tbaa !17
  %107 = tail call zeroext i8 @type_contains_placeholder_p(ptr noundef %106), !range !108
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %104, %73
  %110 = getelementptr inbounds %struct.tree_common, ptr %74, i64 0, i32 1
  %111 = load ptr, ptr %110, align 8, !tbaa !17
  %112 = icmp eq ptr %111, null
  br i1 %112, label %114, label %73, !llvm.loop !109

113:                                              ; preds = %41
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 2848, ptr noundef nonnull @.str.219) #29
  br label %114

114:                                              ; preds = %104, %101, %86, %109, %69, %20, %31, %38, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %52, %55, %59, %63, %65, %113
  %115 = phi i8 [ 0, %113 ], [ %68, %65 ], [ 1, %38 ], [ 1, %31 ], [ 1, %20 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 0, %41 ], [ 1, %52 ], [ 0, %59 ], [ 0, %55 ], [ %64, %63 ], [ 0, %69 ], [ 1, %104 ], [ 1, %101 ], [ 1, %86 ], [ 0, %109 ]
  %116 = add nuw nsw i8 %115, 1
  %117 = load i32, ptr %2, align 4
  %118 = zext i8 %116 to i32
  %119 = shl nuw nsw i32 %118, 14
  %120 = and i32 %117, -49153
  %121 = or i32 %119, %120
  store i32 %121, ptr %2, align 4
  br label %122

122:                                              ; preds = %114, %7
  %123 = phi i8 [ %9, %7 ], [ %115, %114 ]
  ret i8 %123
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @find_placeholder_in_expr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  br label %4

4:                                                ; preds = %25, %2
  %5 = phi i64 [ %3, %2 ], [ %26, %25 ]
  %6 = phi ptr [ %0, %2 ], [ %27, %25 ]
  %7 = trunc i64 %5 to i16
  switch i16 %7, label %89 [
    i16 2, label %8
    i16 41, label %28
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = load i64, ptr %10, align 8
  %14 = and i64 %13, 131072
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @find_placeholder_in_expr(ptr noundef nonnull %10, ptr noundef %1)
  br label %17

17:                                               ; preds = %8, %12, %16
  %18 = getelementptr inbounds %struct.tree_list, ptr %6, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %161, label %21

21:                                               ; preds = %17
  %22 = load i64, ptr %19, align 8
  %23 = and i64 %22, 131072
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %161

25:                                               ; preds = %21, %85
  %26 = phi i64 [ %22, %21 ], [ %86, %85 ]
  %27 = phi ptr [ %19, %21 ], [ %83, %85 ]
  br label %4

28:                                               ; preds = %4
  %29 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi ptr [ %29, %28 ], [ %38, %30 ]
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 65535
  %35 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !17
  %37 = icmp eq i32 %36, 4
  %38 = getelementptr inbounds %struct.tree_exp, ptr %32, i64 0, i32 3
  br i1 %37, label %30, label %39, !llvm.loop !110

39:                                               ; preds = %30
  %40 = icmp eq i64 %34, 62
  br i1 %40, label %41, label %82

41:                                               ; preds = %39
  %42 = load ptr, ptr %1, align 8, !tbaa !6
  %43 = icmp eq ptr %42, null
  br i1 %43, label %72, label %48

44:                                               ; preds = %54
  %45 = add nuw nsw i64 %49, 1
  %46 = load ptr, ptr %1, align 8, !tbaa !6
  %47 = icmp eq ptr %46, null
  br i1 %47, label %72, label %48, !llvm.loop !111

48:                                               ; preds = %41, %44
  %49 = phi i64 [ %45, %44 ], [ 0, %41 ]
  %50 = phi ptr [ %46, %44 ], [ %42, %41 ]
  %51 = load i32, ptr %50, align 8, !tbaa !61
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %49, %52
  br i1 %53, label %54, label %66

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.VEC_tree_base, ptr %50, i64 0, i32 2, i64 %49
  %56 = load ptr, ptr %55, align 8, !tbaa !6
  %57 = tail call i32 @simple_cst_equal(ptr noundef %56, ptr noundef nonnull %6), !range !56
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %44

59:                                               ; preds = %54
  %60 = icmp eq ptr %56, null
  br i1 %60, label %61, label %161

61:                                               ; preds = %59
  %62 = load ptr, ptr %1, align 8, !tbaa !6
  %63 = icmp eq ptr %62, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %61
  %65 = load i32, ptr %62, align 8, !tbaa !61
  br label %66

66:                                               ; preds = %48, %64
  %67 = phi i32 [ %65, %64 ], [ %51, %48 ]
  %68 = phi ptr [ %62, %64 ], [ %50, %48 ]
  %69 = getelementptr inbounds %struct.VEC_tree_base, ptr %68, i64 0, i32 1
  %70 = load i32, ptr %69, align 4, !tbaa !87
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %72, label %76

72:                                               ; preds = %44, %66, %61, %41
  %73 = phi ptr [ %68, %66 ], [ null, %61 ], [ null, %41 ], [ null, %44 ]
  %74 = tail call ptr @vec_heap_p_reserve(ptr noundef %73, i32 noundef 1) #29
  store ptr %74, ptr %1, align 8, !tbaa !6
  %75 = load i32, ptr %74, align 8, !tbaa !61
  br label %76

76:                                               ; preds = %72, %66
  %77 = phi i32 [ %67, %66 ], [ %75, %72 ]
  %78 = phi ptr [ %68, %66 ], [ %74, %72 ]
  %79 = add i32 %77, 1
  store i32 %79, ptr %78, align 8, !tbaa !61
  %80 = zext i32 %77 to i64
  %81 = getelementptr inbounds %struct.VEC_tree_base, ptr %78, i64 0, i32 2, i64 %80
  store ptr %6, ptr %81, align 8, !tbaa !6
  br label %161

82:                                               ; preds = %39
  %83 = load ptr, ptr %29, align 8, !tbaa !17
  %84 = icmp eq ptr %83, null
  br i1 %84, label %161, label %85

85:                                               ; preds = %82
  %86 = load i64, ptr %83, align 8
  %87 = and i64 %86, 131072
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %25, label %161

89:                                               ; preds = %4
  %90 = and i64 %5, 65535
  %91 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !17
  switch i32 %92, label %160 [
    i32 1, label %161
    i32 3, label %95
    i32 10, label %99
    i32 0, label %108
    i32 6, label %108
    i32 7, label %108
    i32 5, label %108
    i32 4, label %108
    i32 9, label %93
  ]

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  br label %127

95:                                               ; preds = %89
  %96 = and i64 %5, 67108864
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %161

98:                                               ; preds = %95
  tail call fastcc void @push_without_duplicates(ptr noundef nonnull %6, ptr noundef %1)
  br label %161

99:                                               ; preds = %89
  %100 = icmp eq i64 %90, 121
  br i1 %100, label %101, label %108

101:                                              ; preds = %99
  %102 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = load i64, ptr %103, align 8
  %105 = and i64 %104, 65535
  %106 = icmp eq i64 %105, 62
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  tail call fastcc void @push_without_duplicates(ptr noundef nonnull %6, ptr noundef %1)
  br label %161

108:                                              ; preds = %99, %101, %89, %89, %89, %89, %89
  %109 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %90
  %110 = load i8, ptr %109, align 1, !tbaa !17
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %161, label %112

112:                                              ; preds = %108
  %113 = zext i8 %110 to i64
  br label %114

114:                                              ; preds = %112, %124
  %115 = phi i64 [ 0, %112 ], [ %125, %124 ]
  %116 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3, i64 %115
  %117 = load ptr, ptr %116, align 8, !tbaa !17
  %118 = icmp eq ptr %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  %120 = load i64, ptr %117, align 8
  %121 = and i64 %120, 131072
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %119
  tail call void @find_placeholder_in_expr(ptr noundef nonnull %117, ptr noundef %1)
  br label %124

124:                                              ; preds = %114, %119, %123
  %125 = add nuw nsw i64 %115, 1
  %126 = icmp eq i64 %125, %113
  br i1 %126, label %161, label %114, !llvm.loop !112

127:                                              ; preds = %93, %157
  %128 = phi i64 [ %5, %93 ], [ %158, %157 ]
  %129 = phi i64 [ 1, %93 ], [ %159, %157 ]
  %130 = and i64 %128, 65535
  %131 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !17
  %133 = icmp eq i32 %132, 9
  br i1 %133, label %134, label %138

134:                                              ; preds = %127
  %135 = load ptr, ptr %94, align 8, !tbaa !17
  %136 = getelementptr inbounds %struct.tree_int_cst, ptr %135, i64 0, i32 1
  %137 = load i64, ptr %136, align 8, !tbaa !17
  br label %142

138:                                              ; preds = %127
  %139 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %130
  %140 = load i8, ptr %139, align 1, !tbaa !17
  %141 = zext i8 %140 to i64
  br label %142

142:                                              ; preds = %134, %138
  %143 = phi i64 [ %137, %134 ], [ %141, %138 ]
  %144 = shl i64 %143, 32
  %145 = ashr exact i64 %144, 32
  %146 = icmp slt i64 %129, %145
  br i1 %146, label %147, label %161

147:                                              ; preds = %142
  %148 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3, i64 %129
  %149 = load ptr, ptr %148, align 8, !tbaa !17
  %150 = icmp eq ptr %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %147
  %152 = load i64, ptr %149, align 8
  %153 = and i64 %152, 131072
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  tail call void @find_placeholder_in_expr(ptr noundef nonnull %149, ptr noundef %1)
  %156 = load i64, ptr %6, align 8
  br label %157

157:                                              ; preds = %147, %151, %155
  %158 = phi i64 [ %128, %147 ], [ %128, %151 ], [ %156, %155 ]
  %159 = add nuw nsw i64 %129, 1
  br label %127, !llvm.loop !113

160:                                              ; preds = %89
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 2964, ptr noundef nonnull @.str.219) #29
  br label %161

161:                                              ; preds = %82, %85, %17, %21, %142, %124, %108, %76, %59, %95, %98, %160, %107, %89
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @push_without_duplicates(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #9 {
  %3 = load ptr, ptr %1, align 8, !tbaa !6
  %4 = icmp eq ptr %3, null
  br i1 %4, label %33, label %9

5:                                                ; preds = %15
  %6 = add nuw nsw i64 %10, 1
  %7 = load ptr, ptr %1, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %33, label %9, !llvm.loop !111

9:                                                ; preds = %2, %5
  %10 = phi i64 [ %6, %5 ], [ 0, %2 ]
  %11 = phi ptr [ %7, %5 ], [ %3, %2 ]
  %12 = load i32, ptr %11, align 8, !tbaa !61
  %13 = zext i32 %12 to i64
  %14 = icmp ult i64 %10, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.VEC_tree_base, ptr %11, i64 0, i32 2, i64 %10
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = tail call i32 @simple_cst_equal(ptr noundef %17, ptr noundef %0), !range !56
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %5

20:                                               ; preds = %15
  %21 = icmp eq ptr %17, null
  br i1 %21, label %22, label %43

22:                                               ; preds = %20
  %23 = load ptr, ptr %1, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = load i32, ptr %23, align 8, !tbaa !61
  br label %27

27:                                               ; preds = %9, %25
  %28 = phi i32 [ %26, %25 ], [ %12, %9 ]
  %29 = phi ptr [ %23, %25 ], [ %11, %9 ]
  %30 = getelementptr inbounds %struct.VEC_tree_base, ptr %29, i64 0, i32 1
  %31 = load i32, ptr %30, align 4, !tbaa !87
  %32 = icmp eq i32 %31, %28
  br i1 %32, label %33, label %37

33:                                               ; preds = %5, %2, %27, %22
  %34 = phi ptr [ %29, %27 ], [ null, %22 ], [ null, %2 ], [ null, %5 ]
  %35 = tail call ptr @vec_heap_p_reserve(ptr noundef %34, i32 noundef 1) #29
  store ptr %35, ptr %1, align 8, !tbaa !6
  %36 = load i32, ptr %35, align 8, !tbaa !61
  br label %37

37:                                               ; preds = %27, %33
  %38 = phi i32 [ %28, %27 ], [ %36, %33 ]
  %39 = phi ptr [ %29, %27 ], [ %35, %33 ]
  %40 = add i32 %38, 1
  store i32 %40, ptr %39, align 8, !tbaa !61
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds %struct.VEC_tree_base, ptr %39, i64 0, i32 2, i64 %41
  store ptr %0, ptr %42, align 8, !tbaa !6
  br label %43

43:                                               ; preds = %37, %20
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @simple_cst_equal(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %227, label %4

4:                                                ; preds = %2, %34
  %5 = phi ptr [ %38, %34 ], [ %0, %2 ]
  %6 = phi ptr [ %36, %34 ], [ %1, %2 ]
  %7 = icmp eq ptr %5, null
  br i1 %7, label %227, label %8

8:                                                ; preds = %4, %41
  %9 = phi ptr [ %43, %41 ], [ %6, %4 ]
  %10 = icmp eq ptr %9, null
  br i1 %10, label %227, label %11

11:                                               ; preds = %8
  %12 = load i64, ptr %5, align 8
  %13 = trunc i64 %12 to i32
  %14 = and i32 %13, 65535
  %15 = load i64, ptr %9, align 8
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 65535
  %18 = icmp eq i32 %14, 113
  %19 = and i32 %13, 65534
  %20 = icmp eq i32 %19, 116
  %21 = or i1 %20, %18
  %22 = icmp eq i32 %17, 113
  %23 = and i32 %16, 65534
  %24 = icmp eq i32 %23, 116
  %25 = or i1 %24, %22
  br i1 %21, label %26, label %40

26:                                               ; preds = %11
  %27 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  br i1 %25, label %28, label %34

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  br label %30

30:                                               ; preds = %242, %224, %121, %28
  %31 = phi ptr [ %29, %28 ], [ %123, %121 ], [ %226, %224 ], [ %243, %242 ]
  %32 = phi ptr [ %27, %28 ], [ %122, %121 ], [ %225, %224 ], [ %244, %242 ]
  %33 = load ptr, ptr %31, align 8, !tbaa !17
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi ptr [ %27, %26 ], [ %32, %30 ]
  %36 = phi ptr [ %9, %26 ], [ %33, %30 ]
  %37 = load ptr, ptr %35, align 8, !tbaa !17
  %38 = freeze ptr %37
  %39 = icmp eq ptr %38, %36
  br i1 %39, label %227, label %4

40:                                               ; preds = %11
  br i1 %25, label %41, label %45

41:                                               ; preds = %40
  %42 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = icmp eq ptr %5, %43
  br i1 %44, label %227, label %8

45:                                               ; preds = %40
  %46 = icmp eq i32 %14, %17
  br i1 %46, label %47, label %227

47:                                               ; preds = %45
  %48 = trunc i64 %12 to i16
  switch i16 %48, label %245 [
    i16 23, label %49
    i16 24, label %62
    i16 25, label %69
    i16 28, label %76
    i16 51, label %89
    i16 120, label %121
    i16 59, label %124
    i16 55, label %187
    i16 60, label %229
    i16 41, label %236
    i16 32, label %227
    i16 34, label %227
    i16 33, label %227
    i16 29, label %227
  ]

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.tree_int_cst, ptr %5, i64 0, i32 1
  %51 = load i64, ptr %50, align 8, !tbaa !17
  %52 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1
  %53 = load i64, ptr %52, align 8, !tbaa !17
  %54 = icmp eq i64 %51, %53
  br i1 %54, label %55, label %227

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.tree_int_cst, ptr %5, i64 0, i32 1, i32 1
  %57 = load i64, ptr %56, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1, i32 1
  %59 = load i64, ptr %58, align 8, !tbaa !17
  %60 = icmp eq i64 %57, %59
  %61 = zext i1 %60 to i32
  br label %227

62:                                               ; preds = %47
  %63 = getelementptr inbounds %struct.tree_real_cst, ptr %5, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = getelementptr inbounds %struct.tree_real_cst, ptr %9, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = tail call zeroext i8 @real_identical(ptr noundef %64, ptr noundef %66) #29
  %68 = zext i8 %67 to i32
  br label %227

69:                                               ; preds = %47
  %70 = getelementptr inbounds %struct.tree_fixed_cst, ptr %5, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = getelementptr inbounds %struct.tree_fixed_cst, ptr %9, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = tail call zeroext i8 @fixed_identical(ptr noundef %71, ptr noundef %73) #29
  %75 = zext i8 %74 to i32
  br label %227

76:                                               ; preds = %47
  %77 = getelementptr inbounds %struct.tree_string, ptr %5, i64 0, i32 1
  %78 = load i32, ptr %77, align 8, !tbaa !17
  %79 = getelementptr inbounds %struct.tree_string, ptr %9, i64 0, i32 1
  %80 = load i32, ptr %79, align 8, !tbaa !17
  %81 = icmp eq i32 %78, %80
  br i1 %81, label %82, label %227

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.tree_string, ptr %5, i64 0, i32 2
  %84 = getelementptr inbounds %struct.tree_string, ptr %9, i64 0, i32 2
  %85 = sext i32 %78 to i64
  %86 = tail call i32 @bcmp(ptr nonnull %83, ptr nonnull %84, i64 %85)
  %87 = icmp eq i32 %86, 0
  %88 = zext i1 %87 to i32
  br label %227

89:                                               ; preds = %47
  %90 = getelementptr inbounds %struct.tree_constructor, ptr %5, i64 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = getelementptr inbounds %struct.tree_constructor, ptr %9, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  %94 = icmp eq ptr %91, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %89
  %96 = load i32, ptr %91, align 8, !tbaa !74
  br label %97

97:                                               ; preds = %89, %95
  %98 = phi i32 [ %96, %95 ], [ 0, %89 ]
  %99 = icmp eq ptr %93, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = load i32, ptr %93, align 8, !tbaa !74
  br label %102

102:                                              ; preds = %97, %100
  %103 = phi i32 [ %101, %100 ], [ 0, %97 ]
  %104 = icmp ne i32 %98, %103
  %105 = or i1 %104, %94
  %106 = xor i1 %104, true
  %107 = zext i1 %106 to i32
  br i1 %105, label %227, label %108

108:                                              ; preds = %102, %113
  %109 = phi i64 [ %120, %113 ], [ 0, %102 ]
  %110 = load i32, ptr %91, align 8, !tbaa !74
  %111 = zext i32 %110 to i64
  %112 = icmp ult i64 %109, %111
  br i1 %112, label %113, label %227

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %91, i64 0, i32 2, i64 %109, i32 1
  %115 = load ptr, ptr %114, align 8, !tbaa !76
  %116 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %93, i64 0, i32 2, i64 %109, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !76
  %118 = tail call i32 @simple_cst_equal(ptr noundef %115, ptr noundef %117), !range !56
  %119 = icmp eq i32 %118, 0
  %120 = add nuw nsw i64 %109, 1
  br i1 %119, label %227, label %108, !llvm.loop !114

121:                                              ; preds = %47
  %122 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %123 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  br label %30

124:                                              ; preds = %47
  %125 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %126 = load ptr, ptr %125, align 8, !tbaa !17
  %127 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1
  %128 = load ptr, ptr %127, align 8, !tbaa !17
  %129 = tail call i32 @simple_cst_equal(ptr noundef %126, ptr noundef %128), !range !56
  %130 = icmp slt i32 %129, 1
  br i1 %130, label %227, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  %133 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %134 = load ptr, ptr %133, align 8, !tbaa !17
  %135 = getelementptr inbounds %struct.tree_int_cst, ptr %134, i64 0, i32 1
  %136 = load i64, ptr %135, align 8, !tbaa !17
  %137 = trunc i64 %136 to i32
  %138 = load ptr, ptr %132, align 8, !tbaa !17
  %139 = getelementptr inbounds %struct.tree_int_cst, ptr %138, i64 0, i32 1
  %140 = load i64, ptr %139, align 8, !tbaa !17
  %141 = trunc i64 %140 to i32
  %142 = icmp eq i32 %137, %141
  br i1 %142, label %143, label %227

143:                                              ; preds = %131
  %144 = add nsw i32 %137, -3
  %145 = icmp sgt i32 %137, 3
  br i1 %145, label %146, label %182

146:                                              ; preds = %143
  %147 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3, i64 3
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3, i64 3
  %150 = load ptr, ptr %149, align 8, !tbaa !17
  %151 = icmp ne ptr %148, null
  %152 = icmp ne ptr %150, null
  %153 = select i1 %151, i1 %152, i1 false
  br i1 %153, label %154, label %182

154:                                              ; preds = %146, %173
  %155 = phi ptr [ %177, %173 ], [ %150, %146 ]
  %156 = phi ptr [ %171, %173 ], [ %148, %146 ]
  %157 = phi i32 [ %170, %173 ], [ 1, %146 ]
  %158 = phi i32 [ %178, %173 ], [ 1, %146 ]
  %159 = tail call i32 @simple_cst_equal(ptr noundef nonnull %156, ptr noundef nonnull %155), !range !56
  %160 = icmp slt i32 %159, 1
  br i1 %160, label %227, label %161

161:                                              ; preds = %154
  %162 = icmp slt i32 %157, %144
  br i1 %162, label %163, label %169

163:                                              ; preds = %161
  %164 = add nsw i32 %157, 3
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3, i64 %165
  %167 = load ptr, ptr %166, align 8, !tbaa !17
  %168 = add nsw i32 %157, 1
  br label %169

169:                                              ; preds = %161, %163
  %170 = phi i32 [ %168, %163 ], [ %157, %161 ]
  %171 = phi ptr [ %167, %163 ], [ null, %161 ]
  %172 = icmp slt i32 %158, %144
  br i1 %172, label %173, label %182

173:                                              ; preds = %169
  %174 = add nuw nsw i32 %158, 3
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3, i64 %175
  %177 = load ptr, ptr %176, align 8, !tbaa !17
  %178 = add nuw nsw i32 %158, 1
  %179 = icmp ne ptr %171, null
  %180 = icmp ne ptr %177, null
  %181 = select i1 %179, i1 %180, i1 false
  br i1 %181, label %154, label %182, !llvm.loop !115

182:                                              ; preds = %169, %173, %143, %146
  %183 = phi ptr [ %148, %146 ], [ null, %143 ], [ %171, %173 ], [ %171, %169 ]
  %184 = phi ptr [ %150, %146 ], [ null, %143 ], [ null, %169 ], [ %177, %173 ]
  %185 = icmp eq ptr %183, %184
  %186 = zext i1 %185 to i32
  br label %227

187:                                              ; preds = %47
  %188 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %189 = load ptr, ptr %188, align 8, !tbaa !17
  %190 = load i64, ptr %189, align 8
  %191 = and i64 %190, 65535
  %192 = icmp eq i64 %191, 32
  br i1 %192, label %193, label %204

193:                                              ; preds = %187
  %194 = getelementptr inbounds %struct.tree_decl_minimal, ptr %189, i64 0, i32 3
  %195 = load ptr, ptr %194, align 8, !tbaa !17
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %204

197:                                              ; preds = %193
  %198 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !tbaa !17
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %224, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %189, i64 0, i32 1
  %202 = load ptr, ptr %201, align 8, !tbaa !17
  %203 = icmp eq ptr %202, null
  br i1 %203, label %224, label %204

204:                                              ; preds = %200, %193, %187
  %205 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  %206 = load ptr, ptr %205, align 8, !tbaa !17
  %207 = load i64, ptr %206, align 8
  %208 = and i64 %207, 65535
  %209 = icmp eq i64 %208, 32
  br i1 %209, label %210, label %221

210:                                              ; preds = %204
  %211 = getelementptr inbounds %struct.tree_decl_minimal, ptr %206, i64 0, i32 3
  %212 = load ptr, ptr %211, align 8, !tbaa !17
  %213 = icmp eq ptr %212, null
  br i1 %213, label %214, label %221

214:                                              ; preds = %210
  %215 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !tbaa !17
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %224, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %206, i64 0, i32 1
  %219 = load ptr, ptr %218, align 8, !tbaa !17
  %220 = icmp eq ptr %219, null
  br i1 %220, label %224, label %221

221:                                              ; preds = %204, %210, %217
  %222 = tail call i32 @simple_cst_equal(ptr noundef nonnull %189, ptr noundef nonnull %206), !range !56
  %223 = icmp slt i32 %222, 1
  br i1 %223, label %227, label %224

224:                                              ; preds = %197, %200, %214, %217, %221
  %225 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %226 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1
  br label %30

227:                                              ; preds = %182, %247, %245, %131, %124, %76, %82, %49, %55, %69, %62, %251, %102, %2, %257, %108, %113, %154, %41, %8, %4, %34, %45, %221, %236, %47, %47, %47, %47, %229
  %228 = phi i32 [ %235, %229 ], [ %75, %69 ], [ %68, %62 ], [ 0, %49 ], [ %61, %55 ], [ 0, %76 ], [ %88, %82 ], [ %107, %102 ], [ %129, %124 ], [ 0, %131 ], [ -1, %245 ], [ -1, %247 ], [ %186, %182 ], [ 1, %251 ], [ 1, %2 ], [ %263, %257 ], [ 1, %108 ], [ 0, %113 ], [ %159, %154 ], [ 1, %41 ], [ 0, %8 ], [ 0, %4 ], [ 1, %34 ], [ 0, %45 ], [ %222, %221 ], [ 0, %236 ], [ 0, %47 ], [ 0, %47 ], [ 0, %47 ], [ 0, %47 ]
  ret i32 %228

229:                                              ; preds = %47
  %230 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %231 = load ptr, ptr %230, align 8, !tbaa !17
  %232 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  %233 = load ptr, ptr %232, align 8, !tbaa !17
  %234 = tail call i32 @simple_cst_equal(ptr noundef %231, ptr noundef %233), !range !56
  %235 = tail call i32 @llvm.smin.i32(i32 %234, i32 1)
  br label %227

236:                                              ; preds = %47
  %237 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  %239 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1
  %240 = load ptr, ptr %239, align 8, !tbaa !17
  %241 = icmp eq ptr %238, %240
  br i1 %241, label %242, label %227

242:                                              ; preds = %236
  %243 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  %244 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  br label %30

245:                                              ; preds = %47
  %246 = icmp ugt i32 %14, 187
  br i1 %246, label %227, label %247

247:                                              ; preds = %245
  %248 = and i64 %12, 65535
  %249 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %248
  %250 = load i32, ptr %249, align 4, !tbaa !17
  switch i32 %250, label %227 [
    i32 6, label %251
    i32 7, label %251
    i32 5, label %251
    i32 10, label %251
    i32 4, label %251
    i32 8, label %251
  ]

251:                                              ; preds = %247, %247, %247, %247, %247, %247
  %252 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %248
  %253 = load i8, ptr %252, align 1, !tbaa !17
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %227, label %255

255:                                              ; preds = %251
  %256 = zext i8 %253 to i64
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ 0, %255 ], [ %265, %257 ]
  %259 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3, i64 %258
  %260 = load ptr, ptr %259, align 8, !tbaa !17
  %261 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3, i64 %258
  %262 = load ptr, ptr %261, align 8, !tbaa !17
  %263 = tail call i32 @simple_cst_equal(ptr noundef %260, ptr noundef %262), !range !56
  %264 = icmp slt i32 %263, 1
  %265 = add nuw nsw i64 %258, 1
  %266 = icmp eq i64 %265, %256
  %267 = select i1 %264, i1 true, i1 %266
  br i1 %267, label %227, label %257, !llvm.loop !116
}

declare ptr @vec_heap_p_reserve(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @substitute_in_expr(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = load i64, ptr %0, align 8
  br label %5

5:                                                ; preds = %262, %3
  %6 = phi i64 [ %4, %3 ], [ %263, %262 ]
  %7 = phi ptr [ %0, %3 ], [ %260, %262 ]
  %8 = trunc i64 %6 to i32
  %9 = and i32 %8, 65535
  %10 = trunc i64 %6 to i16
  switch i16 %10, label %84 [
    i16 2, label %11
    i16 41, label %47
  ]

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i64, ptr %13, align 8
  %17 = and i64 %16, 131072
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = tail call ptr @substitute_in_expr(ptr noundef nonnull %13, ptr noundef %1, ptr noundef %2)
  br label %21

21:                                               ; preds = %11, %15, %19
  %22 = phi ptr [ %20, %19 ], [ %13, %15 ], [ null, %11 ]
  %23 = getelementptr inbounds %struct.tree_list, ptr %7, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = icmp eq ptr %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %21
  %27 = load i64, ptr %24, align 8
  %28 = and i64 %27, 131072
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = tail call ptr @substitute_in_expr(ptr noundef nonnull %24, ptr noundef %1, ptr noundef %2)
  br label %32

32:                                               ; preds = %21, %26, %30
  %33 = phi ptr [ %31, %30 ], [ %24, %26 ], [ null, %21 ]
  %34 = load ptr, ptr %12, align 8, !tbaa !17
  %35 = icmp eq ptr %22, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = load ptr, ptr %23, align 8, !tbaa !17
  %38 = icmp eq ptr %33, %37
  br i1 %38, label %325, label %39

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %struct.tree_list, ptr %7, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %43 = getelementptr inbounds i8, ptr %42, i64 16
  store i64 0, ptr %43, align 8
  store i64 2, ptr %42, align 8
  %44 = getelementptr inbounds %struct.tree_common, ptr %42, i64 0, i32 1
  store ptr %22, ptr %44, align 8, !tbaa !17
  %45 = getelementptr inbounds %struct.tree_list, ptr %42, i64 0, i32 1
  store ptr %41, ptr %45, align 8, !tbaa !17
  %46 = getelementptr inbounds %struct.tree_list, ptr %42, i64 0, i32 2
  store ptr %33, ptr %46, align 8, !tbaa !17
  br label %325

47:                                               ; preds = %5
  %48 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi ptr [ %48, %47 ], [ %57, %49 ]
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = load i64, ptr %51, align 8
  %53 = and i64 %52, 65535
  %54 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !17
  %56 = icmp eq i32 %55, 4
  %57 = getelementptr inbounds %struct.tree_exp, ptr %51, i64 0, i32 3
  br i1 %56, label %49, label %58, !llvm.loop !117

58:                                               ; preds = %49
  %59 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 1
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = icmp eq i64 %53, 62
  %62 = icmp eq ptr %60, %1
  %63 = select i1 %61, i1 %62, i1 false
  br i1 %63, label %325, label %64

64:                                               ; preds = %58
  br i1 %61, label %65, label %69

65:                                               ; preds = %64
  %66 = getelementptr inbounds %struct.tree_common, ptr %51, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = icmp eq ptr %67, null
  br i1 %68, label %325, label %69

69:                                               ; preds = %65, %64
  %70 = load ptr, ptr %48, align 8, !tbaa !17
  %71 = icmp eq ptr %70, null
  br i1 %71, label %325, label %72

72:                                               ; preds = %69
  %73 = load i64, ptr %70, align 8
  %74 = and i64 %73, 131072
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %325

76:                                               ; preds = %72
  %77 = tail call ptr @substitute_in_expr(ptr noundef nonnull %70, ptr noundef %1, ptr noundef %2)
  %78 = load ptr, ptr %48, align 8, !tbaa !17
  %79 = icmp eq ptr %77, %78
  br i1 %79, label %325, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %82 = load ptr, ptr %81, align 8, !tbaa !17
  %83 = tail call ptr @fold_build3_stat_loc(i32 noundef 0, i32 noundef 41, ptr noundef %82, ptr noundef %77, ptr noundef %60, ptr noundef null) #29
  br label %319

84:                                               ; preds = %5
  %85 = and i64 %6, 65535
  %86 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %85
  %87 = load i32, ptr %86, align 4, !tbaa !17
  switch i32 %87, label %318 [
    i32 1, label %325
    i32 3, label %88
    i32 10, label %91
    i32 0, label %93
    i32 6, label %93
    i32 7, label %93
    i32 5, label %93
    i32 4, label %93
    i32 9, label %252
  ]

88:                                               ; preds = %84
  %89 = icmp eq ptr %7, %1
  %90 = select i1 %89, ptr %2, ptr %7
  br label %325

91:                                               ; preds = %84
  %92 = icmp eq ptr %7, %1
  br i1 %92, label %325, label %93

93:                                               ; preds = %84, %84, %84, %84, %84, %91
  %94 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %85
  %95 = load i8, ptr %94, align 1, !tbaa !17
  switch i8 %95, label %251 [
    i8 0, label %325
    i8 1, label %96
    i8 2, label %112
    i8 3, label %144
    i8 4, label %190
  ]

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = icmp eq ptr %98, null
  br i1 %99, label %325, label %100

100:                                              ; preds = %96
  %101 = load i64, ptr %98, align 8
  %102 = and i64 %101, 131072
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %325

104:                                              ; preds = %100
  %105 = tail call ptr @substitute_in_expr(ptr noundef nonnull %98, ptr noundef %1, ptr noundef %2)
  %106 = load ptr, ptr %97, align 8, !tbaa !17
  %107 = icmp eq ptr %105, %106
  br i1 %107, label %325, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %110 = load ptr, ptr %109, align 8, !tbaa !17
  %111 = tail call ptr @fold_build1_stat_loc(i32 noundef 0, i32 noundef %9, ptr noundef %110, ptr noundef %105) #29
  br label %319

112:                                              ; preds = %93
  %113 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  %115 = icmp eq ptr %114, null
  br i1 %115, label %122, label %116

116:                                              ; preds = %112
  %117 = load i64, ptr %114, align 8
  %118 = and i64 %117, 131072
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = tail call ptr @substitute_in_expr(ptr noundef nonnull %114, ptr noundef %1, ptr noundef %2)
  br label %122

122:                                              ; preds = %112, %116, %120
  %123 = phi ptr [ %121, %120 ], [ %114, %116 ], [ null, %112 ]
  %124 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 1
  %125 = load ptr, ptr %124, align 8, !tbaa !17
  %126 = icmp eq ptr %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %122
  %128 = load i64, ptr %125, align 8
  %129 = and i64 %128, 131072
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %127
  %132 = tail call ptr @substitute_in_expr(ptr noundef nonnull %125, ptr noundef %1, ptr noundef %2)
  br label %133

133:                                              ; preds = %122, %127, %131
  %134 = phi ptr [ %132, %131 ], [ %125, %127 ], [ null, %122 ]
  %135 = load ptr, ptr %113, align 8, !tbaa !17
  %136 = icmp eq ptr %123, %135
  br i1 %136, label %137, label %140

137:                                              ; preds = %133
  %138 = load ptr, ptr %124, align 8, !tbaa !17
  %139 = icmp eq ptr %134, %138
  br i1 %139, label %325, label %140

140:                                              ; preds = %137, %133
  %141 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  %143 = tail call ptr @fold_build2_stat_loc(i32 noundef 0, i32 noundef %9, ptr noundef %142, ptr noundef %123, ptr noundef %134) #29
  br label %319

144:                                              ; preds = %93
  %145 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  %146 = load ptr, ptr %145, align 8, !tbaa !17
  %147 = icmp eq ptr %146, null
  br i1 %147, label %154, label %148

148:                                              ; preds = %144
  %149 = load i64, ptr %146, align 8
  %150 = and i64 %149, 131072
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  %153 = tail call ptr @substitute_in_expr(ptr noundef nonnull %146, ptr noundef %1, ptr noundef %2)
  br label %154

154:                                              ; preds = %144, %148, %152
  %155 = phi ptr [ %153, %152 ], [ %146, %148 ], [ null, %144 ]
  %156 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 1
  %157 = load ptr, ptr %156, align 8, !tbaa !17
  %158 = icmp eq ptr %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %154
  %160 = load i64, ptr %157, align 8
  %161 = and i64 %160, 131072
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = tail call ptr @substitute_in_expr(ptr noundef nonnull %157, ptr noundef %1, ptr noundef %2)
  br label %165

165:                                              ; preds = %154, %159, %163
  %166 = phi ptr [ %164, %163 ], [ %157, %159 ], [ null, %154 ]
  %167 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 1, i32 0, i32 1
  %168 = load ptr, ptr %167, align 8, !tbaa !17
  %169 = icmp eq ptr %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %165
  %171 = load i64, ptr %168, align 8
  %172 = and i64 %171, 131072
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = tail call ptr @substitute_in_expr(ptr noundef nonnull %168, ptr noundef %1, ptr noundef %2)
  br label %176

176:                                              ; preds = %165, %170, %174
  %177 = phi ptr [ %175, %174 ], [ %168, %170 ], [ null, %165 ]
  %178 = load ptr, ptr %145, align 8, !tbaa !17
  %179 = icmp eq ptr %155, %178
  br i1 %179, label %180, label %186

180:                                              ; preds = %176
  %181 = load ptr, ptr %156, align 8, !tbaa !17
  %182 = icmp eq ptr %166, %181
  br i1 %182, label %183, label %186

183:                                              ; preds = %180
  %184 = load ptr, ptr %167, align 8, !tbaa !17
  %185 = icmp eq ptr %177, %184
  br i1 %185, label %325, label %186

186:                                              ; preds = %183, %180, %176
  %187 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %188 = load ptr, ptr %187, align 8, !tbaa !17
  %189 = tail call ptr @fold_build3_stat_loc(i32 noundef 0, i32 noundef %9, ptr noundef %188, ptr noundef %155, ptr noundef %166, ptr noundef %177) #29
  br label %319

190:                                              ; preds = %93
  %191 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  %192 = load ptr, ptr %191, align 8, !tbaa !17
  %193 = icmp eq ptr %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %190
  %195 = load i64, ptr %192, align 8
  %196 = and i64 %195, 131072
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  %199 = tail call ptr @substitute_in_expr(ptr noundef nonnull %192, ptr noundef %1, ptr noundef %2)
  br label %200

200:                                              ; preds = %190, %194, %198
  %201 = phi ptr [ %199, %198 ], [ %192, %194 ], [ null, %190 ]
  %202 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 1
  %203 = load ptr, ptr %202, align 8, !tbaa !17
  %204 = icmp eq ptr %203, null
  br i1 %204, label %211, label %205

205:                                              ; preds = %200
  %206 = load i64, ptr %203, align 8
  %207 = and i64 %206, 131072
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %205
  %210 = tail call ptr @substitute_in_expr(ptr noundef nonnull %203, ptr noundef %1, ptr noundef %2)
  br label %211

211:                                              ; preds = %200, %205, %209
  %212 = phi ptr [ %210, %209 ], [ %203, %205 ], [ null, %200 ]
  %213 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 1, i32 0, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !17
  %215 = icmp eq ptr %214, null
  br i1 %215, label %222, label %216

216:                                              ; preds = %211
  %217 = load i64, ptr %214, align 8
  %218 = and i64 %217, 131072
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %216
  %221 = tail call ptr @substitute_in_expr(ptr noundef nonnull %214, ptr noundef %1, ptr noundef %2)
  br label %222

222:                                              ; preds = %211, %216, %220
  %223 = phi ptr [ %221, %220 ], [ %214, %216 ], [ null, %211 ]
  %224 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 1, i32 0, i32 2
  %225 = load ptr, ptr %224, align 8, !tbaa !17
  %226 = icmp eq ptr %225, null
  br i1 %226, label %233, label %227

227:                                              ; preds = %222
  %228 = load i64, ptr %225, align 8
  %229 = and i64 %228, 131072
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %227
  %232 = tail call ptr @substitute_in_expr(ptr noundef nonnull %225, ptr noundef %1, ptr noundef %2)
  br label %233

233:                                              ; preds = %222, %227, %231
  %234 = phi ptr [ %232, %231 ], [ %225, %227 ], [ null, %222 ]
  %235 = load ptr, ptr %191, align 8, !tbaa !17
  %236 = icmp eq ptr %201, %235
  br i1 %236, label %237, label %246

237:                                              ; preds = %233
  %238 = load ptr, ptr %202, align 8, !tbaa !17
  %239 = icmp eq ptr %212, %238
  br i1 %239, label %240, label %246

240:                                              ; preds = %237
  %241 = load ptr, ptr %213, align 8, !tbaa !17
  %242 = icmp eq ptr %223, %241
  br i1 %242, label %243, label %246

243:                                              ; preds = %240
  %244 = load ptr, ptr %224, align 8, !tbaa !17
  %245 = icmp eq ptr %234, %244
  br i1 %245, label %325, label %246

246:                                              ; preds = %243, %240, %237, %233
  %247 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %248 = load ptr, ptr %247, align 8, !tbaa !17
  %249 = tail call ptr @build4_stat(i32 noundef %9, ptr noundef %248, ptr noundef %201, ptr noundef %212, ptr noundef %223, ptr noundef %234)
  %250 = tail call ptr @fold(ptr noundef %249) #29
  br label %319

251:                                              ; preds = %93
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3094, ptr noundef nonnull @.str.219) #29
  br label %319

252:                                              ; preds = %84
  %253 = load i64, ptr %2, align 8
  %254 = and i64 %253, 65535
  %255 = add nsw i64 %254, -23
  %256 = icmp ult i64 %255, 6
  %257 = icmp eq i32 %9, 59
  %258 = and i1 %257, %256
  br i1 %258, label %259, label %266

259:                                              ; preds = %252
  %260 = tail call ptr @maybe_inline_call_in_expr(ptr noundef nonnull %7) #29
  %261 = icmp eq ptr %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %259
  %263 = load i64, ptr %260, align 8
  %264 = and i64 %263, 131072
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %5, label %325

266:                                              ; preds = %259, %252
  %267 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  br label %268

268:                                              ; preds = %307, %266
  %269 = phi i64 [ %309, %307 ], [ 1, %266 ]
  %270 = phi ptr [ %308, %307 ], [ null, %266 ]
  %271 = load i64, ptr %7, align 8
  %272 = and i64 %271, 65535
  %273 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %272
  %274 = load i32, ptr %273, align 4, !tbaa !17
  %275 = icmp eq i32 %274, 9
  br i1 %275, label %276, label %280

276:                                              ; preds = %268
  %277 = load ptr, ptr %267, align 8, !tbaa !17
  %278 = getelementptr inbounds %struct.tree_int_cst, ptr %277, i64 0, i32 1
  %279 = load i64, ptr %278, align 8, !tbaa !17
  br label %284

280:                                              ; preds = %268
  %281 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %272
  %282 = load i8, ptr %281, align 1, !tbaa !17
  %283 = zext i8 %282 to i64
  br label %284

284:                                              ; preds = %276, %280
  %285 = phi i64 [ %279, %276 ], [ %283, %280 ]
  %286 = shl i64 %285, 32
  %287 = ashr exact i64 %286, 32
  %288 = icmp slt i64 %269, %287
  br i1 %288, label %289, label %310

289:                                              ; preds = %284
  %290 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3, i64 %269
  %291 = load ptr, ptr %290, align 8, !tbaa !17
  %292 = icmp eq ptr %291, null
  br i1 %292, label %307, label %293

293:                                              ; preds = %289
  %294 = load i64, ptr %291, align 8
  %295 = and i64 %294, 131072
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %307

297:                                              ; preds = %293
  %298 = tail call ptr @substitute_in_expr(ptr noundef nonnull %291, ptr noundef %1, ptr noundef nonnull %2)
  %299 = icmp eq ptr %298, %291
  br i1 %299, label %307, label %300

300:                                              ; preds = %297
  %301 = icmp eq ptr %270, null
  br i1 %301, label %302, label %304

302:                                              ; preds = %300
  %303 = tail call ptr @copy_node_stat(ptr noundef nonnull %7)
  br label %304

304:                                              ; preds = %302, %300
  %305 = phi ptr [ %270, %300 ], [ %303, %302 ]
  %306 = getelementptr inbounds %struct.tree_exp, ptr %305, i64 0, i32 3, i64 %269
  store ptr %298, ptr %306, align 8, !tbaa !17
  br label %307

307:                                              ; preds = %289, %293, %304, %297
  %308 = phi ptr [ %305, %304 ], [ %270, %297 ], [ %270, %293 ], [ %270, %289 ]
  %309 = add nuw nsw i64 %269, 1
  br label %268, !llvm.loop !118

310:                                              ; preds = %284
  %311 = icmp eq ptr %270, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %310
  %313 = tail call ptr @fold(ptr noundef nonnull %270) #29
  %314 = load i64, ptr %313, align 8
  %315 = and i64 %314, 65535
  %316 = icmp eq i64 %315, 59
  br i1 %316, label %317, label %319

317:                                              ; preds = %312
  tail call fastcc void @process_call_operands(ptr noundef nonnull %313)
  br label %319

318:                                              ; preds = %84
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3139, ptr noundef nonnull @.str.219) #29
  br label %319

319:                                              ; preds = %317, %312, %80, %108, %140, %186, %246, %251, %318
  %320 = phi ptr [ %83, %80 ], [ undef, %318 ], [ undef, %251 ], [ %250, %246 ], [ %189, %186 ], [ %143, %140 ], [ %111, %108 ], [ %313, %312 ], [ %313, %317 ]
  %321 = load i64, ptr %7, align 8
  %322 = load i64, ptr %320, align 8
  %323 = and i64 %321, 1048576
  %324 = or i64 %323, %322
  store i64 %324, ptr %320, align 8
  br label %325

325:                                              ; preds = %262, %84, %96, %100, %69, %72, %76, %65, %58, %310, %243, %183, %137, %104, %93, %91, %88, %36, %319, %39
  %326 = phi ptr [ %42, %39 ], [ %320, %319 ], [ %7, %36 ], [ %90, %88 ], [ %2, %91 ], [ %7, %93 ], [ %7, %104 ], [ %7, %137 ], [ %7, %183 ], [ %7, %243 ], [ %7, %310 ], [ %7, %76 ], [ %7, %65 ], [ %2, %58 ], [ %7, %72 ], [ %7, %69 ], [ %7, %100 ], [ %7, %96 ], [ %260, %262 ], [ %7, %84 ]
  ret ptr %326
}

declare ptr @fold_build3_stat_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @fold_build1_stat_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build4_stat(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5) local_unnamed_addr #9 {
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %7
  %9 = load i8, ptr %8, align 1, !tbaa !17
  %10 = icmp eq i8 %9, 4
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3772, ptr noundef nonnull @.str.219) #29
  br label %12

12:                                               ; preds = %6, %11
  %13 = tail call ptr @make_node_stat(i32 noundef %0)
  %14 = getelementptr inbounds %struct.tree_common, ptr %13, i64 0, i32 2
  store ptr %1, ptr %14, align 8, !tbaa !17
  %15 = load i64, ptr %13, align 8
  %16 = lshr i64 %15, 16
  %17 = trunc i64 %16 to i8
  %18 = and i8 %17, 1
  %19 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 0, i32 3
  store ptr %2, ptr %19, align 8, !tbaa !17
  %20 = icmp ne ptr %2, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %12
  %22 = load i64, ptr %2, align 8
  %23 = and i64 %22, 65535
  %24 = add nsw i64 %23, -5
  %25 = icmp ult i64 %24, 18
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = and i64 %22, 65536
  %28 = icmp eq i64 %27, 0
  %29 = select i1 %28, i8 %18, i8 1
  br label %30

30:                                               ; preds = %26, %12, %21
  %31 = phi i8 [ %18, %21 ], [ %18, %12 ], [ %29, %26 ]
  %32 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1
  store ptr %3, ptr %32, align 8, !tbaa !17
  %33 = icmp eq ptr %3, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %30
  %35 = load i64, ptr %3, align 8
  %36 = and i64 %35, 65535
  %37 = add nsw i64 %36, -5
  %38 = icmp ult i64 %37, 18
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = and i64 %35, 65536
  %41 = icmp eq i64 %40, 0
  %42 = select i1 %41, i8 %31, i8 1
  br label %43

43:                                               ; preds = %39, %30, %34
  %44 = phi i8 [ %31, %34 ], [ %31, %30 ], [ %42, %39 ]
  %45 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 0, i32 1
  store ptr %4, ptr %45, align 8, !tbaa !17
  %46 = icmp eq ptr %4, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = load i64, ptr %4, align 8
  %49 = and i64 %48, 65535
  %50 = add nsw i64 %49, -5
  %51 = icmp ult i64 %50, 18
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = and i64 %48, 65536
  %54 = icmp eq i64 %53, 0
  %55 = select i1 %54, i8 %44, i8 1
  br label %56

56:                                               ; preds = %52, %43, %47
  %57 = phi i8 [ %44, %47 ], [ %44, %43 ], [ %55, %52 ]
  %58 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 0, i32 2
  store ptr %5, ptr %58, align 8, !tbaa !17
  %59 = icmp eq ptr %5, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = load i64, ptr %5, align 8
  %62 = and i64 %61, 65535
  %63 = add nsw i64 %62, -5
  %64 = icmp ult i64 %63, 18
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = and i64 %61, 65536
  %67 = icmp eq i64 %66, 0
  %68 = select i1 %67, i8 %57, i8 1
  br label %69

69:                                               ; preds = %65, %60, %56
  %70 = phi i8 [ %57, %60 ], [ %57, %56 ], [ %68, %65 ]
  %71 = zext i8 %70 to i64
  %72 = shl nuw nsw i64 %71, 16
  %73 = and i64 %15, -65537
  %74 = or i64 %72, %73
  store i64 %74, ptr %13, align 8
  %75 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %7
  %76 = load i32, ptr %75, align 4, !tbaa !17
  %77 = icmp eq i32 %76, 4
  %78 = and i1 %20, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %69
  %80 = load i64, ptr %2, align 8
  %81 = and i64 %80, 524288
  br label %82

82:                                               ; preds = %79, %69
  %83 = phi i64 [ 0, %69 ], [ %81, %79 ]
  %84 = and i64 %74, -524289
  %85 = or i64 %83, %84
  store i64 %85, ptr %13, align 8
  ret ptr %13
}

declare ptr @maybe_inline_call_in_expr(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @process_call_operands(ptr noundef %0) unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = tail call i32 @call_expr_flags(ptr noundef nonnull %0) #29
  %4 = and i32 %3, 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = lshr i64 %2, 16
  %8 = trunc i64 %7 to i8
  %9 = and i8 %8, 1
  %10 = and i32 %3, 3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %6, %1
  br label %13

13:                                               ; preds = %12, %6
  %14 = phi i8 [ 1, %12 ], [ %9, %6 ]
  %15 = and i32 %3, 1
  %16 = icmp ne i32 %15, 0
  %17 = trunc i32 %15 to i8
  %18 = icmp eq i8 %14, 0
  %19 = or i1 %16, %18
  %20 = load i64, ptr %0, align 8
  br i1 %19, label %21, label %89

21:                                               ; preds = %13
  %22 = and i64 %20, 65535
  %23 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !17
  %25 = icmp eq i32 %24, 9
  br i1 %25, label %26, label %59

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_int_cst, ptr %28, i64 0, i32 1
  %30 = load i64, ptr %29, align 8, !tbaa !17
  %31 = trunc i64 %30 to i32
  %32 = icmp sgt i32 %31, 1
  br i1 %32, label %33, label %89

33:                                               ; preds = %26
  %34 = and i64 %30, 4294967295
  br label %35

35:                                               ; preds = %33, %54
  %36 = phi i64 [ 1, %33 ], [ %57, %54 ]
  %37 = phi i8 [ %14, %33 ], [ %55, %54 ]
  %38 = phi i8 [ %17, %33 ], [ %56, %54 ]
  %39 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3, i64 %36
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = icmp eq ptr %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %35
  %43 = load i64, ptr %40, align 8
  %44 = and i64 %43, 65536
  %45 = icmp eq i64 %44, 0
  %46 = select i1 %45, i8 %37, i8 1
  %47 = and i64 %43, 1048576
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %42
  %50 = and i64 %43, 65535
  %51 = add nsw i64 %50, -23
  %52 = icmp ult i64 %51, 6
  %53 = select i1 %52, i8 %38, i8 0
  br label %54

54:                                               ; preds = %49, %42, %35
  %55 = phi i8 [ %46, %42 ], [ %46, %49 ], [ %37, %35 ]
  %56 = phi i8 [ %38, %42 ], [ %53, %49 ], [ %38, %35 ]
  %57 = add nuw nsw i64 %36, 1
  %58 = icmp eq i64 %57, %34
  br i1 %58, label %89, label %35, !llvm.loop !119

59:                                               ; preds = %21
  %60 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %22
  %61 = load i8, ptr %60, align 1, !tbaa !17
  %62 = icmp ugt i8 %61, 1
  br i1 %62, label %63, label %89

63:                                               ; preds = %59
  %64 = zext i8 %61 to i64
  br label %65

65:                                               ; preds = %63, %84
  %66 = phi i64 [ 1, %63 ], [ %87, %84 ]
  %67 = phi i8 [ %14, %63 ], [ %85, %84 ]
  %68 = phi i8 [ %17, %63 ], [ %86, %84 ]
  %69 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3, i64 %66
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = icmp eq ptr %70, null
  br i1 %71, label %84, label %72

72:                                               ; preds = %65
  %73 = load i64, ptr %70, align 8
  %74 = and i64 %73, 65536
  %75 = icmp eq i64 %74, 0
  %76 = select i1 %75, i8 %67, i8 1
  %77 = and i64 %73, 1048576
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %72
  %80 = and i64 %73, 65535
  %81 = add nsw i64 %80, -23
  %82 = icmp ult i64 %81, 6
  %83 = select i1 %82, i8 %68, i8 0
  br label %84

84:                                               ; preds = %65, %79, %72
  %85 = phi i8 [ %76, %72 ], [ %76, %79 ], [ %67, %65 ]
  %86 = phi i8 [ %68, %72 ], [ %83, %79 ], [ %68, %65 ]
  %87 = add nuw nsw i64 %66, 1
  %88 = icmp eq i64 %87, %64
  br i1 %88, label %89, label %65, !llvm.loop !119

89:                                               ; preds = %84, %54, %26, %59, %13
  %90 = phi i8 [ 0, %13 ], [ %17, %26 ], [ %17, %59 ], [ %56, %54 ], [ %86, %84 ]
  %91 = phi i8 [ 1, %13 ], [ %14, %26 ], [ %14, %59 ], [ %55, %54 ], [ %85, %84 ]
  %92 = and i8 %91, 1
  %93 = zext i8 %92 to i64
  %94 = shl nuw nsw i64 %93, 16
  %95 = and i64 %20, -1114113
  %96 = or i64 %94, %95
  %97 = and i8 %90, 1
  %98 = zext i8 %97 to i64
  %99 = shl nuw nsw i64 %98, 20
  %100 = or i64 %96, %99
  store i64 %100, ptr %0, align 8
  ret void
}

declare i32 @call_expr_flags(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @substitute_placeholder_in_expr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i32
  %5 = and i32 %4, 65535
  %6 = trunc i64 %3 to i16
  switch i16 %6, label %109 [
    i16 62, label %7
    i16 2, label %73
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_type, ptr %9, i64 0, i32 16
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %1, null
  br i1 %12, label %332, label %13

13:                                               ; preds = %7, %35
  %14 = phi ptr [ %37, %35 ], [ %1, %7 ]
  %15 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 16
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = icmp eq ptr %18, %11
  br i1 %19, label %332, label %20

20:                                               ; preds = %13
  %21 = load i64, ptr %14, align 8
  %22 = trunc i64 %21 to i16
  switch i16 %22, label %25 [
    i16 52, label %23
    i16 56, label %23
  ]

23:                                               ; preds = %20, %20
  %24 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 1
  br label %35

25:                                               ; preds = %20
  %26 = and i64 %21, 65535
  %27 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %26
  %28 = load i32, ptr %27, align 4, !tbaa !17
  switch i32 %28, label %29 [
    i32 4, label %33
    i32 6, label %33
    i32 7, label %33
  ]

29:                                               ; preds = %25
  %30 = icmp eq i64 %26, 59
  %31 = icmp eq i32 %28, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %25, %25, %25, %29
  %34 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3
  br label %35

35:                                               ; preds = %33, %23
  %36 = phi ptr [ %34, %33 ], [ %24, %23 ]
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %13, !llvm.loop !120

39:                                               ; preds = %29, %35
  br label %40

40:                                               ; preds = %39, %69
  %41 = phi ptr [ %71, %69 ], [ %1, %39 ]
  %42 = getelementptr inbounds %struct.tree_common, ptr %41, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = load i64, ptr %43, align 8
  %45 = trunc i64 %44 to i16
  switch i16 %45, label %54 [
    i16 10, label %46
    i16 12, label %46
  ]

46:                                               ; preds = %40, %40
  %47 = getelementptr inbounds %struct.tree_common, ptr %43, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.tree_type, ptr %48, i64 0, i32 16
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = icmp eq ptr %50, %11
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = tail call ptr @fold_build1_stat_loc(i32 noundef 0, i32 noundef 47, ptr noundef %11, ptr noundef nonnull %41) #29
  br label %332

54:                                               ; preds = %40, %46
  %55 = load i64, ptr %41, align 8
  %56 = trunc i64 %55 to i16
  switch i16 %56, label %59 [
    i16 52, label %57
    i16 56, label %57
  ]

57:                                               ; preds = %54, %54
  %58 = getelementptr inbounds %struct.tree_exp, ptr %41, i64 1
  br label %69

59:                                               ; preds = %54
  %60 = and i64 %55, 65535
  %61 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !17
  switch i32 %62, label %63 [
    i32 4, label %67
    i32 6, label %67
    i32 7, label %67
  ]

63:                                               ; preds = %59
  %64 = icmp eq i64 %60, 59
  %65 = icmp eq i32 %62, 10
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %332

67:                                               ; preds = %59, %59, %59, %63
  %68 = getelementptr inbounds %struct.tree_exp, ptr %41, i64 0, i32 3
  br label %69

69:                                               ; preds = %67, %57
  %70 = phi ptr [ %68, %67 ], [ %58, %57 ]
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = icmp eq ptr %71, null
  br i1 %72, label %332, label %40, !llvm.loop !121

73:                                               ; preds = %2
  %74 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = icmp eq ptr %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = load i64, ptr %75, align 8
  %79 = and i64 %78, 131072
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %75, ptr noundef %1)
  br label %83

83:                                               ; preds = %73, %77, %81
  %84 = phi ptr [ %82, %81 ], [ %75, %77 ], [ null, %73 ]
  %85 = getelementptr inbounds %struct.tree_list, ptr %0, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = icmp eq ptr %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %83
  %89 = load i64, ptr %86, align 8
  %90 = and i64 %89, 131072
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %86, ptr noundef %1)
  br label %94

94:                                               ; preds = %83, %88, %92
  %95 = phi ptr [ %93, %92 ], [ %86, %88 ], [ null, %83 ]
  %96 = load ptr, ptr %74, align 8, !tbaa !17
  %97 = icmp eq ptr %84, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = load ptr, ptr %85, align 8, !tbaa !17
  %100 = icmp eq ptr %95, %99
  br i1 %100, label %332, label %101

101:                                              ; preds = %98, %94
  %102 = getelementptr inbounds %struct.tree_list, ptr %0, i64 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %105 = getelementptr inbounds i8, ptr %104, i64 16
  store i64 0, ptr %105, align 8
  store i64 2, ptr %104, align 8
  %106 = getelementptr inbounds %struct.tree_common, ptr %104, i64 0, i32 1
  store ptr %84, ptr %106, align 8, !tbaa !17
  %107 = getelementptr inbounds %struct.tree_list, ptr %104, i64 0, i32 1
  store ptr %103, ptr %107, align 8, !tbaa !17
  %108 = getelementptr inbounds %struct.tree_list, ptr %104, i64 0, i32 2
  store ptr %95, ptr %108, align 8, !tbaa !17
  br label %332

109:                                              ; preds = %2
  %110 = and i64 %3, 65535
  %111 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !17
  switch i32 %112, label %325 [
    i32 1, label %332
    i32 3, label %332
    i32 0, label %115
    i32 6, label %115
    i32 7, label %115
    i32 5, label %115
    i32 10, label %115
    i32 4, label %115
    i32 8, label %115
    i32 9, label %113
  ]

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  br label %274

115:                                              ; preds = %109, %109, %109, %109, %109, %109, %109
  %116 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %110
  %117 = load i8, ptr %116, align 1, !tbaa !17
  switch i8 %117, label %273 [
    i8 0, label %332
    i8 1, label %118
    i8 2, label %134
    i8 3, label %166
    i8 4, label %212
  ]

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  %121 = icmp eq ptr %120, null
  br i1 %121, label %332, label %122

122:                                              ; preds = %118
  %123 = load i64, ptr %120, align 8
  %124 = and i64 %123, 131072
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %332

126:                                              ; preds = %122
  %127 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %120, ptr noundef %1)
  %128 = load ptr, ptr %119, align 8, !tbaa !17
  %129 = icmp eq ptr %127, %128
  br i1 %129, label %332, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %132 = load ptr, ptr %131, align 8, !tbaa !17
  %133 = tail call ptr @fold_build1_stat_loc(i32 noundef 0, i32 noundef %5, ptr noundef %132, ptr noundef %127) #29
  br label %326

134:                                              ; preds = %115
  %135 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %136 = load ptr, ptr %135, align 8, !tbaa !17
  %137 = icmp eq ptr %136, null
  br i1 %137, label %144, label %138

138:                                              ; preds = %134
  %139 = load i64, ptr %136, align 8
  %140 = and i64 %139, 131072
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %136, ptr noundef %1)
  br label %144

144:                                              ; preds = %134, %138, %142
  %145 = phi ptr [ %143, %142 ], [ %136, %138 ], [ null, %134 ]
  %146 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %147 = load ptr, ptr %146, align 8, !tbaa !17
  %148 = icmp eq ptr %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %144
  %150 = load i64, ptr %147, align 8
  %151 = and i64 %150, 131072
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %147, ptr noundef %1)
  br label %155

155:                                              ; preds = %144, %149, %153
  %156 = phi ptr [ %154, %153 ], [ %147, %149 ], [ null, %144 ]
  %157 = load ptr, ptr %135, align 8, !tbaa !17
  %158 = icmp eq ptr %145, %157
  br i1 %158, label %159, label %162

159:                                              ; preds = %155
  %160 = load ptr, ptr %146, align 8, !tbaa !17
  %161 = icmp eq ptr %156, %160
  br i1 %161, label %332, label %162

162:                                              ; preds = %159, %155
  %163 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %164 = load ptr, ptr %163, align 8, !tbaa !17
  %165 = tail call ptr @fold_build2_stat_loc(i32 noundef 0, i32 noundef %5, ptr noundef %164, ptr noundef %145, ptr noundef %156) #29
  br label %326

166:                                              ; preds = %115
  %167 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %168 = load ptr, ptr %167, align 8, !tbaa !17
  %169 = icmp eq ptr %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %166
  %171 = load i64, ptr %168, align 8
  %172 = and i64 %171, 131072
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %168, ptr noundef %1)
  br label %176

176:                                              ; preds = %166, %170, %174
  %177 = phi ptr [ %175, %174 ], [ %168, %170 ], [ null, %166 ]
  %178 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %179 = load ptr, ptr %178, align 8, !tbaa !17
  %180 = icmp eq ptr %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %176
  %182 = load i64, ptr %179, align 8
  %183 = and i64 %182, 131072
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %181
  %186 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %179, ptr noundef %1)
  br label %187

187:                                              ; preds = %176, %181, %185
  %188 = phi ptr [ %186, %185 ], [ %179, %181 ], [ null, %176 ]
  %189 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %190 = load ptr, ptr %189, align 8, !tbaa !17
  %191 = icmp eq ptr %190, null
  br i1 %191, label %198, label %192

192:                                              ; preds = %187
  %193 = load i64, ptr %190, align 8
  %194 = and i64 %193, 131072
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %190, ptr noundef %1)
  br label %198

198:                                              ; preds = %187, %192, %196
  %199 = phi ptr [ %197, %196 ], [ %190, %192 ], [ null, %187 ]
  %200 = load ptr, ptr %167, align 8, !tbaa !17
  %201 = icmp eq ptr %177, %200
  br i1 %201, label %202, label %208

202:                                              ; preds = %198
  %203 = load ptr, ptr %178, align 8, !tbaa !17
  %204 = icmp eq ptr %188, %203
  br i1 %204, label %205, label %208

205:                                              ; preds = %202
  %206 = load ptr, ptr %189, align 8, !tbaa !17
  %207 = icmp eq ptr %199, %206
  br i1 %207, label %332, label %208

208:                                              ; preds = %205, %202, %198
  %209 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %210 = load ptr, ptr %209, align 8, !tbaa !17
  %211 = tail call ptr @fold_build3_stat_loc(i32 noundef 0, i32 noundef %5, ptr noundef %210, ptr noundef %177, ptr noundef %188, ptr noundef %199) #29
  br label %326

212:                                              ; preds = %115
  %213 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %214 = load ptr, ptr %213, align 8, !tbaa !17
  %215 = icmp eq ptr %214, null
  br i1 %215, label %222, label %216

216:                                              ; preds = %212
  %217 = load i64, ptr %214, align 8
  %218 = and i64 %217, 131072
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %216
  %221 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %214, ptr noundef %1)
  br label %222

222:                                              ; preds = %212, %216, %220
  %223 = phi ptr [ %221, %220 ], [ %214, %216 ], [ null, %212 ]
  %224 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %225 = load ptr, ptr %224, align 8, !tbaa !17
  %226 = icmp eq ptr %225, null
  br i1 %226, label %233, label %227

227:                                              ; preds = %222
  %228 = load i64, ptr %225, align 8
  %229 = and i64 %228, 131072
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %227
  %232 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %225, ptr noundef %1)
  br label %233

233:                                              ; preds = %222, %227, %231
  %234 = phi ptr [ %232, %231 ], [ %225, %227 ], [ null, %222 ]
  %235 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !17
  %237 = icmp eq ptr %236, null
  br i1 %237, label %244, label %238

238:                                              ; preds = %233
  %239 = load i64, ptr %236, align 8
  %240 = and i64 %239, 131072
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %236, ptr noundef %1)
  br label %244

244:                                              ; preds = %233, %238, %242
  %245 = phi ptr [ %243, %242 ], [ %236, %238 ], [ null, %233 ]
  %246 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 2
  %247 = load ptr, ptr %246, align 8, !tbaa !17
  %248 = icmp eq ptr %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %244
  %250 = load i64, ptr %247, align 8
  %251 = and i64 %250, 131072
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %249
  %254 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %247, ptr noundef %1)
  br label %255

255:                                              ; preds = %244, %249, %253
  %256 = phi ptr [ %254, %253 ], [ %247, %249 ], [ null, %244 ]
  %257 = load ptr, ptr %213, align 8, !tbaa !17
  %258 = icmp eq ptr %223, %257
  br i1 %258, label %259, label %268

259:                                              ; preds = %255
  %260 = load ptr, ptr %224, align 8, !tbaa !17
  %261 = icmp eq ptr %234, %260
  br i1 %261, label %262, label %268

262:                                              ; preds = %259
  %263 = load ptr, ptr %235, align 8, !tbaa !17
  %264 = icmp eq ptr %245, %263
  br i1 %264, label %265, label %268

265:                                              ; preds = %262
  %266 = load ptr, ptr %246, align 8, !tbaa !17
  %267 = icmp eq ptr %256, %266
  br i1 %267, label %332, label %268

268:                                              ; preds = %265, %262, %259, %255
  %269 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %270 = load ptr, ptr %269, align 8, !tbaa !17
  %271 = tail call ptr @build4_stat(i32 noundef %5, ptr noundef %270, ptr noundef %223, ptr noundef %234, ptr noundef %245, ptr noundef %256)
  %272 = tail call ptr @fold(ptr noundef %271) #29
  br label %326

273:                                              ; preds = %115
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3272, ptr noundef nonnull @.str.219) #29
  br label %326

274:                                              ; preds = %113, %313
  %275 = phi i64 [ %3, %113 ], [ %316, %313 ]
  %276 = phi i64 [ 1, %113 ], [ %315, %313 ]
  %277 = phi ptr [ null, %113 ], [ %314, %313 ]
  %278 = and i64 %275, 65535
  %279 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %278
  %280 = load i32, ptr %279, align 4, !tbaa !17
  %281 = icmp eq i32 %280, 9
  br i1 %281, label %282, label %286

282:                                              ; preds = %274
  %283 = load ptr, ptr %114, align 8, !tbaa !17
  %284 = getelementptr inbounds %struct.tree_int_cst, ptr %283, i64 0, i32 1
  %285 = load i64, ptr %284, align 8, !tbaa !17
  br label %290

286:                                              ; preds = %274
  %287 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %278
  %288 = load i8, ptr %287, align 1, !tbaa !17
  %289 = zext i8 %288 to i64
  br label %290

290:                                              ; preds = %282, %286
  %291 = phi i64 [ %285, %282 ], [ %289, %286 ]
  %292 = shl i64 %291, 32
  %293 = ashr exact i64 %292, 32
  %294 = icmp slt i64 %276, %293
  br i1 %294, label %295, label %317

295:                                              ; preds = %290
  %296 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3, i64 %276
  %297 = load ptr, ptr %296, align 8, !tbaa !17
  %298 = icmp eq ptr %297, null
  br i1 %298, label %313, label %299

299:                                              ; preds = %295
  %300 = load i64, ptr %297, align 8
  %301 = and i64 %300, 131072
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %313

303:                                              ; preds = %299
  %304 = tail call ptr @substitute_placeholder_in_expr(ptr noundef nonnull %297, ptr noundef %1)
  %305 = icmp eq ptr %304, %297
  br i1 %305, label %313, label %306

306:                                              ; preds = %303
  %307 = icmp eq ptr %277, null
  br i1 %307, label %308, label %310

308:                                              ; preds = %306
  %309 = tail call ptr @copy_node_stat(ptr noundef nonnull %0)
  br label %310

310:                                              ; preds = %308, %306
  %311 = phi ptr [ %277, %306 ], [ %309, %308 ]
  %312 = getelementptr inbounds %struct.tree_exp, ptr %311, i64 0, i32 3, i64 %276
  store ptr %304, ptr %312, align 8, !tbaa !17
  br label %313

313:                                              ; preds = %295, %299, %310, %303
  %314 = phi ptr [ %311, %310 ], [ %277, %303 ], [ %277, %299 ], [ %277, %295 ]
  %315 = add nuw nsw i64 %276, 1
  %316 = load i64, ptr %0, align 8
  br label %274, !llvm.loop !122

317:                                              ; preds = %290
  %318 = icmp eq ptr %277, null
  br i1 %318, label %332, label %319

319:                                              ; preds = %317
  %320 = tail call ptr @fold(ptr noundef nonnull %277) #29
  %321 = load i64, ptr %320, align 8
  %322 = and i64 %321, 65535
  %323 = icmp eq i64 %322, 59
  br i1 %323, label %324, label %326

324:                                              ; preds = %319
  tail call fastcc void @process_call_operands(ptr noundef nonnull %320)
  br label %326

325:                                              ; preds = %109
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3306, ptr noundef nonnull @.str.219) #29
  br label %326

326:                                              ; preds = %319, %324, %130, %162, %208, %268, %273, %325
  %327 = phi ptr [ undef, %325 ], [ undef, %273 ], [ %272, %268 ], [ %211, %208 ], [ %165, %162 ], [ %133, %130 ], [ %320, %324 ], [ %320, %319 ]
  %328 = load i64, ptr %0, align 8
  %329 = load i64, ptr %327, align 8
  %330 = and i64 %328, 1048576
  %331 = or i64 %330, %329
  store i64 %331, ptr %327, align 8
  br label %332

332:                                              ; preds = %13, %63, %69, %118, %122, %7, %317, %265, %205, %159, %126, %115, %109, %109, %98, %52, %326, %101
  %333 = phi ptr [ %104, %101 ], [ %327, %326 ], [ %53, %52 ], [ %0, %98 ], [ %0, %109 ], [ %0, %109 ], [ %0, %115 ], [ %0, %126 ], [ %0, %159 ], [ %0, %205 ], [ %0, %265 ], [ %0, %317 ], [ %0, %7 ], [ %0, %122 ], [ %0, %118 ], [ %0, %69 ], [ %0, %63 ], [ %14, %13 ]
  ret ptr %333
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @stabilize_reference(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %80 [
    i16 0, label %60
    i16 52, label %58
    i16 46, label %46
    i16 116, label %4
    i16 113, label %4
    i16 78, label %4
    i16 77, label %4
    i16 47, label %11
    i16 41, label %16
    i16 42, label %23
    i16 45, label %34
  ]

4:                                                ; preds = %1, %1, %1, %1
  %5 = trunc i64 %2 to i32
  %6 = and i32 %5, 65535
  %7 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = tail call ptr @stabilize_reference(ptr noundef %8)
  %10 = tail call ptr (i32, ...) @build_nt(i32 noundef %6, ptr noundef %9)
  br label %62

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = tail call ptr @stabilize_reference_1(ptr noundef %13)
  %15 = tail call ptr (i32, ...) @build_nt(i32 noundef 47, ptr noundef %14)
  br label %62

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = tail call ptr @stabilize_reference(ptr noundef %18)
  %20 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = tail call ptr (i32, ...) @build_nt(i32 noundef 41, ptr noundef %19, ptr noundef %21, ptr noundef null)
  br label %62

23:                                               ; preds = %1
  %24 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = tail call ptr @stabilize_reference(ptr noundef %25)
  %27 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = tail call ptr @stabilize_reference_1(ptr noundef %28)
  %30 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = tail call ptr @stabilize_reference_1(ptr noundef %31)
  %33 = tail call ptr (i32, ...) @build_nt(i32 noundef 42, ptr noundef %26, ptr noundef %29, ptr noundef %32)
  br label %62

34:                                               ; preds = %1
  %35 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = tail call ptr @stabilize_reference(ptr noundef %36)
  %38 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = tail call ptr @stabilize_reference_1(ptr noundef %39)
  %41 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = tail call ptr (i32, ...) @build_nt(i32 noundef 45, ptr noundef %37, ptr noundef %40, ptr noundef %42, ptr noundef %44)
  br label %62

46:                                               ; preds = %1
  %47 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = tail call ptr @stabilize_reference(ptr noundef %48)
  %50 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = tail call ptr @stabilize_reference_1(ptr noundef %51)
  %53 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = tail call ptr (i32, ...) @build_nt(i32 noundef 46, ptr noundef %49, ptr noundef %52, ptr noundef %54, ptr noundef %56)
  br label %62

58:                                               ; preds = %1
  %59 = tail call ptr @stabilize_reference_1(ptr noundef nonnull %0)
  br label %80

60:                                               ; preds = %1
  %61 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %80

62:                                               ; preds = %46, %34, %23, %16, %11, %4
  %63 = phi ptr [ %57, %46 ], [ %45, %34 ], [ %33, %23 ], [ %22, %16 ], [ %15, %11 ], [ %10, %4 ]
  %64 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.tree_common, ptr %63, i64 0, i32 2
  store ptr %65, ptr %66, align 8, !tbaa !17
  %67 = load i64, ptr %0, align 8
  %68 = and i64 %67, 1048576
  %69 = load i64, ptr %63, align 8
  %70 = and i64 %69, -1048577
  %71 = or i64 %70, %68
  store i64 %71, ptr %63, align 8
  %72 = load i64, ptr %0, align 8
  %73 = and i64 %72, 65536
  %74 = and i64 %71, -65537
  %75 = or i64 %74, %73
  store i64 %75, ptr %63, align 8
  %76 = load i64, ptr %0, align 8
  %77 = and i64 %76, 524288
  %78 = and i64 %75, -524289
  %79 = or i64 %78, %77
  store i64 %79, ptr %63, align 8
  br label %80

80:                                               ; preds = %1, %62, %60, %58
  %81 = phi ptr [ %61, %60 ], [ %59, %58 ], [ %63, %62 ], [ %0, %1 ]
  ret ptr %81
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_nt(i32 noundef %0, ...) local_unnamed_addr #9 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #29
  %3 = sext i32 %0 to i64
  %4 = icmp eq i32 %0, 59
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3864, ptr noundef nonnull @.str.219) #29
  br label %6

6:                                                ; preds = %1, %5
  call void @llvm.va_start(ptr nonnull %2)
  %7 = call ptr @make_node_stat(i32 noundef %0)
  %8 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %3
  %9 = load i8, ptr %8, align 1, !tbaa !17
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 3
  %14 = zext i8 %9 to i64
  br label %15

15:                                               ; preds = %11, %27
  %16 = phi i64 [ 0, %11 ], [ %31, %27 ]
  %17 = load i32, ptr %2, align 16
  %18 = icmp ult i32 %17, 41
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = load ptr, ptr %13, align 16
  %21 = zext i32 %17 to i64
  %22 = getelementptr i8, ptr %20, i64 %21
  %23 = add nuw nsw i32 %17, 8
  store i32 %23, ptr %2, align 16
  br label %27

24:                                               ; preds = %15
  %25 = load ptr, ptr %12, align 8
  %26 = getelementptr i8, ptr %25, i64 8
  store ptr %26, ptr %12, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi ptr [ %22, %19 ], [ %25, %24 ]
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3, i64 %16
  store ptr %29, ptr %30, align 8, !tbaa !17
  %31 = add nuw nsw i64 %16, 1
  %32 = icmp eq i64 %31, %14
  br i1 %32, label %33, label %15, !llvm.loop !123

33:                                               ; preds = %27, %6
  call void @llvm.va_end(ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #29
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @stabilize_reference_1(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = freeze i64 %2
  %4 = trunc i64 %3 to i32
  %5 = and i32 %4, 65535
  %6 = tail call ptr @skip_simple_arithmetic(ptr noundef nonnull %0)
  %7 = tail call fastcc zeroext i8 @tree_invariant_p_1(ptr noundef %6), !range !104
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %57

9:                                                ; preds = %1
  %10 = and i64 %3, 65535
  %11 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !17
  switch i32 %12, label %38 [
    i32 0, label %13
    i32 2, label %13
    i32 3, label %13
    i32 5, label %13
    i32 8, label %13
    i32 10, label %13
    i32 4, label %13
    i32 9, label %13
    i32 1, label %57
    i32 7, label %18
    i32 6, label %33
  ]

13:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9
  %14 = and i64 %3, 65536
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %57, label %16

16:                                               ; preds = %13
  %17 = tail call ptr @save_expr(ptr noundef nonnull %0)
  br label %57

18:                                               ; preds = %9
  %19 = and i32 %4, 65531
  %20 = icmp eq i32 %19, 67
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = trunc i64 %3 to i16
  switch i16 %22, label %25 [
    i16 74, label %23
    i16 73, label %23
    i16 72, label %23
    i16 70, label %23
    i16 69, label %23
    i16 68, label %23
  ]

23:                                               ; preds = %21, %21, %21, %21, %21, %21, %18
  %24 = tail call ptr @save_expr(ptr noundef nonnull %0)
  br label %57

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = tail call ptr @stabilize_reference_1(ptr noundef %27)
  %29 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = tail call ptr @stabilize_reference_1(ptr noundef %30)
  %32 = tail call ptr (i32, ...) @build_nt(i32 noundef %5, ptr noundef %28, ptr noundef %31)
  br label %39

33:                                               ; preds = %9
  %34 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = tail call ptr @stabilize_reference_1(ptr noundef %35)
  %37 = tail call ptr (i32, ...) @build_nt(i32 noundef %5, ptr noundef %36)
  br label %39

38:                                               ; preds = %9
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3466, ptr noundef nonnull @.str.219) #29
  br label %39

39:                                               ; preds = %38, %33, %25
  %40 = phi ptr [ undef, %38 ], [ %37, %33 ], [ %32, %25 ]
  %41 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.tree_common, ptr %40, i64 0, i32 2
  store ptr %42, ptr %43, align 8, !tbaa !17
  %44 = load i64, ptr %0, align 8
  %45 = and i64 %44, 1048576
  %46 = load i64, ptr %40, align 8
  %47 = and i64 %46, -1048577
  %48 = or i64 %47, %45
  store i64 %48, ptr %40, align 8
  %49 = load i64, ptr %0, align 8
  %50 = and i64 %49, 65536
  %51 = and i64 %48, -65537
  %52 = or i64 %51, %50
  store i64 %52, ptr %40, align 8
  %53 = load i64, ptr %0, align 8
  %54 = and i64 %53, 524288
  %55 = and i64 %52, -524289
  %56 = or i64 %55, %54
  store i64 %56, ptr %40, align 8
  br label %57

57:                                               ; preds = %9, %13, %1, %39, %23, %16
  %58 = phi ptr [ %40, %39 ], [ %24, %23 ], [ %17, %16 ], [ %0, %1 ], [ %0, %13 ], [ %0, %9 ]
  ret ptr %58
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @recompute_tree_invariant_for_addr_expr(ptr nocapture noundef %0) local_unnamed_addr #9 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #29
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #29
  br label %4

4:                                                ; preds = %96, %1
  %5 = phi i8 [ 0, %1 ], [ %97, %96 ]
  %6 = phi i8 [ 1, %1 ], [ %98, %96 ]
  %7 = phi ptr [ %0, %1 ], [ %9, %96 ]
  %8 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = load i64, ptr %9, align 8
  %11 = trunc i64 %10 to i16
  switch i16 %11, label %99 [
    i16 42, label %12
    i16 41, label %12
    i16 45, label %12
    i16 46, label %12
    i16 118, label %12
    i16 43, label %12
    i16 44, label %12
  ]

12:                                               ; preds = %4, %4, %4, %4, %4, %4, %4
  %13 = trunc i64 %10 to i32
  %14 = and i32 %13, 65535
  %15 = add nsw i32 %14, -45
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %17, label %65

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.tree_common, ptr %19, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, 65535
  %24 = icmp eq i64 %23, 15
  br i1 %24, label %25, label %65

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = icmp eq ptr %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = load i64, ptr %27, align 8
  %31 = and i64 %30, 131072
  %32 = icmp eq i64 %31, 0
  %33 = select i1 %32, i8 0, i8 %6
  %34 = and i64 %30, 65536
  %35 = icmp eq i64 %34, 0
  %36 = select i1 %35, i8 %5, i8 1
  br label %37

37:                                               ; preds = %29, %25
  %38 = phi i8 [ %5, %25 ], [ %36, %29 ]
  %39 = phi i8 [ %6, %25 ], [ %33, %29 ]
  %40 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %37
  %44 = load i64, ptr %41, align 8
  %45 = and i64 %44, 131072
  %46 = icmp eq i64 %45, 0
  %47 = select i1 %46, i8 0, i8 %39
  %48 = and i64 %44, 65536
  %49 = icmp eq i64 %48, 0
  %50 = select i1 %49, i8 %38, i8 1
  br label %51

51:                                               ; preds = %43, %37
  %52 = phi i8 [ %38, %37 ], [ %50, %43 ]
  %53 = phi i8 [ %39, %37 ], [ %47, %43 ]
  %54 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1, i32 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = icmp eq ptr %55, null
  br i1 %56, label %96, label %57

57:                                               ; preds = %51
  %58 = load i64, ptr %55, align 8
  %59 = and i64 %58, 131072
  %60 = icmp eq i64 %59, 0
  %61 = select i1 %60, i8 0, i8 %53
  %62 = and i64 %58, 65536
  %63 = icmp eq i64 %62, 0
  %64 = select i1 %63, i8 %52, i8 1
  br label %96

65:                                               ; preds = %12, %17
  switch i16 %11, label %96 [
    i16 41, label %66
    i16 42, label %84
  ]

66:                                               ; preds = %65
  %67 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = load i64, ptr %68, align 8
  %70 = and i64 %69, 65535
  %71 = icmp eq i64 %70, 31
  br i1 %71, label %72, label %96

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1, i32 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  %75 = icmp eq ptr %74, null
  br i1 %75, label %96, label %76

76:                                               ; preds = %72
  %77 = load i64, ptr %74, align 8
  %78 = and i64 %77, 131072
  %79 = icmp eq i64 %78, 0
  %80 = select i1 %79, i8 0, i8 %6
  %81 = and i64 %77, 65536
  %82 = icmp eq i64 %81, 0
  %83 = select i1 %82, i8 %5, i8 1
  br label %96

84:                                               ; preds = %65
  %85 = getelementptr inbounds %struct.tree_exp, ptr %9, i64 1, i32 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = icmp eq ptr %86, null
  br i1 %87, label %96, label %88

88:                                               ; preds = %84
  %89 = load i64, ptr %86, align 8
  %90 = and i64 %89, 131072
  %91 = icmp eq i64 %90, 0
  %92 = select i1 %91, i8 0, i8 %6
  %93 = and i64 %89, 65536
  %94 = icmp eq i64 %93, 0
  %95 = select i1 %94, i8 %5, i8 1
  br label %96

96:                                               ; preds = %88, %76, %57, %65, %66, %84, %51, %72
  %97 = phi i8 [ %5, %65 ], [ %5, %66 ], [ %5, %84 ], [ %52, %51 ], [ %5, %72 ], [ %64, %57 ], [ %83, %76 ], [ %95, %88 ]
  %98 = phi i8 [ %6, %65 ], [ %6, %66 ], [ %6, %84 ], [ %53, %51 ], [ %6, %72 ], [ %61, %57 ], [ %80, %76 ], [ %92, %88 ]
  br label %4, !llvm.loop !124

99:                                               ; preds = %4
  store i8 %6, ptr %2, align 1, !tbaa !17
  store i8 %5, ptr %3, align 1, !tbaa !17
  %100 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 44), align 8, !tbaa !125
  %101 = call ptr %100(ptr noundef nonnull %9, ptr noundef nonnull %2, ptr noundef nonnull %3) #29
  %102 = load i64, ptr %101, align 8
  %103 = and i64 %102, 65535
  %104 = icmp eq i64 %103, 47
  br i1 %104, label %105, label %118

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.tree_exp, ptr %101, i64 0, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  %108 = icmp eq ptr %107, null
  br i1 %108, label %136, label %109

109:                                              ; preds = %105
  %110 = load i64, ptr %107, align 8
  %111 = and i64 %110, 131072
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %109
  store i8 0, ptr %2, align 1, !tbaa !17
  br label %114

114:                                              ; preds = %109, %113
  %115 = and i64 %110, 65536
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %136, label %117

117:                                              ; preds = %114
  store i8 1, ptr %3, align 1, !tbaa !17
  br label %136

118:                                              ; preds = %99
  %119 = add nsw i64 %103, -23
  %120 = icmp ult i64 %119, 6
  br i1 %120, label %136, label %121

121:                                              ; preds = %118
  %122 = add nsw i64 %103, -29
  %123 = icmp ult i64 %122, 12
  br i1 %123, label %124, label %130

124:                                              ; preds = %121
  %125 = call ptr @staticp(ptr noundef nonnull %101)
  %126 = icmp ne ptr %125, null
  %127 = load i8, ptr %2, align 1, !tbaa !17
  %128 = zext i1 %126 to i8
  %129 = and i8 %127, %128
  store i8 %129, ptr %2, align 1, !tbaa !17
  br label %136

130:                                              ; preds = %121
  store i8 0, ptr %2, align 1, !tbaa !17
  %131 = load i8, ptr %3, align 1, !tbaa !17
  %132 = lshr i64 %102, 16
  %133 = trunc i64 %132 to i8
  %134 = and i8 %133, 1
  %135 = or i8 %131, %134
  store i8 %135, ptr %3, align 1, !tbaa !17
  br label %136

136:                                              ; preds = %114, %117, %105, %118, %130, %124
  %137 = load i8, ptr %2, align 1, !tbaa !17
  %138 = load i64, ptr %0, align 8
  %139 = and i8 %137, 1
  %140 = zext i8 %139 to i64
  %141 = shl nuw nsw i64 %140, 17
  %142 = and i64 %138, -196609
  %143 = or i64 %141, %142
  %144 = load i8, ptr %3, align 1, !tbaa !17
  %145 = and i8 %144, 1
  %146 = zext i8 %145 to i64
  %147 = shl nuw nsw i64 %146, 16
  %148 = or i64 %147, %143
  store i64 %148, ptr %0, align 8
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #29
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #29
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build0_stat(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %3
  %5 = load i8, ptr %4, align 1, !tbaa !17
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3567, ptr noundef nonnull @.str.219) #29
  br label %8

8:                                                ; preds = %2, %7
  %9 = tail call ptr @make_node_stat(i32 noundef %0)
  %10 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 2
  store ptr %1, ptr %10, align 8, !tbaa !17
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @tree_block(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %3
  %5 = load i32, ptr %4, align 4, !tbaa !17
  %6 = shl i32 %5, 24
  %7 = add i32 %6, -50331649
  %8 = icmp ult i32 %7, 134217727
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 2
  br label %12

11:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10311, ptr noundef nonnull @.str.219) #29
  br label %12

12:                                               ; preds = %11, %9
  %13 = phi ptr [ %10, %9 ], [ null, %11 ]
  ret ptr %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build2_stat(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %5
  %7 = load i8, ptr %6, align 1, !tbaa !17
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3679, ptr noundef nonnull @.str.219) #29
  br label %10

10:                                               ; preds = %4, %9
  %11 = add i32 %0, -63
  %12 = icmp ult i32 %11, 3
  %13 = icmp ne ptr %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne ptr %3, null
  %16 = and i1 %14, %15
  %17 = icmp ne ptr %1, null
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %39

19:                                               ; preds = %10
  %20 = load i64, ptr %1, align 8
  %21 = trunc i64 %20 to i16
  switch i16 %21, label %66 [
    i16 10, label %22
    i16 12, label %22
  ]

22:                                               ; preds = %19, %19
  %23 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %24 = getelementptr inbounds %struct.tree_type, ptr %23, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %27 = load i32, ptr %26, align 4
  %28 = xor i32 %27, %25
  %29 = and i32 %28, 1023
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %66

31:                                               ; preds = %22
  %32 = load i64, ptr %2, align 8
  %33 = and i64 %32, 65535
  %34 = icmp eq i64 %33, 23
  br i1 %34, label %35, label %64

35:                                               ; preds = %31
  %36 = load i64, ptr %3, align 8
  %37 = and i64 %36, 65535
  %38 = icmp eq i64 %37, 23
  br i1 %38, label %66, label %64

39:                                               ; preds = %10
  %40 = icmp eq i32 %0, 66
  %41 = and i1 %40, %13
  %42 = and i1 %41, %15
  %43 = and i1 %17, %42
  br i1 %43, label %44, label %66

44:                                               ; preds = %39
  %45 = load i64, ptr %1, align 8
  %46 = trunc i64 %45 to i16
  switch i16 %46, label %64 [
    i16 10, label %47
    i16 12, label %47
  ]

47:                                               ; preds = %44, %44
  %48 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = load i64, ptr %49, align 8
  %51 = trunc i64 %50 to i16
  switch i16 %51, label %64 [
    i16 10, label %52
    i16 12, label %52
  ]

52:                                               ; preds = %47, %47
  %53 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = load i64, ptr %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = and i32 %56, 65535
  %58 = add nsw i32 %57, -6
  %59 = icmp ult i32 %58, 3
  br i1 %59, label %60, label %64

60:                                               ; preds = %52
  %61 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %62 = tail call zeroext i8 @useless_type_conversion_p(ptr noundef %61, ptr noundef nonnull %54) #29
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %60, %44, %47, %52, %31, %35
  %65 = phi i32 [ 3688, %35 ], [ 3688, %31 ], [ 3693, %52 ], [ 3693, %47 ], [ 3693, %44 ], [ 3693, %60 ]
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef %65, ptr noundef nonnull @.str.219) #29
  br label %66

66:                                               ; preds = %64, %22, %35, %19, %60, %39
  %67 = tail call ptr @make_node_stat(i32 noundef %0)
  %68 = getelementptr inbounds %struct.tree_common, ptr %67, i64 0, i32 2
  store ptr %1, ptr %68, align 8, !tbaa !17
  %69 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %5
  %70 = add nsw i64 %5, -97
  %71 = icmp ult i64 %70, 14
  br i1 %71, label %76, label %72

72:                                               ; preds = %66
  %73 = load i32, ptr %69, align 4, !tbaa !17
  %74 = icmp eq i32 %73, 7
  %75 = zext i1 %74 to i8
  br label %76

76:                                               ; preds = %72, %66
  %77 = phi i8 [ 1, %66 ], [ %75, %72 ]
  %78 = load i64, ptr %67, align 8
  %79 = lshr i64 %78, 16
  %80 = trunc i64 %79 to i8
  %81 = and i8 %80, 1
  %82 = getelementptr inbounds %struct.tree_exp, ptr %67, i64 0, i32 3
  store ptr %2, ptr %82, align 8, !tbaa !17
  br i1 %13, label %83, label %101

83:                                               ; preds = %76
  %84 = load i64, ptr %2, align 8
  %85 = and i64 %84, 65535
  %86 = add nsw i64 %85, -5
  %87 = icmp ult i64 %86, 18
  br i1 %87, label %101, label %88

88:                                               ; preds = %83
  %89 = and i64 %84, 65536
  %90 = icmp eq i64 %89, 0
  %91 = select i1 %90, i8 %81, i8 1
  %92 = and i64 %84, 1048576
  %93 = icmp ne i64 %92, 0
  %94 = add nsw i64 %85, -23
  %95 = icmp ult i64 %94, 6
  %96 = select i1 %93, i1 true, i1 %95
  %97 = zext i1 %96 to i8
  %98 = and i64 %84, 131072
  %99 = icmp eq i64 %98, 0
  %100 = select i1 %99, i8 0, i8 %77
  br label %101

101:                                              ; preds = %88, %76, %83
  %102 = phi i8 [ 1, %83 ], [ 1, %76 ], [ %97, %88 ]
  %103 = phi i8 [ %81, %83 ], [ %81, %76 ], [ %91, %88 ]
  %104 = phi i8 [ %77, %83 ], [ %77, %76 ], [ %100, %88 ]
  %105 = getelementptr inbounds %struct.tree_exp, ptr %67, i64 1
  store ptr %3, ptr %105, align 8, !tbaa !17
  br i1 %15, label %106, label %124

106:                                              ; preds = %101
  %107 = load i64, ptr %3, align 8
  %108 = and i64 %107, 65535
  %109 = add nsw i64 %108, -5
  %110 = icmp ult i64 %109, 18
  br i1 %110, label %124, label %111

111:                                              ; preds = %106
  %112 = and i64 %107, 65536
  %113 = icmp eq i64 %112, 0
  %114 = select i1 %113, i8 %103, i8 1
  %115 = and i64 %107, 1048576
  %116 = icmp eq i64 %115, 0
  %117 = add nsw i64 %108, -23
  %118 = icmp ult i64 %117, 6
  %119 = select i1 %118, i8 %102, i8 0
  %120 = select i1 %116, i8 %119, i8 %102
  %121 = and i64 %107, 131072
  %122 = icmp eq i64 %121, 0
  %123 = select i1 %122, i8 0, i8 %104
  br label %124

124:                                              ; preds = %111, %106, %101
  %125 = phi i8 [ %102, %106 ], [ %102, %101 ], [ %120, %111 ]
  %126 = phi i8 [ %103, %106 ], [ %103, %101 ], [ %114, %111 ]
  %127 = phi i8 [ %104, %106 ], [ %104, %101 ], [ %123, %111 ]
  %128 = zext i8 %125 to i64
  %129 = shl nuw nsw i64 %128, 20
  %130 = and i64 %78, -1245185
  %131 = or i64 %129, %130
  %132 = zext i8 %127 to i64
  %133 = shl nuw nsw i64 %132, 17
  %134 = zext i8 %126 to i64
  %135 = shl nuw nsw i64 %134, 16
  %136 = or i64 %131, %135
  %137 = or i64 %136, %133
  store i64 %137, ptr %67, align 8
  %138 = load i32, ptr %69, align 4, !tbaa !17
  %139 = icmp eq i32 %138, 4
  %140 = and i1 %13, %139
  br i1 %140, label %141, label %144

141:                                              ; preds = %124
  %142 = load i64, ptr %2, align 8
  %143 = and i64 %142, 524288
  br label %144

144:                                              ; preds = %141, %124
  %145 = phi i64 [ 0, %124 ], [ %143, %141 ]
  %146 = and i64 %137, -524289
  %147 = or i64 %145, %146
  store i64 %147, ptr %67, align 8
  ret ptr %67
}

declare zeroext i8 @useless_type_conversion_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build3_stat(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #9 {
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [191 x i8], ptr @tree_code_length, i64 0, i64 %6
  %8 = load i8, ptr %7, align 1, !tbaa !17
  %9 = icmp eq i8 %8, 3
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3731, ptr noundef nonnull @.str.219) #29
  br label %11

11:                                               ; preds = %5, %10
  %12 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %6
  %13 = icmp eq i32 %0, 59
  br i1 %13, label %14, label %17

14:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3732, ptr noundef nonnull @.str.219) #29
  %15 = tail call ptr @make_node_stat(i32 noundef 59)
  %16 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  store ptr %1, ptr %16, align 8, !tbaa !17
  br label %28

17:                                               ; preds = %11
  %18 = tail call ptr @make_node_stat(i32 noundef %0)
  %19 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  store ptr %1, ptr %19, align 8, !tbaa !17
  %20 = icmp eq i32 %0, 56
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %23 = icmp eq ptr %22, %1
  %24 = icmp eq ptr %3, null
  %25 = and i1 %24, %23
  %26 = icmp eq ptr %4, null
  %27 = and i1 %26, %25
  br i1 %27, label %35, label %28

28:                                               ; preds = %14, %21, %17
  %29 = phi i1 [ false, %14 ], [ true, %21 ], [ false, %17 ]
  %30 = phi ptr [ %15, %14 ], [ %18, %21 ], [ %18, %17 ]
  %31 = load i64, ptr %30, align 8
  %32 = lshr i64 %31, 16
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  br label %35

35:                                               ; preds = %21, %28
  %36 = phi i1 [ %29, %28 ], [ true, %21 ]
  %37 = phi ptr [ %30, %28 ], [ %18, %21 ]
  %38 = phi i8 [ %34, %28 ], [ 1, %21 ]
  %39 = getelementptr inbounds %struct.tree_exp, ptr %37, i64 0, i32 3
  store ptr %2, ptr %39, align 8, !tbaa !17
  %40 = icmp ne ptr %2, null
  br i1 %40, label %41, label %56

41:                                               ; preds = %35
  %42 = load i64, ptr %2, align 8
  %43 = and i64 %42, 65535
  %44 = add nsw i64 %43, -5
  %45 = icmp ult i64 %44, 18
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = and i64 %42, 65536
  %48 = icmp eq i64 %47, 0
  %49 = select i1 %48, i8 %38, i8 1
  %50 = and i64 %42, 1048576
  %51 = icmp ne i64 %50, 0
  %52 = add nsw i64 %43, -23
  %53 = icmp ult i64 %52, 6
  %54 = select i1 %51, i1 true, i1 %53
  %55 = zext i1 %54 to i8
  br label %56

56:                                               ; preds = %46, %35, %41
  %57 = phi i8 [ 1, %41 ], [ 1, %35 ], [ %55, %46 ]
  %58 = phi i8 [ %38, %41 ], [ %38, %35 ], [ %49, %46 ]
  %59 = getelementptr inbounds %struct.tree_exp, ptr %37, i64 1
  store ptr %3, ptr %59, align 8, !tbaa !17
  %60 = icmp eq ptr %3, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %56
  %62 = load i64, ptr %3, align 8
  %63 = and i64 %62, 65535
  %64 = add nsw i64 %63, -5
  %65 = icmp ult i64 %64, 18
  br i1 %65, label %76, label %66

66:                                               ; preds = %61
  %67 = and i64 %62, 65536
  %68 = icmp eq i64 %67, 0
  %69 = select i1 %68, i8 %58, i8 1
  %70 = and i64 %62, 1048576
  %71 = icmp eq i64 %70, 0
  %72 = add nsw i64 %63, -23
  %73 = icmp ult i64 %72, 6
  %74 = select i1 %73, i8 %57, i8 0
  %75 = select i1 %71, i8 %74, i8 %57
  br label %76

76:                                               ; preds = %66, %56, %61
  %77 = phi i8 [ %57, %61 ], [ %57, %56 ], [ %75, %66 ]
  %78 = phi i8 [ %58, %61 ], [ %58, %56 ], [ %69, %66 ]
  %79 = getelementptr inbounds %struct.tree_exp, ptr %37, i64 1, i32 0, i32 1
  store ptr %4, ptr %79, align 8, !tbaa !17
  %80 = icmp eq ptr %4, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %76
  %82 = load i64, ptr %4, align 8
  %83 = and i64 %82, 65535
  %84 = add nsw i64 %83, -5
  %85 = icmp ult i64 %84, 18
  br i1 %85, label %96, label %86

86:                                               ; preds = %81
  %87 = and i64 %82, 65536
  %88 = icmp eq i64 %87, 0
  %89 = select i1 %88, i8 %78, i8 1
  %90 = and i64 %82, 1048576
  %91 = icmp eq i64 %90, 0
  %92 = add nsw i64 %83, -23
  %93 = icmp ult i64 %92, 6
  %94 = select i1 %93, i8 %77, i8 0
  %95 = select i1 %91, i8 %94, i8 %77
  br label %96

96:                                               ; preds = %86, %81, %76
  %97 = phi i8 [ %77, %81 ], [ %77, %76 ], [ %95, %86 ]
  %98 = phi i8 [ %78, %81 ], [ %78, %76 ], [ %89, %86 ]
  %99 = load i64, ptr %37, align 8
  %100 = zext i8 %97 to i64
  %101 = shl nuw nsw i64 %100, 20
  %102 = and i64 %99, -1114113
  %103 = or i64 %102, %101
  %104 = select i1 %36, i64 %103, i64 %99
  %105 = zext i8 %98 to i64
  %106 = shl nuw nsw i64 %105, 16
  %107 = and i64 %104, -65537
  %108 = or i64 %107, %106
  store i64 %108, ptr %37, align 8
  %109 = load i32, ptr %12, align 4, !tbaa !17
  %110 = icmp eq i32 %109, 4
  %111 = and i1 %40, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %96
  %113 = load i64, ptr %2, align 8
  %114 = and i64 %113, 524288
  br label %115

115:                                              ; preds = %112, %96
  %116 = phi i64 [ 0, %96 ], [ %114, %112 ]
  %117 = and i64 %108, -524289
  %118 = or i64 %116, %117
  store i64 %118, ptr %37, align 8
  ret ptr %37
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build5_stat(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6) local_unnamed_addr #9 {
  %8 = sext i32 %0 to i64
  %9 = icmp eq i32 %0, 140
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3799, ptr noundef nonnull @.str.219) #29
  br label %11

11:                                               ; preds = %7, %10
  %12 = tail call ptr @make_node_stat(i32 noundef %0)
  %13 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  store ptr %1, ptr %13, align 8, !tbaa !17
  %14 = load i64, ptr %12, align 8
  %15 = lshr i64 %14, 16
  %16 = trunc i64 %15 to i8
  %17 = and i8 %16, 1
  %18 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 0, i32 3
  store ptr %2, ptr %18, align 8, !tbaa !17
  %19 = icmp ne ptr %2, null
  br i1 %19, label %20, label %29

20:                                               ; preds = %11
  %21 = load i64, ptr %2, align 8
  %22 = and i64 %21, 65535
  %23 = add nsw i64 %22, -5
  %24 = icmp ult i64 %23, 18
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = and i64 %21, 65536
  %27 = icmp eq i64 %26, 0
  %28 = select i1 %27, i8 %17, i8 1
  br label %29

29:                                               ; preds = %25, %11, %20
  %30 = phi i8 [ %17, %20 ], [ %17, %11 ], [ %28, %25 ]
  %31 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 1
  store ptr %3, ptr %31, align 8, !tbaa !17
  %32 = icmp eq ptr %3, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %29
  %34 = load i64, ptr %3, align 8
  %35 = and i64 %34, 65535
  %36 = add nsw i64 %35, -5
  %37 = icmp ult i64 %36, 18
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = and i64 %34, 65536
  %40 = icmp eq i64 %39, 0
  %41 = select i1 %40, i8 %30, i8 1
  br label %42

42:                                               ; preds = %38, %29, %33
  %43 = phi i8 [ %30, %33 ], [ %30, %29 ], [ %41, %38 ]
  %44 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 1, i32 0, i32 1
  store ptr %4, ptr %44, align 8, !tbaa !17
  %45 = icmp eq ptr %4, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %42
  %47 = load i64, ptr %4, align 8
  %48 = and i64 %47, 65535
  %49 = add nsw i64 %48, -5
  %50 = icmp ult i64 %49, 18
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  %52 = and i64 %47, 65536
  %53 = icmp eq i64 %52, 0
  %54 = select i1 %53, i8 %43, i8 1
  br label %55

55:                                               ; preds = %51, %42, %46
  %56 = phi i8 [ %43, %46 ], [ %43, %42 ], [ %54, %51 ]
  %57 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 1, i32 0, i32 2
  store ptr %5, ptr %57, align 8, !tbaa !17
  %58 = icmp eq ptr %5, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %55
  %60 = load i64, ptr %5, align 8
  %61 = and i64 %60, 65535
  %62 = add nsw i64 %61, -5
  %63 = icmp ult i64 %62, 18
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = and i64 %60, 65536
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i8 %56, i8 1
  br label %68

68:                                               ; preds = %64, %55, %59
  %69 = phi i8 [ %56, %59 ], [ %56, %55 ], [ %67, %64 ]
  %70 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 1, i32 1
  store ptr %6, ptr %70, align 8, !tbaa !17
  %71 = icmp eq ptr %6, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %68
  %73 = load i64, ptr %6, align 8
  %74 = and i64 %73, 65535
  %75 = add nsw i64 %74, -5
  %76 = icmp ult i64 %75, 18
  br i1 %76, label %81, label %77

77:                                               ; preds = %72
  %78 = and i64 %73, 65536
  %79 = icmp eq i64 %78, 0
  %80 = select i1 %79, i8 %69, i8 1
  br label %81

81:                                               ; preds = %77, %72, %68
  %82 = phi i8 [ %69, %72 ], [ %69, %68 ], [ %80, %77 ]
  %83 = zext i8 %82 to i64
  %84 = shl nuw nsw i64 %83, 16
  %85 = and i64 %14, -65537
  %86 = or i64 %84, %85
  store i64 %86, ptr %12, align 8
  %87 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %8
  %88 = load i32, ptr %87, align 4, !tbaa !17
  %89 = icmp eq i32 %88, 4
  %90 = and i1 %19, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %81
  %92 = load i64, ptr %2, align 8
  %93 = and i64 %92, 524288
  br label %94

94:                                               ; preds = %91, %81
  %95 = phi i64 [ 0, %81 ], [ %93, %91 ]
  %96 = and i64 %86, -524289
  %97 = or i64 %95, %96
  store i64 %97, ptr %12, align 8
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build6_stat(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %7) local_unnamed_addr #9 {
  %9 = icmp eq i32 %0, 152
  br i1 %9, label %11, label %10

10:                                               ; preds = %8
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 3827, ptr noundef nonnull @.str.219) #29
  br label %11

11:                                               ; preds = %8, %10
  %12 = phi i32 [ %0, %10 ], [ 152, %8 ]
  %13 = tail call ptr @make_node_stat(i32 noundef %12)
  %14 = getelementptr inbounds %struct.tree_common, ptr %13, i64 0, i32 2
  store ptr %1, ptr %14, align 8, !tbaa !17
  %15 = load i64, ptr %13, align 8
  %16 = lshr i64 %15, 16
  %17 = trunc i64 %16 to i8
  %18 = and i8 %17, 1
  %19 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 0, i32 3
  store ptr %2, ptr %19, align 8, !tbaa !17
  %20 = icmp eq ptr %2, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %11
  %22 = load i64, ptr %2, align 8
  %23 = and i64 %22, 65535
  %24 = add nsw i64 %23, -5
  %25 = icmp ult i64 %24, 18
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = and i64 %22, 65536
  %28 = icmp eq i64 %27, 0
  %29 = select i1 %28, i8 %18, i8 1
  br label %30

30:                                               ; preds = %26, %11, %21
  %31 = phi i8 [ %18, %21 ], [ %18, %11 ], [ %29, %26 ]
  %32 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1
  store ptr %3, ptr %32, align 8, !tbaa !17
  %33 = icmp eq ptr %3, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %30
  %35 = load i64, ptr %3, align 8
  %36 = and i64 %35, 65535
  %37 = add nsw i64 %36, -5
  %38 = icmp ult i64 %37, 18
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = and i64 %35, 65536
  %41 = icmp eq i64 %40, 0
  %42 = select i1 %41, i8 %31, i8 1
  br label %43

43:                                               ; preds = %39, %30, %34
  %44 = phi i8 [ %31, %34 ], [ %31, %30 ], [ %42, %39 ]
  %45 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 0, i32 1
  store ptr %4, ptr %45, align 8, !tbaa !17
  %46 = icmp eq ptr %4, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = load i64, ptr %4, align 8
  %49 = and i64 %48, 65535
  %50 = add nsw i64 %49, -5
  %51 = icmp ult i64 %50, 18
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = and i64 %48, 65536
  %54 = icmp eq i64 %53, 0
  %55 = select i1 %54, i8 %44, i8 1
  br label %56

56:                                               ; preds = %52, %43, %47
  %57 = phi i8 [ %44, %47 ], [ %44, %43 ], [ %55, %52 ]
  %58 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 0, i32 2
  store ptr %5, ptr %58, align 8, !tbaa !17
  %59 = icmp eq ptr %5, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = load i64, ptr %5, align 8
  %62 = and i64 %61, 65535
  %63 = add nsw i64 %62, -5
  %64 = icmp ult i64 %63, 18
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = and i64 %61, 65536
  %67 = icmp eq i64 %66, 0
  %68 = select i1 %67, i8 %57, i8 1
  br label %69

69:                                               ; preds = %65, %56, %60
  %70 = phi i8 [ %57, %60 ], [ %57, %56 ], [ %68, %65 ]
  %71 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 1
  store ptr %6, ptr %71, align 8, !tbaa !17
  %72 = icmp eq ptr %6, null
  br i1 %72, label %82, label %73

73:                                               ; preds = %69
  %74 = load i64, ptr %6, align 8
  %75 = and i64 %74, 65535
  %76 = add nsw i64 %75, -5
  %77 = icmp ult i64 %76, 18
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = and i64 %74, 65536
  %80 = icmp eq i64 %79, 0
  %81 = select i1 %80, i8 %70, i8 1
  br label %82

82:                                               ; preds = %78, %73, %69
  %83 = phi i8 [ %70, %73 ], [ %70, %69 ], [ %81, %78 ]
  %84 = select i1 %9, i8 0, i8 %83
  %85 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 1, i32 2
  store ptr %7, ptr %85, align 8, !tbaa !17
  %86 = icmp ne ptr %7, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %82
  %88 = zext i8 %84 to i64
  %89 = shl nuw nsw i64 %88, 16
  %90 = and i64 %15, -65537
  %91 = or i64 %89, %90
  br label %109

92:                                               ; preds = %82
  %93 = load i64, ptr %7, align 8
  %94 = and i64 %93, 65535
  %95 = add nsw i64 %94, -5
  %96 = icmp ult i64 %95, 18
  %97 = and i64 %93, 65536
  %98 = icmp eq i64 %97, 0
  %99 = select i1 %96, i1 true, i1 %98
  %100 = zext i8 %84 to i64
  %101 = shl nuw nsw i64 %100, 16
  %102 = select i1 %99, i64 %101, i64 65536
  %103 = and i64 %15, -65537
  %104 = or i64 %102, %103
  store i64 %104, ptr %13, align 8
  %105 = and i1 %9, %86
  br i1 %105, label %106, label %109

106:                                              ; preds = %92
  %107 = load i64, ptr %7, align 8
  %108 = and i64 %107, 524288
  br label %109

109:                                              ; preds = %87, %106, %92
  %110 = phi i64 [ %104, %92 ], [ %104, %106 ], [ %91, %87 ]
  %111 = phi i64 [ 0, %92 ], [ %108, %106 ], [ 0, %87 ]
  %112 = and i64 %110, -524289
  %113 = or i64 %111, %112
  store i64 %113, ptr %13, align 8
  ret ptr %13
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #19

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #19

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_nt_call_list(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %9, %4 ], [ 0, %2 ]
  %6 = phi ptr [ %8, %4 ], [ %1, %2 ]
  %7 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = add nuw nsw i32 %5, 1
  %10 = icmp eq ptr %8, null
  br i1 %10, label %11, label %4, !llvm.loop !81

11:                                               ; preds = %4
  %12 = add nuw nsw i32 %5, 4
  br label %13

13:                                               ; preds = %11, %2
  %14 = phi i32 [ %12, %11 ], [ 3, %2 ]
  %15 = shl i32 %14, 3
  %16 = add i32 %15, 40
  %17 = sext i32 %16 to i64
  %18 = tail call ptr @ggc_alloc_stat(i64 noundef %17) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %18, i8 0, i64 %17, i1 false)
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, -65536
  %21 = or i64 %20, 59
  store i64 %21, ptr %18, align 8
  %22 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %23 = sext i32 %14 to i64
  %24 = icmp eq ptr %22, null
  %25 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %26 = select i1 %24, ptr %25, ptr %22
  %27 = ashr i64 %23, 63
  %28 = tail call ptr @build_int_cst_wide(ptr noundef %26, i64 noundef %23, i64 noundef %27)
  %29 = getelementptr inbounds %struct.tree_exp, ptr %18, i64 0, i32 3
  store ptr %28, ptr %29, align 8, !tbaa !17
  %30 = getelementptr inbounds %struct.tree_exp, ptr %18, i64 1
  store ptr %0, ptr %30, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.tree_exp, ptr %18, i64 1, i32 0, i32 1
  store ptr null, ptr %31, align 8, !tbaa !17
  br i1 %3, label %43, label %32

32:                                               ; preds = %13, %32
  %33 = phi i64 [ %41, %32 ], [ 0, %13 ]
  %34 = phi ptr [ %40, %32 ], [ %1, %13 ]
  %35 = getelementptr inbounds %struct.tree_list, ptr %34, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = add nuw nsw i64 %33, 3
  %38 = getelementptr inbounds %struct.tree_exp, ptr %18, i64 0, i32 3, i64 %37
  store ptr %36, ptr %38, align 8, !tbaa !17
  %39 = getelementptr inbounds %struct.tree_common, ptr %34, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = add nuw i64 %33, 1
  %42 = icmp eq ptr %40, null
  br i1 %42, label %43, label %32, !llvm.loop !126

43:                                               ; preds = %32, %13
  ret ptr %18
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_vl_exp_stat(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq i32 %0, 59
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9403, ptr noundef nonnull @.str.219) #29
  br label %5

5:                                                ; preds = %2, %4
  %6 = icmp sgt i32 %1, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9404, ptr noundef nonnull @.str.219) #29
  br label %8

8:                                                ; preds = %5, %7
  %9 = shl i32 %1, 3
  %10 = add i32 %9, 40
  %11 = sext i32 %10 to i64
  %12 = tail call ptr @ggc_alloc_stat(i64 noundef %11) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 %11, i1 false)
  %13 = load i64, ptr %12, align 8
  %14 = and i32 %0, 65535
  %15 = zext i32 %14 to i64
  %16 = and i64 %13, -65536
  %17 = or i64 %16, %15
  store i64 %17, ptr %12, align 8
  %18 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %19 = sext i32 %1 to i64
  %20 = icmp eq ptr %18, null
  %21 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %22 = select i1 %20, ptr %21, ptr %18
  %23 = ashr i64 %19, 63
  %24 = tail call ptr @build_int_cst_wide(ptr noundef %22, i64 noundef %19, i64 noundef %23)
  %25 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 0, i32 3
  store ptr %24, ptr %25, align 8, !tbaa !17
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_nt_call_vec(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = load i32, ptr %1, align 8, !tbaa !61
  %6 = add i32 %5, 3
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9404, ptr noundef nonnull @.str.219) #29
  br label %9

9:                                                ; preds = %2, %4, %8
  %10 = phi i32 [ %6, %4 ], [ %6, %8 ], [ 3, %2 ]
  %11 = shl i32 %10, 3
  %12 = add i32 %11, 40
  %13 = sext i32 %12 to i64
  %14 = tail call ptr @ggc_alloc_stat(i64 noundef %13) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %14, i8 0, i64 %13, i1 false)
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, -65536
  %17 = or i64 %16, 59
  store i64 %17, ptr %14, align 8
  %18 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %19 = sext i32 %10 to i64
  %20 = icmp eq ptr %18, null
  %21 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %22 = select i1 %20, ptr %21, ptr %18
  %23 = ashr i64 %19, 63
  %24 = tail call ptr @build_int_cst_wide(ptr noundef %22, i64 noundef %19, i64 noundef %23)
  %25 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3
  store ptr %24, ptr %25, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 1
  store ptr %0, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 1, i32 0, i32 1
  store ptr null, ptr %27, align 8, !tbaa !17
  br i1 %3, label %42, label %28

28:                                               ; preds = %9
  %29 = load i32, ptr %1, align 8, !tbaa !61
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %28, %31
  %32 = phi i64 [ %38, %31 ], [ 0, %28 ]
  %33 = getelementptr inbounds %struct.VEC_tree_base, ptr %1, i64 0, i32 2, i64 %32
  %34 = load ptr, ptr %33, align 8, !tbaa !6
  %35 = add nuw i64 %32, 3
  %36 = and i64 %35, 4294967295
  %37 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3, i64 %36
  store ptr %34, ptr %37, align 8, !tbaa !17
  %38 = add nuw nsw i64 %32, 1
  %39 = load i32, ptr %1, align 8, !tbaa !61
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %31, label %42

42:                                               ; preds = %31, %28, %9
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_decl_stat(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = tail call ptr @make_node_stat(i32 noundef %1)
  %6 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 1
  store i32 %0, ptr %6, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 3
  store ptr %2, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  store ptr %3, ptr %8, align 8, !tbaa !17
  switch i32 %1, label %10 [
    i32 36, label %9
    i32 34, label %9
    i32 32, label %9
  ]

9:                                                ; preds = %4, %4, %4
  tail call void @layout_decl(ptr noundef nonnull %5, i32 noundef 0) #29
  br label %10

10:                                               ; preds = %4, %9
  ret ptr %5
}

declare void @layout_decl(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_fn_decl(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @get_identifier(ptr noundef %0) #29
  %4 = load i32, ptr @input_location, align 4, !tbaa !21
  %5 = tail call ptr @make_node_stat(i32 noundef 29)
  %6 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 1
  store i32 %4, ptr %6, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 3
  store ptr %3, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  store ptr %1, ptr %8, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_decl_common, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %9, align 8
  %11 = load i64, ptr %5, align 8
  %12 = or i64 %10, 33558528
  store i64 %12, ptr %9, align 8
  %13 = or i64 %11, 167772160
  store i64 %13, ptr %5, align 8
  ret ptr %5
}

declare ptr @get_identifier(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_block(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = tail call ptr @make_node_stat(i32 noundef 4)
  %6 = getelementptr inbounds %struct.tree_block, ptr %5, i64 0, i32 3
  store ptr %0, ptr %6, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_block, ptr %5, i64 0, i32 5
  store ptr %1, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_block, ptr %5, i64 0, i32 6
  store ptr %2, ptr %8, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 1
  store ptr %3, ptr %9, align 8, !tbaa !17
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @expand_location(ptr noalias nocapture writeonly sret(%struct.expanded_location) align 8 %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, 0
  %6 = select i1 %5, ptr null, ptr @.str.220
  br label %28

7:                                                ; preds = %2
  %8 = load ptr, ptr @line_table, align 8, !tbaa !6
  %9 = tail call ptr @linemap_lookup(ptr noundef %8, i32 noundef %1) #29
  %10 = load ptr, ptr %9, align 8, !tbaa !127
  %11 = getelementptr inbounds %struct.line_map, ptr %9, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !129
  %13 = sub i32 %1, %12
  %14 = getelementptr inbounds %struct.line_map, ptr %9, i64 0, i32 6
  %15 = load i8, ptr %14, align 2
  %16 = zext i8 %15 to i32
  %17 = lshr i32 %13, %16
  %18 = getelementptr inbounds %struct.line_map, ptr %9, i64 0, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !130
  %20 = add i32 %17, %19
  %21 = shl nsw i32 -1, %16
  %22 = xor i32 %21, -1
  %23 = and i32 %13, %22
  %24 = getelementptr inbounds %struct.line_map, ptr %9, i64 0, i32 5
  %25 = load i8, ptr %24, align 1, !tbaa !131
  %26 = icmp ne i8 %25, 0
  %27 = zext i1 %26 to i8
  br label %28

28:                                               ; preds = %7, %4
  %29 = phi ptr [ %6, %4 ], [ %10, %7 ]
  %30 = phi i32 [ 0, %4 ], [ %20, %7 ]
  %31 = phi i32 [ 0, %4 ], [ %23, %7 ]
  %32 = phi i8 [ 0, %4 ], [ %27, %7 ]
  store ptr %29, ptr %0, align 8
  %33 = getelementptr inbounds %struct.expanded_location, ptr %0, i64 0, i32 1
  store i32 %30, ptr %33, align 8
  %34 = getelementptr inbounds %struct.expanded_location, ptr %0, i64 0, i32 2
  store i32 %31, ptr %34, align 4
  %35 = getelementptr inbounds %struct.expanded_location, ptr %0, i64 0, i32 3
  store i8 %32, ptr %35, align 8
  ret void
}

declare ptr @linemap_lookup(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local void @protected_set_expr_location(ptr noundef %0, i32 noundef %1) local_unnamed_addr #20 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = load i64, ptr %0, align 8
  %6 = and i64 %5, 65535
  %7 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %6
  %8 = load i32, ptr %7, align 4, !tbaa !17
  %9 = icmp ugt i32 %8, 3
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  store i32 %1, ptr %11, align 8, !tbaa !17
  br label %12

12:                                               ; preds = %10, %4, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define dso_local ptr @build_decl_attribute_variant(ptr noundef returned writeonly %0, ptr noundef %1) local_unnamed_addr #21 {
  %3 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  store ptr %1, ptr %3, align 8, !tbaa !17
  ret ptr %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local i32 @iterative_hash_hashval_t(i32 noundef %0, i32 noundef %1) local_unnamed_addr #22 {
  %3 = add i32 %0, %1
  %4 = sub i32 -1640531527, %3
  %5 = lshr i32 %1, 13
  %6 = xor i32 %4, %5
  %7 = add i32 %6, %1
  %8 = sub i32 %0, %7
  %9 = shl i32 %6, 8
  %10 = xor i32 %8, %9
  %11 = add i32 %6, %10
  %12 = sub i32 %1, %11
  %13 = lshr i32 %10, 13
  %14 = xor i32 %12, %13
  %15 = add i32 %10, %14
  %16 = sub i32 %6, %15
  %17 = lshr i32 %14, 12
  %18 = xor i32 %16, %17
  %19 = add i32 %14, %18
  %20 = sub i32 %10, %19
  %21 = shl i32 %18, 16
  %22 = xor i32 %20, %21
  %23 = add i32 %18, %22
  %24 = sub i32 %14, %23
  %25 = lshr i32 %22, 5
  %26 = xor i32 %24, %25
  %27 = add i32 %22, %26
  %28 = sub i32 %18, %27
  %29 = lshr i32 %26, 3
  %30 = xor i32 %28, %29
  %31 = add i32 %26, %30
  %32 = sub i32 %22, %31
  %33 = shl i32 %30, 10
  %34 = xor i32 %32, %33
  %35 = add i32 %30, %34
  %36 = sub i32 %26, %35
  %37 = lshr i32 %34, 15
  %38 = xor i32 %36, %37
  ret i32 %38
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local i32 @iterative_hash_host_wide_int(i64 noundef %0, i32 noundef %1) local_unnamed_addr #22 {
  %3 = trunc i64 %0 to i32
  %4 = lshr i64 %0, 32
  %5 = trunc i64 %4 to i32
  %6 = add i32 %5, %1
  %7 = sub i32 %3, %6
  %8 = lshr i32 %1, 13
  %9 = xor i32 %7, %8
  %10 = add i32 %9, %1
  %11 = sub i32 %5, %10
  %12 = shl i32 %9, 8
  %13 = xor i32 %11, %12
  %14 = add i32 %9, %13
  %15 = sub i32 %1, %14
  %16 = lshr i32 %13, 13
  %17 = xor i32 %15, %16
  %18 = add i32 %13, %17
  %19 = sub i32 %9, %18
  %20 = lshr i32 %17, 12
  %21 = xor i32 %19, %20
  %22 = add i32 %17, %21
  %23 = sub i32 %13, %22
  %24 = shl i32 %21, 16
  %25 = xor i32 %23, %24
  %26 = add i32 %21, %25
  %27 = sub i32 %17, %26
  %28 = lshr i32 %25, 5
  %29 = xor i32 %27, %28
  %30 = add i32 %25, %29
  %31 = sub i32 %21, %30
  %32 = lshr i32 %29, 3
  %33 = xor i32 %31, %32
  %34 = add i32 %29, %33
  %35 = sub i32 %25, %34
  %36 = shl i32 %33, 10
  %37 = xor i32 %35, %36
  %38 = add i32 %33, %37
  %39 = sub i32 %29, %38
  %40 = lshr i32 %37, 15
  %41 = xor i32 %39, %40
  ret i32 %41
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_type_attribute_qual_variant(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = tail call i32 @attribute_list_contained(ptr noundef %7, ptr noundef %1)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call i32 @attribute_list_contained(ptr noundef %1, ptr noundef %7)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %102

13:                                               ; preds = %3, %10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #29
  %14 = load i64, ptr %0, align 8
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 65535
  store i32 %16, ptr %4, align 4, !tbaa !17
  %17 = trunc i64 %14 to i16
  switch i16 %17, label %18 [
    i16 16, label %97
    i16 17, label %97
    i16 18, label %97
    i16 6, label %97
  ]

18:                                               ; preds = %13
  %19 = tail call ptr @build_qualified_type(ptr noundef nonnull %0, i32 noundef 0)
  %20 = tail call ptr @copy_node_stat(ptr noundef %19)
  %21 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 9
  %22 = getelementptr inbounds %struct.tree_type, ptr %19, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, i8 0, i64 16, i1 false)
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = icmp eq ptr %23, null
  %25 = select i1 %24, ptr null, ptr %20
  %26 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 19
  store ptr %25, ptr %26, align 8
  %27 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 16
  store ptr %20, ptr %27, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 15
  store ptr null, ptr %28, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 4
  store ptr %1, ptr %29, align 8, !tbaa !17
  %30 = call i32 @iterative_hash(ptr noundef nonnull %4, i64 noundef 4, i32 noundef 0) #29
  %31 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %18
  %35 = getelementptr inbounds %struct.tree_type, ptr %32, i64 0, i32 5
  %36 = call i32 @iterative_hash(ptr noundef nonnull %35, i64 noundef 4, i32 noundef %30) #29
  br label %37

37:                                               ; preds = %34, %18
  %38 = phi i32 [ %36, %34 ], [ %30, %18 ]
  %39 = icmp eq ptr %1, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %37, %40
  %41 = phi ptr [ %48, %40 ], [ %1, %37 ]
  %42 = phi i32 [ %46, %40 ], [ %38, %37 ]
  %43 = getelementptr inbounds %struct.tree_list, ptr %41, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = getelementptr inbounds %struct.tree_identifier, ptr %44, i64 0, i32 1, i32 2
  %46 = call i32 @iterative_hash(ptr noundef nonnull %45, i64 noundef 4, i32 noundef %42) #29
  %47 = getelementptr inbounds %struct.tree_common, ptr %41, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %40, !llvm.loop !132

50:                                               ; preds = %40, %37
  %51 = phi i32 [ %38, %37 ], [ %46, %40 ]
  %52 = load i64, ptr %20, align 8
  %53 = trunc i64 %52 to i16
  switch i16 %53, label %78 [
    i16 20, label %54
    i16 15, label %58
    i16 8, label %65
    i16 9, label %73
    i16 11, label %73
  ]

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = call fastcc i32 @type_hash_list(ptr noundef %56, i32 noundef %51)
  br label %78

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = icmp eq ptr %60, null
  br i1 %61, label %78, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.tree_type, ptr %60, i64 0, i32 5
  %64 = call i32 @iterative_hash(ptr noundef nonnull %63, i64 noundef 4, i32 noundef %51) #29
  br label %78

65:                                               ; preds = %50
  %66 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 14
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = getelementptr inbounds %struct.tree_int_cst, ptr %67, i64 0, i32 1
  %69 = call i32 @iterative_hash(ptr noundef nonnull %68, i64 noundef 8, i32 noundef %51) #29
  %70 = load ptr, ptr %66, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.tree_int_cst, ptr %70, i64 0, i32 1, i32 1
  %72 = call i32 @iterative_hash(ptr noundef nonnull %71, i64 noundef 8, i32 noundef %69) #29
  br label %78

73:                                               ; preds = %50, %50
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #29
  %74 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 6
  %75 = load i32, ptr %74, align 4
  %76 = and i32 %75, 1023
  store i32 %76, ptr %5, align 4, !tbaa !21
  %77 = call i32 @iterative_hash(ptr noundef nonnull %5, i64 noundef 4, i32 noundef %51) #29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #29
  br label %78

78:                                               ; preds = %50, %58, %62, %73, %65, %54
  %79 = phi i32 [ %51, %50 ], [ %77, %73 ], [ %72, %65 ], [ %64, %62 ], [ %51, %58 ], [ %57, %54 ]
  %80 = call ptr @type_hash_canon(i32 noundef %79, ptr noundef nonnull %20)
  %81 = load ptr, ptr %22, align 8, !tbaa !17
  %82 = icmp eq ptr %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 14), align 8, !tbaa !133
  %85 = call i32 %84(ptr noundef %80, ptr noundef nonnull %19) #29
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83, %78
  %88 = getelementptr inbounds %struct.tree_type, ptr %80, i64 0, i32 19
  store ptr null, ptr %88, align 8, !tbaa !17
  br label %95

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.tree_type, ptr %80, i64 0, i32 19
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = icmp eq ptr %91, %80
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = load ptr, ptr %22, align 8, !tbaa !17
  store ptr %94, ptr %90, align 8, !tbaa !17
  br label %95

95:                                               ; preds = %87, %93, %89
  %96 = call ptr @build_qualified_type(ptr noundef nonnull %80, i32 noundef %2)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #29
  br label %122

97:                                               ; preds = %13, %13, %13, %13
  %98 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  %100 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.221, ptr noundef %99) #29
  %101 = tail call ptr @build_qualified_type(ptr noundef nonnull %0, i32 noundef %2)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #29
  br label %122

102:                                              ; preds = %10
  %103 = load i64, ptr %0, align 8
  %104 = trunc i64 %103 to i32
  %105 = lshr i32 %104, 20
  %106 = and i32 %105, 1
  %107 = lshr i32 %104, 18
  %108 = and i32 %107, 2
  %109 = or i32 %106, %108
  %110 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %111 = load i32, ptr %110, align 4
  %112 = lshr i32 %111, 11
  %113 = and i32 %112, 4
  %114 = or i32 %109, %113
  %115 = lshr i64 %103, 48
  %116 = trunc i64 %115 to i32
  %117 = and i32 %116, 65280
  %118 = or i32 %114, %117
  %119 = icmp eq i32 %118, %2
  br i1 %119, label %122, label %120

120:                                              ; preds = %102
  %121 = tail call ptr @build_qualified_type(ptr noundef nonnull %0, i32 noundef %2)
  br label %122

122:                                              ; preds = %120, %102, %95, %97
  %123 = phi ptr [ %101, %97 ], [ %121, %120 ], [ %0, %102 ], [ %96, %95 ]
  ret ptr %123
}

declare zeroext i8 @warning(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_qualified_type(ptr noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @get_qualified_type(ptr noundef %0, i32 noundef %1)
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %44

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = tail call ptr @copy_node_stat(ptr noundef %0)
  %9 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 9
  %10 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  %13 = select i1 %12, ptr null, ptr %8
  %14 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 19
  store ptr %13, ptr %14, align 8
  %15 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 16
  store ptr %8, ptr %15, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 15
  store ptr null, ptr %16, align 8, !tbaa !17
  %17 = load ptr, ptr %10, align 8, !tbaa !17
  store ptr %17, ptr %14, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 15
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  store ptr %19, ptr %16, align 8, !tbaa !17
  store ptr %8, ptr %18, align 8, !tbaa !17
  store ptr %7, ptr %15, align 8, !tbaa !17
  %20 = load i64, ptr %8, align 8
  %21 = and i64 %20, 72057594036355071
  %22 = trunc i32 %1 to i21
  %23 = tail call i21 @llvm.bitreverse.i21(i21 %22)
  %24 = and i21 %23, -524288
  %25 = zext i21 %24 to i64
  %26 = or i64 %21, %25
  %27 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 6
  %28 = load i32, ptr %27, align 4
  %29 = shl i32 %1, 11
  %30 = and i32 %29, 8192
  %31 = and i32 %28, -8193
  %32 = or i32 %31, %30
  store i32 %32, ptr %27, align 4
  %33 = lshr i32 %1, 8
  %34 = and i32 %33, 255
  %35 = zext i32 %34 to i64
  %36 = shl nuw i64 %35, 56
  %37 = or i64 %26, %36
  store i64 %37, ptr %8, align 8
  %38 = load ptr, ptr %10, align 8, !tbaa !17
  %39 = icmp eq ptr %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %5
  %41 = icmp eq ptr %38, %0
  br i1 %41, label %42, label %46

42:                                               ; preds = %5, %40, %46
  %43 = phi ptr [ %47, %46 ], [ %8, %40 ], [ null, %5 ]
  store ptr %43, ptr %14, align 8, !tbaa !17
  br label %44

44:                                               ; preds = %42, %2
  %45 = phi ptr [ %3, %2 ], [ %8, %42 ]
  ret ptr %45

46:                                               ; preds = %40
  %47 = tail call ptr @build_qualified_type(ptr noundef nonnull %38, i32 noundef %1)
  br label %42
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_distinct_type_copy(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call ptr @copy_node_stat(ptr noundef %0)
  %3 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 9
  %4 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  %7 = select i1 %6, ptr null, ptr %2
  %8 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 19
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 16
  store ptr %2, ptr %9, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 15
  store ptr null, ptr %10, align 8, !tbaa !17
  ret ptr %2
}

declare i32 @iterative_hash(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @type_hash_list(ptr noundef readonly %0, i32 noundef %1) unnamed_addr #9 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %6

6:                                                ; preds = %4, %17
  %7 = phi ptr [ %18, %17 ], [ %5, %4 ]
  %8 = phi ptr [ %21, %17 ], [ %0, %4 ]
  %9 = phi i32 [ %19, %17 ], [ %1, %4 ]
  %10 = getelementptr inbounds %struct.tree_list, ptr %8, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, %7
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 5
  %15 = tail call i32 @iterative_hash(ptr noundef nonnull %14, i64 noundef 4, i32 noundef %9) #29
  %16 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi ptr [ %16, %13 ], [ %7, %6 ]
  %19 = phi i32 [ %15, %13 ], [ %9, %6 ]
  %20 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %6, !llvm.loop !134

23:                                               ; preds = %17, %2
  %24 = phi i32 [ %1, %2 ], [ %19, %17 ]
  ret i32 %24
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @type_hash_canon(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca %struct.type_hash, align 8
  %4 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 16
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5949, ptr noundef nonnull @.str.219) #29
  br label %8

8:                                                ; preds = %2, %7
  %9 = load i8, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 15), align 8, !tbaa !135
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #29
  tail call void @layout_type(ptr noundef nonnull %1) #29
  %12 = zext i32 %0 to i64
  store i64 %12, ptr %3, align 8, !tbaa !34
  %13 = getelementptr inbounds %struct.type_hash, ptr %3, i64 0, i32 1
  store ptr %1, ptr %13, align 8, !tbaa !36
  %14 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %15 = call ptr @htab_find_with_hash(ptr noundef %14, ptr noundef nonnull %3, i32 noundef %0) #29
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #29
  br label %22

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.type_hash, ptr %15, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !36
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %17, %18
  %23 = call ptr @ggc_alloc_stat(i64 noundef 16) #29
  store i64 %12, ptr %23, align 8, !tbaa !34
  %24 = getelementptr inbounds %struct.type_hash, ptr %23, i64 0, i32 1
  store ptr %1, ptr %24, align 8, !tbaa !36
  %25 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %26 = call ptr @htab_find_slot_with_hash(ptr noundef %25, ptr noundef nonnull %23, i32 noundef %0, i32 noundef 1) #29
  store ptr %23, ptr %26, align 8, !tbaa !6
  br label %27

27:                                               ; preds = %18, %8, %22
  %28 = phi ptr [ %1, %22 ], [ %1, %8 ], [ %20, %18 ]
  ret ptr %28
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_type_attribute_variant(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i32
  %5 = lshr i32 %4, 20
  %6 = and i32 %5, 1
  %7 = lshr i32 %4, 18
  %8 = and i32 %7, 2
  %9 = or i32 %6, %8
  %10 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 11
  %13 = and i32 %12, 4
  %14 = or i32 %9, %13
  %15 = lshr i64 %3, 48
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 65280
  %18 = or i32 %14, %17
  %19 = tail call ptr @build_type_attribute_qual_variant(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %18)
  ret ptr %19
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @assign_assembler_name_if_neeeded(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %53 [
    i16 29, label %4
    i16 32, label %4
  ]

4:                                                ; preds = %1, %1
  %5 = and i64 %2, 65535
  %6 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %5, i64 13
  %7 = load i8, ptr %6, align 1, !tbaa !17
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %53

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 2048
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %53

18:                                               ; preds = %13
  %19 = and i64 %2, 201392127
  %20 = icmp eq i64 %19, 32
  %21 = and i64 %15, 33554432
  %22 = icmp eq i64 %21, 0
  %23 = and i1 %20, %22
  br i1 %23, label %53, label %24

24:                                               ; preds = %18
  %25 = icmp eq i64 %5, 29
  br i1 %25, label %26, label %38

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %28 = load i32, ptr %27, align 8
  %29 = and i32 %28, 4096
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %26
  %32 = tail call ptr @cgraph_get_node(ptr noundef nonnull %0) #29
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = load i64, ptr %0, align 8
  %36 = and i64 %35, 150994944
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %53, label %38

38:                                               ; preds = %24, %34, %31
  %39 = load i32, ptr @input_location, align 4, !tbaa !21
  %40 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %41 = load i32, ptr %40, align 8, !tbaa !17
  store i32 %41, ptr @input_location, align 4, !tbaa !21
  %42 = load i64, ptr %0, align 8
  %43 = and i64 %42, 65535
  %44 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %43, i64 13
  %45 = load i8, ptr %44, align 1, !tbaa !17
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %38
  %48 = load ptr, ptr %10, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47, %38
  %51 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 16), align 8, !tbaa !58
  tail call void %51(ptr noundef nonnull %0) #29
  br label %52

52:                                               ; preds = %47, %50
  store i32 %39, ptr @input_location, align 4, !tbaa !21
  br label %53

53:                                               ; preds = %34, %26, %18, %13, %4, %9, %1, %52
  ret void
}

declare ptr @cgraph_get_node(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @free_lang_data() #9 {
  %1 = alloca %struct.tree_map, align 8
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca %struct.gimple_stmt_iterator, align 8
  %9 = alloca %struct.free_lang_data_d, align 8
  %10 = load i8, ptr @in_lto_p, align 1, !tbaa !17
  %11 = icmp eq i8 %10, 0
  %12 = load i32, ptr @flag_generate_lto, align 4
  %13 = icmp ne i32 %12, 0
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %15, label %768

15:                                               ; preds = %0
  %16 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @get_alias_set(ptr noundef nonnull %16) #29
  %20 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %21 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 8
  store i32 %19, ptr %21, align 4, !tbaa !17
  br label %22

22:                                               ; preds = %15, %18
  %23 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @get_alias_set(ptr noundef nonnull %23) #29
  %27 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  %28 = getelementptr inbounds %struct.tree_type, ptr %27, i64 0, i32 8
  store i32 %26, ptr %28, align 4, !tbaa !17
  br label %29

29:                                               ; preds = %25, %22
  %30 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16, !tbaa !6
  %31 = icmp eq ptr %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @get_alias_set(ptr noundef nonnull %30) #29
  %34 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16, !tbaa !6
  %35 = getelementptr inbounds %struct.tree_type, ptr %34, i64 0, i32 8
  store i32 %33, ptr %35, align 4, !tbaa !17
  br label %36

36:                                               ; preds = %32, %29
  %37 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8, !tbaa !6
  %38 = icmp eq ptr %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = tail call i32 @get_alias_set(ptr noundef nonnull %37) #29
  %41 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.tree_type, ptr %41, i64 0, i32 8
  store i32 %40, ptr %42, align 4, !tbaa !17
  br label %43

43:                                               ; preds = %39, %36
  %44 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16, !tbaa !6
  %45 = icmp eq ptr %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = tail call i32 @get_alias_set(ptr noundef nonnull %44) #29
  %48 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16, !tbaa !6
  %49 = getelementptr inbounds %struct.tree_type, ptr %48, i64 0, i32 8
  store i32 %47, ptr %49, align 4, !tbaa !17
  br label %50

50:                                               ; preds = %46, %43
  %51 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %52 = icmp eq ptr %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = tail call i32 @get_alias_set(ptr noundef nonnull %51) #29
  %55 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %56 = getelementptr inbounds %struct.tree_type, ptr %55, i64 0, i32 8
  store i32 %54, ptr %56, align 4, !tbaa !17
  br label %57

57:                                               ; preds = %53, %50
  %58 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !6
  %59 = icmp eq ptr %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = tail call i32 @get_alias_set(ptr noundef nonnull %58) #29
  %62 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !6
  %63 = getelementptr inbounds %struct.tree_type, ptr %62, i64 0, i32 8
  store i32 %61, ptr %63, align 4, !tbaa !17
  br label %64

64:                                               ; preds = %60, %57
  %65 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = tail call i32 @get_alias_set(ptr noundef nonnull %65) #29
  %69 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  %70 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 8
  store i32 %68, ptr %70, align 4, !tbaa !17
  br label %71

71:                                               ; preds = %67, %64
  %72 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16, !tbaa !6
  %73 = icmp eq ptr %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = tail call i32 @get_alias_set(ptr noundef nonnull %72) #29
  %76 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16, !tbaa !6
  %77 = getelementptr inbounds %struct.tree_type, ptr %76, i64 0, i32 8
  store i32 %75, ptr %77, align 4, !tbaa !17
  br label %78

78:                                               ; preds = %74, %71
  %79 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %80 = icmp eq ptr %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = tail call i32 @get_alias_set(ptr noundef nonnull %79) #29
  %83 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %84 = getelementptr inbounds %struct.tree_type, ptr %83, i64 0, i32 8
  store i32 %82, ptr %84, align 4, !tbaa !17
  br label %85

85:                                               ; preds = %81, %78
  %86 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16, !tbaa !6
  %87 = icmp eq ptr %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = tail call i32 @get_alias_set(ptr noundef nonnull %86) #29
  %90 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16, !tbaa !6
  %91 = getelementptr inbounds %struct.tree_type, ptr %90, i64 0, i32 8
  store i32 %89, ptr %91, align 4, !tbaa !17
  br label %92

92:                                               ; preds = %88, %85
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #29
  %93 = tail call ptr @pointer_set_create() #29
  %94 = getelementptr inbounds %struct.free_lang_data_d, ptr %9, i64 0, i32 1
  store ptr %93, ptr %94, align 8, !tbaa !136
  store ptr null, ptr %9, align 8, !tbaa !138
  %95 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 100) #29
  %96 = getelementptr inbounds %struct.free_lang_data_d, ptr %9, i64 0, i32 2
  store ptr %95, ptr %96, align 8, !tbaa !139
  %97 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 100) #29
  %98 = getelementptr inbounds %struct.free_lang_data_d, ptr %9, i64 0, i32 3
  store ptr %97, ptr %98, align 8, !tbaa !140
  %99 = load ptr, ptr @cgraph_nodes, align 8, !tbaa !6
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %408, %92
  %102 = load ptr, ptr @alias_pairs, align 8
  %103 = icmp eq ptr %102, null
  br i1 %103, label %417, label %412

104:                                              ; preds = %92, %408
  %105 = phi ptr [ %410, %408 ], [ %99, %92 ]
  %106 = load ptr, ptr %105, align 8, !tbaa !141
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  br label %107

107:                                              ; preds = %121, %104
  %108 = phi ptr [ %106, %104 ], [ %125, %121 ]
  store ptr %108, ptr %7, align 8, !tbaa !6
  %109 = load ptr, ptr %94, align 8, !tbaa !136
  %110 = call i32 @pointer_set_contains(ptr noundef %109, ptr noundef %108) #29
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = load ptr, ptr %94, align 8, !tbaa !136
  %114 = call ptr @walk_tree_1(ptr noundef nonnull %7, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %113, ptr noundef null)
  br label %115

115:                                              ; preds = %112, %107
  %116 = load ptr, ptr %9, align 8, !tbaa !138
  %117 = icmp eq ptr %116, null
  br i1 %117, label %126, label %118

118:                                              ; preds = %115
  %119 = load i32, ptr %116, align 8, !tbaa !61
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %126, label %121

121:                                              ; preds = %118
  %122 = add i32 %119, -1
  store i32 %122, ptr %116, align 8, !tbaa !61
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %struct.VEC_tree_base, ptr %116, i64 0, i32 2, i64 %123
  %125 = load ptr, ptr %124, align 8, !tbaa !6
  br label %107

126:                                              ; preds = %118, %115
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  %127 = load ptr, ptr %105, align 8, !tbaa !141
  %128 = call zeroext i8 @gimple_has_body_p(ptr noundef %127) #29
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %408, label %130

130:                                              ; preds = %126
  %131 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %132 = icmp eq ptr %131, null
  %133 = load ptr, ptr @cfun, align 8
  %134 = icmp eq ptr %133, null
  %135 = select i1 %132, i1 %134, i1 false
  br i1 %135, label %137, label %136

136:                                              ; preds = %130
  call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 4792, ptr noundef nonnull @.str.219) #29
  br label %137

137:                                              ; preds = %136, %130
  %138 = load ptr, ptr %105, align 8, !tbaa !141
  %139 = getelementptr inbounds %struct.tree_function_decl, ptr %138, i64 0, i32 1
  %140 = load ptr, ptr %139, align 8, !tbaa !17
  %141 = getelementptr inbounds %struct.function, ptr %140, i64 0, i32 9
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  %143 = icmp eq ptr %142, null
  br i1 %143, label %171, label %144

144:                                              ; preds = %137, %167
  %145 = phi ptr [ %169, %167 ], [ %142, %137 ]
  %146 = getelementptr inbounds %struct.tree_list, ptr %145, i64 0, i32 2
  %147 = load ptr, ptr %146, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  br label %148

148:                                              ; preds = %162, %144
  %149 = phi ptr [ %147, %144 ], [ %166, %162 ]
  store ptr %149, ptr %6, align 8, !tbaa !6
  %150 = load ptr, ptr %94, align 8, !tbaa !136
  %151 = call i32 @pointer_set_contains(ptr noundef %150, ptr noundef %149) #29
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %148
  %154 = load ptr, ptr %94, align 8, !tbaa !136
  %155 = call ptr @walk_tree_1(ptr noundef nonnull %6, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %154, ptr noundef null)
  br label %156

156:                                              ; preds = %153, %148
  %157 = load ptr, ptr %9, align 8, !tbaa !138
  %158 = icmp eq ptr %157, null
  br i1 %158, label %167, label %159

159:                                              ; preds = %156
  %160 = load i32, ptr %157, align 8, !tbaa !61
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = add i32 %160, -1
  store i32 %163, ptr %157, align 8, !tbaa !61
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %struct.VEC_tree_base, ptr %157, i64 0, i32 2, i64 %164
  %166 = load ptr, ptr %165, align 8, !tbaa !6
  br label %148

167:                                              ; preds = %159, %156
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %168 = getelementptr inbounds %struct.tree_common, ptr %145, i64 0, i32 1
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  %170 = icmp eq ptr %169, null
  br i1 %170, label %171, label %144, !llvm.loop !149

171:                                              ; preds = %167, %137
  %172 = load ptr, ptr %140, align 8, !tbaa !150
  %173 = load ptr, ptr %172, align 8, !tbaa !152
  %174 = icmp eq ptr %173, null
  br i1 %174, label %273, label %175

175:                                              ; preds = %171, %271
  %176 = phi ptr [ %272, %271 ], [ %173, %171 ]
  %177 = getelementptr inbounds %struct.eh_region_d, ptr %176, i64 0, i32 4
  %178 = load i32, ptr %177, align 4, !tbaa !154
  switch i32 %178, label %255 [
    i32 3, label %249
    i32 1, label %179
    i32 2, label %219
  ]

179:                                              ; preds = %175
  %180 = getelementptr inbounds %struct.eh_region_d, ptr %176, i64 0, i32 5
  %181 = load ptr, ptr %180, align 8, !tbaa !17
  %182 = icmp eq ptr %181, null
  br i1 %182, label %255, label %183

183:                                              ; preds = %179, %213
  %184 = phi ptr [ %217, %213 ], [ %181, %179 ]
  %185 = getelementptr inbounds %struct.eh_catch_d, ptr %184, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !156
  %187 = icmp eq ptr %186, null
  br i1 %187, label %213, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %struct.tree_list, ptr %186, i64 0, i32 2
  %190 = load ptr, ptr %189, align 8, !tbaa !17
  %191 = call ptr @lookup_type_for_runtime(ptr noundef %190) #29
  %192 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %193 = getelementptr inbounds i8, ptr %192, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %193, i8 0, i64 16, i1 false)
  store i64 2, ptr %192, align 8
  %194 = getelementptr inbounds %struct.tree_list, ptr %192, i64 0, i32 1
  store ptr null, ptr %194, align 8, !tbaa !17
  %195 = getelementptr inbounds %struct.tree_list, ptr %192, i64 0, i32 2
  store ptr %191, ptr %195, align 8, !tbaa !17
  %196 = getelementptr inbounds %struct.tree_common, ptr %186, i64 0, i32 1
  %197 = load ptr, ptr %196, align 8, !tbaa !17
  %198 = icmp eq ptr %197, null
  br i1 %198, label %213, label %199

199:                                              ; preds = %188, %199
  %200 = phi ptr [ %211, %199 ], [ %197, %188 ]
  %201 = phi ptr [ %205, %199 ], [ %192, %188 ]
  %202 = getelementptr inbounds %struct.tree_list, ptr %200, i64 0, i32 2
  %203 = load ptr, ptr %202, align 8, !tbaa !17
  %204 = call ptr @lookup_type_for_runtime(ptr noundef %203) #29
  %205 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %206 = getelementptr inbounds i8, ptr %205, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %206, i8 0, i64 16, i1 false)
  store i64 2, ptr %205, align 8
  %207 = getelementptr inbounds %struct.tree_list, ptr %205, i64 0, i32 1
  store ptr null, ptr %207, align 8, !tbaa !17
  %208 = getelementptr inbounds %struct.tree_list, ptr %205, i64 0, i32 2
  store ptr %204, ptr %208, align 8, !tbaa !17
  %209 = getelementptr inbounds %struct.tree_common, ptr %201, i64 0, i32 1
  store ptr %205, ptr %209, align 8, !tbaa !17
  %210 = getelementptr inbounds %struct.tree_common, ptr %200, i64 0, i32 1
  %211 = load ptr, ptr %210, align 8, !tbaa !17
  %212 = icmp eq ptr %211, null
  br i1 %212, label %213, label %199, !llvm.loop !158

213:                                              ; preds = %199, %188, %183
  %214 = phi ptr [ null, %183 ], [ %192, %188 ], [ %192, %199 ]
  store ptr %214, ptr %185, align 8, !tbaa !156
  %215 = load ptr, ptr %94, align 8, !tbaa !136
  %216 = call ptr @walk_tree_1(ptr noundef nonnull %185, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %215, ptr noundef null)
  %217 = load ptr, ptr %184, align 8, !tbaa !17
  %218 = icmp eq ptr %217, null
  br i1 %218, label %255, label %183, !llvm.loop !159

219:                                              ; preds = %175
  %220 = getelementptr inbounds %struct.eh_region_d, ptr %176, i64 0, i32 5
  %221 = load ptr, ptr %220, align 8, !tbaa !17
  %222 = icmp eq ptr %221, null
  br i1 %222, label %247, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.tree_list, ptr %221, i64 0, i32 2
  %225 = load ptr, ptr %224, align 8, !tbaa !17
  %226 = call ptr @lookup_type_for_runtime(ptr noundef %225) #29
  %227 = call ptr @make_node_stat(i32 noundef 2)
  %228 = getelementptr inbounds %struct.tree_list, ptr %227, i64 0, i32 1
  store ptr null, ptr %228, align 8, !tbaa !17
  %229 = getelementptr inbounds %struct.tree_list, ptr %227, i64 0, i32 2
  store ptr %226, ptr %229, align 8, !tbaa !17
  %230 = getelementptr inbounds %struct.tree_common, ptr %221, i64 0, i32 1
  %231 = load ptr, ptr %230, align 8, !tbaa !17
  %232 = icmp eq ptr %231, null
  br i1 %232, label %247, label %233

233:                                              ; preds = %223, %233
  %234 = phi ptr [ %245, %233 ], [ %231, %223 ]
  %235 = phi ptr [ %239, %233 ], [ %227, %223 ]
  %236 = getelementptr inbounds %struct.tree_list, ptr %234, i64 0, i32 2
  %237 = load ptr, ptr %236, align 8, !tbaa !17
  %238 = call ptr @lookup_type_for_runtime(ptr noundef %237) #29
  %239 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %240 = getelementptr inbounds i8, ptr %239, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %240, i8 0, i64 16, i1 false)
  store i64 2, ptr %239, align 8
  %241 = getelementptr inbounds %struct.tree_list, ptr %239, i64 0, i32 1
  store ptr null, ptr %241, align 8, !tbaa !17
  %242 = getelementptr inbounds %struct.tree_list, ptr %239, i64 0, i32 2
  store ptr %238, ptr %242, align 8, !tbaa !17
  %243 = getelementptr inbounds %struct.tree_common, ptr %235, i64 0, i32 1
  store ptr %239, ptr %243, align 8, !tbaa !17
  %244 = getelementptr inbounds %struct.tree_common, ptr %234, i64 0, i32 1
  %245 = load ptr, ptr %244, align 8, !tbaa !17
  %246 = icmp eq ptr %245, null
  br i1 %246, label %247, label %233, !llvm.loop !158

247:                                              ; preds = %233, %223, %219
  %248 = phi ptr [ null, %219 ], [ %227, %223 ], [ %227, %233 ]
  store ptr %248, ptr %220, align 8, !tbaa !17
  br label %251

249:                                              ; preds = %175
  %250 = getelementptr inbounds %struct.eh_region_d, ptr %176, i64 0, i32 5
  br label %251

251:                                              ; preds = %249, %247
  %252 = phi ptr [ %250, %249 ], [ %220, %247 ]
  %253 = load ptr, ptr %94, align 8, !tbaa !136
  %254 = call ptr @walk_tree_1(ptr noundef nonnull %252, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %253, ptr noundef null)
  br label %255

255:                                              ; preds = %213, %251, %179, %175
  %256 = getelementptr inbounds %struct.eh_region_d, ptr %176, i64 0, i32 1
  %257 = load ptr, ptr %256, align 8, !tbaa !160
  %258 = icmp eq ptr %257, null
  br i1 %258, label %259, label %271

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.eh_region_d, ptr %176, i64 0, i32 2
  %261 = load ptr, ptr %260, align 8, !tbaa !161
  %262 = icmp eq ptr %261, null
  br i1 %262, label %263, label %271

263:                                              ; preds = %259, %267
  %264 = phi ptr [ %265, %267 ], [ %176, %259 ]
  %265 = load ptr, ptr %264, align 8, !tbaa !162
  %266 = icmp eq ptr %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds %struct.eh_region_d, ptr %265, i64 0, i32 2
  %269 = load ptr, ptr %268, align 8, !tbaa !161
  %270 = icmp eq ptr %269, null
  br i1 %270, label %263, label %271, !llvm.loop !163

271:                                              ; preds = %267, %259, %255
  %272 = phi ptr [ %257, %255 ], [ %261, %259 ], [ %269, %267 ]
  br label %175, !llvm.loop !164

273:                                              ; preds = %263, %171
  %274 = getelementptr inbounds %struct.function, ptr %140, i64 0, i32 1
  %275 = load ptr, ptr %274, align 8, !tbaa !165
  %276 = load ptr, ptr %275, align 8, !tbaa !166
  %277 = getelementptr inbounds %struct.basic_block_def, ptr %276, i64 0, i32 6
  %278 = load ptr, ptr %277, align 8, !tbaa !168
  %279 = getelementptr inbounds %struct.control_flow_graph, ptr %275, i64 0, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !170
  %281 = icmp eq ptr %278, %280
  br i1 %281, label %408, label %289

282:                                              ; preds = %404, %350, %347, %343, %338
  %283 = getelementptr inbounds %struct.basic_block_def, ptr %290, i64 0, i32 6
  %284 = load ptr, ptr %283, align 8, !tbaa !168
  %285 = load ptr, ptr %274, align 8, !tbaa !165
  %286 = getelementptr inbounds %struct.control_flow_graph, ptr %285, i64 0, i32 1
  %287 = load ptr, ptr %286, align 8, !tbaa !170
  %288 = icmp eq ptr %284, %287
  br i1 %288, label %408, label %289, !llvm.loop !171

289:                                              ; preds = %273, %282
  %290 = phi ptr [ %284, %282 ], [ %278, %273 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #29
  call void @gsi_start_phis(ptr nonnull sret(%struct.gimple_stmt_iterator) align 8 %8, ptr noundef %290) #29
  %291 = load ptr, ptr %8, align 8, !tbaa.struct !172
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #29
  %292 = icmp eq ptr %291, null
  br i1 %292, label %338, label %293

293:                                              ; preds = %289, %334
  %294 = phi ptr [ %336, %334 ], [ %291, %289 ]
  %295 = load ptr, ptr %294, align 8, !tbaa !173
  %296 = getelementptr i8, ptr %295, i64 36
  %297 = load i32, ptr %296, align 4, !tbaa !17
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %334, label %299

299:                                              ; preds = %293
  %300 = getelementptr inbounds %struct.gimple_statement_phi, ptr %295, i64 0, i32 1
  br label %301

301:                                              ; preds = %329, %299
  %302 = phi i64 [ 0, %299 ], [ %330, %329 ]
  %303 = load i32, ptr %300, align 8, !tbaa !17
  %304 = zext i32 %303 to i64
  %305 = icmp ugt i64 %302, %304
  br i1 %305, label %306, label %307

306:                                              ; preds = %301
  call void @fancy_abort(ptr noundef nonnull @.str.223, i32 noundef 3103, ptr noundef nonnull @.str.219) #29
  br label %307

307:                                              ; preds = %306, %301
  %308 = getelementptr inbounds %struct.gimple_statement_phi, ptr %295, i64 0, i32 4, i64 %302, i32 1
  %309 = load ptr, ptr %308, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  br label %310

310:                                              ; preds = %324, %307
  %311 = phi ptr [ %309, %307 ], [ %328, %324 ]
  store ptr %311, ptr %5, align 8, !tbaa !6
  %312 = load ptr, ptr %94, align 8, !tbaa !136
  %313 = call i32 @pointer_set_contains(ptr noundef %312, ptr noundef %311) #29
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %310
  %316 = load ptr, ptr %94, align 8, !tbaa !136
  %317 = call ptr @walk_tree_1(ptr noundef nonnull %5, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %316, ptr noundef null)
  br label %318

318:                                              ; preds = %315, %310
  %319 = load ptr, ptr %9, align 8, !tbaa !138
  %320 = icmp eq ptr %319, null
  br i1 %320, label %329, label %321

321:                                              ; preds = %318
  %322 = load i32, ptr %319, align 8, !tbaa !61
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %329, label %324

324:                                              ; preds = %321
  %325 = add i32 %322, -1
  store i32 %325, ptr %319, align 8, !tbaa !61
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %struct.VEC_tree_base, ptr %319, i64 0, i32 2, i64 %326
  %328 = load ptr, ptr %327, align 8, !tbaa !6
  br label %310

329:                                              ; preds = %321, %318
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %330 = add nuw nsw i64 %302, 1
  %331 = load i32, ptr %296, align 4, !tbaa !17
  %332 = zext i32 %331 to i64
  %333 = icmp ult i64 %330, %332
  br i1 %333, label %301, label %334, !llvm.loop !175

334:                                              ; preds = %329, %293
  %335 = getelementptr inbounds %struct.gimple_seq_node_d, ptr %294, i64 0, i32 2
  %336 = load ptr, ptr %335, align 8, !tbaa !176
  %337 = icmp eq ptr %336, null
  br i1 %337, label %338, label %293, !llvm.loop !177

338:                                              ; preds = %334, %289
  %339 = getelementptr inbounds %struct.basic_block_def, ptr %290, i64 0, i32 13
  %340 = load i32, ptr %339, align 8, !tbaa !178, !noalias !179
  %341 = and i32 %340, 512
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %282

343:                                              ; preds = %338
  %344 = getelementptr inbounds %struct.basic_block_def, ptr %290, i64 0, i32 7
  %345 = load ptr, ptr %344, align 8, !tbaa !17, !noalias !179
  %346 = icmp eq ptr %345, null
  br i1 %346, label %282, label %347

347:                                              ; preds = %343
  %348 = load ptr, ptr %345, align 8, !tbaa !182, !noalias !179
  %349 = icmp eq ptr %348, null
  br i1 %349, label %282, label %350

350:                                              ; preds = %347
  %351 = load ptr, ptr %348, align 8, !tbaa !184, !noalias !179
  %352 = icmp eq ptr %351, null
  br i1 %352, label %282, label %353

353:                                              ; preds = %350, %404
  %354 = phi ptr [ %406, %404 ], [ %351, %350 ]
  %355 = load ptr, ptr %354, align 8, !tbaa !173
  %356 = getelementptr i8, ptr %355, i64 12
  %357 = load i32, ptr %356, align 4, !tbaa !17
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %404, label %359

359:                                              ; preds = %353, %399
  %360 = phi i64 [ %400, %399 ], [ 0, %353 ]
  %361 = load i32, ptr %355, align 8
  %362 = and i32 %361, 255
  %363 = add nsw i32 %362, -10
  %364 = icmp ult i32 %363, -9
  br i1 %364, label %378, label %365

365:                                              ; preds = %359
  %366 = zext i32 %362 to i64
  %367 = getelementptr inbounds [0 x i32], ptr @gss_for_code_, i64 0, i64 %366
  %368 = load i32, ptr %367, align 4, !tbaa !17
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds [0 x i64], ptr @gimple_ops_offset_, i64 0, i64 %369
  %371 = load i64, ptr %370, align 8, !tbaa !72
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %365
  call void @fancy_abort(ptr noundef nonnull @.str.223, i32 noundef 1622, ptr noundef nonnull @.str.219) #29
  br label %374

374:                                              ; preds = %373, %365
  %375 = getelementptr inbounds i8, ptr %355, i64 %371
  %376 = getelementptr inbounds ptr, ptr %375, i64 %360
  %377 = load ptr, ptr %376, align 8, !tbaa !6
  br label %378

378:                                              ; preds = %374, %359
  %379 = phi ptr [ %377, %374 ], [ null, %359 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  br label %380

380:                                              ; preds = %394, %378
  %381 = phi ptr [ %379, %378 ], [ %398, %394 ]
  store ptr %381, ptr %4, align 8, !tbaa !6
  %382 = load ptr, ptr %94, align 8, !tbaa !136
  %383 = call i32 @pointer_set_contains(ptr noundef %382, ptr noundef %381) #29
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %380
  %386 = load ptr, ptr %94, align 8, !tbaa !136
  %387 = call ptr @walk_tree_1(ptr noundef nonnull %4, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %386, ptr noundef null)
  br label %388

388:                                              ; preds = %385, %380
  %389 = load ptr, ptr %9, align 8, !tbaa !138
  %390 = icmp eq ptr %389, null
  br i1 %390, label %399, label %391

391:                                              ; preds = %388
  %392 = load i32, ptr %389, align 8, !tbaa !61
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %399, label %394

394:                                              ; preds = %391
  %395 = add i32 %392, -1
  store i32 %395, ptr %389, align 8, !tbaa !61
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds %struct.VEC_tree_base, ptr %389, i64 0, i32 2, i64 %396
  %398 = load ptr, ptr %397, align 8, !tbaa !6
  br label %380

399:                                              ; preds = %391, %388
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %400 = add nuw nsw i64 %360, 1
  %401 = load i32, ptr %356, align 4, !tbaa !17
  %402 = zext i32 %401 to i64
  %403 = icmp ult i64 %400, %402
  br i1 %403, label %359, label %404, !llvm.loop !186

404:                                              ; preds = %399, %353
  %405 = getelementptr inbounds %struct.gimple_seq_node_d, ptr %354, i64 0, i32 2
  %406 = load ptr, ptr %405, align 8, !tbaa !176
  %407 = icmp eq ptr %406, null
  br i1 %407, label %282, label %353, !llvm.loop !187

408:                                              ; preds = %282, %273, %126
  %409 = getelementptr inbounds %struct.cgraph_node, ptr %105, i64 0, i32 3
  %410 = load ptr, ptr %409, align 8, !tbaa !6
  %411 = icmp eq ptr %410, null
  br i1 %411, label %101, label %104, !llvm.loop !188

412:                                              ; preds = %101, %443
  %413 = phi ptr [ %445, %443 ], [ %102, %101 ]
  %414 = phi i32 [ %444, %443 ], [ 0, %101 ]
  %415 = load i32, ptr %413, align 8, !tbaa !189
  %416 = icmp ugt i32 %415, %414
  br i1 %416, label %420, label %417

417:                                              ; preds = %443, %412, %101
  %418 = load ptr, ptr @varpool_nodes_queue, align 8, !tbaa !6
  %419 = icmp eq ptr %418, null
  br i1 %419, label %447, label %450

420:                                              ; preds = %412
  %421 = zext i32 %414 to i64
  %422 = getelementptr inbounds %struct.VEC_alias_pair_base, ptr %413, i64 0, i32 2, i64 %421
  %423 = load ptr, ptr %422, align 8, !tbaa !191
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  br label %424

424:                                              ; preds = %438, %420
  %425 = phi ptr [ %423, %420 ], [ %442, %438 ]
  store ptr %425, ptr %3, align 8, !tbaa !6
  %426 = load ptr, ptr %94, align 8, !tbaa !136
  %427 = call i32 @pointer_set_contains(ptr noundef %426, ptr noundef %425) #29
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %432

429:                                              ; preds = %424
  %430 = load ptr, ptr %94, align 8, !tbaa !136
  %431 = call ptr @walk_tree_1(ptr noundef nonnull %3, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %430, ptr noundef null)
  br label %432

432:                                              ; preds = %429, %424
  %433 = load ptr, ptr %9, align 8, !tbaa !138
  %434 = icmp eq ptr %433, null
  br i1 %434, label %443, label %435

435:                                              ; preds = %432
  %436 = load i32, ptr %433, align 8, !tbaa !61
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %443, label %438

438:                                              ; preds = %435
  %439 = add i32 %436, -1
  store i32 %439, ptr %433, align 8, !tbaa !61
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds %struct.VEC_tree_base, ptr %433, i64 0, i32 2, i64 %440
  %442 = load ptr, ptr %441, align 8, !tbaa !6
  br label %424

443:                                              ; preds = %435, %432
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %444 = add i32 %414, 1
  %445 = load ptr, ptr @alias_pairs, align 8
  %446 = icmp eq ptr %445, null
  br i1 %446, label %417, label %412, !llvm.loop !193

447:                                              ; preds = %472, %417
  %448 = load ptr, ptr %96, align 8
  %449 = icmp eq ptr %448, null
  br i1 %449, label %493, label %476

450:                                              ; preds = %417, %472
  %451 = phi ptr [ %474, %472 ], [ %418, %417 ]
  %452 = load ptr, ptr %451, align 8, !tbaa !194
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  br label %453

453:                                              ; preds = %467, %450
  %454 = phi ptr [ %452, %450 ], [ %471, %467 ]
  store ptr %454, ptr %2, align 8, !tbaa !6
  %455 = load ptr, ptr %94, align 8, !tbaa !136
  %456 = call i32 @pointer_set_contains(ptr noundef %455, ptr noundef %454) #29
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %461

458:                                              ; preds = %453
  %459 = load ptr, ptr %94, align 8, !tbaa !136
  %460 = call ptr @walk_tree_1(ptr noundef nonnull %2, ptr noundef nonnull @find_decls_types_r, ptr noundef nonnull %9, ptr noundef %459, ptr noundef null)
  br label %461

461:                                              ; preds = %458, %453
  %462 = load ptr, ptr %9, align 8, !tbaa !138
  %463 = icmp eq ptr %462, null
  br i1 %463, label %472, label %464

464:                                              ; preds = %461
  %465 = load i32, ptr %462, align 8, !tbaa !61
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %472, label %467

467:                                              ; preds = %464
  %468 = add i32 %465, -1
  store i32 %468, ptr %462, align 8, !tbaa !61
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds %struct.VEC_tree_base, ptr %462, i64 0, i32 2, i64 %469
  %471 = load ptr, ptr %470, align 8, !tbaa !6
  br label %453

472:                                              ; preds = %464, %461
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  %473 = getelementptr inbounds %struct.varpool_node, ptr %451, i64 0, i32 2
  %474 = load ptr, ptr %473, align 8, !tbaa !6
  %475 = icmp eq ptr %474, null
  br i1 %475, label %447, label %450, !llvm.loop !196

476:                                              ; preds = %447, %482
  %477 = phi i64 [ %485, %482 ], [ 0, %447 ]
  %478 = phi ptr [ %486, %482 ], [ %448, %447 ]
  %479 = load i32, ptr %478, align 8, !tbaa !61
  %480 = zext i32 %479 to i64
  %481 = icmp ult i64 %477, %480
  br i1 %481, label %482, label %488

482:                                              ; preds = %476
  %483 = getelementptr inbounds %struct.VEC_tree_base, ptr %478, i64 0, i32 2, i64 %477
  %484 = load ptr, ptr %483, align 8, !tbaa !6
  call void @assign_assembler_name_if_neeeded(ptr noundef %484)
  %485 = add nuw nsw i64 %477, 1
  %486 = load ptr, ptr %96, align 8
  %487 = icmp eq ptr %486, null
  br i1 %487, label %493, label %476, !llvm.loop !197

488:                                              ; preds = %476, %680
  %489 = phi ptr [ %682, %680 ], [ %478, %476 ]
  %490 = phi i32 [ %681, %680 ], [ 0, %476 ]
  %491 = load i32, ptr %489, align 8, !tbaa !61
  %492 = icmp ugt i32 %491, %490
  br i1 %492, label %496, label %493

493:                                              ; preds = %482, %680, %488, %447
  %494 = load ptr, ptr %98, align 8
  %495 = icmp eq ptr %494, null
  br i1 %495, label %696, label %684

496:                                              ; preds = %488
  %497 = zext i32 %490 to i64
  %498 = getelementptr inbounds %struct.VEC_tree_base, ptr %489, i64 0, i32 2, i64 %497
  %499 = load ptr, ptr %498, align 8, !tbaa !6
  %500 = load i64, ptr %499, align 8
  %501 = and i64 %500, 65535
  %502 = add nsw i64 %501, -29
  %503 = icmp ult i64 %502, 12
  br i1 %503, label %505, label %504

504:                                              ; preds = %496
  call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 4364, ptr noundef nonnull @.str.219) #29
  br label %505

505:                                              ; preds = %504, %496
  %506 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 2), align 8, !tbaa !198
  call void %506(ptr noundef nonnull %499) #29
  %507 = load i64, ptr %499, align 8
  %508 = and i64 %507, -1090921693185
  store i64 %508, ptr %499, align 8
  %509 = getelementptr inbounds %struct.tree_decl_minimal, ptr %499, i64 0, i32 3
  %510 = load ptr, ptr %509, align 8, !tbaa !17
  %511 = icmp eq ptr %510, null
  br i1 %511, label %515, label %512

512:                                              ; preds = %505
  %513 = getelementptr inbounds %struct.tree_common, ptr %510, i64 0, i32 2
  store ptr null, ptr %513, align 8, !tbaa !17
  %514 = load i64, ptr %499, align 8
  br label %515

515:                                              ; preds = %512, %505
  %516 = phi i64 [ %514, %512 ], [ %508, %505 ]
  %517 = and i64 %516, 65535
  %518 = icmp eq i64 %517, 31
  br i1 %518, label %519, label %522

519:                                              ; preds = %515
  %520 = getelementptr inbounds %struct.tree_decl_minimal, ptr %499, i64 0, i32 4
  %521 = load ptr, ptr %520, align 8, !tbaa !17
  br label %564

522:                                              ; preds = %515
  %523 = trunc i64 %516 to i16
  switch i16 %523, label %538 [
    i16 0, label %561
    i16 29, label %524
  ]

524:                                              ; preds = %522
  %525 = getelementptr inbounds %struct.tree_decl_non_common, ptr %499, i64 0, i32 4
  %526 = load ptr, ptr %525, align 8, !tbaa !17
  %527 = icmp eq ptr %526, null
  br i1 %527, label %538, label %528

528:                                              ; preds = %524
  %529 = getelementptr inbounds %struct.tree_common, ptr %499, i64 0, i32 2
  %530 = load ptr, ptr %529, align 8, !tbaa !17
  %531 = getelementptr inbounds %struct.tree_type, ptr %530, i64 0, i32 1
  %532 = load ptr, ptr %531, align 8, !tbaa !17
  %533 = getelementptr inbounds %struct.tree_list, ptr %532, i64 0, i32 2
  %534 = load ptr, ptr %533, align 8, !tbaa !17
  %535 = getelementptr inbounds %struct.tree_common, ptr %534, i64 0, i32 2
  %536 = load ptr, ptr %535, align 8, !tbaa !17
  %537 = getelementptr inbounds %struct.tree_type, ptr %536, i64 0, i32 16
  br label %540

538:                                              ; preds = %524, %522
  %539 = getelementptr inbounds %struct.tree_decl_minimal, ptr %499, i64 0, i32 4
  br label %540

540:                                              ; preds = %538, %528
  %541 = phi ptr [ %537, %528 ], [ %539, %538 ]
  %542 = load ptr, ptr %541, align 8, !tbaa !17
  %543 = icmp eq ptr %542, null
  br i1 %543, label %561, label %544

544:                                              ; preds = %540, %557
  %545 = phi ptr [ %559, %557 ], [ %542, %540 ]
  %546 = load i64, ptr %545, align 8
  %547 = trunc i64 %546 to i16
  switch i16 %547, label %550 [
    i16 29, label %561
    i16 4, label %548
  ]

548:                                              ; preds = %544
  %549 = getelementptr inbounds %struct.tree_block, ptr %545, i64 0, i32 6
  br label %557

550:                                              ; preds = %544
  %551 = and i64 %546, 65535
  %552 = add nsw i64 %551, -5
  %553 = icmp ult i64 %552, 18
  %554 = getelementptr inbounds %struct.tree_type, ptr %545, i64 0, i32 18
  %555 = getelementptr inbounds %struct.tree_decl_minimal, ptr %545, i64 0, i32 4
  %556 = select i1 %553, ptr %554, ptr %555
  br label %557

557:                                              ; preds = %550, %548
  %558 = phi ptr [ %549, %548 ], [ %556, %550 ]
  %559 = load ptr, ptr %558, align 8, !tbaa !17
  %560 = icmp eq ptr %559, null
  br i1 %560, label %561, label %544, !llvm.loop !103

561:                                              ; preds = %557, %544, %540, %522
  %562 = phi ptr [ null, %522 ], [ null, %540 ], [ null, %557 ], [ %545, %544 ]
  %563 = getelementptr inbounds %struct.tree_decl_minimal, ptr %499, i64 0, i32 4
  store ptr %562, ptr %563, align 8, !tbaa !17
  br label %564

564:                                              ; preds = %561, %519
  %565 = phi ptr [ %521, %519 ], [ %562, %561 ]
  %566 = getelementptr inbounds %struct.tree_decl_minimal, ptr %499, i64 0, i32 4
  %567 = icmp eq ptr %565, null
  br i1 %567, label %573, label %568

568:                                              ; preds = %564
  %569 = load i64, ptr %565, align 8
  %570 = and i64 %569, 65535
  %571 = icmp eq i64 %570, 38
  br i1 %571, label %572, label %573

572:                                              ; preds = %568
  store ptr null, ptr %566, align 8, !tbaa !17
  br label %573

573:                                              ; preds = %572, %568, %564
  %574 = phi ptr [ null, %572 ], [ %565, %568 ], [ null, %564 ]
  %575 = icmp eq i64 %517, 32
  br i1 %575, label %576, label %592

576:                                              ; preds = %573
  %577 = icmp eq ptr %574, null
  br i1 %577, label %600, label %578

578:                                              ; preds = %576
  %579 = load i64, ptr %574, align 8
  %580 = and i64 %579, 65535
  %581 = icmp eq i64 %580, 29
  br i1 %581, label %582, label %589

582:                                              ; preds = %578
  %583 = getelementptr inbounds %struct.tree_decl_common, ptr %574, i64 0, i32 2
  %584 = load i64, ptr %583, align 8
  %585 = and i64 %584, 2048
  %586 = icmp eq i64 %585, 0
  br i1 %586, label %589, label %587

587:                                              ; preds = %582
  %588 = getelementptr inbounds %struct.tree_decl_common, ptr %499, i64 0, i32 5
  store ptr null, ptr %588, align 8, !tbaa !17
  br label %589

589:                                              ; preds = %587, %582, %578
  %590 = and i64 %516, 67108864
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %600, label %598

592:                                              ; preds = %573
  %593 = load i32, ptr @debug_info_level, align 4
  %594 = icmp eq i32 %593, 0
  %595 = select i1 %518, i1 %594, i1 false
  br i1 %595, label %596, label %600

596:                                              ; preds = %592
  %597 = getelementptr inbounds %struct.tree_field_decl, ptr %499, i64 0, i32 5
  br label %598

598:                                              ; preds = %596, %589
  %599 = phi ptr [ %597, %596 ], [ %566, %589 ]
  store ptr null, ptr %599, align 8, !tbaa !17
  br label %600

600:                                              ; preds = %598, %592, %589, %576
  %601 = trunc i64 %516 to i16
  switch i16 %601, label %680 [
    i16 29, label %602
    i16 32, label %637
    i16 35, label %676
  ]

602:                                              ; preds = %600
  %603 = call zeroext i8 @gimple_has_body_p(ptr noundef nonnull %499) #29
  %604 = icmp eq i8 %603, 0
  br i1 %604, label %635, label %605

605:                                              ; preds = %602
  %606 = getelementptr inbounds %struct.tree_decl_non_common, ptr %499, i64 0, i32 2
  %607 = load ptr, ptr %606, align 8, !tbaa !17
  %608 = icmp eq ptr %607, null
  br i1 %608, label %615, label %609

609:                                              ; preds = %605, %609
  %610 = phi ptr [ %613, %609 ], [ %607, %605 ]
  %611 = getelementptr inbounds %struct.tree_decl_minimal, ptr %610, i64 0, i32 4
  store ptr %499, ptr %611, align 8, !tbaa !17
  %612 = getelementptr inbounds %struct.tree_common, ptr %610, i64 0, i32 1
  %613 = load ptr, ptr %612, align 8, !tbaa !17
  %614 = icmp eq ptr %613, null
  br i1 %614, label %615, label %609, !llvm.loop !199

615:                                              ; preds = %609, %605
  %616 = call ptr @pointer_set_create() #29
  %617 = getelementptr inbounds %struct.tree_function_decl, ptr %499, i64 0, i32 1
  %618 = load ptr, ptr %617, align 8, !tbaa !17
  %619 = getelementptr inbounds %struct.function, ptr %618, i64 0, i32 9
  %620 = load ptr, ptr %619, align 8, !tbaa !17
  %621 = icmp eq ptr %620, null
  br i1 %621, label %632, label %622

622:                                              ; preds = %615, %622
  %623 = phi ptr [ %630, %622 ], [ %620, %615 ]
  %624 = getelementptr inbounds %struct.tree_list, ptr %623, i64 0, i32 2
  %625 = load ptr, ptr %624, align 8, !tbaa !17
  %626 = call i32 @pointer_set_insert(ptr noundef %616, ptr noundef %625) #29
  %627 = load ptr, ptr %624, align 8, !tbaa !17
  %628 = getelementptr inbounds %struct.tree_decl_minimal, ptr %627, i64 0, i32 4
  store ptr %499, ptr %628, align 8, !tbaa !17
  %629 = getelementptr inbounds %struct.tree_common, ptr %623, i64 0, i32 1
  %630 = load ptr, ptr %629, align 8, !tbaa !17
  %631 = icmp eq ptr %630, null
  br i1 %631, label %632, label %622, !llvm.loop !200

632:                                              ; preds = %622, %615
  %633 = getelementptr inbounds %struct.tree_decl_common, ptr %499, i64 0, i32 5
  %634 = load ptr, ptr %633, align 8, !tbaa !17
  call fastcc void @free_lang_data_in_block(ptr noundef %634, ptr noundef %616)
  call void @pointer_set_destroy(ptr noundef %616) #29
  br label %635

635:                                              ; preds = %632, %602
  %636 = getelementptr inbounds %struct.tree_decl_non_common, ptr %499, i64 0, i32 1
  br label %678

637:                                              ; preds = %600
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1) #29
  store ptr %499, ptr %1, align 8, !tbaa !63
  %638 = load ptr, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %639 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %640 = call i32 %639(ptr noundef nonnull %499) #29
  %641 = call ptr @htab_find_with_hash(ptr noundef %638, ptr noundef nonnull %1, i32 noundef %640) #29
  %642 = icmp eq ptr %641, null
  br i1 %642, label %643, label %644

643:                                              ; preds = %637
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1) #29
  br label %665

644:                                              ; preds = %637
  %645 = getelementptr inbounds %struct.tree_map, ptr %641, i64 0, i32 2
  %646 = load ptr, ptr %645, align 8, !tbaa !64
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1) #29
  %647 = icmp eq ptr %646, null
  br i1 %647, label %665, label %648

648:                                              ; preds = %644
  %649 = load i64, ptr %646, align 8
  %650 = and i64 %649, 67174399
  %651 = icmp eq i64 %650, 32
  br i1 %651, label %652, label %665

652:                                              ; preds = %648
  %653 = getelementptr inbounds %struct.tree_decl_common, ptr %646, i64 0, i32 2
  %654 = load i64, ptr %653, align 8
  %655 = and i64 %654, 33554432
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %657, label %665

657:                                              ; preds = %652
  %658 = call ptr @ggc_alloc_stat(i64 noundef 24) #29
  %659 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %660 = call i32 %659(ptr noundef nonnull %499) #29
  %661 = getelementptr inbounds %struct.tree_map, ptr %658, i64 0, i32 1
  store i32 %660, ptr %661, align 8, !tbaa !39
  store ptr %499, ptr %658, align 8, !tbaa !63
  %662 = getelementptr inbounds %struct.tree_map, ptr %658, i64 0, i32 2
  store ptr null, ptr %662, align 8, !tbaa !64
  %663 = load ptr, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %664 = call ptr @htab_find_slot_with_hash(ptr noundef %663, ptr noundef nonnull %658, i32 noundef %660, i32 noundef 1) #29
  store ptr %658, ptr %664, align 8, !tbaa !6
  br label %665

665:                                              ; preds = %657, %652, %648, %644, %643
  %666 = getelementptr inbounds %struct.tree_decl_common, ptr %499, i64 0, i32 2
  %667 = load i64, ptr %666, align 8
  %668 = and i64 %667, 33554432
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %680, label %670

670:                                              ; preds = %665
  %671 = load i64, ptr %499, align 8
  %672 = and i64 %671, 68157440
  %673 = icmp eq i64 %672, 68157440
  br i1 %673, label %680, label %674

674:                                              ; preds = %670
  %675 = getelementptr inbounds %struct.tree_decl_common, ptr %499, i64 0, i32 5
  br label %678

676:                                              ; preds = %600
  %677 = getelementptr inbounds %struct.tree_decl_common, ptr %499, i64 0, i32 5
  store ptr null, ptr %677, align 8, !tbaa !17
  br label %678

678:                                              ; preds = %676, %674, %635
  %679 = phi ptr [ %675, %674 ], [ %566, %676 ], [ %636, %635 ]
  store ptr null, ptr %679, align 8, !tbaa !17
  br label %680

680:                                              ; preds = %678, %670, %665, %600
  %681 = add i32 %490, 1
  %682 = load ptr, ptr %96, align 8
  %683 = icmp eq ptr %682, null
  br i1 %683, label %493, label %488, !llvm.loop !201

684:                                              ; preds = %493, %690
  %685 = phi i64 [ %693, %690 ], [ 0, %493 ]
  %686 = phi ptr [ %694, %690 ], [ %494, %493 ]
  %687 = load i32, ptr %686, align 8, !tbaa !61
  %688 = zext i32 %687 to i64
  %689 = icmp ult i64 %685, %688
  br i1 %689, label %690, label %696

690:                                              ; preds = %684
  %691 = getelementptr inbounds %struct.VEC_tree_base, ptr %686, i64 0, i32 2, i64 %685
  %692 = load ptr, ptr %691, align 8, !tbaa !6
  call fastcc void @free_lang_data_in_type(ptr noundef %692)
  %693 = add nuw nsw i64 %685, 1
  %694 = load ptr, ptr %98, align 8
  %695 = icmp eq ptr %694, null
  br i1 %695, label %696, label %684, !llvm.loop !202

696:                                              ; preds = %690, %684, %493
  %697 = load ptr, ptr %94, align 8, !tbaa !136
  call void @pointer_set_destroy(ptr noundef %697) #29
  %698 = load ptr, ptr %9, align 8, !tbaa !6
  %699 = icmp eq ptr %698, null
  br i1 %699, label %701, label %700

700:                                              ; preds = %696
  call void @free(ptr noundef nonnull %698)
  br label %701

701:                                              ; preds = %700, %696
  store ptr null, ptr %9, align 8, !tbaa !6
  %702 = load ptr, ptr %96, align 8, !tbaa !6
  %703 = icmp eq ptr %702, null
  br i1 %703, label %705, label %704

704:                                              ; preds = %701
  call void @free(ptr noundef nonnull %702)
  br label %705

705:                                              ; preds = %704, %701
  store ptr null, ptr %96, align 8, !tbaa !6
  %706 = load ptr, ptr %98, align 8, !tbaa !6
  %707 = icmp eq ptr %706, null
  br i1 %707, label %709, label %708

708:                                              ; preds = %705
  call void @free(ptr noundef nonnull %706)
  br label %709

709:                                              ; preds = %705, %708
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #29
  %710 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  store ptr %710, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 43), align 8, !tbaa !6
  %711 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  store ptr %711, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 48), align 16, !tbaa !6
  %712 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %713 = load i64, ptr %712, align 8
  %714 = and i64 %713, 65535
  %715 = icmp eq i64 %714, 7
  br i1 %715, label %716, label %733

716:                                              ; preds = %709
  %717 = getelementptr inbounds %struct.tree_type, ptr %712, i64 0, i32 6
  %718 = load i32, ptr %717, align 4
  %719 = lshr i32 %718, 16
  %720 = and i32 %719, 255
  %721 = call i32 @mode_for_size(i32 noundef 8, i32 noundef 2, i32 noundef 0) #29
  %722 = icmp eq i32 %720, %721
  br i1 %722, label %723, label %733

723:                                              ; preds = %716
  %724 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %725 = getelementptr inbounds %struct.tree_type, ptr %724, i64 0, i32 6
  %726 = load i32, ptr %725, align 4
  %727 = and i32 %726, 1023
  %728 = icmp eq i32 %727, 1
  br i1 %728, label %729, label %733

729:                                              ; preds = %723
  %730 = load i64, ptr %724, align 8
  %731 = and i64 %730, 2097152
  %732 = icmp eq i64 %731, 0
  br i1 %732, label %733, label %755

733:                                              ; preds = %729, %723, %716, %709
  %734 = call ptr @make_unsigned_type(i32 noundef 8) #29
  store ptr %734, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %735 = load i64, ptr %734, align 8
  %736 = and i64 %735, -65536
  %737 = or i64 %736, 7
  store i64 %737, ptr %734, align 8
  %738 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %739 = icmp eq ptr %738, null
  %740 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %741 = select i1 %739, ptr %740, ptr %738
  %742 = call ptr @build_int_cst_wide(ptr noundef %741, i64 noundef 1, i64 noundef 0)
  %743 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %744 = getelementptr inbounds %struct.tree_type, ptr %743, i64 0, i32 14
  store ptr %742, ptr %744, align 8, !tbaa !17
  %745 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %746 = getelementptr inbounds %struct.tree_type, ptr %745, i64 0, i32 6
  %747 = load i32, ptr %746, align 4
  %748 = and i32 %747, -1024
  %749 = or i32 %748, 1
  store i32 %749, ptr %746, align 4
  %750 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %751 = getelementptr inbounds %struct.tree_type, ptr %750, i64 0, i32 13
  %752 = load ptr, ptr %751, align 8, !tbaa !17
  store ptr %752, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 25), align 8, !tbaa !6
  %753 = getelementptr inbounds %struct.tree_type, ptr %750, i64 0, i32 14
  %754 = load ptr, ptr %753, align 8, !tbaa !17
  store ptr %754, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 26), align 16, !tbaa !6
  br label %755

755:                                              ; preds = %733, %729
  %756 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %757 = load i64, ptr %756, align 8
  %758 = and i64 %757, 2097152
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %761, label %760

760:                                              ; preds = %755
  store ptr %756, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16, !tbaa !6
  br label %762

761:                                              ; preds = %755
  store ptr %756, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  br label %762

762:                                              ; preds = %761, %760
  store ptr null, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 31), align 8, !tbaa !203
  store ptr @lhd_dwarf_name, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !204
  store ptr @gimple_decl_printable_name, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 22), align 8, !tbaa !205
  store ptr @lhd_set_decl_assembler_name, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 16), align 8, !tbaa !58
  store ptr @gimple_fold_obj_type_ref, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 40), align 8, !tbaa !206
  %763 = load ptr, ptr @global_dc, align 8, !tbaa !6
  %764 = getelementptr inbounds %struct.diagnostic_context, ptr %763, i64 0, i32 7
  store ptr @default_diagnostic_starter, ptr %764, align 8, !tbaa !207
  %765 = getelementptr inbounds %struct.diagnostic_context, ptr %763, i64 0, i32 8
  store ptr @default_diagnostic_finalizer, ptr %765, align 8, !tbaa !209
  %766 = load ptr, ptr %763, align 8, !tbaa !210
  %767 = getelementptr inbounds %struct.pretty_print_info, ptr %766, i64 0, i32 6
  store ptr @default_tree_printer, ptr %767, align 8, !tbaa !211
  br label %768

768:                                              ; preds = %0, %762
  ret i32 0
}

declare i32 @get_alias_set(ptr noundef) local_unnamed_addr #3

declare i32 @mode_for_size(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @make_unsigned_type(i32 noundef) local_unnamed_addr #3

declare ptr @lhd_dwarf_name(ptr noundef, i32 noundef) #3

declare ptr @gimple_decl_printable_name(ptr noundef, i32 noundef) #3

declare void @lhd_set_decl_assembler_name(ptr noundef) #3

declare ptr @gimple_fold_obj_type_ref(ptr noundef, ptr noundef) #3

declare void @default_diagnostic_starter(ptr noundef, ptr noundef) #3

declare void @default_diagnostic_finalizer(ptr noundef, ptr noundef) #3

declare zeroext i8 @default_tree_printer(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) #3

declare ptr @pointer_set_create() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @free_lang_data_in_type(ptr noundef %0) unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = add nsw i64 %3, -5
  %5 = icmp ult i64 %4, 18
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 4198, ptr noundef nonnull @.str.219) #29
  br label %7

7:                                                ; preds = %1, %6
  %8 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 2), align 8, !tbaa !198
  tail call void %8(ptr noundef nonnull %0) #29
  %9 = load i64, ptr %0, align 8
  %10 = and i64 %9, -1090921693185
  store i64 %10, ptr %0, align 8
  %11 = and i64 %9, 65535
  %12 = icmp eq i64 %11, 20
  br i1 %12, label %13, label %40

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %13, %34
  %18 = phi ptr [ %36, %34 ], [ %15, %13 ]
  %19 = getelementptr inbounds %struct.tree_list, ptr %18, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 1572864
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 6
  %26 = load i32, ptr %25, align 4
  %27 = lshr i32 %26, 11
  %28 = and i32 %27, 4
  %29 = lshr i64 %21, 48
  %30 = trunc i64 %29 to i32
  %31 = and i32 %30, 65280
  %32 = or i32 %28, %31
  %33 = tail call ptr @build_qualified_type(ptr noundef nonnull %20, i32 noundef %32)
  store ptr %33, ptr %19, align 8, !tbaa !17
  tail call fastcc void @free_lang_data_in_type(ptr noundef %33)
  br label %34

34:                                               ; preds = %17, %24
  %35 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %17, !llvm.loop !214

38:                                               ; preds = %34
  %39 = load i64, ptr %0, align 8
  br label %40

40:                                               ; preds = %38, %13, %7
  %41 = phi i64 [ %39, %38 ], [ %10, %13 ], [ %10, %7 ]
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 65535
  %44 = add nsw i32 %43, -16
  %45 = icmp ult i32 %44, 3
  br i1 %45, label %46, label %76

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %69, label %50

50:                                               ; preds = %46, %60
  %51 = phi ptr [ %63, %60 ], [ %48, %46 ]
  %52 = phi ptr [ %61, %60 ], [ null, %46 ]
  %53 = load i64, ptr %51, align 8
  %54 = and i64 %53, 65535
  %55 = icmp eq i64 %54, 31
  br i1 %55, label %56, label %60

56:                                               ; preds = %50
  %57 = icmp eq ptr %52, null
  %58 = getelementptr inbounds %struct.tree_common, ptr %52, i64 0, i32 1
  %59 = select i1 %57, ptr %47, ptr %58
  store ptr %51, ptr %59, align 8, !tbaa !17
  br label %60

60:                                               ; preds = %56, %50
  %61 = phi ptr [ %52, %50 ], [ %51, %56 ]
  %62 = getelementptr inbounds %struct.tree_common, ptr %51, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %50, !llvm.loop !215

65:                                               ; preds = %60
  %66 = icmp eq ptr %61, null
  %67 = getelementptr inbounds %struct.tree_common, ptr %61, i64 0, i32 1
  %68 = select i1 %66, ptr %47, ptr %67
  br label %69

69:                                               ; preds = %65, %46
  %70 = phi ptr [ %47, %46 ], [ %68, %65 ]
  store ptr null, ptr %70, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  store ptr null, ptr %71, align 8, !tbaa !17
  %72 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 17
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = icmp eq ptr %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  tail call fastcc void @free_lang_data_in_binfo(ptr noundef nonnull %73)
  br label %78

76:                                               ; preds = %40
  %77 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 17
  store ptr null, ptr %77, align 8, !tbaa !17
  br label %78

78:                                               ; preds = %69, %75, %76
  %79 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  store ptr null, ptr %79, align 8, !tbaa !17
  %80 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  store ptr null, ptr %83, align 8, !tbaa !17
  br label %84

84:                                               ; preds = %82, %78
  ret void
}

declare void @pointer_set_destroy(ptr noundef) local_unnamed_addr #3

declare ptr @vec_heap_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @gimple_has_body_p(ptr noundef) local_unnamed_addr #3

declare void @gsi_start_phis(ptr sret(%struct.gimple_stmt_iterator) align 8, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @walk_tree_1(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #9 {
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #29
  %7 = load ptr, ptr %0, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %359, label %9

9:                                                ; preds = %5
  %10 = icmp eq ptr %3, null
  %11 = icmp eq ptr %4, null
  br label %12

12:                                               ; preds = %9, %30
  %13 = phi ptr [ %7, %9 ], [ %32, %30 ]
  %14 = phi ptr [ %0, %9 ], [ %31, %30 ]
  br i1 %10, label %18, label %15

15:                                               ; preds = %12
  %16 = call i32 @pointer_set_insert(ptr noundef nonnull %3, ptr noundef nonnull %13) #29
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %359

18:                                               ; preds = %15, %12
  store i32 1, ptr %6, align 4, !tbaa !21
  %19 = call ptr %1(ptr noundef nonnull %14, ptr noundef nonnull %6, ptr noundef %2) #29
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %359

21:                                               ; preds = %18
  %22 = load ptr, ptr %14, align 8, !tbaa !6
  %23 = load i64, ptr %22, align 8
  %24 = load i32, ptr %6, align 4, !tbaa !21
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %21
  %27 = trunc i64 %23 to i16
  switch i16 %27, label %359 [
    i16 2, label %28
    i16 163, label %34
  ]

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  br label %30

30:                                               ; preds = %28, %34, %55, %82, %102, %164, %176, %75, %129, %189, %207, %228, %306, %350
  %31 = phi ptr [ %353, %350 ], [ %308, %306 ], [ %230, %228 ], [ %209, %207 ], [ %191, %189 ], [ %178, %176 ], [ %166, %164 ], [ %131, %129 ], [ %104, %102 ], [ %84, %82 ], [ %76, %75 ], [ %57, %55 ], [ %29, %28 ], [ %35, %34 ]
  %32 = load ptr, ptr %31, align 8, !tbaa !6
  %33 = icmp eq ptr %32, null
  br i1 %33, label %359, label %12

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  br label %30

36:                                               ; preds = %21
  br i1 %11, label %43, label %37

37:                                               ; preds = %36
  %38 = call ptr %4(ptr noundef nonnull %14, ptr noundef nonnull %6, ptr noundef %1, ptr noundef %2, ptr noundef %3) #29
  %39 = icmp eq ptr %38, null
  %40 = load i32, ptr %6, align 4
  %41 = icmp ne i32 %40, 0
  %42 = select i1 %39, i1 %41, i1 false
  br i1 %42, label %43, label %359

43:                                               ; preds = %37, %36
  %44 = trunc i64 %23 to i16
  switch i16 %44, label %309 [
    i16 0, label %359
    i16 1, label %359
    i16 23, label %359
    i16 24, label %359
    i16 25, label %359
    i16 27, label %359
    i16 28, label %359
    i16 4, label %359
    i16 62, label %359
    i16 141, label %359
    i16 31, label %359
    i16 36, label %359
    i16 2, label %50
    i16 3, label %58
    i16 26, label %77
    i16 51, label %45
    i16 120, label %102
    i16 58, label %105
    i16 147, label %132
    i16 163, label %146
    i16 55, label %211
    i16 132, label %231
  ]

45:                                               ; preds = %43
  %46 = load ptr, ptr %14, align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.tree_constructor, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %359, label %91

50:                                               ; preds = %43
  %51 = load ptr, ptr %14, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.tree_list, ptr %51, i64 0, i32 2
  %53 = call ptr @walk_tree_1(ptr noundef nonnull %52, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %359

55:                                               ; preds = %50
  %56 = load ptr, ptr %14, align 8, !tbaa !6
  %57 = getelementptr inbounds %struct.tree_common, ptr %56, i64 0, i32 1
  br label %30

58:                                               ; preds = %43
  %59 = load ptr, ptr %14, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.tree_vec, ptr %59, i64 0, i32 1
  %61 = load i32, ptr %60, align 8, !tbaa !17
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %359, label %63

63:                                               ; preds = %58
  %64 = sext i32 %61 to i64
  br label %65

65:                                               ; preds = %63, %71
  %66 = phi i64 [ %64, %63 ], [ %67, %71 ]
  %67 = add nsw i64 %66, -1
  %68 = and i64 %67, 4294967295
  %69 = icmp eq i64 %68, 0
  %70 = load ptr, ptr %14, align 8, !tbaa !6
  br i1 %69, label %75, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.tree_vec, ptr %70, i64 0, i32 2, i64 %67
  %73 = call ptr @walk_tree_1(ptr noundef nonnull %72, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %74 = icmp eq ptr %73, null
  br i1 %74, label %65, label %359, !llvm.loop !216

75:                                               ; preds = %65
  %76 = getelementptr inbounds %struct.tree_vec, ptr %70, i64 0, i32 2
  br label %30

77:                                               ; preds = %43
  %78 = load ptr, ptr %14, align 8, !tbaa !6
  %79 = getelementptr inbounds %struct.tree_complex, ptr %78, i64 0, i32 1
  %80 = call ptr @walk_tree_1(ptr noundef nonnull %79, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %359

82:                                               ; preds = %77
  %83 = load ptr, ptr %14, align 8, !tbaa !6
  %84 = getelementptr inbounds %struct.tree_complex, ptr %83, i64 0, i32 2
  br label %30

85:                                               ; preds = %97
  %86 = add i64 %93, 1
  %87 = load ptr, ptr %14, align 8, !tbaa !6
  %88 = getelementptr inbounds %struct.tree_constructor, ptr %87, i64 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !17
  %90 = icmp eq ptr %89, null
  br i1 %90, label %359, label %91, !llvm.loop !217

91:                                               ; preds = %45, %85
  %92 = phi ptr [ %89, %85 ], [ %48, %45 ]
  %93 = phi i64 [ %86, %85 ], [ 0, %45 ]
  %94 = trunc i64 %93 to i32
  %95 = load i32, ptr %92, align 8, !tbaa !74
  %96 = icmp ugt i32 %95, %94
  br i1 %96, label %97, label %359

97:                                               ; preds = %91
  %98 = and i64 %93, 4294967295
  %99 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %92, i64 0, i32 2, i64 %98, i32 1
  %100 = call ptr @walk_tree_1(ptr noundef nonnull %99, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %101 = icmp eq ptr %100, null
  br i1 %101, label %85, label %359

102:                                              ; preds = %43
  %103 = load ptr, ptr %14, align 8, !tbaa !6
  %104 = getelementptr inbounds %struct.tree_exp, ptr %103, i64 0, i32 3
  br label %30

105:                                              ; preds = %43
  %106 = load ptr, ptr %14, align 8, !tbaa !6
  %107 = getelementptr inbounds %struct.tree_exp, ptr %106, i64 0, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !17
  %109 = icmp eq ptr %108, null
  br i1 %109, label %129, label %114

110:                                              ; preds = %123
  %111 = getelementptr inbounds %struct.tree_common, ptr %115, i64 0, i32 1
  %112 = load ptr, ptr %111, align 8, !tbaa !17
  %113 = icmp eq ptr %112, null
  br i1 %113, label %127, label %114, !llvm.loop !218

114:                                              ; preds = %105, %110
  %115 = phi ptr [ %112, %110 ], [ %108, %105 ]
  %116 = getelementptr inbounds %struct.tree_decl_common, ptr %115, i64 0, i32 5
  %117 = call ptr @walk_tree_1(ptr noundef nonnull %116, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %118 = icmp eq ptr %117, null
  br i1 %118, label %119, label %359

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.tree_decl_common, ptr %115, i64 0, i32 1
  %121 = call ptr @walk_tree_1(ptr noundef nonnull %120, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %359

123:                                              ; preds = %119
  %124 = getelementptr inbounds %struct.tree_decl_common, ptr %115, i64 0, i32 4
  %125 = call ptr @walk_tree_1(ptr noundef nonnull %124, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %126 = icmp eq ptr %125, null
  br i1 %126, label %110, label %359

127:                                              ; preds = %110
  %128 = load ptr, ptr %14, align 8, !tbaa !6
  br label %129

129:                                              ; preds = %127, %105
  %130 = phi ptr [ %128, %127 ], [ %106, %105 ]
  %131 = getelementptr inbounds %struct.tree_exp, ptr %130, i64 1
  br label %30

132:                                              ; preds = %43
  %133 = load ptr, ptr %14, align 8, !tbaa !6
  %134 = getelementptr inbounds %struct.tree_statement_list, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %134, align 8, !tbaa !17
  %136 = icmp eq ptr %135, null
  br i1 %136, label %359, label %141

137:                                              ; preds = %141
  %138 = getelementptr inbounds %struct.tree_statement_list_node, ptr %142, i64 0, i32 1
  %139 = load ptr, ptr %138, align 8, !tbaa !17
  %140 = icmp eq ptr %139, null
  br i1 %140, label %359, label %141, !llvm.loop !219

141:                                              ; preds = %132, %137
  %142 = phi ptr [ %139, %137 ], [ %135, %132 ]
  %143 = getelementptr inbounds %struct.tree_statement_list_node, ptr %142, i64 0, i32 2
  %144 = call ptr @walk_tree_1(ptr noundef nonnull %143, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %145 = icmp eq ptr %144, null
  br i1 %145, label %137, label %359

146:                                              ; preds = %43
  %147 = load ptr, ptr %14, align 8, !tbaa !6
  %148 = getelementptr inbounds %struct.tree_omp_clause, ptr %147, i64 0, i32 2
  %149 = load i32, ptr %148, align 4, !tbaa !17
  switch i32 %149, label %210 [
    i32 1, label %158
    i32 2, label %158
    i32 3, label %158
    i32 6, label %158
    i32 7, label %158
    i32 8, label %158
    i32 9, label %158
    i32 10, label %158
    i32 11, label %164
    i32 12, label %164
    i32 13, label %164
    i32 15, label %164
    i32 4, label %167
    i32 14, label %154
    i32 5, label %150
  ]

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.tree_omp_clause, ptr %147, i64 0, i32 6, i64 0
  %152 = call ptr @walk_tree_1(ptr noundef nonnull %151, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %153 = icmp eq ptr %152, null
  br i1 %153, label %192, label %359

154:                                              ; preds = %146
  %155 = getelementptr inbounds %struct.tree_omp_clause, ptr %147, i64 0, i32 6, i64 0
  %156 = call ptr @walk_tree_1(ptr noundef nonnull %155, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %157 = icmp eq ptr %156, null
  br i1 %157, label %179, label %359

158:                                              ; preds = %146, %146, %146, %146, %146, %146, %146, %146
  %159 = getelementptr inbounds %struct.tree_omp_clause, ptr %147, i64 0, i32 6
  %160 = call ptr @walk_tree_1(ptr noundef nonnull %159, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %359

162:                                              ; preds = %158
  %163 = load ptr, ptr %14, align 8, !tbaa !6
  br label %164

164:                                              ; preds = %162, %146, %146, %146, %146
  %165 = phi ptr [ %163, %162 ], [ %147, %146 ], [ %147, %146 ], [ %147, %146 ], [ %147, %146 ]
  %166 = getelementptr inbounds %struct.tree_common, ptr %165, i64 0, i32 1
  br label %30

167:                                              ; preds = %146
  %168 = getelementptr inbounds %struct.tree_omp_clause, ptr %147, i64 0, i32 6
  %169 = call ptr @walk_tree_1(ptr noundef nonnull %168, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %170 = icmp eq ptr %169, null
  br i1 %170, label %171, label %359

171:                                              ; preds = %167
  %172 = load ptr, ptr %14, align 8, !tbaa !6
  %173 = getelementptr inbounds %struct.tree_omp_clause, ptr %172, i64 1
  %174 = call ptr @walk_tree_1(ptr noundef nonnull %173, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %175 = icmp eq ptr %174, null
  br i1 %175, label %176, label %359

176:                                              ; preds = %171
  %177 = load ptr, ptr %14, align 8, !tbaa !6
  %178 = getelementptr inbounds %struct.tree_common, ptr %177, i64 0, i32 1
  br label %30

179:                                              ; preds = %154
  %180 = load ptr, ptr %14, align 8, !tbaa !6
  %181 = getelementptr inbounds %struct.tree_omp_clause, ptr %180, i64 0, i32 6, i64 1
  %182 = call ptr @walk_tree_1(ptr noundef nonnull %181, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %183 = icmp eq ptr %182, null
  br i1 %183, label %184, label %359

184:                                              ; preds = %179
  %185 = load ptr, ptr %14, align 8, !tbaa !6
  %186 = getelementptr inbounds %struct.tree_omp_clause, ptr %185, i64 0, i32 6, i64 2
  %187 = call ptr @walk_tree_1(ptr noundef nonnull %186, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %188 = icmp eq ptr %187, null
  br i1 %188, label %189, label %359

189:                                              ; preds = %184
  %190 = load ptr, ptr %14, align 8, !tbaa !6
  %191 = getelementptr inbounds %struct.tree_common, ptr %190, i64 0, i32 1
  br label %30

192:                                              ; preds = %150
  %193 = load ptr, ptr %14, align 8, !tbaa !6
  %194 = getelementptr inbounds %struct.tree_omp_clause, ptr %193, i64 0, i32 6, i64 1
  %195 = call ptr @walk_tree_1(ptr noundef nonnull %194, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %359

197:                                              ; preds = %192
  %198 = load ptr, ptr %14, align 8, !tbaa !6
  %199 = getelementptr inbounds %struct.tree_omp_clause, ptr %198, i64 0, i32 6, i64 2
  %200 = call ptr @walk_tree_1(ptr noundef nonnull %199, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %201 = icmp eq ptr %200, null
  br i1 %201, label %202, label %359

202:                                              ; preds = %197
  %203 = load ptr, ptr %14, align 8, !tbaa !6
  %204 = getelementptr inbounds %struct.tree_omp_clause, ptr %203, i64 0, i32 6, i64 3
  %205 = call ptr @walk_tree_1(ptr noundef nonnull %204, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %206 = icmp eq ptr %205, null
  br i1 %206, label %207, label %359

207:                                              ; preds = %202
  %208 = load ptr, ptr %14, align 8, !tbaa !6
  %209 = getelementptr inbounds %struct.tree_common, ptr %208, i64 0, i32 1
  br label %30

210:                                              ; preds = %146
  call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10174, ptr noundef nonnull @.str.219) #29
  br label %359

211:                                              ; preds = %43
  %212 = load ptr, ptr %14, align 8, !tbaa !6
  %213 = getelementptr inbounds %struct.tree_exp, ptr %212, i64 1, i32 0, i32 2
  %214 = load ptr, ptr %213, align 8, !tbaa !17
  %215 = getelementptr inbounds %struct.tree_exp, ptr %212, i64 1
  %216 = load ptr, ptr %215, align 8, !tbaa !17
  %217 = icmp eq ptr %214, %216
  %218 = select i1 %217, i64 2, i64 3
  br label %222

219:                                              ; preds = %222
  %220 = add nuw nsw i64 %223, 1
  %221 = icmp eq i64 %220, %218
  br i1 %221, label %228, label %222, !llvm.loop !220

222:                                              ; preds = %211, %219
  %223 = phi i64 [ 0, %211 ], [ %220, %219 ]
  %224 = load ptr, ptr %14, align 8, !tbaa !6
  %225 = getelementptr inbounds %struct.tree_exp, ptr %224, i64 0, i32 3, i64 %223
  %226 = call ptr @walk_tree_1(ptr noundef nonnull %225, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %227 = icmp eq ptr %226, null
  br i1 %227, label %219, label %359

228:                                              ; preds = %219
  %229 = load ptr, ptr %14, align 8, !tbaa !6
  %230 = getelementptr inbounds %struct.tree_exp, ptr %229, i64 0, i32 3, i64 %218
  br label %30

231:                                              ; preds = %43
  %232 = load ptr, ptr %14, align 8, !tbaa !6
  %233 = getelementptr inbounds %struct.tree_exp, ptr %232, i64 0, i32 3
  %234 = load ptr, ptr %233, align 8, !tbaa !17
  %235 = load i64, ptr %234, align 8
  %236 = and i64 %235, 65535
  %237 = icmp eq i64 %236, 35
  br i1 %237, label %238, label %309

238:                                              ; preds = %231
  %239 = getelementptr inbounds %struct.tree_common, ptr %234, i64 0, i32 2
  %240 = load ptr, ptr %239, align 8, !tbaa !6
  %241 = load i64, ptr %240, align 8
  %242 = and i64 %241, 65535
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %359, label %244

244:                                              ; preds = %238
  %245 = call ptr %1(ptr noundef nonnull %239, ptr noundef nonnull %6, ptr noundef %2) #29
  %246 = icmp eq ptr %245, null
  %247 = load i32, ptr %6, align 4
  %248 = icmp ne i32 %247, 0
  %249 = select i1 %246, i1 %248, i1 false
  br i1 %249, label %250, label %359

250:                                              ; preds = %244
  %251 = load ptr, ptr %239, align 8, !tbaa !6
  %252 = call fastcc ptr @walk_type_fields(ptr noundef %251, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %253 = icmp eq ptr %252, null
  br i1 %253, label %254, label %359

254:                                              ; preds = %250
  %255 = load ptr, ptr %239, align 8, !tbaa !6
  %256 = load i64, ptr %255, align 8
  %257 = trunc i64 %256 to i16
  switch i16 %257, label %301 [
    i16 16, label %258
    i16 17, label %258
    i16 18, label %258
    i16 7, label %292
    i16 6, label %292
    i16 8, label %292
    i16 11, label %292
    i16 9, label %292
  ]

258:                                              ; preds = %254, %254, %254
  %259 = getelementptr inbounds %struct.tree_type, ptr %255, i64 0, i32 1
  %260 = load ptr, ptr %259, align 8, !tbaa !17
  %261 = icmp eq ptr %260, null
  br i1 %261, label %301, label %262

262:                                              ; preds = %258, %288
  %263 = phi ptr [ %290, %288 ], [ %260, %258 ]
  %264 = load i64, ptr %263, align 8
  %265 = and i64 %264, 65535
  %266 = icmp eq i64 %265, 31
  br i1 %266, label %267, label %288

267:                                              ; preds = %262
  %268 = getelementptr inbounds %struct.tree_field_decl, ptr %263, i64 0, i32 1
  %269 = call ptr @walk_tree_1(ptr noundef nonnull %268, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %270 = icmp eq ptr %269, null
  br i1 %270, label %271, label %359

271:                                              ; preds = %267
  %272 = getelementptr inbounds %struct.tree_decl_common, ptr %263, i64 0, i32 1
  %273 = call ptr @walk_tree_1(ptr noundef nonnull %272, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %274 = icmp eq ptr %273, null
  br i1 %274, label %275, label %359

275:                                              ; preds = %271
  %276 = getelementptr inbounds %struct.tree_decl_common, ptr %263, i64 0, i32 4
  %277 = call ptr @walk_tree_1(ptr noundef nonnull %276, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %278 = icmp eq ptr %277, null
  br i1 %278, label %279, label %359

279:                                              ; preds = %275
  %280 = load ptr, ptr %239, align 8, !tbaa !6
  %281 = load i64, ptr %280, align 8
  %282 = and i64 %281, 65535
  %283 = icmp eq i64 %282, 18
  br i1 %283, label %284, label %288

284:                                              ; preds = %279
  %285 = getelementptr inbounds %struct.tree_field_decl, ptr %263, i64 0, i32 3
  %286 = call ptr @walk_tree_1(ptr noundef nonnull %285, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %287 = icmp eq ptr %286, null
  br i1 %287, label %288, label %359

288:                                              ; preds = %279, %284, %262
  %289 = getelementptr inbounds %struct.tree_common, ptr %263, i64 0, i32 1
  %290 = load ptr, ptr %289, align 8, !tbaa !17
  %291 = icmp eq ptr %290, null
  br i1 %291, label %301, label %262, !llvm.loop !221

292:                                              ; preds = %254, %254, %254, %254, %254
  %293 = getelementptr inbounds %struct.tree_type, ptr %255, i64 0, i32 13
  %294 = call ptr @walk_tree_1(ptr noundef nonnull %293, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %295 = icmp eq ptr %294, null
  br i1 %295, label %296, label %359

296:                                              ; preds = %292
  %297 = load ptr, ptr %239, align 8, !tbaa !6
  %298 = getelementptr inbounds %struct.tree_type, ptr %297, i64 0, i32 14
  %299 = call ptr @walk_tree_1(ptr noundef nonnull %298, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %300 = icmp eq ptr %299, null
  br i1 %300, label %301, label %359

301:                                              ; preds = %288, %258, %254, %296
  %302 = load ptr, ptr %239, align 8, !tbaa !6
  %303 = getelementptr inbounds %struct.tree_type, ptr %302, i64 0, i32 2
  %304 = call ptr @walk_tree_1(ptr noundef nonnull %303, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %305 = icmp eq ptr %304, null
  br i1 %305, label %306, label %359

306:                                              ; preds = %301
  %307 = load ptr, ptr %239, align 8, !tbaa !6
  %308 = getelementptr inbounds %struct.tree_type, ptr %307, i64 0, i32 3
  br label %30

309:                                              ; preds = %231, %43
  %310 = and i64 %23, 65535
  %311 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %310
  %312 = load i32, ptr %311, align 4, !tbaa !17
  %313 = icmp ugt i32 %312, 3
  %314 = load ptr, ptr %14, align 8, !tbaa !6
  %315 = load i64, ptr %314, align 8
  %316 = and i64 %315, 65535
  br i1 %313, label %317, label %354

317:                                              ; preds = %309
  %318 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !17
  %320 = icmp eq i32 %319, 9
  br i1 %320, label %321, label %327

321:                                              ; preds = %317
  %322 = getelementptr inbounds %struct.tree_exp, ptr %314, i64 0, i32 3
  %323 = load ptr, ptr %322, align 8, !tbaa !17
  %324 = getelementptr inbounds %struct.tree_int_cst, ptr %323, i64 0, i32 1
  %325 = load i64, ptr %324, align 8, !tbaa !17
  %326 = trunc i64 %325 to i32
  br label %331

327:                                              ; preds = %317
  %328 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %316
  %329 = load i8, ptr %328, align 1, !tbaa !17
  %330 = zext i8 %329 to i32
  br label %331

331:                                              ; preds = %321, %327
  %332 = phi i32 [ %326, %321 ], [ %330, %327 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %359, label %334

334:                                              ; preds = %331
  %335 = add i32 %332, -1
  %336 = icmp sgt i32 %332, 1
  br i1 %336, label %337, label %350

337:                                              ; preds = %334
  %338 = zext i32 %335 to i64
  br label %342

339:                                              ; preds = %342
  %340 = add nuw nsw i64 %343, 1
  %341 = icmp eq i64 %340, %338
  br i1 %341, label %348, label %342, !llvm.loop !222

342:                                              ; preds = %337, %339
  %343 = phi i64 [ 0, %337 ], [ %340, %339 ]
  %344 = load ptr, ptr %14, align 8, !tbaa !6
  %345 = getelementptr inbounds %struct.tree_exp, ptr %344, i64 0, i32 3, i64 %343
  %346 = call ptr @walk_tree_1(ptr noundef nonnull %345, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %347 = icmp eq ptr %346, null
  br i1 %347, label %339, label %359

348:                                              ; preds = %339
  %349 = load ptr, ptr %14, align 8, !tbaa !6
  br label %350

350:                                              ; preds = %348, %334
  %351 = phi ptr [ %349, %348 ], [ %314, %334 ]
  %352 = sext i32 %335 to i64
  %353 = getelementptr inbounds %struct.tree_exp, ptr %351, i64 0, i32 3, i64 %352
  br label %30

354:                                              ; preds = %309
  %355 = add nsw i64 %316, -5
  %356 = icmp ult i64 %355, 18
  br i1 %356, label %357, label %359

357:                                              ; preds = %354
  %358 = call fastcc ptr @walk_type_fields(ptr noundef nonnull %314, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  br label %359

359:                                              ; preds = %30, %15, %18, %26, %37, %50, %77, %158, %167, %171, %43, %43, %43, %43, %43, %43, %43, %43, %43, %43, %43, %43, %58, %238, %244, %250, %292, %296, %301, %331, %150, %192, %197, %202, %154, %179, %184, %267, %271, %275, %284, %222, %114, %119, %123, %71, %342, %137, %141, %97, %85, %91, %5, %132, %45, %210, %354, %357
  %360 = phi ptr [ %358, %357 ], [ null, %354 ], [ null, %210 ], [ null, %45 ], [ null, %132 ], [ null, %5 ], [ %100, %97 ], [ null, %85 ], [ null, %91 ], [ null, %137 ], [ %144, %141 ], [ %346, %342 ], [ %73, %71 ], [ %117, %114 ], [ %121, %119 ], [ %125, %123 ], [ %226, %222 ], [ %269, %267 ], [ %273, %271 ], [ %277, %275 ], [ %286, %284 ], [ null, %30 ], [ null, %15 ], [ %19, %18 ], [ null, %26 ], [ %38, %37 ], [ %53, %50 ], [ %80, %77 ], [ %160, %158 ], [ %169, %167 ], [ %174, %171 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %43 ], [ null, %58 ], [ null, %238 ], [ %245, %244 ], [ %252, %250 ], [ %294, %292 ], [ %299, %296 ], [ %304, %301 ], [ null, %331 ], [ %205, %202 ], [ %200, %197 ], [ %195, %192 ], [ %152, %150 ], [ %187, %184 ], [ %182, %179 ], [ %156, %154 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #29
  ret ptr %360
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @find_decls_types_r(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr noundef %2) #9 {
  %4 = load ptr, ptr %0, align 8, !tbaa !6
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %979, label %8

8:                                                ; preds = %3
  %9 = trunc i64 %5 to i32
  %10 = and i32 %9, 65535
  %11 = icmp ne i32 %10, 22
  %12 = icmp ult i32 %10, 188
  %13 = and i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  store i32 0, ptr %1, align 4, !tbaa !21
  br label %979

15:                                               ; preds = %8
  %16 = add nsw i64 %6, -29
  %17 = icmp ult i64 %16, 12
  br i1 %17, label %18, label %309

18:                                               ; preds = %15
  tail call fastcc void @add_tree_to_fld_list(ptr noundef nonnull %4, ptr noundef %2)
  %19 = getelementptr inbounds %struct.tree_decl_minimal, ptr %4, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %18
  %23 = load i64, ptr %20, align 8
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, 65535
  %26 = icmp ne i32 %25, 22
  %27 = icmp ult i32 %25, 188
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %51

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !136
  %32 = tail call i32 @pointer_set_contains(ptr noundef %31, ptr noundef nonnull %20) #29
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %51

34:                                               ; preds = %29
  %35 = load ptr, ptr %2, align 8, !tbaa !6
  %36 = icmp eq ptr %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.VEC_tree_base, ptr %35, i64 0, i32 1
  %39 = load i32, ptr %38, align 4, !tbaa !87
  %40 = load i32, ptr %35, align 8, !tbaa !61
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %37, %34
  %43 = tail call ptr @vec_heap_p_reserve(ptr noundef %35, i32 noundef 1) #29
  store ptr %43, ptr %2, align 8, !tbaa !6
  %44 = load i32, ptr %43, align 8, !tbaa !61
  br label %45

45:                                               ; preds = %42, %37
  %46 = phi i32 [ %40, %37 ], [ %44, %42 ]
  %47 = phi ptr [ %35, %37 ], [ %43, %42 ]
  %48 = add i32 %46, 1
  store i32 %48, ptr %47, align 8, !tbaa !61
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %struct.VEC_tree_base, ptr %47, i64 0, i32 2, i64 %49
  store ptr %20, ptr %50, align 8, !tbaa !6
  br label %51

51:                                               ; preds = %18, %22, %29, %45
  %52 = getelementptr inbounds %struct.tree_decl_minimal, ptr %4, i64 0, i32 4
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = icmp eq ptr %53, null
  br i1 %54, label %84, label %55

55:                                               ; preds = %51
  %56 = load i64, ptr %53, align 8
  %57 = trunc i64 %56 to i32
  %58 = and i32 %57, 65535
  %59 = icmp ne i32 %58, 22
  %60 = icmp ult i32 %58, 188
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %84

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !136
  %65 = tail call i32 @pointer_set_contains(ptr noundef %64, ptr noundef nonnull %53) #29
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %84

67:                                               ; preds = %62
  %68 = load ptr, ptr %2, align 8, !tbaa !6
  %69 = icmp eq ptr %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.VEC_tree_base, ptr %68, i64 0, i32 1
  %72 = load i32, ptr %71, align 4, !tbaa !87
  %73 = load i32, ptr %68, align 8, !tbaa !61
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %75, label %78

75:                                               ; preds = %70, %67
  %76 = tail call ptr @vec_heap_p_reserve(ptr noundef %68, i32 noundef 1) #29
  store ptr %76, ptr %2, align 8, !tbaa !6
  %77 = load i32, ptr %76, align 8, !tbaa !61
  br label %78

78:                                               ; preds = %75, %70
  %79 = phi i32 [ %73, %70 ], [ %77, %75 ]
  %80 = phi ptr [ %68, %70 ], [ %76, %75 ]
  %81 = add i32 %79, 1
  store i32 %81, ptr %80, align 8, !tbaa !61
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %struct.VEC_tree_base, ptr %80, i64 0, i32 2, i64 %82
  store ptr %53, ptr %83, align 8, !tbaa !6
  br label %84

84:                                               ; preds = %51, %55, %62, %78
  %85 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = icmp eq ptr %86, null
  br i1 %87, label %117, label %88

88:                                               ; preds = %84
  %89 = load i64, ptr %86, align 8
  %90 = trunc i64 %89 to i32
  %91 = and i32 %90, 65535
  %92 = icmp ne i32 %91, 22
  %93 = icmp ult i32 %91, 188
  %94 = and i1 %92, %93
  br i1 %94, label %95, label %117

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %97 = load ptr, ptr %96, align 8, !tbaa !136
  %98 = tail call i32 @pointer_set_contains(ptr noundef %97, ptr noundef nonnull %86) #29
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %117

100:                                              ; preds = %95
  %101 = load ptr, ptr %2, align 8, !tbaa !6
  %102 = icmp eq ptr %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.VEC_tree_base, ptr %101, i64 0, i32 1
  %105 = load i32, ptr %104, align 4, !tbaa !87
  %106 = load i32, ptr %101, align 8, !tbaa !61
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %103, %100
  %109 = tail call ptr @vec_heap_p_reserve(ptr noundef %101, i32 noundef 1) #29
  store ptr %109, ptr %2, align 8, !tbaa !6
  %110 = load i32, ptr %109, align 8, !tbaa !61
  br label %111

111:                                              ; preds = %108, %103
  %112 = phi i32 [ %106, %103 ], [ %110, %108 ]
  %113 = phi ptr [ %101, %103 ], [ %109, %108 ]
  %114 = add i32 %112, 1
  store i32 %114, ptr %113, align 8, !tbaa !61
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds %struct.VEC_tree_base, ptr %113, i64 0, i32 2, i64 %115
  store ptr %86, ptr %116, align 8, !tbaa !6
  br label %117

117:                                              ; preds = %84, %88, %95, %111
  %118 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 4
  %119 = load ptr, ptr %118, align 8, !tbaa !17
  %120 = icmp eq ptr %119, null
  br i1 %120, label %150, label %121

121:                                              ; preds = %117
  %122 = load i64, ptr %119, align 8
  %123 = trunc i64 %122 to i32
  %124 = and i32 %123, 65535
  %125 = icmp ne i32 %124, 22
  %126 = icmp ult i32 %124, 188
  %127 = and i1 %125, %126
  br i1 %127, label %128, label %150

128:                                              ; preds = %121
  %129 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %130 = load ptr, ptr %129, align 8, !tbaa !136
  %131 = tail call i32 @pointer_set_contains(ptr noundef %130, ptr noundef nonnull %119) #29
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %150

133:                                              ; preds = %128
  %134 = load ptr, ptr %2, align 8, !tbaa !6
  %135 = icmp eq ptr %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.VEC_tree_base, ptr %134, i64 0, i32 1
  %138 = load i32, ptr %137, align 4, !tbaa !87
  %139 = load i32, ptr %134, align 8, !tbaa !61
  %140 = icmp eq i32 %138, %139
  br i1 %140, label %141, label %144

141:                                              ; preds = %136, %133
  %142 = tail call ptr @vec_heap_p_reserve(ptr noundef %134, i32 noundef 1) #29
  store ptr %142, ptr %2, align 8, !tbaa !6
  %143 = load i32, ptr %142, align 8, !tbaa !61
  br label %144

144:                                              ; preds = %141, %136
  %145 = phi i32 [ %139, %136 ], [ %143, %141 ]
  %146 = phi ptr [ %134, %136 ], [ %142, %141 ]
  %147 = add i32 %145, 1
  store i32 %147, ptr %146, align 8, !tbaa !61
  %148 = zext i32 %145 to i64
  %149 = getelementptr inbounds %struct.VEC_tree_base, ptr %146, i64 0, i32 2, i64 %148
  store ptr %119, ptr %149, align 8, !tbaa !6
  br label %150

150:                                              ; preds = %117, %121, %128, %144
  %151 = load i64, ptr %4, align 8
  %152 = and i64 %151, 65535
  %153 = icmp eq i64 %152, 35
  br i1 %153, label %187, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 5
  %156 = load ptr, ptr %155, align 8, !tbaa !17
  %157 = icmp eq ptr %156, null
  br i1 %157, label %187, label %158

158:                                              ; preds = %154
  %159 = load i64, ptr %156, align 8
  %160 = trunc i64 %159 to i32
  %161 = and i32 %160, 65535
  %162 = icmp ne i32 %161, 22
  %163 = icmp ult i32 %161, 188
  %164 = and i1 %162, %163
  br i1 %164, label %165, label %187

165:                                              ; preds = %158
  %166 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %167 = load ptr, ptr %166, align 8, !tbaa !136
  %168 = tail call i32 @pointer_set_contains(ptr noundef %167, ptr noundef nonnull %156) #29
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %187

170:                                              ; preds = %165
  %171 = load ptr, ptr %2, align 8, !tbaa !6
  %172 = icmp eq ptr %171, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.VEC_tree_base, ptr %171, i64 0, i32 1
  %175 = load i32, ptr %174, align 4, !tbaa !87
  %176 = load i32, ptr %171, align 8, !tbaa !61
  %177 = icmp eq i32 %175, %176
  br i1 %177, label %178, label %181

178:                                              ; preds = %173, %170
  %179 = tail call ptr @vec_heap_p_reserve(ptr noundef %171, i32 noundef 1) #29
  store ptr %179, ptr %2, align 8, !tbaa !6
  %180 = load i32, ptr %179, align 8, !tbaa !61
  br label %181

181:                                              ; preds = %178, %173
  %182 = phi i32 [ %176, %173 ], [ %180, %178 ]
  %183 = phi ptr [ %171, %173 ], [ %179, %178 ]
  %184 = add i32 %182, 1
  store i32 %184, ptr %183, align 8, !tbaa !61
  %185 = zext i32 %182 to i64
  %186 = getelementptr inbounds %struct.VEC_tree_base, ptr %183, i64 0, i32 2, i64 %185
  store ptr %156, ptr %186, align 8, !tbaa !6
  br label %187

187:                                              ; preds = %181, %165, %158, %154, %150
  %188 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 6
  %189 = load ptr, ptr %188, align 8, !tbaa !17
  %190 = icmp eq ptr %189, null
  br i1 %190, label %220, label %191

191:                                              ; preds = %187
  %192 = load i64, ptr %189, align 8
  %193 = trunc i64 %192 to i32
  %194 = and i32 %193, 65535
  %195 = icmp ne i32 %194, 22
  %196 = icmp ult i32 %194, 188
  %197 = and i1 %195, %196
  br i1 %197, label %198, label %220

198:                                              ; preds = %191
  %199 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %200 = load ptr, ptr %199, align 8, !tbaa !136
  %201 = tail call i32 @pointer_set_contains(ptr noundef %200, ptr noundef nonnull %189) #29
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %220

203:                                              ; preds = %198
  %204 = load ptr, ptr %2, align 8, !tbaa !6
  %205 = icmp eq ptr %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %struct.VEC_tree_base, ptr %204, i64 0, i32 1
  %208 = load i32, ptr %207, align 4, !tbaa !87
  %209 = load i32, ptr %204, align 8, !tbaa !61
  %210 = icmp eq i32 %208, %209
  br i1 %210, label %211, label %214

211:                                              ; preds = %206, %203
  %212 = tail call ptr @vec_heap_p_reserve(ptr noundef %204, i32 noundef 1) #29
  store ptr %212, ptr %2, align 8, !tbaa !6
  %213 = load i32, ptr %212, align 8, !tbaa !61
  br label %214

214:                                              ; preds = %211, %206
  %215 = phi i32 [ %209, %206 ], [ %213, %211 ]
  %216 = phi ptr [ %204, %206 ], [ %212, %211 ]
  %217 = add i32 %215, 1
  store i32 %217, ptr %216, align 8, !tbaa !61
  %218 = zext i32 %215 to i64
  %219 = getelementptr inbounds %struct.VEC_tree_base, ptr %216, i64 0, i32 2, i64 %218
  store ptr %189, ptr %219, align 8, !tbaa !6
  br label %220

220:                                              ; preds = %187, %191, %198, %214
  %221 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 7
  %222 = load ptr, ptr %221, align 8, !tbaa !17
  %223 = icmp eq ptr %222, null
  br i1 %223, label %253, label %224

224:                                              ; preds = %220
  %225 = load i64, ptr %222, align 8
  %226 = trunc i64 %225 to i32
  %227 = and i32 %226, 65535
  %228 = icmp ne i32 %227, 22
  %229 = icmp ult i32 %227, 188
  %230 = and i1 %228, %229
  br i1 %230, label %231, label %253

231:                                              ; preds = %224
  %232 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %233 = load ptr, ptr %232, align 8, !tbaa !136
  %234 = tail call i32 @pointer_set_contains(ptr noundef %233, ptr noundef nonnull %222) #29
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %253

236:                                              ; preds = %231
  %237 = load ptr, ptr %2, align 8, !tbaa !6
  %238 = icmp eq ptr %237, null
  br i1 %238, label %244, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %struct.VEC_tree_base, ptr %237, i64 0, i32 1
  %241 = load i32, ptr %240, align 4, !tbaa !87
  %242 = load i32, ptr %237, align 8, !tbaa !61
  %243 = icmp eq i32 %241, %242
  br i1 %243, label %244, label %247

244:                                              ; preds = %239, %236
  %245 = tail call ptr @vec_heap_p_reserve(ptr noundef %237, i32 noundef 1) #29
  store ptr %245, ptr %2, align 8, !tbaa !6
  %246 = load i32, ptr %245, align 8, !tbaa !61
  br label %247

247:                                              ; preds = %244, %239
  %248 = phi i32 [ %242, %239 ], [ %246, %244 ]
  %249 = phi ptr [ %237, %239 ], [ %245, %244 ]
  %250 = add i32 %248, 1
  store i32 %250, ptr %249, align 8, !tbaa !61
  %251 = zext i32 %248 to i64
  %252 = getelementptr inbounds %struct.VEC_tree_base, ptr %249, i64 0, i32 2, i64 %251
  store ptr %222, ptr %252, align 8, !tbaa !6
  br label %253

253:                                              ; preds = %220, %224, %231, %247
  %254 = load i64, ptr %4, align 8
  %255 = trunc i64 %254 to i16
  switch i16 %255, label %281 [
    i16 29, label %256
    i16 35, label %260
    i16 31, label %264
    i16 32, label %274
  ]

256:                                              ; preds = %253
  %257 = getelementptr inbounds %struct.tree_decl_non_common, ptr %4, i64 0, i32 2
  %258 = load ptr, ptr %257, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %258, ptr noundef %2)
  %259 = getelementptr inbounds %struct.tree_decl_non_common, ptr %4, i64 0, i32 3
  br label %278

260:                                              ; preds = %253
  %261 = getelementptr inbounds %struct.tree_decl_non_common, ptr %4, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %262, ptr noundef %2)
  %263 = getelementptr inbounds %struct.tree_decl_non_common, ptr %4, i64 0, i32 4
  br label %278

264:                                              ; preds = %253
  %265 = getelementptr inbounds %struct.tree_field_decl, ptr %4, i64 0, i32 1
  %266 = load ptr, ptr %265, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %266, ptr noundef %2)
  %267 = getelementptr inbounds %struct.tree_field_decl, ptr %4, i64 0, i32 2
  %268 = load ptr, ptr %267, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %268, ptr noundef %2)
  %269 = getelementptr inbounds %struct.tree_field_decl, ptr %4, i64 0, i32 3
  %270 = load ptr, ptr %269, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %270, ptr noundef %2)
  %271 = getelementptr inbounds %struct.tree_field_decl, ptr %4, i64 0, i32 4
  %272 = load ptr, ptr %271, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %272, ptr noundef %2)
  %273 = getelementptr inbounds %struct.tree_field_decl, ptr %4, i64 0, i32 5
  br label %278

274:                                              ; preds = %253
  %275 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %4, i64 0, i32 2
  %276 = load ptr, ptr %275, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %276, ptr noundef %2)
  %277 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %4, i64 0, i32 3
  br label %278

278:                                              ; preds = %256, %264, %274, %260
  %279 = phi ptr [ %263, %260 ], [ %277, %274 ], [ %273, %264 ], [ %259, %256 ]
  %280 = load ptr, ptr %279, align 8, !tbaa !17
  tail call fastcc void @fld_worklist_push(ptr noundef %280, ptr noundef %2)
  br label %281

281:                                              ; preds = %278, %253
  %282 = load i64, ptr %4, align 8
  %283 = and i64 %282, 65535
  %284 = icmp eq i64 %283, 31
  br i1 %284, label %945, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 1
  %287 = load ptr, ptr %286, align 8, !tbaa !17
  %288 = icmp eq ptr %287, null
  br i1 %288, label %945, label %289

289:                                              ; preds = %285
  %290 = load i64, ptr %287, align 8
  %291 = trunc i64 %290 to i32
  %292 = and i32 %291, 65535
  %293 = icmp ne i32 %292, 22
  %294 = icmp ult i32 %292, 188
  %295 = and i1 %293, %294
  br i1 %295, label %296, label %945

296:                                              ; preds = %289
  %297 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %298 = load ptr, ptr %297, align 8, !tbaa !136
  %299 = tail call i32 @pointer_set_contains(ptr noundef %298, ptr noundef nonnull %287) #29
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %945

301:                                              ; preds = %296
  %302 = load ptr, ptr %2, align 8, !tbaa !6
  %303 = icmp eq ptr %302, null
  br i1 %303, label %933, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %struct.VEC_tree_base, ptr %302, i64 0, i32 1
  %306 = load i32, ptr %305, align 4, !tbaa !87
  %307 = load i32, ptr %302, align 8, !tbaa !61
  %308 = icmp eq i32 %306, %307
  br i1 %308, label %933, label %938

309:                                              ; preds = %15
  %310 = add nsw i64 %6, -5
  %311 = icmp ult i64 %310, 18
  br i1 %311, label %312, label %946

312:                                              ; preds = %309
  tail call fastcc void @add_tree_to_fld_list(ptr noundef nonnull %4, ptr noundef %2)
  %313 = load i64, ptr %4, align 8
  %314 = trunc i64 %313 to i32
  %315 = and i32 %314, 65535
  %316 = add nsw i32 %315, -16
  %317 = icmp ult i32 %316, 3
  br i1 %317, label %351, label %318

318:                                              ; preds = %312
  %319 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 1
  %320 = load ptr, ptr %319, align 8, !tbaa !17
  %321 = icmp eq ptr %320, null
  br i1 %321, label %351, label %322

322:                                              ; preds = %318
  %323 = load i64, ptr %320, align 8
  %324 = trunc i64 %323 to i32
  %325 = and i32 %324, 65535
  %326 = icmp ne i32 %325, 22
  %327 = icmp ult i32 %325, 188
  %328 = and i1 %326, %327
  br i1 %328, label %329, label %351

329:                                              ; preds = %322
  %330 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %331 = load ptr, ptr %330, align 8, !tbaa !136
  %332 = tail call i32 @pointer_set_contains(ptr noundef %331, ptr noundef nonnull %320) #29
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %351

334:                                              ; preds = %329
  %335 = load ptr, ptr %2, align 8, !tbaa !6
  %336 = icmp eq ptr %335, null
  br i1 %336, label %342, label %337

337:                                              ; preds = %334
  %338 = getelementptr inbounds %struct.VEC_tree_base, ptr %335, i64 0, i32 1
  %339 = load i32, ptr %338, align 4, !tbaa !87
  %340 = load i32, ptr %335, align 8, !tbaa !61
  %341 = icmp eq i32 %339, %340
  br i1 %341, label %342, label %345

342:                                              ; preds = %337, %334
  %343 = tail call ptr @vec_heap_p_reserve(ptr noundef %335, i32 noundef 1) #29
  store ptr %343, ptr %2, align 8, !tbaa !6
  %344 = load i32, ptr %343, align 8, !tbaa !61
  br label %345

345:                                              ; preds = %342, %337
  %346 = phi i32 [ %340, %337 ], [ %344, %342 ]
  %347 = phi ptr [ %335, %337 ], [ %343, %342 ]
  %348 = add i32 %346, 1
  store i32 %348, ptr %347, align 8, !tbaa !61
  %349 = zext i32 %346 to i64
  %350 = getelementptr inbounds %struct.VEC_tree_base, ptr %347, i64 0, i32 2, i64 %349
  store ptr %320, ptr %350, align 8, !tbaa !6
  br label %351

351:                                              ; preds = %345, %329, %322, %318, %312
  %352 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 2
  %353 = load ptr, ptr %352, align 8, !tbaa !17
  %354 = icmp eq ptr %353, null
  br i1 %354, label %384, label %355

355:                                              ; preds = %351
  %356 = load i64, ptr %353, align 8
  %357 = trunc i64 %356 to i32
  %358 = and i32 %357, 65535
  %359 = icmp ne i32 %358, 22
  %360 = icmp ult i32 %358, 188
  %361 = and i1 %359, %360
  br i1 %361, label %362, label %384

362:                                              ; preds = %355
  %363 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %364 = load ptr, ptr %363, align 8, !tbaa !136
  %365 = tail call i32 @pointer_set_contains(ptr noundef %364, ptr noundef nonnull %353) #29
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %384

367:                                              ; preds = %362
  %368 = load ptr, ptr %2, align 8, !tbaa !6
  %369 = icmp eq ptr %368, null
  br i1 %369, label %375, label %370

370:                                              ; preds = %367
  %371 = getelementptr inbounds %struct.VEC_tree_base, ptr %368, i64 0, i32 1
  %372 = load i32, ptr %371, align 4, !tbaa !87
  %373 = load i32, ptr %368, align 8, !tbaa !61
  %374 = icmp eq i32 %372, %373
  br i1 %374, label %375, label %378

375:                                              ; preds = %370, %367
  %376 = tail call ptr @vec_heap_p_reserve(ptr noundef %368, i32 noundef 1) #29
  store ptr %376, ptr %2, align 8, !tbaa !6
  %377 = load i32, ptr %376, align 8, !tbaa !61
  br label %378

378:                                              ; preds = %375, %370
  %379 = phi i32 [ %373, %370 ], [ %377, %375 ]
  %380 = phi ptr [ %368, %370 ], [ %376, %375 ]
  %381 = add i32 %379, 1
  store i32 %381, ptr %380, align 8, !tbaa !61
  %382 = zext i32 %379 to i64
  %383 = getelementptr inbounds %struct.VEC_tree_base, ptr %380, i64 0, i32 2, i64 %382
  store ptr %353, ptr %383, align 8, !tbaa !6
  br label %384

384:                                              ; preds = %351, %355, %362, %378
  %385 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 3
  %386 = load ptr, ptr %385, align 8, !tbaa !17
  %387 = icmp eq ptr %386, null
  br i1 %387, label %417, label %388

388:                                              ; preds = %384
  %389 = load i64, ptr %386, align 8
  %390 = trunc i64 %389 to i32
  %391 = and i32 %390, 65535
  %392 = icmp ne i32 %391, 22
  %393 = icmp ult i32 %391, 188
  %394 = and i1 %392, %393
  br i1 %394, label %395, label %417

395:                                              ; preds = %388
  %396 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %397 = load ptr, ptr %396, align 8, !tbaa !136
  %398 = tail call i32 @pointer_set_contains(ptr noundef %397, ptr noundef nonnull %386) #29
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %417

400:                                              ; preds = %395
  %401 = load ptr, ptr %2, align 8, !tbaa !6
  %402 = icmp eq ptr %401, null
  br i1 %402, label %408, label %403

403:                                              ; preds = %400
  %404 = getelementptr inbounds %struct.VEC_tree_base, ptr %401, i64 0, i32 1
  %405 = load i32, ptr %404, align 4, !tbaa !87
  %406 = load i32, ptr %401, align 8, !tbaa !61
  %407 = icmp eq i32 %405, %406
  br i1 %407, label %408, label %411

408:                                              ; preds = %403, %400
  %409 = tail call ptr @vec_heap_p_reserve(ptr noundef %401, i32 noundef 1) #29
  store ptr %409, ptr %2, align 8, !tbaa !6
  %410 = load i32, ptr %409, align 8, !tbaa !61
  br label %411

411:                                              ; preds = %408, %403
  %412 = phi i32 [ %406, %403 ], [ %410, %408 ]
  %413 = phi ptr [ %401, %403 ], [ %409, %408 ]
  %414 = add i32 %412, 1
  store i32 %414, ptr %413, align 8, !tbaa !61
  %415 = zext i32 %412 to i64
  %416 = getelementptr inbounds %struct.VEC_tree_base, ptr %413, i64 0, i32 2, i64 %415
  store ptr %386, ptr %416, align 8, !tbaa !6
  br label %417

417:                                              ; preds = %384, %388, %395, %411
  %418 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 4
  %419 = load ptr, ptr %418, align 8, !tbaa !17
  %420 = icmp eq ptr %419, null
  br i1 %420, label %450, label %421

421:                                              ; preds = %417
  %422 = load i64, ptr %419, align 8
  %423 = trunc i64 %422 to i32
  %424 = and i32 %423, 65535
  %425 = icmp ne i32 %424, 22
  %426 = icmp ult i32 %424, 188
  %427 = and i1 %425, %426
  br i1 %427, label %428, label %450

428:                                              ; preds = %421
  %429 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %430 = load ptr, ptr %429, align 8, !tbaa !136
  %431 = tail call i32 @pointer_set_contains(ptr noundef %430, ptr noundef nonnull %419) #29
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %450

433:                                              ; preds = %428
  %434 = load ptr, ptr %2, align 8, !tbaa !6
  %435 = icmp eq ptr %434, null
  br i1 %435, label %441, label %436

436:                                              ; preds = %433
  %437 = getelementptr inbounds %struct.VEC_tree_base, ptr %434, i64 0, i32 1
  %438 = load i32, ptr %437, align 4, !tbaa !87
  %439 = load i32, ptr %434, align 8, !tbaa !61
  %440 = icmp eq i32 %438, %439
  br i1 %440, label %441, label %444

441:                                              ; preds = %436, %433
  %442 = tail call ptr @vec_heap_p_reserve(ptr noundef %434, i32 noundef 1) #29
  store ptr %442, ptr %2, align 8, !tbaa !6
  %443 = load i32, ptr %442, align 8, !tbaa !61
  br label %444

444:                                              ; preds = %441, %436
  %445 = phi i32 [ %439, %436 ], [ %443, %441 ]
  %446 = phi ptr [ %434, %436 ], [ %442, %441 ]
  %447 = add i32 %445, 1
  store i32 %447, ptr %446, align 8, !tbaa !61
  %448 = zext i32 %445 to i64
  %449 = getelementptr inbounds %struct.VEC_tree_base, ptr %446, i64 0, i32 2, i64 %448
  store ptr %419, ptr %449, align 8, !tbaa !6
  br label %450

450:                                              ; preds = %417, %421, %428, %444
  %451 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 9
  %452 = load ptr, ptr %451, align 8, !tbaa !17
  %453 = icmp eq ptr %452, null
  br i1 %453, label %483, label %454

454:                                              ; preds = %450
  %455 = load i64, ptr %452, align 8
  %456 = trunc i64 %455 to i32
  %457 = and i32 %456, 65535
  %458 = icmp ne i32 %457, 22
  %459 = icmp ult i32 %457, 188
  %460 = and i1 %458, %459
  br i1 %460, label %461, label %483

461:                                              ; preds = %454
  %462 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %463 = load ptr, ptr %462, align 8, !tbaa !136
  %464 = tail call i32 @pointer_set_contains(ptr noundef %463, ptr noundef nonnull %452) #29
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %483

466:                                              ; preds = %461
  %467 = load ptr, ptr %2, align 8, !tbaa !6
  %468 = icmp eq ptr %467, null
  br i1 %468, label %474, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %struct.VEC_tree_base, ptr %467, i64 0, i32 1
  %471 = load i32, ptr %470, align 4, !tbaa !87
  %472 = load i32, ptr %467, align 8, !tbaa !61
  %473 = icmp eq i32 %471, %472
  br i1 %473, label %474, label %477

474:                                              ; preds = %469, %466
  %475 = tail call ptr @vec_heap_p_reserve(ptr noundef %467, i32 noundef 1) #29
  store ptr %475, ptr %2, align 8, !tbaa !6
  %476 = load i32, ptr %475, align 8, !tbaa !61
  br label %477

477:                                              ; preds = %474, %469
  %478 = phi i32 [ %472, %469 ], [ %476, %474 ]
  %479 = phi ptr [ %467, %469 ], [ %475, %474 ]
  %480 = add i32 %478, 1
  store i32 %480, ptr %479, align 8, !tbaa !61
  %481 = zext i32 %478 to i64
  %482 = getelementptr inbounds %struct.VEC_tree_base, ptr %479, i64 0, i32 2, i64 %481
  store ptr %452, ptr %482, align 8, !tbaa !6
  br label %483

483:                                              ; preds = %450, %454, %461, %477
  %484 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 10
  %485 = load ptr, ptr %484, align 8, !tbaa !17
  %486 = icmp eq ptr %485, null
  br i1 %486, label %516, label %487

487:                                              ; preds = %483
  %488 = load i64, ptr %485, align 8
  %489 = trunc i64 %488 to i32
  %490 = and i32 %489, 65535
  %491 = icmp ne i32 %490, 22
  %492 = icmp ult i32 %490, 188
  %493 = and i1 %491, %492
  br i1 %493, label %494, label %516

494:                                              ; preds = %487
  %495 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %496 = load ptr, ptr %495, align 8, !tbaa !136
  %497 = tail call i32 @pointer_set_contains(ptr noundef %496, ptr noundef nonnull %485) #29
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %516

499:                                              ; preds = %494
  %500 = load ptr, ptr %2, align 8, !tbaa !6
  %501 = icmp eq ptr %500, null
  br i1 %501, label %507, label %502

502:                                              ; preds = %499
  %503 = getelementptr inbounds %struct.VEC_tree_base, ptr %500, i64 0, i32 1
  %504 = load i32, ptr %503, align 4, !tbaa !87
  %505 = load i32, ptr %500, align 8, !tbaa !61
  %506 = icmp eq i32 %504, %505
  br i1 %506, label %507, label %510

507:                                              ; preds = %502, %499
  %508 = tail call ptr @vec_heap_p_reserve(ptr noundef %500, i32 noundef 1) #29
  store ptr %508, ptr %2, align 8, !tbaa !6
  %509 = load i32, ptr %508, align 8, !tbaa !61
  br label %510

510:                                              ; preds = %507, %502
  %511 = phi i32 [ %505, %502 ], [ %509, %507 ]
  %512 = phi ptr [ %500, %502 ], [ %508, %507 ]
  %513 = add i32 %511, 1
  store i32 %513, ptr %512, align 8, !tbaa !61
  %514 = zext i32 %511 to i64
  %515 = getelementptr inbounds %struct.VEC_tree_base, ptr %512, i64 0, i32 2, i64 %514
  store ptr %485, ptr %515, align 8, !tbaa !6
  br label %516

516:                                              ; preds = %483, %487, %494, %510
  %517 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 12
  %518 = load ptr, ptr %517, align 8, !tbaa !17
  %519 = icmp eq ptr %518, null
  br i1 %519, label %549, label %520

520:                                              ; preds = %516
  %521 = load i64, ptr %518, align 8
  %522 = trunc i64 %521 to i32
  %523 = and i32 %522, 65535
  %524 = icmp ne i32 %523, 22
  %525 = icmp ult i32 %523, 188
  %526 = and i1 %524, %525
  br i1 %526, label %527, label %549

527:                                              ; preds = %520
  %528 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %529 = load ptr, ptr %528, align 8, !tbaa !136
  %530 = tail call i32 @pointer_set_contains(ptr noundef %529, ptr noundef nonnull %518) #29
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %549

532:                                              ; preds = %527
  %533 = load ptr, ptr %2, align 8, !tbaa !6
  %534 = icmp eq ptr %533, null
  br i1 %534, label %540, label %535

535:                                              ; preds = %532
  %536 = getelementptr inbounds %struct.VEC_tree_base, ptr %533, i64 0, i32 1
  %537 = load i32, ptr %536, align 4, !tbaa !87
  %538 = load i32, ptr %533, align 8, !tbaa !61
  %539 = icmp eq i32 %537, %538
  br i1 %539, label %540, label %543

540:                                              ; preds = %535, %532
  %541 = tail call ptr @vec_heap_p_reserve(ptr noundef %533, i32 noundef 1) #29
  store ptr %541, ptr %2, align 8, !tbaa !6
  %542 = load i32, ptr %541, align 8, !tbaa !61
  br label %543

543:                                              ; preds = %540, %535
  %544 = phi i32 [ %538, %535 ], [ %542, %540 ]
  %545 = phi ptr [ %533, %535 ], [ %541, %540 ]
  %546 = add i32 %544, 1
  store i32 %546, ptr %545, align 8, !tbaa !61
  %547 = zext i32 %544 to i64
  %548 = getelementptr inbounds %struct.VEC_tree_base, ptr %545, i64 0, i32 2, i64 %547
  store ptr %518, ptr %548, align 8, !tbaa !6
  br label %549

549:                                              ; preds = %516, %520, %527, %543
  %550 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 13
  %551 = load ptr, ptr %550, align 8, !tbaa !17
  %552 = icmp eq ptr %551, null
  br i1 %552, label %582, label %553

553:                                              ; preds = %549
  %554 = load i64, ptr %551, align 8
  %555 = trunc i64 %554 to i32
  %556 = and i32 %555, 65535
  %557 = icmp ne i32 %556, 22
  %558 = icmp ult i32 %556, 188
  %559 = and i1 %557, %558
  br i1 %559, label %560, label %582

560:                                              ; preds = %553
  %561 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %562 = load ptr, ptr %561, align 8, !tbaa !136
  %563 = tail call i32 @pointer_set_contains(ptr noundef %562, ptr noundef nonnull %551) #29
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %582

565:                                              ; preds = %560
  %566 = load ptr, ptr %2, align 8, !tbaa !6
  %567 = icmp eq ptr %566, null
  br i1 %567, label %573, label %568

568:                                              ; preds = %565
  %569 = getelementptr inbounds %struct.VEC_tree_base, ptr %566, i64 0, i32 1
  %570 = load i32, ptr %569, align 4, !tbaa !87
  %571 = load i32, ptr %566, align 8, !tbaa !61
  %572 = icmp eq i32 %570, %571
  br i1 %572, label %573, label %576

573:                                              ; preds = %568, %565
  %574 = tail call ptr @vec_heap_p_reserve(ptr noundef %566, i32 noundef 1) #29
  store ptr %574, ptr %2, align 8, !tbaa !6
  %575 = load i32, ptr %574, align 8, !tbaa !61
  br label %576

576:                                              ; preds = %573, %568
  %577 = phi i32 [ %571, %568 ], [ %575, %573 ]
  %578 = phi ptr [ %566, %568 ], [ %574, %573 ]
  %579 = add i32 %577, 1
  store i32 %579, ptr %578, align 8, !tbaa !61
  %580 = zext i32 %577 to i64
  %581 = getelementptr inbounds %struct.VEC_tree_base, ptr %578, i64 0, i32 2, i64 %580
  store ptr %551, ptr %581, align 8, !tbaa !6
  br label %582

582:                                              ; preds = %549, %553, %560, %576
  %583 = load i64, ptr %4, align 8
  %584 = trunc i64 %583 to i32
  %585 = and i32 %584, 65535
  %586 = add nsw i32 %585, -16
  %587 = icmp ult i32 %586, 3
  br i1 %587, label %621, label %588

588:                                              ; preds = %582
  %589 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 14
  %590 = load ptr, ptr %589, align 8, !tbaa !17
  %591 = icmp eq ptr %590, null
  br i1 %591, label %621, label %592

592:                                              ; preds = %588
  %593 = load i64, ptr %590, align 8
  %594 = trunc i64 %593 to i32
  %595 = and i32 %594, 65535
  %596 = icmp ne i32 %595, 22
  %597 = icmp ult i32 %595, 188
  %598 = and i1 %596, %597
  br i1 %598, label %599, label %621

599:                                              ; preds = %592
  %600 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %601 = load ptr, ptr %600, align 8, !tbaa !136
  %602 = tail call i32 @pointer_set_contains(ptr noundef %601, ptr noundef nonnull %590) #29
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %621

604:                                              ; preds = %599
  %605 = load ptr, ptr %2, align 8, !tbaa !6
  %606 = icmp eq ptr %605, null
  br i1 %606, label %612, label %607

607:                                              ; preds = %604
  %608 = getelementptr inbounds %struct.VEC_tree_base, ptr %605, i64 0, i32 1
  %609 = load i32, ptr %608, align 4, !tbaa !87
  %610 = load i32, ptr %605, align 8, !tbaa !61
  %611 = icmp eq i32 %609, %610
  br i1 %611, label %612, label %615

612:                                              ; preds = %607, %604
  %613 = tail call ptr @vec_heap_p_reserve(ptr noundef %605, i32 noundef 1) #29
  store ptr %613, ptr %2, align 8, !tbaa !6
  %614 = load i32, ptr %613, align 8, !tbaa !61
  br label %615

615:                                              ; preds = %612, %607
  %616 = phi i32 [ %610, %607 ], [ %614, %612 ]
  %617 = phi ptr [ %605, %607 ], [ %613, %612 ]
  %618 = add i32 %616, 1
  store i32 %618, ptr %617, align 8, !tbaa !61
  %619 = zext i32 %616 to i64
  %620 = getelementptr inbounds %struct.VEC_tree_base, ptr %617, i64 0, i32 2, i64 %619
  store ptr %590, ptr %620, align 8, !tbaa !6
  br label %621

621:                                              ; preds = %615, %599, %592, %588, %582
  %622 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 16
  %623 = load ptr, ptr %622, align 8, !tbaa !17
  %624 = icmp eq ptr %623, null
  br i1 %624, label %654, label %625

625:                                              ; preds = %621
  %626 = load i64, ptr %623, align 8
  %627 = trunc i64 %626 to i32
  %628 = and i32 %627, 65535
  %629 = icmp ne i32 %628, 22
  %630 = icmp ult i32 %628, 188
  %631 = and i1 %629, %630
  br i1 %631, label %632, label %654

632:                                              ; preds = %625
  %633 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %634 = load ptr, ptr %633, align 8, !tbaa !136
  %635 = tail call i32 @pointer_set_contains(ptr noundef %634, ptr noundef nonnull %623) #29
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %654

637:                                              ; preds = %632
  %638 = load ptr, ptr %2, align 8, !tbaa !6
  %639 = icmp eq ptr %638, null
  br i1 %639, label %645, label %640

640:                                              ; preds = %637
  %641 = getelementptr inbounds %struct.VEC_tree_base, ptr %638, i64 0, i32 1
  %642 = load i32, ptr %641, align 4, !tbaa !87
  %643 = load i32, ptr %638, align 8, !tbaa !61
  %644 = icmp eq i32 %642, %643
  br i1 %644, label %645, label %648

645:                                              ; preds = %640, %637
  %646 = tail call ptr @vec_heap_p_reserve(ptr noundef %638, i32 noundef 1) #29
  store ptr %646, ptr %2, align 8, !tbaa !6
  %647 = load i32, ptr %646, align 8, !tbaa !61
  br label %648

648:                                              ; preds = %645, %640
  %649 = phi i32 [ %643, %640 ], [ %647, %645 ]
  %650 = phi ptr [ %638, %640 ], [ %646, %645 ]
  %651 = add i32 %649, 1
  store i32 %651, ptr %650, align 8, !tbaa !61
  %652 = zext i32 %649 to i64
  %653 = getelementptr inbounds %struct.VEC_tree_base, ptr %650, i64 0, i32 2, i64 %652
  store ptr %623, ptr %653, align 8, !tbaa !6
  br label %654

654:                                              ; preds = %621, %625, %632, %648
  %655 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 15
  %656 = load ptr, ptr %655, align 8, !tbaa !17
  %657 = icmp eq ptr %656, null
  br i1 %657, label %687, label %658

658:                                              ; preds = %654
  %659 = load i64, ptr %656, align 8
  %660 = trunc i64 %659 to i32
  %661 = and i32 %660, 65535
  %662 = icmp ne i32 %661, 22
  %663 = icmp ult i32 %661, 188
  %664 = and i1 %662, %663
  br i1 %664, label %665, label %687

665:                                              ; preds = %658
  %666 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %667 = load ptr, ptr %666, align 8, !tbaa !136
  %668 = tail call i32 @pointer_set_contains(ptr noundef %667, ptr noundef nonnull %656) #29
  %669 = icmp eq i32 %668, 0
  br i1 %669, label %670, label %687

670:                                              ; preds = %665
  %671 = load ptr, ptr %2, align 8, !tbaa !6
  %672 = icmp eq ptr %671, null
  br i1 %672, label %678, label %673

673:                                              ; preds = %670
  %674 = getelementptr inbounds %struct.VEC_tree_base, ptr %671, i64 0, i32 1
  %675 = load i32, ptr %674, align 4, !tbaa !87
  %676 = load i32, ptr %671, align 8, !tbaa !61
  %677 = icmp eq i32 %675, %676
  br i1 %677, label %678, label %681

678:                                              ; preds = %673, %670
  %679 = tail call ptr @vec_heap_p_reserve(ptr noundef %671, i32 noundef 1) #29
  store ptr %679, ptr %2, align 8, !tbaa !6
  %680 = load i32, ptr %679, align 8, !tbaa !61
  br label %681

681:                                              ; preds = %678, %673
  %682 = phi i32 [ %676, %673 ], [ %680, %678 ]
  %683 = phi ptr [ %671, %673 ], [ %679, %678 ]
  %684 = add i32 %682, 1
  store i32 %684, ptr %683, align 8, !tbaa !61
  %685 = zext i32 %682 to i64
  %686 = getelementptr inbounds %struct.VEC_tree_base, ptr %683, i64 0, i32 2, i64 %685
  store ptr %656, ptr %686, align 8, !tbaa !6
  br label %687

687:                                              ; preds = %654, %658, %665, %681
  %688 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 18
  %689 = load ptr, ptr %688, align 8, !tbaa !17
  %690 = icmp eq ptr %689, null
  br i1 %690, label %720, label %691

691:                                              ; preds = %687
  %692 = load i64, ptr %689, align 8
  %693 = trunc i64 %692 to i32
  %694 = and i32 %693, 65535
  %695 = icmp ne i32 %694, 22
  %696 = icmp ult i32 %694, 188
  %697 = and i1 %695, %696
  br i1 %697, label %698, label %720

698:                                              ; preds = %691
  %699 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %700 = load ptr, ptr %699, align 8, !tbaa !136
  %701 = tail call i32 @pointer_set_contains(ptr noundef %700, ptr noundef nonnull %689) #29
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %703, label %720

703:                                              ; preds = %698
  %704 = load ptr, ptr %2, align 8, !tbaa !6
  %705 = icmp eq ptr %704, null
  br i1 %705, label %711, label %706

706:                                              ; preds = %703
  %707 = getelementptr inbounds %struct.VEC_tree_base, ptr %704, i64 0, i32 1
  %708 = load i32, ptr %707, align 4, !tbaa !87
  %709 = load i32, ptr %704, align 8, !tbaa !61
  %710 = icmp eq i32 %708, %709
  br i1 %710, label %711, label %714

711:                                              ; preds = %706, %703
  %712 = tail call ptr @vec_heap_p_reserve(ptr noundef %704, i32 noundef 1) #29
  store ptr %712, ptr %2, align 8, !tbaa !6
  %713 = load i32, ptr %712, align 8, !tbaa !61
  br label %714

714:                                              ; preds = %711, %706
  %715 = phi i32 [ %709, %706 ], [ %713, %711 ]
  %716 = phi ptr [ %704, %706 ], [ %712, %711 ]
  %717 = add i32 %715, 1
  store i32 %717, ptr %716, align 8, !tbaa !61
  %718 = zext i32 %715 to i64
  %719 = getelementptr inbounds %struct.VEC_tree_base, ptr %716, i64 0, i32 2, i64 %718
  store ptr %689, ptr %719, align 8, !tbaa !6
  br label %720

720:                                              ; preds = %687, %691, %698, %714
  %721 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 19
  %722 = load ptr, ptr %721, align 8, !tbaa !17
  %723 = icmp eq ptr %722, null
  br i1 %723, label %753, label %724

724:                                              ; preds = %720
  %725 = load i64, ptr %722, align 8
  %726 = trunc i64 %725 to i32
  %727 = and i32 %726, 65535
  %728 = icmp ne i32 %727, 22
  %729 = icmp ult i32 %727, 188
  %730 = and i1 %728, %729
  br i1 %730, label %731, label %753

731:                                              ; preds = %724
  %732 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %733 = load ptr, ptr %732, align 8, !tbaa !136
  %734 = tail call i32 @pointer_set_contains(ptr noundef %733, ptr noundef nonnull %722) #29
  %735 = icmp eq i32 %734, 0
  br i1 %735, label %736, label %753

736:                                              ; preds = %731
  %737 = load ptr, ptr %2, align 8, !tbaa !6
  %738 = icmp eq ptr %737, null
  br i1 %738, label %744, label %739

739:                                              ; preds = %736
  %740 = getelementptr inbounds %struct.VEC_tree_base, ptr %737, i64 0, i32 1
  %741 = load i32, ptr %740, align 4, !tbaa !87
  %742 = load i32, ptr %737, align 8, !tbaa !61
  %743 = icmp eq i32 %741, %742
  br i1 %743, label %744, label %747

744:                                              ; preds = %739, %736
  %745 = tail call ptr @vec_heap_p_reserve(ptr noundef %737, i32 noundef 1) #29
  store ptr %745, ptr %2, align 8, !tbaa !6
  %746 = load i32, ptr %745, align 8, !tbaa !61
  br label %747

747:                                              ; preds = %744, %739
  %748 = phi i32 [ %742, %739 ], [ %746, %744 ]
  %749 = phi ptr [ %737, %739 ], [ %745, %744 ]
  %750 = add i32 %748, 1
  store i32 %750, ptr %749, align 8, !tbaa !61
  %751 = zext i32 %748 to i64
  %752 = getelementptr inbounds %struct.VEC_tree_base, ptr %749, i64 0, i32 2, i64 %751
  store ptr %722, ptr %752, align 8, !tbaa !6
  br label %753

753:                                              ; preds = %720, %724, %731, %747
  %754 = load i64, ptr %4, align 8
  %755 = trunc i64 %754 to i32
  %756 = and i32 %755, 65535
  %757 = add nsw i32 %756, -16
  %758 = icmp ult i32 %757, 3
  br i1 %758, label %759, label %861

759:                                              ; preds = %753
  %760 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 17
  %761 = load ptr, ptr %760, align 8, !tbaa !17
  %762 = icmp eq ptr %761, null
  br i1 %762, label %861, label %763

763:                                              ; preds = %759
  %764 = getelementptr inbounds %struct.tree_binfo, ptr %761, i64 0, i32 9
  %765 = load i32, ptr %764, align 8, !tbaa !61
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %813, label %767

767:                                              ; preds = %763
  %768 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  br label %769

769:                                              ; preds = %767, %806
  %770 = phi i64 [ 0, %767 ], [ %807, %806 ]
  %771 = phi ptr [ %761, %767 ], [ %808, %806 ]
  %772 = getelementptr inbounds %struct.tree_binfo, ptr %771, i64 0, i32 9
  %773 = getelementptr inbounds %struct.VEC_tree_base, ptr %772, i64 0, i32 2, i64 %770
  %774 = load ptr, ptr %773, align 8, !tbaa !6
  %775 = getelementptr inbounds %struct.tree_common, ptr %774, i64 0, i32 2
  %776 = load ptr, ptr %775, align 8, !tbaa !17
  %777 = icmp eq ptr %776, null
  br i1 %777, label %806, label %778

778:                                              ; preds = %769
  %779 = load i64, ptr %776, align 8
  %780 = trunc i64 %779 to i32
  %781 = and i32 %780, 65535
  %782 = icmp ne i32 %781, 22
  %783 = icmp ult i32 %781, 188
  %784 = and i1 %782, %783
  br i1 %784, label %785, label %806

785:                                              ; preds = %778
  %786 = load ptr, ptr %768, align 8, !tbaa !136
  %787 = tail call i32 @pointer_set_contains(ptr noundef %786, ptr noundef nonnull %776) #29
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %806

789:                                              ; preds = %785
  %790 = load ptr, ptr %2, align 8, !tbaa !6
  %791 = icmp eq ptr %790, null
  br i1 %791, label %797, label %792

792:                                              ; preds = %789
  %793 = getelementptr inbounds %struct.VEC_tree_base, ptr %790, i64 0, i32 1
  %794 = load i32, ptr %793, align 4, !tbaa !87
  %795 = load i32, ptr %790, align 8, !tbaa !61
  %796 = icmp eq i32 %794, %795
  br i1 %796, label %797, label %800

797:                                              ; preds = %792, %789
  %798 = tail call ptr @vec_heap_p_reserve(ptr noundef %790, i32 noundef 1) #29
  store ptr %798, ptr %2, align 8, !tbaa !6
  %799 = load i32, ptr %798, align 8, !tbaa !61
  br label %800

800:                                              ; preds = %797, %792
  %801 = phi i32 [ %795, %792 ], [ %799, %797 ]
  %802 = phi ptr [ %790, %792 ], [ %798, %797 ]
  %803 = add i32 %801, 1
  store i32 %803, ptr %802, align 8, !tbaa !61
  %804 = zext i32 %801 to i64
  %805 = getelementptr inbounds %struct.VEC_tree_base, ptr %802, i64 0, i32 2, i64 %804
  store ptr %776, ptr %805, align 8, !tbaa !6
  br label %806

806:                                              ; preds = %769, %778, %785, %800
  %807 = add nuw nsw i64 %770, 1
  %808 = load ptr, ptr %760, align 8, !tbaa !17
  %809 = getelementptr inbounds %struct.tree_binfo, ptr %808, i64 0, i32 9
  %810 = load i32, ptr %809, align 8, !tbaa !61
  %811 = zext i32 %810 to i64
  %812 = icmp ult i64 %807, %811
  br i1 %812, label %769, label %813, !llvm.loop !223

813:                                              ; preds = %806, %763
  %814 = phi ptr [ %761, %763 ], [ %808, %806 ]
  %815 = getelementptr inbounds %struct.tree_binfo, ptr %814, i64 0, i32 3
  %816 = load ptr, ptr %815, align 8, !tbaa !17
  %817 = icmp eq ptr %816, null
  br i1 %817, label %861, label %818

818:                                              ; preds = %813
  %819 = load i64, ptr %816, align 8
  %820 = and i64 %819, 65535
  %821 = icmp eq i64 %820, 2
  br i1 %821, label %822, label %861

822:                                              ; preds = %818
  %823 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  br label %824

824:                                              ; preds = %822, %857
  %825 = phi ptr [ %859, %857 ], [ %816, %822 ]
  %826 = getelementptr inbounds %struct.tree_list, ptr %825, i64 0, i32 2
  %827 = load ptr, ptr %826, align 8, !tbaa !17
  %828 = icmp eq ptr %827, null
  br i1 %828, label %857, label %829

829:                                              ; preds = %824
  %830 = load i64, ptr %827, align 8
  %831 = trunc i64 %830 to i32
  %832 = and i32 %831, 65535
  %833 = icmp ne i32 %832, 22
  %834 = icmp ult i32 %832, 188
  %835 = and i1 %833, %834
  br i1 %835, label %836, label %857

836:                                              ; preds = %829
  %837 = load ptr, ptr %823, align 8, !tbaa !136
  %838 = tail call i32 @pointer_set_contains(ptr noundef %837, ptr noundef nonnull %827) #29
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %840, label %857

840:                                              ; preds = %836
  %841 = load ptr, ptr %2, align 8, !tbaa !6
  %842 = icmp eq ptr %841, null
  br i1 %842, label %848, label %843

843:                                              ; preds = %840
  %844 = getelementptr inbounds %struct.VEC_tree_base, ptr %841, i64 0, i32 1
  %845 = load i32, ptr %844, align 4, !tbaa !87
  %846 = load i32, ptr %841, align 8, !tbaa !61
  %847 = icmp eq i32 %845, %846
  br i1 %847, label %848, label %851

848:                                              ; preds = %843, %840
  %849 = tail call ptr @vec_heap_p_reserve(ptr noundef %841, i32 noundef 1) #29
  store ptr %849, ptr %2, align 8, !tbaa !6
  %850 = load i32, ptr %849, align 8, !tbaa !61
  br label %851

851:                                              ; preds = %848, %843
  %852 = phi i32 [ %846, %843 ], [ %850, %848 ]
  %853 = phi ptr [ %841, %843 ], [ %849, %848 ]
  %854 = add i32 %852, 1
  store i32 %854, ptr %853, align 8, !tbaa !61
  %855 = zext i32 %852 to i64
  %856 = getelementptr inbounds %struct.VEC_tree_base, ptr %853, i64 0, i32 2, i64 %855
  store ptr %827, ptr %856, align 8, !tbaa !6
  br label %857

857:                                              ; preds = %824, %829, %836, %851
  %858 = getelementptr inbounds %struct.tree_common, ptr %825, i64 0, i32 1
  %859 = load ptr, ptr %858, align 8, !tbaa !17
  %860 = icmp eq ptr %859, null
  br i1 %860, label %861, label %824, !llvm.loop !224

861:                                              ; preds = %857, %813, %818, %753, %759
  %862 = load i64, ptr %4, align 8
  %863 = trunc i64 %862 to i32
  %864 = and i32 %863, 65535
  %865 = add nsw i32 %864, -16
  %866 = icmp ult i32 %865, 3
  br i1 %866, label %867, label %909

867:                                              ; preds = %861
  %868 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 1
  %869 = load ptr, ptr %868, align 8, !tbaa !17
  %870 = icmp eq ptr %869, null
  br i1 %870, label %909, label %871

871:                                              ; preds = %867
  %872 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  br label %873

873:                                              ; preds = %871, %905
  %874 = phi ptr [ %869, %871 ], [ %907, %905 ]
  %875 = load i64, ptr %874, align 8
  %876 = and i64 %875, 65535
  %877 = icmp eq i64 %876, 31
  br i1 %877, label %878, label %905

878:                                              ; preds = %873
  %879 = trunc i64 %875 to i32
  %880 = and i32 %879, 65535
  %881 = icmp ne i32 %880, 22
  %882 = icmp ult i32 %880, 188
  %883 = and i1 %881, %882
  br i1 %883, label %884, label %905

884:                                              ; preds = %878
  %885 = load ptr, ptr %872, align 8, !tbaa !136
  %886 = tail call i32 @pointer_set_contains(ptr noundef %885, ptr noundef nonnull %874) #29
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %888, label %905

888:                                              ; preds = %884
  %889 = load ptr, ptr %2, align 8, !tbaa !6
  %890 = icmp eq ptr %889, null
  br i1 %890, label %896, label %891

891:                                              ; preds = %888
  %892 = getelementptr inbounds %struct.VEC_tree_base, ptr %889, i64 0, i32 1
  %893 = load i32, ptr %892, align 4, !tbaa !87
  %894 = load i32, ptr %889, align 8, !tbaa !61
  %895 = icmp eq i32 %893, %894
  br i1 %895, label %896, label %899

896:                                              ; preds = %891, %888
  %897 = tail call ptr @vec_heap_p_reserve(ptr noundef %889, i32 noundef 1) #29
  store ptr %897, ptr %2, align 8, !tbaa !6
  %898 = load i32, ptr %897, align 8, !tbaa !61
  br label %899

899:                                              ; preds = %896, %891
  %900 = phi i32 [ %894, %891 ], [ %898, %896 ]
  %901 = phi ptr [ %889, %891 ], [ %897, %896 ]
  %902 = add i32 %900, 1
  store i32 %902, ptr %901, align 8, !tbaa !61
  %903 = zext i32 %900 to i64
  %904 = getelementptr inbounds %struct.VEC_tree_base, ptr %901, i64 0, i32 2, i64 %903
  store ptr %874, ptr %904, align 8, !tbaa !6
  br label %905

905:                                              ; preds = %899, %884, %878, %873
  %906 = getelementptr inbounds %struct.tree_common, ptr %874, i64 0, i32 1
  %907 = load ptr, ptr %906, align 8, !tbaa !17
  %908 = icmp eq ptr %907, null
  br i1 %908, label %909, label %873, !llvm.loop !225

909:                                              ; preds = %905, %867, %861
  %910 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 1
  %911 = load ptr, ptr %910, align 8, !tbaa !17
  %912 = icmp eq ptr %911, null
  br i1 %912, label %945, label %913

913:                                              ; preds = %909
  %914 = load i64, ptr %911, align 8
  %915 = trunc i64 %914 to i32
  %916 = and i32 %915, 65535
  %917 = icmp ne i32 %916, 22
  %918 = icmp ult i32 %916, 188
  %919 = and i1 %917, %918
  br i1 %919, label %920, label %945

920:                                              ; preds = %913
  %921 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %922 = load ptr, ptr %921, align 8, !tbaa !136
  %923 = tail call i32 @pointer_set_contains(ptr noundef %922, ptr noundef nonnull %911) #29
  %924 = icmp eq i32 %923, 0
  br i1 %924, label %925, label %945

925:                                              ; preds = %920
  %926 = load ptr, ptr %2, align 8, !tbaa !6
  %927 = icmp eq ptr %926, null
  br i1 %927, label %933, label %928

928:                                              ; preds = %925
  %929 = getelementptr inbounds %struct.VEC_tree_base, ptr %926, i64 0, i32 1
  %930 = load i32, ptr %929, align 4, !tbaa !87
  %931 = load i32, ptr %926, align 8, !tbaa !61
  %932 = icmp eq i32 %930, %931
  br i1 %932, label %933, label %938

933:                                              ; preds = %925, %928, %301, %304
  %934 = phi ptr [ %302, %304 ], [ %302, %301 ], [ %926, %928 ], [ %926, %925 ]
  %935 = phi ptr [ %287, %304 ], [ %287, %301 ], [ %911, %928 ], [ %911, %925 ]
  %936 = tail call ptr @vec_heap_p_reserve(ptr noundef %934, i32 noundef 1) #29
  store ptr %936, ptr %2, align 8, !tbaa !6
  %937 = load i32, ptr %936, align 8, !tbaa !61
  br label %938

938:                                              ; preds = %933, %928, %304
  %939 = phi i32 [ %307, %304 ], [ %931, %928 ], [ %937, %933 ]
  %940 = phi ptr [ %302, %304 ], [ %926, %928 ], [ %936, %933 ]
  %941 = phi ptr [ %287, %304 ], [ %911, %928 ], [ %935, %933 ]
  %942 = add i32 %939, 1
  store i32 %942, ptr %940, align 8, !tbaa !61
  %943 = zext i32 %939 to i64
  %944 = getelementptr inbounds %struct.VEC_tree_base, ptr %940, i64 0, i32 2, i64 %943
  store ptr %941, ptr %944, align 8, !tbaa !6
  br label %945

945:                                              ; preds = %938, %920, %913, %909, %281, %285, %289, %296
  store i32 0, ptr %1, align 4, !tbaa !21
  br label %946

946:                                              ; preds = %945, %309
  %947 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %948 = load ptr, ptr %947, align 8, !tbaa !17
  %949 = icmp eq ptr %948, null
  br i1 %949, label %979, label %950

950:                                              ; preds = %946
  %951 = load i64, ptr %948, align 8
  %952 = trunc i64 %951 to i32
  %953 = and i32 %952, 65535
  %954 = icmp ne i32 %953, 22
  %955 = icmp ult i32 %953, 188
  %956 = and i1 %954, %955
  br i1 %956, label %957, label %979

957:                                              ; preds = %950
  %958 = getelementptr inbounds %struct.free_lang_data_d, ptr %2, i64 0, i32 1
  %959 = load ptr, ptr %958, align 8, !tbaa !136
  %960 = tail call i32 @pointer_set_contains(ptr noundef %959, ptr noundef nonnull %948) #29
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %979

962:                                              ; preds = %957
  %963 = load ptr, ptr %2, align 8, !tbaa !6
  %964 = icmp eq ptr %963, null
  br i1 %964, label %970, label %965

965:                                              ; preds = %962
  %966 = getelementptr inbounds %struct.VEC_tree_base, ptr %963, i64 0, i32 1
  %967 = load i32, ptr %966, align 4, !tbaa !87
  %968 = load i32, ptr %963, align 8, !tbaa !61
  %969 = icmp eq i32 %967, %968
  br i1 %969, label %970, label %973

970:                                              ; preds = %965, %962
  %971 = tail call ptr @vec_heap_p_reserve(ptr noundef %963, i32 noundef 1) #29
  store ptr %971, ptr %2, align 8, !tbaa !6
  %972 = load i32, ptr %971, align 8, !tbaa !61
  br label %973

973:                                              ; preds = %970, %965
  %974 = phi i32 [ %968, %965 ], [ %972, %970 ]
  %975 = phi ptr [ %963, %965 ], [ %971, %970 ]
  %976 = add i32 %974, 1
  store i32 %976, ptr %975, align 8, !tbaa !61
  %977 = zext i32 %974 to i64
  %978 = getelementptr inbounds %struct.VEC_tree_base, ptr %975, i64 0, i32 2, i64 %977
  store ptr %948, ptr %978, align 8, !tbaa !6
  br label %979

979:                                              ; preds = %973, %957, %950, %946, %3, %14
  ret ptr null
}

declare ptr @lookup_type_for_runtime(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_tree_to_fld_list(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = add nsw i64 %4, -29
  %6 = icmp ult i64 %5, 12
  br i1 %6, label %7, label %32

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.free_lang_data_d, ptr %1, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !6
  %10 = icmp eq ptr %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.VEC_tree_base, ptr %9, i64 0, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !87
  %14 = load i32, ptr %9, align 8, !tbaa !61
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %11, %7
  %17 = tail call ptr @vec_heap_p_reserve(ptr noundef %9, i32 noundef 1) #29
  store ptr %17, ptr %8, align 8, !tbaa !6
  %18 = load i32, ptr %17, align 8, !tbaa !61
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi i32 [ %14, %11 ], [ %18, %16 ]
  %21 = phi ptr [ %9, %11 ], [ %17, %16 ]
  %22 = add i32 %20, 1
  store i32 %22, ptr %21, align 8, !tbaa !61
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %struct.VEC_tree_base, ptr %21, i64 0, i32 2, i64 %23
  store ptr %0, ptr %24, align 8, !tbaa !6
  %25 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %26 = icmp ugt i32 %25, 1
  br i1 %26, label %27, label %62

27:                                               ; preds = %19
  %28 = load i64, ptr %0, align 8
  %29 = and i64 %28, 65535
  %30 = add nsw i64 %29, -29
  %31 = icmp ult i64 %30, 12
  br i1 %31, label %62, label %60

32:                                               ; preds = %2
  %33 = add nsw i64 %4, -5
  %34 = icmp ult i64 %33, 18
  br i1 %34, label %35, label %60

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.free_lang_data_d, ptr %1, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !6
  %38 = icmp eq ptr %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.VEC_tree_base, ptr %37, i64 0, i32 1
  %41 = load i32, ptr %40, align 4, !tbaa !87
  %42 = load i32, ptr %37, align 8, !tbaa !61
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %39, %35
  %45 = tail call ptr @vec_heap_p_reserve(ptr noundef %37, i32 noundef 1) #29
  store ptr %45, ptr %36, align 8, !tbaa !6
  %46 = load i32, ptr %45, align 8, !tbaa !61
  br label %47

47:                                               ; preds = %39, %44
  %48 = phi i32 [ %42, %39 ], [ %46, %44 ]
  %49 = phi ptr [ %37, %39 ], [ %45, %44 ]
  %50 = add i32 %48, 1
  store i32 %50, ptr %49, align 8, !tbaa !61
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds %struct.VEC_tree_base, ptr %49, i64 0, i32 2, i64 %51
  store ptr %0, ptr %52, align 8, !tbaa !6
  %53 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %62

55:                                               ; preds = %47
  %56 = load i64, ptr %0, align 8
  %57 = and i64 %56, 65535
  %58 = add nsw i64 %57, -5
  %59 = icmp ult i64 %58, 18
  br i1 %59, label %62, label %60

60:                                               ; preds = %32, %55, %27
  %61 = phi i32 [ 4510, %27 ], [ 4524, %55 ], [ 4549, %32 ]
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef %61, ptr noundef nonnull @.str.219) #29
  br label %62

62:                                               ; preds = %60, %55, %27, %47, %19
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @fld_worklist_push(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #2 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = load i64, ptr %0, align 8
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 65535
  %8 = icmp ne i32 %7, 22
  %9 = icmp ult i32 %7, 188
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %33

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.free_lang_data_d, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !136
  %14 = tail call i32 @pointer_set_contains(ptr noundef %13, ptr noundef nonnull %0) #29
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %11
  %17 = load ptr, ptr %1, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.VEC_tree_base, ptr %17, i64 0, i32 1
  %21 = load i32, ptr %20, align 4, !tbaa !87
  %22 = load i32, ptr %17, align 8, !tbaa !61
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %19, %16
  %25 = tail call ptr @vec_heap_p_reserve(ptr noundef %17, i32 noundef 1) #29
  store ptr %25, ptr %1, align 8, !tbaa !6
  %26 = load i32, ptr %25, align 8, !tbaa !61
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = phi ptr [ %17, %19 ], [ %25, %24 ]
  %30 = add i32 %28, 1
  store i32 %30, ptr %29, align 8, !tbaa !61
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %struct.VEC_tree_base, ptr %29, i64 0, i32 2, i64 %31
  store ptr %0, ptr %32, align 8, !tbaa !6
  br label %33

33:                                               ; preds = %27, %11, %4, %2
  ret void
}

declare i32 @pointer_set_contains(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @pointer_set_insert(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @free_lang_data_in_block(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2, %15
  %7 = phi ptr [ %13, %15 ], [ %4, %2 ]
  %8 = phi ptr [ %16, %15 ], [ %3, %2 ]
  %9 = tail call i32 @pointer_set_contains(ptr noundef %1, ptr noundef nonnull %7) #29
  %10 = icmp eq i32 %9, 0
  %11 = load ptr, ptr %8, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  br i1 %10, label %14, label %15

14:                                               ; preds = %6
  store ptr %13, ptr %8, align 8, !tbaa !6
  br label %15

15:                                               ; preds = %6, %14
  %16 = phi ptr [ %8, %14 ], [ %12, %6 ]
  %17 = icmp eq ptr %13, null
  br i1 %17, label %18, label %6, !llvm.loop !226

18:                                               ; preds = %15, %2
  %19 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18, %22
  %23 = phi ptr [ %25, %22 ], [ %20, %18 ]
  tail call fastcc void @free_lang_data_in_block(ptr noundef nonnull %23, ptr noundef %1)
  %24 = getelementptr inbounds %struct.tree_common, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %22, !llvm.loop !227

27:                                               ; preds = %22, %18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @decl_debug_expr_lookup(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.tree_map, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #29
  store ptr %0, ptr %2, align 8, !tbaa !63
  %3 = load ptr, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %4 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %5 = tail call i32 %4(ptr noundef %0) #29
  %6 = call ptr @htab_find_with_hash(ptr noundef %3, ptr noundef nonnull %2, i32 noundef %5) #29
  %7 = icmp eq ptr %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.tree_map, ptr %6, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !64
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi ptr [ %10, %8 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #29
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @decl_debug_expr_insert(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @ggc_alloc_stat(i64 noundef 24) #29
  %4 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %5 = tail call i32 %4(ptr noundef %0) #29
  %6 = getelementptr inbounds %struct.tree_map, ptr %3, i64 0, i32 1
  store i32 %5, ptr %6, align 8, !tbaa !39
  store ptr %0, ptr %3, align 8, !tbaa !63
  %7 = getelementptr inbounds %struct.tree_map, ptr %3, i64 0, i32 2
  store ptr %1, ptr %7, align 8, !tbaa !64
  %8 = load ptr, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %9 = tail call ptr @htab_find_slot_with_hash(ptr noundef %8, ptr noundef nonnull %3, i32 noundef %5, i32 noundef 1) #29
  store ptr %3, ptr %9, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @free_lang_data_in_binfo(ptr nocapture noundef %0) unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 149
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 4181, ptr noundef nonnull @.str.219) #29
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.tree_binfo, ptr %0, i64 0, i32 2
  store ptr null, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_binfo, ptr %0, i64 0, i32 5
  %9 = getelementptr inbounds %struct.tree_binfo, ptr %0, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  %10 = load i32, ptr %9, align 8, !tbaa !61
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %6, %12
  %13 = phi i64 [ %16, %12 ], [ 0, %6 ]
  %14 = getelementptr inbounds %struct.VEC_tree_base, ptr %9, i64 0, i32 2, i64 %13
  %15 = load ptr, ptr %14, align 8, !tbaa !6
  tail call fastcc void @free_lang_data_in_binfo(ptr noundef %15)
  %16 = add nuw nsw i64 %13, 1
  %17 = load i32, ptr %9, align 8, !tbaa !61
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %12, label %20, !llvm.loop !228

20:                                               ; preds = %12, %6
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #23

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @is_attribute_p(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %4 = trunc i64 %3 to i32
  %5 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef %0, i32 noundef %4, ptr noundef %1), !range !37
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @is_attribute_with_length_p(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #9 {
  %4 = load i64, ptr %2, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %7, label %74

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.tree_identifier, ptr %2, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_identifier, ptr %2, i64 0, i32 1, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !17
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %0, ptr noundef nonnull dereferenceable(1) %9)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %74, label %16

16:                                               ; preds = %13, %7
  %17 = load i8, ptr %0, align 1, !tbaa !17
  %18 = icmp eq i8 %17, 95
  br i1 %18, label %19, label %46

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, ptr %0, i64 1
  %21 = load i8, ptr %20, align 1, !tbaa !17
  %22 = icmp eq i8 %21, 95
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5051, ptr noundef nonnull @.str.219) #29
  br label %24

24:                                               ; preds = %19, %23
  %25 = add nsw i32 %1, -2
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, ptr %0, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !17
  %29 = icmp eq i8 %28, 95
  br i1 %29, label %31, label %30

30:                                               ; preds = %24
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5052, ptr noundef nonnull @.str.219) #29
  br label %31

31:                                               ; preds = %24, %30
  %32 = add nsw i32 %1, -1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %0, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !17
  %36 = icmp eq i8 %35, 95
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5053, ptr noundef nonnull @.str.219) #29
  br label %38

38:                                               ; preds = %31, %37
  %39 = add nsw i32 %1, -4
  %40 = icmp eq i32 %11, %39
  br i1 %40, label %41, label %73

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, ptr %0, i64 2
  %43 = sext i32 %11 to i64
  %44 = tail call i32 @strncmp(ptr noundef nonnull %42, ptr noundef %9, i64 noundef %43)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %74, label %73

46:                                               ; preds = %16
  %47 = add nsw i32 %1, 4
  %48 = icmp eq i32 %11, %47
  br i1 %48, label %49, label %73

49:                                               ; preds = %46
  %50 = load i8, ptr %9, align 1, !tbaa !17
  %51 = icmp eq i8 %50, 95
  br i1 %51, label %52, label %73

52:                                               ; preds = %49
  %53 = getelementptr inbounds i8, ptr %9, i64 1
  %54 = load i8, ptr %53, align 1, !tbaa !17
  %55 = icmp eq i8 %54, 95
  br i1 %55, label %56, label %73

56:                                               ; preds = %52
  %57 = add nsw i32 %11, -2
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, ptr %9, i64 %58
  %60 = load i8, ptr %59, align 1, !tbaa !17
  %61 = icmp eq i8 %60, 95
  br i1 %61, label %62, label %73

62:                                               ; preds = %56
  %63 = add nsw i32 %11, -1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, ptr %9, i64 %64
  %66 = load i8, ptr %65, align 1, !tbaa !17
  %67 = icmp eq i8 %66, 95
  br i1 %67, label %68, label %73

68:                                               ; preds = %62
  %69 = getelementptr inbounds i8, ptr %9, i64 2
  %70 = sext i32 %1 to i64
  %71 = tail call i32 @strncmp(ptr noundef nonnull %0, ptr noundef nonnull %69, i64 noundef %70)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %46, %49, %52, %56, %62, %68, %38, %41
  br label %74

74:                                               ; preds = %68, %41, %13, %3, %73
  %75 = phi i32 [ 0, %73 ], [ 0, %3 ], [ 1, %13 ], [ 1, %41 ], [ 1, %68 ]
  ret i32 %75
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @lookup_attribute(ptr nocapture noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %20
  %8 = phi ptr [ %1, %4 ], [ %22, %20 ]
  %9 = getelementptr inbounds %struct.tree_list, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = load i64, ptr %10, align 8
  %12 = and i64 %11, 65535
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %15 = load ptr, ptr %9, align 8, !tbaa !17
  br label %16

16:                                               ; preds = %7, %14
  %17 = phi ptr [ %10, %7 ], [ %15, %14 ]
  %18 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef %0, i32 noundef %6, ptr noundef %17), !range !37
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %7, !llvm.loop !229

24:                                               ; preds = %16, %20, %2
  %25 = phi ptr [ null, %2 ], [ null, %20 ], [ %8, %16 ]
  ret ptr %25
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @remove_attribute(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca ptr, align 8
  store ptr %1, ptr %3, align 8, !tbaa !6
  %4 = icmp eq ptr %1, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %7 = trunc i64 %6 to i32
  br label %8

8:                                                ; preds = %5, %25
  %9 = phi ptr [ %3, %5 ], [ %26, %25 ]
  %10 = phi ptr [ %1, %5 ], [ %23, %25 ]
  %11 = getelementptr inbounds %struct.tree_list, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5114, ptr noundef nonnull @.str.219) #29
  %17 = load ptr, ptr %11, align 8, !tbaa !17
  br label %18

18:                                               ; preds = %8, %16
  %19 = phi ptr [ %12, %8 ], [ %17, %16 ]
  %20 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef %0, i32 noundef %7, ptr noundef %19), !range !37
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  br i1 %21, label %25, label %24

24:                                               ; preds = %18
  store ptr %23, ptr %9, align 8, !tbaa !6
  br label %25

25:                                               ; preds = %18, %24
  %26 = phi ptr [ %9, %24 ], [ %22, %18 ]
  %27 = icmp eq ptr %23, null
  br i1 %27, label %28, label %8, !llvm.loop !230

28:                                               ; preds = %25
  %29 = load ptr, ptr %3, align 8, !tbaa !6
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi ptr [ %29, %28 ], [ null, %2 ]
  ret ptr %31
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @merge_attributes(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %208, label %4

4:                                                ; preds = %2
  %5 = icmp eq ptr %1, null
  br i1 %5, label %208, label %6

6:                                                ; preds = %4
  %7 = tail call i32 @attribute_list_contained(ptr noundef nonnull %0, ptr noundef nonnull %1)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %208

9:                                                ; preds = %6
  %10 = tail call i32 @attribute_list_contained(ptr noundef nonnull %1, ptr noundef nonnull %0)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %208

12:                                               ; preds = %9, %12
  %13 = phi i32 [ %17, %12 ], [ 0, %9 ]
  %14 = phi ptr [ %16, %12 ], [ %0, %9 ]
  %15 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = add nuw nsw i32 %13, 1
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %12, !llvm.loop !81

19:                                               ; preds = %12, %19
  %20 = phi i32 [ %24, %19 ], [ 0, %12 ]
  %21 = phi ptr [ %23, %19 ], [ %1, %12 ]
  %22 = getelementptr inbounds %struct.tree_common, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = add nuw nsw i32 %20, 1
  %25 = icmp eq ptr %23, null
  br i1 %25, label %26, label %19, !llvm.loop !81

26:                                               ; preds = %19
  %27 = icmp ult i32 %13, %20
  %28 = select i1 %27, ptr %0, ptr %1
  %29 = select i1 %27, ptr %1, ptr %0
  br label %30

30:                                               ; preds = %26, %203
  %31 = phi ptr [ %29, %26 ], [ %204, %203 ]
  %32 = phi ptr [ %28, %26 ], [ %206, %203 ]
  %33 = getelementptr inbounds %struct.tree_list, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.tree_identifier, ptr %34, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %31, null
  br i1 %37, label %200, label %38

38:                                               ; preds = %30
  %39 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %36)
  %40 = trunc i64 %39 to i32
  br label %41

41:                                               ; preds = %54, %38
  %42 = phi ptr [ %31, %38 ], [ %56, %54 ]
  %43 = getelementptr inbounds %struct.tree_list, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = load i64, ptr %44, align 8
  %46 = and i64 %45, 65535
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %50, label %48

48:                                               ; preds = %41
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %49 = load ptr, ptr %43, align 8, !tbaa !17
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi ptr [ %44, %41 ], [ %49, %48 ]
  %52 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef %36, i32 noundef %40, ptr noundef %51), !range !37
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.tree_common, ptr %42, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = icmp eq ptr %56, null
  br i1 %57, label %200, label %41, !llvm.loop !229

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.tree_list, ptr %32, i64 0, i32 2
  br label %61

60:                                               ; preds = %192, %172, %152
  br label %61

61:                                               ; preds = %60, %58
  %62 = phi ptr [ %42, %58 ], [ %132, %60 ]
  %63 = getelementptr inbounds %struct.tree_list, ptr %62, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = load ptr, ptr %59, align 8, !tbaa !17
  br label %98

68:                                               ; preds = %61
  %69 = load i64, ptr %64, align 8
  %70 = and i64 %69, 65535
  %71 = icmp eq i64 %70, 2
  %72 = load ptr, ptr %59, align 8, !tbaa !17
  br i1 %71, label %73, label %98

73:                                               ; preds = %68
  %74 = icmp eq ptr %72, null
  br i1 %74, label %98, label %75

75:                                               ; preds = %73
  %76 = load i64, ptr %72, align 8
  %77 = and i64 %76, 65535
  %78 = icmp eq i64 %77, 2
  br i1 %78, label %79, label %98

79:                                               ; preds = %75, %88
  %80 = phi ptr [ %92, %88 ], [ %72, %75 ]
  %81 = phi ptr [ %90, %88 ], [ %64, %75 ]
  %82 = getelementptr inbounds %struct.tree_list, ptr %81, i64 0, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = getelementptr inbounds %struct.tree_list, ptr %80, i64 0, i32 2
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = tail call i32 @simple_cst_equal(ptr noundef %83, ptr noundef %85), !range !56
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %102

88:                                               ; preds = %79
  %89 = getelementptr inbounds %struct.tree_common, ptr %81, i64 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !17
  %91 = getelementptr inbounds %struct.tree_common, ptr %80, i64 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = icmp ne ptr %90, null
  %94 = icmp ne ptr %92, null
  %95 = select i1 %93, i1 %94, i1 false
  br i1 %95, label %79, label %96, !llvm.loop !231

96:                                               ; preds = %88
  %97 = icmp eq ptr %90, %92
  br i1 %97, label %203, label %102

98:                                               ; preds = %66, %75, %73, %68
  %99 = phi ptr [ %67, %66 ], [ %72, %75 ], [ null, %73 ], [ %72, %68 ]
  %100 = tail call i32 @simple_cst_equal(ptr noundef %64, ptr noundef %99), !range !56
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %203, label %102

102:                                              ; preds = %79, %96, %98
  %103 = load ptr, ptr %33, align 8, !tbaa !17
  %104 = getelementptr inbounds %struct.tree_identifier, ptr %103, i64 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = getelementptr inbounds %struct.tree_common, ptr %62, i64 0, i32 1
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  %108 = icmp eq ptr %107, null
  br i1 %108, label %200, label %109

109:                                              ; preds = %102
  %110 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %105)
  %111 = trunc i64 %110 to i32
  %112 = getelementptr inbounds i8, ptr %105, i64 2
  %113 = add nsw i32 %111, 4
  %114 = shl i64 %110, 32
  %115 = ashr exact i64 %114, 32
  %116 = getelementptr inbounds i8, ptr %105, i64 1
  %117 = add i64 %114, -8589934592
  %118 = ashr exact i64 %117, 32
  %119 = getelementptr inbounds i8, ptr %105, i64 %118
  %120 = add i64 %114, -4294967296
  %121 = ashr exact i64 %120, 32
  %122 = getelementptr inbounds i8, ptr %105, i64 %121
  %123 = add nsw i32 %111, -4
  %124 = shl i64 %110, 32
  %125 = add i64 %124, 8589934592
  %126 = ashr exact i64 %125, 32
  %127 = shl i64 %110, 32
  %128 = add i64 %127, 12884901888
  %129 = ashr exact i64 %128, 32
  %130 = sext i32 %123 to i64
  br label %131

131:                                              ; preds = %196, %109
  %132 = phi ptr [ %107, %109 ], [ %198, %196 ]
  %133 = getelementptr inbounds %struct.tree_list, ptr %132, i64 0, i32 1
  %134 = load ptr, ptr %133, align 8, !tbaa !17
  %135 = load i64, ptr %134, align 8
  %136 = and i64 %135, 65535
  %137 = icmp eq i64 %136, 1
  br i1 %137, label %141, label %138

138:                                              ; preds = %131
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %139 = load ptr, ptr %133, align 8, !tbaa !17
  %140 = load i64, ptr %139, align 8
  br label %141

141:                                              ; preds = %138, %131
  %142 = phi i64 [ %135, %131 ], [ %140, %138 ]
  %143 = phi ptr [ %134, %131 ], [ %139, %138 ]
  %144 = and i64 %142, 65535
  %145 = icmp eq i64 %144, 1
  br i1 %145, label %146, label %196

146:                                              ; preds = %141
  %147 = getelementptr inbounds %struct.tree_identifier, ptr %143, i64 0, i32 1
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = getelementptr inbounds %struct.tree_identifier, ptr %143, i64 0, i32 1, i32 1
  %150 = load i32, ptr %149, align 8, !tbaa !17
  %151 = icmp eq i32 %150, %111
  br i1 %151, label %152, label %155

152:                                              ; preds = %146
  %153 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %105, ptr noundef nonnull dereferenceable(1) %148)
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %60, label %155, !llvm.loop !232

155:                                              ; preds = %152, %146
  %156 = load i8, ptr %105, align 1, !tbaa !17
  %157 = icmp eq i8 %156, 95
  br i1 %157, label %158, label %175

158:                                              ; preds = %155
  %159 = load i8, ptr %116, align 1, !tbaa !17
  %160 = icmp eq i8 %159, 95
  br i1 %160, label %162, label %161

161:                                              ; preds = %158
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5051, ptr noundef nonnull @.str.219) #29
  br label %162

162:                                              ; preds = %161, %158
  %163 = load i8, ptr %119, align 1, !tbaa !17
  %164 = icmp eq i8 %163, 95
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5052, ptr noundef nonnull @.str.219) #29
  br label %166

166:                                              ; preds = %165, %162
  %167 = load i8, ptr %122, align 1, !tbaa !17
  %168 = icmp eq i8 %167, 95
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5053, ptr noundef nonnull @.str.219) #29
  br label %170

170:                                              ; preds = %169, %166
  %171 = icmp eq i32 %150, %123
  br i1 %171, label %172, label %196

172:                                              ; preds = %170
  %173 = tail call i32 @strncmp(ptr noundef nonnull %112, ptr noundef %148, i64 noundef %130)
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %60, label %196, !llvm.loop !232

175:                                              ; preds = %155
  %176 = icmp eq i32 %150, %113
  br i1 %176, label %177, label %196

177:                                              ; preds = %175
  %178 = load i8, ptr %148, align 1, !tbaa !17
  %179 = icmp eq i8 %178, 95
  br i1 %179, label %180, label %196

180:                                              ; preds = %177
  %181 = getelementptr inbounds i8, ptr %148, i64 1
  %182 = load i8, ptr %181, align 1, !tbaa !17
  %183 = icmp eq i8 %182, 95
  br i1 %183, label %184, label %196

184:                                              ; preds = %180
  %185 = getelementptr inbounds i8, ptr %148, i64 %126
  %186 = load i8, ptr %185, align 1, !tbaa !17
  %187 = icmp eq i8 %186, 95
  br i1 %187, label %188, label %196

188:                                              ; preds = %184
  %189 = getelementptr inbounds i8, ptr %148, i64 %129
  %190 = load i8, ptr %189, align 1, !tbaa !17
  %191 = icmp eq i8 %190, 95
  br i1 %191, label %192, label %196

192:                                              ; preds = %188
  %193 = getelementptr inbounds i8, ptr %148, i64 2
  %194 = tail call i32 @strncmp(ptr noundef nonnull %105, ptr noundef nonnull %193, i64 noundef %115)
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %60, label %196, !llvm.loop !232

196:                                              ; preds = %170, %172, %175, %177, %180, %184, %188, %192, %141
  %197 = getelementptr inbounds %struct.tree_common, ptr %132, i64 0, i32 1
  %198 = load ptr, ptr %197, align 8, !tbaa !17
  %199 = icmp eq ptr %198, null
  br i1 %199, label %200, label %131, !llvm.loop !229

200:                                              ; preds = %54, %102, %196, %30
  %201 = tail call ptr @copy_node_stat(ptr noundef nonnull %32)
  %202 = getelementptr inbounds %struct.tree_common, ptr %201, i64 0, i32 1
  store ptr %31, ptr %202, align 8, !tbaa !17
  br label %203

203:                                              ; preds = %96, %98, %200
  %204 = phi ptr [ %201, %200 ], [ %31, %98 ], [ %31, %96 ]
  %205 = getelementptr inbounds %struct.tree_common, ptr %32, i64 0, i32 1
  %206 = load ptr, ptr %205, align 8, !tbaa !17
  %207 = icmp eq ptr %206, null
  br i1 %207, label %208, label %30, !llvm.loop !233

208:                                              ; preds = %203, %9, %2, %4, %6
  %209 = phi ptr [ %0, %6 ], [ %0, %4 ], [ %1, %2 ], [ %1, %9 ], [ %204, %203 ]
  ret ptr %209
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @attribute_list_contained(ptr noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %207, label %4

4:                                                ; preds = %2
  %5 = icmp ne ptr %0, null
  %6 = icmp ne ptr %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %30

8:                                                ; preds = %4, %22
  %9 = phi ptr [ %26, %22 ], [ %1, %4 ]
  %10 = phi ptr [ %24, %22 ], [ %0, %4 ]
  %11 = getelementptr inbounds %struct.tree_list, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = getelementptr inbounds %struct.tree_list, ptr %9, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %12, %14
  br i1 %15, label %16, label %33

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.tree_list, ptr %10, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.tree_list, ptr %9, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %18, %20
  br i1 %21, label %22, label %33

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = icmp ne ptr %24, null
  %28 = icmp ne ptr %26, null
  %29 = select i1 %27, i1 %28, i1 false
  br i1 %29, label %8, label %30, !llvm.loop !234

30:                                               ; preds = %22, %4
  %31 = phi ptr [ %1, %4 ], [ %26, %22 ]
  %32 = icmp eq ptr %31, null
  br i1 %32, label %207, label %33

33:                                               ; preds = %8, %16, %30
  %34 = phi ptr [ %31, %30 ], [ %9, %16 ], [ %9, %8 ]
  %35 = icmp eq ptr %0, null
  br label %36

36:                                               ; preds = %33, %203
  %37 = phi ptr [ %34, %33 ], [ %205, %203 ]
  %38 = getelementptr inbounds %struct.tree_list, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = getelementptr inbounds %struct.tree_identifier, ptr %39, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  br i1 %35, label %207, label %42

42:                                               ; preds = %36
  %43 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %41)
  %44 = trunc i64 %43 to i32
  br label %45

45:                                               ; preds = %58, %42
  %46 = phi ptr [ %0, %42 ], [ %60, %58 ]
  %47 = getelementptr inbounds %struct.tree_list, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = load i64, ptr %48, align 8
  %50 = and i64 %49, 65535
  %51 = icmp eq i64 %50, 1
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %53 = load ptr, ptr %47, align 8, !tbaa !17
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi ptr [ %48, %45 ], [ %53, %52 ]
  %56 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef %41, i32 noundef %44, ptr noundef %55), !range !37
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.tree_common, ptr %46, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = icmp eq ptr %60, null
  br i1 %61, label %207, label %45, !llvm.loop !229

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.tree_list, ptr %37, i64 0, i32 2
  br label %65

64:                                               ; preds = %195, %175, %155
  br label %65

65:                                               ; preds = %64, %62
  %66 = phi ptr [ %46, %62 ], [ %135, %64 ]
  %67 = load ptr, ptr %63, align 8, !tbaa !17
  %68 = icmp eq ptr %67, null
  br i1 %68, label %100, label %69

69:                                               ; preds = %65
  %70 = load i64, ptr %67, align 8
  %71 = and i64 %70, 65535
  %72 = icmp eq i64 %71, 2
  br i1 %72, label %73, label %100

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.tree_list, ptr %66, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = icmp eq ptr %75, null
  br i1 %76, label %100, label %77

77:                                               ; preds = %73
  %78 = load i64, ptr %75, align 8
  %79 = and i64 %78, 65535
  %80 = icmp eq i64 %79, 2
  br i1 %80, label %81, label %100

81:                                               ; preds = %77, %90
  %82 = phi ptr [ %94, %90 ], [ %75, %77 ]
  %83 = phi ptr [ %92, %90 ], [ %67, %77 ]
  %84 = getelementptr inbounds %struct.tree_list, ptr %83, i64 0, i32 2
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.tree_list, ptr %82, i64 0, i32 2
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = tail call i32 @simple_cst_equal(ptr noundef %85, ptr noundef %87), !range !56
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %105

90:                                               ; preds = %81
  %91 = getelementptr inbounds %struct.tree_common, ptr %83, i64 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = getelementptr inbounds %struct.tree_common, ptr %82, i64 0, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !17
  %95 = icmp ne ptr %92, null
  %96 = icmp ne ptr %94, null
  %97 = select i1 %95, i1 %96, i1 false
  br i1 %97, label %81, label %98, !llvm.loop !231

98:                                               ; preds = %90
  %99 = icmp eq ptr %92, %94
  br i1 %99, label %203, label %105

100:                                              ; preds = %77, %73, %69, %65
  %101 = getelementptr inbounds %struct.tree_list, ptr %66, i64 0, i32 2
  %102 = load ptr, ptr %101, align 8, !tbaa !17
  %103 = tail call i32 @simple_cst_equal(ptr noundef %67, ptr noundef %102), !range !56
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %203, label %105

105:                                              ; preds = %81, %98, %100
  %106 = load ptr, ptr %38, align 8, !tbaa !17
  %107 = getelementptr inbounds %struct.tree_identifier, ptr %106, i64 0, i32 1
  %108 = load ptr, ptr %107, align 8, !tbaa !17
  %109 = getelementptr inbounds %struct.tree_common, ptr %66, i64 0, i32 1
  %110 = load ptr, ptr %109, align 8, !tbaa !17
  %111 = icmp eq ptr %110, null
  br i1 %111, label %207, label %112

112:                                              ; preds = %105
  %113 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %108)
  %114 = trunc i64 %113 to i32
  %115 = getelementptr inbounds i8, ptr %108, i64 2
  %116 = add nsw i32 %114, 4
  %117 = shl i64 %113, 32
  %118 = ashr exact i64 %117, 32
  %119 = getelementptr inbounds i8, ptr %108, i64 1
  %120 = add i64 %117, -8589934592
  %121 = ashr exact i64 %120, 32
  %122 = getelementptr inbounds i8, ptr %108, i64 %121
  %123 = add i64 %117, -4294967296
  %124 = ashr exact i64 %123, 32
  %125 = getelementptr inbounds i8, ptr %108, i64 %124
  %126 = add nsw i32 %114, -4
  %127 = shl i64 %113, 32
  %128 = add i64 %127, 8589934592
  %129 = ashr exact i64 %128, 32
  %130 = shl i64 %113, 32
  %131 = add i64 %130, 12884901888
  %132 = ashr exact i64 %131, 32
  %133 = sext i32 %126 to i64
  br label %134

134:                                              ; preds = %199, %112
  %135 = phi ptr [ %110, %112 ], [ %201, %199 ]
  %136 = getelementptr inbounds %struct.tree_list, ptr %135, i64 0, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !17
  %138 = load i64, ptr %137, align 8
  %139 = and i64 %138, 65535
  %140 = icmp eq i64 %139, 1
  br i1 %140, label %144, label %141

141:                                              ; preds = %134
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %142 = load ptr, ptr %136, align 8, !tbaa !17
  %143 = load i64, ptr %142, align 8
  br label %144

144:                                              ; preds = %141, %134
  %145 = phi i64 [ %138, %134 ], [ %143, %141 ]
  %146 = phi ptr [ %137, %134 ], [ %142, %141 ]
  %147 = and i64 %145, 65535
  %148 = icmp eq i64 %147, 1
  br i1 %148, label %149, label %199

149:                                              ; preds = %144
  %150 = getelementptr inbounds %struct.tree_identifier, ptr %146, i64 0, i32 1
  %151 = load ptr, ptr %150, align 8, !tbaa !17
  %152 = getelementptr inbounds %struct.tree_identifier, ptr %146, i64 0, i32 1, i32 1
  %153 = load i32, ptr %152, align 8, !tbaa !17
  %154 = icmp eq i32 %153, %114
  br i1 %154, label %155, label %158

155:                                              ; preds = %149
  %156 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %108, ptr noundef nonnull dereferenceable(1) %151)
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %64, label %158, !llvm.loop !235

158:                                              ; preds = %155, %149
  %159 = load i8, ptr %108, align 1, !tbaa !17
  %160 = icmp eq i8 %159, 95
  br i1 %160, label %161, label %178

161:                                              ; preds = %158
  %162 = load i8, ptr %119, align 1, !tbaa !17
  %163 = icmp eq i8 %162, 95
  br i1 %163, label %165, label %164

164:                                              ; preds = %161
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5051, ptr noundef nonnull @.str.219) #29
  br label %165

165:                                              ; preds = %164, %161
  %166 = load i8, ptr %122, align 1, !tbaa !17
  %167 = icmp eq i8 %166, 95
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5052, ptr noundef nonnull @.str.219) #29
  br label %169

169:                                              ; preds = %168, %165
  %170 = load i8, ptr %125, align 1, !tbaa !17
  %171 = icmp eq i8 %170, 95
  br i1 %171, label %173, label %172

172:                                              ; preds = %169
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5053, ptr noundef nonnull @.str.219) #29
  br label %173

173:                                              ; preds = %172, %169
  %174 = icmp eq i32 %153, %126
  br i1 %174, label %175, label %199

175:                                              ; preds = %173
  %176 = tail call i32 @strncmp(ptr noundef nonnull %115, ptr noundef %151, i64 noundef %133)
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %64, label %199, !llvm.loop !235

178:                                              ; preds = %158
  %179 = icmp eq i32 %153, %116
  br i1 %179, label %180, label %199

180:                                              ; preds = %178
  %181 = load i8, ptr %151, align 1, !tbaa !17
  %182 = icmp eq i8 %181, 95
  br i1 %182, label %183, label %199

183:                                              ; preds = %180
  %184 = getelementptr inbounds i8, ptr %151, i64 1
  %185 = load i8, ptr %184, align 1, !tbaa !17
  %186 = icmp eq i8 %185, 95
  br i1 %186, label %187, label %199

187:                                              ; preds = %183
  %188 = getelementptr inbounds i8, ptr %151, i64 %129
  %189 = load i8, ptr %188, align 1, !tbaa !17
  %190 = icmp eq i8 %189, 95
  br i1 %190, label %191, label %199

191:                                              ; preds = %187
  %192 = getelementptr inbounds i8, ptr %151, i64 %132
  %193 = load i8, ptr %192, align 1, !tbaa !17
  %194 = icmp eq i8 %193, 95
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = getelementptr inbounds i8, ptr %151, i64 2
  %197 = tail call i32 @strncmp(ptr noundef nonnull %108, ptr noundef nonnull %196, i64 noundef %118)
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %64, label %199, !llvm.loop !235

199:                                              ; preds = %173, %175, %178, %180, %183, %187, %191, %195, %144
  %200 = getelementptr inbounds %struct.tree_common, ptr %135, i64 0, i32 1
  %201 = load ptr, ptr %200, align 8, !tbaa !17
  %202 = icmp eq ptr %201, null
  br i1 %202, label %207, label %134, !llvm.loop !229

203:                                              ; preds = %98, %100
  %204 = getelementptr inbounds %struct.tree_common, ptr %37, i64 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !17
  %206 = icmp eq ptr %205, null
  br i1 %206, label %207, label %36, !llvm.loop !236

207:                                              ; preds = %36, %203, %58, %105, %199, %30, %2
  %208 = phi i32 [ 1, %2 ], [ 1, %30 ], [ 0, %199 ], [ 0, %105 ], [ 0, %58 ], [ 0, %36 ], [ 1, %203 ]
  ret i32 %208
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @simple_cst_list_equal(ptr noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = icmp ne ptr %0, null
  %4 = icmp ne ptr %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %23

6:                                                ; preds = %2, %15
  %7 = phi ptr [ %19, %15 ], [ %1, %2 ]
  %8 = phi ptr [ %17, %15 ], [ %0, %2 ]
  %9 = getelementptr inbounds %struct.tree_list, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.tree_list, ptr %7, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = tail call i32 @simple_cst_equal(ptr noundef %10, ptr noundef %12), !range !56
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %28

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp ne ptr %17, null
  %21 = icmp ne ptr %19, null
  %22 = select i1 %20, i1 %21, i1 false
  br i1 %22, label %6, label %23, !llvm.loop !231

23:                                               ; preds = %15, %2
  %24 = phi ptr [ %0, %2 ], [ %17, %15 ]
  %25 = phi ptr [ %1, %2 ], [ %19, %15 ]
  %26 = icmp eq ptr %24, %25
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %6, %23
  %29 = phi i32 [ %27, %23 ], [ 0, %6 ]
  ret i32 %29
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @merge_type_attributes(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = tail call ptr @merge_attributes(ptr noundef %4, ptr noundef %6)
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @merge_decl_attributes(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = tail call ptr @merge_attributes(ptr noundef %4, ptr noundef %6)
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @check_qualified_type(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = load i64, ptr %0, align 8
  %5 = trunc i64 %4 to i32
  %6 = lshr i32 %5, 20
  %7 = and i32 %6, 1
  %8 = lshr i32 %5, 18
  %9 = and i32 %8, 2
  %10 = or i32 %7, %9
  %11 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %12 = load i32, ptr %11, align 4
  %13 = lshr i32 %12, 11
  %14 = and i32 %13, 4
  %15 = or i32 %10, %14
  %16 = lshr i64 %4, 48
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 65280
  %19 = or i32 %15, %18
  %20 = icmp eq i32 %19, %2
  br i1 %20, label %21, label %44

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 12
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 12
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %27, label %44

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 18
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = icmp eq ptr %29, %31
  br i1 %32, label %33, label %44

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 4
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = tail call i32 @attribute_list_contained(ptr noundef %35, ptr noundef %37)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = tail call i32 @attribute_list_contained(ptr noundef %37, ptr noundef %35)
  %42 = icmp ne i32 %41, 0
  %43 = zext i1 %42 to i8
  br label %44

44:                                               ; preds = %40, %33, %27, %21, %3
  %45 = phi i8 [ 0, %27 ], [ 0, %21 ], [ 0, %3 ], [ 0, %33 ], [ %43, %40 ]
  ret i8 %45
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @get_qualified_type(ptr noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i32
  %5 = lshr i32 %4, 20
  %6 = and i32 %5, 1
  %7 = lshr i32 %4, 18
  %8 = and i32 %7, 2
  %9 = or i32 %6, %8
  %10 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 11
  %13 = and i32 %12, 4
  %14 = or i32 %9, %13
  %15 = lshr i64 %3, 48
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 65280
  %18 = or i32 %14, %17
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %70, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = icmp eq ptr %22, null
  br i1 %23, label %70, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 12
  %26 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %27 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  br label %28

28:                                               ; preds = %24, %66
  %29 = phi ptr [ %22, %24 ], [ %68, %66 ]
  %30 = load i64, ptr %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = lshr i32 %31, 20
  %33 = and i32 %32, 1
  %34 = lshr i32 %31, 18
  %35 = and i32 %34, 2
  %36 = or i32 %33, %35
  %37 = getelementptr inbounds %struct.tree_type, ptr %29, i64 0, i32 6
  %38 = load i32, ptr %37, align 4
  %39 = lshr i32 %38, 11
  %40 = and i32 %39, 4
  %41 = or i32 %36, %40
  %42 = lshr i64 %30, 48
  %43 = trunc i64 %42 to i32
  %44 = and i32 %43, 65280
  %45 = or i32 %41, %44
  %46 = icmp eq i32 %45, %1
  br i1 %46, label %47, label %66

47:                                               ; preds = %28
  %48 = getelementptr inbounds %struct.tree_type, ptr %29, i64 0, i32 12
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = load ptr, ptr %25, align 8, !tbaa !17
  %51 = icmp eq ptr %49, %50
  br i1 %51, label %52, label %66

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.tree_type, ptr %29, i64 0, i32 18
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = load ptr, ptr %26, align 8, !tbaa !17
  %56 = icmp eq ptr %54, %55
  br i1 %56, label %57, label %66

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.tree_type, ptr %29, i64 0, i32 4
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = load ptr, ptr %27, align 8, !tbaa !17
  %61 = tail call i32 @attribute_list_contained(ptr noundef %59, ptr noundef %60)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = tail call i32 @attribute_list_contained(ptr noundef %60, ptr noundef %59)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %57, %28, %47, %52, %63
  %67 = getelementptr inbounds %struct.tree_type, ptr %29, i64 0, i32 15
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = icmp eq ptr %68, null
  br i1 %69, label %70, label %28, !llvm.loop !237

70:                                               ; preds = %63, %66, %20, %2
  %71 = phi ptr [ %0, %2 ], [ null, %20 ], [ %29, %63 ], [ null, %66 ]
  ret ptr %71
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_variant_type_copy(ptr noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = tail call ptr @copy_node_stat(ptr noundef %0)
  %5 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 9
  %6 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  %9 = select i1 %8, ptr null, ptr %4
  %10 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 19
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 16
  store ptr %4, ptr %11, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 15
  store ptr null, ptr %12, align 8, !tbaa !17
  %13 = load ptr, ptr %6, align 8, !tbaa !17
  store ptr %13, ptr %10, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 15
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  store ptr %15, ptr %12, align 8, !tbaa !17
  store ptr %4, ptr %14, align 8, !tbaa !17
  store ptr %3, ptr %11, align 8, !tbaa !17
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_map_base_marked_p(ptr nocapture noundef readonly %0) #9 {
  %2 = load ptr, ptr %0, align 8, !tbaa !42
  %3 = tail call i32 @ggc_marked_p(ptr noundef %2) #29
  ret i32 %3
}

declare i32 @ggc_marked_p(ptr noundef) #3

declare ptr @htab_find(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i16 @decl_fini_priority_lookup(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.tree_map_base, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = icmp eq i64 %4, 29
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5621, ptr noundef nonnull @.str.219) #29
  br label %7

7:                                                ; preds = %1, %6
  store ptr %0, ptr %2, align 8, !tbaa !42
  %8 = load ptr, ptr @init_priority_for_decl, align 8, !tbaa !6
  %9 = call ptr @htab_find(ptr noundef %8, ptr noundef nonnull %2) #29
  %10 = icmp eq ptr %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.tree_priority_map, ptr %9, i64 0, i32 2
  %13 = load i16, ptr %12, align 2, !tbaa !68
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i16 [ %13, %11 ], [ -1, %7 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  ret i16 %15
}

declare ptr @ggc_alloc_cleared_stat(i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @decl_fini_priority_insert(ptr noundef %0, i16 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = alloca %struct.tree_priority_map, align 8
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 29
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5672, ptr noundef nonnull @.str.219) #29
  br label %8

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #29
  store ptr %0, ptr %3, align 8, !tbaa !67
  %9 = load ptr, ptr @init_priority_for_decl, align 8, !tbaa !6
  %10 = call ptr @htab_find_slot(ptr noundef %9, ptr noundef nonnull %3, i32 noundef 1) #29
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = call ptr @ggc_alloc_cleared_stat(i64 noundef 16) #29
  store ptr %14, ptr %10, align 8, !tbaa !6
  store ptr %0, ptr %14, align 8, !tbaa !67
  %15 = getelementptr inbounds %struct.tree_priority_map, ptr %14, i64 0, i32 1
  store i16 -1, ptr %15, align 8, !tbaa !65
  %16 = getelementptr inbounds %struct.tree_priority_map, ptr %14, i64 0, i32 2
  store i16 -1, ptr %16, align 2, !tbaa !68
  br label %17

17:                                               ; preds = %8, %13
  %18 = phi ptr [ %11, %8 ], [ %14, %13 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #29
  %19 = getelementptr inbounds %struct.tree_priority_map, ptr %18, i64 0, i32 2
  store i16 %1, ptr %19, align 2, !tbaa !68
  ret void
}

declare ptr @htab_find_with_hash(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @htab_find_slot_with_hash(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @type_hash_lookup(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca %struct.type_hash, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #29
  tail call void @layout_type(ptr noundef %1) #29
  %4 = zext i32 %0 to i64
  store i64 %4, ptr %3, align 8, !tbaa !34
  %5 = getelementptr inbounds %struct.type_hash, ptr %3, i64 0, i32 1
  store ptr %1, ptr %5, align 8, !tbaa !36
  %6 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %7 = call ptr @htab_find_with_hash(ptr noundef %6, ptr noundef nonnull %3, i32 noundef %0) #29
  %8 = icmp eq ptr %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.type_hash, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !36
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi ptr [ %11, %9 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #29
  ret ptr %13
}

declare void @layout_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @type_hash_add(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @ggc_alloc_stat(i64 noundef 16) #29
  %4 = zext i32 %0 to i64
  store i64 %4, ptr %3, align 8, !tbaa !34
  %5 = getelementptr inbounds %struct.type_hash, ptr %3, i64 0, i32 1
  store ptr %1, ptr %5, align 8, !tbaa !36
  %6 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %7 = tail call ptr @htab_find_slot_with_hash(ptr noundef %6, ptr noundef nonnull %3, i32 noundef %0, i32 noundef 1) #29
  store ptr %3, ptr %7, align 8, !tbaa !6
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @type_num_arguments(ptr nocapture noundef readonly %0) local_unnamed_addr #16 {
  %2 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %13
  %6 = phi ptr [ %16, %13 ], [ %3, %1 ]
  %7 = phi i32 [ %14, %13 ], [ 0, %1 ]
  %8 = getelementptr inbounds %struct.tree_list, ptr %6, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = load i64, ptr %9, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 19
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = add nuw nsw i32 %7, 1
  %15 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %5, !llvm.loop !238

18:                                               ; preds = %13, %5, %1
  %19 = phi i32 [ 0, %1 ], [ %7, %5 ], [ %14, %13 ]
  ret i32 %19
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @tree_int_cst_lt(ptr noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #14 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %79, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = lshr i32 %8, 21
  %10 = and i32 %9, 1
  %11 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = lshr i32 %14, 21
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %10, %16
  br i1 %17, label %55, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %20 = load i64, ptr %19, align 8, !tbaa !17
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !17
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %22, %18
  %27 = and i64 %7, 2097152
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !17
  %32 = icmp slt i64 %31, 0
  %33 = select i1 %32, i32 -1, i32 1
  br label %34

34:                                               ; preds = %22, %26, %29
  %35 = phi i32 [ 0, %22 ], [ 1, %26 ], [ %33, %29 ]
  %36 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %37 = load i64, ptr %36, align 8, !tbaa !17
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !17
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %39, %34
  %44 = and i64 %13, 2097152
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %48 = load i64, ptr %47, align 8, !tbaa !17
  %49 = icmp slt i64 %48, 0
  %50 = select i1 %49, i32 -1, i32 1
  br label %51

51:                                               ; preds = %39, %43, %46
  %52 = phi i32 [ 0, %39 ], [ 1, %43 ], [ %50, %46 ]
  %53 = icmp slt i32 %35, %52
  %54 = icmp eq i32 %35, %52
  br i1 %54, label %65, label %79

55:                                               ; preds = %4
  %56 = icmp eq i32 %10, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %59 = load i64, ptr %58, align 8, !tbaa !17
  %60 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !17
  %62 = icmp slt i64 %59, %61
  br i1 %62, label %79, label %63

63:                                               ; preds = %57
  %64 = icmp eq i64 %59, %61
  br i1 %64, label %73, label %79

65:                                               ; preds = %51, %55
  %66 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %67 = load i64, ptr %66, align 8, !tbaa !17
  %68 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !17
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %79, label %71

71:                                               ; preds = %65
  %72 = icmp eq i64 %67, %69
  br i1 %72, label %73, label %79

73:                                               ; preds = %71, %63
  %74 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %75 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %76 = load i64, ptr %75, align 8, !tbaa !17
  %77 = load i64, ptr %74, align 8, !tbaa !17
  %78 = icmp ult i64 %76, %77
  br label %79

79:                                               ; preds = %73, %51, %65, %71, %57, %63, %2
  %80 = phi i1 [ %53, %51 ], [ false, %2 ], [ true, %57 ], [ false, %63 ], [ true, %65 ], [ false, %71 ], [ %78, %73 ]
  %81 = zext i1 %80 to i32
  ret i32 %81
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @tree_int_cst_sgn(ptr nocapture noundef readonly %0) local_unnamed_addr #14 {
  %2 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %3 = load i64, ptr %2, align 8, !tbaa !17
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !17
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, 2097152
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !17
  %18 = icmp slt i64 %17, 0
  %19 = select i1 %18, i32 -1, i32 1
  br label %20

20:                                               ; preds = %15, %9, %5
  %21 = phi i32 [ 0, %5 ], [ 1, %9 ], [ %19, %15 ]
  ret i32 %21
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @tree_int_cst_compare(ptr noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #14 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %142, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = lshr i32 %8, 21
  %10 = and i32 %9, 1
  %11 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = lshr i32 %14, 21
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %10, %16
  br i1 %17, label %54, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %20 = load i64, ptr %19, align 8, !tbaa !17
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !17
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %22, %18
  %27 = and i64 %7, 2097152
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !17
  %32 = icmp slt i64 %31, 0
  %33 = select i1 %32, i32 -1, i32 1
  br label %34

34:                                               ; preds = %29, %26, %22
  %35 = phi i32 [ 0, %22 ], [ 1, %26 ], [ %33, %29 ]
  %36 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %37 = load i64, ptr %36, align 8, !tbaa !17
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !17
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %39, %34
  %44 = and i64 %13, 2097152
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %48 = load i64, ptr %47, align 8, !tbaa !17
  %49 = icmp slt i64 %48, 0
  %50 = select i1 %49, i32 -1, i32 1
  br label %51

51:                                               ; preds = %46, %43, %39
  %52 = phi i32 [ 0, %39 ], [ 1, %43 ], [ %50, %46 ]
  %53 = icmp eq i32 %35, %52
  br i1 %53, label %64, label %78

54:                                               ; preds = %4
  %55 = icmp eq i32 %10, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %58 = load i64, ptr %57, align 8, !tbaa !17
  %59 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %60 = load i64, ptr %59, align 8, !tbaa !17
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %145, label %62

62:                                               ; preds = %56
  %63 = icmp eq i64 %58, %60
  br i1 %63, label %72, label %120

64:                                               ; preds = %54, %51
  %65 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %66 = load i64, ptr %65, align 8, !tbaa !17
  %67 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %68 = load i64, ptr %67, align 8, !tbaa !17
  %69 = icmp ult i64 %66, %68
  br i1 %69, label %145, label %70

70:                                               ; preds = %64
  %71 = icmp eq i64 %66, %68
  br i1 %71, label %72, label %80

72:                                               ; preds = %70, %62
  %73 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %74 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %75 = load i64, ptr %74, align 8, !tbaa !17
  %76 = load i64, ptr %73, align 8, !tbaa !17
  %77 = icmp ult i64 %75, %76
  br i1 %77, label %145, label %80

78:                                               ; preds = %51
  %79 = icmp slt i32 %35, %52
  br i1 %79, label %145, label %81

80:                                               ; preds = %72, %70
  br i1 %17, label %118, label %81

81:                                               ; preds = %78, %80
  %82 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %83 = load i64, ptr %82, align 8, !tbaa !17
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %87 = load i64, ptr %86, align 8, !tbaa !17
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %85, %81
  %90 = and i64 %13, 2097152
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %94 = load i64, ptr %93, align 8, !tbaa !17
  %95 = icmp slt i64 %94, 0
  %96 = select i1 %95, i32 -1, i32 1
  br label %97

97:                                               ; preds = %92, %89, %85
  %98 = phi i32 [ 0, %85 ], [ 1, %89 ], [ %96, %92 ]
  %99 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %100 = load i64, ptr %99, align 8, !tbaa !17
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %104 = load i64, ptr %103, align 8, !tbaa !17
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %102, %97
  %107 = and i64 %7, 2097152
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %111 = load i64, ptr %110, align 8, !tbaa !17
  %112 = icmp slt i64 %111, 0
  %113 = select i1 %112, i32 -1, i32 1
  br label %114

114:                                              ; preds = %109, %106, %102
  %115 = phi i32 [ 0, %102 ], [ 1, %106 ], [ %113, %109 ]
  %116 = icmp slt i32 %98, %115
  %117 = icmp eq i32 %98, %115
  br i1 %117, label %128, label %142

118:                                              ; preds = %80
  %119 = icmp eq i32 %10, 0
  br i1 %119, label %120, label %128

120:                                              ; preds = %62, %118
  %121 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %122 = load i64, ptr %121, align 8, !tbaa !17
  %123 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %124 = load i64, ptr %123, align 8, !tbaa !17
  %125 = icmp slt i64 %122, %124
  br i1 %125, label %142, label %126

126:                                              ; preds = %120
  %127 = icmp eq i64 %122, %124
  br i1 %127, label %136, label %142

128:                                              ; preds = %118, %114
  %129 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %130 = load i64, ptr %129, align 8, !tbaa !17
  %131 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %132 = load i64, ptr %131, align 8, !tbaa !17
  %133 = icmp ult i64 %130, %132
  br i1 %133, label %142, label %134

134:                                              ; preds = %128
  %135 = icmp eq i64 %130, %132
  br i1 %135, label %136, label %142

136:                                              ; preds = %134, %126
  %137 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %138 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %139 = load i64, ptr %138, align 8, !tbaa !17
  %140 = load i64, ptr %137, align 8, !tbaa !17
  %141 = icmp ult i64 %139, %140
  br label %142

142:                                              ; preds = %2, %114, %120, %126, %128, %134, %136
  %143 = phi i1 [ %116, %114 ], [ true, %120 ], [ false, %126 ], [ true, %128 ], [ false, %134 ], [ %141, %136 ], [ false, %2 ]
  %144 = zext i1 %143 to i32
  br label %145

145:                                              ; preds = %72, %64, %56, %142, %78
  %146 = phi i32 [ -1, %78 ], [ %144, %142 ], [ -1, %56 ], [ -1, %64 ], [ -1, %72 ]
  ret i32 %146
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_int_cst_msb(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %4 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 14
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call i32 @vector_type_mode(ptr noundef nonnull %5) #29
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 6
  %13 = load i32, ptr %12, align 4
  %14 = lshr i32 %13, 16
  %15 = and i32 %14, 255
  br label %16

16:                                               ; preds = %11, %9
  %17 = phi i32 [ %10, %9 ], [ %15, %11 ]
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %18
  %20 = load i8, ptr %19, align 1, !tbaa !17
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 3
  %23 = add nsw i32 %22, -1
  %24 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %27 = load i64, ptr %26, align 8, !tbaa !17
  %28 = sext i32 %23 to i64
  call void @rshift_double(i64 noundef %25, i64 noundef %27, i64 noundef %28, i32 noundef 128, ptr noundef nonnull %3, ptr noundef nonnull %2, i32 noundef 0) #29
  %29 = load i64, ptr %3, align 8, !tbaa !72
  %30 = trunc i64 %29 to i32
  %31 = and i32 %30, 1
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  ret i32 %31
}

declare void @rshift_double(i64 noundef, i64 noundef, i64 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_int_cst_min_precision(ptr noundef %0, i8 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %3, align 8, !tbaa !17
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !17
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 2097152
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !17
  %19 = icmp slt i64 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = tail call ptr @fold_build1_stat_loc(i32 noundef 0, i32 noundef 90, ptr noundef nonnull %12, ptr noundef nonnull %0) #29
  br label %22

22:                                               ; preds = %16, %10, %6, %20
  %23 = phi ptr [ %21, %20 ], [ %0, %6 ], [ %0, %10 ], [ %0, %16 ]
  %24 = tail call i32 @integer_zerop(ptr noundef %23), !range !37
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = tail call i32 @tree_floor_log2(ptr noundef %23)
  %28 = add nsw i32 %27, 1
  br label %29

29:                                               ; preds = %22, %26
  %30 = phi i32 [ %28, %26 ], [ 1, %22 ]
  %31 = icmp eq i8 %1, 0
  %32 = zext i1 %31 to i32
  %33 = add nsw i32 %30, %32
  ret i32 %33
}

declare zeroext i8 @real_identical(ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @fixed_identical(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @compare_tree_int(ptr nocapture noundef readonly %0, i64 noundef %1) local_unnamed_addr #14 {
  %3 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %3, align 8, !tbaa !17
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !17
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 2097152
  %15 = icmp eq i64 %14, 0
  %16 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !17
  %18 = icmp slt i64 %17, 0
  %19 = select i1 %15, i1 %18, i1 false
  br i1 %19, label %27, label %20

20:                                               ; preds = %10
  %21 = icmp eq i64 %17, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %6, %20
  %23 = icmp eq i64 %4, %1
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %4, %1
  %26 = select i1 %25, i32 -1, i32 1
  br label %27

27:                                               ; preds = %10, %24, %22, %20
  %28 = phi i32 [ 1, %20 ], [ 0, %22 ], [ %26, %24 ], [ -1, %10 ]
  ret i32 %28
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local zeroext i8 @associative_tree_code(i32 noundef %0) local_unnamed_addr #22 {
  switch i32 %0, label %2 [
    i32 87, label %3
    i32 89, label %3
    i32 88, label %3
    i32 63, label %3
    i32 65, label %3
    i32 80, label %3
    i32 81, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i8 [ 0, %2 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ]
  ret i8 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local zeroext i8 @commutative_tree_code(i32 noundef %0) local_unnamed_addr #22 {
  switch i32 %0, label %2 [
    i32 63, label %3
    i32 65, label %3
    i32 80, label %3
    i32 81, label %3
    i32 87, label %3
    i32 88, label %3
    i32 89, label %3
    i32 102, label %3
    i32 101, label %3
    i32 103, label %3
    i32 104, label %3
    i32 109, label %3
    i32 110, label %3
    i32 93, label %3
    i32 95, label %3
    i32 94, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i8 [ 0, %2 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ]
  ret i8 %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @iterative_hash_expr(ptr noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #29
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %41

5:                                                ; preds = %2
  %6 = sub i32 -1640531527, %1
  %7 = lshr i32 %1, 13
  %8 = xor i32 %6, %7
  %9 = add i32 %8, %1
  %10 = sub i32 0, %9
  %11 = shl i32 %8, 8
  %12 = xor i32 %11, %10
  %13 = add i32 %8, %12
  %14 = sub i32 %1, %13
  %15 = lshr i32 %12, 13
  %16 = xor i32 %14, %15
  %17 = add i32 %12, %16
  %18 = sub i32 %8, %17
  %19 = lshr i32 %16, 12
  %20 = xor i32 %18, %19
  %21 = add i32 %16, %20
  %22 = sub i32 %12, %21
  %23 = shl i32 %20, 16
  %24 = xor i32 %22, %23
  %25 = add i32 %20, %24
  %26 = sub i32 %16, %25
  %27 = lshr i32 %24, 5
  %28 = xor i32 %26, %27
  %29 = add i32 %24, %28
  %30 = sub i32 %20, %29
  %31 = lshr i32 %28, 3
  %32 = xor i32 %30, %31
  %33 = add i32 %28, %32
  %34 = sub i32 %24, %33
  %35 = shl i32 %32, 10
  %36 = xor i32 %34, %35
  %37 = add i32 %32, %36
  %38 = sub i32 %28, %37
  %39 = lshr i32 %36, 15
  %40 = xor i32 %38, %39
  br label %414

41:                                               ; preds = %2
  %42 = load i64, ptr %0, align 8
  %43 = trunc i64 %42 to i32
  %44 = and i32 %43, 65535
  store i32 %44, ptr %3, align 4, !tbaa !17
  %45 = trunc i64 %42 to i16
  switch i16 %45, label %309 [
    i16 23, label %48
    i16 24, label %131
    i16 25, label %171
    i16 28, label %211
    i16 26, label %217
    i16 27, label %224
    i16 141, label %228
    i16 2, label %266
    i16 51, label %46
    i16 29, label %294
  ]

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.tree_constructor, ptr %0, i64 0, i32 1
  br label %275

48:                                               ; preds = %41
  %49 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %50 = load i64, ptr %49, align 8, !tbaa !17
  %51 = trunc i64 %50 to i32
  %52 = lshr i64 %50, 32
  %53 = trunc i64 %52 to i32
  %54 = add i32 %53, %1
  %55 = sub i32 %51, %54
  %56 = lshr i32 %1, 13
  %57 = xor i32 %55, %56
  %58 = add i32 %57, %1
  %59 = sub i32 %53, %58
  %60 = shl i32 %57, 8
  %61 = xor i32 %59, %60
  %62 = add i32 %57, %61
  %63 = sub i32 %1, %62
  %64 = lshr i32 %61, 13
  %65 = xor i32 %63, %64
  %66 = add i32 %61, %65
  %67 = sub i32 %57, %66
  %68 = lshr i32 %65, 12
  %69 = xor i32 %67, %68
  %70 = add i32 %65, %69
  %71 = sub i32 %61, %70
  %72 = shl i32 %69, 16
  %73 = xor i32 %71, %72
  %74 = add i32 %69, %73
  %75 = sub i32 %65, %74
  %76 = lshr i32 %73, 5
  %77 = xor i32 %75, %76
  %78 = add i32 %73, %77
  %79 = sub i32 %69, %78
  %80 = lshr i32 %77, 3
  %81 = xor i32 %79, %80
  %82 = add i32 %77, %81
  %83 = sub i32 %73, %82
  %84 = shl i32 %81, 10
  %85 = xor i32 %83, %84
  %86 = add i32 %81, %85
  %87 = sub i32 %77, %86
  %88 = lshr i32 %85, 15
  %89 = xor i32 %87, %88
  %90 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %91 = load i64, ptr %90, align 8, !tbaa !17
  %92 = trunc i64 %91 to i32
  %93 = lshr i64 %91, 32
  %94 = trunc i64 %93 to i32
  %95 = add i32 %89, %94
  %96 = sub i32 %92, %95
  %97 = lshr i32 %89, 13
  %98 = xor i32 %96, %97
  %99 = add i32 %89, %98
  %100 = sub i32 %94, %99
  %101 = shl i32 %98, 8
  %102 = xor i32 %100, %101
  %103 = add i32 %98, %102
  %104 = sub i32 %89, %103
  %105 = lshr i32 %102, 13
  %106 = xor i32 %104, %105
  %107 = add i32 %102, %106
  %108 = sub i32 %98, %107
  %109 = lshr i32 %106, 12
  %110 = xor i32 %108, %109
  %111 = add i32 %106, %110
  %112 = sub i32 %102, %111
  %113 = shl i32 %110, 16
  %114 = xor i32 %112, %113
  %115 = add i32 %110, %114
  %116 = sub i32 %106, %115
  %117 = lshr i32 %114, 5
  %118 = xor i32 %116, %117
  %119 = add i32 %114, %118
  %120 = sub i32 %110, %119
  %121 = lshr i32 %118, 3
  %122 = xor i32 %120, %121
  %123 = add i32 %118, %122
  %124 = sub i32 %114, %123
  %125 = shl i32 %122, 10
  %126 = xor i32 %124, %125
  %127 = add i32 %122, %126
  %128 = sub i32 %118, %127
  %129 = lshr i32 %126, 15
  %130 = xor i32 %128, %129
  br label %414

131:                                              ; preds = %41
  %132 = getelementptr inbounds %struct.tree_real_cst, ptr %0, i64 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  %134 = tail call i32 @real_hash(ptr noundef %133) #29
  %135 = add i32 %134, %1
  %136 = sub i32 -1640531527, %135
  %137 = lshr i32 %1, 13
  %138 = xor i32 %136, %137
  %139 = add i32 %138, %1
  %140 = sub i32 %134, %139
  %141 = shl i32 %138, 8
  %142 = xor i32 %140, %141
  %143 = add i32 %138, %142
  %144 = sub i32 %1, %143
  %145 = lshr i32 %142, 13
  %146 = xor i32 %144, %145
  %147 = add i32 %142, %146
  %148 = sub i32 %138, %147
  %149 = lshr i32 %146, 12
  %150 = xor i32 %148, %149
  %151 = add i32 %146, %150
  %152 = sub i32 %142, %151
  %153 = shl i32 %150, 16
  %154 = xor i32 %152, %153
  %155 = add i32 %150, %154
  %156 = sub i32 %146, %155
  %157 = lshr i32 %154, 5
  %158 = xor i32 %156, %157
  %159 = add i32 %154, %158
  %160 = sub i32 %150, %159
  %161 = lshr i32 %158, 3
  %162 = xor i32 %160, %161
  %163 = add i32 %158, %162
  %164 = sub i32 %154, %163
  %165 = shl i32 %162, 10
  %166 = xor i32 %164, %165
  %167 = add i32 %162, %166
  %168 = sub i32 %158, %167
  %169 = lshr i32 %166, 15
  %170 = xor i32 %168, %169
  br label %414

171:                                              ; preds = %41
  %172 = getelementptr inbounds %struct.tree_fixed_cst, ptr %0, i64 0, i32 1
  %173 = load ptr, ptr %172, align 8, !tbaa !17
  %174 = tail call i32 @fixed_hash(ptr noundef %173) #29
  %175 = add i32 %174, %1
  %176 = sub i32 -1640531527, %175
  %177 = lshr i32 %1, 13
  %178 = xor i32 %176, %177
  %179 = add i32 %178, %1
  %180 = sub i32 %174, %179
  %181 = shl i32 %178, 8
  %182 = xor i32 %180, %181
  %183 = add i32 %178, %182
  %184 = sub i32 %1, %183
  %185 = lshr i32 %182, 13
  %186 = xor i32 %184, %185
  %187 = add i32 %182, %186
  %188 = sub i32 %178, %187
  %189 = lshr i32 %186, 12
  %190 = xor i32 %188, %189
  %191 = add i32 %186, %190
  %192 = sub i32 %182, %191
  %193 = shl i32 %190, 16
  %194 = xor i32 %192, %193
  %195 = add i32 %190, %194
  %196 = sub i32 %186, %195
  %197 = lshr i32 %194, 5
  %198 = xor i32 %196, %197
  %199 = add i32 %194, %198
  %200 = sub i32 %190, %199
  %201 = lshr i32 %198, 3
  %202 = xor i32 %200, %201
  %203 = add i32 %198, %202
  %204 = sub i32 %194, %203
  %205 = shl i32 %202, 10
  %206 = xor i32 %204, %205
  %207 = add i32 %202, %206
  %208 = sub i32 %198, %207
  %209 = lshr i32 %206, 15
  %210 = xor i32 %208, %209
  br label %414

211:                                              ; preds = %41
  %212 = getelementptr inbounds %struct.tree_string, ptr %0, i64 0, i32 2
  %213 = getelementptr inbounds %struct.tree_string, ptr %0, i64 0, i32 1
  %214 = load i32, ptr %213, align 8, !tbaa !17
  %215 = sext i32 %214 to i64
  %216 = tail call i32 @iterative_hash(ptr noundef nonnull %212, i64 noundef %215, i32 noundef %1) #29
  br label %414

217:                                              ; preds = %41
  %218 = getelementptr inbounds %struct.tree_complex, ptr %0, i64 0, i32 1
  %219 = load ptr, ptr %218, align 8, !tbaa !17
  %220 = tail call i32 @iterative_hash_expr(ptr noundef %219, i32 noundef %1)
  %221 = getelementptr inbounds %struct.tree_complex, ptr %0, i64 0, i32 2
  %222 = load ptr, ptr %221, align 8, !tbaa !17
  %223 = tail call i32 @iterative_hash_expr(ptr noundef %222, i32 noundef %220)
  br label %414

224:                                              ; preds = %41
  %225 = getelementptr inbounds %struct.tree_vector, ptr %0, i64 0, i32 1
  %226 = load ptr, ptr %225, align 8, !tbaa !17
  %227 = tail call i32 @iterative_hash_expr(ptr noundef %226, i32 noundef %1)
  br label %414

228:                                              ; preds = %41
  %229 = getelementptr inbounds %struct.tree_ssa_name, ptr %0, i64 0, i32 3
  %230 = load i32, ptr %229, align 8, !tbaa !17
  %231 = sub i32 %230, %1
  %232 = lshr i32 %1, 13
  %233 = xor i32 %231, %232
  %234 = add i32 %233, %1
  %235 = sub i32 0, %234
  %236 = shl i32 %233, 8
  %237 = xor i32 %236, %235
  %238 = add i32 %233, %237
  %239 = sub i32 %1, %238
  %240 = lshr i32 %237, 13
  %241 = xor i32 %239, %240
  %242 = add i32 %237, %241
  %243 = sub i32 %233, %242
  %244 = lshr i32 %241, 12
  %245 = xor i32 %243, %244
  %246 = add i32 %241, %245
  %247 = sub i32 %237, %246
  %248 = shl i32 %245, 16
  %249 = xor i32 %247, %248
  %250 = add i32 %245, %249
  %251 = sub i32 %241, %250
  %252 = lshr i32 %249, 5
  %253 = xor i32 %251, %252
  %254 = add i32 %249, %253
  %255 = sub i32 %245, %254
  %256 = lshr i32 %253, 3
  %257 = xor i32 %255, %256
  %258 = add i32 %253, %257
  %259 = sub i32 %249, %258
  %260 = shl i32 %257, 10
  %261 = xor i32 %259, %260
  %262 = add i32 %257, %261
  %263 = sub i32 %253, %262
  %264 = lshr i32 %261, 15
  %265 = xor i32 %263, %264
  br label %414

266:                                              ; preds = %41, %266
  %267 = phi ptr [ %273, %266 ], [ %0, %41 ]
  %268 = phi i32 [ %271, %266 ], [ %1, %41 ]
  %269 = getelementptr inbounds %struct.tree_list, ptr %267, i64 0, i32 2
  %270 = load ptr, ptr %269, align 8, !tbaa !17
  %271 = tail call i32 @iterative_hash_expr(ptr noundef %270, i32 noundef %268)
  %272 = getelementptr inbounds %struct.tree_common, ptr %267, i64 0, i32 1
  %273 = load ptr, ptr %272, align 8, !tbaa !17
  %274 = icmp eq ptr %273, null
  br i1 %274, label %414, label %266, !llvm.loop !239

275:                                              ; preds = %46, %286
  %276 = phi i32 [ %292, %286 ], [ %1, %46 ]
  %277 = phi i64 [ %293, %286 ], [ 0, %46 ]
  %278 = load ptr, ptr %47, align 8, !tbaa !17
  %279 = icmp eq ptr %278, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %275
  %281 = load i32, ptr %278, align 8, !tbaa !74
  br label %282

282:                                              ; preds = %275, %280
  %283 = phi i32 [ %281, %280 ], [ 0, %275 ]
  %284 = zext i32 %283 to i64
  %285 = icmp ult i64 %277, %284
  br i1 %285, label %286, label %414

286:                                              ; preds = %282
  %287 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %278, i64 0, i32 2, i64 %277
  %288 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %278, i64 0, i32 2, i64 %277, i32 1
  %289 = load ptr, ptr %288, align 8, !tbaa !76
  %290 = load ptr, ptr %287, align 8, !tbaa !80
  %291 = tail call i32 @iterative_hash_expr(ptr noundef %290, i32 noundef %276)
  %292 = tail call i32 @iterative_hash_expr(ptr noundef %289, i32 noundef %291)
  %293 = add nuw nsw i64 %277, 1
  br label %275, !llvm.loop !240

294:                                              ; preds = %41
  %295 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %296 = load i32, ptr %295, align 8
  %297 = and i32 %296, 6144
  %298 = icmp eq i32 %297, 6144
  br i1 %298, label %299, label %309

299:                                              ; preds = %294
  %300 = and i32 %296, 2047
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds [721 x ptr], ptr @built_in_decls, i64 0, i64 %301
  %303 = load ptr, ptr %302, align 8, !tbaa !6
  %304 = icmp eq ptr %303, null
  br i1 %304, label %309, label %305

305:                                              ; preds = %299
  %306 = load i64, ptr %303, align 8
  %307 = trunc i64 %306 to i32
  %308 = and i32 %307, 65535
  store i32 %308, ptr %3, align 4, !tbaa !17
  br label %309

309:                                              ; preds = %294, %299, %305, %41
  %310 = phi i32 [ %44, %41 ], [ %308, %305 ], [ %44, %299 ], [ %44, %294 ]
  %311 = phi ptr [ %0, %41 ], [ %303, %305 ], [ %0, %299 ], [ %0, %294 ]
  %312 = zext i32 %310 to i64
  %313 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %312
  %314 = load i32, ptr %313, align 4, !tbaa !17
  %315 = shl i32 %314, 24
  %316 = icmp eq i32 %315, 50331648
  br i1 %316, label %317, label %355

317:                                              ; preds = %309
  %318 = getelementptr inbounds %struct.tree_decl_minimal, ptr %311, i64 0, i32 2
  %319 = load i32, ptr %318, align 4, !tbaa !17
  %320 = sub i32 %319, %1
  %321 = lshr i32 %1, 13
  %322 = xor i32 %320, %321
  %323 = add i32 %322, %1
  %324 = sub i32 0, %323
  %325 = shl i32 %322, 8
  %326 = xor i32 %325, %324
  %327 = add i32 %322, %326
  %328 = sub i32 %1, %327
  %329 = lshr i32 %326, 13
  %330 = xor i32 %328, %329
  %331 = add i32 %326, %330
  %332 = sub i32 %322, %331
  %333 = lshr i32 %330, 12
  %334 = xor i32 %332, %333
  %335 = add i32 %330, %334
  %336 = sub i32 %326, %335
  %337 = shl i32 %334, 16
  %338 = xor i32 %336, %337
  %339 = add i32 %334, %338
  %340 = sub i32 %330, %339
  %341 = lshr i32 %338, 5
  %342 = xor i32 %340, %341
  %343 = add i32 %338, %342
  %344 = sub i32 %334, %343
  %345 = lshr i32 %342, 3
  %346 = xor i32 %344, %345
  %347 = add i32 %342, %346
  %348 = sub i32 %338, %347
  %349 = shl i32 %346, 10
  %350 = xor i32 %348, %349
  %351 = add i32 %346, %350
  %352 = sub i32 %342, %351
  %353 = lshr i32 %350, 15
  %354 = xor i32 %352, %353
  br label %414

355:                                              ; preds = %309
  %356 = add i32 %315, -50331649
  %357 = icmp ult i32 %356, 134217727
  br i1 %357, label %359, label %358

358:                                              ; preds = %355
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 6628, ptr noundef nonnull @.str.219) #29
  br label %359

359:                                              ; preds = %355, %358
  %360 = call i32 @iterative_hash(ptr noundef nonnull %3, i64 noundef 4, i32 noundef %1) #29
  %361 = load i32, ptr %3, align 4
  switch i32 %361, label %384 [
    i32 117, label %362
    i32 116, label %362
    i32 113, label %362
    i32 63, label %373
    i32 65, label %373
    i32 80, label %373
    i32 81, label %373
    i32 87, label %373
    i32 88, label %373
    i32 89, label %373
    i32 102, label %373
    i32 101, label %373
    i32 103, label %373
    i32 104, label %373
    i32 109, label %373
    i32 110, label %373
    i32 93, label %373
    i32 95, label %373
    i32 94, label %373
  ]

362:                                              ; preds = %359, %359, %359
  %363 = getelementptr inbounds %struct.tree_common, ptr %311, i64 0, i32 2
  %364 = load ptr, ptr %363, align 8, !tbaa !17
  %365 = load i64, ptr %364, align 8
  %366 = trunc i64 %365 to i32
  %367 = lshr i32 %366, 21
  %368 = and i32 %367, 1
  %369 = add i32 %368, %360
  %370 = getelementptr inbounds %struct.tree_exp, ptr %311, i64 0, i32 3
  %371 = load ptr, ptr %370, align 8, !tbaa !17
  %372 = call i32 @iterative_hash_expr(ptr noundef %371, i32 noundef %369)
  br label %414

373:                                              ; preds = %359, %359, %359, %359, %359, %359, %359, %359, %359, %359, %359, %359, %359, %359, %359, %359
  %374 = getelementptr inbounds %struct.tree_exp, ptr %311, i64 0, i32 3
  %375 = load ptr, ptr %374, align 8, !tbaa !17
  %376 = call i32 @iterative_hash_expr(ptr noundef %375, i32 noundef 0)
  %377 = getelementptr inbounds %struct.tree_exp, ptr %311, i64 1
  %378 = load ptr, ptr %377, align 8, !tbaa !17
  %379 = call i32 @iterative_hash_expr(ptr noundef %378, i32 noundef 0)
  %380 = call i32 @llvm.umin.i32(i32 %376, i32 %379)
  %381 = call i32 @llvm.umax.i32(i32 %376, i32 %379)
  %382 = call i32 @iterative_hash_hashval_t(i32 noundef %380, i32 noundef %360)
  %383 = call i32 @iterative_hash_hashval_t(i32 noundef %381, i32 noundef %382)
  br label %414

384:                                              ; preds = %359
  %385 = load i64, ptr %311, align 8
  %386 = and i64 %385, 65535
  %387 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %386
  %388 = load i32, ptr %387, align 4, !tbaa !17
  %389 = icmp eq i32 %388, 9
  br i1 %389, label %390, label %396

390:                                              ; preds = %384
  %391 = getelementptr inbounds %struct.tree_exp, ptr %311, i64 0, i32 3
  %392 = load ptr, ptr %391, align 8, !tbaa !17
  %393 = getelementptr inbounds %struct.tree_int_cst, ptr %392, i64 0, i32 1
  %394 = load i64, ptr %393, align 8, !tbaa !17
  %395 = trunc i64 %394 to i32
  br label %400

396:                                              ; preds = %384
  %397 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %386
  %398 = load i8, ptr %397, align 1, !tbaa !17
  %399 = zext i8 %398 to i32
  br label %400

400:                                              ; preds = %390, %396
  %401 = phi i32 [ %395, %390 ], [ %399, %396 ]
  %402 = icmp sgt i32 %401, 0
  br i1 %402, label %403, label %414

403:                                              ; preds = %400
  %404 = zext i32 %401 to i64
  br label %405

405:                                              ; preds = %403, %405
  %406 = phi i64 [ %404, %403 ], [ %408, %405 ]
  %407 = phi i32 [ %360, %403 ], [ %412, %405 ]
  %408 = add nsw i64 %406, -1
  %409 = and i64 %408, 4294967295
  %410 = getelementptr inbounds %struct.tree_exp, ptr %311, i64 0, i32 3, i64 %409
  %411 = load ptr, ptr %410, align 8, !tbaa !17
  %412 = call i32 @iterative_hash_expr(ptr noundef %411, i32 noundef %407)
  %413 = icmp ugt i64 %406, 1
  br i1 %413, label %405, label %414, !llvm.loop !241

414:                                              ; preds = %282, %266, %405, %400, %317, %373, %362, %228, %224, %217, %211, %171, %131, %48, %5
  %415 = phi i32 [ %40, %5 ], [ %265, %228 ], [ %227, %224 ], [ %223, %217 ], [ %216, %211 ], [ %210, %171 ], [ %170, %131 ], [ %130, %48 ], [ %354, %317 ], [ %372, %362 ], [ %383, %373 ], [ %360, %400 ], [ %412, %405 ], [ %271, %266 ], [ %276, %282 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #29
  ret i32 %415
}

declare i32 @real_hash(ptr noundef) local_unnamed_addr #3

declare i32 @fixed_hash(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @iterative_hash_exprs_commutative(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = tail call i32 @iterative_hash_expr(ptr noundef %0, i32 noundef 0)
  %5 = tail call i32 @iterative_hash_expr(ptr noundef %1, i32 noundef 0)
  %6 = tail call i32 @llvm.umin.i32(i32 %4, i32 %5)
  %7 = tail call i32 @llvm.umax.i32(i32 %4, i32 %5)
  %8 = add i32 %6, %2
  %9 = sub i32 -1640531527, %8
  %10 = lshr i32 %2, 13
  %11 = xor i32 %9, %10
  %12 = add i32 %11, %2
  %13 = sub i32 %6, %12
  %14 = shl i32 %11, 8
  %15 = xor i32 %13, %14
  %16 = add i32 %11, %15
  %17 = sub i32 %2, %16
  %18 = lshr i32 %15, 13
  %19 = xor i32 %17, %18
  %20 = add i32 %15, %19
  %21 = sub i32 %11, %20
  %22 = lshr i32 %19, 12
  %23 = xor i32 %21, %22
  %24 = add i32 %19, %23
  %25 = sub i32 %15, %24
  %26 = shl i32 %23, 16
  %27 = xor i32 %25, %26
  %28 = add i32 %23, %27
  %29 = sub i32 %19, %28
  %30 = lshr i32 %27, 5
  %31 = xor i32 %29, %30
  %32 = add i32 %27, %31
  %33 = sub i32 %23, %32
  %34 = lshr i32 %31, 3
  %35 = xor i32 %33, %34
  %36 = add i32 %31, %35
  %37 = sub i32 %27, %36
  %38 = shl i32 %35, 10
  %39 = xor i32 %37, %38
  %40 = add i32 %35, %39
  %41 = sub i32 %31, %40
  %42 = lshr i32 %39, 15
  %43 = xor i32 %41, %42
  %44 = add i32 %7, %43
  %45 = sub i32 -1640531527, %44
  %46 = lshr i32 %43, 13
  %47 = xor i32 %45, %46
  %48 = add i32 %43, %47
  %49 = sub i32 %7, %48
  %50 = shl i32 %47, 8
  %51 = xor i32 %49, %50
  %52 = add i32 %47, %51
  %53 = sub i32 %43, %52
  %54 = lshr i32 %51, 13
  %55 = xor i32 %53, %54
  %56 = add i32 %51, %55
  %57 = sub i32 %47, %56
  %58 = lshr i32 %55, 12
  %59 = xor i32 %57, %58
  %60 = add i32 %55, %59
  %61 = sub i32 %51, %60
  %62 = shl i32 %59, 16
  %63 = xor i32 %61, %62
  %64 = add i32 %59, %63
  %65 = sub i32 %55, %64
  %66 = lshr i32 %63, 5
  %67 = xor i32 %65, %66
  %68 = add i32 %63, %67
  %69 = sub i32 %59, %68
  %70 = lshr i32 %67, 3
  %71 = xor i32 %69, %70
  %72 = add i32 %67, %71
  %73 = sub i32 %63, %72
  %74 = shl i32 %71, 10
  %75 = xor i32 %73, %74
  %76 = add i32 %71, %75
  %77 = sub i32 %67, %76
  %78 = lshr i32 %75, 15
  %79 = xor i32 %77, %78
  ret i32 %79
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_pointer_type_for_mode(ptr noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #9 {
  %4 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5 = icmp eq ptr %4, %0
  br i1 %5, label %93, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6, %23
  %11 = phi ptr [ %25, %23 ], [ %8, %6 ]
  %12 = getelementptr inbounds %struct.tree_list, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %18 = load ptr, ptr %12, align 8, !tbaa !17
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi ptr [ %13, %10 ], [ %18, %17 ]
  %21 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef nonnull @.str.224, i32 noundef 9, ptr noundef %20), !range !37
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %10, !llvm.loop !229

27:                                               ; preds = %19, %23, %6
  %28 = phi ptr [ null, %6 ], [ %11, %19 ], [ null, %23 ]
  %29 = icmp eq ptr %28, null
  %30 = select i1 %29, i8 %2, i8 1
  %31 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %65, label %34

34:                                               ; preds = %27
  %35 = load i64, ptr %32, align 8
  %36 = and i64 %35, 65535
  %37 = icmp eq i64 %36, 10
  br i1 %37, label %38, label %93

38:                                               ; preds = %34
  %39 = zext i8 %30 to i32
  br label %40

40:                                               ; preds = %38, %61
  %41 = phi ptr [ %32, %38 ], [ %63, %61 ]
  %42 = load i64, ptr %41, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 14
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = tail call i32 @vector_type_mode(ptr noundef nonnull %41) #29
  br label %52

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.tree_type, ptr %41, i64 0, i32 6
  %49 = load i32, ptr %48, align 4
  %50 = lshr i32 %49, 16
  %51 = and i32 %50, 255
  br label %52

52:                                               ; preds = %47, %45
  %53 = phi i32 [ %46, %45 ], [ %51, %47 ]
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %55, label %61

55:                                               ; preds = %52
  %56 = load i64, ptr %41, align 8
  %57 = trunc i64 %56 to i32
  %58 = lshr i32 %57, 26
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, %39
  br i1 %60, label %93, label %61

61:                                               ; preds = %52, %55
  %62 = getelementptr inbounds %struct.tree_type, ptr %41, i64 0, i32 13
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %40, !llvm.loop !242

65:                                               ; preds = %61, %27
  %66 = tail call ptr @make_node_stat(i32 noundef 10)
  %67 = getelementptr inbounds %struct.tree_common, ptr %66, i64 0, i32 2
  store ptr %0, ptr %67, align 8, !tbaa !17
  %68 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 6
  %69 = load i32, ptr %68, align 4
  %70 = shl i32 %1, 16
  %71 = and i32 %70, 16711680
  %72 = and i32 %69, -16711681
  %73 = or i32 %72, %71
  store i32 %73, ptr %68, align 4
  %74 = load i64, ptr %66, align 8
  %75 = and i8 %30, 1
  %76 = zext i8 %75 to i64
  %77 = shl nuw nsw i64 %76, 26
  %78 = and i64 %74, -67108865
  %79 = or i64 %78, %77
  store i64 %79, ptr %66, align 8
  %80 = load ptr, ptr %31, align 8, !tbaa !17
  %81 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 13
  store ptr %80, ptr %81, align 8, !tbaa !17
  store ptr %66, ptr %31, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = icmp eq ptr %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %65
  %86 = icmp eq ptr %83, %0
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = tail call ptr @build_pointer_type_for_mode(ptr noundef nonnull %83, i32 noundef %1, i8 noundef zeroext %30)
  br label %89

89:                                               ; preds = %65, %87
  %90 = phi ptr [ %88, %87 ], [ null, %65 ]
  %91 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 19
  store ptr %90, ptr %91, align 8, !tbaa !17
  br label %92

92:                                               ; preds = %89, %85
  tail call void @layout_type(ptr noundef nonnull %66) #29
  br label %93

93:                                               ; preds = %55, %34, %3, %92
  %94 = phi ptr [ %66, %92 ], [ %0, %3 ], [ %32, %34 ], [ %41, %55 ]
  ret ptr %94
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_pointer_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = load i64, ptr %0, align 8
  %6 = lshr i64 %5, 56
  %7 = trunc i64 %6 to i8
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi i8 [ %7, %4 ], [ 0, %1 ]
  %10 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %11 = tail call i32 %10(i8 noundef zeroext %9) #29
  %12 = tail call ptr @build_pointer_type_for_mode(ptr noundef %0, i32 noundef %11, i8 noundef zeroext 0)
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_reference_type_for_mode(ptr noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #9 {
  %4 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5 = icmp eq ptr %4, %0
  br i1 %5, label %93, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6, %23
  %11 = phi ptr [ %25, %23 ], [ %8, %6 ]
  %12 = getelementptr inbounds %struct.tree_list, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %18 = load ptr, ptr %12, align 8, !tbaa !17
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi ptr [ %13, %10 ], [ %18, %17 ]
  %21 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef nonnull @.str.224, i32 noundef 9, ptr noundef %20), !range !37
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %10, !llvm.loop !229

27:                                               ; preds = %19, %23, %6
  %28 = phi ptr [ null, %6 ], [ %11, %19 ], [ null, %23 ]
  %29 = icmp eq ptr %28, null
  %30 = select i1 %29, i8 %2, i8 1
  %31 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 10
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %65, label %34

34:                                               ; preds = %27
  %35 = load i64, ptr %32, align 8
  %36 = and i64 %35, 65535
  %37 = icmp eq i64 %36, 12
  br i1 %37, label %38, label %93

38:                                               ; preds = %34
  %39 = zext i8 %30 to i32
  br label %40

40:                                               ; preds = %38, %61
  %41 = phi ptr [ %32, %38 ], [ %63, %61 ]
  %42 = load i64, ptr %41, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 14
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = tail call i32 @vector_type_mode(ptr noundef nonnull %41) #29
  br label %52

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.tree_type, ptr %41, i64 0, i32 6
  %49 = load i32, ptr %48, align 4
  %50 = lshr i32 %49, 16
  %51 = and i32 %50, 255
  br label %52

52:                                               ; preds = %47, %45
  %53 = phi i32 [ %46, %45 ], [ %51, %47 ]
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %55, label %61

55:                                               ; preds = %52
  %56 = load i64, ptr %41, align 8
  %57 = trunc i64 %56 to i32
  %58 = lshr i32 %57, 26
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, %39
  br i1 %60, label %93, label %61

61:                                               ; preds = %52, %55
  %62 = getelementptr inbounds %struct.tree_type, ptr %41, i64 0, i32 13
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %40, !llvm.loop !244

65:                                               ; preds = %61, %27
  %66 = tail call ptr @make_node_stat(i32 noundef 12)
  %67 = getelementptr inbounds %struct.tree_common, ptr %66, i64 0, i32 2
  store ptr %0, ptr %67, align 8, !tbaa !17
  %68 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 6
  %69 = load i32, ptr %68, align 4
  %70 = shl i32 %1, 16
  %71 = and i32 %70, 16711680
  %72 = and i32 %69, -16711681
  %73 = or i32 %72, %71
  store i32 %73, ptr %68, align 4
  %74 = load i64, ptr %66, align 8
  %75 = and i8 %30, 1
  %76 = zext i8 %75 to i64
  %77 = shl nuw nsw i64 %76, 26
  %78 = and i64 %74, -67108865
  %79 = or i64 %78, %77
  store i64 %79, ptr %66, align 8
  %80 = load ptr, ptr %31, align 8, !tbaa !17
  %81 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 13
  store ptr %80, ptr %81, align 8, !tbaa !17
  store ptr %66, ptr %31, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = icmp eq ptr %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %65
  %86 = icmp eq ptr %83, %0
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = tail call ptr @build_reference_type_for_mode(ptr noundef nonnull %83, i32 noundef %1, i8 noundef zeroext %30)
  br label %89

89:                                               ; preds = %65, %87
  %90 = phi ptr [ %88, %87 ], [ null, %65 ]
  %91 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 19
  store ptr %90, ptr %91, align 8, !tbaa !17
  br label %92

92:                                               ; preds = %89, %85
  tail call void @layout_type(ptr noundef nonnull %66) #29
  br label %93

93:                                               ; preds = %55, %34, %3, %92
  %94 = phi ptr [ %66, %92 ], [ %0, %3 ], [ %32, %34 ], [ %41, %55 ]
  ret ptr %94
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_reference_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = load i64, ptr %0, align 8
  %6 = lshr i64 %5, 56
  %7 = trunc i64 %6 to i8
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi i8 [ %7, %4 ], [ 0, %1 ]
  %10 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %11 = tail call i32 %10(i8 noundef zeroext %9) #29
  %12 = tail call ptr @build_reference_type_for_mode(ptr noundef %0, i32 noundef %11, i8 noundef zeroext 0)
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_type_no_quals(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %50 [
    i16 10, label %4
    i16 12, label %27
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = tail call ptr @build_type_no_quals(ptr noundef %6)
  %8 = load i64, ptr %0, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 14
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29
  %13 = load i64, ptr %0, align 8
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %16 = load i32, ptr %15, align 4
  %17 = lshr i32 %16, 16
  %18 = and i32 %17, 255
  br label %19

19:                                               ; preds = %14, %11
  %20 = phi i64 [ %13, %11 ], [ %8, %14 ]
  %21 = phi i32 [ %12, %11 ], [ %18, %14 ]
  %22 = trunc i64 %20 to i32
  %23 = lshr i32 %22, 26
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = tail call ptr @build_pointer_type_for_mode(ptr noundef %7, i32 noundef %21, i8 noundef zeroext %25)
  br label %53

27:                                               ; preds = %1
  %28 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = tail call ptr @build_type_no_quals(ptr noundef %29)
  %31 = load i64, ptr %0, align 8
  %32 = and i64 %31, 65535
  %33 = icmp eq i64 %32, 14
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29
  %36 = load i64, ptr %0, align 8
  br label %42

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %39 = load i32, ptr %38, align 4
  %40 = lshr i32 %39, 16
  %41 = and i32 %40, 255
  br label %42

42:                                               ; preds = %37, %34
  %43 = phi i64 [ %36, %34 ], [ %31, %37 ]
  %44 = phi i32 [ %35, %34 ], [ %41, %37 ]
  %45 = trunc i64 %43 to i32
  %46 = lshr i32 %45, 26
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 1
  %49 = tail call ptr @build_reference_type_for_mode(ptr noundef %30, i32 noundef %44, i8 noundef zeroext %48)
  br label %53

50:                                               ; preds = %1
  %51 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  br label %53

53:                                               ; preds = %50, %42, %19
  %54 = phi ptr [ %52, %50 ], [ %49, %42 ], [ %26, %19 ]
  ret ptr %54
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_index_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call ptr @make_node_stat(i32 noundef 8)
  %3 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %4 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  store ptr %3, ptr %4, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 6
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 1023
  %8 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 6
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, -1024
  %11 = or i32 %10, %7
  store i32 %11, ptr %8, align 4
  %12 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 13
  store ptr %12, ptr %13, align 8, !tbaa !17
  %14 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef %3, ptr noundef %0) #29
  %15 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 14
  store ptr %14, ptr %15, align 8, !tbaa !17
  %16 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 65535
  %19 = icmp eq i64 %18, 14
  br i1 %19, label %20, label %23

20:                                               ; preds = %1
  %21 = tail call i32 @vector_type_mode(ptr noundef nonnull %16) #29
  %22 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  br label %27

23:                                               ; preds = %1
  %24 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = lshr i32 %25, 16
  br label %27

27:                                               ; preds = %23, %20
  %28 = phi ptr [ %22, %20 ], [ %16, %23 ]
  %29 = phi i32 [ %21, %20 ], [ %26, %23 ]
  %30 = load i32, ptr %8, align 4
  %31 = shl i32 %29, 16
  %32 = and i32 %31, 16711680
  %33 = and i32 %30, -16711681
  %34 = or i32 %33, %32
  store i32 %34, ptr %8, align 4
  %35 = getelementptr inbounds %struct.tree_type, ptr %28, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 2
  store ptr %36, ptr %37, align 8, !tbaa !17
  %38 = getelementptr inbounds %struct.tree_type, ptr %28, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 3
  store ptr %39, ptr %40, align 8, !tbaa !17
  %41 = getelementptr inbounds %struct.tree_type, ptr %28, i64 0, i32 7
  %42 = load i32, ptr %41, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 7
  store i32 %42, ptr %43, align 8, !tbaa !17
  %44 = load i64, ptr %28, align 8
  %45 = and i64 %44, 4398046511104
  %46 = load i64, ptr %2, align 8
  %47 = and i64 %46, -4398046511105
  %48 = or i64 %47, %45
  store i64 %48, ptr %2, align 8
  %49 = icmp eq ptr %0, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %27
  %51 = load i64, ptr %0, align 8
  %52 = and i64 %51, 65535
  %53 = icmp eq i64 %52, 23
  br i1 %53, label %54, label %63

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %56 = load i64, ptr %55, align 8, !tbaa !17
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %60 = load i64, ptr %59, align 8, !tbaa !17
  %61 = trunc i64 %60 to i32
  %62 = tail call ptr @type_hash_canon(i32 noundef %61, ptr noundef nonnull %2)
  br label %65

63:                                               ; preds = %50, %27, %54
  %64 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 19
  store ptr null, ptr %64, align 8, !tbaa !17
  br label %65

65:                                               ; preds = %63, %58
  %66 = phi ptr [ %62, %58 ], [ %2, %63 ]
  ret ptr %66
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_nonstandard_integer_type(i64 noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 8)
  %4 = trunc i64 %0 to i32
  %5 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 6
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %4, 1023
  %8 = and i32 %6, -1024
  %9 = or i32 %8, %7
  store i32 %9, ptr %5, align 4
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  tail call void @fixup_unsigned_type(ptr noundef nonnull %3) #29
  br label %13

12:                                               ; preds = %2
  tail call void @fixup_signed_type(ptr noundef nonnull %3) #29
  br label %13

13:                                               ; preds = %12, %11
  %14 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 14
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = load i64, ptr %15, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 23
  br i1 %20, label %21, label %30

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.tree_int_cst, ptr %15, i64 0, i32 1, i32 1
  %23 = load i64, ptr %22, align 8, !tbaa !17
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.tree_int_cst, ptr %15, i64 0, i32 1
  %27 = load i64, ptr %26, align 8, !tbaa !17
  %28 = trunc i64 %27 to i32
  %29 = tail call ptr @type_hash_canon(i32 noundef %28, ptr noundef nonnull %3)
  br label %30

30:                                               ; preds = %17, %13, %21, %25
  %31 = phi ptr [ %29, %25 ], [ %3, %21 ], [ %3, %13 ], [ %3, %17 ]
  ret ptr %31
}

declare void @fixup_unsigned_type(ptr noundef) local_unnamed_addr #3

declare void @fixup_signed_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_range_type(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = tail call ptr @make_node_stat(i32 noundef 8)
  %5 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  store ptr %0, ptr %5, align 8, !tbaa !17
  %6 = icmp eq ptr %0, null
  %7 = load ptr, ptr @sizetype_tab, align 16
  %8 = select i1 %6, ptr %7, ptr %0
  %9 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef %8, ptr noundef %1) #29
  %10 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 13
  store ptr %9, ptr %10, align 8, !tbaa !17
  %11 = icmp ne ptr %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef %8, ptr noundef nonnull %2) #29
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi ptr [ %13, %12 ], [ null, %3 ]
  %16 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 14
  store ptr %15, ptr %16, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 6
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, 1023
  %20 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 6
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, -1024
  %23 = or i32 %22, %19
  store i32 %23, ptr %20, align 4
  %24 = load i64, ptr %8, align 8
  %25 = and i64 %24, 65535
  %26 = icmp eq i64 %25, 14
  br i1 %26, label %27, label %30

27:                                               ; preds = %14
  %28 = tail call i32 @vector_type_mode(ptr noundef nonnull %8) #29
  %29 = load i32, ptr %20, align 4
  br label %33

30:                                               ; preds = %14
  %31 = load i32, ptr %17, align 4
  %32 = lshr i32 %31, 16
  br label %33

33:                                               ; preds = %30, %27
  %34 = phi i32 [ %29, %27 ], [ %23, %30 ]
  %35 = phi i32 [ %28, %27 ], [ %32, %30 ]
  %36 = shl i32 %35, 16
  %37 = and i32 %36, 16711680
  %38 = and i32 %34, -16711681
  %39 = or i32 %38, %37
  store i32 %39, ptr %20, align 4
  %40 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 2
  store ptr %41, ptr %42, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 3
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 3
  store ptr %44, ptr %45, align 8, !tbaa !17
  %46 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 7
  %47 = load i32, ptr %46, align 8, !tbaa !17
  %48 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 7
  store i32 %47, ptr %48, align 8, !tbaa !17
  %49 = load i64, ptr %8, align 8
  %50 = and i64 %49, 4398046511104
  %51 = load i64, ptr %4, align 8
  %52 = and i64 %51, -4398046511105
  %53 = or i64 %52, %50
  store i64 %53, ptr %4, align 8
  %54 = icmp eq ptr %1, null
  br i1 %54, label %165, label %55

55:                                               ; preds = %33
  %56 = load i64, ptr %1, align 8
  %57 = and i64 %56, 65535
  %58 = icmp eq i64 %57, 23
  br i1 %58, label %59, label %165

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1
  %61 = getelementptr inbounds %struct.tree_int_cst, ptr %1, i64 0, i32 1, i32 1
  %62 = load i64, ptr %61, align 8, !tbaa !17
  switch i64 %62, label %165 [
    i64 0, label %63
    i64 -1, label %66
  ]

63:                                               ; preds = %59
  %64 = load i64, ptr %60, align 8, !tbaa !17
  %65 = icmp sgt i64 %64, -1
  br i1 %65, label %83, label %165

66:                                               ; preds = %59
  %67 = load i64, ptr %60, align 8, !tbaa !17
  %68 = icmp slt i64 %67, 0
  br i1 %68, label %69, label %165

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = load i64, ptr %71, align 8
  %73 = and i64 %72, 2097152
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %69
  %76 = and i64 %72, 65535
  %77 = icmp eq i64 %76, 8
  br i1 %77, label %78, label %165

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.tree_type, ptr %71, i64 0, i32 6
  %80 = load i32, ptr %79, align 4
  %81 = and i32 %80, 1024
  %82 = icmp ne i32 %81, 0
  br label %83

83:                                               ; preds = %63, %69, %78
  %84 = phi i1 [ %82, %78 ], [ true, %69 ], [ true, %63 ]
  %85 = and i1 %11, %84
  br i1 %85, label %86, label %165

86:                                               ; preds = %83
  %87 = load i64, ptr %2, align 8
  %88 = and i64 %87, 65535
  %89 = icmp eq i64 %88, 23
  br i1 %89, label %90, label %165

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.tree_int_cst, ptr %2, i64 0, i32 1
  %92 = getelementptr inbounds %struct.tree_int_cst, ptr %2, i64 0, i32 1, i32 1
  %93 = load i64, ptr %92, align 8, !tbaa !17
  switch i64 %93, label %165 [
    i64 0, label %94
    i64 -1, label %97
  ]

94:                                               ; preds = %90
  %95 = load i64, ptr %91, align 8, !tbaa !17
  %96 = icmp sgt i64 %95, -1
  br i1 %96, label %131, label %165

97:                                               ; preds = %90
  %98 = load i64, ptr %91, align 8, !tbaa !17
  %99 = icmp slt i64 %98, 0
  br i1 %99, label %100, label %165

100:                                              ; preds = %97
  %101 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %102 = load ptr, ptr %101, align 8, !tbaa !17
  %103 = load i64, ptr %102, align 8
  %104 = and i64 %103, 2097152
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %100
  %107 = and i64 %103, 65535
  %108 = icmp eq i64 %107, 8
  br i1 %108, label %109, label %165

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.tree_type, ptr %102, i64 0, i32 6
  %111 = load i32, ptr %110, align 4
  %112 = and i32 %111, 1024
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %165, label %114

114:                                              ; preds = %100, %109
  %115 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = load i64, ptr %116, align 8
  %118 = and i64 %117, 2097152
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %114
  %121 = and i64 %117, 65535
  %122 = icmp eq i64 %121, 8
  br i1 %122, label %123, label %128

123:                                              ; preds = %120
  %124 = getelementptr inbounds %struct.tree_type, ptr %116, i64 0, i32 6
  %125 = load i32, ptr %124, align 4
  %126 = and i32 %125, 1024
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123, %120
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 6214, ptr noundef nonnull @.str.219) #29
  %129 = load i64, ptr %91, align 8, !tbaa !17
  %130 = load i64, ptr %1, align 8
  br label %131

131:                                              ; preds = %94, %128, %123, %114
  %132 = phi i64 [ %130, %128 ], [ %56, %123 ], [ %56, %114 ], [ %56, %94 ]
  %133 = phi i64 [ %129, %128 ], [ %98, %123 ], [ %98, %114 ], [ %95, %94 ]
  %134 = and i64 %132, 65535
  %135 = icmp eq i64 %134, 23
  br i1 %135, label %136, label %158

136:                                              ; preds = %131
  %137 = load i64, ptr %61, align 8, !tbaa !17
  switch i64 %137, label %158 [
    i64 0, label %138
    i64 -1, label %141
  ]

138:                                              ; preds = %136
  %139 = load i64, ptr %60, align 8, !tbaa !17
  %140 = icmp sgt i64 %139, -1
  br i1 %140, label %160, label %158

141:                                              ; preds = %136
  %142 = load i64, ptr %60, align 8, !tbaa !17
  %143 = icmp slt i64 %142, 0
  br i1 %143, label %144, label %158

144:                                              ; preds = %141
  %145 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %146 = load ptr, ptr %145, align 8, !tbaa !17
  %147 = load i64, ptr %146, align 8
  %148 = and i64 %147, 2097152
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %160, label %150

150:                                              ; preds = %144
  %151 = and i64 %147, 65535
  %152 = icmp eq i64 %151, 8
  br i1 %152, label %153, label %158

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.tree_type, ptr %146, i64 0, i32 6
  %155 = load i32, ptr %154, align 4
  %156 = and i32 %155, 1024
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %136, %138, %153, %150, %141, %131
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 6214, ptr noundef nonnull @.str.219) #29
  %159 = load i64, ptr %60, align 8, !tbaa !17
  br label %160

160:                                              ; preds = %138, %144, %153, %158
  %161 = phi i64 [ %139, %138 ], [ %142, %144 ], [ %142, %153 ], [ %159, %158 ]
  %162 = sub nsw i64 %133, %161
  %163 = trunc i64 %162 to i32
  %164 = tail call ptr @type_hash_canon(i32 noundef %163, ptr noundef nonnull %4)
  br label %165

165:                                              ; preds = %90, %59, %94, %97, %106, %86, %63, %66, %75, %55, %33, %83, %109, %160
  %166 = phi ptr [ %164, %160 ], [ %4, %109 ], [ %4, %83 ], [ %4, %33 ], [ %4, %55 ], [ %4, %75 ], [ %4, %66 ], [ %4, %63 ], [ %4, %86 ], [ %4, %106 ], [ %4, %97 ], [ %4, %94 ], [ %4, %59 ], [ %4, %90 ]
  ret ptr %166
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @subrange_type_for_debug_p(ptr noundef %0, ptr noundef writeonly %1, ptr noundef writeonly %2) local_unnamed_addr #9 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #29
  %8 = load i64, ptr %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 65535
  %11 = add nsw i32 %10, -6
  %12 = icmp ult i32 %11, 3
  br i1 %12, label %13, label %165

13:                                               ; preds = %3
  %14 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 13), align 8, !tbaa !245
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  call void %14(ptr noundef nonnull %0, ptr noundef nonnull %4, ptr noundef nonnull %5) #29
  br label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 13
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  store ptr %19, ptr %4, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  store ptr %21, ptr %5, align 8, !tbaa !6
  br label %22

22:                                               ; preds = %17, %16
  %23 = load i64, ptr %7, align 8
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, 65535
  %26 = add nsw i32 %25, -7
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %157

28:                                               ; preds = %22
  %29 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %30 = icmp eq ptr %29, %0
  br i1 %30, label %49, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = getelementptr inbounds %struct.tree_type, ptr %33, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %31
  %38 = load i64, ptr %35, align 8
  %39 = and i64 %38, 65535
  %40 = icmp eq i64 %39, 23
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.tree_int_cst, ptr %35, i64 0, i32 1, i32 1
  %43 = load i64, ptr %42, align 8, !tbaa !17
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.tree_int_cst, ptr %35, i64 0, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !17
  %48 = call i64 @llvm.smax.i64(i64 %47, i64 -1)
  br label %49

49:                                               ; preds = %28, %31, %37, %41, %45
  %50 = phi i64 [ 0, %28 ], [ -1, %41 ], [ -1, %37 ], [ -1, %31 ], [ %48, %45 ]
  %51 = icmp eq ptr %29, %7
  br i1 %51, label %70, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 16
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = getelementptr inbounds %struct.tree_type, ptr %54, i64 0, i32 3
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = icmp eq ptr %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %52
  %59 = load i64, ptr %56, align 8
  %60 = and i64 %59, 65535
  %61 = icmp eq i64 %60, 23
  br i1 %61, label %62, label %70

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.tree_int_cst, ptr %56, i64 0, i32 1, i32 1
  %64 = load i64, ptr %63, align 8, !tbaa !17
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.tree_int_cst, ptr %56, i64 0, i32 1
  %68 = load i64, ptr %67, align 8, !tbaa !17
  %69 = call i64 @llvm.smax.i64(i64 %68, i64 -1)
  br label %70

70:                                               ; preds = %49, %52, %58, %62, %66
  %71 = phi i64 [ 0, %49 ], [ -1, %62 ], [ -1, %58 ], [ -1, %52 ], [ %69, %66 ]
  %72 = icmp eq i64 %50, %71
  br i1 %72, label %73, label %157

73:                                               ; preds = %70
  %74 = load ptr, ptr %4, align 8, !tbaa !6
  %75 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 13
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = icmp eq ptr %74, %76
  br i1 %77, label %102, label %78

78:                                               ; preds = %73
  %79 = icmp eq ptr %74, null
  %80 = icmp eq ptr %76, null
  %81 = or i1 %79, %80
  br i1 %81, label %157, label %82

82:                                               ; preds = %78
  %83 = load i64, ptr %74, align 8
  %84 = and i64 %83, 65535
  %85 = icmp eq i64 %84, 23
  br i1 %85, label %86, label %157

86:                                               ; preds = %82
  %87 = load i64, ptr %76, align 8
  %88 = and i64 %87, 65535
  %89 = icmp eq i64 %88, 23
  br i1 %89, label %90, label %157

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.tree_int_cst, ptr %74, i64 0, i32 1
  %92 = load i64, ptr %91, align 8, !tbaa !17
  %93 = getelementptr inbounds %struct.tree_int_cst, ptr %76, i64 0, i32 1
  %94 = load i64, ptr %93, align 8, !tbaa !17
  %95 = icmp eq i64 %92, %94
  br i1 %95, label %96, label %157

96:                                               ; preds = %90
  %97 = getelementptr inbounds %struct.tree_int_cst, ptr %74, i64 0, i32 1, i32 1
  %98 = load i64, ptr %97, align 8, !tbaa !17
  %99 = getelementptr inbounds %struct.tree_int_cst, ptr %76, i64 0, i32 1, i32 1
  %100 = load i64, ptr %99, align 8, !tbaa !17
  %101 = icmp eq i64 %98, %100
  br i1 %101, label %102, label %157

102:                                              ; preds = %96, %73
  %103 = load ptr, ptr %5, align 8, !tbaa !6
  %104 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 14
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = icmp eq ptr %103, %105
  br i1 %106, label %131, label %107

107:                                              ; preds = %102
  %108 = icmp eq ptr %103, null
  %109 = icmp eq ptr %105, null
  %110 = or i1 %108, %109
  br i1 %110, label %157, label %111

111:                                              ; preds = %107
  %112 = load i64, ptr %103, align 8
  %113 = and i64 %112, 65535
  %114 = icmp eq i64 %113, 23
  br i1 %114, label %115, label %157

115:                                              ; preds = %111
  %116 = load i64, ptr %105, align 8
  %117 = and i64 %116, 65535
  %118 = icmp eq i64 %117, 23
  br i1 %118, label %119, label %157

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.tree_int_cst, ptr %103, i64 0, i32 1
  %121 = load i64, ptr %120, align 8, !tbaa !17
  %122 = getelementptr inbounds %struct.tree_int_cst, ptr %105, i64 0, i32 1
  %123 = load i64, ptr %122, align 8, !tbaa !17
  %124 = icmp eq i64 %121, %123
  br i1 %124, label %125, label %157

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct.tree_int_cst, ptr %103, i64 0, i32 1, i32 1
  %127 = load i64, ptr %126, align 8, !tbaa !17
  %128 = getelementptr inbounds %struct.tree_int_cst, ptr %105, i64 0, i32 1, i32 1
  %129 = load i64, ptr %128, align 8, !tbaa !17
  %130 = icmp eq i64 %127, %129
  br i1 %130, label %131, label %157

131:                                              ; preds = %125, %102
  %132 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 12
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  %134 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 12
  %135 = load ptr, ptr %134, align 8, !tbaa !17
  %136 = icmp eq ptr %133, null
  br i1 %136, label %144, label %137

137:                                              ; preds = %131
  %138 = load i64, ptr %133, align 8
  %139 = and i64 %138, 65535
  %140 = icmp eq i64 %139, 35
  br i1 %140, label %141, label %144

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.tree_decl_minimal, ptr %133, i64 0, i32 3
  %143 = load ptr, ptr %142, align 8, !tbaa !17
  br label %144

144:                                              ; preds = %141, %137, %131
  %145 = phi ptr [ %143, %141 ], [ %133, %137 ], [ null, %131 ]
  %146 = icmp eq ptr %135, null
  br i1 %146, label %154, label %147

147:                                              ; preds = %144
  %148 = load i64, ptr %135, align 8
  %149 = and i64 %148, 65535
  %150 = icmp eq i64 %149, 35
  br i1 %150, label %151, label %154

151:                                              ; preds = %147
  %152 = getelementptr inbounds %struct.tree_decl_minimal, ptr %135, i64 0, i32 3
  %153 = load ptr, ptr %152, align 8, !tbaa !17
  br label %154

154:                                              ; preds = %151, %147, %144
  %155 = phi ptr [ %153, %151 ], [ %135, %147 ], [ null, %144 ]
  %156 = icmp eq ptr %145, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %111, %115, %119, %125, %107, %82, %86, %90, %96, %78, %22, %154, %70
  %158 = icmp eq ptr %1, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = load ptr, ptr %4, align 8, !tbaa !6
  store ptr %160, ptr %1, align 8, !tbaa !6
  br label %161

161:                                              ; preds = %159, %157
  %162 = icmp eq ptr %2, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = load ptr, ptr %5, align 8, !tbaa !6
  store ptr %164, ptr %2, align 8, !tbaa !6
  br label %165

165:                                              ; preds = %3, %161, %163, %154
  %166 = phi i8 [ 0, %154 ], [ 0, %3 ], [ 1, %163 ], [ 1, %161 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #29
  ret i8 %166
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_index_2_type(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %4 = tail call ptr @build_range_type(ptr noundef %3, ptr noundef %0, ptr noundef %1)
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_array_type(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = icmp eq i64 %4, 20
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.225) #29
  %7 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  br label %8

8:                                                ; preds = %6, %2
  %9 = phi ptr [ %7, %6 ], [ %0, %2 ]
  %10 = tail call ptr @make_node_stat(i32 noundef 15)
  %11 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 2
  store ptr %9, ptr %11, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.tree_type, ptr %10, i64 0, i32 1
  store ptr %1, ptr %12, align 8, !tbaa !17
  %13 = load i64, ptr %9, align 8
  %14 = and i64 %13, -72057594037927936
  %15 = load i64, ptr %10, align 8
  %16 = and i64 %15, 72057594037927935
  %17 = or i64 %16, %14
  store i64 %17, ptr %10, align 8
  tail call void @layout_type(ptr noundef nonnull %10) #29
  %18 = getelementptr inbounds %struct.tree_type, ptr %10, i64 0, i32 19
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %51, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %struct.tree_type, ptr %9, i64 0, i32 5
  %23 = tail call i32 @iterative_hash(ptr noundef nonnull %22, i64 noundef 4, i32 noundef 0) #29
  %24 = icmp eq ptr %1, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 5
  %27 = tail call i32 @iterative_hash(ptr noundef nonnull %26, i64 noundef 4, i32 noundef %23) #29
  br label %28

28:                                               ; preds = %25, %21
  %29 = phi i32 [ %27, %25 ], [ %23, %21 ]
  %30 = tail call ptr @type_hash_canon(i32 noundef %29, ptr noundef nonnull %10)
  %31 = getelementptr inbounds %struct.tree_type, ptr %30, i64 0, i32 19
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, %30
  br i1 %33, label %34, label %51

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.tree_type, ptr %9, i64 0, i32 19
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %34
  br i1 %24, label %43, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 19
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %49, label %45

43:                                               ; preds = %38
  %44 = icmp eq ptr %36, %9
  br i1 %44, label %51, label %53

45:                                               ; preds = %39
  %46 = icmp eq ptr %36, %9
  %47 = icmp eq ptr %41, %1
  %48 = and i1 %46, %47
  br i1 %48, label %51, label %53

49:                                               ; preds = %34, %39, %53
  %50 = phi ptr [ %55, %53 ], [ null, %39 ], [ null, %34 ]
  store ptr %50, ptr %31, align 8, !tbaa !17
  br label %51

51:                                               ; preds = %49, %45, %8, %28, %43
  %52 = phi ptr [ %10, %8 ], [ %30, %28 ], [ %30, %43 ], [ %30, %45 ], [ %30, %49 ]
  ret ptr %52

53:                                               ; preds = %45, %43
  %54 = phi ptr [ null, %43 ], [ %41, %45 ]
  %55 = tail call ptr @build_array_type(ptr noundef nonnull %36, ptr noundef %54)
  br label %49
}

declare void @error(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @strip_array_types(ptr noundef readonly %0) local_unnamed_addr #16 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 15
  br i1 %4, label %5, label %12

5:                                                ; preds = %1, %5
  %6 = phi ptr [ %8, %5 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 15
  br i1 %11, label %5, label %12, !llvm.loop !246

12:                                               ; preds = %5, %1
  %13 = phi ptr [ %0, %1 ], [ %8, %5 ]
  ret ptr %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_function_type(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #29
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #29
  %5 = load i64, ptr %0, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 20
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.226) #29
  %9 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  br label %10

10:                                               ; preds = %8, %2
  %11 = phi ptr [ %9, %8 ], [ %0, %2 ]
  %12 = tail call ptr @make_node_stat(i32 noundef 20)
  %13 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  store ptr %11, ptr %13, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 1
  store ptr %1, ptr %14, align 8, !tbaa !17
  %15 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 5
  %16 = tail call i32 @iterative_hash(ptr noundef nonnull %15, i64 noundef 4, i32 noundef 0) #29
  %17 = icmp eq ptr %1, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %10
  %19 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %20

20:                                               ; preds = %31, %18
  %21 = phi ptr [ %32, %31 ], [ %19, %18 ]
  %22 = phi ptr [ %35, %31 ], [ %1, %18 ]
  %23 = phi i32 [ %33, %31 ], [ %16, %18 ]
  %24 = getelementptr inbounds %struct.tree_list, ptr %22, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, %21
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 5
  %29 = tail call i32 @iterative_hash(ptr noundef nonnull %28, i64 noundef 4, i32 noundef %23) #29
  %30 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %31

31:                                               ; preds = %27, %20
  %32 = phi ptr [ %30, %27 ], [ %21, %20 ]
  %33 = phi i32 [ %29, %27 ], [ %23, %20 ]
  %34 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %20, !llvm.loop !134

37:                                               ; preds = %31, %10
  %38 = phi i32 [ %16, %10 ], [ %33, %31 ]
  %39 = tail call ptr @type_hash_canon(i32 noundef %38, ptr noundef %12)
  %40 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 19
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  %43 = zext i1 %42 to i8
  store i8 %43, ptr %3, align 1, !tbaa !17
  %44 = icmp ne ptr %41, %11
  %45 = zext i1 %44 to i8
  store i8 %45, ptr %4, align 1, !tbaa !17
  %46 = call fastcc ptr @maybe_canonicalize_argtypes(ptr noundef %1, ptr noundef nonnull %3, ptr noundef nonnull %4)
  %47 = load i8, ptr %3, align 1, !tbaa !17
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %37
  %50 = load i8, ptr %4, align 1, !tbaa !17
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  %53 = load ptr, ptr %40, align 8, !tbaa !17
  %54 = tail call ptr @build_function_type(ptr noundef %53, ptr noundef %46)
  br label %55

55:                                               ; preds = %37, %52
  %56 = phi ptr [ %54, %52 ], [ null, %37 ]
  %57 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 19
  store ptr %56, ptr %57, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %55, %49
  %59 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  tail call void @layout_type(ptr noundef nonnull %39) #29
  br label %63

63:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #29
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #29
  ret ptr %39
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @maybe_canonicalize_argtypes(ptr noundef readonly %0, ptr nocapture noundef %1, ptr nocapture noundef writeonly %2) unnamed_addr #9 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %99, label %5

5:                                                ; preds = %3
  %6 = load i8, ptr %1, align 1, !tbaa !17
  br label %7

7:                                                ; preds = %5, %33
  %8 = phi i8 [ %34, %33 ], [ %6, %5 ]
  %9 = phi i8 [ %35, %33 ], [ %6, %5 ]
  %10 = phi i8 [ %36, %33 ], [ 0, %5 ]
  %11 = phi ptr [ %38, %33 ], [ %0, %5 ]
  %12 = icmp eq i8 %9, 0
  br i1 %12, label %13, label %40

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.tree_list, ptr %11, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  %17 = load ptr, ptr @global_trees, align 16
  %18 = icmp eq ptr %15, %17
  %19 = select i1 %16, i1 true, i1 %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %13
  store i8 1, ptr %1, align 1, !tbaa !17
  br label %33

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 19
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i8 1, ptr %1, align 1, !tbaa !17
  br label %33

26:                                               ; preds = %21
  %27 = icmp eq ptr %23, %15
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.tree_list, ptr %11, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = icmp eq ptr %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28, %26
  br label %33

33:                                               ; preds = %20, %28, %32, %25
  %34 = phi i8 [ 1, %20 ], [ 1, %25 ], [ %8, %32 ], [ %8, %28 ]
  %35 = phi i8 [ 1, %20 ], [ 1, %25 ], [ 0, %32 ], [ 0, %28 ]
  %36 = phi i8 [ %10, %20 ], [ %10, %25 ], [ 1, %32 ], [ %10, %28 ]
  %37 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %7, !llvm.loop !247

40:                                               ; preds = %7, %33
  %41 = phi i8 [ %8, %7 ], [ %34, %33 ]
  %42 = phi i8 [ %10, %7 ], [ %36, %33 ]
  %43 = icmp ne i8 %41, 0
  %44 = icmp eq i8 %42, 0
  %45 = select i1 %43, i1 true, i1 %44
  br i1 %45, label %99, label %46

46:                                               ; preds = %40
  br i1 %4, label %86, label %47

47:                                               ; preds = %46
  %48 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  br label %49

49:                                               ; preds = %47, %66
  %50 = phi ptr [ %67, %66 ], [ %48, %47 ]
  %51 = phi i8 [ %69, %66 ], [ 0, %47 ]
  %52 = phi ptr [ %68, %66 ], [ null, %47 ]
  %53 = phi ptr [ %71, %66 ], [ %0, %47 ]
  %54 = icmp eq ptr %53, %50
  br i1 %54, label %66, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.tree_list, ptr %53, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.tree_type, ptr %57, i64 0, i32 19
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %61 = getelementptr inbounds i8, ptr %60, i64 16
  store i64 0, ptr %61, align 8
  store i64 2, ptr %60, align 8
  %62 = getelementptr inbounds %struct.tree_common, ptr %60, i64 0, i32 1
  store ptr %52, ptr %62, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.tree_list, ptr %60, i64 0, i32 1
  store ptr null, ptr %63, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.tree_list, ptr %60, i64 0, i32 2
  store ptr %59, ptr %64, align 8, !tbaa !17
  %65 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  br label %66

66:                                               ; preds = %49, %55
  %67 = phi ptr [ %65, %55 ], [ %50, %49 ]
  %68 = phi ptr [ %60, %55 ], [ %52, %49 ]
  %69 = phi i8 [ %51, %55 ], [ 1, %49 ]
  %70 = getelementptr inbounds %struct.tree_common, ptr %53, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %49, !llvm.loop !248

73:                                               ; preds = %66
  %74 = icmp eq ptr %68, null
  br i1 %74, label %83, label %75

75:                                               ; preds = %73, %75
  %76 = phi ptr [ %77, %75 ], [ null, %73 ]
  %77 = phi ptr [ %79, %75 ], [ %68, %73 ]
  %78 = getelementptr inbounds %struct.tree_common, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  store ptr %76, ptr %78, align 8, !tbaa !17
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %75, !llvm.loop !79

81:                                               ; preds = %75
  %82 = icmp eq i8 %69, 0
  br i1 %82, label %97, label %87

83:                                               ; preds = %73
  %84 = icmp eq i8 %69, 0
  %85 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8
  br i1 %84, label %86, label %97

86:                                               ; preds = %46, %83
  br label %97

87:                                               ; preds = %81
  %88 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %89 = icmp eq ptr %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %87, %90
  %91 = phi ptr [ %93, %90 ], [ %77, %87 ]
  %92 = getelementptr inbounds %struct.tree_common, ptr %91, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  %94 = icmp eq ptr %93, null
  br i1 %94, label %95, label %90, !llvm.loop !97

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.tree_common, ptr %91, i64 0, i32 1
  store ptr %88, ptr %96, align 8, !tbaa !17
  br label %97

97:                                               ; preds = %86, %83, %95, %87, %81
  %98 = phi ptr [ %77, %81 ], [ %77, %95 ], [ %77, %87 ], [ null, %86 ], [ %85, %83 ]
  store i8 1, ptr %2, align 1, !tbaa !17
  br label %99

99:                                               ; preds = %3, %40, %97
  %100 = phi ptr [ %98, %97 ], [ %0, %40 ], [ null, %3 ]
  ret ptr %100
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_function_type_skip_args(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = icmp ne ptr %4, null
  %6 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8
  %7 = icmp ne ptr %4, %6
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %41

9:                                                ; preds = %2, %23
  %10 = phi ptr [ %27, %23 ], [ %4, %2 ]
  %11 = phi i32 [ %26, %23 ], [ 0, %2 ]
  %12 = phi ptr [ %24, %23 ], [ null, %2 ]
  %13 = tail call i32 @bitmap_bit_p(ptr noundef %1, i32 noundef %11) #29
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.tree_list, ptr %10, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %19 = getelementptr inbounds i8, ptr %18, i64 16
  store i64 0, ptr %19, align 8
  store i64 2, ptr %18, align 8
  %20 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  store ptr %12, ptr %20, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.tree_list, ptr %18, i64 0, i32 1
  store ptr null, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.tree_list, ptr %18, i64 0, i32 2
  store ptr %17, ptr %22, align 8, !tbaa !17
  br label %23

23:                                               ; preds = %9, %15
  %24 = phi ptr [ %12, %9 ], [ %18, %15 ]
  %25 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 1
  %26 = add nuw nsw i32 %11, 1
  %27 = load ptr, ptr %25, align 8, !tbaa !17
  %28 = icmp ne ptr %27, null
  %29 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8
  %30 = icmp ne ptr %27, %29
  %31 = select i1 %28, i1 %30, i1 false
  br i1 %31, label %9, label %32, !llvm.loop !249

32:                                               ; preds = %23
  %33 = icmp eq ptr %24, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %32, %34
  %35 = phi ptr [ %36, %34 ], [ null, %32 ]
  %36 = phi ptr [ %38, %34 ], [ %24, %32 ]
  %37 = getelementptr inbounds %struct.tree_common, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  store ptr %35, ptr %37, align 8, !tbaa !17
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %34, !llvm.loop !79

40:                                               ; preds = %34
  br i1 %28, label %45, label %48

41:                                               ; preds = %2, %32
  %42 = phi i1 [ %28, %32 ], [ %5, %2 ]
  %43 = phi ptr [ %29, %32 ], [ %6, %2 ]
  %44 = select i1 %42, ptr %43, ptr null
  br label %48

45:                                               ; preds = %40
  %46 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.tree_common, ptr %24, i64 0, i32 1
  store ptr %46, ptr %47, align 8, !tbaa !17
  br label %48

48:                                               ; preds = %41, %45, %40
  %49 = phi ptr [ %36, %45 ], [ %36, %40 ], [ %44, %41 ]
  %50 = load i64, ptr %0, align 8
  %51 = and i64 %50, 65535
  %52 = icmp eq i64 %51, 21
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = tail call i32 @bitmap_bit_p(ptr noundef %1, i32 noundef 0) #29
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %53, %48
  %57 = tail call ptr @copy_node_stat(ptr noundef nonnull %0)
  %58 = getelementptr inbounds %struct.tree_type, ptr %57, i64 0, i32 1
  store ptr %49, ptr %58, align 8, !tbaa !17
  br label %75

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = tail call ptr @build_function_type(ptr noundef %61, ptr noundef %49)
  %63 = tail call ptr @copy_node_stat(ptr noundef %62)
  %64 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 9
  %65 = getelementptr inbounds %struct.tree_type, ptr %62, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %64, i8 0, i64 16, i1 false)
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = icmp eq ptr %66, null
  %68 = select i1 %67, ptr null, ptr %63
  %69 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 19
  store ptr %68, ptr %69, align 8
  %70 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 16
  store ptr %63, ptr %70, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 15
  store ptr null, ptr %71, align 8, !tbaa !17
  %72 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 18
  store ptr %73, ptr %74, align 8, !tbaa !17
  br label %75

75:                                               ; preds = %59, %56
  %76 = phi ptr [ %57, %56 ], [ %63, %59 ]
  %77 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = icmp eq ptr %78, %0
  %80 = getelementptr inbounds %struct.tree_type, ptr %76, i64 0, i32 16
  br i1 %79, label %85, label %81

81:                                               ; preds = %75
  store ptr %78, ptr %80, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.tree_type, ptr %78, i64 0, i32 15
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = getelementptr inbounds %struct.tree_type, ptr %76, i64 0, i32 15
  store ptr %83, ptr %84, align 8, !tbaa !17
  store ptr %76, ptr %82, align 8, !tbaa !17
  br label %87

85:                                               ; preds = %75
  store ptr %76, ptr %80, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.tree_type, ptr %76, i64 0, i32 15
  store ptr null, ptr %86, align 8, !tbaa !17
  br label %87

87:                                               ; preds = %85, %81
  ret ptr %76
}

declare i32 @bitmap_bit_p(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_function_decl_skip_args(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @copy_node_stat(ptr noundef %0)
  %4 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10398, ptr noundef nonnull @.str.219) #29
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call ptr @build_function_type_skip_args(ptr noundef nonnull %5, ptr noundef %1)
  br label %14

14:                                               ; preds = %12, %8
  %15 = phi ptr [ %13, %12 ], [ %5, %8 ]
  %16 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !17
  %17 = tail call i32 @bitmap_bit_p(ptr noundef %1, i32 noundef 0) #29
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.tree_decl_non_common, ptr %3, i64 0, i32 4
  store ptr null, ptr %20, align 8, !tbaa !17
  br label %21

21:                                               ; preds = %19, %14
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @prototype_p(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10398, ptr noundef nonnull @.str.219) #29
  br label %4

4:                                                ; preds = %1, %3
  %5 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp ne ptr %6, null
  %8 = zext i1 %7 to i8
  ret i8 %8
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_function_type_list(ptr noundef %0, ...) local_unnamed_addr #9 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #29
  call void @llvm.va_start(ptr nonnull %2)
  %3 = load i32, ptr %2, align 16
  %4 = icmp ult i32 %3, 41
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 3
  %7 = load ptr, ptr %6, align 16
  %8 = zext i32 %3 to i64
  %9 = getelementptr i8, ptr %7, i64 %8
  %10 = add nuw nsw i32 %3, 8
  store i32 %10, ptr %2, align 16
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr i8, ptr %13, i64 8
  store ptr %14, ptr %12, align 8
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi ptr [ %9, %5 ], [ %13, %11 ]
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 2
  %21 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 3
  br label %22

22:                                               ; preds = %40, %19
  %23 = phi ptr [ %17, %19 ], [ %42, %40 ]
  %24 = phi ptr [ null, %19 ], [ %25, %40 ]
  %25 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %26 = getelementptr inbounds i8, ptr %25, i64 16
  store i64 0, ptr %26, align 8
  store i64 2, ptr %25, align 8
  %27 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 1
  store ptr %24, ptr %27, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.tree_list, ptr %25, i64 0, i32 1
  store ptr null, ptr %28, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_list, ptr %25, i64 0, i32 2
  store ptr %23, ptr %29, align 8, !tbaa !17
  %30 = load i32, ptr %2, align 16
  %31 = icmp ult i32 %30, 41
  br i1 %31, label %32, label %37

32:                                               ; preds = %22
  %33 = load ptr, ptr %21, align 16
  %34 = zext i32 %30 to i64
  %35 = getelementptr i8, ptr %33, i64 %34
  %36 = add nuw nsw i32 %30, 8
  store i32 %36, ptr %2, align 16
  br label %40

37:                                               ; preds = %22
  %38 = load ptr, ptr %20, align 8
  %39 = getelementptr i8, ptr %38, i64 8
  store ptr %39, ptr %20, align 8
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi ptr [ %35, %32 ], [ %38, %37 ]
  %42 = load ptr, ptr %41, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %22, !llvm.loop !250

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 1
  br label %48

46:                                               ; preds = %15
  %47 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  br label %56

48:                                               ; preds = %44, %48
  %49 = phi ptr [ %50, %48 ], [ null, %44 ]
  %50 = phi ptr [ %52, %48 ], [ %25, %44 ]
  %51 = getelementptr inbounds %struct.tree_common, ptr %50, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  store ptr %49, ptr %51, align 8, !tbaa !17
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %48, !llvm.loop !79

54:                                               ; preds = %48
  %55 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  store ptr %55, ptr %45, align 8, !tbaa !17
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi ptr [ %47, %46 ], [ %50, %54 ]
  %58 = call ptr @build_function_type(ptr noundef %0, ptr noundef %57)
  call void @llvm.va_end(ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #29
  ret ptr %58
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_varargs_function_type_list(ptr noundef %0, ...) local_unnamed_addr #9 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #29
  call void @llvm.va_start(ptr nonnull %2)
  %3 = load i32, ptr %2, align 16
  %4 = icmp ult i32 %3, 41
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 3
  %7 = load ptr, ptr %6, align 16
  %8 = zext i32 %3 to i64
  %9 = getelementptr i8, ptr %7, i64 %8
  %10 = add nuw nsw i32 %3, 8
  store i32 %10, ptr %2, align 16
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr i8, ptr %13, i64 8
  store ptr %14, ptr %12, align 8
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi ptr [ %9, %5 ], [ %13, %11 ]
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 2
  %21 = getelementptr inbounds %struct.__va_list_tag, ptr %2, i64 0, i32 3
  br label %22

22:                                               ; preds = %40, %19
  %23 = phi ptr [ %17, %19 ], [ %42, %40 ]
  %24 = phi ptr [ null, %19 ], [ %25, %40 ]
  %25 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %26 = getelementptr inbounds i8, ptr %25, i64 16
  store i64 0, ptr %26, align 8
  store i64 2, ptr %25, align 8
  %27 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 1
  store ptr %24, ptr %27, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.tree_list, ptr %25, i64 0, i32 1
  store ptr null, ptr %28, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_list, ptr %25, i64 0, i32 2
  store ptr %23, ptr %29, align 8, !tbaa !17
  %30 = load i32, ptr %2, align 16
  %31 = icmp ult i32 %30, 41
  br i1 %31, label %32, label %37

32:                                               ; preds = %22
  %33 = load ptr, ptr %21, align 16
  %34 = zext i32 %30 to i64
  %35 = getelementptr i8, ptr %33, i64 %34
  %36 = add nuw nsw i32 %30, 8
  store i32 %36, ptr %2, align 16
  br label %40

37:                                               ; preds = %22
  %38 = load ptr, ptr %20, align 8
  %39 = getelementptr i8, ptr %38, i64 8
  store ptr %39, ptr %20, align 8
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi ptr [ %35, %32 ], [ %38, %37 ]
  %42 = load ptr, ptr %41, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %22, !llvm.loop !250

44:                                               ; preds = %40, %44
  %45 = phi ptr [ %46, %44 ], [ null, %40 ]
  %46 = phi ptr [ %48, %44 ], [ %25, %40 ]
  %47 = getelementptr inbounds %struct.tree_common, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  store ptr %45, ptr %47, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %44, !llvm.loop !79

50:                                               ; preds = %44
  %51 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8
  %52 = icmp eq ptr %25, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %15, %50
  %54 = phi ptr [ %46, %50 ], [ null, %15 ]
  call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 7286, ptr noundef nonnull @.str.219) #29
  br label %55

55:                                               ; preds = %50, %53
  %56 = phi ptr [ %54, %53 ], [ %46, %50 ]
  %57 = call ptr @build_function_type(ptr noundef %0, ptr noundef %56)
  call void @llvm.va_end(ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #29
  ret ptr %57
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_method_type_directly(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #29
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #29
  %6 = tail call ptr @make_node_stat(i32 noundef 21)
  %7 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 14
  store ptr %8, ptr %9, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  store ptr %1, ptr %10, align 8, !tbaa !17
  %11 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %12 = icmp eq ptr %11, %0
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = load i64, ptr %0, align 8
  %15 = lshr i64 %14, 56
  %16 = trunc i64 %15 to i8
  br label %17

17:                                               ; preds = %13, %3
  %18 = phi i8 [ %16, %13 ], [ 0, %3 ]
  %19 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %20 = tail call i32 %19(i8 noundef zeroext %18) #29
  %21 = tail call ptr @build_pointer_type_for_mode(ptr noundef nonnull %0, i32 noundef %20, i8 noundef zeroext 0)
  %22 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %23 = getelementptr inbounds i8, ptr %22, i64 16
  store i64 0, ptr %23, align 8
  store i64 2, ptr %22, align 8
  %24 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  store ptr %2, ptr %24, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.tree_list, ptr %22, i64 0, i32 1
  store ptr null, ptr %25, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.tree_list, ptr %22, i64 0, i32 2
  store ptr %21, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 1
  store ptr %22, ptr %27, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 5
  %29 = tail call i32 @iterative_hash(ptr noundef nonnull %28, i64 noundef 4, i32 noundef 0) #29
  %30 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 5
  %31 = tail call i32 @iterative_hash(ptr noundef nonnull %30, i64 noundef 4, i32 noundef %29) #29
  %32 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %33

33:                                               ; preds = %44, %17
  %34 = phi ptr [ %45, %44 ], [ %32, %17 ]
  %35 = phi ptr [ %48, %44 ], [ %22, %17 ]
  %36 = phi i32 [ %46, %44 ], [ %31, %17 ]
  %37 = getelementptr inbounds %struct.tree_list, ptr %35, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = icmp eq ptr %38, %34
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.tree_type, ptr %38, i64 0, i32 5
  %42 = tail call i32 @iterative_hash(ptr noundef nonnull %41, i64 noundef 4, i32 noundef %36) #29
  %43 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %44

44:                                               ; preds = %40, %33
  %45 = phi ptr [ %43, %40 ], [ %34, %33 ]
  %46 = phi i32 [ %42, %40 ], [ %36, %33 ]
  %47 = getelementptr inbounds %struct.tree_common, ptr %35, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %33, !llvm.loop !134

50:                                               ; preds = %44
  %51 = tail call ptr @type_hash_canon(i32 noundef %46, ptr noundef %6)
  %52 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = icmp eq ptr %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 19
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = icmp eq ptr %57, null
  %59 = zext i1 %58 to i8
  br label %60

60:                                               ; preds = %55, %50
  %61 = phi i8 [ 1, %50 ], [ %59, %55 ]
  store i8 %61, ptr %4, align 1, !tbaa !17
  %62 = icmp eq ptr %53, %0
  br i1 %62, label %63, label %68

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 19
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = icmp ne ptr %65, %1
  %67 = zext i1 %66 to i8
  br label %68

68:                                               ; preds = %63, %60
  %69 = phi i8 [ 1, %60 ], [ %67, %63 ]
  store i8 %69, ptr %5, align 1, !tbaa !17
  %70 = load ptr, ptr %24, align 8, !tbaa !17
  %71 = call fastcc ptr @maybe_canonicalize_argtypes(ptr noundef %70, ptr noundef nonnull %4, ptr noundef nonnull %5)
  %72 = load i8, ptr %4, align 1, !tbaa !17
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %82

74:                                               ; preds = %68
  %75 = load i8, ptr %5, align 1, !tbaa !17
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %74
  %78 = load ptr, ptr %52, align 8, !tbaa !17
  %79 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 19
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = tail call ptr @build_method_type_directly(ptr noundef %78, ptr noundef %80, ptr noundef %71)
  br label %82

82:                                               ; preds = %68, %77
  %83 = phi ptr [ %81, %77 ], [ null, %68 ]
  %84 = getelementptr inbounds %struct.tree_type, ptr %51, i64 0, i32 19
  store ptr %83, ptr %84, align 8, !tbaa !17
  br label %85

85:                                               ; preds = %82, %74
  %86 = getelementptr inbounds %struct.tree_type, ptr %51, i64 0, i32 2
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = icmp eq ptr %87, null
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  tail call void @layout_type(ptr noundef nonnull %51) #29
  br label %90

90:                                               ; preds = %89, %85
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #29
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #29
  ret ptr %51
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_method_type(ptr noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %1, align 8
  %4 = and i64 %3, 65535
  %5 = icmp eq i64 %4, 20
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 7401, ptr noundef nonnull @.str.219) #29
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = tail call ptr @build_method_type_directly(ptr noundef %0, ptr noundef %9, ptr noundef %11)
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_offset_type(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 5)
  %4 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 14
  store ptr %5, ptr %6, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %1, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 5
  %9 = tail call i32 @iterative_hash(ptr noundef nonnull %8, i64 noundef 4, i32 noundef 0) #29
  %10 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 5
  %11 = tail call i32 @iterative_hash(ptr noundef nonnull %10, i64 noundef 4, i32 noundef %9) #29
  %12 = tail call ptr @type_hash_canon(i32 noundef %11, ptr noundef %3)
  %13 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  tail call void @layout_type(ptr noundef nonnull %12) #29
  br label %17

17:                                               ; preds = %16, %2
  %18 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 19
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, %12
  br i1 %20, label %21, label %38

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = icmp eq ptr %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 19
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = icmp eq ptr %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = load ptr, ptr %4, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.tree_type, ptr %30, i64 0, i32 19
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, %0
  %34 = icmp eq ptr %27, %1
  %35 = and i1 %34, %33
  br i1 %35, label %38, label %39

36:                                               ; preds = %21, %25, %39
  %37 = phi ptr [ %40, %39 ], [ null, %25 ], [ null, %21 ]
  store ptr %37, ptr %18, align 8, !tbaa !17
  br label %38

38:                                               ; preds = %36, %17, %29
  ret ptr %12

39:                                               ; preds = %29
  %40 = tail call ptr @build_offset_type(ptr noundef %32, ptr noundef nonnull %27)
  br label %36
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @excess_precision_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i32, ptr @flag_excess_precision, align 4, !tbaa !17
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %159, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @ix86_fpmath, align 4, !tbaa !17
  %6 = and i32 %5, 3
  %7 = icmp eq i32 %6, 3
  %8 = and i32 %5, 2
  %9 = xor i32 %8, 2
  %10 = select i1 %7, i32 -1, i32 %9
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %159 [
    i16 9, label %13
    i16 13, label %81
  ]

13:                                               ; preds = %4
  switch i32 %10, label %157 [
    i32 1, label %14
    i32 2, label %34
  ]

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %16 = load i32, ptr %15, align 4
  %17 = lshr i32 %16, 16
  %18 = and i32 %17, 255
  %19 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %20 = load i64, ptr %19, align 8
  %21 = and i64 %20, 65535
  %22 = icmp eq i64 %21, 14
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = tail call i32 @vector_type_mode(ptr noundef nonnull %19) #29
  br label %30

25:                                               ; preds = %14
  %26 = getelementptr inbounds %struct.tree_type, ptr %19, i64 0, i32 6
  %27 = load i32, ptr %26, align 4
  %28 = lshr i32 %27, 16
  %29 = and i32 %28, 255
  br label %30

30:                                               ; preds = %25, %23
  %31 = phi i32 [ %24, %23 ], [ %29, %25 ]
  %32 = icmp eq i32 %18, %31
  %33 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16
  br i1 %32, label %160, label %159

34:                                               ; preds = %13
  %35 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  %39 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %40 = load i64, ptr %39, align 8
  %41 = and i64 %40, 65535
  %42 = icmp eq i64 %41, 14
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = tail call i32 @vector_type_mode(ptr noundef nonnull %39) #29
  br label %50

45:                                               ; preds = %34
  %46 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 6
  %47 = load i32, ptr %46, align 4
  %48 = lshr i32 %47, 16
  %49 = and i32 %48, 255
  br label %50

50:                                               ; preds = %45, %43
  %51 = phi i32 [ %44, %43 ], [ %49, %45 ]
  %52 = icmp eq i32 %38, %51
  br i1 %52, label %79, label %53

53:                                               ; preds = %50
  %54 = load i64, ptr %0, align 8
  %55 = and i64 %54, 65535
  %56 = icmp eq i64 %55, 14
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29
  br label %63

59:                                               ; preds = %53
  %60 = load i32, ptr %35, align 4
  %61 = lshr i32 %60, 16
  %62 = and i32 %61, 255
  br label %63

63:                                               ; preds = %59, %57
  %64 = phi i32 [ %58, %57 ], [ %62, %59 ]
  %65 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  %66 = load i64, ptr %65, align 8
  %67 = and i64 %66, 65535
  %68 = icmp eq i64 %67, 14
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i32 @vector_type_mode(ptr noundef nonnull %65) #29
  br label %76

71:                                               ; preds = %63
  %72 = getelementptr inbounds %struct.tree_type, ptr %65, i64 0, i32 6
  %73 = load i32, ptr %72, align 4
  %74 = lshr i32 %73, 16
  %75 = and i32 %74, 255
  br label %76

76:                                               ; preds = %71, %69
  %77 = phi i32 [ %70, %69 ], [ %75, %71 ]
  %78 = icmp eq i32 %64, %77
  br i1 %78, label %79, label %159

79:                                               ; preds = %76, %50
  %80 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  br label %160

81:                                               ; preds = %4
  %82 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = load i64, ptr %83, align 8
  %85 = and i64 %84, 65535
  %86 = icmp eq i64 %85, 9
  br i1 %86, label %87, label %160

87:                                               ; preds = %81
  switch i32 %10, label %157 [
    i32 1, label %88
    i32 2, label %104
  ]

88:                                               ; preds = %87
  %89 = getelementptr inbounds %struct.tree_type, ptr %83, i64 0, i32 6
  %90 = load i32, ptr %89, align 4
  %91 = lshr i32 %90, 16
  %92 = and i32 %91, 255
  %93 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %94 = load i64, ptr %93, align 8
  %95 = and i64 %94, 65535
  %96 = icmp eq i64 %95, 14
  br i1 %96, label %97, label %99

97:                                               ; preds = %88
  %98 = tail call i32 @vector_type_mode(ptr noundef nonnull %93) #29
  br label %153

99:                                               ; preds = %88
  %100 = getelementptr inbounds %struct.tree_type, ptr %93, i64 0, i32 6
  %101 = load i32, ptr %100, align 4
  %102 = lshr i32 %101, 16
  %103 = and i32 %102, 255
  br label %153

104:                                              ; preds = %87
  %105 = getelementptr inbounds %struct.tree_type, ptr %83, i64 0, i32 6
  %106 = load i32, ptr %105, align 4
  %107 = lshr i32 %106, 16
  %108 = and i32 %107, 255
  %109 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %110 = load i64, ptr %109, align 8
  %111 = and i64 %110, 65535
  %112 = icmp eq i64 %111, 14
  br i1 %112, label %113, label %115

113:                                              ; preds = %104
  %114 = tail call i32 @vector_type_mode(ptr noundef nonnull %109) #29
  br label %120

115:                                              ; preds = %104
  %116 = getelementptr inbounds %struct.tree_type, ptr %109, i64 0, i32 6
  %117 = load i32, ptr %116, align 4
  %118 = lshr i32 %117, 16
  %119 = and i32 %118, 255
  br label %120

120:                                              ; preds = %115, %113
  %121 = phi i32 [ %114, %113 ], [ %119, %115 ]
  %122 = icmp eq i32 %108, %121
  br i1 %122, label %151, label %123

123:                                              ; preds = %120
  %124 = load ptr, ptr %82, align 8, !tbaa !17
  %125 = load i64, ptr %124, align 8
  %126 = and i64 %125, 65535
  %127 = icmp eq i64 %126, 14
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  %129 = tail call i32 @vector_type_mode(ptr noundef nonnull %124) #29
  br label %135

130:                                              ; preds = %123
  %131 = getelementptr inbounds %struct.tree_type, ptr %124, i64 0, i32 6
  %132 = load i32, ptr %131, align 4
  %133 = lshr i32 %132, 16
  %134 = and i32 %133, 255
  br label %135

135:                                              ; preds = %130, %128
  %136 = phi i32 [ %129, %128 ], [ %134, %130 ]
  %137 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  %138 = load i64, ptr %137, align 8
  %139 = and i64 %138, 65535
  %140 = icmp eq i64 %139, 14
  br i1 %140, label %141, label %143

141:                                              ; preds = %135
  %142 = tail call i32 @vector_type_mode(ptr noundef nonnull %137) #29
  br label %148

143:                                              ; preds = %135
  %144 = getelementptr inbounds %struct.tree_type, ptr %137, i64 0, i32 6
  %145 = load i32, ptr %144, align 4
  %146 = lshr i32 %145, 16
  %147 = and i32 %146, 255
  br label %148

148:                                              ; preds = %143, %141
  %149 = phi i32 [ %142, %141 ], [ %147, %143 ]
  %150 = icmp eq i32 %136, %149
  br i1 %150, label %151, label %159

151:                                              ; preds = %148, %120
  %152 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 30), align 16, !tbaa !6
  br label %160

153:                                              ; preds = %97, %99
  %154 = phi i32 [ %98, %97 ], [ %103, %99 ]
  %155 = icmp eq i32 %92, %154
  %156 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 29), align 8
  br i1 %155, label %160, label %159

157:                                              ; preds = %87, %13
  %158 = phi i32 [ 7543, %13 ], [ 7562, %87 ]
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef %158, ptr noundef nonnull @.str.219) #29
  br label %159

159:                                              ; preds = %157, %30, %76, %148, %4, %153, %1
  br label %160

160:                                              ; preds = %30, %81, %79, %151, %153, %159
  %161 = phi ptr [ %156, %153 ], [ null, %159 ], [ null, %81 ], [ %80, %79 ], [ %152, %151 ], [ %33, %30 ]
  ret ptr %161
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @get_unwidened(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = icmp eq ptr %1, null
  %6 = select i1 %5, ptr %4, ptr %1
  %7 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 6
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 1023
  %10 = icmp eq ptr %4, %1
  %11 = select i1 %5, i1 true, i1 %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 6
  %14 = load i32, ptr %13, align 4
  %15 = and i32 %14, 1023
  %16 = icmp ugt i32 %9, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = load i64, ptr %4, align 8
  %19 = trunc i64 %18 to i32
  %20 = lshr i32 %19, 21
  %21 = and i32 %20, 1
  br label %22

22:                                               ; preds = %17, %12, %2
  %23 = phi i32 [ %21, %17 ], [ 0, %2 ], [ 0, %12 ]
  br label %24

24:                                               ; preds = %63, %22
  %25 = phi i32 [ %23, %22 ], [ %64, %63 ]
  %26 = phi ptr [ %0, %22 ], [ %65, %63 ]
  %27 = phi ptr [ %0, %22 ], [ %34, %63 ]
  br label %28

28:                                               ; preds = %24, %53
  %29 = phi ptr [ %34, %53 ], [ %27, %24 ]
  %30 = load i64, ptr %29, align 8
  %31 = trunc i64 %30 to i16
  switch i16 %31, label %72 [
    i16 116, label %32
    i16 113, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %struct.tree_exp, ptr %29, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.tree_common, ptr %34, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = load i64, ptr %36, align 8
  %38 = and i64 %37, 65535
  %39 = icmp eq i64 %38, 14
  br i1 %39, label %72, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.tree_common, ptr %29, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.tree_type, ptr %42, i64 0, i32 6
  %44 = load i32, ptr %43, align 4
  %45 = and i32 %44, 1023
  %46 = getelementptr inbounds %struct.tree_type, ptr %36, i64 0, i32 6
  %47 = load i32, ptr %46, align 4
  %48 = and i32 %47, 1023
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = icmp ugt i32 %9, %45
  %52 = select i1 %50, i1 %51, i1 false
  br i1 %52, label %72, label %53

53:                                               ; preds = %40
  %54 = icmp sgt i32 %49, 0
  br i1 %54, label %55, label %28

55:                                               ; preds = %53
  %56 = icmp eq i32 %25, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = icmp ugt i32 %9, %48
  %59 = select i1 %58, ptr %26, ptr %34
  br label %66

60:                                               ; preds = %55
  %61 = load i64, ptr %34, align 8
  %62 = trunc i64 %61 to i16
  switch i16 %62, label %63 [
    i16 116, label %66
    i16 113, label %66
  ]

63:                                               ; preds = %60, %66
  %64 = phi i32 [ %70, %66 ], [ 0, %60 ]
  %65 = phi ptr [ %71, %66 ], [ %34, %60 ]
  br label %24

66:                                               ; preds = %57, %60, %60
  %67 = phi ptr [ %34, %60 ], [ %34, %60 ], [ %59, %57 ]
  %68 = and i64 %37, 2097152
  %69 = icmp eq i64 %68, 0
  %70 = select i1 %69, i32 %25, i32 1
  %71 = select i1 %69, ptr %67, ptr %34
  br label %63

72:                                               ; preds = %40, %32, %28
  br i1 %5, label %86, label %73

73:                                               ; preds = %72
  %74 = load i64, ptr %26, align 8
  %75 = and i64 %74, 65535
  %76 = icmp eq i64 %75, 23
  br i1 %76, label %77, label %86

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.tree_common, ptr %26, i64 0, i32 2
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = icmp eq ptr %79, %1
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = tail call i32 @int_fits_type_p(ptr noundef nonnull %26, ptr noundef nonnull %1)
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %26) #29
  br label %86

86:                                               ; preds = %84, %81, %77, %73, %72
  %87 = phi ptr [ %85, %84 ], [ %26, %81 ], [ %26, %77 ], [ %26, %73 ], [ %26, %72 ]
  ret ptr %87
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @int_fits_type_p(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca %struct.double_int, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #29
  %4 = tail call { i64, i64 } @tree_to_double_int(ptr noundef %0) #29
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  store i64 %5, ptr %3, align 8, !tbaa.struct !251
  %7 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %6, ptr %7, align 8, !tbaa.struct !252
  %8 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = load i64, ptr %9, align 8
  %11 = lshr i64 %10, 21
  %12 = trunc i64 %11 to i8
  %13 = and i8 %12, 1
  %14 = and i64 %10, 65535
  %15 = icmp eq i64 %14, 8
  br i1 %15, label %16, label %28

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.tree_type, ptr %9, i64 0, i32 6
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, 1024
  %20 = icmp ne i32 %19, 0
  %21 = icmp ne i8 %13, 0
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = and i32 %18, 1023
  %25 = tail call { i64, i64 } @double_int_zext(i64 %5, i64 %6, i32 noundef %24) #29
  %26 = extractvalue { i64, i64 } %25, 0
  %27 = extractvalue { i64, i64 } %25, 1
  store i64 %26, ptr %3, align 8, !tbaa.struct !251
  store i64 %27, ptr %7, align 8, !tbaa.struct !252
  br label %28

28:                                               ; preds = %23, %16, %2
  %29 = phi i64 [ %27, %23 ], [ %6, %16 ], [ %6, %2 ]
  %30 = phi i64 [ %26, %23 ], [ %5, %16 ], [ %5, %2 ]
  %31 = zext i8 %13 to i32
  %32 = icmp eq i8 %13, 0
  %33 = icmp ne i8 %13, 0
  br label %34

34:                                               ; preds = %200, %28
  %35 = phi ptr [ %1, %28 ], [ %198, %200 ]
  %36 = getelementptr inbounds %struct.tree_type, ptr %35, i64 0, i32 13
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = getelementptr inbounds %struct.tree_type, ptr %35, i64 0, i32 14
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = icmp eq ptr %37, null
  br i1 %40, label %88, label %41

41:                                               ; preds = %34
  %42 = load i64, ptr %37, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 23
  br i1 %44, label %45, label %88

45:                                               ; preds = %41
  %46 = tail call { i64, i64 } @tree_to_double_int(ptr noundef nonnull %37) #29
  %47 = extractvalue { i64, i64 } %46, 0
  %48 = extractvalue { i64, i64 } %46, 1
  %49 = load i64, ptr %35, align 8
  %50 = and i64 %49, 65535
  %51 = icmp eq i64 %50, 8
  br i1 %51, label %52, label %65

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.tree_type, ptr %35, i64 0, i32 6
  %54 = load i32, ptr %53, align 4
  %55 = and i32 %54, 1024
  %56 = icmp eq i32 %55, 0
  %57 = and i64 %49, 2097152
  %58 = icmp eq i64 %57, 0
  %59 = or i1 %58, %56
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = and i32 %54, 1023
  %62 = tail call { i64, i64 } @double_int_zext(i64 %47, i64 %48, i32 noundef %61) #29
  %63 = extractvalue { i64, i64 } %62, 0
  %64 = extractvalue { i64, i64 } %62, 1
  br label %65

65:                                               ; preds = %60, %52, %45
  %66 = phi i64 [ %63, %60 ], [ %47, %52 ], [ %47, %45 ]
  %67 = phi i64 [ %64, %60 ], [ %48, %52 ], [ %48, %45 ]
  %68 = getelementptr inbounds %struct.tree_common, ptr %37, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = load i64, ptr %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = lshr i32 %71, 21
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, %31
  br i1 %74, label %85, label %75

75:                                               ; preds = %65
  br i1 %32, label %76, label %79

76:                                               ; preds = %75
  %77 = tail call zeroext i8 @double_int_negative_p(i64 %30, i64 %29) #29
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %214

79:                                               ; preds = %75
  %80 = tail call zeroext i8 @double_int_negative_p(i64 %66, i64 %67) #29
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %76, %79
  %83 = tail call i32 @double_int_ucmp(i64 %30, i64 %29, i64 %66, i64 %67) #29
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %214, label %88

85:                                               ; preds = %65
  %86 = tail call i32 @double_int_cmp(i64 %30, i64 %29, i64 %66, i64 %67, i8 noundef zeroext %13) #29
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %214, label %88

88:                                               ; preds = %82, %79, %34, %41, %85
  %89 = phi i1 [ true, %85 ], [ false, %41 ], [ false, %34 ], [ true, %79 ], [ true, %82 ]
  %90 = icmp eq ptr %39, null
  br i1 %90, label %141, label %91

91:                                               ; preds = %88
  %92 = load i64, ptr %39, align 8
  %93 = and i64 %92, 65535
  %94 = icmp eq i64 %93, 23
  br i1 %94, label %95, label %141

95:                                               ; preds = %91
  %96 = tail call { i64, i64 } @tree_to_double_int(ptr noundef nonnull %39) #29
  %97 = extractvalue { i64, i64 } %96, 0
  %98 = extractvalue { i64, i64 } %96, 1
  %99 = load i64, ptr %35, align 8
  %100 = and i64 %99, 65535
  %101 = icmp eq i64 %100, 8
  br i1 %101, label %102, label %115

102:                                              ; preds = %95
  %103 = getelementptr inbounds %struct.tree_type, ptr %35, i64 0, i32 6
  %104 = load i32, ptr %103, align 4
  %105 = and i32 %104, 1024
  %106 = icmp eq i32 %105, 0
  %107 = and i64 %99, 2097152
  %108 = icmp eq i64 %107, 0
  %109 = or i1 %108, %106
  br i1 %109, label %115, label %110

110:                                              ; preds = %102
  %111 = and i32 %104, 1023
  %112 = tail call { i64, i64 } @double_int_zext(i64 %97, i64 %98, i32 noundef %111) #29
  %113 = extractvalue { i64, i64 } %112, 0
  %114 = extractvalue { i64, i64 } %112, 1
  br label %115

115:                                              ; preds = %110, %102, %95
  %116 = phi i64 [ %113, %110 ], [ %97, %102 ], [ %97, %95 ]
  %117 = phi i64 [ %114, %110 ], [ %98, %102 ], [ %98, %95 ]
  %118 = getelementptr inbounds %struct.tree_common, ptr %39, i64 0, i32 2
  %119 = load ptr, ptr %118, align 8, !tbaa !17
  %120 = load i64, ptr %119, align 8
  %121 = trunc i64 %120 to i32
  %122 = lshr i32 %121, 21
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, %31
  br i1 %124, label %136, label %125

125:                                              ; preds = %115
  br i1 %32, label %129, label %126

126:                                              ; preds = %125
  %127 = tail call zeroext i8 @double_int_negative_p(i64 %116, i64 %117) #29
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %132, label %214

129:                                              ; preds = %125
  %130 = tail call zeroext i8 @double_int_negative_p(i64 %30, i64 %29) #29
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %140

132:                                              ; preds = %126, %129
  %133 = tail call i32 @double_int_ucmp(i64 %30, i64 %29, i64 %116, i64 %117) #29
  %134 = icmp sgt i32 %133, 0
  %135 = or i1 %89, %134
  br i1 %135, label %210, label %141

136:                                              ; preds = %115
  %137 = tail call i32 @double_int_cmp(i64 %30, i64 %29, i64 %116, i64 %117, i8 noundef zeroext %13) #29
  %138 = icmp sgt i32 %137, 0
  %139 = or i1 %89, %138
  br i1 %139, label %212, label %141

140:                                              ; preds = %129
  br i1 %89, label %214, label %141

141:                                              ; preds = %136, %132, %88, %91, %140
  %142 = load i64, ptr %35, align 8
  %143 = and i64 %142, 2097152
  %144 = icmp eq i64 %143, 0
  %145 = or i1 %33, %144
  br i1 %145, label %149, label %146

146:                                              ; preds = %141
  %147 = tail call zeroext i8 @double_int_negative_p(i64 %30, i64 %29) #29
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %214

149:                                              ; preds = %146, %141
  %150 = getelementptr inbounds %struct.tree_type, ptr %35, i64 0, i32 6
  %151 = load i32, ptr %150, align 4
  %152 = and i32 %151, 1023
  %153 = load ptr, ptr %8, align 8, !tbaa !17
  %154 = getelementptr inbounds %struct.tree_type, ptr %153, i64 0, i32 6
  %155 = load i32, ptr %154, align 4
  %156 = and i32 %155, 1023
  %157 = icmp ugt i32 %152, %156
  br i1 %157, label %214, label %158

158:                                              ; preds = %149
  %159 = load i64, ptr %35, align 8
  %160 = and i64 %159, 2097152
  %161 = icmp eq i64 %160, 0
  %162 = and i1 %33, %161
  br i1 %162, label %163, label %192

163:                                              ; preds = %158
  %164 = load i64, ptr %153, align 8
  %165 = and i64 %164, 65535
  %166 = icmp eq i64 %165, 14
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  %168 = tail call i32 @vector_type_mode(ptr noundef nonnull %153) #29
  br label %172

169:                                              ; preds = %163
  %170 = lshr i32 %155, 16
  %171 = and i32 %170, 255
  br label %172

172:                                              ; preds = %169, %167
  %173 = phi i32 [ %168, %167 ], [ %171, %169 ]
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !17
  %177 = zext i8 %176 to i32
  %178 = shl nuw nsw i32 %177, 3
  %179 = icmp ult i8 %176, 9
  br i1 %179, label %180, label %186

180:                                              ; preds = %172
  %181 = add nsw i32 %178, -1
  %182 = zext i32 %181 to i64
  %183 = shl nuw i64 1, %182
  %184 = and i64 %30, %183
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %192, label %214

186:                                              ; preds = %172
  %187 = add nsw i32 %178, -65
  %188 = zext i32 %187 to i64
  %189 = shl nuw i64 1, %188
  %190 = and i64 %29, %189
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %214

192:                                              ; preds = %180, %186, %158
  %193 = load i64, ptr %35, align 8
  %194 = and i64 %193, 65535
  %195 = icmp eq i64 %194, 8
  br i1 %195, label %196, label %207

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.tree_common, ptr %35, i64 0, i32 2
  %198 = load ptr, ptr %197, align 8, !tbaa !17
  %199 = icmp eq ptr %198, null
  br i1 %199, label %207, label %200

200:                                              ; preds = %196
  %201 = load i32, ptr %150, align 4
  %202 = getelementptr inbounds %struct.tree_type, ptr %198, i64 0, i32 6
  %203 = load i32, ptr %202, align 4
  %204 = xor i32 %203, %201
  %205 = and i32 %204, 1023
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %34, label %207

207:                                              ; preds = %200, %196, %192
  %208 = call i32 @fit_double_type(i64 noundef %30, i64 noundef %29, ptr noundef nonnull %3, ptr noundef nonnull %7, ptr noundef nonnull %35) #29
  %209 = icmp eq i32 %208, 0
  br label %214

210:                                              ; preds = %132
  %211 = xor i1 %134, true
  br label %214

212:                                              ; preds = %136
  %213 = xor i1 %138, true
  br label %214

214:                                              ; preds = %82, %76, %85, %126, %140, %146, %149, %186, %180, %210, %212, %207
  %215 = phi i1 [ %209, %207 ], [ %211, %210 ], [ %213, %212 ], [ false, %82 ], [ false, %76 ], [ false, %85 ], [ false, %126 ], [ true, %140 ], [ false, %146 ], [ true, %149 ], [ false, %186 ], [ false, %180 ]
  %216 = zext i1 %215 to i32
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #29
  ret i32 %216
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @get_narrower(ptr noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = load i64, ptr %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 65535
  %8 = add nsw i32 %7, -6
  %9 = icmp ult i32 %8, 3
  %10 = load i64, ptr %0, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 116
  br i1 %12, label %13, label %86

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 6
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 1023
  %17 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 6
  %22 = load i32, ptr %21, align 4
  %23 = and i32 %22, 1023
  %24 = icmp uge i32 %16, %23
  br i1 %24, label %25, label %81

25:                                               ; preds = %13
  %26 = icmp eq i32 %16, %23
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = load i64, ptr %20, align 8
  %29 = trunc i64 %28 to i32
  %30 = lshr i32 %29, 21
  %31 = and i32 %30, 1
  br label %41

32:                                               ; preds = %25
  %33 = lshr i32 %6, 21
  %34 = and i32 %33, 1
  %35 = load i64, ptr %20, align 8
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 65535
  %38 = add nsw i32 %37, -6
  %39 = icmp ult i32 %38, 3
  %40 = xor i1 %9, %39
  br i1 %40, label %43, label %41, !llvm.loop !253

41:                                               ; preds = %32, %27
  %42 = phi i32 [ %34, %32 ], [ %31, %27 ]
  br label %43

43:                                               ; preds = %41, %32
  %44 = phi ptr [ %18, %41 ], [ %0, %32 ]
  %45 = phi i32 [ %42, %41 ], [ %34, %32 ]
  %46 = load i64, ptr %18, align 8
  %47 = and i64 %46, 65535
  %48 = icmp eq i64 %47, 116
  br i1 %48, label %49, label %81

49:                                               ; preds = %43, %76
  %50 = phi i32 [ %59, %76 ], [ %22, %43 ]
  %51 = phi ptr [ %55, %76 ], [ %18, %43 ]
  %52 = phi ptr [ %77, %76 ], [ %44, %43 ]
  %53 = and i32 %50, 1023
  %54 = getelementptr inbounds %struct.tree_exp, ptr %51, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = getelementptr inbounds %struct.tree_common, ptr %55, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.tree_type, ptr %57, i64 0, i32 6
  %59 = load i32, ptr %58, align 4
  %60 = and i32 %59, 1023
  %61 = icmp ult i32 %53, %60
  br i1 %61, label %81, label %62

62:                                               ; preds = %49
  %63 = icmp eq i32 %53, %60
  %64 = load i64, ptr %57, align 8
  %65 = trunc i64 %64 to i32
  br i1 %63, label %70, label %66

66:                                               ; preds = %62
  %67 = lshr i32 %65, 21
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %45, %68
  br i1 %69, label %75, label %81

70:                                               ; preds = %62
  %71 = and i32 %65, 65535
  %72 = add nsw i32 %71, -6
  %73 = icmp ult i32 %72, 3
  %74 = xor i1 %9, %73
  br i1 %74, label %76, label %75, !llvm.loop !253

75:                                               ; preds = %66, %70
  br label %76

76:                                               ; preds = %70, %75
  %77 = phi ptr [ %55, %75 ], [ %52, %70 ]
  %78 = load i64, ptr %55, align 8
  %79 = and i64 %78, 65535
  %80 = icmp eq i64 %79, 116
  br i1 %80, label %49, label %81, !llvm.loop !254

81:                                               ; preds = %66, %49, %76, %43, %13
  %82 = phi ptr [ %0, %13 ], [ %44, %43 ], [ %77, %76 ], [ %52, %49 ], [ %52, %66 ]
  %83 = phi i32 [ 0, %13 ], [ %45, %43 ], [ %45, %76 ], [ %45, %49 ], [ %45, %66 ]
  %84 = phi ptr [ %0, %13 ], [ %18, %43 ], [ %55, %76 ], [ %51, %49 ], [ %55, %66 ]
  %85 = load i64, ptr %84, align 8
  br label %86

86:                                               ; preds = %81, %2
  %87 = phi i64 [ %10, %2 ], [ %85, %81 ]
  %88 = phi ptr [ %0, %2 ], [ %82, %81 ]
  %89 = phi i1 [ false, %2 ], [ %24, %81 ]
  %90 = phi i32 [ 0, %2 ], [ %83, %81 ]
  %91 = phi ptr [ %0, %2 ], [ %84, %81 ]
  %92 = and i64 %87, 65535
  %93 = icmp eq i64 %92, 41
  br i1 %93, label %94, label %162

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct.tree_common, ptr %91, i64 0, i32 2
  %96 = load ptr, ptr %95, align 8, !tbaa !17
  %97 = load i64, ptr %96, align 8
  %98 = trunc i64 %97 to i16
  switch i16 %98, label %99 [
    i16 9, label %162
    i16 11, label %162
  ]

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.tree_exp, ptr %91, i64 1
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = getelementptr inbounds %struct.tree_decl_common, ptr %101, i64 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = icmp eq ptr %103, null
  br i1 %104, label %162, label %105

105:                                              ; preds = %99
  %106 = load i64, ptr %103, align 8
  %107 = and i64 %106, 65535
  %108 = icmp eq i64 %107, 23
  br i1 %108, label %109, label %162

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.tree_int_cst, ptr %103, i64 0, i32 1, i32 1
  %111 = load i64, ptr %110, align 8, !tbaa !17
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %162

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.tree_int_cst, ptr %103, i64 0, i32 1
  %115 = load i64, ptr %114, align 8, !tbaa !17
  %116 = load i64, ptr %101, align 8
  %117 = and i64 %116, 2097152
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %126

119:                                              ; preds = %113
  %120 = getelementptr inbounds %struct.tree_common, ptr %101, i64 0, i32 2
  %121 = load ptr, ptr %120, align 8, !tbaa !17
  %122 = load i64, ptr %121, align 8
  %123 = trunc i64 %122 to i32
  %124 = lshr i32 %123, 21
  %125 = and i32 %124, 1
  br label %126

126:                                              ; preds = %119, %113
  %127 = phi i32 [ 1, %113 ], [ %125, %119 ]
  %128 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !256
  %129 = trunc i64 %115 to i32
  %130 = tail call ptr %128(i32 noundef %129, i32 noundef %127) #29
  %131 = load ptr, ptr %95, align 8, !tbaa !17
  %132 = getelementptr inbounds %struct.tree_type, ptr %131, i64 0, i32 6
  %133 = load i32, ptr %132, align 4
  %134 = and i32 %133, 1023
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %115, %135
  br i1 %136, label %137, label %162

137:                                              ; preds = %126
  %138 = load ptr, ptr %100, align 8, !tbaa !17
  %139 = getelementptr inbounds %struct.tree_decl_common, ptr %138, i64 0, i32 2
  %140 = load i64, ptr %139, align 8
  %141 = and i64 %140, 33554432
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %162

143:                                              ; preds = %137
  br i1 %89, label %144, label %152

144:                                              ; preds = %143
  %145 = load i64, ptr %138, align 8
  %146 = trunc i64 %145 to i32
  %147 = lshr i32 %146, 21
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %90, %148
  %150 = icmp ne ptr %130, null
  %151 = select i1 %149, i1 %150, i1 false
  br i1 %151, label %159, label %162

152:                                              ; preds = %143
  %153 = icmp eq ptr %130, null
  br i1 %153, label %162, label %154

154:                                              ; preds = %152
  %155 = load i64, ptr %138, align 8
  %156 = trunc i64 %155 to i32
  %157 = lshr i32 %156, 21
  %158 = and i32 %157, 1
  br label %159

159:                                              ; preds = %144, %154
  %160 = phi i32 [ %158, %154 ], [ %90, %144 ]
  %161 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef nonnull %130, ptr noundef nonnull %91) #29
  br label %162

162:                                              ; preds = %109, %105, %126, %137, %144, %152, %159, %94, %94, %99, %86
  %163 = phi ptr [ %88, %99 ], [ %88, %94 ], [ %88, %86 ], [ %88, %94 ], [ %88, %137 ], [ %161, %159 ], [ %88, %152 ], [ %88, %144 ], [ %88, %126 ], [ %88, %105 ], [ %88, %109 ]
  %164 = phi i32 [ %90, %99 ], [ %90, %94 ], [ %90, %86 ], [ %90, %94 ], [ %90, %137 ], [ %160, %159 ], [ %90, %152 ], [ %90, %144 ], [ %90, %126 ], [ %90, %105 ], [ %90, %109 ]
  store i32 %164, ptr %1, align 4, !tbaa !21
  ret ptr %163
}

declare { i64, i64 } @tree_to_double_int(ptr noundef) local_unnamed_addr #3

declare { i64, i64 } @double_int_zext(i64, i64, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @double_int_negative_p(i64, i64) local_unnamed_addr #3

declare i32 @double_int_ucmp(i64, i64, i64, i64) local_unnamed_addr #3

declare i32 @double_int_cmp(i64, i64, i64, i64, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @get_type_static_bounds(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = load i64, ptr %0, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %6 [
    i16 10, label %22
    i16 12, label %22
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 13
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = load i64, ptr %8, align 8
  %12 = and i64 %11, 65535
  %13 = icmp eq i64 %12, 23
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = tail call { i64, i64 } @tree_to_double_int(ptr noundef nonnull %8) #29
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = load i64, ptr %0, align 8
  %19 = lshr i64 %18, 21
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  tail call void @mpz_set_double_int(ptr noundef %1, i64 %16, i64 %17, i8 noundef zeroext %21) #29
  br label %42

22:                                               ; preds = %3, %3, %10, %6
  %23 = and i64 %4, 2097152
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @mpz_set_ui(ptr noundef %1, i64 noundef 0) #29
  br label %42

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, 1023
  %30 = add nsw i32 %29, -1
  %31 = tail call { i64, i64 } @double_int_mask(i32 noundef %30) #29
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = extractvalue { i64, i64 } %31, 1
  %34 = tail call { i64, i64 } @double_int_add(i64 %32, i64 %33, i64 1, i64 0) #29
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  %37 = load i32, ptr %27, align 4
  %38 = and i32 %37, 1023
  %39 = tail call { i64, i64 } @double_int_sext(i64 %35, i64 %36, i32 noundef %38) #29
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  tail call void @mpz_set_double_int(ptr noundef %1, i64 %40, i64 %41, i8 noundef zeroext 0) #29
  br label %42

42:                                               ; preds = %25, %26, %14
  %43 = load i64, ptr %0, align 8
  %44 = trunc i64 %43 to i16
  switch i16 %44, label %45 [
    i16 10, label %61
    i16 12, label %61
  ]

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = icmp eq ptr %47, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %45
  %50 = load i64, ptr %47, align 8
  %51 = and i64 %50, 65535
  %52 = icmp eq i64 %51, 23
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = tail call { i64, i64 } @tree_to_double_int(ptr noundef nonnull %47) #29
  %55 = extractvalue { i64, i64 } %54, 0
  %56 = extractvalue { i64, i64 } %54, 1
  %57 = load i64, ptr %0, align 8
  %58 = lshr i64 %57, 21
  %59 = trunc i64 %58 to i8
  %60 = and i8 %59, 1
  tail call void @mpz_set_double_int(ptr noundef %2, i64 %55, i64 %56, i8 noundef zeroext %60) #29
  br label %76

61:                                               ; preds = %42, %42, %49, %45
  %62 = and i64 %43, 2097152
  %63 = icmp eq i64 %62, 0
  %64 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %65 = load i32, ptr %64, align 4
  %66 = and i32 %65, 1023
  br i1 %63, label %71, label %67

67:                                               ; preds = %61
  %68 = tail call { i64, i64 } @double_int_mask(i32 noundef %66) #29
  %69 = extractvalue { i64, i64 } %68, 0
  %70 = extractvalue { i64, i64 } %68, 1
  tail call void @mpz_set_double_int(ptr noundef %2, i64 %69, i64 %70, i8 noundef zeroext 1) #29
  br label %76

71:                                               ; preds = %61
  %72 = add nsw i32 %66, -1
  %73 = tail call { i64, i64 } @double_int_mask(i32 noundef %72) #29
  %74 = extractvalue { i64, i64 } %73, 0
  %75 = extractvalue { i64, i64 } %73, 1
  tail call void @mpz_set_double_int(ptr noundef %2, i64 %74, i64 %75, i8 noundef zeroext 1) #29
  br label %76

76:                                               ; preds = %67, %71, %53
  ret void
}

declare void @mpz_set_double_int(ptr noundef, i64, i64, i8 noundef zeroext) local_unnamed_addr #3

declare void @mpz_set_ui(ptr noundef, i64 noundef) local_unnamed_addr #3

declare { i64, i64 } @double_int_mask(i32 noundef) local_unnamed_addr #3

declare { i64, i64 } @double_int_sext(i64, i64, i32 noundef) local_unnamed_addr #3

declare { i64, i64 } @double_int_add(i64, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local zeroext i8 @auto_var_in_fn_p(ptr nocapture noundef readonly %0, ptr noundef readnone %1) local_unnamed_addr #10 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = add nsw i64 %4, -29
  %6 = icmp ult i64 %5, 12
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, %1
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = trunc i64 %3 to i16
  switch i16 %12, label %16 [
    i16 32, label %13
    i16 34, label %13
    i16 30, label %19
  ]

13:                                               ; preds = %11, %11
  %14 = and i64 %3, 67108864
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %11, %13
  %17 = icmp eq i64 %4, 36
  %18 = zext i1 %17 to i8
  br label %19

19:                                               ; preds = %11, %13, %16, %7, %2
  %20 = phi i8 [ 0, %7 ], [ 0, %2 ], [ 1, %13 ], [ %18, %16 ], [ 1, %11 ]
  ret i8 %20
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @variably_modified_type_p(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = load ptr, ptr @global_trees, align 16
  %14 = icmp eq ptr %13, %0
  br i1 %14, label %232, label %15

15:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %16 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  store ptr %17, ptr %3, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  %19 = icmp eq ptr %17, %13
  %20 = or i1 %18, %19
  br i1 %20, label %32, label %21

21:                                               ; preds = %15
  %22 = load i64, ptr %17, align 8
  %23 = and i64 %22, 65535
  %24 = icmp eq i64 %23, 23
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = icmp eq ptr %1, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %25
  %28 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %3, ptr noundef nonnull %1)
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %39

30:                                               ; preds = %27
  %31 = load ptr, ptr @global_trees, align 16
  br label %32

32:                                               ; preds = %30, %21, %15
  %33 = phi ptr [ %31, %30 ], [ %13, %21 ], [ %13, %15 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #29
  %34 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  store ptr %35, ptr %4, align 8, !tbaa !6
  %36 = icmp eq ptr %35, null
  %37 = icmp eq ptr %35, %33
  %38 = select i1 %36, i1 true, i1 %37
  br i1 %38, label %49, label %40

39:                                               ; preds = %25, %27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  br label %232

40:                                               ; preds = %32
  %41 = load i64, ptr %35, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 23
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = icmp eq ptr %1, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %44
  %47 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %4, ptr noundef nonnull %1)
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %46, %40, %32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #29
  %50 = load i64, ptr %0, align 8
  %51 = trunc i64 %50 to i16
  switch i16 %51, label %229 [
    i16 10, label %53
    i16 12, label %53
    i16 14, label %53
    i16 20, label %58
    i16 21, label %58
    i16 8, label %63
    i16 9, label %63
    i16 11, label %63
    i16 6, label %63
    i16 7, label %63
    i16 16, label %100
    i16 17, label %100
    i16 18, label %100
    i16 15, label %188
  ]

52:                                               ; preds = %44, %46
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #29
  br label %232

53:                                               ; preds = %49, %49, %49
  %54 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %55, ptr noundef %1)
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %229, label %232

58:                                               ; preds = %49, %49
  %59 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %60, ptr noundef %1)
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %229, label %232

63:                                               ; preds = %49, %49, %49, %49, %49
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #29
  %64 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 13
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  store ptr %65, ptr %5, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  %67 = load ptr, ptr @global_trees, align 16
  %68 = icmp eq ptr %65, %67
  %69 = select i1 %66, i1 true, i1 %68
  br i1 %69, label %81, label %70

70:                                               ; preds = %63
  %71 = load i64, ptr %65, align 8
  %72 = and i64 %71, 65535
  %73 = icmp eq i64 %72, 23
  br i1 %73, label %81, label %74

74:                                               ; preds = %70
  %75 = icmp eq ptr %1, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %74
  %77 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %5, ptr noundef nonnull %1)
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %88

79:                                               ; preds = %76
  %80 = load ptr, ptr @global_trees, align 16
  br label %81

81:                                               ; preds = %79, %70, %63
  %82 = phi ptr [ %80, %79 ], [ %67, %70 ], [ %67, %63 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #29
  %83 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %84 = load ptr, ptr %83, align 8, !tbaa !17
  store ptr %84, ptr %6, align 8, !tbaa !6
  %85 = icmp eq ptr %84, null
  %86 = icmp eq ptr %84, %82
  %87 = select i1 %85, i1 true, i1 %86
  br i1 %87, label %98, label %89

88:                                               ; preds = %74, %76
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #29
  br label %232

89:                                               ; preds = %81
  %90 = load i64, ptr %84, align 8
  %91 = and i64 %90, 65535
  %92 = icmp eq i64 %91, 23
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = icmp eq ptr %1, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %93
  %96 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %6, ptr noundef nonnull %1)
  %97 = icmp eq ptr %96, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %95, %89, %81
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #29
  br label %229

99:                                               ; preds = %93, %95
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #29
  br label %232

100:                                              ; preds = %49, %49, %49
  %101 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !17
  %103 = icmp eq ptr %102, null
  br i1 %103, label %229, label %104

104:                                              ; preds = %100
  %105 = icmp eq ptr %1, null
  br label %106

106:                                              ; preds = %104, %184
  %107 = phi ptr [ %102, %104 ], [ %186, %184 ]
  %108 = load i64, ptr %107, align 8
  %109 = and i64 %108, 65535
  %110 = icmp eq i64 %109, 31
  br i1 %110, label %111, label %184

111:                                              ; preds = %106
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #29
  %112 = getelementptr inbounds %struct.tree_field_decl, ptr %107, i64 0, i32 1
  %113 = load ptr, ptr %112, align 8, !tbaa !17
  store ptr %113, ptr %7, align 8, !tbaa !6
  %114 = icmp eq ptr %113, null
  %115 = load ptr, ptr @global_trees, align 16
  %116 = icmp eq ptr %113, %115
  %117 = select i1 %114, i1 true, i1 %116
  br i1 %117, label %128, label %118

118:                                              ; preds = %111
  %119 = load i64, ptr %113, align 8
  %120 = and i64 %119, 65535
  %121 = icmp eq i64 %120, 23
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  br i1 %105, label %135, label %123

123:                                              ; preds = %122
  %124 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %7, ptr noundef nonnull %1)
  %125 = icmp eq ptr %124, null
  br i1 %125, label %126, label %135

126:                                              ; preds = %123
  %127 = load ptr, ptr @global_trees, align 16
  br label %128

128:                                              ; preds = %126, %118, %111
  %129 = phi ptr [ %127, %126 ], [ %115, %118 ], [ %115, %111 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #29
  %130 = getelementptr inbounds %struct.tree_decl_common, ptr %107, i64 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !17
  store ptr %131, ptr %8, align 8, !tbaa !6
  %132 = icmp eq ptr %131, null
  %133 = icmp eq ptr %131, %129
  %134 = select i1 %132, i1 true, i1 %133
  br i1 %134, label %146, label %136

135:                                              ; preds = %122, %123
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #29
  br label %232

136:                                              ; preds = %128
  %137 = load i64, ptr %131, align 8
  %138 = and i64 %137, 65535
  %139 = icmp eq i64 %138, 23
  br i1 %139, label %146, label %140

140:                                              ; preds = %136
  br i1 %105, label %153, label %141

141:                                              ; preds = %140
  %142 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %8, ptr noundef nonnull %1)
  %143 = icmp eq ptr %142, null
  br i1 %143, label %144, label %153

144:                                              ; preds = %141
  %145 = load ptr, ptr @global_trees, align 16
  br label %146

146:                                              ; preds = %144, %136, %128
  %147 = phi ptr [ %145, %144 ], [ %129, %136 ], [ %129, %128 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #29
  %148 = getelementptr inbounds %struct.tree_decl_common, ptr %107, i64 0, i32 4
  %149 = load ptr, ptr %148, align 8, !tbaa !17
  store ptr %149, ptr %9, align 8, !tbaa !6
  %150 = icmp eq ptr %149, null
  %151 = icmp eq ptr %149, %147
  %152 = select i1 %150, i1 true, i1 %151
  br i1 %152, label %162, label %154

153:                                              ; preds = %140, %141
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #29
  br label %232

154:                                              ; preds = %146
  %155 = load i64, ptr %149, align 8
  %156 = and i64 %155, 65535
  %157 = icmp eq i64 %156, 23
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  br i1 %105, label %166, label %159

159:                                              ; preds = %158
  %160 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %9, ptr noundef nonnull %1)
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %166

162:                                              ; preds = %159, %154, %146
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #29
  %163 = load i64, ptr %0, align 8
  %164 = and i64 %163, 65535
  %165 = icmp eq i64 %164, 18
  br i1 %165, label %167, label %184

166:                                              ; preds = %158, %159
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #29
  br label %232

167:                                              ; preds = %162
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #29
  %168 = getelementptr inbounds %struct.tree_field_decl, ptr %107, i64 0, i32 3
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  store ptr %169, ptr %10, align 8, !tbaa !6
  %170 = icmp eq ptr %169, null
  %171 = load ptr, ptr @global_trees, align 16
  %172 = icmp eq ptr %169, %171
  %173 = select i1 %170, i1 true, i1 %172
  br i1 %173, label %182, label %174

174:                                              ; preds = %167
  %175 = load i64, ptr %169, align 8
  %176 = and i64 %175, 65535
  %177 = icmp eq i64 %176, 23
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  br i1 %105, label %183, label %179

179:                                              ; preds = %178
  %180 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %10, ptr noundef nonnull %1)
  %181 = icmp eq ptr %180, null
  br i1 %181, label %182, label %183

182:                                              ; preds = %179, %174, %167
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #29
  br label %184

183:                                              ; preds = %178, %179
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #29
  br label %232

184:                                              ; preds = %182, %106, %162
  %185 = getelementptr inbounds %struct.tree_common, ptr %107, i64 0, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !17
  %187 = icmp eq ptr %186, null
  br i1 %187, label %229, label %106, !llvm.loop !257

188:                                              ; preds = %49
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #29
  %189 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %190 = load ptr, ptr %189, align 8, !tbaa !17
  %191 = getelementptr inbounds %struct.tree_type, ptr %190, i64 0, i32 2
  %192 = load ptr, ptr %191, align 8, !tbaa !17
  store ptr %192, ptr %11, align 8, !tbaa !6
  %193 = icmp eq ptr %192, null
  %194 = load ptr, ptr @global_trees, align 16
  %195 = icmp eq ptr %192, %194
  %196 = select i1 %193, i1 true, i1 %195
  br i1 %196, label %209, label %197

197:                                              ; preds = %188
  %198 = load i64, ptr %192, align 8
  %199 = and i64 %198, 65535
  %200 = icmp eq i64 %199, 23
  br i1 %200, label %209, label %201

201:                                              ; preds = %197
  %202 = icmp eq ptr %1, null
  br i1 %202, label %217, label %203

203:                                              ; preds = %201
  %204 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %11, ptr noundef nonnull %1)
  %205 = icmp eq ptr %204, null
  br i1 %205, label %206, label %217

206:                                              ; preds = %203
  %207 = load ptr, ptr %189, align 8, !tbaa !17
  %208 = load ptr, ptr @global_trees, align 16
  br label %209

209:                                              ; preds = %206, %197, %188
  %210 = phi ptr [ %208, %206 ], [ %194, %197 ], [ %194, %188 ]
  %211 = phi ptr [ %207, %206 ], [ %190, %197 ], [ %190, %188 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #29
  %212 = getelementptr inbounds %struct.tree_type, ptr %211, i64 0, i32 3
  %213 = load ptr, ptr %212, align 8, !tbaa !17
  store ptr %213, ptr %12, align 8, !tbaa !6
  %214 = icmp eq ptr %213, null
  %215 = icmp eq ptr %213, %210
  %216 = select i1 %214, i1 true, i1 %215
  br i1 %216, label %227, label %218

217:                                              ; preds = %201, %203
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #29
  br label %232

218:                                              ; preds = %209
  %219 = load i64, ptr %213, align 8
  %220 = and i64 %219, 65535
  %221 = icmp eq i64 %220, 23
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = icmp eq ptr %1, null
  br i1 %223, label %228, label %224

224:                                              ; preds = %222
  %225 = call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %12, ptr noundef nonnull %1)
  %226 = icmp eq ptr %225, null
  br i1 %226, label %227, label %228

227:                                              ; preds = %224, %218, %209
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #29
  br label %229

228:                                              ; preds = %222, %224
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #29
  br label %232

229:                                              ; preds = %184, %100, %227, %98, %49, %58, %53
  %230 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 30), align 8, !tbaa !258
  %231 = tail call zeroext i8 %230(ptr noundef nonnull %0, ptr noundef %1) #29
  br label %232

232:                                              ; preds = %228, %217, %183, %166, %153, %135, %99, %88, %58, %53, %52, %39, %2, %229
  %233 = phi i8 [ %231, %229 ], [ 1, %228 ], [ 1, %217 ], [ 1, %183 ], [ 1, %166 ], [ 1, %153 ], [ 1, %135 ], [ 1, %99 ], [ 1, %88 ], [ 1, %52 ], [ 1, %39 ], [ 0, %2 ], [ 1, %53 ], [ 1, %58 ]
  ret i8 %233
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal ptr @find_var_from_fn(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr noundef readnone %2) #24 {
  %4 = load ptr, ptr %0, align 8, !tbaa !6
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, 65535
  %7 = add nsw i64 %6, -5
  %8 = icmp ult i64 %7, 18
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i32 0, ptr %1, align 4, !tbaa !21
  br label %27

10:                                               ; preds = %3
  %11 = add nsw i64 %6, -29
  %12 = icmp ult i64 %11, 12
  br i1 %12, label %13, label %27

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %4, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, %2
  br i1 %16, label %17, label %27

17:                                               ; preds = %13
  %18 = trunc i64 %5 to i16
  switch i16 %18, label %24 [
    i16 32, label %19
    i16 34, label %19
    i16 30, label %26
  ]

19:                                               ; preds = %17, %17
  %20 = and i64 %5, 67108864
  %21 = icmp eq i64 %20, 0
  %22 = icmp eq i64 %6, 36
  %23 = or i1 %21, %22
  br i1 %23, label %26, label %27

24:                                               ; preds = %17
  %25 = icmp eq i64 %6, 36
  br i1 %25, label %26, label %27

26:                                               ; preds = %17, %19, %24
  br label %27

27:                                               ; preds = %19, %13, %9, %24, %10, %26
  %28 = phi ptr [ %4, %26 ], [ null, %10 ], [ null, %24 ], [ null, %9 ], [ null, %13 ], [ null, %19 ]
  ret ptr %28
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @get_containing_scope(ptr nocapture noundef readonly %0) local_unnamed_addr #14 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = add nsw i64 %3, -5
  %5 = icmp ult i64 %4, 18
  %6 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %7 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %8 = select i1 %5, ptr %6, ptr %7
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @decl_type_context(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1, %16
  %6 = phi ptr [ %17, %16 ], [ %3, %1 ]
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %15 [
    i16 38, label %19
    i16 40, label %19
    i16 16, label %20
    i16 17, label %20
    i16 18, label %20
    i16 35, label %9
    i16 29, label %9
    i16 4, label %12
  ]

9:                                                ; preds = %5, %5
  %10 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 4
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  br label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.tree_block, ptr %6, i64 0, i32 6
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  br label %16

15:                                               ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 8134, ptr noundef nonnull @.str.219) #29
  br label %16

16:                                               ; preds = %15, %12, %9
  %17 = phi ptr [ %6, %15 ], [ %14, %12 ], [ %11, %9 ]
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %5, !llvm.loop !259

19:                                               ; preds = %16, %5, %5
  br label %20

20:                                               ; preds = %5, %5, %5, %19, %1
  %21 = phi ptr [ null, %1 ], [ null, %19 ], [ %6, %5 ], [ %6, %5 ], [ %6, %5 ]
  ret ptr %21
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @get_callee_fndecl(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %93, label %4

4:                                                ; preds = %1
  %5 = load i64, ptr %0, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 59
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 8154, ptr noundef nonnull @.str.219) #29
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  br label %11

11:                                               ; preds = %64, %9
  %12 = phi ptr [ %10, %9 ], [ %17, %64 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = load i64, ptr %13, align 8
  %15 = trunc i64 %14 to i16
  switch i16 %15, label %67 [
    i16 116, label %16
    i16 113, label %16
    i16 117, label %16
  ]

16:                                               ; preds = %11, %11, %11
  %17 = getelementptr inbounds %struct.tree_exp, ptr %13, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %20 = icmp eq ptr %18, %19
  br i1 %20, label %67, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.tree_common, ptr %13, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = load i64, ptr %23, align 8
  %27 = trunc i64 %26 to i16
  switch i16 %27, label %39 [
    i16 6, label %28
    i16 7, label %28
    i16 8, label %28
    i16 10, label %28
    i16 12, label %28
    i16 5, label %28
  ]

28:                                               ; preds = %21, %21, %21, %21, %21, %21
  %29 = load i64, ptr %25, align 8
  %30 = trunc i64 %29 to i16
  switch i16 %30, label %39 [
    i16 6, label %31
    i16 7, label %31
    i16 8, label %31
    i16 10, label %31
    i16 12, label %31
    i16 5, label %31
  ]

31:                                               ; preds = %28, %28, %28, %28, %28, %28
  %32 = getelementptr inbounds %struct.tree_type, ptr %23, i64 0, i32 6
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 6
  %35 = load i32, ptr %34, align 4
  %36 = xor i32 %35, %33
  %37 = and i32 %36, 1023
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %64, label %67

39:                                               ; preds = %28, %21
  %40 = and i64 %26, 65535
  %41 = icmp eq i64 %40, 14
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = tail call i32 @vector_type_mode(ptr noundef nonnull %23) #29
  br label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tree_type, ptr %23, i64 0, i32 6
  %46 = load i32, ptr %45, align 4
  %47 = lshr i32 %46, 16
  %48 = and i32 %47, 255
  br label %49

49:                                               ; preds = %44, %42
  %50 = phi i32 [ %43, %42 ], [ %48, %44 ]
  %51 = load i64, ptr %25, align 8
  %52 = and i64 %51, 65535
  %53 = icmp eq i64 %52, 14
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = tail call i32 @vector_type_mode(ptr noundef nonnull %25) #29
  br label %61

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 6
  %58 = load i32, ptr %57, align 4
  %59 = lshr i32 %58, 16
  %60 = and i32 %59, 255
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %55, %54 ], [ %60, %56 ]
  %63 = icmp eq i32 %50, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %61, %31
  br label %11, !llvm.loop !88

65:                                               ; preds = %61
  %66 = load i64, ptr %13, align 8
  br label %67

67:                                               ; preds = %11, %16, %31, %65
  %68 = phi i64 [ %66, %65 ], [ %14, %31 ], [ %14, %16 ], [ %14, %11 ]
  %69 = and i64 %68, 65535
  %70 = add nsw i64 %69, -30
  %71 = icmp ult i64 %70, 11
  %72 = and i64 %68, 1572864
  %73 = icmp eq i64 %72, 1048576
  %74 = and i1 %73, %71
  br i1 %74, label %75, label %81

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.tree_decl_common, ptr %13, i64 0, i32 5
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  %78 = icmp eq ptr %77, null
  %79 = select i1 %78, ptr %13, ptr %77
  %80 = load i64, ptr %79, align 8
  br label %81

81:                                               ; preds = %75, %67
  %82 = phi i64 [ %68, %67 ], [ %80, %75 ]
  %83 = phi ptr [ %13, %67 ], [ %79, %75 ]
  %84 = and i64 %82, 65535
  %85 = icmp eq i64 %84, 121
  br i1 %85, label %86, label %92

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.tree_exp, ptr %83, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = load i64, ptr %88, align 8
  %90 = and i64 %89, 65535
  %91 = icmp eq i64 %90, 29
  br i1 %91, label %93, label %92

92:                                               ; preds = %86, %81
  br label %93

93:                                               ; preds = %86, %1, %92
  %94 = phi ptr [ null, %92 ], [ %0, %1 ], [ %88, %86 ]
  ret ptr %94
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dump_tree_statistics() local_unnamed_addr #9 {
  %1 = load ptr, ptr @stderr, align 8, !tbaa !6
  %2 = tail call i64 @fwrite(ptr nonnull @.str.238, i64 25, i64 1, ptr %1) #30
  %3 = load ptr, ptr @stderr, align 8, !tbaa !6
  %4 = tail call i64 @fwrite(ptr nonnull @.str.239, i64 25, i64 1, ptr %3) #30
  %5 = load ptr, ptr @stderr, align 8, !tbaa !6
  %6 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %7 = tail call i64 @htab_size(ptr noundef %6) #29
  %8 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %9 = tail call i64 @htab_elements(ptr noundef %8) #29
  %10 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %11 = tail call fast nofpclass(nan inf) double @htab_collisions(ptr noundef %10) #29
  %12 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef nonnull @.str.240, i64 noundef %7, i64 noundef %9, double noundef nofpclass(nan inf) %11) #30
  %13 = load ptr, ptr @stderr, align 8, !tbaa !6
  %14 = load ptr, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %15 = tail call i64 @htab_size(ptr noundef %14) #29
  %16 = load ptr, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %17 = tail call i64 @htab_elements(ptr noundef %16) #29
  %18 = load ptr, ptr @debug_expr_for_decl, align 8, !tbaa !6
  %19 = tail call fast nofpclass(nan inf) double @htab_collisions(ptr noundef %18) #29
  %20 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef nonnull @.str.241, i64 noundef %15, i64 noundef %17, double noundef nofpclass(nan inf) %19) #30
  %21 = load ptr, ptr @stderr, align 8, !tbaa !6
  %22 = load ptr, ptr @value_expr_for_decl, align 8, !tbaa !6
  %23 = tail call i64 @htab_size(ptr noundef %22) #29
  %24 = load ptr, ptr @value_expr_for_decl, align 8, !tbaa !6
  %25 = tail call i64 @htab_elements(ptr noundef %24) #29
  %26 = load ptr, ptr @value_expr_for_decl, align 8, !tbaa !6
  %27 = tail call fast nofpclass(nan inf) double @htab_collisions(ptr noundef %26) #29
  %28 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef nonnull @.str.242, i64 noundef %23, i64 noundef %25, double noundef nofpclass(nan inf) %27) #30
  %29 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 17), align 8, !tbaa !260
  tail call void %29() #29
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

declare i64 @htab_size(ptr noundef) local_unnamed_addr #3

declare i64 @htab_elements(ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) double @htab_collisions(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @crc32_string(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #16 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi ptr [ %1, %2 ], [ %56, %3 ]
  %5 = phi i32 [ %0, %2 ], [ %55, %3 ]
  %6 = load i8, ptr %4, align 1, !tbaa !17
  %7 = sext i8 %6 to i32
  %8 = shl nsw i32 %7, 24
  %9 = xor i32 %5, %8
  %10 = icmp slt i32 %9, 0
  %11 = select i1 %10, i32 79764919, i32 0
  %12 = shl i32 %5, 1
  %13 = xor i32 %11, %12
  %14 = shl i32 %7, 25
  %15 = xor i32 %12, %14
  %16 = icmp slt i32 %15, 0
  %17 = select i1 %16, i32 79764919, i32 0
  %18 = shl i32 %13, 1
  %19 = xor i32 %17, %18
  %20 = shl i32 %7, 26
  %21 = xor i32 %18, %20
  %22 = icmp slt i32 %21, 0
  %23 = select i1 %22, i32 79764919, i32 0
  %24 = shl i32 %19, 1
  %25 = xor i32 %23, %24
  %26 = shl i32 %7, 27
  %27 = xor i32 %24, %26
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 79764919, i32 0
  %30 = shl i32 %25, 1
  %31 = xor i32 %29, %30
  %32 = shl i32 %7, 28
  %33 = xor i32 %30, %32
  %34 = icmp slt i32 %33, 0
  %35 = select i1 %34, i32 79764919, i32 0
  %36 = shl i32 %31, 1
  %37 = xor i32 %35, %36
  %38 = shl i32 %7, 29
  %39 = xor i32 %36, %38
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 79764919, i32 0
  %42 = shl i32 %37, 1
  %43 = xor i32 %41, %42
  %44 = shl i32 %7, 30
  %45 = xor i32 %42, %44
  %46 = icmp slt i32 %45, 0
  %47 = select i1 %46, i32 79764919, i32 0
  %48 = shl i32 %43, 1
  %49 = xor i32 %47, %48
  %50 = shl i32 %7, 31
  %51 = xor i32 %48, %50
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 79764919, i32 0
  %54 = shl i32 %49, 1
  %55 = xor i32 %53, %54
  %56 = getelementptr inbounds i8, ptr %4, i64 1
  %57 = icmp eq i8 %6, 0
  br i1 %57, label %58, label %3, !llvm.loop !261

58:                                               ; preds = %3
  ret i32 %55
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @clean_symbol_name(ptr nocapture noundef %0) local_unnamed_addr #15 {
  %2 = load i8, ptr %0, align 1, !tbaa !17
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %19, label %4

4:                                                ; preds = %1, %15
  %5 = phi i8 [ %17, %15 ], [ %2, %1 ]
  %6 = phi ptr [ %16, %15 ], [ %0, %1 ]
  %7 = zext i8 %5 to i64
  %8 = getelementptr inbounds [256 x i16], ptr @_sch_istable, i64 0, i64 %7
  %9 = load i16, ptr %8, align 2, !tbaa !262
  %10 = and i16 %9, 140
  %11 = icmp ne i16 %10, 0
  %12 = icmp eq i8 %5, 46
  %13 = or i1 %12, %11
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store i8 95, ptr %6, align 1, !tbaa !17
  br label %15

15:                                               ; preds = %4, %14
  %16 = getelementptr inbounds i8, ptr %6, i64 1
  %17 = load i8, ptr %16, align 1, !tbaa !17
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %4, !llvm.loop !263

19:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @get_file_function_name(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @first_global_object_name, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  store ptr %2, ptr @libiberty_optr, align 8, !tbaa !6
  %5 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2)
  %6 = add i64 %5, 1
  store i64 %6, ptr @libiberty_len, align 8, !tbaa !72
  %7 = alloca i8, i64 %6, align 16
  store ptr %7, ptr @libiberty_nptr, align 8, !tbaa !6
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %7, ptr nonnull align 1 %2, i64 %6, i1 false)
  br label %181

8:                                                ; preds = %1
  %9 = load i8, ptr %0, align 1, !tbaa !17
  %10 = icmp eq i8 %9, 73
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = icmp eq i8 %9, 68
  %13 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 112), align 1
  %14 = icmp ne i8 %13, 0
  %15 = select i1 %12, i1 %14, i1 false
  br i1 %15, label %19, label %41

16:                                               ; preds = %8
  %17 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 112), align 1, !tbaa !264
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %11, %16
  %20 = load ptr, ptr @main_input_filename, align 8, !tbaa !6
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %32

22:                                               ; preds = %19
  %23 = load i32, ptr @input_location, align 4, !tbaa !21
  %24 = icmp ult i32 %23, 2
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = icmp eq i32 %23, 0
  %27 = select i1 %26, ptr null, ptr @.str.220
  br label %32

28:                                               ; preds = %22
  %29 = load ptr, ptr @line_table, align 8, !tbaa !6, !noalias !265
  %30 = tail call ptr @linemap_lookup(ptr noundef %29, i32 noundef %23) #29, !noalias !265
  %31 = load ptr, ptr %30, align 8, !tbaa !127, !noalias !265
  br label %32

32:                                               ; preds = %28, %25, %19
  %33 = phi ptr [ %20, %19 ], [ %27, %25 ], [ %31, %28 ]
  %34 = tail call ptr @strrchr(ptr noundef nonnull dereferenceable(1) %33, i32 noundef 47)
  %35 = icmp eq ptr %34, null
  %36 = getelementptr inbounds i8, ptr %34, i64 1
  %37 = select i1 %35, ptr %33, ptr %36
  store ptr %37, ptr @libiberty_optr, align 8, !tbaa !6
  %38 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %37)
  %39 = add i64 %38, 1
  store i64 %39, ptr @libiberty_len, align 8, !tbaa !72
  %40 = alloca i8, i64 %39, align 16
  store ptr %40, ptr @libiberty_nptr, align 8, !tbaa !6
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %40, ptr align 1 %37, i64 %39, i1 false)
  br label %181

41:                                               ; preds = %16, %11
  %42 = load ptr, ptr @weak_global_object_name, align 8, !tbaa !6
  %43 = load ptr, ptr @main_input_filename, align 8, !tbaa !6
  %44 = icmp eq ptr %42, null
  %45 = select i1 %44, ptr @.str.243, ptr %42
  %46 = icmp eq ptr %43, null
  br i1 %46, label %47, label %57

47:                                               ; preds = %41
  %48 = load i32, ptr @input_location, align 4, !tbaa !21
  %49 = icmp ult i32 %48, 2
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = icmp eq i32 %48, 0
  %52 = select i1 %51, ptr null, ptr @.str.220
  br label %57

53:                                               ; preds = %47
  %54 = load ptr, ptr @line_table, align 8, !tbaa !6, !noalias !268
  %55 = tail call ptr @linemap_lookup(ptr noundef %54, i32 noundef %48) #29, !noalias !268
  %56 = load ptr, ptr %55, align 8, !tbaa !127, !noalias !268
  br label %57

57:                                               ; preds = %53, %50, %41
  %58 = phi ptr [ %43, %41 ], [ %52, %50 ], [ %56, %53 ]
  %59 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %58)
  %60 = add i64 %59, 19
  %61 = and i64 %60, 4294967295
  %62 = alloca i8, i64 %61, align 16
  %63 = add i64 %59, 1
  %64 = and i64 %63, 4294967295
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %62, ptr align 1 %58, i64 %64, i1 false)
  %65 = and i64 %59, 4294967295
  br label %66

66:                                               ; preds = %66, %57
  %67 = phi ptr [ %45, %57 ], [ %119, %66 ]
  %68 = phi i32 [ 0, %57 ], [ %118, %66 ]
  %69 = load i8, ptr %67, align 1, !tbaa !17
  %70 = sext i8 %69 to i32
  %71 = shl nsw i32 %70, 24
  %72 = xor i32 %71, %68
  %73 = icmp slt i32 %72, 0
  %74 = select i1 %73, i32 79764919, i32 0
  %75 = shl i32 %68, 1
  %76 = xor i32 %74, %75
  %77 = shl i32 %70, 25
  %78 = xor i32 %77, %75
  %79 = icmp slt i32 %78, 0
  %80 = select i1 %79, i32 79764919, i32 0
  %81 = shl i32 %76, 1
  %82 = xor i32 %81, %80
  %83 = shl i32 %70, 26
  %84 = xor i32 %81, %83
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 79764919, i32 0
  %87 = shl i32 %82, 1
  %88 = xor i32 %86, %87
  %89 = shl i32 %70, 27
  %90 = xor i32 %87, %89
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 79764919, i32 0
  %93 = shl i32 %88, 1
  %94 = xor i32 %92, %93
  %95 = shl i32 %70, 28
  %96 = xor i32 %93, %95
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 79764919, i32 0
  %99 = shl i32 %94, 1
  %100 = xor i32 %98, %99
  %101 = shl i32 %70, 29
  %102 = xor i32 %99, %101
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 79764919, i32 0
  %105 = shl i32 %100, 1
  %106 = xor i32 %104, %105
  %107 = shl i32 %70, 30
  %108 = xor i32 %105, %107
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 79764919, i32 0
  %111 = shl i32 %106, 1
  %112 = xor i32 %110, %111
  %113 = shl i32 %70, 31
  %114 = xor i32 %111, %113
  %115 = icmp slt i32 %114, 0
  %116 = select i1 %115, i32 79764919, i32 0
  %117 = shl i32 %112, 1
  %118 = xor i32 %116, %117
  %119 = getelementptr inbounds i8, ptr %67, i64 1
  %120 = icmp eq i8 %69, 0
  br i1 %120, label %121, label %66, !llvm.loop !261

121:                                              ; preds = %66
  %122 = tail call ptr @get_random_seed(i8 noundef zeroext 0) #29
  br label %123

123:                                              ; preds = %123, %121
  %124 = phi ptr [ %122, %121 ], [ %176, %123 ]
  %125 = phi i32 [ 0, %121 ], [ %175, %123 ]
  %126 = load i8, ptr %124, align 1, !tbaa !17
  %127 = sext i8 %126 to i32
  %128 = shl nsw i32 %127, 24
  %129 = xor i32 %128, %125
  %130 = icmp slt i32 %129, 0
  %131 = select i1 %130, i32 79764919, i32 0
  %132 = shl i32 %125, 1
  %133 = xor i32 %131, %132
  %134 = shl i32 %127, 25
  %135 = xor i32 %134, %132
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 79764919, i32 0
  %138 = shl i32 %133, 1
  %139 = xor i32 %138, %137
  %140 = shl i32 %127, 26
  %141 = xor i32 %138, %140
  %142 = icmp slt i32 %141, 0
  %143 = select i1 %142, i32 79764919, i32 0
  %144 = shl i32 %139, 1
  %145 = xor i32 %143, %144
  %146 = shl i32 %127, 27
  %147 = xor i32 %144, %146
  %148 = icmp slt i32 %147, 0
  %149 = select i1 %148, i32 79764919, i32 0
  %150 = shl i32 %145, 1
  %151 = xor i32 %149, %150
  %152 = shl i32 %127, 28
  %153 = xor i32 %150, %152
  %154 = icmp slt i32 %153, 0
  %155 = select i1 %154, i32 79764919, i32 0
  %156 = shl i32 %151, 1
  %157 = xor i32 %155, %156
  %158 = shl i32 %127, 29
  %159 = xor i32 %156, %158
  %160 = icmp slt i32 %159, 0
  %161 = select i1 %160, i32 79764919, i32 0
  %162 = shl i32 %157, 1
  %163 = xor i32 %161, %162
  %164 = shl i32 %127, 30
  %165 = xor i32 %162, %164
  %166 = icmp slt i32 %165, 0
  %167 = select i1 %166, i32 79764919, i32 0
  %168 = shl i32 %163, 1
  %169 = xor i32 %167, %168
  %170 = shl i32 %127, 31
  %171 = xor i32 %168, %170
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 79764919, i32 0
  %174 = shl i32 %169, 1
  %175 = xor i32 %173, %174
  %176 = getelementptr inbounds i8, ptr %124, i64 1
  %177 = icmp eq i8 %126, 0
  br i1 %177, label %178, label %123, !llvm.loop !261

178:                                              ; preds = %123
  %179 = getelementptr inbounds i8, ptr %62, i64 %65
  %180 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %179, ptr noundef nonnull dereferenceable(1) @.str.244, i32 noundef %118, i32 noundef %175)
  br label %181

181:                                              ; preds = %32, %178, %4
  %182 = phi ptr [ %7, %4 ], [ %40, %32 ], [ %62, %178 ]
  %183 = load i8, ptr %182, align 16, !tbaa !17
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %200, label %185

185:                                              ; preds = %181, %196
  %186 = phi i8 [ %198, %196 ], [ %183, %181 ]
  %187 = phi ptr [ %197, %196 ], [ %182, %181 ]
  %188 = zext i8 %186 to i64
  %189 = getelementptr inbounds [256 x i16], ptr @_sch_istable, i64 0, i64 %188
  %190 = load i16, ptr %189, align 2, !tbaa !262
  %191 = and i16 %190, 140
  %192 = icmp ne i16 %191, 0
  %193 = icmp eq i8 %186, 46
  %194 = or i1 %193, %192
  br i1 %194, label %196, label %195

195:                                              ; preds = %185
  store i8 95, ptr %187, align 1, !tbaa !17
  br label %196

196:                                              ; preds = %195, %185
  %197 = getelementptr inbounds i8, ptr %187, i64 1
  %198 = load i8, ptr %197, align 1, !tbaa !17
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %185, !llvm.loop !263

200:                                              ; preds = %196, %181
  %201 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %182)
  %202 = add i64 %201, 15
  %203 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %204 = add i64 %202, %203
  %205 = alloca i8, i64 %204, align 16
  %206 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %205, ptr noundef nonnull dereferenceable(1) @.str.245, ptr noundef %0, ptr noundef nonnull %182)
  %207 = call ptr @get_identifier(ptr noundef nonnull %205) #29
  ret ptr %207
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

declare ptr @get_random_seed(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @build_common_tree_nodes(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = tail call ptr @make_node_stat(i32 noundef 0)
  store ptr %3, ptr @global_trees, align 16, !tbaa !6
  %4 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %3, ptr %4, align 8, !tbaa !17
  tail call void @initialize_sizetypes(i8 noundef zeroext %1) #29
  %5 = tail call ptr @make_signed_type(i32 noundef 8) #29
  store ptr %5, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 6
  %7 = load i32, ptr %6, align 4
  %8 = or i32 %7, 16777216
  store i32 %8, ptr %6, align 4
  %9 = tail call ptr @make_unsigned_type(i32 noundef 8) #29
  store ptr %9, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16, !tbaa !6
  %10 = getelementptr inbounds %struct.tree_type, ptr %9, i64 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = or i32 %11, 16777216
  store i32 %12, ptr %10, align 4
  %13 = icmp eq i8 %0, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call ptr @make_signed_type(i32 noundef 8) #29
  br label %18

16:                                               ; preds = %2
  %17 = tail call ptr @make_unsigned_type(i32 noundef 8) #29
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi ptr [ %15, %14 ], [ %17, %16 ]
  store ptr %19, ptr @integer_types, align 16, !tbaa !6
  %20 = getelementptr inbounds %struct.tree_type, ptr %19, i64 0, i32 6
  %21 = load i32, ptr %20, align 4
  %22 = or i32 %21, 16777216
  store i32 %22, ptr %20, align 4
  %23 = tail call ptr @make_signed_type(i32 noundef 16) #29
  store ptr %23, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8, !tbaa !6
  %24 = tail call ptr @make_unsigned_type(i32 noundef 16) #29
  store ptr %24, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16, !tbaa !6
  %25 = tail call ptr @make_signed_type(i32 noundef 32) #29
  store ptr %25, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %26 = tail call ptr @make_unsigned_type(i32 noundef 32) #29
  store ptr %26, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !6
  %27 = tail call ptr @make_signed_type(i32 noundef 32) #29
  store ptr %27, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  %28 = tail call ptr @make_unsigned_type(i32 noundef 32) #29
  store ptr %28, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16, !tbaa !6
  %29 = tail call ptr @make_signed_type(i32 noundef 64) #29
  store ptr %29, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %30 = tail call ptr @make_unsigned_type(i32 noundef 64) #29
  store ptr %30, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16, !tbaa !6
  %31 = tail call ptr @make_unsigned_type(i32 noundef 8) #29
  store ptr %31, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %32 = load i64, ptr %31, align 8
  %33 = and i64 %32, -65536
  %34 = or i64 %33, 7
  store i64 %34, ptr %31, align 8
  %35 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %36 = icmp eq ptr %35, null
  %37 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %38 = select i1 %36, ptr %37, ptr %35
  %39 = tail call ptr @build_int_cst_wide(ptr noundef %38, i64 noundef 1, i64 noundef 0)
  %40 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %41 = getelementptr inbounds %struct.tree_type, ptr %40, i64 0, i32 14
  store ptr %39, ptr %41, align 8, !tbaa !17
  %42 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.tree_type, ptr %42, i64 0, i32 6
  %44 = load i32, ptr %43, align 4
  %45 = and i32 %44, -1024
  %46 = or i32 %45, 1
  store i32 %46, ptr %43, align 4
  %47 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 14), align 2, !tbaa !17
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 3
  %50 = add nsw i32 %49, -8
  %51 = lshr exact i32 %50, 3
  switch i32 %51, label %60 [
    i32 3, label %52
    i32 0, label %54
    i32 1, label %56
    i32 7, label %58
  ]

52:                                               ; preds = %18
  %53 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  br label %62

54:                                               ; preds = %18
  %55 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  br label %62

56:                                               ; preds = %18
  %57 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  br label %62

58:                                               ; preds = %18
  %59 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  br label %62

60:                                               ; preds = %18
  %61 = tail call ptr @make_signed_type(i32 noundef %49) #29
  br label %62

62:                                               ; preds = %52, %54, %56, %58, %60
  %63 = phi ptr [ %53, %52 ], [ %55, %54 ], [ %57, %56 ], [ %59, %58 ], [ %61, %60 ]
  store ptr %63, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 1), align 8, !tbaa !6
  %64 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 15), align 1, !tbaa !17
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 3
  %67 = add nsw i32 %66, -8
  %68 = lshr exact i32 %67, 3
  switch i32 %68, label %77 [
    i32 3, label %69
    i32 0, label %71
    i32 1, label %73
    i32 7, label %75
  ]

69:                                               ; preds = %62
  %70 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  br label %79

71:                                               ; preds = %62
  %72 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  br label %79

73:                                               ; preds = %62
  %74 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  br label %79

75:                                               ; preds = %62
  %76 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  br label %79

77:                                               ; preds = %62
  %78 = tail call ptr @make_signed_type(i32 noundef %66) #29
  br label %79

79:                                               ; preds = %69, %71, %73, %75, %77
  %80 = phi ptr [ %70, %69 ], [ %72, %71 ], [ %74, %73 ], [ %76, %75 ], [ %78, %77 ]
  store ptr %80, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 2), align 16, !tbaa !6
  %81 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 16), align 16, !tbaa !17
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 3
  %84 = add nsw i32 %83, -8
  %85 = lshr exact i32 %84, 3
  switch i32 %85, label %94 [
    i32 3, label %86
    i32 0, label %88
    i32 1, label %90
    i32 7, label %92
  ]

86:                                               ; preds = %79
  %87 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  br label %96

88:                                               ; preds = %79
  %89 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  br label %96

90:                                               ; preds = %79
  %91 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  br label %96

92:                                               ; preds = %79
  %93 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  br label %96

94:                                               ; preds = %79
  %95 = tail call ptr @make_signed_type(i32 noundef %83) #29
  br label %96

96:                                               ; preds = %86, %88, %90, %92, %94
  %97 = phi ptr [ %87, %86 ], [ %89, %88 ], [ %91, %90 ], [ %93, %92 ], [ %95, %94 ]
  store ptr %97, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 3), align 8, !tbaa !6
  %98 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 17), align 1, !tbaa !17
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 3
  %101 = add nsw i32 %100, -8
  %102 = lshr exact i32 %101, 3
  switch i32 %102, label %111 [
    i32 3, label %103
    i32 0, label %105
    i32 1, label %107
    i32 7, label %109
  ]

103:                                              ; preds = %96
  %104 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  br label %113

105:                                              ; preds = %96
  %106 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  br label %113

107:                                              ; preds = %96
  %108 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  br label %113

109:                                              ; preds = %96
  %110 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  br label %113

111:                                              ; preds = %96
  %112 = tail call ptr @make_signed_type(i32 noundef %100) #29
  br label %113

113:                                              ; preds = %103, %105, %107, %109, %111
  %114 = phi ptr [ %104, %103 ], [ %106, %105 ], [ %108, %107 ], [ %110, %109 ], [ %112, %111 ]
  store ptr %114, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 4), align 16, !tbaa !6
  %115 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 18), align 2, !tbaa !17
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 3
  %118 = add nsw i32 %117, -8
  %119 = lshr exact i32 %118, 3
  switch i32 %119, label %128 [
    i32 3, label %120
    i32 0, label %122
    i32 1, label %124
    i32 7, label %126
  ]

120:                                              ; preds = %113
  %121 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  br label %130

122:                                              ; preds = %113
  %123 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  br label %130

124:                                              ; preds = %113
  %125 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  br label %130

126:                                              ; preds = %113
  %127 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  br label %130

128:                                              ; preds = %113
  %129 = tail call ptr @make_signed_type(i32 noundef %117) #29
  br label %130

130:                                              ; preds = %120, %122, %124, %126, %128
  %131 = phi ptr [ %121, %120 ], [ %123, %122 ], [ %125, %124 ], [ %127, %126 ], [ %129, %128 ]
  store ptr %131, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 5), align 8, !tbaa !6
  %132 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 14), align 2, !tbaa !17
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 3
  %135 = add nsw i32 %134, -8
  %136 = lshr exact i32 %135, 3
  switch i32 %136, label %145 [
    i32 3, label %137
    i32 0, label %139
    i32 1, label %141
    i32 7, label %143
  ]

137:                                              ; preds = %130
  %138 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  br label %147

139:                                              ; preds = %130
  %140 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  br label %147

141:                                              ; preds = %130
  %142 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  br label %147

143:                                              ; preds = %130
  %144 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  br label %147

145:                                              ; preds = %130
  %146 = tail call ptr @make_unsigned_type(i32 noundef %134) #29
  br label %147

147:                                              ; preds = %137, %139, %141, %143, %145
  %148 = phi ptr [ %138, %137 ], [ %140, %139 ], [ %142, %141 ], [ %144, %143 ], [ %146, %145 ]
  store ptr %148, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 6), align 16, !tbaa !6
  %149 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 15), align 1, !tbaa !17
  %150 = zext i8 %149 to i32
  %151 = shl nuw nsw i32 %150, 3
  %152 = add nsw i32 %151, -8
  %153 = lshr exact i32 %152, 3
  switch i32 %153, label %162 [
    i32 3, label %154
    i32 0, label %156
    i32 1, label %158
    i32 7, label %160
  ]

154:                                              ; preds = %147
  %155 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  br label %164

156:                                              ; preds = %147
  %157 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  br label %164

158:                                              ; preds = %147
  %159 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  br label %164

160:                                              ; preds = %147
  %161 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  br label %164

162:                                              ; preds = %147
  %163 = tail call ptr @make_unsigned_type(i32 noundef %151) #29
  br label %164

164:                                              ; preds = %154, %156, %158, %160, %162
  %165 = phi ptr [ %155, %154 ], [ %157, %156 ], [ %159, %158 ], [ %161, %160 ], [ %163, %162 ]
  store ptr %165, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 7), align 8, !tbaa !6
  %166 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 16), align 16, !tbaa !17
  %167 = zext i8 %166 to i32
  %168 = shl nuw nsw i32 %167, 3
  %169 = add nsw i32 %168, -8
  %170 = lshr exact i32 %169, 3
  switch i32 %170, label %179 [
    i32 3, label %171
    i32 0, label %173
    i32 1, label %175
    i32 7, label %177
  ]

171:                                              ; preds = %164
  %172 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  br label %181

173:                                              ; preds = %164
  %174 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  br label %181

175:                                              ; preds = %164
  %176 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  br label %181

177:                                              ; preds = %164
  %178 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  br label %181

179:                                              ; preds = %164
  %180 = tail call ptr @make_unsigned_type(i32 noundef %168) #29
  br label %181

181:                                              ; preds = %171, %173, %175, %177, %179
  %182 = phi ptr [ %172, %171 ], [ %174, %173 ], [ %176, %175 ], [ %178, %177 ], [ %180, %179 ]
  store ptr %182, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 8), align 16, !tbaa !6
  %183 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 17), align 1, !tbaa !17
  %184 = zext i8 %183 to i32
  %185 = shl nuw nsw i32 %184, 3
  %186 = add nsw i32 %185, -8
  %187 = lshr exact i32 %186, 3
  switch i32 %187, label %196 [
    i32 3, label %188
    i32 0, label %190
    i32 1, label %192
    i32 7, label %194
  ]

188:                                              ; preds = %181
  %189 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  br label %198

190:                                              ; preds = %181
  %191 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  br label %198

192:                                              ; preds = %181
  %193 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  br label %198

194:                                              ; preds = %181
  %195 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  br label %198

196:                                              ; preds = %181
  %197 = tail call ptr @make_unsigned_type(i32 noundef %185) #29
  br label %198

198:                                              ; preds = %188, %190, %192, %194, %196
  %199 = phi ptr [ %189, %188 ], [ %191, %190 ], [ %193, %192 ], [ %195, %194 ], [ %197, %196 ]
  store ptr %199, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 9), align 8, !tbaa !6
  %200 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 18), align 2, !tbaa !17
  %201 = zext i8 %200 to i32
  %202 = shl nuw nsw i32 %201, 3
  %203 = add nsw i32 %202, -8
  %204 = lshr exact i32 %203, 3
  switch i32 %204, label %213 [
    i32 3, label %205
    i32 0, label %207
    i32 1, label %209
    i32 7, label %211
  ]

205:                                              ; preds = %198
  %206 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  br label %215

207:                                              ; preds = %198
  %208 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  br label %215

209:                                              ; preds = %198
  %210 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  br label %215

211:                                              ; preds = %198
  %212 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  br label %215

213:                                              ; preds = %198
  %214 = tail call ptr @make_unsigned_type(i32 noundef %202) #29
  br label %215

215:                                              ; preds = %205, %207, %209, %211, %213
  %216 = phi ptr [ %206, %205 ], [ %208, %207 ], [ %210, %209 ], [ %212, %211 ], [ %214, %213 ]
  store ptr %216, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 10), align 16, !tbaa !6
  %217 = tail call ptr @get_identifier(ptr noundef nonnull @.str.246) #29
  store ptr %217, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 22), align 16, !tbaa !6
  %218 = tail call ptr @get_identifier(ptr noundef nonnull @.str.247) #29
  store ptr %218, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 23), align 8, !tbaa !6
  %219 = tail call ptr @get_identifier(ptr noundef nonnull @.str.203) #29
  store ptr %219, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 24), align 16, !tbaa !6
  ret void
}

declare void @initialize_sizetypes(i8 noundef zeroext) local_unnamed_addr #3

declare ptr @make_signed_type(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @build_common_tree_nodes_2(i32 noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %3 = tail call ptr @build_int_cst_wide(ptr noundef %2, i64 noundef 0, i64 noundef 0)
  store ptr %3, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !6
  %4 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %5 = tail call ptr @build_int_cst_wide(ptr noundef %4, i64 noundef 1, i64 noundef 0)
  store ptr %5, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !6
  %6 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %7 = tail call ptr @build_int_cst_wide(ptr noundef %6, i64 noundef -1, i64 noundef -1)
  store ptr %7, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 15), align 8, !tbaa !6
  %8 = tail call ptr @size_int_kind(i64 noundef 0, i32 noundef 0) #29
  store ptr %8, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  %9 = tail call ptr @size_int_kind(i64 noundef 1, i32 noundef 0) #29
  store ptr %9, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 18), align 16, !tbaa !6
  %10 = tail call ptr @size_int_kind(i64 noundef 0, i32 noundef 2) #29
  store ptr %10, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 19), align 8, !tbaa !6
  %11 = tail call ptr @size_int_kind(i64 noundef 1, i32 noundef 2) #29
  store ptr %11, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 20), align 16, !tbaa !6
  %12 = tail call ptr @size_int_kind(i64 noundef 8, i32 noundef 2) #29
  store ptr %12, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 21), align 8, !tbaa !6
  %13 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 13
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  store ptr %15, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 25), align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 14
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  store ptr %17, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 26), align 16, !tbaa !6
  %18 = tail call ptr @make_node_stat(i32 noundef 19)
  store ptr %18, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  tail call void @layout_type(ptr noundef %18) #29
  %19 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %20 = getelementptr inbounds %struct.tree_type, ptr %19, i64 0, i32 7
  store i32 8, ptr %20, align 8, !tbaa !17
  %21 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, -4398046511105
  store i64 %23, ptr %21, align 8
  %24 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %25 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %26 = icmp eq ptr %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %1
  %28 = load i64, ptr %24, align 8
  %29 = lshr i64 %28, 56
  %30 = trunc i64 %29 to i8
  br label %31

31:                                               ; preds = %1, %27
  %32 = phi i8 [ %30, %27 ], [ 0, %1 ]
  %33 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %34 = tail call i32 %33(i8 noundef zeroext %32) #29
  %35 = tail call ptr @build_pointer_type_for_mode(ptr noundef %24, i32 noundef %34, i8 noundef zeroext 0)
  %36 = icmp eq ptr %35, null
  %37 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %38 = select i1 %36, ptr %37, ptr %35
  %39 = tail call ptr @build_int_cst_wide(ptr noundef %38, i64 noundef 0, i64 noundef 0)
  store ptr %39, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 16), align 16, !tbaa !6
  %40 = getelementptr inbounds %struct.tree_common, ptr %39, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  tail call void @layout_type(ptr noundef %41) #29
  %42 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %43 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %44 = icmp eq ptr %43, %42
  br i1 %44, label %49, label %45

45:                                               ; preds = %31
  %46 = load i64, ptr %42, align 8
  %47 = lshr i64 %46, 56
  %48 = trunc i64 %47 to i8
  br label %49

49:                                               ; preds = %31, %45
  %50 = phi i8 [ %48, %45 ], [ 0, %31 ]
  %51 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %52 = tail call i32 %51(i8 noundef zeroext %50) #29
  %53 = tail call ptr @build_pointer_type_for_mode(ptr noundef %42, i32 noundef %52, i8 noundef zeroext 0)
  store ptr %53, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %54 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %55 = tail call ptr @build_qualified_type(ptr noundef %54, i32 noundef 1)
  %56 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %57 = icmp eq ptr %56, %55
  br i1 %57, label %62, label %58

58:                                               ; preds = %49
  %59 = load i64, ptr %55, align 8
  %60 = lshr i64 %59, 56
  %61 = trunc i64 %60 to i8
  br label %62

62:                                               ; preds = %49, %58
  %63 = phi i8 [ %61, %58 ], [ 0, %49 ]
  %64 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %65 = tail call i32 %64(i8 noundef zeroext %63) #29
  %66 = tail call ptr @build_pointer_type_for_mode(ptr noundef %55, i32 noundef %65, i8 noundef zeroext 0)
  store ptr %66, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 40), align 16, !tbaa !6
  %67 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  store ptr %67, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 48), align 16, !tbaa !6
  %68 = tail call ptr @make_node_stat(i32 noundef 9)
  store ptr %68, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %69 = getelementptr inbounds %struct.tree_type, ptr %68, i64 0, i32 6
  %70 = load i32, ptr %69, align 4
  %71 = and i32 %70, -1024
  %72 = or i32 %71, 32
  store i32 %72, ptr %69, align 4
  %73 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  tail call void @layout_type(ptr noundef %73) #29
  %74 = tail call ptr @make_node_stat(i32 noundef 9)
  store ptr %74, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  %75 = icmp eq i32 %0, 0
  %76 = getelementptr inbounds %struct.tree_type, ptr %74, i64 0, i32 6
  %77 = load i32, ptr %76, align 4
  %78 = and i32 %77, -1024
  %79 = select i1 %75, i32 64, i32 32
  %80 = or i32 %78, %79
  store i32 %80, ptr %76, align 4
  %81 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  tail call void @layout_type(ptr noundef %81) #29
  %82 = tail call ptr @make_node_stat(i32 noundef 9)
  store ptr %82, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  %83 = getelementptr inbounds %struct.tree_type, ptr %82, i64 0, i32 6
  %84 = load i32, ptr %83, align 4
  %85 = and i32 %84, -1024
  %86 = or i32 %85, 80
  store i32 %86, ptr %83, align 4
  %87 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  tail call void @layout_type(ptr noundef %87) #29
  %88 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %89 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %90 = icmp eq ptr %89, %88
  br i1 %90, label %95, label %91

91:                                               ; preds = %62
  %92 = load i64, ptr %88, align 8
  %93 = lshr i64 %92, 56
  %94 = trunc i64 %93 to i8
  br label %95

95:                                               ; preds = %62, %91
  %96 = phi i8 [ %94, %91 ], [ 0, %62 ]
  %97 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %98 = tail call i32 %97(i8 noundef zeroext %96) #29
  %99 = tail call ptr @build_pointer_type_for_mode(ptr noundef %88, i32 noundef %98, i8 noundef zeroext 0)
  store ptr %99, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 34), align 16, !tbaa !6
  %100 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  %101 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %102 = icmp eq ptr %101, %100
  br i1 %102, label %107, label %103

103:                                              ; preds = %95
  %104 = load i64, ptr %100, align 8
  %105 = lshr i64 %104, 56
  %106 = trunc i64 %105 to i8
  br label %107

107:                                              ; preds = %95, %103
  %108 = phi i8 [ %106, %103 ], [ 0, %95 ]
  %109 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %110 = tail call i32 %109(i8 noundef zeroext %108) #29
  %111 = tail call ptr @build_pointer_type_for_mode(ptr noundef %100, i32 noundef %110, i8 noundef zeroext 0)
  store ptr %111, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 35), align 8, !tbaa !6
  %112 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  %113 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %114 = icmp eq ptr %113, %112
  br i1 %114, label %119, label %115

115:                                              ; preds = %107
  %116 = load i64, ptr %112, align 8
  %117 = lshr i64 %116, 56
  %118 = trunc i64 %117 to i8
  br label %119

119:                                              ; preds = %107, %115
  %120 = phi i8 [ %118, %115 ], [ 0, %107 ]
  %121 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %122 = tail call i32 %121(i8 noundef zeroext %120) #29
  %123 = tail call ptr @build_pointer_type_for_mode(ptr noundef %112, i32 noundef %122, i8 noundef zeroext 0)
  store ptr %123, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 36), align 16, !tbaa !6
  %124 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %125 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %126 = icmp eq ptr %125, %124
  br i1 %126, label %131, label %127

127:                                              ; preds = %119
  %128 = load i64, ptr %124, align 8
  %129 = lshr i64 %128, 56
  %130 = trunc i64 %129 to i8
  br label %131

131:                                              ; preds = %119, %127
  %132 = phi i8 [ %130, %127 ], [ 0, %119 ]
  %133 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %134 = tail call i32 %133(i8 noundef zeroext %132) #29
  %135 = tail call ptr @build_pointer_type_for_mode(ptr noundef %124, i32 noundef %134, i8 noundef zeroext 0)
  store ptr %135, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 37), align 8, !tbaa !6
  %136 = tail call ptr @make_node_stat(i32 noundef 8)
  %137 = getelementptr inbounds %struct.tree_type, ptr %136, i64 0, i32 6
  %138 = load i32, ptr %137, align 4
  %139 = and i32 %138, -1024
  %140 = or i32 %139, 32
  store i32 %140, ptr %137, align 4
  tail call void @fixup_unsigned_type(ptr noundef nonnull %136) #29
  %141 = getelementptr inbounds %struct.tree_type, ptr %136, i64 0, i32 14
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  %143 = icmp eq ptr %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %131
  %145 = load i64, ptr %142, align 8
  %146 = and i64 %145, 65535
  %147 = icmp eq i64 %146, 23
  br i1 %147, label %148, label %157

148:                                              ; preds = %144
  %149 = getelementptr inbounds %struct.tree_int_cst, ptr %142, i64 0, i32 1, i32 1
  %150 = load i64, ptr %149, align 8, !tbaa !17
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.tree_int_cst, ptr %142, i64 0, i32 1
  %154 = load i64, ptr %153, align 8, !tbaa !17
  %155 = trunc i64 %154 to i32
  %156 = tail call ptr @type_hash_canon(i32 noundef %155, ptr noundef nonnull %136)
  br label %157

157:                                              ; preds = %131, %144, %148, %152
  %158 = phi ptr [ %156, %152 ], [ %136, %148 ], [ %136, %131 ], [ %136, %144 ]
  store ptr %158, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 11), align 8, !tbaa !6
  %159 = tail call ptr @make_node_stat(i32 noundef 8)
  %160 = getelementptr inbounds %struct.tree_type, ptr %159, i64 0, i32 6
  %161 = load i32, ptr %160, align 4
  %162 = and i32 %161, -1024
  %163 = or i32 %162, 64
  store i32 %163, ptr %160, align 4
  tail call void @fixup_unsigned_type(ptr noundef nonnull %159) #29
  %164 = getelementptr inbounds %struct.tree_type, ptr %159, i64 0, i32 14
  %165 = load ptr, ptr %164, align 8, !tbaa !17
  %166 = icmp eq ptr %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %157
  %168 = load i64, ptr %165, align 8
  %169 = and i64 %168, 65535
  %170 = icmp eq i64 %169, 23
  br i1 %170, label %171, label %180

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.tree_int_cst, ptr %165, i64 0, i32 1, i32 1
  %173 = load i64, ptr %172, align 8, !tbaa !17
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %180

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.tree_int_cst, ptr %165, i64 0, i32 1
  %177 = load i64, ptr %176, align 8, !tbaa !17
  %178 = trunc i64 %177 to i32
  %179 = tail call ptr @type_hash_canon(i32 noundef %178, ptr noundef nonnull %159)
  br label %180

180:                                              ; preds = %157, %167, %171, %175
  %181 = phi ptr [ %179, %175 ], [ %159, %171 ], [ %159, %157 ], [ %159, %167 ]
  store ptr %181, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 12), align 16, !tbaa !6
  %182 = tail call ptr @make_node_stat(i32 noundef 9)
  store ptr %182, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  %183 = getelementptr inbounds %struct.tree_type, ptr %182, i64 0, i32 6
  %184 = load i32, ptr %183, align 4
  %185 = and i32 %184, -1024
  %186 = or i32 %185, 32
  store i32 %186, ptr %183, align 4
  %187 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  tail call void @layout_type(ptr noundef %187) #29
  %188 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  %189 = getelementptr inbounds %struct.tree_type, ptr %188, i64 0, i32 6
  %190 = load i32, ptr %189, align 4
  %191 = and i32 %190, -16711681
  %192 = or i32 %191, 2752512
  store i32 %192, ptr %189, align 4
  %193 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  %194 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %195 = icmp eq ptr %194, %193
  br i1 %195, label %200, label %196

196:                                              ; preds = %180
  %197 = load i64, ptr %193, align 8
  %198 = lshr i64 %197, 56
  %199 = trunc i64 %198 to i8
  br label %200

200:                                              ; preds = %180, %196
  %201 = phi i8 [ %199, %196 ], [ 0, %180 ]
  %202 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %203 = tail call i32 %202(i8 noundef zeroext %201) #29
  %204 = tail call ptr @build_pointer_type_for_mode(ptr noundef %193, i32 noundef %203, i8 noundef zeroext 0)
  store ptr %204, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 52), align 16, !tbaa !6
  %205 = tail call ptr @make_node_stat(i32 noundef 9)
  store ptr %205, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !6
  %206 = getelementptr inbounds %struct.tree_type, ptr %205, i64 0, i32 6
  %207 = load i32, ptr %206, align 4
  %208 = and i32 %207, -1024
  %209 = or i32 %208, 64
  store i32 %209, ptr %206, align 4
  %210 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !6
  tail call void @layout_type(ptr noundef %210) #29
  %211 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !6
  %212 = getelementptr inbounds %struct.tree_type, ptr %211, i64 0, i32 6
  %213 = load i32, ptr %212, align 4
  %214 = and i32 %213, -16711681
  %215 = or i32 %214, 2818048
  store i32 %215, ptr %212, align 4
  %216 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !6
  %217 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %218 = icmp eq ptr %217, %216
  br i1 %218, label %223, label %219

219:                                              ; preds = %200
  %220 = load i64, ptr %216, align 8
  %221 = lshr i64 %220, 56
  %222 = trunc i64 %221 to i8
  br label %223

223:                                              ; preds = %200, %219
  %224 = phi i8 [ %222, %219 ], [ 0, %200 ]
  %225 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %226 = tail call i32 %225(i8 noundef zeroext %224) #29
  %227 = tail call ptr @build_pointer_type_for_mode(ptr noundef %216, i32 noundef %226, i8 noundef zeroext 0)
  store ptr %227, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 53), align 8, !tbaa !6
  %228 = tail call ptr @make_node_stat(i32 noundef 9)
  store ptr %228, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  %229 = getelementptr inbounds %struct.tree_type, ptr %228, i64 0, i32 6
  %230 = load i32, ptr %229, align 4
  %231 = and i32 %230, -1024
  %232 = or i32 %231, 128
  store i32 %232, ptr %229, align 4
  %233 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  tail call void @layout_type(ptr noundef %233) #29
  %234 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  %235 = getelementptr inbounds %struct.tree_type, ptr %234, i64 0, i32 6
  %236 = load i32, ptr %235, align 4
  %237 = and i32 %236, -16711681
  %238 = or i32 %237, 2883584
  store i32 %238, ptr %235, align 4
  %239 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  %240 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %241 = icmp eq ptr %240, %239
  br i1 %241, label %246, label %242

242:                                              ; preds = %223
  %243 = load i64, ptr %239, align 8
  %244 = lshr i64 %243, 56
  %245 = trunc i64 %244 to i8
  br label %246

246:                                              ; preds = %223, %242
  %247 = phi i8 [ %245, %242 ], [ 0, %223 ]
  %248 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57), align 8, !tbaa !243
  %249 = tail call i32 %248(i8 noundef zeroext %247) #29
  %250 = tail call ptr @build_pointer_type_for_mode(ptr noundef %239, i32 noundef %249, i8 noundef zeroext 0)
  store ptr %250, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 54), align 16, !tbaa !6
  %251 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %252 = tail call ptr @build_complex_type(ptr noundef %251)
  store ptr %252, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %253 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %254 = tail call ptr @build_complex_type(ptr noundef %253)
  store ptr %254, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 28), align 16, !tbaa !6
  %255 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  %256 = tail call ptr @build_complex_type(ptr noundef %255)
  store ptr %256, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 29), align 8, !tbaa !6
  %257 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  %258 = tail call ptr @build_complex_type(ptr noundef %257)
  store ptr %258, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 30), align 16, !tbaa !6
  %259 = tail call ptr @make_fract_type(i32 noundef 8, i32 noundef 0, i32 noundef 1) #29
  store ptr %259, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8, !tbaa !6
  %260 = tail call ptr @make_fract_type(i32 noundef 8, i32 noundef 1, i32 noundef 1) #29
  store ptr %260, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8, !tbaa !6
  %261 = tail call ptr @make_fract_type(i32 noundef 8, i32 noundef 0, i32 noundef 0) #29
  store ptr %261, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8, !tbaa !6
  %262 = tail call ptr @make_fract_type(i32 noundef 8, i32 noundef 1, i32 noundef 0) #29
  store ptr %262, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8, !tbaa !6
  %263 = tail call ptr @make_fract_type(i32 noundef 16, i32 noundef 0, i32 noundef 1) #29
  store ptr %263, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16, !tbaa !6
  %264 = tail call ptr @make_fract_type(i32 noundef 16, i32 noundef 1, i32 noundef 1) #29
  store ptr %264, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16, !tbaa !6
  %265 = tail call ptr @make_fract_type(i32 noundef 16, i32 noundef 0, i32 noundef 0) #29
  store ptr %265, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16, !tbaa !6
  %266 = tail call ptr @make_fract_type(i32 noundef 16, i32 noundef 1, i32 noundef 0) #29
  store ptr %266, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16, !tbaa !6
  %267 = tail call ptr @make_fract_type(i32 noundef 32, i32 noundef 0, i32 noundef 1) #29
  store ptr %267, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8, !tbaa !6
  %268 = tail call ptr @make_fract_type(i32 noundef 32, i32 noundef 1, i32 noundef 1) #29
  store ptr %268, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8, !tbaa !6
  %269 = tail call ptr @make_fract_type(i32 noundef 32, i32 noundef 0, i32 noundef 0) #29
  store ptr %269, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8, !tbaa !6
  %270 = tail call ptr @make_fract_type(i32 noundef 32, i32 noundef 1, i32 noundef 0) #29
  store ptr %270, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8, !tbaa !6
  %271 = tail call ptr @make_fract_type(i32 noundef 64, i32 noundef 0, i32 noundef 1) #29
  store ptr %271, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16, !tbaa !6
  %272 = tail call ptr @make_fract_type(i32 noundef 64, i32 noundef 1, i32 noundef 1) #29
  store ptr %272, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16, !tbaa !6
  %273 = tail call ptr @make_fract_type(i32 noundef 64, i32 noundef 0, i32 noundef 0) #29
  store ptr %273, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16, !tbaa !6
  %274 = tail call ptr @make_fract_type(i32 noundef 64, i32 noundef 1, i32 noundef 0) #29
  store ptr %274, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16, !tbaa !6
  %275 = tail call ptr @make_accum_type(i32 noundef 16, i32 noundef 0, i32 noundef 1) #29
  store ptr %275, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8, !tbaa !6
  %276 = tail call ptr @make_accum_type(i32 noundef 16, i32 noundef 1, i32 noundef 1) #29
  store ptr %276, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8, !tbaa !6
  %277 = tail call ptr @make_accum_type(i32 noundef 16, i32 noundef 0, i32 noundef 0) #29
  store ptr %277, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8, !tbaa !6
  %278 = tail call ptr @make_accum_type(i32 noundef 16, i32 noundef 1, i32 noundef 0) #29
  store ptr %278, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8, !tbaa !6
  %279 = tail call ptr @make_accum_type(i32 noundef 32, i32 noundef 0, i32 noundef 1) #29
  store ptr %279, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16, !tbaa !6
  %280 = tail call ptr @make_accum_type(i32 noundef 32, i32 noundef 1, i32 noundef 1) #29
  store ptr %280, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16, !tbaa !6
  %281 = tail call ptr @make_accum_type(i32 noundef 32, i32 noundef 0, i32 noundef 0) #29
  store ptr %281, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16, !tbaa !6
  %282 = tail call ptr @make_accum_type(i32 noundef 32, i32 noundef 1, i32 noundef 0) #29
  store ptr %282, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16, !tbaa !6
  %283 = tail call ptr @make_accum_type(i32 noundef 64, i32 noundef 0, i32 noundef 1) #29
  store ptr %283, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8, !tbaa !6
  %284 = tail call ptr @make_accum_type(i32 noundef 64, i32 noundef 1, i32 noundef 1) #29
  store ptr %284, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8, !tbaa !6
  %285 = tail call ptr @make_accum_type(i32 noundef 64, i32 noundef 0, i32 noundef 0) #29
  store ptr %285, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8, !tbaa !6
  %286 = tail call ptr @make_accum_type(i32 noundef 64, i32 noundef 1, i32 noundef 0) #29
  store ptr %286, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8, !tbaa !6
  %287 = tail call ptr @make_accum_type(i32 noundef 128, i32 noundef 0, i32 noundef 1) #29
  store ptr %287, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16, !tbaa !6
  %288 = tail call ptr @make_accum_type(i32 noundef 128, i32 noundef 1, i32 noundef 1) #29
  store ptr %288, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16, !tbaa !6
  %289 = tail call ptr @make_accum_type(i32 noundef 128, i32 noundef 0, i32 noundef 0) #29
  store ptr %289, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16, !tbaa !6
  %290 = tail call ptr @make_accum_type(i32 noundef 128, i32 noundef 1, i32 noundef 0) #29
  store ptr %290, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16, !tbaa !6
  %291 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 20), align 4, !tbaa !17
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 3
  %294 = add nsw i32 %293, -8
  %295 = lshr exact i32 %294, 3
  switch i32 %295, label %304 [
    i32 0, label %296
    i32 1, label %298
    i32 3, label %300
    i32 7, label %302
  ]

296:                                              ; preds = %246
  %297 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  br label %306

298:                                              ; preds = %246
  %299 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  br label %306

300:                                              ; preds = %246
  %301 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  br label %306

302:                                              ; preds = %246
  %303 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  br label %306

304:                                              ; preds = %246
  %305 = tail call ptr @make_fract_type(i32 noundef %293, i32 noundef 0, i32 noundef 0) #29
  br label %306

306:                                              ; preds = %296, %298, %300, %302, %304
  %307 = phi ptr [ %305, %304 ], [ %297, %296 ], [ %299, %298 ], [ %301, %300 ], [ %303, %302 ]
  store ptr %307, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 89), align 8, !tbaa !6
  %308 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 25), align 1, !tbaa !17
  %309 = zext i8 %308 to i32
  %310 = shl nuw nsw i32 %309, 3
  %311 = add nsw i32 %310, -8
  %312 = lshr exact i32 %311, 3
  switch i32 %312, label %321 [
    i32 0, label %313
    i32 1, label %315
    i32 3, label %317
    i32 7, label %319
  ]

313:                                              ; preds = %306
  %314 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  br label %323

315:                                              ; preds = %306
  %316 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  br label %323

317:                                              ; preds = %306
  %318 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  br label %323

319:                                              ; preds = %306
  %320 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  br label %323

321:                                              ; preds = %306
  %322 = tail call ptr @make_fract_type(i32 noundef %310, i32 noundef 1, i32 noundef 0) #29
  br label %323

323:                                              ; preds = %313, %315, %317, %319, %321
  %324 = phi ptr [ %322, %321 ], [ %314, %313 ], [ %316, %315 ], [ %318, %317 ], [ %320, %319 ]
  store ptr %324, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 94), align 16, !tbaa !6
  %325 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 20), align 4, !tbaa !17
  %326 = zext i8 %325 to i32
  %327 = shl nuw nsw i32 %326, 3
  %328 = add nsw i32 %327, -8
  %329 = lshr exact i32 %328, 3
  switch i32 %329, label %338 [
    i32 0, label %330
    i32 1, label %332
    i32 3, label %334
    i32 7, label %336
  ]

330:                                              ; preds = %323
  %331 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  br label %340

332:                                              ; preds = %323
  %333 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  br label %340

334:                                              ; preds = %323
  %335 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  br label %340

336:                                              ; preds = %323
  %337 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  br label %340

338:                                              ; preds = %323
  %339 = tail call ptr @make_fract_type(i32 noundef %327, i32 noundef 0, i32 noundef 1) #29
  br label %340

340:                                              ; preds = %330, %332, %334, %336, %338
  %341 = phi ptr [ %331, %330 ], [ %333, %332 ], [ %335, %334 ], [ %337, %336 ], [ %339, %338 ]
  store ptr %341, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 99), align 8, !tbaa !6
  %342 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 25), align 1, !tbaa !17
  %343 = zext i8 %342 to i32
  %344 = shl nuw nsw i32 %343, 3
  %345 = add nsw i32 %344, -8
  %346 = lshr exact i32 %345, 3
  switch i32 %346, label %355 [
    i32 0, label %347
    i32 1, label %349
    i32 3, label %351
    i32 7, label %353
  ]

347:                                              ; preds = %340
  %348 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  br label %357

349:                                              ; preds = %340
  %350 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  br label %357

351:                                              ; preds = %340
  %352 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  br label %357

353:                                              ; preds = %340
  %354 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  br label %357

355:                                              ; preds = %340
  %356 = tail call ptr @make_fract_type(i32 noundef %344, i32 noundef 1, i32 noundef 1) #29
  br label %357

357:                                              ; preds = %347, %349, %351, %353, %355
  %358 = phi ptr [ %348, %347 ], [ %350, %349 ], [ %352, %351 ], [ %354, %353 ], [ %356, %355 ]
  store ptr %358, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 104), align 16, !tbaa !6
  %359 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 21), align 1, !tbaa !17
  %360 = zext i8 %359 to i32
  %361 = shl nuw nsw i32 %360, 3
  %362 = add nsw i32 %361, -8
  %363 = lshr exact i32 %362, 3
  switch i32 %363, label %372 [
    i32 0, label %364
    i32 1, label %366
    i32 3, label %368
    i32 7, label %370
  ]

364:                                              ; preds = %357
  %365 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  br label %374

366:                                              ; preds = %357
  %367 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  br label %374

368:                                              ; preds = %357
  %369 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  br label %374

370:                                              ; preds = %357
  %371 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  br label %374

372:                                              ; preds = %357
  %373 = tail call ptr @make_fract_type(i32 noundef %361, i32 noundef 0, i32 noundef 0) #29
  br label %374

374:                                              ; preds = %364, %366, %368, %370, %372
  %375 = phi ptr [ %373, %372 ], [ %365, %364 ], [ %367, %366 ], [ %369, %368 ], [ %371, %370 ]
  store ptr %375, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 90), align 16, !tbaa !6
  %376 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 26), align 2, !tbaa !17
  %377 = zext i8 %376 to i32
  %378 = shl nuw nsw i32 %377, 3
  %379 = add nsw i32 %378, -8
  %380 = lshr exact i32 %379, 3
  switch i32 %380, label %389 [
    i32 0, label %381
    i32 1, label %383
    i32 3, label %385
    i32 7, label %387
  ]

381:                                              ; preds = %374
  %382 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  br label %391

383:                                              ; preds = %374
  %384 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  br label %391

385:                                              ; preds = %374
  %386 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  br label %391

387:                                              ; preds = %374
  %388 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  br label %391

389:                                              ; preds = %374
  %390 = tail call ptr @make_fract_type(i32 noundef %378, i32 noundef 1, i32 noundef 0) #29
  br label %391

391:                                              ; preds = %381, %383, %385, %387, %389
  %392 = phi ptr [ %390, %389 ], [ %382, %381 ], [ %384, %383 ], [ %386, %385 ], [ %388, %387 ]
  store ptr %392, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 95), align 8, !tbaa !6
  %393 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 21), align 1, !tbaa !17
  %394 = zext i8 %393 to i32
  %395 = shl nuw nsw i32 %394, 3
  %396 = add nsw i32 %395, -8
  %397 = lshr exact i32 %396, 3
  switch i32 %397, label %406 [
    i32 0, label %398
    i32 1, label %400
    i32 3, label %402
    i32 7, label %404
  ]

398:                                              ; preds = %391
  %399 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  br label %408

400:                                              ; preds = %391
  %401 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  br label %408

402:                                              ; preds = %391
  %403 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  br label %408

404:                                              ; preds = %391
  %405 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  br label %408

406:                                              ; preds = %391
  %407 = tail call ptr @make_fract_type(i32 noundef %395, i32 noundef 0, i32 noundef 1) #29
  br label %408

408:                                              ; preds = %398, %400, %402, %404, %406
  %409 = phi ptr [ %399, %398 ], [ %401, %400 ], [ %403, %402 ], [ %405, %404 ], [ %407, %406 ]
  store ptr %409, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 100), align 16, !tbaa !6
  %410 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 26), align 2, !tbaa !17
  %411 = zext i8 %410 to i32
  %412 = shl nuw nsw i32 %411, 3
  %413 = add nsw i32 %412, -8
  %414 = lshr exact i32 %413, 3
  switch i32 %414, label %423 [
    i32 0, label %415
    i32 1, label %417
    i32 3, label %419
    i32 7, label %421
  ]

415:                                              ; preds = %408
  %416 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  br label %425

417:                                              ; preds = %408
  %418 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  br label %425

419:                                              ; preds = %408
  %420 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  br label %425

421:                                              ; preds = %408
  %422 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  br label %425

423:                                              ; preds = %408
  %424 = tail call ptr @make_fract_type(i32 noundef %412, i32 noundef 1, i32 noundef 1) #29
  br label %425

425:                                              ; preds = %415, %417, %419, %421, %423
  %426 = phi ptr [ %416, %415 ], [ %418, %417 ], [ %420, %419 ], [ %422, %421 ], [ %424, %423 ]
  store ptr %426, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 105), align 8, !tbaa !6
  %427 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 22), align 2, !tbaa !17
  %428 = zext i8 %427 to i32
  %429 = shl nuw nsw i32 %428, 3
  %430 = add nsw i32 %429, -8
  %431 = lshr exact i32 %430, 3
  switch i32 %431, label %440 [
    i32 0, label %432
    i32 1, label %434
    i32 3, label %436
    i32 7, label %438
  ]

432:                                              ; preds = %425
  %433 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  br label %442

434:                                              ; preds = %425
  %435 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  br label %442

436:                                              ; preds = %425
  %437 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  br label %442

438:                                              ; preds = %425
  %439 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  br label %442

440:                                              ; preds = %425
  %441 = tail call ptr @make_fract_type(i32 noundef %429, i32 noundef 0, i32 noundef 0) #29
  br label %442

442:                                              ; preds = %432, %434, %436, %438, %440
  %443 = phi ptr [ %441, %440 ], [ %433, %432 ], [ %435, %434 ], [ %437, %436 ], [ %439, %438 ]
  store ptr %443, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 91), align 8, !tbaa !6
  %444 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 27), align 1, !tbaa !17
  %445 = zext i8 %444 to i32
  %446 = shl nuw nsw i32 %445, 3
  %447 = add nsw i32 %446, -8
  %448 = lshr exact i32 %447, 3
  switch i32 %448, label %457 [
    i32 0, label %449
    i32 1, label %451
    i32 3, label %453
    i32 7, label %455
  ]

449:                                              ; preds = %442
  %450 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  br label %459

451:                                              ; preds = %442
  %452 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  br label %459

453:                                              ; preds = %442
  %454 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  br label %459

455:                                              ; preds = %442
  %456 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  br label %459

457:                                              ; preds = %442
  %458 = tail call ptr @make_fract_type(i32 noundef %446, i32 noundef 1, i32 noundef 0) #29
  br label %459

459:                                              ; preds = %449, %451, %453, %455, %457
  %460 = phi ptr [ %458, %457 ], [ %450, %449 ], [ %452, %451 ], [ %454, %453 ], [ %456, %455 ]
  store ptr %460, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 96), align 16, !tbaa !6
  %461 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 22), align 2, !tbaa !17
  %462 = zext i8 %461 to i32
  %463 = shl nuw nsw i32 %462, 3
  %464 = add nsw i32 %463, -8
  %465 = lshr exact i32 %464, 3
  switch i32 %465, label %474 [
    i32 0, label %466
    i32 1, label %468
    i32 3, label %470
    i32 7, label %472
  ]

466:                                              ; preds = %459
  %467 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  br label %476

468:                                              ; preds = %459
  %469 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  br label %476

470:                                              ; preds = %459
  %471 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  br label %476

472:                                              ; preds = %459
  %473 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  br label %476

474:                                              ; preds = %459
  %475 = tail call ptr @make_fract_type(i32 noundef %463, i32 noundef 0, i32 noundef 1) #29
  br label %476

476:                                              ; preds = %466, %468, %470, %472, %474
  %477 = phi ptr [ %467, %466 ], [ %469, %468 ], [ %471, %470 ], [ %473, %472 ], [ %475, %474 ]
  store ptr %477, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 101), align 8, !tbaa !6
  %478 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 27), align 1, !tbaa !17
  %479 = zext i8 %478 to i32
  %480 = shl nuw nsw i32 %479, 3
  %481 = add nsw i32 %480, -8
  %482 = lshr exact i32 %481, 3
  switch i32 %482, label %491 [
    i32 0, label %483
    i32 1, label %485
    i32 3, label %487
    i32 7, label %489
  ]

483:                                              ; preds = %476
  %484 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  br label %493

485:                                              ; preds = %476
  %486 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  br label %493

487:                                              ; preds = %476
  %488 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  br label %493

489:                                              ; preds = %476
  %490 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  br label %493

491:                                              ; preds = %476
  %492 = tail call ptr @make_fract_type(i32 noundef %480, i32 noundef 1, i32 noundef 1) #29
  br label %493

493:                                              ; preds = %483, %485, %487, %489, %491
  %494 = phi ptr [ %484, %483 ], [ %486, %485 ], [ %488, %487 ], [ %490, %489 ], [ %492, %491 ]
  store ptr %494, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 106), align 16, !tbaa !6
  %495 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 23), align 1, !tbaa !17
  %496 = zext i8 %495 to i32
  %497 = shl nuw nsw i32 %496, 3
  %498 = add nsw i32 %497, -8
  %499 = lshr exact i32 %498, 3
  switch i32 %499, label %508 [
    i32 0, label %500
    i32 1, label %502
    i32 3, label %504
    i32 7, label %506
  ]

500:                                              ; preds = %493
  %501 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  br label %510

502:                                              ; preds = %493
  %503 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  br label %510

504:                                              ; preds = %493
  %505 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  br label %510

506:                                              ; preds = %493
  %507 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  br label %510

508:                                              ; preds = %493
  %509 = tail call ptr @make_fract_type(i32 noundef %497, i32 noundef 0, i32 noundef 0) #29
  br label %510

510:                                              ; preds = %500, %502, %504, %506, %508
  %511 = phi ptr [ %509, %508 ], [ %501, %500 ], [ %503, %502 ], [ %505, %504 ], [ %507, %506 ]
  store ptr %511, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 92), align 16, !tbaa !6
  %512 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 28), align 4, !tbaa !17
  %513 = zext i8 %512 to i32
  %514 = shl nuw nsw i32 %513, 3
  %515 = add nsw i32 %514, -8
  %516 = lshr exact i32 %515, 3
  switch i32 %516, label %525 [
    i32 0, label %517
    i32 1, label %519
    i32 3, label %521
    i32 7, label %523
  ]

517:                                              ; preds = %510
  %518 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  br label %527

519:                                              ; preds = %510
  %520 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  br label %527

521:                                              ; preds = %510
  %522 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  br label %527

523:                                              ; preds = %510
  %524 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  br label %527

525:                                              ; preds = %510
  %526 = tail call ptr @make_fract_type(i32 noundef %514, i32 noundef 1, i32 noundef 0) #29
  br label %527

527:                                              ; preds = %517, %519, %521, %523, %525
  %528 = phi ptr [ %526, %525 ], [ %518, %517 ], [ %520, %519 ], [ %522, %521 ], [ %524, %523 ]
  store ptr %528, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 97), align 8, !tbaa !6
  %529 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 23), align 1, !tbaa !17
  %530 = zext i8 %529 to i32
  %531 = shl nuw nsw i32 %530, 3
  %532 = add nsw i32 %531, -8
  %533 = lshr exact i32 %532, 3
  switch i32 %533, label %542 [
    i32 0, label %534
    i32 1, label %536
    i32 3, label %538
    i32 7, label %540
  ]

534:                                              ; preds = %527
  %535 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  br label %544

536:                                              ; preds = %527
  %537 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  br label %544

538:                                              ; preds = %527
  %539 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  br label %544

540:                                              ; preds = %527
  %541 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  br label %544

542:                                              ; preds = %527
  %543 = tail call ptr @make_fract_type(i32 noundef %531, i32 noundef 0, i32 noundef 1) #29
  br label %544

544:                                              ; preds = %534, %536, %538, %540, %542
  %545 = phi ptr [ %535, %534 ], [ %537, %536 ], [ %539, %538 ], [ %541, %540 ], [ %543, %542 ]
  store ptr %545, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 102), align 16, !tbaa !6
  %546 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 28), align 4, !tbaa !17
  %547 = zext i8 %546 to i32
  %548 = shl nuw nsw i32 %547, 3
  %549 = add nsw i32 %548, -8
  %550 = lshr exact i32 %549, 3
  switch i32 %550, label %559 [
    i32 0, label %551
    i32 1, label %553
    i32 3, label %555
    i32 7, label %557
  ]

551:                                              ; preds = %544
  %552 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  br label %561

553:                                              ; preds = %544
  %554 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  br label %561

555:                                              ; preds = %544
  %556 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  br label %561

557:                                              ; preds = %544
  %558 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  br label %561

559:                                              ; preds = %544
  %560 = tail call ptr @make_fract_type(i32 noundef %548, i32 noundef 1, i32 noundef 1) #29
  br label %561

561:                                              ; preds = %551, %553, %555, %557, %559
  %562 = phi ptr [ %552, %551 ], [ %554, %553 ], [ %556, %555 ], [ %558, %557 ], [ %560, %559 ]
  store ptr %562, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 107), align 8, !tbaa !6
  %563 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 24), align 8, !tbaa !17
  %564 = zext i8 %563 to i32
  %565 = shl nuw nsw i32 %564, 3
  %566 = add nsw i32 %565, -8
  %567 = lshr exact i32 %566, 3
  switch i32 %567, label %576 [
    i32 0, label %568
    i32 1, label %570
    i32 3, label %572
    i32 7, label %574
  ]

568:                                              ; preds = %561
  %569 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  br label %578

570:                                              ; preds = %561
  %571 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  br label %578

572:                                              ; preds = %561
  %573 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  br label %578

574:                                              ; preds = %561
  %575 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  br label %578

576:                                              ; preds = %561
  %577 = tail call ptr @make_fract_type(i32 noundef %565, i32 noundef 0, i32 noundef 0) #29
  br label %578

578:                                              ; preds = %568, %570, %572, %574, %576
  %579 = phi ptr [ %577, %576 ], [ %569, %568 ], [ %571, %570 ], [ %573, %572 ], [ %575, %574 ]
  store ptr %579, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 93), align 8, !tbaa !6
  %580 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 29), align 1, !tbaa !17
  %581 = zext i8 %580 to i32
  %582 = shl nuw nsw i32 %581, 3
  %583 = add nsw i32 %582, -8
  %584 = lshr exact i32 %583, 3
  switch i32 %584, label %593 [
    i32 0, label %585
    i32 1, label %587
    i32 3, label %589
    i32 7, label %591
  ]

585:                                              ; preds = %578
  %586 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  br label %595

587:                                              ; preds = %578
  %588 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  br label %595

589:                                              ; preds = %578
  %590 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  br label %595

591:                                              ; preds = %578
  %592 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  br label %595

593:                                              ; preds = %578
  %594 = tail call ptr @make_fract_type(i32 noundef %582, i32 noundef 1, i32 noundef 0) #29
  br label %595

595:                                              ; preds = %585, %587, %589, %591, %593
  %596 = phi ptr [ %594, %593 ], [ %586, %585 ], [ %588, %587 ], [ %590, %589 ], [ %592, %591 ]
  store ptr %596, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 98), align 16, !tbaa !6
  %597 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 24), align 8, !tbaa !17
  %598 = zext i8 %597 to i32
  %599 = shl nuw nsw i32 %598, 3
  %600 = add nsw i32 %599, -8
  %601 = lshr exact i32 %600, 3
  switch i32 %601, label %610 [
    i32 0, label %602
    i32 1, label %604
    i32 3, label %606
    i32 7, label %608
  ]

602:                                              ; preds = %595
  %603 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  br label %612

604:                                              ; preds = %595
  %605 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  br label %612

606:                                              ; preds = %595
  %607 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  br label %612

608:                                              ; preds = %595
  %609 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  br label %612

610:                                              ; preds = %595
  %611 = tail call ptr @make_fract_type(i32 noundef %599, i32 noundef 0, i32 noundef 1) #29
  br label %612

612:                                              ; preds = %602, %604, %606, %608, %610
  %613 = phi ptr [ %603, %602 ], [ %605, %604 ], [ %607, %606 ], [ %609, %608 ], [ %611, %610 ]
  store ptr %613, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 103), align 8, !tbaa !6
  %614 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 29), align 1, !tbaa !17
  %615 = zext i8 %614 to i32
  %616 = shl nuw nsw i32 %615, 3
  %617 = add nsw i32 %616, -8
  %618 = lshr exact i32 %617, 3
  switch i32 %618, label %627 [
    i32 0, label %619
    i32 1, label %621
    i32 3, label %623
    i32 7, label %625
  ]

619:                                              ; preds = %612
  %620 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  br label %629

621:                                              ; preds = %612
  %622 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  br label %629

623:                                              ; preds = %612
  %624 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  br label %629

625:                                              ; preds = %612
  %626 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  br label %629

627:                                              ; preds = %612
  %628 = tail call ptr @make_fract_type(i32 noundef %616, i32 noundef 1, i32 noundef 1) #29
  br label %629

629:                                              ; preds = %619, %621, %623, %625, %627
  %630 = phi ptr [ %620, %619 ], [ %622, %621 ], [ %624, %623 ], [ %626, %625 ], [ %628, %627 ]
  store ptr %630, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 108), align 16, !tbaa !6
  %631 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 30), align 2, !tbaa !17
  %632 = zext i8 %631 to i32
  %633 = shl nuw nsw i32 %632, 3
  %634 = add nsw i32 %633, -16
  %635 = tail call i32 @llvm.fshl.i32(i32 %633, i32 %634, i32 28)
  switch i32 %635, label %644 [
    i32 0, label %636
    i32 1, label %638
    i32 3, label %640
    i32 7, label %642
  ]

636:                                              ; preds = %629
  %637 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8
  br label %646

638:                                              ; preds = %629
  %639 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16
  br label %646

640:                                              ; preds = %629
  %641 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8
  br label %646

642:                                              ; preds = %629
  %643 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16
  br label %646

644:                                              ; preds = %629
  %645 = tail call ptr @make_accum_type(i32 noundef %633, i32 noundef 0, i32 noundef 0) #29
  br label %646

646:                                              ; preds = %636, %638, %640, %642, %644
  %647 = phi ptr [ %645, %644 ], [ %637, %636 ], [ %639, %638 ], [ %641, %640 ], [ %643, %642 ]
  store ptr %647, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 109), align 8, !tbaa !6
  %648 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 34), align 2, !tbaa !17
  %649 = zext i8 %648 to i32
  %650 = shl nuw nsw i32 %649, 3
  %651 = add nsw i32 %650, -16
  %652 = tail call i32 @llvm.fshl.i32(i32 %650, i32 %651, i32 28)
  switch i32 %652, label %661 [
    i32 0, label %653
    i32 1, label %655
    i32 3, label %657
    i32 7, label %659
  ]

653:                                              ; preds = %646
  %654 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8
  br label %663

655:                                              ; preds = %646
  %656 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16
  br label %663

657:                                              ; preds = %646
  %658 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8
  br label %663

659:                                              ; preds = %646
  %660 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16
  br label %663

661:                                              ; preds = %646
  %662 = tail call ptr @make_accum_type(i32 noundef %650, i32 noundef 1, i32 noundef 0) #29
  br label %663

663:                                              ; preds = %653, %655, %657, %659, %661
  %664 = phi ptr [ %662, %661 ], [ %654, %653 ], [ %656, %655 ], [ %658, %657 ], [ %660, %659 ]
  store ptr %664, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 113), align 8, !tbaa !6
  %665 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 30), align 2, !tbaa !17
  %666 = zext i8 %665 to i32
  %667 = shl nuw nsw i32 %666, 3
  %668 = add nsw i32 %667, -16
  %669 = tail call i32 @llvm.fshl.i32(i32 %667, i32 %668, i32 28)
  switch i32 %669, label %678 [
    i32 0, label %670
    i32 1, label %672
    i32 3, label %674
    i32 7, label %676
  ]

670:                                              ; preds = %663
  %671 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8
  br label %680

672:                                              ; preds = %663
  %673 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16
  br label %680

674:                                              ; preds = %663
  %675 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8
  br label %680

676:                                              ; preds = %663
  %677 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16
  br label %680

678:                                              ; preds = %663
  %679 = tail call ptr @make_accum_type(i32 noundef %667, i32 noundef 0, i32 noundef 1) #29
  br label %680

680:                                              ; preds = %670, %672, %674, %676, %678
  %681 = phi ptr [ %671, %670 ], [ %673, %672 ], [ %675, %674 ], [ %677, %676 ], [ %679, %678 ]
  store ptr %681, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 117), align 8, !tbaa !6
  %682 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 34), align 2, !tbaa !17
  %683 = zext i8 %682 to i32
  %684 = shl nuw nsw i32 %683, 3
  %685 = add nsw i32 %684, -16
  %686 = tail call i32 @llvm.fshl.i32(i32 %684, i32 %685, i32 28)
  switch i32 %686, label %695 [
    i32 0, label %687
    i32 1, label %689
    i32 3, label %691
    i32 7, label %693
  ]

687:                                              ; preds = %680
  %688 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8
  br label %697

689:                                              ; preds = %680
  %690 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16
  br label %697

691:                                              ; preds = %680
  %692 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8
  br label %697

693:                                              ; preds = %680
  %694 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16
  br label %697

695:                                              ; preds = %680
  %696 = tail call ptr @make_accum_type(i32 noundef %684, i32 noundef 1, i32 noundef 1) #29
  br label %697

697:                                              ; preds = %687, %689, %691, %693, %695
  %698 = phi ptr [ %688, %687 ], [ %690, %689 ], [ %692, %691 ], [ %694, %693 ], [ %696, %695 ]
  store ptr %698, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 121), align 8, !tbaa !6
  %699 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 31), align 1, !tbaa !17
  %700 = zext i8 %699 to i32
  %701 = shl nuw nsw i32 %700, 3
  %702 = add nsw i32 %701, -16
  %703 = tail call i32 @llvm.fshl.i32(i32 %701, i32 %702, i32 28)
  switch i32 %703, label %712 [
    i32 0, label %704
    i32 1, label %706
    i32 3, label %708
    i32 7, label %710
  ]

704:                                              ; preds = %697
  %705 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8
  br label %714

706:                                              ; preds = %697
  %707 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16
  br label %714

708:                                              ; preds = %697
  %709 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8
  br label %714

710:                                              ; preds = %697
  %711 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16
  br label %714

712:                                              ; preds = %697
  %713 = tail call ptr @make_accum_type(i32 noundef %701, i32 noundef 0, i32 noundef 0) #29
  br label %714

714:                                              ; preds = %704, %706, %708, %710, %712
  %715 = phi ptr [ %713, %712 ], [ %705, %704 ], [ %707, %706 ], [ %709, %708 ], [ %711, %710 ]
  store ptr %715, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 110), align 16, !tbaa !6
  %716 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 35), align 1, !tbaa !17
  %717 = zext i8 %716 to i32
  %718 = shl nuw nsw i32 %717, 3
  %719 = add nsw i32 %718, -16
  %720 = tail call i32 @llvm.fshl.i32(i32 %718, i32 %719, i32 28)
  switch i32 %720, label %729 [
    i32 0, label %721
    i32 1, label %723
    i32 3, label %725
    i32 7, label %727
  ]

721:                                              ; preds = %714
  %722 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8
  br label %731

723:                                              ; preds = %714
  %724 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16
  br label %731

725:                                              ; preds = %714
  %726 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8
  br label %731

727:                                              ; preds = %714
  %728 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16
  br label %731

729:                                              ; preds = %714
  %730 = tail call ptr @make_accum_type(i32 noundef %718, i32 noundef 1, i32 noundef 0) #29
  br label %731

731:                                              ; preds = %721, %723, %725, %727, %729
  %732 = phi ptr [ %730, %729 ], [ %722, %721 ], [ %724, %723 ], [ %726, %725 ], [ %728, %727 ]
  store ptr %732, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 114), align 16, !tbaa !6
  %733 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 31), align 1, !tbaa !17
  %734 = zext i8 %733 to i32
  %735 = shl nuw nsw i32 %734, 3
  %736 = add nsw i32 %735, -16
  %737 = tail call i32 @llvm.fshl.i32(i32 %735, i32 %736, i32 28)
  switch i32 %737, label %746 [
    i32 0, label %738
    i32 1, label %740
    i32 3, label %742
    i32 7, label %744
  ]

738:                                              ; preds = %731
  %739 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8
  br label %748

740:                                              ; preds = %731
  %741 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16
  br label %748

742:                                              ; preds = %731
  %743 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8
  br label %748

744:                                              ; preds = %731
  %745 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16
  br label %748

746:                                              ; preds = %731
  %747 = tail call ptr @make_accum_type(i32 noundef %735, i32 noundef 0, i32 noundef 1) #29
  br label %748

748:                                              ; preds = %738, %740, %742, %744, %746
  %749 = phi ptr [ %739, %738 ], [ %741, %740 ], [ %743, %742 ], [ %745, %744 ], [ %747, %746 ]
  store ptr %749, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 118), align 16, !tbaa !6
  %750 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 35), align 1, !tbaa !17
  %751 = zext i8 %750 to i32
  %752 = shl nuw nsw i32 %751, 3
  %753 = add nsw i32 %752, -16
  %754 = tail call i32 @llvm.fshl.i32(i32 %752, i32 %753, i32 28)
  switch i32 %754, label %763 [
    i32 0, label %755
    i32 1, label %757
    i32 3, label %759
    i32 7, label %761
  ]

755:                                              ; preds = %748
  %756 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8
  br label %765

757:                                              ; preds = %748
  %758 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16
  br label %765

759:                                              ; preds = %748
  %760 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8
  br label %765

761:                                              ; preds = %748
  %762 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16
  br label %765

763:                                              ; preds = %748
  %764 = tail call ptr @make_accum_type(i32 noundef %752, i32 noundef 1, i32 noundef 1) #29
  br label %765

765:                                              ; preds = %755, %757, %759, %761, %763
  %766 = phi ptr [ %756, %755 ], [ %758, %757 ], [ %760, %759 ], [ %762, %761 ], [ %764, %763 ]
  store ptr %766, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 122), align 16, !tbaa !6
  %767 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 32), align 16, !tbaa !17
  %768 = zext i8 %767 to i32
  %769 = shl nuw nsw i32 %768, 3
  %770 = add nsw i32 %769, -16
  %771 = tail call i32 @llvm.fshl.i32(i32 %769, i32 %770, i32 28)
  switch i32 %771, label %780 [
    i32 0, label %772
    i32 1, label %774
    i32 3, label %776
    i32 7, label %778
  ]

772:                                              ; preds = %765
  %773 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8
  br label %782

774:                                              ; preds = %765
  %775 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16
  br label %782

776:                                              ; preds = %765
  %777 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8
  br label %782

778:                                              ; preds = %765
  %779 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16
  br label %782

780:                                              ; preds = %765
  %781 = tail call ptr @make_accum_type(i32 noundef %769, i32 noundef 0, i32 noundef 0) #29
  br label %782

782:                                              ; preds = %772, %774, %776, %778, %780
  %783 = phi ptr [ %781, %780 ], [ %773, %772 ], [ %775, %774 ], [ %777, %776 ], [ %779, %778 ]
  store ptr %783, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 111), align 8, !tbaa !6
  %784 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 36), align 4, !tbaa !17
  %785 = zext i8 %784 to i32
  %786 = shl nuw nsw i32 %785, 3
  %787 = add nsw i32 %786, -16
  %788 = tail call i32 @llvm.fshl.i32(i32 %786, i32 %787, i32 28)
  switch i32 %788, label %797 [
    i32 0, label %789
    i32 1, label %791
    i32 3, label %793
    i32 7, label %795
  ]

789:                                              ; preds = %782
  %790 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8
  br label %799

791:                                              ; preds = %782
  %792 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16
  br label %799

793:                                              ; preds = %782
  %794 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8
  br label %799

795:                                              ; preds = %782
  %796 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16
  br label %799

797:                                              ; preds = %782
  %798 = tail call ptr @make_accum_type(i32 noundef %786, i32 noundef 1, i32 noundef 0) #29
  br label %799

799:                                              ; preds = %789, %791, %793, %795, %797
  %800 = phi ptr [ %798, %797 ], [ %790, %789 ], [ %792, %791 ], [ %794, %793 ], [ %796, %795 ]
  store ptr %800, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 115), align 8, !tbaa !6
  %801 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 32), align 16, !tbaa !17
  %802 = zext i8 %801 to i32
  %803 = shl nuw nsw i32 %802, 3
  %804 = add nsw i32 %803, -16
  %805 = tail call i32 @llvm.fshl.i32(i32 %803, i32 %804, i32 28)
  switch i32 %805, label %814 [
    i32 0, label %806
    i32 1, label %808
    i32 3, label %810
    i32 7, label %812
  ]

806:                                              ; preds = %799
  %807 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8
  br label %816

808:                                              ; preds = %799
  %809 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16
  br label %816

810:                                              ; preds = %799
  %811 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8
  br label %816

812:                                              ; preds = %799
  %813 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16
  br label %816

814:                                              ; preds = %799
  %815 = tail call ptr @make_accum_type(i32 noundef %803, i32 noundef 0, i32 noundef 1) #29
  br label %816

816:                                              ; preds = %806, %808, %810, %812, %814
  %817 = phi ptr [ %807, %806 ], [ %809, %808 ], [ %811, %810 ], [ %813, %812 ], [ %815, %814 ]
  store ptr %817, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 119), align 8, !tbaa !6
  %818 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 36), align 4, !tbaa !17
  %819 = zext i8 %818 to i32
  %820 = shl nuw nsw i32 %819, 3
  %821 = add nsw i32 %820, -16
  %822 = tail call i32 @llvm.fshl.i32(i32 %820, i32 %821, i32 28)
  switch i32 %822, label %831 [
    i32 0, label %823
    i32 1, label %825
    i32 3, label %827
    i32 7, label %829
  ]

823:                                              ; preds = %816
  %824 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8
  br label %833

825:                                              ; preds = %816
  %826 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16
  br label %833

827:                                              ; preds = %816
  %828 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8
  br label %833

829:                                              ; preds = %816
  %830 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16
  br label %833

831:                                              ; preds = %816
  %832 = tail call ptr @make_accum_type(i32 noundef %820, i32 noundef 1, i32 noundef 1) #29
  br label %833

833:                                              ; preds = %823, %825, %827, %829, %831
  %834 = phi ptr [ %824, %823 ], [ %826, %825 ], [ %828, %827 ], [ %830, %829 ], [ %832, %831 ]
  store ptr %834, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 123), align 8, !tbaa !6
  %835 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 33), align 1, !tbaa !17
  %836 = zext i8 %835 to i32
  %837 = shl nuw nsw i32 %836, 3
  %838 = add nsw i32 %837, -16
  %839 = tail call i32 @llvm.fshl.i32(i32 %837, i32 %838, i32 28)
  switch i32 %839, label %848 [
    i32 0, label %840
    i32 1, label %842
    i32 3, label %844
    i32 7, label %846
  ]

840:                                              ; preds = %833
  %841 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8
  br label %850

842:                                              ; preds = %833
  %843 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16
  br label %850

844:                                              ; preds = %833
  %845 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8
  br label %850

846:                                              ; preds = %833
  %847 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16
  br label %850

848:                                              ; preds = %833
  %849 = tail call ptr @make_accum_type(i32 noundef %837, i32 noundef 0, i32 noundef 0) #29
  br label %850

850:                                              ; preds = %840, %842, %844, %846, %848
  %851 = phi ptr [ %849, %848 ], [ %841, %840 ], [ %843, %842 ], [ %845, %844 ], [ %847, %846 ]
  store ptr %851, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 112), align 16, !tbaa !6
  %852 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 37), align 1, !tbaa !17
  %853 = zext i8 %852 to i32
  %854 = shl nuw nsw i32 %853, 3
  %855 = add nsw i32 %854, -16
  %856 = tail call i32 @llvm.fshl.i32(i32 %854, i32 %855, i32 28)
  switch i32 %856, label %865 [
    i32 0, label %857
    i32 1, label %859
    i32 3, label %861
    i32 7, label %863
  ]

857:                                              ; preds = %850
  %858 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8
  br label %867

859:                                              ; preds = %850
  %860 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16
  br label %867

861:                                              ; preds = %850
  %862 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8
  br label %867

863:                                              ; preds = %850
  %864 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16
  br label %867

865:                                              ; preds = %850
  %866 = tail call ptr @make_accum_type(i32 noundef %854, i32 noundef 1, i32 noundef 0) #29
  br label %867

867:                                              ; preds = %857, %859, %861, %863, %865
  %868 = phi ptr [ %866, %865 ], [ %858, %857 ], [ %860, %859 ], [ %862, %861 ], [ %864, %863 ]
  store ptr %868, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 116), align 16, !tbaa !6
  %869 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 33), align 1, !tbaa !17
  %870 = zext i8 %869 to i32
  %871 = shl nuw nsw i32 %870, 3
  %872 = add nsw i32 %871, -16
  %873 = tail call i32 @llvm.fshl.i32(i32 %871, i32 %872, i32 28)
  switch i32 %873, label %882 [
    i32 0, label %874
    i32 1, label %876
    i32 3, label %878
    i32 7, label %880
  ]

874:                                              ; preds = %867
  %875 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8
  br label %884

876:                                              ; preds = %867
  %877 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16
  br label %884

878:                                              ; preds = %867
  %879 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8
  br label %884

880:                                              ; preds = %867
  %881 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16
  br label %884

882:                                              ; preds = %867
  %883 = tail call ptr @make_accum_type(i32 noundef %871, i32 noundef 0, i32 noundef 1) #29
  br label %884

884:                                              ; preds = %874, %876, %878, %880, %882
  %885 = phi ptr [ %875, %874 ], [ %877, %876 ], [ %879, %878 ], [ %881, %880 ], [ %883, %882 ]
  store ptr %885, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 120), align 16, !tbaa !6
  %886 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 37), align 1, !tbaa !17
  %887 = zext i8 %886 to i32
  %888 = shl nuw nsw i32 %887, 3
  %889 = add nsw i32 %888, -16
  %890 = tail call i32 @llvm.fshl.i32(i32 %888, i32 %889, i32 28)
  switch i32 %890, label %899 [
    i32 0, label %891
    i32 1, label %893
    i32 3, label %895
    i32 7, label %897
  ]

891:                                              ; preds = %884
  %892 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8
  br label %901

893:                                              ; preds = %884
  %894 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16
  br label %901

895:                                              ; preds = %884
  %896 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8
  br label %901

897:                                              ; preds = %884
  %898 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16
  br label %901

899:                                              ; preds = %884
  %900 = tail call ptr @make_accum_type(i32 noundef %888, i32 noundef 1, i32 noundef 1) #29
  br label %901

901:                                              ; preds = %891, %893, %895, %897, %899
  %902 = phi ptr [ %892, %891 ], [ %894, %893 ], [ %896, %895 ], [ %898, %897 ], [ %900, %899 ]
  store ptr %902, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 124), align 16, !tbaa !6
  %903 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 69), align 8, !tbaa !271
  %904 = tail call ptr %903() #29
  %905 = load i64, ptr %904, align 8
  %906 = and i64 %905, 65535
  %907 = icmp eq i64 %906, 16
  br i1 %907, label %923, label %908

908:                                              ; preds = %901
  %909 = getelementptr inbounds %struct.tree_type, ptr %904, i64 0, i32 16
  %910 = load ptr, ptr %909, align 8, !tbaa !17
  %911 = tail call ptr @copy_node_stat(ptr noundef nonnull %904)
  %912 = getelementptr inbounds %struct.tree_type, ptr %911, i64 0, i32 9
  %913 = getelementptr inbounds %struct.tree_type, ptr %904, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %912, i8 0, i64 16, i1 false)
  %914 = load ptr, ptr %913, align 8, !tbaa !17
  %915 = icmp eq ptr %914, null
  %916 = select i1 %915, ptr null, ptr %911
  %917 = getelementptr inbounds %struct.tree_type, ptr %911, i64 0, i32 19
  store ptr %916, ptr %917, align 8
  %918 = getelementptr inbounds %struct.tree_type, ptr %911, i64 0, i32 16
  store ptr %911, ptr %918, align 8, !tbaa !17
  %919 = getelementptr inbounds %struct.tree_type, ptr %911, i64 0, i32 15
  store ptr null, ptr %919, align 8, !tbaa !17
  %920 = load ptr, ptr %913, align 8, !tbaa !17
  store ptr %920, ptr %917, align 8, !tbaa !17
  %921 = getelementptr inbounds %struct.tree_type, ptr %910, i64 0, i32 15
  %922 = load ptr, ptr %921, align 8, !tbaa !17
  store ptr %922, ptr %919, align 8, !tbaa !17
  store ptr %911, ptr %921, align 8, !tbaa !17
  store ptr %910, ptr %918, align 8, !tbaa !17
  br label %923

923:                                              ; preds = %908, %901
  %924 = phi ptr [ %911, %908 ], [ %904, %901 ]
  store ptr %924, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 44), align 16, !tbaa !6
  ret void
}

declare ptr @size_int_kind(i64 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @make_fract_type(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @make_accum_type(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @build_common_builtin_nodes() local_unnamed_addr #9 {
  %1 = alloca [4 x i8], align 1
  %2 = load ptr, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 330), align 16, !tbaa !6
  %3 = icmp eq ptr %2, null
  %4 = load ptr, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 331), align 8
  %5 = icmp eq ptr %4, null
  %6 = select i1 %3, i1 true, i1 %5
  br i1 %6, label %7, label %42

7:                                                ; preds = %0
  %8 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %9 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %10 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %11 = getelementptr inbounds i8, ptr %10, i64 16
  store i64 0, ptr %11, align 8
  store i64 2, ptr %10, align 8
  %12 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 1
  store ptr %9, ptr %12, align 8, !tbaa !17
  %13 = getelementptr inbounds %struct.tree_list, ptr %10, i64 0, i32 1
  store ptr null, ptr %13, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_list, ptr %10, i64 0, i32 2
  store ptr %8, ptr %14, align 8, !tbaa !17
  %15 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 40), align 16, !tbaa !6
  %16 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %17 = getelementptr inbounds i8, ptr %16, i64 16
  store i64 0, ptr %17, align 8
  store i64 2, ptr %16, align 8
  %18 = getelementptr inbounds %struct.tree_common, ptr %16, i64 0, i32 1
  store ptr %10, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.tree_list, ptr %16, i64 0, i32 1
  store ptr null, ptr %19, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.tree_list, ptr %16, i64 0, i32 2
  store ptr %15, ptr %20, align 8, !tbaa !17
  %21 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %22 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %23 = getelementptr inbounds i8, ptr %22, i64 16
  store i64 0, ptr %23, align 8
  store i64 2, ptr %22, align 8
  %24 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  store ptr %16, ptr %24, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.tree_list, ptr %22, i64 0, i32 1
  store ptr null, ptr %25, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.tree_list, ptr %22, i64 0, i32 2
  store ptr %21, ptr %26, align 8, !tbaa !17
  %27 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %28 = tail call ptr @build_function_type(ptr noundef %27, ptr noundef nonnull %22)
  %29 = load ptr, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 330), align 16, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %7
  %32 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.248, ptr noundef %28, i32 noundef 330, i32 noundef 3, ptr noundef nonnull @.str.249, ptr noundef null) #29
  %33 = load i64, ptr %32, align 8
  %34 = or i64 %33, 33554432
  store i64 %34, ptr %32, align 8
  store ptr %32, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 330), align 16, !tbaa !6
  store ptr %32, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 330), align 16, !tbaa !6
  br label %35

35:                                               ; preds = %31, %7
  %36 = load ptr, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 331), align 8, !tbaa !6
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.250, ptr noundef %28, i32 noundef 331, i32 noundef 3, ptr noundef nonnull @.str.251, ptr noundef null) #29
  %40 = load i64, ptr %39, align 8
  %41 = or i64 %40, 33554432
  store i64 %41, ptr %39, align 8
  store ptr %39, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 331), align 8, !tbaa !6
  store ptr %39, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 331), align 8, !tbaa !6
  br label %42

42:                                               ; preds = %35, %38, %0
  %43 = load ptr, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 329), align 8, !tbaa !6
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %73

45:                                               ; preds = %42
  %46 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %47 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %48 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %49 = getelementptr inbounds i8, ptr %48, i64 16
  store i64 0, ptr %49, align 8
  store i64 2, ptr %48, align 8
  %50 = getelementptr inbounds %struct.tree_common, ptr %48, i64 0, i32 1
  store ptr %47, ptr %50, align 8, !tbaa !17
  %51 = getelementptr inbounds %struct.tree_list, ptr %48, i64 0, i32 1
  store ptr null, ptr %51, align 8, !tbaa !17
  %52 = getelementptr inbounds %struct.tree_list, ptr %48, i64 0, i32 2
  store ptr %46, ptr %52, align 8, !tbaa !17
  %53 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 40), align 16, !tbaa !6
  %54 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %55 = getelementptr inbounds i8, ptr %54, i64 16
  store i64 0, ptr %55, align 8
  store i64 2, ptr %54, align 8
  %56 = getelementptr inbounds %struct.tree_common, ptr %54, i64 0, i32 1
  store ptr %48, ptr %56, align 8, !tbaa !17
  %57 = getelementptr inbounds %struct.tree_list, ptr %54, i64 0, i32 1
  store ptr null, ptr %57, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.tree_list, ptr %54, i64 0, i32 2
  store ptr %53, ptr %58, align 8, !tbaa !17
  %59 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 40), align 16, !tbaa !6
  %60 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %61 = getelementptr inbounds i8, ptr %60, i64 16
  store i64 0, ptr %61, align 8
  store i64 2, ptr %60, align 8
  %62 = getelementptr inbounds %struct.tree_common, ptr %60, i64 0, i32 1
  store ptr %54, ptr %62, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.tree_list, ptr %60, i64 0, i32 1
  store ptr null, ptr %63, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.tree_list, ptr %60, i64 0, i32 2
  store ptr %59, ptr %64, align 8, !tbaa !17
  %65 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %66 = tail call ptr @build_function_type(ptr noundef %65, ptr noundef nonnull %60)
  %67 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.252, ptr noundef %66, i32 noundef 329, i32 noundef 3, ptr noundef nonnull @.str.253, ptr noundef null) #29
  %68 = getelementptr inbounds %struct.tree_function_decl, ptr %67, i64 0, i32 5
  %69 = load i32, ptr %68, align 8
  %70 = or i32 %69, 134217728
  store i32 %70, ptr %68, align 8
  %71 = load i64, ptr %67, align 8
  %72 = or i64 %71, 33554432
  store i64 %72, ptr %67, align 8
  store ptr %67, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 329), align 8, !tbaa !6
  store ptr %67, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 329), align 8, !tbaa !6
  br label %73

73:                                               ; preds = %45, %42
  %74 = load ptr, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 333), align 8, !tbaa !6
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %101

76:                                               ; preds = %73
  %77 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %78 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %79 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %80 = getelementptr inbounds i8, ptr %79, i64 16
  store i64 0, ptr %80, align 8
  store i64 2, ptr %79, align 8
  %81 = getelementptr inbounds %struct.tree_common, ptr %79, i64 0, i32 1
  store ptr %78, ptr %81, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.tree_list, ptr %79, i64 0, i32 1
  store ptr null, ptr %82, align 8, !tbaa !17
  %83 = getelementptr inbounds %struct.tree_list, ptr %79, i64 0, i32 2
  store ptr %77, ptr %83, align 8, !tbaa !17
  %84 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %85 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %86 = getelementptr inbounds i8, ptr %85, i64 16
  store i64 0, ptr %86, align 8
  store i64 2, ptr %85, align 8
  %87 = getelementptr inbounds %struct.tree_common, ptr %85, i64 0, i32 1
  store ptr %79, ptr %87, align 8, !tbaa !17
  %88 = getelementptr inbounds %struct.tree_list, ptr %85, i64 0, i32 1
  store ptr null, ptr %88, align 8, !tbaa !17
  %89 = getelementptr inbounds %struct.tree_list, ptr %85, i64 0, i32 2
  store ptr %84, ptr %89, align 8, !tbaa !17
  %90 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %91 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %92 = getelementptr inbounds i8, ptr %91, i64 16
  store i64 0, ptr %92, align 8
  store i64 2, ptr %91, align 8
  %93 = getelementptr inbounds %struct.tree_common, ptr %91, i64 0, i32 1
  store ptr %85, ptr %93, align 8, !tbaa !17
  %94 = getelementptr inbounds %struct.tree_list, ptr %91, i64 0, i32 1
  store ptr null, ptr %94, align 8, !tbaa !17
  %95 = getelementptr inbounds %struct.tree_list, ptr %91, i64 0, i32 2
  store ptr %90, ptr %95, align 8, !tbaa !17
  %96 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %97 = tail call ptr @build_function_type(ptr noundef %96, ptr noundef nonnull %91)
  %98 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.254, ptr noundef %97, i32 noundef 333, i32 noundef 3, ptr noundef nonnull @.str.255, ptr noundef null) #29
  %99 = load i64, ptr %98, align 8
  %100 = or i64 %99, 33554432
  store i64 %100, ptr %98, align 8
  store ptr %98, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 333), align 8, !tbaa !6
  store ptr %98, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 333), align 8, !tbaa !6
  br label %101

101:                                              ; preds = %76, %73
  %102 = load ptr, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 415), align 8, !tbaa !6
  %103 = icmp eq ptr %102, null
  br i1 %103, label %104, label %124

104:                                              ; preds = %101
  %105 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %106 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %107 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %108 = getelementptr inbounds i8, ptr %107, i64 16
  store i64 0, ptr %108, align 8
  store i64 2, ptr %107, align 8
  %109 = getelementptr inbounds %struct.tree_common, ptr %107, i64 0, i32 1
  store ptr %106, ptr %109, align 8, !tbaa !17
  %110 = getelementptr inbounds %struct.tree_list, ptr %107, i64 0, i32 1
  store ptr null, ptr %110, align 8, !tbaa !17
  %111 = getelementptr inbounds %struct.tree_list, ptr %107, i64 0, i32 2
  store ptr %105, ptr %111, align 8, !tbaa !17
  %112 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %113 = tail call ptr @build_function_type(ptr noundef %112, ptr noundef nonnull %107)
  %114 = load i32, ptr @flag_stack_check, align 4, !tbaa !17
  %115 = icmp eq i32 %114, 0
  %116 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.256, ptr noundef %113, i32 noundef 415, i32 noundef 3, ptr noundef nonnull @.str.257, ptr noundef null) #29
  br i1 %115, label %117, label %120

117:                                              ; preds = %104
  %118 = load i64, ptr %116, align 8
  %119 = or i64 %118, 33554432
  store i64 %119, ptr %116, align 8
  br label %120

120:                                              ; preds = %104, %117
  %121 = getelementptr inbounds %struct.tree_function_decl, ptr %116, i64 0, i32 5
  %122 = load i32, ptr %121, align 8
  %123 = or i32 %122, 524288
  store i32 %123, ptr %121, align 8
  store ptr %116, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 415), align 8, !tbaa !6
  store ptr %116, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 415), align 8, !tbaa !6
  br label %124

124:                                              ; preds = %120, %101
  %125 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %126 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %127 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %128 = getelementptr inbounds i8, ptr %127, i64 16
  store i64 0, ptr %128, align 8
  store i64 2, ptr %127, align 8
  %129 = getelementptr inbounds %struct.tree_common, ptr %127, i64 0, i32 1
  store ptr %126, ptr %129, align 8, !tbaa !17
  %130 = getelementptr inbounds %struct.tree_list, ptr %127, i64 0, i32 1
  store ptr null, ptr %130, align 8, !tbaa !17
  %131 = getelementptr inbounds %struct.tree_list, ptr %127, i64 0, i32 2
  store ptr %125, ptr %131, align 8, !tbaa !17
  %132 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %133 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %134 = getelementptr inbounds i8, ptr %133, i64 16
  store i64 0, ptr %134, align 8
  store i64 2, ptr %133, align 8
  %135 = getelementptr inbounds %struct.tree_common, ptr %133, i64 0, i32 1
  store ptr %127, ptr %135, align 8, !tbaa !17
  %136 = getelementptr inbounds %struct.tree_list, ptr %133, i64 0, i32 1
  store ptr null, ptr %136, align 8, !tbaa !17
  %137 = getelementptr inbounds %struct.tree_list, ptr %133, i64 0, i32 2
  store ptr %132, ptr %137, align 8, !tbaa !17
  %138 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %139 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %140 = getelementptr inbounds i8, ptr %139, i64 16
  store i64 0, ptr %140, align 8
  store i64 2, ptr %139, align 8
  %141 = getelementptr inbounds %struct.tree_common, ptr %139, i64 0, i32 1
  store ptr %133, ptr %141, align 8, !tbaa !17
  %142 = getelementptr inbounds %struct.tree_list, ptr %139, i64 0, i32 1
  store ptr null, ptr %142, align 8, !tbaa !17
  %143 = getelementptr inbounds %struct.tree_list, ptr %139, i64 0, i32 2
  store ptr %138, ptr %143, align 8, !tbaa !17
  %144 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %145 = tail call ptr @build_function_type(ptr noundef %144, ptr noundef nonnull %139)
  %146 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.258, ptr noundef %145, i32 noundef 520, i32 noundef 3, ptr noundef nonnull @.str.258, ptr noundef null) #29
  %147 = load i64, ptr %146, align 8
  %148 = or i64 %147, 33554432
  store i64 %148, ptr %146, align 8
  store ptr %146, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 520), align 16, !tbaa !6
  store ptr %146, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 520), align 16, !tbaa !6
  %149 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %150 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %151 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %152 = getelementptr inbounds i8, ptr %151, i64 16
  store i64 0, ptr %152, align 8
  store i64 2, ptr %151, align 8
  %153 = getelementptr inbounds %struct.tree_common, ptr %151, i64 0, i32 1
  store ptr %150, ptr %153, align 8, !tbaa !17
  %154 = getelementptr inbounds %struct.tree_list, ptr %151, i64 0, i32 1
  store ptr null, ptr %154, align 8, !tbaa !17
  %155 = getelementptr inbounds %struct.tree_list, ptr %151, i64 0, i32 2
  store ptr %149, ptr %155, align 8, !tbaa !17
  %156 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %157 = tail call ptr @build_function_type(ptr noundef %156, ptr noundef nonnull %151)
  %158 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.259, ptr noundef %157, i32 noundef 521, i32 noundef 3, ptr noundef nonnull @.str.259, ptr noundef null) #29
  %159 = load i64, ptr %158, align 8
  %160 = or i64 %159, 34603008
  store i64 %160, ptr %158, align 8
  store ptr %158, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 521), align 8, !tbaa !6
  store ptr %158, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 521), align 8, !tbaa !6
  %161 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %162 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %163 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %164 = getelementptr inbounds i8, ptr %163, i64 16
  store i64 0, ptr %164, align 8
  store i64 2, ptr %163, align 8
  %165 = getelementptr inbounds %struct.tree_common, ptr %163, i64 0, i32 1
  store ptr %162, ptr %165, align 8, !tbaa !17
  %166 = getelementptr inbounds %struct.tree_list, ptr %163, i64 0, i32 1
  store ptr null, ptr %166, align 8, !tbaa !17
  %167 = getelementptr inbounds %struct.tree_list, ptr %163, i64 0, i32 2
  store ptr %161, ptr %167, align 8, !tbaa !17
  %168 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %169 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %170 = getelementptr inbounds i8, ptr %169, i64 16
  store i64 0, ptr %170, align 8
  store i64 2, ptr %169, align 8
  %171 = getelementptr inbounds %struct.tree_common, ptr %169, i64 0, i32 1
  store ptr %163, ptr %171, align 8, !tbaa !17
  %172 = getelementptr inbounds %struct.tree_list, ptr %169, i64 0, i32 1
  store ptr null, ptr %172, align 8, !tbaa !17
  %173 = getelementptr inbounds %struct.tree_list, ptr %169, i64 0, i32 2
  store ptr %168, ptr %173, align 8, !tbaa !17
  %174 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %175 = tail call ptr @build_function_type(ptr noundef %174, ptr noundef nonnull %169)
  %176 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.260, ptr noundef %175, i32 noundef 522, i32 noundef 3, ptr noundef nonnull @.str.260, ptr noundef null) #29
  %177 = load i64, ptr %176, align 8
  %178 = or i64 %177, 34078720
  store i64 %178, ptr %176, align 8
  store ptr %176, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 522), align 16, !tbaa !6
  store ptr %176, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 522), align 16, !tbaa !6
  %179 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %180 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %181 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %182 = getelementptr inbounds i8, ptr %181, i64 16
  store i64 0, ptr %182, align 8
  store i64 2, ptr %181, align 8
  %183 = getelementptr inbounds %struct.tree_common, ptr %181, i64 0, i32 1
  store ptr %180, ptr %183, align 8, !tbaa !17
  %184 = getelementptr inbounds %struct.tree_list, ptr %181, i64 0, i32 1
  store ptr null, ptr %184, align 8, !tbaa !17
  %185 = getelementptr inbounds %struct.tree_list, ptr %181, i64 0, i32 2
  store ptr %179, ptr %185, align 8, !tbaa !17
  %186 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %187 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %188 = getelementptr inbounds i8, ptr %187, i64 16
  store i64 0, ptr %188, align 8
  store i64 2, ptr %187, align 8
  %189 = getelementptr inbounds %struct.tree_common, ptr %187, i64 0, i32 1
  store ptr %181, ptr %189, align 8, !tbaa !17
  %190 = getelementptr inbounds %struct.tree_list, ptr %187, i64 0, i32 1
  store ptr null, ptr %190, align 8, !tbaa !17
  %191 = getelementptr inbounds %struct.tree_list, ptr %187, i64 0, i32 2
  store ptr %186, ptr %191, align 8, !tbaa !17
  %192 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %193 = tail call ptr @build_function_type(ptr noundef %192, ptr noundef nonnull %187)
  %194 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.261, ptr noundef %193, i32 noundef 523, i32 noundef 3, ptr noundef nonnull @.str.261, ptr noundef null) #29
  %195 = load i64, ptr %194, align 8
  %196 = or i64 %195, 33554432
  store i64 %196, ptr %194, align 8
  store ptr %194, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 523), align 8, !tbaa !6
  store ptr %194, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 523), align 8, !tbaa !6
  %197 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %198 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %199 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %200 = getelementptr inbounds i8, ptr %199, i64 16
  store i64 0, ptr %200, align 8
  store i64 2, ptr %199, align 8
  %201 = getelementptr inbounds %struct.tree_common, ptr %199, i64 0, i32 1
  store ptr %198, ptr %201, align 8, !tbaa !17
  %202 = getelementptr inbounds %struct.tree_list, ptr %199, i64 0, i32 1
  store ptr null, ptr %202, align 8, !tbaa !17
  %203 = getelementptr inbounds %struct.tree_list, ptr %199, i64 0, i32 2
  store ptr %197, ptr %203, align 8, !tbaa !17
  %204 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %205 = tail call ptr @build_function_type(ptr noundef %204, ptr noundef nonnull %199)
  %206 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.262, ptr noundef %205, i32 noundef 524, i32 noundef 3, ptr noundef nonnull @.str.262, ptr noundef null) #29
  %207 = getelementptr inbounds %struct.tree_function_decl, ptr %206, i64 0, i32 5
  %208 = load i32, ptr %207, align 8
  %209 = or i32 %208, 134217728
  store i32 %209, ptr %207, align 8
  %210 = load i64, ptr %206, align 8
  %211 = or i64 %210, 33554432
  store i64 %211, ptr %206, align 8
  store ptr %206, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 524), align 16, !tbaa !6
  store ptr %206, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 524), align 16, !tbaa !6
  %212 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %213 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %214 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %215 = getelementptr inbounds i8, ptr %214, i64 16
  store i64 0, ptr %215, align 8
  store i64 2, ptr %214, align 8
  %216 = getelementptr inbounds %struct.tree_common, ptr %214, i64 0, i32 1
  store ptr %213, ptr %216, align 8, !tbaa !17
  %217 = getelementptr inbounds %struct.tree_list, ptr %214, i64 0, i32 1
  store ptr null, ptr %217, align 8, !tbaa !17
  %218 = getelementptr inbounds %struct.tree_list, ptr %214, i64 0, i32 2
  store ptr %212, ptr %218, align 8, !tbaa !17
  %219 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %220 = tail call ptr @build_function_type(ptr noundef %219, ptr noundef nonnull %214)
  %221 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.263, ptr noundef %220, i32 noundef 525, i32 noundef 3, ptr noundef nonnull @.str.263, ptr noundef null) #29
  %222 = load i64, ptr %221, align 8
  %223 = or i64 %222, 33554432
  store i64 %223, ptr %221, align 8
  store ptr %221, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 525), align 8, !tbaa !6
  store ptr %221, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 525), align 8, !tbaa !6
  %224 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %225 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %226 = tail call ptr @build_function_type(ptr noundef %224, ptr noundef %225)
  %227 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.264, ptr noundef %226, i32 noundef 526, i32 noundef 3, ptr noundef nonnull @.str.264, ptr noundef null) #29
  %228 = load i64, ptr %227, align 8
  %229 = or i64 %228, 33554432
  store i64 %229, ptr %227, align 8
  store ptr %227, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 526), align 16, !tbaa !6
  store ptr %227, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 526), align 16, !tbaa !6
  %230 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %231 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %232 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %233 = getelementptr inbounds i8, ptr %232, i64 16
  store i64 0, ptr %233, align 8
  store i64 2, ptr %232, align 8
  %234 = getelementptr inbounds %struct.tree_common, ptr %232, i64 0, i32 1
  store ptr %231, ptr %234, align 8, !tbaa !17
  %235 = getelementptr inbounds %struct.tree_list, ptr %232, i64 0, i32 1
  store ptr null, ptr %235, align 8, !tbaa !17
  %236 = getelementptr inbounds %struct.tree_list, ptr %232, i64 0, i32 2
  store ptr %230, ptr %236, align 8, !tbaa !17
  %237 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %238 = tail call ptr @build_function_type(ptr noundef %237, ptr noundef nonnull %232)
  %239 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.265, ptr noundef %238, i32 noundef 527, i32 noundef 3, ptr noundef nonnull @.str.265, ptr noundef null) #29
  %240 = load i64, ptr %239, align 8
  %241 = or i64 %240, 33554432
  store i64 %241, ptr %239, align 8
  store ptr %239, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 527), align 8, !tbaa !6
  store ptr %239, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 527), align 8, !tbaa !6
  %242 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %243 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %244 = tail call ptr @build_function_type(ptr noundef %242, ptr noundef %243)
  %245 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.266, ptr noundef %244, i32 noundef 546, i32 noundef 3, ptr noundef nonnull @.str.267, ptr noundef null) #29
  store ptr %245, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 546), align 16, !tbaa !6
  store ptr %245, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 546), align 16, !tbaa !6
  %246 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.268, ptr noundef %244, i32 noundef 547, i32 noundef 3, ptr noundef nonnull @.str.269, ptr noundef null) #29
  store ptr %246, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 547), align 8, !tbaa !6
  store ptr %246, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 547), align 8, !tbaa !6
  %247 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 120), align 1, !tbaa !272
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %256, label %249

249:                                              ; preds = %124
  %250 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %251 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %252 = tail call ptr @build_function_type(ptr noundef %250, ptr noundef %251)
  %253 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.270, ptr noundef %252, i32 noundef 551, i32 noundef 3, ptr noundef nonnull @.str.271, ptr noundef null) #29
  %254 = load i64, ptr %253, align 8
  %255 = or i64 %254, 524288
  store i64 %255, ptr %253, align 8
  store ptr %253, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 551), align 8, !tbaa !6
  store ptr %253, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 551), align 8, !tbaa !6
  br label %256

256:                                              ; preds = %249, %124
  %257 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %258 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %259 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %260 = getelementptr inbounds i8, ptr %259, i64 16
  store i64 0, ptr %260, align 8
  store i64 2, ptr %259, align 8
  %261 = getelementptr inbounds %struct.tree_common, ptr %259, i64 0, i32 1
  store ptr %258, ptr %261, align 8, !tbaa !17
  %262 = getelementptr inbounds %struct.tree_list, ptr %259, i64 0, i32 1
  store ptr null, ptr %262, align 8, !tbaa !17
  %263 = getelementptr inbounds %struct.tree_list, ptr %259, i64 0, i32 2
  store ptr %257, ptr %263, align 8, !tbaa !17
  %264 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %265 = tail call ptr @build_function_type(ptr noundef %264, ptr noundef nonnull %259)
  %266 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.272, ptr noundef %265, i32 noundef 550, i32 noundef 3, ptr noundef nonnull @.str.273, ptr noundef null) #29
  %267 = load i64, ptr %266, align 8
  %268 = or i64 %267, 524288
  store i64 %268, ptr %266, align 8
  store ptr %266, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 550), align 16, !tbaa !6
  store ptr %266, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 550), align 16, !tbaa !6
  %269 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %270 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %271 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %272 = getelementptr inbounds i8, ptr %271, i64 16
  store i64 0, ptr %272, align 8
  store i64 2, ptr %271, align 8
  %273 = getelementptr inbounds %struct.tree_common, ptr %271, i64 0, i32 1
  store ptr %270, ptr %273, align 8, !tbaa !17
  %274 = getelementptr inbounds %struct.tree_list, ptr %271, i64 0, i32 1
  store ptr null, ptr %274, align 8, !tbaa !17
  %275 = getelementptr inbounds %struct.tree_list, ptr %271, i64 0, i32 2
  store ptr %269, ptr %275, align 8, !tbaa !17
  %276 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %277 = tail call ptr @build_function_type(ptr noundef %276, ptr noundef nonnull %271)
  %278 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.274, ptr noundef %277, i32 noundef 552, i32 noundef 3, ptr noundef nonnull @.str.274, ptr noundef null) #29
  %279 = getelementptr inbounds %struct.tree_function_decl, ptr %278, i64 0, i32 5
  %280 = load i32, ptr %279, align 8
  %281 = or i32 %280, 134217728
  store i32 %281, ptr %279, align 8
  %282 = load i64, ptr %278, align 8
  %283 = or i64 %282, 33554432
  store i64 %283, ptr %278, align 8
  store ptr %278, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 552), align 16, !tbaa !6
  store ptr %278, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 552), align 16, !tbaa !6
  %284 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 2), align 8, !tbaa !273
  %285 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 7), align 8, !tbaa !274
  %286 = tail call i32 %285() #29
  %287 = tail call ptr %284(i32 noundef %286, i32 noundef 0) #29
  %288 = tail call ptr @build_function_type(ptr noundef %287, ptr noundef nonnull %271)
  %289 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.275, ptr noundef %288, i32 noundef 553, i32 noundef 3, ptr noundef nonnull @.str.275, ptr noundef null) #29
  %290 = getelementptr inbounds %struct.tree_function_decl, ptr %289, i64 0, i32 5
  %291 = load i32, ptr %290, align 8
  %292 = or i32 %291, 134217728
  store i32 %292, ptr %290, align 8
  %293 = load i64, ptr %289, align 8
  %294 = or i64 %293, 33554432
  store i64 %294, ptr %289, align 8
  store ptr %289, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 553), align 8, !tbaa !6
  store ptr %289, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 553), align 8, !tbaa !6
  %295 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %296 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %297 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %298 = getelementptr inbounds i8, ptr %297, i64 16
  store i64 0, ptr %298, align 8
  store i64 2, ptr %297, align 8
  %299 = getelementptr inbounds %struct.tree_common, ptr %297, i64 0, i32 1
  store ptr %296, ptr %299, align 8, !tbaa !17
  %300 = getelementptr inbounds %struct.tree_list, ptr %297, i64 0, i32 1
  store ptr null, ptr %300, align 8, !tbaa !17
  %301 = getelementptr inbounds %struct.tree_list, ptr %297, i64 0, i32 2
  store ptr %295, ptr %301, align 8, !tbaa !17
  %302 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %303 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %304 = getelementptr inbounds i8, ptr %303, i64 16
  store i64 0, ptr %304, align 8
  store i64 2, ptr %303, align 8
  %305 = getelementptr inbounds %struct.tree_common, ptr %303, i64 0, i32 1
  store ptr %297, ptr %305, align 8, !tbaa !17
  %306 = getelementptr inbounds %struct.tree_list, ptr %303, i64 0, i32 1
  store ptr null, ptr %306, align 8, !tbaa !17
  %307 = getelementptr inbounds %struct.tree_list, ptr %303, i64 0, i32 2
  store ptr %302, ptr %307, align 8, !tbaa !17
  %308 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %309 = tail call ptr @build_function_type(ptr noundef %308, ptr noundef nonnull %303)
  %310 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.276, ptr noundef %309, i32 noundef 554, i32 noundef 3, ptr noundef nonnull @.str.276, ptr noundef null) #29
  %311 = load i64, ptr %310, align 8
  %312 = or i64 %311, 33554432
  store i64 %312, ptr %310, align 8
  store ptr %310, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 554), align 16, !tbaa !6
  store ptr %310, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 554), align 16, !tbaa !6
  br label %313

313:                                              ; preds = %256, %379
  %314 = phi i64 [ 51, %256 ], [ %380, %379 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %1) #29
  %315 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 2), align 8, !tbaa !273
  %316 = trunc i64 %314 to i32
  %317 = call ptr %315(i32 noundef %316, i32 noundef 0) #29
  %318 = icmp eq ptr %317, null
  br i1 %318, label %379, label %319

319:                                              ; preds = %313
  %320 = getelementptr inbounds %struct.tree_common, ptr %317, i64 0, i32 2
  %321 = load ptr, ptr %320, align 8, !tbaa !17
  %322 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %323 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %324 = getelementptr inbounds i8, ptr %323, i64 16
  store i64 0, ptr %324, align 8
  store i64 2, ptr %323, align 8
  %325 = getelementptr inbounds %struct.tree_common, ptr %323, i64 0, i32 1
  store ptr %322, ptr %325, align 8, !tbaa !17
  %326 = getelementptr inbounds %struct.tree_list, ptr %323, i64 0, i32 1
  store ptr null, ptr %326, align 8, !tbaa !17
  %327 = getelementptr inbounds %struct.tree_list, ptr %323, i64 0, i32 2
  store ptr %321, ptr %327, align 8, !tbaa !17
  %328 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %329 = getelementptr inbounds i8, ptr %328, i64 16
  store i64 0, ptr %329, align 8
  store i64 2, ptr %328, align 8
  %330 = getelementptr inbounds %struct.tree_common, ptr %328, i64 0, i32 1
  store ptr %323, ptr %330, align 8, !tbaa !17
  %331 = getelementptr inbounds %struct.tree_list, ptr %328, i64 0, i32 1
  store ptr null, ptr %331, align 8, !tbaa !17
  %332 = getelementptr inbounds %struct.tree_list, ptr %328, i64 0, i32 2
  store ptr %321, ptr %332, align 8, !tbaa !17
  %333 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %334 = getelementptr inbounds i8, ptr %333, i64 16
  store i64 0, ptr %334, align 8
  store i64 2, ptr %333, align 8
  %335 = getelementptr inbounds %struct.tree_common, ptr %333, i64 0, i32 1
  store ptr %328, ptr %335, align 8, !tbaa !17
  %336 = getelementptr inbounds %struct.tree_list, ptr %333, i64 0, i32 1
  store ptr null, ptr %336, align 8, !tbaa !17
  %337 = getelementptr inbounds %struct.tree_list, ptr %333, i64 0, i32 2
  store ptr %321, ptr %337, align 8, !tbaa !17
  %338 = call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %339 = getelementptr inbounds i8, ptr %338, i64 16
  store i64 0, ptr %339, align 8
  store i64 2, ptr %338, align 8
  %340 = getelementptr inbounds %struct.tree_common, ptr %338, i64 0, i32 1
  store ptr %333, ptr %340, align 8, !tbaa !17
  %341 = getelementptr inbounds %struct.tree_list, ptr %338, i64 0, i32 1
  store ptr null, ptr %341, align 8, !tbaa !17
  %342 = getelementptr inbounds %struct.tree_list, ptr %338, i64 0, i32 2
  store ptr %321, ptr %342, align 8, !tbaa !17
  %343 = call ptr @build_function_type(ptr noundef nonnull %317, ptr noundef nonnull %338)
  %344 = add nuw nsw i64 %314, 662
  %345 = add nuw nsw i64 %314, 666
  %346 = getelementptr inbounds [87 x ptr], ptr @mode_name, i64 0, i64 %314
  %347 = load ptr, ptr %346, align 8, !tbaa !6
  %348 = load i8, ptr %347, align 1, !tbaa !17
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %361, label %350

350:                                              ; preds = %319, %350
  %351 = phi i8 [ %359, %350 ], [ %348, %319 ]
  %352 = phi ptr [ %358, %350 ], [ %1, %319 ]
  %353 = phi ptr [ %357, %350 ], [ %347, %319 ]
  %354 = zext i8 %351 to i64
  %355 = getelementptr inbounds [256 x i8], ptr @_sch_tolower, i64 0, i64 %354
  %356 = load i8, ptr %355, align 1, !tbaa !17
  store i8 %356, ptr %352, align 1, !tbaa !17
  %357 = getelementptr inbounds i8, ptr %353, i64 1
  %358 = getelementptr inbounds i8, ptr %352, i64 1
  %359 = load i8, ptr %357, align 1, !tbaa !17
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %361, label %350, !llvm.loop !275

361:                                              ; preds = %350, %319
  %362 = phi ptr [ %1, %319 ], [ %358, %350 ]
  store i8 0, ptr %362, align 1, !tbaa !17
  %363 = call ptr (ptr, ...) @concat(ptr noundef nonnull @.str.277, ptr noundef nonnull %1, ptr noundef nonnull @.str.278, ptr noundef null) #29
  %364 = getelementptr inbounds [721 x ptr], ptr @built_in_names, i64 0, i64 %344
  store ptr %363, ptr %364, align 8, !tbaa !6
  %365 = trunc i64 %344 to i32
  %366 = call ptr @add_builtin_function(ptr noundef %363, ptr noundef %343, i32 noundef %365, i32 noundef 3, ptr noundef %363, ptr noundef null) #29
  %367 = load i64, ptr %366, align 8
  %368 = or i64 %367, 34603008
  store i64 %368, ptr %366, align 8
  %369 = getelementptr inbounds [721 x ptr], ptr @built_in_decls, i64 0, i64 %344
  store ptr %366, ptr %369, align 8, !tbaa !6
  %370 = getelementptr inbounds [721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 %344
  store ptr %366, ptr %370, align 8, !tbaa !6
  %371 = call ptr (ptr, ...) @concat(ptr noundef nonnull @.str.279, ptr noundef nonnull %1, ptr noundef nonnull @.str.278, ptr noundef null) #29
  %372 = getelementptr inbounds [721 x ptr], ptr @built_in_names, i64 0, i64 %345
  store ptr %371, ptr %372, align 8, !tbaa !6
  %373 = trunc i64 %345 to i32
  %374 = call ptr @add_builtin_function(ptr noundef %371, ptr noundef %343, i32 noundef %373, i32 noundef 3, ptr noundef %371, ptr noundef null) #29
  %375 = load i64, ptr %374, align 8
  %376 = or i64 %375, 34603008
  store i64 %376, ptr %374, align 8
  %377 = getelementptr inbounds [721 x ptr], ptr @built_in_decls, i64 0, i64 %345
  store ptr %374, ptr %377, align 8, !tbaa !6
  %378 = getelementptr inbounds [721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 %345
  store ptr %374, ptr %378, align 8, !tbaa !6
  br label %379

379:                                              ; preds = %313, %361
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #29
  %380 = add nuw nsw i64 %314, 1
  %381 = icmp eq i64 %380, 55
  br i1 %381, label %382, label %313, !llvm.loop !276

382:                                              ; preds = %379
  ret void
}

declare ptr @concat(ptr noundef, ...) local_unnamed_addr #3

declare ptr @add_builtin_function(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @reconstruct_complex_type(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %106 [
    i16 10, label %5
    i16 12, label %28
    i16 15, label %51
    i16 20, label %58
    i16 21, label %65
    i16 5, label %78
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = tail call ptr @reconstruct_complex_type(ptr noundef %7, ptr noundef %1)
  %9 = load i64, ptr %0, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 14
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29
  %14 = load i64, ptr %0, align 8
  br label %20

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %17 = load i32, ptr %16, align 4
  %18 = lshr i32 %17, 16
  %19 = and i32 %18, 255
  br label %20

20:                                               ; preds = %15, %12
  %21 = phi i64 [ %14, %12 ], [ %9, %15 ]
  %22 = phi i32 [ %13, %12 ], [ %19, %15 ]
  %23 = trunc i64 %21 to i32
  %24 = lshr i32 %23, 26
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = tail call ptr @build_pointer_type_for_mode(ptr noundef %8, i32 noundef %22, i8 noundef zeroext %26)
  br label %85

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = tail call ptr @reconstruct_complex_type(ptr noundef %30, ptr noundef %1)
  %32 = load i64, ptr %0, align 8
  %33 = and i64 %32, 65535
  %34 = icmp eq i64 %33, 14
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = tail call i32 @vector_type_mode(ptr noundef nonnull %0) #29
  %37 = load i64, ptr %0, align 8
  br label %43

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %40 = load i32, ptr %39, align 4
  %41 = lshr i32 %40, 16
  %42 = and i32 %41, 255
  br label %43

43:                                               ; preds = %38, %35
  %44 = phi i64 [ %37, %35 ], [ %32, %38 ]
  %45 = phi i32 [ %36, %35 ], [ %42, %38 ]
  %46 = trunc i64 %44 to i32
  %47 = lshr i32 %46, 26
  %48 = trunc i32 %47 to i8
  %49 = and i8 %48, 1
  %50 = tail call ptr @build_reference_type_for_mode(ptr noundef %31, i32 noundef %45, i8 noundef zeroext %49)
  br label %85

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = tail call ptr @reconstruct_complex_type(ptr noundef %53, ptr noundef %1)
  %55 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = tail call ptr @build_array_type(ptr noundef %54, ptr noundef %56)
  br label %85

58:                                               ; preds = %2
  %59 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = tail call ptr @reconstruct_complex_type(ptr noundef %60, ptr noundef %1)
  %62 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = tail call ptr @build_function_type(ptr noundef %61, ptr noundef %63)
  br label %85

65:                                               ; preds = %2
  %66 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = tail call ptr @reconstruct_complex_type(ptr noundef %67, ptr noundef %1)
  %69 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.tree_list, ptr %70, i64 0, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = getelementptr inbounds %struct.tree_common, ptr %72, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.tree_common, ptr %70, i64 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = tail call ptr @build_method_type_directly(ptr noundef %74, ptr noundef %68, ptr noundef %76)
  br label %85

78:                                               ; preds = %2
  %79 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = tail call ptr @reconstruct_complex_type(ptr noundef %80, ptr noundef %1)
  %82 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = tail call ptr @build_offset_type(ptr noundef %83, ptr noundef %81)
  br label %85

85:                                               ; preds = %43, %58, %78, %65, %51, %20
  %86 = phi ptr [ %27, %20 ], [ %50, %43 ], [ %57, %51 ], [ %64, %58 ], [ %77, %65 ], [ %84, %78 ]
  %87 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = load i64, ptr %0, align 8
  %90 = trunc i64 %89 to i32
  %91 = lshr i32 %90, 20
  %92 = and i32 %91, 1
  %93 = lshr i32 %90, 18
  %94 = and i32 %93, 2
  %95 = or i32 %92, %94
  %96 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %97 = load i32, ptr %96, align 4
  %98 = lshr i32 %97, 11
  %99 = and i32 %98, 4
  %100 = or i32 %95, %99
  %101 = lshr i64 %89, 48
  %102 = trunc i64 %101 to i32
  %103 = and i32 %102, 65280
  %104 = or i32 %100, %103
  %105 = tail call ptr @build_type_attribute_qual_variant(ptr noundef %86, ptr noundef %88, i32 noundef %104)
  br label %106

106:                                              ; preds = %2, %85
  %107 = phi ptr [ %105, %85 ], [ %1, %2 ]
  ret ptr %107
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_vector_type_for_mode(ptr noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %3
  %5 = load i8, ptr %4, align 1, !tbaa !17
  switch i8 %5, label %33 [
    i8 12, label %6
    i8 17, label %6
    i8 13, label %6
    i8 14, label %6
    i8 15, label %6
    i8 16, label %6
    i8 2, label %10
  ]

6:                                                ; preds = %2, %2, %2, %2, %2, %2
  %7 = getelementptr inbounds [87 x i8], ptr @mode_nunits, i64 0, i64 %3
  %8 = load i8, ptr %7, align 1, !tbaa !17
  %9 = zext i8 %8 to i32
  br label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %3
  %12 = load i8, ptr %11, align 1, !tbaa !17
  %13 = zext i8 %12 to i64
  %14 = shl nuw nsw i64 %13, 3
  %15 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_int_cst, ptr %16, i64 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !17
  %19 = urem i64 %14, %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9268, ptr noundef nonnull @.str.219) #29
  %22 = load i8, ptr %11, align 1, !tbaa !17
  %23 = load ptr, ptr %15, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.tree_int_cst, ptr %23, i64 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !17
  %26 = zext i8 %22 to i64
  %27 = shl nuw nsw i64 %26, 3
  br label %28

28:                                               ; preds = %10, %21
  %29 = phi i64 [ %14, %10 ], [ %27, %21 ]
  %30 = phi i64 [ %18, %10 ], [ %25, %21 ]
  %31 = udiv i64 %29, %30
  %32 = trunc i64 %31 to i32
  br label %34

33:                                               ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9275, ptr noundef nonnull @.str.219) #29
  unreachable

34:                                               ; preds = %28, %6
  %35 = phi i32 [ %32, %28 ], [ %9, %6 ]
  %36 = tail call fastcc ptr @make_vector_type(ptr noundef %0, i32 noundef %35, i32 noundef %1)
  ret ptr %36
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @make_vector_type(ptr noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 {
  %4 = tail call ptr @make_node_stat(i32 noundef 14)
  %5 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  store ptr %6, ptr %7, align 8, !tbaa !17
  %8 = sext i32 %1 to i64
  %9 = tail call i32 @exact_log2(i64 noundef %8) #29
  %10 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %9, 1023
  %13 = and i32 %11, -16712704
  %14 = shl i32 %2, 16
  %15 = and i32 %14, 16711680
  %16 = or i32 %12, %15
  %17 = or i32 %16, %13
  store i32 %17, ptr %10, align 4
  %18 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %3
  %22 = icmp ne ptr %19, %0
  %23 = icmp ne i32 %2, 0
  %24 = or i1 %23, %22
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = tail call fastcc ptr @make_vector_type(ptr noundef nonnull %19, i32 noundef %1, i32 noundef 0)
  br label %27

27:                                               ; preds = %3, %25
  %28 = phi ptr [ %26, %25 ], [ null, %3 ]
  %29 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 19
  store ptr %28, ptr %29, align 8, !tbaa !17
  br label %30

30:                                               ; preds = %27, %21
  tail call void @layout_type(ptr noundef nonnull %4) #29
  %31 = add nsw i32 %1, -1
  %32 = sext i32 %31 to i64
  %33 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %34 = ashr i64 %32, 63
  %35 = tail call ptr @build_int_cst_wide(ptr noundef %33, i64 noundef %32, i64 noundef %34)
  %36 = load ptr, ptr %5, align 8, !tbaa !17
  %37 = tail call ptr @build_index_type(ptr noundef %35)
  %38 = tail call ptr @build_array_type(ptr noundef %36, ptr noundef %37)
  %39 = tail call ptr @make_node_stat(i32 noundef 16)
  %40 = tail call ptr @get_identifier(ptr noundef nonnull @.str.280) #29
  %41 = tail call ptr @make_node_stat(i32 noundef 31)
  %42 = getelementptr inbounds %struct.tree_decl_minimal, ptr %41, i64 0, i32 1
  store i32 0, ptr %42, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.tree_decl_minimal, ptr %41, i64 0, i32 3
  store ptr %40, ptr %43, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.tree_common, ptr %41, i64 0, i32 2
  store ptr %38, ptr %44, align 8, !tbaa !17
  %45 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 1
  store ptr %41, ptr %45, align 8, !tbaa !17
  %46 = getelementptr inbounds %struct.tree_decl_minimal, ptr %41, i64 0, i32 4
  store ptr %39, ptr %46, align 8, !tbaa !17
  tail call void @layout_type(ptr noundef %39) #29
  %47 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 1
  store ptr %39, ptr %47, align 8, !tbaa !17
  %48 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 5
  %49 = load i32, ptr %48, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 5
  store i32 %49, ptr %50, align 8, !tbaa !17
  %51 = lshr i32 %1, 31
  %52 = ashr i32 %1, 31
  %53 = add i32 %1, -1369140780
  %54 = add i32 %53, %51
  %55 = xor i32 %54, 167131
  %56 = add nsw i32 %52, -1369140780
  %57 = sub i32 %56, %55
  %58 = shl i32 %55, 8
  %59 = xor i32 %57, %58
  %60 = add i32 %55, %59
  %61 = sub i32 1369140780, %60
  %62 = lshr i32 %59, 13
  %63 = xor i32 %61, %62
  %64 = add i32 %59, %63
  %65 = sub i32 %55, %64
  %66 = lshr i32 %63, 12
  %67 = xor i32 %65, %66
  %68 = add i32 %63, %67
  %69 = sub i32 %59, %68
  %70 = shl i32 %67, 16
  %71 = xor i32 %69, %70
  %72 = add i32 %67, %71
  %73 = sub i32 %63, %72
  %74 = lshr i32 %71, 5
  %75 = xor i32 %73, %74
  %76 = add i32 %71, %75
  %77 = sub i32 %67, %76
  %78 = lshr i32 %75, 3
  %79 = xor i32 %77, %78
  %80 = add i32 %75, %79
  %81 = sub i32 %71, %80
  %82 = shl i32 %79, 10
  %83 = xor i32 %81, %82
  %84 = add i32 %79, %83
  %85 = sub i32 %75, %84
  %86 = lshr i32 %83, 15
  %87 = xor i32 %85, %86
  %88 = sub i32 %2, %87
  %89 = lshr i32 %87, 13
  %90 = xor i32 %88, %89
  %91 = add i32 %87, %90
  %92 = sub i32 0, %91
  %93 = shl i32 %90, 8
  %94 = xor i32 %93, %92
  %95 = add i32 %90, %94
  %96 = sub i32 %87, %95
  %97 = lshr i32 %94, 13
  %98 = xor i32 %96, %97
  %99 = add i32 %94, %98
  %100 = sub i32 %90, %99
  %101 = lshr i32 %98, 12
  %102 = xor i32 %100, %101
  %103 = add i32 %98, %102
  %104 = sub i32 %94, %103
  %105 = shl i32 %102, 16
  %106 = xor i32 %104, %105
  %107 = add i32 %102, %106
  %108 = sub i32 %98, %107
  %109 = lshr i32 %106, 5
  %110 = xor i32 %108, %109
  %111 = add i32 %106, %110
  %112 = sub i32 %102, %111
  %113 = lshr i32 %110, 3
  %114 = xor i32 %112, %113
  %115 = add i32 %110, %114
  %116 = sub i32 %106, %115
  %117 = shl i32 %114, 10
  %118 = xor i32 %116, %117
  %119 = add i32 %114, %118
  %120 = sub i32 %110, %119
  %121 = lshr i32 %118, 15
  %122 = xor i32 %120, %121
  %123 = load ptr, ptr %7, align 8, !tbaa !17
  %124 = getelementptr inbounds %struct.tree_type, ptr %123, i64 0, i32 5
  %125 = tail call i32 @iterative_hash(ptr noundef nonnull %124, i64 noundef 4, i32 noundef %122) #29
  %126 = tail call ptr @type_hash_canon(i32 noundef %125, ptr noundef nonnull %4)
  %127 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 4
  %128 = load ptr, ptr %127, align 8, !tbaa !17
  %129 = icmp eq ptr %128, null
  br i1 %129, label %130, label %148

130:                                              ; preds = %30
  %131 = load i64, ptr %0, align 8
  %132 = trunc i64 %131 to i32
  %133 = lshr i32 %132, 20
  %134 = and i32 %133, 1
  %135 = lshr i32 %132, 18
  %136 = and i32 %135, 2
  %137 = or i32 %134, %136
  %138 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %139 = load i32, ptr %138, align 4
  %140 = lshr i32 %139, 11
  %141 = and i32 %140, 4
  %142 = or i32 %137, %141
  %143 = lshr i64 %131, 48
  %144 = trunc i64 %143 to i32
  %145 = and i32 %144, 65280
  %146 = or i32 %142, %145
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %170, label %148

148:                                              ; preds = %130, %30
  %149 = getelementptr inbounds %struct.tree_common, ptr %126, i64 0, i32 2
  %150 = load ptr, ptr %149, align 8, !tbaa !17
  %151 = icmp eq ptr %150, %0
  br i1 %151, label %170, label %152

152:                                              ; preds = %148
  %153 = load i64, ptr %0, align 8
  %154 = trunc i64 %153 to i32
  %155 = lshr i32 %154, 20
  %156 = and i32 %155, 1
  %157 = lshr i32 %154, 18
  %158 = and i32 %157, 2
  %159 = or i32 %156, %158
  %160 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %161 = load i32, ptr %160, align 4
  %162 = lshr i32 %161, 11
  %163 = and i32 %162, 4
  %164 = or i32 %159, %163
  %165 = lshr i64 %153, 48
  %166 = trunc i64 %165 to i32
  %167 = and i32 %166, 65280
  %168 = or i32 %164, %167
  %169 = tail call ptr @build_type_attribute_qual_variant(ptr noundef nonnull %126, ptr noundef %128, i32 noundef %168)
  br label %170

170:                                              ; preds = %130, %148, %152
  %171 = phi ptr [ %169, %152 ], [ %126, %148 ], [ %126, %130 ]
  ret ptr %171
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_vector_type(ptr noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = tail call fastcc ptr @make_vector_type(ptr noundef %0, i32 noundef %1, i32 noundef 0)
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_opaque_vector_type(ptr noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @copy_node_stat(ptr noundef %0)
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 9
  %5 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %4, i8 0, i64 16, i1 false)
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp eq ptr %6, null
  %8 = select i1 %7, ptr null, ptr %3
  %9 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 19
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 16
  store ptr %3, ptr %10, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 15
  store ptr null, ptr %11, align 8, !tbaa !17
  %12 = tail call fastcc ptr @make_vector_type(ptr noundef %3, i32 noundef %1, i32 noundef 0)
  %13 = load i64, ptr %12, align 8
  %14 = or i64 %13, 4294967296
  store i64 %14, ptr %12, align 8
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @initializer_zerop(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %58, %1
  %3 = phi ptr [ %0, %1 ], [ %59, %58 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %60 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %60, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %60

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %60

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi ptr [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

60:                                               ; preds = %2, %6, %21, %54
  %61 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %62 = trunc i64 %61 to i16
  switch i16 %62, label %141 [
    i16 23, label %65
    i16 24, label %68
    i16 25, label %77
    i16 26, label %90
    i16 27, label %111
    i16 51, label %63
  ]

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.tree_constructor, ptr %3, i64 0, i32 1
  br label %125

65:                                               ; preds = %60
  %66 = tail call i32 @integer_zerop(ptr noundef nonnull %3), !range !37
  %67 = trunc i32 %66 to i8
  br label %141

68:                                               ; preds = %60
  %69 = tail call i32 @real_zerop(ptr noundef nonnull %3), !range !37
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %141, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.tree_real_cst, ptr %3, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = tail call zeroext i8 @real_isnegzero(ptr noundef %73) #29
  %75 = icmp eq i8 %74, 0
  %76 = zext i1 %75 to i8
  br label %141

77:                                               ; preds = %60
  %78 = and i64 %61, 65535
  %79 = icmp eq i64 %78, 25
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.tree_fixed_cst, ptr %3, i64 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !17
  %83 = load i64, ptr %82, align 8
  %84 = getelementptr inbounds { i64, i64 }, ptr %82, i64 0, i32 1
  %85 = load i64, ptr %84, align 8
  %86 = icmp eq i64 %83, 0
  %87 = icmp eq i64 %85, 0
  %88 = select i1 %86, i1 %87, i1 false
  %89 = zext i1 %88 to i8
  br label %141

90:                                               ; preds = %60
  %91 = tail call i32 @integer_zerop(ptr noundef nonnull %3), !range !37
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %141

93:                                               ; preds = %90
  %94 = tail call i32 @real_zerop(ptr noundef nonnull %3), !range !37
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %141, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = getelementptr inbounds %struct.tree_real_cst, ptr %98, i64 0, i32 1
  %100 = load ptr, ptr %99, align 8, !tbaa !17
  %101 = tail call zeroext i8 @real_isnegzero(ptr noundef %100) #29
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %141

103:                                              ; preds = %96
  %104 = getelementptr inbounds %struct.tree_complex, ptr %3, i64 0, i32 2
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = getelementptr inbounds %struct.tree_real_cst, ptr %105, i64 0, i32 1
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  %108 = tail call zeroext i8 @real_isnegzero(ptr noundef %107) #29
  %109 = icmp eq i8 %108, 0
  %110 = zext i1 %109 to i8
  br label %141

111:                                              ; preds = %60
  %112 = getelementptr inbounds %struct.tree_vector, ptr %3, i64 0, i32 1
  %113 = load ptr, ptr %112, align 8, !tbaa !17
  %114 = icmp eq ptr %113, null
  br i1 %114, label %141, label %119

115:                                              ; preds = %119
  %116 = getelementptr inbounds %struct.tree_common, ptr %120, i64 0, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !17
  %118 = icmp eq ptr %117, null
  br i1 %118, label %141, label %119, !llvm.loop !277

119:                                              ; preds = %111, %115
  %120 = phi ptr [ %117, %115 ], [ %113, %111 ]
  %121 = getelementptr inbounds %struct.tree_list, ptr %120, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !17
  %123 = tail call zeroext i8 @initializer_zerop(ptr noundef %122), !range !104
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %141, label %115

125:                                              ; preds = %135, %63
  %126 = phi i64 [ %140, %135 ], [ 0, %63 ]
  %127 = load ptr, ptr %64, align 8, !tbaa !17
  %128 = icmp eq ptr %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = load i32, ptr %127, align 8, !tbaa !74
  br label %131

131:                                              ; preds = %125, %129
  %132 = phi i32 [ %130, %129 ], [ 0, %125 ]
  %133 = zext i32 %132 to i64
  %134 = icmp ult i64 %126, %133
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %127, i64 0, i32 2, i64 %126, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !76
  %138 = tail call zeroext i8 @initializer_zerop(ptr noundef %137), !range !104
  %139 = icmp eq i8 %138, 0
  %140 = add nuw nsw i64 %126, 1
  br i1 %139, label %141, label %125, !llvm.loop !278

141:                                              ; preds = %131, %135, %119, %115, %111, %80, %77, %60, %90, %103, %96, %93, %68, %71, %65
  %142 = phi i8 [ %67, %65 ], [ 0, %68 ], [ %76, %71 ], [ 1, %90 ], [ 0, %96 ], [ 0, %93 ], [ %110, %103 ], [ 0, %60 ], [ 0, %77 ], [ %89, %80 ], [ 1, %111 ], [ 0, %119 ], [ 1, %115 ], [ 1, %131 ], [ 0, %135 ]
  ret i8 %142
}

declare zeroext i8 @real_isnegzero(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_empty_stmt(i32 noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %3 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  %4 = tail call ptr @build1_stat(i32 noundef 116, ptr noundef %2, ptr noundef %3)
  %5 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 1
  store i32 %0, ptr %5, align 8, !tbaa !17
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_omp_clause(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds [16 x i8], ptr @omp_clause_num_ops, i64 0, i64 %3
  %5 = load i8, ptr %4, align 1, !tbaa !17
  %6 = zext i8 %5 to i64
  %7 = shl nuw nsw i64 %6, 3
  %8 = add nuw nsw i64 %7, 56
  %9 = tail call ptr @ggc_alloc_stat(i64 noundef %8) #29
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1) %9, i8 0, i64 %8, i1 false)
  %10 = load i64, ptr %9, align 8
  %11 = and i64 %10, -65536
  %12 = or i64 %11, 163
  store i64 %12, ptr %9, align 8
  %13 = getelementptr inbounds %struct.tree_omp_clause, ptr %9, i64 0, i32 2
  store i32 %1, ptr %13, align 4, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_omp_clause, ptr %9, i64 0, i32 1
  store i32 %0, ptr %14, align 8, !tbaa !17
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_call_list(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) local_unnamed_addr #9 {
  %4 = icmp eq ptr %2, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %10, %5 ], [ 0, %3 ]
  %7 = phi ptr [ %9, %5 ], [ %2, %3 ]
  %8 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = add nuw nsw i32 %6, 1
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %5, !llvm.loop !81

12:                                               ; preds = %5
  %13 = add nuw nsw i32 %6, 4
  br label %14

14:                                               ; preds = %12, %3
  %15 = phi i32 [ %13, %12 ], [ 3, %3 ]
  %16 = shl i32 %15, 3
  %17 = add i32 %16, 40
  %18 = sext i32 %17 to i64
  %19 = tail call ptr @ggc_alloc_stat(i64 noundef %18) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %19, i8 0, i64 %18, i1 false)
  %20 = load i64, ptr %19, align 8
  %21 = and i64 %20, -65536
  %22 = or i64 %21, 59
  store i64 %22, ptr %19, align 8
  %23 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %24 = sext i32 %15 to i64
  %25 = icmp eq ptr %23, null
  %26 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %27 = select i1 %25, ptr %26, ptr %23
  %28 = ashr i64 %24, 63
  %29 = tail call ptr @build_int_cst_wide(ptr noundef %27, i64 noundef %24, i64 noundef %28)
  %30 = getelementptr inbounds %struct.tree_exp, ptr %19, i64 0, i32 3
  store ptr %29, ptr %30, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.tree_common, ptr %19, i64 0, i32 2
  store ptr %0, ptr %31, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.tree_exp, ptr %19, i64 1
  store ptr %1, ptr %32, align 8, !tbaa !17
  %33 = getelementptr inbounds %struct.tree_exp, ptr %19, i64 1, i32 0, i32 1
  store ptr null, ptr %33, align 8, !tbaa !17
  br i1 %4, label %45, label %34

34:                                               ; preds = %14, %34
  %35 = phi i64 [ %43, %34 ], [ 0, %14 ]
  %36 = phi ptr [ %42, %34 ], [ %2, %14 ]
  %37 = getelementptr inbounds %struct.tree_list, ptr %36, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = add nuw nsw i64 %35, 3
  %40 = getelementptr inbounds %struct.tree_exp, ptr %19, i64 0, i32 3, i64 %39
  store ptr %38, ptr %40, align 8, !tbaa !17
  %41 = getelementptr inbounds %struct.tree_common, ptr %36, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = add nuw i64 %35, 1
  %44 = icmp eq ptr %42, null
  br i1 %44, label %45, label %34, !llvm.loop !279

45:                                               ; preds = %34, %14
  tail call fastcc void @process_call_operands(ptr noundef nonnull %19)
  ret ptr %19
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_call_nary(ptr noundef %0, ptr noundef %1, i32 noundef %2, ...) local_unnamed_addr #9 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #29
  call void @llvm.va_start(ptr nonnull %4)
  %5 = call ptr @build_call_valist(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef nonnull %4)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #29
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_call_valist(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef %3) local_unnamed_addr #9 {
  %5 = add nsw i32 %2, 3
  %6 = icmp sgt i32 %2, -3
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9404, ptr noundef nonnull @.str.219) #29
  br label %8

8:                                                ; preds = %4, %7
  %9 = shl i32 %5, 3
  %10 = add i32 %9, 40
  %11 = sext i32 %10 to i64
  %12 = tail call ptr @ggc_alloc_stat(i64 noundef %11) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 %11, i1 false)
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, -65536
  %15 = or i64 %14, 59
  store i64 %15, ptr %12, align 8
  %16 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %17 = sext i32 %5 to i64
  %18 = icmp eq ptr %16, null
  %19 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %20 = select i1 %18, ptr %19, ptr %16
  %21 = ashr i64 %17, 63
  %22 = tail call ptr @build_int_cst_wide(ptr noundef %20, i64 noundef %17, i64 noundef %21)
  %23 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 0, i32 3
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  store ptr %0, ptr %24, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 1
  store ptr %1, ptr %25, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 1, i32 0, i32 1
  store ptr null, ptr %26, align 8, !tbaa !17
  %27 = icmp sgt i32 %2, 0
  br i1 %27, label %28, label %51

28:                                               ; preds = %8
  %29 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 2
  %30 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 3
  %31 = zext i32 %2 to i64
  br label %32

32:                                               ; preds = %28, %44
  %33 = phi i64 [ 0, %28 ], [ %49, %44 ]
  %34 = load i32, ptr %3, align 8
  %35 = icmp ult i32 %34, 41
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = load ptr, ptr %30, align 8
  %38 = zext i32 %34 to i64
  %39 = getelementptr i8, ptr %37, i64 %38
  %40 = add nuw nsw i32 %34, 8
  store i32 %40, ptr %3, align 8
  br label %44

41:                                               ; preds = %32
  %42 = load ptr, ptr %29, align 8
  %43 = getelementptr i8, ptr %42, i64 8
  store ptr %43, ptr %29, align 8
  br label %44

44:                                               ; preds = %41, %36
  %45 = phi ptr [ %39, %36 ], [ %42, %41 ]
  %46 = load ptr, ptr %45, align 8
  %47 = add nuw nsw i64 %33, 3
  %48 = getelementptr inbounds %struct.tree_exp, ptr %12, i64 0, i32 3, i64 %47
  store ptr %46, ptr %48, align 8, !tbaa !17
  %49 = add nuw nsw i64 %33, 1
  %50 = icmp eq i64 %49, %31
  br i1 %50, label %51, label %32, !llvm.loop !280

51:                                               ; preds = %44, %8
  tail call fastcc void @process_call_operands(ptr noundef nonnull %12)
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_call_array_loc(i32 noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr nocapture noundef readonly %4) local_unnamed_addr #9 {
  %6 = ptrtoint ptr %4 to i64
  %7 = add nsw i32 %3, 3
  %8 = icmp sgt i32 %3, -3
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9404, ptr noundef nonnull @.str.219) #29
  br label %10

10:                                               ; preds = %5, %9
  %11 = shl i32 %7, 3
  %12 = add i32 %11, 40
  %13 = sext i32 %12 to i64
  %14 = tail call ptr @ggc_alloc_stat(i64 noundef %13) #29
  %15 = ptrtoint ptr %14 to i64
  tail call void @llvm.memset.p0.i64(ptr align 8 %14, i8 0, i64 %13, i1 false)
  %16 = load i64, ptr %14, align 8
  %17 = and i64 %16, -65536
  %18 = or i64 %17, 59
  store i64 %18, ptr %14, align 8
  %19 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %20 = sext i32 %7 to i64
  %21 = icmp eq ptr %19, null
  %22 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %23 = select i1 %21, ptr %22, ptr %19
  %24 = ashr i64 %20, 63
  %25 = tail call ptr @build_int_cst_wide(ptr noundef %23, i64 noundef %20, i64 noundef %24)
  %26 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 2
  store ptr %1, ptr %27, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 1
  store ptr %2, ptr %28, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 1, i32 0, i32 1
  store ptr null, ptr %29, align 8, !tbaa !17
  %30 = icmp sgt i32 %3, 0
  br i1 %30, label %31, label %101

31:                                               ; preds = %10
  %32 = zext i32 %3 to i64
  %33 = icmp ult i32 %3, 16
  br i1 %33, label %59, label %34

34:                                               ; preds = %31
  %35 = add i64 %15, 64
  %36 = sub i64 %35, %6
  %37 = icmp ult i64 %36, 128
  br i1 %37, label %59, label %38

38:                                               ; preds = %34
  %39 = and i64 %32, 4294967280
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %55, %40 ]
  %42 = getelementptr inbounds ptr, ptr %4, i64 %41
  %43 = load <4 x ptr>, ptr %42, align 8, !tbaa !6
  %44 = getelementptr inbounds ptr, ptr %42, i64 4
  %45 = load <4 x ptr>, ptr %44, align 8, !tbaa !6
  %46 = getelementptr inbounds ptr, ptr %42, i64 8
  %47 = load <4 x ptr>, ptr %46, align 8, !tbaa !6
  %48 = getelementptr inbounds ptr, ptr %42, i64 12
  %49 = load <4 x ptr>, ptr %48, align 8, !tbaa !6
  %50 = or i64 %41, 3
  %51 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3, i64 %50
  store <4 x ptr> %43, ptr %51, align 8, !tbaa !17
  %52 = getelementptr inbounds ptr, ptr %51, i64 4
  store <4 x ptr> %45, ptr %52, align 8, !tbaa !17
  %53 = getelementptr inbounds ptr, ptr %51, i64 8
  store <4 x ptr> %47, ptr %53, align 8, !tbaa !17
  %54 = getelementptr inbounds ptr, ptr %51, i64 12
  store <4 x ptr> %49, ptr %54, align 8, !tbaa !17
  %55 = add nuw i64 %41, 16
  %56 = icmp eq i64 %55, %39
  br i1 %56, label %57, label %40, !llvm.loop !281

57:                                               ; preds = %40
  %58 = icmp eq i64 %39, %32
  br i1 %58, label %101, label %59

59:                                               ; preds = %34, %31, %57
  %60 = phi i64 [ 0, %34 ], [ 0, %31 ], [ %39, %57 ]
  %61 = xor i64 %60, -1
  %62 = add nsw i64 %61, %32
  %63 = and i64 %32, 3
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %59, %65
  %66 = phi i64 [ %72, %65 ], [ %60, %59 ]
  %67 = phi i64 [ %73, %65 ], [ 0, %59 ]
  %68 = getelementptr inbounds ptr, ptr %4, i64 %66
  %69 = load ptr, ptr %68, align 8, !tbaa !6
  %70 = add nuw nsw i64 %66, 3
  %71 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3, i64 %70
  store ptr %69, ptr %71, align 8, !tbaa !17
  %72 = add nuw nsw i64 %66, 1
  %73 = add i64 %67, 1
  %74 = icmp eq i64 %73, %63
  br i1 %74, label %75, label %65, !llvm.loop !284

75:                                               ; preds = %65, %59
  %76 = phi i64 [ %60, %59 ], [ %72, %65 ]
  %77 = icmp ult i64 %62, 3
  br i1 %77, label %101, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %99, %78 ], [ %76, %75 ]
  %80 = getelementptr inbounds ptr, ptr %4, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !6
  %82 = add nuw nsw i64 %79, 3
  %83 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3, i64 %82
  store ptr %81, ptr %83, align 8, !tbaa !17
  %84 = add nuw nsw i64 %79, 1
  %85 = getelementptr inbounds ptr, ptr %4, i64 %84
  %86 = load ptr, ptr %85, align 8, !tbaa !6
  %87 = add nuw nsw i64 %79, 4
  %88 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3, i64 %87
  store ptr %86, ptr %88, align 8, !tbaa !17
  %89 = add nuw nsw i64 %79, 2
  %90 = getelementptr inbounds ptr, ptr %4, i64 %89
  %91 = load ptr, ptr %90, align 8, !tbaa !6
  %92 = add nuw nsw i64 %79, 5
  %93 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3, i64 %92
  store ptr %91, ptr %93, align 8, !tbaa !17
  %94 = add nuw nsw i64 %79, 3
  %95 = getelementptr inbounds ptr, ptr %4, i64 %94
  %96 = load ptr, ptr %95, align 8, !tbaa !6
  %97 = add nuw nsw i64 %79, 6
  %98 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 3, i64 %97
  store ptr %96, ptr %98, align 8, !tbaa !17
  %99 = add nuw nsw i64 %79, 4
  %100 = icmp eq i64 %99, %32
  br i1 %100, label %101, label %78, !llvm.loop !286

101:                                              ; preds = %75, %78, %57, %10
  tail call fastcc void @process_call_operands(ptr noundef nonnull %14)
  %102 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 1
  store i32 %0, ptr %102, align 8, !tbaa !17
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_call_vec(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) local_unnamed_addr #9 {
  %4 = icmp eq ptr %2, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = load i32, ptr %2, align 8, !tbaa !61
  %7 = add i32 %6, 3
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9404, ptr noundef nonnull @.str.219) #29
  br label %10

10:                                               ; preds = %3, %5, %9
  %11 = phi i32 [ %7, %5 ], [ %7, %9 ], [ 3, %3 ]
  %12 = shl i32 %11, 3
  %13 = add i32 %12, 40
  %14 = sext i32 %13 to i64
  %15 = tail call ptr @ggc_alloc_stat(i64 noundef %14) #29
  tail call void @llvm.memset.p0.i64(ptr align 8 %15, i8 0, i64 %14, i1 false)
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, -65536
  %18 = or i64 %17, 59
  store i64 %18, ptr %15, align 8
  %19 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %20 = sext i32 %11 to i64
  %21 = icmp eq ptr %19, null
  %22 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %23 = select i1 %21, ptr %22, ptr %19
  %24 = ashr i64 %20, 63
  %25 = tail call ptr @build_int_cst_wide(ptr noundef %23, i64 noundef %20, i64 noundef %24)
  %26 = getelementptr inbounds %struct.tree_exp, ptr %15, i64 0, i32 3
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  store ptr %0, ptr %27, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.tree_exp, ptr %15, i64 1
  store ptr %1, ptr %28, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_exp, ptr %15, i64 1, i32 0, i32 1
  store ptr null, ptr %29, align 8, !tbaa !17
  br i1 %4, label %44, label %30

30:                                               ; preds = %10
  %31 = load i32, ptr %2, align 8, !tbaa !61
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %30, %33
  %34 = phi i64 [ %40, %33 ], [ 0, %30 ]
  %35 = getelementptr inbounds %struct.VEC_tree_base, ptr %2, i64 0, i32 2, i64 %34
  %36 = load ptr, ptr %35, align 8, !tbaa !6
  %37 = add nuw i64 %34, 3
  %38 = and i64 %37, 4294967295
  %39 = getelementptr inbounds %struct.tree_exp, ptr %15, i64 0, i32 3, i64 %38
  store ptr %36, ptr %39, align 8, !tbaa !17
  %40 = add nuw nsw i64 %34, 1
  %41 = load i32, ptr %2, align 8, !tbaa !61
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %33, label %44

44:                                               ; preds = %33, %30, %10
  tail call fastcc void @process_call_operands(ptr noundef nonnull %15)
  ret ptr %15
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @in_array_bounds_p(ptr noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = load i64, ptr %3, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 23
  br i1 %6, label %7, label %180

7:                                                ; preds = %1
  %8 = tail call ptr @array_ref_low_bound(ptr noundef nonnull %0) #29
  %9 = tail call ptr @array_ref_up_bound(ptr noundef nonnull %0) #29
  %10 = icmp ne ptr %8, null
  %11 = icmp ne ptr %9, null
  %12 = select i1 %10, i1 %11, i1 false
  br i1 %12, label %13, label %180

13:                                               ; preds = %7
  %14 = load i64, ptr %8, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 23
  br i1 %16, label %17, label %180

17:                                               ; preds = %13
  %18 = load i64, ptr %9, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 23
  br i1 %20, label %21, label %180

21:                                               ; preds = %17
  %22 = icmp eq ptr %3, %8
  br i1 %22, label %99, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = load i64, ptr %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = lshr i32 %27, 21
  %29 = and i32 %28, 1
  %30 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = load i64, ptr %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = lshr i32 %33, 21
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %29, %35
  br i1 %36, label %73, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %39 = load i64, ptr %38, align 8, !tbaa !17
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %43 = load i64, ptr %42, align 8, !tbaa !17
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %41, %37
  %46 = and i64 %26, 2097152
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %50 = load i64, ptr %49, align 8, !tbaa !17
  %51 = icmp slt i64 %50, 0
  %52 = select i1 %51, i32 -1, i32 1
  br label %53

53:                                               ; preds = %48, %45, %41
  %54 = phi i32 [ 0, %41 ], [ 1, %45 ], [ %52, %48 ]
  %55 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1
  %56 = load i64, ptr %55, align 8, !tbaa !17
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1, i32 1
  %60 = load i64, ptr %59, align 8, !tbaa !17
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %58, %53
  %63 = and i64 %32, 2097152
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1, i32 1
  %67 = load i64, ptr %66, align 8, !tbaa !17
  %68 = icmp slt i64 %67, 0
  %69 = select i1 %68, i32 -1, i32 1
  br label %70

70:                                               ; preds = %65, %62, %58
  %71 = phi i32 [ 0, %58 ], [ 1, %62 ], [ %69, %65 ]
  %72 = icmp eq i32 %54, %71
  br i1 %72, label %83, label %97

73:                                               ; preds = %23
  %74 = icmp eq i32 %29, 0
  br i1 %74, label %75, label %83

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %77 = load i64, ptr %76, align 8, !tbaa !17
  %78 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1, i32 1
  %79 = load i64, ptr %78, align 8, !tbaa !17
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %180, label %81

81:                                               ; preds = %75
  %82 = icmp eq i64 %77, %79
  br i1 %82, label %91, label %99

83:                                               ; preds = %73, %70
  %84 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %85 = load i64, ptr %84, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1, i32 1
  %87 = load i64, ptr %86, align 8, !tbaa !17
  %88 = icmp ult i64 %85, %87
  br i1 %88, label %180, label %89

89:                                               ; preds = %83
  %90 = icmp eq i64 %85, %87
  br i1 %90, label %91, label %99

91:                                               ; preds = %89, %81
  %92 = getelementptr inbounds %struct.tree_int_cst, ptr %8, i64 0, i32 1
  %93 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %94 = load i64, ptr %93, align 8, !tbaa !17
  %95 = load i64, ptr %92, align 8, !tbaa !17
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %180, label %99

97:                                               ; preds = %70
  %98 = icmp slt i32 %54, %71
  br i1 %98, label %180, label %99

99:                                               ; preds = %91, %89, %81, %21, %97
  %100 = icmp eq ptr %9, %3
  br i1 %100, label %176, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 2
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = load i64, ptr %103, align 8
  %105 = trunc i64 %104 to i32
  %106 = lshr i32 %105, 21
  %107 = and i32 %106, 1
  %108 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %109 = load ptr, ptr %108, align 8, !tbaa !17
  %110 = load i64, ptr %109, align 8
  %111 = trunc i64 %110 to i32
  %112 = lshr i32 %111, 21
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %107, %113
  br i1 %114, label %152, label %115

115:                                              ; preds = %101
  %116 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1
  %117 = load i64, ptr %116, align 8, !tbaa !17
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1, i32 1
  %121 = load i64, ptr %120, align 8, !tbaa !17
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %119, %115
  %124 = and i64 %104, 2097152
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %131

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1, i32 1
  %128 = load i64, ptr %127, align 8, !tbaa !17
  %129 = icmp slt i64 %128, 0
  %130 = select i1 %129, i32 -1, i32 1
  br label %131

131:                                              ; preds = %126, %123, %119
  %132 = phi i32 [ 0, %119 ], [ 1, %123 ], [ %130, %126 ]
  %133 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %134 = load i64, ptr %133, align 8, !tbaa !17
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %131
  %137 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %138 = load i64, ptr %137, align 8, !tbaa !17
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %136, %131
  %141 = and i64 %110, 2097152
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %140
  %144 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %145 = load i64, ptr %144, align 8, !tbaa !17
  %146 = icmp slt i64 %145, 0
  %147 = select i1 %146, i32 -1, i32 1
  br label %148

148:                                              ; preds = %143, %140, %136
  %149 = phi i32 [ 0, %136 ], [ 1, %140 ], [ %147, %143 ]
  %150 = icmp slt i32 %132, %149
  %151 = icmp eq i32 %132, %149
  br i1 %151, label %162, label %176

152:                                              ; preds = %101
  %153 = icmp eq i32 %107, 0
  br i1 %153, label %154, label %162

154:                                              ; preds = %152
  %155 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1, i32 1
  %156 = load i64, ptr %155, align 8, !tbaa !17
  %157 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %158 = load i64, ptr %157, align 8, !tbaa !17
  %159 = icmp slt i64 %156, %158
  br i1 %159, label %176, label %160

160:                                              ; preds = %154
  %161 = icmp eq i64 %156, %158
  br i1 %161, label %170, label %176

162:                                              ; preds = %152, %148
  %163 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1, i32 1
  %164 = load i64, ptr %163, align 8, !tbaa !17
  %165 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1, i32 1
  %166 = load i64, ptr %165, align 8, !tbaa !17
  %167 = icmp ult i64 %164, %166
  br i1 %167, label %176, label %168

168:                                              ; preds = %162
  %169 = icmp eq i64 %164, %166
  br i1 %169, label %170, label %176

170:                                              ; preds = %168, %160
  %171 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %172 = getelementptr inbounds %struct.tree_int_cst, ptr %9, i64 0, i32 1
  %173 = load i64, ptr %172, align 8, !tbaa !17
  %174 = load i64, ptr %171, align 8, !tbaa !17
  %175 = icmp ult i64 %173, %174
  br label %176

176:                                              ; preds = %99, %148, %154, %160, %162, %168, %170
  %177 = phi i1 [ %150, %148 ], [ false, %99 ], [ true, %154 ], [ false, %160 ], [ true, %162 ], [ false, %168 ], [ %175, %170 ]
  %178 = xor i1 %177, true
  %179 = zext i1 %178 to i8
  br label %180

180:                                              ; preds = %91, %83, %75, %176, %97, %7, %13, %17, %1
  %181 = phi i8 [ 0, %1 ], [ 0, %17 ], [ 0, %13 ], [ 0, %7 ], [ 0, %97 ], [ %179, %176 ], [ 0, %75 ], [ 0, %83 ], [ 0, %91 ]
  ret i8 %181
}

declare ptr @array_ref_low_bound(ptr noundef) local_unnamed_addr #3

declare ptr @array_ref_up_bound(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @range_in_array_bounds_p(ptr noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 13
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 14
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp ne ptr %7, null
  %11 = icmp ne ptr %9, null
  %12 = select i1 %10, i1 %11, i1 false
  br i1 %12, label %13, label %42

13:                                               ; preds = %1
  %14 = load i64, ptr %7, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 23
  br i1 %16, label %17, label %42

17:                                               ; preds = %13
  %18 = load i64, ptr %9, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 23
  br i1 %20, label %21, label %42

21:                                               ; preds = %17
  %22 = tail call ptr @array_ref_low_bound(ptr noundef nonnull %0) #29
  %23 = tail call ptr @array_ref_up_bound(ptr noundef nonnull %0) #29
  %24 = icmp ne ptr %22, null
  %25 = icmp ne ptr %23, null
  %26 = select i1 %24, i1 %25, i1 false
  br i1 %26, label %27, label %42

27:                                               ; preds = %21
  %28 = load i64, ptr %22, align 8
  %29 = and i64 %28, 65535
  %30 = icmp eq i64 %29, 23
  br i1 %30, label %31, label %42

31:                                               ; preds = %27
  %32 = load i64, ptr %23, align 8
  %33 = and i64 %32, 65535
  %34 = icmp eq i64 %33, 23
  br i1 %34, label %35, label %42

35:                                               ; preds = %31
  %36 = tail call i32 @tree_int_cst_lt(ptr noundef nonnull %7, ptr noundef nonnull %22)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = tail call i32 @tree_int_cst_lt(ptr noundef nonnull %23, ptr noundef nonnull %9)
  %40 = icmp eq i32 %39, 0
  %41 = zext i1 %40 to i8
  br label %42

42:                                               ; preds = %38, %35, %21, %27, %31, %1, %13, %17
  %43 = phi i8 [ 0, %17 ], [ 0, %13 ], [ 0, %1 ], [ 0, %31 ], [ 0, %27 ], [ 0, %21 ], [ 0, %35 ], [ %41, %38 ]
  ret i8 %43
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @needs_to_live_in_memory(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 141
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_ssa_name, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = load i64, ptr %7, align 8
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i64 [ %8, %5 ], [ %2, %1 ]
  %11 = phi ptr [ %7, %5 ], [ %0, %1 ]
  %12 = and i64 %10, 67371008
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %27

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tree_decl_common, ptr %11, i64 0, i32 2
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 33554432
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %14
  %20 = and i64 %10, 65535
  %21 = icmp eq i64 %20, 36
  br i1 %21, label %22, label %27

22:                                               ; preds = %19
  %23 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %24 = tail call i32 @aggregate_value_p(ptr noundef nonnull %11, ptr noundef %23) #29
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i8
  br label %27

27:                                               ; preds = %19, %22, %14, %9
  %28 = phi i8 [ 1, %14 ], [ 1, %9 ], [ 0, %19 ], [ %26, %22 ]
  ret i8 %28
}

declare i32 @aggregate_value_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @fields_compatible_p(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = tail call i32 @operand_equal_p(ptr noundef %4, ptr noundef %6, i32 noundef 1) #29
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = tail call i32 @operand_equal_p(ptr noundef %11, ptr noundef %13, i32 noundef 1) #29
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = tail call zeroext i8 @types_compatible_p(ptr noundef %18, ptr noundef %20) #29
  %22 = icmp ne i8 %21, 0
  %23 = zext i1 %22 to i8
  br label %24

24:                                               ; preds = %16, %9, %2
  %25 = phi i8 [ 0, %2 ], [ 0, %9 ], [ %23, %16 ]
  ret i8 %25
}

declare i32 @operand_equal_p(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @types_compatible_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @find_compatible_field(ptr nocapture noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = icmp eq ptr %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 4
  %8 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  br label %10

10:                                               ; preds = %6, %33
  %11 = phi ptr [ %4, %6 ], [ %35, %33 ]
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, 65535
  %14 = icmp eq i64 %13, 31
  br i1 %14, label %15, label %33

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.tree_field_decl, ptr %11, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = load ptr, ptr %7, align 8, !tbaa !17
  %19 = tail call i32 @operand_equal_p(ptr noundef %17, ptr noundef %18, i32 noundef 1) #29
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.tree_field_decl, ptr %11, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = load ptr, ptr %8, align 8, !tbaa !17
  %25 = tail call i32 @operand_equal_p(ptr noundef %23, ptr noundef %24, i32 noundef 1) #29
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = load ptr, ptr %9, align 8, !tbaa !17
  %31 = tail call zeroext i8 @types_compatible_p(ptr noundef %29, ptr noundef %30) #29
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %67

33:                                               ; preds = %21, %15, %10, %27
  %34 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %10, !llvm.loop !287

37:                                               ; preds = %33, %2
  %38 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 13
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = icmp eq ptr %39, null
  br i1 %40, label %66, label %41

41:                                               ; preds = %37
  %42 = load i64, ptr %39, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 31
  br i1 %44, label %45, label %66

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.tree_field_decl, ptr %39, i64 0, i32 4
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 4
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = tail call i32 @operand_equal_p(ptr noundef %47, ptr noundef %49, i32 noundef 1) #29
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.tree_field_decl, ptr %39, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = tail call i32 @operand_equal_p(ptr noundef %54, ptr noundef %56, i32 noundef 1) #29
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.tree_common, ptr %39, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = tail call zeroext i8 @types_compatible_p(ptr noundef %61, ptr noundef %63) #29
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %52, %45, %59, %41, %37
  br label %67

67:                                               ; preds = %27, %59, %66
  %68 = phi ptr [ %1, %66 ], [ %39, %59 ], [ %11, %27 ]
  ret ptr %68
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @int_cst_value(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 6
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 1023
  %7 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !17
  switch i64 %10, label %11 [
    i64 0, label %12
    i64 -1, label %12
  ]

11:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9651, ptr noundef nonnull @.str.219) #29
  br label %12

12:                                               ; preds = %1, %1, %11
  %13 = icmp ult i32 %6, 64
  br i1 %13, label %14, label %26

14:                                               ; preds = %12
  %15 = add nsw i32 %6, -1
  %16 = zext i32 %15 to i64
  %17 = shl nuw i64 1, %16
  %18 = and i64 %17, %8
  %19 = icmp eq i64 %18, 0
  %20 = shl i64 -2, %16
  br i1 %19, label %23, label %21

21:                                               ; preds = %14
  %22 = or i64 %20, %8
  br label %26

23:                                               ; preds = %14
  %24 = xor i64 %20, -1
  %25 = and i64 %8, %24
  br label %26

26:                                               ; preds = %21, %23, %12
  %27 = phi i64 [ %8, %12 ], [ %22, %21 ], [ %25, %23 ]
  ret i64 %27
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @widest_int_cst_value(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 6
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 1023
  %7 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !17
  switch i64 %10, label %11 [
    i64 0, label %12
    i64 -1, label %12
  ]

11:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 9680, ptr noundef nonnull @.str.219) #29
  br label %12

12:                                               ; preds = %1, %1, %11
  %13 = icmp ult i32 %6, 64
  br i1 %13, label %14, label %26

14:                                               ; preds = %12
  %15 = add nsw i32 %6, -1
  %16 = zext i32 %15 to i64
  %17 = shl nuw i64 1, %16
  %18 = and i64 %17, %8
  %19 = icmp eq i64 %18, 0
  %20 = shl i64 -2, %16
  br i1 %19, label %23, label %21

21:                                               ; preds = %14
  %22 = or i64 %20, %8
  br label %26

23:                                               ; preds = %14
  %24 = xor i64 %20, -1
  %25 = and i64 %8, %24
  br label %26

26:                                               ; preds = %21, %23, %12
  %27 = phi i64 [ %8, %12 ], [ %22, %21 ], [ %25, %23 ]
  ret i64 %27
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @signed_or_unsigned_type_for(i32 noundef %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %1, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %13 [
    i16 10, label %5
    i16 12, label %5
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = load i64, ptr %7, align 8
  %9 = icmp ult i64 %8, 72057594037927936
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %12 = load i64, ptr %11, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = phi i64 [ %12, %10 ], [ %3, %2 ]
  %15 = phi ptr [ %11, %10 ], [ %1, %2 ]
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 65535
  %18 = add nsw i32 %17, -6
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %31

20:                                               ; preds = %13
  %21 = lshr i32 %16, 21
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, %0
  br i1 %23, label %31, label %24

24:                                               ; preds = %20, %5
  %25 = phi ptr [ %1, %5 ], [ %15, %20 ]
  %26 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !256
  %27 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 6
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, 1023
  %30 = tail call ptr %26(i32 noundef %29, i32 noundef %0) #29
  br label %31

31:                                               ; preds = %24, %13, %20
  %32 = phi ptr [ %15, %13 ], [ %15, %20 ], [ %30, %24 ]
  ret ptr %32
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @unsigned_type_for(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %12 [
    i16 10, label %4
    i16 12, label %4
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = load i64, ptr %6, align 8
  %8 = icmp ult i64 %7, 72057594037927936
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %11 = load i64, ptr %10, align 8
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i64 [ %11, %9 ], [ %2, %1 ]
  %14 = phi ptr [ %10, %9 ], [ %0, %1 ]
  %15 = trunc i64 %13 to i32
  %16 = and i32 %15, 65535
  %17 = add nsw i32 %16, -6
  %18 = icmp ult i32 %17, 3
  %19 = and i32 %15, 2097152
  %20 = icmp eq i32 %19, 0
  %21 = and i1 %20, %18
  br i1 %21, label %22, label %29

22:                                               ; preds = %12, %4
  %23 = phi ptr [ %0, %4 ], [ %14, %12 ]
  %24 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !256
  %25 = getelementptr inbounds %struct.tree_type, ptr %23, i64 0, i32 6
  %26 = load i32, ptr %25, align 4
  %27 = and i32 %26, 1023
  %28 = tail call ptr %24(i32 noundef %27, i32 noundef 1) #29
  br label %29

29:                                               ; preds = %12, %22
  %30 = phi ptr [ %14, %12 ], [ %28, %22 ]
  ret ptr %30
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @signed_type_for(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %12 [
    i16 10, label %4
    i16 12, label %4
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = load i64, ptr %6, align 8
  %8 = icmp ult i64 %7, 72057594037927936
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %11 = load i64, ptr %10, align 8
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i64 [ %11, %9 ], [ %2, %1 ]
  %14 = phi ptr [ %10, %9 ], [ %0, %1 ]
  %15 = trunc i64 %13 to i32
  %16 = and i32 %15, 65535
  %17 = add nsw i32 %16, -9
  %18 = icmp ult i32 %17, -3
  %19 = and i32 %15, 2097152
  %20 = icmp eq i32 %19, 0
  %21 = or i1 %20, %18
  br i1 %21, label %29, label %22

22:                                               ; preds = %12, %4
  %23 = phi ptr [ %0, %4 ], [ %14, %12 ]
  %24 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !256
  %25 = getelementptr inbounds %struct.tree_type, ptr %23, i64 0, i32 6
  %26 = load i32, ptr %25, align 4
  %27 = and i32 %26, 1023
  %28 = tail call ptr %24(i32 noundef %27, i32 noundef 0) #29
  br label %29

29:                                               ; preds = %12, %22
  %30 = phi ptr [ %14, %12 ], [ %28, %22 ]
  ret ptr %30
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @upper_bound_in_type(ptr noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 1023
  %6 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 1023
  %9 = icmp ugt i32 %5, %8
  %10 = select i1 %9, i32 4, i32 0
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i32
  %13 = lshr i32 %12, 20
  %14 = and i32 %13, 2
  %15 = or i32 %14, %10
  %16 = load i64, ptr %1, align 8
  %17 = trunc i64 %16 to i32
  %18 = lshr i32 %17, 21
  %19 = and i32 %18, 1
  %20 = or i32 %15, %19
  switch i32 %20, label %27 [
    i32 0, label %21
    i32 1, label %21
    i32 2, label %28
    i32 3, label %28
    i32 4, label %23
    i32 5, label %25
    i32 6, label %28
    i32 7, label %26
  ]

21:                                               ; preds = %2, %2
  %22 = add nsw i32 %5, -1
  br label %28

23:                                               ; preds = %2
  %24 = add nsw i32 %8, -1
  br label %28

25:                                               ; preds = %2
  br label %28

26:                                               ; preds = %2
  br label %28

27:                                               ; preds = %2
  unreachable

28:                                               ; preds = %2, %2, %2, %26, %25, %23, %21
  %29 = phi i32 [ %8, %26 ], [ %8, %25 ], [ %24, %23 ], [ %22, %21 ], [ %5, %2 ], [ %5, %2 ], [ %5, %2 ]
  %30 = icmp ult i32 %29, 65
  %31 = sub nuw nsw i32 64, %29
  %32 = zext i32 %31 to i64
  %33 = lshr i64 -1, %32
  %34 = sub nsw i32 128, %29
  %35 = zext i32 %34 to i64
  %36 = lshr i64 -1, %35
  %37 = select i1 %30, i64 0, i64 %36
  %38 = select i1 %30, i64 %33, i64 -1
  %39 = tail call ptr @build_int_cst_wide(ptr noundef nonnull %0, i64 noundef %38, i64 noundef %37)
  ret ptr %39
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @lower_bound_in_type(ptr noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 1023
  %6 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 1023
  %9 = load i64, ptr %0, align 8
  %10 = and i64 %9, 2097152
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %29

12:                                               ; preds = %2
  %13 = icmp ugt i32 %5, %8
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = load i64, ptr %1, align 8
  %16 = and i64 %15, 2097152
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %29

18:                                               ; preds = %14, %12
  %19 = tail call i32 @llvm.umin.i32(i32 %5, i32 %8)
  %20 = icmp ult i32 %19, 65
  %21 = add nsw i32 %19, -1
  %22 = zext i32 %21 to i64
  %23 = shl nsw i64 -1, %22
  %24 = add nsw i32 %19, -65
  %25 = zext i32 %24 to i64
  %26 = shl nsw i64 -1, %25
  %27 = select i1 %20, i64 -1, i64 %26
  %28 = select i1 %20, i64 %23, i64 0
  br label %29

29:                                               ; preds = %2, %14, %18
  %30 = phi i64 [ %27, %18 ], [ 0, %14 ], [ 0, %2 ]
  %31 = phi i64 [ %28, %18 ], [ 0, %14 ], [ 0, %2 ]
  %32 = tail call ptr @build_int_cst_wide(ptr noundef nonnull %0, i64 noundef %31, i64 noundef %30)
  ret ptr %32
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @operand_equal_for_phi_arg_p(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = load i64, ptr %0, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 141
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = load i64, ptr %1, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 141
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @operand_equal_p(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef 0) #29
  br label %14

14:                                               ; preds = %4, %8, %2, %12
  %15 = phi i32 [ %13, %12 ], [ 1, %2 ], [ 0, %8 ], [ 0, %4 ]
  ret i32 %15
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @num_ending_zeros(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !17
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !17
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ 64, %9 ], [ 0, %1 ]
  %14 = phi i64 [ %11, %9 ], [ %7, %1 ]
  %15 = lshr i64 %14, 32
  %16 = and i64 %14, 4294967295
  %17 = icmp eq i64 %16, 0
  %18 = select i1 %17, i32 32, i32 0
  %19 = or i32 %18, %13
  %20 = select i1 %17, i64 %15, i64 %14
  %21 = lshr i64 %20, 16
  %22 = and i64 %20, 65535
  %23 = icmp eq i64 %22, 0
  %24 = select i1 %23, i32 16, i32 0
  %25 = or i32 %24, %19
  %26 = select i1 %23, i64 %21, i64 %20
  %27 = lshr i64 %26, 8
  %28 = and i64 %26, 255
  %29 = icmp eq i64 %28, 0
  %30 = select i1 %29, i32 8, i32 0
  %31 = or i32 %30, %25
  %32 = select i1 %29, i64 %27, i64 %26
  %33 = lshr i64 %32, 4
  %34 = and i64 %32, 15
  %35 = icmp eq i64 %34, 0
  %36 = select i1 %35, i32 4, i32 0
  %37 = or i32 %36, %31
  %38 = select i1 %35, i64 %33, i64 %32
  %39 = lshr i64 %38, 2
  %40 = and i64 %38, 3
  %41 = icmp eq i64 %40, 0
  %42 = select i1 %41, i32 2, i32 0
  %43 = or i32 %42, %37
  %44 = select i1 %41, i64 %39, i64 %38
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  %47 = zext i1 %46 to i32
  %48 = add nuw nsw i32 %43, %47
  %49 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 6
  %50 = load i32, ptr %49, align 4
  %51 = and i32 %50, 1023
  %52 = tail call i32 @llvm.umin.i32(i32 %48, i32 %51)
  %53 = zext i32 %52 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %54 = call i32 @fit_double_type(i64 noundef %53, i64 noundef 0, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %5) #29
  %55 = load i64, ptr %2, align 8, !tbaa !72
  %56 = load i64, ptr %3, align 8, !tbaa !72
  %57 = call ptr @build_int_cst_wide(ptr noundef %5, i64 noundef %55, i64 noundef %56)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  ret ptr %57
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @walk_type_fields(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) unnamed_addr #9 {
  %6 = load i64, ptr %0, align 8
  %7 = trunc i64 %6 to i16
  switch i16 %7, label %86 [
    i16 10, label %8
    i16 12, label %8
    i16 13, label %35
    i16 21, label %39
    i16 20, label %43
    i16 15, label %60
    i16 5, label %78
  ]

8:                                                ; preds = %5, %5
  %9 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = load i64, ptr %10, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %35 [
    i16 10, label %13
    i16 12, label %13
  ]

13:                                               ; preds = %8, %8
  %14 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %15, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %35 [
    i16 10, label %18
    i16 12, label %18
  ]

18:                                               ; preds = %13, %13
  %19 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = load i64, ptr %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 65535
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = icmp ne i32 %23, 12
  %27 = icmp ne ptr %3, null
  %28 = or i1 %27, %26
  br i1 %28, label %35, label %31

29:                                               ; preds = %18
  %30 = icmp eq ptr %3, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %25, %29
  %32 = tail call ptr @pointer_set_create() #29
  %33 = tail call ptr @walk_tree_1(ptr noundef nonnull %9, ptr noundef %1, ptr noundef %2, ptr noundef %32, ptr noundef null)
  tail call void @pointer_set_destroy(ptr noundef %32) #29
  %34 = icmp eq ptr %33, null
  br i1 %34, label %86, label %87

35:                                               ; preds = %13, %8, %5, %29, %25
  %36 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %37 = tail call ptr @walk_tree_1(ptr noundef nonnull %36, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %38 = icmp eq ptr %37, null
  br i1 %38, label %86, label %87

39:                                               ; preds = %5
  %40 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %41 = tail call ptr @walk_tree_1(ptr noundef nonnull %40, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %87

43:                                               ; preds = %5, %39
  %44 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %45 = tail call ptr @walk_tree_1(ptr noundef nonnull %44, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %87

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = icmp eq ptr %49, null
  br i1 %50, label %86, label %55

51:                                               ; preds = %55
  %52 = getelementptr inbounds %struct.tree_common, ptr %56, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = icmp eq ptr %53, null
  br i1 %54, label %86, label %55, !llvm.loop !288

55:                                               ; preds = %47, %51
  %56 = phi ptr [ %53, %51 ], [ %49, %47 ]
  %57 = getelementptr inbounds %struct.tree_list, ptr %56, i64 0, i32 2
  %58 = tail call ptr @walk_tree_1(ptr noundef nonnull %57, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %59 = icmp eq ptr %58, null
  br i1 %59, label %51, label %87

60:                                               ; preds = %5
  %61 = icmp eq ptr %3, null
  %62 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  br i1 %61, label %65, label %63

63:                                               ; preds = %60
  %64 = tail call ptr @walk_tree_1(ptr noundef nonnull %62, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %3, ptr noundef %4)
  br label %71

65:                                               ; preds = %60
  %66 = load ptr, ptr %62, align 8, !tbaa !17
  %67 = load i64, ptr %66, align 8
  %68 = trunc i64 %67 to i16
  switch i16 %68, label %69 [
    i16 10, label %74
    i16 12, label %74
    i16 5, label %74
  ]

69:                                               ; preds = %65
  %70 = tail call ptr @walk_tree_1(ptr noundef nonnull %62, ptr noundef %1, ptr noundef %2, ptr noundef null, ptr noundef %4)
  br label %71

71:                                               ; preds = %63, %69
  %72 = phi ptr [ %70, %69 ], [ %64, %63 ]
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %87

74:                                               ; preds = %65, %65, %65, %71
  %75 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %76 = tail call ptr @walk_tree_1(ptr noundef nonnull %75, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %77 = icmp eq ptr %76, null
  br i1 %77, label %86, label %87

78:                                               ; preds = %5
  %79 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %80 = tail call ptr @walk_tree_1(ptr noundef nonnull %79, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %84 = tail call ptr @walk_tree_1(ptr noundef nonnull %83, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %51, %47, %5, %82, %74, %35, %31
  br label %87

87:                                               ; preds = %55, %82, %78, %74, %71, %43, %39, %35, %31, %86
  %88 = phi ptr [ null, %86 ], [ %33, %31 ], [ %37, %35 ], [ %41, %39 ], [ %45, %43 ], [ %72, %71 ], [ %76, %74 ], [ %80, %78 ], [ %84, %82 ], [ %58, %55 ]
  ret ptr %88
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @walk_tree_without_duplicates_1(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = tail call ptr @pointer_set_create() #29
  %6 = tail call ptr @walk_tree_1(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %5, ptr noundef %3)
  tail call void @pointer_set_destroy(ptr noundef %5) #29
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @call_expr_arglist(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_int_cst, ptr %3, i64 0, i32 1
  %5 = load i64, ptr %4, align 8, !tbaa !17
  %6 = trunc i64 %5 to i32
  %7 = icmp sgt i32 %6, 3
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = add i64 %5, 4294967292
  %10 = and i64 %9, 4294967295
  br label %11

11:                                               ; preds = %8, %11
  %12 = phi i64 [ %10, %8 ], [ %22, %11 ]
  %13 = phi ptr [ null, %8 ], [ %17, %11 ]
  %14 = add nuw nsw i64 %12, 3
  %15 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #29
  %18 = getelementptr inbounds i8, ptr %17, i64 16
  store i64 0, ptr %18, align 8
  store i64 2, ptr %17, align 8
  %19 = getelementptr inbounds %struct.tree_common, ptr %17, i64 0, i32 1
  store ptr %13, ptr %19, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.tree_list, ptr %17, i64 0, i32 1
  store ptr null, ptr %20, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.tree_list, ptr %17, i64 0, i32 2
  store ptr %16, ptr %21, align 8, !tbaa !17
  %22 = add nsw i64 %12, -1
  %23 = icmp eq i64 %12, 0
  br i1 %23, label %24, label %11, !llvm.loop !289

24:                                               ; preds = %11, %1
  %25 = phi ptr [ null, %1 ], [ %17, %11 ]
  ret ptr %25
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @create_artificial_label(i32 noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %3 = tail call ptr @make_node_stat(i32 noundef 30)
  %4 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  store i32 %0, ptr %4, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 3
  store ptr null, ptr %5, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  store ptr %2, ptr %6, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_decl_common, ptr %3, i64 0, i32 2
  %8 = load i64, ptr %7, align 8
  %9 = or i64 %8, 5120
  store i64 %9, ptr %7, align 8
  %10 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 4
  store ptr %10, ptr %11, align 8, !tbaa !17
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @get_name(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %75, %1
  %3 = phi ptr [ %0, %1 ], [ %76, %75 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %58 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %58, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %75, label %58

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %3, align 8
  br label %58

56:                                               ; preds = %51
  %57 = load ptr, ptr %7, align 8, !tbaa !17
  br label %75

58:                                               ; preds = %2, %6, %21, %54
  %59 = phi i64 [ %55, %54 ], [ %4, %21 ], [ %4, %6 ], [ %4, %2 ]
  %60 = and i64 %59, 65535
  %61 = add nsw i64 %60, -29
  %62 = icmp ult i64 %61, 12
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = icmp eq ptr %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.tree_identifier, ptr %65, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  br label %77

70:                                               ; preds = %58
  %71 = icmp eq i64 %60, 121
  br i1 %71, label %72, label %77

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  br label %75

75:                                               ; preds = %72, %56, %21
  %76 = phi ptr [ %74, %72 ], [ %57, %56 ], [ %8, %21 ]
  br label %2, !llvm.loop !88

77:                                               ; preds = %70, %63, %67
  %78 = phi ptr [ %69, %67 ], [ null, %63 ], [ null, %70 ]
  ret ptr %78
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local zeroext i8 @stdarg_p(ptr noundef readonly %0) local_unnamed_addr #16 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.tree_list, ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7, %17
  %12 = phi ptr [ %19, %17 ], [ %9, %7 ]
  %13 = phi ptr [ %15, %17 ], [ %5, %7 ]
  %14 = getelementptr inbounds %struct.tree_common, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %21, label %17, !llvm.loop !290

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.tree_list, ptr %15, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %11, !llvm.loop !290

21:                                               ; preds = %11, %17, %7, %3
  %22 = phi ptr [ null, %3 ], [ null, %7 ], [ %12, %17 ], [ %12, %11 ]
  %23 = icmp ne ptr %22, null
  %24 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16
  %25 = icmp ne ptr %22, %24
  %26 = select i1 %23, i1 %25, i1 false
  %27 = zext i1 %26 to i8
  br label %28

28:                                               ; preds = %1, %21
  %29 = phi i8 [ %27, %21 ], [ 0, %1 ]
  ret i8 %29
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @block_nonartificial_location(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %59, label %3

3:                                                ; preds = %1, %54
  %4 = phi ptr [ %55, %54 ], [ null, %1 ]
  %5 = phi ptr [ %57, %54 ], [ %0, %1 ]
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 4
  br i1 %8, label %9, label %59

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tree_block, ptr %5, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %59, label %13

13:                                               ; preds = %9, %18
  %14 = phi ptr [ %20, %18 ], [ %11, %9 ]
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.tree_block, ptr %14, i64 0, i32 7
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  %22 = icmp eq ptr %20, %14
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %13, !llvm.loop !291

24:                                               ; preds = %18, %13
  %25 = trunc i64 %15 to i16
  switch i16 %25, label %59 [
    i16 29, label %26
    i16 4, label %54
  ]

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.tree_function_decl, ptr %14, i64 0, i32 5
  %28 = load i32, ptr %27, align 8
  %29 = and i32 %28, 2097152
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %59, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.tree_decl_common, ptr %14, i64 0, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = icmp eq ptr %33, null
  br i1 %34, label %59, label %35

35:                                               ; preds = %31, %48
  %36 = phi ptr [ %50, %48 ], [ %33, %31 ]
  %37 = getelementptr inbounds %struct.tree_list, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = load i64, ptr %38, align 8
  %40 = and i64 %39, 65535
  %41 = icmp eq i64 %40, 1
  br i1 %41, label %44, label %42

42:                                               ; preds = %35
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 5095, ptr noundef nonnull @.str.219) #29
  %43 = load ptr, ptr %37, align 8, !tbaa !17
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi ptr [ %38, %35 ], [ %43, %42 ]
  %46 = tail call fastcc i32 @is_attribute_with_length_p(ptr noundef nonnull @.str.282, i32 noundef 10, ptr noundef %45), !range !37
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.tree_common, ptr %36, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = icmp eq ptr %50, null
  br i1 %51, label %59, label %35, !llvm.loop !229

52:                                               ; preds = %44
  %53 = getelementptr inbounds %struct.tree_block, ptr %5, i64 0, i32 2
  br label %54

54:                                               ; preds = %52, %24
  %55 = phi ptr [ %53, %52 ], [ %4, %24 ]
  %56 = getelementptr inbounds %struct.tree_block, ptr %5, i64 0, i32 6
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %3

59:                                               ; preds = %9, %54, %3, %26, %24, %31, %48, %1
  %60 = phi ptr [ null, %1 ], [ %4, %48 ], [ %4, %9 ], [ %55, %54 ], [ %4, %3 ], [ %4, %26 ], [ %4, %24 ], [ %4, %31 ]
  ret ptr %60
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @tree_nonartificial_location(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %3
  %5 = load i32, ptr %4, align 4, !tbaa !17
  %6 = shl i32 %5, 24
  %7 = add i32 %6, -50331649
  %8 = icmp ult i32 %7, 134217727
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = tail call ptr @block_nonartificial_location(ptr noundef %11)
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %15

14:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10311, ptr noundef nonnull @.str.219) #29
  unreachable

15:                                               ; preds = %9
  %16 = load i32, ptr %12, align 4, !tbaa !21
  br label %26

17:                                               ; preds = %9
  %18 = load i64, ptr %0, align 8
  %19 = and i64 %18, 65535
  %20 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !17
  %22 = icmp ugt i32 %21, 3
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %25 = load i32, ptr %24, align 8, !tbaa !17
  br label %26

26:                                               ; preds = %23, %17, %15
  %27 = phi i32 [ %16, %15 ], [ %25, %23 ], [ 0, %17 ]
  ret i32 %27
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_optimization_node() local_unnamed_addr #9 {
  %1 = load ptr, ptr @cl_optimization_node, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.tree_optimization_option, ptr %1, i64 0, i32 1
  tail call void @cl_optimization_save(ptr noundef nonnull %2) #29
  %3 = load ptr, ptr @cl_option_hash_table, align 8, !tbaa !6
  %4 = load ptr, ptr @cl_optimization_node, align 8, !tbaa !6
  %5 = tail call ptr @htab_find_slot(ptr noundef %3, ptr noundef %4, i32 noundef 1) #29
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %0
  %9 = load ptr, ptr @cl_optimization_node, align 8, !tbaa !6
  store ptr %9, ptr %5, align 8, !tbaa !6
  %10 = tail call ptr @make_node_stat(i32 noundef 186)
  store ptr %10, ptr @cl_optimization_node, align 8, !tbaa !6
  br label %11

11:                                               ; preds = %8, %0
  %12 = phi ptr [ %6, %0 ], [ %9, %8 ]
  ret ptr %12
}

declare void @cl_optimization_save(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_target_option_node() local_unnamed_addr #9 {
  %1 = load ptr, ptr @cl_target_option_node, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.tree_target_option, ptr %1, i64 0, i32 1
  tail call void @cl_target_option_save(ptr noundef nonnull %2) #29
  %3 = load ptr, ptr @cl_option_hash_table, align 8, !tbaa !6
  %4 = load ptr, ptr @cl_target_option_node, align 8, !tbaa !6
  %5 = tail call ptr @htab_find_slot(ptr noundef %3, ptr noundef %4, i32 noundef 1) #29
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %0
  %9 = load ptr, ptr @cl_target_option_node, align 8, !tbaa !6
  store ptr %9, ptr %5, align 8, !tbaa !6
  %10 = tail call ptr @make_node_stat(i32 noundef 187)
  store ptr %10, ptr @cl_target_option_node, align 8, !tbaa !6
  br label %11

11:                                               ; preds = %8, %0
  %12 = phi ptr [ %6, %0 ], [ %9, %8 ]
  ret ptr %12
}

declare void @cl_target_option_save(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @block_ultimate_origin(ptr noundef readonly %0) local_unnamed_addr #16 {
  %2 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp ne i32 %6, 0
  %8 = icmp eq ptr %3, %0
  %9 = select i1 %7, i1 %8, i1 false
  %10 = icmp eq ptr %3, null
  %11 = select i1 %9, i1 true, i1 %10
  br i1 %11, label %31, label %12

12:                                               ; preds = %1, %17
  %13 = phi ptr [ %19, %17 ], [ %3, %1 ]
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 4
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.tree_block, ptr %13, i64 0, i32 7
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp ne ptr %19, null
  %21 = icmp ne ptr %19, %13
  %22 = and i1 %20, %21
  br i1 %22, label %12, label %31, !llvm.loop !292

23:                                               ; preds = %12
  %24 = add nsw i64 %15, -29
  %25 = icmp ult i64 %24, 12
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %13, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = icmp eq ptr %28, null
  %30 = select i1 %29, ptr %13, ptr %28
  br label %31

31:                                               ; preds = %17, %26, %23, %1
  %32 = phi ptr [ null, %1 ], [ %30, %26 ], [ %13, %23 ], [ %13, %17 ]
  ret ptr %32
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local zeroext i8 @list_equal_p(ptr noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #16 {
  %3 = icmp ne ptr %0, null
  %4 = icmp ne ptr %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %22

6:                                                ; preds = %2, %14
  %7 = phi ptr [ %18, %14 ], [ %1, %2 ]
  %8 = phi ptr [ %16, %14 ], [ %0, %2 ]
  %9 = getelementptr inbounds %struct.tree_list, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.tree_list, ptr %7, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %10, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = icmp ne ptr %16, null
  %20 = icmp ne ptr %18, null
  %21 = select i1 %19, i1 %20, i1 false
  br i1 %21, label %6, label %22, !llvm.loop !293

22:                                               ; preds = %14, %2
  %23 = phi i1 [ %3, %2 ], [ %19, %14 ]
  %24 = phi i1 [ %4, %2 ], [ %20, %14 ]
  %25 = select i1 %23, i1 true, i1 %24
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i8
  br label %28

28:                                               ; preds = %6, %22
  %29 = phi i8 [ %27, %22 ], [ 0, %6 ]
  ret i8 %29
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @tree_strip_sign_nop_conversions(ptr noundef readonly %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %68, %1
  %3 = phi ptr [ %0, %1 ], [ %64, %68 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %80 [
    i16 116, label %6
    i16 113, label %6
    i16 117, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %80, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %29 [
    i16 6, label %18
    i16 7, label %18
    i16 8, label %18
    i16 10, label %18
    i16 12, label %18
    i16 5, label %18
  ]

18:                                               ; preds = %11, %11, %11, %11, %11, %11
  %19 = load i64, ptr %15, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %29 [
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
    i16 10, label %21
    i16 12, label %21
    i16 5, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = xor i32 %25, %23
  %27 = and i32 %26, 1023
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %61, label %80

29:                                               ; preds = %18, %11
  %30 = and i64 %16, 65535
  %31 = icmp eq i64 %30, 14
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #29
  br label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = lshr i32 %36, 16
  %38 = and i32 %37, 255
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = load i64, ptr %15, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 14
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call i32 @vector_type_mode(ptr noundef nonnull %15) #29
  br label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 255
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i32 [ %45, %44 ], [ %50, %46 ]
  %53 = icmp eq i32 %40, %52
  br i1 %53, label %54, label %80

54:                                               ; preds = %51
  %55 = load ptr, ptr %12, align 8, !tbaa !17
  %56 = load ptr, ptr %7, align 8, !tbaa !17
  %57 = getelementptr inbounds %struct.tree_common, ptr %56, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = load i64, ptr %55, align 8
  %60 = load i64, ptr %58, align 8
  br label %61

61:                                               ; preds = %54, %21
  %62 = phi i64 [ %60, %54 ], [ %19, %21 ]
  %63 = phi i64 [ %59, %54 ], [ %16, %21 ]
  %64 = phi ptr [ %56, %54 ], [ %8, %21 ]
  %65 = xor i64 %62, %63
  %66 = and i64 %65, 2097152
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %61
  %69 = trunc i64 %63 to i32
  %70 = and i32 %69, 65535
  %71 = icmp eq i32 %70, 10
  %72 = icmp eq i32 %70, 12
  %73 = or i1 %71, %72
  %74 = trunc i64 %62 to i32
  %75 = and i32 %74, 65535
  %76 = icmp eq i32 %75, 10
  %77 = icmp eq i32 %75, 12
  %78 = or i1 %76, %77
  %79 = xor i1 %73, %78
  br i1 %79, label %80, label %2, !llvm.loop !294

80:                                               ; preds = %21, %6, %2, %61, %51, %68
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @lhd_gcc_personality() local_unnamed_addr #9 {
  %1 = load ptr, ptr @gcc_eh_personality_decl, align 8, !tbaa !6
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call ptr @build_personality_function(ptr noundef nonnull @.str.283) #29
  store ptr %4, ptr @gcc_eh_personality_decl, align 8, !tbaa !6
  br label %5

5:                                                ; preds = %3, %0
  %6 = phi ptr [ %4, %3 ], [ %1, %0 ]
  ret ptr %6
}

declare ptr @build_personality_function(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_type_hash(ptr noundef %0) #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #29
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.type_hash, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !36
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %8) #29
  br label %11

11:                                               ; preds = %1, %6, %10, %3
  ret void
}

declare i32 @ggc_set_mark(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_lang_tree_node(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_m_P9type_hash4htab(ptr noundef %0) #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %39, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #29
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %39

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !295
  %9 = icmp eq ptr %8, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %11, align 8, !tbaa !297
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %10, %28
  %15 = phi i64 [ %29, %28 ], [ 0, %10 ]
  %16 = load ptr, ptr %7, align 8, !tbaa !295
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8, !tbaa !6
  %19 = icmp ult ptr %18, inttoptr (i64 2 to ptr)
  br i1 %19, label %28, label %20

20:                                               ; preds = %14
  %21 = tail call i32 @ggc_set_mark(ptr noundef nonnull %18) #29
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.type_hash, ptr %18, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !36
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %25) #29
  br label %28

28:                                               ; preds = %14, %27, %23, %20
  %29 = add i64 %15, 1
  %30 = load i64, ptr %11, align 8, !tbaa !297
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %32, label %14, !llvm.loop !298

32:                                               ; preds = %28
  %33 = load ptr, ptr %7, align 8, !tbaa !295
  br label %34

34:                                               ; preds = %32, %10
  %35 = phi ptr [ %33, %32 ], [ %8, %10 ]
  %36 = icmp ult ptr %35, inttoptr (i64 2 to ptr)
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = tail call i32 @ggc_set_mark(ptr noundef nonnull %35) #29
  br label %39

39:                                               ; preds = %34, %1, %37, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_type_hash(ptr noundef %0) #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_9type_hash, i32 noundef 60) #29
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.type_hash, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !36
  %7 = icmp eq ptr %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %6) #29
  br label %9

9:                                                ; preds = %4, %8, %1
  ret void
}

declare i32 @gt_pch_note_object(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_9type_hash(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.type_hash, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #29
  br label %8

8:                                                ; preds = %6, %4
  ret void
}

declare void @gt_pch_nx_lang_tree_node(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_n_P9type_hash4htab(ptr noundef %0) #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_P9type_hash4htab, i32 noundef 197) #29
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %35, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !295
  %7 = icmp eq ptr %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !297
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %8, %26
  %13 = phi i64 [ %27, %26 ], [ 0, %8 ]
  %14 = load ptr, ptr %5, align 8, !tbaa !295
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %16, ptr noundef nonnull %16, ptr noundef nonnull @gt_pch_p_9type_hash, i32 noundef 60) #29
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.type_hash, ptr %16, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !36
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %23) #29
  br label %26

26:                                               ; preds = %25, %21, %18, %12
  %27 = add i64 %13, 1
  %28 = load i64, ptr %9, align 8, !tbaa !297
  %29 = icmp eq i64 %27, %28
  br i1 %29, label %30, label %12, !llvm.loop !299

30:                                               ; preds = %26
  %31 = load ptr, ptr %5, align 8, !tbaa !295
  br label %32

32:                                               ; preds = %30, %8
  %33 = phi ptr [ %31, %30 ], [ %6, %8 ]
  %34 = tail call i32 @gt_pch_note_object(ptr noundef %33, ptr noundef nonnull %0, ptr noundef nonnull @gt_pch_p_P9type_hash4htab, i32 noundef 217) #29
  br label %35

35:                                               ; preds = %4, %32, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_P9type_hash4htab(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !295
  %7 = icmp eq ptr %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !297
  %11 = icmp ne i64 %10, 0
  %12 = icmp eq ptr %6, %0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8, %22
  %15 = phi i64 [ %23, %22 ], [ %10, %8 ]
  %16 = phi i64 [ %24, %22 ], [ 0, %8 ]
  %17 = load ptr, ptr %5, align 8, !tbaa !295
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds ptr, ptr %0, i64 %16
  tail call void %2(ptr noundef %20, ptr noundef %3) #29
  %21 = load i64, ptr %9, align 8, !tbaa !297
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i64 [ %15, %14 ], [ %21, %19 ]
  %24 = add i64 %16, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %26, label %14, !llvm.loop !300

26:                                               ; preds = %22, %8
  %27 = icmp eq ptr %1, %0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void %2(ptr noundef nonnull %5, ptr noundef %3) #29
  br label %29

29:                                               ; preds = %26, %28, %4
  ret void
}

declare void @gt_ggc_mx_tree_priority_map(ptr noundef) #3

declare void @gt_pch_nx_tree_priority_map(ptr noundef) #3

declare void @gt_ggc_mx_tree_map(ptr noundef) #3

declare void @gt_pch_nx_tree_map(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @type_hash_marked_p(ptr nocapture noundef readonly %0) #9 {
  %2 = getelementptr inbounds %struct.type_hash, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = tail call i32 @ggc_marked_p(ptr noundef %3) #29
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 11
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp ne ptr %8, null
  %10 = zext i1 %9 to i32
  br label %11

11:                                               ; preds = %6, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %6 ]
  ret i32 %12
}

declare void @gt_ggc_m_P17tree_priority_map4htab(ptr noundef) #3

declare void @gt_pch_n_P17tree_priority_map4htab(ptr noundef) #3

declare void @gt_ggc_m_P8tree_map4htab(ptr noundef) #3

declare void @gt_pch_n_P8tree_map4htab(ptr noundef) #3

declare void @gt_ggc_m_P9tree_node4htab(ptr noundef) #3

declare void @gt_pch_n_P9tree_node4htab(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @walk_tree_1.284(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = icmp eq ptr %3, null
  br i1 %4, label %345, label %5

5:                                                ; preds = %2, %32
  %6 = phi ptr [ %34, %32 ], [ %3, %2 ]
  %7 = phi ptr [ %33, %32 ], [ %0, %2 ]
  %8 = load i64, ptr %6, align 8
  %9 = and i64 %8, 65535
  %10 = add nsw i64 %9, -5
  %11 = icmp ult i64 %10, 18
  br i1 %11, label %28, label %12

12:                                               ; preds = %5
  %13 = add nsw i64 %9, -29
  %14 = icmp ult i64 %13, 12
  br i1 %14, label %15, label %38

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, %1
  br i1 %18, label %19, label %38

19:                                               ; preds = %15
  %20 = trunc i64 %8 to i16
  switch i16 %20, label %26 [
    i16 32, label %21
    i16 34, label %21
    i16 30, label %345
  ]

21:                                               ; preds = %19, %19
  %22 = and i64 %8, 67108864
  %23 = icmp eq i64 %22, 0
  %24 = icmp eq i64 %9, 36
  %25 = or i1 %23, %24
  br i1 %25, label %345, label %38

26:                                               ; preds = %19
  %27 = icmp eq i64 %9, 36
  br i1 %27, label %345, label %38

28:                                               ; preds = %5
  %29 = trunc i64 %8 to i16
  switch i16 %29, label %345 [
    i16 2, label %30
    i16 163, label %36
  ]

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  br label %32

32:                                               ; preds = %30, %36, %48, %73, %93, %151, %163, %67, %118, %176, %194, %214, %303, %341
  %33 = phi ptr [ %344, %341 ], [ %305, %303 ], [ %216, %214 ], [ %196, %194 ], [ %178, %176 ], [ %165, %163 ], [ %153, %151 ], [ %120, %118 ], [ %94, %93 ], [ %75, %73 ], [ %68, %67 ], [ %50, %48 ], [ %31, %30 ], [ %37, %36 ]
  %34 = load ptr, ptr %33, align 8, !tbaa !6
  %35 = icmp eq ptr %34, null
  br i1 %35, label %345, label %5

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 1
  br label %32

38:                                               ; preds = %12, %15, %21, %26
  %39 = trunc i64 %8 to i16
  switch i16 %39, label %306 [
    i16 0, label %345
    i16 1, label %345
    i16 23, label %345
    i16 24, label %345
    i16 25, label %345
    i16 27, label %345
    i16 28, label %345
    i16 4, label %345
    i16 62, label %345
    i16 141, label %345
    i16 31, label %345
    i16 36, label %345
    i16 2, label %44
    i16 3, label %51
    i16 26, label %69
    i16 51, label %40
    i16 120, label %93
    i16 58, label %95
    i16 147, label %121
    i16 163, label %134
    i16 55, label %198
    i16 132, label %217
  ]

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.tree_constructor, ptr %6, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = icmp eq ptr %42, null
  br i1 %43, label %345, label %82

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.tree_list, ptr %6, i64 0, i32 2
  %46 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %45, ptr noundef %1)
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %345

48:                                               ; preds = %44
  %49 = load ptr, ptr %7, align 8, !tbaa !6
  %50 = getelementptr inbounds %struct.tree_common, ptr %49, i64 0, i32 1
  br label %32

51:                                               ; preds = %38
  %52 = getelementptr inbounds %struct.tree_vec, ptr %6, i64 0, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !17
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %345, label %55

55:                                               ; preds = %51
  %56 = sext i32 %53 to i64
  br label %57

57:                                               ; preds = %55, %63
  %58 = phi i64 [ %56, %55 ], [ %59, %63 ]
  %59 = add nsw i64 %58, -1
  %60 = and i64 %59, 4294967295
  %61 = icmp eq i64 %60, 0
  %62 = load ptr, ptr %7, align 8, !tbaa !6
  br i1 %61, label %67, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.tree_vec, ptr %62, i64 0, i32 2, i64 %59
  %65 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %64, ptr noundef %1)
  %66 = icmp eq ptr %65, null
  br i1 %66, label %57, label %345, !llvm.loop !216

67:                                               ; preds = %57
  %68 = getelementptr inbounds %struct.tree_vec, ptr %62, i64 0, i32 2
  br label %32

69:                                               ; preds = %38
  %70 = getelementptr inbounds %struct.tree_complex, ptr %6, i64 0, i32 1
  %71 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %70, ptr noundef %1)
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %345

73:                                               ; preds = %69
  %74 = load ptr, ptr %7, align 8, !tbaa !6
  %75 = getelementptr inbounds %struct.tree_complex, ptr %74, i64 0, i32 2
  br label %32

76:                                               ; preds = %88
  %77 = add i64 %84, 1
  %78 = load ptr, ptr %7, align 8, !tbaa !6
  %79 = getelementptr inbounds %struct.tree_constructor, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = icmp eq ptr %80, null
  br i1 %81, label %345, label %82, !llvm.loop !217

82:                                               ; preds = %40, %76
  %83 = phi ptr [ %80, %76 ], [ %42, %40 ]
  %84 = phi i64 [ %77, %76 ], [ 0, %40 ]
  %85 = trunc i64 %84 to i32
  %86 = load i32, ptr %83, align 8, !tbaa !74
  %87 = icmp ugt i32 %86, %85
  br i1 %87, label %88, label %345

88:                                               ; preds = %82
  %89 = and i64 %84, 4294967295
  %90 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %83, i64 0, i32 2, i64 %89, i32 1
  %91 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %90, ptr noundef %1)
  %92 = icmp eq ptr %91, null
  br i1 %92, label %76, label %345

93:                                               ; preds = %38
  %94 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  br label %32

95:                                               ; preds = %38
  %96 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  %98 = icmp eq ptr %97, null
  br i1 %98, label %118, label %103

99:                                               ; preds = %112
  %100 = getelementptr inbounds %struct.tree_common, ptr %104, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = icmp eq ptr %101, null
  br i1 %102, label %116, label %103, !llvm.loop !218

103:                                              ; preds = %95, %99
  %104 = phi ptr [ %101, %99 ], [ %97, %95 ]
  %105 = getelementptr inbounds %struct.tree_decl_common, ptr %104, i64 0, i32 5
  %106 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %105, ptr noundef %1)
  %107 = icmp eq ptr %106, null
  br i1 %107, label %108, label %345

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.tree_decl_common, ptr %104, i64 0, i32 1
  %110 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %109, ptr noundef %1)
  %111 = icmp eq ptr %110, null
  br i1 %111, label %112, label %345

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.tree_decl_common, ptr %104, i64 0, i32 4
  %114 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %113, ptr noundef %1)
  %115 = icmp eq ptr %114, null
  br i1 %115, label %99, label %345

116:                                              ; preds = %99
  %117 = load ptr, ptr %7, align 8, !tbaa !6
  br label %118

118:                                              ; preds = %116, %95
  %119 = phi ptr [ %117, %116 ], [ %6, %95 ]
  %120 = getelementptr inbounds %struct.tree_exp, ptr %119, i64 1
  br label %32

121:                                              ; preds = %38
  %122 = getelementptr inbounds %struct.tree_statement_list, ptr %6, i64 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = icmp eq ptr %123, null
  br i1 %124, label %345, label %129

125:                                              ; preds = %129
  %126 = getelementptr inbounds %struct.tree_statement_list_node, ptr %130, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  %128 = icmp eq ptr %127, null
  br i1 %128, label %345, label %129, !llvm.loop !219

129:                                              ; preds = %121, %125
  %130 = phi ptr [ %127, %125 ], [ %123, %121 ]
  %131 = getelementptr inbounds %struct.tree_statement_list_node, ptr %130, i64 0, i32 2
  %132 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %131, ptr noundef %1)
  %133 = icmp eq ptr %132, null
  br i1 %133, label %125, label %345

134:                                              ; preds = %38
  %135 = getelementptr inbounds %struct.tree_omp_clause, ptr %6, i64 0, i32 2
  %136 = load i32, ptr %135, align 4, !tbaa !17
  switch i32 %136, label %197 [
    i32 1, label %145
    i32 2, label %145
    i32 3, label %145
    i32 6, label %145
    i32 7, label %145
    i32 8, label %145
    i32 9, label %145
    i32 10, label %145
    i32 11, label %151
    i32 12, label %151
    i32 13, label %151
    i32 15, label %151
    i32 4, label %154
    i32 14, label %141
    i32 5, label %137
  ]

137:                                              ; preds = %134
  %138 = getelementptr inbounds %struct.tree_omp_clause, ptr %6, i64 0, i32 6, i64 0
  %139 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %138, ptr noundef %1)
  %140 = icmp eq ptr %139, null
  br i1 %140, label %179, label %345

141:                                              ; preds = %134
  %142 = getelementptr inbounds %struct.tree_omp_clause, ptr %6, i64 0, i32 6, i64 0
  %143 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %142, ptr noundef %1)
  %144 = icmp eq ptr %143, null
  br i1 %144, label %166, label %345

145:                                              ; preds = %134, %134, %134, %134, %134, %134, %134, %134
  %146 = getelementptr inbounds %struct.tree_omp_clause, ptr %6, i64 0, i32 6
  %147 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %146, ptr noundef %1)
  %148 = icmp eq ptr %147, null
  br i1 %148, label %149, label %345

149:                                              ; preds = %145
  %150 = load ptr, ptr %7, align 8, !tbaa !6
  br label %151

151:                                              ; preds = %149, %134, %134, %134, %134
  %152 = phi ptr [ %150, %149 ], [ %6, %134 ], [ %6, %134 ], [ %6, %134 ], [ %6, %134 ]
  %153 = getelementptr inbounds %struct.tree_common, ptr %152, i64 0, i32 1
  br label %32

154:                                              ; preds = %134
  %155 = getelementptr inbounds %struct.tree_omp_clause, ptr %6, i64 0, i32 6
  %156 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %155, ptr noundef %1)
  %157 = icmp eq ptr %156, null
  br i1 %157, label %158, label %345

158:                                              ; preds = %154
  %159 = load ptr, ptr %7, align 8, !tbaa !6
  %160 = getelementptr inbounds %struct.tree_omp_clause, ptr %159, i64 1
  %161 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %160, ptr noundef %1)
  %162 = icmp eq ptr %161, null
  br i1 %162, label %163, label %345

163:                                              ; preds = %158
  %164 = load ptr, ptr %7, align 8, !tbaa !6
  %165 = getelementptr inbounds %struct.tree_common, ptr %164, i64 0, i32 1
  br label %32

166:                                              ; preds = %141
  %167 = load ptr, ptr %7, align 8, !tbaa !6
  %168 = getelementptr inbounds %struct.tree_omp_clause, ptr %167, i64 0, i32 6, i64 1
  %169 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %168, ptr noundef %1)
  %170 = icmp eq ptr %169, null
  br i1 %170, label %171, label %345

171:                                              ; preds = %166
  %172 = load ptr, ptr %7, align 8, !tbaa !6
  %173 = getelementptr inbounds %struct.tree_omp_clause, ptr %172, i64 0, i32 6, i64 2
  %174 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %173, ptr noundef %1)
  %175 = icmp eq ptr %174, null
  br i1 %175, label %176, label %345

176:                                              ; preds = %171
  %177 = load ptr, ptr %7, align 8, !tbaa !6
  %178 = getelementptr inbounds %struct.tree_common, ptr %177, i64 0, i32 1
  br label %32

179:                                              ; preds = %137
  %180 = load ptr, ptr %7, align 8, !tbaa !6
  %181 = getelementptr inbounds %struct.tree_omp_clause, ptr %180, i64 0, i32 6, i64 1
  %182 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %181, ptr noundef %1)
  %183 = icmp eq ptr %182, null
  br i1 %183, label %184, label %345

184:                                              ; preds = %179
  %185 = load ptr, ptr %7, align 8, !tbaa !6
  %186 = getelementptr inbounds %struct.tree_omp_clause, ptr %185, i64 0, i32 6, i64 2
  %187 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %186, ptr noundef %1)
  %188 = icmp eq ptr %187, null
  br i1 %188, label %189, label %345

189:                                              ; preds = %184
  %190 = load ptr, ptr %7, align 8, !tbaa !6
  %191 = getelementptr inbounds %struct.tree_omp_clause, ptr %190, i64 0, i32 6, i64 3
  %192 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %191, ptr noundef %1)
  %193 = icmp eq ptr %192, null
  br i1 %193, label %194, label %345

194:                                              ; preds = %189
  %195 = load ptr, ptr %7, align 8, !tbaa !6
  %196 = getelementptr inbounds %struct.tree_common, ptr %195, i64 0, i32 1
  br label %32

197:                                              ; preds = %134
  tail call void @fancy_abort(ptr noundef nonnull @.str.218, i32 noundef 10174, ptr noundef nonnull @.str.219) #29
  br label %345

198:                                              ; preds = %38
  %199 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 1, i32 0, i32 2
  %200 = load ptr, ptr %199, align 8, !tbaa !17
  %201 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 1
  %202 = load ptr, ptr %201, align 8, !tbaa !17
  %203 = icmp eq ptr %200, %202
  %204 = select i1 %203, i64 2, i64 3
  br label %208

205:                                              ; preds = %208
  %206 = add nuw nsw i64 %209, 1
  %207 = icmp eq i64 %206, %204
  br i1 %207, label %214, label %208, !llvm.loop !220

208:                                              ; preds = %198, %205
  %209 = phi i64 [ 0, %198 ], [ %206, %205 ]
  %210 = load ptr, ptr %7, align 8, !tbaa !6
  %211 = getelementptr inbounds %struct.tree_exp, ptr %210, i64 0, i32 3, i64 %209
  %212 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %211, ptr noundef %1)
  %213 = icmp eq ptr %212, null
  br i1 %213, label %205, label %345

214:                                              ; preds = %205
  %215 = load ptr, ptr %7, align 8, !tbaa !6
  %216 = getelementptr inbounds %struct.tree_exp, ptr %215, i64 0, i32 3, i64 %204
  br label %32

217:                                              ; preds = %38
  %218 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %219 = load ptr, ptr %218, align 8, !tbaa !17
  %220 = load i64, ptr %219, align 8
  %221 = and i64 %220, 65535
  %222 = icmp eq i64 %221, 35
  br i1 %222, label %223, label %306

223:                                              ; preds = %217
  %224 = getelementptr inbounds %struct.tree_common, ptr %219, i64 0, i32 2
  %225 = load ptr, ptr %224, align 8, !tbaa !6
  %226 = load i64, ptr %225, align 8
  %227 = and i64 %226, 65535
  %228 = icmp eq i64 %227, 0
  %229 = add nsw i64 %227, -5
  %230 = icmp ult i64 %229, 18
  %231 = select i1 %228, i1 true, i1 %230
  br i1 %231, label %345, label %232

232:                                              ; preds = %223
  %233 = add nsw i64 %227, -29
  %234 = icmp ult i64 %233, 12
  br i1 %234, label %235, label %248

235:                                              ; preds = %232
  %236 = getelementptr inbounds %struct.tree_decl_minimal, ptr %225, i64 0, i32 4
  %237 = load ptr, ptr %236, align 8, !tbaa !17
  %238 = icmp eq ptr %237, %1
  br i1 %238, label %239, label %248

239:                                              ; preds = %235
  %240 = trunc i64 %226 to i16
  switch i16 %240, label %246 [
    i16 32, label %241
    i16 34, label %241
    i16 30, label %345
  ]

241:                                              ; preds = %239, %239
  %242 = and i64 %226, 67108864
  %243 = icmp eq i64 %242, 0
  %244 = icmp eq i64 %227, 36
  %245 = or i1 %243, %244
  br i1 %245, label %345, label %248

246:                                              ; preds = %239
  %247 = icmp eq i64 %227, 36
  br i1 %247, label %345, label %248

248:                                              ; preds = %246, %241, %235, %232
  %249 = tail call fastcc ptr @walk_type_fields(ptr noundef nonnull %225, ptr noundef nonnull @find_var_from_fn, ptr noundef %1, ptr noundef null, ptr noundef null)
  %250 = icmp eq ptr %249, null
  br i1 %250, label %251, label %345

251:                                              ; preds = %248
  %252 = load ptr, ptr %224, align 8, !tbaa !6
  %253 = load i64, ptr %252, align 8
  %254 = trunc i64 %253 to i16
  switch i16 %254, label %298 [
    i16 16, label %255
    i16 17, label %255
    i16 18, label %255
    i16 7, label %289
    i16 6, label %289
    i16 8, label %289
    i16 11, label %289
    i16 9, label %289
  ]

255:                                              ; preds = %251, %251, %251
  %256 = getelementptr inbounds %struct.tree_type, ptr %252, i64 0, i32 1
  %257 = load ptr, ptr %256, align 8, !tbaa !17
  %258 = icmp eq ptr %257, null
  br i1 %258, label %298, label %259

259:                                              ; preds = %255, %285
  %260 = phi ptr [ %287, %285 ], [ %257, %255 ]
  %261 = load i64, ptr %260, align 8
  %262 = and i64 %261, 65535
  %263 = icmp eq i64 %262, 31
  br i1 %263, label %264, label %285

264:                                              ; preds = %259
  %265 = getelementptr inbounds %struct.tree_field_decl, ptr %260, i64 0, i32 1
  %266 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %265, ptr noundef %1)
  %267 = icmp eq ptr %266, null
  br i1 %267, label %268, label %345

268:                                              ; preds = %264
  %269 = getelementptr inbounds %struct.tree_decl_common, ptr %260, i64 0, i32 1
  %270 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %269, ptr noundef %1)
  %271 = icmp eq ptr %270, null
  br i1 %271, label %272, label %345

272:                                              ; preds = %268
  %273 = getelementptr inbounds %struct.tree_decl_common, ptr %260, i64 0, i32 4
  %274 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %273, ptr noundef %1)
  %275 = icmp eq ptr %274, null
  br i1 %275, label %276, label %345

276:                                              ; preds = %272
  %277 = load ptr, ptr %224, align 8, !tbaa !6
  %278 = load i64, ptr %277, align 8
  %279 = and i64 %278, 65535
  %280 = icmp eq i64 %279, 18
  br i1 %280, label %281, label %285

281:                                              ; preds = %276
  %282 = getelementptr inbounds %struct.tree_field_decl, ptr %260, i64 0, i32 3
  %283 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %282, ptr noundef %1)
  %284 = icmp eq ptr %283, null
  br i1 %284, label %285, label %345

285:                                              ; preds = %281, %276, %259
  %286 = getelementptr inbounds %struct.tree_common, ptr %260, i64 0, i32 1
  %287 = load ptr, ptr %286, align 8, !tbaa !17
  %288 = icmp eq ptr %287, null
  br i1 %288, label %298, label %259, !llvm.loop !221

289:                                              ; preds = %251, %251, %251, %251, %251
  %290 = getelementptr inbounds %struct.tree_type, ptr %252, i64 0, i32 13
  %291 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %290, ptr noundef %1)
  %292 = icmp eq ptr %291, null
  br i1 %292, label %293, label %345

293:                                              ; preds = %289
  %294 = load ptr, ptr %224, align 8, !tbaa !6
  %295 = getelementptr inbounds %struct.tree_type, ptr %294, i64 0, i32 14
  %296 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %295, ptr noundef %1)
  %297 = icmp eq ptr %296, null
  br i1 %297, label %298, label %345

298:                                              ; preds = %285, %255, %251, %293
  %299 = load ptr, ptr %224, align 8, !tbaa !6
  %300 = getelementptr inbounds %struct.tree_type, ptr %299, i64 0, i32 2
  %301 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %300, ptr noundef %1)
  %302 = icmp eq ptr %301, null
  br i1 %302, label %303, label %345

303:                                              ; preds = %298
  %304 = load ptr, ptr %224, align 8, !tbaa !6
  %305 = getelementptr inbounds %struct.tree_type, ptr %304, i64 0, i32 3
  br label %32

306:                                              ; preds = %217, %38
  %307 = getelementptr inbounds [191 x i32], ptr @tree_code_type, i64 0, i64 %9
  %308 = load i32, ptr %307, align 4, !tbaa !17
  %309 = icmp ugt i32 %308, 3
  br i1 %309, label %310, label %345

310:                                              ; preds = %306
  %311 = icmp eq i64 %9, 59
  br i1 %311, label %312, label %318

312:                                              ; preds = %310
  %313 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %314 = load ptr, ptr %313, align 8, !tbaa !17
  %315 = getelementptr inbounds %struct.tree_int_cst, ptr %314, i64 0, i32 1
  %316 = load i64, ptr %315, align 8, !tbaa !17
  %317 = trunc i64 %316 to i32
  br label %322

318:                                              ; preds = %310
  %319 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %9
  %320 = load i8, ptr %319, align 1, !tbaa !17
  %321 = zext i8 %320 to i32
  br label %322

322:                                              ; preds = %312, %318
  %323 = phi i32 [ %317, %312 ], [ %321, %318 ]
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %345, label %325

325:                                              ; preds = %322
  %326 = add i32 %323, -1
  %327 = icmp sgt i32 %323, 1
  br i1 %327, label %328, label %341

328:                                              ; preds = %325
  %329 = zext i32 %326 to i64
  br label %333

330:                                              ; preds = %333
  %331 = add nuw nsw i64 %334, 1
  %332 = icmp eq i64 %331, %329
  br i1 %332, label %339, label %333, !llvm.loop !222

333:                                              ; preds = %328, %330
  %334 = phi i64 [ 0, %328 ], [ %331, %330 ]
  %335 = load ptr, ptr %7, align 8, !tbaa !6
  %336 = getelementptr inbounds %struct.tree_exp, ptr %335, i64 0, i32 3, i64 %334
  %337 = tail call fastcc ptr @walk_tree_1.284(ptr noundef nonnull %336, ptr noundef %1)
  %338 = icmp eq ptr %337, null
  br i1 %338, label %330, label %345

339:                                              ; preds = %330
  %340 = load ptr, ptr %7, align 8, !tbaa !6
  br label %341

341:                                              ; preds = %339, %325
  %342 = phi ptr [ %340, %339 ], [ %6, %325 ]
  %343 = sext i32 %326 to i64
  %344 = getelementptr inbounds %struct.tree_exp, ptr %342, i64 0, i32 3, i64 %343
  br label %32

345:                                              ; preds = %32, %28, %44, %69, %145, %154, %158, %19, %21, %26, %38, %38, %38, %38, %38, %38, %38, %38, %38, %38, %38, %38, %51, %223, %248, %289, %293, %298, %246, %241, %239, %322, %137, %179, %184, %189, %141, %166, %171, %306, %264, %268, %272, %281, %208, %103, %108, %112, %63, %333, %125, %129, %88, %76, %82, %2, %121, %40, %197
  %346 = phi ptr [ null, %197 ], [ null, %40 ], [ null, %121 ], [ null, %2 ], [ %91, %88 ], [ null, %76 ], [ null, %82 ], [ null, %125 ], [ %132, %129 ], [ %337, %333 ], [ %65, %63 ], [ %106, %103 ], [ %110, %108 ], [ %114, %112 ], [ %212, %208 ], [ %266, %264 ], [ %270, %268 ], [ %274, %272 ], [ %283, %281 ], [ null, %32 ], [ null, %28 ], [ %46, %44 ], [ %71, %69 ], [ %147, %145 ], [ %156, %154 ], [ %161, %158 ], [ %6, %19 ], [ %6, %21 ], [ %6, %26 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %38 ], [ null, %51 ], [ null, %223 ], [ %249, %248 ], [ %291, %289 ], [ %296, %293 ], [ %301, %298 ], [ %225, %246 ], [ %225, %241 ], [ %225, %239 ], [ null, %322 ], [ %192, %189 ], [ %187, %184 ], [ %182, %179 ], [ %139, %137 ], [ %174, %171 ], [ %169, %166 ], [ %143, %141 ], [ null, %306 ]
  ret ptr %346
}

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #25

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #26

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #26

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #26

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #27

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #26

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i21 @llvm.bitreverse.i21(i21) #26

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #26

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #26

attributes #0 = { inlinehint nofree nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { inlinehint nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nounwind willreturn "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #14 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #18 = { nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #19 = { mustprogress nocallback nofree nosync nounwind willreturn }
attributes #20 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #21 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #22 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #23 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #24 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #25 = { nofree nounwind willreturn memory(argmem: read) }
attributes #26 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #27 = { nofree nounwind }
attributes #28 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #29 = { nounwind }
attributes #30 = { cold }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !7, i64 8}
!11 = !{!"_IO_FILE", !12, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !12, i64 112, !12, i64 116, !13, i64 120, !14, i64 128, !8, i64 130, !8, i64 131, !7, i64 136, !13, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !13, i64 184, !12, i64 192, !8, i64 196}
!12 = !{!"int", !8, i64 0}
!13 = !{!"long", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!11, !7, i64 16}
!16 = !{!"branch_weights", i32 2000, i32 1}
!17 = !{!8, !8, i64 0}
!18 = !{!11, !7, i64 40}
!19 = !{!11, !7, i64 48}
!20 = !{!11, !12, i64 0}
!21 = !{!12, !12, i64 0}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.mustprogress"}
!24 = !{i32 0, i32 34}
!25 = distinct !{!25, !23}
!26 = !{!27, !7, i64 640}
!27 = !{!"lang_hooks", !7, i64 0, !13, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !28, i64 240, !29, i64 248, !30, i64 256, !31, i64 272, !32, i64 432, !33, i64 560, !7, i64 584, !7, i64 592, !7, i64 600, !7, i64 608, !7, i64 616, !7, i64 624, !7, i64 632, !7, i64 640, !7, i64 648, !7, i64 656, !7, i64 664, !8, i64 672}
!28 = !{!"lang_hooks_for_tree_inlining", !7, i64 0}
!29 = !{!"lang_hooks_for_callgraph", !7, i64 0}
!30 = !{!"lang_hooks_for_tree_dump", !7, i64 0, !7, i64 8}
!31 = !{!"lang_hooks_for_decls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152}
!32 = !{!"lang_hooks_for_types", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !8, i64 120}
!33 = !{!"lang_hooks_for_lto", !7, i64 0, !7, i64 8, !7, i64 16}
!34 = !{!35, !13, i64 0}
!35 = !{!"type_hash", !13, i64 0, !7, i64 8}
!36 = !{!35, !7, i64 8}
!37 = !{i32 0, i32 2}
!38 = !{!27, !7, i64 520}
!39 = !{!40, !12, i64 8}
!40 = !{!"tree_map", !41, i64 0, !12, i64 8, !7, i64 16}
!41 = !{!"tree_map_base", !7, i64 0}
!42 = !{!41, !7, i64 0}
!43 = !{!44, !7, i64 840}
!44 = !{!"gcc_target", !45, i64 0, !47, i64 368, !48, i64 664, !12, i64 744, !7, i64 752, !7, i64 760, !7, i64 768, !7, i64 776, !7, i64 784, !7, i64 792, !7, i64 800, !7, i64 808, !7, i64 816, !7, i64 824, !7, i64 832, !7, i64 840, !7, i64 848, !7, i64 856, !7, i64 864, !7, i64 872, !7, i64 880, !7, i64 888, !7, i64 896, !7, i64 904, !7, i64 912, !7, i64 920, !7, i64 928, !7, i64 936, !7, i64 944, !7, i64 952, !7, i64 960, !7, i64 968, !7, i64 976, !7, i64 984, !7, i64 992, !7, i64 1000, !7, i64 1008, !7, i64 1016, !7, i64 1024, !7, i64 1032, !7, i64 1040, !7, i64 1048, !7, i64 1056, !13, i64 1064, !13, i64 1072, !7, i64 1080, !7, i64 1088, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !7, i64 1136, !7, i64 1144, !7, i64 1152, !7, i64 1160, !7, i64 1168, !49, i64 1176, !7, i64 1232, !7, i64 1240, !7, i64 1248, !7, i64 1256, !7, i64 1264, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !7, i64 1304, !7, i64 1312, !7, i64 1320, !7, i64 1328, !7, i64 1336, !7, i64 1344, !7, i64 1352, !7, i64 1360, !7, i64 1368, !7, i64 1376, !7, i64 1384, !7, i64 1392, !7, i64 1400, !7, i64 1408, !7, i64 1416, !7, i64 1424, !7, i64 1432, !7, i64 1440, !7, i64 1448, !7, i64 1456, !13, i64 1464, !50, i64 1472, !7, i64 1664, !7, i64 1672, !7, i64 1680, !7, i64 1688, !7, i64 1696, !7, i64 1704, !7, i64 1712, !7, i64 1720, !7, i64 1728, !7, i64 1736, !7, i64 1744, !7, i64 1752, !7, i64 1760, !7, i64 1768, !7, i64 1776, !51, i64 1784, !52, i64 1792, !53, i64 1896, !54, i64 1968, !7, i64 2016, !8, i64 2024, !8, i64 2025, !8, i64 2026, !8, i64 2027, !8, i64 2028, !8, i64 2029, !8, i64 2030, !8, i64 2031, !8, i64 2032, !8, i64 2033, !8, i64 2034, !8, i64 2035}
!45 = !{!"asm_out", !7, i64 0, !7, i64 8, !7, i64 16, !46, i64 24, !46, i64 56, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288, !7, i64 296, !7, i64 304, !7, i64 312, !7, i64 320, !7, i64 328, !7, i64 336, !7, i64 344, !7, i64 352, !7, i64 360}
!46 = !{!"asm_int_op", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!47 = !{!"sched", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288}
!48 = !{!"vectorize", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72}
!49 = !{!"addr_space", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48}
!50 = !{!"calls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184}
!51 = !{!"c", !7, i64 0}
!52 = !{!"cxx", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96}
!53 = !{!"emutls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !8, i64 64, !8, i64 65}
!54 = !{!"target_option_hooks", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!55 = distinct !{!55, !23}
!56 = !{i32 -1, i32 256}
!57 = distinct !{!57, !23}
!58 = !{!27, !7, i64 128}
!59 = !{!27, !7, i64 24}
!60 = !{!27, !13, i64 8}
!61 = !{!62, !12, i64 0}
!62 = !{!"VEC_tree_base", !12, i64 0, !12, i64 4, !8, i64 8}
!63 = !{!40, !7, i64 0}
!64 = !{!40, !7, i64 16}
!65 = !{!66, !14, i64 8}
!66 = !{!"tree_priority_map", !41, i64 0, !14, i64 8, !14, i64 10}
!67 = !{!66, !7, i64 0}
!68 = !{!66, !14, i64 10}
!69 = distinct !{!69, !23}
!70 = !{!71, !12, i64 8}
!71 = !{!"param_info", !7, i64 0, !12, i64 8, !8, i64 12, !12, i64 16, !12, i64 20, !7, i64 24}
!72 = !{!13, !13, i64 0}
!73 = distinct !{!73, !23}
!74 = !{!75, !12, i64 0}
!75 = !{!"VEC_constructor_elt_base", !12, i64 0, !12, i64 4, !8, i64 8}
!76 = !{!77, !7, i64 8}
!77 = !{!"constructor_elt_d", !7, i64 0, !7, i64 8}
!78 = distinct !{!78, !23}
!79 = distinct !{!79, !23}
!80 = !{!77, !7, i64 0}
!81 = distinct !{!81, !23}
!82 = distinct !{!82, !23}
!83 = !{!84}
!84 = distinct !{!84, !85, !"real_value_from_int_cst: argument 0"}
!85 = distinct !{!85, !"real_value_from_int_cst"}
!86 = distinct !{!86, !23}
!87 = !{!62, !12, i64 4}
!88 = distinct !{!88, !23}
!89 = !{i64 0, i64 65}
!90 = distinct !{!90, !23}
!91 = distinct !{!91, !23}
!92 = distinct !{!92, !23}
!93 = distinct !{!93, !23}
!94 = distinct !{!94, !23}
!95 = distinct !{!95, !23}
!96 = distinct !{!96, !23}
!97 = distinct !{!97, !23}
!98 = distinct !{!98, !23}
!99 = distinct !{!99, !23}
!100 = distinct !{!100, !23}
!101 = !{!27, !7, i64 496}
!102 = !{!27, !7, i64 504}
!103 = distinct !{!103, !23}
!104 = !{i8 0, i8 2}
!105 = distinct !{!105, !23}
!106 = distinct !{!106, !23}
!107 = distinct !{!107, !23}
!108 = !{i8 0, i8 3}
!109 = distinct !{!109, !23}
!110 = distinct !{!110, !23}
!111 = distinct !{!111, !23}
!112 = distinct !{!112, !23}
!113 = distinct !{!113, !23}
!114 = distinct !{!114, !23}
!115 = distinct !{!115, !23}
!116 = distinct !{!116, !23}
!117 = distinct !{!117, !23}
!118 = distinct !{!118, !23}
!119 = distinct !{!119, !23}
!120 = distinct !{!120, !23}
!121 = distinct !{!121, !23}
!122 = distinct !{!122, !23}
!123 = distinct !{!123, !23}
!124 = distinct !{!124, !23}
!125 = !{!27, !7, i64 648}
!126 = distinct !{!126, !23}
!127 = !{!128, !7, i64 0}
!128 = !{!"line_map", !7, i64 0, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !8, i64 21, !12, i64 22}
!129 = !{!128, !12, i64 12}
!130 = !{!128, !12, i64 8}
!131 = !{!128, !8, i64 21}
!132 = distinct !{!132, !23}
!133 = !{!44, !7, i64 832}
!134 = distinct !{!134, !23}
!135 = !{!27, !8, i64 552}
!136 = !{!137, !7, i64 8}
!137 = !{!"free_lang_data_d", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!138 = !{!137, !7, i64 0}
!139 = !{!137, !7, i64 16}
!140 = !{!137, !7, i64 24}
!141 = !{!142, !7, i64 0}
!142 = !{!"cgraph_node", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !143, i64 144, !145, i64 184, !146, i64 224, !147, i64 232, !148, i64 256, !13, i64 288, !12, i64 296, !12, i64 300, !12, i64 304, !12, i64 308, !12, i64 308, !12, i64 308, !12, i64 308, !12, i64 308, !12, i64 308, !12, i64 308, !12, i64 308, !12, i64 309, !12, i64 309}
!143 = !{!"cgraph_local_info", !7, i64 0, !144, i64 8, !12, i64 32, !12, i64 32, !12, i64 32, !12, i64 32, !12, i64 32, !12, i64 32, !12, i64 32, !12, i64 32}
!144 = !{!"inline_summary", !13, i64 0, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20}
!145 = !{!"cgraph_global_info", !13, i64 0, !13, i64 8, !7, i64 16, !12, i64 24, !12, i64 28, !12, i64 32, !8, i64 36}
!146 = !{!"cgraph_rtl_info", !12, i64 0}
!147 = !{!"cgraph_clone_info", !7, i64 0, !7, i64 8, !7, i64 16}
!148 = !{!"cgraph_thunk_info", !13, i64 0, !13, i64 8, !7, i64 16, !8, i64 24, !8, i64 25, !8, i64 26}
!149 = distinct !{!149, !23}
!150 = !{!151, !7, i64 0}
!151 = !{!"function", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !12, i64 104, !12, i64 108, !12, i64 112, !12, i64 116, !12, i64 120, !12, i64 124, !7, i64 128, !12, i64 136, !12, i64 137, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139}
!152 = !{!153, !7, i64 0}
!153 = !{!"eh_status", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !8, i64 40}
!154 = !{!155, !8, i64 28}
!155 = !{!"eh_region_d", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !8, i64 28, !8, i64 32, !7, i64 56, !7, i64 64, !7, i64 72, !8, i64 80}
!156 = !{!157, !7, i64 16}
!157 = !{!"eh_catch_d", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32}
!158 = distinct !{!158, !23}
!159 = distinct !{!159, !23}
!160 = !{!155, !7, i64 8}
!161 = !{!155, !7, i64 16}
!162 = !{!155, !7, i64 0}
!163 = distinct !{!163, !23}
!164 = distinct !{!164, !23}
!165 = !{!151, !7, i64 8}
!166 = !{!167, !7, i64 0}
!167 = !{!"control_flow_graph", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !12, i64 28, !12, i64 32, !7, i64 40, !8, i64 48, !8, i64 52, !8, i64 60, !12, i64 68, !12, i64 72}
!168 = !{!169, !7, i64 56}
!169 = !{!"basic_block_def", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !8, i64 32, !7, i64 48, !7, i64 56, !8, i64 64, !13, i64 72, !12, i64 80, !12, i64 84, !12, i64 88, !12, i64 92, !12, i64 96}
!170 = !{!167, !7, i64 8}
!171 = distinct !{!171, !23}
!172 = !{i64 0, i64 8, !6, i64 8, i64 8, !6, i64 16, i64 8, !6}
!173 = !{!174, !7, i64 0}
!174 = !{!"gimple_seq_node_d", !7, i64 0, !7, i64 8, !7, i64 16}
!175 = distinct !{!175, !23}
!176 = !{!174, !7, i64 16}
!177 = distinct !{!177, !23}
!178 = !{!169, !12, i64 96}
!179 = !{!180}
!180 = distinct !{!180, !181, !"gsi_start_bb: argument 0"}
!181 = distinct !{!181, !"gsi_start_bb"}
!182 = !{!183, !7, i64 0}
!183 = !{!"gimple_bb_info", !7, i64 0, !7, i64 8}
!184 = !{!185, !7, i64 0}
!185 = !{!"gimple_seq_d", !7, i64 0, !7, i64 8, !7, i64 16}
!186 = distinct !{!186, !23}
!187 = distinct !{!187, !23}
!188 = distinct !{!188, !23}
!189 = !{!190, !12, i64 0}
!190 = !{!"VEC_alias_pair_base", !12, i64 0, !12, i64 4, !8, i64 8}
!191 = !{!192, !7, i64 0}
!192 = !{!"alias_pair", !7, i64 0, !7, i64 8}
!193 = distinct !{!193, !23}
!194 = !{!195, !7, i64 0}
!195 = !{!"varpool_node", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !12, i64 32, !12, i64 36, !12, i64 36, !12, i64 36, !12, i64 36, !12, i64 36, !12, i64 36, !12, i64 36}
!196 = distinct !{!196, !23}
!197 = distinct !{!197, !23}
!198 = !{!27, !7, i64 16}
!199 = distinct !{!199, !23}
!200 = distinct !{!200, !23}
!201 = distinct !{!201, !23}
!202 = distinct !{!202, !23}
!203 = !{!27, !7, i64 248}
!204 = !{!27, !7, i64 184}
!205 = !{!27, !7, i64 176}
!206 = !{!27, !7, i64 616}
!207 = !{!208, !7, i64 3544}
!208 = !{!"diagnostic_context", !7, i64 0, !8, i64 8, !8, i64 56, !8, i64 57, !8, i64 60, !8, i64 3540, !8, i64 3541, !7, i64 3544, !7, i64 3552, !7, i64 3560, !7, i64 3568, !7, i64 3576, !12, i64 3584, !8, i64 3588}
!209 = !{!208, !7, i64 3552}
!210 = !{!208, !7, i64 0}
!211 = !{!212, !7, i64 40}
!212 = !{!"pretty_print_info", !7, i64 0, !7, i64 8, !8, i64 16, !12, i64 20, !12, i64 24, !213, i64 28, !7, i64 40, !8, i64 48, !8, i64 49, !8, i64 50}
!213 = !{!"", !8, i64 0, !12, i64 4}
!214 = distinct !{!214, !23}
!215 = distinct !{!215, !23}
!216 = distinct !{!216, !23}
!217 = distinct !{!217, !23}
!218 = distinct !{!218, !23}
!219 = distinct !{!219, !23}
!220 = distinct !{!220, !23}
!221 = distinct !{!221, !23}
!222 = distinct !{!222, !23}
!223 = distinct !{!223, !23}
!224 = distinct !{!224, !23}
!225 = distinct !{!225, !23}
!226 = distinct !{!226, !23}
!227 = distinct !{!227, !23}
!228 = distinct !{!228, !23}
!229 = distinct !{!229, !23}
!230 = distinct !{!230, !23}
!231 = distinct !{!231, !23}
!232 = distinct !{!232, !23}
!233 = distinct !{!233, !23}
!234 = distinct !{!234, !23}
!235 = distinct !{!235, !23}
!236 = distinct !{!236, !23}
!237 = distinct !{!237, !23}
!238 = distinct !{!238, !23}
!239 = distinct !{!239, !23}
!240 = distinct !{!240, !23}
!241 = distinct !{!241, !23}
!242 = distinct !{!242, !23}
!243 = !{!44, !7, i64 1176}
!244 = distinct !{!244, !23}
!245 = !{!27, !7, i64 536}
!246 = distinct !{!246, !23}
!247 = distinct !{!247, !23}
!248 = distinct !{!248, !23}
!249 = distinct !{!249, !23}
!250 = distinct !{!250, !23}
!251 = !{i64 0, i64 8, !72, i64 8, i64 8, !72}
!252 = !{i64 0, i64 8, !72}
!253 = distinct !{!253, !23}
!254 = distinct !{!254, !255}
!255 = !{!"llvm.loop.peeled.count", i32 1}
!256 = !{!27, !7, i64 456}
!257 = distinct !{!257, !23}
!258 = !{!27, !7, i64 240}
!259 = distinct !{!259, !23}
!260 = !{!27, !7, i64 136}
!261 = distinct !{!261, !23}
!262 = !{!14, !14, i64 0}
!263 = distinct !{!263, !23}
!264 = !{!44, !8, i64 2027}
!265 = !{!266}
!266 = distinct !{!266, !267, !"expand_location: argument 0"}
!267 = distinct !{!267, !"expand_location"}
!268 = !{!269}
!269 = distinct !{!269, !270, !"expand_location: argument 0"}
!270 = distinct !{!270, !"expand_location"}
!271 = !{!44, !7, i64 1320}
!272 = !{!44, !8, i64 2035}
!273 = !{!27, !7, i64 448}
!274 = !{!44, !7, i64 776}
!275 = distinct !{!275, !23}
!276 = distinct !{!276, !23}
!277 = distinct !{!277, !23}
!278 = distinct !{!278, !23}
!279 = distinct !{!279, !23}
!280 = distinct !{!280, !23}
!281 = distinct !{!281, !23, !282, !283}
!282 = !{!"llvm.loop.isvectorized", i32 1}
!283 = !{!"llvm.loop.unroll.runtime.disable"}
!284 = distinct !{!284, !285}
!285 = !{!"llvm.loop.unroll.disable"}
!286 = distinct !{!286, !23, !282}
!287 = distinct !{!287, !23}
!288 = distinct !{!288, !23}
!289 = distinct !{!289, !23}
!290 = distinct !{!290, !23}
!291 = distinct !{!291, !23}
!292 = distinct !{!292, !23}
!293 = distinct !{!293, !23}
!294 = distinct !{!294, !23}
!295 = !{!296, !7, i64 24}
!296 = !{!"htab", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !12, i64 56, !12, i64 60, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !12, i64 104}
!297 = !{!296, !13, i64 32}
!298 = distinct !{!298, !23}
!299 = distinct !{!299, !23}
!300 = distinct !{!300, !23, !301}
!301 = !{!"llvm.loop.unswitch.partial.disable"}
