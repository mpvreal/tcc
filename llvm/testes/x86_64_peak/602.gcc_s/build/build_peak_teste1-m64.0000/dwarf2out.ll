; ModuleID = 'dwarf2out.c'
source_filename = "dwarf2out.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.addr_space, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.calls, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { ptr, ptr, ptr, %struct.asm_int_op, %struct.asm_int_op, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.asm_int_op = type { ptr, ptr, ptr, ptr }
%struct.sched = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vectorize = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.addr_space = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.calls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.c = type { ptr }
%struct.cxx = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.emutls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%struct.target_option_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cfa_loc = type { i64, i64, i32, i8 }
%struct.reg_saved_in_data = type { ptr, ptr }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, ptr, ptr, ptr }
%struct.emit_status = type { i32, i32, ptr, ptr, ptr, i32, i32, i32, i32, ptr }
%struct.varasm_status = type { ptr, i32 }
%struct.incoming_args = type { i32, i32, i32, ptr, %struct.ix86_args, ptr }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { ptr, ptr, ptr, ptr, ptr }
%struct.rtl_eh = type { ptr, ptr, ptr, ptr, ptr, ptr, [2 x ptr] }
%struct.gcc_debug_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.lang_hooks = type { ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.lang_hooks_for_tree_inlining = type { ptr }
%struct.lang_hooks_for_callgraph = type { ptr }
%struct.lang_hooks_for_tree_dump = type { ptr, ptr }
%struct.lang_hooks_for_decls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lang_hooks_for_types = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.lang_hooks_for_lto = type { ptr, ptr, ptr }
%struct.ggc_root_tab = type { ptr, i64, i64, ptr, ptr }
%struct._IO_FILE = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i64, i16, i8, [1 x i8], ptr, i64, ptr, ptr, ptr, ptr, i64, i32, [20 x i8] }
%struct.tree_type = type { %struct.tree_common, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.tree_type_symtab, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tree_common = type { %struct.tree_base, ptr, ptr }
%struct.tree_base = type { i64 }
%union.tree_type_symtab = type { ptr }
%struct.dw_fde_struct = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i64, i32, i32, i16 }
%struct.dw_cfi_struct = type { ptr, i32, %union.dw_cfi_oprnd_struct, %union.dw_cfi_oprnd_struct }
%union.dw_cfi_oprnd_struct = type { i64 }
%struct.dw_loc_descr_struct = type { ptr, i16, i32, %struct.dw_val_struct, %struct.dw_val_struct }
%struct.dw_val_struct = type { i32, %union.dw_val_struct_union }
%union.dw_val_struct_union = type { %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.queued_reg_save = type { ptr, ptr, i64, ptr }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], ptr, i64 }
%union.rtunion_def = type { ptr }
%struct.rtvec_def = type { i32, [1 x ptr] }
%struct.VEC_rtx_base = type { i32, i32, [1 x ptr] }
%struct.function = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, i32 }
%struct.dwarf_file_data = type { ptr, i32 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { ptr, i32, i32 }
%struct.VEC_dw_cfi_ref_base = type { i32, i32, [1 x ptr] }
%struct.cu_hash_table_entry = type { ptr, i32, i32, ptr }
%struct.VEC_die_arg_entry_base = type { i32, i32, [1 x %struct.die_arg_entry_struct] }
%struct.die_arg_entry_struct = type { ptr, ptr }
%struct.die_struct = type { i32, %union.die_symbol_or_type_node, ptr, ptr, ptr, ptr, ptr, i64, i64, i32, i32, i32 }
%union.die_symbol_or_type_node = type { ptr }
%struct.VEC_dw_attr_node_base = type { i32, i32, [1 x %struct.dw_attr_struct] }
%struct.dw_attr_struct = type { i32, %struct.dw_val_struct }
%struct.VEC_deferred_locations_base = type { i32, i32, [1 x %struct.deferred_locations_struct] }
%struct.deferred_locations_struct = type { ptr, ptr }
%struct.limbo_die_struct = type { ptr, ptr, ptr }
%struct.diagnostic_context = type { ptr, [12 x i32], i8, i8, [870 x i32], i8, i8, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, ptr, ptr }
%struct.VEC_tree_base = type { i32, i32, [1 x ptr] }
%struct.comdat_type_struct = type { ptr, ptr, [8 x i8], ptr }
%struct.dw_ranges_struct = type { i32 }
%struct.VEC_dcall_entry_base = type { i32, i32, [1 x %struct.dcall_struct] }
%struct.dcall_struct = type { i32, ptr, ptr }
%struct.VEC_vcall_entry_base = type { i32, i32, [1 x %struct.vcall_struct] }
%struct.vcall_struct = type { i32, i32 }
%struct.dw_ranges_by_label_struct = type { ptr, ptr }
%struct.tree_block = type { %struct.tree_common, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, ptr, i40, i32, ptr, ptr, ptr, ptr, ptr }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, ptr, ptr, ptr, ptr }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, ptr, ptr, ptr, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, ptr }
%struct.tree_list = type { %struct.tree_common, ptr, ptr }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, ptr, ptr, ptr, ptr, i32 }
%struct.var_loc_list_def = type { ptr, ptr, i32 }
%struct.var_loc_node = type { ptr, ptr, ptr }
%struct.tree_exp = type { %struct.tree_common, i32, ptr, [1 x ptr] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.vcall_insn = type { i32, i32 }
%struct.indirect_string_node = type { ptr, i32, i32, ptr }
%struct.dw_loc_list_struct = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.VEC_pubname_entry_base = type { i32, i32, [1 x %struct.pubname_struct] }
%struct.pubname_struct = type { ptr, ptr }
%struct.skeleton_chain_struct = type { ptr, ptr, ptr }
%struct.md5_ctx = type { i32, i32, i32, i32, [2 x i32], i32, [128 x i8] }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_constructor = type { %struct.tree_common, ptr }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { ptr, ptr }
%struct.real_value = type { i32, [3 x i64] }
%struct.varpool_node = type { ptr, ptr, ptr, ptr, i32, i8 }
%struct.tree_parm_decl = type { %struct.tree_decl_with_rtl, ptr, ptr }
%struct.mem_attrs = type { ptr, ptr, ptr, i32, i32, i8 }
%struct.array_descr_info = type { i32, ptr, ptr, ptr, ptr, ptr, [10 x %struct.array_descr_dimen] }
%struct.array_descr_dimen = type { ptr, ptr, ptr }
%struct.tree_field_decl = type { %struct.tree_decl_common, ptr, ptr, ptr, ptr, ptr }
%struct.tree_binfo = type { %struct.tree_common, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.VEC_tree_none }
%struct.VEC_tree_none = type { %struct.VEC_tree_base }
%struct.expanded_location = type { ptr, i32, i32, i8 }
%struct.tree_vec = type { %struct.tree_common, i32, [1 x ptr] }
%struct.types_used_by_vars_entry = type { ptr, ptr }
%struct.checksum_attributes = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.decl_table_entry = type { ptr, ptr }
%struct.htab = type { ptr, ptr, ptr, ptr, i64, i64, i64, i32, i32, ptr, ptr, ptr, ptr, ptr, i32 }

@stdout = external local_unnamed_addr global ptr, align 8
@stdin = external local_unnamed_addr global ptr, align 8
@write_symbols = external local_unnamed_addr global i32, align 4
@saved_do_cfi_asm = internal global i8 0, align 1
@flag_unwind_tables = external local_unnamed_addr global i32, align 4
@flag_exceptions = external local_unnamed_addr global i32, align 4
@flag_dwarf2_cfi_asm = external local_unnamed_addr global i32, align 4
@svr4_dbx_register_map = external local_unnamed_addr constant [53 x i32], align 16
@integer_types = external local_unnamed_addr global [11 x ptr], align 16
@mode_size = external local_unnamed_addr global [87 x i8], align 16
@reg_raw_mode = external local_unnamed_addr global [53 x i32], align 16
@targetm = external local_unnamed_addr global %struct.gcc_target, align 8
@dwarf2out_cfi_label.label = internal global [20 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [16 x i8] c"<do not output>\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"LCFI\00", align 1
@dwarf2out_cfi_label_num = internal global i64 0, align 8
@asm_out_file = external local_unnamed_addr global ptr, align 8
@.str.3 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@cfa = internal global %struct.cfa_loc zeroinitializer, align 8
@cfa_store = internal unnamed_addr global %struct.cfa_loc zeroinitializer, align 8
@cie_cfi_head = internal global ptr null, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"dwarf2out.c\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"DW_LOC_OP %s not implemented\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"DW_OP_addr\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"DW_OP_deref\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"DW_OP_const1u\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"DW_OP_const1s\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"DW_OP_const2u\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"DW_OP_const2s\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"DW_OP_const4u\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"DW_OP_const4s\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"DW_OP_const8u\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"DW_OP_const8s\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"DW_OP_constu\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"DW_OP_consts\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"DW_OP_dup\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"DW_OP_drop\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"DW_OP_over\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"DW_OP_pick\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"DW_OP_swap\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"DW_OP_rot\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"DW_OP_xderef\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"DW_OP_abs\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"DW_OP_and\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"DW_OP_div\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"DW_OP_minus\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"DW_OP_mod\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"DW_OP_mul\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"DW_OP_neg\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"DW_OP_not\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"DW_OP_or\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"DW_OP_plus\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"DW_OP_plus_uconst\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"DW_OP_shl\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"DW_OP_shr\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"DW_OP_shra\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"DW_OP_xor\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"DW_OP_bra\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"DW_OP_eq\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"DW_OP_ge\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"DW_OP_gt\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"DW_OP_le\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"DW_OP_lt\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"DW_OP_ne\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"DW_OP_skip\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"DW_OP_lit0\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"DW_OP_lit1\00", align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"DW_OP_lit2\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"DW_OP_lit3\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"DW_OP_lit4\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"DW_OP_lit5\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"DW_OP_lit6\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"DW_OP_lit7\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"DW_OP_lit8\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"DW_OP_lit9\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"DW_OP_lit10\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"DW_OP_lit11\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"DW_OP_lit12\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"DW_OP_lit13\00", align 1
@.str.63 = private unnamed_addr constant [12 x i8] c"DW_OP_lit14\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"DW_OP_lit15\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"DW_OP_lit16\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"DW_OP_lit17\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"DW_OP_lit18\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"DW_OP_lit19\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"DW_OP_lit20\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"DW_OP_lit21\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"DW_OP_lit22\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"DW_OP_lit23\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c"DW_OP_lit24\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"DW_OP_lit25\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"DW_OP_lit26\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"DW_OP_lit27\00", align 1
@.str.77 = private unnamed_addr constant [12 x i8] c"DW_OP_lit28\00", align 1
@.str.78 = private unnamed_addr constant [12 x i8] c"DW_OP_lit29\00", align 1
@.str.79 = private unnamed_addr constant [12 x i8] c"DW_OP_lit30\00", align 1
@.str.80 = private unnamed_addr constant [12 x i8] c"DW_OP_lit31\00", align 1
@.str.81 = private unnamed_addr constant [11 x i8] c"DW_OP_reg0\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"DW_OP_reg1\00", align 1
@.str.83 = private unnamed_addr constant [11 x i8] c"DW_OP_reg2\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"DW_OP_reg3\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"DW_OP_reg4\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c"DW_OP_reg5\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"DW_OP_reg6\00", align 1
@.str.88 = private unnamed_addr constant [11 x i8] c"DW_OP_reg7\00", align 1
@.str.89 = private unnamed_addr constant [11 x i8] c"DW_OP_reg8\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"DW_OP_reg9\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"DW_OP_reg10\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"DW_OP_reg11\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"DW_OP_reg12\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"DW_OP_reg13\00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"DW_OP_reg14\00", align 1
@.str.96 = private unnamed_addr constant [12 x i8] c"DW_OP_reg15\00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"DW_OP_reg16\00", align 1
@.str.98 = private unnamed_addr constant [12 x i8] c"DW_OP_reg17\00", align 1
@.str.99 = private unnamed_addr constant [12 x i8] c"DW_OP_reg18\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"DW_OP_reg19\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"DW_OP_reg20\00", align 1
@.str.102 = private unnamed_addr constant [12 x i8] c"DW_OP_reg21\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"DW_OP_reg22\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"DW_OP_reg23\00", align 1
@.str.105 = private unnamed_addr constant [12 x i8] c"DW_OP_reg24\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"DW_OP_reg25\00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"DW_OP_reg26\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"DW_OP_reg27\00", align 1
@.str.109 = private unnamed_addr constant [12 x i8] c"DW_OP_reg28\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"DW_OP_reg29\00", align 1
@.str.111 = private unnamed_addr constant [12 x i8] c"DW_OP_reg30\00", align 1
@.str.112 = private unnamed_addr constant [12 x i8] c"DW_OP_reg31\00", align 1
@.str.113 = private unnamed_addr constant [12 x i8] c"DW_OP_breg0\00", align 1
@.str.114 = private unnamed_addr constant [12 x i8] c"DW_OP_breg1\00", align 1
@.str.115 = private unnamed_addr constant [12 x i8] c"DW_OP_breg2\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"DW_OP_breg3\00", align 1
@.str.117 = private unnamed_addr constant [12 x i8] c"DW_OP_breg4\00", align 1
@.str.118 = private unnamed_addr constant [12 x i8] c"DW_OP_breg5\00", align 1
@.str.119 = private unnamed_addr constant [12 x i8] c"DW_OP_breg6\00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c"DW_OP_breg7\00", align 1
@.str.121 = private unnamed_addr constant [12 x i8] c"DW_OP_breg8\00", align 1
@.str.122 = private unnamed_addr constant [12 x i8] c"DW_OP_breg9\00", align 1
@.str.123 = private unnamed_addr constant [13 x i8] c"DW_OP_breg10\00", align 1
@.str.124 = private unnamed_addr constant [13 x i8] c"DW_OP_breg11\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"DW_OP_breg12\00", align 1
@.str.126 = private unnamed_addr constant [13 x i8] c"DW_OP_breg13\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c"DW_OP_breg14\00", align 1
@.str.128 = private unnamed_addr constant [13 x i8] c"DW_OP_breg15\00", align 1
@.str.129 = private unnamed_addr constant [13 x i8] c"DW_OP_breg16\00", align 1
@.str.130 = private unnamed_addr constant [13 x i8] c"DW_OP_breg17\00", align 1
@.str.131 = private unnamed_addr constant [13 x i8] c"DW_OP_breg18\00", align 1
@.str.132 = private unnamed_addr constant [13 x i8] c"DW_OP_breg19\00", align 1
@.str.133 = private unnamed_addr constant [13 x i8] c"DW_OP_breg20\00", align 1
@.str.134 = private unnamed_addr constant [13 x i8] c"DW_OP_breg21\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"DW_OP_breg22\00", align 1
@.str.136 = private unnamed_addr constant [13 x i8] c"DW_OP_breg23\00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c"DW_OP_breg24\00", align 1
@.str.138 = private unnamed_addr constant [13 x i8] c"DW_OP_breg25\00", align 1
@.str.139 = private unnamed_addr constant [13 x i8] c"DW_OP_breg26\00", align 1
@.str.140 = private unnamed_addr constant [13 x i8] c"DW_OP_breg27\00", align 1
@.str.141 = private unnamed_addr constant [13 x i8] c"DW_OP_breg28\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"DW_OP_breg29\00", align 1
@.str.143 = private unnamed_addr constant [13 x i8] c"DW_OP_breg30\00", align 1
@.str.144 = private unnamed_addr constant [13 x i8] c"DW_OP_breg31\00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c"DW_OP_regx\00", align 1
@.str.146 = private unnamed_addr constant [12 x i8] c"DW_OP_fbreg\00", align 1
@.str.147 = private unnamed_addr constant [12 x i8] c"DW_OP_bregx\00", align 1
@.str.148 = private unnamed_addr constant [12 x i8] c"DW_OP_piece\00", align 1
@.str.149 = private unnamed_addr constant [17 x i8] c"DW_OP_deref_size\00", align 1
@.str.150 = private unnamed_addr constant [18 x i8] c"DW_OP_xderef_size\00", align 1
@.str.151 = private unnamed_addr constant [10 x i8] c"DW_OP_nop\00", align 1
@.str.152 = private unnamed_addr constant [26 x i8] c"DW_OP_push_object_address\00", align 1
@.str.153 = private unnamed_addr constant [12 x i8] c"DW_OP_call2\00", align 1
@.str.154 = private unnamed_addr constant [12 x i8] c"DW_OP_call4\00", align 1
@.str.155 = private unnamed_addr constant [15 x i8] c"DW_OP_call_ref\00", align 1
@.str.156 = private unnamed_addr constant [21 x i8] c"DW_OP_implicit_value\00", align 1
@.str.157 = private unnamed_addr constant [18 x i8] c"DW_OP_stack_value\00", align 1
@.str.158 = private unnamed_addr constant [23 x i8] c"DW_OP_form_tls_address\00", align 1
@.str.159 = private unnamed_addr constant [21 x i8] c"DW_OP_call_frame_cfa\00", align 1
@.str.160 = private unnamed_addr constant [16 x i8] c"DW_OP_bit_piece\00", align 1
@.str.161 = private unnamed_addr constant [27 x i8] c"DW_OP_GNU_push_tls_address\00", align 1
@.str.162 = private unnamed_addr constant [17 x i8] c"DW_OP_GNU_uninit\00", align 1
@.str.163 = private unnamed_addr constant [23 x i8] c"DW_OP_GNU_encoded_addr\00", align 1
@.str.164 = private unnamed_addr constant [13 x i8] c"OP_<unknown>\00", align 1
@fde_table_in_use = internal global i32 0, align 4
@fde_table = internal global ptr null, align 8
@emit_cfa_remember = internal unnamed_addr global i1 false, align 1
@dwarf_version = external local_unnamed_addr global i32, align 4
@debug_info_level = external local_unnamed_addr global i32, align 4
@.str.165 = private unnamed_addr constant [23 x i8] c"\09.cfi_offset %lu, %ld\0A\00", align 1
@.str.166 = private unnamed_addr constant [19 x i8] c"\09.cfi_restore %lu\0A\00", align 1
@.str.167 = private unnamed_addr constant [21 x i8] c"\09.cfi_undefined %lu\0A\00", align 1
@.str.168 = private unnamed_addr constant [22 x i8] c"\09.cfi_same_value %lu\0A\00", align 1
@.str.169 = private unnamed_addr constant [24 x i8] c"\09.cfi_def_cfa %lu, %ld\0A\00", align 1
@.str.170 = private unnamed_addr constant [28 x i8] c"\09.cfi_def_cfa_register %lu\0A\00", align 1
@.str.171 = private unnamed_addr constant [25 x i8] c"\09.cfi_register %lu, %lu\0A\00", align 1
@.str.172 = private unnamed_addr constant [26 x i8] c"\09.cfi_def_cfa_offset %ld\0A\00", align 1
@.str.173 = private unnamed_addr constant [22 x i8] c"\09.cfi_remember_state\0A\00", align 1
@.str.174 = private unnamed_addr constant [21 x i8] c"\09.cfi_restore_state\0A\00", align 1
@.str.175 = private unnamed_addr constant [19 x i8] c"\09.cfi_escape 0x%x,\00", align 1
@flag_debug_asm = external local_unnamed_addr global i32, align 4
@.str.176 = private unnamed_addr constant [18 x i8] c"\09%s args_size %ld\00", align 1
@.str.177 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.178 = private unnamed_addr constant [19 x i8] c"\09.cfi_window_save\0A\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"0x%x,\00", align 1
@.str.180 = private unnamed_addr constant [5 x i8] c"0x%x\00", align 1
@num_regs_saved_in_regs = internal global i64 0, align 8
@regs_saved_in_regs = internal global [4 x %struct.reg_saved_in_data] zeroinitializer, align 16
@cfa_temp.0 = internal unnamed_addr global i64 0, align 8
@cfa_temp.1 = internal unnamed_addr global i32 0, align 8
@barrier_args_size = internal unnamed_addr global ptr null, align 8
@target_flags = external local_unnamed_addr global i32, align 4
@queued_reg_saves = internal global ptr null, align 8
@last_reg_save_label = internal unnamed_addr global ptr null, align 8
@final_sequence = external local_unnamed_addr global ptr, align 8
@flag_asynchronous_unwind_tables = external local_unnamed_addr global i32, align 4
@.str.181 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@args_size = internal unnamed_addr global i64 0, align 8
@old_args_size = internal unnamed_addr global i64 0, align 8
@global_rtl = external local_unnamed_addr global [11 x ptr], align 16
@fixed_regs = external local_unnamed_addr global [53 x i8], align 16
@x_rtl = external local_unnamed_addr global %struct.rtl_data, align 8
@cfa_remember = internal unnamed_addr global %struct.cfa_loc zeroinitializer, align 8
@current_function_func_begin_label = external local_unnamed_addr global ptr, align 8
@current_function_decl = external local_unnamed_addr global ptr, align 8
@.str.182 = private unnamed_addr constant [4 x i8] c"LFB\00", align 1
@cfun = external local_unnamed_addr global ptr, align 8
@fde_table_allocated = internal global i32 0, align 4
@flag_reorder_blocks_and_partition = external local_unnamed_addr global i32, align 4
@first_function_block_is_cold = external local_unnamed_addr global i8, align 1
@text_section = external local_unnamed_addr global ptr, align 8
@cold_text_section = internal global ptr null, align 8
@current_unit_personality = internal global ptr null, align 8
@.str.183 = private unnamed_addr constant [100 x i8] c"Multiple EH personalities are supported only with assemblers supporting .cfi.personality directive.\00", align 1
@dwarf2out_source_line.last_is_stmt = internal unnamed_addr global i8 1, align 1
@.str.184 = private unnamed_addr constant [11 x i8] c"\09%s %s:%d\0A\00", align 1
@.str.185 = private unnamed_addr constant [14 x i8] c"\09.loc %d %d 0\00", align 1
@.str.186 = private unnamed_addr constant [12 x i8] c" is_stmt %d\00", align 1
@line_info_table_in_use = internal global i32 0, align 4
@last_emitted_file = internal global ptr null, align 8
@.str.187 = private unnamed_addr constant [11 x i8] c"\09.file %u \00", align 1
@file_table_last_lookup = internal global ptr null, align 8
@file_table = internal global ptr null, align 8
@.str.188 = private unnamed_addr constant [17 x i8] c"\09.cfi_startproc\0A\00", align 1
@.str.189 = private unnamed_addr constant [24 x i8] c"\09.cfi_personality 0x%x,\00", align 1
@.str.190 = private unnamed_addr constant [7 x i8] c"LLSDAC\00", align 1
@.str.191 = private unnamed_addr constant [6 x i8] c"LLSDA\00", align 1
@.str.192 = private unnamed_addr constant [17 x i8] c"\09.cfi_lsda 0x%x,\00", align 1
@last_var_location_insn = internal unnamed_addr global ptr null, align 8
@.str.193 = private unnamed_addr constant [15 x i8] c"\09.cfi_endproc\0A\00", align 1
@.str.194 = private unnamed_addr constant [4 x i8] c"LFE\00", align 1
@.str.195 = private unnamed_addr constant [7 x i8] c"Lframe\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"LSCIE\00", align 1
@.str.197 = private unnamed_addr constant [6 x i8] c"LECIE\00", align 1
@.str.198 = private unnamed_addr constant [35 x i8] c"Length of Common Information Entry\00", align 1
@.str.199 = private unnamed_addr constant [19 x i8] c"CIE Identifier Tag\00", align 1
@.str.200 = private unnamed_addr constant [12 x i8] c"CIE Version\00", align 1
@.str.201 = private unnamed_addr constant [17 x i8] c"CIE Augmentation\00", align 1
@.str.202 = private unnamed_addr constant [26 x i8] c"CIE Code Alignment Factor\00", align 1
@.str.203 = private unnamed_addr constant [26 x i8] c"CIE Data Alignment Factor\00", align 1
@.str.204 = private unnamed_addr constant [14 x i8] c"CIE RA Column\00", align 1
@.str.205 = private unnamed_addr constant [18 x i8] c"Augmentation size\00", align 1
@.str.206 = private unnamed_addr constant [17 x i8] c"Personality (%s)\00", align 1
@.str.207 = private unnamed_addr constant [19 x i8] c"LSDA Encoding (%s)\00", align 1
@.str.208 = private unnamed_addr constant [18 x i8] c"FDE Encoding (%s)\00", align 1
@.str.209 = private unnamed_addr constant [12 x i8] c"\09.align %d\0A\00", align 1
@.str.210 = private unnamed_addr constant [13 x i8] c"End of Table\00", align 1
@debug_frame_section = internal global ptr null, align 8
@.str.211 = private unnamed_addr constant [13 x i8] c".debug_frame\00", align 1
@eh_frame_section = external local_unnamed_addr global ptr, align 8
@flag_pic = external local_unnamed_addr global i32, align 4
@.str.212 = private unnamed_addr constant [10 x i8] c".eh_frame\00", align 1
@data_section = external local_unnamed_addr global ptr, align 8
@.str.213 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.214 = private unnamed_addr constant [25 x i8] c"DW_CFA_advance_loc 0x%lx\00", align 1
@.str.215 = private unnamed_addr constant [28 x i8] c"DW_CFA_offset, column 0x%lx\00", align 1
@.str.216 = private unnamed_addr constant [29 x i8] c"DW_CFA_restore, column 0x%lx\00", align 1
@.str.217 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.221 = private unnamed_addr constant [11 x i8] c"DW_CFA_nop\00", align 1
@.str.222 = private unnamed_addr constant [15 x i8] c"DW_CFA_set_loc\00", align 1
@.str.223 = private unnamed_addr constant [20 x i8] c"DW_CFA_advance_loc1\00", align 1
@.str.224 = private unnamed_addr constant [20 x i8] c"DW_CFA_advance_loc2\00", align 1
@.str.225 = private unnamed_addr constant [20 x i8] c"DW_CFA_advance_loc4\00", align 1
@.str.226 = private unnamed_addr constant [23 x i8] c"DW_CFA_offset_extended\00", align 1
@.str.227 = private unnamed_addr constant [24 x i8] c"DW_CFA_restore_extended\00", align 1
@.str.228 = private unnamed_addr constant [17 x i8] c"DW_CFA_undefined\00", align 1
@.str.229 = private unnamed_addr constant [18 x i8] c"DW_CFA_same_value\00", align 1
@.str.230 = private unnamed_addr constant [16 x i8] c"DW_CFA_register\00", align 1
@.str.231 = private unnamed_addr constant [22 x i8] c"DW_CFA_remember_state\00", align 1
@.str.232 = private unnamed_addr constant [21 x i8] c"DW_CFA_restore_state\00", align 1
@.str.233 = private unnamed_addr constant [15 x i8] c"DW_CFA_def_cfa\00", align 1
@.str.234 = private unnamed_addr constant [24 x i8] c"DW_CFA_def_cfa_register\00", align 1
@.str.235 = private unnamed_addr constant [22 x i8] c"DW_CFA_def_cfa_offset\00", align 1
@.str.236 = private unnamed_addr constant [26 x i8] c"DW_CFA_def_cfa_expression\00", align 1
@.str.237 = private unnamed_addr constant [18 x i8] c"DW_CFA_expression\00", align 1
@.str.238 = private unnamed_addr constant [26 x i8] c"DW_CFA_offset_extended_sf\00", align 1
@.str.239 = private unnamed_addr constant [18 x i8] c"DW_CFA_def_cfa_sf\00", align 1
@.str.240 = private unnamed_addr constant [25 x i8] c"DW_CFA_def_cfa_offset_sf\00", align 1
@.str.241 = private unnamed_addr constant [25 x i8] c"DW_CFA_MIPS_advance_loc8\00", align 1
@.str.242 = private unnamed_addr constant [23 x i8] c"DW_CFA_GNU_window_save\00", align 1
@.str.243 = private unnamed_addr constant [21 x i8] c"DW_CFA_GNU_args_size\00", align 1
@.str.244 = private unnamed_addr constant [36 x i8] c"DW_CFA_GNU_negative_offset_extended\00", align 1
@.str.245 = private unnamed_addr constant [17 x i8] c"DW_CFA_<unknown>\00", align 1
@.str.246 = private unnamed_addr constant [30 x i8] c"fp or vector constant word %u\00", align 1
@output_fde.j = internal unnamed_addr global i32 0, align 4
@.str.247 = private unnamed_addr constant [6 x i8] c"LSFDE\00", align 1
@.str.248 = private unnamed_addr constant [7 x i8] c"LASFDE\00", align 1
@.str.249 = private unnamed_addr constant [6 x i8] c"LEFDE\00", align 1
@.str.250 = private unnamed_addr constant [11 x i8] c"FDE Length\00", align 1
@.str.251 = private unnamed_addr constant [15 x i8] c"FDE CIE offset\00", align 1
@.str.252 = private unnamed_addr constant [21 x i8] c"FDE initial location\00", align 1
@.str.253 = private unnamed_addr constant [18 x i8] c"FDE address range\00", align 1
@.str.254 = private unnamed_addr constant [28 x i8] c"Language Specific Data Area\00", align 1
@.str.255 = private unnamed_addr constant [35 x i8] c"Language Specific Data Area (none)\00", align 1
@in_cold_section_p = external local_unnamed_addr global i8, align 1
@have_multiple_function_sections = internal global i8 0, align 1
@text_section_used = internal global i8 0, align 1
@cold_text_section_used = internal global i8 0, align 1
@dwarf2_debug_hooks = dso_local local_unnamed_addr constant %struct.gcc_debug_hooks { ptr @dwarf2out_init, ptr @dwarf2out_finish, ptr @dwarf2out_assembly_start, ptr @dwarf2out_define, ptr @dwarf2out_undef, ptr @dwarf2out_start_source_file, ptr @dwarf2out_end_source_file, ptr @dwarf2out_begin_block, ptr @dwarf2out_end_block, ptr @dwarf2out_ignore_block, ptr @dwarf2out_source_line, ptr @dwarf2out_begin_prologue, ptr @debug_nothing_int_charstar, ptr @dwarf2out_end_epilogue, ptr @dwarf2out_begin_function, ptr @debug_nothing_int, ptr @dwarf2out_function_decl, ptr @dwarf2out_global_decl, ptr @dwarf2out_type_decl, ptr @dwarf2out_imported_module_or_decl, ptr @debug_nothing_tree, ptr @dwarf2out_abstract_function, ptr @debug_nothing_rtx, ptr @debug_nothing_int, ptr @dwarf2out_var_location, ptr @dwarf2out_switch_text_section, ptr @dwarf2out_direct_call, ptr @dwarf2out_virtual_call_token, ptr @dwarf2out_copy_call_info, ptr @dwarf2out_virtual_call, ptr @dwarf2out_set_name, i32 1 }, align 8
@decl_die_table = internal global ptr null, align 8
@decl_loc_table = internal global ptr null, align 8
@decl_scope_table = internal global ptr null, align 8
@abbrev_die_table = internal global ptr null, align 8
@abbrev_die_table_allocated = internal global i32 0, align 4
@abbrev_die_table_in_use = internal global i32 0, align 4
@line_info_table = internal global ptr null, align 8
@line_info_table_allocated = internal global i32 0, align 4
@pubname_table = internal global ptr null, align 8
@pubtype_table = internal global ptr null, align 8
@vcall_insn_table = internal global ptr null, align 8
@comp_unit_die = internal global ptr null, align 8
@incomplete_types = internal global ptr null, align 8
@used_rtx_array = internal global ptr null, align 8
@.str.256 = private unnamed_addr constant [12 x i8] c".debug_info\00", align 1
@debug_info_section = internal global ptr null, align 8
@.str.257 = private unnamed_addr constant [14 x i8] c".debug_abbrev\00", align 1
@debug_abbrev_section = internal global ptr null, align 8
@.str.258 = private unnamed_addr constant [15 x i8] c".debug_aranges\00", align 1
@debug_aranges_section = internal global ptr null, align 8
@.str.259 = private unnamed_addr constant [15 x i8] c".debug_macinfo\00", align 1
@debug_macinfo_section = internal global ptr null, align 8
@.str.260 = private unnamed_addr constant [12 x i8] c".debug_line\00", align 1
@debug_line_section = internal global ptr null, align 8
@.str.261 = private unnamed_addr constant [11 x i8] c".debug_loc\00", align 1
@debug_loc_section = internal global ptr null, align 8
@.str.262 = private unnamed_addr constant [16 x i8] c".debug_pubnames\00", align 1
@debug_pubnames_section = internal global ptr null, align 8
@.str.263 = private unnamed_addr constant [16 x i8] c".debug_pubtypes\00", align 1
@debug_pubtypes_section = internal global ptr null, align 8
@.str.264 = private unnamed_addr constant [13 x i8] c".debug_dcall\00", align 1
@debug_dcall_section = internal global ptr null, align 8
@.str.265 = private unnamed_addr constant [13 x i8] c".debug_vcall\00", align 1
@debug_vcall_section = internal global ptr null, align 8
@.str.266 = private unnamed_addr constant [11 x i8] c".debug_str\00", align 1
@flag_merge_debug_strings = external local_unnamed_addr global i32, align 4
@debug_str_section = internal global ptr null, align 8
@.str.267 = private unnamed_addr constant [14 x i8] c".debug_ranges\00", align 1
@debug_ranges_section = internal global ptr null, align 8
@text_end_label = internal global [30 x i8] zeroinitializer, align 16
@.str.268 = private unnamed_addr constant [7 x i8] c"Letext\00", align 1
@abbrev_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str.269 = private unnamed_addr constant [14 x i8] c"Ldebug_abbrev\00", align 1
@text_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str.270 = private unnamed_addr constant [6 x i8] c"Ltext\00", align 1
@cold_text_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str.271 = private unnamed_addr constant [11 x i8] c"Ltext_cold\00", align 1
@cold_end_label = internal global [30 x i8] zeroinitializer, align 16
@.str.272 = private unnamed_addr constant [12 x i8] c"Letext_cold\00", align 1
@debug_info_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str.273 = private unnamed_addr constant [12 x i8] c"Ldebug_info\00", align 1
@debug_line_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str.274 = private unnamed_addr constant [12 x i8] c"Ldebug_line\00", align 1
@ranges_section_label = internal global [60 x i8] zeroinitializer, align 16
@.str.275 = private unnamed_addr constant [14 x i8] c"Ldebug_ranges\00", align 1
@macinfo_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str.276 = private unnamed_addr constant [15 x i8] c"Ldebug_macinfo\00", align 1
@lang_hooks = external local_unnamed_addr global %struct.lang_hooks, align 8
@.str.277 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@version_string = external constant [0 x i8], align 1
@.str.278 = private unnamed_addr constant [8 x i8] c"GNU C++\00", align 1
@.str.279 = private unnamed_addr constant [8 x i8] c"GNU F77\00", align 1
@.str.280 = private unnamed_addr constant [11 x i8] c"GNU Pascal\00", align 1
@dwarf_strict = external local_unnamed_addr global i32, align 4
@.str.281 = private unnamed_addr constant [8 x i8] c"GNU Ada\00", align 1
@.str.282 = private unnamed_addr constant [12 x i8] c"GNU Fortran\00", align 1
@.str.283 = private unnamed_addr constant [9 x i8] c"GNU Java\00", align 1
@.str.284 = private unnamed_addr constant [16 x i8] c"GNU Objective-C\00", align 1
@.str.285 = private unnamed_addr constant [18 x i8] c"GNU Objective-C++\00", align 1
@limbo_die_list = internal global ptr null, align 8
@demangle_name_func = internal unnamed_addr global ptr null, align 8
@debug_str_hash = internal global ptr null, align 8
@deferred_locations_list = internal global ptr null, align 8
@global_dc = external local_unnamed_addr global ptr, align 8
@tree_code_type = external local_unnamed_addr constant [0 x i32], align 4
@deferred_asm_name = internal global ptr null, align 8
@flag_eliminate_unused_debug_types = external local_unnamed_addr global i32, align 4
@flag_eliminate_dwarf2_dups = external local_unnamed_addr global i32, align 4
@comdat_type_list = internal global ptr null, align 8
@const_int_rtx = external local_unnamed_addr global [129 x ptr], align 16
@have_location_lists = internal global i8 0, align 1
@loc_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str.286 = private unnamed_addr constant [11 x i8] c"Ldebug_loc\00", align 1
@dcall_table = internal global ptr null, align 8
@vcall_table = internal global ptr null, align 8
@ranges_table_in_use = internal global i32 0, align 4
@.str.287 = private unnamed_addr constant [21 x i8] c"End compilation unit\00", align 1
@tmpl_value_parm_die_table = internal global ptr null, align 8
@global_trees = external local_unnamed_addr global [131 x ptr], align 16
@mode_class = external local_unnamed_addr constant [87 x i8], align 16
@cgraph_global_info_ready = external local_unnamed_addr global i8, align 1
@mode_inner = external local_unnamed_addr constant [87 x i8], align 16
@rtx_class = external local_unnamed_addr constant [139 x i32], align 16
@.str.288 = private unnamed_addr constant [35 x i8] c"UNSPEC hasn't been delegitimized.\0A\00", align 1
@.str.289 = private unnamed_addr constant [42 x i8] c"Constant was removed from constant pool.\0A\00", align 1
@.str.290 = private unnamed_addr constant [35 x i8] c"Symbol not defined in current TU.\0A\00", align 1
@dump_file = external local_unnamed_addr global ptr, align 8
@dump_flags = external local_unnamed_addr global i32, align 4
@.str.291 = private unnamed_addr constant [28 x i8] c"Failed to expand as dwarf: \00", align 1
@.str.293 = private unnamed_addr constant [13 x i8] c"\0AReason: %s\0A\00", align 1
@tree_contains_struct = external local_unnamed_addr global [191 x [64 x i8]], align 16
@reload_completed = external local_unnamed_addr global i32, align 4
@.str.294 = private unnamed_addr constant [11 x i8] c"ERROR_MARK\00", align 1
@.str.295 = private unnamed_addr constant [17 x i8] c"PLACEHOLDER_EXPR\00", align 1
@.str.296 = private unnamed_addr constant [10 x i8] c"CALL_EXPR\00", align 1
@.str.297 = private unnamed_addr constant [30 x i8] c"PRE/POST INDCREMENT/DECREMENT\00", align 1
@.str.298 = private unnamed_addr constant [26 x i8] c"need address of ADDR_EXPR\00", align 1
@.str.299 = private unnamed_addr constant [16 x i8] c"DECL has no RTL\00", align 1
@mode_mask_array = external local_unnamed_addr constant [87 x i64], align 16
@.str.300 = private unnamed_addr constant [13 x i8] c"CONST_STRING\00", align 1
@.str.301 = private unnamed_addr constant [41 x i8] c"failed to produce loc descriptor for rtl\00", align 1
@.str.302 = private unnamed_addr constant [16 x i8] c"bitfield access\00", align 1
@.str.303 = private unnamed_addr constant [36 x i8] c"Integer operand is not host integer\00", align 1
@.str.304 = private unnamed_addr constant [45 x i8] c"constructor or constant not in constant pool\00", align 1
@.str.305 = private unnamed_addr constant [28 x i8] c"language specific tree node\00", align 1
@.str.306 = private unnamed_addr constant [28 x i8] c"DWARF address size mismatch\00", align 1
@.str.307 = private unnamed_addr constant [33 x i8] c"Want address and only have value\00", align 1
@.str.308 = private unnamed_addr constant [34 x i8] c"no indirect ref in inner refrence\00", align 1
@.str.309 = private unnamed_addr constant [42 x i8] c"CST value in contant pool but not marked.\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"LLST\00", align 1
@label_num = internal global i32 0, align 4
@hard_regno_nregs = external local_unnamed_addr global [53 x [87 x i8]], align 16
@.str.311 = private unnamed_addr constant [62 x i8] c"CONCAT/CONCATN/VAR_LOCATION is handled only by loc_descriptor\00", align 1
@word_mode = external local_unnamed_addr global i32, align 4
@frame_pointer_fb_offset = internal unnamed_addr global i64 0, align 8
@optimize = external local_unnamed_addr global i32, align 4
@.str.312 = private unnamed_addr constant [57 x i8] c"Don't know how to merge two non-trivial location lists.\0A\00", align 1
@.str.313 = private unnamed_addr constant [47 x i8] c"Location list where only loc descriptor needed\00", align 1
@.str.314 = private unnamed_addr constant [12 x i8] c"__unknown__\00", align 1
@.str.315 = private unnamed_addr constant [11 x i8] c"artificial\00", align 1
@arange_table_in_use = internal global i32 0, align 4
@arange_table_allocated = internal global i32 0, align 4
@arange_table = internal global ptr null, align 8
@input_location = external local_unnamed_addr global i32, align 4
@common_block_die_table = internal global ptr null, align 8
@htab_hash_pointer = external local_unnamed_addr global ptr, align 8
@.str.316 = private unnamed_addr constant [4 x i8] c"LBB\00", align 1
@.str.317 = private unnamed_addr constant [4 x i8] c"LBE\00", align 1
@.str.318 = private unnamed_addr constant [7 x i8] c"MAIN__\00", align 1
@.str.319 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@debug_str_hash_forced = internal global i8 0, align 1
@types_used_by_vars_hash = external local_unnamed_addr global ptr, align 8
@comdat_symbol_number = internal unnamed_addr global i32 0, align 4
@comdat_symbol_id = internal unnamed_addr global ptr null, align 8
@.str.320 = private unnamed_addr constant [9 x i8] c"%s.%s.%x\00", align 1
@.str.321 = private unnamed_addr constant [3 x i8] c"DW\00", align 1
@.str.322 = private unnamed_addr constant [5 x i8] c"LDIE\00", align 1
@.str.323 = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@.str.324 = private unnamed_addr constant [4 x i8] c"%s.\00", align 1
@.str.325 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@ranges_by_label_in_use = internal global i32 0, align 4
@ranges_by_label_allocated = internal global i32 0, align 4
@ranges_by_label = internal global ptr null, align 8
@ranges_table_allocated = internal global i32 0, align 4
@ranges_table = internal global ptr null, align 8
@.str.326 = private unnamed_addr constant [33 x i8] c"Location list begin address (%s)\00", align 1
@.str.327 = private unnamed_addr constant [31 x i8] c"Location list end address (%s)\00", align 1
@.str.328 = private unnamed_addr constant [25 x i8] c"Location expression size\00", align 1
@.str.329 = private unnamed_addr constant [36 x i8] c"Location list terminator begin (%s)\00", align 1
@.str.330 = private unnamed_addr constant [34 x i8] c"Location list terminator end (%s)\00", align 1
@next_die_offset = internal unnamed_addr global i64 0, align 8
@.str.331 = private unnamed_addr constant [20 x i8] c".gnu.linkonce.wi.%s\00", align 1
@.str.332 = private unnamed_addr constant [5 x i8] c"LASF\00", align 1
@dw2_string_counter = internal global i32 0, align 4
@.str.333 = private unnamed_addr constant [32 x i8] c"Length of Compilation Unit Info\00", align 1
@.str.334 = private unnamed_addr constant [21 x i8] c"DWARF version number\00", align 1
@.str.335 = private unnamed_addr constant [28 x i8] c"Offset Into Abbrev. Section\00", align 1
@.str.336 = private unnamed_addr constant [24 x i8] c"Pointer Size (in bytes)\00", align 1
@.str.337 = private unnamed_addr constant [17 x i8] c"(DIE (0x%lx) %s)\00", align 1
@.str.338 = private unnamed_addr constant [7 x i8] c"+0x%lx\00", align 1
@.str.339 = private unnamed_addr constant [10 x i8] c"\09\09\09%s %s\0A\00", align 1
@.str.340 = private unnamed_addr constant [9 x i8] c"%s: \22%s\22\00", align 1
@.str.341 = private unnamed_addr constant [8 x i8] c"%s (%s)\00", align 1
@.str.342 = private unnamed_addr constant [29 x i8] c"end of children of DIE 0x%lx\00", align 1
@.str.343 = private unnamed_addr constant [15 x i8] c"DW_TAG_padding\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"DW_TAG_array_type\00", align 1
@.str.345 = private unnamed_addr constant [18 x i8] c"DW_TAG_class_type\00", align 1
@.str.346 = private unnamed_addr constant [19 x i8] c"DW_TAG_entry_point\00", align 1
@.str.347 = private unnamed_addr constant [24 x i8] c"DW_TAG_enumeration_type\00", align 1
@.str.348 = private unnamed_addr constant [24 x i8] c"DW_TAG_formal_parameter\00", align 1
@.str.349 = private unnamed_addr constant [28 x i8] c"DW_TAG_imported_declaration\00", align 1
@.str.350 = private unnamed_addr constant [13 x i8] c"DW_TAG_label\00", align 1
@.str.351 = private unnamed_addr constant [21 x i8] c"DW_TAG_lexical_block\00", align 1
@.str.352 = private unnamed_addr constant [14 x i8] c"DW_TAG_member\00", align 1
@.str.353 = private unnamed_addr constant [20 x i8] c"DW_TAG_pointer_type\00", align 1
@.str.354 = private unnamed_addr constant [22 x i8] c"DW_TAG_reference_type\00", align 1
@.str.355 = private unnamed_addr constant [20 x i8] c"DW_TAG_compile_unit\00", align 1
@.str.356 = private unnamed_addr constant [19 x i8] c"DW_TAG_string_type\00", align 1
@.str.357 = private unnamed_addr constant [22 x i8] c"DW_TAG_structure_type\00", align 1
@.str.358 = private unnamed_addr constant [23 x i8] c"DW_TAG_subroutine_type\00", align 1
@.str.359 = private unnamed_addr constant [15 x i8] c"DW_TAG_typedef\00", align 1
@.str.360 = private unnamed_addr constant [18 x i8] c"DW_TAG_union_type\00", align 1
@.str.361 = private unnamed_addr constant [30 x i8] c"DW_TAG_unspecified_parameters\00", align 1
@.str.362 = private unnamed_addr constant [15 x i8] c"DW_TAG_variant\00", align 1
@.str.363 = private unnamed_addr constant [20 x i8] c"DW_TAG_common_block\00", align 1
@.str.364 = private unnamed_addr constant [24 x i8] c"DW_TAG_common_inclusion\00", align 1
@.str.365 = private unnamed_addr constant [19 x i8] c"DW_TAG_inheritance\00", align 1
@.str.366 = private unnamed_addr constant [26 x i8] c"DW_TAG_inlined_subroutine\00", align 1
@.str.367 = private unnamed_addr constant [14 x i8] c"DW_TAG_module\00", align 1
@.str.368 = private unnamed_addr constant [26 x i8] c"DW_TAG_ptr_to_member_type\00", align 1
@.str.369 = private unnamed_addr constant [16 x i8] c"DW_TAG_set_type\00", align 1
@.str.370 = private unnamed_addr constant [21 x i8] c"DW_TAG_subrange_type\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c"DW_TAG_with_stmt\00", align 1
@.str.372 = private unnamed_addr constant [26 x i8] c"DW_TAG_access_declaration\00", align 1
@.str.373 = private unnamed_addr constant [17 x i8] c"DW_TAG_base_type\00", align 1
@.str.374 = private unnamed_addr constant [19 x i8] c"DW_TAG_catch_block\00", align 1
@.str.375 = private unnamed_addr constant [18 x i8] c"DW_TAG_const_type\00", align 1
@.str.376 = private unnamed_addr constant [16 x i8] c"DW_TAG_constant\00", align 1
@.str.377 = private unnamed_addr constant [18 x i8] c"DW_TAG_enumerator\00", align 1
@.str.378 = private unnamed_addr constant [17 x i8] c"DW_TAG_file_type\00", align 1
@.str.379 = private unnamed_addr constant [14 x i8] c"DW_TAG_friend\00", align 1
@.str.380 = private unnamed_addr constant [16 x i8] c"DW_TAG_namelist\00", align 1
@.str.381 = private unnamed_addr constant [21 x i8] c"DW_TAG_namelist_item\00", align 1
@.str.382 = private unnamed_addr constant [19 x i8] c"DW_TAG_packed_type\00", align 1
@.str.383 = private unnamed_addr constant [18 x i8] c"DW_TAG_subprogram\00", align 1
@.str.384 = private unnamed_addr constant [27 x i8] c"DW_TAG_template_type_param\00", align 1
@.str.385 = private unnamed_addr constant [28 x i8] c"DW_TAG_template_value_param\00", align 1
@.str.386 = private unnamed_addr constant [19 x i8] c"DW_TAG_thrown_type\00", align 1
@.str.387 = private unnamed_addr constant [17 x i8] c"DW_TAG_try_block\00", align 1
@.str.388 = private unnamed_addr constant [20 x i8] c"DW_TAG_variant_part\00", align 1
@.str.389 = private unnamed_addr constant [16 x i8] c"DW_TAG_variable\00", align 1
@.str.390 = private unnamed_addr constant [21 x i8] c"DW_TAG_volatile_type\00", align 1
@.str.391 = private unnamed_addr constant [23 x i8] c"DW_TAG_dwarf_procedure\00", align 1
@.str.392 = private unnamed_addr constant [21 x i8] c"DW_TAG_restrict_type\00", align 1
@.str.393 = private unnamed_addr constant [22 x i8] c"DW_TAG_interface_type\00", align 1
@.str.394 = private unnamed_addr constant [17 x i8] c"DW_TAG_namespace\00", align 1
@.str.395 = private unnamed_addr constant [23 x i8] c"DW_TAG_imported_module\00", align 1
@.str.396 = private unnamed_addr constant [24 x i8] c"DW_TAG_unspecified_type\00", align 1
@.str.397 = private unnamed_addr constant [20 x i8] c"DW_TAG_partial_unit\00", align 1
@.str.398 = private unnamed_addr constant [21 x i8] c"DW_TAG_imported_unit\00", align 1
@.str.399 = private unnamed_addr constant [17 x i8] c"DW_TAG_condition\00", align 1
@.str.400 = private unnamed_addr constant [19 x i8] c"DW_TAG_shared_type\00", align 1
@.str.401 = private unnamed_addr constant [17 x i8] c"DW_TAG_type_unit\00", align 1
@.str.402 = private unnamed_addr constant [29 x i8] c"DW_TAG_rvalue_reference_type\00", align 1
@.str.403 = private unnamed_addr constant [22 x i8] c"DW_TAG_template_alias\00", align 1
@.str.404 = private unnamed_addr constant [35 x i8] c"DW_TAG_GNU_template_parameter_pack\00", align 1
@.str.405 = private unnamed_addr constant [33 x i8] c"DW_TAG_GNU_formal_parameter_pack\00", align 1
@.str.406 = private unnamed_addr constant [17 x i8] c"DW_TAG_MIPS_loop\00", align 1
@.str.407 = private unnamed_addr constant [20 x i8] c"DW_TAG_format_label\00", align 1
@.str.408 = private unnamed_addr constant [25 x i8] c"DW_TAG_function_template\00", align 1
@.str.409 = private unnamed_addr constant [22 x i8] c"DW_TAG_class_template\00", align 1
@.str.410 = private unnamed_addr constant [17 x i8] c"DW_TAG_GNU_BINCL\00", align 1
@.str.411 = private unnamed_addr constant [17 x i8] c"DW_TAG_GNU_EINCL\00", align 1
@.str.412 = private unnamed_addr constant [35 x i8] c"DW_TAG_GNU_template_template_param\00", align 1
@.str.413 = private unnamed_addr constant [17 x i8] c"DW_TAG_<unknown>\00", align 1
@.str.414 = private unnamed_addr constant [14 x i8] c"DW_AT_sibling\00", align 1
@.str.415 = private unnamed_addr constant [15 x i8] c"DW_AT_location\00", align 1
@.str.416 = private unnamed_addr constant [11 x i8] c"DW_AT_name\00", align 1
@.str.417 = private unnamed_addr constant [15 x i8] c"DW_AT_ordering\00", align 1
@.str.418 = private unnamed_addr constant [18 x i8] c"DW_AT_subscr_data\00", align 1
@.str.419 = private unnamed_addr constant [16 x i8] c"DW_AT_byte_size\00", align 1
@.str.420 = private unnamed_addr constant [17 x i8] c"DW_AT_bit_offset\00", align 1
@.str.421 = private unnamed_addr constant [15 x i8] c"DW_AT_bit_size\00", align 1
@.str.422 = private unnamed_addr constant [19 x i8] c"DW_AT_element_list\00", align 1
@.str.423 = private unnamed_addr constant [16 x i8] c"DW_AT_stmt_list\00", align 1
@.str.424 = private unnamed_addr constant [13 x i8] c"DW_AT_low_pc\00", align 1
@.str.425 = private unnamed_addr constant [14 x i8] c"DW_AT_high_pc\00", align 1
@.str.426 = private unnamed_addr constant [15 x i8] c"DW_AT_language\00", align 1
@.str.427 = private unnamed_addr constant [13 x i8] c"DW_AT_member\00", align 1
@.str.428 = private unnamed_addr constant [12 x i8] c"DW_AT_discr\00", align 1
@.str.429 = private unnamed_addr constant [18 x i8] c"DW_AT_discr_value\00", align 1
@.str.430 = private unnamed_addr constant [17 x i8] c"DW_AT_visibility\00", align 1
@.str.431 = private unnamed_addr constant [13 x i8] c"DW_AT_import\00", align 1
@.str.432 = private unnamed_addr constant [20 x i8] c"DW_AT_string_length\00", align 1
@.str.433 = private unnamed_addr constant [23 x i8] c"DW_AT_common_reference\00", align 1
@.str.434 = private unnamed_addr constant [15 x i8] c"DW_AT_comp_dir\00", align 1
@.str.435 = private unnamed_addr constant [18 x i8] c"DW_AT_const_value\00", align 1
@.str.436 = private unnamed_addr constant [22 x i8] c"DW_AT_containing_type\00", align 1
@.str.437 = private unnamed_addr constant [20 x i8] c"DW_AT_default_value\00", align 1
@.str.438 = private unnamed_addr constant [13 x i8] c"DW_AT_inline\00", align 1
@.str.439 = private unnamed_addr constant [18 x i8] c"DW_AT_is_optional\00", align 1
@.str.440 = private unnamed_addr constant [18 x i8] c"DW_AT_lower_bound\00", align 1
@.str.441 = private unnamed_addr constant [15 x i8] c"DW_AT_producer\00", align 1
@.str.442 = private unnamed_addr constant [17 x i8] c"DW_AT_prototyped\00", align 1
@.str.443 = private unnamed_addr constant [18 x i8] c"DW_AT_return_addr\00", align 1
@.str.444 = private unnamed_addr constant [18 x i8] c"DW_AT_start_scope\00", align 1
@.str.445 = private unnamed_addr constant [17 x i8] c"DW_AT_bit_stride\00", align 1
@.str.446 = private unnamed_addr constant [18 x i8] c"DW_AT_upper_bound\00", align 1
@.str.447 = private unnamed_addr constant [22 x i8] c"DW_AT_abstract_origin\00", align 1
@.str.448 = private unnamed_addr constant [20 x i8] c"DW_AT_accessibility\00", align 1
@.str.449 = private unnamed_addr constant [20 x i8] c"DW_AT_address_class\00", align 1
@.str.450 = private unnamed_addr constant [17 x i8] c"DW_AT_artificial\00", align 1
@.str.451 = private unnamed_addr constant [17 x i8] c"DW_AT_base_types\00", align 1
@.str.452 = private unnamed_addr constant [25 x i8] c"DW_AT_calling_convention\00", align 1
@.str.453 = private unnamed_addr constant [12 x i8] c"DW_AT_count\00", align 1
@.str.454 = private unnamed_addr constant [27 x i8] c"DW_AT_data_member_location\00", align 1
@.str.455 = private unnamed_addr constant [18 x i8] c"DW_AT_decl_column\00", align 1
@.str.456 = private unnamed_addr constant [16 x i8] c"DW_AT_decl_file\00", align 1
@.str.457 = private unnamed_addr constant [16 x i8] c"DW_AT_decl_line\00", align 1
@.str.458 = private unnamed_addr constant [18 x i8] c"DW_AT_declaration\00", align 1
@.str.459 = private unnamed_addr constant [17 x i8] c"DW_AT_discr_list\00", align 1
@.str.460 = private unnamed_addr constant [15 x i8] c"DW_AT_encoding\00", align 1
@.str.461 = private unnamed_addr constant [15 x i8] c"DW_AT_external\00", align 1
@.str.462 = private unnamed_addr constant [15 x i8] c"DW_AT_explicit\00", align 1
@.str.463 = private unnamed_addr constant [17 x i8] c"DW_AT_frame_base\00", align 1
@.str.464 = private unnamed_addr constant [13 x i8] c"DW_AT_friend\00", align 1
@.str.465 = private unnamed_addr constant [22 x i8] c"DW_AT_identifier_case\00", align 1
@.str.466 = private unnamed_addr constant [17 x i8] c"DW_AT_macro_info\00", align 1
@.str.467 = private unnamed_addr constant [21 x i8] c"DW_AT_namelist_items\00", align 1
@.str.468 = private unnamed_addr constant [15 x i8] c"DW_AT_priority\00", align 1
@.str.469 = private unnamed_addr constant [14 x i8] c"DW_AT_segment\00", align 1
@.str.470 = private unnamed_addr constant [20 x i8] c"DW_AT_specification\00", align 1
@.str.471 = private unnamed_addr constant [18 x i8] c"DW_AT_static_link\00", align 1
@.str.472 = private unnamed_addr constant [11 x i8] c"DW_AT_type\00", align 1
@.str.473 = private unnamed_addr constant [19 x i8] c"DW_AT_use_location\00", align 1
@.str.474 = private unnamed_addr constant [25 x i8] c"DW_AT_variable_parameter\00", align 1
@.str.475 = private unnamed_addr constant [17 x i8] c"DW_AT_virtuality\00", align 1
@.str.476 = private unnamed_addr constant [27 x i8] c"DW_AT_vtable_elem_location\00", align 1
@.str.477 = private unnamed_addr constant [16 x i8] c"DW_AT_allocated\00", align 1
@.str.478 = private unnamed_addr constant [17 x i8] c"DW_AT_associated\00", align 1
@.str.479 = private unnamed_addr constant [20 x i8] c"DW_AT_data_location\00", align 1
@.str.480 = private unnamed_addr constant [18 x i8] c"DW_AT_byte_stride\00", align 1
@.str.481 = private unnamed_addr constant [15 x i8] c"DW_AT_entry_pc\00", align 1
@.str.482 = private unnamed_addr constant [15 x i8] c"DW_AT_use_UTF8\00", align 1
@.str.483 = private unnamed_addr constant [16 x i8] c"DW_AT_extension\00", align 1
@.str.484 = private unnamed_addr constant [13 x i8] c"DW_AT_ranges\00", align 1
@.str.485 = private unnamed_addr constant [17 x i8] c"DW_AT_trampoline\00", align 1
@.str.486 = private unnamed_addr constant [18 x i8] c"DW_AT_call_column\00", align 1
@.str.487 = private unnamed_addr constant [16 x i8] c"DW_AT_call_file\00", align 1
@.str.488 = private unnamed_addr constant [16 x i8] c"DW_AT_call_line\00", align 1
@.str.489 = private unnamed_addr constant [16 x i8] c"DW_AT_signature\00", align 1
@.str.490 = private unnamed_addr constant [22 x i8] c"DW_AT_main_subprogram\00", align 1
@.str.491 = private unnamed_addr constant [22 x i8] c"DW_AT_data_bit_offset\00", align 1
@.str.492 = private unnamed_addr constant [17 x i8] c"DW_AT_const_expr\00", align 1
@.str.493 = private unnamed_addr constant [17 x i8] c"DW_AT_enum_class\00", align 1
@.str.494 = private unnamed_addr constant [19 x i8] c"DW_AT_linkage_name\00", align 1
@.str.495 = private unnamed_addr constant [15 x i8] c"DW_AT_MIPS_fde\00", align 1
@.str.496 = private unnamed_addr constant [22 x i8] c"DW_AT_MIPS_loop_begin\00", align 1
@.str.497 = private unnamed_addr constant [27 x i8] c"DW_AT_MIPS_tail_loop_begin\00", align 1
@.str.498 = private unnamed_addr constant [24 x i8] c"DW_AT_MIPS_epilog_begin\00", align 1
@.str.499 = private unnamed_addr constant [30 x i8] c"DW_AT_MIPS_loop_unroll_factor\00", align 1
@.str.500 = private unnamed_addr constant [35 x i8] c"DW_AT_MIPS_software_pipeline_depth\00", align 1
@.str.501 = private unnamed_addr constant [24 x i8] c"DW_AT_MIPS_linkage_name\00", align 1
@.str.502 = private unnamed_addr constant [18 x i8] c"DW_AT_MIPS_stride\00", align 1
@.str.503 = private unnamed_addr constant [25 x i8] c"DW_AT_MIPS_abstract_name\00", align 1
@.str.504 = private unnamed_addr constant [24 x i8] c"DW_AT_MIPS_clone_origin\00", align 1
@.str.505 = private unnamed_addr constant [23 x i8] c"DW_AT_MIPS_has_inlines\00", align 1
@.str.506 = private unnamed_addr constant [15 x i8] c"DW_AT_sf_names\00", align 1
@.str.507 = private unnamed_addr constant [15 x i8] c"DW_AT_src_info\00", align 1
@.str.508 = private unnamed_addr constant [15 x i8] c"DW_AT_mac_info\00", align 1
@.str.509 = private unnamed_addr constant [17 x i8] c"DW_AT_src_coords\00", align 1
@.str.510 = private unnamed_addr constant [17 x i8] c"DW_AT_body_begin\00", align 1
@.str.511 = private unnamed_addr constant [15 x i8] c"DW_AT_body_end\00", align 1
@.str.512 = private unnamed_addr constant [17 x i8] c"DW_AT_GNU_vector\00", align 1
@.str.513 = private unnamed_addr constant [21 x i8] c"DW_AT_GNU_guarded_by\00", align 1
@.str.514 = private unnamed_addr constant [24 x i8] c"DW_AT_GNU_pt_guarded_by\00", align 1
@.str.515 = private unnamed_addr constant [18 x i8] c"DW_AT_GNU_guarded\00", align 1
@.str.516 = private unnamed_addr constant [21 x i8] c"DW_AT_GNU_pt_guarded\00", align 1
@.str.517 = private unnamed_addr constant [25 x i8] c"DW_AT_GNU_locks_excluded\00", align 1
@.str.518 = private unnamed_addr constant [35 x i8] c"DW_AT_GNU_exclusive_locks_required\00", align 1
@.str.519 = private unnamed_addr constant [32 x i8] c"DW_AT_GNU_shared_locks_required\00", align 1
@.str.520 = private unnamed_addr constant [24 x i8] c"DW_AT_GNU_odr_signature\00", align 1
@.str.521 = private unnamed_addr constant [24 x i8] c"DW_AT_GNU_template_name\00", align 1
@.str.522 = private unnamed_addr constant [28 x i8] c"DW_AT_VMS_rtnbeg_pd_address\00", align 1
@.str.523 = private unnamed_addr constant [16 x i8] c"DW_AT_<unknown>\00", align 1
@.str.524 = private unnamed_addr constant [13 x i8] c".debug_types\00", align 1
@.str.526 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.527 = private unnamed_addr constant [15 x i8] c"Type Signature\00", align 1
@.str.528 = private unnamed_addr constant [19 x i8] c"Offset to Type DIE\00", align 1
@.str.529 = private unnamed_addr constant [14 x i8] c"(abbrev code)\00", align 1
@.str.530 = private unnamed_addr constant [10 x i8] c"(TAG: %s)\00", align 1
@.str.531 = private unnamed_addr constant [16 x i8] c"DW_children_yes\00", align 1
@.str.532 = private unnamed_addr constant [15 x i8] c"DW_children_no\00", align 1
@.str.533 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.534 = private unnamed_addr constant [13 x i8] c"DW_FORM_addr\00", align 1
@.str.535 = private unnamed_addr constant [15 x i8] c"DW_FORM_block2\00", align 1
@.str.536 = private unnamed_addr constant [15 x i8] c"DW_FORM_block4\00", align 1
@.str.537 = private unnamed_addr constant [14 x i8] c"DW_FORM_data2\00", align 1
@.str.538 = private unnamed_addr constant [14 x i8] c"DW_FORM_data4\00", align 1
@.str.539 = private unnamed_addr constant [14 x i8] c"DW_FORM_data8\00", align 1
@.str.540 = private unnamed_addr constant [15 x i8] c"DW_FORM_string\00", align 1
@.str.541 = private unnamed_addr constant [14 x i8] c"DW_FORM_block\00", align 1
@.str.542 = private unnamed_addr constant [15 x i8] c"DW_FORM_block1\00", align 1
@.str.543 = private unnamed_addr constant [14 x i8] c"DW_FORM_data1\00", align 1
@.str.544 = private unnamed_addr constant [13 x i8] c"DW_FORM_flag\00", align 1
@.str.545 = private unnamed_addr constant [14 x i8] c"DW_FORM_sdata\00", align 1
@.str.546 = private unnamed_addr constant [13 x i8] c"DW_FORM_strp\00", align 1
@.str.547 = private unnamed_addr constant [14 x i8] c"DW_FORM_udata\00", align 1
@.str.548 = private unnamed_addr constant [17 x i8] c"DW_FORM_ref_addr\00", align 1
@.str.549 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref1\00", align 1
@.str.550 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref2\00", align 1
@.str.551 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref4\00", align 1
@.str.552 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref8\00", align 1
@.str.553 = private unnamed_addr constant [18 x i8] c"DW_FORM_ref_udata\00", align 1
@.str.554 = private unnamed_addr constant [17 x i8] c"DW_FORM_indirect\00", align 1
@.str.555 = private unnamed_addr constant [19 x i8] c"DW_FORM_sec_offset\00", align 1
@.str.556 = private unnamed_addr constant [16 x i8] c"DW_FORM_exprloc\00", align 1
@.str.557 = private unnamed_addr constant [21 x i8] c"DW_FORM_flag_present\00", align 1
@.str.558 = private unnamed_addr constant [17 x i8] c"DW_FORM_ref_sig8\00", align 1
@.str.559 = private unnamed_addr constant [18 x i8] c"DW_FORM_<unknown>\00", align 1
@.str.560 = private unnamed_addr constant [28 x i8] c"Length of Public Names Info\00", align 1
@.str.561 = private unnamed_addr constant [33 x i8] c"Length of Public Type Names Info\00", align 1
@.str.562 = private unnamed_addr constant [14 x i8] c"DWARF Version\00", align 1
@.str.563 = private unnamed_addr constant [32 x i8] c"Offset of Compilation Unit Info\00", align 1
@.str.564 = private unnamed_addr constant [24 x i8] c"Compilation Unit Length\00", align 1
@.str.565 = private unnamed_addr constant [11 x i8] c"DIE offset\00", align 1
@.str.566 = private unnamed_addr constant [14 x i8] c"external name\00", align 1
@.str.567 = private unnamed_addr constant [28 x i8] c"Length of Direct Call Table\00", align 1
@.str.568 = private unnamed_addr constant [15 x i8] c"Version number\00", align 1
@.str.569 = private unnamed_addr constant [11 x i8] c"New caller\00", align 1
@.str.570 = private unnamed_addr constant [18 x i8] c"Caller DIE offset\00", align 1
@.str.571 = private unnamed_addr constant [5 x i8] c"LPOC\00", align 1
@.str.572 = private unnamed_addr constant [14 x i8] c"Point of call\00", align 1
@.str.573 = private unnamed_addr constant [18 x i8] c"Callee DIE offset\00", align 1
@.str.574 = private unnamed_addr constant [29 x i8] c"Length of Virtual Call Table\00", align 1
@.str.575 = private unnamed_addr constant [12 x i8] c"Vtable slot\00", align 1
@.str.576 = private unnamed_addr constant [30 x i8] c"Length of Address Ranges Info\00", align 1
@.str.577 = private unnamed_addr constant [16 x i8] c"Size of Address\00", align 1
@.str.578 = private unnamed_addr constant [27 x i8] c"Size of Segment Descriptor\00", align 1
@.str.579 = private unnamed_addr constant [24 x i8] c"Pad to %d byte boundary\00", align 1
@.str.580 = private unnamed_addr constant [8 x i8] c"Address\00", align 1
@.str.581 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@.str.582 = private unnamed_addr constant [12 x i8] c"Offset 0x%x\00", align 1
@.str.583 = private unnamed_addr constant [13 x i8] c"Define macro\00", align 1
@.str.584 = private unnamed_addr constant [18 x i8] c"At line number %d\00", align 1
@.str.585 = private unnamed_addr constant [10 x i8] c"The macro\00", align 1
@.str.586 = private unnamed_addr constant [15 x i8] c"Undefine macro\00", align 1
@.str.587 = private unnamed_addr constant [15 x i8] c"Start new file\00", align 1
@.str.588 = private unnamed_addr constant [29 x i8] c"Included from line number %d\00", align 1
@.str.589 = private unnamed_addr constant [8 x i8] c"file %s\00", align 1
@.str.590 = private unnamed_addr constant [9 x i8] c"End file\00", align 1
@dwarf2out_var_location.last_label = internal unnamed_addr global ptr null, align 8
@dwarf2out_var_location.last_postcall_label = internal unnamed_addr global ptr null, align 8
@dwarf2out_var_location.last_in_cold_section_p = internal unnamed_addr global i8 0, align 1
@.str.591 = private unnamed_addr constant [4 x i8] c"LVL\00", align 1
@loclabel_num = internal global i32 0, align 4
@.str.592 = private unnamed_addr constant [5 x i8] c"%s-1\00", align 1
@poc_label_num = internal global i32 0, align 4
@stderr = external local_unnamed_addr global ptr, align 8
@.str.593 = private unnamed_addr constant [14 x i8] c"DIE %4ld: %s\0A\00", align 1
@.str.594 = private unnamed_addr constant [17 x i8] c"  abbrev id: %lu\00", align 1
@.str.595 = private unnamed_addr constant [14 x i8] c" offset: %ld\0A\00", align 1
@.str.596 = private unnamed_addr constant [14 x i8] c"  signature: \00", align 1
@.str.597 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str.598 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.599 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.600 = private unnamed_addr constant [20 x i8] c"location descriptor\00", align 1
@.str.601 = private unnamed_addr constant [26 x i8] c"location list -> label:%s\00", align 1
@.str.602 = private unnamed_addr constant [11 x i8] c"range list\00", align 1
@.str.603 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.604 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.605 = private unnamed_addr constant [19 x i8] c"constant (%ld,%lu)\00", align 1
@.str.606 = private unnamed_addr constant [34 x i8] c"floating-point or vector constant\00", align 1
@.str.607 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.608 = private unnamed_addr constant [19 x i8] c"die -> signature: \00", align 1
@.str.609 = private unnamed_addr constant [17 x i8] c"die -> label: %s\00", align 1
@.str.610 = private unnamed_addr constant [11 x i8] c"die -> %ld\00", align 1
@.str.611 = private unnamed_addr constant [14 x i8] c"die -> <null>\00", align 1
@.str.612 = private unnamed_addr constant [10 x i8] c"label: %s\00", align 1
@.str.613 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str.614 = private unnamed_addr constant [7 x i8] c"<null>\00", align 1
@.str.615 = private unnamed_addr constant [10 x i8] c"\22%s\22 (%d)\00", align 1
@print_indent = internal unnamed_addr global i32 0, align 4
@.str.616 = private unnamed_addr constant [4 x i8] c"%*s\00", align 1
@gt_ggc_r_gt_dwarf2out_h = dso_local local_unnamed_addr constant [48 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @tmpl_value_parm_die_table, i64 1, i64 8, ptr @gt_ggc_mx_VEC_die_arg_entry_gc, ptr @gt_pch_nx_VEC_die_arg_entry_gc }, %struct.ggc_root_tab { ptr @file_table_last_lookup, i64 1, i64 8, ptr @gt_ggc_mx_dwarf_file_data, ptr @gt_pch_nx_dwarf_file_data }, %struct.ggc_root_tab { ptr @last_emitted_file, i64 1, i64 8, ptr @gt_ggc_mx_dwarf_file_data, ptr @gt_pch_nx_dwarf_file_data }, %struct.ggc_root_tab { ptr @vcall_insn_table, i64 1, i64 8, ptr @gt_ggc_m_P10vcall_insn4htab, ptr @gt_pch_n_P10vcall_insn4htab }, %struct.ggc_root_tab { ptr @vcall_table, i64 1, i64 8, ptr @gt_ggc_mx_VEC_vcall_entry_gc, ptr @gt_pch_nx_VEC_vcall_entry_gc }, %struct.ggc_root_tab { ptr @dcall_table, i64 1, i64 8, ptr @gt_ggc_mx_VEC_dcall_entry_gc, ptr @gt_pch_nx_VEC_dcall_entry_gc }, %struct.ggc_root_tab { ptr @ranges_by_label, i64 1, i64 8, ptr @gt_ggc_ma_ranges_by_label, ptr @gt_pch_na_ranges_by_label }, %struct.ggc_root_tab { ptr @ranges_table, i64 1, i64 8, ptr @gt_ggc_ma_ranges_table, ptr @gt_pch_na_ranges_table }, %struct.ggc_root_tab { ptr @arange_table, i64 1, i64 8, ptr @gt_ggc_ma_arange_table, ptr @gt_pch_na_arange_table }, %struct.ggc_root_tab { ptr @pubtype_table, i64 1, i64 8, ptr @gt_ggc_mx_VEC_pubname_entry_gc, ptr @gt_pch_nx_VEC_pubname_entry_gc }, %struct.ggc_root_tab { ptr @pubname_table, i64 1, i64 8, ptr @gt_ggc_mx_VEC_pubname_entry_gc, ptr @gt_pch_nx_VEC_pubname_entry_gc }, %struct.ggc_root_tab { ptr @separate_line_info_table, i64 1, i64 8, ptr @gt_ggc_ma_separate_line_info_table, ptr @gt_pch_na_separate_line_info_table }, %struct.ggc_root_tab { ptr @line_info_table, i64 1, i64 8, ptr @gt_ggc_ma_line_info_table, ptr @gt_pch_na_line_info_table }, %struct.ggc_root_tab { ptr @abbrev_die_table, i64 1, i64 8, ptr @gt_ggc_ma_abbrev_die_table, ptr @gt_pch_na_abbrev_die_table }, %struct.ggc_root_tab { ptr @decl_loc_table, i64 1, i64 8, ptr @gt_ggc_m_P16var_loc_list_def4htab, ptr @gt_pch_n_P16var_loc_list_def4htab }, %struct.ggc_root_tab { ptr @common_block_die_table, i64 1, i64 8, ptr @gt_ggc_m_P10die_struct4htab, ptr @gt_pch_n_P10die_struct4htab }, %struct.ggc_root_tab { ptr @decl_die_table, i64 1, i64 8, ptr @gt_ggc_m_P10die_struct4htab, ptr @gt_pch_n_P10die_struct4htab }, %struct.ggc_root_tab { ptr @file_table, i64 1, i64 8, ptr @gt_ggc_m_P15dwarf_file_data4htab, ptr @gt_pch_n_P15dwarf_file_data4htab }, %struct.ggc_root_tab { ptr @deferred_asm_name, i64 1, i64 8, ptr @gt_ggc_mx_limbo_die_struct, ptr @gt_pch_nx_limbo_die_struct }, %struct.ggc_root_tab { ptr @limbo_die_list, i64 1, i64 8, ptr @gt_ggc_mx_limbo_die_struct, ptr @gt_pch_nx_limbo_die_struct }, %struct.ggc_root_tab { ptr @comdat_type_list, i64 1, i64 8, ptr @gt_ggc_mx_comdat_type_struct, ptr @gt_pch_nx_comdat_type_struct }, %struct.ggc_root_tab { ptr @comp_unit_die, i64 1, i64 8, ptr @gt_ggc_mx_die_struct, ptr @gt_pch_nx_die_struct }, %struct.ggc_root_tab { ptr @deferred_locations_list, i64 1, i64 8, ptr @gt_ggc_mx_VEC_deferred_locations_gc, ptr @gt_pch_nx_VEC_deferred_locations_gc }, %struct.ggc_root_tab { ptr @regs_saved_in_regs, i64 4, i64 16, ptr @gt_ggc_mx_rtx_def, ptr @gt_pch_nx_rtx_def }, %struct.ggc_root_tab { ptr getelementptr (i8, ptr @regs_saved_in_regs, i64 8), i64 4, i64 16, ptr @gt_ggc_mx_rtx_def, ptr @gt_pch_nx_rtx_def }, %struct.ggc_root_tab { ptr @queued_reg_saves, i64 1, i64 8, ptr @gt_ggc_mx_queued_reg_save, ptr @gt_pch_nx_queued_reg_save }, %struct.ggc_root_tab { ptr @cold_text_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_str_hash, i64 1, i64 8, ptr @gt_ggc_m_P20indirect_string_node4htab, ptr @gt_pch_n_P20indirect_string_node4htab }, %struct.ggc_root_tab { ptr @cie_cfi_head, i64 1, i64 8, ptr @gt_ggc_mx_dw_cfi_struct, ptr @gt_pch_nx_dw_cfi_struct }, %struct.ggc_root_tab { ptr @fde_table, i64 1, i64 8, ptr @gt_ggc_ma_fde_table, ptr @gt_pch_na_fde_table }, %struct.ggc_root_tab { ptr @current_unit_personality, i64 1, i64 8, ptr @gt_ggc_mx_rtx_def, ptr @gt_pch_nx_rtx_def }, %struct.ggc_root_tab { ptr @debug_frame_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_ranges_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_str_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_vcall_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_dcall_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_pubtypes_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_pubnames_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_loc_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_line_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_macinfo_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_aranges_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_abbrev_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @debug_info_section, i64 1, i64 8, ptr @gt_ggc_mx_section, ptr @gt_pch_nx_section }, %struct.ggc_root_tab { ptr @decl_scope_table, i64 1, i64 8, ptr @gt_ggc_mx_VEC_tree_gc, ptr @gt_pch_nx_VEC_tree_gc }, %struct.ggc_root_tab { ptr @incomplete_types, i64 1, i64 8, ptr @gt_ggc_mx_VEC_tree_gc, ptr @gt_pch_nx_VEC_tree_gc }, %struct.ggc_root_tab { ptr @used_rtx_array, i64 1, i64 8, ptr @gt_ggc_mx_VEC_rtx_gc, ptr @gt_pch_nx_VEC_rtx_gc }, %struct.ggc_root_tab zeroinitializer], align 16
@separate_line_info_table = internal global ptr null, align 8
@separate_line_info_table_allocated = internal global i32 0, align 4
@gt_pch_rs_gt_dwarf2out_h = dso_local local_unnamed_addr constant [28 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @label_num, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @poc_label_num, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @loclabel_num, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @have_location_lists, i64 1, i64 1, ptr null, ptr null }, %struct.ggc_root_tab { ptr @ranges_by_label_in_use, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @ranges_by_label_allocated, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @ranges_table_in_use, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @ranges_table_allocated, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @arange_table_in_use, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @arange_table_allocated, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @separate_line_info_table_in_use, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @separate_line_info_table_allocated, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @line_info_table_in_use, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @line_info_table_allocated, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @abbrev_die_table_in_use, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @abbrev_die_table_allocated, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @num_regs_saved_in_regs, i64 1, i64 8, ptr null, ptr null }, %struct.ggc_root_tab { ptr @regs_saved_in_regs, i64 1, i64 64, ptr null, ptr null }, %struct.ggc_root_tab { ptr @cold_text_section_used, i64 1, i64 1, ptr null, ptr null }, %struct.ggc_root_tab { ptr @text_section_used, i64 1, i64 1, ptr null, ptr null }, %struct.ggc_root_tab { ptr @have_multiple_function_sections, i64 1, i64 1, ptr null, ptr null }, %struct.ggc_root_tab { ptr @dwarf2out_cfi_label_num, i64 1, i64 8, ptr null, ptr null }, %struct.ggc_root_tab { ptr @dw2_string_counter, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @debug_str_hash_forced, i64 1, i64 1, ptr null, ptr null }, %struct.ggc_root_tab { ptr @fde_table_in_use, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @fde_table_allocated, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @saved_do_cfi_asm, i64 1, i64 1, ptr null, ptr null }, %struct.ggc_root_tab zeroinitializer], align 16
@separate_line_info_table_in_use = internal global i32 0, align 4
@reltable.dwarf_stack_op_name = private unnamed_addr constant [239 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.7 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.8 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.9 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.10 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.11 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.12 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.13 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.14 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.15 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.16 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.17 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.18 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.19 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.20 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.21 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.22 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.23 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.24 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.25 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.26 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.27 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.28 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.29 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.30 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.31 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.32 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.33 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.34 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.35 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.36 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.37 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.38 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.39 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.40 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.41 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.42 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.43 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.44 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.45 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.46 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.47 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.48 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.49 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.50 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.51 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.52 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.53 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.54 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.55 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.56 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.57 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.58 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.59 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.60 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.61 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.62 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.63 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.64 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.65 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.66 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.67 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.68 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.69 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.70 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.71 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.72 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.73 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.74 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.75 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.76 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.77 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.78 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.79 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.80 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.81 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.82 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.83 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.84 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.85 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.86 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.87 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.88 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.89 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.90 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.91 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.92 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.93 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.94 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.95 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.96 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.97 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.98 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.99 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.100 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.101 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.102 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.103 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.104 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.105 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.106 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.107 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.108 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.109 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.110 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.111 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.112 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.113 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.114 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.115 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.116 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.117 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.118 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.119 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.120 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.121 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.122 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.123 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.124 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.125 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.126 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.127 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.128 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.129 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.130 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.131 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.132 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.133 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.134 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.135 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.136 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.137 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.138 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.139 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.140 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.141 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.142 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.143 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.144 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.145 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.146 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.147 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.148 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.149 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.150 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.151 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.152 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.153 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.154 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.155 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.158 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.159 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.160 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.156 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.157 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.161 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.164 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.162 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.163 to i64), i64 ptrtoint (ptr @reltable.dwarf_stack_op_name to i64)) to i32)], align 4
@reltable.output_cfi = private unnamed_addr constant [48 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.221 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.222 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.223 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.224 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.225 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.226 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.227 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.228 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.229 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.230 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.231 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.232 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.233 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.234 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.235 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.236 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.237 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.238 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.239 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.240 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.241 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.245 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.242 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.243 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.244 to i64), i64 ptrtoint (ptr @reltable.output_cfi to i64)) to i32)], align 4
@reltable.dwarf2out_finish = private unnamed_addr constant [32 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.534 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.559 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.535 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.536 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.537 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.538 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.539 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.540 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.541 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.542 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.543 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.544 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.545 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.546 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.547 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.548 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.549 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.550 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.551 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.552 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.553 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.554 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.555 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.556 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.557 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.559 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.559 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.559 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.559 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.559 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.559 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.558 to i64), i64 ptrtoint (ptr @reltable.dwarf2out_finish to i64)) to i32)], align 4
@switch.table.value_format = private unnamed_addr constant [8 x i32] [i32 11, i32 5, i32 11, i32 6, i32 11, i32 11, i32 11, i32 7], align 4

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @vprintf(ptr noalias nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = load ptr, ptr @stdout, align 8, !tbaa !6
  %4 = tail call i32 @vfprintf(ptr noundef %3, ptr noundef %0, ptr noundef %1)
  ret i32 %4
}

; Function Attrs: nofree nounwind
declare noundef i32 @vfprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !6
  %2 = tail call i32 @getc(ptr noundef %1)
  ret i32 %2
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fgetc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #31
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

declare i32 @__uflow(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #31
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #2 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %0
  %8 = tail call i32 @__uflow(ptr noundef nonnull %1) #31
  br label %13

9:                                                ; preds = %0
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @putchar(i32 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !6
  %3 = tail call i32 @putc(i32 noundef %0, ptr noundef %2)
  ret i32 %3
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fputc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #31
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

declare i32 @__overflow(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #31
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putchar_unlocked(i32 noundef %0) local_unnamed_addr #2 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %1
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %2, i32 noundef %9) #31
  br label %15

11:                                               ; preds = %1
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @getline(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #2 {
  %4 = tail call i64 @__getdelim(ptr noundef %0, ptr noundef %1, i32 noundef 10, ptr noundef %2) #31
  ret i64 %4
}

declare i64 @__getdelim(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @feof_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = lshr i32 %2, 4
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ferror_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = lshr i32 %2, 5
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @tolower(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_tolower_loc() #31
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !21
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_tolower_loc() local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @toupper(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_toupper_loc() #31
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !21
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_toupper_loc() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @atoi(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #31
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

declare i64 @__isoc23_strtol(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atol(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #31
  ret i64 %2
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atoll(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtoll(ptr noundef %0, ptr noundef null, i32 noundef 10) #31
  ret i64 %2
}

declare i64 @__isoc23_strtoll(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local ptr @bsearch(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, ptr nocapture noundef readonly %4) local_unnamed_addr #2 {
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %5, %20
  %8 = phi i64 [ %22, %20 ], [ 0, %5 ]
  %9 = phi i64 [ %21, %20 ], [ %2, %5 ]
  %10 = add i64 %8, %9
  %11 = lshr i64 %10, 1
  %12 = mul i64 %11, %3
  %13 = getelementptr inbounds i8, ptr %1, i64 %12
  %14 = tail call i32 %4(ptr noundef %0, ptr noundef %13) #31
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 1
  br label %20

20:                                               ; preds = %7, %18
  %21 = phi i64 [ %9, %18 ], [ %11, %7 ]
  %22 = phi i64 [ %19, %18 ], [ %8, %7 ]
  %23 = icmp ult i64 %22, %21
  br i1 %23, label %7, label %24, !llvm.loop !22

24:                                               ; preds = %16, %20, %5
  %25 = phi ptr [ null, %5 ], [ null, %20 ], [ %13, %16 ]
  ret ptr %25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable
define dso_local nofpclass(nan inf) double @atof(ptr nocapture noundef readonly %0) local_unnamed_addr #7 {
  %2 = tail call fast nofpclass(nan inf) double @strtod(ptr nocapture noundef %0, ptr noundef null)
  ret double %2
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare nofpclass(nan inf) double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local i32 @dwarf2out_do_frame() local_unnamed_addr #9 {
  %1 = load i32, ptr @write_symbols, align 4
  %2 = icmp eq i32 %1, 3
  %3 = icmp eq i32 %1, 6
  %4 = or i1 %2, %3
  %5 = load i8, ptr @saved_do_cfi_asm, align 1
  %6 = icmp ne i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6
  %8 = load i32, ptr @flag_unwind_tables, align 4
  %9 = icmp ne i32 %8, 0
  %10 = select i1 %7, i1 true, i1 %9
  %11 = load i32, ptr @flag_exceptions, align 4
  %12 = icmp ne i32 %11, 0
  %13 = select i1 %10, i1 true, i1 %12
  %14 = zext i1 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @dwarf2out_do_cfi_asm() local_unnamed_addr #10 {
  %1 = load i32, ptr @flag_dwarf2_cfi_asm, align 4, !tbaa !21
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %34, label %3

3:                                                ; preds = %0
  %4 = load i32, ptr @write_symbols, align 4
  %5 = icmp ne i32 %4, 3
  %6 = icmp ne i32 %4, 6
  %7 = and i1 %5, %6
  %8 = load i8, ptr @saved_do_cfi_asm, align 1
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %7, i1 %9, i1 false
  %11 = load i32, ptr @flag_unwind_tables, align 4
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %10, i1 %12, i1 false
  %14 = load i32, ptr @flag_exceptions, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false
  %17 = xor i1 %9, true
  %18 = select i1 %16, i1 true, i1 %17
  %19 = xor i1 %16, true
  %20 = zext i1 %19 to i32
  br i1 %18, label %34, label %21

21:                                               ; preds = %3
  %22 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 2, i32 noundef 1) #31
  %23 = and i32 %22, 112
  switch i32 %23, label %34 [
    i32 0, label %24
    i32 16, label %24
  ]

24:                                               ; preds = %21, %21
  %25 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 0, i32 noundef 0) #31
  %26 = and i32 %25, 112
  switch i32 %26, label %34 [
    i32 0, label %27
    i32 16, label %27
  ]

27:                                               ; preds = %24, %24
  %28 = load i32, ptr @flag_unwind_tables, align 4, !tbaa !21
  %29 = icmp ne i32 %28, 0
  %30 = load i32, ptr @flag_exceptions, align 4
  %31 = icmp ne i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  store i8 1, ptr @saved_do_cfi_asm, align 1, !tbaa !17
  br label %34

34:                                               ; preds = %3, %27, %24, %21, %0, %33
  %35 = phi i32 [ 1, %33 ], [ %20, %3 ], [ 0, %0 ], [ 0, %21 ], [ 0, %24 ], [ 0, %27 ]
  ret i32 %35
}

declare i32 @asm_preferred_eh_data_format(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @expand_builtin_dwarf_sp_column() local_unnamed_addr #10 {
  %1 = load i32, ptr getelementptr inbounds ([53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 7), align 4, !tbaa !21
  %2 = zext i32 %1 to i64
  %3 = tail call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %2) #31
  ret ptr %3
}

declare ptr @gen_rtx_CONST_INT(i32 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @expand_builtin_init_dwarf_reg_sizes(ptr noundef %0) local_unnamed_addr #10 {
  %2 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %3 = load i64, ptr %2, align 8
  %4 = and i64 %3, 65535
  %5 = icmp eq i64 %4, 14
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = tail call i32 @vector_type_mode(ptr noundef nonnull %2) #31
  br label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 6
  %10 = load i32, ptr %9, align 4
  %11 = lshr i32 %10, 16
  %12 = and i32 %11, 255
  br label %13

13:                                               ; preds = %8, %6
  %14 = phi i32 [ %7, %6 ], [ %12, %8 ]
  %15 = tail call ptr @expand_expr_real(ptr noundef %0, ptr noundef null, i32 noundef 0, i32 noundef 0, ptr noundef null) #31
  %16 = tail call ptr @gen_rtx_MEM(i32 noundef 1, ptr noundef %15) #31
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %17
  br label %19

19:                                               ; preds = %13, %46
  %20 = phi i64 [ 0, %13 ], [ %48, %46 ]
  %21 = phi i8 [ 0, %13 ], [ %47, %46 ]
  %22 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !21
  %24 = icmp slt i32 %23, 17
  br i1 %24, label %25, label %46

25:                                               ; preds = %19
  %26 = load i8, ptr %18, align 1, !tbaa !17
  %27 = zext i8 %26 to i32
  %28 = mul nsw i32 %23, %27
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [53 x i32], ptr @reg_raw_mode, i64 0, i64 %20
  %31 = load i32, ptr %30, align 4, !tbaa !17
  %32 = icmp eq i32 %23, 8
  br i1 %32, label %33, label %35

33:                                               ; preds = %25
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %33, %25
  %36 = phi i8 [ %21, %25 ], [ 1, %33 ]
  %37 = icmp slt i32 %28, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %35
  %39 = zext i32 %31 to i64
  %40 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !17
  %42 = zext i8 %41 to i64
  %43 = tail call ptr @adjust_address_1(ptr noundef %16, i32 noundef %14, i64 noundef %29, i32 noundef 1, i32 noundef 1) #31
  %44 = tail call ptr @gen_int_mode(i64 noundef %42, i32 noundef %14) #31
  %45 = tail call ptr @emit_move_insn(ptr noundef %43, ptr noundef %44) #31
  br label %46

46:                                               ; preds = %38, %33, %35, %19
  %47 = phi i8 [ %21, %19 ], [ %36, %38 ], [ %21, %33 ], [ %36, %35 ]
  %48 = add nuw nsw i64 %20, 1
  %49 = icmp eq i64 %48, 53
  br i1 %49, label %50, label %19, !llvm.loop !24

50:                                               ; preds = %46
  %51 = icmp eq i8 %47, 0
  br i1 %51, label %52, label %61

52:                                               ; preds = %50
  %53 = load i8, ptr %18, align 1, !tbaa !17
  %54 = zext i8 %53 to i64
  %55 = shl nuw nsw i64 %54, 3
  %56 = load i8, ptr getelementptr inbounds ([87 x i8], ptr @mode_size, i64 0, i64 16), align 16, !tbaa !17
  %57 = zext i8 %56 to i64
  %58 = tail call ptr @adjust_address_1(ptr noundef %16, i32 noundef %14, i64 noundef %55, i32 noundef 1, i32 noundef 1) #31
  %59 = tail call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %57) #31
  %60 = tail call ptr @emit_move_insn(ptr noundef %58, ptr noundef %59) #31
  br label %61

61:                                               ; preds = %52, %50
  %62 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 65), align 8, !tbaa !25
  tail call void %62(ptr noundef %0) #31
  ret void
}

declare i32 @vector_type_mode(ptr noundef) local_unnamed_addr #3

declare ptr @gen_rtx_MEM(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @emit_move_insn(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @adjust_address_1(ptr noundef, i32 noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @gen_int_mode(i64 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @expand_expr_real(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local nonnull ptr @dwarf2out_cfi_label(i8 noundef zeroext %0) local_unnamed_addr #10 {
  %2 = icmp eq i8 %0, 0
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) @dwarf2out_cfi_label.label, ptr noundef nonnull align 1 dereferenceable(16) @.str, i64 16, i1 false)
  br label %15

7:                                                ; preds = %1, %3
  %8 = load i64, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %9 = add i64 %8, 1
  store i64 %9, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %10 = trunc i64 %8 to i32
  %11 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @dwarf2out_cfi_label.label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.2, i32 noundef %10)
  %12 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %12, ptr noundef nonnull @dwarf2out_cfi_label.label) #31
  %13 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %14 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %13)
  br label %15

15:                                               ; preds = %7, %6
  ret ptr @dwarf2out_cfi_label.label
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

declare void @assemble_name(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_def_cfa(ptr noundef %0, i32 noundef %1, i64 noundef %2) local_unnamed_addr #10 {
  %4 = alloca %struct.cfa_loc, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #31
  %5 = getelementptr inbounds %struct.cfa_loc, ptr %4, i64 0, i32 3
  store i8 0, ptr %5, align 4
  %6 = getelementptr inbounds %struct.cfa_loc, ptr %4, i64 0, i32 1
  store i64 0, ptr %6, align 8, !tbaa !39
  %7 = getelementptr inbounds %struct.cfa_loc, ptr %4, i64 0, i32 2
  store i32 %1, ptr %7, align 8, !tbaa !41
  store i64 %2, ptr %4, align 8, !tbaa !42
  call fastcc void @def_cfa_1(ptr noundef %0, ptr noundef nonnull %4)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @def_cfa_1(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #10 {
  %3 = alloca %struct.cfa_loc, align 8
  %4 = alloca %struct.cfa_loc, align 8
  %5 = alloca %struct.cfa_loc, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @cfa, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !tbaa.struct !43
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !tbaa.struct !43
  %6 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8, !tbaa !41
  %7 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 2
  %8 = load i32, ptr %7, align 8, !tbaa !41
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 3
  %12 = load i8, ptr %11, align 4
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = load i64, ptr %5, align 8, !tbaa !42
  store i64 %16, ptr @cfa_store, align 8, !tbaa !42
  br label %17

17:                                               ; preds = %15, %10, %2
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !21
  store i32 %20, ptr %7, align 8, !tbaa !41
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #31
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %21 = getelementptr inbounds %struct.cfa_loc, ptr %4, i64 0, i32 2
  store i32 -1, ptr %21, align 8, !tbaa !41
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !43
  %22 = load ptr, ptr @cie_cfi_head, align 8, !tbaa !6
  %23 = icmp eq ptr %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %17, %24
  %25 = phi ptr [ %26, %24 ], [ %22, %17 ]
  call fastcc void @lookup_cfa_1(ptr noundef nonnull %25, ptr noundef nonnull %4, ptr noundef nonnull %3)
  %26 = load ptr, ptr %25, align 8, !tbaa !6
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %24, !llvm.loop !44

28:                                               ; preds = %24, %17
  %29 = load i32, ptr @fde_table_in_use, align 4
  %30 = icmp eq i32 %29, 0
  %31 = load ptr, ptr @fde_table, align 8
  %32 = icmp eq ptr %31, null
  %33 = select i1 %30, i1 true, i1 %32
  br i1 %33, label %44, label %34

34:                                               ; preds = %28
  %35 = add i32 %29, -1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %struct.dw_fde_struct, ptr %31, i64 %36, i32 8
  %38 = load ptr, ptr %37, align 8, !tbaa !6
  %39 = icmp eq ptr %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %34, %40
  %41 = phi ptr [ %42, %40 ], [ %38, %34 ]
  call fastcc void @lookup_cfa_1(ptr noundef nonnull %41, ptr noundef nonnull %4, ptr noundef nonnull %3)
  %42 = load ptr, ptr %41, align 8, !tbaa !6
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %40, !llvm.loop !45

44:                                               ; preds = %40, %28, %34
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #31
  %45 = load i32, ptr %21, align 8
  %46 = icmp eq i32 %20, %45
  br i1 %46, label %47, label %67

47:                                               ; preds = %44
  %48 = load i64, ptr %5, align 8, !tbaa !42
  %49 = load i64, ptr %4, align 8, !tbaa !42
  %50 = icmp eq i64 %48, %49
  br i1 %50, label %51, label %67

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 3
  %53 = load i8, ptr %52, align 4
  %54 = and i8 %53, 1
  %55 = getelementptr inbounds %struct.cfa_loc, ptr %4, i64 0, i32 3
  %56 = load i8, ptr %55, align 4
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %54, %57
  br i1 %58, label %59, label %67

59:                                               ; preds = %51
  %60 = icmp eq i8 %54, 0
  br i1 %60, label %107, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !39
  %64 = getelementptr inbounds %struct.cfa_loc, ptr %4, i64 0, i32 1
  %65 = load i64, ptr %64, align 8, !tbaa !39
  %66 = icmp eq i64 %63, %65
  br i1 %66, label %107, label %67

67:                                               ; preds = %44, %47, %51, %61
  %68 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %68, align 8, !tbaa !46
  %69 = getelementptr inbounds %struct.dw_cfi_struct, ptr %68, i64 0, i32 2
  store i32 0, ptr %69, align 8, !tbaa !17
  %70 = getelementptr inbounds %struct.dw_cfi_struct, ptr %68, i64 0, i32 3
  store i32 0, ptr %70, align 8, !tbaa !17
  br i1 %46, label %73, label %71

71:                                               ; preds = %67
  %72 = load i64, ptr %5, align 8, !tbaa !42
  br label %83

73:                                               ; preds = %67
  %74 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 3
  %75 = load i8, ptr %74, align 4
  %76 = and i8 %75, 1
  %77 = icmp eq i8 %76, 0
  %78 = load i64, ptr %5, align 8, !tbaa !42
  br i1 %77, label %79, label %83

79:                                               ; preds = %73
  %80 = icmp slt i64 %78, 0
  %81 = select i1 %80, i32 19, i32 14
  %82 = getelementptr inbounds %struct.dw_cfi_struct, ptr %68, i64 0, i32 1
  store i32 %81, ptr %82, align 8
  store i64 %78, ptr %69, align 8, !tbaa !17
  br label %106

83:                                               ; preds = %71, %73
  %84 = phi i64 [ %72, %71 ], [ %78, %73 ]
  %85 = load i64, ptr %4, align 8, !tbaa !42
  %86 = icmp eq i64 %84, %85
  %87 = icmp ne i32 %45, -1
  %88 = and i1 %87, %86
  %89 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 3
  %90 = load i8, ptr %89, align 4
  %91 = and i8 %90, 1
  %92 = icmp eq i8 %91, 0
  %93 = select i1 %88, i1 %92, i1 false
  br i1 %93, label %94, label %96

94:                                               ; preds = %83
  %95 = getelementptr inbounds %struct.dw_cfi_struct, ptr %68, i64 0, i32 1
  store i32 13, ptr %95, align 8, !tbaa !48
  store i32 %20, ptr %69, align 8, !tbaa !17
  br label %106

96:                                               ; preds = %83
  %97 = and i8 %90, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = icmp slt i64 %84, 0
  %101 = select i1 %100, i32 18, i32 12
  %102 = getelementptr inbounds %struct.dw_cfi_struct, ptr %68, i64 0, i32 1
  store i32 %101, ptr %102, align 8
  store i32 %20, ptr %69, align 8, !tbaa !17
  store i64 %84, ptr %70, align 8, !tbaa !17
  br label %106

103:                                              ; preds = %96
  %104 = getelementptr inbounds %struct.dw_cfi_struct, ptr %68, i64 0, i32 1
  store i32 15, ptr %104, align 8, !tbaa !48
  %105 = call fastcc ptr @build_cfa_loc(ptr noundef nonnull %5)
  store ptr %105, ptr %69, align 8, !tbaa !17
  br label %106

106:                                              ; preds = %94, %103, %99, %79
  tail call fastcc void @add_fde_cfi(ptr noundef %0, ptr noundef nonnull %68)
  br label %107

107:                                              ; preds = %59, %61, %106
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #31
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #11

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @build_cfa_loc(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %3 = load i64, ptr %0, align 8, !tbaa !42
  %4 = getelementptr inbounds %struct.cfa_loc, ptr %0, i64 0, i32 3
  %5 = load i8, ptr %4, align 4
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %struct.cfa_loc, ptr %0, i64 0, i32 2
  %9 = load i32, ptr %8, align 8, !tbaa !41
  br i1 %7, label %64, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.cfa_loc, ptr %0, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !39
  %13 = icmp ult i32 %9, 32
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %16 = trunc i32 %9 to i16
  %17 = add nuw nsw i16 %16, 112
  br label %21

18:                                               ; preds = %10
  %19 = zext i32 %9 to i64
  %20 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi i16 [ 146, %18 ], [ %17, %14 ]
  %23 = phi ptr [ %20, %18 ], [ %15, %14 ]
  %24 = phi i64 [ %19, %18 ], [ %12, %14 ]
  %25 = phi i64 [ %12, %18 ], [ 0, %14 ]
  %26 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %23, i64 0, i32 1
  %27 = load i16, ptr %26, align 8
  %28 = and i16 %27, -256
  %29 = or i16 %28, %22
  store i16 %29, ptr %26, align 8
  %30 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %23, i64 0, i32 3
  %31 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %23, i64 0, i32 3, i32 1
  store i64 %24, ptr %31, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %23, i64 0, i32 4
  store i32 6, ptr %32, align 8, !tbaa !49
  %33 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %23, i64 0, i32 4, i32 1
  store i64 %25, ptr %33, align 8, !tbaa !17
  store ptr %23, ptr %2, align 8, !tbaa !6
  store i32 5, ptr %30, align 8, !tbaa !52
  %34 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %35 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %34, i64 0, i32 1
  %36 = load i16, ptr %35, align 8
  %37 = and i16 %36, -256
  %38 = or i16 %37, 6
  store i16 %38, ptr %35, align 8
  %39 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %34, i64 0, i32 3
  store i32 6, ptr %39, align 8, !tbaa !52
  %40 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %34, i64 0, i32 3, i32 1
  store i64 0, ptr %40, align 8, !tbaa !17
  %41 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %34, i64 0, i32 4
  store i32 6, ptr %41, align 8, !tbaa !49
  %42 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %34, i64 0, i32 4, i32 1
  store i64 0, ptr %42, align 8, !tbaa !17
  br label %43

43:                                               ; preds = %43, %21
  %44 = phi ptr [ %2, %21 ], [ %45, %43 ]
  %45 = load ptr, ptr %44, align 8, !tbaa !6
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %43, !llvm.loop !53

47:                                               ; preds = %43
  store ptr %34, ptr %44, align 8, !tbaa !6
  %48 = icmp eq i64 %3, 0
  br i1 %48, label %86, label %49

49:                                               ; preds = %47
  %50 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %51 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %50, i64 0, i32 1
  %52 = load i16, ptr %51, align 8
  %53 = and i16 %52, -256
  %54 = or i16 %53, 35
  store i16 %54, ptr %51, align 8
  %55 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %50, i64 0, i32 3
  store i32 6, ptr %55, align 8, !tbaa !52
  %56 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %50, i64 0, i32 3, i32 1
  store i64 %3, ptr %56, align 8, !tbaa !17
  %57 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %50, i64 0, i32 4
  store i32 6, ptr %57, align 8, !tbaa !49
  %58 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %50, i64 0, i32 4, i32 1
  store i64 0, ptr %58, align 8, !tbaa !17
  br label %59

59:                                               ; preds = %59, %49
  %60 = phi ptr [ %2, %49 ], [ %61, %59 ]
  %61 = load ptr, ptr %60, align 8, !tbaa !6
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %59, !llvm.loop !53

63:                                               ; preds = %59
  store ptr %50, ptr %60, align 8, !tbaa !6
  br label %86

64:                                               ; preds = %1
  %65 = icmp ult i32 %9, 32
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %68 = trunc i32 %9 to i16
  %69 = add nuw nsw i16 %68, 112
  br label %73

70:                                               ; preds = %64
  %71 = zext i32 %9 to i64
  %72 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %73

73:                                               ; preds = %66, %70
  %74 = phi i16 [ 146, %70 ], [ %69, %66 ]
  %75 = phi ptr [ %72, %70 ], [ %67, %66 ]
  %76 = phi i64 [ %71, %70 ], [ %3, %66 ]
  %77 = phi i64 [ %3, %70 ], [ 0, %66 ]
  %78 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 1
  %79 = load i16, ptr %78, align 8
  %80 = and i16 %79, -256
  %81 = or i16 %80, %74
  store i16 %81, ptr %78, align 8
  %82 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 3
  store i32 6, ptr %82, align 8, !tbaa !52
  %83 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 3, i32 1
  store i64 %76, ptr %83, align 8, !tbaa !17
  %84 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 4
  store i32 6, ptr %84, align 8, !tbaa !49
  %85 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 4, i32 1
  store i64 %77, ptr %85, align 8, !tbaa !17
  store ptr %75, ptr %2, align 8, !tbaa !6
  br label %86

86:                                               ; preds = %47, %63, %73
  %87 = load ptr, ptr %2, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret ptr %87
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_fde_cfi(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = load i1, ptr @emit_cfa_remember, align 1
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  store i1 false, ptr @emit_cfa_remember, align 1
  %5 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %5, align 8, !tbaa !46
  %6 = getelementptr inbounds %struct.dw_cfi_struct, ptr %5, i64 0, i32 2
  store i32 0, ptr %6, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.dw_cfi_struct, ptr %5, i64 0, i32 3
  store i32 0, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.dw_cfi_struct, ptr %5, i64 0, i32 1
  store i32 10, ptr %8, align 8, !tbaa !48
  tail call fastcc void @add_fde_cfi(ptr noundef %0, ptr noundef nonnull %5)
  br label %9

9:                                                ; preds = %4, %2
  %10 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %11 = icmp eq i32 %10, 0
  %12 = icmp eq ptr %0, null
  br i1 %11, label %71, label %13

13:                                               ; preds = %9
  br i1 %12, label %122, label %14

14:                                               ; preds = %13
  %15 = load i32, ptr @fde_table_in_use, align 4
  %16 = icmp eq i32 %15, 0
  %17 = load ptr, ptr @fde_table, align 8
  %18 = add i32 %15, -1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.dw_fde_struct, ptr %17, i64 %19
  %21 = select i1 %16, ptr null, ptr %20
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 821, ptr noundef nonnull @.str.5) #31
  br label %24

24:                                               ; preds = %14, %23
  %25 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %26 = icmp eq i32 %25, 2
  %27 = load i32, ptr @debug_info_level, align 4
  %28 = icmp ugt i32 %27, 1
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %30, label %69

30:                                               ; preds = %24
  %31 = load i32, ptr @write_symbols, align 4
  switch i32 %31, label %69 [
    i32 6, label %32
    i32 3, label %32
  ]

32:                                               ; preds = %30, %30
  %33 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1, i64 0, i32 1
  %34 = load i32, ptr %33, align 8, !tbaa !48
  switch i32 %34, label %69 [
    i32 14, label %35
    i32 19, label %35
    i32 13, label %35
    i32 12, label %35
    i32 18, label %35
    i32 15, label %35
    i32 11, label %35
  ]

35:                                               ; preds = %32, %32, %32, %32, %32, %32, %32
  %36 = load i8, ptr %0, align 1, !tbaa !17
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %0, ptr noundef nonnull dereferenceable(16) @.str)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %38, %35
  %42 = load i64, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %43 = add i64 %42, 1
  store i64 %43, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %44 = trunc i64 %42 to i32
  %45 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @dwarf2out_cfi_label.label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.2, i32 noundef %44)
  %46 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %46, ptr noundef nonnull @dwarf2out_cfi_label.label) #31
  %47 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %48 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %47)
  br label %49

49:                                               ; preds = %41, %38
  %50 = phi ptr [ @dwarf2out_cfi_label.label, %41 ], [ %0, %38 ]
  %51 = getelementptr inbounds %struct.dw_fde_struct, ptr %21, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !54
  %53 = icmp eq ptr %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %50, ptr noundef nonnull dereferenceable(1) %52)
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %54, %49
  %58 = tail call ptr @xstrdup(ptr noundef nonnull %50) #31
  %59 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %59, align 8, !tbaa !46
  %60 = getelementptr inbounds %struct.dw_cfi_struct, ptr %59, i64 0, i32 2
  %61 = getelementptr inbounds %struct.dw_cfi_struct, ptr %59, i64 0, i32 3
  store i32 0, ptr %61, align 8, !tbaa !17
  %62 = getelementptr inbounds %struct.dw_cfi_struct, ptr %59, i64 0, i32 1
  store i32 1, ptr %62, align 8, !tbaa !48
  store ptr %58, ptr %60, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.dw_fde_struct, ptr %21, i64 0, i32 8
  br label %64

64:                                               ; preds = %64, %57
  %65 = phi ptr [ %63, %57 ], [ %66, %64 ]
  %66 = load ptr, ptr %65, align 8, !tbaa !6
  %67 = icmp eq ptr %66, null
  br i1 %67, label %68, label %64, !llvm.loop !56

68:                                               ; preds = %64
  store ptr %59, ptr %65, align 8, !tbaa !6
  store ptr %58, ptr %51, align 8, !tbaa !54
  br label %69

69:                                               ; preds = %30, %68, %54, %32, %24
  tail call fastcc void @output_cfi_directive(ptr noundef %1)
  %70 = getelementptr inbounds %struct.dw_fde_struct, ptr %21, i64 0, i32 8
  br label %122

71:                                               ; preds = %9
  br i1 %12, label %122, label %72

72:                                               ; preds = %71
  %73 = load i32, ptr @fde_table_in_use, align 4
  %74 = icmp eq i32 %73, 0
  %75 = load ptr, ptr @fde_table, align 8
  %76 = add i32 %73, -1
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %struct.dw_fde_struct, ptr %75, i64 %77
  %79 = select i1 %74, ptr null, ptr %78
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %72
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 884, ptr noundef nonnull @.str.5) #31
  br label %82

82:                                               ; preds = %72, %81
  %83 = load i8, ptr %0, align 1, !tbaa !17
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %82
  %86 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %85
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) @dwarf2out_cfi_label.label, ptr noundef nonnull align 1 dereferenceable(16) @.str, i64 16, i1 false)
  br label %97

89:                                               ; preds = %85
  %90 = load i64, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %91 = add i64 %90, 1
  store i64 %91, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %92 = trunc i64 %90 to i32
  %93 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @dwarf2out_cfi_label.label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.2, i32 noundef %92)
  %94 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %94, ptr noundef nonnull @dwarf2out_cfi_label.label) #31
  %95 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %96 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %95)
  br label %97

97:                                               ; preds = %89, %88, %82
  %98 = phi ptr [ %0, %82 ], [ @dwarf2out_cfi_label.label, %88 ], [ @dwarf2out_cfi_label.label, %89 ]
  %99 = getelementptr inbounds %struct.dw_fde_struct, ptr %79, i64 0, i32 2
  %100 = load ptr, ptr %99, align 8, !tbaa !54
  %101 = icmp eq ptr %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %98, ptr noundef nonnull dereferenceable(1) %100)
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %120, label %105

105:                                              ; preds = %102, %97
  %106 = tail call ptr @xstrdup(ptr noundef nonnull %98) #31
  %107 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %107, align 8, !tbaa !46
  %108 = getelementptr inbounds %struct.dw_cfi_struct, ptr %107, i64 0, i32 2
  store i32 0, ptr %108, align 8, !tbaa !17
  %109 = getelementptr inbounds %struct.dw_cfi_struct, ptr %107, i64 0, i32 3
  store i32 0, ptr %109, align 8, !tbaa !17
  %110 = load ptr, ptr %99, align 8, !tbaa !54
  %111 = icmp eq ptr %110, null
  %112 = select i1 %111, i32 1, i32 4
  %113 = getelementptr inbounds %struct.dw_cfi_struct, ptr %107, i64 0, i32 1
  store i32 %112, ptr %113, align 8, !tbaa !48
  store ptr %106, ptr %108, align 8, !tbaa !17
  %114 = getelementptr inbounds %struct.dw_fde_struct, ptr %79, i64 0, i32 8
  br label %115

115:                                              ; preds = %115, %105
  %116 = phi ptr [ %114, %105 ], [ %117, %115 ]
  %117 = load ptr, ptr %116, align 8, !tbaa !6
  %118 = icmp eq ptr %117, null
  br i1 %118, label %119, label %115, !llvm.loop !56

119:                                              ; preds = %115
  store ptr %107, ptr %116, align 8, !tbaa !6
  store ptr %106, ptr %99, align 8, !tbaa !54
  br label %120

120:                                              ; preds = %119, %102
  %121 = getelementptr inbounds %struct.dw_fde_struct, ptr %79, i64 0, i32 8
  br label %122

122:                                              ; preds = %71, %120, %13, %69
  %123 = phi ptr [ @cie_cfi_head, %71 ], [ %121, %120 ], [ @cie_cfi_head, %13 ], [ %70, %69 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi ptr [ %126, %124 ], [ %123, %122 ]
  %126 = load ptr, ptr %125, align 8, !tbaa !6
  %127 = icmp eq ptr %126, null
  br i1 %127, label %128, label %124, !llvm.loop !56

128:                                              ; preds = %124
  store ptr %1, ptr %125, align 8, !tbaa !6
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @lookup_cfa_1(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, ptr nocapture noundef %2) unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !48
  switch i32 %5, label %80 [
    i32 14, label %6
    i32 19, label %6
    i32 13, label %9
    i32 12, label %13
    i32 18, label %13
    i32 15, label %19
    i32 10, label %62
    i32 11, label %71
  ]

6:                                                ; preds = %3, %3
  %7 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8, !tbaa !17
  store i64 %8, ptr %1, align 8, !tbaa !42
  br label %80

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 2
  store i32 %11, ptr %12, align 8, !tbaa !41
  br label %80

13:                                               ; preds = %3, %3
  %14 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 2
  store i32 %15, ptr %16, align 8, !tbaa !41
  %17 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %18 = load i64, ptr %17, align 8, !tbaa !17
  store i64 %18, ptr %1, align 8, !tbaa !42
  br label %80

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 1
  %23 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, i8 0, i64 16, i1 false)
  %24 = load i8, ptr %23, align 4
  %25 = and i8 %24, -2
  store i8 %25, ptr %23, align 4
  %26 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 2
  store i32 -1, ptr %26, align 8, !tbaa !41
  %27 = icmp eq ptr %21, null
  br i1 %27, label %80, label %28

28:                                               ; preds = %19, %59
  %29 = phi ptr [ %60, %59 ], [ %21, %19 ]
  %30 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %29, i64 0, i32 1
  %31 = load i16, ptr %30, align 8
  %32 = and i16 %31, 255
  %33 = zext i16 %32 to i32
  %34 = trunc i16 %31 to i8
  switch i8 %34, label %57 [
    i8 80, label %35
    i8 81, label %35
    i8 82, label %35
    i8 83, label %35
    i8 84, label %35
    i8 85, label %35
    i8 86, label %35
    i8 87, label %35
    i8 88, label %35
    i8 89, label %35
    i8 90, label %35
    i8 91, label %35
    i8 92, label %35
    i8 93, label %35
    i8 94, label %35
    i8 95, label %35
    i8 96, label %35
    i8 97, label %35
    i8 98, label %35
    i8 99, label %35
    i8 100, label %35
    i8 101, label %35
    i8 102, label %35
    i8 103, label %35
    i8 104, label %35
    i8 105, label %35
    i8 106, label %35
    i8 107, label %35
    i8 108, label %35
    i8 109, label %35
    i8 110, label %35
    i8 111, label %35
    i8 -112, label %37
    i8 112, label %41
    i8 113, label %41
    i8 114, label %41
    i8 115, label %41
    i8 116, label %41
    i8 117, label %41
    i8 118, label %41
    i8 119, label %41
    i8 120, label %41
    i8 121, label %41
    i8 122, label %41
    i8 123, label %41
    i8 124, label %41
    i8 125, label %41
    i8 126, label %41
    i8 127, label %41
    i8 -128, label %41
    i8 -127, label %41
    i8 -126, label %41
    i8 -125, label %41
    i8 -124, label %41
    i8 -123, label %41
    i8 -122, label %41
    i8 -121, label %41
    i8 -120, label %41
    i8 -119, label %41
    i8 -118, label %41
    i8 -117, label %41
    i8 -116, label %41
    i8 -115, label %41
    i8 -114, label %41
    i8 -113, label %41
    i8 -110, label %45
    i8 6, label %51
    i8 35, label %54
  ]

35:                                               ; preds = %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28
  %36 = add nsw i32 %33, -80
  store i32 %36, ptr %26, align 8, !tbaa !41
  br label %59

37:                                               ; preds = %28
  %38 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %29, i64 0, i32 3, i32 1
  %39 = load i64, ptr %38, align 8, !tbaa !17
  %40 = trunc i64 %39 to i32
  store i32 %40, ptr %26, align 8, !tbaa !41
  br label %59

41:                                               ; preds = %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28, %28
  %42 = add nsw i32 %33, -112
  store i32 %42, ptr %26, align 8, !tbaa !41
  %43 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %29, i64 0, i32 3, i32 1
  %44 = load i64, ptr %43, align 8, !tbaa !17
  store i64 %44, ptr %22, align 8, !tbaa !39
  br label %59

45:                                               ; preds = %28
  %46 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %29, i64 0, i32 3, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !17
  %48 = trunc i64 %47 to i32
  store i32 %48, ptr %26, align 8, !tbaa !41
  %49 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %29, i64 0, i32 4, i32 1
  %50 = load i64, ptr %49, align 8, !tbaa !17
  store i64 %50, ptr %22, align 8, !tbaa !39
  br label %59

51:                                               ; preds = %28
  %52 = load i8, ptr %23, align 4
  %53 = or i8 %52, 1
  store i8 %53, ptr %23, align 4
  br label %59

54:                                               ; preds = %28
  %55 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %29, i64 0, i32 3, i32 1
  %56 = load i64, ptr %55, align 8, !tbaa !17
  store i64 %56, ptr %1, align 8, !tbaa !42
  br label %59

57:                                               ; preds = %28
  %58 = tail call fastcc ptr @dwarf_stack_op_name(i32 noundef %33)
  tail call void (ptr, ...) @internal_error(ptr noundef nonnull @.str.6, ptr noundef nonnull %58) #31
  br label %59

59:                                               ; preds = %57, %54, %51, %45, %41, %37, %35
  %60 = load ptr, ptr %29, align 8, !tbaa !57
  %61 = icmp eq ptr %60, null
  br i1 %61, label %80, label %28, !llvm.loop !58

62:                                               ; preds = %3
  %63 = getelementptr inbounds %struct.cfa_loc, ptr %2, i64 0, i32 3
  %64 = load i8, ptr %63, align 4
  %65 = and i8 %64, 2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 939, ptr noundef nonnull @.str.5) #31
  br label %68

68:                                               ; preds = %62, %67
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !tbaa.struct !43
  %69 = load i8, ptr %63, align 4
  %70 = or i8 %69, 2
  store i8 %70, ptr %63, align 4
  br label %80

71:                                               ; preds = %3
  %72 = getelementptr inbounds %struct.cfa_loc, ptr %2, i64 0, i32 3
  %73 = load i8, ptr %72, align 4
  %74 = and i8 %73, 2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 944, ptr noundef nonnull @.str.5) #31
  br label %77

77:                                               ; preds = %71, %76
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false), !tbaa.struct !43
  %78 = load i8, ptr %72, align 4
  %79 = and i8 %78, -3
  store i8 %79, ptr %72, align 4
  br label %80

80:                                               ; preds = %59, %19, %3, %77, %68, %13, %9, %6
  ret void
}

declare void @fancy_abort(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @internal_error(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal fastcc nonnull ptr @dwarf_stack_op_name(i32 noundef %0) unnamed_addr #13 {
  %2 = add i32 %0, -3
  %3 = icmp ult i32 %2, 239
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = shl i64 %5, 2
  %7 = call ptr @llvm.load.relative.i64(ptr @reltable.dwarf_stack_op_name, i64 %6)
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi ptr [ %7, %4 ], [ @.str.164, %1 ]
  ret ptr %9
}

declare ptr @ggc_alloc_stat(i64 noundef) local_unnamed_addr #3

declare ptr @ggc_alloc_cleared_stat(i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #14

declare ptr @xstrdup(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_cfi_directive(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !48
  switch i32 %3, label %197 [
    i32 64, label %4
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 29, label %4
    i32 1, label %4
    i32 128, label %5
    i32 5, label %5
    i32 17, label %5
    i32 192, label %13
    i32 6, label %13
    i32 7, label %19
    i32 8, label %25
    i32 12, label %31
    i32 18, label %31
    i32 13, label %39
    i32 9, label %45
    i32 14, label %54
    i32 19, label %54
    i32 10, label %59
    i32 11, label %62
    i32 46, label %65
    i32 45, label %79
    i32 15, label %82
    i32 16, label %82
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3198, ptr noundef nonnull @.str.5) #31
  br label %5

5:                                                ; preds = %1, %1, %1, %4
  %6 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 8, !tbaa !17
  %8 = zext i32 %7 to i64
  %9 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %11 = load i64, ptr %10, align 8, !tbaa !17
  %12 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %9, ptr noundef nonnull @.str.165, i64 noundef %8, i64 noundef %11)
  br label %198

13:                                               ; preds = %1, %1
  %14 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !17
  %16 = zext i32 %15 to i64
  %17 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %18 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %17, ptr noundef nonnull @.str.166, i64 noundef %16)
  br label %198

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %21 = load i32, ptr %20, align 8, !tbaa !17
  %22 = zext i32 %21 to i64
  %23 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %24 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %23, ptr noundef nonnull @.str.167, i64 noundef %22)
  br label %198

25:                                               ; preds = %1
  %26 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %27 = load i32, ptr %26, align 8, !tbaa !17
  %28 = zext i32 %27 to i64
  %29 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %30 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %29, ptr noundef nonnull @.str.168, i64 noundef %28)
  br label %198

31:                                               ; preds = %1, %1
  %32 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %33 = load i32, ptr %32, align 8, !tbaa !17
  %34 = zext i32 %33 to i64
  %35 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %36 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %37 = load i64, ptr %36, align 8, !tbaa !17
  %38 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %35, ptr noundef nonnull @.str.169, i64 noundef %34, i64 noundef %37)
  br label %198

39:                                               ; preds = %1
  %40 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %41 = load i32, ptr %40, align 8, !tbaa !17
  %42 = zext i32 %41 to i64
  %43 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %44 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %43, ptr noundef nonnull @.str.170, i64 noundef %42)
  br label %198

45:                                               ; preds = %1
  %46 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %47 = load i32, ptr %46, align 8, !tbaa !17
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %50 = load i32, ptr %49, align 8, !tbaa !17
  %51 = zext i32 %50 to i64
  %52 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %53 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %52, ptr noundef nonnull @.str.171, i64 noundef %48, i64 noundef %51)
  br label %198

54:                                               ; preds = %1, %1
  %55 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %56 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %57 = load i64, ptr %56, align 8, !tbaa !17
  %58 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.172, i64 noundef %57)
  br label %198

59:                                               ; preds = %1
  %60 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %61 = tail call i64 @fwrite(ptr nonnull @.str.173, i64 21, i64 1, ptr %60)
  br label %198

62:                                               ; preds = %1
  %63 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %64 = tail call i64 @fwrite(ptr nonnull @.str.174, i64 20, i64 1, ptr %63)
  br label %198

65:                                               ; preds = %1
  %66 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %67 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %66, ptr noundef nonnull @.str.175, i32 noundef 46)
  %68 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %69 = load i64, ptr %68, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_uleb128_raw(i64 noundef %69) #31
  %70 = load i32, ptr @flag_debug_asm, align 4, !tbaa !21
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %65
  %73 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %74 = load i64, ptr %68, align 8, !tbaa !17
  %75 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %73, ptr noundef nonnull @.str.176, ptr noundef nonnull @.str.177, i64 noundef %74)
  br label %76

76:                                               ; preds = %72, %65
  %77 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %78 = tail call i32 @fputc(i32 noundef 10, ptr noundef %77)
  br label %198

79:                                               ; preds = %1
  %80 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %81 = tail call i64 @fwrite(ptr nonnull @.str.178, i64 18, i64 1, ptr %80)
  br label %198

82:                                               ; preds = %1, %1
  %83 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %84 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %83, ptr noundef nonnull @.str.175, i32 noundef %3)
  %85 = load i32, ptr %2, align 8, !tbaa !48
  %86 = icmp eq i32 %85, 16
  br i1 %86, label %87, label %93

87:                                               ; preds = %82
  %88 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %90 = load i32, ptr %89, align 8, !tbaa !17
  %91 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %88, ptr noundef nonnull @.str.179, i32 noundef %90)
  %92 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  br label %95

93:                                               ; preds = %82
  %94 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  br label %95

95:                                               ; preds = %93, %87
  %96 = phi ptr [ %92, %87 ], [ %94, %93 ]
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  %98 = icmp eq ptr %97, null
  br i1 %98, label %120, label %99

99:                                               ; preds = %95, %106
  %100 = phi i64 [ %108, %106 ], [ 0, %95 ]
  %101 = phi ptr [ %109, %106 ], [ %97, %95 ]
  %102 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 1
  %103 = load i16, ptr %102, align 8
  %104 = trunc i16 %103 to i8
  switch i8 %104, label %106 [
    i8 47, label %105
    i8 40, label %105
  ]

105:                                              ; preds = %99, %99
  br label %111

106:                                              ; preds = %99
  %107 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %101)
  %108 = add i64 %107, %100
  %109 = load ptr, ptr %101, align 8, !tbaa !57
  %110 = icmp eq ptr %109, null
  br i1 %110, label %120, label %99, !llvm.loop !59

111:                                              ; preds = %105, %111
  %112 = phi i64 [ %117, %111 ], [ 0, %105 ]
  %113 = phi ptr [ %118, %111 ], [ %97, %105 ]
  %114 = trunc i64 %112 to i32
  %115 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %113, i64 0, i32 2
  store i32 %114, ptr %115, align 4, !tbaa !60
  %116 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %113)
  %117 = add i64 %116, %112
  %118 = load ptr, ptr %113, align 8, !tbaa !57
  %119 = icmp eq ptr %118, null
  br i1 %119, label %120, label %111, !llvm.loop !61

120:                                              ; preds = %106, %111, %95
  %121 = phi i64 [ 0, %95 ], [ %117, %111 ], [ %108, %106 ]
  tail call void @dw2_asm_output_data_uleb128_raw(i64 noundef %121) #31
  br label %122

122:                                              ; preds = %191, %120
  %123 = phi ptr [ %97, %120 ], [ %192, %191 ]
  %124 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %125 = tail call i32 @fputc(i32 noundef 44, ptr noundef %124)
  %126 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %127 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 1
  %128 = load i16, ptr %127, align 8
  %129 = and i16 %128, 255
  %130 = zext i16 %129 to i32
  %131 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %126, ptr noundef nonnull @.str.180, i32 noundef %130)
  %132 = load i16, ptr %127, align 8
  %133 = trunc i16 %132 to i8
  switch i8 %133, label %191 [
    i8 3, label %134
    i8 -98, label %134
    i8 8, label %135
    i8 9, label %135
    i8 21, label %135
    i8 -108, label %135
    i8 -107, label %135
    i8 10, label %140
    i8 11, label %140
    i8 12, label %145
    i8 13, label %145
    i8 14, label %150
    i8 15, label %150
    i8 47, label %155
    i8 40, label %155
    i8 16, label %172
    i8 35, label %172
    i8 -112, label %172
    i8 -109, label %172
    i8 17, label %177
    i8 112, label %177
    i8 113, label %177
    i8 114, label %177
    i8 115, label %177
    i8 116, label %177
    i8 117, label %177
    i8 118, label %177
    i8 119, label %177
    i8 120, label %177
    i8 121, label %177
    i8 122, label %177
    i8 123, label %177
    i8 124, label %177
    i8 125, label %177
    i8 126, label %177
    i8 127, label %177
    i8 -128, label %177
    i8 -127, label %177
    i8 -126, label %177
    i8 -125, label %177
    i8 -124, label %177
    i8 -123, label %177
    i8 -122, label %177
    i8 -121, label %177
    i8 -120, label %177
    i8 -119, label %177
    i8 -118, label %177
    i8 -117, label %177
    i8 -116, label %177
    i8 -115, label %177
    i8 -114, label %177
    i8 -113, label %177
    i8 -111, label %177
    i8 -110, label %182
  ]

134:                                              ; preds = %122, %122
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 5073, ptr noundef nonnull @.str.5) #31
  br label %135

135:                                              ; preds = %134, %122, %122, %122, %122, %122
  %136 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %137 = tail call i32 @fputc(i32 noundef 44, ptr noundef %136)
  %138 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %139 = load i64, ptr %138, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_raw(i32 noundef 1, i64 noundef %139) #31
  br label %191

140:                                              ; preds = %122, %122
  %141 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %142 = tail call i32 @fputc(i32 noundef 44, ptr noundef %141)
  %143 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %144 = load i64, ptr %143, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_raw(i32 noundef 2, i64 noundef %144) #31
  br label %191

145:                                              ; preds = %122, %122
  %146 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %147 = tail call i32 @fputc(i32 noundef 44, ptr noundef %146)
  %148 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %149 = load i64, ptr %148, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_raw(i32 noundef 4, i64 noundef %149) #31
  br label %191

150:                                              ; preds = %122, %122
  %151 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %152 = tail call i32 @fputc(i32 noundef 44, ptr noundef %151)
  %153 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %154 = load i64, ptr %153, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_raw(i32 noundef 8, i64 noundef %154) #31
  br label %191

155:                                              ; preds = %122, %122
  %156 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3
  %157 = load i32, ptr %156, align 8, !tbaa !62
  %158 = icmp eq i32 %157, 2
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 5108, ptr noundef nonnull @.str.5) #31
  br label %160

160:                                              ; preds = %159, %155
  %161 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %162 = load ptr, ptr %161, align 8, !tbaa !17
  %163 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %162, i64 0, i32 2
  %164 = load i32, ptr %163, align 4, !tbaa !60
  %165 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 2
  %166 = load i32, ptr %165, align 4, !tbaa !60
  %167 = add i32 %164, -3
  %168 = sub i32 %167, %166
  %169 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %170 = tail call i32 @fputc(i32 noundef 44, ptr noundef %169)
  %171 = sext i32 %168 to i64
  tail call void @dw2_asm_output_data_raw(i32 noundef 2, i64 noundef %171) #31
  br label %191

172:                                              ; preds = %122, %122, %122, %122
  %173 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %174 = tail call i32 @fputc(i32 noundef 44, ptr noundef %173)
  %175 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %176 = load i64, ptr %175, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_uleb128_raw(i64 noundef %176) #31
  br label %191

177:                                              ; preds = %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122
  %178 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %179 = tail call i32 @fputc(i32 noundef 44, ptr noundef %178)
  %180 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %181 = load i64, ptr %180, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_sleb128_raw(i64 noundef %181) #31
  br label %191

182:                                              ; preds = %122
  %183 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %184 = tail call i32 @fputc(i32 noundef 44, ptr noundef %183)
  %185 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 3, i32 1
  %186 = load i64, ptr %185, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_uleb128_raw(i64 noundef %186) #31
  %187 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %188 = tail call i32 @fputc(i32 noundef 44, ptr noundef %187)
  %189 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %123, i64 0, i32 4, i32 1
  %190 = load i64, ptr %189, align 8, !tbaa !17
  tail call void @dw2_asm_output_data_sleb128_raw(i64 noundef %190) #31
  br label %191

191:                                              ; preds = %182, %177, %172, %160, %150, %145, %140, %135, %122
  %192 = load ptr, ptr %123, align 8, !tbaa !57
  %193 = icmp eq ptr %192, null
  br i1 %193, label %194, label %122

194:                                              ; preds = %191
  %195 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %196 = tail call i32 @fputc(i32 noundef 10, ptr noundef %195)
  br label %198

197:                                              ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3277, ptr noundef nonnull @.str.5) #31
  br label %198

198:                                              ; preds = %197, %194, %79, %76, %62, %59, %54, %45, %39, %31, %25, %19, %13, %5
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

declare void @dw2_asm_output_data_uleb128_raw(i64 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @size_of_loc_descr(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 1
  %3 = load i16, ptr %2, align 8
  %4 = trunc i16 %3 to i8
  switch i8 %4, label %77 [
    i8 3, label %5
    i8 8, label %6
    i8 9, label %6
    i8 10, label %7
    i8 11, label %7
    i8 12, label %8
    i8 13, label %8
    i8 14, label %9
    i8 15, label %9
    i8 16, label %10
    i8 17, label %16
    i8 21, label %22
    i8 35, label %23
    i8 47, label %29
    i8 40, label %29
    i8 112, label %30
    i8 113, label %30
    i8 114, label %30
    i8 115, label %30
    i8 116, label %30
    i8 117, label %30
    i8 118, label %30
    i8 119, label %30
    i8 120, label %30
    i8 121, label %30
    i8 122, label %30
    i8 123, label %30
    i8 124, label %30
    i8 125, label %30
    i8 126, label %30
    i8 127, label %30
    i8 -128, label %30
    i8 -127, label %30
    i8 -126, label %30
    i8 -125, label %30
    i8 -124, label %30
    i8 -123, label %30
    i8 -122, label %30
    i8 -121, label %30
    i8 -120, label %30
    i8 -119, label %30
    i8 -118, label %30
    i8 -117, label %30
    i8 -116, label %30
    i8 -115, label %30
    i8 -114, label %30
    i8 -113, label %30
    i8 -112, label %36
    i8 -111, label %42
    i8 -110, label %48
    i8 -109, label %59
    i8 -108, label %65
    i8 -107, label %65
    i8 -104, label %66
    i8 -103, label %67
    i8 -102, label %68
    i8 -98, label %69
  ]

5:                                                ; preds = %1
  br label %77

6:                                                ; preds = %1, %1
  br label %77

7:                                                ; preds = %1, %1
  br label %77

8:                                                ; preds = %1, %1
  br label %77

9:                                                ; preds = %1, %1
  br label %77

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !17
  %13 = tail call i32 @size_of_uleb128(i64 noundef %12) #31
  %14 = sext i32 %13 to i64
  %15 = add nsw i64 %14, 1
  br label %77

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !17
  %19 = tail call i32 @size_of_sleb128(i64 noundef %18) #31
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %20, 1
  br label %77

22:                                               ; preds = %1
  br label %77

23:                                               ; preds = %1
  %24 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !17
  %26 = tail call i32 @size_of_uleb128(i64 noundef %25) #31
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %27, 1
  br label %77

29:                                               ; preds = %1, %1
  br label %77

30:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %31 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %32 = load i64, ptr %31, align 8, !tbaa !17
  %33 = tail call i32 @size_of_sleb128(i64 noundef %32) #31
  %34 = sext i32 %33 to i64
  %35 = add nsw i64 %34, 1
  br label %77

36:                                               ; preds = %1
  %37 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %38 = load i64, ptr %37, align 8, !tbaa !17
  %39 = tail call i32 @size_of_uleb128(i64 noundef %38) #31
  %40 = sext i32 %39 to i64
  %41 = add nsw i64 %40, 1
  br label %77

42:                                               ; preds = %1
  %43 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %44 = load i64, ptr %43, align 8, !tbaa !17
  %45 = tail call i32 @size_of_sleb128(i64 noundef %44) #31
  %46 = sext i32 %45 to i64
  %47 = add nsw i64 %46, 1
  br label %77

48:                                               ; preds = %1
  %49 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %50 = load i64, ptr %49, align 8, !tbaa !17
  %51 = tail call i32 @size_of_uleb128(i64 noundef %50) #31
  %52 = sext i32 %51 to i64
  %53 = add nsw i64 %52, 1
  %54 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 4, i32 1
  %55 = load i64, ptr %54, align 8, !tbaa !17
  %56 = tail call i32 @size_of_sleb128(i64 noundef %55) #31
  %57 = sext i32 %56 to i64
  %58 = add nsw i64 %53, %57
  br label %77

59:                                               ; preds = %1
  %60 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !17
  %62 = tail call i32 @size_of_uleb128(i64 noundef %61) #31
  %63 = sext i32 %62 to i64
  %64 = add nsw i64 %63, 1
  br label %77

65:                                               ; preds = %1, %1
  br label %77

66:                                               ; preds = %1
  br label %77

67:                                               ; preds = %1
  br label %77

68:                                               ; preds = %1
  br label %77

69:                                               ; preds = %1
  %70 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %0, i64 0, i32 3, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !17
  %72 = tail call i32 @size_of_uleb128(i64 noundef %71) #31
  %73 = sext i32 %72 to i64
  %74 = load i64, ptr %70, align 8, !tbaa !17
  %75 = add nsw i64 %73, 1
  %76 = add i64 %75, %74
  br label %77

77:                                               ; preds = %1, %69, %68, %67, %66, %65, %59, %48, %42, %36, %30, %29, %23, %22, %16, %10, %9, %8, %7, %6, %5
  %78 = phi i64 [ 1, %1 ], [ %76, %69 ], [ 5, %68 ], [ 5, %67 ], [ 3, %66 ], [ 2, %65 ], [ %64, %59 ], [ %58, %48 ], [ %47, %42 ], [ %41, %36 ], [ %35, %30 ], [ 3, %29 ], [ %28, %23 ], [ 2, %22 ], [ %21, %16 ], [ %15, %10 ], [ 9, %9 ], [ 5, %8 ], [ 3, %7 ], [ 2, %6 ], [ 5, %5 ]
  ret i64 %78
}

declare i32 @size_of_uleb128(i64 noundef) local_unnamed_addr #3

declare i32 @size_of_sleb128(i64 noundef) local_unnamed_addr #3

declare void @dw2_asm_output_data_raw(i32 noundef, i64 noundef) local_unnamed_addr #3

declare void @dw2_asm_output_data_sleb128_raw(i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_window_save(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %2, align 8, !tbaa !46
  %3 = getelementptr inbounds %struct.dw_cfi_struct, ptr %2, i64 0, i32 2
  store i32 0, ptr %3, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.dw_cfi_struct, ptr %2, i64 0, i32 3
  store i32 0, ptr %4, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.dw_cfi_struct, ptr %2, i64 0, i32 1
  store i32 45, ptr %5, align 8, !tbaa !48
  tail call fastcc void @add_fde_cfi(ptr noundef %0, ptr noundef nonnull %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_reg_save(ptr noundef %0, i32 noundef %1, i64 noundef %2) local_unnamed_addr #10 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %4
  %6 = load i32, ptr %5, align 4, !tbaa !21
  tail call fastcc void @reg_save(ptr noundef %0, i32 noundef %6, i32 noundef -1, i64 noundef %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @reg_save(ptr noundef %0, i32 noundef %1, i32 noundef %2, i64 noundef %3) unnamed_addr #10 {
  %5 = alloca ptr, align 8
  %6 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %6, align 8, !tbaa !46
  %7 = getelementptr inbounds %struct.dw_cfi_struct, ptr %6, i64 0, i32 2
  %8 = getelementptr inbounds %struct.dw_cfi_struct, ptr %6, i64 0, i32 3
  store i32 0, ptr %8, align 8, !tbaa !17
  %9 = load i32, ptr @fde_table_in_use, align 4
  %10 = icmp eq i32 %9, 0
  %11 = load ptr, ptr @fde_table, align 8
  %12 = add i32 %9, -1
  %13 = zext i32 %12 to i64
  store i32 %1, ptr %7, align 8, !tbaa !17
  %14 = icmp eq ptr %11, null
  %15 = select i1 %10, i1 true, i1 %14
  br i1 %15, label %128, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.dw_fde_struct, ptr %11, i64 %13, i32 14
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 8
  %20 = icmp ne i16 %19, 0
  %21 = icmp eq i32 %2, -1
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %128

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.dw_cfi_struct, ptr %6, i64 0, i32 1
  store i32 16, ptr %24, align 8, !tbaa !48
  store i32 %1, ptr %7, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.dw_fde_struct, ptr %11, i64 %13, i32 11
  %26 = load i64, ptr %25, align 8, !tbaa !63
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #31
  %27 = load i32, ptr getelementptr inbounds ([53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 6), align 8, !tbaa !21
  %28 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %30, label %104

30:                                               ; preds = %23
  %31 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 3), align 4
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %104

34:                                               ; preds = %30
  %35 = icmp ult i32 %27, 32
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %38 = trunc i32 %27 to i16
  %39 = add nuw nsw i16 %38, 112
  br label %43

40:                                               ; preds = %34
  %41 = zext i32 %27 to i64
  %42 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %43

43:                                               ; preds = %40, %36
  %44 = phi i16 [ 146, %40 ], [ %39, %36 ]
  %45 = phi ptr [ %42, %40 ], [ %37, %36 ]
  %46 = phi i64 [ %41, %40 ], [ 0, %36 ]
  %47 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %45, i64 0, i32 1
  %48 = load i16, ptr %47, align 8
  %49 = and i16 %48, -256
  %50 = or i16 %49, %44
  store i16 %50, ptr %47, align 8
  %51 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %45, i64 0, i32 3
  store i32 6, ptr %51, align 8, !tbaa !52
  %52 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %45, i64 0, i32 3, i32 1
  store i64 %46, ptr %52, align 8, !tbaa !17
  %53 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %45, i64 0, i32 4
  store i32 6, ptr %53, align 8, !tbaa !49
  %54 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %45, i64 0, i32 4, i32 1
  store i64 0, ptr %54, align 8, !tbaa !17
  store ptr %45, ptr %5, align 8, !tbaa !6
  %55 = icmp sgt i64 %26, -1
  br i1 %55, label %56, label %68

56:                                               ; preds = %43
  %57 = icmp ult i64 %26, 32
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = trunc i64 %26 to i16
  %60 = add nuw nsw i16 %59, 48
  br label %73

61:                                               ; preds = %56
  %62 = icmp ult i64 %26, 256
  br i1 %62, label %73, label %63

63:                                               ; preds = %61
  %64 = icmp ult i64 %26, 65536
  br i1 %64, label %73, label %65

65:                                               ; preds = %63
  %66 = icmp ult i64 %26, 4294967296
  %67 = select i1 %66, i16 12, i16 16
  br label %73

68:                                               ; preds = %43
  %69 = icmp ugt i64 %26, -129
  br i1 %69, label %73, label %70

70:                                               ; preds = %68
  %71 = icmp ugt i64 %26, -32769
  %72 = select i1 %71, i16 11, i16 17
  br label %73

73:                                               ; preds = %70, %68, %65, %63, %61, %58
  %74 = phi i16 [ %60, %58 ], [ 8, %61 ], [ 10, %63 ], [ %67, %65 ], [ 9, %68 ], [ %72, %70 ]
  %75 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %76 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 1
  %77 = load i16, ptr %76, align 8
  %78 = and i16 %77, -256
  %79 = or i16 %78, %74
  store i16 %79, ptr %76, align 8
  %80 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 3
  store i32 6, ptr %80, align 8, !tbaa !52
  %81 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 3, i32 1
  store i64 %26, ptr %81, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 4
  store i32 6, ptr %82, align 8, !tbaa !49
  %83 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %75, i64 0, i32 4, i32 1
  store i64 0, ptr %83, align 8, !tbaa !17
  br label %84

84:                                               ; preds = %84, %73
  %85 = phi ptr [ %5, %73 ], [ %86, %84 ]
  %86 = load ptr, ptr %85, align 8, !tbaa !6
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %84, !llvm.loop !53

88:                                               ; preds = %84
  store ptr %75, ptr %85, align 8, !tbaa !6
  %89 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %90 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %89, i64 0, i32 1
  %91 = load i16, ptr %90, align 8
  %92 = and i16 %91, -256
  %93 = or i16 %92, 26
  store i16 %93, ptr %90, align 8
  %94 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %89, i64 0, i32 3
  store i32 6, ptr %94, align 8, !tbaa !52
  %95 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %89, i64 0, i32 3, i32 1
  store i64 0, ptr %95, align 8, !tbaa !17
  %96 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %89, i64 0, i32 4
  store i32 6, ptr %96, align 8, !tbaa !49
  %97 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %89, i64 0, i32 4, i32 1
  store i64 0, ptr %97, align 8, !tbaa !17
  br label %98

98:                                               ; preds = %98, %88
  %99 = phi ptr [ %5, %88 ], [ %100, %98 ]
  %100 = load ptr, ptr %99, align 8, !tbaa !6
  %101 = icmp eq ptr %100, null
  br i1 %101, label %102, label %98, !llvm.loop !53

102:                                              ; preds = %98
  store ptr %89, ptr %99, align 8, !tbaa !6
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %5, i64 noundef %3)
  %103 = load ptr, ptr %5, align 8, !tbaa !6
  br label %126

104:                                              ; preds = %30, %23
  %105 = icmp ult i32 %27, 32
  br i1 %105, label %106, label %110

106:                                              ; preds = %104
  %107 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %108 = trunc i32 %27 to i16
  %109 = add nuw nsw i16 %108, 112
  br label %113

110:                                              ; preds = %104
  %111 = zext i32 %27 to i64
  %112 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %113

113:                                              ; preds = %110, %106
  %114 = phi i16 [ 146, %110 ], [ %109, %106 ]
  %115 = phi ptr [ %112, %110 ], [ %107, %106 ]
  %116 = phi i64 [ %111, %110 ], [ %3, %106 ]
  %117 = phi i64 [ %3, %110 ], [ 0, %106 ]
  %118 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %115, i64 0, i32 1
  %119 = load i16, ptr %118, align 8
  %120 = and i16 %119, -256
  %121 = or i16 %120, %114
  store i16 %121, ptr %118, align 8
  %122 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %115, i64 0, i32 3
  store i32 6, ptr %122, align 8, !tbaa !52
  %123 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %115, i64 0, i32 3, i32 1
  store i64 %116, ptr %123, align 8, !tbaa !17
  %124 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %115, i64 0, i32 4
  store i32 6, ptr %124, align 8, !tbaa !49
  %125 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %115, i64 0, i32 4, i32 1
  store i64 %117, ptr %125, align 8, !tbaa !17
  br label %126

126:                                              ; preds = %102, %113
  %127 = phi ptr [ %115, %113 ], [ %103, %102 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #31
  store ptr %127, ptr %8, align 8, !tbaa !17
  br label %145

128:                                              ; preds = %16, %4
  %129 = icmp eq i32 %2, -1
  br i1 %129, label %130, label %140

130:                                              ; preds = %128
  %131 = icmp slt i64 %3, 1
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %struct.dw_cfi_struct, ptr %6, i64 0, i32 1
  store i32 17, ptr %133, align 8, !tbaa !48
  br label %139

134:                                              ; preds = %130
  %135 = icmp ult i32 %1, 64
  %136 = getelementptr inbounds %struct.dw_cfi_struct, ptr %6, i64 0, i32 1
  br i1 %135, label %138, label %137

137:                                              ; preds = %134
  store i32 5, ptr %136, align 8, !tbaa !48
  br label %139

138:                                              ; preds = %134
  store i32 128, ptr %136, align 8, !tbaa !48
  br label %139

139:                                              ; preds = %137, %138, %132
  store i64 %3, ptr %8, align 8, !tbaa !17
  br label %145

140:                                              ; preds = %128
  %141 = icmp eq i32 %2, %1
  %142 = getelementptr inbounds %struct.dw_cfi_struct, ptr %6, i64 0, i32 1
  br i1 %141, label %143, label %144

143:                                              ; preds = %140
  store i32 8, ptr %142, align 8, !tbaa !48
  br label %145

144:                                              ; preds = %140
  store i32 9, ptr %142, align 8, !tbaa !48
  store i32 %2, ptr %8, align 8, !tbaa !17
  br label %145

145:                                              ; preds = %139, %144, %143, %126
  tail call fastcc void @add_fde_cfi(ptr noundef %0, ptr noundef nonnull %6)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @int_loc_descriptor(i64 noundef %0) unnamed_addr #10 {
  %2 = icmp sgt i64 %0, -1
  br i1 %2, label %3, label %15

3:                                                ; preds = %1
  %4 = icmp ult i64 %0, 32
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = trunc i64 %0 to i16
  %7 = add nuw nsw i16 %6, 48
  br label %20

8:                                                ; preds = %3
  %9 = icmp ult i64 %0, 256
  br i1 %9, label %20, label %10

10:                                               ; preds = %8
  %11 = icmp ult i64 %0, 65536
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = icmp ult i64 %0, 4294967296
  %14 = select i1 %13, i16 12, i16 16
  br label %20

15:                                               ; preds = %1
  %16 = icmp ugt i64 %0, -129
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = icmp ugt i64 %0, -32769
  %19 = select i1 %18, i16 11, i16 17
  br label %20

20:                                               ; preds = %17, %15, %12, %10, %8, %5
  %21 = phi i16 [ %7, %5 ], [ 8, %8 ], [ 10, %10 ], [ %14, %12 ], [ 9, %15 ], [ %19, %17 ]
  %22 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %23 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %22, i64 0, i32 1
  %24 = load i16, ptr %23, align 8
  %25 = and i16 %24, -256
  %26 = or i16 %25, %21
  store i16 %26, ptr %23, align 8
  %27 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %22, i64 0, i32 3
  store i32 6, ptr %27, align 8, !tbaa !52
  %28 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %22, i64 0, i32 3, i32 1
  store i64 %0, ptr %28, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %22, i64 0, i32 4
  store i32 6, ptr %29, align 8, !tbaa !49
  %30 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %22, i64 0, i32 4, i32 1
  store i64 0, ptr %30, align 8, !tbaa !17
  ret ptr %22
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @loc_descr_plus_const(ptr nocapture noundef readonly %0, i64 noundef %1) unnamed_addr #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 4649, ptr noundef nonnull @.str.5) #31
  br label %6

6:                                                ; preds = %2, %5
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %87, label %8

8:                                                ; preds = %6
  %9 = load ptr, ptr %0, align 8, !tbaa !6
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi ptr [ %9, %8 ], [ %12, %10 ]
  %12 = load ptr, ptr %11, align 8, !tbaa !57
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %10, !llvm.loop !64

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %11, i64 0, i32 1
  %16 = load i16, ptr %15, align 8
  %17 = and i16 %16, 255
  %18 = icmp eq i16 %17, 145
  %19 = add nsw i16 %17, -112
  %20 = icmp ult i16 %19, 32
  %21 = select i1 %18, i1 true, i1 %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %11, i64 0, i32 3, i32 1
  br label %27

24:                                               ; preds = %14
  %25 = icmp eq i16 %17, 146
  %26 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %11, i64 0, i32 4, i32 1
  br i1 %25, label %27, label %43

27:                                               ; preds = %24, %22
  %28 = phi ptr [ %23, %22 ], [ %26, %24 ]
  %29 = icmp sgt i64 %1, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = load i64, ptr %28, align 8, !tbaa !38
  %32 = sub nuw nsw i64 9223372036854775807, %1
  %33 = icmp sgt i64 %31, %32
  br i1 %33, label %45, label %40

34:                                               ; preds = %27
  %35 = icmp slt i64 %1, 0
  br i1 %35, label %36, label %62

36:                                               ; preds = %34
  %37 = load i64, ptr %28, align 8, !tbaa !38
  %38 = sub nsw i64 -9223372036854775808, %1
  %39 = icmp slt i64 %37, %38
  br i1 %39, label %57, label %40

40:                                               ; preds = %36, %30
  %41 = phi i64 [ %37, %36 ], [ %31, %30 ]
  %42 = add nsw i64 %41, %1
  store i64 %42, ptr %28, align 8, !tbaa !38
  br label %87

43:                                               ; preds = %24
  %44 = icmp sgt i64 %1, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %30, %43
  %46 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %47 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %46, i64 0, i32 1
  %48 = load i16, ptr %47, align 8
  %49 = and i16 %48, -256
  %50 = or i16 %49, 35
  store i16 %50, ptr %47, align 8
  %51 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %46, i64 0, i32 3
  store i32 6, ptr %51, align 8, !tbaa !52
  %52 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %46, i64 0, i32 3, i32 1
  store i64 %1, ptr %52, align 8, !tbaa !17
  %53 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %46, i64 0, i32 4
  store i32 6, ptr %53, align 8, !tbaa !49
  %54 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %46, i64 0, i32 4, i32 1
  store i64 0, ptr %54, align 8, !tbaa !17
  store ptr %46, ptr %11, align 8, !tbaa !57
  br label %87

55:                                               ; preds = %43
  %56 = icmp sgt i64 %1, -1
  br i1 %56, label %62, label %57

57:                                               ; preds = %36, %55
  %58 = icmp ugt i64 %1, -129
  br i1 %58, label %62, label %59

59:                                               ; preds = %57
  %60 = icmp ugt i64 %1, -32769
  %61 = select i1 %60, i16 11, i16 17
  br label %62

62:                                               ; preds = %55, %34, %57, %59
  %63 = phi i16 [ 9, %57 ], [ %61, %59 ], [ 48, %34 ], [ 48, %55 ]
  %64 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %65 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 1
  %66 = load i16, ptr %65, align 8
  %67 = and i16 %66, -256
  %68 = or i16 %67, %63
  store i16 %68, ptr %65, align 8
  %69 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 3
  store i32 6, ptr %69, align 8, !tbaa !52
  %70 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 3, i32 1
  store i64 %1, ptr %70, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 4
  store i32 6, ptr %71, align 8, !tbaa !49
  %72 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 4, i32 1
  store i64 0, ptr %72, align 8, !tbaa !17
  store ptr %64, ptr %11, align 8, !tbaa !57
  %73 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %74 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 1
  %75 = load i16, ptr %74, align 8
  %76 = and i16 %75, -256
  %77 = or i16 %76, 34
  store i16 %77, ptr %74, align 8
  %78 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 3
  store i32 6, ptr %78, align 8, !tbaa !52
  %79 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 3, i32 1
  store i64 0, ptr %79, align 8, !tbaa !17
  %80 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 4
  store i32 6, ptr %80, align 8, !tbaa !49
  %81 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 4, i32 1
  store i64 0, ptr %81, align 8, !tbaa !17
  br label %82

82:                                               ; preds = %82, %62
  %83 = phi ptr [ %11, %62 ], [ %84, %82 ]
  %84 = load ptr, ptr %83, align 8, !tbaa !6
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %82, !llvm.loop !53

86:                                               ; preds = %82
  store ptr %73, ptr %83, align 8, !tbaa !6
  br label %87

87:                                               ; preds = %40, %86, %45, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_return_save(ptr noundef %0, i64 noundef %1) local_unnamed_addr #10 {
  tail call fastcc void @reg_save(ptr noundef %0, i32 noundef 8, i32 noundef -1, i64 noundef %1)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_return_reg(ptr noundef %0, i32 noundef %1) local_unnamed_addr #10 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %3
  %5 = load i32, ptr %4, align 4, !tbaa !21
  tail call fastcc void @reg_save(ptr noundef %0, i32 noundef 8, i32 noundef %5, i64 noundef 0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_reg_save_reg(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #10 {
  %4 = load i64, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = getelementptr i8, ptr %1, i64 8
  %8 = load i32, ptr %7, align 8, !tbaa !17
  br label %9

9:                                                ; preds = %6, %16
  %10 = phi i64 [ 0, %6 ], [ %17, %16 ]
  %11 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %10
  %12 = load ptr, ptr %11, align 16, !tbaa !65
  %13 = getelementptr i8, ptr %12, i64 8
  %14 = load i32, ptr %13, align 8, !tbaa !17
  %15 = icmp eq i32 %14, %8
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = add nuw i64 %10, 1
  %18 = icmp eq i64 %17, %4
  br i1 %18, label %22, label %9, !llvm.loop !67

19:                                               ; preds = %9, %3
  %20 = phi i64 [ 0, %3 ], [ %10, %9 ]
  %21 = icmp eq i64 %20, %4
  br i1 %21, label %22, label %30

22:                                               ; preds = %16, %19
  %23 = phi i64 [ %20, %19 ], [ %4, %16 ]
  %24 = icmp eq i64 %4, 4
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1782, ptr noundef nonnull @.str.5) #31
  %26 = load i64, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi i64 [ %4, %22 ], [ %26, %25 ]
  %29 = add i64 %28, 1
  store i64 %29, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  br label %30

30:                                               ; preds = %27, %19
  %31 = phi i64 [ %23, %27 ], [ %20, %19 ]
  %32 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %31
  store ptr %1, ptr %32, align 16, !tbaa !65
  %33 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %31, i32 1
  store ptr %2, ptr %33, align 8, !tbaa !68
  %34 = getelementptr i8, ptr %1, i64 8
  %35 = load i32, ptr %34, align 8, !tbaa !17
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !21
  %39 = getelementptr i8, ptr %2, i64 8
  %40 = load i32, ptr %39, align 8, !tbaa !17
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !21
  tail call fastcc void @reg_save(ptr noundef %0, i32 noundef %38, i32 noundef %43, i64 noundef 0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_frame_debug(ptr noundef %0, i8 noundef zeroext %1) local_unnamed_addr #10 {
  %3 = alloca %struct.cfa_loc, align 8
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %44

5:                                                ; preds = %2
  tail call fastcc void @flush_queued_reg_saves()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #31
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @cfa, i8 0, i64 24, i1 false)
  store i32 -1, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) @cfa, i64 24, i1 false), !tbaa.struct !43
  %6 = load ptr, ptr @cie_cfi_head, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %5, %8
  %9 = phi ptr [ %10, %8 ], [ %6, %5 ]
  call fastcc void @lookup_cfa_1(ptr noundef nonnull %9, ptr noundef nonnull @cfa, ptr noundef nonnull %3)
  %10 = load ptr, ptr %9, align 8, !tbaa !6
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %8, !llvm.loop !44

12:                                               ; preds = %8, %5
  %13 = load i32, ptr @fde_table_in_use, align 4
  %14 = icmp eq i32 %13, 0
  %15 = load ptr, ptr @fde_table, align 8
  %16 = icmp eq ptr %15, null
  %17 = select i1 %14, i1 true, i1 %16
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = add i32 %13, -1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %struct.dw_fde_struct, ptr %15, i64 %20, i32 8
  %22 = load ptr, ptr %21, align 8, !tbaa !6
  %23 = icmp eq ptr %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %18, %24
  %25 = phi ptr [ %26, %24 ], [ %22, %18 ]
  call fastcc void @lookup_cfa_1(ptr noundef nonnull %25, ptr noundef nonnull @cfa, ptr noundef nonnull %3)
  %26 = load ptr, ptr %25, align 8, !tbaa !6
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %24, !llvm.loop !45

28:                                               ; preds = %24, %12, %18
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #31
  %29 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %30 = zext i32 %29 to i64
  %31 = load i32, ptr getelementptr inbounds ([53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 7), align 4, !tbaa !21
  %32 = sext i32 %31 to i64
  %33 = icmp eq i64 %30, %32
  br i1 %33, label %35, label %34

34:                                               ; preds = %28
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2664, ptr noundef nonnull @.str.5) #31
  br label %35

35:                                               ; preds = %28, %34
  store i32 7, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @cfa_store, ptr noundef nonnull align 8 dereferenceable(24) @cfa, i64 24, i1 false), !tbaa.struct !43
  store i32 -1, ptr @cfa_temp.1, align 8, !tbaa !41
  store i64 0, ptr @cfa_temp.0, align 8, !tbaa !42
  %36 = load i64, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = shl nuw i64 %36, 4
  tail call void @llvm.memset.p0.i64(ptr nonnull align 16 @regs_saved_in_regs, i8 0, i64 %39, i1 false), !tbaa !6
  br label %40

40:                                               ; preds = %38, %35
  store i64 0, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  %41 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %42 = icmp eq ptr %41, null
  br i1 %42, label %562, label %43

43:                                               ; preds = %40
  tail call void @free(ptr noundef nonnull %41)
  store ptr null, ptr @barrier_args_size, align 8, !tbaa !6
  br label %562

44:                                               ; preds = %2
  %45 = load i32, ptr %0, align 8
  %46 = and i32 %45, 65535
  %47 = icmp eq i32 %46, 8
  br i1 %47, label %48, label %85

48:                                               ; preds = %44
  %49 = load ptr, ptr @queued_reg_saves, align 8, !tbaa !6
  %50 = icmp eq ptr %49, null
  br i1 %50, label %86, label %54

51:                                               ; preds = %81, %60
  %52 = load ptr, ptr %55, align 8, !tbaa !6
  %53 = icmp eq ptr %52, null
  br i1 %53, label %86, label %54, !llvm.loop !69

54:                                               ; preds = %48, %51
  %55 = phi ptr [ %52, %51 ], [ %49, %48 ]
  %56 = getelementptr inbounds %struct.queued_reg_save, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !70
  %58 = tail call i32 @modified_in_p(ptr noundef %57, ptr noundef nonnull %0) #31
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %85

60:                                               ; preds = %54
  %61 = load i64, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %51, label %63

63:                                               ; preds = %60, %81
  %64 = phi i64 [ %82, %81 ], [ %61, %60 ]
  %65 = phi i64 [ %83, %81 ], [ 0, %60 ]
  %66 = load ptr, ptr %56, align 8, !tbaa !70
  %67 = getelementptr i8, ptr %66, i64 8
  %68 = load i32, ptr %67, align 8, !tbaa !17
  %69 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %65
  %70 = load ptr, ptr %69, align 16, !tbaa !65
  %71 = getelementptr i8, ptr %70, i64 8
  %72 = load i32, ptr %71, align 8, !tbaa !17
  %73 = icmp eq i32 %68, %72
  br i1 %73, label %74, label %81

74:                                               ; preds = %63
  %75 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %65, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !68
  %77 = tail call i32 @modified_in_p(ptr noundef %76, ptr noundef nonnull %0) #31
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %74
  %80 = load i64, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  br label %81

81:                                               ; preds = %79, %63
  %82 = phi i64 [ %80, %79 ], [ %64, %63 ]
  %83 = add nuw i64 %65, 1
  %84 = icmp ult i64 %83, %82
  br i1 %84, label %63, label %51, !llvm.loop !72

85:                                               ; preds = %54, %74, %44
  tail call fastcc void @flush_queued_reg_saves()
  br label %86

86:                                               ; preds = %51, %48, %85
  %87 = load i32, ptr %0, align 8
  %88 = and i32 %87, 1073741824
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %262

90:                                               ; preds = %86
  %91 = load i32, ptr @target_flags, align 4, !tbaa !21
  %92 = and i32 %91, 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %562

94:                                               ; preds = %90
  %95 = tail call i32 @ix86_cfun_abi() #31
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %562, label %97

97:                                               ; preds = %94
  %98 = tail call i32 @prologue_epilogue_contains(ptr noundef nonnull %0) #31
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %562

100:                                              ; preds = %97
  %101 = load ptr, ptr @final_sequence, align 8, !tbaa !6
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load i32, ptr %0, align 8
  br label %117

105:                                              ; preds = %100
  %106 = getelementptr inbounds %struct.rtx_def, ptr %101, i64 0, i32 1
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  %108 = getelementptr inbounds %struct.rtvec_def, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %108, align 8, !tbaa !6
  %110 = load i32, ptr %109, align 8
  %111 = and i32 %110, 67108864
  %112 = icmp eq i32 %111, 0
  %113 = load i32, ptr %0, align 8
  %114 = and i32 %113, 268435456
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %112, i1 true, i1 %115
  br i1 %116, label %117, label %562

117:                                              ; preds = %103, %105
  %118 = phi i32 [ %104, %103 ], [ %113, %105 ]
  %119 = load i32, ptr @flag_asynchronous_unwind_tables, align 4, !tbaa !21
  %120 = icmp eq i32 %119, 0
  %121 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8
  %122 = icmp ne i32 %121, 7
  %123 = select i1 %120, i1 %122, i1 false
  %124 = and i32 %118, 65535
  %125 = icmp ne i32 %124, 10
  %126 = icmp ne i8 %1, 0
  %127 = or i1 %126, %125
  br i1 %123, label %128, label %168

128:                                              ; preds = %117
  br i1 %127, label %562, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1
  %131 = load ptr, ptr %130, align 8, !tbaa !17
  %132 = load i32, ptr %131, align 8
  %133 = and i32 %132, 65535
  %134 = icmp eq i32 %133, 15
  br i1 %134, label %135, label %141

135:                                              ; preds = %129
  %136 = getelementptr inbounds %struct.rtx_def, ptr %131, i64 0, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !17
  %138 = getelementptr inbounds %struct.rtvec_def, ptr %137, i64 0, i32 1
  %139 = load ptr, ptr %138, align 8, !tbaa !6
  %140 = load i32, ptr %139, align 8
  br label %141

141:                                              ; preds = %135, %129
  %142 = phi i32 [ %140, %135 ], [ %132, %129 ]
  %143 = phi ptr [ %139, %135 ], [ %131, %129 ]
  %144 = and i32 %142, 65535
  %145 = icmp eq i32 %144, 23
  br i1 %145, label %146, label %151

146:                                              ; preds = %141
  %147 = getelementptr inbounds %struct.rtx_def, ptr %143, i64 0, i32 1, i32 0, i32 0, i64 1
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = load i32, ptr %148, align 8
  %150 = and i32 %149, 65535
  br label %151

151:                                              ; preds = %146, %141
  %152 = phi i32 [ %150, %146 ], [ %144, %141 ]
  %153 = phi ptr [ %148, %146 ], [ %143, %141 ]
  %154 = icmp eq i32 %152, 26
  br i1 %154, label %156, label %155

155:                                              ; preds = %151
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1593, ptr noundef nonnull @.str.5) #31
  br label %156

156:                                              ; preds = %155, %151
  %157 = getelementptr inbounds %struct.rtx_def, ptr %153, i64 0, i32 1, i32 0, i32 0, i64 1
  %158 = load ptr, ptr %157, align 8, !tbaa !17
  %159 = getelementptr inbounds %struct.rtx_def, ptr %158, i64 0, i32 1
  %160 = load i64, ptr %159, align 8, !tbaa !17
  %161 = load i64, ptr @old_args_size, align 8, !tbaa !38
  %162 = icmp eq i64 %161, %160
  br i1 %162, label %562, label %163

163:                                              ; preds = %156
  store i64 %160, ptr @old_args_size, align 8, !tbaa !38
  %164 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %164, align 8, !tbaa !46
  %165 = getelementptr inbounds %struct.dw_cfi_struct, ptr %164, i64 0, i32 2
  %166 = getelementptr inbounds %struct.dw_cfi_struct, ptr %164, i64 0, i32 3
  store i32 0, ptr %166, align 8, !tbaa !17
  %167 = getelementptr inbounds %struct.dw_cfi_struct, ptr %164, i64 0, i32 1
  store i32 46, ptr %167, align 8, !tbaa !48
  store i64 %160, ptr %165, align 8, !tbaa !17
  tail call fastcc void @add_fde_cfi(ptr noundef nonnull @.str.181, ptr noundef nonnull %164)
  br label %562

168:                                              ; preds = %117
  br i1 %127, label %179, label %169

169:                                              ; preds = %168
  br i1 %120, label %170, label %562

170:                                              ; preds = %169
  %171 = load i64, ptr @args_size, align 8, !tbaa !38
  %172 = load i64, ptr @old_args_size, align 8, !tbaa !38
  %173 = icmp eq i64 %172, %171
  br i1 %173, label %562, label %174

174:                                              ; preds = %170
  store i64 %171, ptr @old_args_size, align 8, !tbaa !38
  %175 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %175, align 8, !tbaa !46
  %176 = getelementptr inbounds %struct.dw_cfi_struct, ptr %175, i64 0, i32 2
  %177 = getelementptr inbounds %struct.dw_cfi_struct, ptr %175, i64 0, i32 3
  store i32 0, ptr %177, align 8, !tbaa !17
  %178 = getelementptr inbounds %struct.dw_cfi_struct, ptr %175, i64 0, i32 1
  store i32 46, ptr %178, align 8, !tbaa !48
  store i64 %171, ptr %176, align 8, !tbaa !17
  tail call fastcc void @add_fde_cfi(ptr noundef nonnull @.str.181, ptr noundef nonnull %175)
  br label %562

179:                                              ; preds = %168
  %180 = icmp eq i32 %124, 11
  br i1 %180, label %181, label %203

181:                                              ; preds = %179
  %182 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %183 = icmp eq ptr %182, null
  br i1 %183, label %184, label %191

184:                                              ; preds = %181
  %185 = tail call ptr @next_nonnote_insn(ptr noundef nonnull %0) #31
  %186 = icmp eq ptr %185, null
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  tail call fastcc void @compute_barrier_args_size()
  br label %188

188:                                              ; preds = %187, %184
  %189 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %190 = icmp eq ptr %189, null
  br i1 %190, label %199, label %191

191:                                              ; preds = %188, %181
  %192 = phi ptr [ %189, %188 ], [ %182, %181 ]
  %193 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %194 = load i32, ptr %193, align 8, !tbaa !17
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i64, ptr %192, i64 %195
  %197 = load i64, ptr %196, align 8, !tbaa !38
  %198 = tail call i64 @llvm.smax.i64(i64 %197, i64 0)
  br label %199

199:                                              ; preds = %191, %188
  %200 = phi i64 [ %198, %191 ], [ 0, %188 ]
  %201 = load i64, ptr @args_size, align 8, !tbaa !38
  %202 = sub nsw i64 %200, %201
  br label %246

203:                                              ; preds = %179
  %204 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1
  %205 = load ptr, ptr %204, align 8, !tbaa !17
  %206 = load i32, ptr %205, align 8
  %207 = trunc i32 %206 to i16
  switch i16 %207, label %562 [
    i16 23, label %208
    i16 15, label %215
    i16 5, label %215
  ]

208:                                              ; preds = %203
  %209 = load i64, ptr @args_size, align 8, !tbaa !38
  %210 = getelementptr i8, ptr %205, i64 8
  %211 = load ptr, ptr %210, align 8, !tbaa !17
  %212 = getelementptr i8, ptr %205, i64 16
  %213 = load ptr, ptr %212, align 8, !tbaa !17
  %214 = tail call fastcc i64 @stack_adjust_offset(ptr %211, ptr %213, i64 noundef %209, i64 noundef 0)
  br label %246

215:                                              ; preds = %203, %203
  %216 = getelementptr inbounds %struct.rtx_def, ptr %205, i64 0, i32 1
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = load i32, ptr %217, align 8, !tbaa !73
  %219 = icmp sgt i32 %218, 0
  br i1 %219, label %220, label %562

220:                                              ; preds = %215
  %221 = zext i32 %218 to i64
  br label %222

222:                                              ; preds = %243, %220
  %223 = phi i64 [ %221, %220 ], [ %225, %243 ]
  %224 = phi i64 [ 0, %220 ], [ %244, %243 ]
  %225 = add nsw i64 %223, -1
  %226 = load ptr, ptr %204, align 8, !tbaa !17
  %227 = getelementptr inbounds %struct.rtx_def, ptr %226, i64 0, i32 1
  %228 = load ptr, ptr %227, align 8, !tbaa !17
  %229 = and i64 %225, 4294967295
  %230 = getelementptr inbounds %struct.rtvec_def, ptr %228, i64 0, i32 1, i64 %229
  %231 = load ptr, ptr %230, align 8, !tbaa !6
  %232 = load i32, ptr %231, align 8
  %233 = and i32 %232, 65535
  %234 = icmp eq i32 %233, 23
  br i1 %234, label %235, label %243

235:                                              ; preds = %222
  %236 = load i64, ptr @args_size, align 8, !tbaa !38
  %237 = getelementptr i8, ptr %231, i64 8
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  %239 = getelementptr i8, ptr %231, i64 16
  %240 = load ptr, ptr %239, align 8, !tbaa !17
  %241 = tail call fastcc i64 @stack_adjust_offset(ptr %238, ptr %240, i64 noundef %236, i64 noundef %224)
  %242 = add nsw i64 %241, %224
  br label %243

243:                                              ; preds = %235, %222
  %244 = phi i64 [ %242, %235 ], [ %224, %222 ]
  %245 = icmp ugt i64 %223, 1
  br i1 %245, label %222, label %246, !llvm.loop !75

246:                                              ; preds = %243, %208, %199
  %247 = phi i64 [ %202, %199 ], [ %214, %208 ], [ %244, %243 ]
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %562, label %249

249:                                              ; preds = %246
  %250 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %253, label %252

252:                                              ; preds = %249
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) @dwarf2out_cfi_label.label, ptr noundef nonnull align 1 dereferenceable(16) @.str, i64 16, i1 false)
  br label %261

253:                                              ; preds = %249
  %254 = load i64, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %255 = add i64 %254, 1
  store i64 %255, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %256 = trunc i64 %254 to i32
  %257 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @dwarf2out_cfi_label.label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.2, i32 noundef %256)
  %258 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %258, ptr noundef nonnull @dwarf2out_cfi_label.label) #31
  %259 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %260 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %259)
  br label %261

261:                                              ; preds = %253, %252
  tail call fastcc void @dwarf2out_stack_adjust(i64 noundef %247)
  br label %562

262:                                              ; preds = %86
  %263 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %266, label %265

265:                                              ; preds = %262
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) @dwarf2out_cfi_label.label, ptr noundef nonnull align 1 dereferenceable(16) @.str, i64 16, i1 false)
  br label %274

266:                                              ; preds = %262
  %267 = load i64, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %268 = add i64 %267, 1
  store i64 %268, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %269 = trunc i64 %267 to i32
  %270 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @dwarf2out_cfi_label.label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.2, i32 noundef %269)
  %271 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %271, ptr noundef nonnull @dwarf2out_cfi_label.label) #31
  %272 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %273 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %272)
  br label %274

274:                                              ; preds = %265, %266
  %275 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1, i32 1, i32 0, i32 0, i64 1
  %276 = load ptr, ptr %275, align 8, !tbaa !17
  %277 = icmp eq ptr %276, null
  br i1 %277, label %557, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1
  br label %280

280:                                              ; preds = %278, %550
  %281 = phi ptr [ %276, %278 ], [ %553, %550 ]
  %282 = phi i8 [ 0, %278 ], [ %551, %550 ]
  %283 = load i32, ptr %281, align 8
  %284 = lshr i32 %283, 16
  %285 = trunc i32 %284 to i8
  switch i8 %285, label %550 [
    i8 17, label %286
    i8 18, label %288
    i8 19, label %307
    i8 20, label %358
    i8 21, label %457
    i8 22, label %492
    i8 23, label %523
  ]

286:                                              ; preds = %280
  %287 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1
  br label %559

288:                                              ; preds = %280
  %289 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1
  %290 = load ptr, ptr %289, align 8, !tbaa !17
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @cfa, i8 0, i64 24, i1 false)
  %291 = load i32, ptr %290, align 8
  %292 = trunc i32 %291 to i16
  switch i16 %292, label %305 [
    i16 49, label %293
    i16 37, label %302
  ]

293:                                              ; preds = %288
  %294 = getelementptr inbounds %struct.rtx_def, ptr %290, i64 0, i32 1
  %295 = load ptr, ptr %294, align 8, !tbaa !17
  %296 = getelementptr i8, ptr %295, i64 8
  %297 = load i32, ptr %296, align 8, !tbaa !17
  store i32 %297, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %298 = getelementptr inbounds %struct.rtx_def, ptr %290, i64 0, i32 1, i32 0, i32 0, i64 1
  %299 = load ptr, ptr %298, align 8, !tbaa !17
  %300 = getelementptr inbounds %struct.rtx_def, ptr %299, i64 0, i32 1
  %301 = load i64, ptr %300, align 8, !tbaa !17
  store i64 %301, ptr @cfa, align 8, !tbaa !42
  br label %306

302:                                              ; preds = %288
  %303 = getelementptr i8, ptr %290, i64 8
  %304 = load i32, ptr %303, align 8, !tbaa !17
  store i32 %304, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  br label %306

305:                                              ; preds = %288
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1840, ptr noundef nonnull @.str.5) #31
  br label %306

306:                                              ; preds = %293, %302, %305
  tail call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull @cfa)
  br label %550

307:                                              ; preds = %280
  %308 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1
  %309 = load ptr, ptr %308, align 8, !tbaa !17
  %310 = icmp eq ptr %309, null
  br i1 %310, label %311, label %321

311:                                              ; preds = %307
  %312 = load ptr, ptr %279, align 8, !tbaa !17
  %313 = load i32, ptr %312, align 8
  %314 = and i32 %313, 65535
  %315 = icmp eq i32 %314, 15
  br i1 %315, label %316, label %321

316:                                              ; preds = %311
  %317 = getelementptr inbounds %struct.rtx_def, ptr %312, i64 0, i32 1
  %318 = load ptr, ptr %317, align 8, !tbaa !17
  %319 = getelementptr inbounds %struct.rtvec_def, ptr %318, i64 0, i32 1
  %320 = load ptr, ptr %319, align 8, !tbaa !6
  br label %321

321:                                              ; preds = %311, %316, %307
  %322 = phi ptr [ %320, %316 ], [ %312, %311 ], [ %309, %307 ]
  %323 = load i32, ptr %322, align 8
  %324 = and i32 %323, 65535
  %325 = icmp eq i32 %324, 23
  br i1 %325, label %327, label %326

326:                                              ; preds = %321
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1853, ptr noundef nonnull @.str.5) #31
  br label %327

327:                                              ; preds = %326, %321
  %328 = getelementptr inbounds %struct.rtx_def, ptr %322, i64 0, i32 1
  %329 = load ptr, ptr %328, align 8, !tbaa !17
  %330 = getelementptr inbounds %struct.rtx_def, ptr %322, i64 0, i32 1, i32 0, i32 0, i64 1
  %331 = load ptr, ptr %330, align 8, !tbaa !17
  %332 = load i32, ptr %331, align 8
  %333 = trunc i32 %332 to i16
  switch i16 %333, label %349 [
    i16 49, label %334
    i16 37, label %350
  ]

334:                                              ; preds = %327
  %335 = getelementptr inbounds %struct.rtx_def, ptr %331, i64 0, i32 1
  %336 = load ptr, ptr %335, align 8, !tbaa !17
  %337 = getelementptr i8, ptr %336, i64 8
  %338 = load i32, ptr %337, align 8, !tbaa !17
  %339 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %340 = icmp eq i32 %338, %339
  br i1 %340, label %342, label %341

341:                                              ; preds = %334
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1860, ptr noundef nonnull @.str.5) #31
  br label %342

342:                                              ; preds = %341, %334
  %343 = getelementptr inbounds %struct.rtx_def, ptr %331, i64 0, i32 1, i32 0, i32 0, i64 1
  %344 = load ptr, ptr %343, align 8, !tbaa !17
  %345 = getelementptr inbounds %struct.rtx_def, ptr %344, i64 0, i32 1
  %346 = load i64, ptr %345, align 8, !tbaa !17
  %347 = load i64, ptr @cfa, align 8, !tbaa !42
  %348 = sub nsw i64 %347, %346
  store i64 %348, ptr @cfa, align 8, !tbaa !42
  br label %350

349:                                              ; preds = %327
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1868, ptr noundef nonnull @.str.5) #31
  br label %350

350:                                              ; preds = %349, %342, %327
  %351 = getelementptr i8, ptr %329, i64 8
  %352 = load i32, ptr %351, align 8, !tbaa !17
  store i32 %352, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %353 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 3), align 4
  %354 = and i8 %353, 1
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %357, label %356

356:                                              ; preds = %350
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1872, ptr noundef nonnull @.str.5) #31
  br label %357

357:                                              ; preds = %350, %356
  tail call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull @cfa)
  br label %550

358:                                              ; preds = %280
  %359 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1
  %360 = load ptr, ptr %359, align 8, !tbaa !17
  %361 = icmp eq ptr %360, null
  br i1 %361, label %362, label %373

362:                                              ; preds = %358
  %363 = load i32, ptr %0, align 8
  %364 = and i32 %363, 65535
  %365 = add nsw i32 %364, -7
  %366 = icmp ult i32 %365, 4
  tail call void @llvm.assume(i1 %366)
  %367 = load ptr, ptr %279, align 8, !tbaa !17
  %368 = load i32, ptr %367, align 8
  %369 = and i32 %368, 65535
  %370 = icmp eq i32 %369, 23
  br i1 %370, label %373, label %371

371:                                              ; preds = %362
  %372 = tail call ptr @single_set_2(ptr noundef nonnull %0, ptr noundef nonnull %367) #31
  br label %373

373:                                              ; preds = %371, %362, %358
  %374 = phi ptr [ %360, %358 ], [ %372, %371 ], [ %367, %362 ]
  %375 = getelementptr i8, ptr %374, i64 8
  %376 = load ptr, ptr %375, align 8, !tbaa !17
  %377 = getelementptr i8, ptr %374, i64 16
  %378 = load ptr, ptr %377, align 8, !tbaa !17
  %379 = load i32, ptr %376, align 8
  %380 = and i32 %379, 65535
  %381 = icmp eq i32 %380, 43
  br i1 %381, label %383, label %382

382:                                              ; preds = %373
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1887, ptr noundef nonnull @.str.5) #31
  br label %383

383:                                              ; preds = %382, %373
  %384 = getelementptr inbounds %struct.rtx_def, ptr %376, i64 0, i32 1
  %385 = load ptr, ptr %384, align 8, !tbaa !17
  %386 = load i32, ptr %385, align 8
  %387 = trunc i32 %386 to i16
  switch i16 %387, label %412 [
    i16 37, label %388
    i16 49, label %397
  ]

388:                                              ; preds = %383
  %389 = getelementptr i8, ptr %385, i64 8
  %390 = load i32, ptr %389, align 8, !tbaa !17
  %391 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %392 = icmp eq i32 %390, %391
  br i1 %392, label %394, label %393

393:                                              ; preds = %388
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1894, ptr noundef nonnull @.str.5) #31
  br label %394

394:                                              ; preds = %393, %388
  %395 = load i64, ptr @cfa, align 8, !tbaa !42
  %396 = sub nsw i64 0, %395
  br label %413

397:                                              ; preds = %383
  %398 = getelementptr inbounds %struct.rtx_def, ptr %385, i64 0, i32 1
  %399 = load ptr, ptr %398, align 8, !tbaa !17
  %400 = getelementptr i8, ptr %399, i64 8
  %401 = load i32, ptr %400, align 8, !tbaa !17
  %402 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %403 = icmp eq i32 %401, %402
  br i1 %403, label %405, label %404

404:                                              ; preds = %397
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1898, ptr noundef nonnull @.str.5) #31
  br label %405

405:                                              ; preds = %404, %397
  %406 = getelementptr inbounds %struct.rtx_def, ptr %385, i64 0, i32 1, i32 0, i32 0, i64 1
  %407 = load ptr, ptr %406, align 8, !tbaa !17
  %408 = getelementptr inbounds %struct.rtx_def, ptr %407, i64 0, i32 1
  %409 = load i64, ptr %408, align 8, !tbaa !17
  %410 = load i64, ptr @cfa, align 8, !tbaa !42
  %411 = sub nsw i64 %409, %410
  br label %413

412:                                              ; preds = %383
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1902, ptr noundef nonnull @.str.5) #31
  br label %413

413:                                              ; preds = %412, %405, %394
  %414 = phi i64 [ undef, %412 ], [ %411, %405 ], [ %396, %394 ]
  %415 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 64), align 8, !tbaa !76
  %416 = tail call ptr %415(ptr noundef %378) #31
  %417 = icmp eq ptr %416, null
  br i1 %417, label %418, label %424

418:                                              ; preds = %413
  %419 = getelementptr i8, ptr %378, i64 8
  %420 = load i32, ptr %419, align 8, !tbaa !17
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !21
  tail call fastcc void @reg_save(ptr noundef nonnull @dwarf2out_cfi_label.label, i32 noundef %423, i32 noundef -1, i64 noundef %414)
  br label %550

424:                                              ; preds = %413
  %425 = load i32, ptr %416, align 8
  %426 = and i32 %425, 65535
  %427 = icmp eq i32 %426, 15
  br i1 %427, label %429, label %428

428:                                              ; preds = %424
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1919, ptr noundef nonnull @.str.5) #31
  br label %429

429:                                              ; preds = %428, %424
  %430 = getelementptr inbounds %struct.rtx_def, ptr %416, i64 0, i32 1
  %431 = load ptr, ptr %430, align 8, !tbaa !17
  %432 = load i32, ptr %431, align 8, !tbaa !73
  %433 = icmp sgt i32 %432, 0
  br i1 %433, label %434, label %550

434:                                              ; preds = %429
  %435 = zext i32 %432 to i64
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ 0, %434 ], [ %455, %436 ]
  %438 = phi i64 [ %414, %434 ], [ %454, %436 ]
  %439 = load ptr, ptr %430, align 8, !tbaa !17
  %440 = getelementptr inbounds %struct.rtvec_def, ptr %439, i64 0, i32 1, i64 %437
  %441 = load ptr, ptr %440, align 8, !tbaa !6
  %442 = getelementptr i8, ptr %441, i64 8
  %443 = load i32, ptr %442, align 8, !tbaa !17
  %444 = zext i32 %443 to i64
  %445 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %444
  %446 = load i32, ptr %445, align 4, !tbaa !21
  tail call fastcc void @reg_save(ptr noundef nonnull @dwarf2out_cfi_label.label, i32 noundef %446, i32 noundef -1, i64 noundef %438)
  %447 = load i32, ptr %441, align 8
  %448 = lshr i32 %447, 16
  %449 = and i32 %448, 255
  %450 = zext i32 %449 to i64
  %451 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %450
  %452 = load i8, ptr %451, align 1, !tbaa !17
  %453 = zext i8 %452 to i64
  %454 = add nsw i64 %438, %453
  %455 = add nuw nsw i64 %437, 1
  %456 = icmp eq i64 %455, %435
  br i1 %456, label %550, label %436, !llvm.loop !77

457:                                              ; preds = %280
  %458 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1
  %459 = load ptr, ptr %458, align 8, !tbaa !17
  %460 = icmp eq ptr %459, null
  br i1 %460, label %461, label %471

461:                                              ; preds = %457
  %462 = load ptr, ptr %279, align 8, !tbaa !17
  %463 = load i32, ptr %462, align 8
  %464 = and i32 %463, 65535
  %465 = icmp eq i32 %464, 15
  br i1 %465, label %466, label %471

466:                                              ; preds = %461
  %467 = getelementptr inbounds %struct.rtx_def, ptr %462, i64 0, i32 1
  %468 = load ptr, ptr %467, align 8, !tbaa !17
  %469 = getelementptr inbounds %struct.rtvec_def, ptr %468, i64 0, i32 1
  %470 = load ptr, ptr %469, align 8, !tbaa !6
  br label %471

471:                                              ; preds = %461, %466, %457
  %472 = phi ptr [ %470, %466 ], [ %462, %461 ], [ %459, %457 ]
  %473 = getelementptr i8, ptr %472, i64 8
  %474 = load ptr, ptr %473, align 8, !tbaa !17
  %475 = getelementptr i8, ptr %472, i64 16
  %476 = load ptr, ptr %475, align 8, !tbaa !17
  %477 = load ptr, ptr @global_rtl, align 16, !tbaa !6
  %478 = icmp eq ptr %477, %476
  br i1 %478, label %485, label %479

479:                                              ; preds = %471
  %480 = getelementptr i8, ptr %476, i64 8
  %481 = load i32, ptr %480, align 8, !tbaa !17
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %482
  %484 = load i32, ptr %483, align 4, !tbaa !21
  br label %485

485:                                              ; preds = %471, %479
  %486 = phi i32 [ %484, %479 ], [ 8, %471 ]
  %487 = getelementptr i8, ptr %474, i64 8
  %488 = load i32, ptr %487, align 8, !tbaa !17
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %489
  %491 = load i32, ptr %490, align 4, !tbaa !21
  tail call fastcc void @reg_save(ptr noundef nonnull @dwarf2out_cfi_label.label, i32 noundef %486, i32 noundef %491, i64 noundef 0)
  br label %550

492:                                              ; preds = %280
  %493 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1
  %494 = load ptr, ptr %493, align 8, !tbaa !17
  %495 = icmp eq ptr %494, null
  br i1 %495, label %496, label %510

496:                                              ; preds = %492
  %497 = load ptr, ptr %279, align 8, !tbaa !17
  %498 = load i32, ptr %497, align 8
  %499 = and i32 %498, 65535
  %500 = icmp eq i32 %499, 15
  br i1 %500, label %501, label %506

501:                                              ; preds = %496
  %502 = getelementptr inbounds %struct.rtx_def, ptr %497, i64 0, i32 1
  %503 = load ptr, ptr %502, align 8, !tbaa !17
  %504 = getelementptr inbounds %struct.rtvec_def, ptr %503, i64 0, i32 1
  %505 = load ptr, ptr %504, align 8, !tbaa !6
  br label %506

506:                                              ; preds = %501, %496
  %507 = phi ptr [ %505, %501 ], [ %497, %496 ]
  %508 = getelementptr inbounds %struct.rtx_def, ptr %507, i64 0, i32 1
  %509 = load ptr, ptr %508, align 8, !tbaa !17
  br label %510

510:                                              ; preds = %506, %492
  %511 = phi ptr [ %509, %506 ], [ %494, %492 ]
  %512 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %512, align 8, !tbaa !46
  %513 = getelementptr inbounds %struct.dw_cfi_struct, ptr %512, i64 0, i32 2
  store i32 0, ptr %513, align 8, !tbaa !17
  %514 = getelementptr inbounds %struct.dw_cfi_struct, ptr %512, i64 0, i32 3
  store i32 0, ptr %514, align 8, !tbaa !17
  %515 = getelementptr i8, ptr %511, i64 8
  %516 = load i32, ptr %515, align 8, !tbaa !17
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %517
  %519 = load i32, ptr %518, align 4, !tbaa !21
  %520 = icmp ult i32 %519, 64
  %521 = select i1 %520, i32 192, i32 6
  %522 = getelementptr inbounds %struct.dw_cfi_struct, ptr %512, i64 0, i32 1
  store i32 %521, ptr %522, align 8, !tbaa !48
  store i32 %519, ptr %513, align 8, !tbaa !17
  tail call fastcc void @add_fde_cfi(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull %512)
  br label %550

523:                                              ; preds = %280
  %524 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1
  %525 = load ptr, ptr %524, align 8, !tbaa !17
  %526 = load i32, ptr %525, align 8
  %527 = and i32 %526, 65535
  %528 = icmp eq i32 %527, 37
  br i1 %528, label %529, label %550

529:                                              ; preds = %523
  %530 = load i32, ptr @fde_table_in_use, align 4
  %531 = icmp eq i32 %530, 0
  %532 = load ptr, ptr @fde_table, align 8
  %533 = icmp eq ptr %532, null
  %534 = select i1 %531, i1 true, i1 %533
  br i1 %534, label %550, label %535

535:                                              ; preds = %529
  %536 = add i32 %530, -1
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds %struct.dw_fde_struct, ptr %532, i64 %537, i32 13
  %539 = load i32, ptr %538, align 4, !tbaa !78
  %540 = icmp eq i32 %539, -1
  br i1 %540, label %543, label %541

541:                                              ; preds = %535
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2765, ptr noundef nonnull @.str.5) #31
  %542 = load i32, ptr %525, align 8
  br label %543

543:                                              ; preds = %535, %541
  %544 = phi i32 [ %526, %535 ], [ %542, %541 ]
  %545 = and i32 %544, 65535
  %546 = icmp eq i32 %545, 37
  br i1 %546, label %547, label %550

547:                                              ; preds = %543
  %548 = getelementptr i8, ptr %525, i64 8
  %549 = load i32, ptr %548, align 8, !tbaa !17
  store i32 %549, ptr %538, align 4, !tbaa !78
  br label %550

550:                                              ; preds = %436, %429, %418, %523, %543, %547, %529, %306, %357, %485, %510, %280
  %551 = phi i8 [ %282, %280 ], [ 1, %510 ], [ 1, %485 ], [ 1, %357 ], [ 1, %306 ], [ 1, %529 ], [ 1, %547 ], [ 1, %543 ], [ 1, %523 ], [ 1, %418 ], [ 1, %429 ], [ 1, %436 ]
  %552 = getelementptr inbounds %struct.rtx_def, ptr %281, i64 0, i32 1, i32 0, i32 0, i64 1
  %553 = load ptr, ptr %552, align 8, !tbaa !17
  %554 = icmp eq ptr %553, null
  br i1 %554, label %555, label %280, !llvm.loop !79

555:                                              ; preds = %550
  %556 = icmp eq i8 %551, 0
  br i1 %556, label %557, label %562

557:                                              ; preds = %274, %555
  %558 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1
  br label %559

559:                                              ; preds = %557, %286
  %560 = phi ptr [ %287, %286 ], [ %558, %557 ]
  %561 = load ptr, ptr %560, align 8, !tbaa !17
  tail call fastcc void @dwarf2out_frame_debug_expr(ptr noundef %561)
  br label %562

562:                                              ; preds = %105, %261, %246, %215, %203, %174, %170, %169, %163, %156, %128, %97, %555, %90, %94, %40, %43, %559
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @flush_queued_reg_saves() unnamed_addr #10 {
  %1 = load ptr, ptr @queued_reg_saves, align 8, !tbaa !6
  %2 = icmp eq ptr %1, null
  br i1 %2, label %76, label %3

3:                                                ; preds = %0, %69
  %4 = phi ptr [ %74, %69 ], [ %1, %0 ]
  %5 = load i64, ptr @num_regs_saved_in_regs, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.queued_reg_save, ptr %4, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !70
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load i32, ptr %10, align 8, !tbaa !17
  br label %12

12:                                               ; preds = %7, %19
  %13 = phi i64 [ 0, %7 ], [ %20, %19 ]
  %14 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %13
  %15 = load ptr, ptr %14, align 16, !tbaa !65
  %16 = getelementptr i8, ptr %15, i64 8
  %17 = load i32, ptr %16, align 8, !tbaa !17
  %18 = icmp eq i32 %17, %11
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = add nuw i64 %13, 1
  %21 = icmp eq i64 %20, %5
  br i1 %21, label %22, label %12, !llvm.loop !80

22:                                               ; preds = %19, %12
  %23 = phi i64 [ %5, %19 ], [ %13, %12 ]
  %24 = getelementptr inbounds %struct.queued_reg_save, ptr %4, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !81
  %26 = icmp ne ptr %25, null
  %27 = icmp eq i64 %23, %5
  %28 = and i1 %27, %26
  br i1 %28, label %33, label %42

29:                                               ; preds = %3
  %30 = getelementptr inbounds %struct.queued_reg_save, ptr %4, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !81
  %32 = icmp eq ptr %31, null
  br i1 %32, label %42, label %37

33:                                               ; preds = %22
  %34 = icmp eq i64 %5, 4
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1724, ptr noundef nonnull @.str.5) #31
  %36 = load i64, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  br label %37

37:                                               ; preds = %29, %33, %35
  %38 = phi i64 [ %23, %33 ], [ %23, %35 ], [ 0, %29 ]
  %39 = phi ptr [ %24, %33 ], [ %24, %35 ], [ %30, %29 ]
  %40 = phi i64 [ %5, %33 ], [ %36, %35 ], [ 0, %29 ]
  %41 = add i64 %40, 1
  store i64 %41, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  br label %42

42:                                               ; preds = %29, %37, %22
  %43 = phi ptr [ %39, %37 ], [ %24, %22 ], [ %30, %29 ]
  %44 = phi i64 [ %38, %37 ], [ %23, %22 ], [ 0, %29 ]
  %45 = phi i64 [ %41, %37 ], [ %5, %22 ], [ 0, %29 ]
  %46 = icmp eq i64 %44, %45
  %47 = getelementptr inbounds %struct.queued_reg_save, ptr %4, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !70
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = load ptr, ptr %43, align 8, !tbaa !81
  br label %55

51:                                               ; preds = %42
  %52 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %44
  store ptr %48, ptr %52, align 16, !tbaa !65
  %53 = load ptr, ptr %43, align 8, !tbaa !81
  %54 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %44, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !68
  br label %55

55:                                               ; preds = %49, %51
  %56 = phi ptr [ %50, %49 ], [ %53, %51 ]
  %57 = getelementptr i8, ptr %48, i64 8
  %58 = load i32, ptr %57, align 8, !tbaa !17
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !21
  %62 = icmp eq ptr %56, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %55
  %64 = getelementptr i8, ptr %56, i64 8
  %65 = load i32, ptr %64, align 8, !tbaa !17
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %66
  %68 = load i32, ptr %67, align 4, !tbaa !21
  br label %69

69:                                               ; preds = %55, %63
  %70 = phi i32 [ %68, %63 ], [ -1, %55 ]
  %71 = load ptr, ptr @last_reg_save_label, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.queued_reg_save, ptr %4, i64 0, i32 2
  %73 = load i64, ptr %72, align 8, !tbaa !82
  tail call fastcc void @reg_save(ptr noundef %71, i32 noundef %61, i32 noundef %70, i64 noundef %73)
  %74 = load ptr, ptr %4, align 8, !tbaa !6
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %3, !llvm.loop !83

76:                                               ; preds = %69, %0
  store ptr null, ptr @queued_reg_saves, align 8, !tbaa !6
  store ptr null, ptr @last_reg_save_label, align 8, !tbaa !6
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #15

declare i32 @ix86_cfun_abi() local_unnamed_addr #3

declare ptr @single_set_2(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dwarf2out_frame_debug_expr(ptr noundef %0) unnamed_addr #10 {
  %2 = alloca %struct.cfa_loc, align 8
  %3 = load i32, ptr %0, align 8
  %4 = trunc i32 %3 to i16
  switch i16 %4, label %80 [
    i16 15, label %5
    i16 5, label %5
    i16 23, label %81
  ]

5:                                                ; preds = %1, %1
  %6 = and i32 %3, 65535
  %7 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i32, ptr %8, align 8, !tbaa !73
  %10 = icmp eq i32 %6, 15
  %11 = icmp sgt i32 %9, 0
  %12 = select i1 %10, i1 %11, i1 false
  br i1 %12, label %13, label %38

13:                                               ; preds = %5
  %14 = zext i32 %9 to i64
  br label %15

15:                                               ; preds = %13, %35
  %16 = phi i64 [ 0, %13 ], [ %36, %35 ]
  %17 = load ptr, ptr %7, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.rtvec_def, ptr %17, i64 0, i32 1, i64 %16
  %19 = load ptr, ptr %18, align 8, !tbaa !6
  %20 = load i32, ptr %19, align 8
  %21 = and i32 %20, 65535
  %22 = icmp eq i32 %21, 23
  br i1 %22, label %23, label %35

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.rtx_def, ptr %19, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = load i32, ptr %25, align 8
  %27 = and i32 %26, 65535
  %28 = icmp eq i32 %27, 43
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = and i32 %20, 1073741824
  %31 = icmp ne i32 %30, 0
  %32 = icmp eq i64 %16, 0
  %33 = or i1 %32, %31
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call fastcc void @dwarf2out_frame_debug_expr(ptr noundef nonnull %19)
  br label %35

35:                                               ; preds = %15, %23, %34, %29
  %36 = add nuw nsw i64 %16, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %38, label %15, !llvm.loop !84

38:                                               ; preds = %35, %5
  br i1 %11, label %39, label %718

39:                                               ; preds = %38
  %40 = zext i32 %9 to i64
  br label %41

41:                                               ; preds = %39, %77
  %42 = phi i64 [ 0, %39 ], [ %78, %77 ]
  %43 = load ptr, ptr %7, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.rtvec_def, ptr %43, i64 0, i32 1, i64 %42
  %45 = load ptr, ptr %44, align 8, !tbaa !6
  %46 = load i32, ptr %45, align 8
  %47 = and i32 %46, 65535
  %48 = icmp eq i32 %47, 23
  br i1 %48, label %49, label %77

49:                                               ; preds = %41
  %50 = getelementptr %struct.rtx_def, ptr %45, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = load i32, ptr %51, align 8
  %53 = and i32 %52, 65535
  %54 = icmp eq i32 %53, 43
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = load i32, ptr %0, align 8
  %57 = and i32 %56, 65535
  %58 = icmp eq i32 %57, 5
  br i1 %58, label %59, label %65

59:                                               ; preds = %55, %49
  %60 = and i32 %46, 1073741824
  %61 = icmp ne i32 %60, 0
  %62 = icmp eq i64 %42, 0
  %63 = or i1 %62, %61
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  tail call fastcc void @dwarf2out_frame_debug_expr(ptr noundef nonnull %45)
  br label %77

65:                                               ; preds = %59, %55
  %66 = icmp ne i64 %42, 0
  %67 = and i32 %46, 1073807359
  %68 = icmp eq i32 %67, 23
  %69 = and i1 %66, %68
  br i1 %69, label %70, label %77

70:                                               ; preds = %65
  %71 = load i64, ptr @args_size, align 8, !tbaa !38
  %72 = getelementptr i8, ptr %45, i64 16
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = tail call fastcc i64 @stack_adjust_offset(ptr nonnull %51, ptr %73, i64 noundef %71, i64 noundef 0)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %70
  tail call fastcc void @dwarf2out_stack_adjust(i64 noundef %74)
  br label %77

77:                                               ; preds = %41, %70, %76, %64, %65
  %78 = add nuw nsw i64 %42, 1
  %79 = icmp eq i64 %78, %40
  br i1 %79, label %718, label %41, !llvm.loop !85

80:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2220, ptr noundef nonnull @.str.5) #31
  br label %81

81:                                               ; preds = %1, %80
  %82 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %83 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %84 = load ptr, ptr %83, align 8, !tbaa !17
  %85 = load ptr, ptr %82, align 8, !tbaa !17
  %86 = load i32, ptr %84, align 8
  %87 = and i32 %86, 65535
  %88 = icmp eq i32 %87, 37
  br i1 %88, label %89, label %131

89:                                               ; preds = %81
  %90 = getelementptr i8, ptr %84, i64 8
  %91 = load i32, ptr %90, align 8, !tbaa !17
  %92 = load ptr, ptr @queued_reg_saves, align 8, !tbaa !6
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %97

94:                                               ; preds = %109, %89
  %95 = load i64, ptr @num_regs_saved_in_regs, align 8, !tbaa !38
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %127, label %112

97:                                               ; preds = %89, %109
  %98 = phi ptr [ %110, %109 ], [ %92, %89 ]
  %99 = getelementptr inbounds %struct.queued_reg_save, ptr %98, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !81
  %101 = icmp eq ptr %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %97
  %103 = getelementptr i8, ptr %100, i64 8
  %104 = load i32, ptr %103, align 8, !tbaa !17
  %105 = icmp eq i32 %104, %91
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.queued_reg_save, ptr %98, i64 0, i32 1
  %108 = load ptr, ptr %107, align 8, !tbaa !70
  br label %127

109:                                              ; preds = %102, %97
  %110 = load ptr, ptr %98, align 8, !tbaa !6
  %111 = icmp eq ptr %110, null
  br i1 %111, label %94, label %97, !llvm.loop !86

112:                                              ; preds = %94, %124
  %113 = phi i64 [ %125, %124 ], [ 0, %94 ]
  %114 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %113, i32 1
  %115 = load ptr, ptr %114, align 8, !tbaa !68
  %116 = icmp eq ptr %115, null
  br i1 %116, label %124, label %117

117:                                              ; preds = %112
  %118 = getelementptr i8, ptr %115, i64 8
  %119 = load i32, ptr %118, align 8, !tbaa !17
  %120 = icmp eq i32 %119, %91
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = getelementptr inbounds [4 x %struct.reg_saved_in_data], ptr @regs_saved_in_regs, i64 0, i64 %113
  %123 = load ptr, ptr %122, align 16, !tbaa !65
  br label %127

124:                                              ; preds = %117, %112
  %125 = add nuw i64 %113, 1
  %126 = icmp eq i64 %125, %95
  br i1 %126, label %127, label %112, !llvm.loop !87

127:                                              ; preds = %124, %94, %106, %121
  %128 = phi ptr [ %108, %106 ], [ %123, %121 ], [ null, %94 ], [ null, %124 ]
  %129 = icmp eq ptr %128, null
  %130 = select i1 %129, ptr %84, ptr %128
  br label %131

131:                                              ; preds = %127, %81
  %132 = phi ptr [ %130, %127 ], [ %84, %81 ]
  %133 = load i32, ptr @fde_table_in_use, align 4
  %134 = icmp eq i32 %133, 0
  %135 = load ptr, ptr @fde_table, align 8
  %136 = add i32 %133, -1
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %struct.dw_fde_struct, ptr %135, i64 %137
  %139 = select i1 %134, ptr null, ptr %138
  %140 = load i32, ptr %85, align 8
  %141 = trunc i32 %140 to i16
  switch i16 %141, label %717 [
    i16 37, label %142
    i16 43, label %425
  ]

142:                                              ; preds = %131
  %143 = load i32, ptr %132, align 8
  %144 = trunc i32 %143 to i16
  switch i16 %144, label %423 [
    i16 37, label %145
    i16 49, label %187
    i16 50, label %187
    i16 122, label %187
    i16 30, label %350
    i16 62, label %355
    i16 121, label %424
    i16 18, label %387
    i16 19, label %387
    i16 61, label %396
  ]

145:                                              ; preds = %142
  %146 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %147 = getelementptr i8, ptr %132, i64 8
  %148 = load i32, ptr %147, align 8, !tbaa !17
  %149 = icmp eq i32 %146, %148
  %150 = getelementptr i8, ptr %85, i64 8
  %151 = load i32, ptr %150, align 8, !tbaa !17
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  store i32 %151, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  store i32 %151, ptr @cfa_temp.1, align 8, !tbaa !41
  %153 = load i64, ptr @cfa, align 8, !tbaa !42
  store i64 %153, ptr @cfa_temp.0, align 8, !tbaa !42
  br label %424

154:                                              ; preds = %145
  %155 = zext i32 %151 to i64
  %156 = getelementptr inbounds [53 x i8], ptr @fixed_regs, i64 0, i64 %155
  %157 = load i8, ptr %156, align 1, !tbaa !17
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %154
  %160 = zext i32 %148 to i64
  %161 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %160
  %162 = load i32, ptr %161, align 4, !tbaa !21
  %163 = icmp eq i32 %162, 8
  br i1 %163, label %165, label %164

164:                                              ; preds = %159
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2261, ptr noundef nonnull @.str.5) #31
  br label %165

165:                                              ; preds = %154, %159, %164
  %166 = icmp eq ptr %139, null
  br i1 %166, label %186, label %167

167:                                              ; preds = %165
  %168 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 14
  %169 = load i16, ptr %168, align 8
  %170 = and i16 %169, 8
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %186, label %172

172:                                              ; preds = %167
  %173 = load i32, ptr %147, align 8, !tbaa !17
  %174 = icmp eq i32 %173, 7
  br i1 %174, label %175, label %186

175:                                              ; preds = %172
  %176 = load i32, ptr %150, align 8, !tbaa !17
  %177 = icmp eq i32 %176, 6
  br i1 %177, label %178, label %185

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 12
  %180 = load i32, ptr %179, align 8, !tbaa !88
  %181 = icmp eq i32 %180, -1
  %182 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8
  %183 = icmp eq i32 %182, 7
  %184 = select i1 %181, i1 true, i1 %183
  br i1 %184, label %185, label %424

185:                                              ; preds = %178, %175
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2272, ptr noundef nonnull @.str.5) #31
  br label %424

186:                                              ; preds = %172, %167, %165
  tail call fastcc void @queue_reg_save(ptr noundef nonnull %132, ptr noundef nonnull %85, i64 noundef 0)
  br label %424

187:                                              ; preds = %142, %142, %142
  %188 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !6
  %189 = icmp eq ptr %85, %188
  br i1 %189, label %190, label %251

190:                                              ; preds = %187
  %191 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1
  %192 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %193 = load ptr, ptr %192, align 8, !tbaa !17
  %194 = load i32, ptr %193, align 8
  %195 = trunc i32 %194 to i16
  switch i16 %195, label %207 [
    i16 30, label %196
    i16 37, label %199
  ]

196:                                              ; preds = %190
  %197 = getelementptr inbounds %struct.rtx_def, ptr %193, i64 0, i32 1
  %198 = load i64, ptr %197, align 8, !tbaa !17
  br label %208

199:                                              ; preds = %190
  %200 = getelementptr i8, ptr %193, i64 8
  %201 = load i32, ptr %200, align 8, !tbaa !17
  %202 = load i32, ptr @cfa_temp.1, align 8, !tbaa !41
  %203 = icmp eq i32 %201, %202
  br i1 %203, label %205, label %204

204:                                              ; preds = %199
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2292, ptr noundef nonnull @.str.5) #31
  br label %205

205:                                              ; preds = %199, %204
  %206 = load i64, ptr @cfa_temp.0, align 8, !tbaa !42
  br label %208

207:                                              ; preds = %190
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2296, ptr noundef nonnull @.str.5) #31
  br label %208

208:                                              ; preds = %207, %205, %196
  %209 = phi i64 [ undef, %207 ], [ %206, %205 ], [ %198, %196 ]
  %210 = load ptr, ptr %191, align 8, !tbaa !17
  %211 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16, !tbaa !6
  %212 = icmp eq ptr %210, %211
  br i1 %212, label %213, label %223

213:                                              ; preds = %208
  %214 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %215 = icmp eq i32 %214, 6
  br i1 %215, label %217, label %216

216:                                              ; preds = %213
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2302, ptr noundef nonnull @.str.5) #31
  br label %217

217:                                              ; preds = %216, %213
  store i32 7, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %218 = load i32, ptr %132, align 8
  %219 = and i32 %218, 65535
  %220 = icmp eq i32 %219, 50
  %221 = sub nsw i64 0, %209
  %222 = select i1 %220, i64 %209, i64 %221
  br label %240

223:                                              ; preds = %208
  %224 = load i32, ptr %132, align 8
  %225 = and i32 %224, 65535
  %226 = icmp eq i32 %225, 122
  %227 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16
  %228 = icmp eq ptr %210, %227
  %229 = select i1 %226, i1 true, i1 %228
  br i1 %229, label %233, label %230

230:                                              ; preds = %223
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2309, ptr noundef nonnull @.str.5) #31
  %231 = load i32, ptr %132, align 8
  %232 = and i32 %231, 65535
  br label %233

233:                                              ; preds = %230, %223
  %234 = phi i32 [ %232, %230 ], [ %225, %223 ]
  %235 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %236 = icmp eq i32 %234, 50
  %237 = sub nsw i64 0, %209
  %238 = select i1 %236, i64 %209, i64 %237
  %239 = icmp eq i32 %235, 7
  br i1 %239, label %240, label %244

240:                                              ; preds = %217, %233
  %241 = phi i64 [ %222, %217 ], [ %238, %233 ]
  %242 = load i64, ptr @cfa, align 8, !tbaa !42
  %243 = add nsw i64 %242, %241
  store i64 %243, ptr @cfa, align 8, !tbaa !42
  br label %244

244:                                              ; preds = %240, %233
  %245 = phi i64 [ %241, %240 ], [ %238, %233 ]
  %246 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8, !tbaa !41
  %247 = icmp eq i32 %246, 7
  br i1 %247, label %248, label %424

248:                                              ; preds = %244
  %249 = load i64, ptr @cfa_store, align 8, !tbaa !42
  %250 = add nsw i64 %249, %245
  store i64 %250, ptr @cfa_store, align 8, !tbaa !42
  br label %424

251:                                              ; preds = %187
  %252 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16, !tbaa !6
  %253 = icmp eq ptr %85, %252
  br i1 %253, label %254, label %289

254:                                              ; preds = %251
  %255 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 41), align 1, !tbaa !89
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2323, ptr noundef nonnull @.str.5) #31
  br label %258

258:                                              ; preds = %254, %257
  %259 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1
  %260 = load ptr, ptr %259, align 8, !tbaa !17
  %261 = load i32, ptr %260, align 8
  %262 = and i32 %261, 65535
  %263 = icmp eq i32 %262, 37
  br i1 %263, label %264, label %275

264:                                              ; preds = %258
  %265 = getelementptr i8, ptr %260, i64 8
  %266 = load i32, ptr %265, align 8, !tbaa !17
  %267 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %268 = icmp eq i32 %266, %267
  br i1 %268, label %269, label %275

269:                                              ; preds = %264
  %270 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %271 = load ptr, ptr %270, align 8, !tbaa !17
  %272 = load i32, ptr %271, align 8
  %273 = and i32 %272, 65535
  %274 = icmp eq i32 %273, 30
  br i1 %274, label %278, label %275

275:                                              ; preds = %269, %264, %258
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2327, ptr noundef nonnull @.str.5) #31
  %276 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %277 = load ptr, ptr %276, align 8, !tbaa !17
  br label %278

278:                                              ; preds = %269, %275
  %279 = phi ptr [ %271, %269 ], [ %277, %275 ]
  %280 = getelementptr inbounds %struct.rtx_def, ptr %279, i64 0, i32 1
  %281 = load i64, ptr %280, align 8, !tbaa !17
  %282 = load i32, ptr %132, align 8
  %283 = and i32 %282, 65535
  %284 = icmp eq i32 %283, 50
  %285 = sub nsw i64 0, %281
  %286 = select i1 %284, i64 %281, i64 %285
  %287 = load i64, ptr @cfa, align 8, !tbaa !42
  %288 = add nsw i64 %286, %287
  store i64 %288, ptr @cfa, align 8, !tbaa !42
  store i32 6, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  br label %424

289:                                              ; preds = %251
  %290 = and i32 %143, 65535
  %291 = icmp eq i32 %290, 50
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2336, ptr noundef nonnull @.str.5) #31
  br label %293

293:                                              ; preds = %289, %292
  %294 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1
  %295 = load ptr, ptr %294, align 8, !tbaa !17
  %296 = load i32, ptr %295, align 8
  %297 = and i32 %296, 65535
  %298 = icmp eq i32 %297, 37
  br i1 %298, label %299, label %334

299:                                              ; preds = %293
  %300 = getelementptr i8, ptr %295, i64 8
  %301 = load i32, ptr %300, align 8, !tbaa !17
  %302 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %303 = icmp eq i32 %301, %302
  br i1 %303, label %304, label %317

304:                                              ; preds = %299
  %305 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %306 = load ptr, ptr %305, align 8, !tbaa !17
  %307 = load i32, ptr %306, align 8
  %308 = and i32 %307, 65535
  %309 = icmp eq i32 %308, 30
  br i1 %309, label %310, label %317

310:                                              ; preds = %304
  %311 = getelementptr inbounds %struct.rtx_def, ptr %306, i64 0, i32 1
  %312 = load i64, ptr %311, align 8, !tbaa !17
  %313 = load i64, ptr @cfa, align 8, !tbaa !42
  %314 = sub i64 %313, %312
  store i64 %314, ptr @cfa, align 8, !tbaa !42
  %315 = getelementptr i8, ptr %85, i64 8
  %316 = load i32, ptr %315, align 8, !tbaa !17
  store i32 %316, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  store i32 %316, ptr @cfa_temp.1, align 8, !tbaa !41
  store i64 %314, ptr @cfa_temp.0, align 8, !tbaa !42
  br label %424

317:                                              ; preds = %304, %299
  %318 = load i32, ptr @cfa_temp.1, align 8, !tbaa !41
  %319 = icmp eq i32 %301, %318
  br i1 %319, label %320, label %334

320:                                              ; preds = %317
  %321 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %322 = load ptr, ptr %321, align 8, !tbaa !17
  %323 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !6
  %324 = icmp eq ptr %322, %323
  br i1 %324, label %325, label %334

325:                                              ; preds = %320
  %326 = icmp eq i32 %302, 7
  br i1 %326, label %328, label %327

327:                                              ; preds = %325
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2360, ptr noundef nonnull @.str.5) #31
  br label %328

328:                                              ; preds = %325, %327
  %329 = getelementptr i8, ptr %85, i64 8
  %330 = load i32, ptr %329, align 8, !tbaa !17
  store i32 %330, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8, !tbaa !41
  %331 = load i64, ptr @cfa, align 8, !tbaa !42
  %332 = load i64, ptr @cfa_temp.0, align 8, !tbaa !42
  %333 = sub nsw i64 %331, %332
  store i64 %333, ptr @cfa_store, align 8, !tbaa !42
  br label %424

334:                                              ; preds = %293, %320, %317
  %335 = load i32, ptr %132, align 8
  %336 = and i32 %335, 65535
  %337 = icmp eq i32 %336, 122
  br i1 %337, label %338, label %349

338:                                              ; preds = %334
  %339 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %340 = load ptr, ptr %339, align 8, !tbaa !17
  %341 = load i32, ptr %340, align 8
  %342 = and i32 %341, 65535
  %343 = icmp eq i32 %342, 30
  br i1 %343, label %344, label %349

344:                                              ; preds = %338
  %345 = getelementptr i8, ptr %85, i64 8
  %346 = load i32, ptr %345, align 8, !tbaa !17
  store i32 %346, ptr @cfa_temp.1, align 8, !tbaa !41
  %347 = getelementptr inbounds %struct.rtx_def, ptr %340, i64 0, i32 1
  %348 = load i64, ptr %347, align 8, !tbaa !17
  store i64 %348, ptr @cfa_temp.0, align 8, !tbaa !42
  br label %424

349:                                              ; preds = %338, %334
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2373, ptr noundef nonnull @.str.5) #31
  br label %424

350:                                              ; preds = %142
  %351 = getelementptr i8, ptr %85, i64 8
  %352 = load i32, ptr %351, align 8, !tbaa !17
  store i32 %352, ptr @cfa_temp.1, align 8, !tbaa !41
  %353 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1
  %354 = load i64, ptr %353, align 8, !tbaa !17
  store i64 %354, ptr @cfa_temp.0, align 8, !tbaa !42
  br label %424

355:                                              ; preds = %142
  %356 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1
  %357 = load ptr, ptr %356, align 8, !tbaa !17
  %358 = load i32, ptr %357, align 8
  %359 = and i32 %358, 65535
  %360 = icmp eq i32 %359, 37
  br i1 %360, label %361, label %372

361:                                              ; preds = %355
  %362 = getelementptr i8, ptr %357, i64 8
  %363 = load i32, ptr %362, align 8, !tbaa !17
  %364 = load i32, ptr @cfa_temp.1, align 8, !tbaa !41
  %365 = icmp eq i32 %363, %364
  br i1 %365, label %366, label %372

366:                                              ; preds = %361
  %367 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %368 = load ptr, ptr %367, align 8, !tbaa !17
  %369 = load i32, ptr %368, align 8
  %370 = and i32 %369, 65535
  %371 = icmp eq i32 %370, 30
  br i1 %371, label %374, label %372

372:                                              ; preds = %366, %361, %355
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2387, ptr noundef nonnull @.str.5) #31
  %373 = load i32, ptr @cfa_temp.1, align 8, !tbaa !41
  br label %374

374:                                              ; preds = %366, %372
  %375 = phi i32 [ %363, %366 ], [ %373, %372 ]
  %376 = getelementptr i8, ptr %85, i64 8
  %377 = load i32, ptr %376, align 8, !tbaa !17
  %378 = icmp eq i32 %377, %375
  br i1 %378, label %380, label %379

379:                                              ; preds = %374
  store i32 %377, ptr @cfa_temp.1, align 8, !tbaa !41
  br label %380

380:                                              ; preds = %379, %374
  %381 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %382 = load ptr, ptr %381, align 8, !tbaa !17
  %383 = getelementptr inbounds %struct.rtx_def, ptr %382, i64 0, i32 1
  %384 = load i64, ptr %383, align 8, !tbaa !17
  %385 = load i64, ptr @cfa_temp.0, align 8, !tbaa !42
  %386 = or i64 %385, %384
  store i64 %386, ptr @cfa_temp.0, align 8, !tbaa !42
  br label %424

387:                                              ; preds = %142, %142
  %388 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 81), align 8, !tbaa !98
  %389 = icmp eq ptr %388, null
  br i1 %389, label %390, label %392

390:                                              ; preds = %387
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2403, ptr noundef nonnull @.str.5) #31
  %391 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 81), align 8, !tbaa !98
  br label %392

392:                                              ; preds = %387, %390
  %393 = phi ptr [ %388, %387 ], [ %391, %390 ]
  %394 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %395 = load i32, ptr %394, align 8, !tbaa !17
  tail call void %393(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull %0, i32 noundef %395) #31
  br label %718

396:                                              ; preds = %142
  %397 = icmp eq ptr %139, null
  br i1 %397, label %718, label %398

398:                                              ; preds = %396
  %399 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1
  %400 = load ptr, ptr %399, align 8, !tbaa !17
  %401 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !6
  %402 = icmp eq ptr %400, %401
  br i1 %402, label %403, label %718

403:                                              ; preds = %398
  %404 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8, !tbaa !41
  %405 = getelementptr i8, ptr %400, i64 8
  %406 = load i32, ptr %405, align 8, !tbaa !17
  %407 = icmp eq i32 %404, %406
  br i1 %407, label %409, label %408

408:                                              ; preds = %403
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2414, ptr noundef nonnull @.str.5) #31
  br label %409

409:                                              ; preds = %403, %408
  %410 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 14
  %411 = load i16, ptr %410, align 8
  %412 = or i16 %411, 8
  store i16 %412, ptr %410, align 8
  %413 = getelementptr inbounds %struct.rtx_def, ptr %132, i64 0, i32 1, i32 0, i32 0, i64 1
  %414 = load ptr, ptr %413, align 8, !tbaa !17
  %415 = getelementptr inbounds %struct.rtx_def, ptr %414, i64 0, i32 1
  %416 = load i64, ptr %415, align 8, !tbaa !17
  %417 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 11
  store i64 %416, ptr %417, align 8, !tbaa !63
  store i64 0, ptr @cfa_store, align 8, !tbaa !42
  %418 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8
  %419 = add i32 %418, -8
  %420 = icmp ult i32 %419, -2
  br i1 %420, label %421, label %718

421:                                              ; preds = %409
  %422 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 12
  store i32 %418, ptr %422, align 8, !tbaa !88
  br label %718

423:                                              ; preds = %142
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2426, ptr noundef nonnull @.str.5) #31
  br label %424

424:                                              ; preds = %178, %248, %244, %310, %344, %349, %328, %278, %152, %185, %186, %423, %142, %380, %350
  tail call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull @cfa)
  br label %718

425:                                              ; preds = %131
  %426 = getelementptr inbounds %struct.rtx_def, ptr %85, i64 0, i32 1
  %427 = load ptr, ptr %426, align 8, !tbaa !17
  %428 = load i32, ptr %427, align 8
  %429 = trunc i32 %428 to i16
  switch i16 %429, label %584 [
    i16 78, label %430
    i16 75, label %466
    i16 74, label %466
    i16 49, label %510
    i16 50, label %510
    i16 122, label %510
    i16 37, label %551
    i16 77, label %564
  ]

430:                                              ; preds = %425
  %431 = getelementptr inbounds %struct.rtx_def, ptr %427, i64 0, i32 1, i32 0, i32 0, i64 1
  %432 = load ptr, ptr %431, align 8, !tbaa !17
  %433 = getelementptr inbounds %struct.rtx_def, ptr %432, i64 0, i32 1, i32 0, i32 0, i64 1
  %434 = load ptr, ptr %433, align 8, !tbaa !17
  %435 = load i32, ptr %434, align 8
  %436 = and i32 %435, 65535
  %437 = icmp eq i32 %436, 30
  br i1 %437, label %444, label %438

438:                                              ; preds = %430
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2443, ptr noundef nonnull @.str.5) #31
  %439 = load ptr, ptr %426, align 8, !tbaa !17
  %440 = getelementptr inbounds %struct.rtx_def, ptr %439, i64 0, i32 1, i32 0, i32 0, i64 1
  %441 = load ptr, ptr %440, align 8, !tbaa !17
  %442 = getelementptr inbounds %struct.rtx_def, ptr %441, i64 0, i32 1, i32 0, i32 0, i64 1
  %443 = load ptr, ptr %442, align 8, !tbaa !17
  br label %444

444:                                              ; preds = %430, %438
  %445 = phi ptr [ %434, %430 ], [ %443, %438 ]
  %446 = phi ptr [ %427, %430 ], [ %439, %438 ]
  %447 = getelementptr inbounds %struct.rtx_def, ptr %446, i64 0, i32 1
  %448 = getelementptr inbounds %struct.rtx_def, ptr %445, i64 0, i32 1
  %449 = load i64, ptr %448, align 8, !tbaa !17
  %450 = load ptr, ptr %447, align 8, !tbaa !17
  %451 = getelementptr i8, ptr %450, i64 8
  %452 = load i32, ptr %451, align 8, !tbaa !17
  %453 = icmp eq i32 %452, 7
  %454 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8
  %455 = icmp eq i32 %454, 7
  %456 = select i1 %453, i1 %455, i1 false
  br i1 %456, label %458, label %457

457:                                              ; preds = %444
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2447, ptr noundef nonnull @.str.5) #31
  br label %458

458:                                              ; preds = %444, %457
  %459 = load i64, ptr @cfa_store, align 8, !tbaa !42
  %460 = sub i64 %459, %449
  store i64 %460, ptr @cfa_store, align 8, !tbaa !42
  %461 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %462 = icmp eq i32 %461, 7
  br i1 %462, label %463, label %464

463:                                              ; preds = %458
  store i64 %460, ptr @cfa, align 8, !tbaa !42
  br label %464

464:                                              ; preds = %463, %458
  %465 = sub nsw i64 0, %460
  br label %585

466:                                              ; preds = %425, %425
  %467 = lshr i32 %140, 16
  %468 = and i32 %467, 255
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %469
  %471 = load i8, ptr %470, align 1, !tbaa !17
  %472 = zext i8 %471 to i64
  %473 = and i32 %428, 65535
  %474 = icmp eq i32 %473, 75
  %475 = sub nsw i64 0, %472
  %476 = select i1 %474, i64 %475, i64 %472
  %477 = getelementptr inbounds %struct.rtx_def, ptr %427, i64 0, i32 1
  %478 = load ptr, ptr %477, align 8, !tbaa !17
  %479 = getelementptr i8, ptr %478, i64 8
  %480 = load i32, ptr %479, align 8, !tbaa !17
  %481 = icmp eq i32 %480, 7
  %482 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8
  %483 = icmp eq i32 %482, 7
  %484 = select i1 %481, i1 %483, i1 false
  br i1 %484, label %486, label %485

485:                                              ; preds = %466
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2465, ptr noundef nonnull @.str.5) #31
  br label %486

486:                                              ; preds = %466, %485
  %487 = load i64, ptr @cfa_store, align 8, !tbaa !42
  %488 = add nsw i64 %487, %476
  store i64 %488, ptr @cfa_store, align 8, !tbaa !42
  %489 = icmp eq ptr %139, null
  br i1 %489, label %503, label %490

490:                                              ; preds = %486
  %491 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 14
  %492 = load i16, ptr %491, align 8
  %493 = and i16 %492, 8
  %494 = icmp ne i16 %493, 0
  %495 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16
  %496 = icmp eq ptr %132, %495
  %497 = select i1 %494, i1 %496, i1 false
  br i1 %497, label %498, label %503

498:                                              ; preds = %490
  %499 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %500 = icmp eq i32 %499, 6
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2476, ptr noundef nonnull @.str.5) #31
  br label %502

502:                                              ; preds = %498, %501
  store i64 0, ptr @cfa_store, align 8, !tbaa !42
  br label %503

503:                                              ; preds = %502, %490, %486
  %504 = phi i64 [ 0, %502 ], [ %488, %490 ], [ %488, %486 ]
  %505 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %506 = icmp eq i32 %505, 7
  br i1 %506, label %507, label %508

507:                                              ; preds = %503
  store i64 %504, ptr @cfa, align 8, !tbaa !42
  br label %508

508:                                              ; preds = %507, %503
  %509 = sub nsw i64 0, %504
  br label %585

510:                                              ; preds = %425, %425, %425
  %511 = getelementptr inbounds %struct.rtx_def, ptr %427, i64 0, i32 1, i32 0, i32 0, i64 1
  %512 = load ptr, ptr %511, align 8, !tbaa !17
  %513 = load i32, ptr %512, align 8
  %514 = and i32 %513, 65535
  %515 = icmp eq i32 %514, 30
  br i1 %515, label %516, label %522

516:                                              ; preds = %510
  %517 = getelementptr inbounds %struct.rtx_def, ptr %427, i64 0, i32 1
  %518 = load ptr, ptr %517, align 8, !tbaa !17
  %519 = load i32, ptr %518, align 8
  %520 = and i32 %519, 65535
  %521 = icmp eq i32 %520, 37
  br i1 %521, label %529, label %522

522:                                              ; preds = %516, %510
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2495, ptr noundef nonnull @.str.5) #31
  %523 = load ptr, ptr %426, align 8, !tbaa !17
  %524 = getelementptr inbounds %struct.rtx_def, ptr %523, i64 0, i32 1, i32 0, i32 0, i64 1
  %525 = load ptr, ptr %524, align 8, !tbaa !17
  %526 = load i32, ptr %523, align 8
  %527 = getelementptr inbounds %struct.rtx_def, ptr %523, i64 0, i32 1
  %528 = load ptr, ptr %527, align 8, !tbaa !17
  br label %529

529:                                              ; preds = %516, %522
  %530 = phi ptr [ %518, %516 ], [ %528, %522 ]
  %531 = phi i32 [ %428, %516 ], [ %526, %522 ]
  %532 = phi ptr [ %512, %516 ], [ %525, %522 ]
  %533 = getelementptr inbounds %struct.rtx_def, ptr %532, i64 0, i32 1
  %534 = load i64, ptr %533, align 8, !tbaa !17
  %535 = and i32 %531, 65535
  %536 = icmp eq i32 %535, 50
  %537 = sub nsw i64 0, %534
  %538 = select i1 %536, i64 %537, i64 %534
  %539 = getelementptr i8, ptr %530, i64 8
  %540 = load i32, ptr %539, align 8, !tbaa !17
  %541 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8, !tbaa !41
  %542 = icmp eq i32 %541, %540
  br i1 %542, label %547, label %543

543:                                              ; preds = %529
  %544 = load i32, ptr @cfa_temp.1, align 8, !tbaa !41
  %545 = icmp eq i32 %544, %540
  br i1 %545, label %547, label %546

546:                                              ; preds = %543
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2506, ptr noundef nonnull @.str.5) #31
  br label %547

547:                                              ; preds = %546, %543, %529
  %548 = phi ptr [ @cfa_store, %529 ], [ @cfa_temp.0, %543 ], [ @cfa_temp.0, %546 ]
  %549 = load i64, ptr %548, align 8, !tbaa !42
  %550 = sub nsw i64 %538, %549
  br label %585

551:                                              ; preds = %425
  %552 = getelementptr i8, ptr %427, i64 8
  %553 = load i32, ptr %552, align 8, !tbaa !17
  %554 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8, !tbaa !41
  %555 = icmp eq i32 %554, %553
  br i1 %555, label %560, label %556

556:                                              ; preds = %551
  %557 = load i32, ptr @cfa_temp.1, align 8, !tbaa !41
  %558 = icmp eq i32 %557, %553
  br i1 %558, label %560, label %559

559:                                              ; preds = %556
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2522, ptr noundef nonnull @.str.5) #31
  br label %560

560:                                              ; preds = %559, %556, %551
  %561 = phi ptr [ @cfa_store, %551 ], [ @cfa_temp.0, %556 ], [ @cfa_temp.0, %559 ]
  %562 = load i64, ptr %561, align 8, !tbaa !42
  %563 = sub nsw i64 0, %562
  br label %585

564:                                              ; preds = %425
  %565 = load i32, ptr @cfa_temp.1, align 8, !tbaa !41
  %566 = getelementptr inbounds %struct.rtx_def, ptr %427, i64 0, i32 1
  %567 = load ptr, ptr %566, align 8, !tbaa !17
  %568 = getelementptr i8, ptr %567, i64 8
  %569 = load i32, ptr %568, align 8, !tbaa !17
  %570 = icmp eq i32 %565, %569
  br i1 %570, label %573, label %571

571:                                              ; preds = %564
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2531, ptr noundef nonnull @.str.5) #31
  %572 = load i32, ptr %85, align 8
  br label %573

573:                                              ; preds = %564, %571
  %574 = phi i32 [ %140, %564 ], [ %572, %571 ]
  %575 = load i64, ptr @cfa_temp.0, align 8, !tbaa !42
  %576 = sub nsw i64 0, %575
  %577 = lshr i32 %574, 16
  %578 = and i32 %577, 255
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %579
  %581 = load i8, ptr %580, align 1, !tbaa !17
  %582 = zext i8 %581 to i64
  %583 = sub nsw i64 %575, %582
  store i64 %583, ptr @cfa_temp.0, align 8, !tbaa !42
  br label %585

584:                                              ; preds = %425
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2537, ptr noundef nonnull @.str.5) #31
  br label %585

585:                                              ; preds = %584, %573, %560, %547, %508, %464
  %586 = phi i64 [ undef, %584 ], [ %576, %573 ], [ %563, %560 ], [ %550, %547 ], [ %509, %508 ], [ %465, %464 ]
  %587 = load i32, ptr %132, align 8
  %588 = and i32 %587, 65535
  %589 = icmp eq i32 %588, 37
  br i1 %589, label %590, label %718

590:                                              ; preds = %585
  %591 = getelementptr i8, ptr %132, i64 8
  %592 = load i32, ptr %591, align 8, !tbaa !17
  %593 = and i32 %592, -2
  %594 = icmp ne i32 %593, 6
  %595 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8
  %596 = icmp eq i32 %592, %595
  %597 = select i1 %594, i1 %596, i1 false
  br i1 %597, label %598, label %646

598:                                              ; preds = %590
  %599 = load i64, ptr @cfa, align 8, !tbaa !42
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %601, label %628

601:                                              ; preds = %598
  %602 = icmp eq ptr %139, null
  br i1 %602, label %626, label %603

603:                                              ; preds = %601
  %604 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 14
  %605 = load i16, ptr %604, align 8
  %606 = and i16 %605, 8
  %607 = icmp eq i16 %606, 0
  br i1 %607, label %626, label %608

608:                                              ; preds = %603
  %609 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 3), align 4
  %610 = and i8 %609, 1
  %611 = icmp eq i8 %610, 0
  %612 = icmp ne i32 %592, 6
  %613 = and i1 %612, %611
  br i1 %613, label %614, label %626

614:                                              ; preds = %608
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #31
  %615 = getelementptr inbounds %struct.dw_fde_struct, ptr %139, i64 0, i32 12
  %616 = load i32, ptr %615, align 8, !tbaa !88
  %617 = icmp eq i32 %616, %592
  br i1 %617, label %620, label %618

618:                                              ; preds = %614
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2568, ptr noundef nonnull @.str.5) #31
  %619 = load i16, ptr %604, align 8
  br label %620

620:                                              ; preds = %614, %618
  %621 = phi i16 [ %605, %614 ], [ %619, %618 ]
  %622 = getelementptr inbounds %struct.cfa_loc, ptr %2, i64 0, i32 3
  store i8 -1, ptr %622, align 4
  %623 = getelementptr inbounds %struct.cfa_loc, ptr %2, i64 0, i32 2
  store i32 6, ptr %623, align 8, !tbaa !41
  %624 = getelementptr inbounds %struct.cfa_loc, ptr %2, i64 0, i32 1
  store i64 %586, ptr %624, align 8, !tbaa !39
  store i64 0, ptr %2, align 8, !tbaa !42
  %625 = or i16 %621, 16
  store i16 %625, ptr %604, align 8
  call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull %2)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #31
  br label %718

626:                                              ; preds = %608, %603, %601
  tail call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull @cfa)
  %627 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !6
  tail call fastcc void @queue_reg_save(ptr noundef %627, ptr noundef null, i64 noundef %586)
  br label %718

628:                                              ; preds = %598
  %629 = load ptr, ptr %426, align 8, !tbaa !17
  %630 = load i32, ptr %629, align 8
  %631 = and i32 %630, 65535
  %632 = icmp eq i32 %631, 37
  br i1 %632, label %640, label %633

633:                                              ; preds = %628
  %634 = getelementptr inbounds %struct.rtx_def, ptr %629, i64 0, i32 1
  %635 = load ptr, ptr %634, align 8, !tbaa !17
  %636 = load i32, ptr %635, align 8
  %637 = and i32 %636, 65535
  %638 = icmp eq i32 %637, 37
  br i1 %638, label %640, label %639

639:                                              ; preds = %633
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2596, ptr noundef nonnull @.str.5) #31
  br label %640

640:                                              ; preds = %628, %633, %639
  %641 = phi ptr [ %635, %633 ], [ %635, %639 ], [ %629, %628 ]
  %642 = getelementptr i8, ptr %641, i64 8
  %643 = load i32, ptr %642, align 8, !tbaa !17
  store i32 %643, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  store i64 %586, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 1), align 8, !tbaa !39
  %644 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 3), align 4
  %645 = or i8 %644, 1
  store i8 %645, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 3), align 4
  tail call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull @cfa)
  br label %718

646:                                              ; preds = %590
  tail call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull @cfa)
  %647 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 64), align 8, !tbaa !76
  %648 = tail call ptr %647(ptr noundef nonnull %132) #31
  %649 = icmp eq ptr %648, null
  br i1 %649, label %650, label %669

650:                                              ; preds = %646, %654
  %651 = phi ptr [ %652, %654 ], [ @queued_reg_saves, %646 ]
  %652 = load ptr, ptr %651, align 8, !tbaa !6
  %653 = icmp eq ptr %652, null
  br i1 %653, label %661, label %654

654:                                              ; preds = %650
  %655 = getelementptr inbounds %struct.queued_reg_save, ptr %652, i64 0, i32 1
  %656 = load ptr, ptr %655, align 8, !tbaa !70
  %657 = getelementptr i8, ptr %656, i64 8
  %658 = load i32, ptr %657, align 8, !tbaa !17
  %659 = load i32, ptr %591, align 8, !tbaa !17
  %660 = icmp eq i32 %658, %659
  br i1 %660, label %664, label %650, !llvm.loop !99

661:                                              ; preds = %650
  %662 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  %663 = load ptr, ptr @queued_reg_saves, align 8, !tbaa !6
  store ptr %663, ptr %662, align 8, !tbaa !100
  store ptr %662, ptr @queued_reg_saves, align 8, !tbaa !6
  br label %664

664:                                              ; preds = %654, %661
  %665 = phi ptr [ %662, %661 ], [ %652, %654 ]
  %666 = getelementptr inbounds %struct.queued_reg_save, ptr %665, i64 0, i32 1
  store ptr %132, ptr %666, align 8, !tbaa !70
  %667 = getelementptr inbounds %struct.queued_reg_save, ptr %665, i64 0, i32 2
  store i64 %586, ptr %667, align 8, !tbaa !82
  %668 = getelementptr inbounds %struct.queued_reg_save, ptr %665, i64 0, i32 3
  store ptr null, ptr %668, align 8, !tbaa !81
  store ptr @dwarf2out_cfi_label.label, ptr @last_reg_save_label, align 8, !tbaa !6
  br label %718

669:                                              ; preds = %646
  %670 = load i32, ptr %648, align 8
  %671 = and i32 %670, 65535
  %672 = icmp eq i32 %671, 15
  br i1 %672, label %674, label %673

673:                                              ; preds = %669
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2621, ptr noundef nonnull @.str.5) #31
  br label %674

674:                                              ; preds = %669, %673
  %675 = getelementptr inbounds %struct.rtx_def, ptr %648, i64 0, i32 1
  %676 = load ptr, ptr %675, align 8, !tbaa !17
  %677 = load i32, ptr %676, align 8, !tbaa !73
  %678 = icmp sgt i32 %677, 0
  br i1 %678, label %679, label %718

679:                                              ; preds = %674
  %680 = zext i32 %677 to i64
  br label %681

681:                                              ; preds = %679, %702
  %682 = phi i64 [ 0, %679 ], [ %715, %702 ]
  %683 = phi i64 [ %586, %679 ], [ %714, %702 ]
  %684 = load ptr, ptr %675, align 8, !tbaa !17
  %685 = getelementptr inbounds %struct.rtvec_def, ptr %684, i64 0, i32 1, i64 %682
  %686 = load ptr, ptr %685, align 8, !tbaa !6
  %687 = getelementptr i8, ptr %686, i64 8
  br label %688

688:                                              ; preds = %692, %681
  %689 = phi ptr [ @queued_reg_saves, %681 ], [ %690, %692 ]
  %690 = load ptr, ptr %689, align 8, !tbaa !6
  %691 = icmp eq ptr %690, null
  br i1 %691, label %699, label %692

692:                                              ; preds = %688
  %693 = getelementptr inbounds %struct.queued_reg_save, ptr %690, i64 0, i32 1
  %694 = load ptr, ptr %693, align 8, !tbaa !70
  %695 = getelementptr i8, ptr %694, i64 8
  %696 = load i32, ptr %695, align 8, !tbaa !17
  %697 = load i32, ptr %687, align 8, !tbaa !17
  %698 = icmp eq i32 %696, %697
  br i1 %698, label %702, label %688, !llvm.loop !99

699:                                              ; preds = %688
  %700 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  %701 = load ptr, ptr @queued_reg_saves, align 8, !tbaa !6
  store ptr %701, ptr %700, align 8, !tbaa !100
  store ptr %700, ptr @queued_reg_saves, align 8, !tbaa !6
  br label %702

702:                                              ; preds = %692, %699
  %703 = phi ptr [ %700, %699 ], [ %690, %692 ]
  %704 = getelementptr inbounds %struct.queued_reg_save, ptr %703, i64 0, i32 1
  store ptr %686, ptr %704, align 8, !tbaa !70
  %705 = getelementptr inbounds %struct.queued_reg_save, ptr %703, i64 0, i32 2
  store i64 %683, ptr %705, align 8, !tbaa !82
  %706 = getelementptr inbounds %struct.queued_reg_save, ptr %703, i64 0, i32 3
  store ptr null, ptr %706, align 8, !tbaa !81
  store ptr @dwarf2out_cfi_label.label, ptr @last_reg_save_label, align 8, !tbaa !6
  %707 = load i32, ptr %686, align 8
  %708 = lshr i32 %707, 16
  %709 = and i32 %708, 255
  %710 = zext i32 %709 to i64
  %711 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %710
  %712 = load i8, ptr %711, align 1, !tbaa !17
  %713 = zext i8 %712 to i64
  %714 = add nsw i64 %683, %713
  %715 = add nuw nsw i64 %682, 1
  %716 = icmp eq i64 %715, %680
  br i1 %716, label %718, label %681, !llvm.loop !101

717:                                              ; preds = %131
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2636, ptr noundef nonnull @.str.5) #31
  br label %718

718:                                              ; preds = %77, %702, %38, %674, %424, %620, %626, %640, %717, %585, %664, %396, %398, %421, %409, %392
  ret void
}

declare i32 @modified_in_p(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @prologue_epilogue_contains(ptr noundef) local_unnamed_addr #3

declare ptr @next_nonnote_insn(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @compute_barrier_args_size() unnamed_addr #10 {
  %1 = alloca ptr, align 8
  %2 = tail call i32 @get_max_uid() #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #31
  %3 = sext i32 %2 to i64
  %4 = shl nsw i64 %3, 3
  %5 = tail call ptr @xmalloc(i64 noundef %4) #31
  store ptr %5, ptr @barrier_args_size, align 8, !tbaa !6
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %0
  %8 = zext i32 %2 to i64
  %9 = shl nuw nsw i64 %8, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %5, i8 -1, i64 %9, i1 false), !tbaa !38
  br label %10

10:                                               ; preds = %7, %0
  %11 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 20) #31
  %12 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 20) #31
  store ptr %12, ptr %1, align 8, !tbaa !6
  %13 = tail call ptr @get_insns() #31
  %14 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  %16 = load i32, ptr %15, align 8, !tbaa !17
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i64, ptr %14, i64 %17
  store i64 0, ptr %18, align 8, !tbaa !38
  %19 = load i32, ptr %11, align 8, !tbaa !102
  %20 = add i32 %19, 1
  store i32 %20, ptr %11, align 8, !tbaa !102
  %21 = zext i32 %19 to i64
  %22 = getelementptr inbounds %struct.VEC_rtx_base, ptr %11, i64 0, i32 2, i64 %21
  store ptr %13, ptr %22, align 8, !tbaa !6
  br label %23

23:                                               ; preds = %142, %10
  %24 = phi ptr [ %12, %10 ], [ %26, %142 ]
  %25 = phi i32 [ %20, %10 ], [ %143, %142 ]
  %26 = phi ptr [ %11, %10 ], [ %137, %142 ]
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %136, label %28

28:                                               ; preds = %23, %131
  %29 = phi i32 [ %132, %131 ], [ %25, %23 ]
  %30 = add i32 %29, -1
  store i32 %30, ptr %26, align 8, !tbaa !102
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %struct.VEC_rtx_base, ptr %26, i64 0, i32 2, i64 %31
  %33 = load ptr, ptr %32, align 8, !tbaa !6
  %34 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.rtx_def, ptr %33, i64 0, i32 1
  %36 = load i32, ptr %35, align 8, !tbaa !17
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %34, i64 %37
  %39 = load i64, ptr %38, align 8, !tbaa !38
  %40 = tail call ptr @prev_nonnote_insn(ptr noundef %33) #31
  %41 = icmp eq ptr %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %28
  %43 = load i32, ptr %40, align 8
  %44 = and i32 %43, 65535
  %45 = icmp eq i32 %44, 11
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.rtx_def, ptr %40, i64 0, i32 1
  %49 = load i32, ptr %48, align 8, !tbaa !17
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i64, ptr %47, i64 %50
  store i64 %39, ptr %51, align 8, !tbaa !38
  br label %52

52:                                               ; preds = %28, %42, %46
  br label %53

53:                                               ; preds = %52, %126
  %54 = phi i64 [ %127, %126 ], [ %39, %52 ]
  %55 = phi ptr [ %129, %126 ], [ %33, %52 ]
  %56 = load i32, ptr %55, align 8
  %57 = and i32 %56, 134217728
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %126

59:                                               ; preds = %53
  %60 = trunc i32 %56 to i16
  switch i16 %60, label %72 [
    i16 13, label %126
    i16 11, label %131
    i16 12, label %61
  ]

61:                                               ; preds = %59
  %62 = icmp eq ptr %55, %33
  br i1 %62, label %126, label %63

63:                                               ; preds = %61
  %64 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %65 = getelementptr inbounds %struct.rtx_def, ptr %55, i64 0, i32 1
  %66 = load i32, ptr %65, align 8, !tbaa !17
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i64, ptr %64, i64 %67
  %69 = load i64, ptr %68, align 8, !tbaa !38
  %70 = icmp slt i64 %69, 0
  br i1 %70, label %71, label %131

71:                                               ; preds = %63
  store i64 %54, ptr %68, align 8, !tbaa !38
  br label %126

72:                                               ; preds = %59
  %73 = getelementptr inbounds %struct.rtx_def, ptr %55, i64 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  %75 = load i32, ptr %74, align 8
  %76 = and i32 %75, 65535
  %77 = icmp eq i32 %76, 5
  br i1 %77, label %78, label %124

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.rtx_def, ptr %74, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = load i32, ptr %80, align 8, !tbaa !73
  %82 = icmp sgt i32 %81, 1
  br i1 %82, label %83, label %111

83:                                               ; preds = %78, %103
  %84 = phi i64 [ %106, %103 ], [ 1, %78 ]
  %85 = phi ptr [ %107, %103 ], [ %80, %78 ]
  %86 = phi i64 [ %105, %103 ], [ %54, %78 ]
  %87 = phi i64 [ %104, %103 ], [ %54, %78 ]
  %88 = getelementptr inbounds %struct.rtvec_def, ptr %85, i64 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !6
  %90 = load i32, ptr %89, align 8
  %91 = and i32 %90, 67108864
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %struct.rtvec_def, ptr %85, i64 0, i32 1, i64 %84
  %94 = load ptr, ptr %93, align 8, !tbaa !6
  br i1 %92, label %101, label %95

95:                                               ; preds = %83
  %96 = load i32, ptr %94, align 8
  %97 = and i32 %96, 268435456
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = call fastcc i64 @compute_barrier_args_size_1(ptr noundef nonnull %94, i64 noundef %86, ptr noundef nonnull %1)
  br label %103

101:                                              ; preds = %83, %95
  %102 = call fastcc i64 @compute_barrier_args_size_1(ptr noundef %94, i64 noundef %87, ptr noundef nonnull %1)
  br label %103

103:                                              ; preds = %99, %101
  %104 = phi i64 [ %87, %99 ], [ %102, %101 ]
  %105 = phi i64 [ %100, %99 ], [ %86, %101 ]
  %106 = add nuw nsw i64 %84, 1
  %107 = load ptr, ptr %79, align 8, !tbaa !17
  %108 = load i32, ptr %107, align 8, !tbaa !73
  %109 = sext i32 %108 to i64
  %110 = icmp slt i64 %106, %109
  br i1 %110, label %83, label %111, !llvm.loop !104

111:                                              ; preds = %103, %78
  %112 = phi i64 [ %54, %78 ], [ %104, %103 ]
  %113 = phi i64 [ %54, %78 ], [ %105, %103 ]
  %114 = phi ptr [ %80, %78 ], [ %107, %103 ]
  %115 = getelementptr inbounds %struct.rtvec_def, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !6
  %117 = load i32, ptr %116, align 8
  %118 = and i32 %117, 67108864
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %111
  %121 = call fastcc i64 @compute_barrier_args_size_1(ptr noundef nonnull %116, i64 noundef %113, ptr noundef nonnull %1)
  br label %126

122:                                              ; preds = %111
  %123 = call fastcc i64 @compute_barrier_args_size_1(ptr noundef nonnull %116, i64 noundef %112, ptr noundef nonnull %1)
  br label %126

124:                                              ; preds = %72
  %125 = call fastcc i64 @compute_barrier_args_size_1(ptr noundef nonnull %55, i64 noundef %54, ptr noundef nonnull %1)
  br label %126

126:                                              ; preds = %120, %122, %59, %124, %61, %53, %71
  %127 = phi i64 [ %54, %53 ], [ %54, %59 ], [ %54, %61 ], [ %54, %71 ], [ %125, %124 ], [ %112, %120 ], [ %123, %122 ]
  %128 = getelementptr inbounds %struct.rtx_def, ptr %55, i64 0, i32 1, i32 0, i32 0, i64 2
  %129 = load ptr, ptr %128, align 8, !tbaa !17
  %130 = icmp eq ptr %129, null
  br i1 %130, label %131, label %53, !llvm.loop !105

131:                                              ; preds = %126, %63, %59
  %132 = load i32, ptr %26, align 8, !tbaa !102
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %28, !llvm.loop !106

134:                                              ; preds = %131
  %135 = load ptr, ptr %1, align 8
  br label %136

136:                                              ; preds = %134, %23
  %137 = phi ptr [ %135, %134 ], [ %24, %23 ]
  %138 = icmp eq ptr %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %136
  %140 = load i32, ptr %137, align 8, !tbaa !102
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %139
  store ptr %26, ptr %1, align 8, !tbaa !6
  store i32 0, ptr %26, align 8, !tbaa !102
  %143 = load i32, ptr %137, align 8, !tbaa !102
  br label %23

144:                                              ; preds = %139
  tail call void @free(ptr noundef nonnull %26)
  br label %145

145:                                              ; preds = %136, %144
  %146 = phi ptr [ %137, %144 ], [ %26, %136 ]
  tail call void @free(ptr noundef nonnull %146)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @stack_adjust_offset(ptr readonly %0, ptr readonly %1, i64 noundef %2, i64 noundef %3) unnamed_addr #10 {
  %5 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !6
  %6 = icmp eq ptr %5, %0
  %7 = load i32, ptr %1, align 8
  %8 = and i32 %7, 65535
  br i1 %6, label %9, label %35

9:                                                ; preds = %4
  %10 = icmp ne i32 %8, 37
  %11 = icmp eq ptr %0, %1
  %12 = or i1 %10, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = add i64 %2, %3
  %15 = sub i64 0, %14
  br label %95

16:                                               ; preds = %9
  %17 = icmp eq i32 %8, 49
  %18 = add nsw i32 %8, -49
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %20, label %95

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = icmp eq ptr %22, %0
  br i1 %23, label %24, label %95

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = load i32, ptr %26, align 8
  %28 = and i32 %27, 65535
  %29 = icmp eq i32 %28, 30
  br i1 %29, label %30, label %95

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.rtx_def, ptr %26, i64 0, i32 1
  %32 = load i64, ptr %31, align 8, !tbaa !17
  %33 = sub nsw i64 0, %32
  %34 = select i1 %17, i64 %33, i64 %32
  br label %95

35:                                               ; preds = %4
  %36 = icmp eq i32 %8, 43
  %37 = load i32, ptr %0, align 8
  %38 = and i32 %37, 65535
  %39 = icmp eq i32 %38, 43
  %40 = select i1 %39, i32 %37, i32 %7
  %41 = select i1 %36, i32 %40, i32 %37
  %42 = and i32 %41, 65535
  %43 = icmp eq i32 %42, 43
  br i1 %43, label %44, label %95

44:                                               ; preds = %35
  %45 = select i1 %39, ptr %0, ptr %1
  %46 = select i1 %36, ptr %45, ptr %0
  %47 = getelementptr inbounds %struct.rtx_def, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = load i32, ptr %48, align 8
  %50 = trunc i32 %49 to i16
  switch i16 %50, label %95 [
    i16 78, label %51
    i16 79, label %51
    i16 74, label %72
    i16 76, label %72
    i16 75, label %83
    i16 77, label %83
  ]

51:                                               ; preds = %44, %44
  %52 = getelementptr inbounds %struct.rtx_def, ptr %48, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = icmp eq ptr %53, %5
  br i1 %54, label %55, label %95

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.rtx_def, ptr %48, i64 0, i32 1, i32 0, i32 0, i64 1
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.rtx_def, ptr %57, i64 0, i32 1, i32 0, i32 0, i64 1
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = load i32, ptr %57, align 8
  %61 = and i32 %60, 65535
  %62 = icmp eq i32 %61, 49
  br i1 %62, label %63, label %67

63:                                               ; preds = %55
  %64 = load i32, ptr %59, align 8
  %65 = and i32 %64, 65535
  %66 = icmp eq i32 %65, 30
  br i1 %66, label %68, label %67

67:                                               ; preds = %63, %55
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1302, ptr noundef nonnull @.str.5) #31
  br label %68

68:                                               ; preds = %63, %67
  %69 = getelementptr inbounds %struct.rtx_def, ptr %59, i64 0, i32 1
  %70 = load i64, ptr %69, align 8, !tbaa !17
  %71 = sub nsw i64 0, %70
  br label %95

72:                                               ; preds = %44, %44
  %73 = getelementptr inbounds %struct.rtx_def, ptr %48, i64 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  %75 = icmp eq ptr %74, %5
  br i1 %75, label %76, label %95

76:                                               ; preds = %72
  %77 = lshr i32 %41, 16
  %78 = and i32 %77, 255
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %79
  %81 = load i8, ptr %80, align 1, !tbaa !17
  %82 = zext i8 %81 to i64
  br label %95

83:                                               ; preds = %44, %44
  %84 = getelementptr inbounds %struct.rtx_def, ptr %48, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = icmp eq ptr %85, %5
  br i1 %86, label %87, label %95

87:                                               ; preds = %83
  %88 = lshr i32 %41, 16
  %89 = and i32 %88, 255
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !17
  %93 = zext i8 %92 to i64
  %94 = sub nsw i64 0, %93
  br label %95

95:                                               ; preds = %87, %76, %68, %35, %44, %83, %72, %51, %20, %24, %16, %30, %13
  %96 = phi i64 [ %15, %13 ], [ %34, %30 ], [ 0, %16 ], [ 0, %24 ], [ 0, %20 ], [ 0, %51 ], [ 0, %72 ], [ 0, %83 ], [ 0, %44 ], [ 0, %35 ], [ %94, %87 ], [ %82, %76 ], [ %71, %68 ]
  ret i64 %96
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dwarf2out_stack_adjust(i64 noundef %0) unnamed_addr #10 {
  %2 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa, i64 0, i32 2), align 8, !tbaa !41
  %3 = icmp eq i32 %2, 7
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = load i64, ptr @cfa, align 8, !tbaa !42
  %6 = add nsw i64 %5, %0
  store i64 %6, ptr @cfa, align 8, !tbaa !42
  br label %7

7:                                                ; preds = %4, %1
  %8 = load i32, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_store, i64 0, i32 2), align 8, !tbaa !41
  %9 = icmp eq i32 %8, 7
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = load i64, ptr @cfa_store, align 8, !tbaa !42
  %12 = add nsw i64 %11, %0
  store i64 %12, ptr @cfa_store, align 8, !tbaa !42
  br label %13

13:                                               ; preds = %10, %7
  %14 = load i32, ptr @target_flags, align 4, !tbaa !21
  %15 = and i32 %14, 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %35

17:                                               ; preds = %13
  %18 = tail call i32 @ix86_cfun_abi() #31
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %35, label %20

20:                                               ; preds = %17
  %21 = load i64, ptr @args_size, align 8, !tbaa !38
  %22 = add nsw i64 %21, %0
  %23 = tail call i64 @llvm.smax.i64(i64 %22, i64 0)
  store i64 %23, ptr @args_size, align 8
  tail call fastcc void @def_cfa_1(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull @cfa)
  %24 = load i32, ptr @flag_asynchronous_unwind_tables, align 4, !tbaa !21
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %20
  %27 = load i64, ptr @args_size, align 8, !tbaa !38
  %28 = load i64, ptr @old_args_size, align 8, !tbaa !38
  %29 = icmp eq i64 %28, %27
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  store i64 %27, ptr @old_args_size, align 8, !tbaa !38
  %31 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %31, align 8, !tbaa !46
  %32 = getelementptr inbounds %struct.dw_cfi_struct, ptr %31, i64 0, i32 2
  %33 = getelementptr inbounds %struct.dw_cfi_struct, ptr %31, i64 0, i32 3
  store i32 0, ptr %33, align 8, !tbaa !17
  %34 = getelementptr inbounds %struct.dw_cfi_struct, ptr %31, i64 0, i32 1
  store i32 46, ptr %34, align 8, !tbaa !48
  store i64 %27, ptr %32, align 8, !tbaa !17
  tail call fastcc void @add_fde_cfi(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull %31)
  br label %35

35:                                               ; preds = %30, %26, %13, %17, %20
  ret void
}

declare i32 @get_max_uid() local_unnamed_addr #3

declare ptr @xmalloc(i64 noundef) local_unnamed_addr #3

declare ptr @get_insns() local_unnamed_addr #3

declare ptr @prev_nonnote_insn(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @compute_barrier_args_size_1(ptr noundef %0, i64 noundef %1, ptr nocapture noundef %2) unnamed_addr #10 {
  %4 = load i32, ptr %0, align 8
  %5 = and i32 %4, 1073741824
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %3
  %8 = tail call i32 @prologue_epilogue_contains(ptr noundef nonnull %0) #31
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %90

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i32, ptr %12, align 8
  %14 = trunc i32 %13 to i16
  switch i16 %14, label %90 [
    i16 23, label %15
    i16 15, label %21
    i16 5, label %21
  ]

15:                                               ; preds = %10
  %16 = getelementptr i8, ptr %12, i64 8
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr i8, ptr %12, i64 16
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = tail call fastcc i64 @stack_adjust_offset(ptr %17, ptr %19, i64 noundef %1, i64 noundef 0)
  br label %90

21:                                               ; preds = %10, %10
  %22 = getelementptr inbounds %struct.rtx_def, ptr %12, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = load i32, ptr %23, align 8, !tbaa !73
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %90

26:                                               ; preds = %21
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi i64 [ %27, %26 ], [ %31, %48 ]
  %30 = phi i64 [ 0, %26 ], [ %49, %48 ]
  %31 = add nsw i64 %29, -1
  %32 = load ptr, ptr %11, align 8, !tbaa !17
  %33 = getelementptr inbounds %struct.rtx_def, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = and i64 %31, 4294967295
  %36 = getelementptr inbounds %struct.rtvec_def, ptr %34, i64 0, i32 1, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !6
  %38 = load i32, ptr %37, align 8
  %39 = and i32 %38, 65535
  %40 = icmp eq i32 %39, 23
  br i1 %40, label %41, label %48

41:                                               ; preds = %28
  %42 = getelementptr i8, ptr %37, i64 8
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr i8, ptr %37, i64 16
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = tail call fastcc i64 @stack_adjust_offset(ptr %43, ptr %45, i64 noundef %1, i64 noundef %30)
  %47 = add nsw i64 %46, %30
  br label %48

48:                                               ; preds = %28, %41
  %49 = phi i64 [ %47, %41 ], [ %30, %28 ]
  %50 = icmp ugt i64 %29, 1
  br i1 %50, label %28, label %90, !llvm.loop !107

51:                                               ; preds = %3
  %52 = tail call ptr @find_reg_note(ptr noundef nonnull %0, i32 noundef 17, ptr noundef null) #31
  %53 = icmp eq ptr %52, null
  br i1 %53, label %90, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.rtx_def, ptr %52, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = load i32, ptr %56, align 8
  %58 = trunc i32 %57 to i16
  switch i16 %58, label %90 [
    i16 15, label %59
    i16 5, label %59
  ]

59:                                               ; preds = %54, %54
  %60 = getelementptr inbounds %struct.rtx_def, ptr %56, i64 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = load i32, ptr %61, align 8, !tbaa !73
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %90

64:                                               ; preds = %59, %83
  %65 = phi i32 [ %84, %83 ], [ %62, %59 ]
  %66 = phi ptr [ %85, %83 ], [ %61, %59 ]
  %67 = phi i64 [ %87, %83 ], [ 1, %59 ]
  %68 = phi i64 [ %86, %83 ], [ 0, %59 ]
  %69 = getelementptr inbounds %struct.rtvec_def, ptr %66, i64 0, i32 1, i64 %67
  %70 = load ptr, ptr %69, align 8, !tbaa !6
  %71 = load i32, ptr %70, align 8
  %72 = and i32 %71, 1073807359
  %73 = icmp eq i32 %72, 23
  br i1 %73, label %74, label %83

74:                                               ; preds = %64
  %75 = getelementptr i8, ptr %70, i64 8
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = getelementptr i8, ptr %70, i64 16
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = tail call fastcc i64 @stack_adjust_offset(ptr %76, ptr %78, i64 noundef %1, i64 noundef %68)
  %80 = add nsw i64 %79, %68
  %81 = load ptr, ptr %60, align 8, !tbaa !17
  %82 = load i32, ptr %81, align 8, !tbaa !73
  br label %83

83:                                               ; preds = %74, %64
  %84 = phi i32 [ %82, %74 ], [ %65, %64 ]
  %85 = phi ptr [ %81, %74 ], [ %66, %64 ]
  %86 = phi i64 [ %80, %74 ], [ %68, %64 ]
  %87 = add nuw nsw i64 %67, 1
  %88 = sext i32 %84 to i64
  %89 = icmp slt i64 %87, %88
  br i1 %89, label %64, label %90, !llvm.loop !108

90:                                               ; preds = %83, %48, %59, %21, %51, %54, %10, %7, %15
  %91 = phi i64 [ 0, %7 ], [ %20, %15 ], [ 0, %10 ], [ 0, %51 ], [ 0, %54 ], [ 0, %21 ], [ 0, %59 ], [ %49, %48 ], [ %86, %83 ]
  %92 = add nsw i64 %91, %1
  %93 = tail call i64 @llvm.smax.i64(i64 %92, i64 0)
  %94 = load i32, ptr %0, align 8
  %95 = and i32 %94, 65535
  %96 = icmp eq i32 %95, 9
  br i1 %96, label %97, label %126

97:                                               ; preds = %90
  %98 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1, i32 1, i32 0, i32 0, i64 2
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  %100 = icmp eq ptr %99, null
  br i1 %100, label %126, label %101

101:                                              ; preds = %97
  %102 = load ptr, ptr @barrier_args_size, align 8, !tbaa !6
  %103 = getelementptr inbounds %struct.rtx_def, ptr %99, i64 0, i32 1
  %104 = load i32, ptr %103, align 8, !tbaa !17
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i64, ptr %102, i64 %105
  %107 = load i64, ptr %106, align 8, !tbaa !38
  %108 = icmp slt i64 %107, 0
  br i1 %108, label %109, label %126

109:                                              ; preds = %101
  store i64 %93, ptr %106, align 8, !tbaa !38
  %110 = load ptr, ptr %2, align 8, !tbaa !6
  %111 = icmp eq ptr %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.VEC_rtx_base, ptr %110, i64 0, i32 1
  %114 = load i32, ptr %113, align 4, !tbaa !109
  %115 = load i32, ptr %110, align 8, !tbaa !102
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %117, label %120

117:                                              ; preds = %112, %109
  %118 = tail call ptr @vec_heap_p_reserve(ptr noundef %110, i32 noundef 1) #31
  store ptr %118, ptr %2, align 8, !tbaa !6
  %119 = load i32, ptr %118, align 8, !tbaa !102
  br label %120

120:                                              ; preds = %112, %117
  %121 = phi i32 [ %115, %112 ], [ %119, %117 ]
  %122 = phi ptr [ %110, %112 ], [ %118, %117 ]
  %123 = add i32 %121, 1
  store i32 %123, ptr %122, align 8, !tbaa !102
  %124 = zext i32 %121 to i64
  %125 = getelementptr inbounds %struct.VEC_rtx_base, ptr %122, i64 0, i32 2, i64 %124
  store ptr %99, ptr %125, align 8, !tbaa !6
  br label %126

126:                                              ; preds = %97, %120, %101, %90
  ret i64 %93
}

declare ptr @vec_heap_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @find_reg_note(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @vec_heap_p_reserve(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @queue_reg_save(ptr noundef %0, ptr noundef %1, i64 noundef %2) unnamed_addr #10 {
  %4 = getelementptr i8, ptr %0, i64 8
  br label %5

5:                                                ; preds = %9, %3
  %6 = phi ptr [ @queued_reg_saves, %3 ], [ %7, %9 ]
  %7 = load ptr, ptr %6, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.queued_reg_save, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !70
  %12 = getelementptr i8, ptr %11, i64 8
  %13 = load i32, ptr %12, align 8, !tbaa !17
  %14 = load i32, ptr %4, align 8, !tbaa !17
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %19, label %5, !llvm.loop !99

16:                                               ; preds = %5
  %17 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  %18 = load ptr, ptr @queued_reg_saves, align 8, !tbaa !6
  store ptr %18, ptr %17, align 8, !tbaa !100
  store ptr %17, ptr @queued_reg_saves, align 8, !tbaa !6
  br label %19

19:                                               ; preds = %9, %16
  %20 = phi ptr [ %17, %16 ], [ %7, %9 ]
  %21 = getelementptr inbounds %struct.queued_reg_save, ptr %20, i64 0, i32 1
  store ptr %0, ptr %21, align 8, !tbaa !70
  %22 = getelementptr inbounds %struct.queued_reg_save, ptr %20, i64 0, i32 2
  store i64 %2, ptr %22, align 8, !tbaa !82
  %23 = getelementptr inbounds %struct.queued_reg_save, ptr %20, i64 0, i32 3
  store ptr %1, ptr %23, align 8, !tbaa !81
  store ptr @dwarf2out_cfi_label.label, ptr @last_reg_save_label, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_begin_epilogue(ptr nocapture noundef readonly %0) local_unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 2
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %140, label %5

5:                                                ; preds = %1, %106
  %6 = phi ptr [ %109, %106 ], [ %3, %1 ]
  %7 = phi i8 [ %107, %106 ], [ 0, %1 ]
  %8 = load i32, ptr %6, align 8
  %9 = and i32 %8, 65535
  %10 = add nsw i32 %9, -7
  %11 = icmp ult i32 %10, 4
  br i1 %11, label %12, label %106

12:                                               ; preds = %5
  %13 = tail call i32 @returnjump_p(ptr noundef nonnull %6) #31
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %111

15:                                               ; preds = %12
  %16 = load i32, ptr %6, align 8
  %17 = and i32 %16, 16842751
  %18 = icmp eq i32 %17, 16777226
  br i1 %18, label %111, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = load i32, ptr %21, align 8
  %23 = and i32 %22, 65535
  %24 = icmp eq i32 %23, 5
  br i1 %24, label %25, label %100

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.rtx_def, ptr %21, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.rtvec_def, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  %30 = tail call i32 @returnjump_p(ptr noundef %29) #31
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %111

32:                                               ; preds = %25
  %33 = load ptr, ptr %26, align 8, !tbaa !17
  %34 = getelementptr inbounds %struct.rtvec_def, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !6
  %36 = load i32, ptr %35, align 8
  %37 = and i32 %36, 16842751
  %38 = icmp eq i32 %37, 16777226
  br i1 %38, label %111, label %39

39:                                               ; preds = %32
  %40 = load i32, ptr %33, align 8, !tbaa !73
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %100

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  %44 = and i64 %43, 3
  %45 = icmp ult i32 %40, 4
  br i1 %45, label %82, label %46

46:                                               ; preds = %42
  %47 = and i64 %43, 4294967292
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %79, %48 ]
  %50 = phi i8 [ %7, %46 ], [ %78, %48 ]
  %51 = phi i64 [ 0, %46 ], [ %80, %48 ]
  %52 = getelementptr inbounds %struct.rtvec_def, ptr %33, i64 0, i32 1, i64 %49
  %53 = load ptr, ptr %52, align 8, !tbaa !6
  %54 = load i32, ptr %53, align 8
  %55 = and i32 %54, 1073741824
  %56 = icmp eq i32 %55, 0
  %57 = or i64 %49, 1
  %58 = getelementptr inbounds %struct.rtvec_def, ptr %33, i64 0, i32 1, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !6
  %60 = load i32, ptr %59, align 8
  %61 = and i32 %60, 1073741824
  %62 = icmp eq i32 %61, 0
  %63 = or i64 %49, 2
  %64 = getelementptr inbounds %struct.rtvec_def, ptr %33, i64 0, i32 1, i64 %63
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  %66 = load i32, ptr %65, align 8
  %67 = and i32 %66, 1073741824
  %68 = icmp eq i32 %67, 0
  %69 = or i64 %49, 3
  %70 = getelementptr inbounds %struct.rtvec_def, ptr %33, i64 0, i32 1, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !6
  %72 = load i32, ptr %71, align 8
  %73 = and i32 %72, 1073741824
  %74 = icmp eq i32 %73, 0
  %75 = select i1 %74, i1 %68, i1 false
  %76 = select i1 %75, i1 %62, i1 false
  %77 = select i1 %76, i1 %56, i1 false
  %78 = select i1 %77, i8 %50, i8 1
  %79 = add nuw nsw i64 %49, 4
  %80 = add i64 %51, 4
  %81 = icmp eq i64 %80, %47
  br i1 %81, label %82, label %48, !llvm.loop !110

82:                                               ; preds = %48, %42
  %83 = phi i8 [ undef, %42 ], [ %78, %48 ]
  %84 = phi i64 [ 0, %42 ], [ %79, %48 ]
  %85 = phi i8 [ %7, %42 ], [ %78, %48 ]
  %86 = icmp eq i64 %44, 0
  br i1 %86, label %100, label %87

87:                                               ; preds = %82, %87
  %88 = phi i64 [ %97, %87 ], [ %84, %82 ]
  %89 = phi i8 [ %96, %87 ], [ %85, %82 ]
  %90 = phi i64 [ %98, %87 ], [ 0, %82 ]
  %91 = getelementptr inbounds %struct.rtvec_def, ptr %33, i64 0, i32 1, i64 %88
  %92 = load ptr, ptr %91, align 8, !tbaa !6
  %93 = load i32, ptr %92, align 8
  %94 = and i32 %93, 1073741824
  %95 = icmp eq i32 %94, 0
  %96 = select i1 %95, i8 %89, i8 1
  %97 = add nuw nsw i64 %88, 1
  %98 = add i64 %90, 1
  %99 = icmp eq i64 %98, %44
  br i1 %99, label %100, label %87, !llvm.loop !111

100:                                              ; preds = %82, %87, %39, %19
  %101 = phi i8 [ %7, %19 ], [ %7, %39 ], [ %83, %82 ], [ %96, %87 ]
  %102 = load i32, ptr %6, align 8
  %103 = and i32 %102, 1073741824
  %104 = icmp eq i32 %103, 0
  %105 = select i1 %104, i8 %101, i8 1
  br label %106

106:                                              ; preds = %100, %5
  %107 = phi i8 [ %7, %5 ], [ %105, %100 ]
  %108 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 0, i32 1, i32 0, i32 0, i64 2
  %109 = load ptr, ptr %108, align 8, !tbaa !17
  %110 = icmp eq ptr %109, null
  br i1 %110, label %113, label %5, !llvm.loop !113

111:                                              ; preds = %32, %25, %15, %12
  %112 = icmp eq i8 %7, 0
  br i1 %112, label %140, label %116

113:                                              ; preds = %106
  %114 = icmp eq i8 %107, 0
  br i1 %114, label %140, label %115

115:                                              ; preds = %113
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2835, ptr noundef nonnull @.str.5) #31
  br label %116

116:                                              ; preds = %111, %115
  %117 = phi ptr [ %6, %111 ], [ null, %115 ]
  %118 = tail call ptr @next_real_insn(ptr noundef %117) #31
  %119 = icmp eq ptr %118, null
  br i1 %119, label %140, label %120

120:                                              ; preds = %116, %127
  %121 = phi ptr [ %123, %127 ], [ %118, %116 ]
  %122 = getelementptr inbounds %struct.rtx_def, ptr %121, i64 0, i32 1, i32 0, i32 0, i64 1
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = load i32, ptr %123, align 8
  %125 = and i32 %124, 65535
  %126 = icmp eq i32 %125, 13
  br i1 %126, label %127, label %131

127:                                              ; preds = %120
  %128 = getelementptr inbounds %struct.rtx_def, ptr %123, i64 1
  %129 = load i32, ptr %128, align 8, !tbaa !17
  %130 = icmp eq i32 %129, 10
  br i1 %130, label %131, label %120

131:                                              ; preds = %127, %120
  %132 = tail call ptr @emit_note_before(i32 noundef 12, ptr noundef nonnull %121) #31
  store i1 true, ptr @emit_cfa_remember, align 1
  %133 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_remember, i64 0, i32 3), align 4
  %134 = and i8 %133, 2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %131
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2858, ptr noundef nonnull @.str.5) #31
  br label %137

137:                                              ; preds = %131, %136
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @cfa_remember, ptr noundef nonnull align 8 dereferenceable(24) @cfa, i64 24, i1 false), !tbaa.struct !43
  %138 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_remember, i64 0, i32 3), align 4
  %139 = or i8 %138, 2
  store i8 %139, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_remember, i64 0, i32 3), align 4
  br label %140

140:                                              ; preds = %1, %113, %116, %111, %137
  ret void
}

declare i32 @returnjump_p(ptr noundef) local_unnamed_addr #3

declare ptr @next_real_insn(ptr noundef) local_unnamed_addr #3

declare ptr @emit_note_before(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_frame_debug_restore_state() local_unnamed_addr #10 {
  %1 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #31
  store ptr null, ptr %1, align 8, !tbaa !46
  %2 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1, i64 0, i32 2
  store i32 0, ptr %2, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1, i64 0, i32 3
  store i32 0, ptr %3, align 8, !tbaa !17
  %4 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %0
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) @dwarf2out_cfi_label.label, ptr noundef nonnull align 1 dereferenceable(16) @.str, i64 16, i1 false)
  br label %15

7:                                                ; preds = %0
  %8 = load i64, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %9 = add i64 %8, 1
  store i64 %9, ptr @dwarf2out_cfi_label_num, align 8, !tbaa !38
  %10 = trunc i64 %8 to i32
  %11 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @dwarf2out_cfi_label.label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.2, i32 noundef %10)
  %12 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %12, ptr noundef nonnull @dwarf2out_cfi_label.label) #31
  %13 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %14 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %13)
  br label %15

15:                                               ; preds = %6, %7
  %16 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1, i64 0, i32 1
  store i32 11, ptr %16, align 8, !tbaa !48
  tail call fastcc void @add_fde_cfi(ptr noundef nonnull @dwarf2out_cfi_label.label, ptr noundef nonnull %1)
  %17 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_remember, i64 0, i32 3), align 4
  %18 = and i8 %17, 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2874, ptr noundef nonnull @.str.5) #31
  %21 = load i8, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_remember, i64 0, i32 3), align 4
  br label %22

22:                                               ; preds = %15, %20
  %23 = phi i8 [ %17, %15 ], [ %21, %20 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @cfa, ptr noundef nonnull align 8 dereferenceable(24) @cfa_remember, i64 24, i1 false), !tbaa.struct !43
  %24 = and i8 %23, -3
  store i8 %24, ptr getelementptr inbounds (%struct.cfa_loc, ptr @cfa_remember, i64 0, i32 3), align 4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_begin_prologue(i32 noundef %0, ptr noundef %1) #10 {
  %3 = alloca [30 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %3) #31
  store ptr null, ptr @current_function_func_begin_label, align 8, !tbaa !6
  %4 = load i32, ptr @write_symbols, align 4
  %5 = icmp ne i32 %4, 3
  %6 = icmp ne i32 %4, 6
  %7 = and i1 %5, %6
  %8 = load i8, ptr @saved_do_cfi_asm, align 1
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %7, i1 %9, i1 false
  %11 = load i32, ptr @flag_unwind_tables, align 4
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %10, i1 %12, i1 false
  %14 = load i32, ptr @flag_exceptions, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %151, label %17

17:                                               ; preds = %2
  %18 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %19 = tail call ptr @function_section(ptr noundef %18) #31
  tail call void @switch_to_section(ptr noundef %19) #31
  %20 = load ptr, ptr @cfun, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.function, ptr %20, i64 0, i32 14
  %22 = load i32, ptr %21, align 4, !tbaa !114
  %23 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.182, i32 noundef %22)
  %24 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %25 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %26 = load ptr, ptr @cfun, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.function, ptr %26, i64 0, i32 14
  %28 = load i32, ptr %27, align 4, !tbaa !114
  %29 = sext i32 %28 to i64
  tail call void %24(ptr noundef %25, ptr noundef nonnull @.str.182, i64 noundef %29) #31
  %30 = call ptr @xstrdup(ptr noundef nonnull %3) #31
  store ptr %30, ptr @current_function_func_begin_label, align 8, !tbaa !6
  %31 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %32 = load i32, ptr @fde_table_allocated, align 4, !tbaa !21
  %33 = icmp eq i32 %31, %32
  %34 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br i1 %33, label %37, label %35

35:                                               ; preds = %17
  %36 = zext i32 %31 to i64
  br label %45

37:                                               ; preds = %17
  %38 = add i32 %31, 256
  store i32 %38, ptr @fde_table_allocated, align 4, !tbaa !21
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 112
  %41 = call ptr @ggc_realloc_stat(ptr noundef %34, i64 noundef %40) #31
  store ptr %41, ptr @fde_table, align 8, !tbaa !6
  %42 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %struct.dw_fde_struct, ptr %41, i64 %43
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(28672) %44, i8 0, i64 28672, i1 false)
  br label %45

45:                                               ; preds = %35, %37
  %46 = phi i64 [ %36, %35 ], [ %43, %37 ]
  %47 = phi i32 [ %31, %35 ], [ %42, %37 ]
  %48 = phi ptr [ %34, %35 ], [ %41, %37 ]
  %49 = add i32 %47, 1
  store i32 %49, ptr @fde_table_in_use, align 4, !tbaa !21
  %50 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46
  %51 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  store ptr %51, ptr %50, align 8, !tbaa !117
  %52 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 1
  store ptr %30, ptr %52, align 8, !tbaa !118
  %53 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 2
  store ptr %30, ptr %53, align 8, !tbaa !54
  %54 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 4
  %55 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %54, i8 0, i64 32, i1 false)
  %56 = load i16, ptr %55, align 8
  %57 = and i16 %56, -385
  store i16 %57, ptr %55, align 8
  %58 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 3
  store ptr null, ptr %58, align 8, !tbaa !119
  %59 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %59, i8 0, i64 16, i1 false)
  %60 = load ptr, ptr @cfun, align 8, !tbaa !6
  %61 = getelementptr inbounds %struct.function, ptr %60, i64 0, i32 14
  %62 = load i32, ptr %61, align 4, !tbaa !114
  %63 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 10
  store i32 %62, ptr %63, align 8, !tbaa !120
  %64 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 49), align 1, !tbaa !121
  %65 = shl i8 %64, 1
  %66 = and i8 %65, 2
  %67 = zext i8 %66 to i16
  %68 = and i16 %56, -387
  %69 = or i16 %68, %67
  store i16 %69, ptr %55, align 8
  %70 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 38), align 2, !tbaa !122
  %71 = shl i8 %70, 2
  %72 = and i8 %71, 4
  %73 = zext i8 %72 to i16
  %74 = and i16 %69, -389
  %75 = or i16 %74, %73
  store i16 %75, ptr %55, align 8
  %76 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 33), align 1, !tbaa !123
  %77 = and i8 %76, 1
  %78 = zext i8 %77 to i16
  %79 = and i16 %75, -386
  %80 = or i16 %79, %78
  store i16 %80, ptr %55, align 8
  %81 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 12
  store i32 -1, ptr %81, align 8, !tbaa !88
  %82 = getelementptr inbounds %struct.dw_fde_struct, ptr %48, i64 %46, i32 13
  store i32 -1, ptr %82, align 4, !tbaa !78
  %83 = load i32, ptr @flag_reorder_blocks_and_partition, align 4, !tbaa !21
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %119, label %85

85:                                               ; preds = %45
  %86 = load i8, ptr @first_function_block_is_cold, align 1, !tbaa !17
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = or i16 %80, 32
  br label %103

90:                                               ; preds = %85
  %91 = load ptr, ptr @text_section, align 8, !tbaa !6
  %92 = icmp eq ptr %19, %91
  br i1 %92, label %99, label %93

93:                                               ; preds = %90
  %94 = load ptr, ptr @cold_text_section, align 8
  %95 = icmp ne ptr %94, null
  %96 = icmp eq ptr %19, %94
  %97 = and i1 %95, %96
  %98 = select i1 %97, i16 32, i16 0
  br label %99

99:                                               ; preds = %93, %90
  %100 = phi i16 [ 32, %90 ], [ %98, %93 ]
  %101 = and i16 %80, -417
  %102 = or i16 %100, %101
  br label %103

103:                                              ; preds = %99, %88
  %104 = phi i16 [ %102, %99 ], [ %89, %88 ]
  store i16 %104, ptr %55, align 8
  %105 = call ptr @unlikely_text_section() #31
  %106 = load ptr, ptr @text_section, align 8, !tbaa !6
  %107 = icmp eq ptr %105, %106
  br i1 %107, label %114, label %108

108:                                              ; preds = %103
  %109 = load ptr, ptr @cold_text_section, align 8
  %110 = icmp ne ptr %109, null
  %111 = icmp eq ptr %105, %109
  %112 = and i1 %110, %111
  %113 = select i1 %112, i16 64, i16 0
  br label %114

114:                                              ; preds = %108, %103
  %115 = phi i16 [ 64, %103 ], [ %113, %108 ]
  %116 = load i16, ptr %55, align 8
  %117 = and i16 %116, -65
  %118 = or i16 %117, %115
  br label %132

119:                                              ; preds = %45
  %120 = load ptr, ptr @text_section, align 8, !tbaa !6
  %121 = icmp eq ptr %19, %120
  br i1 %121, label %128, label %122

122:                                              ; preds = %119
  %123 = load ptr, ptr @cold_text_section, align 8
  %124 = icmp ne ptr %123, null
  %125 = icmp eq ptr %19, %123
  %126 = and i1 %124, %125
  %127 = select i1 %126, i16 32, i16 0
  br label %128

128:                                              ; preds = %122, %119
  %129 = phi i16 [ 32, %119 ], [ %127, %122 ]
  %130 = and i16 %80, -481
  %131 = or i16 %129, %130
  br label %132

132:                                              ; preds = %128, %114
  %133 = phi i16 [ %131, %128 ], [ %118, %114 ]
  store i16 %133, ptr %55, align 8
  store i64 0, ptr @old_args_size, align 8, !tbaa !38
  store i64 0, ptr @args_size, align 8, !tbaa !38
  %134 = icmp eq ptr %1, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @dwarf2out_source_line(i32 noundef %0, ptr noundef nonnull %1, i32 poison, i8 noundef zeroext 1)
  br label %136

136:                                              ; preds = %135, %132
  %137 = call i32 @dwarf2out_do_cfi_asm(), !range !37
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call fastcc void @dwarf2out_do_cfi_startproc(i8 noundef zeroext 0)
  br label %151

140:                                              ; preds = %136
  %141 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %142 = call ptr @get_personality_function(ptr noundef %141) #31
  %143 = load ptr, ptr @current_unit_personality, align 8
  %144 = icmp eq ptr %143, null
  br i1 %144, label %145, label %146

145:                                              ; preds = %140
  store ptr %142, ptr @current_unit_personality, align 8, !tbaa !6
  br label %151

146:                                              ; preds = %140
  %147 = icmp eq ptr %142, null
  %148 = icmp eq ptr %143, %142
  %149 = or i1 %147, %148
  br i1 %149, label %151, label %150

150:                                              ; preds = %146
  call void (ptr, ...) @sorry(ptr noundef nonnull @.str.183) #31
  br label %151

151:                                              ; preds = %145, %139, %150, %146, %2
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %3) #31
  ret void
}

declare ptr @function_section(ptr noundef) local_unnamed_addr #3

declare void @switch_to_section(ptr noundef) local_unnamed_addr #3

declare ptr @ggc_realloc_stat(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @unlikely_text_section() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_source_line(i32 noundef %0, ptr noundef %1, i32 %2, i8 noundef zeroext %3) #10 {
  %5 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %6 = icmp ugt i32 %5, 1
  %7 = icmp ne i32 %0, 0
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %72

9:                                                ; preds = %4
  %10 = load ptr, ptr @file_table_last_lookup, align 8, !tbaa !6
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %10, align 8, !tbaa !124
  %14 = icmp eq ptr %13, %1
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %13, ptr noundef nonnull dereferenceable(1) %1)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15, %9
  %19 = load ptr, ptr @file_table, align 8, !tbaa !6
  %20 = tail call i32 @htab_hash_string(ptr noundef %1) #31
  %21 = tail call ptr @htab_find_slot_with_hash(ptr noundef %19, ptr noundef %1, i32 noundef %20, i32 noundef 1) #31
  %22 = load ptr, ptr %21, align 8, !tbaa !6
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = tail call ptr @ggc_alloc_stat(i64 noundef 16) #31
  store ptr %1, ptr %25, align 8, !tbaa !124
  %26 = getelementptr inbounds %struct.dwarf_file_data, ptr %25, i64 0, i32 1
  store i32 0, ptr %26, align 8, !tbaa !126
  store ptr %25, ptr %21, align 8, !tbaa !6
  br label %27

27:                                               ; preds = %12, %15, %18, %24
  %28 = phi ptr [ %25, %24 ], [ %22, %18 ], [ %10, %15 ], [ %10, %12 ]
  %29 = getelementptr inbounds %struct.dwarf_file_data, ptr %28, i64 0, i32 1
  %30 = load i32, ptr %29, align 8, !tbaa !126
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %49

32:                                               ; preds = %27
  %33 = load ptr, ptr @last_emitted_file, align 8, !tbaa !6
  %34 = icmp eq ptr %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.dwarf_file_data, ptr %33, i64 0, i32 1
  %37 = load i32, ptr %36, align 8, !tbaa !126
  %38 = add nsw i32 %37, 1
  br label %39

39:                                               ; preds = %35, %32
  %40 = phi i32 [ %38, %35 ], [ 1, %32 ]
  store i32 %40, ptr %29, align 8, !tbaa !126
  store ptr %28, ptr @last_emitted_file, align 8, !tbaa !6
  %41 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %42 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef nonnull @.str.187, i32 noundef %40)
  %43 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %44 = load ptr, ptr %28, align 8, !tbaa !124
  %45 = tail call ptr @remap_debug_filename(ptr noundef %44) #31
  tail call void @output_quoted_string(ptr noundef %43, ptr noundef %45) #31
  %46 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %47 = tail call i32 @fputc(i32 noundef 10, ptr noundef %46)
  %48 = load i32, ptr %29, align 8, !tbaa !126
  br label %49

49:                                               ; preds = %27, %39
  %50 = phi i32 [ %48, %39 ], [ %30, %27 ]
  %51 = tail call ptr @current_function_section() #31
  tail call void @switch_to_section(ptr noundef %51) #31
  %52 = load i32, ptr @flag_debug_asm, align 4, !tbaa !21
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %56 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.184, ptr noundef nonnull @.str.177, ptr noundef %1, i32 noundef %0)
  br label %57

57:                                               ; preds = %54, %49
  %58 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %59 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %58, ptr noundef nonnull @.str.185, i32 noundef %50, i32 noundef %0)
  %60 = load i8, ptr @dwarf2out_source_line.last_is_stmt, align 1, !tbaa !17
  %61 = icmp eq i8 %60, %3
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %64 = icmp ne i8 %3, 0
  %65 = zext i1 %64 to i32
  %66 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %63, ptr noundef nonnull @.str.186, i32 noundef %65)
  store i8 %3, ptr @dwarf2out_source_line.last_is_stmt, align 1, !tbaa !17
  br label %67

67:                                               ; preds = %62, %57
  %68 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %69 = tail call i32 @fputc(i32 noundef 10, ptr noundef %68)
  %70 = load i32, ptr @line_info_table_in_use, align 4, !tbaa !21
  %71 = add i32 %70, 1
  store i32 %71, ptr @line_info_table_in_use, align 4, !tbaa !21
  br label %72

72:                                               ; preds = %67, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dwarf2out_do_cfi_startproc(i8 noundef zeroext %0) unnamed_addr #10 {
  %2 = alloca [20 x i8], align 16
  %3 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %4 = tail call ptr @get_personality_function(ptr noundef %3) #31
  %5 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %6 = tail call i64 @fwrite(ptr nonnull @.str.188, i64 16, i64 1, ptr %5)
  %7 = icmp eq ptr %4, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 2, i32 noundef 1) #31
  %10 = and i32 %9, 128
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call ptr @dw2_force_const_mem(ptr noundef nonnull %4, i8 noundef zeroext 1) #31
  br label %14

14:                                               ; preds = %12, %8
  %15 = phi ptr [ %13, %12 ], [ %4, %8 ]
  %16 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %17 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef nonnull @.str.189, i32 noundef %9)
  %18 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @output_addr_const(ptr noundef %18, ptr noundef %15) #31
  %19 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %20 = tail call i32 @fputc(i32 noundef 10, ptr noundef %19)
  br label %21

21:                                               ; preds = %14, %1
  %22 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 38), align 2, !tbaa !122
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #31
  %25 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 0, i32 noundef 0) #31
  %26 = icmp eq i8 %0, 0
  %27 = select i1 %26, ptr @.str.191, ptr @.str.190
  %28 = load ptr, ptr @cfun, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.function, ptr %28, i64 0, i32 14
  %30 = load i32, ptr %29, align 4, !tbaa !114
  %31 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull %27, i32 noundef %30)
  %32 = call ptr @gen_rtx_fmt_s00_stat(i32 noundef 45, i32 noundef 16, ptr noundef nonnull %2) #31
  %33 = getelementptr inbounds %struct.rtx_def, ptr %32, i64 0, i32 1, i32 0, i32 0, i64 1
  store i32 2, ptr %33, align 8, !tbaa !17
  %34 = and i32 %25, 128
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %24
  %37 = call ptr @dw2_force_const_mem(ptr noundef nonnull %32, i8 noundef zeroext 1) #31
  br label %38

38:                                               ; preds = %36, %24
  %39 = phi ptr [ %37, %36 ], [ %32, %24 ]
  %40 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %41 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef nonnull @.str.192, i32 noundef %25)
  %42 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @output_addr_const(ptr noundef %42, ptr noundef %39) #31
  %43 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %44 = call i32 @fputc(i32 noundef 10, ptr noundef %43)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #31
  br label %45

45:                                               ; preds = %38, %21
  ret void
}

declare ptr @get_personality_function(ptr noundef) local_unnamed_addr #3

declare void @sorry(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @lookup_filename(ptr noundef %0) unnamed_addr #10 {
  %2 = load ptr, ptr @file_table_last_lookup, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %2, align 8, !tbaa !124
  %6 = icmp eq ptr %5, %0
  br i1 %6, label %19, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) %0)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %7, %1
  %11 = load ptr, ptr @file_table, align 8, !tbaa !6
  %12 = tail call i32 @htab_hash_string(ptr noundef %0) #31
  %13 = tail call ptr @htab_find_slot_with_hash(ptr noundef %11, ptr noundef %0, i32 noundef %12, i32 noundef 1) #31
  %14 = load ptr, ptr %13, align 8, !tbaa !6
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = tail call ptr @ggc_alloc_stat(i64 noundef 16) #31
  store ptr %0, ptr %17, align 8, !tbaa !124
  %18 = getelementptr inbounds %struct.dwarf_file_data, ptr %17, i64 0, i32 1
  store i32 0, ptr %18, align 8, !tbaa !126
  store ptr %17, ptr %13, align 8, !tbaa !6
  br label %19

19:                                               ; preds = %4, %7, %10, %16
  %20 = phi ptr [ %17, %16 ], [ %14, %10 ], [ %2, %7 ], [ %2, %4 ]
  ret ptr %20
}

declare ptr @current_function_section() local_unnamed_addr #3

declare void @output_quoted_string(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @remap_debug_filename(ptr noundef) local_unnamed_addr #3

declare ptr @htab_find_slot_with_hash(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @htab_hash_string(ptr noundef) local_unnamed_addr #3

declare ptr @dw2_force_const_mem(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @output_addr_const(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @gen_rtx_fmt_s00_stat(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_end_epilogue(i32 %0, ptr nocapture readnone %1) #10 {
  %3 = alloca [30 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %3) #31
  store ptr null, ptr @last_var_location_insn, align 8, !tbaa !6
  %4 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %8 = tail call i64 @fwrite(ptr nonnull @.str.193, i64 14, i64 1, ptr %7)
  br label %9

9:                                                ; preds = %2, %6
  %10 = load ptr, ptr @cfun, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.function, ptr %10, i64 0, i32 14
  %12 = load i32, ptr %11, align 4, !tbaa !114
  %13 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.194, i32 noundef %12)
  %14 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %14, ptr noundef nonnull %3) #31
  %15 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %16 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %15)
  %17 = load i32, ptr @fde_table_in_use, align 4
  %18 = icmp eq i32 %17, 0
  %19 = load ptr, ptr @fde_table, align 8
  %20 = add i32 %17, -1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.dw_fde_struct, ptr %19, i64 %21
  %23 = select i1 %18, ptr null, ptr %22
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %9
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 4039, ptr noundef nonnull @.str.5) #31
  br label %26

26:                                               ; preds = %9, %25
  %27 = call ptr @xstrdup(ptr noundef nonnull %3) #31
  %28 = getelementptr inbounds %struct.dw_fde_struct, ptr %23, i64 0, i32 3
  store ptr %27, ptr %28, align 8, !tbaa !119
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %3) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_frame_init() local_unnamed_addr #10 {
  %1 = alloca %struct.cfa_loc, align 8
  %2 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 28672) #31
  store ptr %2, ptr @fde_table, align 8, !tbaa !6
  store i32 256, ptr @fde_table_allocated, align 4, !tbaa !21
  store i32 0, ptr @fde_table_in_use, align 4, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1) #31
  %3 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 3
  store i8 0, ptr %3, align 4
  %4 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 1
  store i64 0, ptr %4, align 8, !tbaa !39
  %5 = getelementptr inbounds %struct.cfa_loc, ptr %1, i64 0, i32 2
  store i32 7, ptr %5, align 8, !tbaa !41
  store i64 4, ptr %1, align 8, !tbaa !42
  call fastcc void @def_cfa_1(ptr noundef null, ptr noundef nonnull %1)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1) #31
  %6 = tail call ptr @gen_rtx_REG(i32 noundef 0, i32 noundef 7) #31
  %7 = tail call ptr @gen_rtx_MEM(i32 noundef 0, ptr noundef %6) #31
  br label %8

8:                                                ; preds = %56, %0
  %9 = phi ptr [ %7, %0 ], [ %57, %56 ]
  %10 = load i32, ptr %9, align 8
  %11 = trunc i32 %10 to i16
  switch i16 %11, label %58 [
    i16 37, label %59
    i16 43, label %12
    i16 49, label %48
  ]

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = load i32, ptr %14, align 8
  %16 = trunc i32 %15 to i16
  switch i16 %16, label %47 [
    i16 37, label %17
    i16 49, label %22
    i16 50, label %34
  ]

17:                                               ; preds = %12
  %18 = getelementptr i8, ptr %14, i64 8
  %19 = load i32, ptr %18, align 8, !tbaa !17
  %20 = icmp eq i32 %19, 7
  br i1 %20, label %66, label %21

21:                                               ; preds = %17
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1209, ptr noundef nonnull @.str.5) #31
  br label %66

22:                                               ; preds = %12
  %23 = getelementptr inbounds %struct.rtx_def, ptr %14, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = getelementptr i8, ptr %24, i64 8
  %26 = load i32, ptr %25, align 8, !tbaa !17
  %27 = icmp eq i32 %26, 7
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1214, ptr noundef nonnull @.str.5) #31
  br label %29

29:                                               ; preds = %28, %22
  %30 = getelementptr inbounds %struct.rtx_def, ptr %14, i64 0, i32 1, i32 0, i32 0, i64 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.rtx_def, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %32, align 8, !tbaa !17
  br label %66

34:                                               ; preds = %12
  %35 = getelementptr inbounds %struct.rtx_def, ptr %14, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr i8, ptr %36, i64 8
  %38 = load i32, ptr %37, align 8, !tbaa !17
  %39 = icmp eq i32 %38, 7
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1219, ptr noundef nonnull @.str.5) #31
  br label %41

41:                                               ; preds = %40, %34
  %42 = getelementptr inbounds %struct.rtx_def, ptr %14, i64 0, i32 1, i32 0, i32 0, i64 1
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.rtx_def, ptr %43, i64 0, i32 1
  %45 = load i64, ptr %44, align 8, !tbaa !17
  %46 = sub nsw i64 0, %45
  br label %66

47:                                               ; preds = %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1224, ptr noundef nonnull @.str.5) #31
  br label %66

48:                                               ; preds = %8
  %49 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1
  %50 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1, i32 0, i32 0, i64 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = load i32, ptr %51, align 8
  %53 = and i32 %52, 65535
  %54 = icmp eq i32 %53, 30
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1233, ptr noundef nonnull @.str.5) #31
  br label %56

56:                                               ; preds = %55, %48
  %57 = load ptr, ptr %49, align 8, !tbaa !17
  br label %8

58:                                               ; preds = %8
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 1238, ptr noundef nonnull @.str.5) #31
  br label %66

59:                                               ; preds = %8
  %60 = getelementptr i8, ptr %9, i64 8
  %61 = load i32, ptr %60, align 8, !tbaa !17
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !21
  %65 = icmp eq i32 %64, 8
  br i1 %65, label %71, label %66

66:                                               ; preds = %59, %58, %47, %41, %29, %21, %17
  %67 = phi i64 [ 0, %59 ], [ 0, %21 ], [ 0, %17 ], [ %33, %29 ], [ %46, %41 ], [ 0, %47 ], [ 0, %58 ]
  %68 = phi i32 [ %64, %59 ], [ -1, %21 ], [ -1, %17 ], [ -1, %29 ], [ -1, %41 ], [ -1, %47 ], [ -1, %58 ]
  %69 = load i64, ptr @cfa, align 8, !tbaa !42
  %70 = sub nsw i64 %67, %69
  tail call fastcc void @reg_save(ptr noundef null, i32 noundef 8, i32 noundef %68, i64 noundef %70)
  br label %71

71:                                               ; preds = %59, %66
  ret void
}

declare ptr @gen_rtx_REG(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_frame_finish() local_unnamed_addr #10 {
  %1 = load i32, ptr @write_symbols, align 4
  switch i32 %1, label %3 [
    i32 6, label %2
    i32 3, label %2
  ]

2:                                                ; preds = %0, %0
  tail call fastcc void @output_call_frame_info(i32 noundef 0)
  br label %3

3:                                                ; preds = %0, %2
  %4 = load i32, ptr @flag_unwind_tables, align 4, !tbaa !21
  %5 = icmp ne i32 %4, 0
  %6 = load i32, ptr @flag_exceptions, align 4
  %7 = icmp ne i32 %6, 0
  %8 = select i1 %5, i1 true, i1 %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call fastcc void @output_call_frame_info(i32 noundef 1)
  br label %10

10:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_call_frame_info(i32 noundef %0) unnamed_addr #10 {
  %2 = alloca [20 x i8], align 16
  %3 = alloca [20 x i8], align 16
  %4 = alloca [20 x i8], align 16
  %5 = alloca [20 x i8], align 16
  %6 = alloca [20 x i8], align 16
  %7 = alloca [6 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %5) #31
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %6) #31
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %7) #31
  %8 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %444, label %10

10:                                               ; preds = %1
  %11 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %444

13:                                               ; preds = %10
  %14 = icmp ne i32 %0, 0
  br i1 %14, label %15, label %79

15:                                               ; preds = %13
  %16 = load i32, ptr @flag_exceptions, align 4, !tbaa !21
  %17 = icmp eq i32 %16, 0
  %18 = load i32, ptr @flag_asynchronous_unwind_tables, align 4
  %19 = icmp ne i32 %18, 0
  %20 = select i1 %17, i1 true, i1 %19
  %21 = zext i1 %20 to i8
  %22 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %75, label %24

24:                                               ; preds = %15
  %25 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %26 = zext i32 %22 to i64
  %27 = and i64 %26, 1
  %28 = icmp eq i32 %22, 1
  br i1 %28, label %58, label %29

29:                                               ; preds = %24
  %30 = and i64 %26, 4294967294
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %55, %31 ]
  %33 = phi i8 [ %21, %29 ], [ %54, %31 ]
  %34 = phi i8 [ 0, %29 ], [ %53, %31 ]
  %35 = phi i64 [ 0, %29 ], [ %56, %31 ]
  %36 = getelementptr inbounds %struct.dw_fde_struct, ptr %25, i64 %32, i32 14
  %37 = load i16, ptr %36, align 8
  %38 = and i16 %37, 4
  %39 = icmp eq i16 %38, 0
  %40 = and i16 %37, 3
  %41 = icmp eq i16 %40, 0
  %42 = select i1 %41, i8 1, i8 %33
  %43 = select i1 %39, i8 %42, i8 1
  %44 = or i64 %32, 1
  %45 = getelementptr inbounds %struct.dw_fde_struct, ptr %25, i64 %44, i32 14
  %46 = load i16, ptr %45, align 8
  %47 = and i16 %46, 4
  %48 = icmp eq i16 %47, 0
  %49 = and i16 %46, 3
  %50 = icmp eq i16 %49, 0
  %51 = select i1 %50, i8 1, i8 %43
  %52 = select i1 %48, i1 %39, i1 false
  %53 = select i1 %52, i8 %34, i8 1
  %54 = select i1 %48, i8 %51, i8 1
  %55 = add nuw nsw i64 %32, 2
  %56 = add i64 %35, 2
  %57 = icmp eq i64 %56, %30
  br i1 %57, label %58, label %31, !llvm.loop !127

58:                                               ; preds = %31, %24
  %59 = phi i8 [ undef, %24 ], [ %53, %31 ]
  %60 = phi i8 [ undef, %24 ], [ %54, %31 ]
  %61 = phi i64 [ 0, %24 ], [ %55, %31 ]
  %62 = phi i8 [ %21, %24 ], [ %54, %31 ]
  %63 = phi i8 [ 0, %24 ], [ %53, %31 ]
  %64 = icmp eq i64 %27, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.dw_fde_struct, ptr %25, i64 %61, i32 14
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 4
  %69 = icmp eq i16 %68, 0
  %70 = and i16 %67, 3
  %71 = icmp eq i16 %70, 0
  %72 = select i1 %71, i8 1, i8 %62
  %73 = select i1 %69, i8 %63, i8 1
  %74 = select i1 %69, i8 %72, i8 1
  br label %75

75:                                               ; preds = %65, %58, %15
  %76 = phi i8 [ 0, %15 ], [ %59, %58 ], [ %73, %65 ]
  %77 = phi i8 [ %21, %15 ], [ %60, %58 ], [ %74, %65 ]
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %444, label %79

79:                                               ; preds = %75, %13
  %80 = phi i8 [ %76, %75 ], [ 0, %13 ]
  %81 = load i32, ptr @flag_debug_asm, align 4, !tbaa !21
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  tail call void @app_enable() #31
  br label %84

84:                                               ; preds = %83, %79
  %85 = icmp eq i32 %0, 0
  br i1 %85, label %130, label %86

86:                                               ; preds = %84
  %87 = load ptr, ptr @eh_frame_section, align 8, !tbaa !6
  %88 = icmp eq ptr %87, null
  br i1 %88, label %89, label %109

89:                                               ; preds = %86
  %90 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 1, i32 noundef 0) #31
  %91 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 2, i32 noundef 1) #31
  %92 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 0, i32 noundef 0) #31
  %93 = load i32, ptr @flag_pic, align 4, !tbaa !21
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %89
  %96 = and i32 %90, 112
  switch i32 %96, label %97 [
    i32 0, label %105
    i32 80, label %105
  ]

97:                                               ; preds = %95
  %98 = and i32 %91, 112
  switch i32 %98, label %99 [
    i32 0, label %105
    i32 80, label %105
  ]

99:                                               ; preds = %97
  %100 = and i32 %92, 112
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = icmp eq i32 %100, 80
  %104 = select i1 %103, i32 512, i32 0
  br label %105

105:                                              ; preds = %102, %99, %97, %97, %95, %95, %89
  %106 = phi i32 [ 0, %89 ], [ 512, %99 ], [ 512, %97 ], [ 512, %95 ], [ %104, %102 ], [ 512, %95 ], [ 512, %97 ]
  %107 = tail call ptr @get_section(ptr noundef nonnull @.str.212, i32 noundef %106, ptr noundef null) #31
  store ptr %107, ptr @eh_frame_section, align 8, !tbaa !6
  %108 = icmp eq ptr %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %105, %86
  %110 = phi ptr [ %107, %105 ], [ %87, %86 ]
  tail call void @switch_to_section(ptr noundef nonnull %110) #31
  br label %137

111:                                              ; preds = %105
  %112 = load ptr, ptr @data_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %112) #31
  %113 = tail call ptr @get_file_function_name(ptr noundef nonnull @.str.213) #31
  %114 = tail call i32 @floor_log2(i64 noundef 4) #31
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %111
  %117 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %118 = tail call i32 @floor_log2(i64 noundef 4) #31
  %119 = shl nuw i32 1, %118
  %120 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %117, ptr noundef nonnull @.str.209, i32 noundef %119)
  br label %121

121:                                              ; preds = %116, %111
  %122 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 6), align 8, !tbaa !128
  %123 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %124 = getelementptr inbounds %struct.tree_identifier, ptr %113, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !17
  tail call void %122(ptr noundef %123, ptr noundef %125) #31
  %126 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %127 = load ptr, ptr %124, align 8, !tbaa !17
  tail call void @assemble_name(ptr noundef %126, ptr noundef %127) #31
  %128 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %129 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %128)
  br label %137

130:                                              ; preds = %84
  %131 = load ptr, ptr @debug_frame_section, align 8, !tbaa !6
  %132 = icmp eq ptr %131, null
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  %134 = tail call ptr @get_section(ptr noundef nonnull @.str.211, i32 noundef 1024, ptr noundef null) #31
  store ptr %134, ptr @debug_frame_section, align 8, !tbaa !6
  br label %135

135:                                              ; preds = %133, %130
  %136 = phi ptr [ %134, %133 ], [ %131, %130 ]
  tail call void @switch_to_section(ptr noundef %136) #31
  br label %137

137:                                              ; preds = %109, %121, %135
  %138 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.195, i32 noundef %0)
  %139 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %139, ptr noundef nonnull %6) #31
  %140 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %141 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %140)
  %142 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.196, i32 noundef %0)
  %143 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.197, i32 noundef %0)
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef nonnull @.str.198) #31
  %144 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %144, ptr noundef nonnull %4) #31
  %145 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %146 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %145)
  %147 = select i1 %14, i64 0, i64 4294967295
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %147, ptr noundef nonnull @.str.199) #31
  %148 = load i32, ptr @dwarf_version, align 4
  %149 = icmp slt i32 %148, 3
  %150 = select i1 %149, i64 1, i64 3
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %150, ptr noundef nonnull @.str.200) #31
  store i8 0, ptr %7, align 1, !tbaa !17
  %151 = load ptr, ptr @current_unit_personality, align 8, !tbaa !6
  br i1 %14, label %152, label %201

152:                                              ; preds = %137
  %153 = call i32 @asm_preferred_eh_data_format(i32 noundef 1, i32 noundef 0) #31
  %154 = call i32 @asm_preferred_eh_data_format(i32 noundef 2, i32 noundef 1) #31
  %155 = call i32 @asm_preferred_eh_data_format(i32 noundef 0, i32 noundef 0) #31
  %156 = icmp ne ptr %151, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %152
  %158 = getelementptr inbounds i8, ptr %7, i64 1
  store i8 80, ptr %158, align 1, !tbaa !17
  %159 = call i32 @size_of_encoded_value(i32 noundef %154) #31
  %160 = add nsw i32 %159, 1
  call void @assemble_external_libcall(ptr noundef nonnull %151) #31
  br label %161

161:                                              ; preds = %157, %152
  %162 = phi i32 [ %160, %157 ], [ 0, %152 ]
  %163 = phi i64 [ 2, %157 ], [ 1, %152 ]
  %164 = icmp eq i8 %80, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds i8, ptr %7, i64 %163
  %167 = add nuw nsw i64 %163, 1
  store i8 76, ptr %166, align 1, !tbaa !17
  %168 = add nsw i32 %162, 1
  br label %169

169:                                              ; preds = %165, %161
  %170 = phi i32 [ %168, %165 ], [ %162, %161 ]
  %171 = phi i64 [ %167, %165 ], [ %163, %161 ]
  %172 = icmp eq i32 %153, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds i8, ptr %7, i64 %171
  %175 = add nuw nsw i64 %171, 1
  store i8 82, ptr %174, align 1, !tbaa !17
  %176 = add nsw i32 %170, 1
  br label %179

177:                                              ; preds = %169
  %178 = icmp ugt i64 %171, 1
  br i1 %178, label %179, label %183

179:                                              ; preds = %173, %177
  %180 = phi i64 [ %175, %173 ], [ %171, %177 ]
  %181 = phi i32 [ %176, %173 ], [ %170, %177 ]
  %182 = getelementptr inbounds i8, ptr %7, i64 %180
  store i8 122, ptr %7, align 1, !tbaa !17
  store i8 0, ptr %182, align 1, !tbaa !17
  br label %183

183:                                              ; preds = %179, %177
  %184 = phi i32 [ %181, %179 ], [ %170, %177 ]
  %185 = icmp eq i32 %154, 80
  %186 = select i1 %156, i1 %185, i1 false
  br i1 %186, label %187, label %201

187:                                              ; preds = %183
  %188 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %7)
  %189 = call i32 @size_of_uleb128(i64 noundef 1) #31
  %190 = call i32 @size_of_sleb128(i64 noundef -4) #31
  %191 = trunc i64 %188 to i32
  %192 = xor i32 %191, -1
  %193 = add i32 %189, %190
  %194 = sub i32 %192, %193
  %195 = and i32 %194, 3
  %196 = add nsw i32 %195, %184
  %197 = sext i32 %196 to i64
  %198 = call i32 @size_of_uleb128(i64 noundef %197) #31
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %201, label %200

200:                                              ; preds = %187
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3772, ptr noundef nonnull @.str.5) #31
  br label %201

201:                                              ; preds = %183, %187, %200, %137
  %202 = phi i32 [ 0, %137 ], [ %184, %183 ], [ %196, %187 ], [ %196, %200 ]
  %203 = phi i32 [ 0, %137 ], [ %153, %183 ], [ %153, %187 ], [ %153, %200 ]
  %204 = phi i32 [ 0, %137 ], [ %154, %183 ], [ 80, %187 ], [ 80, %200 ]
  %205 = phi i32 [ 0, %137 ], [ %155, %183 ], [ %155, %187 ], [ %155, %200 ]
  call void (ptr, i64, ptr, ...) @dw2_asm_output_nstring(ptr noundef nonnull %7, i64 noundef -1, ptr noundef nonnull @.str.201) #31
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef 1, ptr noundef nonnull @.str.202) #31
  call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef -4, ptr noundef nonnull @.str.203) #31
  br i1 %149, label %206, label %207

206:                                              ; preds = %201
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 8, ptr noundef nonnull @.str.204) #31
  br label %208

207:                                              ; preds = %201
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef 8, ptr noundef nonnull @.str.204) #31
  br label %208

208:                                              ; preds = %207, %206
  %209 = load i8, ptr %7, align 1, !tbaa !17
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %208
  %212 = sext i32 %202 to i64
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %212, ptr noundef nonnull @.str.205) #31
  %213 = icmp eq ptr %151, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %211
  %215 = sext i32 %204 to i64
  %216 = call ptr @eh_data_format_name(i32 noundef %204) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %215, ptr noundef nonnull @.str.206, ptr noundef %216) #31
  call void (i32, ptr, i8, ptr, ...) @dw2_asm_output_encoded_addr_rtx(i32 noundef %204, ptr noundef nonnull %151, i8 noundef zeroext 1, ptr noundef null) #31
  br label %217

217:                                              ; preds = %214, %211
  %218 = icmp eq i8 %80, 0
  br i1 %218, label %222, label %219

219:                                              ; preds = %217
  %220 = sext i32 %205 to i64
  %221 = call ptr @eh_data_format_name(i32 noundef %205) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %220, ptr noundef nonnull @.str.207, ptr noundef %221) #31
  br label %222

222:                                              ; preds = %219, %217
  %223 = icmp eq i32 %203, 0
  br i1 %223, label %227, label %224

224:                                              ; preds = %222
  %225 = sext i32 %203 to i64
  %226 = call ptr @eh_data_format_name(i32 noundef %203) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %225, ptr noundef nonnull @.str.208, ptr noundef %226) #31
  br label %227

227:                                              ; preds = %222, %224, %208
  %228 = load ptr, ptr @cie_cfi_head, align 8, !tbaa !6
  %229 = icmp eq ptr %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %227, %230
  %231 = phi ptr [ %232, %230 ], [ %228, %227 ]
  call fastcc void @output_cfi(ptr noundef nonnull %231, ptr noundef null, i32 noundef %0)
  %232 = load ptr, ptr %231, align 8, !tbaa !6
  %233 = icmp eq ptr %232, null
  br i1 %233, label %234, label %230, !llvm.loop !129

234:                                              ; preds = %230, %227
  %235 = call i32 @floor_log2(i64 noundef 4) #31
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %242, label %237

237:                                              ; preds = %234
  %238 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %239 = call i32 @floor_log2(i64 noundef 4) #31
  %240 = shl nuw i32 1, %239
  %241 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %238, ptr noundef nonnull @.str.209, i32 noundef %240)
  br label %242

242:                                              ; preds = %234, %237
  %243 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %243, ptr noundef nonnull %5) #31
  %244 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %245 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %244)
  %246 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %435, label %248

248:                                              ; preds = %242
  %249 = trunc i32 %0 to i8
  %250 = and i32 %0, 255
  %251 = icmp eq i8 %249, 0
  %252 = icmp eq i8 %80, 0
  %253 = icmp eq i32 %205, 80
  br label %254

254:                                              ; preds = %248, %430
  %255 = phi i32 [ %246, %248 ], [ %431, %430 ]
  %256 = phi i64 [ 0, %248 ], [ %432, %430 ]
  %257 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %258 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256
  %259 = load i32, ptr @flag_asynchronous_unwind_tables, align 4
  %260 = icmp eq i32 %259, 0
  %261 = select i1 %14, i1 %260, i1 false
  %262 = load i32, ptr @flag_exceptions, align 4
  %263 = icmp ne i32 %262, 0
  %264 = select i1 %261, i1 %263, i1 false
  br i1 %264, label %265, label %273

265:                                              ; preds = %254
  %266 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 14
  %267 = load i16, ptr %266, align 8
  %268 = and i16 %267, 3
  %269 = icmp ne i16 %268, 0
  %270 = and i16 %267, 4
  %271 = icmp eq i16 %270, 0
  %272 = and i1 %269, %271
  br i1 %272, label %430, label %273

273:                                              ; preds = %265, %254
  %274 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 14
  %275 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 4
  %276 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 6
  %277 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 1
  %278 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 7
  %279 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 5
  %280 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 3
  %281 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 10
  %282 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 2
  %283 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 8
  %284 = getelementptr inbounds %struct.dw_fde_struct, ptr %257, i64 %256, i32 9
  br label %285

285:                                              ; preds = %273, %418
  %286 = phi i1 [ true, %273 ], [ false, %418 ]
  %287 = phi i16 [ 0, %273 ], [ 1, %418 ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #31
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #31
  %288 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 8), align 8, !tbaa !130
  %289 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %290 = load ptr, ptr %258, align 8, !tbaa !117
  call void %288(ptr noundef %289, ptr noundef %290, i32 noundef %250, i32 noundef 0) #31
  %291 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %292 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %293 = load i32, ptr @output_fde.j, align 4, !tbaa !21
  %294 = add i32 %293, %250
  %295 = zext i32 %294 to i64
  call void %291(ptr noundef %292, ptr noundef nonnull @.str.247, i64 noundef %295) #31
  %296 = load i32, ptr @output_fde.j, align 4, !tbaa !21
  %297 = add i32 %296, %250
  %298 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.248, i32 noundef %297)
  %299 = load i32, ptr @output_fde.j, align 4, !tbaa !21
  %300 = add i32 %299, %250
  %301 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.249, i32 noundef %300)
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef nonnull %3, ptr noundef nonnull %2, ptr noundef nonnull @.str.250) #31
  %302 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %302, ptr noundef nonnull %2) #31
  %303 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %304 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %303)
  br i1 %251, label %306, label %305

305:                                              ; preds = %285
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef nonnull %2, ptr noundef nonnull %6, ptr noundef nonnull @.str.251) #31
  br label %308

306:                                              ; preds = %285
  %307 = load ptr, ptr @debug_frame_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull %6, ptr noundef %307, ptr noundef nonnull @.str.251) #31
  br label %308

308:                                              ; preds = %306, %305
  %309 = load i16, ptr %274, align 8
  %310 = and i16 %309, 128
  %311 = icmp eq i16 %310, 0
  br i1 %311, label %321, label %312

312:                                              ; preds = %308
  %313 = and i16 %309, 256
  %314 = icmp eq i16 %313, 0
  %315 = select i1 %314, ptr %276, ptr %275
  %316 = select i1 %286, ptr %277, ptr %315
  %317 = lshr i16 %309, 8
  %318 = and i16 %317, 1
  %319 = icmp eq i16 %318, %287
  %320 = select i1 %319, ptr %279, ptr %278
  br label %321

321:                                              ; preds = %308, %312
  %322 = phi ptr [ %320, %312 ], [ %280, %308 ]
  %323 = phi ptr [ %316, %312 ], [ %277, %308 ]
  %324 = load ptr, ptr %323, align 8, !tbaa !6
  %325 = load ptr, ptr %322, align 8, !tbaa !6
  br i1 %251, label %332, label %326

326:                                              ; preds = %321
  %327 = call ptr @gen_rtx_fmt_s00_stat(i32 noundef 45, i32 noundef 16, ptr noundef %324) #31
  %328 = getelementptr inbounds %struct.rtx_def, ptr %327, i64 0, i32 1, i32 0, i32 0, i64 1
  %329 = load i32, ptr %328, align 8, !tbaa !17
  %330 = or i32 %329, 2
  store i32 %330, ptr %328, align 8, !tbaa !17
  call void (i32, ptr, i8, ptr, ...) @dw2_asm_output_encoded_addr_rtx(i32 noundef %203, ptr noundef %327, i8 noundef zeroext 0, ptr noundef nonnull @.str.252) #31
  %331 = call i32 @size_of_encoded_value(i32 noundef %203) #31
  br label %333

332:                                              ; preds = %321
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %324, ptr noundef nonnull @.str.252) #31
  br label %333

333:                                              ; preds = %332, %326
  %334 = phi i32 [ 4, %332 ], [ %331, %326 ]
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef %334, ptr noundef %325, ptr noundef %324, ptr noundef nonnull @.str.253) #31
  %335 = load i8, ptr %7, align 1, !tbaa !17
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %374, label %337

337:                                              ; preds = %333
  br i1 %252, label %373, label %338

338:                                              ; preds = %337
  %339 = call i32 @size_of_encoded_value(i32 noundef %205) #31
  br i1 %253, label %342, label %340

340:                                              ; preds = %338
  %341 = sext i32 %339 to i64
  br label %352

342:                                              ; preds = %338
  %343 = call i32 @size_of_encoded_value(i32 noundef %203) #31
  %344 = shl nsw i32 %343, 1
  %345 = sub i32 3, %344
  %346 = and i32 %345, 3
  %347 = add nsw i32 %346, %339
  %348 = sext i32 %347 to i64
  %349 = call i32 @size_of_uleb128(i64 noundef %348) #31
  %350 = icmp eq i32 %349, 1
  br i1 %350, label %352, label %351

351:                                              ; preds = %342
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3528, ptr noundef nonnull @.str.5) #31
  br label %352

352:                                              ; preds = %351, %342, %340
  %353 = phi i64 [ %341, %340 ], [ %348, %351 ], [ %348, %342 ]
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %353, ptr noundef nonnull @.str.205) #31
  %354 = load i16, ptr %274, align 8
  %355 = and i16 %354, 4
  %356 = icmp eq i16 %355, 0
  br i1 %356, label %362, label %357

357:                                              ; preds = %352
  %358 = select i1 %286, ptr @.str.191, ptr @.str.190
  %359 = load i32, ptr %281, align 8, !tbaa !120
  %360 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull %358, i32 noundef %359)
  %361 = call ptr @gen_rtx_fmt_s00_stat(i32 noundef 45, i32 noundef 16, ptr noundef nonnull %2) #31
  call void (i32, ptr, i8, ptr, ...) @dw2_asm_output_encoded_addr_rtx(i32 noundef %205, ptr noundef %361, i8 noundef zeroext 0, ptr noundef nonnull @.str.254) #31
  br label %374

362:                                              ; preds = %352
  br i1 %253, label %363, label %371

363:                                              ; preds = %362
  %364 = call i32 @floor_log2(i64 noundef 4) #31
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %371, label %366

366:                                              ; preds = %363
  %367 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %368 = call i32 @floor_log2(i64 noundef 4) #31
  %369 = shl nuw i32 1, %368
  %370 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %367, ptr noundef nonnull @.str.209, i32 noundef %369)
  br label %371

371:                                              ; preds = %366, %363, %362
  %372 = call i32 @size_of_encoded_value(i32 noundef %205) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %372, i64 noundef 0, ptr noundef nonnull @.str.255) #31
  br label %374

373:                                              ; preds = %337
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef 0, ptr noundef nonnull @.str.205) #31
  br label %374

374:                                              ; preds = %373, %371, %357, %333
  store ptr %324, ptr %282, align 8, !tbaa !54
  %375 = load i16, ptr %274, align 8
  %376 = and i16 %375, 128
  %377 = icmp eq i16 %376, 0
  br i1 %377, label %378, label %385

378:                                              ; preds = %374
  %379 = load ptr, ptr %283, align 8, !tbaa !6
  %380 = icmp eq ptr %379, null
  br i1 %380, label %410, label %381

381:                                              ; preds = %378, %381
  %382 = phi ptr [ %383, %381 ], [ %379, %378 ]
  call fastcc void @output_cfi(ptr noundef nonnull %382, ptr noundef nonnull %258, i32 noundef %250)
  %383 = load ptr, ptr %382, align 8, !tbaa !6
  %384 = icmp eq ptr %383, null
  br i1 %384, label %410, label %381, !llvm.loop !131

385:                                              ; preds = %374
  br i1 %286, label %386, label %396

386:                                              ; preds = %385
  %387 = load ptr, ptr %284, align 8, !tbaa !132
  %388 = icmp eq ptr %387, null
  br i1 %388, label %410, label %389

389:                                              ; preds = %386, %393
  %390 = phi ptr [ %391, %393 ], [ %283, %386 ]
  %391 = load ptr, ptr %390, align 8, !tbaa !6
  %392 = icmp eq ptr %391, null
  br i1 %392, label %410, label %393

393:                                              ; preds = %389
  call fastcc void @output_cfi(ptr noundef nonnull %391, ptr noundef nonnull %258, i32 noundef %250)
  %394 = load ptr, ptr %284, align 8, !tbaa !132
  %395 = icmp eq ptr %391, %394
  br i1 %395, label %410, label %389, !llvm.loop !133

396:                                              ; preds = %385
  %397 = load ptr, ptr %283, align 8, !tbaa !134
  %398 = load ptr, ptr %284, align 8, !tbaa !132
  %399 = icmp eq ptr %398, null
  br i1 %399, label %403, label %400

400:                                              ; preds = %396
  %401 = load ptr, ptr %398, align 8, !tbaa !46
  store ptr null, ptr %398, align 8, !tbaa !46
  call fastcc void @output_cfis(ptr noundef %397, i8 noundef zeroext 0, ptr noundef nonnull %258, i8 noundef zeroext %249)
  %402 = load ptr, ptr %284, align 8, !tbaa !132
  store ptr %401, ptr %402, align 8, !tbaa !46
  br label %403

403:                                              ; preds = %400, %396
  %404 = phi ptr [ %401, %400 ], [ %397, %396 ]
  %405 = icmp eq ptr %404, null
  br i1 %405, label %410, label %406

406:                                              ; preds = %403, %406
  %407 = phi ptr [ %408, %406 ], [ %404, %403 ]
  call fastcc void @output_cfi(ptr noundef nonnull %407, ptr noundef nonnull %258, i32 noundef %250)
  %408 = load ptr, ptr %407, align 8, !tbaa !46
  %409 = icmp eq ptr %408, null
  br i1 %409, label %410, label %406, !llvm.loop !135

410:                                              ; preds = %406, %393, %389, %381, %403, %386, %378
  %411 = call i32 @floor_log2(i64 noundef 4) #31
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %418, label %413

413:                                              ; preds = %410
  %414 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %415 = call i32 @floor_log2(i64 noundef 4) #31
  %416 = shl nuw i32 1, %415
  %417 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %414, ptr noundef nonnull @.str.209, i32 noundef %416)
  br label %418

418:                                              ; preds = %410, %413
  %419 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %419, ptr noundef nonnull %3) #31
  %420 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %421 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %420)
  %422 = load i32, ptr @output_fde.j, align 4, !tbaa !21
  %423 = add i32 %422, 2
  store i32 %423, ptr @output_fde.j, align 4, !tbaa !21
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #31
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #31
  %424 = load i16, ptr %274, align 8
  %425 = and i16 %424, 128
  %426 = icmp ne i16 %425, 0
  %427 = and i1 %426, %286
  br i1 %427, label %285, label %428, !llvm.loop !136

428:                                              ; preds = %418
  %429 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  br label %430

430:                                              ; preds = %428, %265
  %431 = phi i32 [ %429, %428 ], [ %255, %265 ]
  %432 = add nuw nsw i64 %256, 1
  %433 = zext i32 %431 to i64
  %434 = icmp ult i64 %432, %433
  br i1 %434, label %254, label %435, !llvm.loop !137

435:                                              ; preds = %430, %242
  %436 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 115), align 2
  %437 = icmp ne i8 %436, 0
  %438 = select i1 %14, i1 %437, i1 false
  br i1 %438, label %439, label %440

439:                                              ; preds = %435
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef nonnull @.str.210) #31
  br label %440

440:                                              ; preds = %439, %435
  %441 = load i32, ptr @flag_debug_asm, align 4, !tbaa !21
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %444, label %443

443:                                              ; preds = %440
  call void @app_disable() #31
  br label %444

444:                                              ; preds = %440, %443, %10, %1, %75
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #31
  ret void
}

declare void @app_enable() local_unnamed_addr #3

declare void @dw2_asm_output_delta(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

declare void @dw2_asm_output_data(i32 noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #3

declare i32 @size_of_encoded_value(i32 noundef) local_unnamed_addr #3

declare void @assemble_external_libcall(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #14

declare void @dw2_asm_output_nstring(ptr noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #3

declare void @dw2_asm_output_data_uleb128(i64 noundef, ptr noundef, ...) local_unnamed_addr #3

declare void @dw2_asm_output_data_sleb128(i64 noundef, ptr noundef, ...) local_unnamed_addr #3

declare ptr @eh_data_format_name(i32 noundef) local_unnamed_addr #3

declare void @dw2_asm_output_encoded_addr_rtx(i32 noundef, ptr noundef, i8 noundef zeroext, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_cfi(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !48
  switch i32 %5, label %30 [
    i32 64, label %6
    i32 128, label %11
    i32 192, label %24
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %8 = load i64, ptr %7, align 8, !tbaa !17
  %9 = and i64 %8, 63
  %10 = or i64 %9, 64
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %10, ptr noundef nonnull @.str.214, i64 noundef %8) #31
  br label %174

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %13 = load i32, ptr %12, align 8, !tbaa !17
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 63
  %16 = or i64 %15, 128
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %16, ptr noundef nonnull @.str.215, i64 noundef %14) #31
  %17 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %18 = load i64, ptr %17, align 8, !tbaa !17
  %19 = sdiv i64 %18, -4
  %20 = mul nsw i64 %19, -4
  %21 = icmp eq i64 %20, %18
  br i1 %21, label %23, label %22

22:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 585, ptr noundef nonnull @.str.5) #31
  br label %23

23:                                               ; preds = %11, %22
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %19, ptr noundef null) #31
  br label %174

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %26 = load i32, ptr %25, align 8, !tbaa !17
  %27 = zext i32 %26 to i64
  %28 = and i64 %27, 63
  %29 = or i64 %28, 192
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %29, ptr noundef nonnull @.str.216, i64 noundef %27) #31
  br label %174

30:                                               ; preds = %3
  %31 = zext i32 %5 to i64
  %32 = icmp ult i32 %5, 48
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = sext i32 %5 to i64
  %35 = shl i64 %34, 2
  %36 = call ptr @llvm.load.relative.i64(ptr @reltable.output_cfi, i64 %35)
  br label %37

37:                                               ; preds = %30, %33
  %38 = phi ptr [ %36, %33 ], [ @.str.245, %30 ]
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %31, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  %39 = load i32, ptr %4, align 8, !tbaa !48
  switch i32 %39, label %174 [
    i32 1, label %40
    i32 2, label %54
    i32 3, label %60
    i32 4, label %66
    i32 29, label %72
    i32 5, label %78
    i32 12, label %89
    i32 17, label %95
    i32 18, label %106
    i32 6, label %117
    i32 7, label %117
    i32 8, label %117
    i32 13, label %117
    i32 9, label %121
    i32 14, label %128
    i32 46, label %128
    i32 19, label %131
    i32 47, label %173
    i32 15, label %139
    i32 16, label %139
  ]

40:                                               ; preds = %37
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = tail call i32 @asm_preferred_eh_data_format(i32 noundef 1, i32 noundef 0) #31
  %44 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = tail call ptr @gen_rtx_fmt_s00_stat(i32 noundef 45, i32 noundef 16, ptr noundef %45) #31
  tail call void (i32, ptr, i8, ptr, ...) @dw2_asm_output_encoded_addr_rtx(i32 noundef %43, ptr noundef %46, i8 noundef zeroext 0, ptr noundef null) #31
  br label %50

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  tail call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %49, ptr noundef null) #31
  br label %50

50:                                               ; preds = %47, %42
  %51 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 2
  store ptr %52, ptr %53, align 8, !tbaa !54
  br label %174

54:                                               ; preds = %37
  %55 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !54
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 1, ptr noundef %56, ptr noundef %58, ptr noundef null) #31
  %59 = load ptr, ptr %55, align 8, !tbaa !17
  store ptr %59, ptr %57, align 8, !tbaa !54
  br label %174

60:                                               ; preds = %37
  %61 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !54
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 2, ptr noundef %62, ptr noundef %64, ptr noundef null) #31
  %65 = load ptr, ptr %61, align 8, !tbaa !17
  store ptr %65, ptr %63, align 8, !tbaa !54
  br label %174

66:                                               ; preds = %37
  %67 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !54
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef %68, ptr noundef %70, ptr noundef null) #31
  %71 = load ptr, ptr %67, align 8, !tbaa !17
  store ptr %71, ptr %69, align 8, !tbaa !54
  br label %174

72:                                               ; preds = %37
  %73 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 2
  %76 = load ptr, ptr %75, align 8, !tbaa !54
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 8, ptr noundef %74, ptr noundef %76, ptr noundef null) #31
  %77 = load ptr, ptr %73, align 8, !tbaa !17
  store ptr %77, ptr %75, align 8, !tbaa !54
  br label %174

78:                                               ; preds = %37
  %79 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %80 = load i32, ptr %79, align 8, !tbaa !17
  %81 = zext i32 %80 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %81, ptr noundef null) #31
  %82 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %83 = load i64, ptr %82, align 8, !tbaa !17
  %84 = sdiv i64 %83, -4
  %85 = mul nsw i64 %84, -4
  %86 = icmp eq i64 %85, %83
  br i1 %86, label %88, label %87

87:                                               ; preds = %78
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 585, ptr noundef nonnull @.str.5) #31
  br label %88

88:                                               ; preds = %78, %87
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %84, ptr noundef null) #31
  br label %174

89:                                               ; preds = %37
  %90 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %91 = load i32, ptr %90, align 8, !tbaa !17
  %92 = zext i32 %91 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %92, ptr noundef null) #31
  %93 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %94 = load i64, ptr %93, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %94, ptr noundef null) #31
  br label %174

95:                                               ; preds = %37
  %96 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %97 = load i32, ptr %96, align 8, !tbaa !17
  %98 = zext i32 %97 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %98, ptr noundef null) #31
  %99 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %100 = load i64, ptr %99, align 8, !tbaa !17
  %101 = sdiv i64 %100, -4
  %102 = mul nsw i64 %101, -4
  %103 = icmp eq i64 %102, %100
  br i1 %103, label %105, label %104

104:                                              ; preds = %95
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 585, ptr noundef nonnull @.str.5) #31
  br label %105

105:                                              ; preds = %95, %104
  tail call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %101, ptr noundef null) #31
  br label %174

106:                                              ; preds = %37
  %107 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %108 = load i32, ptr %107, align 8, !tbaa !17
  %109 = zext i32 %108 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %109, ptr noundef null) #31
  %110 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %111 = load i64, ptr %110, align 8, !tbaa !17
  %112 = sdiv i64 %111, -4
  %113 = mul nsw i64 %112, -4
  %114 = icmp eq i64 %113, %111
  br i1 %114, label %116, label %115

115:                                              ; preds = %106
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 585, ptr noundef nonnull @.str.5) #31
  br label %116

116:                                              ; preds = %106, %115
  tail call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %112, ptr noundef null) #31
  br label %174

117:                                              ; preds = %37, %37, %37, %37
  %118 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %119 = load i32, ptr %118, align 8, !tbaa !17
  %120 = zext i32 %119 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %120, ptr noundef null) #31
  br label %174

121:                                              ; preds = %37
  %122 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %123 = load i32, ptr %122, align 8, !tbaa !17
  %124 = zext i32 %123 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %124, ptr noundef null) #31
  %125 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %126 = load i32, ptr %125, align 8, !tbaa !17
  %127 = zext i32 %126 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %127, ptr noundef null) #31
  br label %174

128:                                              ; preds = %37, %37
  %129 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %130 = load i64, ptr %129, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %130, ptr noundef null) #31
  br label %174

131:                                              ; preds = %37
  %132 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %133 = load i64, ptr %132, align 8, !tbaa !17
  %134 = sdiv i64 %133, -4
  %135 = mul nsw i64 %134, -4
  %136 = icmp eq i64 %135, %133
  br i1 %136, label %138, label %137

137:                                              ; preds = %131
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 585, ptr noundef nonnull @.str.5) #31
  br label %138

138:                                              ; preds = %131, %137
  tail call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %134, ptr noundef null) #31
  br label %174

139:                                              ; preds = %37, %37
  %140 = icmp eq i32 %39, 16
  %141 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  br i1 %140, label %142, label %146

142:                                              ; preds = %139
  %143 = load i32, ptr %141, align 8, !tbaa !17
  %144 = zext i32 %143 to i64
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %144, ptr noundef null) #31
  %145 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  br label %146

146:                                              ; preds = %142, %139
  %147 = phi ptr [ %145, %142 ], [ %141, %139 ]
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = icmp eq ptr %148, null
  br i1 %149, label %171, label %150

150:                                              ; preds = %146, %157
  %151 = phi i64 [ %159, %157 ], [ 0, %146 ]
  %152 = phi ptr [ %160, %157 ], [ %148, %146 ]
  %153 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %152, i64 0, i32 1
  %154 = load i16, ptr %153, align 8
  %155 = trunc i16 %154 to i8
  switch i8 %155, label %157 [
    i8 47, label %156
    i8 40, label %156
  ]

156:                                              ; preds = %150, %150
  br label %162

157:                                              ; preds = %150
  %158 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %152)
  %159 = add i64 %158, %151
  %160 = load ptr, ptr %152, align 8, !tbaa !57
  %161 = icmp eq ptr %160, null
  br i1 %161, label %171, label %150, !llvm.loop !59

162:                                              ; preds = %156, %162
  %163 = phi i64 [ %168, %162 ], [ 0, %156 ]
  %164 = phi ptr [ %169, %162 ], [ %148, %156 ]
  %165 = trunc i64 %163 to i32
  %166 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %164, i64 0, i32 2
  store i32 %165, ptr %166, align 4, !tbaa !60
  %167 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %164)
  %168 = add i64 %167, %163
  %169 = load ptr, ptr %164, align 8, !tbaa !57
  %170 = icmp eq ptr %169, null
  br i1 %170, label %171, label %162, !llvm.loop !61

171:                                              ; preds = %157, %162, %146
  %172 = phi i64 [ 0, %146 ], [ %168, %162 ], [ %159, %157 ]
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %172, ptr noundef null) #31
  tail call fastcc void @output_loc_sequence(ptr noundef %148)
  br label %174

173:                                              ; preds = %37
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3172, ptr noundef nonnull @.str.5) #31
  br label %174

174:                                              ; preds = %23, %50, %54, %60, %66, %72, %88, %89, %105, %116, %117, %121, %128, %138, %171, %37, %173, %24, %6
  ret void
}

declare i32 @floor_log2(i64 noundef) local_unnamed_addr #3

declare void @app_disable() local_unnamed_addr #3

declare ptr @get_section(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @get_file_function_name(ptr noundef) local_unnamed_addr #3

declare void @dw2_asm_output_addr(i32 noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_loc_sequence(ptr noundef readonly %0) unnamed_addr #10 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %187, label %3

3:                                                ; preds = %1, %184
  %4 = phi ptr [ %185, %184 ], [ %0, %1 ]
  %5 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 1
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %6, 255
  %8 = zext i16 %7 to i32
  %9 = zext i16 %7 to i64
  %10 = tail call fastcc ptr @dwarf_stack_op_name(i32 noundef %8)
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %9, ptr noundef nonnull @.str.217, ptr noundef nonnull %10) #31
  %11 = load i16, ptr %5, align 8
  %12 = trunc i16 %11 to i8
  switch i8 %12, label %184 [
    i8 10, label %13
    i8 11, label %13
    i8 12, label %16
    i8 13, label %16
    i8 14, label %19
    i8 15, label %19
    i8 47, label %22
    i8 40, label %22
    i8 -98, label %37
    i8 8, label %133
    i8 9, label %133
    i8 16, label %136
    i8 17, label %139
    i8 21, label %142
    i8 35, label %145
    i8 112, label %148
    i8 113, label %148
    i8 114, label %148
    i8 115, label %148
    i8 116, label %148
    i8 117, label %148
    i8 118, label %148
    i8 119, label %148
    i8 120, label %148
    i8 121, label %148
    i8 122, label %148
    i8 123, label %148
    i8 124, label %148
    i8 125, label %148
    i8 126, label %148
    i8 127, label %148
    i8 -128, label %148
    i8 -127, label %148
    i8 -126, label %148
    i8 -125, label %148
    i8 -124, label %148
    i8 -123, label %148
    i8 -122, label %148
    i8 -121, label %148
    i8 -120, label %148
    i8 -119, label %148
    i8 -118, label %148
    i8 -117, label %148
    i8 -116, label %148
    i8 -115, label %148
    i8 -114, label %148
    i8 -113, label %148
    i8 -112, label %151
    i8 -111, label %154
    i8 -110, label %157
    i8 -109, label %162
    i8 -108, label %165
    i8 -107, label %165
    i8 3, label %168
  ]

13:                                               ; preds = %3, %3
  %14 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %15 = load i64, ptr %14, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef %15, ptr noundef null) #31
  br label %184

16:                                               ; preds = %3, %3
  %17 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %18, ptr noundef null) #31
  br label %184

19:                                               ; preds = %3, %3
  %20 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %21 = load i64, ptr %20, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 8, i64 noundef %21, ptr noundef null) #31
  br label %184

22:                                               ; preds = %3, %3
  %23 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3
  %24 = load i32, ptr %23, align 8, !tbaa !62
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 4870, ptr noundef nonnull @.str.5) #31
  br label %27

27:                                               ; preds = %26, %22
  %28 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !60
  %32 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !60
  %34 = add i32 %31, -3
  %35 = sub i32 %34, %33
  %36 = sext i32 %35 to i64
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef %36, ptr noundef null) #31
  br label %184

37:                                               ; preds = %3
  %38 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4
  %39 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %40 = load i64, ptr %39, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %40, ptr noundef null) #31
  %41 = load i32, ptr %38, align 8, !tbaa !62
  switch i32 %41, label %132 [
    i32 5, label %42
    i32 8, label %47
    i32 7, label %120
    i32 0, label %125
  ]

42:                                               ; preds = %37
  %43 = load i64, ptr %39, align 8, !tbaa !17
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4, i32 1
  %46 = load i64, ptr %45, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %44, i64 noundef %46, ptr noundef null) #31
  br label %184

47:                                               ; preds = %37
  %48 = getelementptr inbounds i8, ptr %4, i64 60
  %49 = load i32, ptr %48, align 4, !tbaa !17
  %50 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4, i32 1, i32 0, i32 1
  %51 = load i32, ptr %50, align 8, !tbaa !17
  %52 = icmp ugt i32 %49, 8
  %53 = zext i1 %52 to i32
  %54 = shl i32 %51, %53
  %55 = lshr i32 %49, %53
  %56 = icmp eq i32 %54, 0
  br i1 %56, label %184, label %57

57:                                               ; preds = %47
  %58 = icmp eq i32 %55, 0
  %59 = zext i32 %55 to i64
  br i1 %58, label %67, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = and i32 %55, 3
  %64 = icmp ult i32 %55, 4
  %65 = and i32 %55, -4
  %66 = icmp eq i32 %63, 0
  br label %71

67:                                               ; preds = %57, %67
  %68 = phi i32 [ %69, %67 ], [ 0, %57 ]
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.246, i32 noundef %68) #31
  %69 = add nuw i32 %68, 1
  %70 = icmp eq i32 %69, %54
  br i1 %70, label %184, label %67, !llvm.loop !138

71:                                               ; preds = %116, %60
  %72 = phi ptr [ %74, %116 ], [ %62, %60 ]
  %73 = phi i32 [ %118, %116 ], [ 0, %60 ]
  %74 = getelementptr inbounds i8, ptr %72, i64 %59
  br i1 %64, label %101, label %75

75:                                               ; preds = %71, %75
  %76 = phi i64 [ %98, %75 ], [ 0, %71 ]
  %77 = phi ptr [ %95, %75 ], [ %74, %71 ]
  %78 = phi i32 [ %99, %75 ], [ 0, %71 ]
  %79 = getelementptr inbounds i8, ptr %77, i64 -1
  %80 = load i8, ptr %79, align 1, !tbaa !17
  %81 = zext i8 %80 to i64
  %82 = shl i64 %76, 16
  %83 = shl nuw nsw i64 %81, 8
  %84 = or i64 %82, %83
  %85 = getelementptr inbounds i8, ptr %77, i64 -2
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = zext i8 %86 to i64
  %88 = or i64 %84, %87
  %89 = getelementptr inbounds i8, ptr %77, i64 -3
  %90 = load i8, ptr %89, align 1, !tbaa !17
  %91 = zext i8 %90 to i64
  %92 = shl i64 %88, 16
  %93 = shl nuw nsw i64 %91, 8
  %94 = or i64 %92, %93
  %95 = getelementptr inbounds i8, ptr %77, i64 -4
  %96 = load i8, ptr %95, align 1, !tbaa !17
  %97 = zext i8 %96 to i64
  %98 = or i64 %94, %97
  %99 = add i32 %78, 4
  %100 = icmp eq i32 %99, %65
  br i1 %100, label %101, label %75, !llvm.loop !139

101:                                              ; preds = %75, %71
  %102 = phi i64 [ undef, %71 ], [ %98, %75 ]
  %103 = phi i64 [ 0, %71 ], [ %98, %75 ]
  %104 = phi ptr [ %74, %71 ], [ %95, %75 ]
  br i1 %66, label %116, label %105

105:                                              ; preds = %101, %105
  %106 = phi i64 [ %113, %105 ], [ %103, %101 ]
  %107 = phi ptr [ %110, %105 ], [ %104, %101 ]
  %108 = phi i32 [ %114, %105 ], [ 0, %101 ]
  %109 = shl i64 %106, 8
  %110 = getelementptr inbounds i8, ptr %107, i64 -1
  %111 = load i8, ptr %110, align 1, !tbaa !17
  %112 = zext i8 %111 to i64
  %113 = or i64 %109, %112
  %114 = add i32 %108, 1
  %115 = icmp eq i32 %114, %63
  br i1 %115, label %116, label %105, !llvm.loop !140

116:                                              ; preds = %105, %101
  %117 = phi i64 [ %102, %101 ], [ %113, %105 ]
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %55, i64 noundef %117, ptr noundef nonnull @.str.246, i32 noundef %73) #31
  %118 = add nuw i32 %73, 1
  %119 = icmp eq i32 %118, %54
  br i1 %119, label %184, label %71, !llvm.loop !138

120:                                              ; preds = %37
  %121 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4, i32 1
  %122 = load i64, ptr %121, align 8, !tbaa !17
  %123 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4, i32 1, i32 0, i32 1
  %124 = load i64, ptr %123, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 8, i64 noundef %122, ptr noundef null) #31
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 8, i64 noundef %124, ptr noundef null) #31
  br label %184

125:                                              ; preds = %37
  %126 = load i64, ptr %39, align 8, !tbaa !17
  %127 = icmp eq i64 %126, 4
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 4923, ptr noundef nonnull @.str.5) #31
  br label %129

129:                                              ; preds = %128, %125
  %130 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !17
  tail call void (i32, ptr, ptr, ...) @dw2_asm_output_addr_rtx(i32 noundef 4, ptr noundef %131, ptr noundef null) #31
  br label %184

132:                                              ; preds = %37
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 4927, ptr noundef nonnull @.str.5) #31
  br label %184

133:                                              ; preds = %3, %3
  %134 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %135, ptr noundef null) #31
  br label %184

136:                                              ; preds = %3
  %137 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %138 = load i64, ptr %137, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %138, ptr noundef null) #31
  br label %184

139:                                              ; preds = %3
  %140 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %141 = load i64, ptr %140, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %141, ptr noundef null) #31
  br label %184

142:                                              ; preds = %3
  %143 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %144 = load i64, ptr %143, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %144, ptr noundef null) #31
  br label %184

145:                                              ; preds = %3
  %146 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %147 = load i64, ptr %146, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %147, ptr noundef null) #31
  br label %184

148:                                              ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %149 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %150 = load i64, ptr %149, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %150, ptr noundef null) #31
  br label %184

151:                                              ; preds = %3
  %152 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %153 = load i64, ptr %152, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %153, ptr noundef null) #31
  br label %184

154:                                              ; preds = %3
  %155 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %156 = load i64, ptr %155, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %156, ptr noundef null) #31
  br label %184

157:                                              ; preds = %3
  %158 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %159 = load i64, ptr %158, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %159, ptr noundef null) #31
  %160 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 4, i32 1
  %161 = load i64, ptr %160, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %161, ptr noundef null) #31
  br label %184

162:                                              ; preds = %3
  %163 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %164 = load i64, ptr %163, align 8, !tbaa !17
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %164, ptr noundef null) #31
  br label %184

165:                                              ; preds = %3, %3
  %166 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %167 = load i64, ptr %166, align 8, !tbaa !17
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %167, ptr noundef null) #31
  br label %184

168:                                              ; preds = %3
  %169 = and i16 %11, 256
  %170 = icmp eq i16 %169, 0
  br i1 %170, label %181, label %171

171:                                              ; preds = %168
  %172 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 37), align 8, !tbaa !141
  %173 = icmp eq ptr %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %176 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %177 = load ptr, ptr %176, align 8, !tbaa !17
  tail call void %172(ptr noundef %175, i32 noundef 4, ptr noundef %177) #31
  %178 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %179 = tail call i32 @fputc(i32 noundef 10, ptr noundef %178)
  br label %184

180:                                              ; preds = %171
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 5025, ptr noundef nonnull @.str.5) #31
  br label %184

181:                                              ; preds = %168
  %182 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %4, i64 0, i32 3, i32 1
  %183 = load ptr, ptr %182, align 8, !tbaa !17
  tail call void (i32, ptr, ptr, ...) @dw2_asm_output_addr_rtx(i32 noundef 4, ptr noundef %183, ptr noundef null) #31
  br label %184

184:                                              ; preds = %116, %67, %3, %13, %16, %19, %27, %42, %47, %120, %129, %132, %133, %136, %139, %142, %145, %148, %151, %154, %157, %162, %165, %174, %180, %181
  %185 = load ptr, ptr %4, align 8, !tbaa !57
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %3, !llvm.loop !142

187:                                              ; preds = %184, %1
  ret void
}

declare void @dw2_asm_output_addr_rtx(i32 noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

declare void @dw2_asm_output_offset(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_cfis(ptr noundef %0, i8 noundef zeroext %1, ptr nocapture noundef %2, i8 noundef zeroext %3) unnamed_addr #10 {
  %5 = alloca %struct.dw_cfi_struct, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #31
  %6 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 32) #31
  %7 = zext i8 %3 to i32
  %8 = icmp eq i8 %1, 0
  %9 = getelementptr inbounds %struct.dw_cfi_struct, ptr %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.dw_cfi_struct, ptr %5, i64 0, i32 3
  br label %11

11:                                               ; preds = %161, %4
  %12 = phi ptr [ %6, %4 ], [ %162, %161 ]
  %13 = phi ptr [ null, %4 ], [ %163, %161 ]
  %14 = phi ptr [ null, %4 ], [ %164, %161 ]
  %15 = phi ptr [ null, %4 ], [ %165, %161 ]
  %16 = phi ptr [ %0, %4 ], [ %167, %161 ]
  %17 = icmp eq ptr %16, null
  br i1 %17, label %83, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.dw_cfi_struct, ptr %16, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !48
  switch i32 %20, label %160 [
    i32 64, label %161
    i32 2, label %161
    i32 3, label %161
    i32 4, label %161
    i32 29, label %161
    i32 1, label %161
    i32 10, label %21
    i32 46, label %35
    i32 45, label %83
    i32 128, label %36
    i32 5, label %36
    i32 17, label %36
    i32 192, label %36
    i32 6, label %36
    i32 7, label %36
    i32 8, label %36
    i32 9, label %36
    i32 20, label %36
    i32 21, label %36
    i32 16, label %36
    i32 22, label %36
    i32 47, label %36
    i32 12, label %79
    i32 18, label %79
    i32 15, label %79
    i32 13, label %80
    i32 14, label %81
    i32 19, label %81
    i32 0, label %82
  ]

21:                                               ; preds = %18
  %22 = load ptr, ptr %16, align 8, !tbaa !46
  %23 = icmp eq ptr %22, null
  br i1 %23, label %83, label %24

24:                                               ; preds = %21, %31
  %25 = phi ptr [ %33, %31 ], [ %22, %21 ]
  %26 = phi ptr [ %32, %31 ], [ %13, %21 ]
  %27 = getelementptr inbounds %struct.dw_cfi_struct, ptr %25, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !48
  switch i32 %28, label %30 [
    i32 11, label %161
    i32 46, label %31
    i32 10, label %29
  ]

29:                                               ; preds = %24
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3321, ptr noundef nonnull @.str.5) #31
  br label %31

30:                                               ; preds = %24
  br label %31

31:                                               ; preds = %24, %30, %29
  %32 = phi ptr [ %26, %29 ], [ %25, %24 ], [ %26, %30 ]
  %33 = load ptr, ptr %25, align 8, !tbaa !46
  %34 = icmp eq ptr %33, null
  br i1 %34, label %83, label %24, !llvm.loop !143

35:                                               ; preds = %18
  br label %161

36:                                               ; preds = %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18
  %37 = icmp eq ptr %12, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %36
  %39 = load i32, ptr %12, align 8, !tbaa !144
  %40 = getelementptr inbounds %struct.dw_cfi_struct, ptr %16, i64 0, i32 2
  %41 = load i32, ptr %40, align 8, !tbaa !17
  %42 = icmp ugt i32 %39, %41
  br i1 %42, label %74, label %43

43:                                               ; preds = %38
  %44 = add i32 %41, 1
  %45 = sub nsw i32 %44, %39
  %46 = getelementptr inbounds %struct.VEC_dw_cfi_ref_base, ptr %12, i64 0, i32 1
  %47 = load i32, ptr %46, align 4, !tbaa !146
  %48 = sub i32 %47, %39
  %49 = icmp ult i32 %48, %45
  br i1 %49, label %55, label %62

50:                                               ; preds = %36
  %51 = getelementptr inbounds %struct.dw_cfi_struct, ptr %16, i64 0, i32 2
  %52 = load i32, ptr %51, align 8, !tbaa !17
  %53 = add i32 %52, 1
  %54 = icmp ne i32 %53, 0
  tail call void @llvm.assume(i1 %54)
  br label %55

55:                                               ; preds = %50, %43
  %56 = phi i32 [ %53, %50 ], [ %44, %43 ]
  %57 = phi ptr [ %51, %50 ], [ %40, %43 ]
  %58 = phi i32 [ 0, %50 ], [ %39, %43 ]
  %59 = phi i32 [ %53, %50 ], [ %45, %43 ]
  %60 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef %12, i32 noundef %59) #31
  %61 = sub nsw i32 %56, %58
  br label %62

62:                                               ; preds = %43, %55
  %63 = phi i32 [ %56, %55 ], [ %44, %43 ]
  %64 = phi ptr [ %57, %55 ], [ %40, %43 ]
  %65 = phi ptr [ %60, %55 ], [ %12, %43 ]
  %66 = phi i32 [ %61, %55 ], [ %45, %43 ]
  %67 = phi i32 [ %58, %55 ], [ %39, %43 ]
  store i32 %63, ptr %65, align 8, !tbaa !144
  %68 = getelementptr inbounds %struct.VEC_dw_cfi_ref_base, ptr %65, i64 0, i32 2
  %69 = sext i32 %67 to i64
  %70 = getelementptr inbounds ptr, ptr %68, i64 %69
  %71 = sext i32 %66 to i64
  %72 = shl nsw i64 %71, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %70, i8 0, i64 %72, i1 false)
  %73 = load i32, ptr %64, align 8, !tbaa !17
  br label %74

74:                                               ; preds = %62, %38
  %75 = phi i32 [ %41, %38 ], [ %73, %62 ]
  %76 = phi ptr [ %12, %38 ], [ %65, %62 ]
  %77 = zext i32 %75 to i64
  %78 = getelementptr inbounds %struct.VEC_dw_cfi_ref_base, ptr %76, i64 0, i32 2, i64 %77
  store ptr %16, ptr %78, align 8, !tbaa !6
  br label %161

79:                                               ; preds = %18, %18, %18
  br label %161

80:                                               ; preds = %18
  br label %161

81:                                               ; preds = %18, %18
  br label %161

82:                                               ; preds = %18
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3369, ptr noundef nonnull @.str.5) #31
  br label %83

83:                                               ; preds = %31, %21, %11, %82, %18
  %84 = icmp eq ptr %12, null
  br i1 %84, label %114, label %85

85:                                               ; preds = %83
  %86 = load i32, ptr %12, align 8, !tbaa !144
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %114, label %88

88:                                               ; preds = %85
  %89 = zext i32 %86 to i64
  br i1 %8, label %90, label %102

90:                                               ; preds = %88, %99
  %91 = phi i64 [ %100, %99 ], [ 0, %88 ]
  %92 = getelementptr inbounds %struct.VEC_dw_cfi_ref_base, ptr %12, i64 0, i32 2, i64 %91
  %93 = load ptr, ptr %92, align 8, !tbaa !6
  store ptr null, ptr %92, align 8, !tbaa !6
  %94 = icmp eq ptr %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.dw_cfi_struct, ptr %93, i64 0, i32 1
  %97 = load i32, ptr %96, align 8, !tbaa !48
  switch i32 %97, label %98 [
    i32 192, label %99
    i32 6, label %99
  ]

98:                                               ; preds = %95
  tail call fastcc void @output_cfi(ptr noundef nonnull %93, ptr noundef %2, i32 noundef %7)
  br label %99

99:                                               ; preds = %98, %95, %95, %90
  %100 = add nuw nsw i64 %91, 1
  %101 = icmp eq i64 %100, %89
  br i1 %101, label %114, label %90, !llvm.loop !147

102:                                              ; preds = %88, %111
  %103 = phi i64 [ %112, %111 ], [ 0, %88 ]
  %104 = getelementptr inbounds %struct.VEC_dw_cfi_ref_base, ptr %12, i64 0, i32 2, i64 %103
  %105 = load ptr, ptr %104, align 8, !tbaa !6
  store ptr null, ptr %104, align 8, !tbaa !6
  %106 = icmp eq ptr %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.dw_cfi_struct, ptr %105, i64 0, i32 1
  %109 = load i32, ptr %108, align 8, !tbaa !48
  switch i32 %109, label %110 [
    i32 192, label %111
    i32 6, label %111
  ]

110:                                              ; preds = %107
  tail call fastcc void @output_cfi_directive(ptr noundef nonnull %105)
  br label %111

111:                                              ; preds = %107, %107, %102, %110
  %112 = add nuw nsw i64 %103, 1
  %113 = icmp eq i64 %112, %89
  br i1 %113, label %114, label %102, !llvm.loop !147

114:                                              ; preds = %111, %99, %83, %85
  %115 = icmp eq ptr %14, null
  %116 = icmp eq ptr %15, null
  %117 = select i1 %115, i1 true, i1 %116
  %118 = icmp eq ptr %15, %14
  %119 = select i1 %117, i1 true, i1 %118
  br i1 %119, label %138, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %struct.dw_cfi_struct, ptr %14, i64 0, i32 1
  %122 = load i32, ptr %121, align 8, !tbaa !48
  %123 = icmp eq i32 %122, 15
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3387, ptr noundef nonnull @.str.5) #31
  br label %125

125:                                              ; preds = %120, %124
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(32) %14, i64 32, i1 false), !tbaa.struct !148
  %126 = getelementptr inbounds %struct.dw_cfi_struct, ptr %15, i64 0, i32 1
  %127 = load i32, ptr %126, align 8, !tbaa !48
  switch i32 %127, label %137 [
    i32 14, label %128
    i32 19, label %131
    i32 12, label %134
    i32 18, label %134
  ]

128:                                              ; preds = %125
  store i32 12, ptr %9, align 8, !tbaa !48
  %129 = getelementptr inbounds %struct.dw_cfi_struct, ptr %15, i64 0, i32 2
  %130 = load i64, ptr %129, align 8
  store i64 %130, ptr %10, align 8
  br label %141

131:                                              ; preds = %125
  store i32 18, ptr %9, align 8, !tbaa !48
  %132 = getelementptr inbounds %struct.dw_cfi_struct, ptr %15, i64 0, i32 2
  %133 = load i64, ptr %132, align 8
  store i64 %133, ptr %10, align 8
  br label %141

134:                                              ; preds = %125, %125
  store i32 %127, ptr %9, align 8, !tbaa !48
  %135 = getelementptr inbounds %struct.dw_cfi_struct, ptr %15, i64 0, i32 3
  %136 = load i64, ptr %135, align 8
  store i64 %136, ptr %10, align 8
  br label %141

137:                                              ; preds = %125
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3405, ptr noundef nonnull @.str.5) #31
  br label %141

138:                                              ; preds = %114
  %139 = select i1 %116, ptr %14, ptr %15
  %140 = icmp eq ptr %139, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %128, %131, %134, %137, %138
  %142 = phi ptr [ %139, %138 ], [ %5, %137 ], [ %5, %134 ], [ %5, %131 ], [ %5, %128 ]
  br i1 %8, label %144, label %143

143:                                              ; preds = %141
  call fastcc void @output_cfi_directive(ptr noundef nonnull %142)
  br label %145

144:                                              ; preds = %141
  call fastcc void @output_cfi(ptr noundef nonnull %142, ptr noundef %2, i32 noundef %7)
  br label %145

145:                                              ; preds = %143, %144, %138
  %146 = icmp eq ptr %13, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.dw_cfi_struct, ptr %13, i64 0, i32 2
  %149 = load i64, ptr %148, align 8, !tbaa !17
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %147
  br i1 %8, label %154, label %153

152:                                              ; preds = %147, %145
  br i1 %17, label %155, label %157

153:                                              ; preds = %151
  tail call fastcc void @output_cfi_directive(ptr noundef nonnull %13)
  br i1 %17, label %155, label %158

154:                                              ; preds = %151
  tail call fastcc void @output_cfi(ptr noundef nonnull %13, ptr noundef %2, i32 noundef %7)
  br i1 %17, label %155, label %159

155:                                              ; preds = %153, %154, %152
  br i1 %84, label %168, label %156

156:                                              ; preds = %155
  tail call void @free(ptr noundef nonnull %12)
  br label %168

157:                                              ; preds = %152
  br i1 %8, label %159, label %158

158:                                              ; preds = %153, %157
  tail call fastcc void @output_cfi_directive(ptr noundef nonnull %16)
  br label %161

159:                                              ; preds = %154, %157
  tail call fastcc void @output_cfi(ptr noundef nonnull %16, ptr noundef %2, i32 noundef %7)
  br label %161

160:                                              ; preds = %18
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 3440, ptr noundef nonnull @.str.5) #31
  br label %161

161:                                              ; preds = %24, %35, %74, %79, %80, %81, %160, %18, %18, %18, %18, %18, %18, %158, %159
  %162 = phi ptr [ %12, %160 ], [ %12, %159 ], [ %12, %158 ], [ %12, %81 ], [ %12, %80 ], [ %12, %79 ], [ %76, %74 ], [ %12, %35 ], [ %12, %18 ], [ %12, %18 ], [ %12, %18 ], [ %12, %18 ], [ %12, %18 ], [ %12, %18 ], [ %12, %24 ]
  %163 = phi ptr [ %13, %160 ], [ null, %159 ], [ null, %158 ], [ %13, %81 ], [ %13, %80 ], [ %13, %79 ], [ %13, %74 ], [ %16, %35 ], [ %13, %18 ], [ %13, %18 ], [ %13, %18 ], [ %13, %18 ], [ %13, %18 ], [ %13, %18 ], [ %26, %24 ]
  %164 = phi ptr [ %14, %160 ], [ null, %159 ], [ null, %158 ], [ %14, %81 ], [ %16, %80 ], [ %16, %79 ], [ %14, %74 ], [ %14, %35 ], [ %14, %18 ], [ %14, %18 ], [ %14, %18 ], [ %14, %18 ], [ %14, %18 ], [ %14, %18 ], [ %14, %24 ]
  %165 = phi ptr [ %15, %160 ], [ null, %159 ], [ null, %158 ], [ %16, %81 ], [ %15, %80 ], [ %16, %79 ], [ %15, %74 ], [ %15, %35 ], [ %15, %18 ], [ %15, %18 ], [ %15, %18 ], [ %15, %18 ], [ %15, %18 ], [ %15, %18 ], [ %15, %24 ]
  %166 = phi ptr [ %16, %160 ], [ %16, %159 ], [ %16, %158 ], [ %16, %81 ], [ %16, %80 ], [ %16, %79 ], [ %16, %74 ], [ %16, %35 ], [ %16, %18 ], [ %16, %18 ], [ %16, %18 ], [ %16, %18 ], [ %16, %18 ], [ %16, %18 ], [ %25, %24 ]
  %167 = load ptr, ptr %166, align 8, !tbaa !46
  br label %11

168:                                              ; preds = %156, %155
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_switch_text_section() #10 {
  %1 = load i32, ptr @fde_table_in_use, align 4
  %2 = icmp eq i32 %1, 0
  %3 = load ptr, ptr @fde_table, align 8
  %4 = add i32 %1, -1
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %struct.dw_fde_struct, ptr %3, i64 %5
  %7 = select i1 %2, ptr null, ptr %6
  %8 = load ptr, ptr @cfun, align 8, !tbaa !6
  %9 = icmp ne ptr %8, null
  %10 = icmp ne ptr %7, null
  %11 = select i1 %9, i1 %10, i1 false
  br i1 %11, label %12, label %17

12:                                               ; preds = %0
  %13 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 14
  %14 = load i16, ptr %13, align 8
  %15 = and i16 %14, 128
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %12, %0
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 4094, ptr noundef nonnull @.str.5) #31
  %18 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 14
  %19 = load i16, ptr %18, align 8
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi i16 [ %14, %12 ], [ %19, %17 ]
  %22 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 14
  %23 = load i8, ptr @in_cold_section_p, align 1, !tbaa !17
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i16 256, i16 0
  %26 = and i16 %21, -385
  %27 = or i16 %26, 128
  %28 = or i16 %25, %27
  store i16 %28, ptr %22, align 8
  %29 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 4
  %30 = load <4 x ptr>, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 4), align 8, !tbaa !6
  %31 = shufflevector <4 x ptr> %30, <4 x ptr> poison, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x ptr> %31, ptr %29, align 8, !tbaa !6
  store i8 1, ptr @have_multiple_function_sections, align 1, !tbaa !17
  %32 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 2
  store ptr null, ptr %32, align 8, !tbaa !54
  %33 = load ptr, ptr @cold_text_section, align 8, !tbaa !6
  %34 = icmp eq ptr %33, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %20
  %36 = tail call ptr @current_function_section() #31
  %37 = load ptr, ptr @text_section, align 8, !tbaa !6
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = load ptr, ptr @cold_text_section, align 8, !tbaa !6
  %41 = icmp eq ptr %36, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %39, %35
  %43 = phi ptr [ @text_section_used, %35 ], [ @cold_text_section_used, %39 ]
  store i8 1, ptr %43, align 1, !tbaa !17
  br label %44

44:                                               ; preds = %42, %39, %20
  %45 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %49 = tail call i64 @fwrite(ptr nonnull @.str.193, i64 14, i64 1, ptr %48)
  br label %50

50:                                               ; preds = %47, %44
  %51 = tail call ptr @current_function_section() #31
  tail call void @switch_to_section(ptr noundef %51) #31
  %52 = tail call i32 @dwarf2out_do_cfi_asm(), !range !37
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  tail call fastcc void @dwarf2out_do_cfi_startproc(i8 noundef zeroext 1)
  %55 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 8
  %56 = load ptr, ptr %55, align 8, !tbaa !134
  tail call fastcc void @output_cfis(ptr noundef %56, i8 noundef zeroext 1, ptr noundef nonnull %7, i8 noundef zeroext 1)
  br label %68

57:                                               ; preds = %50
  %58 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 8
  %59 = load ptr, ptr %58, align 8, !tbaa !134
  %60 = icmp eq ptr %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %57, %61
  %62 = phi ptr [ %63, %61 ], [ %59, %57 ]
  %63 = load ptr, ptr %62, align 8, !tbaa !46
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %61, !llvm.loop !149

65:                                               ; preds = %61, %57
  %66 = phi ptr [ null, %57 ], [ %62, %61 ]
  %67 = getelementptr inbounds %struct.dw_fde_struct, ptr %7, i64 0, i32 9
  store ptr %66, ptr %67, align 8, !tbaa !132
  br label %68

68:                                               ; preds = %65, %54
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_init(ptr nocapture readnone %0) #10 {
  %2 = tail call ptr @htab_create_alloc(i64 noundef 50, ptr noundef nonnull @file_table_hash, ptr noundef nonnull @file_table_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #31
  store ptr %2, ptr @file_table, align 8, !tbaa !6
  %3 = tail call ptr @htab_create_alloc(i64 noundef 10, ptr noundef nonnull @decl_die_table_hash, ptr noundef nonnull @decl_die_table_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #31
  store ptr %3, ptr @decl_die_table, align 8, !tbaa !6
  %4 = tail call ptr @htab_create_alloc(i64 noundef 10, ptr noundef nonnull @decl_loc_table_hash, ptr noundef nonnull @decl_loc_table_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #31
  store ptr %4, ptr @decl_loc_table, align 8, !tbaa !6
  %5 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 256) #31
  store ptr %5, ptr @decl_scope_table, align 8, !tbaa !6
  %6 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 2048) #31
  store ptr %6, ptr @abbrev_die_table, align 8, !tbaa !6
  store i32 256, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  store i32 1, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  %7 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 16384) #31
  store ptr %7, ptr @line_info_table, align 8, !tbaa !6
  store i32 1024, ptr @line_info_table_allocated, align 4, !tbaa !21
  store i32 1, ptr @line_info_table_in_use, align 4, !tbaa !21
  %8 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 32, i64 noundef 8, i64 noundef 16) #31
  store ptr %8, ptr @pubname_table, align 8, !tbaa !6
  %9 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 32, i64 noundef 8, i64 noundef 16) #31
  store ptr %9, ptr @pubtype_table, align 8, !tbaa !6
  %10 = tail call ptr @htab_create_alloc(i64 noundef 10, ptr noundef nonnull @vcall_insn_table_hash, ptr noundef nonnull @vcall_insn_table_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #31
  store ptr %10, ptr @vcall_insn_table, align 8, !tbaa !6
  %11 = tail call fastcc ptr @gen_compile_unit_die(ptr noundef null)
  store ptr %11, ptr @comp_unit_die, align 8, !tbaa !6
  %12 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 64) #31
  store ptr %12, ptr @incomplete_types, align 8, !tbaa !6
  %13 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 32) #31
  store ptr %13, ptr @used_rtx_array, align 8, !tbaa !6
  %14 = tail call ptr @get_section(ptr noundef nonnull @.str.256, i32 noundef 1024, ptr noundef null) #31
  store ptr %14, ptr @debug_info_section, align 8, !tbaa !6
  %15 = tail call ptr @get_section(ptr noundef nonnull @.str.257, i32 noundef 1024, ptr noundef null) #31
  store ptr %15, ptr @debug_abbrev_section, align 8, !tbaa !6
  %16 = tail call ptr @get_section(ptr noundef nonnull @.str.258, i32 noundef 1024, ptr noundef null) #31
  store ptr %16, ptr @debug_aranges_section, align 8, !tbaa !6
  %17 = tail call ptr @get_section(ptr noundef nonnull @.str.259, i32 noundef 1024, ptr noundef null) #31
  store ptr %17, ptr @debug_macinfo_section, align 8, !tbaa !6
  %18 = tail call ptr @get_section(ptr noundef nonnull @.str.260, i32 noundef 1024, ptr noundef null) #31
  store ptr %18, ptr @debug_line_section, align 8, !tbaa !6
  %19 = tail call ptr @get_section(ptr noundef nonnull @.str.261, i32 noundef 1024, ptr noundef null) #31
  store ptr %19, ptr @debug_loc_section, align 8, !tbaa !6
  %20 = tail call ptr @get_section(ptr noundef nonnull @.str.262, i32 noundef 1024, ptr noundef null) #31
  store ptr %20, ptr @debug_pubnames_section, align 8, !tbaa !6
  %21 = tail call ptr @get_section(ptr noundef nonnull @.str.263, i32 noundef 1024, ptr noundef null) #31
  store ptr %21, ptr @debug_pubtypes_section, align 8, !tbaa !6
  %22 = tail call ptr @get_section(ptr noundef nonnull @.str.264, i32 noundef 1024, ptr noundef null) #31
  store ptr %22, ptr @debug_dcall_section, align 8, !tbaa !6
  %23 = tail call ptr @get_section(ptr noundef nonnull @.str.265, i32 noundef 1024, ptr noundef null) #31
  store ptr %23, ptr @debug_vcall_section, align 8, !tbaa !6
  %24 = load i32, ptr @flag_merge_debug_strings, align 4, !tbaa !21
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i32 1024, i32 99329
  %27 = tail call ptr @get_section(ptr noundef nonnull @.str.266, i32 noundef %26, ptr noundef null) #31
  store ptr %27, ptr @debug_str_section, align 8, !tbaa !6
  %28 = tail call ptr @get_section(ptr noundef nonnull @.str.267, i32 noundef 1024, ptr noundef null) #31
  store ptr %28, ptr @debug_ranges_section, align 8, !tbaa !6
  %29 = tail call ptr @get_section(ptr noundef nonnull @.str.211, i32 noundef 1024, ptr noundef null) #31
  store ptr %29, ptr @debug_frame_section, align 8, !tbaa !6
  %30 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @text_end_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.268, i32 noundef 0)
  %31 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @abbrev_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.269, i32 noundef 0)
  %32 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @text_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.270, i32 noundef 0)
  %33 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @cold_text_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.271, i32 noundef 0)
  %34 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @cold_end_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.272, i32 noundef 0)
  %35 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @debug_info_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.273, i32 noundef 0)
  %36 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @debug_line_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.274, i32 noundef 0)
  %37 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @ranges_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.275, i32 noundef 0)
  %38 = load ptr, ptr @debug_abbrev_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %38) #31
  %39 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %39, ptr noundef nonnull @abbrev_section_label) #31
  %40 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %41 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %40)
  %42 = load ptr, ptr @debug_info_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %42) #31
  %43 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %43, ptr noundef nonnull @debug_info_section_label) #31
  %44 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %45 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %44)
  %46 = load ptr, ptr @debug_line_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %46) #31
  %47 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %47, ptr noundef nonnull @debug_line_section_label) #31
  %48 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %49 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %48)
  %50 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %51 = icmp ugt i32 %50, 2
  br i1 %51, label %52, label %58

52:                                               ; preds = %1
  %53 = load ptr, ptr @debug_macinfo_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %53) #31
  %54 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @macinfo_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.276, i32 noundef 0)
  %55 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %55, ptr noundef nonnull @macinfo_section_label) #31
  %56 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %57 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %56)
  br label %58

58:                                               ; preds = %52, %1
  %59 = load ptr, ptr @text_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %59) #31
  %60 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %60, ptr noundef nonnull @text_section_label) #31
  %61 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %62 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %61)
  %63 = load i32, ptr @flag_reorder_blocks_and_partition, align 4, !tbaa !21
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %58
  %66 = tail call ptr @unlikely_text_section() #31
  store ptr %66, ptr @cold_text_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %66) #31
  %67 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %67, ptr noundef nonnull @cold_text_section_label) #31
  %68 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %69 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %68)
  br label %70

70:                                               ; preds = %65, %58
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_finish(ptr noundef %0) #10 {
  %2 = alloca [30 x i8], align 16
  %3 = alloca [30 x i8], align 16
  %4 = alloca [30 x i8], align 16
  %5 = alloca [30 x i8], align 16
  %6 = alloca [20 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca %struct.cu_hash_table_entry, align 8
  %9 = alloca [28 x i8], align 4
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = load ptr, ptr @tmpl_value_parm_die_table, align 8
  %13 = icmp eq ptr %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %1, %20
  %15 = phi i64 [ %26, %20 ], [ 0, %1 ]
  %16 = phi ptr [ %27, %20 ], [ %12, %1 ]
  %17 = load i32, ptr %16, align 8, !tbaa !150
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %16, i64 0, i32 2, i64 %15
  %22 = load ptr, ptr %21, align 8, !tbaa !152
  %23 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %16, i64 0, i32 2, i64 %15, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !154
  %25 = tail call fastcc zeroext i8 @tree_add_const_value_attribute(ptr noundef %22, ptr noundef %24), !range !155
  %26 = add nuw nsw i64 %15, 1
  %27 = load ptr, ptr @tmpl_value_parm_die_table, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %14, !llvm.loop !156

29:                                               ; preds = %14, %20, %1
  %30 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %31 = tail call ptr @remap_debug_filename(ptr noundef %0) #31
  %32 = icmp eq ptr %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = load i8, ptr %31, align 1, !tbaa !17
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %38 = icmp eq ptr %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = tail call ptr %37(ptr noundef nonnull %31) #31
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi ptr [ %40, %39 ], [ %31, %36 ]
  tail call fastcc void @add_AT_string(ptr noundef %30, i32 noundef 3, ptr noundef %42)
  br label %43

43:                                               ; preds = %29, %33, %41
  %44 = load i8, ptr %0, align 1, !tbaa !17
  %45 = icmp eq i8 %44, 47
  %46 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br i1 %45, label %52, label %47

47:                                               ; preds = %43
  %48 = tail call ptr @get_src_pwd() #31
  %49 = icmp eq ptr %48, null
  br i1 %49, label %100, label %50

50:                                               ; preds = %47
  %51 = tail call ptr @remap_debug_filename(ptr noundef nonnull %48) #31
  tail call fastcc void @add_AT_string(ptr noundef %46, i32 noundef 27, ptr noundef %51)
  br label %100

52:                                               ; preds = %43, %86
  %53 = phi ptr [ %87, %86 ], [ %46, %43 ]
  %54 = icmp eq ptr %53, null
  br i1 %54, label %89, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.die_struct, ptr %53, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !157
  %58 = icmp eq ptr %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %55, %80
  %60 = phi ptr [ %81, %80 ], [ %57, %55 ]
  %61 = phi ptr [ %82, %80 ], [ %57, %55 ]
  %62 = phi i64 [ %84, %80 ], [ 0, %55 ]
  %63 = phi ptr [ %83, %80 ], [ null, %55 ]
  %64 = load i32, ptr %61, align 8, !tbaa !159
  %65 = zext i32 %64 to i64
  %66 = icmp ult i64 %62, %65
  br i1 %66, label %67, label %86

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %61, i64 0, i32 2, i64 %62
  %69 = load i32, ptr %68, align 8, !tbaa !161
  switch i32 %69, label %80 [
    i32 27, label %100
    i32 71, label %70
    i32 49, label %70
  ]

70:                                               ; preds = %67, %67
  %71 = getelementptr i8, ptr %68, i64 8
  %72 = load i32, ptr %71, align 8, !tbaa !163
  %73 = icmp eq i32 %72, 10
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %75 = load ptr, ptr %56, align 8, !tbaa !157
  br label %76

76:                                               ; preds = %74, %70
  %77 = phi ptr [ %60, %70 ], [ %75, %74 ]
  %78 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %61, i64 0, i32 2, i64 %62, i32 1, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  br label %80

80:                                               ; preds = %67, %76
  %81 = phi ptr [ %77, %76 ], [ %60, %67 ]
  %82 = phi ptr [ %77, %76 ], [ %61, %67 ]
  %83 = phi ptr [ %79, %76 ], [ %63, %67 ]
  %84 = add nuw nsw i64 %62, 1
  %85 = icmp eq ptr %82, null
  br i1 %85, label %86, label %59, !llvm.loop !164

86:                                               ; preds = %80, %59
  %87 = phi ptr [ %83, %80 ], [ %63, %59 ]
  %88 = icmp eq ptr %87, null
  br i1 %88, label %89, label %52

89:                                               ; preds = %52, %86, %55
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %10) #31
  store i8 0, ptr %10, align 1, !tbaa !17
  %90 = load ptr, ptr @file_table, align 8, !tbaa !6
  call void @htab_traverse(ptr noundef %90, ptr noundef nonnull @file_table_relative_p, ptr noundef nonnull %10) #31
  %91 = load i8, ptr %10, align 1, !tbaa !17
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %95 = call ptr @get_src_pwd() #31
  %96 = icmp eq ptr %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = call ptr @remap_debug_filename(ptr noundef nonnull %95) #31
  call fastcc void @add_AT_string(ptr noundef %94, i32 noundef 27, ptr noundef %98)
  br label %99

99:                                               ; preds = %97, %93, %89
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10) #31
  br label %100

100:                                              ; preds = %67, %50, %47, %99
  br label %101

101:                                              ; preds = %100, %111
  %102 = phi i64 [ %116, %111 ], [ 0, %100 ]
  %103 = load ptr, ptr @deferred_locations_list, align 8
  %104 = icmp eq ptr %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = load i32, ptr %103, align 8, !tbaa !165
  br label %107

107:                                              ; preds = %101, %105
  %108 = phi i32 [ %106, %105 ], [ 0, %101 ]
  %109 = zext i32 %108 to i64
  %110 = icmp ult i64 %102, %109
  br i1 %110, label %111, label %117

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %103, i64 0, i32 2, i64 %102
  %113 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %103, i64 0, i32 2, i64 %102, i32 1
  %114 = load ptr, ptr %113, align 8, !tbaa !167
  %115 = load ptr, ptr %112, align 8, !tbaa !169
  call fastcc void @add_location_or_const_value_attribute(ptr noundef %114, ptr noundef %115)
  %116 = add nuw nsw i64 %102, 1
  br label %101, !llvm.loop !170

117:                                              ; preds = %107
  %118 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %119 = icmp eq ptr %118, null
  br i1 %119, label %287, label %120

120:                                              ; preds = %117, %285
  %121 = phi ptr [ %123, %285 ], [ %118, %117 ]
  %122 = getelementptr inbounds %struct.limbo_die_struct, ptr %121, i64 0, i32 2
  %123 = load ptr, ptr %122, align 8, !tbaa !171
  %124 = load ptr, ptr %121, align 8, !tbaa !173
  %125 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !174
  %127 = icmp eq ptr %126, null
  br i1 %127, label %128, label %285

128:                                              ; preds = %120, %160
  %129 = phi ptr [ %161, %160 ], [ %124, %120 ]
  %130 = getelementptr inbounds %struct.die_struct, ptr %129, i64 0, i32 2
  %131 = load ptr, ptr %130, align 8, !tbaa !157
  %132 = icmp eq ptr %131, null
  br i1 %132, label %191, label %133

133:                                              ; preds = %128, %154
  %134 = phi ptr [ %155, %154 ], [ %131, %128 ]
  %135 = phi ptr [ %156, %154 ], [ %131, %128 ]
  %136 = phi i64 [ %158, %154 ], [ 0, %128 ]
  %137 = phi ptr [ %157, %154 ], [ null, %128 ]
  %138 = load i32, ptr %135, align 8, !tbaa !159
  %139 = zext i32 %138 to i64
  %140 = icmp ult i64 %136, %139
  br i1 %140, label %141, label %160

141:                                              ; preds = %133
  %142 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %135, i64 0, i32 2, i64 %136
  %143 = load i32, ptr %142, align 8, !tbaa !161
  switch i32 %143, label %154 [
    i32 49, label %163
    i32 71, label %144
  ]

144:                                              ; preds = %141
  %145 = getelementptr i8, ptr %142, i64 8
  %146 = load i32, ptr %145, align 8, !tbaa !163
  %147 = icmp eq i32 %146, 10
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %149 = load ptr, ptr %130, align 8, !tbaa !157
  br label %150

150:                                              ; preds = %148, %144
  %151 = phi ptr [ %134, %144 ], [ %149, %148 ]
  %152 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %135, i64 0, i32 2, i64 %136, i32 1, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !17
  br label %154

154:                                              ; preds = %141, %150
  %155 = phi ptr [ %151, %150 ], [ %134, %141 ]
  %156 = phi ptr [ %151, %150 ], [ %135, %141 ]
  %157 = phi ptr [ %153, %150 ], [ %137, %141 ]
  %158 = add nuw nsw i64 %136, 1
  %159 = icmp eq ptr %156, null
  br i1 %159, label %160, label %133, !llvm.loop !164

160:                                              ; preds = %154, %133
  %161 = phi ptr [ %157, %154 ], [ %137, %133 ]
  %162 = icmp eq ptr %161, null
  br i1 %162, label %191, label %128

163:                                              ; preds = %141
  %164 = getelementptr i8, ptr %142, i64 8
  %165 = load i32, ptr %164, align 8, !tbaa !163
  %166 = icmp eq i32 %165, 10
  br i1 %166, label %168, label %167

167:                                              ; preds = %163
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %168

168:                                              ; preds = %163, %167
  %169 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %135, i64 0, i32 2, i64 %136, i32 1, i32 1
  %170 = load ptr, ptr %169, align 8, !tbaa !17
  %171 = icmp eq ptr %170, null
  br i1 %171, label %191, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.die_struct, ptr %170, i64 0, i32 3
  %174 = load ptr, ptr %173, align 8, !tbaa !174
  %175 = icmp ne ptr %174, null
  %176 = icmp ne ptr %124, null
  %177 = and i1 %176, %175
  br i1 %177, label %178, label %285

178:                                              ; preds = %172
  %179 = icmp eq ptr %174, %124
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %181

181:                                              ; preds = %180, %178
  store ptr %174, ptr %125, align 8, !tbaa !174
  %182 = getelementptr inbounds %struct.die_struct, ptr %174, i64 0, i32 4
  %183 = load ptr, ptr %182, align 8, !tbaa !175
  %184 = icmp eq ptr %183, null
  br i1 %184, label %189, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.die_struct, ptr %183, i64 0, i32 5
  %187 = load ptr, ptr %186, align 8, !tbaa !176
  %188 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  store ptr %187, ptr %188, align 8, !tbaa !176
  br label %282

189:                                              ; preds = %181
  %190 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  br label %282

191:                                              ; preds = %128, %160, %168
  %192 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %193 = icmp eq ptr %124, %192
  br i1 %193, label %285, label %194

194:                                              ; preds = %191
  %195 = load ptr, ptr @global_dc, align 8, !tbaa !6
  %196 = getelementptr inbounds %struct.diagnostic_context, ptr %195, i64 0, i32 1, i64 4
  %197 = load i32, ptr %196, align 8, !tbaa !21
  %198 = icmp sgt i32 %197, 0
  br i1 %198, label %203, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %struct.diagnostic_context, ptr %195, i64 0, i32 1, i64 5
  %201 = load i32, ptr %200, align 4, !tbaa !21
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %217

203:                                              ; preds = %199, %194
  %204 = icmp ne ptr %192, null
  %205 = icmp ne ptr %124, null
  %206 = and i1 %205, %204
  br i1 %206, label %207, label %285

207:                                              ; preds = %203
  store ptr %192, ptr %125, align 8, !tbaa !174
  %208 = getelementptr inbounds %struct.die_struct, ptr %192, i64 0, i32 4
  %209 = load ptr, ptr %208, align 8, !tbaa !175
  %210 = icmp eq ptr %209, null
  br i1 %210, label %215, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %struct.die_struct, ptr %209, i64 0, i32 5
  %213 = load ptr, ptr %212, align 8, !tbaa !176
  %214 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  store ptr %213, ptr %214, align 8, !tbaa !176
  br label %282

215:                                              ; preds = %207
  %216 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  br label %282

217:                                              ; preds = %199
  %218 = getelementptr inbounds %struct.limbo_die_struct, ptr %121, i64 0, i32 1
  %219 = load ptr, ptr %218, align 8, !tbaa !177
  %220 = icmp eq ptr %219, null
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 21350, ptr noundef nonnull @.str.5) #31
  %222 = load ptr, ptr %218, align 8, !tbaa !177
  br label %223

223:                                              ; preds = %217, %221
  %224 = phi ptr [ %219, %217 ], [ %222, %221 ]
  %225 = load i64, ptr %224, align 8
  %226 = and i64 %225, 65535
  %227 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %226
  %228 = load i32, ptr %227, align 4, !tbaa !17
  switch i32 %228, label %240 [
    i32 3, label %229
    i32 2, label %231
  ]

229:                                              ; preds = %223
  %230 = getelementptr inbounds %struct.tree_decl_minimal, ptr %224, i64 0, i32 4
  br label %233

231:                                              ; preds = %223
  %232 = getelementptr inbounds %struct.tree_type, ptr %224, i64 0, i32 18
  br label %233

233:                                              ; preds = %231, %229
  %234 = phi ptr [ %230, %229 ], [ %232, %231 ]
  %235 = load ptr, ptr %234, align 8, !tbaa !17
  %236 = icmp eq ptr %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %233
  %238 = load i64, ptr %235, align 8
  %239 = trunc i64 %238 to i16
  switch i16 %239, label %240 [
    i16 29, label %242
    i16 38, label %242
  ]

240:                                              ; preds = %223, %237, %233
  %241 = phi ptr [ %235, %237 ], [ null, %233 ], [ null, %223 ]
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 21359, ptr noundef nonnull @.str.5) #31
  br label %242

242:                                              ; preds = %237, %237, %240
  %243 = phi ptr [ %235, %237 ], [ %235, %237 ], [ %241, %240 ]
  %244 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %245 = getelementptr inbounds %struct.tree_decl_minimal, ptr %243, i64 0, i32 2
  %246 = load i32, ptr %245, align 4, !tbaa !17
  %247 = call ptr @htab_find_with_hash(ptr noundef %244, ptr noundef %243, i32 noundef %246) #31
  %248 = icmp eq ptr %247, null
  br i1 %248, label %264, label %249

249:                                              ; preds = %242
  %250 = icmp eq ptr %124, null
  br i1 %250, label %285, label %251

251:                                              ; preds = %249
  %252 = icmp eq ptr %247, %124
  br i1 %252, label %253, label %254

253:                                              ; preds = %251
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %254

254:                                              ; preds = %253, %251
  store ptr %247, ptr %125, align 8, !tbaa !174
  %255 = getelementptr inbounds %struct.die_struct, ptr %247, i64 0, i32 4
  %256 = load ptr, ptr %255, align 8, !tbaa !175
  %257 = icmp eq ptr %256, null
  br i1 %257, label %262, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 5
  %260 = load ptr, ptr %259, align 8, !tbaa !176
  %261 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  store ptr %260, ptr %261, align 8, !tbaa !176
  br label %282

262:                                              ; preds = %254
  %263 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  br label %282

264:                                              ; preds = %242
  %265 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %266 = icmp ne ptr %265, null
  %267 = icmp ne ptr %124, null
  %268 = and i1 %267, %266
  br i1 %268, label %269, label %285

269:                                              ; preds = %264
  %270 = icmp eq ptr %265, %124
  br i1 %270, label %271, label %272

271:                                              ; preds = %269
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %272

272:                                              ; preds = %271, %269
  store ptr %265, ptr %125, align 8, !tbaa !174
  %273 = getelementptr inbounds %struct.die_struct, ptr %265, i64 0, i32 4
  %274 = load ptr, ptr %273, align 8, !tbaa !175
  %275 = icmp eq ptr %274, null
  br i1 %275, label %280, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %struct.die_struct, ptr %274, i64 0, i32 5
  %278 = load ptr, ptr %277, align 8, !tbaa !176
  %279 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  store ptr %278, ptr %279, align 8, !tbaa !176
  br label %282

280:                                              ; preds = %272
  %281 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 5
  br label %282

282:                                              ; preds = %276, %280, %258, %262, %211, %215, %185, %189
  %283 = phi ptr [ %190, %189 ], [ %186, %185 ], [ %216, %215 ], [ %212, %211 ], [ %263, %262 ], [ %259, %258 ], [ %281, %280 ], [ %277, %276 ]
  %284 = phi ptr [ %182, %189 ], [ %182, %185 ], [ %208, %215 ], [ %208, %211 ], [ %255, %262 ], [ %255, %258 ], [ %273, %280 ], [ %273, %276 ]
  store ptr %124, ptr %283, align 8, !tbaa !176
  store ptr %124, ptr %284, align 8, !tbaa !175
  br label %285

285:                                              ; preds = %282, %264, %249, %203, %172, %191, %120
  %286 = icmp eq ptr %123, null
  br i1 %286, label %287, label %120, !llvm.loop !178

287:                                              ; preds = %285, %117
  %288 = phi ptr [ null, %117 ], [ %124, %285 ]
  store ptr null, ptr @limbo_die_list, align 8, !tbaa !6
  %289 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  call fastcc void @resolve_addr(ptr noundef %289)
  %290 = load ptr, ptr @deferred_asm_name, align 8, !tbaa !6
  %291 = icmp eq ptr %290, null
  br i1 %291, label %353, label %292

292:                                              ; preds = %287, %349
  %293 = phi ptr [ %351, %349 ], [ %290, %287 ]
  %294 = getelementptr inbounds %struct.limbo_die_struct, ptr %293, i64 0, i32 1
  %295 = load ptr, ptr %294, align 8, !tbaa !177
  %296 = call ptr @decl_assembler_name(ptr noundef %295) #31
  %297 = getelementptr inbounds %struct.tree_decl_minimal, ptr %295, i64 0, i32 3
  %298 = load ptr, ptr %297, align 8, !tbaa !17
  %299 = icmp eq ptr %296, %298
  br i1 %299, label %349, label %300

300:                                              ; preds = %292
  %301 = load ptr, ptr %293, align 8, !tbaa !173
  %302 = call ptr @decl_assembler_name(ptr noundef nonnull %295) #31
  %303 = getelementptr inbounds %struct.tree_identifier, ptr %302, i64 0, i32 1
  %304 = load ptr, ptr %303, align 8, !tbaa !17
  call fastcc void @add_AT_string(ptr noundef %301, i32 noundef 8199, ptr noundef %304)
  %305 = load ptr, ptr %293, align 8, !tbaa !173
  %306 = getelementptr inbounds %struct.die_struct, ptr %305, i64 0, i32 2
  %307 = load ptr, ptr %306, align 8, !tbaa !157
  %308 = icmp eq ptr %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %300
  %310 = load i32, ptr %307, align 8, !tbaa !159
  br label %311

311:                                              ; preds = %309, %300
  %312 = phi i32 [ %310, %309 ], [ 0, %300 ]
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %9)
  %313 = add i32 %312, -1
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %307, i64 0, i32 2, i64 %314
  %316 = load i32, ptr %315, align 8, !tbaa.struct !179
  %317 = getelementptr inbounds i8, ptr %315, i64 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(28) %9, ptr noundef nonnull align 4 dereferenceable(28) %317, i64 28, i1 false), !tbaa.struct !180
  %318 = icmp eq i32 %316, 8199
  br i1 %318, label %321, label %319

319:                                              ; preds = %311
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 21145, ptr noundef nonnull @.str.5) #31
  %320 = load ptr, ptr %306, align 8, !tbaa !157
  br label %321

321:                                              ; preds = %319, %311
  %322 = phi ptr [ %307, %311 ], [ %320, %319 ]
  br label %323

323:                                              ; preds = %327, %321
  %324 = phi i32 [ %312, %321 ], [ %325, %327 ]
  %325 = add i32 %324, -1
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %332, label %327

327:                                              ; preds = %323
  %328 = add i32 %324, -2
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %322, i64 0, i32 2, i64 %329
  %331 = load i32, ptr %330, align 8, !tbaa !161
  switch i32 %331, label %323 [
    i32 59, label %334
    i32 3, label %334
  ]

332:                                              ; preds = %323
  %333 = icmp eq ptr %322, null
  br i1 %333, label %337, label %334

334:                                              ; preds = %327, %327, %332
  %335 = load i32, ptr %322, align 8, !tbaa !159
  %336 = icmp eq i32 %324, %335
  br i1 %336, label %348, label %337

337:                                              ; preds = %332, %334
  %338 = phi i32 [ %335, %334 ], [ undef, %332 ]
  %339 = phi i32 [ %324, %334 ], [ 1, %332 ]
  %340 = phi i32 [ %325, %334 ], [ 0, %332 ]
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %322, i64 0, i32 2, i64 %341
  %343 = getelementptr inbounds %struct.dw_attr_struct, ptr %342, i64 1
  %344 = sub i32 %338, %339
  %345 = zext i32 %344 to i64
  %346 = shl nuw nsw i64 %345, 5
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %343, ptr nonnull align 8 %342, i64 %346, i1 false)
  store i32 %316, ptr %342, align 8, !tbaa.struct !179
  %347 = getelementptr inbounds i8, ptr %342, i64 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(28) %347, ptr noundef nonnull align 4 dereferenceable(28) %9, i64 28, i1 false), !tbaa.struct !180
  br label %348

348:                                              ; preds = %334, %337
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %9)
  br label %349

349:                                              ; preds = %348, %292
  %350 = getelementptr inbounds %struct.limbo_die_struct, ptr %293, i64 0, i32 2
  %351 = load ptr, ptr %350, align 8, !tbaa !6
  %352 = icmp eq ptr %351, null
  br i1 %352, label %353, label %292, !llvm.loop !181

353:                                              ; preds = %349, %287
  store ptr null, ptr @deferred_asm_name, align 8, !tbaa !6
  %354 = load ptr, ptr @incomplete_types, align 8
  %355 = icmp eq ptr %354, null
  br i1 %355, label %377, label %356

356:                                              ; preds = %353
  %357 = load i32, ptr %354, align 8, !tbaa !182
  %358 = add i32 %357, -1
  %359 = icmp sgt i32 %358, -1
  br i1 %359, label %360, label %377

360:                                              ; preds = %356
  %361 = zext i32 %358 to i64
  br label %362

362:                                              ; preds = %360, %374
  %363 = phi i64 [ %361, %360 ], [ %375, %374 ]
  %364 = load ptr, ptr @incomplete_types, align 8
  %365 = getelementptr inbounds %struct.VEC_tree_base, ptr %364, i64 0, i32 2, i64 %363
  %366 = load ptr, ptr %365, align 8, !tbaa !6
  %367 = call zeroext i8 @should_emit_struct_debug(ptr noundef %366, i32 noundef 1) #31
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %374, label %369

369:                                              ; preds = %362
  %370 = load ptr, ptr @incomplete_types, align 8
  %371 = getelementptr inbounds %struct.VEC_tree_base, ptr %370, i64 0, i32 2, i64 %363
  %372 = load ptr, ptr %371, align 8, !tbaa !6
  %373 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  call fastcc void @gen_type_die_with_usage(ptr noundef %372, ptr noundef %373, i32 noundef 1)
  br label %374

374:                                              ; preds = %369, %362
  %375 = add nsw i64 %363, -1
  %376 = icmp sgt i64 %363, 0
  br i1 %376, label %362, label %377, !llvm.loop !184

377:                                              ; preds = %374, %353, %356
  %378 = load i32, ptr @flag_eliminate_unused_debug_types, align 4, !tbaa !21
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %381, label %380

380:                                              ; preds = %377
  call fastcc void @prune_unused_types()
  br label %381

381:                                              ; preds = %380, %377
  %382 = load i32, ptr @flag_eliminate_dwarf2_dups, align 4, !tbaa !21
  %383 = icmp ne i32 %382, 0
  %384 = load i32, ptr @dwarf_version, align 4
  %385 = icmp slt i32 %384, 4
  %386 = select i1 %383, i1 %385, i1 false
  br i1 %386, label %387, label %618

387:                                              ; preds = %381
  %388 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %389 = getelementptr inbounds %struct.die_struct, ptr %388, i64 0, i32 4
  %390 = load ptr, ptr %389, align 8, !tbaa !175
  %391 = icmp eq ptr %390, null
  br i1 %391, label %561, label %392

392:                                              ; preds = %387, %556
  %393 = phi ptr [ %557, %556 ], [ null, %387 ]
  %394 = phi ptr [ %558, %556 ], [ %390, %387 ]
  %395 = getelementptr inbounds %struct.die_struct, ptr %394, i64 0, i32 5
  %396 = load ptr, ptr %395, align 8, !tbaa !176
  %397 = getelementptr inbounds %struct.die_struct, ptr %394, i64 0, i32 3
  br label %398

398:                                              ; preds = %552, %392
  %399 = phi ptr [ %393, %392 ], [ %553, %552 ]
  %400 = phi ptr [ %396, %392 ], [ %458, %552 ]
  %401 = load i32, ptr %400, align 8, !tbaa !185
  %402 = and i32 %401, -2
  %403 = icmp eq i32 %402, 16644
  br i1 %403, label %456, label %404

404:                                              ; preds = %398
  %405 = icmp eq ptr %399, null
  br i1 %405, label %556, label %408

406:                                              ; preds = %452
  %407 = load i32, ptr %454, align 8, !tbaa !185
  br label %408

408:                                              ; preds = %404, %406
  %409 = phi i32 [ %407, %406 ], [ %401, %404 ]
  %410 = phi ptr [ %454, %406 ], [ %400, %404 ]
  switch i32 %409, label %556 [
    i32 41, label %456
    i32 15, label %411
    i32 16, label %411
    i32 38, label %411
    i32 53, label %411
    i32 1, label %456
    i32 2, label %456
    i32 56, label %456
    i32 4, label %456
    i32 22, label %456
    i32 45, label %456
    i32 18, label %456
    i32 19, label %456
    i32 21, label %456
    i32 23, label %456
    i32 31, label %456
    i32 32, label %456
    i32 33, label %456
  ]

411:                                              ; preds = %408, %408, %408, %408
  br label %412

412:                                              ; preds = %411, %444
  %413 = phi ptr [ %445, %444 ], [ %410, %411 ]
  %414 = getelementptr inbounds %struct.die_struct, ptr %413, i64 0, i32 2
  %415 = load ptr, ptr %414, align 8, !tbaa !157
  %416 = icmp eq ptr %415, null
  br i1 %416, label %556, label %417

417:                                              ; preds = %412, %438
  %418 = phi ptr [ %439, %438 ], [ %415, %412 ]
  %419 = phi ptr [ %440, %438 ], [ %415, %412 ]
  %420 = phi i64 [ %442, %438 ], [ 0, %412 ]
  %421 = phi ptr [ %441, %438 ], [ null, %412 ]
  %422 = load i32, ptr %419, align 8, !tbaa !159
  %423 = zext i32 %422 to i64
  %424 = icmp ult i64 %420, %423
  br i1 %424, label %425, label %444

425:                                              ; preds = %417
  %426 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %419, i64 0, i32 2, i64 %420
  %427 = load i32, ptr %426, align 8, !tbaa !161
  switch i32 %427, label %438 [
    i32 73, label %447
    i32 71, label %428
    i32 49, label %428
  ]

428:                                              ; preds = %425, %425
  %429 = getelementptr i8, ptr %426, i64 8
  %430 = load i32, ptr %429, align 8, !tbaa !163
  %431 = icmp eq i32 %430, 10
  br i1 %431, label %434, label %432

432:                                              ; preds = %428
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %433 = load ptr, ptr %414, align 8, !tbaa !157
  br label %434

434:                                              ; preds = %432, %428
  %435 = phi ptr [ %418, %428 ], [ %433, %432 ]
  %436 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %419, i64 0, i32 2, i64 %420, i32 1, i32 1
  %437 = load ptr, ptr %436, align 8, !tbaa !17
  br label %438

438:                                              ; preds = %434, %425
  %439 = phi ptr [ %435, %434 ], [ %418, %425 ]
  %440 = phi ptr [ %435, %434 ], [ %419, %425 ]
  %441 = phi ptr [ %437, %434 ], [ %421, %425 ]
  %442 = add nuw nsw i64 %420, 1
  %443 = icmp eq ptr %440, null
  br i1 %443, label %444, label %417, !llvm.loop !164

444:                                              ; preds = %438, %417
  %445 = phi ptr [ %441, %438 ], [ %421, %417 ]
  %446 = icmp eq ptr %445, null
  br i1 %446, label %556, label %412

447:                                              ; preds = %425
  %448 = getelementptr i8, ptr %426, i64 8
  %449 = load i32, ptr %448, align 8, !tbaa !163
  %450 = icmp eq i32 %449, 10
  br i1 %450, label %452, label %451

451:                                              ; preds = %447
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %452

452:                                              ; preds = %451, %447
  %453 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %419, i64 0, i32 2, i64 %420, i32 1, i32 1
  %454 = load ptr, ptr %453, align 8, !tbaa !17
  %455 = icmp eq ptr %454, null
  br i1 %455, label %556, label %406

456:                                              ; preds = %408, %408, %408, %408, %408, %408, %408, %408, %408, %408, %408, %408, %408, %408, %398
  %457 = getelementptr inbounds %struct.die_struct, ptr %400, i64 0, i32 5
  %458 = load ptr, ptr %457, align 8, !tbaa !176
  %459 = getelementptr inbounds %struct.die_struct, ptr %400, i64 0, i32 3
  %460 = load ptr, ptr %459, align 8, !tbaa !174
  %461 = load ptr, ptr %397, align 8, !tbaa !174
  %462 = icmp eq ptr %460, %461
  br i1 %462, label %464, label %463

463:                                              ; preds = %456
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7515, ptr noundef nonnull @.str.5) #31
  br label %464

464:                                              ; preds = %463, %456
  %465 = load ptr, ptr %395, align 8, !tbaa !176
  %466 = icmp eq ptr %465, %400
  br i1 %466, label %468, label %467

467:                                              ; preds = %464
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7516, ptr noundef nonnull @.str.5) #31
  br label %468

468:                                              ; preds = %467, %464
  %469 = icmp eq ptr %394, %400
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  %471 = load ptr, ptr %459, align 8, !tbaa !174
  %472 = getelementptr inbounds %struct.die_struct, ptr %471, i64 0, i32 4
  %473 = load ptr, ptr %472, align 8, !tbaa !175
  %474 = icmp eq ptr %473, %394
  br i1 %474, label %478, label %475

475:                                              ; preds = %470
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7519, ptr noundef nonnull @.str.5) #31
  br label %478

476:                                              ; preds = %468
  %477 = load ptr, ptr %457, align 8, !tbaa !176
  store ptr %477, ptr %395, align 8, !tbaa !176
  br label %478

478:                                              ; preds = %476, %475, %470
  %479 = phi ptr [ %394, %476 ], [ null, %470 ], [ null, %475 ]
  %480 = load ptr, ptr %459, align 8, !tbaa !174
  %481 = getelementptr inbounds %struct.die_struct, ptr %480, i64 0, i32 4
  %482 = load ptr, ptr %481, align 8, !tbaa !175
  %483 = icmp eq ptr %482, %400
  br i1 %483, label %484, label %485

484:                                              ; preds = %478
  store ptr %479, ptr %481, align 8, !tbaa !175
  br label %485

485:                                              ; preds = %484, %478
  %486 = load i32, ptr %400, align 8, !tbaa !185
  switch i32 %486, label %538 [
    i32 16644, label %487
    i32 16645, label %535
  ]

487:                                              ; preds = %485, %519
  %488 = phi ptr [ %520, %519 ], [ %400, %485 ]
  %489 = getelementptr inbounds %struct.die_struct, ptr %488, i64 0, i32 2
  %490 = load ptr, ptr %489, align 8, !tbaa !157
  %491 = icmp eq ptr %490, null
  br i1 %491, label %531, label %492

492:                                              ; preds = %487, %513
  %493 = phi ptr [ %514, %513 ], [ %490, %487 ]
  %494 = phi ptr [ %515, %513 ], [ %490, %487 ]
  %495 = phi i64 [ %517, %513 ], [ 0, %487 ]
  %496 = phi ptr [ %516, %513 ], [ null, %487 ]
  %497 = load i32, ptr %494, align 8, !tbaa !159
  %498 = zext i32 %497 to i64
  %499 = icmp ult i64 %495, %498
  br i1 %499, label %500, label %519

500:                                              ; preds = %492
  %501 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %494, i64 0, i32 2, i64 %495
  %502 = load i32, ptr %501, align 8, !tbaa !161
  switch i32 %502, label %513 [
    i32 3, label %522
    i32 71, label %503
    i32 49, label %503
  ]

503:                                              ; preds = %500, %500
  %504 = getelementptr i8, ptr %501, i64 8
  %505 = load i32, ptr %504, align 8, !tbaa !163
  %506 = icmp eq i32 %505, 10
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %508 = load ptr, ptr %489, align 8, !tbaa !157
  br label %509

509:                                              ; preds = %507, %503
  %510 = phi ptr [ %493, %503 ], [ %508, %507 ]
  %511 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %494, i64 0, i32 2, i64 %495, i32 1, i32 1
  %512 = load ptr, ptr %511, align 8, !tbaa !17
  br label %513

513:                                              ; preds = %509, %500
  %514 = phi ptr [ %510, %509 ], [ %493, %500 ]
  %515 = phi ptr [ %510, %509 ], [ %494, %500 ]
  %516 = phi ptr [ %512, %509 ], [ %496, %500 ]
  %517 = add nuw nsw i64 %495, 1
  %518 = icmp eq ptr %515, null
  br i1 %518, label %519, label %492, !llvm.loop !164

519:                                              ; preds = %513, %492
  %520 = phi ptr [ %516, %513 ], [ %496, %492 ]
  %521 = icmp eq ptr %520, null
  br i1 %521, label %531, label %487

522:                                              ; preds = %500
  %523 = getelementptr i8, ptr %501, i64 8
  %524 = load i32, ptr %523, align 8, !tbaa !163
  %525 = icmp eq i32 %524, 14
  br i1 %525, label %527, label %526

526:                                              ; preds = %522
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  br label %527

527:                                              ; preds = %526, %522
  %528 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %494, i64 0, i32 2, i64 %495, i32 1, i32 1
  %529 = load ptr, ptr %528, align 8, !tbaa !17
  %530 = load ptr, ptr %529, align 8, !tbaa !186
  br label %531

531:                                              ; preds = %519, %487, %527
  %532 = phi ptr [ %530, %527 ], [ null, %487 ], [ null, %519 ]
  %533 = call fastcc ptr @gen_compile_unit_die(ptr noundef %532)
  %534 = getelementptr inbounds %struct.die_struct, ptr %533, i64 0, i32 5
  store ptr %399, ptr %534, align 8, !tbaa !176
  br label %552

535:                                              ; preds = %485
  %536 = getelementptr inbounds %struct.die_struct, ptr %399, i64 0, i32 5
  %537 = load ptr, ptr %536, align 8, !tbaa !176
  store ptr null, ptr %536, align 8, !tbaa !176
  br label %552

538:                                              ; preds = %485
  %539 = icmp eq ptr %399, null
  br i1 %539, label %552, label %540

540:                                              ; preds = %538
  %541 = icmp eq ptr %399, %400
  br i1 %541, label %542, label %543

542:                                              ; preds = %540
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %543

543:                                              ; preds = %542, %540
  store ptr %399, ptr %459, align 8, !tbaa !174
  %544 = getelementptr inbounds %struct.die_struct, ptr %399, i64 0, i32 4
  %545 = load ptr, ptr %544, align 8, !tbaa !175
  %546 = icmp eq ptr %545, null
  br i1 %546, label %550, label %547

547:                                              ; preds = %543
  %548 = getelementptr inbounds %struct.die_struct, ptr %545, i64 0, i32 5
  %549 = load ptr, ptr %548, align 8, !tbaa !176
  store ptr %549, ptr %457, align 8, !tbaa !176
  br label %550

550:                                              ; preds = %547, %543
  %551 = phi ptr [ %548, %547 ], [ %457, %543 ]
  store ptr %400, ptr %551, align 8, !tbaa !176
  store ptr %400, ptr %544, align 8, !tbaa !175
  br label %552

552:                                              ; preds = %550, %538, %535, %531
  %553 = phi ptr [ %533, %531 ], [ %537, %535 ], [ null, %538 ], [ %399, %550 ]
  %554 = load ptr, ptr %389, align 8, !tbaa !175
  %555 = icmp eq ptr %458, %554
  br i1 %555, label %556, label %398

556:                                              ; preds = %552, %404, %452, %408, %444, %412
  %557 = phi ptr [ %399, %412 ], [ %399, %444 ], [ %399, %408 ], [ %399, %452 ], [ %553, %552 ], [ null, %404 ]
  %558 = phi ptr [ %400, %412 ], [ %400, %444 ], [ %400, %408 ], [ %400, %452 ], [ %458, %552 ], [ %400, %404 ]
  %559 = load ptr, ptr %389, align 8, !tbaa !175
  %560 = icmp eq ptr %558, %559
  br i1 %560, label %561, label %392, !llvm.loop !188

561:                                              ; preds = %556, %387
  call fastcc void @assign_symbol_names(ptr noundef nonnull %388)
  %562 = call ptr @htab_create(i64 noundef 10, ptr noundef nonnull @htab_cu_hash, ptr noundef nonnull @htab_cu_eq, ptr noundef nonnull @htab_cu_del) #31
  %563 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %564 = icmp eq ptr %563, null
  br i1 %564, label %616, label %565

565:                                              ; preds = %561
  %566 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %8, i64 0, i32 2
  br label %567

567:                                              ; preds = %611, %565
  %568 = phi ptr [ %563, %565 ], [ %614, %611 ]
  %569 = phi ptr [ @limbo_die_list, %565 ], [ %612, %611 ]
  %570 = load ptr, ptr %568, align 8, !tbaa !173
  call fastcc void @compute_section_prefix(ptr noundef %570)
  %571 = load ptr, ptr %568, align 8, !tbaa !173
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #31
  store i32 0, ptr %566, align 4, !tbaa !189
  %572 = getelementptr inbounds %struct.die_struct, ptr %571, i64 0, i32 1
  %573 = load ptr, ptr %572, align 8, !tbaa !17
  %574 = call i32 @htab_hash_string(ptr noundef %573) #31
  %575 = call ptr @htab_find_slot_with_hash(ptr noundef %562, ptr noundef %571, i32 noundef %574, i32 noundef 1) #31
  %576 = load ptr, ptr %575, align 8, !tbaa !6
  %577 = icmp eq ptr %576, null
  br i1 %577, label %593, label %578

578:                                              ; preds = %567, %583
  %579 = phi ptr [ %585, %583 ], [ %576, %567 ]
  %580 = load ptr, ptr %579, align 8, !tbaa !191
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  store i32 0, ptr %7, align 4, !tbaa !21
  %581 = call fastcc i32 @same_die_p(ptr noundef %571, ptr noundef %580, ptr noundef nonnull %7), !range !37
  call fastcc void @unmark_all_dies(ptr noundef %571)
  call fastcc void @unmark_all_dies(ptr noundef %580)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %587

583:                                              ; preds = %578
  %584 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %579, i64 0, i32 3
  %585 = load ptr, ptr %584, align 8, !tbaa !6
  %586 = icmp eq ptr %585, null
  br i1 %586, label %593, label %578, !llvm.loop !192

587:                                              ; preds = %578
  %588 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %579, i64 0, i32 1
  %589 = load i32, ptr %588, align 8, !tbaa !193
  store i32 %589, ptr @comdat_symbol_number, align 4, !tbaa !21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #31
  %590 = load ptr, ptr %568, align 8, !tbaa !173
  call fastcc void @assign_symbol_names(ptr noundef %590)
  %591 = getelementptr inbounds %struct.limbo_die_struct, ptr %568, i64 0, i32 2
  %592 = load ptr, ptr %591, align 8, !tbaa !171
  store ptr %592, ptr %569, align 8, !tbaa !6
  br label %611

593:                                              ; preds = %583, %567
  %594 = phi ptr [ %8, %567 ], [ %579, %583 ]
  %595 = call ptr @xcalloc(i64 noundef 1, i64 noundef 24) #31
  store ptr %571, ptr %595, align 8, !tbaa !191
  %596 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %594, i64 0, i32 2
  %597 = load i32, ptr %596, align 4, !tbaa !189
  store i32 %597, ptr @comdat_symbol_number, align 4, !tbaa !21
  %598 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %595, i64 0, i32 1
  store i32 %597, ptr %598, align 8, !tbaa !193
  %599 = load ptr, ptr %575, align 8, !tbaa !6
  %600 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %595, i64 0, i32 3
  store ptr %599, ptr %600, align 8, !tbaa !194
  store ptr %595, ptr %575, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #31
  %601 = load ptr, ptr %568, align 8, !tbaa !173
  call fastcc void @assign_symbol_names(ptr noundef %601)
  %602 = getelementptr inbounds %struct.limbo_die_struct, ptr %568, i64 0, i32 2
  %603 = load ptr, ptr %568, align 8, !tbaa !173
  %604 = load i32, ptr @comdat_symbol_number, align 4, !tbaa !21
  %605 = getelementptr inbounds %struct.die_struct, ptr %603, i64 0, i32 1
  %606 = load ptr, ptr %605, align 8, !tbaa !17
  %607 = call i32 @htab_hash_string(ptr noundef %606) #31
  %608 = call ptr @htab_find_slot_with_hash(ptr noundef %562, ptr noundef %603, i32 noundef %607, i32 noundef 0) #31
  %609 = load ptr, ptr %608, align 8, !tbaa !6
  %610 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %609, i64 0, i32 2
  store i32 %604, ptr %610, align 4, !tbaa !189
  br label %611

611:                                              ; preds = %593, %587
  %612 = phi ptr [ %569, %587 ], [ %602, %593 ]
  %613 = getelementptr inbounds %struct.limbo_die_struct, ptr %568, i64 0, i32 2
  %614 = load ptr, ptr %613, align 8, !tbaa !6
  %615 = icmp eq ptr %614, null
  br i1 %615, label %616, label %567, !llvm.loop !195

616:                                              ; preds = %611, %561
  call void @htab_delete(ptr noundef %562) #31
  %617 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  br label %618

618:                                              ; preds = %616, %381
  %619 = phi i32 [ %617, %616 ], [ %384, %381 ]
  %620 = icmp sgt i32 %619, 3
  br i1 %620, label %621, label %635

621:                                              ; preds = %618
  %622 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  call fastcc void @break_out_comdat_types(ptr noundef %622)
  store ptr null, ptr @limbo_die_list, align 8, !tbaa !6
  %623 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %624 = icmp eq ptr %623, null
  br i1 %624, label %632, label %625

625:                                              ; preds = %621, %625
  %626 = phi ptr [ %630, %625 ], [ %623, %621 ]
  %627 = load ptr, ptr %626, align 8, !tbaa !196
  call fastcc void @mark_dies(ptr noundef %627)
  %628 = call ptr @htab_create(i64 noundef 10, ptr noundef nonnull @htab_decl_hash, ptr noundef nonnull @htab_decl_eq, ptr noundef nonnull @htab_decl_del) #31
  call fastcc void @copy_decls_walk(ptr noundef %627, ptr noundef %627, ptr noundef %628)
  call void @htab_delete(ptr noundef %628) #31
  call fastcc void @unmark_dies(ptr noundef %627)
  %629 = getelementptr inbounds %struct.comdat_type_struct, ptr %626, i64 0, i32 3
  %630 = load ptr, ptr %629, align 8, !tbaa !6
  %631 = icmp eq ptr %630, null
  br i1 %631, label %632, label %625, !llvm.loop !198

632:                                              ; preds = %625, %621
  %633 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  call fastcc void @mark_dies(ptr noundef %633)
  %634 = call ptr @htab_create(i64 noundef 10, ptr noundef nonnull @htab_decl_hash, ptr noundef nonnull @htab_decl_eq, ptr noundef nonnull @htab_decl_del) #31
  call fastcc void @copy_decls_walk(ptr noundef %633, ptr noundef %633, ptr noundef %634)
  call void @htab_delete(ptr noundef %634) #31
  call fastcc void @unmark_dies(ptr noundef %633)
  call fastcc void @prune_unused_types()
  br label %635

635:                                              ; preds = %632, %618
  %636 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  call fastcc void @add_sibling_attributes(ptr noundef %636)
  %637 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %638 = icmp eq ptr %637, null
  br i1 %638, label %639, label %642

639:                                              ; preds = %642, %635
  %640 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %641 = icmp eq ptr %640, null
  br i1 %641, label %654, label %648

642:                                              ; preds = %635, %642
  %643 = phi ptr [ %646, %642 ], [ %637, %635 ]
  %644 = load ptr, ptr %643, align 8, !tbaa !173
  call fastcc void @add_sibling_attributes(ptr noundef %644)
  %645 = getelementptr inbounds %struct.limbo_die_struct, ptr %643, i64 0, i32 2
  %646 = load ptr, ptr %645, align 8, !tbaa !6
  %647 = icmp eq ptr %646, null
  br i1 %647, label %639, label %642, !llvm.loop !199

648:                                              ; preds = %639, %648
  %649 = phi ptr [ %652, %648 ], [ %640, %639 ]
  %650 = load ptr, ptr %649, align 8, !tbaa !196
  call fastcc void @add_sibling_attributes(ptr noundef %650)
  %651 = getelementptr inbounds %struct.comdat_type_struct, ptr %649, i64 0, i32 3
  %652 = load ptr, ptr %651, align 8, !tbaa !6
  %653 = icmp eq ptr %652, null
  br i1 %653, label %654, label %648, !llvm.loop !200

654:                                              ; preds = %648, %639
  %655 = load ptr, ptr @text_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %655) #31
  %656 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %657 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void %656(ptr noundef %657, ptr noundef nonnull @.str.268, i64 noundef 0) #31
  %658 = load i32, ptr @flag_reorder_blocks_and_partition, align 4, !tbaa !21
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %664, label %660

660:                                              ; preds = %654
  %661 = call ptr @unlikely_text_section() #31
  call void @switch_to_section(ptr noundef %661) #31
  %662 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %663 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void %662(ptr noundef %663, ptr noundef nonnull @.str.272, i64 noundef 0) #31
  br label %664

664:                                              ; preds = %660, %654
  %665 = load i8, ptr @have_multiple_function_sections, align 1, !tbaa !17
  %666 = icmp eq i8 %665, 0
  br i1 %666, label %673, label %667

667:                                              ; preds = %664
  %668 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %669 = icmp slt i32 %668, 3
  %670 = load i32, ptr @dwarf_strict, align 4
  %671 = icmp ne i32 %670, 0
  %672 = select i1 %669, i1 %671, i1 false
  br i1 %672, label %673, label %731

673:                                              ; preds = %667, %664
  %674 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %675 = call ptr @xstrdup(ptr noundef nonnull @text_section_label) #31
  %676 = icmp eq ptr %674, null
  br i1 %676, label %702, label %677

677:                                              ; preds = %673
  %678 = getelementptr inbounds %struct.die_struct, ptr %674, i64 0, i32 2
  %679 = load ptr, ptr %678, align 8, !tbaa !6
  %680 = icmp eq ptr %679, null
  br i1 %680, label %681, label %684

681:                                              ; preds = %677
  %682 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %682, ptr %678, align 8, !tbaa !157
  %683 = icmp eq ptr %682, null
  br i1 %683, label %690, label %684

684:                                              ; preds = %681, %677
  %685 = phi ptr [ %682, %681 ], [ %679, %677 ]
  %686 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %685, i64 0, i32 1
  %687 = load i32, ptr %686, align 4, !tbaa !201
  %688 = load i32, ptr %685, align 8, !tbaa !159
  %689 = icmp eq i32 %687, %688
  br i1 %689, label %690, label %694

690:                                              ; preds = %684, %681
  %691 = phi ptr [ %685, %684 ], [ null, %681 ]
  %692 = call ptr @vec_gc_o_reserve(ptr noundef %691, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %692, ptr %678, align 8, !tbaa !6
  %693 = load i32, ptr %692, align 8, !tbaa !159
  br label %694

694:                                              ; preds = %690, %684
  %695 = phi i32 [ %688, %684 ], [ %693, %690 ]
  %696 = phi ptr [ %685, %684 ], [ %692, %690 ]
  %697 = add i32 %695, 1
  store i32 %697, ptr %696, align 8, !tbaa !159
  %698 = zext i32 %695 to i64
  %699 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %696, i64 0, i32 2, i64 %698
  store i32 17, ptr %699, align 8, !tbaa.struct !179
  %700 = getelementptr inbounds i8, ptr %699, i64 8
  store i32 12, ptr %700, align 8, !tbaa.struct !202
  %701 = getelementptr inbounds i8, ptr %699, i64 16
  store ptr %675, ptr %701, align 8, !tbaa.struct !203
  br label %702

702:                                              ; preds = %673, %694
  %703 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %704 = call ptr @xstrdup(ptr noundef nonnull @text_end_label) #31
  %705 = icmp eq ptr %703, null
  br i1 %705, label %865, label %706

706:                                              ; preds = %702
  %707 = getelementptr inbounds %struct.die_struct, ptr %703, i64 0, i32 2
  %708 = load ptr, ptr %707, align 8, !tbaa !6
  %709 = icmp eq ptr %708, null
  br i1 %709, label %710, label %713

710:                                              ; preds = %706
  %711 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %711, ptr %707, align 8, !tbaa !157
  %712 = icmp eq ptr %711, null
  br i1 %712, label %719, label %713

713:                                              ; preds = %710, %706
  %714 = phi ptr [ %711, %710 ], [ %708, %706 ]
  %715 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %714, i64 0, i32 1
  %716 = load i32, ptr %715, align 4, !tbaa !201
  %717 = load i32, ptr %714, align 8, !tbaa !159
  %718 = icmp eq i32 %716, %717
  br i1 %718, label %719, label %723

719:                                              ; preds = %713, %710
  %720 = phi ptr [ %714, %713 ], [ null, %710 ]
  %721 = call ptr @vec_gc_o_reserve(ptr noundef %720, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %721, ptr %707, align 8, !tbaa !6
  %722 = load i32, ptr %721, align 8, !tbaa !159
  br label %723

723:                                              ; preds = %719, %713
  %724 = phi i32 [ %717, %713 ], [ %722, %719 ]
  %725 = phi ptr [ %714, %713 ], [ %721, %719 ]
  %726 = add i32 %724, 1
  store i32 %726, ptr %725, align 8, !tbaa !159
  %727 = zext i32 %724 to i64
  %728 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %725, i64 0, i32 2, i64 %727
  store i32 18, ptr %728, align 8, !tbaa.struct !179
  %729 = getelementptr inbounds i8, ptr %728, i64 8
  store i32 12, ptr %729, align 8, !tbaa.struct !202
  %730 = getelementptr inbounds i8, ptr %728, i64 16
  store ptr %704, ptr %730, align 8, !tbaa.struct !203
  br label %865

731:                                              ; preds = %667
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #31
  store i8 0, ptr %11, align 1, !tbaa !17
  %732 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %733 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !6
  %734 = icmp eq ptr %732, null
  br i1 %734, label %788, label %735

735:                                              ; preds = %731
  %736 = getelementptr inbounds %struct.die_struct, ptr %732, i64 0, i32 2
  %737 = load ptr, ptr %736, align 8, !tbaa !6
  %738 = icmp eq ptr %737, null
  br i1 %738, label %739, label %742

739:                                              ; preds = %735
  %740 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %740, ptr %736, align 8, !tbaa !157
  %741 = icmp eq ptr %740, null
  br i1 %741, label %748, label %742

742:                                              ; preds = %739, %735
  %743 = phi ptr [ %740, %739 ], [ %737, %735 ]
  %744 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %743, i64 0, i32 1
  %745 = load i32, ptr %744, align 4, !tbaa !201
  %746 = load i32, ptr %743, align 8, !tbaa !159
  %747 = icmp eq i32 %745, %746
  br i1 %747, label %748, label %752

748:                                              ; preds = %742, %739
  %749 = phi ptr [ %743, %742 ], [ null, %739 ]
  %750 = call ptr @vec_gc_o_reserve(ptr noundef %749, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %750, ptr %736, align 8, !tbaa !6
  %751 = load i32, ptr %750, align 8, !tbaa !159
  br label %752

752:                                              ; preds = %742, %748
  %753 = phi i32 [ %746, %742 ], [ %751, %748 ]
  %754 = phi ptr [ %743, %742 ], [ %750, %748 ]
  %755 = add i32 %753, 1
  store i32 %755, ptr %754, align 8, !tbaa !159
  %756 = zext i32 %753 to i64
  %757 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %754, i64 0, i32 2, i64 %756
  store i32 17, ptr %757, align 8, !tbaa.struct !179
  %758 = getelementptr inbounds i8, ptr %757, i64 8
  store i32 0, ptr %758, align 8, !tbaa.struct !202
  %759 = getelementptr inbounds i8, ptr %757, i64 16
  store ptr %733, ptr %759, align 8, !tbaa.struct !203
  %760 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %761 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !6
  %762 = icmp eq ptr %760, null
  br i1 %762, label %788, label %763

763:                                              ; preds = %752
  %764 = getelementptr inbounds %struct.die_struct, ptr %760, i64 0, i32 2
  %765 = load ptr, ptr %764, align 8, !tbaa !6
  %766 = icmp eq ptr %765, null
  br i1 %766, label %767, label %770

767:                                              ; preds = %763
  %768 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %768, ptr %764, align 8, !tbaa !157
  %769 = icmp eq ptr %768, null
  br i1 %769, label %776, label %770

770:                                              ; preds = %767, %763
  %771 = phi ptr [ %768, %767 ], [ %765, %763 ]
  %772 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %771, i64 0, i32 1
  %773 = load i32, ptr %772, align 4, !tbaa !201
  %774 = load i32, ptr %771, align 8, !tbaa !159
  %775 = icmp eq i32 %773, %774
  br i1 %775, label %776, label %780

776:                                              ; preds = %770, %767
  %777 = phi ptr [ %771, %770 ], [ null, %767 ]
  %778 = call ptr @vec_gc_o_reserve(ptr noundef %777, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %778, ptr %764, align 8, !tbaa !6
  %779 = load i32, ptr %778, align 8, !tbaa !159
  br label %780

780:                                              ; preds = %776, %770
  %781 = phi i32 [ %774, %770 ], [ %779, %776 ]
  %782 = phi ptr [ %771, %770 ], [ %778, %776 ]
  %783 = add i32 %781, 1
  store i32 %783, ptr %782, align 8, !tbaa !159
  %784 = zext i32 %781 to i64
  %785 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %782, i64 0, i32 2, i64 %784
  store i32 82, ptr %785, align 8, !tbaa.struct !179
  %786 = getelementptr inbounds i8, ptr %785, i64 8
  store i32 0, ptr %786, align 8, !tbaa.struct !202
  %787 = getelementptr inbounds i8, ptr %785, i64 16
  store ptr %761, ptr %787, align 8, !tbaa.struct !203
  br label %788

788:                                              ; preds = %731, %752, %780
  %789 = load i8, ptr @text_section_used, align 1, !tbaa !17
  %790 = icmp eq i8 %789, 0
  br i1 %790, label %793, label %791

791:                                              ; preds = %788
  %792 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  call fastcc void @add_ranges_by_labels(ptr noundef %792, ptr noundef nonnull @text_section_label, ptr noundef nonnull @text_end_label, ptr noundef nonnull %11)
  br label %793

793:                                              ; preds = %791, %788
  %794 = load i32, ptr @flag_reorder_blocks_and_partition, align 4, !tbaa !21
  %795 = icmp ne i32 %794, 0
  %796 = load i8, ptr @cold_text_section_used, align 1
  %797 = icmp ne i8 %796, 0
  %798 = select i1 %795, i1 %797, i1 false
  br i1 %798, label %799, label %801

799:                                              ; preds = %793
  %800 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  call fastcc void @add_ranges_by_labels(ptr noundef %800, ptr noundef nonnull @cold_text_section_label, ptr noundef nonnull @cold_end_label, ptr noundef nonnull %11)
  br label %801

801:                                              ; preds = %799, %793
  %802 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %843, label %804

804:                                              ; preds = %801, %838
  %805 = phi i64 [ %839, %838 ], [ 0, %801 ]
  %806 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %807 = getelementptr inbounds %struct.dw_fde_struct, ptr %806, i64 %805, i32 14
  %808 = load i16, ptr %807, align 8
  %809 = and i16 %808, 128
  %810 = icmp eq i16 %809, 0
  %811 = and i16 %808, 32
  %812 = icmp eq i16 %811, 0
  br i1 %810, label %831, label %813

813:                                              ; preds = %804
  br i1 %812, label %814, label %821

814:                                              ; preds = %813
  %815 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %816 = getelementptr inbounds %struct.dw_fde_struct, ptr %806, i64 %805, i32 4
  %817 = load ptr, ptr %816, align 8, !tbaa !204
  %818 = getelementptr inbounds %struct.dw_fde_struct, ptr %806, i64 %805, i32 5
  %819 = load ptr, ptr %818, align 8, !tbaa !205
  call fastcc void @add_ranges_by_labels(ptr noundef %815, ptr noundef %817, ptr noundef %819, ptr noundef nonnull %11)
  %820 = load i16, ptr %807, align 8
  br label %821

821:                                              ; preds = %814, %813
  %822 = phi i16 [ %820, %814 ], [ %808, %813 ]
  %823 = and i16 %822, 64
  %824 = icmp eq i16 %823, 0
  br i1 %824, label %825, label %838

825:                                              ; preds = %821
  %826 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %827 = getelementptr inbounds %struct.dw_fde_struct, ptr %806, i64 %805, i32 6
  %828 = load ptr, ptr %827, align 8, !tbaa !206
  %829 = getelementptr inbounds %struct.dw_fde_struct, ptr %806, i64 %805, i32 7
  %830 = load ptr, ptr %829, align 8, !tbaa !207
  call fastcc void @add_ranges_by_labels(ptr noundef %826, ptr noundef %828, ptr noundef %830, ptr noundef nonnull %11)
  br label %838

831:                                              ; preds = %804
  br i1 %812, label %832, label %838

832:                                              ; preds = %831
  %833 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %834 = getelementptr inbounds %struct.dw_fde_struct, ptr %806, i64 %805, i32 1
  %835 = load ptr, ptr %834, align 8, !tbaa !118
  %836 = getelementptr inbounds %struct.dw_fde_struct, ptr %806, i64 %805, i32 3
  %837 = load ptr, ptr %836, align 8, !tbaa !119
  call fastcc void @add_ranges_by_labels(ptr noundef %833, ptr noundef %835, ptr noundef %837, ptr noundef nonnull %11)
  br label %838

838:                                              ; preds = %831, %832, %821, %825
  %839 = add nuw nsw i64 %805, 1
  %840 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %841 = zext i32 %840 to i64
  %842 = icmp ult i64 %839, %841
  br i1 %842, label %804, label %843, !llvm.loop !208

843:                                              ; preds = %838, %801
  %844 = load i8, ptr %11, align 1, !tbaa !17
  %845 = icmp eq i8 %844, 0
  br i1 %845, label %864, label %846

846:                                              ; preds = %843
  %847 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %848 = load i32, ptr @ranges_table_allocated, align 4, !tbaa !21
  %849 = icmp eq i32 %847, %848
  %850 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  br i1 %849, label %851, label %859

851:                                              ; preds = %846
  %852 = add i32 %847, 64
  store i32 %852, ptr @ranges_table_allocated, align 4, !tbaa !21
  %853 = zext i32 %852 to i64
  %854 = shl nuw nsw i64 %853, 2
  %855 = call ptr @ggc_realloc_stat(ptr noundef %850, i64 noundef %854) #31
  store ptr %855, ptr @ranges_table, align 8, !tbaa !6
  %856 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds %struct.dw_ranges_struct, ptr %855, i64 %857
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(256) %858, i8 0, i64 256, i1 false)
  br label %859

859:                                              ; preds = %846, %851
  %860 = phi ptr [ %855, %851 ], [ %850, %846 ]
  %861 = zext i32 %847 to i64
  %862 = getelementptr inbounds %struct.dw_ranges_struct, ptr %860, i64 %861
  store i32 0, ptr %862, align 4, !tbaa !209
  %863 = add i32 %847, 1
  store i32 %863, ptr @ranges_table_in_use, align 4, !tbaa !21
  br label %864

864:                                              ; preds = %859, %843
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #31
  br label %865

865:                                              ; preds = %723, %702, %864
  %866 = load i8, ptr @have_location_lists, align 1, !tbaa !17
  %867 = icmp eq i8 %866, 0
  br i1 %867, label %874, label %868

868:                                              ; preds = %865
  %869 = load ptr, ptr @debug_loc_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %869) #31
  %870 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @loc_section_label, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.286, i32 noundef 0)
  %871 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %871, ptr noundef nonnull @loc_section_label) #31
  %872 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %873 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %872)
  call fastcc void @output_location_lists(ptr noundef %288)
  br label %874

874:                                              ; preds = %868, %865
  %875 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %876 = icmp ugt i32 %875, 1
  br i1 %876, label %877, label %938

877:                                              ; preds = %874
  %878 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %879 = call ptr @xstrdup(ptr noundef nonnull @debug_line_section_label) #31
  %880 = icmp eq ptr %878, null
  br i1 %880, label %906, label %881

881:                                              ; preds = %877
  %882 = getelementptr inbounds %struct.die_struct, ptr %878, i64 0, i32 2
  %883 = load ptr, ptr %882, align 8, !tbaa !6
  %884 = icmp eq ptr %883, null
  br i1 %884, label %885, label %888

885:                                              ; preds = %881
  %886 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %886, ptr %882, align 8, !tbaa !157
  %887 = icmp eq ptr %886, null
  br i1 %887, label %894, label %888

888:                                              ; preds = %885, %881
  %889 = phi ptr [ %886, %885 ], [ %883, %881 ]
  %890 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %889, i64 0, i32 1
  %891 = load i32, ptr %890, align 4, !tbaa !201
  %892 = load i32, ptr %889, align 8, !tbaa !159
  %893 = icmp eq i32 %891, %892
  br i1 %893, label %894, label %898

894:                                              ; preds = %888, %885
  %895 = phi ptr [ %889, %888 ], [ null, %885 ]
  %896 = call ptr @vec_gc_o_reserve(ptr noundef %895, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %896, ptr %882, align 8, !tbaa !6
  %897 = load i32, ptr %896, align 8, !tbaa !159
  br label %898

898:                                              ; preds = %894, %888
  %899 = phi i32 [ %892, %888 ], [ %897, %894 ]
  %900 = phi ptr [ %889, %888 ], [ %896, %894 ]
  %901 = add i32 %899, 1
  store i32 %901, ptr %900, align 8, !tbaa !159
  %902 = zext i32 %899 to i64
  %903 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %900, i64 0, i32 2, i64 %902
  store i32 16, ptr %903, align 8, !tbaa.struct !179
  %904 = getelementptr inbounds i8, ptr %903, i64 8
  store i32 13, ptr %904, align 8, !tbaa.struct !202
  %905 = getelementptr inbounds i8, ptr %903, i64 16
  store ptr %879, ptr %905, align 8, !tbaa.struct !203
  br label %906

906:                                              ; preds = %898, %877
  %907 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %908 = icmp ugt i32 %907, 2
  br i1 %908, label %909, label %938

909:                                              ; preds = %906
  %910 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %911 = call ptr @xstrdup(ptr noundef nonnull @macinfo_section_label) #31
  %912 = icmp eq ptr %910, null
  br i1 %912, label %938, label %913

913:                                              ; preds = %909
  %914 = getelementptr inbounds %struct.die_struct, ptr %910, i64 0, i32 2
  %915 = load ptr, ptr %914, align 8, !tbaa !6
  %916 = icmp eq ptr %915, null
  br i1 %916, label %917, label %920

917:                                              ; preds = %913
  %918 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %918, ptr %914, align 8, !tbaa !157
  %919 = icmp eq ptr %918, null
  br i1 %919, label %926, label %920

920:                                              ; preds = %917, %913
  %921 = phi ptr [ %918, %917 ], [ %915, %913 ]
  %922 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %921, i64 0, i32 1
  %923 = load i32, ptr %922, align 4, !tbaa !201
  %924 = load i32, ptr %921, align 8, !tbaa !159
  %925 = icmp eq i32 %923, %924
  br i1 %925, label %926, label %930

926:                                              ; preds = %920, %917
  %927 = phi ptr [ %921, %920 ], [ null, %917 ]
  %928 = call ptr @vec_gc_o_reserve(ptr noundef %927, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %928, ptr %914, align 8, !tbaa !6
  %929 = load i32, ptr %928, align 8, !tbaa !159
  br label %930

930:                                              ; preds = %926, %920
  %931 = phi i32 [ %924, %920 ], [ %929, %926 ]
  %932 = phi ptr [ %921, %920 ], [ %928, %926 ]
  %933 = add i32 %931, 1
  store i32 %933, ptr %932, align 8, !tbaa !159
  %934 = zext i32 %931 to i64
  %935 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %932, i64 0, i32 2, i64 %934
  store i32 67, ptr %935, align 8, !tbaa.struct !179
  %936 = getelementptr inbounds i8, ptr %935, i64 8
  store i32 15, ptr %936, align 8, !tbaa.struct !202
  %937 = getelementptr inbounds i8, ptr %935, i64 16
  store ptr %911, ptr %937, align 8, !tbaa.struct !203
  br label %938

938:                                              ; preds = %874, %930, %909, %906
  %939 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %940 = icmp eq ptr %939, null
  br i1 %940, label %947, label %941

941:                                              ; preds = %938, %941
  %942 = phi ptr [ %945, %941 ], [ %939, %938 ]
  %943 = load ptr, ptr %942, align 8, !tbaa !173
  call fastcc void @output_comp_unit(ptr noundef %943, i32 noundef 0)
  %944 = getelementptr inbounds %struct.limbo_die_struct, ptr %942, i64 0, i32 2
  %945 = load ptr, ptr %944, align 8, !tbaa !6
  %946 = icmp eq ptr %945, null
  br i1 %946, label %947, label %941, !llvm.loop !211

947:                                              ; preds = %941, %938
  %948 = call ptr @htab_create(i64 noundef 100, ptr noundef nonnull @htab_ct_hash, ptr noundef nonnull @htab_ct_eq, ptr noundef null) #31
  %949 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %950 = icmp eq ptr %949, null
  br i1 %950, label %1066, label %951

951:                                              ; preds = %947
  %952 = getelementptr inbounds i8, ptr %6, i64 3
  %953 = getelementptr inbounds i8, ptr %6, i64 5
  %954 = getelementptr inbounds i8, ptr %6, i64 7
  %955 = getelementptr inbounds i8, ptr %6, i64 9
  %956 = getelementptr inbounds i8, ptr %6, i64 11
  %957 = getelementptr inbounds i8, ptr %6, i64 13
  %958 = getelementptr inbounds i8, ptr %6, i64 15
  %959 = getelementptr inbounds i8, ptr %6, i64 17
  br label %960

960:                                              ; preds = %951, %1062
  %961 = phi ptr [ %949, %951 ], [ %1064, %1062 ]
  %962 = call ptr @htab_find_slot(ptr noundef %948, ptr noundef nonnull %961, i32 noundef 1) #31
  %963 = load ptr, ptr %962, align 8, !tbaa !6
  %964 = icmp eq ptr %963, null
  br i1 %964, label %965, label %1062

965:                                              ; preds = %960
  %966 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %967 = icmp ugt i32 %966, 1
  br i1 %967, label %968, label %997

968:                                              ; preds = %965
  %969 = load ptr, ptr %961, align 8, !tbaa !196
  %970 = call ptr @xstrdup(ptr noundef nonnull @debug_line_section_label) #31
  %971 = icmp eq ptr %969, null
  br i1 %971, label %997, label %972

972:                                              ; preds = %968
  %973 = getelementptr inbounds %struct.die_struct, ptr %969, i64 0, i32 2
  %974 = load ptr, ptr %973, align 8, !tbaa !6
  %975 = icmp eq ptr %974, null
  br i1 %975, label %976, label %979

976:                                              ; preds = %972
  %977 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %977, ptr %973, align 8, !tbaa !157
  %978 = icmp eq ptr %977, null
  br i1 %978, label %985, label %979

979:                                              ; preds = %976, %972
  %980 = phi ptr [ %977, %976 ], [ %974, %972 ]
  %981 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %980, i64 0, i32 1
  %982 = load i32, ptr %981, align 4, !tbaa !201
  %983 = load i32, ptr %980, align 8, !tbaa !159
  %984 = icmp eq i32 %982, %983
  br i1 %984, label %985, label %989

985:                                              ; preds = %979, %976
  %986 = phi ptr [ %980, %979 ], [ null, %976 ]
  %987 = call ptr @vec_gc_o_reserve(ptr noundef %986, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %987, ptr %973, align 8, !tbaa !6
  %988 = load i32, ptr %987, align 8, !tbaa !159
  br label %989

989:                                              ; preds = %985, %979
  %990 = phi i32 [ %983, %979 ], [ %988, %985 ]
  %991 = phi ptr [ %980, %979 ], [ %987, %985 ]
  %992 = add i32 %990, 1
  store i32 %992, ptr %991, align 8, !tbaa !159
  %993 = zext i32 %990 to i64
  %994 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %991, i64 0, i32 2, i64 %993
  store i32 16, ptr %994, align 8, !tbaa.struct !179
  %995 = getelementptr inbounds i8, ptr %994, i64 8
  store i32 13, ptr %995, align 8, !tbaa.struct !202
  %996 = getelementptr inbounds i8, ptr %994, i64 16
  store ptr %970, ptr %996, align 8, !tbaa.struct !203
  br label %997

997:                                              ; preds = %989, %968, %965
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %6)
  %998 = load ptr, ptr %961, align 8, !tbaa !196
  call fastcc void @mark_dies(ptr noundef %998)
  %999 = load ptr, ptr %961, align 8, !tbaa !196
  call fastcc void @build_abbrev_table(ptr noundef %999)
  store i64 23, ptr @next_die_offset, align 8, !tbaa !38
  %1000 = load ptr, ptr %961, align 8, !tbaa !196
  call fastcc void @calc_die_sizes(ptr noundef %1000)
  store i32 3044471, ptr %6, align 16
  %1001 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 0
  %1002 = load i8, ptr %1001, align 1, !tbaa !17
  %1003 = zext i8 %1002 to i32
  %1004 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %952, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1003)
  %1005 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 1
  %1006 = load i8, ptr %1005, align 1, !tbaa !17
  %1007 = zext i8 %1006 to i32
  %1008 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %953, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1007)
  %1009 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 2
  %1010 = load i8, ptr %1009, align 1, !tbaa !17
  %1011 = zext i8 %1010 to i32
  %1012 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %954, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1011)
  %1013 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 3
  %1014 = load i8, ptr %1013, align 1, !tbaa !17
  %1015 = zext i8 %1014 to i32
  %1016 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %955, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1015)
  %1017 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 4
  %1018 = load i8, ptr %1017, align 1, !tbaa !17
  %1019 = zext i8 %1018 to i32
  %1020 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %956, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1019)
  %1021 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 5
  %1022 = load i8, ptr %1021, align 1, !tbaa !17
  %1023 = zext i8 %1022 to i32
  %1024 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %957, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1023)
  %1025 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 6
  %1026 = load i8, ptr %1025, align 1, !tbaa !17
  %1027 = zext i8 %1026 to i32
  %1028 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %958, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1027)
  %1029 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 2, i64 7
  %1030 = load i8, ptr %1029, align 1, !tbaa !17
  %1031 = zext i8 %1030 to i32
  %1032 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %959, ptr noundef nonnull dereferenceable(1) @.str.526, i32 noundef %1031)
  %1033 = call ptr @get_identifier(ptr noundef nonnull %6) #31
  %1034 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 19), align 8, !tbaa !212
  call void %1034(ptr noundef nonnull @.str.524, i32 noundef 3072, ptr noundef %1033) #31
  %1035 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %1036 = load i64, ptr @next_die_offset, align 8, !tbaa !38
  %1037 = add i64 %1036, -4
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %1037, ptr noundef nonnull @.str.333) #31
  %1038 = sext i32 %1035 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef %1038, ptr noundef nonnull @.str.334) #31
  %1039 = load ptr, ptr @debug_abbrev_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull @abbrev_section_label, ptr noundef %1039, ptr noundef nonnull @.str.335) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.336) #31
  %1040 = load i8, ptr %1001, align 1, !tbaa !17
  %1041 = sext i8 %1040 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1041, ptr noundef nonnull @.str.217, ptr noundef nonnull @.str.527) #31
  %1042 = load i8, ptr %1005, align 1, !tbaa !17
  %1043 = sext i8 %1042 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1043, ptr noundef null, ptr noundef nonnull @.str.527) #31
  %1044 = load i8, ptr %1009, align 1, !tbaa !17
  %1045 = sext i8 %1044 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1045, ptr noundef null, ptr noundef nonnull @.str.527) #31
  %1046 = load i8, ptr %1013, align 1, !tbaa !17
  %1047 = sext i8 %1046 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1047, ptr noundef null, ptr noundef nonnull @.str.527) #31
  %1048 = load i8, ptr %1017, align 1, !tbaa !17
  %1049 = sext i8 %1048 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1049, ptr noundef null, ptr noundef nonnull @.str.527) #31
  %1050 = load i8, ptr %1021, align 1, !tbaa !17
  %1051 = sext i8 %1050 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1051, ptr noundef null, ptr noundef nonnull @.str.527) #31
  %1052 = load i8, ptr %1025, align 1, !tbaa !17
  %1053 = sext i8 %1052 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1053, ptr noundef null, ptr noundef nonnull @.str.527) #31
  %1054 = load i8, ptr %1029, align 1, !tbaa !17
  %1055 = sext i8 %1054 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %1055, ptr noundef null, ptr noundef nonnull @.str.527) #31
  %1056 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 1
  %1057 = load ptr, ptr %1056, align 8, !tbaa !213
  %1058 = getelementptr inbounds %struct.die_struct, ptr %1057, i64 0, i32 7
  %1059 = load i64, ptr %1058, align 8, !tbaa !214
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %1059, ptr noundef nonnull @.str.528) #31
  %1060 = load ptr, ptr %961, align 8, !tbaa !196
  call fastcc void @output_die(ptr noundef %1060)
  %1061 = load ptr, ptr %961, align 8, !tbaa !196
  call fastcc void @unmark_dies(ptr noundef %1061)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %6)
  store ptr %961, ptr %962, align 8, !tbaa !6
  br label %1062

1062:                                             ; preds = %960, %997
  %1063 = getelementptr inbounds %struct.comdat_type_struct, ptr %961, i64 0, i32 3
  %1064 = load ptr, ptr %1063, align 8, !tbaa !6
  %1065 = icmp eq ptr %1064, null
  br i1 %1065, label %1066, label %960, !llvm.loop !215

1066:                                             ; preds = %1062, %947
  call void @htab_delete(ptr noundef %948) #31
  %1067 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %1068 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %1069 = icmp ugt i32 %1068, 2
  %1070 = zext i1 %1069 to i32
  call fastcc void @output_comp_unit(ptr noundef %1067, i32 noundef %1070)
  %1071 = load ptr, ptr @debug_abbrev_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1071) #31
  %1072 = load i32, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  %1073 = icmp ugt i32 %1072, 1
  br i1 %1073, label %1074, label %1120

1074:                                             ; preds = %1066, %1115
  %1075 = phi i64 [ %1116, %1115 ], [ 1, %1066 ]
  %1076 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %1077 = getelementptr inbounds ptr, ptr %1076, i64 %1075
  %1078 = load ptr, ptr %1077, align 8, !tbaa !6
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %1075, ptr noundef nonnull @.str.529) #31
  %1079 = load i32, ptr %1078, align 8, !tbaa !185
  %1080 = zext i32 %1079 to i64
  %1081 = call fastcc ptr @dwarf_tag_name(i32 noundef %1079)
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %1080, ptr noundef nonnull @.str.530, ptr noundef nonnull %1081) #31
  %1082 = getelementptr inbounds %struct.die_struct, ptr %1078, i64 0, i32 4
  %1083 = load ptr, ptr %1082, align 8, !tbaa !175
  %1084 = icmp eq ptr %1083, null
  br i1 %1084, label %1086, label %1085

1085:                                             ; preds = %1074
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 1, ptr noundef nonnull @.str.531) #31
  br label %1087

1086:                                             ; preds = %1074
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 0, ptr noundef nonnull @.str.532) #31
  br label %1087

1087:                                             ; preds = %1086, %1085
  %1088 = getelementptr inbounds %struct.die_struct, ptr %1078, i64 0, i32 2
  %1089 = load ptr, ptr %1088, align 8, !tbaa !157
  %1090 = icmp eq ptr %1089, null
  br i1 %1090, label %1115, label %1091

1091:                                             ; preds = %1087, %1109
  %1092 = phi i64 [ %1112, %1109 ], [ 0, %1087 ]
  %1093 = phi ptr [ %1113, %1109 ], [ %1089, %1087 ]
  %1094 = load i32, ptr %1093, align 8, !tbaa !159
  %1095 = zext i32 %1094 to i64
  %1096 = icmp ult i64 %1092, %1095
  br i1 %1096, label %1097, label %1115

1097:                                             ; preds = %1091
  %1098 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1093, i64 0, i32 2, i64 %1092
  %1099 = load i32, ptr %1098, align 8, !tbaa !161
  %1100 = zext i32 %1099 to i64
  %1101 = call fastcc ptr @dwarf_attr_name(i32 noundef %1099)
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %1100, ptr noundef nonnull @.str.533, ptr noundef nonnull %1101) #31
  %1102 = call fastcc i32 @value_format(ptr noundef nonnull %1098)
  %1103 = add i32 %1102, -1
  %1104 = icmp ult i32 %1103, 32
  br i1 %1104, label %1105, label %1109

1105:                                             ; preds = %1097
  %1106 = sext i32 %1103 to i64
  %1107 = shl i64 %1106, 2
  %1108 = call ptr @llvm.load.relative.i64(ptr @reltable.dwarf2out_finish, i64 %1107)
  br label %1109

1109:                                             ; preds = %1097, %1105
  %1110 = phi ptr [ %1108, %1105 ], [ @.str.559, %1097 ]
  %1111 = zext i32 %1102 to i64
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %1111, ptr noundef nonnull @.str.533, ptr noundef nonnull %1110) #31
  %1112 = add nuw nsw i64 %1092, 1
  %1113 = load ptr, ptr %1088, align 8, !tbaa !157
  %1114 = icmp eq ptr %1113, null
  br i1 %1114, label %1115, label %1091, !llvm.loop !216

1115:                                             ; preds = %1109, %1091, %1087
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 0, ptr noundef null) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 0, ptr noundef null) #31
  %1116 = add nuw nsw i64 %1075, 1
  %1117 = load i32, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  %1118 = zext i32 %1117 to i64
  %1119 = icmp ult i64 %1116, %1118
  br i1 %1119, label %1074, label %1120, !llvm.loop !217

1120:                                             ; preds = %1115, %1066
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 0, ptr noundef null) #31
  %1121 = load ptr, ptr @pubname_table, align 8
  %1122 = icmp eq ptr %1121, null
  br i1 %1122, label %1129, label %1123

1123:                                             ; preds = %1120
  %1124 = load i32, ptr %1121, align 8, !tbaa !218
  %1125 = icmp eq i32 %1124, 0
  br i1 %1125, label %1129, label %1126

1126:                                             ; preds = %1123
  %1127 = load ptr, ptr @debug_pubnames_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1127) #31
  %1128 = load ptr, ptr @pubname_table, align 8, !tbaa !6
  call fastcc void @output_pubnames(ptr noundef %1128)
  br label %1129

1129:                                             ; preds = %1120, %1126, %1123
  %1130 = load ptr, ptr @pubtype_table, align 8
  %1131 = icmp eq ptr %1130, null
  br i1 %1131, label %1138, label %1132

1132:                                             ; preds = %1129
  %1133 = load i32, ptr %1130, align 8, !tbaa !218
  %1134 = icmp eq i32 %1133, 0
  br i1 %1134, label %1138, label %1135

1135:                                             ; preds = %1132
  %1136 = load ptr, ptr @debug_pubtypes_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1136) #31
  %1137 = load ptr, ptr @pubtype_table, align 8, !tbaa !6
  call fastcc void @output_pubnames(ptr noundef %1137)
  br label %1138

1138:                                             ; preds = %1129, %1135, %1132
  %1139 = load ptr, ptr @dcall_table, align 8
  %1140 = icmp eq ptr %1139, null
  br i1 %1140, label %1233, label %1141

1141:                                             ; preds = %1138
  %1142 = load i32, ptr %1139, align 8, !tbaa !220
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1233, label %1144

1144:                                             ; preds = %1141
  %1145 = load ptr, ptr @debug_dcall_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1145) #31
  %1146 = load ptr, ptr @dcall_table, align 8
  %1147 = icmp eq ptr %1146, null
  br i1 %1147, label %1194, label %1148

1148:                                             ; preds = %1144, %1181
  %1149 = phi i64 [ %1191, %1181 ], [ 0, %1144 ]
  %1150 = phi ptr [ %1192, %1181 ], [ %1146, %1144 ]
  %1151 = phi i64 [ %1190, %1181 ], [ 7, %1144 ]
  %1152 = phi ptr [ %1182, %1181 ], [ null, %1144 ]
  %1153 = load i32, ptr %1150, align 8, !tbaa !220
  %1154 = zext i32 %1153 to i64
  %1155 = icmp ult i64 %1149, %1154
  br i1 %1155, label %1156, label %1194

1156:                                             ; preds = %1148
  %1157 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %1150, i64 0, i32 2, i64 %1149, i32 2
  %1158 = load ptr, ptr %1157, align 8, !tbaa !222
  %1159 = icmp eq ptr %1158, null
  br i1 %1159, label %1160, label %1161

1160:                                             ; preds = %1156
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 11842, ptr noundef nonnull @.str.5) #31
  br label %1161

1161:                                             ; preds = %1160, %1156
  %1162 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %1150, i64 0, i32 2, i64 %1149, i32 1
  %1163 = load ptr, ptr %1162, align 8, !tbaa !224
  %1164 = icmp eq ptr %1163, %1152
  br i1 %1164, label %1181, label %1165

1165:                                             ; preds = %1161
  %1166 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %1167 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1163, i64 0, i32 2
  %1168 = load i32, ptr %1167, align 4, !tbaa !17
  %1169 = call ptr @htab_find_with_hash(ptr noundef %1166, ptr noundef %1163, i32 noundef %1168) #31
  %1170 = icmp eq ptr %1169, null
  br i1 %1170, label %1171, label %1173

1171:                                             ; preds = %1165
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 11847, ptr noundef nonnull @.str.5) #31
  %1172 = load ptr, ptr %1162, align 8, !tbaa !224
  br label %1181

1173:                                             ; preds = %1165
  %1174 = load ptr, ptr %1162, align 8, !tbaa !224
  %1175 = getelementptr inbounds %struct.die_struct, ptr %1169, i64 0, i32 7
  %1176 = load i64, ptr %1175, align 8, !tbaa !214
  %1177 = call i32 @size_of_uleb128(i64 noundef %1176) #31
  %1178 = add nsw i32 %1177, 4
  %1179 = sext i32 %1178 to i64
  %1180 = add i64 %1151, %1179
  br label %1181

1181:                                             ; preds = %1173, %1171, %1161
  %1182 = phi ptr [ %1152, %1161 ], [ %1174, %1173 ], [ %1172, %1171 ]
  %1183 = phi i64 [ %1151, %1161 ], [ %1180, %1173 ], [ %1151, %1171 ]
  %1184 = load ptr, ptr %1157, align 8, !tbaa !222
  %1185 = getelementptr inbounds %struct.die_struct, ptr %1184, i64 0, i32 7
  %1186 = load i64, ptr %1185, align 8, !tbaa !214
  %1187 = call i32 @size_of_uleb128(i64 noundef %1186) #31
  %1188 = add nsw i32 %1187, 4
  %1189 = sext i32 %1188 to i64
  %1190 = add i64 %1183, %1189
  %1191 = add nuw nsw i64 %1149, 1
  %1192 = load ptr, ptr @dcall_table, align 8
  %1193 = icmp eq ptr %1192, null
  br i1 %1193, label %1194, label %1148, !llvm.loop !225

1194:                                             ; preds = %1181, %1148, %1144
  %1195 = phi i64 [ 7, %1144 ], [ %1151, %1148 ], [ %1190, %1181 ]
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %5) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %1195, ptr noundef nonnull @.str.567) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef 4, ptr noundef nonnull @.str.568) #31
  %1196 = load ptr, ptr @debug_info_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull @debug_info_section_label, ptr noundef %1196, ptr noundef nonnull @.str.563) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.336) #31
  %1197 = load ptr, ptr @dcall_table, align 8
  %1198 = icmp eq ptr %1197, null
  br i1 %1198, label %1232, label %1199

1199:                                             ; preds = %1194, %1221
  %1200 = phi i64 [ %1229, %1221 ], [ 0, %1194 ]
  %1201 = phi ptr [ %1230, %1221 ], [ %1197, %1194 ]
  %1202 = phi ptr [ %1222, %1221 ], [ null, %1194 ]
  %1203 = load i32, ptr %1201, align 8, !tbaa !220
  %1204 = zext i32 %1203 to i64
  %1205 = icmp ult i64 %1200, %1204
  br i1 %1205, label %1206, label %1232

1206:                                             ; preds = %1199
  %1207 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %1201, i64 0, i32 2, i64 %1200
  %1208 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %1201, i64 0, i32 2, i64 %1200, i32 1
  %1209 = load ptr, ptr %1208, align 8, !tbaa !224
  %1210 = icmp eq ptr %1209, %1202
  br i1 %1210, label %1221, label %1211

1211:                                             ; preds = %1206
  %1212 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %1213 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1209, i64 0, i32 2
  %1214 = load i32, ptr %1213, align 4, !tbaa !17
  %1215 = call ptr @htab_find_with_hash(ptr noundef %1212, ptr noundef %1209, i32 noundef %1214) #31
  %1216 = load ptr, ptr %1208, align 8, !tbaa !224
  %1217 = icmp eq ptr %1215, null
  br i1 %1217, label %1221, label %1218

1218:                                             ; preds = %1211
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef nonnull @.str.569) #31
  %1219 = getelementptr inbounds %struct.die_struct, ptr %1215, i64 0, i32 7
  %1220 = load i64, ptr %1219, align 8, !tbaa !214
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %1220, ptr noundef nonnull @.str.570) #31
  br label %1221

1221:                                             ; preds = %1218, %1211, %1206
  %1222 = phi ptr [ %1202, %1206 ], [ %1216, %1218 ], [ %1216, %1211 ]
  %1223 = load i32, ptr %1207, align 8, !tbaa !226
  %1224 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.571, i32 noundef %1223)
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef nonnull %5, ptr noundef nonnull @.str.572) #31
  %1225 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %1201, i64 0, i32 2, i64 %1200, i32 2
  %1226 = load ptr, ptr %1225, align 8, !tbaa !222
  %1227 = getelementptr inbounds %struct.die_struct, ptr %1226, i64 0, i32 7
  %1228 = load i64, ptr %1227, align 8, !tbaa !214
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %1228, ptr noundef nonnull @.str.573) #31
  %1229 = add nuw nsw i64 %1200, 1
  %1230 = load ptr, ptr @dcall_table, align 8
  %1231 = icmp eq ptr %1230, null
  br i1 %1231, label %1232, label %1199, !llvm.loop !227

1232:                                             ; preds = %1199, %1221, %1194
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %5) #31
  br label %1233

1233:                                             ; preds = %1138, %1232, %1141
  %1234 = load ptr, ptr @vcall_table, align 8
  %1235 = icmp eq ptr %1234, null
  br i1 %1235, label %1282, label %1236

1236:                                             ; preds = %1233
  %1237 = load i32, ptr %1234, align 4, !tbaa !228
  %1238 = icmp eq i32 %1237, 0
  br i1 %1238, label %1282, label %1239

1239:                                             ; preds = %1236
  %1240 = load ptr, ptr @debug_vcall_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1240) #31
  %1241 = load ptr, ptr @vcall_table, align 8
  %1242 = icmp eq ptr %1241, null
  br i1 %1242, label %1261, label %1243

1243:                                             ; preds = %1239, %1250
  %1244 = phi i64 [ %1258, %1250 ], [ 0, %1239 ]
  %1245 = phi ptr [ %1259, %1250 ], [ %1241, %1239 ]
  %1246 = phi i64 [ %1257, %1250 ], [ 3, %1239 ]
  %1247 = load i32, ptr %1245, align 4, !tbaa !228
  %1248 = zext i32 %1247 to i64
  %1249 = icmp ult i64 %1244, %1248
  br i1 %1249, label %1250, label %1261

1250:                                             ; preds = %1243
  %1251 = getelementptr inbounds %struct.VEC_vcall_entry_base, ptr %1245, i64 0, i32 2, i64 %1244, i32 1
  %1252 = load i32, ptr %1251, align 4, !tbaa !230
  %1253 = zext i32 %1252 to i64
  %1254 = call i32 @size_of_uleb128(i64 noundef %1253) #31
  %1255 = add nsw i32 %1254, 4
  %1256 = sext i32 %1255 to i64
  %1257 = add i64 %1246, %1256
  %1258 = add nuw nsw i64 %1244, 1
  %1259 = load ptr, ptr @vcall_table, align 8
  %1260 = icmp eq ptr %1259, null
  br i1 %1260, label %1261, label %1243, !llvm.loop !232

1261:                                             ; preds = %1250, %1243, %1239
  %1262 = phi i64 [ 3, %1239 ], [ %1246, %1243 ], [ %1257, %1250 ]
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %4) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %1262, ptr noundef nonnull @.str.574) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef 4, ptr noundef nonnull @.str.568) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.336) #31
  %1263 = load ptr, ptr @vcall_table, align 8
  %1264 = icmp eq ptr %1263, null
  br i1 %1264, label %1281, label %1265

1265:                                             ; preds = %1261, %1271
  %1266 = phi i64 [ %1278, %1271 ], [ 0, %1261 ]
  %1267 = phi ptr [ %1279, %1271 ], [ %1263, %1261 ]
  %1268 = load i32, ptr %1267, align 4, !tbaa !228
  %1269 = zext i32 %1268 to i64
  %1270 = icmp ult i64 %1266, %1269
  br i1 %1270, label %1271, label %1281

1271:                                             ; preds = %1265
  %1272 = getelementptr inbounds %struct.VEC_vcall_entry_base, ptr %1267, i64 0, i32 2, i64 %1266
  %1273 = load i32, ptr %1272, align 4, !tbaa !233
  %1274 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.571, i32 noundef %1273)
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef nonnull %4, ptr noundef nonnull @.str.572) #31
  %1275 = getelementptr inbounds %struct.VEC_vcall_entry_base, ptr %1267, i64 0, i32 2, i64 %1266, i32 1
  %1276 = load i32, ptr %1275, align 4, !tbaa !230
  %1277 = zext i32 %1276 to i64
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %1277, ptr noundef nonnull @.str.575) #31
  %1278 = add nuw nsw i64 %1266, 1
  %1279 = load ptr, ptr @vcall_table, align 8
  %1280 = icmp eq ptr %1279, null
  br i1 %1280, label %1281, label %1265, !llvm.loop !234

1281:                                             ; preds = %1265, %1271, %1261
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %4) #31
  br label %1282

1282:                                             ; preds = %1233, %1281, %1236
  %1283 = load i32, ptr @fde_table_in_use, align 4, !tbaa !21
  %1284 = icmp eq i32 %1283, 0
  br i1 %1284, label %1569, label %1285

1285:                                             ; preds = %1282
  %1286 = load ptr, ptr @debug_aranges_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1286) #31
  %1287 = load i8, ptr @text_section_used, align 1, !tbaa !17
  %1288 = icmp eq i8 %1287, 0
  %1289 = select i1 %1288, i64 12, i64 20
  %1290 = load i8, ptr @cold_text_section_used, align 1, !tbaa !17
  %1291 = icmp eq i8 %1290, 0
  %1292 = add nuw nsw i64 %1289, 8
  %1293 = select i1 %1291, i64 %1289, i64 %1292
  %1294 = load i32, ptr @arange_table_in_use, align 4, !tbaa !21
  %1295 = shl i32 %1294, 3
  %1296 = zext i32 %1295 to i64
  %1297 = add nuw nsw i64 %1296, 8
  %1298 = add nuw nsw i64 %1297, %1293
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %1298, ptr noundef nonnull @.str.576) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef 2, ptr noundef nonnull @.str.562) #31
  %1299 = load ptr, ptr @debug_info_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull @debug_info_section_label, ptr noundef %1299, ptr noundef nonnull @.str.563) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.577) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 0, ptr noundef nonnull @.str.578) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef 0, ptr noundef nonnull @.str.579, i32 noundef 8) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef 0, ptr noundef null) #31
  %1300 = load i8, ptr @text_section_used, align 1, !tbaa !17
  %1301 = icmp eq i8 %1300, 0
  br i1 %1301, label %1303, label %1302

1302:                                             ; preds = %1285
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef nonnull @text_section_label, ptr noundef nonnull @.str.580) #31
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef nonnull @text_end_label, ptr noundef nonnull @text_section_label, ptr noundef nonnull @.str.581) #31
  br label %1303

1303:                                             ; preds = %1302, %1285
  %1304 = load i8, ptr @cold_text_section_used, align 1, !tbaa !17
  %1305 = icmp eq i8 %1304, 0
  br i1 %1305, label %1307, label %1306

1306:                                             ; preds = %1303
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef nonnull @cold_text_section_label, ptr noundef nonnull @.str.580) #31
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef nonnull @cold_end_label, ptr noundef nonnull @cold_text_section_label, ptr noundef nonnull @.str.581) #31
  br label %1307

1307:                                             ; preds = %1306, %1303
  %1308 = load i32, ptr @arange_table_in_use, align 4, !tbaa !21
  %1309 = icmp eq i32 %1308, 0
  br i1 %1309, label %1568, label %1310

1310:                                             ; preds = %1307, %1563
  %1311 = phi i64 [ %1564, %1563 ], [ 0, %1307 ]
  %1312 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %1313 = getelementptr inbounds ptr, ptr %1312, i64 %1311
  %1314 = load ptr, ptr %1313, align 8, !tbaa !6
  %1315 = getelementptr inbounds %struct.die_struct, ptr %1314, i64 0, i32 9
  %1316 = load i32, ptr %1315, align 8, !tbaa !235
  %1317 = icmp eq i32 %1316, 0
  br i1 %1317, label %1318, label %1319

1318:                                             ; preds = %1310
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10987, ptr noundef nonnull @.str.5) #31
  br label %1319

1319:                                             ; preds = %1318, %1310
  %1320 = load i32, ptr %1314, align 8, !tbaa !185
  %1321 = icmp eq i32 %1320, 46
  br i1 %1321, label %1322, label %1458

1322:                                             ; preds = %1319, %1354
  %1323 = phi ptr [ %1355, %1354 ], [ %1314, %1319 ]
  %1324 = getelementptr inbounds %struct.die_struct, ptr %1323, i64 0, i32 2
  %1325 = load ptr, ptr %1324, align 8, !tbaa !157
  %1326 = icmp eq ptr %1325, null
  br i1 %1326, label %1364, label %1327

1327:                                             ; preds = %1322, %1348
  %1328 = phi ptr [ %1349, %1348 ], [ %1325, %1322 ]
  %1329 = phi ptr [ %1350, %1348 ], [ %1325, %1322 ]
  %1330 = phi i64 [ %1352, %1348 ], [ 0, %1322 ]
  %1331 = phi ptr [ %1351, %1348 ], [ null, %1322 ]
  %1332 = load i32, ptr %1329, align 8, !tbaa !159
  %1333 = zext i32 %1332 to i64
  %1334 = icmp ult i64 %1330, %1333
  br i1 %1334, label %1335, label %1354

1335:                                             ; preds = %1327
  %1336 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1329, i64 0, i32 2, i64 %1330
  %1337 = load i32, ptr %1336, align 8, !tbaa !161
  switch i32 %1337, label %1348 [
    i32 17, label %1357
    i32 71, label %1338
    i32 49, label %1338
  ]

1338:                                             ; preds = %1335, %1335
  %1339 = getelementptr i8, ptr %1336, i64 8
  %1340 = load i32, ptr %1339, align 8, !tbaa !163
  %1341 = icmp eq i32 %1340, 10
  br i1 %1341, label %1344, label %1342

1342:                                             ; preds = %1338
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1343 = load ptr, ptr %1324, align 8, !tbaa !157
  br label %1344

1344:                                             ; preds = %1342, %1338
  %1345 = phi ptr [ %1328, %1338 ], [ %1343, %1342 ]
  %1346 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1329, i64 0, i32 2, i64 %1330, i32 1, i32 1
  %1347 = load ptr, ptr %1346, align 8, !tbaa !17
  br label %1348

1348:                                             ; preds = %1344, %1335
  %1349 = phi ptr [ %1345, %1344 ], [ %1328, %1335 ]
  %1350 = phi ptr [ %1345, %1344 ], [ %1329, %1335 ]
  %1351 = phi ptr [ %1347, %1344 ], [ %1331, %1335 ]
  %1352 = add nuw nsw i64 %1330, 1
  %1353 = icmp eq ptr %1350, null
  br i1 %1353, label %1354, label %1327, !llvm.loop !164

1354:                                             ; preds = %1348, %1327
  %1355 = phi ptr [ %1351, %1348 ], [ %1331, %1327 ]
  %1356 = icmp eq ptr %1355, null
  br i1 %1356, label %1364, label %1322

1357:                                             ; preds = %1335
  %1358 = getelementptr i8, ptr %1336, i64 8
  %1359 = load i32, ptr %1358, align 8, !tbaa !163
  switch i32 %1359, label %1360 [
    i32 12, label %1361
    i32 13, label %1361
    i32 15, label %1361
  ]

1360:                                             ; preds = %1357
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7350, ptr noundef nonnull @.str.5) #31
  br label %1361

1361:                                             ; preds = %1360, %1357, %1357, %1357
  %1362 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1329, i64 0, i32 2, i64 %1330, i32 1, i32 1
  %1363 = load ptr, ptr %1362, align 8, !tbaa !17
  br label %1364

1364:                                             ; preds = %1354, %1322, %1361
  %1365 = phi ptr [ %1363, %1361 ], [ null, %1322 ], [ null, %1354 ]
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %1365, ptr noundef nonnull @.str.580) #31
  br label %1366

1366:                                             ; preds = %1400, %1364
  %1367 = phi ptr [ %1314, %1364 ], [ %1401, %1400 ]
  %1368 = icmp eq ptr %1367, null
  br i1 %1368, label %1410, label %1369

1369:                                             ; preds = %1366
  %1370 = getelementptr inbounds %struct.die_struct, ptr %1367, i64 0, i32 2
  %1371 = load ptr, ptr %1370, align 8, !tbaa !157
  %1372 = icmp eq ptr %1371, null
  br i1 %1372, label %1410, label %1373

1373:                                             ; preds = %1369, %1394
  %1374 = phi ptr [ %1395, %1394 ], [ %1371, %1369 ]
  %1375 = phi ptr [ %1396, %1394 ], [ %1371, %1369 ]
  %1376 = phi i64 [ %1398, %1394 ], [ 0, %1369 ]
  %1377 = phi ptr [ %1397, %1394 ], [ null, %1369 ]
  %1378 = load i32, ptr %1375, align 8, !tbaa !159
  %1379 = zext i32 %1378 to i64
  %1380 = icmp ult i64 %1376, %1379
  br i1 %1380, label %1381, label %1400

1381:                                             ; preds = %1373
  %1382 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1375, i64 0, i32 2, i64 %1376
  %1383 = load i32, ptr %1382, align 8, !tbaa !161
  switch i32 %1383, label %1394 [
    i32 18, label %1403
    i32 71, label %1384
    i32 49, label %1384
  ]

1384:                                             ; preds = %1381, %1381
  %1385 = getelementptr i8, ptr %1382, i64 8
  %1386 = load i32, ptr %1385, align 8, !tbaa !163
  %1387 = icmp eq i32 %1386, 10
  br i1 %1387, label %1390, label %1388

1388:                                             ; preds = %1384
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1389 = load ptr, ptr %1370, align 8, !tbaa !157
  br label %1390

1390:                                             ; preds = %1388, %1384
  %1391 = phi ptr [ %1374, %1384 ], [ %1389, %1388 ]
  %1392 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1375, i64 0, i32 2, i64 %1376, i32 1, i32 1
  %1393 = load ptr, ptr %1392, align 8, !tbaa !17
  br label %1394

1394:                                             ; preds = %1390, %1381
  %1395 = phi ptr [ %1391, %1390 ], [ %1374, %1381 ]
  %1396 = phi ptr [ %1391, %1390 ], [ %1375, %1381 ]
  %1397 = phi ptr [ %1393, %1390 ], [ %1377, %1381 ]
  %1398 = add nuw nsw i64 %1376, 1
  %1399 = icmp eq ptr %1396, null
  br i1 %1399, label %1400, label %1373, !llvm.loop !164

1400:                                             ; preds = %1394, %1373
  %1401 = phi ptr [ %1397, %1394 ], [ %1377, %1373 ]
  %1402 = icmp eq ptr %1401, null
  br i1 %1402, label %1410, label %1366

1403:                                             ; preds = %1381
  %1404 = getelementptr i8, ptr %1382, i64 8
  %1405 = load i32, ptr %1404, align 8, !tbaa !163
  switch i32 %1405, label %1406 [
    i32 12, label %1407
    i32 13, label %1407
    i32 15, label %1407
  ]

1406:                                             ; preds = %1403
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7350, ptr noundef nonnull @.str.5) #31
  br label %1407

1407:                                             ; preds = %1406, %1403, %1403, %1403
  %1408 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1375, i64 0, i32 2, i64 %1376, i32 1, i32 1
  %1409 = load ptr, ptr %1408, align 8, !tbaa !17
  br label %1410

1410:                                             ; preds = %1400, %1369, %1366, %1407
  %1411 = phi ptr [ %1409, %1407 ], [ null, %1366 ], [ null, %1369 ], [ null, %1400 ]
  br label %1412

1412:                                             ; preds = %1446, %1410
  %1413 = phi ptr [ %1314, %1410 ], [ %1447, %1446 ]
  %1414 = icmp eq ptr %1413, null
  br i1 %1414, label %1456, label %1415

1415:                                             ; preds = %1412
  %1416 = getelementptr inbounds %struct.die_struct, ptr %1413, i64 0, i32 2
  %1417 = load ptr, ptr %1416, align 8, !tbaa !157
  %1418 = icmp eq ptr %1417, null
  br i1 %1418, label %1456, label %1419

1419:                                             ; preds = %1415, %1440
  %1420 = phi ptr [ %1441, %1440 ], [ %1417, %1415 ]
  %1421 = phi ptr [ %1442, %1440 ], [ %1417, %1415 ]
  %1422 = phi i64 [ %1444, %1440 ], [ 0, %1415 ]
  %1423 = phi ptr [ %1443, %1440 ], [ null, %1415 ]
  %1424 = load i32, ptr %1421, align 8, !tbaa !159
  %1425 = zext i32 %1424 to i64
  %1426 = icmp ult i64 %1422, %1425
  br i1 %1426, label %1427, label %1446

1427:                                             ; preds = %1419
  %1428 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1421, i64 0, i32 2, i64 %1422
  %1429 = load i32, ptr %1428, align 8, !tbaa !161
  switch i32 %1429, label %1440 [
    i32 17, label %1449
    i32 71, label %1430
    i32 49, label %1430
  ]

1430:                                             ; preds = %1427, %1427
  %1431 = getelementptr i8, ptr %1428, i64 8
  %1432 = load i32, ptr %1431, align 8, !tbaa !163
  %1433 = icmp eq i32 %1432, 10
  br i1 %1433, label %1436, label %1434

1434:                                             ; preds = %1430
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1435 = load ptr, ptr %1416, align 8, !tbaa !157
  br label %1436

1436:                                             ; preds = %1434, %1430
  %1437 = phi ptr [ %1420, %1430 ], [ %1435, %1434 ]
  %1438 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1421, i64 0, i32 2, i64 %1422, i32 1, i32 1
  %1439 = load ptr, ptr %1438, align 8, !tbaa !17
  br label %1440

1440:                                             ; preds = %1436, %1427
  %1441 = phi ptr [ %1437, %1436 ], [ %1420, %1427 ]
  %1442 = phi ptr [ %1437, %1436 ], [ %1421, %1427 ]
  %1443 = phi ptr [ %1439, %1436 ], [ %1423, %1427 ]
  %1444 = add nuw nsw i64 %1422, 1
  %1445 = icmp eq ptr %1442, null
  br i1 %1445, label %1446, label %1419, !llvm.loop !164

1446:                                             ; preds = %1440, %1419
  %1447 = phi ptr [ %1443, %1440 ], [ %1423, %1419 ]
  %1448 = icmp eq ptr %1447, null
  br i1 %1448, label %1456, label %1412

1449:                                             ; preds = %1427
  %1450 = getelementptr i8, ptr %1428, i64 8
  %1451 = load i32, ptr %1450, align 8, !tbaa !163
  switch i32 %1451, label %1452 [
    i32 12, label %1453
    i32 13, label %1453
    i32 15, label %1453
  ]

1452:                                             ; preds = %1449
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7350, ptr noundef nonnull @.str.5) #31
  br label %1453

1453:                                             ; preds = %1452, %1449, %1449, %1449
  %1454 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1421, i64 0, i32 2, i64 %1422, i32 1, i32 1
  %1455 = load ptr, ptr %1454, align 8, !tbaa !17
  br label %1456

1456:                                             ; preds = %1446, %1415, %1412, %1453
  %1457 = phi ptr [ %1455, %1453 ], [ null, %1412 ], [ null, %1415 ], [ null, %1446 ]
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef %1411, ptr noundef %1457, ptr noundef nonnull @.str.581) #31
  br label %1563

1458:                                             ; preds = %1319, %1490
  %1459 = phi ptr [ %1491, %1490 ], [ %1314, %1319 ]
  %1460 = getelementptr inbounds %struct.die_struct, ptr %1459, i64 0, i32 2
  %1461 = load ptr, ptr %1460, align 8, !tbaa !157
  %1462 = icmp eq ptr %1461, null
  br i1 %1462, label %1493, label %1463

1463:                                             ; preds = %1458, %1484
  %1464 = phi ptr [ %1485, %1484 ], [ %1461, %1458 ]
  %1465 = phi ptr [ %1486, %1484 ], [ %1461, %1458 ]
  %1466 = phi i64 [ %1488, %1484 ], [ 0, %1458 ]
  %1467 = phi ptr [ %1487, %1484 ], [ null, %1458 ]
  %1468 = load i32, ptr %1465, align 8, !tbaa !159
  %1469 = zext i32 %1468 to i64
  %1470 = icmp ult i64 %1466, %1469
  br i1 %1470, label %1471, label %1490

1471:                                             ; preds = %1463
  %1472 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1465, i64 0, i32 2, i64 %1466
  %1473 = load i32, ptr %1472, align 8, !tbaa !161
  switch i32 %1473, label %1484 [
    i32 2, label %1494
    i32 71, label %1474
    i32 49, label %1474
  ]

1474:                                             ; preds = %1471, %1471
  %1475 = getelementptr i8, ptr %1472, i64 8
  %1476 = load i32, ptr %1475, align 8, !tbaa !163
  %1477 = icmp eq i32 %1476, 10
  br i1 %1477, label %1480, label %1478

1478:                                             ; preds = %1474
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1479 = load ptr, ptr %1460, align 8, !tbaa !157
  br label %1480

1480:                                             ; preds = %1478, %1474
  %1481 = phi ptr [ %1464, %1474 ], [ %1479, %1478 ]
  %1482 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1465, i64 0, i32 2, i64 %1466, i32 1, i32 1
  %1483 = load ptr, ptr %1482, align 8, !tbaa !17
  br label %1484

1484:                                             ; preds = %1480, %1471
  %1485 = phi ptr [ %1481, %1480 ], [ %1464, %1471 ]
  %1486 = phi ptr [ %1481, %1480 ], [ %1465, %1471 ]
  %1487 = phi ptr [ %1483, %1480 ], [ %1467, %1471 ]
  %1488 = add nuw nsw i64 %1466, 1
  %1489 = icmp eq ptr %1486, null
  br i1 %1489, label %1490, label %1463, !llvm.loop !164

1490:                                             ; preds = %1484, %1463
  %1491 = phi ptr [ %1487, %1484 ], [ %1467, %1463 ]
  %1492 = icmp eq ptr %1491, null
  br i1 %1492, label %1493, label %1458

1493:                                             ; preds = %1490, %1458
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 11004, ptr noundef nonnull @.str.5) #31
  br label %1501

1494:                                             ; preds = %1471
  %1495 = getelementptr i8, ptr %1472, i64 8
  %1496 = load i32, ptr %1495, align 8, !tbaa !163
  %1497 = icmp eq i32 %1496, 2
  br i1 %1497, label %1503, label %1498

1498:                                             ; preds = %1494
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 11004, ptr noundef nonnull @.str.5) #31
  %1499 = load i32, ptr %1495, align 8, !tbaa !163
  %1500 = icmp eq i32 %1499, 2
  br i1 %1500, label %1503, label %1501

1501:                                             ; preds = %1498, %1493
  %1502 = phi ptr [ null, %1493 ], [ %1472, %1498 ]
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7199, ptr noundef nonnull @.str.5) #31
  br label %1503

1503:                                             ; preds = %1501, %1498, %1494
  %1504 = phi ptr [ %1472, %1494 ], [ %1472, %1498 ], [ %1502, %1501 ]
  %1505 = getelementptr inbounds %struct.dw_attr_struct, ptr %1504, i64 0, i32 1, i32 1
  %1506 = load ptr, ptr %1505, align 8, !tbaa !17
  %1507 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1506, i64 0, i32 1
  %1508 = load i16, ptr %1507, align 8
  %1509 = and i16 %1508, 255
  %1510 = icmp eq i16 %1509, 3
  br i1 %1510, label %1512, label %1511

1511:                                             ; preds = %1503
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 11007, ptr noundef nonnull @.str.5) #31
  br label %1512

1512:                                             ; preds = %1511, %1503
  %1513 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1506, i64 0, i32 3, i32 1
  %1514 = load ptr, ptr %1513, align 8, !tbaa !17
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr_rtx(i32 noundef 4, ptr noundef %1514, ptr noundef nonnull @.str.580) #31
  br label %1515

1515:                                             ; preds = %1549, %1512
  %1516 = phi ptr [ %1314, %1512 ], [ %1550, %1549 ]
  %1517 = icmp eq ptr %1516, null
  br i1 %1517, label %1560, label %1518

1518:                                             ; preds = %1515
  %1519 = getelementptr inbounds %struct.die_struct, ptr %1516, i64 0, i32 2
  %1520 = load ptr, ptr %1519, align 8, !tbaa !157
  %1521 = icmp eq ptr %1520, null
  br i1 %1521, label %1560, label %1522

1522:                                             ; preds = %1518, %1543
  %1523 = phi ptr [ %1544, %1543 ], [ %1520, %1518 ]
  %1524 = phi ptr [ %1545, %1543 ], [ %1520, %1518 ]
  %1525 = phi i64 [ %1547, %1543 ], [ 0, %1518 ]
  %1526 = phi ptr [ %1546, %1543 ], [ null, %1518 ]
  %1527 = load i32, ptr %1524, align 8, !tbaa !159
  %1528 = zext i32 %1527 to i64
  %1529 = icmp ult i64 %1525, %1528
  br i1 %1529, label %1530, label %1549

1530:                                             ; preds = %1522
  %1531 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1524, i64 0, i32 2, i64 %1525
  %1532 = load i32, ptr %1531, align 8, !tbaa !161
  switch i32 %1532, label %1543 [
    i32 11, label %1552
    i32 71, label %1533
    i32 49, label %1533
  ]

1533:                                             ; preds = %1530, %1530
  %1534 = getelementptr i8, ptr %1531, i64 8
  %1535 = load i32, ptr %1534, align 8, !tbaa !163
  %1536 = icmp eq i32 %1535, 10
  br i1 %1536, label %1539, label %1537

1537:                                             ; preds = %1533
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1538 = load ptr, ptr %1519, align 8, !tbaa !157
  br label %1539

1539:                                             ; preds = %1537, %1533
  %1540 = phi ptr [ %1523, %1533 ], [ %1538, %1537 ]
  %1541 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1524, i64 0, i32 2, i64 %1525, i32 1, i32 1
  %1542 = load ptr, ptr %1541, align 8, !tbaa !17
  br label %1543

1543:                                             ; preds = %1539, %1530
  %1544 = phi ptr [ %1540, %1539 ], [ %1523, %1530 ]
  %1545 = phi ptr [ %1540, %1539 ], [ %1524, %1530 ]
  %1546 = phi ptr [ %1542, %1539 ], [ %1526, %1530 ]
  %1547 = add nuw nsw i64 %1525, 1
  %1548 = icmp eq ptr %1545, null
  br i1 %1548, label %1549, label %1522, !llvm.loop !164

1549:                                             ; preds = %1543, %1522
  %1550 = phi ptr [ %1546, %1543 ], [ %1526, %1522 ]
  %1551 = icmp eq ptr %1550, null
  br i1 %1551, label %1560, label %1515

1552:                                             ; preds = %1530
  %1553 = getelementptr i8, ptr %1531, i64 8
  %1554 = load i32, ptr %1553, align 8, !tbaa !163
  %1555 = icmp eq i32 %1554, 6
  br i1 %1555, label %1557, label %1556

1556:                                             ; preds = %1552
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %1557

1557:                                             ; preds = %1556, %1552
  %1558 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1524, i64 0, i32 2, i64 %1525, i32 1, i32 1
  %1559 = load i64, ptr %1558, align 8, !tbaa !17
  br label %1560

1560:                                             ; preds = %1549, %1518, %1515, %1557
  %1561 = phi i64 [ %1559, %1557 ], [ 0, %1515 ], [ 0, %1518 ], [ 0, %1549 ]
  %1562 = and i64 %1561, 4294967295
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %1562, ptr noundef nonnull @.str.581) #31
  br label %1563

1563:                                             ; preds = %1560, %1456
  %1564 = add nuw nsw i64 %1311, 1
  %1565 = load i32, ptr @arange_table_in_use, align 4, !tbaa !21
  %1566 = zext i32 %1565 to i64
  %1567 = icmp ult i64 %1564, %1566
  br i1 %1567, label %1310, label %1568, !llvm.loop !236

1568:                                             ; preds = %1563, %1307
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef null) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef null) #31
  br label %1569

1569:                                             ; preds = %1568, %1282
  %1570 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %1571 = icmp eq i32 %1570, 0
  br i1 %1571, label %1620, label %1572

1572:                                             ; preds = %1569
  %1573 = load ptr, ptr @debug_ranges_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1573) #31
  %1574 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(ptr noundef %1574, ptr noundef nonnull @ranges_section_label) #31
  %1575 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %1576 = call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %1575)
  %1577 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %1578 = icmp eq i32 %1577, 0
  br i1 %1578, label %1620, label %1579

1579:                                             ; preds = %1572, %1614
  %1580 = phi i64 [ %1616, %1614 ], [ 0, %1572 ]
  %1581 = phi ptr [ %1615, %1614 ], [ @.str.582, %1572 ]
  %1582 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  %1583 = getelementptr inbounds %struct.dw_ranges_struct, ptr %1582, i64 %1580
  %1584 = load i32, ptr %1583, align 4, !tbaa !209
  %1585 = icmp sgt i32 %1584, 0
  br i1 %1585, label %1586, label %1596

1586:                                             ; preds = %1579
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %2) #31
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %3) #31
  %1587 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.316, i32 noundef %1584)
  %1588 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.317, i32 noundef %1584)
  %1589 = load i8, ptr @have_multiple_function_sections, align 1, !tbaa !17
  %1590 = icmp eq i8 %1589, 0
  %1591 = trunc i64 %1580 to i32
  %1592 = shl i32 %1591, 3
  br i1 %1590, label %1593, label %1594

1593:                                             ; preds = %1586
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef nonnull %2, ptr noundef nonnull @text_section_label, ptr noundef %1581, i32 noundef %1592) #31
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef nonnull %3, ptr noundef nonnull @text_section_label, ptr noundef null) #31
  br label %1595

1594:                                             ; preds = %1586
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef nonnull %2, ptr noundef %1581, i32 noundef %1592) #31
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef nonnull %3, ptr noundef null) #31
  br label %1595

1595:                                             ; preds = %1594, %1593
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %3) #31
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %2) #31
  br label %1614

1596:                                             ; preds = %1579
  %1597 = icmp slt i32 %1584, 0
  br i1 %1597, label %1598, label %1613

1598:                                             ; preds = %1596
  %1599 = load i8, ptr @have_multiple_function_sections, align 1, !tbaa !17
  %1600 = icmp eq i8 %1599, 0
  br i1 %1600, label %1601, label %1602

1601:                                             ; preds = %1598
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 11139, ptr noundef nonnull @.str.5) #31
  br label %1614

1602:                                             ; preds = %1598
  %1603 = xor i32 %1584, -1
  %1604 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %1605 = zext i32 %1603 to i64
  %1606 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %1604, i64 %1605
  %1607 = load ptr, ptr %1606, align 8, !tbaa !237
  %1608 = trunc i64 %1580 to i32
  %1609 = shl i32 %1608, 3
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %1607, ptr noundef %1581, i32 noundef %1609) #31
  %1610 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %1611 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %1610, i64 %1605, i32 1
  %1612 = load ptr, ptr %1611, align 8, !tbaa !239
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %1612, ptr noundef null) #31
  br label %1614

1613:                                             ; preds = %1596
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef null) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef null) #31
  br label %1614

1614:                                             ; preds = %1613, %1602, %1601, %1595
  %1615 = phi ptr [ null, %1595 ], [ @.str.582, %1613 ], [ %1581, %1602 ], [ %1581, %1601 ]
  %1616 = add nuw nsw i64 %1580, 1
  %1617 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %1618 = zext i32 %1617 to i64
  %1619 = icmp ult i64 %1616, %1618
  br i1 %1619, label %1579, label %1620, !llvm.loop !240

1620:                                             ; preds = %1614, %1572, %1569
  %1621 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %1622 = icmp ugt i32 %1621, 2
  br i1 %1622, label %1623, label %1625

1623:                                             ; preds = %1620
  %1624 = load ptr, ptr @debug_macinfo_section, align 8, !tbaa !6
  call void @switch_to_section(ptr noundef %1624) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 0, ptr noundef nonnull @.str.287) #31
  br label %1625

1625:                                             ; preds = %1623, %1620
  %1626 = load ptr, ptr @debug_str_hash, align 8, !tbaa !6
  %1627 = icmp eq ptr %1626, null
  br i1 %1627, label %1629, label %1628

1628:                                             ; preds = %1625
  call void @htab_traverse(ptr noundef nonnull %1626, ptr noundef nonnull @output_indirect_string, ptr noundef null) #31
  br label %1629

1629:                                             ; preds = %1628, %1625
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal void @dwarf2out_assembly_start() #13 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_define(i32 noundef %0, ptr noundef %1) #10 {
  %3 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %4 = icmp ugt i32 %3, 2
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = load ptr, ptr @debug_macinfo_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %6) #31
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 1, ptr noundef nonnull @.str.583) #31
  %7 = zext i32 %0 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %7, ptr noundef nonnull @.str.584, i32 noundef %0) #31
  tail call void (ptr, i64, ptr, ...) @dw2_asm_output_nstring(ptr noundef %1, i64 noundef -1, ptr noundef nonnull @.str.585) #31
  br label %8

8:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_undef(i32 noundef %0, ptr noundef %1) #10 {
  %3 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %4 = icmp ugt i32 %3, 2
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = load ptr, ptr @debug_macinfo_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %6) #31
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 2, ptr noundef nonnull @.str.586) #31
  %7 = zext i32 %0 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %7, ptr noundef nonnull @.str.584, i32 noundef %0) #31
  tail call void (ptr, i64, ptr, ...) @dw2_asm_output_nstring(ptr noundef %1, i64 noundef -1, ptr noundef nonnull @.str.585) #31
  br label %8

8:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_start_source_file(i32 noundef %0, ptr noundef %1) #10 {
  %3 = load i32, ptr @flag_eliminate_dwarf2_dups, align 4, !tbaa !21
  %4 = icmp ne i32 %3, 0
  %5 = load i32, ptr @dwarf_version, align 4
  %6 = icmp slt i32 %5, 4
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %10 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 16644, ptr %10, align 8, !tbaa !185
  %11 = icmp eq ptr %9, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  %13 = icmp eq ptr %10, %9
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %15

15:                                               ; preds = %14, %12
  %16 = getelementptr inbounds %struct.die_struct, ptr %10, i64 0, i32 3
  store ptr %9, ptr %16, align 8, !tbaa !174
  %17 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 4
  %18 = load ptr, ptr %17, align 8, !tbaa !175
  %19 = icmp eq ptr %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.die_struct, ptr %18, i64 0, i32 5
  %22 = load ptr, ptr %21, align 8, !tbaa !176
  %23 = getelementptr inbounds %struct.die_struct, ptr %10, i64 0, i32 5
  store ptr %22, ptr %23, align 8, !tbaa !176
  br label %26

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.die_struct, ptr %10, i64 0, i32 5
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi ptr [ %25, %24 ], [ %21, %20 ]
  store ptr %10, ptr %27, align 8, !tbaa !176
  store ptr %10, ptr %17, align 8, !tbaa !175
  br label %33

28:                                               ; preds = %8
  %29 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %10, ptr %29, align 8, !tbaa !173
  %30 = getelementptr inbounds %struct.limbo_die_struct, ptr %29, i64 0, i32 1
  store ptr null, ptr %30, align 8, !tbaa !177
  %31 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.limbo_die_struct, ptr %29, i64 0, i32 2
  store ptr %31, ptr %32, align 8, !tbaa !171
  store ptr %29, ptr @limbo_die_list, align 8, !tbaa !6
  br label %33

33:                                               ; preds = %26, %28
  %34 = tail call ptr @remap_debug_filename(ptr noundef %1) #31
  tail call fastcc void @add_AT_string(ptr noundef nonnull %10, i32 noundef 3, ptr noundef %34)
  br label %35

35:                                               ; preds = %33, %2
  %36 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %37 = icmp ugt i32 %36, 2
  br i1 %37, label %38, label %83

38:                                               ; preds = %35
  %39 = load ptr, ptr @file_table_last_lookup, align 8, !tbaa !6
  %40 = icmp eq ptr %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = load ptr, ptr %39, align 8, !tbaa !124
  %43 = icmp eq ptr %42, %1
  br i1 %43, label %56, label %44

44:                                               ; preds = %41
  %45 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %42, ptr noundef nonnull dereferenceable(1) %1)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %44, %38
  %48 = load ptr, ptr @file_table, align 8, !tbaa !6
  %49 = tail call i32 @htab_hash_string(ptr noundef %1) #31
  %50 = tail call ptr @htab_find_slot_with_hash(ptr noundef %48, ptr noundef %1, i32 noundef %49, i32 noundef 1) #31
  %51 = load ptr, ptr %50, align 8, !tbaa !6
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = tail call ptr @ggc_alloc_stat(i64 noundef 16) #31
  store ptr %1, ptr %54, align 8, !tbaa !124
  %55 = getelementptr inbounds %struct.dwarf_file_data, ptr %54, i64 0, i32 1
  store i32 0, ptr %55, align 8, !tbaa !126
  store ptr %54, ptr %50, align 8, !tbaa !6
  br label %56

56:                                               ; preds = %41, %44, %47, %53
  %57 = phi ptr [ %54, %53 ], [ %51, %47 ], [ %39, %44 ], [ %39, %41 ]
  %58 = getelementptr inbounds %struct.dwarf_file_data, ptr %57, i64 0, i32 1
  %59 = load i32, ptr %58, align 8, !tbaa !126
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %78

61:                                               ; preds = %56
  %62 = load ptr, ptr @last_emitted_file, align 8, !tbaa !6
  %63 = icmp eq ptr %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.dwarf_file_data, ptr %62, i64 0, i32 1
  %66 = load i32, ptr %65, align 8, !tbaa !126
  %67 = add nsw i32 %66, 1
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i32 [ %67, %64 ], [ 1, %61 ]
  store i32 %69, ptr %58, align 8, !tbaa !126
  store ptr %57, ptr @last_emitted_file, align 8, !tbaa !6
  %70 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %71 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %70, ptr noundef nonnull @.str.187, i32 noundef %69)
  %72 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %73 = load ptr, ptr %57, align 8, !tbaa !124
  %74 = tail call ptr @remap_debug_filename(ptr noundef %73) #31
  tail call void @output_quoted_string(ptr noundef %72, ptr noundef %74) #31
  %75 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %76 = tail call i32 @fputc(i32 noundef 10, ptr noundef %75)
  %77 = load i32, ptr %58, align 8, !tbaa !126
  br label %78

78:                                               ; preds = %56, %68
  %79 = phi i32 [ %77, %68 ], [ %59, %56 ]
  %80 = load ptr, ptr @debug_macinfo_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %80) #31
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 3, ptr noundef nonnull @.str.587) #31
  %81 = zext i32 %0 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %81, ptr noundef nonnull @.str.588, i32 noundef %0) #31
  %82 = sext i32 %79 to i64
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %82, ptr noundef nonnull @.str.589, ptr noundef %1) #31
  br label %83

83:                                               ; preds = %78, %35
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_end_source_file(i32 %0) #10 {
  %2 = load i32, ptr @flag_eliminate_dwarf2_dups, align 4, !tbaa !21
  %3 = icmp ne i32 %2, 0
  %4 = load i32, ptr @dwarf_version, align 4
  %5 = icmp slt i32 %4, 4
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %32

7:                                                ; preds = %1
  %8 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %9 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 16645, ptr %9, align 8, !tbaa !185
  %10 = icmp eq ptr %8, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = icmp eq ptr %9, %8
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %14

14:                                               ; preds = %13, %11
  %15 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 3
  store ptr %8, ptr %15, align 8, !tbaa !174
  %16 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !175
  %18 = icmp eq ptr %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.die_struct, ptr %17, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !176
  %22 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  store ptr %21, ptr %22, align 8, !tbaa !176
  br label %25

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi ptr [ %24, %23 ], [ %20, %19 ]
  store ptr %9, ptr %26, align 8, !tbaa !176
  store ptr %9, ptr %16, align 8, !tbaa !175
  br label %32

27:                                               ; preds = %7
  %28 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %9, ptr %28, align 8, !tbaa !173
  %29 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 1
  store ptr null, ptr %29, align 8, !tbaa !177
  %30 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !171
  store ptr %28, ptr @limbo_die_list, align 8, !tbaa !6
  br label %32

32:                                               ; preds = %27, %25, %1
  %33 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %34 = icmp ugt i32 %33, 2
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = load ptr, ptr @debug_macinfo_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %36) #31
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.590) #31
  br label %37

37:                                               ; preds = %35, %32
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_begin_block(i32 %0, i32 noundef %1) #10 {
  %3 = tail call ptr @current_function_section() #31
  tail call void @switch_to_section(ptr noundef %3) #31
  %4 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %5 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %6 = zext i32 %1 to i64
  tail call void %4(ptr noundef %5, ptr noundef nonnull @.str.316, i64 noundef %6) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_end_block(i32 %0, i32 noundef %1) #10 {
  %3 = tail call ptr @current_function_section() #31
  tail call void @switch_to_section(ptr noundef %3) #31
  %4 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %5 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %6 = zext i32 %1 to i64
  tail call void %4(ptr noundef %5, ptr noundef nonnull @.str.317, i64 noundef %6) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal zeroext i8 @dwarf2out_ignore_block(ptr nocapture noundef readonly %0) #10 {
  %2 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %62, %1
  %6 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 4
  br label %66

7:                                                ; preds = %1, %62
  %8 = phi ptr [ %64, %62 ], [ %3, %1 ]
  %9 = load i64, ptr %8, align 8
  %10 = trunc i64 %9 to i16
  switch i16 %10, label %62 [
    i16 29, label %134
    i16 35, label %11
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.tree_decl_minimal, ptr %8, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %134, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.tree_decl_common, ptr %8, i64 0, i32 2
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 4096
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %62, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = load i64, ptr %22, align 8
  %24 = freeze i64 %23
  %25 = and i64 %24, 65534
  %26 = icmp eq i64 %25, 16
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = trunc i64 %24 to i16
  switch i16 %28, label %62 [
    i16 18, label %29
    i16 6, label %29
  ]

29:                                               ; preds = %27, %27, %20
  %30 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = icmp eq ptr %8, %31
  br i1 %32, label %134, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.tree_decl_common, ptr %8, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %62, label %37

37:                                               ; preds = %33
  %38 = and i64 %9, 65535
  %39 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %38, i64 10
  %40 = load i8, ptr %39, align 2, !tbaa !17
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = and i64 %17, 2048
  %44 = icmp ne i64 %43, 0
  %45 = icmp eq ptr %35, %8
  %46 = and i1 %44, %45
  br i1 %46, label %58, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.tree_decl_common, ptr %35, i64 0, i32 7
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = icmp eq ptr %49, null
  %51 = icmp eq ptr %49, %35
  %52 = or i1 %50, %51
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %54 = load ptr, ptr %34, align 8, !tbaa !17
  %55 = load ptr, ptr %21, align 8, !tbaa !17
  %56 = getelementptr inbounds %struct.tree_common, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %37, %42, %47, %53
  %59 = phi ptr [ %31, %37 ], [ %31, %47 ], [ %57, %53 ], [ %31, %42 ]
  %60 = phi ptr [ null, %37 ], [ %35, %47 ], [ %54, %53 ], [ null, %42 ]
  %61 = icmp eq ptr %60, %59
  br i1 %61, label %134, label %62

62:                                               ; preds = %27, %7, %15, %33, %58
  %63 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %5, label %7, !llvm.loop !241

66:                                               ; preds = %5, %132
  %67 = phi i64 [ 0, %5 ], [ %133, %132 ]
  %68 = load ptr, ptr %6, align 8, !tbaa !17
  %69 = icmp eq ptr %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = load i32, ptr %68, align 8, !tbaa !182
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ 0, %66 ]
  %74 = zext i32 %73 to i64
  %75 = icmp ult i64 %67, %74
  br i1 %75, label %76, label %134

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.VEC_tree_base, ptr %68, i64 0, i32 2, i64 %67
  %78 = load ptr, ptr %77, align 8, !tbaa !6
  %79 = load i64, ptr %78, align 8
  %80 = trunc i64 %79 to i16
  switch i16 %80, label %132 [
    i16 29, label %134
    i16 35, label %81
  ]

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.tree_decl_minimal, ptr %78, i64 0, i32 3
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = icmp eq ptr %83, null
  br i1 %84, label %134, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.tree_decl_common, ptr %78, i64 0, i32 2
  %87 = load i64, ptr %86, align 8
  %88 = and i64 %87, 4096
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %132, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.tree_common, ptr %78, i64 0, i32 2
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = load i64, ptr %92, align 8
  %94 = freeze i64 %93
  %95 = and i64 %94, 65534
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  %98 = trunc i64 %94 to i16
  switch i16 %98, label %132 [
    i16 18, label %99
    i16 6, label %99
  ]

99:                                               ; preds = %97, %97, %90
  %100 = getelementptr inbounds %struct.tree_common, ptr %92, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = icmp eq ptr %78, %101
  br i1 %102, label %134, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.tree_decl_common, ptr %78, i64 0, i32 7
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = icmp eq ptr %105, null
  br i1 %106, label %132, label %107

107:                                              ; preds = %103
  %108 = and i64 %79, 65535
  %109 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %108, i64 10
  %110 = load i8, ptr %109, align 2, !tbaa !17
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %128, label %112

112:                                              ; preds = %107
  %113 = and i64 %87, 2048
  %114 = icmp ne i64 %113, 0
  %115 = icmp eq ptr %105, %78
  %116 = and i1 %114, %115
  br i1 %116, label %128, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.tree_decl_common, ptr %105, i64 0, i32 7
  %119 = load ptr, ptr %118, align 8, !tbaa !17
  %120 = icmp eq ptr %119, null
  %121 = icmp eq ptr %119, %105
  %122 = or i1 %120, %121
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %124 = load ptr, ptr %104, align 8, !tbaa !17
  %125 = load ptr, ptr %91, align 8, !tbaa !17
  %126 = getelementptr inbounds %struct.tree_common, ptr %125, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  br label %128

128:                                              ; preds = %107, %112, %117, %123
  %129 = phi ptr [ %101, %107 ], [ %101, %117 ], [ %127, %123 ], [ %101, %112 ]
  %130 = phi ptr [ null, %107 ], [ %105, %117 ], [ %124, %123 ], [ null, %112 ]
  %131 = icmp eq ptr %130, %129
  br i1 %131, label %134, label %132

132:                                              ; preds = %97, %76, %85, %103, %128
  %133 = add nuw nsw i64 %67, 1
  br label %66, !llvm.loop !242

134:                                              ; preds = %11, %29, %58, %7, %72, %81, %99, %128, %76
  %135 = phi i8 [ 1, %72 ], [ 0, %81 ], [ 0, %99 ], [ 0, %128 ], [ 0, %76 ], [ 0, %7 ], [ 0, %58 ], [ 0, %29 ], [ 0, %11 ]
  ret i8 %135
}

declare void @debug_nothing_int_charstar(i32 noundef, ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_begin_function(ptr noundef %0) #10 {
  %2 = tail call ptr @function_section(ptr noundef %0) #31
  %3 = load ptr, ptr @text_section, align 8, !tbaa !6
  %4 = icmp eq ptr %2, %3
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i8 1, ptr @have_multiple_function_sections, align 1, !tbaa !17
  br label %6

6:                                                ; preds = %5, %1
  %7 = tail call ptr @current_function_section() #31
  %8 = load ptr, ptr @text_section, align 8, !tbaa !6
  %9 = icmp eq ptr %7, %8
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = load ptr, ptr @cold_text_section, align 8, !tbaa !6
  %12 = icmp eq ptr %7, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %10, %6
  %14 = phi ptr [ @text_section_used, %6 ], [ @cold_text_section_used, %10 ]
  store i8 1, ptr %14, align 1, !tbaa !17
  br label %15

15:                                               ; preds = %10, %13
  ret void
}

declare void @debug_nothing_int(i32 noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_function_decl(ptr noundef %0) #10 {
  tail call void @dwarf2out_decl(ptr noundef %0)
  %2 = load ptr, ptr @decl_loc_table, align 8, !tbaa !6
  tail call void @htab_empty(ptr noundef %2) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_global_decl(ptr noundef %0) #10 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 29
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %5, %1
  tail call void @dwarf2out_decl(ptr noundef nonnull %0)
  br label %10

10:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_type_decl(ptr noundef %0, i32 noundef %1) #10 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @dwarf2out_decl(ptr noundef %0)
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_imported_module_or_decl(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3) #10 {
  %5 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %50, label %7

7:                                                ; preds = %4
  %8 = icmp eq ptr %0, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19838, ptr noundef nonnull @.str.5) #31
  br label %10

10:                                               ; preds = %7, %9
  %11 = icmp eq ptr %2, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = load i64, ptr %2, align 8
  %14 = and i64 %13, 65535
  %15 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %14
  %16 = load i32, ptr %15, align 4, !tbaa !17
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = tail call zeroext i8 @should_emit_struct_debug(ptr noundef nonnull %2, i32 noundef 1) #31
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %50, label %21

21:                                               ; preds = %18, %12, %10
  %22 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %23 = icmp slt i32 %22, 3
  %24 = load i32, ptr @dwarf_strict, align 4
  %25 = icmp ne i32 %24, 0
  %26 = select i1 %23, i1 %25, i1 false
  br i1 %26, label %50, label %27

27:                                               ; preds = %21
  %28 = tail call fastcc ptr @get_context_die(ptr noundef %2)
  %29 = icmp eq i8 %3, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.die_struct, ptr %28, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !175
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19858, ptr noundef nonnull @.str.5) #31
  %35 = load ptr, ptr %31, align 8, !tbaa !175
  br label %36

36:                                               ; preds = %30, %34
  %37 = phi ptr [ %32, %30 ], [ %35, %34 ]
  %38 = load i32, ptr %37, align 8, !tbaa !185
  %39 = icmp eq i32 %38, 58
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19859, ptr noundef nonnull @.str.5) #31
  br label %41

41:                                               ; preds = %36, %40
  %42 = load i64, ptr %0, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 38
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19860, ptr noundef nonnull @.str.5) #31
  br label %46

46:                                               ; preds = %41, %45
  %47 = load ptr, ptr %31, align 8, !tbaa !175
  br label %48

48:                                               ; preds = %46, %27
  %49 = phi ptr [ %47, %46 ], [ %28, %27 ]
  tail call fastcc void @dwarf2out_imported_module_or_decl_1(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %49)
  br label %50

50:                                               ; preds = %21, %18, %4, %48
  ret void
}

declare void @debug_nothing_tree(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_abstract_function(ptr noundef %0) #10 {
  %2 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = icmp eq ptr %3, null
  %5 = select i1 %4, ptr %0, ptr %3
  %6 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !17
  %9 = tail call ptr @htab_find_with_hash(ptr noundef %6, ptr noundef %5, i32 noundef %8) #31
  %10 = icmp eq ptr %9, null
  br i1 %10, label %46, label %11

11:                                               ; preds = %1, %43
  %12 = phi ptr [ %44, %43 ], [ %9, %1 ]
  %13 = getelementptr inbounds %struct.die_struct, ptr %12, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !157
  %15 = icmp eq ptr %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %11, %37
  %17 = phi ptr [ %38, %37 ], [ %14, %11 ]
  %18 = phi ptr [ %39, %37 ], [ %14, %11 ]
  %19 = phi i64 [ %41, %37 ], [ 0, %11 ]
  %20 = phi ptr [ %40, %37 ], [ null, %11 ]
  %21 = load i32, ptr %18, align 8, !tbaa !159
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %24, label %43

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %18, i64 0, i32 2, i64 %19
  %26 = load i32, ptr %25, align 8, !tbaa !161
  switch i32 %26, label %37 [
    i32 32, label %95
    i32 71, label %27
    i32 49, label %27
  ]

27:                                               ; preds = %24, %24
  %28 = getelementptr i8, ptr %25, i64 8
  %29 = load i32, ptr %28, align 8, !tbaa !163
  %30 = icmp eq i32 %29, 10
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %32 = load ptr, ptr %13, align 8, !tbaa !157
  br label %33

33:                                               ; preds = %31, %27
  %34 = phi ptr [ %17, %27 ], [ %32, %31 ]
  %35 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %18, i64 0, i32 2, i64 %19, i32 1, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  br label %37

37:                                               ; preds = %24, %33
  %38 = phi ptr [ %34, %33 ], [ %17, %24 ]
  %39 = phi ptr [ %34, %33 ], [ %18, %24 ]
  %40 = phi ptr [ %36, %33 ], [ %20, %24 ]
  %41 = add nuw nsw i64 %19, 1
  %42 = icmp eq ptr %39, null
  br i1 %42, label %43, label %16, !llvm.loop !164

43:                                               ; preds = %37, %16
  %44 = phi ptr [ %40, %37 ], [ %20, %16 ]
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %11

46:                                               ; preds = %11, %43, %1
  %47 = load ptr, ptr @decl_loc_table, align 8, !tbaa !6
  store ptr null, ptr @decl_loc_table, align 8, !tbaa !6
  %48 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %49 = icmp ugt i32 %48, 1
  br i1 %49, label %50, label %85

50:                                               ; preds = %46
  %51 = load i64, ptr %5, align 8
  %52 = and i64 %51, 65535
  %53 = icmp eq i64 %52, 29
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.tree_decl_non_common, ptr %5, i64 0, i32 4
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %54, %50
  %59 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 4
  br label %70

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.tree_type, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = getelementptr inbounds %struct.tree_list, ptr %64, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = getelementptr inbounds %struct.tree_common, ptr %66, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = getelementptr inbounds %struct.tree_type, ptr %68, i64 0, i32 16
  br label %70

70:                                               ; preds = %60, %58
  %71 = phi ptr [ %59, %58 ], [ %69, %60 ]
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = icmp eq ptr %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %70
  %75 = load i64, ptr %72, align 8
  %76 = and i64 %75, 65535
  %77 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %76
  %78 = load i32, ptr %77, align 4, !tbaa !17
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %80, label %85

80:                                               ; preds = %74
  %81 = tail call ptr @decl_function_context(ptr noundef nonnull %5) #31
  %82 = icmp eq ptr %81, null
  %83 = load ptr, ptr @comp_unit_die, align 8
  %84 = select i1 %82, ptr %83, ptr null
  tail call fastcc void @gen_type_die_for_member(ptr noundef nonnull %72, ptr noundef nonnull %5, ptr noundef %84)
  br label %85

85:                                               ; preds = %70, %74, %80, %46
  %86 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  store ptr %5, ptr @current_function_decl, align 8, !tbaa !6
  %87 = getelementptr inbounds %struct.tree_function_decl, ptr %5, i64 0, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  tail call void @push_cfun(ptr noundef %88) #31
  %89 = getelementptr inbounds %struct.tree_decl_common, ptr %5, i64 0, i32 2
  %90 = load i64, ptr %89, align 8
  tail call void @set_decl_abstract_flags(ptr noundef %5, i32 noundef 1) #31
  tail call void @dwarf2out_decl(ptr noundef %5)
  %91 = and i64 %90, 2048
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %85
  tail call void @set_decl_abstract_flags(ptr noundef nonnull %5, i32 noundef 0) #31
  br label %94

94:                                               ; preds = %93, %85
  store ptr %86, ptr @current_function_decl, align 8, !tbaa !6
  store ptr %47, ptr @decl_loc_table, align 8, !tbaa !6
  tail call void @pop_cfun() #31
  br label %95

95:                                               ; preds = %24, %94
  ret void
}

declare void @debug_nothing_rtx(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_var_location(ptr noundef %0) #10 {
  %2 = alloca [32 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #31
  %3 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.rtx_def, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %8
  %10 = load i32, ptr %9, align 4, !tbaa !17
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %105

12:                                               ; preds = %1
  %13 = tail call ptr @next_real_insn(ptr noundef nonnull %0) #31
  %14 = icmp eq ptr %13, null
  br i1 %14, label %105, label %15

15:                                               ; preds = %12
  %16 = load ptr, ptr %3, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.rtx_def, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !17
  %21 = load ptr, ptr @decl_loc_table, align 8, !tbaa !6
  %22 = tail call ptr @htab_find_slot_with_hash(ptr noundef %21, ptr noundef %18, i32 noundef %20, i32 noundef 1) #31
  %23 = load ptr, ptr %22, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %15
  %26 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  %27 = getelementptr inbounds %struct.var_loc_list_def, ptr %26, i64 0, i32 2
  store i32 %20, ptr %27, align 8, !tbaa !243
  store ptr %26, ptr %22, align 8, !tbaa !6
  br label %28

28:                                               ; preds = %25, %15
  %29 = phi ptr [ %26, %25 ], [ %23, %15 ]
  %30 = getelementptr inbounds %struct.var_loc_list_def, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !245
  %32 = icmp eq ptr %31, null
  br i1 %32, label %63, label %33

33:                                               ; preds = %28
  %34 = load ptr, ptr %31, align 8, !tbaa !246
  %35 = getelementptr inbounds %struct.rtx_def, ptr %34, i64 0, i32 1, i32 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.rtx_def, ptr %36, i64 0, i32 1, i32 0, i32 0, i64 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = load ptr, ptr %3, align 8, !tbaa !17
  %40 = getelementptr inbounds %struct.rtx_def, ptr %39, i64 0, i32 1, i32 0, i32 0, i64 1
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = tail call i32 @rtx_equal_p(ptr noundef %38, ptr noundef %41) #31
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %33
  %45 = load ptr, ptr %30, align 8, !tbaa !245
  %46 = load ptr, ptr %45, align 8, !tbaa !246
  %47 = getelementptr inbounds %struct.rtx_def, ptr %46, i64 0, i32 1, i32 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.rtx_def, ptr %48, i64 0, i32 1, i32 0, i32 0, i64 2
  %50 = load i32, ptr %49, align 8, !tbaa !17
  %51 = load ptr, ptr %3, align 8, !tbaa !17
  %52 = getelementptr inbounds %struct.rtx_def, ptr %51, i64 0, i32 1, i32 0, i32 0, i64 2
  %53 = load i32, ptr %52, align 8, !tbaa !17
  %54 = icmp eq i32 %50, %53
  br i1 %54, label %105, label %55

55:                                               ; preds = %44
  %56 = icmp eq i32 %50, 1
  %57 = icmp eq i32 %53, 1
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %105

59:                                               ; preds = %55, %33
  %60 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  %61 = load ptr, ptr %30, align 8, !tbaa !245
  %62 = getelementptr inbounds %struct.var_loc_node, ptr %61, i64 0, i32 2
  store ptr %60, ptr %62, align 8, !tbaa !248
  br label %65

63:                                               ; preds = %28
  %64 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %64, ptr %29, align 8, !tbaa !249
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi ptr [ %60, %59 ], [ %64, %63 ]
  store ptr %66, ptr %30, align 8, !tbaa !245
  %67 = icmp eq ptr %66, null
  br i1 %67, label %105, label %68

68:                                               ; preds = %65
  %69 = load ptr, ptr @last_var_location_insn, align 8, !tbaa !6
  %70 = icmp ne ptr %69, null
  %71 = icmp eq ptr %69, %13
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %68
  %74 = load i8, ptr @dwarf2out_var_location.last_in_cold_section_p, align 1, !tbaa !17
  %75 = load i8, ptr @in_cold_section_p, align 1, !tbaa !17
  %76 = icmp eq i8 %74, %75
  br i1 %76, label %87, label %77

77:                                               ; preds = %68, %73
  %78 = load i32, ptr @loclabel_num, align 4, !tbaa !21
  %79 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.591, i32 noundef %78)
  %80 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %81 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %82 = load i32, ptr @loclabel_num, align 4, !tbaa !21
  %83 = zext i32 %82 to i64
  tail call void %80(ptr noundef %81, ptr noundef nonnull @.str.591, i64 noundef %83) #31
  %84 = load i32, ptr @loclabel_num, align 4, !tbaa !21
  %85 = add i32 %84, 1
  store i32 %85, ptr @loclabel_num, align 4, !tbaa !21
  %86 = call ptr @ggc_alloc_string(ptr noundef nonnull %2, i32 noundef -1) #31
  store ptr %86, ptr @dwarf2out_var_location.last_label, align 8, !tbaa !6
  store ptr null, ptr @dwarf2out_var_location.last_postcall_label, align 8, !tbaa !6
  br label %87

87:                                               ; preds = %77, %73
  store ptr %0, ptr %66, align 8, !tbaa !246
  %88 = getelementptr inbounds %struct.var_loc_node, ptr %66, i64 0, i32 2
  store ptr null, ptr %88, align 8, !tbaa !248
  %89 = load i32, ptr %0, align 8
  %90 = and i32 %89, 33554432
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = load ptr, ptr @dwarf2out_var_location.last_label, align 8, !tbaa !6
  br label %101

94:                                               ; preds = %87
  %95 = load ptr, ptr @dwarf2out_var_location.last_postcall_label, align 8, !tbaa !6
  %96 = icmp eq ptr %95, null
  br i1 %96, label %97, label %101

97:                                               ; preds = %94
  %98 = load ptr, ptr @dwarf2out_var_location.last_label, align 8, !tbaa !6
  %99 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.592, ptr noundef %98)
  %100 = call ptr @ggc_alloc_string(ptr noundef nonnull %2, i32 noundef -1) #31
  store ptr %100, ptr @dwarf2out_var_location.last_postcall_label, align 8, !tbaa !6
  br label %101

101:                                              ; preds = %94, %97, %92
  %102 = phi ptr [ %93, %92 ], [ %100, %97 ], [ %95, %94 ]
  %103 = getelementptr inbounds %struct.var_loc_node, ptr %66, i64 0, i32 1
  store ptr %102, ptr %103, align 8, !tbaa !250
  store ptr %13, ptr @last_var_location_insn, align 8, !tbaa !6
  %104 = load i8, ptr @in_cold_section_p, align 1, !tbaa !17
  store i8 %104, ptr @dwarf2out_var_location.last_in_cold_section_p, align 1, !tbaa !17
  br label %105

105:                                              ; preds = %55, %44, %65, %12, %1, %101
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_direct_call(ptr noundef %0) #10 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %3, i64 10
  %5 = load i8, ptr %4, align 2, !tbaa !17
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 2048
  %11 = icmp ne i64 %10, 0
  %12 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, %0
  %15 = select i1 %11, i1 %14, i1 false
  br i1 %15, label %26, label %16

16:                                               ; preds = %7
  %17 = icmp eq ptr %13, null
  %18 = select i1 %17, ptr %0, ptr %13
  %19 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  %22 = icmp eq ptr %20, %18
  %23 = or i1 %21, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %25 = load ptr, ptr %12, align 8, !tbaa !17
  br label %26

26:                                               ; preds = %1, %7, %16, %24
  %27 = phi ptr [ null, %1 ], [ %13, %16 ], [ %25, %24 ], [ null, %7 ]
  %28 = icmp eq ptr %27, null
  %29 = select i1 %28, ptr %0, ptr %27
  %30 = load i32, ptr @poc_label_num, align 4, !tbaa !21
  %31 = add i32 %30, 1
  store i32 %31, ptr @poc_label_num, align 4, !tbaa !21
  %32 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %33 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %29)
  %34 = load ptr, ptr @dcall_table, align 8, !tbaa !6
  %35 = icmp eq ptr %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %34, i64 0, i32 1
  %38 = load i32, ptr %37, align 4, !tbaa !251
  %39 = load i32, ptr %34, align 8, !tbaa !220
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %36, %26
  %42 = tail call ptr @vec_gc_o_reserve(ptr noundef %34, i32 noundef 1, i64 noundef 8, i64 noundef 24) #31
  store ptr %42, ptr @dcall_table, align 8, !tbaa !6
  %43 = load i32, ptr %42, align 8, !tbaa !220
  br label %44

44:                                               ; preds = %36, %41
  %45 = phi i32 [ %39, %36 ], [ %43, %41 ]
  %46 = phi ptr [ %34, %36 ], [ %42, %41 ]
  %47 = add i32 %45, 1
  store i32 %47, ptr %46, align 8, !tbaa !220
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %46, i64 0, i32 2, i64 %48
  store i32 %30, ptr %49, align 8, !tbaa.struct !252
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  store ptr %32, ptr %50, align 8, !tbaa.struct !253
  %51 = getelementptr inbounds i8, ptr %49, i64 16
  store ptr %33, ptr %51, align 8, !tbaa.struct !254
  %52 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %53 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %54 = zext i32 %30 to i64
  tail call void %52(ptr noundef %53, ptr noundef nonnull @.str.571, i64 noundef %54) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_virtual_call_token(ptr nocapture noundef readonly %0, i32 noundef %1) #10 {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %5

5:                                                ; preds = %39, %2
  %6 = phi ptr [ %4, %2 ], [ %40, %39 ]
  %7 = icmp eq ptr %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %73, label %12

12:                                               ; preds = %8, %33
  %13 = phi ptr [ %34, %33 ], [ %10, %8 ]
  %14 = phi ptr [ %35, %33 ], [ %10, %8 ]
  %15 = phi i64 [ %37, %33 ], [ 0, %8 ]
  %16 = phi ptr [ %36, %33 ], [ null, %8 ]
  %17 = load i32, ptr %14, align 8, !tbaa !159
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %20, label %39

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15
  %22 = load i32, ptr %21, align 8, !tbaa !161
  switch i32 %22, label %33 [
    i32 19, label %42
    i32 71, label %23
    i32 49, label %23
  ]

23:                                               ; preds = %20, %20
  %24 = getelementptr i8, ptr %21, i64 8
  %25 = load i32, ptr %24, align 8, !tbaa !163
  %26 = icmp eq i32 %25, 10
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %28 = load ptr, ptr %9, align 8, !tbaa !157
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %13, %23 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %29, %20
  %34 = phi ptr [ %30, %29 ], [ %13, %20 ]
  %35 = phi ptr [ %30, %29 ], [ %14, %20 ]
  %36 = phi ptr [ %32, %29 ], [ %16, %20 ]
  %37 = add nuw nsw i64 %15, 1
  %38 = icmp eq ptr %35, null
  br i1 %38, label %39, label %12, !llvm.loop !164

39:                                               ; preds = %33, %12
  %40 = phi ptr [ %36, %33 ], [ %16, %12 ]
  %41 = icmp eq ptr %40, null
  br i1 %41, label %73, label %5

42:                                               ; preds = %20
  %43 = getelementptr i8, ptr %21, i64 8
  %44 = load i32, ptr %43, align 8, !tbaa !163
  %45 = icmp eq i32 %44, 6
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %47

47:                                               ; preds = %42, %46
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !17
  %50 = trunc i64 %49 to i32
  switch i32 %50, label %73 [
    i32 17, label %51
    i32 4, label %51
  ]

51:                                               ; preds = %47, %47
  %52 = load i64, ptr %0, align 8
  %53 = and i64 %52, 65535
  %54 = icmp eq i64 %53, 50
  br i1 %54, label %55, label %73

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = load i64, ptr %57, align 8
  %59 = and i64 %58, 65535
  %60 = icmp eq i64 %59, 23
  br i1 %60, label %61, label %73

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.tree_int_cst, ptr %57, i64 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !17
  %64 = trunc i64 %63 to i32
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #31
  %65 = tail call ptr @ggc_alloc_stat(i64 noundef 8) #31
  store ptr %65, ptr %3, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %61
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 20263, ptr noundef nonnull @.str.5) #31
  br label %68

68:                                               ; preds = %61, %67
  store i32 %1, ptr %65, align 4, !tbaa !255
  %69 = getelementptr inbounds %struct.vcall_insn, ptr %65, i64 0, i32 1
  store i32 %64, ptr %69, align 4, !tbaa !257
  %70 = load ptr, ptr @vcall_insn_table, align 8, !tbaa !6
  %71 = call ptr @htab_find_slot_with_hash(ptr noundef %70, ptr noundef nonnull %3, i32 noundef %1, i32 noundef 1) #31
  %72 = load ptr, ptr %3, align 8, !tbaa !6
  store ptr %72, ptr %71, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #31
  br label %73

73:                                               ; preds = %5, %8, %39, %47, %55, %68, %51
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_copy_call_info(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #10 {
  %3 = alloca ptr, align 8
  %4 = alloca %struct.vcall_insn, align 4
  %5 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #31
  store i32 %6, ptr %4, align 4, !tbaa !255
  %7 = getelementptr inbounds %struct.vcall_insn, ptr %4, i64 0, i32 1
  store i32 0, ptr %7, align 4, !tbaa !257
  %8 = load ptr, ptr @vcall_insn_table, align 8, !tbaa !6
  %9 = call ptr @htab_find_with_hash(ptr noundef %8, ptr noundef nonnull %4, i32 noundef %6) #31
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #31
  br label %27

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.vcall_insn, ptr %9, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !257
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #31
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %18 = load i32, ptr %17, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #31
  %19 = call ptr @ggc_alloc_stat(i64 noundef 8) #31
  store ptr %19, ptr %3, align 8, !tbaa !6
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 20263, ptr noundef nonnull @.str.5) #31
  br label %22

22:                                               ; preds = %16, %21
  store i32 %18, ptr %19, align 4, !tbaa !255
  %23 = getelementptr inbounds %struct.vcall_insn, ptr %19, i64 0, i32 1
  store i32 %14, ptr %23, align 4, !tbaa !257
  %24 = load ptr, ptr @vcall_insn_table, align 8, !tbaa !6
  %25 = call ptr @htab_find_slot_with_hash(ptr noundef %24, ptr noundef nonnull %3, i32 noundef %18, i32 noundef 1) #31
  %26 = load ptr, ptr %3, align 8, !tbaa !6
  store ptr %26, ptr %25, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #31
  br label %27

27:                                               ; preds = %11, %22, %12
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_virtual_call(i32 noundef %0) #10 {
  %2 = alloca %struct.vcall_insn, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #31
  store i32 %0, ptr %2, align 4, !tbaa !255
  %3 = getelementptr inbounds %struct.vcall_insn, ptr %2, i64 0, i32 1
  store i32 0, ptr %3, align 4, !tbaa !257
  %4 = load ptr, ptr @vcall_insn_table, align 8, !tbaa !6
  %5 = call ptr @htab_find_with_hash(ptr noundef %4, ptr noundef nonnull %2, i32 noundef %0) #31
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #31
  br label %37

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.vcall_insn, ptr %5, i64 0, i32 1
  %10 = load i32, ptr %9, align 4, !tbaa !257
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #31
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %37, label %12

12:                                               ; preds = %8
  %13 = load i32, ptr @poc_label_num, align 4, !tbaa !21
  %14 = add i32 %13, 1
  store i32 %14, ptr @poc_label_num, align 4, !tbaa !21
  %15 = load ptr, ptr @vcall_table, align 8, !tbaa !6
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.VEC_vcall_entry_base, ptr %15, i64 0, i32 1
  %19 = load i32, ptr %18, align 4, !tbaa !258
  %20 = load i32, ptr %15, align 4, !tbaa !228
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %17, %12
  %23 = call ptr @vec_gc_o_reserve(ptr noundef %15, i32 noundef 1, i64 noundef 8, i64 noundef 8) #31
  store ptr %23, ptr @vcall_table, align 8, !tbaa !6
  %24 = load i32, ptr %23, align 4, !tbaa !228
  br label %25

25:                                               ; preds = %17, %22
  %26 = phi i32 [ %20, %17 ], [ %24, %22 ]
  %27 = phi ptr [ %15, %17 ], [ %23, %22 ]
  %28 = add i32 %26, 1
  store i32 %28, ptr %27, align 4, !tbaa !228
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %struct.VEC_vcall_entry_base, ptr %27, i64 0, i32 2, i64 %29
  %31 = zext i32 %10 to i64
  %32 = shl nuw i64 %31, 32
  %33 = zext i32 %13 to i64
  %34 = or i64 %32, %33
  store i64 %34, ptr %30, align 4
  %35 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 11), align 8, !tbaa !116
  %36 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  call void %35(ptr noundef %36, ptr noundef nonnull @.str.571, i64 noundef %33) #31
  br label %37

37:                                               ; preds = %7, %8, %25
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @dwarf2out_set_name(ptr nocapture noundef readonly %0, ptr noundef %1) #10 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 11
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = icmp eq ptr %4, null
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %8 = tail call ptr %7(ptr noundef %1, i32 noundef 0) #31
  %9 = icmp eq ptr %8, null
  br i1 %9, label %75, label %10

10:                                               ; preds = %6, %42
  %11 = phi ptr [ %43, %42 ], [ %4, %6 ]
  %12 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !157
  %14 = icmp eq ptr %13, null
  br i1 %14, label %65, label %15

15:                                               ; preds = %10, %36
  %16 = phi ptr [ %37, %36 ], [ %13, %10 ]
  %17 = phi ptr [ %38, %36 ], [ %13, %10 ]
  %18 = phi i64 [ %40, %36 ], [ 0, %10 ]
  %19 = phi ptr [ %39, %36 ], [ null, %10 ]
  %20 = load i32, ptr %17, align 8, !tbaa !159
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %23, label %42

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %18
  %25 = load i32, ptr %24, align 8, !tbaa !161
  switch i32 %25, label %36 [
    i32 3, label %45
    i32 71, label %26
    i32 49, label %26
  ]

26:                                               ; preds = %23, %23
  %27 = getelementptr i8, ptr %24, i64 8
  %28 = load i32, ptr %27, align 8, !tbaa !163
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %31 = load ptr, ptr %12, align 8, !tbaa !157
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi ptr [ %16, %26 ], [ %31, %30 ]
  %34 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %18, i32 1, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  br label %36

36:                                               ; preds = %23, %32
  %37 = phi ptr [ %33, %32 ], [ %16, %23 ]
  %38 = phi ptr [ %33, %32 ], [ %17, %23 ]
  %39 = phi ptr [ %35, %32 ], [ %19, %23 ]
  %40 = add nuw nsw i64 %18, 1
  %41 = icmp eq ptr %38, null
  br i1 %41, label %42, label %15, !llvm.loop !164

42:                                               ; preds = %36, %15
  %43 = phi ptr [ %39, %36 ], [ %19, %15 ]
  %44 = icmp eq ptr %43, null
  br i1 %44, label %65, label %10

45:                                               ; preds = %23
  %46 = load ptr, ptr @debug_str_hash, align 8, !tbaa !6
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = tail call ptr @htab_create_alloc(i64 noundef 10, ptr noundef nonnull @debug_str_do_hash, ptr noundef nonnull @debug_str_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #31
  store ptr %49, ptr @debug_str_hash, align 8, !tbaa !6
  br label %50

50:                                               ; preds = %48, %45
  %51 = phi ptr [ %49, %48 ], [ %46, %45 ]
  %52 = tail call i32 @htab_hash_string(ptr noundef nonnull %8) #31
  %53 = tail call ptr @htab_find_slot_with_hash(ptr noundef %51, ptr noundef nonnull %8, i32 noundef %52, i32 noundef 1) #31
  %54 = load ptr, ptr %53, align 8, !tbaa !6
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  %58 = tail call ptr @ggc_alloc_string(ptr noundef nonnull %8, i32 noundef -1) #31
  store ptr %58, ptr %57, align 8, !tbaa !186
  store ptr %57, ptr %53, align 8, !tbaa !6
  br label %59

59:                                               ; preds = %50, %56
  %60 = phi ptr [ %57, %56 ], [ %54, %50 ]
  %61 = getelementptr inbounds %struct.indirect_string_node, ptr %60, i64 0, i32 1
  %62 = load i32, ptr %61, align 8, !tbaa !267
  %63 = add i32 %62, 1
  store i32 %63, ptr %61, align 8, !tbaa !267
  %64 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %18, i32 1, i32 1
  store ptr %60, ptr %64, align 8, !tbaa !17
  br label %75

65:                                               ; preds = %10, %42
  %66 = load i8, ptr %8, align 1, !tbaa !17
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %75, label %68

68:                                               ; preds = %65
  %69 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = tail call ptr %69(ptr noundef nonnull %8) #31
  br label %73

73:                                               ; preds = %71, %68
  %74 = phi ptr [ %72, %71 ], [ %8, %68 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %4, i32 noundef 3, ptr noundef %74)
  br label %75

75:                                               ; preds = %73, %65, %59, %6, %2
  ret void
}

declare ptr @htab_create_alloc(i64 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @file_table_hash(ptr nocapture noundef readonly %0) #10 {
  %2 = load ptr, ptr %0, align 8, !tbaa !124
  %3 = tail call i32 @htab_hash_string(ptr noundef %2) #31
  ret i32 %3
}

; Function Attrs: mustprogress nofree nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @file_table_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #16 {
  %3 = load ptr, ptr %0, align 8, !tbaa !124
  %4 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) %1)
  %5 = icmp eq i32 %4, 0
  %6 = zext i1 %5 to i32
  ret i32 %6
}

declare ptr @ggc_calloc(i64 noundef, i64 noundef) #3

declare void @ggc_free(ptr noundef) #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @decl_die_table_hash(ptr nocapture noundef readonly %0) #17 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 11
  %3 = load i32, ptr %2, align 8, !tbaa !268
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @decl_die_table_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #17 {
  %3 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 11
  %4 = load i32, ptr %3, align 8, !tbaa !268
  %5 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !17
  %7 = icmp eq i32 %4, %6
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @decl_loc_table_hash(ptr nocapture noundef readonly %0) #17 {
  %2 = getelementptr inbounds %struct.var_loc_list_def, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !243
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @decl_loc_table_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #17 {
  %3 = getelementptr inbounds %struct.var_loc_list_def, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 8, !tbaa !243
  %5 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !17
  %7 = icmp eq i32 %4, %6
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @vcall_insn_table_hash(ptr nocapture noundef readonly %0) #17 {
  %2 = load i32, ptr %0, align 4, !tbaa !255
  ret i32 %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @vcall_insn_table_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #17 {
  %3 = load i32, ptr %0, align 4, !tbaa !255
  %4 = load i32, ptr %1, align 4, !tbaa !255
  %5 = icmp eq i32 %3, %4
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @gen_compile_unit_die(ptr noundef %0) unnamed_addr #10 {
  %2 = alloca [250 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 250, ptr nonnull %2) #31
  %3 = load ptr, ptr @lang_hooks, align 8, !tbaa !269
  %4 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 17, ptr %4, align 8, !tbaa !185
  %5 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %4, ptr %5, align 8, !tbaa !173
  %6 = getelementptr inbounds %struct.limbo_die_struct, ptr %5, i64 0, i32 1
  store ptr null, ptr %6, align 8, !tbaa !177
  %7 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.limbo_die_struct, ptr %5, i64 0, i32 2
  store ptr %7, ptr %8, align 8, !tbaa !171
  store ptr %5, ptr @limbo_die_list, align 8, !tbaa !6
  %9 = icmp eq ptr %0, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %1
  %11 = load i8, ptr %0, align 1, !tbaa !17
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %10
  %14 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %15 = icmp eq ptr %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = tail call ptr %14(ptr noundef nonnull %0) #31
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi ptr [ %17, %16 ], [ %0, %13 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %4, i32 noundef 3, ptr noundef %19)
  %20 = load i8, ptr %0, align 1, !tbaa !17
  switch i8 %20, label %21 [
    i8 47, label %26
    i8 60, label %26
  ]

21:                                               ; preds = %10, %18
  %22 = tail call ptr @get_src_pwd() #31
  %23 = icmp eq ptr %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = tail call ptr @remap_debug_filename(ptr noundef nonnull %22) #31
  tail call fastcc void @add_AT_string(ptr noundef nonnull %4, i32 noundef 27, ptr noundef %25)
  br label %26

26:                                               ; preds = %24, %21, %18, %18, %1
  %27 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.277, ptr noundef %3, ptr noundef nonnull @version_string)
  call fastcc void @add_AT_string(ptr noundef nonnull %4, i32 noundef 37, ptr noundef nonnull %2)
  %28 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(8) @.str.278)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %58, label %30

30:                                               ; preds = %26
  %31 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(8) @.str.279)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %58, label %33

33:                                               ; preds = %30
  %34 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(11) @.str.280)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %58, label %36

36:                                               ; preds = %33
  %37 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %38 = icmp slt i32 %37, 3
  %39 = load i32, ptr @dwarf_strict, align 4
  %40 = icmp ne i32 %39, 0
  %41 = select i1 %38, i1 %40, i1 false
  br i1 %41, label %58, label %42

42:                                               ; preds = %36
  %43 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(8) @.str.281)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(12) @.str.282)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(9) @.str.283)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %48
  %52 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(16) @.str.284)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %51
  %55 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(18) @.str.285)
  %56 = icmp eq i32 %55, 0
  %57 = select i1 %56, i64 17, i64 1
  br label %58

58:                                               ; preds = %36, %26, %30, %33, %42, %45, %48, %51, %54
  %59 = phi i64 [ 1, %36 ], [ 4, %26 ], [ 7, %30 ], [ 9, %33 ], [ 13, %42 ], [ 14, %45 ], [ 11, %48 ], [ 16, %51 ], [ %57, %54 ]
  %60 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !6
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %64, ptr %60, align 8, !tbaa !157
  %65 = icmp eq ptr %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %63, %58
  %67 = phi ptr [ %64, %63 ], [ %61, %58 ]
  %68 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %67, i64 0, i32 1
  %69 = load i32, ptr %68, align 4, !tbaa !201
  %70 = load i32, ptr %67, align 8, !tbaa !159
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %72, label %76

72:                                               ; preds = %66, %63
  %73 = phi ptr [ %67, %66 ], [ null, %63 ]
  %74 = call ptr @vec_gc_o_reserve(ptr noundef %73, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %74, ptr %60, align 8, !tbaa !6
  %75 = load i32, ptr %74, align 8, !tbaa !159
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i32 [ %70, %66 ], [ %75, %72 ]
  %78 = phi ptr [ %67, %66 ], [ %74, %72 ]
  %79 = add i32 %77, 1
  store i32 %79, ptr %78, align 8, !tbaa !159
  %80 = zext i32 %77 to i64
  %81 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %78, i64 0, i32 2, i64 %80
  store i32 19, ptr %81, align 8, !tbaa.struct !179
  %82 = getelementptr inbounds i8, ptr %81, i64 8
  store i32 6, ptr %82, align 8, !tbaa.struct !202
  %83 = getelementptr inbounds i8, ptr %81, i64 16
  store i64 %59, ptr %83, align 8, !tbaa.struct !203
  call void @llvm.lifetime.end.p0(i64 250, ptr nonnull %2) #31
  ret ptr %4
}

declare ptr @vec_gc_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @vec_gc_o_reserve_exact(ptr noundef, i32 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc ptr @new_die(i32 noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #2 {
  %4 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 %0, ptr %4, align 8, !tbaa !185
  %5 = icmp eq ptr %1, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %3
  %7 = icmp eq ptr %4, %1
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %9

9:                                                ; preds = %8, %6
  %10 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 3
  store ptr %1, ptr %10, align 8, !tbaa !174
  %11 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %12 = load ptr, ptr %11, align 8, !tbaa !175
  %13 = icmp eq ptr %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.die_struct, ptr %12, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !176
  %17 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 5
  store ptr %16, ptr %17, align 8, !tbaa !176
  br label %20

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 5
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi ptr [ %19, %18 ], [ %15, %14 ]
  store ptr %4, ptr %21, align 8, !tbaa !176
  store ptr %4, ptr %11, align 8, !tbaa !175
  br label %27

22:                                               ; preds = %3
  %23 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %4, ptr %23, align 8, !tbaa !173
  %24 = getelementptr inbounds %struct.limbo_die_struct, ptr %23, i64 0, i32 1
  store ptr %2, ptr %24, align 8, !tbaa !177
  %25 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.limbo_die_struct, ptr %23, i64 0, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !171
  store ptr %23, ptr @limbo_die_list, align 8, !tbaa !6
  br label %27

27:                                               ; preds = %22, %20
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_name_attribute(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = load i8, ptr %1, align 1, !tbaa !17
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call ptr %8(ptr noundef nonnull %1) #31
  br label %12

12:                                               ; preds = %10, %7
  %13 = phi ptr [ %11, %10 ], [ %1, %7 ]
  tail call fastcc void @add_AT_string(ptr noundef %0, i32 noundef 3, ptr noundef %13)
  br label %14

14:                                               ; preds = %12, %4, %2
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_AT_string(ptr noundef %0, i32 noundef %1, ptr noundef %2) unnamed_addr #2 {
  %4 = load ptr, ptr @debug_str_hash, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call ptr @htab_create_alloc(i64 noundef 10, ptr noundef nonnull @debug_str_do_hash, ptr noundef nonnull @debug_str_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #31
  store ptr %7, ptr @debug_str_hash, align 8, !tbaa !6
  br label %8

8:                                                ; preds = %6, %3
  %9 = phi ptr [ %7, %6 ], [ %4, %3 ]
  %10 = tail call i32 @htab_hash_string(ptr noundef %2) #31
  %11 = tail call ptr @htab_find_slot_with_hash(ptr noundef %9, ptr noundef %2, i32 noundef %10, i32 noundef 1) #31
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  %16 = tail call ptr @ggc_alloc_string(ptr noundef %2, i32 noundef -1) #31
  store ptr %16, ptr %15, align 8, !tbaa !186
  store ptr %15, ptr %11, align 8, !tbaa !6
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi ptr [ %15, %14 ], [ %12, %8 ]
  %19 = getelementptr inbounds %struct.indirect_string_node, ptr %18, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !267
  %21 = add i32 %20, 1
  store i32 %21, ptr %19, align 8, !tbaa !267
  %22 = icmp eq ptr %0, null
  br i1 %22, label %48, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !6
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %28, ptr %24, align 8, !tbaa !157
  %29 = icmp eq ptr %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %27, %23
  %31 = phi ptr [ %28, %27 ], [ %25, %23 ]
  %32 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %31, i64 0, i32 1
  %33 = load i32, ptr %32, align 4, !tbaa !201
  %34 = load i32, ptr %31, align 8, !tbaa !159
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %30, %27
  %37 = phi ptr [ %31, %30 ], [ null, %27 ]
  %38 = tail call ptr @vec_gc_o_reserve(ptr noundef %37, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %38, ptr %24, align 8, !tbaa !6
  %39 = load i32, ptr %38, align 8, !tbaa !159
  br label %40

40:                                               ; preds = %36, %30
  %41 = phi i32 [ %34, %30 ], [ %39, %36 ]
  %42 = phi ptr [ %31, %30 ], [ %38, %36 ]
  %43 = add i32 %41, 1
  store i32 %43, ptr %42, align 8, !tbaa !159
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %42, i64 0, i32 2, i64 %44
  store i32 %1, ptr %45, align 8, !tbaa.struct !179
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store i32 14, ptr %46, align 8, !tbaa.struct !202
  %47 = getelementptr inbounds i8, ptr %45, i64 16
  store ptr %18, ptr %47, align 8, !tbaa.struct !203
  br label %48

48:                                               ; preds = %17, %40
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_AT_unsigned(ptr noundef %0, i32 noundef %1, i64 noundef %2) unnamed_addr #2 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %10, ptr %6, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9, %5
  %13 = phi ptr [ %10, %9 ], [ %7, %5 ]
  %14 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %13, i64 0, i32 1
  %15 = load i32, ptr %14, align 4, !tbaa !201
  %16 = load i32, ptr %13, align 8, !tbaa !159
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %12, %9
  %19 = phi ptr [ %13, %12 ], [ null, %9 ]
  %20 = tail call ptr @vec_gc_o_reserve(ptr noundef %19, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %20, ptr %6, align 8, !tbaa !6
  %21 = load i32, ptr %20, align 8, !tbaa !159
  br label %22

22:                                               ; preds = %18, %12
  %23 = phi i32 [ %16, %12 ], [ %21, %18 ]
  %24 = phi ptr [ %13, %12 ], [ %20, %18 ]
  %25 = add i32 %23, 1
  store i32 %25, ptr %24, align 8, !tbaa !159
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %24, i64 0, i32 2, i64 %26
  store i32 %1, ptr %27, align 8, !tbaa.struct !179
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  store i32 6, ptr %28, align 8, !tbaa.struct !202
  %29 = getelementptr inbounds i8, ptr %27, i64 16
  store i64 %2, ptr %29, align 8, !tbaa.struct !203
  br label %30

30:                                               ; preds = %3, %22
  ret void
}

declare ptr @get_src_pwd() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @debug_str_do_hash(ptr nocapture noundef readonly %0) #10 {
  %2 = load ptr, ptr %0, align 8, !tbaa !186
  %3 = tail call i32 @htab_hash_string(ptr noundef %2) #31
  ret i32 %3
}

; Function Attrs: mustprogress nofree nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @debug_str_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #16 {
  %3 = load ptr, ptr %0, align 8, !tbaa !186
  %4 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) %1)
  %5 = icmp eq i32 %4, 0
  %6 = zext i1 %5 to i32
  ret i32 %6
}

declare ptr @ggc_alloc_string(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @vec_gc_o_reserve(ptr noundef, i32 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare void @htab_traverse(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @file_table_relative_p(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #18 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = load ptr, ptr %3, align 8, !tbaa !124
  %5 = load i8, ptr %4, align 1, !tbaa !17
  %6 = icmp eq i8 %5, 47
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store i8 1, ptr %1, align 1, !tbaa !17
  br label %8

8:                                                ; preds = %2, %7
  %9 = phi i32 [ 0, %7 ], [ 1, %2 ]
  ret i32 %9
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_location_or_const_value_attribute(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = load i64, ptr %1, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %5 [
    i16 0, label %129
    i16 32, label %6
    i16 34, label %6
    i16 36, label %6
  ]

5:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15902, ptr noundef nonnull @.str.5) #31
  br label %6

6:                                                ; preds = %2, %2, %2, %5
  %7 = tail call fastcc ptr @rtl_for_decl_location(ptr noundef nonnull %1)
  %8 = icmp eq ptr %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %6
  %10 = load i32, ptr %7, align 8
  %11 = and i32 %10, 65535
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %12
  %14 = load i32, ptr %13, align 4, !tbaa !17
  %15 = icmp eq i32 %14, 9
  %16 = icmp eq i32 %11, 34
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %9
  %19 = tail call fastcc zeroext i8 @add_const_value_attribute(ptr noundef %0, ptr noundef nonnull %7), !range !155
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %129

21:                                               ; preds = %9, %18, %6
  %22 = load ptr, ptr @decl_loc_table, align 8, !tbaa !6
  %23 = icmp eq ptr %22, null
  br i1 %23, label %66, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !17
  %27 = tail call ptr @htab_find_with_hash(ptr noundef nonnull %22, ptr noundef nonnull %1, i32 noundef %26) #31
  %28 = icmp eq ptr %27, null
  br i1 %28, label %66, label %29

29:                                               ; preds = %24
  %30 = load ptr, ptr %27, align 8, !tbaa !249
  %31 = icmp eq ptr %30, null
  br i1 %31, label %66, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.var_loc_list_def, ptr %27, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !245
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %36, label %66

36:                                               ; preds = %32
  %37 = load ptr, ptr %30, align 8, !tbaa !246
  %38 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = icmp eq ptr %39, null
  br i1 %40, label %66, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.rtx_def, ptr %39, i64 0, i32 1, i32 0, i32 0, i64 1
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = icmp eq ptr %43, null
  br i1 %44, label %66, label %45

45:                                               ; preds = %41
  %46 = load i32, ptr %43, align 8
  %47 = and i32 %46, 65535
  %48 = icmp eq i32 %47, 3
  br i1 %48, label %49, label %54

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.rtx_def, ptr %43, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = load i32, ptr %51, align 8
  %53 = and i32 %52, 65535
  br label %54

54:                                               ; preds = %49, %45
  %55 = phi i32 [ %53, %49 ], [ %47, %45 ]
  %56 = phi ptr [ %51, %49 ], [ %43, %45 ]
  %57 = zext i32 %55 to i64
  %58 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %57
  %59 = load i32, ptr %58, align 4, !tbaa !17
  %60 = icmp eq i32 %59, 9
  %61 = icmp eq i32 %55, 34
  %62 = or i1 %60, %61
  br i1 %62, label %63, label %66

63:                                               ; preds = %54
  %64 = tail call fastcc zeroext i8 @add_const_value_attribute(ptr noundef %0, ptr noundef nonnull %56), !range !155
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %129

66:                                               ; preds = %21, %63, %54, %41, %36, %32, %29, %24
  %67 = load i64, ptr %1, align 8
  %68 = trunc i64 %67 to i16
  switch i16 %68, label %75 [
    i16 34, label %69
    i16 36, label %69
    i16 32, label %69
  ]

69:                                               ; preds = %66, %66, %66
  %70 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %71 = load i64, ptr %70, align 8
  %72 = freeze i64 %71
  %73 = and i64 %72, 268435456
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %66, %69
  br label %76

76:                                               ; preds = %69, %75
  %77 = phi i32 [ 2, %75 ], [ 0, %69 ]
  %78 = tail call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %1, i32 noundef %77)
  %79 = icmp eq ptr %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call fastcc void @add_AT_location_description(ptr noundef %0, i32 noundef 2, ptr noundef nonnull %78)
  br label %129

81:                                               ; preds = %76
  %82 = load i64, ptr %1, align 8
  %83 = and i64 %82, 1638398
  %84 = icmp eq i64 %83, 1048608
  br i1 %84, label %85, label %129

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = icmp eq ptr %87, null
  br i1 %88, label %129, label %89

89:                                               ; preds = %85, %123
  %90 = phi ptr [ %124, %123 ], [ %0, %85 ]
  %91 = icmp eq ptr %90, null
  br i1 %91, label %126, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.die_struct, ptr %90, i64 0, i32 2
  %94 = load ptr, ptr %93, align 8, !tbaa !157
  %95 = icmp eq ptr %94, null
  br i1 %95, label %126, label %96

96:                                               ; preds = %92, %117
  %97 = phi ptr [ %118, %117 ], [ %94, %92 ]
  %98 = phi ptr [ %119, %117 ], [ %94, %92 ]
  %99 = phi i64 [ %121, %117 ], [ 0, %92 ]
  %100 = phi ptr [ %120, %117 ], [ null, %92 ]
  %101 = load i32, ptr %98, align 8, !tbaa !159
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %99, %102
  br i1 %103, label %104, label %123

104:                                              ; preds = %96
  %105 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %98, i64 0, i32 2, i64 %99
  %106 = load i32, ptr %105, align 8, !tbaa !161
  switch i32 %106, label %117 [
    i32 28, label %129
    i32 71, label %107
    i32 49, label %107
  ]

107:                                              ; preds = %104, %104
  %108 = getelementptr i8, ptr %105, i64 8
  %109 = load i32, ptr %108, align 8, !tbaa !163
  %110 = icmp eq i32 %109, 10
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %112 = load ptr, ptr %93, align 8, !tbaa !157
  br label %113

113:                                              ; preds = %111, %107
  %114 = phi ptr [ %97, %107 ], [ %112, %111 ]
  %115 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %98, i64 0, i32 2, i64 %99, i32 1, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  br label %117

117:                                              ; preds = %113, %104
  %118 = phi ptr [ %114, %113 ], [ %97, %104 ]
  %119 = phi ptr [ %114, %113 ], [ %98, %104 ]
  %120 = phi ptr [ %116, %113 ], [ %100, %104 ]
  %121 = add nuw nsw i64 %99, 1
  %122 = icmp eq ptr %119, null
  br i1 %122, label %123, label %96, !llvm.loop !164

123:                                              ; preds = %117, %96
  %124 = phi ptr [ %120, %117 ], [ %100, %96 ]
  %125 = icmp eq ptr %124, null
  br i1 %125, label %126, label %89

126:                                              ; preds = %123, %92, %89
  %127 = load ptr, ptr %86, align 8, !tbaa !17
  %128 = tail call fastcc zeroext i8 @tree_add_const_value_attribute(ptr noundef %0, ptr noundef %127), !range !155
  br label %129

129:                                              ; preds = %104, %126, %85, %81, %63, %18, %2, %80
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @resolve_addr(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !157
  %4 = icmp eq ptr %3, null
  br i1 %4, label %356, label %5

5:                                                ; preds = %1, %351
  %6 = phi ptr [ %354, %351 ], [ %3, %1 ]
  %7 = phi i32 [ %353, %351 ], [ 0, %1 ]
  %8 = load i32, ptr %6, align 8, !tbaa !159
  %9 = icmp ugt i32 %8, %7
  br i1 %9, label %10, label %356

10:                                               ; preds = %5
  %11 = zext i32 %7 to i64
  %12 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %11
  %13 = getelementptr i8, ptr %12, i64 8
  %14 = load i32, ptr %13, align 8, !tbaa !163
  switch i32 %14, label %351 [
    i32 3, label %15
    i32 2, label %233
    i32 0, label %304
  ]

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %11, i32 1, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, null
  br i1 %18, label %193, label %19

19:                                               ; preds = %15, %182
  %20 = phi ptr [ %183, %182 ], [ %17, %15 ]
  %21 = phi ptr [ %184, %182 ], [ %16, %15 ]
  %22 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %20, i64 0, i32 5
  %23 = load ptr, ptr %22, align 8, !tbaa !270
  %24 = icmp eq ptr %23, null
  br i1 %24, label %179, label %25

25:                                               ; preds = %19, %155
  %26 = phi ptr [ %156, %155 ], [ %23, %19 ]
  %27 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %26, i64 0, i32 1
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, 255
  %30 = icmp eq i16 %29, 3
  br i1 %30, label %31, label %90

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %26, i64 0, i32 3, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !6
  %34 = load i32, ptr %33, align 8
  %35 = trunc i32 %34 to i16
  switch i16 %35, label %88 [
    i16 34, label %36
    i16 45, label %73
    i16 35, label %84
  ]

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.rtx_def, ptr %33, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %38)
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @build_string(i32 noundef %41, ptr noundef %38) #31
  %43 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef %39) #31
  %44 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %45 = tail call ptr @build_index_type(ptr noundef %43) #31
  %46 = tail call ptr @build_array_type(ptr noundef %44, ptr noundef %45) #31
  %47 = getelementptr inbounds %struct.tree_common, ptr %42, i64 0, i32 2
  store ptr %46, ptr %47, align 8, !tbaa !17
  %48 = tail call ptr @lookup_constant_def(ptr noundef %42) #31
  %49 = icmp eq ptr %48, null
  br i1 %49, label %158, label %50

50:                                               ; preds = %36
  %51 = load i32, ptr %48, align 8
  %52 = and i32 %51, 65535
  %53 = icmp eq i32 %52, 43
  br i1 %53, label %54, label %158

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.rtx_def, ptr %48, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = load ptr, ptr @used_rtx_array, align 8, !tbaa !6
  %58 = icmp eq ptr %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.VEC_rtx_base, ptr %57, i64 0, i32 1
  %61 = load i32, ptr %60, align 4, !tbaa !109
  %62 = load i32, ptr %57, align 8, !tbaa !102
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %67

64:                                               ; preds = %59, %54
  %65 = tail call ptr @vec_gc_p_reserve(ptr noundef %57, i32 noundef 1) #31
  store ptr %65, ptr @used_rtx_array, align 8, !tbaa !6
  %66 = load i32, ptr %65, align 8, !tbaa !102
  br label %67

67:                                               ; preds = %64, %59
  %68 = phi i32 [ %62, %59 ], [ %66, %64 ]
  %69 = phi ptr [ %57, %59 ], [ %65, %64 ]
  %70 = add i32 %68, 1
  store i32 %70, ptr %69, align 8, !tbaa !102
  %71 = zext i32 %68 to i64
  %72 = getelementptr inbounds %struct.VEC_rtx_base, ptr %69, i64 0, i32 2, i64 %71
  store ptr %56, ptr %72, align 8, !tbaa !6
  store ptr %56, ptr %32, align 8, !tbaa !6
  br label %88

73:                                               ; preds = %31
  %74 = and i32 %34, 67108864
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.rtx_def, ptr %33, i64 0, i32 1, i32 0, i32 0, i64 2
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = icmp eq ptr %78, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %76
  %81 = load i64, ptr %78, align 8
  %82 = and i64 %81, 4259839
  %83 = icmp eq i64 %82, 32
  br i1 %83, label %158, label %88

84:                                               ; preds = %31
  %85 = getelementptr inbounds %struct.rtx_def, ptr %33, i64 0, i32 1
  %86 = tail call i32 @for_each_rtx(ptr noundef nonnull %85, ptr noundef nonnull @resolve_one_addr, ptr noundef null) #31
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %158

88:                                               ; preds = %31, %73, %76, %80, %84, %67
  %89 = load i16, ptr %27, align 8
  br label %90

90:                                               ; preds = %88, %25
  %91 = phi i16 [ %89, %88 ], [ %28, %25 ]
  %92 = and i16 %91, 255
  %93 = icmp eq i16 %92, 158
  br i1 %93, label %94, label %155

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %26, i64 0, i32 4
  %96 = load i32, ptr %95, align 8, !tbaa !49
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %155

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %26, i64 0, i32 4, i32 1
  %100 = load ptr, ptr %99, align 8, !tbaa !6
  %101 = load i32, ptr %100, align 8
  %102 = trunc i32 %101 to i16
  switch i16 %102, label %155 [
    i16 34, label %103
    i16 45, label %140
    i16 35, label %151
  ]

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct.rtx_def, ptr %100, i64 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %105)
  %107 = trunc i64 %106 to i32
  %108 = add i32 %107, 1
  %109 = tail call ptr @build_string(i32 noundef %108, ptr noundef %105) #31
  %110 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef %106) #31
  %111 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %112 = tail call ptr @build_index_type(ptr noundef %110) #31
  %113 = tail call ptr @build_array_type(ptr noundef %111, ptr noundef %112) #31
  %114 = getelementptr inbounds %struct.tree_common, ptr %109, i64 0, i32 2
  store ptr %113, ptr %114, align 8, !tbaa !17
  %115 = tail call ptr @lookup_constant_def(ptr noundef %109) #31
  %116 = icmp eq ptr %115, null
  br i1 %116, label %158, label %117

117:                                              ; preds = %103
  %118 = load i32, ptr %115, align 8
  %119 = and i32 %118, 65535
  %120 = icmp eq i32 %119, 43
  br i1 %120, label %121, label %158

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.rtx_def, ptr %115, i64 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = load ptr, ptr @used_rtx_array, align 8, !tbaa !6
  %125 = icmp eq ptr %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.VEC_rtx_base, ptr %124, i64 0, i32 1
  %128 = load i32, ptr %127, align 4, !tbaa !109
  %129 = load i32, ptr %124, align 8, !tbaa !102
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %131, label %134

131:                                              ; preds = %126, %121
  %132 = tail call ptr @vec_gc_p_reserve(ptr noundef %124, i32 noundef 1) #31
  store ptr %132, ptr @used_rtx_array, align 8, !tbaa !6
  %133 = load i32, ptr %132, align 8, !tbaa !102
  br label %134

134:                                              ; preds = %131, %126
  %135 = phi i32 [ %129, %126 ], [ %133, %131 ]
  %136 = phi ptr [ %124, %126 ], [ %132, %131 ]
  %137 = add i32 %135, 1
  store i32 %137, ptr %136, align 8, !tbaa !102
  %138 = zext i32 %135 to i64
  %139 = getelementptr inbounds %struct.VEC_rtx_base, ptr %136, i64 0, i32 2, i64 %138
  store ptr %123, ptr %139, align 8, !tbaa !6
  store ptr %123, ptr %99, align 8, !tbaa !6
  br label %155

140:                                              ; preds = %98
  %141 = and i32 %101, 67108864
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %140
  %144 = getelementptr inbounds %struct.rtx_def, ptr %100, i64 0, i32 1, i32 0, i32 0, i64 2
  %145 = load ptr, ptr %144, align 8, !tbaa !17
  %146 = icmp eq ptr %145, null
  br i1 %146, label %155, label %147

147:                                              ; preds = %143
  %148 = load i64, ptr %145, align 8
  %149 = and i64 %148, 4259839
  %150 = icmp eq i64 %149, 32
  br i1 %150, label %158, label %155

151:                                              ; preds = %98
  %152 = getelementptr inbounds %struct.rtx_def, ptr %100, i64 0, i32 1
  %153 = tail call i32 @for_each_rtx(ptr noundef nonnull %152, ptr noundef nonnull @resolve_one_addr, ptr noundef null) #31
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %98, %140, %143, %147, %151, %134, %94, %90
  %156 = load ptr, ptr %26, align 8, !tbaa !57
  %157 = icmp eq ptr %156, null
  br i1 %157, label %177, label %25, !llvm.loop !272

158:                                              ; preds = %151, %147, %103, %117, %84, %80, %36, %50
  %159 = load ptr, ptr %21, align 8, !tbaa !6
  %160 = load ptr, ptr %159, align 8, !tbaa !273
  %161 = icmp eq ptr %160, null
  br i1 %161, label %176, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %159, i64 0, i32 3
  %164 = load ptr, ptr %163, align 8, !tbaa !274
  %165 = icmp eq ptr %164, null
  br i1 %165, label %176, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %160, i64 0, i32 3
  %168 = load ptr, ptr %167, align 8, !tbaa !274
  %169 = icmp eq ptr %168, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 21244, ptr noundef nonnull @.str.5) #31
  %171 = load ptr, ptr %21, align 8, !tbaa !6
  %172 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %171, i64 0, i32 3
  %173 = load ptr, ptr %172, align 8, !tbaa !274
  br label %174

174:                                              ; preds = %166, %170
  %175 = phi ptr [ %164, %166 ], [ %173, %170 ]
  store ptr %175, ptr %167, align 8, !tbaa !274
  br label %176

176:                                              ; preds = %174, %162, %158
  store ptr %160, ptr %21, align 8, !tbaa !6
  br label %182

177:                                              ; preds = %155
  %178 = load ptr, ptr %21, align 8, !tbaa !6
  br label %179

179:                                              ; preds = %177, %19
  %180 = phi ptr [ %178, %177 ], [ %20, %19 ]
  %181 = load ptr, ptr %180, align 8, !tbaa !6
  br label %182

182:                                              ; preds = %179, %176
  %183 = phi ptr [ %181, %179 ], [ %160, %176 ]
  %184 = phi ptr [ %180, %179 ], [ %21, %176 ]
  %185 = icmp eq ptr %183, null
  br i1 %185, label %186, label %19, !llvm.loop !275

186:                                              ; preds = %182
  %187 = load i32, ptr %13, align 8, !tbaa !163
  %188 = icmp eq i32 %187, 3
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7218, ptr noundef nonnull @.str.5) #31
  br label %190

190:                                              ; preds = %186, %189
  %191 = load ptr, ptr %16, align 8, !tbaa !17
  %192 = icmp eq ptr %191, null
  br i1 %192, label %193, label %351

193:                                              ; preds = %190, %15
  %194 = load i32, ptr %12, align 8, !tbaa !161
  %195 = load ptr, ptr %2, align 8, !tbaa !157
  %196 = icmp eq ptr %195, null
  br i1 %196, label %231, label %197

197:                                              ; preds = %193
  %198 = load i32, ptr %195, align 8, !tbaa !159
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %231, label %200

200:                                              ; preds = %197
  %201 = zext i32 %198 to i64
  br label %202

202:                                              ; preds = %228, %200
  %203 = phi i64 [ 0, %200 ], [ %229, %228 ]
  %204 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %195, i64 0, i32 2, i64 %203
  %205 = load i32, ptr %204, align 8, !tbaa !161
  %206 = icmp eq i32 %205, %194
  br i1 %206, label %207, label %228

207:                                              ; preds = %202
  %208 = trunc i64 %203 to i32
  %209 = getelementptr i8, ptr %204, i64 8
  %210 = load i32, ptr %209, align 8, !tbaa !163
  %211 = icmp eq i32 %210, 14
  br i1 %211, label %212, label %220

212:                                              ; preds = %207
  %213 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %195, i64 0, i32 2, i64 %203, i32 1, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !17
  %215 = getelementptr inbounds %struct.indirect_string_node, ptr %214, i64 0, i32 1
  %216 = load i32, ptr %215, align 8, !tbaa !267
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %212
  %219 = add i32 %216, -1
  store i32 %219, ptr %215, align 8, !tbaa !267
  br label %220

220:                                              ; preds = %218, %212, %207
  %221 = and i64 %203, 4294967295
  %222 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %195, i64 0, i32 2, i64 %221
  %223 = getelementptr inbounds %struct.dw_attr_struct, ptr %222, i64 1
  %224 = add i32 %198, -1
  store i32 %224, ptr %195, align 8, !tbaa !159
  %225 = sub i32 %224, %208
  %226 = zext i32 %225 to i64
  %227 = shl nuw nsw i64 %226, 5
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %222, ptr nonnull align 8 %223, i64 %227, i1 false)
  br label %231

228:                                              ; preds = %202
  %229 = add nuw nsw i64 %203, 1
  %230 = icmp eq i64 %229, %201
  br i1 %230, label %231, label %202

231:                                              ; preds = %228, %193, %197, %220
  %232 = add i32 %7, -1
  br label %351

233:                                              ; preds = %10
  %234 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %11, i32 1, i32 1
  %235 = load ptr, ptr %234, align 8, !tbaa !17
  %236 = icmp eq ptr %235, null
  br i1 %236, label %351, label %237

237:                                              ; preds = %233, %261
  %238 = phi ptr [ %262, %261 ], [ %235, %233 ]
  %239 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %238, i64 0, i32 1
  %240 = load i16, ptr %239, align 8
  %241 = and i16 %240, 255
  %242 = icmp eq i16 %241, 3
  br i1 %242, label %243, label %249

243:                                              ; preds = %237
  %244 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %238, i64 0, i32 3, i32 1
  %245 = tail call i32 @resolve_one_addr(ptr noundef nonnull %244, ptr poison), !range !37
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %264

247:                                              ; preds = %243
  %248 = load i16, ptr %239, align 8
  br label %249

249:                                              ; preds = %247, %237
  %250 = phi i16 [ %248, %247 ], [ %240, %237 ]
  %251 = and i16 %250, 255
  %252 = icmp eq i16 %251, 158
  br i1 %252, label %253, label %261

253:                                              ; preds = %249
  %254 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %238, i64 0, i32 4
  %255 = load i32, ptr %254, align 8, !tbaa !49
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %261

257:                                              ; preds = %253
  %258 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %238, i64 0, i32 4, i32 1
  %259 = tail call i32 @resolve_one_addr(ptr noundef nonnull %258, ptr poison), !range !37
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %264

261:                                              ; preds = %257, %253, %249
  %262 = load ptr, ptr %238, align 8, !tbaa !57
  %263 = icmp eq ptr %262, null
  br i1 %263, label %351, label %237, !llvm.loop !272

264:                                              ; preds = %243, %257
  %265 = load i32, ptr %12, align 8, !tbaa !161
  %266 = load ptr, ptr %2, align 8, !tbaa !157
  %267 = icmp eq ptr %266, null
  br i1 %267, label %302, label %268

268:                                              ; preds = %264
  %269 = load i32, ptr %266, align 8, !tbaa !159
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %302, label %271

271:                                              ; preds = %268
  %272 = zext i32 %269 to i64
  br label %273

273:                                              ; preds = %299, %271
  %274 = phi i64 [ 0, %271 ], [ %300, %299 ]
  %275 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %266, i64 0, i32 2, i64 %274
  %276 = load i32, ptr %275, align 8, !tbaa !161
  %277 = icmp eq i32 %276, %265
  br i1 %277, label %278, label %299

278:                                              ; preds = %273
  %279 = trunc i64 %274 to i32
  %280 = getelementptr i8, ptr %275, i64 8
  %281 = load i32, ptr %280, align 8, !tbaa !163
  %282 = icmp eq i32 %281, 14
  br i1 %282, label %283, label %291

283:                                              ; preds = %278
  %284 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %266, i64 0, i32 2, i64 %274, i32 1, i32 1
  %285 = load ptr, ptr %284, align 8, !tbaa !17
  %286 = getelementptr inbounds %struct.indirect_string_node, ptr %285, i64 0, i32 1
  %287 = load i32, ptr %286, align 8, !tbaa !267
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %291, label %289

289:                                              ; preds = %283
  %290 = add i32 %287, -1
  store i32 %290, ptr %286, align 8, !tbaa !267
  br label %291

291:                                              ; preds = %289, %283, %278
  %292 = and i64 %274, 4294967295
  %293 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %266, i64 0, i32 2, i64 %292
  %294 = getelementptr inbounds %struct.dw_attr_struct, ptr %293, i64 1
  %295 = add i32 %269, -1
  store i32 %295, ptr %266, align 8, !tbaa !159
  %296 = sub i32 %295, %279
  %297 = zext i32 %296 to i64
  %298 = shl nuw nsw i64 %297, 5
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %293, ptr nonnull align 8 %294, i64 %298, i1 false)
  br label %302

299:                                              ; preds = %273
  %300 = add nuw nsw i64 %274, 1
  %301 = icmp eq i64 %300, %272
  br i1 %301, label %302, label %273

302:                                              ; preds = %299, %264, %268, %291
  %303 = add i32 %7, -1
  br label %351

304:                                              ; preds = %10
  %305 = load i32, ptr %12, align 8, !tbaa !161
  %306 = icmp eq i32 %305, 28
  br i1 %306, label %307, label %351

307:                                              ; preds = %304
  %308 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %11, i32 1, i32 1
  %309 = tail call i32 @resolve_one_addr(ptr noundef nonnull %308, ptr poison), !range !37
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %351, label %311

311:                                              ; preds = %307
  %312 = load i32, ptr %12, align 8, !tbaa !161
  %313 = load ptr, ptr %2, align 8, !tbaa !157
  %314 = icmp eq ptr %313, null
  br i1 %314, label %349, label %315

315:                                              ; preds = %311
  %316 = load i32, ptr %313, align 8, !tbaa !159
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %349, label %318

318:                                              ; preds = %315
  %319 = zext i32 %316 to i64
  br label %320

320:                                              ; preds = %346, %318
  %321 = phi i64 [ 0, %318 ], [ %347, %346 ]
  %322 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %313, i64 0, i32 2, i64 %321
  %323 = load i32, ptr %322, align 8, !tbaa !161
  %324 = icmp eq i32 %323, %312
  br i1 %324, label %325, label %346

325:                                              ; preds = %320
  %326 = trunc i64 %321 to i32
  %327 = getelementptr i8, ptr %322, i64 8
  %328 = load i32, ptr %327, align 8, !tbaa !163
  %329 = icmp eq i32 %328, 14
  br i1 %329, label %330, label %338

330:                                              ; preds = %325
  %331 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %313, i64 0, i32 2, i64 %321, i32 1, i32 1
  %332 = load ptr, ptr %331, align 8, !tbaa !17
  %333 = getelementptr inbounds %struct.indirect_string_node, ptr %332, i64 0, i32 1
  %334 = load i32, ptr %333, align 8, !tbaa !267
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %338, label %336

336:                                              ; preds = %330
  %337 = add i32 %334, -1
  store i32 %337, ptr %333, align 8, !tbaa !267
  br label %338

338:                                              ; preds = %336, %330, %325
  %339 = and i64 %321, 4294967295
  %340 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %313, i64 0, i32 2, i64 %339
  %341 = getelementptr inbounds %struct.dw_attr_struct, ptr %340, i64 1
  %342 = add i32 %316, -1
  store i32 %342, ptr %313, align 8, !tbaa !159
  %343 = sub i32 %342, %326
  %344 = zext i32 %343 to i64
  %345 = shl nuw nsw i64 %344, 5
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %340, ptr nonnull align 8 %341, i64 %345, i1 false)
  br label %349

346:                                              ; preds = %320
  %347 = add nuw nsw i64 %321, 1
  %348 = icmp eq i64 %347, %319
  br i1 %348, label %349, label %320

349:                                              ; preds = %346, %311, %315, %338
  %350 = add i32 %7, -1
  br label %351

351:                                              ; preds = %261, %233, %231, %190, %302, %349, %307, %304, %10
  %352 = phi i32 [ %7, %10 ], [ %350, %349 ], [ %7, %307 ], [ %7, %304 ], [ %303, %302 ], [ %7, %190 ], [ %232, %231 ], [ %7, %233 ], [ %7, %261 ]
  %353 = add i32 %352, 1
  %354 = load ptr, ptr %2, align 8, !tbaa !157
  %355 = icmp eq ptr %354, null
  br i1 %355, label %356, label %5, !llvm.loop !276

356:                                              ; preds = %351, %5, %1
  %357 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %358 = load ptr, ptr %357, align 8, !tbaa !175
  %359 = icmp eq ptr %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %356, %360
  %361 = phi ptr [ %363, %360 ], [ %358, %356 ]
  %362 = getelementptr inbounds %struct.die_struct, ptr %361, i64 0, i32 5
  %363 = load ptr, ptr %362, align 8, !tbaa !176
  tail call fastcc void @resolve_addr(ptr noundef %363)
  %364 = load ptr, ptr %357, align 8, !tbaa !175
  %365 = icmp eq ptr %363, %364
  br i1 %365, label %366, label %360, !llvm.loop !277

366:                                              ; preds = %360, %356
  ret void
}

declare ptr @decl_assembler_name(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @prune_unused_types() unnamed_addr #10 {
  %1 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  tail call fastcc void @verify_marks_clear(ptr noundef %1)
  %2 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %7

4:                                                ; preds = %7, %0
  %5 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %19, label %13

7:                                                ; preds = %0, %7
  %8 = phi ptr [ %11, %7 ], [ %2, %0 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !173
  tail call fastcc void @verify_marks_clear(ptr noundef %9)
  %10 = getelementptr inbounds %struct.limbo_die_struct, ptr %8, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = icmp eq ptr %11, null
  br i1 %12, label %4, label %7, !llvm.loop !278

13:                                               ; preds = %4, %13
  %14 = phi ptr [ %17, %13 ], [ %5, %4 ]
  %15 = load ptr, ptr %14, align 8, !tbaa !196
  tail call fastcc void @verify_marks_clear(ptr noundef %15)
  %16 = getelementptr inbounds %struct.comdat_type_struct, ptr %14, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %13, !llvm.loop !279

19:                                               ; preds = %13, %4
  %20 = load ptr, ptr @types_used_by_vars_hash, align 8, !tbaa !6
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @htab_traverse(ptr noundef nonnull %20, ptr noundef nonnull @premark_types_used_by_global_vars_helper, ptr noundef null) #31
  br label %23

23:                                               ; preds = %19, %22
  %24 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  tail call fastcc void @prune_unused_types_walk(ptr noundef %24)
  %25 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %30, %23
  %28 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %29 = icmp eq ptr %28, null
  br i1 %29, label %36, label %39

30:                                               ; preds = %23, %30
  %31 = phi ptr [ %34, %30 ], [ %25, %23 ]
  %32 = load ptr, ptr %31, align 8, !tbaa !173
  tail call fastcc void @prune_unused_types_walk(ptr noundef %32)
  %33 = getelementptr inbounds %struct.limbo_die_struct, ptr %31, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !6
  %35 = icmp eq ptr %34, null
  br i1 %35, label %27, label %30, !llvm.loop !280

36:                                               ; preds = %39, %27
  %37 = load ptr, ptr @pubname_table, align 8
  %38 = icmp eq ptr %37, null
  br i1 %38, label %53, label %47

39:                                               ; preds = %27, %39
  %40 = phi ptr [ %45, %39 ], [ %28, %27 ]
  %41 = load ptr, ptr %40, align 8, !tbaa !196
  tail call fastcc void @prune_unused_types_walk(ptr noundef %41)
  %42 = getelementptr inbounds %struct.comdat_type_struct, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !213
  tail call fastcc void @prune_unused_types_mark(ptr noundef %43, i32 noundef 1)
  %44 = getelementptr inbounds %struct.comdat_type_struct, ptr %40, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !6
  %46 = icmp eq ptr %45, null
  br i1 %46, label %36, label %39, !llvm.loop !281

47:                                               ; preds = %36, %56
  %48 = phi i64 [ %59, %56 ], [ 0, %36 ]
  %49 = phi ptr [ %60, %56 ], [ %37, %36 ]
  %50 = load i32, ptr %49, align 8, !tbaa !218
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %48, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %47, %56, %36
  %54 = load i32, ptr @arange_table_in_use, align 4, !tbaa !21
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %62, label %65

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %49, i64 0, i32 2, i64 %48
  %58 = load ptr, ptr %57, align 8, !tbaa !282
  tail call fastcc void @prune_unused_types_mark(ptr noundef %58, i32 noundef 1)
  %59 = add nuw nsw i64 %48, 1
  %60 = load ptr, ptr @pubname_table, align 8
  %61 = icmp eq ptr %60, null
  br i1 %61, label %53, label %47, !llvm.loop !284

62:                                               ; preds = %65, %53
  %63 = load ptr, ptr @dcall_table, align 8
  %64 = icmp eq ptr %63, null
  br i1 %64, label %86, label %74

65:                                               ; preds = %53, %65
  %66 = phi i64 [ %70, %65 ], [ 0, %53 ]
  %67 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8, !tbaa !6
  tail call fastcc void @prune_unused_types_mark(ptr noundef %69, i32 noundef 1)
  %70 = add nuw nsw i64 %66, 1
  %71 = load i32, ptr @arange_table_in_use, align 4, !tbaa !21
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %70, %72
  br i1 %73, label %65, label %62, !llvm.loop !285

74:                                               ; preds = %62, %80
  %75 = phi i64 [ %83, %80 ], [ 0, %62 ]
  %76 = phi ptr [ %84, %80 ], [ %63, %62 ]
  %77 = load i32, ptr %76, align 8, !tbaa !220
  %78 = zext i32 %77 to i64
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %76, i64 0, i32 2, i64 %75, i32 2
  %82 = load ptr, ptr %81, align 8, !tbaa !222
  tail call fastcc void @prune_unused_types_mark(ptr noundef %82, i32 noundef 1)
  %83 = add nuw nsw i64 %75, 1
  %84 = load ptr, ptr @dcall_table, align 8
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %74, !llvm.loop !286

86:                                               ; preds = %80, %74, %62
  %87 = load ptr, ptr @debug_str_hash, align 8, !tbaa !6
  %88 = icmp ne ptr %87, null
  %89 = load i8, ptr @debug_str_hash_forced, align 1
  %90 = icmp ne i8 %89, 0
  %91 = select i1 %88, i1 %90, i1 false
  br i1 %91, label %92, label %93

92:                                               ; preds = %86
  tail call void @htab_traverse(ptr noundef nonnull %87, ptr noundef nonnull @prune_indirect_string, ptr noundef null) #31
  br label %95

93:                                               ; preds = %86
  br i1 %88, label %94, label %95

94:                                               ; preds = %93
  tail call void @htab_empty(ptr noundef nonnull %87) #31
  br label %95

95:                                               ; preds = %93, %94, %92
  %96 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  tail call fastcc void @prune_unused_types_prune(ptr noundef %96)
  %97 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %98 = icmp eq ptr %97, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %102, %95
  %100 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %101 = icmp eq ptr %100, null
  br i1 %101, label %114, label %108

102:                                              ; preds = %95, %102
  %103 = phi ptr [ %106, %102 ], [ %97, %95 ]
  %104 = load ptr, ptr %103, align 8, !tbaa !173
  tail call fastcc void @prune_unused_types_prune(ptr noundef %104)
  %105 = getelementptr inbounds %struct.limbo_die_struct, ptr %103, i64 0, i32 2
  %106 = load ptr, ptr %105, align 8, !tbaa !6
  %107 = icmp eq ptr %106, null
  br i1 %107, label %99, label %102, !llvm.loop !287

108:                                              ; preds = %99, %108
  %109 = phi ptr [ %112, %108 ], [ %100, %99 ]
  %110 = load ptr, ptr %109, align 8, !tbaa !196
  tail call fastcc void @prune_unused_types_prune(ptr noundef %110)
  %111 = getelementptr inbounds %struct.comdat_type_struct, ptr %109, i64 0, i32 3
  %112 = load ptr, ptr %111, align 8, !tbaa !6
  %113 = icmp eq ptr %112, null
  br i1 %113, label %114, label %108, !llvm.loop !288

114:                                              ; preds = %108, %99
  %115 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  tail call fastcc void @prune_unmark_dies(ptr noundef %115)
  %116 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %117 = icmp eq ptr %116, null
  br i1 %117, label %118, label %121

118:                                              ; preds = %121, %114
  %119 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %120 = icmp eq ptr %119, null
  br i1 %120, label %133, label %127

121:                                              ; preds = %114, %121
  %122 = phi ptr [ %125, %121 ], [ %116, %114 ]
  %123 = load ptr, ptr %122, align 8, !tbaa !173
  tail call fastcc void @prune_unmark_dies(ptr noundef %123)
  %124 = getelementptr inbounds %struct.limbo_die_struct, ptr %122, i64 0, i32 2
  %125 = load ptr, ptr %124, align 8, !tbaa !6
  %126 = icmp eq ptr %125, null
  br i1 %126, label %118, label %121, !llvm.loop !289

127:                                              ; preds = %118, %127
  %128 = phi ptr [ %131, %127 ], [ %119, %118 ]
  %129 = load ptr, ptr %128, align 8, !tbaa !196
  tail call fastcc void @prune_unmark_dies(ptr noundef %129)
  %130 = getelementptr inbounds %struct.comdat_type_struct, ptr %128, i64 0, i32 3
  %131 = load ptr, ptr %130, align 8, !tbaa !6
  %132 = icmp eq ptr %131, null
  br i1 %132, label %133, label %127, !llvm.loop !290

133:                                              ; preds = %127, %118
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @break_out_comdat_types(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = alloca %struct.skeleton_chain_struct, align 8
  %3 = alloca i32, align 4
  %4 = alloca [16 x i8], align 16
  %5 = alloca %struct.md5_ctx, align 4
  %6 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !175
  %8 = icmp eq ptr %7, null
  br i1 %8, label %713, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.die_struct, ptr %7, i64 0, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !176
  %12 = getelementptr inbounds [16 x i8], ptr %4, i64 0, i64 8
  %13 = getelementptr inbounds %struct.skeleton_chain_struct, ptr %2, i64 0, i32 1
  br label %14

14:                                               ; preds = %9, %710
  %15 = phi ptr [ %11, %9 ], [ %31, %710 ]
  %16 = phi ptr [ null, %9 ], [ %25, %710 ]
  %17 = phi ptr [ %7, %9 ], [ %711, %710 ]
  %18 = icmp eq ptr %16, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !176
  %22 = icmp eq ptr %21, %17
  br i1 %22, label %23, label %24

23:                                               ; preds = %19, %14
  br label %24

24:                                               ; preds = %23, %19
  %25 = phi ptr [ %17, %23 ], [ %16, %19 ]
  %26 = icmp eq ptr %15, %7
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !176
  br label %30

30:                                               ; preds = %24, %27
  %31 = phi ptr [ %29, %27 ], [ null, %24 ]
  %32 = load i32, ptr %15, align 8, !tbaa !185
  switch i32 %32, label %707 [
    i32 2, label %33
    i32 19, label %33
    i32 4, label %33
    i32 23, label %33
  ]

33:                                               ; preds = %30, %30, %30, %30
  %34 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !157
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %43, %38, %33
  br label %51

38:                                               ; preds = %33
  %39 = load i32, ptr %35, align 8, !tbaa !159
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %37, label %41

41:                                               ; preds = %38
  %42 = zext i32 %39 to i64
  br label %46

43:                                               ; preds = %46
  %44 = add nuw nsw i64 %47, 1
  %45 = icmp eq i64 %44, %42
  br i1 %45, label %37, label %46

46:                                               ; preds = %43, %41
  %47 = phi i64 [ 0, %41 ], [ %44, %43 ]
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %35, i64 0, i32 2, i64 %47
  %49 = load i32, ptr %48, align 8, !tbaa !161
  %50 = icmp eq i32 %49, 60
  br i1 %50, label %707, label %43

51:                                               ; preds = %37, %85
  %52 = phi ptr [ %86, %85 ], [ %15, %37 ]
  %53 = icmp eq ptr %52, null
  br i1 %53, label %88, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.die_struct, ptr %52, i64 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !157
  %57 = icmp eq ptr %56, null
  br i1 %57, label %88, label %58

58:                                               ; preds = %54, %79
  %59 = phi ptr [ %80, %79 ], [ %56, %54 ]
  %60 = phi ptr [ %81, %79 ], [ %56, %54 ]
  %61 = phi i64 [ %83, %79 ], [ 0, %54 ]
  %62 = phi ptr [ %82, %79 ], [ null, %54 ]
  %63 = load i32, ptr %60, align 8, !tbaa !159
  %64 = zext i32 %63 to i64
  %65 = icmp ult i64 %61, %64
  br i1 %65, label %66, label %85

66:                                               ; preds = %58
  %67 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %60, i64 0, i32 2, i64 %61
  %68 = load i32, ptr %67, align 8, !tbaa !161
  switch i32 %68, label %79 [
    i32 49, label %705
    i32 71, label %69
  ]

69:                                               ; preds = %66
  %70 = getelementptr i8, ptr %67, i64 8
  %71 = load i32, ptr %70, align 8, !tbaa !163
  %72 = icmp eq i32 %71, 10
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %74 = load ptr, ptr %55, align 8, !tbaa !157
  br label %75

75:                                               ; preds = %73, %69
  %76 = phi ptr [ %59, %69 ], [ %74, %73 ]
  %77 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %60, i64 0, i32 2, i64 %61, i32 1, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  br label %79

79:                                               ; preds = %75, %66
  %80 = phi ptr [ %76, %75 ], [ %59, %66 ]
  %81 = phi ptr [ %76, %75 ], [ %60, %66 ]
  %82 = phi ptr [ %78, %75 ], [ %62, %66 ]
  %83 = add nuw nsw i64 %61, 1
  %84 = icmp eq ptr %81, null
  br i1 %84, label %85, label %58, !llvm.loop !164

85:                                               ; preds = %79, %58
  %86 = phi ptr [ %82, %79 ], [ %62, %58 ]
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %51

88:                                               ; preds = %85, %54, %51
  %89 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 65, ptr %89, align 8, !tbaa !185
  %90 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %89, ptr %90, align 8, !tbaa !173
  %91 = getelementptr inbounds %struct.limbo_die_struct, ptr %90, i64 0, i32 1
  store ptr null, ptr %91, align 8, !tbaa !177
  %92 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %93 = getelementptr inbounds %struct.limbo_die_struct, ptr %90, i64 0, i32 2
  store ptr %92, ptr %93, align 8, !tbaa !171
  store ptr %90, ptr @limbo_die_list, align 8, !tbaa !6
  %94 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %95

95:                                               ; preds = %129, %88
  %96 = phi ptr [ %94, %88 ], [ %130, %129 ]
  %97 = icmp eq ptr %96, null
  br i1 %97, label %140, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.die_struct, ptr %96, i64 0, i32 2
  %100 = load ptr, ptr %99, align 8, !tbaa !157
  %101 = icmp eq ptr %100, null
  br i1 %101, label %140, label %102

102:                                              ; preds = %98, %123
  %103 = phi ptr [ %124, %123 ], [ %100, %98 ]
  %104 = phi ptr [ %125, %123 ], [ %100, %98 ]
  %105 = phi i64 [ %127, %123 ], [ 0, %98 ]
  %106 = phi ptr [ %126, %123 ], [ null, %98 ]
  %107 = load i32, ptr %104, align 8, !tbaa !159
  %108 = zext i32 %107 to i64
  %109 = icmp ult i64 %105, %108
  br i1 %109, label %110, label %129

110:                                              ; preds = %102
  %111 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %104, i64 0, i32 2, i64 %105
  %112 = load i32, ptr %111, align 8, !tbaa !161
  switch i32 %112, label %123 [
    i32 19, label %132
    i32 71, label %113
    i32 49, label %113
  ]

113:                                              ; preds = %110, %110
  %114 = getelementptr i8, ptr %111, i64 8
  %115 = load i32, ptr %114, align 8, !tbaa !163
  %116 = icmp eq i32 %115, 10
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %118 = load ptr, ptr %99, align 8, !tbaa !157
  br label %119

119:                                              ; preds = %117, %113
  %120 = phi ptr [ %103, %113 ], [ %118, %117 ]
  %121 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %104, i64 0, i32 2, i64 %105, i32 1, i32 1
  %122 = load ptr, ptr %121, align 8, !tbaa !17
  br label %123

123:                                              ; preds = %110, %119
  %124 = phi ptr [ %120, %119 ], [ %103, %110 ]
  %125 = phi ptr [ %120, %119 ], [ %104, %110 ]
  %126 = phi ptr [ %122, %119 ], [ %106, %110 ]
  %127 = add nuw nsw i64 %105, 1
  %128 = icmp eq ptr %125, null
  br i1 %128, label %129, label %102, !llvm.loop !164

129:                                              ; preds = %123, %102
  %130 = phi ptr [ %126, %123 ], [ %106, %102 ]
  %131 = icmp eq ptr %130, null
  br i1 %131, label %140, label %95

132:                                              ; preds = %110
  %133 = getelementptr i8, ptr %111, i64 8
  %134 = load i32, ptr %133, align 8, !tbaa !163
  %135 = icmp eq i32 %134, 6
  br i1 %135, label %137, label %136

136:                                              ; preds = %132
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %137

137:                                              ; preds = %136, %132
  %138 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %104, i64 0, i32 2, i64 %105, i32 1, i32 1
  %139 = load i64, ptr %138, align 8, !tbaa !17
  br label %140

140:                                              ; preds = %129, %98, %95, %137
  %141 = phi i64 [ %139, %137 ], [ 0, %95 ], [ 0, %98 ], [ 0, %129 ]
  %142 = and i64 %141, 4294967295
  %143 = getelementptr inbounds %struct.die_struct, ptr %89, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8, !tbaa !6
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %149

146:                                              ; preds = %140
  %147 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %147, ptr %143, align 8, !tbaa !157
  %148 = icmp eq ptr %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %146, %140
  %150 = phi ptr [ %147, %146 ], [ %144, %140 ]
  %151 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %150, i64 0, i32 1
  %152 = load i32, ptr %151, align 4, !tbaa !201
  %153 = load i32, ptr %150, align 8, !tbaa !159
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %155, label %159

155:                                              ; preds = %149, %146
  %156 = phi ptr [ %150, %149 ], [ null, %146 ]
  %157 = call ptr @vec_gc_o_reserve(ptr noundef %156, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %157, ptr %143, align 8, !tbaa !6
  %158 = load i32, ptr %157, align 8, !tbaa !159
  br label %159

159:                                              ; preds = %149, %155
  %160 = phi i32 [ %153, %149 ], [ %158, %155 ]
  %161 = phi ptr [ %150, %149 ], [ %157, %155 ]
  %162 = add i32 %160, 1
  store i32 %162, ptr %161, align 8, !tbaa !159
  %163 = zext i32 %160 to i64
  %164 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %161, i64 0, i32 2, i64 %163
  store i32 19, ptr %164, align 8, !tbaa.struct !179
  %165 = getelementptr inbounds i8, ptr %164, i64 8
  store i32 6, ptr %165, align 8, !tbaa.struct !202
  %166 = getelementptr inbounds i8, ptr %164, i64 16
  store i64 %142, ptr %166, align 8, !tbaa.struct !203
  %167 = call ptr @ggc_alloc_cleared_stat(i64 noundef 32) #31
  store ptr %89, ptr %167, align 8, !tbaa !196
  %168 = load ptr, ptr @comdat_type_list, align 8, !tbaa !6
  %169 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 3
  store ptr %168, ptr %169, align 8, !tbaa !291
  store ptr %167, ptr @comdat_type_list, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 156, ptr nonnull %5) #31
  br label %170

170:                                              ; preds = %204, %159
  %171 = phi ptr [ %15, %159 ], [ %205, %204 ]
  %172 = icmp eq ptr %171, null
  br i1 %172, label %216, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.die_struct, ptr %171, i64 0, i32 2
  %175 = load ptr, ptr %174, align 8, !tbaa !157
  %176 = icmp eq ptr %175, null
  br i1 %176, label %216, label %177

177:                                              ; preds = %173, %198
  %178 = phi ptr [ %199, %198 ], [ %175, %173 ]
  %179 = phi ptr [ %200, %198 ], [ %175, %173 ]
  %180 = phi i64 [ %202, %198 ], [ 0, %173 ]
  %181 = phi ptr [ %201, %198 ], [ null, %173 ]
  %182 = load i32, ptr %179, align 8, !tbaa !159
  %183 = zext i32 %182 to i64
  %184 = icmp ult i64 %180, %183
  br i1 %184, label %185, label %204

185:                                              ; preds = %177
  %186 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %179, i64 0, i32 2, i64 %180
  %187 = load i32, ptr %186, align 8, !tbaa !161
  switch i32 %187, label %198 [
    i32 3, label %207
    i32 71, label %188
    i32 49, label %188
  ]

188:                                              ; preds = %185, %185
  %189 = getelementptr i8, ptr %186, i64 8
  %190 = load i32, ptr %189, align 8, !tbaa !163
  %191 = icmp eq i32 %190, 10
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %193 = load ptr, ptr %174, align 8, !tbaa !157
  br label %194

194:                                              ; preds = %192, %188
  %195 = phi ptr [ %178, %188 ], [ %193, %192 ]
  %196 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %179, i64 0, i32 2, i64 %180, i32 1, i32 1
  %197 = load ptr, ptr %196, align 8, !tbaa !17
  br label %198

198:                                              ; preds = %194, %185
  %199 = phi ptr [ %195, %194 ], [ %178, %185 ]
  %200 = phi ptr [ %195, %194 ], [ %179, %185 ]
  %201 = phi ptr [ %197, %194 ], [ %181, %185 ]
  %202 = add nuw nsw i64 %180, 1
  %203 = icmp eq ptr %200, null
  br i1 %203, label %204, label %177, !llvm.loop !164

204:                                              ; preds = %198, %177
  %205 = phi ptr [ %201, %198 ], [ %181, %177 ]
  %206 = icmp eq ptr %205, null
  br i1 %206, label %216, label %170

207:                                              ; preds = %185
  %208 = getelementptr i8, ptr %186, i64 8
  %209 = load i32, ptr %208, align 8, !tbaa !163
  %210 = icmp eq i32 %209, 14
  br i1 %210, label %212, label %211

211:                                              ; preds = %207
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  br label %212

212:                                              ; preds = %211, %207
  %213 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %179, i64 0, i32 2, i64 %180, i32 1, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !17
  %215 = load ptr, ptr %214, align 8, !tbaa !186
  br label %216

216:                                              ; preds = %204, %173, %170, %212
  %217 = phi ptr [ %215, %212 ], [ null, %170 ], [ null, %173 ], [ null, %204 ]
  br label %218

218:                                              ; preds = %252, %216
  %219 = phi ptr [ %15, %216 ], [ %253, %252 ]
  %220 = icmp eq ptr %219, null
  br i1 %220, label %263, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %struct.die_struct, ptr %219, i64 0, i32 2
  %223 = load ptr, ptr %222, align 8, !tbaa !157
  %224 = icmp eq ptr %223, null
  br i1 %224, label %263, label %225

225:                                              ; preds = %221, %246
  %226 = phi ptr [ %247, %246 ], [ %223, %221 ]
  %227 = phi ptr [ %248, %246 ], [ %223, %221 ]
  %228 = phi i64 [ %250, %246 ], [ 0, %221 ]
  %229 = phi ptr [ %249, %246 ], [ null, %221 ]
  %230 = load i32, ptr %227, align 8, !tbaa !159
  %231 = zext i32 %230 to i64
  %232 = icmp ult i64 %228, %231
  br i1 %232, label %233, label %252

233:                                              ; preds = %225
  %234 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %227, i64 0, i32 2, i64 %228
  %235 = load i32, ptr %234, align 8, !tbaa !161
  switch i32 %235, label %246 [
    i32 71, label %255
    i32 49, label %236
  ]

236:                                              ; preds = %233
  %237 = getelementptr i8, ptr %234, i64 8
  %238 = load i32, ptr %237, align 8, !tbaa !163
  %239 = icmp eq i32 %238, 10
  br i1 %239, label %242, label %240

240:                                              ; preds = %236
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %241 = load ptr, ptr %222, align 8, !tbaa !157
  br label %242

242:                                              ; preds = %240, %236
  %243 = phi ptr [ %226, %236 ], [ %241, %240 ]
  %244 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %227, i64 0, i32 2, i64 %228, i32 1, i32 1
  %245 = load ptr, ptr %244, align 8, !tbaa !17
  br label %246

246:                                              ; preds = %242, %233
  %247 = phi ptr [ %243, %242 ], [ %226, %233 ]
  %248 = phi ptr [ %243, %242 ], [ %227, %233 ]
  %249 = phi ptr [ %245, %242 ], [ %229, %233 ]
  %250 = add nuw nsw i64 %228, 1
  %251 = icmp eq ptr %248, null
  br i1 %251, label %252, label %225, !llvm.loop !164

252:                                              ; preds = %246, %225
  %253 = phi ptr [ %249, %246 ], [ %229, %225 ]
  %254 = icmp eq ptr %253, null
  br i1 %254, label %263, label %218

255:                                              ; preds = %233
  %256 = getelementptr i8, ptr %234, i64 8
  %257 = load i32, ptr %256, align 8, !tbaa !163
  %258 = icmp eq i32 %257, 10
  br i1 %258, label %260, label %259

259:                                              ; preds = %255
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %260

260:                                              ; preds = %259, %255
  %261 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %227, i64 0, i32 2, i64 %228, i32 1, i32 1
  %262 = load ptr, ptr %261, align 8, !tbaa !17
  br label %263

263:                                              ; preds = %252, %221, %218, %260
  %264 = phi ptr [ %262, %260 ], [ null, %218 ], [ null, %221 ], [ null, %252 ]
  %265 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %266

266:                                              ; preds = %300, %263
  %267 = phi ptr [ %265, %263 ], [ %301, %300 ]
  %268 = icmp eq ptr %267, null
  br i1 %268, label %312, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %struct.die_struct, ptr %267, i64 0, i32 2
  %271 = load ptr, ptr %270, align 8, !tbaa !157
  %272 = icmp eq ptr %271, null
  br i1 %272, label %312, label %273

273:                                              ; preds = %269, %294
  %274 = phi ptr [ %295, %294 ], [ %271, %269 ]
  %275 = phi ptr [ %296, %294 ], [ %271, %269 ]
  %276 = phi i64 [ %298, %294 ], [ 0, %269 ]
  %277 = phi ptr [ %297, %294 ], [ null, %269 ]
  %278 = load i32, ptr %275, align 8, !tbaa !159
  %279 = zext i32 %278 to i64
  %280 = icmp ult i64 %276, %279
  br i1 %280, label %281, label %300

281:                                              ; preds = %273
  %282 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %275, i64 0, i32 2, i64 %276
  %283 = load i32, ptr %282, align 8, !tbaa !161
  switch i32 %283, label %294 [
    i32 19, label %303
    i32 71, label %284
    i32 49, label %284
  ]

284:                                              ; preds = %281, %281
  %285 = getelementptr i8, ptr %282, i64 8
  %286 = load i32, ptr %285, align 8, !tbaa !163
  %287 = icmp eq i32 %286, 10
  br i1 %287, label %290, label %288

288:                                              ; preds = %284
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %289 = load ptr, ptr %270, align 8, !tbaa !157
  br label %290

290:                                              ; preds = %288, %284
  %291 = phi ptr [ %274, %284 ], [ %289, %288 ]
  %292 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %275, i64 0, i32 2, i64 %276, i32 1, i32 1
  %293 = load ptr, ptr %292, align 8, !tbaa !17
  br label %294

294:                                              ; preds = %290, %281
  %295 = phi ptr [ %291, %290 ], [ %274, %281 ]
  %296 = phi ptr [ %291, %290 ], [ %275, %281 ]
  %297 = phi ptr [ %293, %290 ], [ %277, %281 ]
  %298 = add nuw nsw i64 %276, 1
  %299 = icmp eq ptr %296, null
  br i1 %299, label %300, label %273, !llvm.loop !164

300:                                              ; preds = %294, %273
  %301 = phi ptr [ %297, %294 ], [ %277, %273 ]
  %302 = icmp eq ptr %301, null
  br i1 %302, label %312, label %266

303:                                              ; preds = %281
  %304 = getelementptr i8, ptr %282, i64 8
  %305 = load i32, ptr %304, align 8, !tbaa !163
  %306 = icmp eq i32 %305, 6
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %308

308:                                              ; preds = %307, %303
  %309 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %275, i64 0, i32 2, i64 %276, i32 1, i32 1
  %310 = load i64, ptr %309, align 8, !tbaa !17
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %300, %269, %266, %308
  %313 = phi i32 [ %311, %308 ], [ 0, %266 ], [ 0, %269 ], [ 0, %300 ]
  %314 = icmp eq i32 %313, 4
  %315 = icmp eq i32 %313, 17
  %316 = or i1 %314, %315
  %317 = icmp ne ptr %217, null
  %318 = select i1 %316, i1 %317, i1 false
  br i1 %318, label %319, label %358

319:                                              ; preds = %312
  call void @md5_init_ctx(ptr noundef nonnull %5) #31
  %320 = icmp eq ptr %264, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %319
  %322 = getelementptr inbounds %struct.die_struct, ptr %264, i64 0, i32 3
  %323 = load ptr, ptr %322, align 8, !tbaa !174
  %324 = icmp eq ptr %323, null
  br i1 %324, label %326, label %325

325:                                              ; preds = %321
  call fastcc void @checksum_die_context(ptr noundef nonnull %323, ptr noundef nonnull %5)
  br label %326

326:                                              ; preds = %325, %321, %319
  call void @md5_process_bytes(ptr noundef %15, i64 noundef 4, ptr noundef nonnull %5) #31
  %327 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %217)
  %328 = add i64 %327, 1
  call void @md5_process_bytes(ptr noundef nonnull %217, i64 noundef %328, ptr noundef nonnull %5) #31
  %329 = call ptr @md5_finish_ctx(ptr noundef nonnull %5, ptr noundef nonnull %4) #31
  %330 = load ptr, ptr %167, align 8, !tbaa !196
  %331 = load i64, ptr %12, align 8
  %332 = icmp eq ptr %330, null
  br i1 %332, label %358, label %333

333:                                              ; preds = %326
  %334 = getelementptr inbounds %struct.die_struct, ptr %330, i64 0, i32 2
  %335 = load ptr, ptr %334, align 8, !tbaa !6
  %336 = icmp eq ptr %335, null
  br i1 %336, label %337, label %340

337:                                              ; preds = %333
  %338 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %338, ptr %334, align 8, !tbaa !157
  %339 = icmp eq ptr %338, null
  br i1 %339, label %346, label %340

340:                                              ; preds = %337, %333
  %341 = phi ptr [ %338, %337 ], [ %335, %333 ]
  %342 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %341, i64 0, i32 1
  %343 = load i32, ptr %342, align 4, !tbaa !201
  %344 = load i32, ptr %341, align 8, !tbaa !159
  %345 = icmp eq i32 %343, %344
  br i1 %345, label %346, label %350

346:                                              ; preds = %340, %337
  %347 = phi ptr [ %341, %340 ], [ null, %337 ]
  %348 = call ptr @vec_gc_o_reserve(ptr noundef %347, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %348, ptr %334, align 8, !tbaa !6
  %349 = load i32, ptr %348, align 8, !tbaa !159
  br label %350

350:                                              ; preds = %346, %340
  %351 = phi i32 [ %344, %340 ], [ %349, %346 ]
  %352 = phi ptr [ %341, %340 ], [ %348, %346 ]
  %353 = add i32 %351, 1
  store i32 %353, ptr %352, align 8, !tbaa !159
  %354 = zext i32 %351 to i64
  %355 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %352, i64 0, i32 2, i64 %354
  store i32 8463, ptr %355, align 8, !tbaa.struct !179
  %356 = getelementptr inbounds i8, ptr %355, i64 8
  store i32 17, ptr %356, align 8, !tbaa.struct !202
  %357 = getelementptr inbounds i8, ptr %355, i64 16
  store i64 %331, ptr %357, align 8, !tbaa.struct !203
  br label %358

358:                                              ; preds = %350, %326, %312
  call void @md5_init_ctx(ptr noundef nonnull %5) #31
  store i32 1, ptr %3, align 4, !tbaa !21
  %359 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 9
  store i32 1, ptr %359, align 8, !tbaa !235
  %360 = icmp eq ptr %264, null
  br i1 %360, label %366, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %struct.die_struct, ptr %264, i64 0, i32 3
  %363 = load ptr, ptr %362, align 8, !tbaa !174
  %364 = icmp eq ptr %363, null
  br i1 %364, label %366, label %365

365:                                              ; preds = %361
  call fastcc void @checksum_die_context(ptr noundef nonnull %363, ptr noundef nonnull %5)
  br label %366

366:                                              ; preds = %365, %361, %358
  call fastcc void @die_checksum_ordered(ptr noundef nonnull %15, ptr noundef nonnull %5, ptr noundef nonnull %3)
  call fastcc void @unmark_all_dies(ptr noundef nonnull %15)
  %367 = call ptr @md5_finish_ctx(ptr noundef nonnull %5, ptr noundef nonnull %4) #31
  %368 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2
  %369 = load i64, ptr %12, align 8
  store i64 %369, ptr %368, align 8
  %370 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 1
  store ptr %167, ptr %370, align 8, !tbaa !17
  %371 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 1
  store ptr %15, ptr %371, align 8, !tbaa !213
  br i1 %360, label %374, label %372

372:                                              ; preds = %366
  %373 = getelementptr inbounds %struct.die_struct, ptr %264, i64 0, i32 1
  store ptr %167, ptr %373, align 8, !tbaa !17
  br label %374

374:                                              ; preds = %366, %372
  call void @llvm.lifetime.end.p0(i64 156, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #31
  br label %375

375:                                              ; preds = %374, %407
  %376 = phi ptr [ %15, %374 ], [ %408, %407 ]
  %377 = getelementptr inbounds %struct.die_struct, ptr %376, i64 0, i32 2
  %378 = load ptr, ptr %377, align 8, !tbaa !157
  %379 = icmp eq ptr %378, null
  br i1 %379, label %536, label %380

380:                                              ; preds = %375, %401
  %381 = phi ptr [ %402, %401 ], [ %378, %375 ]
  %382 = phi ptr [ %403, %401 ], [ %378, %375 ]
  %383 = phi i64 [ %405, %401 ], [ 0, %375 ]
  %384 = phi ptr [ %404, %401 ], [ null, %375 ]
  %385 = load i32, ptr %382, align 8, !tbaa !159
  %386 = zext i32 %385 to i64
  %387 = icmp ult i64 %383, %386
  br i1 %387, label %388, label %407

388:                                              ; preds = %380
  %389 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %382, i64 0, i32 2, i64 %383
  %390 = load i32, ptr %389, align 8, !tbaa !161
  switch i32 %390, label %401 [
    i32 71, label %410
    i32 49, label %391
  ]

391:                                              ; preds = %388
  %392 = getelementptr i8, ptr %389, i64 8
  %393 = load i32, ptr %392, align 8, !tbaa !163
  %394 = icmp eq i32 %393, 10
  br i1 %394, label %397, label %395

395:                                              ; preds = %391
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %396 = load ptr, ptr %377, align 8, !tbaa !157
  br label %397

397:                                              ; preds = %395, %391
  %398 = phi ptr [ %381, %391 ], [ %396, %395 ]
  %399 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %382, i64 0, i32 2, i64 %383, i32 1, i32 1
  %400 = load ptr, ptr %399, align 8, !tbaa !17
  br label %401

401:                                              ; preds = %397, %388
  %402 = phi ptr [ %398, %397 ], [ %381, %388 ]
  %403 = phi ptr [ %398, %397 ], [ %382, %388 ]
  %404 = phi ptr [ %400, %397 ], [ %384, %388 ]
  %405 = add nuw nsw i64 %383, 1
  %406 = icmp eq ptr %403, null
  br i1 %406, label %407, label %380, !llvm.loop !164

407:                                              ; preds = %401, %380
  %408 = phi ptr [ %404, %401 ], [ %384, %380 ]
  %409 = icmp eq ptr %408, null
  br i1 %409, label %536, label %375

410:                                              ; preds = %388
  %411 = getelementptr i8, ptr %389, i64 8
  %412 = load i32, ptr %411, align 8, !tbaa !163
  %413 = icmp eq i32 %412, 10
  br i1 %413, label %415, label %414

414:                                              ; preds = %410
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %415

415:                                              ; preds = %414, %410
  %416 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %382, i64 0, i32 2, i64 %383, i32 1, i32 1
  %417 = load ptr, ptr %416, align 8, !tbaa !17
  %418 = icmp eq ptr %417, null
  br i1 %418, label %536, label %419

419:                                              ; preds = %415
  %420 = load ptr, ptr %370, align 8, !tbaa !17
  %421 = getelementptr inbounds %struct.die_struct, ptr %417, i64 0, i32 1
  store ptr %420, ptr %421, align 8, !tbaa !17
  %422 = load ptr, ptr %34, align 8, !tbaa !157
  %423 = icmp eq ptr %422, null
  br i1 %423, label %458, label %424

424:                                              ; preds = %419
  %425 = load i32, ptr %422, align 8, !tbaa !159
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %458, label %427

427:                                              ; preds = %424
  %428 = zext i32 %425 to i64
  br label %429

429:                                              ; preds = %455, %427
  %430 = phi i64 [ 0, %427 ], [ %456, %455 ]
  %431 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %422, i64 0, i32 2, i64 %430
  %432 = load i32, ptr %431, align 8, !tbaa !161
  %433 = icmp eq i32 %432, 71
  br i1 %433, label %434, label %455

434:                                              ; preds = %429
  %435 = trunc i64 %430 to i32
  %436 = getelementptr i8, ptr %431, i64 8
  %437 = load i32, ptr %436, align 8, !tbaa !163
  %438 = icmp eq i32 %437, 14
  br i1 %438, label %439, label %447

439:                                              ; preds = %434
  %440 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %422, i64 0, i32 2, i64 %430, i32 1, i32 1
  %441 = load ptr, ptr %440, align 8, !tbaa !17
  %442 = getelementptr inbounds %struct.indirect_string_node, ptr %441, i64 0, i32 1
  %443 = load i32, ptr %442, align 8, !tbaa !267
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %447, label %445

445:                                              ; preds = %439
  %446 = add i32 %443, -1
  store i32 %446, ptr %442, align 8, !tbaa !267
  br label %447

447:                                              ; preds = %445, %439, %434
  %448 = and i64 %430, 4294967295
  %449 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %422, i64 0, i32 2, i64 %448
  %450 = getelementptr inbounds %struct.dw_attr_struct, ptr %449, i64 1
  %451 = add i32 %425, -1
  store i32 %451, ptr %422, align 8, !tbaa !159
  %452 = sub i32 %451, %435
  %453 = zext i32 %452 to i64
  %454 = shl nuw nsw i64 %453, 5
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %449, ptr nonnull align 8 %450, i64 %454, i1 false)
  br label %458

455:                                              ; preds = %429
  %456 = add nuw nsw i64 %430, 1
  %457 = icmp eq i64 %456, %428
  br i1 %457, label %458, label %429

458:                                              ; preds = %455, %447, %424, %419
  %459 = getelementptr inbounds %struct.die_struct, ptr %417, i64 0, i32 2
  %460 = load ptr, ptr %459, align 8, !tbaa !157
  %461 = icmp eq ptr %460, null
  br i1 %461, label %498, label %462

462:                                              ; preds = %458, %494
  %463 = phi ptr [ %495, %494 ], [ %460, %458 ]
  %464 = phi i64 [ %496, %494 ], [ 0, %458 ]
  %465 = load i32, ptr %463, align 8, !tbaa !159
  %466 = zext i32 %465 to i64
  %467 = icmp ult i64 %464, %466
  br i1 %467, label %468, label %498

468:                                              ; preds = %462
  %469 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %463, i64 0, i32 2, i64 %464
  %470 = load i32, ptr %469, align 8, !tbaa !161
  switch i32 %470, label %471 [
    i32 3, label %494
    i32 60, label %494
    i32 63, label %494
  ]

471:                                              ; preds = %468
  %472 = load ptr, ptr %34, align 8, !tbaa !6
  %473 = icmp eq ptr %472, null
  br i1 %473, label %474, label %477

474:                                              ; preds = %471
  %475 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %475, ptr %34, align 8, !tbaa !157
  %476 = icmp eq ptr %475, null
  br i1 %476, label %483, label %477

477:                                              ; preds = %474, %471
  %478 = phi ptr [ %475, %474 ], [ %472, %471 ]
  %479 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %478, i64 0, i32 1
  %480 = load i32, ptr %479, align 4, !tbaa !201
  %481 = load i32, ptr %478, align 8, !tbaa !159
  %482 = icmp eq i32 %480, %481
  br i1 %482, label %483, label %487

483:                                              ; preds = %477, %474
  %484 = phi ptr [ %478, %477 ], [ null, %474 ]
  %485 = call ptr @vec_gc_o_reserve(ptr noundef %484, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %485, ptr %34, align 8, !tbaa !6
  %486 = load i32, ptr %485, align 8, !tbaa !159
  br label %487

487:                                              ; preds = %483, %477
  %488 = phi i32 [ %481, %477 ], [ %486, %483 ]
  %489 = phi ptr [ %478, %477 ], [ %485, %483 ]
  %490 = add i32 %488, 1
  store i32 %490, ptr %489, align 8, !tbaa !159
  %491 = zext i32 %488 to i64
  %492 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %489, i64 0, i32 2, i64 %491
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %492, ptr noundef nonnull align 8 dereferenceable(32) %469, i64 32, i1 false), !tbaa.struct !179
  %493 = load ptr, ptr %459, align 8, !tbaa !157
  br label %494

494:                                              ; preds = %487, %468, %468, %468
  %495 = phi ptr [ %463, %468 ], [ %463, %468 ], [ %463, %468 ], [ %493, %487 ]
  %496 = add nuw nsw i64 %464, 1
  %497 = icmp eq ptr %495, null
  br i1 %497, label %498, label %462, !llvm.loop !292

498:                                              ; preds = %494, %462, %458
  %499 = getelementptr inbounds %struct.die_struct, ptr %417, i64 0, i32 4
  %500 = load ptr, ptr %499, align 8, !tbaa !175
  %501 = icmp eq ptr %500, null
  br i1 %501, label %536, label %502

502:                                              ; preds = %498
  %503 = icmp eq ptr %15, null
  %504 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 4
  br i1 %503, label %505, label %512

505:                                              ; preds = %502, %505
  %506 = phi ptr [ %508, %505 ], [ %500, %502 ]
  %507 = getelementptr inbounds %struct.die_struct, ptr %506, i64 0, i32 5
  %508 = load ptr, ptr %507, align 8, !tbaa !176
  %509 = call fastcc ptr @clone_tree(ptr noundef %508)
  %510 = load ptr, ptr %499, align 8, !tbaa !175
  %511 = icmp eq ptr %508, %510
  br i1 %511, label %536, label %505, !llvm.loop !293

512:                                              ; preds = %502, %533
  %513 = phi ptr [ %515, %533 ], [ %500, %502 ]
  %514 = getelementptr inbounds %struct.die_struct, ptr %513, i64 0, i32 5
  %515 = load ptr, ptr %514, align 8, !tbaa !176
  %516 = call fastcc ptr @clone_tree(ptr noundef %515)
  %517 = icmp eq ptr %516, null
  br i1 %517, label %533, label %518

518:                                              ; preds = %512
  %519 = icmp eq ptr %516, %15
  br i1 %519, label %520, label %521

520:                                              ; preds = %518
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %521

521:                                              ; preds = %520, %518
  %522 = getelementptr inbounds %struct.die_struct, ptr %516, i64 0, i32 3
  store ptr %15, ptr %522, align 8, !tbaa !174
  %523 = load ptr, ptr %504, align 8, !tbaa !175
  %524 = icmp eq ptr %523, null
  br i1 %524, label %529, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.die_struct, ptr %523, i64 0, i32 5
  %527 = load ptr, ptr %526, align 8, !tbaa !176
  %528 = getelementptr inbounds %struct.die_struct, ptr %516, i64 0, i32 5
  store ptr %527, ptr %528, align 8, !tbaa !176
  br label %531

529:                                              ; preds = %521
  %530 = getelementptr inbounds %struct.die_struct, ptr %516, i64 0, i32 5
  br label %531

531:                                              ; preds = %529, %525
  %532 = phi ptr [ %530, %529 ], [ %526, %525 ]
  store ptr %516, ptr %532, align 8, !tbaa !176
  store ptr %516, ptr %504, align 8, !tbaa !175
  br label %533

533:                                              ; preds = %531, %512
  %534 = load ptr, ptr %499, align 8, !tbaa !175
  %535 = icmp eq ptr %515, %534
  br i1 %535, label %536, label %512, !llvm.loop !293

536:                                              ; preds = %407, %375, %533, %505, %498, %415
  %537 = phi ptr [ %15, %415 ], [ %417, %498 ], [ %417, %505 ], [ %417, %533 ], [ %15, %375 ], [ %15, %407 ]
  %538 = getelementptr inbounds %struct.die_struct, ptr %537, i64 0, i32 3
  %539 = load ptr, ptr %538, align 8, !tbaa !174
  %540 = icmp eq ptr %539, null
  br i1 %540, label %617, label %541

541:                                              ; preds = %536
  %542 = load i32, ptr %539, align 8, !tbaa !185
  switch i32 %542, label %543 [
    i32 17, label %617
    i32 65, label %617
  ]

543:                                              ; preds = %541
  %544 = call fastcc ptr @copy_ancestor_tree(ptr noundef nonnull %89, ptr noundef nonnull %537, ptr noundef null)
  %545 = icmp eq ptr %544, null
  br i1 %545, label %617, label %546

546:                                              ; preds = %543
  %547 = getelementptr inbounds %struct.die_struct, ptr %544, i64 0, i32 2
  %548 = load ptr, ptr %547, align 8, !tbaa !157
  %549 = icmp eq ptr %548, null
  br i1 %549, label %584, label %550

550:                                              ; preds = %546
  %551 = load i32, ptr %548, align 8, !tbaa !159
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %584, label %553

553:                                              ; preds = %550
  %554 = zext i32 %551 to i64
  br label %555

555:                                              ; preds = %581, %553
  %556 = phi i64 [ 0, %553 ], [ %582, %581 ]
  %557 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %548, i64 0, i32 2, i64 %556
  %558 = load i32, ptr %557, align 8, !tbaa !161
  %559 = icmp eq i32 %558, 105
  br i1 %559, label %560, label %581

560:                                              ; preds = %555
  %561 = trunc i64 %556 to i32
  %562 = getelementptr i8, ptr %557, i64 8
  %563 = load i32, ptr %562, align 8, !tbaa !163
  %564 = icmp eq i32 %563, 14
  br i1 %564, label %565, label %573

565:                                              ; preds = %560
  %566 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %548, i64 0, i32 2, i64 %556, i32 1, i32 1
  %567 = load ptr, ptr %566, align 8, !tbaa !17
  %568 = getelementptr inbounds %struct.indirect_string_node, ptr %567, i64 0, i32 1
  %569 = load i32, ptr %568, align 8, !tbaa !267
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %573, label %571

571:                                              ; preds = %565
  %572 = add i32 %569, -1
  store i32 %572, ptr %568, align 8, !tbaa !267
  br label %573

573:                                              ; preds = %571, %565, %560
  %574 = and i64 %556, 4294967295
  %575 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %548, i64 0, i32 2, i64 %574
  %576 = getelementptr inbounds %struct.dw_attr_struct, ptr %575, i64 1
  %577 = add i32 %551, -1
  store i32 %577, ptr %548, align 8, !tbaa !159
  %578 = sub i32 %577, %561
  %579 = zext i32 %578 to i64
  %580 = shl nuw nsw i64 %579, 5
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %575, ptr nonnull align 8 %576, i64 %580, i1 false)
  br label %584

581:                                              ; preds = %555
  %582 = add nuw nsw i64 %556, 1
  %583 = icmp eq i64 %582, %554
  br i1 %583, label %584, label %555

584:                                              ; preds = %581, %573, %550, %546
  %585 = icmp eq ptr %15, null
  br i1 %585, label %611, label %586

586:                                              ; preds = %584
  %587 = load ptr, ptr %34, align 8, !tbaa !6
  %588 = icmp eq ptr %587, null
  br i1 %588, label %589, label %592

589:                                              ; preds = %586
  %590 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %590, ptr %34, align 8, !tbaa !157
  %591 = icmp eq ptr %590, null
  br i1 %591, label %598, label %592

592:                                              ; preds = %589, %586
  %593 = phi ptr [ %590, %589 ], [ %587, %586 ]
  %594 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %593, i64 0, i32 1
  %595 = load i32, ptr %594, align 4, !tbaa !201
  %596 = load i32, ptr %593, align 8, !tbaa !159
  %597 = icmp eq i32 %595, %596
  br i1 %597, label %598, label %602

598:                                              ; preds = %592, %589
  %599 = phi ptr [ %593, %592 ], [ null, %589 ]
  %600 = call ptr @vec_gc_o_reserve(ptr noundef %599, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %600, ptr %34, align 8, !tbaa !6
  %601 = load i32, ptr %600, align 8, !tbaa !159
  br label %602

602:                                              ; preds = %598, %592
  %603 = phi i32 [ %596, %592 ], [ %601, %598 ]
  %604 = phi ptr [ %593, %592 ], [ %600, %598 ]
  %605 = add i32 %603, 1
  store i32 %605, ptr %604, align 8, !tbaa !159
  %606 = zext i32 %603 to i64
  %607 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %604, i64 0, i32 2, i64 %606
  store i32 71, ptr %607, align 8, !tbaa.struct !179
  %608 = getelementptr inbounds i8, ptr %607, i64 8
  store i32 10, ptr %608, align 8, !tbaa.struct !202
  %609 = getelementptr inbounds i8, ptr %607, i64 16
  store ptr %544, ptr %609, align 8, !tbaa.struct !203
  %610 = getelementptr inbounds i8, ptr %607, i64 24
  store i32 0, ptr %610, align 8, !tbaa.struct !294
  br label %611

611:                                              ; preds = %602, %584
  %612 = getelementptr inbounds %struct.die_struct, ptr %544, i64 0, i32 6
  %613 = load ptr, ptr %612, align 8, !tbaa !295
  %614 = icmp eq ptr %613, null
  br i1 %614, label %616, label %615

615:                                              ; preds = %611
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7143, ptr noundef nonnull @.str.5) #31
  br label %616

616:                                              ; preds = %615, %611
  store ptr %15, ptr %612, align 8, !tbaa !295
  br label %617

617:                                              ; preds = %536, %541, %541, %543, %616
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #31
  store ptr %15, ptr %2, align 8, !tbaa !296
  %618 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, i8 0, i64 16, i1 false)
  %619 = load ptr, ptr %618, align 8, !tbaa !174
  %620 = icmp eq ptr %619, null
  br i1 %620, label %625, label %621

621:                                              ; preds = %617
  %622 = load i32, ptr %619, align 8, !tbaa !185
  switch i32 %622, label %625 [
    i32 1, label %623
    i32 2, label %623
    i32 56, label %623
    i32 4, label %623
    i32 15, label %623
    i32 16, label %623
    i32 18, label %623
    i32 19, label %623
    i32 21, label %623
    i32 23, label %623
    i32 31, label %623
    i32 32, label %623
    i32 33, label %623
    i32 36, label %623
    i32 38, label %623
    i32 41, label %623
    i32 45, label %623
    i32 53, label %623
    i32 22, label %623
  ]

623:                                              ; preds = %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621, %621
  %624 = call fastcc ptr @clone_as_declaration(ptr noundef nonnull %15)
  store ptr %624, ptr %13, align 8, !tbaa !298
  br label %625

625:                                              ; preds = %623, %621, %617
  call fastcc void @generate_skeleton_bottom_up(ptr noundef nonnull %2)
  %626 = load ptr, ptr %13, align 8, !tbaa !298
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #31
  %627 = icmp eq ptr %626, null
  br i1 %627, label %628, label %657

628:                                              ; preds = %625
  %629 = load ptr, ptr %618, align 8, !tbaa !174
  %630 = getelementptr inbounds %struct.die_struct, ptr %25, i64 0, i32 3
  %631 = load ptr, ptr %630, align 8, !tbaa !174
  %632 = icmp eq ptr %629, %631
  br i1 %632, label %634, label %633

633:                                              ; preds = %628
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7515, ptr noundef nonnull @.str.5) #31
  br label %634

634:                                              ; preds = %633, %628
  %635 = getelementptr inbounds %struct.die_struct, ptr %25, i64 0, i32 5
  %636 = load ptr, ptr %635, align 8, !tbaa !176
  %637 = icmp eq ptr %636, %15
  br i1 %637, label %639, label %638

638:                                              ; preds = %634
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7516, ptr noundef nonnull @.str.5) #31
  br label %639

639:                                              ; preds = %638, %634
  %640 = icmp eq ptr %25, %15
  br i1 %640, label %641, label %647

641:                                              ; preds = %639
  %642 = load ptr, ptr %618, align 8, !tbaa !174
  %643 = getelementptr inbounds %struct.die_struct, ptr %642, i64 0, i32 4
  %644 = load ptr, ptr %643, align 8, !tbaa !175
  %645 = icmp eq ptr %644, %15
  br i1 %645, label %650, label %646

646:                                              ; preds = %641
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7519, ptr noundef nonnull @.str.5) #31
  br label %650

647:                                              ; preds = %639
  %648 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  %649 = load ptr, ptr %648, align 8, !tbaa !176
  store ptr %649, ptr %635, align 8, !tbaa !176
  br label %650

650:                                              ; preds = %647, %646, %641
  %651 = phi ptr [ %25, %647 ], [ null, %641 ], [ null, %646 ]
  %652 = load ptr, ptr %618, align 8, !tbaa !174
  %653 = getelementptr inbounds %struct.die_struct, ptr %652, i64 0, i32 4
  %654 = load ptr, ptr %653, align 8, !tbaa !175
  %655 = icmp eq ptr %654, %15
  br i1 %655, label %656, label %689

656:                                              ; preds = %650
  store ptr %651, ptr %653, align 8, !tbaa !175
  br label %689

657:                                              ; preds = %625
  %658 = load ptr, ptr %370, align 8, !tbaa !17
  %659 = getelementptr inbounds %struct.die_struct, ptr %626, i64 0, i32 1
  store ptr %658, ptr %659, align 8, !tbaa !17
  %660 = load ptr, ptr %618, align 8, !tbaa !174
  %661 = getelementptr inbounds %struct.die_struct, ptr %25, i64 0, i32 3
  %662 = load ptr, ptr %661, align 8, !tbaa !174
  %663 = icmp eq ptr %660, %662
  br i1 %663, label %665, label %664

664:                                              ; preds = %657
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7536, ptr noundef nonnull @.str.5) #31
  br label %665

665:                                              ; preds = %664, %657
  %666 = getelementptr inbounds %struct.die_struct, ptr %25, i64 0, i32 5
  %667 = load ptr, ptr %666, align 8, !tbaa !176
  %668 = icmp eq ptr %667, %15
  br i1 %668, label %670, label %669

669:                                              ; preds = %665
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7537, ptr noundef nonnull @.str.5) #31
  br label %670

670:                                              ; preds = %669, %665
  %671 = getelementptr inbounds %struct.die_struct, ptr %626, i64 0, i32 3
  store ptr %660, ptr %671, align 8, !tbaa !174
  %672 = icmp eq ptr %25, %15
  br i1 %672, label %673, label %678

673:                                              ; preds = %670
  %674 = getelementptr inbounds %struct.die_struct, ptr %660, i64 0, i32 4
  %675 = load ptr, ptr %674, align 8, !tbaa !175
  %676 = icmp eq ptr %675, %15
  br i1 %676, label %681, label %677

677:                                              ; preds = %673
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7542, ptr noundef nonnull @.str.5) #31
  br label %681

678:                                              ; preds = %670
  store ptr %626, ptr %666, align 8, !tbaa !176
  %679 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  %680 = load ptr, ptr %679, align 8, !tbaa !176
  br label %681

681:                                              ; preds = %678, %677, %673
  %682 = phi ptr [ %680, %678 ], [ %626, %673 ], [ %626, %677 ]
  %683 = getelementptr inbounds %struct.die_struct, ptr %626, i64 0, i32 5
  store ptr %682, ptr %683, align 8, !tbaa !176
  %684 = load ptr, ptr %618, align 8, !tbaa !174
  %685 = getelementptr inbounds %struct.die_struct, ptr %684, i64 0, i32 4
  %686 = load ptr, ptr %685, align 8, !tbaa !175
  %687 = icmp eq ptr %686, %15
  br i1 %687, label %688, label %689

688:                                              ; preds = %681
  store ptr %626, ptr %685, align 8, !tbaa !175
  br label %689

689:                                              ; preds = %688, %681, %656, %650
  call fastcc void @break_out_comdat_types(ptr noundef nonnull %15)
  %690 = icmp eq ptr %89, %15
  br i1 %690, label %691, label %692

691:                                              ; preds = %689
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %692

692:                                              ; preds = %691, %689
  store ptr %89, ptr %618, align 8, !tbaa !174
  %693 = getelementptr inbounds %struct.die_struct, ptr %89, i64 0, i32 4
  %694 = load ptr, ptr %693, align 8, !tbaa !175
  %695 = icmp eq ptr %694, null
  br i1 %695, label %700, label %696

696:                                              ; preds = %692
  %697 = getelementptr inbounds %struct.die_struct, ptr %694, i64 0, i32 5
  %698 = load ptr, ptr %697, align 8, !tbaa !176
  %699 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  store ptr %698, ptr %699, align 8, !tbaa !176
  br label %702

700:                                              ; preds = %692
  %701 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  br label %702

702:                                              ; preds = %696, %700
  %703 = phi ptr [ %701, %700 ], [ %697, %696 ]
  store ptr %15, ptr %703, align 8, !tbaa !176
  store ptr %15, ptr %693, align 8, !tbaa !175
  %704 = select i1 %627, ptr %15, ptr %626
  br label %710

705:                                              ; preds = %66
  %706 = load i32, ptr %15, align 8, !tbaa !185
  br label %707

707:                                              ; preds = %46, %705, %30
  %708 = phi i32 [ %32, %30 ], [ %706, %705 ], [ %32, %46 ]
  switch i32 %708, label %710 [
    i32 57, label %709
    i32 2, label %709
    i32 19, label %709
    i32 23, label %709
  ]

709:                                              ; preds = %707, %707, %707, %707
  call fastcc void @break_out_comdat_types(ptr noundef nonnull %15)
  br label %710

710:                                              ; preds = %707, %702, %709
  %711 = phi ptr [ %704, %702 ], [ %15, %709 ], [ %15, %707 ]
  %712 = icmp eq ptr %31, null
  br i1 %712, label %713, label %14, !llvm.loop !299

713:                                              ; preds = %710, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_sibling_attributes(ptr noundef %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %2, align 8, !tbaa !175
  %4 = icmp eq ptr %3, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !174
  %8 = icmp eq ptr %7, null
  br i1 %8, label %43, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.die_struct, ptr %7, i64 0, i32 4
  %11 = load ptr, ptr %10, align 8, !tbaa !175
  %12 = icmp eq ptr %11, %0
  br i1 %12, label %43, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 5
  %15 = load ptr, ptr %14, align 8, !tbaa !176
  %16 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %20, ptr %16, align 8, !tbaa !157
  %21 = icmp eq ptr %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19, %13
  %23 = phi ptr [ %20, %19 ], [ %17, %13 ]
  %24 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %23, i64 0, i32 1
  %25 = load i32, ptr %24, align 4, !tbaa !201
  %26 = load i32, ptr %23, align 8, !tbaa !159
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %22, %19
  %29 = phi ptr [ %23, %22 ], [ null, %19 ]
  %30 = tail call ptr @vec_gc_o_reserve(ptr noundef %29, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %30, ptr %16, align 8, !tbaa !6
  %31 = load i32, ptr %30, align 8, !tbaa !159
  br label %32

32:                                               ; preds = %28, %22
  %33 = phi i32 [ %26, %22 ], [ %31, %28 ]
  %34 = phi ptr [ %23, %22 ], [ %30, %28 ]
  %35 = add i32 %33, 1
  store i32 %35, ptr %34, align 8, !tbaa !159
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %34, i64 0, i32 2, i64 %36
  store i32 1, ptr %37, align 8, !tbaa.struct !179
  %38 = getelementptr inbounds i8, ptr %37, i64 8
  store i32 10, ptr %38, align 8, !tbaa.struct !202
  %39 = getelementptr inbounds i8, ptr %37, i64 16
  store ptr %15, ptr %39, align 8, !tbaa.struct !203
  %40 = getelementptr inbounds i8, ptr %37, i64 24
  store i32 0, ptr %40, align 8, !tbaa.struct !294
  %41 = load ptr, ptr %2, align 8, !tbaa !175
  %42 = icmp eq ptr %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %9, %5, %32
  %44 = phi ptr [ %3, %9 ], [ %3, %5 ], [ %41, %32 ]
  br label %45

45:                                               ; preds = %43, %45
  %46 = phi ptr [ %48, %45 ], [ %44, %43 ]
  %47 = getelementptr inbounds %struct.die_struct, ptr %46, i64 0, i32 5
  %48 = load ptr, ptr %47, align 8, !tbaa !176
  tail call fastcc void @add_sibling_attributes(ptr noundef %48)
  %49 = load ptr, ptr %2, align 8, !tbaa !175
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %51, label %45, !llvm.loop !300

51:                                               ; preds = %45, %32, %1
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_AT_lbl_id(ptr noundef %0, i32 noundef %1, ptr noundef %2) unnamed_addr #2 {
  %4 = tail call ptr @xstrdup(ptr noundef %2) #31
  %5 = icmp eq ptr %0, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %11, ptr %7, align 8, !tbaa !157
  %12 = icmp eq ptr %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %10, %6
  %14 = phi ptr [ %11, %10 ], [ %8, %6 ]
  %15 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 1
  %16 = load i32, ptr %15, align 4, !tbaa !201
  %17 = load i32, ptr %14, align 8, !tbaa !159
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %13, %10
  %20 = phi ptr [ %14, %13 ], [ null, %10 ]
  %21 = tail call ptr @vec_gc_o_reserve(ptr noundef %20, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %21, ptr %7, align 8, !tbaa !6
  %22 = load i32, ptr %21, align 8, !tbaa !159
  br label %23

23:                                               ; preds = %19, %13
  %24 = phi i32 [ %17, %13 ], [ %22, %19 ]
  %25 = phi ptr [ %14, %13 ], [ %21, %19 ]
  %26 = add i32 %24, 1
  store i32 %26, ptr %25, align 8, !tbaa !159
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %25, i64 0, i32 2, i64 %27
  store i32 %1, ptr %28, align 8, !tbaa.struct !179
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store i32 12, ptr %29, align 8, !tbaa.struct !202
  %30 = getelementptr inbounds i8, ptr %28, i64 16
  store ptr %4, ptr %30, align 8, !tbaa.struct !203
  br label %31

31:                                               ; preds = %3, %23
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_ranges_by_labels(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef %3) unnamed_addr #10 {
  %5 = load i32, ptr @ranges_by_label_in_use, align 4, !tbaa !21
  %6 = load i32, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %7 = icmp eq i32 %5, %6
  %8 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  br i1 %7, label %9, label %17

9:                                                ; preds = %4
  %10 = add i32 %5, 64
  store i32 %10, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 4
  %13 = tail call ptr @ggc_realloc_stat(ptr noundef %8, i64 noundef %12) #31
  store ptr %13, ptr @ranges_by_label, align 8, !tbaa !6
  %14 = load i32, ptr @ranges_by_label_in_use, align 4, !tbaa !21
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %13, i64 %15
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1024) %16, i8 0, i64 1024, i1 false)
  br label %17

17:                                               ; preds = %9, %4
  %18 = phi ptr [ %13, %9 ], [ %8, %4 ]
  %19 = zext i32 %5 to i64
  %20 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %18, i64 %19
  store ptr %1, ptr %20, align 8, !tbaa !237
  %21 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %21, i64 %19, i32 1
  store ptr %2, ptr %22, align 8, !tbaa !239
  %23 = add i32 %5, 1
  store i32 %23, ptr @ranges_by_label_in_use, align 4, !tbaa !21
  %24 = xor i32 %5, -1
  %25 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %26 = load i32, ptr @ranges_table_allocated, align 4, !tbaa !21
  %27 = icmp eq i32 %25, %26
  %28 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  br i1 %27, label %29, label %37

29:                                               ; preds = %17
  %30 = add i32 %25, 64
  store i32 %30, ptr @ranges_table_allocated, align 4, !tbaa !21
  %31 = zext i32 %30 to i64
  %32 = shl nuw nsw i64 %31, 2
  %33 = tail call ptr @ggc_realloc_stat(ptr noundef %28, i64 noundef %32) #31
  store ptr %33, ptr @ranges_table, align 8, !tbaa !6
  %34 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %struct.dw_ranges_struct, ptr %33, i64 %35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(256) %36, i8 0, i64 256, i1 false)
  br label %37

37:                                               ; preds = %17, %29
  %38 = phi ptr [ %33, %29 ], [ %28, %17 ]
  %39 = zext i32 %25 to i64
  %40 = getelementptr inbounds %struct.dw_ranges_struct, ptr %38, i64 %39
  store i32 %24, ptr %40, align 4, !tbaa !209
  %41 = add i32 %25, 1
  store i32 %41, ptr @ranges_table_in_use, align 4, !tbaa !21
  %42 = load i8, ptr %3, align 1, !tbaa !17
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %74

44:                                               ; preds = %37
  %45 = shl i32 %25, 3
  %46 = zext i32 %45 to i64
  %47 = icmp eq ptr %0, null
  br i1 %47, label %73, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !6
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %53, ptr %49, align 8, !tbaa !157
  %54 = icmp eq ptr %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52, %48
  %56 = phi ptr [ %53, %52 ], [ %50, %48 ]
  %57 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 1
  %58 = load i32, ptr %57, align 4, !tbaa !201
  %59 = load i32, ptr %56, align 8, !tbaa !159
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %55, %52
  %62 = phi ptr [ %56, %55 ], [ null, %52 ]
  %63 = tail call ptr @vec_gc_o_reserve(ptr noundef %62, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %63, ptr %49, align 8, !tbaa !6
  %64 = load i32, ptr %63, align 8, !tbaa !159
  br label %65

65:                                               ; preds = %61, %55
  %66 = phi i32 [ %59, %55 ], [ %64, %61 ]
  %67 = phi ptr [ %56, %55 ], [ %63, %61 ]
  %68 = add i32 %66, 1
  store i32 %68, ptr %67, align 8, !tbaa !159
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %67, i64 0, i32 2, i64 %69
  store i32 85, ptr %70, align 8, !tbaa.struct !179
  %71 = getelementptr inbounds i8, ptr %70, i64 8
  store i32 4, ptr %71, align 8, !tbaa.struct !202
  %72 = getelementptr inbounds i8, ptr %70, i64 16
  store i64 %46, ptr %72, align 8, !tbaa.struct !203
  br label %73

73:                                               ; preds = %44, %65
  store i8 1, ptr %3, align 1, !tbaa !17
  br label %74

74:                                               ; preds = %73, %37
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_location_lists(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !157
  %4 = icmp eq ptr %3, null
  br i1 %4, label %88, label %5

5:                                                ; preds = %1, %84
  %6 = phi ptr [ %85, %84 ], [ %3, %1 ]
  %7 = phi i32 [ %86, %84 ], [ 0, %1 ]
  %8 = load i32, ptr %6, align 8, !tbaa !159
  %9 = icmp ugt i32 %8, %7
  br i1 %9, label %10, label %88

10:                                               ; preds = %5
  %11 = zext i32 %7 to i64
  %12 = getelementptr %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %11, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !163
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %84

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %11, i32 1, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %17, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !274
  tail call void @assemble_name(ptr noundef %18, ptr noundef %20) #31
  %21 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %22 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %21)
  br label %23

23:                                               ; preds = %77, %15
  %24 = phi ptr [ %78, %77 ], [ %17, %15 ]
  %25 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !301
  %27 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %24, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !302
  %29 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %26, ptr noundef nonnull dereferenceable(1) %28)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %77, label %31

31:                                               ; preds = %23
  %32 = load i8, ptr @have_multiple_function_sections, align 1, !tbaa !17
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %24, i64 0, i32 4
  %36 = load ptr, ptr %35, align 8, !tbaa !303
  %37 = load ptr, ptr %19, align 8, !tbaa !274
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef %26, ptr noundef %36, ptr noundef nonnull @.str.326, ptr noundef %37) #31
  %38 = load ptr, ptr %27, align 8, !tbaa !302
  %39 = load ptr, ptr %35, align 8, !tbaa !303
  %40 = load ptr, ptr %19, align 8, !tbaa !274
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_delta(i32 noundef 4, ptr noundef %38, ptr noundef %39, ptr noundef nonnull @.str.327, ptr noundef %40) #31
  br label %45

41:                                               ; preds = %31
  %42 = load ptr, ptr %19, align 8, !tbaa !274
  tail call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %26, ptr noundef nonnull @.str.326, ptr noundef %42) #31
  %43 = load ptr, ptr %27, align 8, !tbaa !302
  %44 = load ptr, ptr %19, align 8, !tbaa !274
  tail call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %43, ptr noundef nonnull @.str.327, ptr noundef %44) #31
  br label %45

45:                                               ; preds = %41, %34
  %46 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %24, i64 0, i32 5
  %47 = load ptr, ptr %46, align 8, !tbaa !270
  %48 = icmp eq ptr %47, null
  br i1 %48, label %74, label %49

49:                                               ; preds = %45, %56
  %50 = phi i64 [ %58, %56 ], [ 0, %45 ]
  %51 = phi ptr [ %59, %56 ], [ %47, %45 ]
  %52 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %51, i64 0, i32 1
  %53 = load i16, ptr %52, align 8
  %54 = trunc i16 %53 to i8
  switch i8 %54, label %56 [
    i8 47, label %55
    i8 40, label %55
  ]

55:                                               ; preds = %49, %49
  br label %61

56:                                               ; preds = %49
  %57 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %51)
  %58 = add i64 %57, %50
  %59 = load ptr, ptr %51, align 8, !tbaa !57
  %60 = icmp eq ptr %59, null
  br i1 %60, label %70, label %49, !llvm.loop !59

61:                                               ; preds = %55, %61
  %62 = phi i64 [ %67, %61 ], [ 0, %55 ]
  %63 = phi ptr [ %68, %61 ], [ %47, %55 ]
  %64 = trunc i64 %62 to i32
  %65 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %63, i64 0, i32 2
  store i32 %64, ptr %65, align 4, !tbaa !60
  %66 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %63)
  %67 = add i64 %66, %62
  %68 = load ptr, ptr %63, align 8, !tbaa !57
  %69 = icmp eq ptr %68, null
  br i1 %69, label %70, label %61, !llvm.loop !61

70:                                               ; preds = %56, %61
  %71 = phi i64 [ %67, %61 ], [ %58, %56 ]
  %72 = icmp ult i64 %71, 65536
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10392, ptr noundef nonnull @.str.5) #31
  br label %74

74:                                               ; preds = %73, %70, %45
  %75 = phi i64 [ %71, %70 ], [ %71, %73 ], [ 0, %45 ]
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef %75, ptr noundef nonnull @.str.217, ptr noundef nonnull @.str.328) #31
  %76 = load ptr, ptr %46, align 8, !tbaa !270
  tail call fastcc void @output_loc_sequence(ptr noundef %76)
  br label %77

77:                                               ; preds = %74, %23
  %78 = load ptr, ptr %24, align 8, !tbaa !273
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %23, !llvm.loop !304

80:                                               ; preds = %77
  %81 = load ptr, ptr %19, align 8, !tbaa !274
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef nonnull @.str.329, ptr noundef %81) #31
  %82 = load ptr, ptr %19, align 8, !tbaa !274
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef nonnull @.str.330, ptr noundef %82) #31
  %83 = load ptr, ptr %2, align 8, !tbaa !157
  br label %84

84:                                               ; preds = %10, %80
  %85 = phi ptr [ %6, %10 ], [ %83, %80 ]
  %86 = add i32 %7, 1
  %87 = icmp eq ptr %85, null
  br i1 %87, label %88, label %5, !llvm.loop !305

88:                                               ; preds = %84, %5, %1
  %89 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %90 = load ptr, ptr %89, align 8, !tbaa !175
  %91 = icmp eq ptr %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %88, %92
  %93 = phi ptr [ %95, %92 ], [ %90, %88 ]
  %94 = getelementptr inbounds %struct.die_struct, ptr %93, i64 0, i32 5
  %95 = load ptr, ptr %94, align 8, !tbaa !176
  tail call fastcc void @output_location_lists(ptr noundef %95)
  %96 = load ptr, ptr %89, align 8, !tbaa !175
  %97 = icmp eq ptr %95, %96
  br i1 %97, label %98, label %92, !llvm.loop !306

98:                                               ; preds = %92, %88
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_comp_unit(ptr noundef %0, i32 noundef %1) unnamed_addr #10 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !175
  %7 = icmp eq ptr %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %4, %2
  tail call fastcc void @mark_dies(ptr noundef %0)
  tail call fastcc void @build_abbrev_table(ptr noundef %0)
  store i64 11, ptr @next_die_offset, align 8, !tbaa !38
  tail call fastcc void @calc_die_sizes(ptr noundef %0)
  %9 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %14 = add i64 %13, 24
  %15 = alloca i8, i64 %14, align 16
  %16 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %15, ptr noundef nonnull dereferenceable(1) @.str.331, ptr noundef nonnull %10)
  store ptr null, ptr %9, align 8, !tbaa !17
  %17 = call ptr @get_section(ptr noundef nonnull %15, i32 noundef 1024, ptr noundef null) #31
  call void @switch_to_section(ptr noundef %17) #31
  br label %20

18:                                               ; preds = %8
  %19 = load ptr, ptr @debug_info_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %19) #31
  br label %20

20:                                               ; preds = %18, %12
  %21 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %22 = load i64, ptr @next_die_offset, align 8, !tbaa !38
  %23 = add i64 %22, -4
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %23, ptr noundef nonnull @.str.333) #31
  %24 = sext i32 %21 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef %24, ptr noundef nonnull @.str.334) #31
  %25 = load ptr, ptr @debug_abbrev_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull @abbrev_section_label, ptr noundef %25, ptr noundef nonnull @.str.335) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.336) #31
  call fastcc void @output_die(ptr noundef nonnull %0)
  br i1 %11, label %27, label %26

26:                                               ; preds = %20
  call fastcc void @unmark_dies(ptr noundef nonnull %0)
  store ptr %10, ptr %9, align 8, !tbaa !17
  br label %27

27:                                               ; preds = %20, %26, %4
  ret void
}

declare ptr @htab_create(i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @htab_ct_hash(ptr nocapture noundef readonly %0) #17 {
  %2 = getelementptr inbounds %struct.comdat_type_struct, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8
  ret i32 %3
}

; Function Attrs: mustprogress nofree nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @htab_ct_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #19 {
  %3 = getelementptr inbounds %struct.comdat_type_struct, ptr %0, i64 0, i32 2
  %4 = getelementptr inbounds %struct.comdat_type_struct, ptr %1, i64 0, i32 2
  %5 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(8) %3, ptr noundef nonnull dereferenceable(8) %4, i64 8)
  %6 = icmp eq i32 %5, 0
  %7 = zext i1 %6 to i32
  ret i32 %7
}

declare ptr @htab_find_slot(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @htab_delete(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_pubnames(ptr noundef readonly %0) unnamed_addr #10 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %103, label %3

3:                                                ; preds = %1
  %4 = load i32, ptr %0, align 8, !tbaa !218
  %5 = load ptr, ptr @pubtype_table, align 8
  %6 = freeze ptr %5
  %7 = icmp eq ptr %6, %0
  br i1 %7, label %8, label %47

8:                                                ; preds = %3
  %9 = load i32, ptr @flag_eliminate_unused_debug_types, align 4
  %10 = freeze i32 %9
  %11 = icmp eq i32 %10, 0
  %12 = icmp eq i32 %4, 0
  br i1 %11, label %13, label %26

13:                                               ; preds = %8
  br i1 %12, label %61, label %14

14:                                               ; preds = %13
  %15 = zext i32 %4 to i64
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %24, %16 ]
  %18 = phi i64 [ 10, %14 ], [ %23, %16 ]
  %19 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %17, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !307
  %21 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %20)
  %22 = add i64 %18, 5
  %23 = add i64 %22, %21
  %24 = add nuw nsw i64 %17, 1
  %25 = icmp eq i64 %24, %15
  br i1 %25, label %61, label %16

26:                                               ; preds = %8
  br i1 %12, label %61, label %27

27:                                               ; preds = %26
  %28 = zext i32 %4 to i64
  br label %29

29:                                               ; preds = %43, %27
  %30 = phi i64 [ 0, %27 ], [ %45, %43 ]
  %31 = phi i64 [ 10, %27 ], [ %44, %43 ]
  %32 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %30
  %33 = load ptr, ptr %32, align 8, !tbaa !282
  %34 = getelementptr inbounds %struct.die_struct, ptr %33, i64 0, i32 7
  %35 = load i64, ptr %34, align 8, !tbaa !214
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %30, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !307
  %40 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %39)
  %41 = add i64 %31, 5
  %42 = add i64 %41, %40
  br label %43

43:                                               ; preds = %37, %29
  %44 = phi i64 [ %42, %37 ], [ %31, %29 ]
  %45 = add nuw nsw i64 %30, 1
  %46 = icmp eq i64 %45, %28
  br i1 %46, label %61, label %29

47:                                               ; preds = %3
  %48 = icmp eq i32 %4, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %47
  %50 = zext i32 %4 to i64
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %59, %51 ]
  %53 = phi i64 [ 10, %49 ], [ %58, %51 ]
  %54 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %52, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !307
  %56 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %55)
  %57 = add i64 %53, 5
  %58 = add i64 %57, %56
  %59 = add nuw nsw i64 %52, 1
  %60 = icmp eq i64 %59, %50
  br i1 %60, label %61, label %51

61:                                               ; preds = %51, %43, %16, %13, %26, %47
  %62 = phi i64 [ 10, %13 ], [ 10, %26 ], [ 10, %47 ], [ %23, %16 ], [ %44, %43 ], [ %58, %51 ]
  %63 = add i64 %62, 4
  %64 = load ptr, ptr @pubname_table, align 8, !tbaa !6
  %65 = icmp eq ptr %64, %0
  %66 = select i1 %65, ptr @.str.560, ptr @.str.561
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %63, ptr noundef nonnull %66) #31
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef 2, ptr noundef nonnull @.str.562) #31
  %67 = load ptr, ptr @debug_info_section, align 8, !tbaa !6
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull @debug_info_section_label, ptr noundef %67, ptr noundef nonnull @.str.563) #31
  %68 = load i64, ptr @next_die_offset, align 8, !tbaa !38
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %68, ptr noundef nonnull @.str.564) #31
  br i1 %2, label %109, label %69

69:                                               ; preds = %61
  %70 = load i32, ptr %0, align 8, !tbaa !218
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %109, label %72

72:                                               ; preds = %69, %98
  %73 = phi i64 [ %99, %98 ], [ 0, %69 ]
  %74 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %73
  %75 = load ptr, ptr @pubname_table, align 8, !tbaa !6
  %76 = icmp eq ptr %75, %0
  %77 = load ptr, ptr %74, align 8, !tbaa !282
  br i1 %76, label %78, label %84

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.die_struct, ptr %77, i64 0, i32 9
  %80 = load i32, ptr %79, align 8, !tbaa !235
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10893, ptr noundef nonnull @.str.5) #31
  %83 = load ptr, ptr %74, align 8, !tbaa !282
  br label %84

84:                                               ; preds = %82, %78, %72
  %85 = phi ptr [ %83, %82 ], [ %77, %78 ], [ %77, %72 ]
  %86 = load ptr, ptr @pubtype_table, align 8, !tbaa !6
  %87 = icmp eq ptr %86, %0
  %88 = getelementptr inbounds %struct.die_struct, ptr %85, i64 0, i32 7
  %89 = load i64, ptr %88, align 8, !tbaa !214
  br i1 %87, label %90, label %95

90:                                               ; preds = %84
  %91 = icmp eq i64 %89, 0
  %92 = load i32, ptr @flag_eliminate_unused_debug_types, align 4
  %93 = icmp ne i32 %92, 0
  %94 = select i1 %91, i1 %93, i1 false
  br i1 %94, label %98, label %95

95:                                               ; preds = %84, %90
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %89, ptr noundef nonnull @.str.565) #31
  %96 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %73, i32 1
  %97 = load ptr, ptr %96, align 8, !tbaa !307
  tail call void (ptr, i64, ptr, ...) @dw2_asm_output_nstring(ptr noundef %97, i64 noundef -1, ptr noundef nonnull @.str.566) #31
  br label %98

98:                                               ; preds = %95, %90
  %99 = add nuw nsw i64 %73, 1
  %100 = load i32, ptr %0, align 8, !tbaa !218
  %101 = zext i32 %100 to i64
  %102 = icmp ult i64 %99, %101
  br i1 %102, label %72, label %109

103:                                              ; preds = %1
  %104 = load ptr, ptr @pubname_table, align 8, !tbaa !6
  %105 = icmp eq ptr %104, %0
  %106 = select i1 %105, ptr @.str.560, ptr @.str.561
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 14, ptr noundef nonnull %106) #31
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 2, i64 noundef 2, ptr noundef nonnull @.str.562) #31
  %107 = load ptr, ptr @debug_info_section, align 8, !tbaa !6
  tail call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull @debug_info_section_label, ptr noundef %107, ptr noundef nonnull @.str.563) #31
  %108 = load i64, ptr @next_die_offset, align 8, !tbaa !38
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %108, ptr noundef nonnull @.str.564) #31
  br label %109

109:                                              ; preds = %98, %103, %69, %61
  tail call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef 0, ptr noundef null) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @output_indirect_string(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.indirect_string_node, ptr %3, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !308
  %6 = icmp eq ptr %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.indirect_string_node, ptr %3, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !267
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = load ptr, ptr @debug_str_section, align 8, !tbaa !6
  tail call void @switch_to_section(ptr noundef %12) #31
  %13 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %14 = load ptr, ptr %4, align 8, !tbaa !308
  tail call void @assemble_name(ptr noundef %13, ptr noundef %14) #31
  %15 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %16 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %15)
  %17 = load ptr, ptr %3, align 8, !tbaa !186
  %18 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %17)
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  tail call void @assemble_string(ptr noundef %17, i32 noundef %20) #31
  br label %21

21:                                               ; preds = %11, %7, %2
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @tree_add_const_value_attribute(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = icmp eq ptr %1, null
  %6 = icmp eq ptr %4, null
  %7 = select i1 %5, i1 true, i1 %6
  %8 = load ptr, ptr @global_trees, align 16
  %9 = icmp eq ptr %4, %8
  %10 = select i1 %7, i1 true, i1 %9
  br i1 %10, label %66, label %11

11:                                               ; preds = %2
  %12 = load i64, ptr %1, align 8
  %13 = and i64 %12, 65535
  %14 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %13
  %15 = load i32, ptr %14, align 4, !tbaa !17
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16115, ptr noundef nonnull @.str.5) #31
  br label %18

18:                                               ; preds = %11, %17
  %19 = tail call fastcc ptr @rtl_for_decl_init(ptr noundef nonnull %1, ptr noundef nonnull %4)
  %20 = icmp eq ptr %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = tail call fastcc zeroext i8 @add_const_value_attribute(ptr noundef %0, ptr noundef nonnull %19), !range !155
  br label %66

23:                                               ; preds = %18
  %24 = tail call ptr @initializer_constant_valid_p(ptr noundef nonnull %1, ptr noundef nonnull %4) #31
  %25 = icmp eq ptr %24, null
  br i1 %25, label %66, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %3, align 8, !tbaa !17
  %28 = tail call i64 @int_size_in_bytes(ptr noundef %27) #31
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %30, label %66

30:                                               ; preds = %26
  %31 = trunc i64 %28 to i32
  %32 = icmp ult i64 %28, 2147483648
  br i1 %32, label %33, label %66

33:                                               ; preds = %30
  %34 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef %28) #31
  %35 = tail call fastcc zeroext i8 @native_encode_initializer(ptr noundef nonnull %1, ptr noundef %34, i32 noundef %31)
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %66, label %37

37:                                               ; preds = %33
  %38 = icmp eq ptr %0, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !6
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %44, ptr %40, align 8, !tbaa !157
  %45 = icmp eq ptr %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43, %39
  %47 = phi ptr [ %44, %43 ], [ %41, %39 ]
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %47, i64 0, i32 1
  %49 = load i32, ptr %48, align 4, !tbaa !201
  %50 = load i32, ptr %47, align 8, !tbaa !159
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %46, %43
  %53 = phi ptr [ %47, %46 ], [ null, %43 ]
  %54 = tail call ptr @vec_gc_o_reserve(ptr noundef %53, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %54, ptr %40, align 8, !tbaa !6
  %55 = load i32, ptr %54, align 8, !tbaa !159
  br label %56

56:                                               ; preds = %52, %46
  %57 = phi i32 [ %50, %46 ], [ %55, %52 ]
  %58 = phi ptr [ %47, %46 ], [ %54, %52 ]
  %59 = add i32 %57, 1
  store i32 %59, ptr %58, align 8, !tbaa !159
  %60 = zext i32 %57 to i64
  %61 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %58, i64 0, i32 2, i64 %60
  store i32 28, ptr %61, align 8, !tbaa.struct !179
  %62 = getelementptr inbounds i8, ptr %61, i64 8
  store i32 8, ptr %62, align 8, !tbaa.struct !202
  %63 = getelementptr inbounds i8, ptr %61, i64 16
  store ptr %34, ptr %63, align 8, !tbaa.struct !203
  %64 = getelementptr inbounds i8, ptr %61, i64 24
  store i32 %31, ptr %64, align 8, !tbaa.struct !294
  %65 = getelementptr inbounds i8, ptr %61, i64 28
  store i32 1, ptr %65, align 4, !tbaa.struct !309
  br label %66

66:                                               ; preds = %56, %37, %26, %30, %33, %23, %2, %21
  %67 = phi i8 [ %22, %21 ], [ 0, %2 ], [ 0, %23 ], [ 0, %33 ], [ 0, %30 ], [ 0, %26 ], [ 1, %37 ], [ 1, %56 ]
  ret i8 %67
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @rtl_for_decl_init(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8, !tbaa !6
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 28
  %7 = load i64, ptr %1, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 15
  %10 = select i1 %6, i1 %9, i1 false
  br i1 %10, label %11, label %65

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %13, align 8
  %17 = and i64 %16, 65535
  %18 = icmp eq i64 %17, 14
  br i1 %18, label %19, label %21

19:                                               ; preds = %11
  %20 = tail call i32 @vector_type_mode(ptr noundef nonnull %13) #31
  br label %26

21:                                               ; preds = %11
  %22 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = lshr i32 %23, 16
  %25 = and i32 %24, 255
  br label %26

26:                                               ; preds = %21, %19
  %27 = phi i32 [ %20, %19 ], [ %25, %21 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %28
  %30 = load i8, ptr %29, align 1, !tbaa !17
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %118

32:                                               ; preds = %26
  %33 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %28
  %34 = load i8, ptr %33, align 1, !tbaa !17
  %35 = icmp eq i8 %34, 1
  %36 = icmp ne ptr %15, null
  %37 = select i1 %35, i1 %36, i1 false
  br i1 %37, label %38, label %118

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 13
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = tail call i32 @integer_zerop(ptr noundef %40) #31
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %118, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 14
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = getelementptr inbounds %struct.tree_string, ptr %0, i64 0, i32 1
  %47 = load i32, ptr %46, align 8, !tbaa !17
  %48 = add nsw i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = tail call i32 @compare_tree_int(ptr noundef %45, i64 noundef %49) #31
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %118

52:                                               ; preds = %43
  %53 = load i32, ptr %46, align 8, !tbaa !17
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.tree_string, ptr %0, i64 0, i32 2
  %56 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %55)
  %57 = add i64 %56, 1
  %58 = icmp eq i64 %57, %54
  br i1 %58, label %59, label %118

59:                                               ; preds = %52
  %60 = tail call ptr @ggc_alloc_string(ptr noundef nonnull %55, i32 noundef -1) #31
  %61 = tail call ptr @gen_rtx_fmt_s_stat(i32 noundef 34, i32 noundef 0, ptr noundef %60) #31
  %62 = tail call ptr @gen_rtx_MEM(i32 noundef 1, ptr noundef %61) #31
  %63 = load i32, ptr %62, align 8
  %64 = or i32 %63, 67108864
  store i32 %64, ptr %62, align 8
  br label %118

65:                                               ; preds = %2
  %66 = trunc i64 %7 to i16
  switch i16 %66, label %70 [
    i16 15, label %118
    i16 16, label %118
    i16 17, label %118
    i16 18, label %118
    i16 13, label %118
    i16 14, label %67
  ]

67:                                               ; preds = %65
  %68 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #31
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %118, label %70

70:                                               ; preds = %65, %67
  %71 = tail call ptr @initializer_constant_valid_p(ptr noundef nonnull %0, ptr noundef nonnull %1) #31
  %72 = icmp eq ptr %71, null
  br i1 %72, label %118, label %73

73:                                               ; preds = %70
  %74 = call ptr @walk_tree_1(ptr noundef nonnull %3, ptr noundef nonnull @reference_to_unused, ptr noundef null, ptr noundef null, ptr noundef null) #31
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %118

76:                                               ; preds = %73
  %77 = load i64, ptr %1, align 8
  %78 = and i64 %77, 65535
  %79 = icmp eq i64 %78, 14
  %80 = load ptr, ptr %3, align 8, !tbaa !6
  br i1 %79, label %81, label %109

81:                                               ; preds = %76
  %82 = load i64, ptr %80, align 8
  %83 = trunc i64 %82 to i16
  switch i16 %83, label %118 [
    i16 27, label %109
    i16 51, label %84
  ]

84:                                               ; preds = %81
  %85 = and i64 %82, 131072
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %118, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.tree_constructor, ptr %80, i64 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !17
  %90 = icmp eq ptr %89, null
  br i1 %90, label %107, label %91

91:                                               ; preds = %87
  %92 = load i32, ptr %89, align 8, !tbaa !310
  %93 = zext i32 %92 to i64
  br label %94

94:                                               ; preds = %97, %91
  %95 = phi i64 [ 0, %91 ], [ %106, %97 ]
  %96 = icmp eq i64 %95, %93
  br i1 %96, label %107, label %97

97:                                               ; preds = %94
  %98 = and i64 %95, 4294967295
  %99 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %89, i64 0, i32 2, i64 %98, i32 1
  %100 = load ptr, ptr %99, align 8, !tbaa !312
  %101 = load i64, ptr %100, align 8
  %102 = and i64 %101, 65535
  %103 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !17
  %105 = icmp eq i32 %104, 1
  %106 = add nuw nsw i64 %95, 1
  br i1 %105, label %94, label %118, !llvm.loop !314

107:                                              ; preds = %94, %87
  %108 = call ptr @build_vector_from_ctor(ptr noundef nonnull %1, ptr noundef %89) #31
  store ptr %108, ptr %3, align 8, !tbaa !6
  br label %109

109:                                              ; preds = %107, %81, %76
  %110 = phi ptr [ %108, %107 ], [ %80, %81 ], [ %80, %76 ]
  %111 = call ptr @expand_expr_real(ptr noundef %110, ptr noundef null, i32 noundef 0, i32 noundef 4, ptr noundef null) #31
  %112 = icmp eq ptr %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = load i32, ptr %111, align 8
  %115 = and i32 %114, 65535
  %116 = icmp eq i32 %115, 43
  br i1 %116, label %117, label %118

117:                                              ; preds = %113
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15604, ptr noundef nonnull @.str.5) #31
  br label %118

118:                                              ; preds = %97, %67, %117, %113, %109, %73, %70, %59, %52, %43, %38, %32, %26, %65, %65, %65, %65, %65, %81, %84
  %119 = phi ptr [ null, %84 ], [ null, %81 ], [ null, %65 ], [ null, %67 ], [ null, %73 ], [ %111, %117 ], [ %111, %113 ], [ null, %109 ], [ null, %70 ], [ %62, %59 ], [ null, %52 ], [ null, %43 ], [ null, %38 ], [ null, %32 ], [ null, %26 ], [ null, %65 ], [ null, %65 ], [ null, %65 ], [ null, %65 ], [ null, %97 ]
  ret ptr %119
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @add_const_value_attribute(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca ptr, align 8
  %4 = alloca %struct.real_value, align 8
  %5 = alloca [4 x i64], align 16
  %6 = alloca %struct.real_value, align 8
  %7 = alloca [4 x i64], align 16
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = load i32, ptr %1, align 8
  br label %11

11:                                               ; preds = %511, %2
  %12 = phi i32 [ %10, %2 ], [ %514, %511 ]
  %13 = phi ptr [ %1, %2 ], [ %513, %511 ]
  %14 = trunc i32 %12 to i16
  switch i16 %14, label %547 [
    i16 30, label %15
    i16 32, label %72
    i16 33, label %183
    i16 34, label %431
    i16 35, label %511
    i16 45, label %520
    i16 44, label %528
    i16 49, label %548
    i16 121, label %548
    i16 31, label %548
    i16 43, label %535
  ]

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !17
  %18 = icmp slt i64 %17, 0
  %19 = icmp eq ptr %0, null
  br i1 %18, label %20, label %46

20:                                               ; preds = %15
  br i1 %19, label %548, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %26, ptr %22, align 8, !tbaa !157
  %27 = icmp eq ptr %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25, %21
  %29 = phi ptr [ %26, %25 ], [ %23, %21 ]
  %30 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %29, i64 0, i32 1
  %31 = load i32, ptr %30, align 4, !tbaa !201
  %32 = load i32, ptr %29, align 8, !tbaa !159
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %28, %25
  %35 = phi ptr [ %29, %28 ], [ null, %25 ]
  %36 = tail call ptr @vec_gc_o_reserve(ptr noundef %35, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %36, ptr %22, align 8, !tbaa !6
  %37 = load i32, ptr %36, align 8, !tbaa !159
  br label %38

38:                                               ; preds = %34, %28
  %39 = phi i32 [ %32, %28 ], [ %37, %34 ]
  %40 = phi ptr [ %29, %28 ], [ %36, %34 ]
  %41 = add i32 %39, 1
  store i32 %41, ptr %40, align 8, !tbaa !159
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %40, i64 0, i32 2, i64 %42
  store i32 28, ptr %43, align 8, !tbaa.struct !179
  %44 = getelementptr inbounds i8, ptr %43, i64 8
  store i32 5, ptr %44, align 8, !tbaa.struct !202
  %45 = getelementptr inbounds i8, ptr %43, i64 16
  store i64 %17, ptr %45, align 8, !tbaa.struct !203
  br label %548

46:                                               ; preds = %15
  br i1 %19, label %548, label %47

47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !6
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %52, ptr %48, align 8, !tbaa !157
  %53 = icmp eq ptr %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %51, %47
  %55 = phi ptr [ %52, %51 ], [ %49, %47 ]
  %56 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %55, i64 0, i32 1
  %57 = load i32, ptr %56, align 4, !tbaa !201
  %58 = load i32, ptr %55, align 8, !tbaa !159
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %54, %51
  %61 = phi ptr [ %55, %54 ], [ null, %51 ]
  %62 = tail call ptr @vec_gc_o_reserve(ptr noundef %61, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %62, ptr %48, align 8, !tbaa !6
  %63 = load i32, ptr %62, align 8, !tbaa !159
  br label %64

64:                                               ; preds = %60, %54
  %65 = phi i32 [ %58, %54 ], [ %63, %60 ]
  %66 = phi ptr [ %55, %54 ], [ %62, %60 ]
  %67 = add i32 %65, 1
  store i32 %67, ptr %66, align 8, !tbaa !159
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %68
  store i32 28, ptr %69, align 8, !tbaa.struct !179
  %70 = getelementptr inbounds i8, ptr %69, i64 8
  store i32 6, ptr %70, align 8, !tbaa.struct !202
  %71 = getelementptr inbounds i8, ptr %69, i64 16
  store i64 %17, ptr %71, align 8, !tbaa.struct !203
  br label %548

72:                                               ; preds = %11
  store ptr %13, ptr %8, align 8, !tbaa !6
  %73 = lshr i32 %12, 16
  %74 = and i32 %73, 255
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %75
  %77 = load i8, ptr %76, align 1, !tbaa !17
  %78 = and i8 %77, -2
  %79 = icmp eq i8 %78, 8
  br i1 %79, label %80, label %154

80:                                               ; preds = %72
  %81 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %75
  %82 = load i8, ptr %81, align 1, !tbaa !17
  %83 = zext i8 %82 to i64
  %84 = tail call ptr @ggc_alloc_stat(i64 noundef %83) #31
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #31
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #31
  %85 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull align 8 dereferenceable(32) %85, i64 32, i1 false), !tbaa.struct !315
  %86 = load i32, ptr %13, align 8
  %87 = lshr i32 %86, 16
  %88 = and i32 %87, 255
  %89 = call i64 @real_to_target(ptr noundef nonnull %7, ptr noundef nonnull %6, i32 noundef %88) #31
  %90 = load i32, ptr %13, align 8
  %91 = lshr i32 %90, 16
  %92 = and i32 %91, 255
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !17
  %96 = icmp ult i8 %95, 4
  br i1 %96, label %123, label %97

97:                                               ; preds = %80, %97
  %98 = phi i64 [ %113, %97 ], [ 0, %80 ]
  %99 = phi ptr [ %112, %97 ], [ %84, %80 ]
  %100 = getelementptr inbounds [4 x i64], ptr %7, i64 0, i64 %98
  %101 = load i64, ptr %100, align 8, !tbaa !38
  %102 = trunc i64 %101 to i8
  %103 = getelementptr inbounds i8, ptr %99, i64 1
  store i8 %102, ptr %99, align 1, !tbaa !17
  %104 = lshr i64 %101, 8
  %105 = trunc i64 %104 to i8
  %106 = getelementptr inbounds i8, ptr %99, i64 2
  store i8 %105, ptr %103, align 1, !tbaa !17
  %107 = lshr i64 %101, 16
  %108 = trunc i64 %107 to i8
  %109 = getelementptr inbounds i8, ptr %99, i64 3
  store i8 %108, ptr %106, align 1, !tbaa !17
  %110 = lshr i64 %101, 24
  %111 = trunc i64 %110 to i8
  store i8 %111, ptr %109, align 1, !tbaa !17
  %112 = getelementptr inbounds i8, ptr %99, i64 4
  %113 = add nuw nsw i64 %98, 1
  %114 = load i32, ptr %13, align 8
  %115 = lshr i32 %114, 16
  %116 = and i32 %115, 255
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %117
  %119 = load i8, ptr %118, align 1, !tbaa !17
  %120 = lshr i8 %119, 2
  %121 = zext i8 %120 to i64
  %122 = icmp ult i64 %113, %121
  br i1 %122, label %97, label %123, !llvm.loop !316

123:                                              ; preds = %97, %80
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #31
  %124 = lshr i8 %82, 2
  %125 = zext i8 %124 to i32
  %126 = icmp eq ptr %0, null
  br i1 %126, label %548, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %129 = load ptr, ptr %128, align 8, !tbaa !6
  %130 = icmp eq ptr %129, null
  br i1 %130, label %131, label %134

131:                                              ; preds = %127
  %132 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %132, ptr %128, align 8, !tbaa !157
  %133 = icmp eq ptr %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %131, %127
  %135 = phi ptr [ %132, %131 ], [ %129, %127 ]
  %136 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %135, i64 0, i32 1
  %137 = load i32, ptr %136, align 4, !tbaa !201
  %138 = load i32, ptr %135, align 8, !tbaa !159
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %140, label %144

140:                                              ; preds = %134, %131
  %141 = phi ptr [ %135, %134 ], [ null, %131 ]
  %142 = call ptr @vec_gc_o_reserve(ptr noundef %141, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %142, ptr %128, align 8, !tbaa !6
  %143 = load i32, ptr %142, align 8, !tbaa !159
  br label %144

144:                                              ; preds = %140, %134
  %145 = phi i32 [ %138, %134 ], [ %143, %140 ]
  %146 = phi ptr [ %135, %134 ], [ %142, %140 ]
  %147 = add i32 %145, 1
  store i32 %147, ptr %146, align 8, !tbaa !159
  %148 = zext i32 %145 to i64
  %149 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %146, i64 0, i32 2, i64 %148
  store i32 28, ptr %149, align 8, !tbaa.struct !179
  %150 = getelementptr inbounds i8, ptr %149, i64 8
  store i32 8, ptr %150, align 8, !tbaa.struct !202
  %151 = getelementptr inbounds i8, ptr %149, i64 16
  store ptr %84, ptr %151, align 8, !tbaa.struct !203
  %152 = getelementptr inbounds i8, ptr %149, i64 24
  store i32 %125, ptr %152, align 8, !tbaa.struct !294
  %153 = getelementptr inbounds i8, ptr %149, i64 28
  store i32 4, ptr %153, align 4, !tbaa.struct !309
  br label %548

154:                                              ; preds = %72
  %155 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  %156 = load <2 x i64>, ptr %155, align 8, !tbaa !17
  %157 = icmp eq ptr %0, null
  br i1 %157, label %548, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %160 = load ptr, ptr %159, align 8, !tbaa !6
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %165

162:                                              ; preds = %158
  %163 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %163, ptr %159, align 8, !tbaa !157
  %164 = icmp eq ptr %163, null
  br i1 %164, label %171, label %165

165:                                              ; preds = %162, %158
  %166 = phi ptr [ %163, %162 ], [ %160, %158 ]
  %167 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %166, i64 0, i32 1
  %168 = load i32, ptr %167, align 4, !tbaa !201
  %169 = load i32, ptr %166, align 8, !tbaa !159
  %170 = icmp eq i32 %168, %169
  br i1 %170, label %171, label %175

171:                                              ; preds = %165, %162
  %172 = phi ptr [ %166, %165 ], [ null, %162 ]
  %173 = tail call ptr @vec_gc_o_reserve(ptr noundef %172, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %173, ptr %159, align 8, !tbaa !6
  %174 = load i32, ptr %173, align 8, !tbaa !159
  br label %175

175:                                              ; preds = %171, %165
  %176 = phi i32 [ %169, %165 ], [ %174, %171 ]
  %177 = phi ptr [ %166, %165 ], [ %173, %171 ]
  %178 = add i32 %176, 1
  store i32 %178, ptr %177, align 8, !tbaa !159
  %179 = zext i32 %176 to i64
  %180 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %177, i64 0, i32 2, i64 %179
  store i32 28, ptr %180, align 8, !tbaa.struct !179
  %181 = getelementptr inbounds i8, ptr %180, i64 8
  store i32 7, ptr %181, align 8, !tbaa.struct !202
  %182 = getelementptr inbounds i8, ptr %180, i64 16
  store <2 x i64> %156, ptr %182, align 8
  br label %548

183:                                              ; preds = %11
  store ptr %13, ptr %8, align 8, !tbaa !6
  %184 = lshr i32 %12, 16
  %185 = and i32 %184, 255
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds [87 x i8], ptr @mode_inner, i64 0, i64 %186
  %188 = load i8, ptr %187, align 1, !tbaa !17
  %189 = icmp eq i8 %188, 0
  %190 = zext i8 %188 to i64
  %191 = select i1 %189, i64 %186, i64 %190
  %192 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %191
  %193 = load i8, ptr %192, align 1, !tbaa !17
  %194 = freeze i8 %193
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  %197 = load ptr, ptr %196, align 8, !tbaa !17
  %198 = load i32, ptr %197, align 8, !tbaa !73
  %199 = mul i32 %198, %195
  %200 = zext i32 %199 to i64
  %201 = tail call ptr @ggc_alloc_stat(i64 noundef %200) #31
  %202 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %186
  %203 = load i8, ptr %202, align 1, !tbaa !17
  switch i8 %203, label %401 [
    i8 12, label %209
    i8 17, label %204
  ]

204:                                              ; preds = %183
  %205 = icmp eq i32 %198, 0
  br i1 %205, label %402, label %206

206:                                              ; preds = %204
  %207 = zext i8 %194 to i64
  %208 = zext i32 %198 to i64
  br label %353

209:                                              ; preds = %183
  %210 = icmp eq i32 %198, 0
  br i1 %210, label %402, label %211

211:                                              ; preds = %209
  %212 = zext i8 %194 to i64
  %213 = icmp ult i8 %194, 9
  %214 = icmp eq i8 %194, 16
  %215 = icmp eq i8 %194, 0
  %216 = zext i32 %198 to i64
  br i1 %213, label %217, label %225

217:                                              ; preds = %211
  %218 = icmp eq i8 %194, 1
  %219 = icmp eq i8 %194, 2
  %220 = icmp eq i8 %194, 3
  %221 = icmp eq i8 %194, 4
  %222 = icmp eq i8 %194, 5
  %223 = icmp eq i8 %194, 6
  %224 = icmp eq i8 %194, 7
  br label %228

225:                                              ; preds = %211
  %226 = load ptr, ptr %8, align 8, !tbaa !6
  %227 = getelementptr inbounds %struct.rtx_def, ptr %226, i64 0, i32 1
  br label %280

228:                                              ; preds = %217, %276
  %229 = phi i64 [ %277, %276 ], [ 0, %217 ]
  %230 = phi ptr [ %278, %276 ], [ %201, %217 ]
  %231 = phi i64 [ %245, %276 ], [ undef, %217 ]
  %232 = load ptr, ptr %196, align 8, !tbaa !17
  %233 = getelementptr inbounds %struct.rtvec_def, ptr %232, i64 0, i32 1, i64 %229
  %234 = load ptr, ptr %233, align 8, !tbaa !6
  %235 = load i32, ptr %234, align 8
  %236 = trunc i32 %235 to i16
  switch i16 %236, label %243 [
    i16 30, label %240
    i16 32, label %237
  ]

237:                                              ; preds = %228
  %238 = getelementptr inbounds %struct.rtx_def, ptr %234, i64 0, i32 1
  %239 = load i64, ptr %238, align 8, !tbaa !17
  br label %244

240:                                              ; preds = %228
  %241 = getelementptr inbounds %struct.rtx_def, ptr %234, i64 0, i32 1
  %242 = load i64, ptr %241, align 8, !tbaa !17
  br label %244

243:                                              ; preds = %228
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15378, ptr noundef nonnull @.str.5) #31
  br label %244

244:                                              ; preds = %243, %240, %237
  %245 = phi i64 [ %231, %243 ], [ %239, %237 ], [ %242, %240 ]
  br i1 %215, label %276, label %246

246:                                              ; preds = %244
  %247 = trunc i64 %245 to i8
  store i8 %247, ptr %230, align 1, !tbaa !17
  br i1 %218, label %276, label %248, !llvm.loop !317

248:                                              ; preds = %246
  %249 = lshr i64 %245, 8
  %250 = getelementptr inbounds i8, ptr %230, i64 1
  %251 = trunc i64 %249 to i8
  store i8 %251, ptr %250, align 1, !tbaa !17
  br i1 %219, label %276, label %252, !llvm.loop !317

252:                                              ; preds = %248
  %253 = lshr i64 %245, 16
  %254 = getelementptr inbounds i8, ptr %230, i64 2
  %255 = trunc i64 %253 to i8
  store i8 %255, ptr %254, align 1, !tbaa !17
  br i1 %220, label %276, label %256, !llvm.loop !317

256:                                              ; preds = %252
  %257 = lshr i64 %245, 24
  %258 = getelementptr inbounds i8, ptr %230, i64 3
  %259 = trunc i64 %257 to i8
  store i8 %259, ptr %258, align 1, !tbaa !17
  br i1 %221, label %276, label %260, !llvm.loop !317

260:                                              ; preds = %256
  %261 = lshr i64 %245, 32
  %262 = getelementptr inbounds i8, ptr %230, i64 4
  %263 = trunc i64 %261 to i8
  store i8 %263, ptr %262, align 1, !tbaa !17
  br i1 %222, label %276, label %264, !llvm.loop !317

264:                                              ; preds = %260
  %265 = lshr i64 %245, 40
  %266 = getelementptr inbounds i8, ptr %230, i64 5
  %267 = trunc i64 %265 to i8
  store i8 %267, ptr %266, align 1, !tbaa !17
  br i1 %223, label %276, label %268, !llvm.loop !317

268:                                              ; preds = %264
  %269 = lshr i64 %245, 48
  %270 = getelementptr inbounds i8, ptr %230, i64 6
  %271 = trunc i64 %269 to i8
  store i8 %271, ptr %270, align 1, !tbaa !17
  br i1 %224, label %276, label %272, !llvm.loop !317

272:                                              ; preds = %268
  %273 = lshr i64 %245, 56
  %274 = getelementptr inbounds i8, ptr %230, i64 7
  %275 = trunc i64 %273 to i8
  store i8 %275, ptr %274, align 1, !tbaa !17
  br label %276

276:                                              ; preds = %246, %248, %252, %256, %260, %264, %268, %272, %244
  %277 = add nuw nsw i64 %229, 1
  %278 = getelementptr inbounds i8, ptr %230, i64 %212
  %279 = icmp eq i64 %277, %216
  br i1 %279, label %402, label %228, !llvm.loop !318

280:                                              ; preds = %225, %305
  %281 = phi i64 [ 0, %225 ], [ %350, %305 ]
  %282 = phi ptr [ %201, %225 ], [ %351, %305 ]
  %283 = phi i64 [ undef, %225 ], [ %302, %305 ]
  %284 = phi i64 [ undef, %225 ], [ %301, %305 ]
  %285 = load ptr, ptr %227, align 8, !tbaa !17
  %286 = getelementptr inbounds %struct.rtvec_def, ptr %285, i64 0, i32 1, i64 %281
  %287 = load ptr, ptr %286, align 8, !tbaa !6
  %288 = load i32, ptr %287, align 8
  %289 = trunc i32 %288 to i16
  switch i16 %289, label %299 [
    i16 30, label %290
    i16 32, label %294
  ]

290:                                              ; preds = %280
  %291 = getelementptr inbounds %struct.rtx_def, ptr %287, i64 0, i32 1
  %292 = load i64, ptr %291, align 8, !tbaa !17
  %293 = ashr i64 %292, 63
  br label %300

294:                                              ; preds = %280
  %295 = getelementptr inbounds %struct.rtx_def, ptr %287, i64 0, i32 1
  %296 = load i64, ptr %295, align 8, !tbaa !17
  %297 = getelementptr inbounds %struct.rtx_def, ptr %287, i64 0, i32 1, i32 0, i32 0, i64 1
  %298 = load i64, ptr %297, align 8, !tbaa !17
  br label %300

299:                                              ; preds = %280
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15378, ptr noundef nonnull @.str.5) #31
  br label %300

300:                                              ; preds = %299, %294, %290
  %301 = phi i64 [ %284, %299 ], [ %296, %294 ], [ %292, %290 ]
  %302 = phi i64 [ %283, %299 ], [ %298, %294 ], [ %293, %290 ]
  %303 = getelementptr inbounds i8, ptr %282, i64 8
  br i1 %214, label %305, label %304

304:                                              ; preds = %300
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15388, ptr noundef nonnull @.str.5) #31
  br label %305

305:                                              ; preds = %300, %304
  %306 = trunc i64 %301 to i8
  %307 = getelementptr inbounds i8, ptr %282, i64 1
  store i8 %306, ptr %282, align 1, !tbaa !17
  %308 = lshr i64 %301, 8
  %309 = trunc i64 %308 to i8
  %310 = getelementptr inbounds i8, ptr %282, i64 2
  store i8 %309, ptr %307, align 1, !tbaa !17
  %311 = lshr i64 %301, 16
  %312 = trunc i64 %311 to i8
  %313 = getelementptr inbounds i8, ptr %282, i64 3
  store i8 %312, ptr %310, align 1, !tbaa !17
  %314 = lshr i64 %301, 24
  %315 = trunc i64 %314 to i8
  %316 = getelementptr inbounds i8, ptr %282, i64 4
  store i8 %315, ptr %313, align 1, !tbaa !17
  %317 = lshr i64 %301, 32
  %318 = trunc i64 %317 to i8
  %319 = getelementptr inbounds i8, ptr %282, i64 5
  store i8 %318, ptr %316, align 1, !tbaa !17
  %320 = lshr i64 %301, 40
  %321 = trunc i64 %320 to i8
  %322 = getelementptr inbounds i8, ptr %282, i64 6
  store i8 %321, ptr %319, align 1, !tbaa !17
  %323 = lshr i64 %301, 48
  %324 = trunc i64 %323 to i8
  %325 = getelementptr inbounds i8, ptr %282, i64 7
  store i8 %324, ptr %322, align 1, !tbaa !17
  %326 = lshr i64 %301, 56
  %327 = trunc i64 %326 to i8
  store i8 %327, ptr %325, align 1, !tbaa !17
  %328 = trunc i64 %302 to i8
  %329 = getelementptr inbounds i8, ptr %282, i64 9
  store i8 %328, ptr %303, align 1, !tbaa !17
  %330 = lshr i64 %302, 8
  %331 = trunc i64 %330 to i8
  %332 = getelementptr inbounds i8, ptr %282, i64 10
  store i8 %331, ptr %329, align 1, !tbaa !17
  %333 = lshr i64 %302, 16
  %334 = trunc i64 %333 to i8
  %335 = getelementptr inbounds i8, ptr %282, i64 11
  store i8 %334, ptr %332, align 1, !tbaa !17
  %336 = lshr i64 %302, 24
  %337 = trunc i64 %336 to i8
  %338 = getelementptr inbounds i8, ptr %282, i64 12
  store i8 %337, ptr %335, align 1, !tbaa !17
  %339 = lshr i64 %302, 32
  %340 = trunc i64 %339 to i8
  %341 = getelementptr inbounds i8, ptr %282, i64 13
  store i8 %340, ptr %338, align 1, !tbaa !17
  %342 = lshr i64 %302, 40
  %343 = trunc i64 %342 to i8
  %344 = getelementptr inbounds i8, ptr %282, i64 14
  store i8 %343, ptr %341, align 1, !tbaa !17
  %345 = lshr i64 %302, 48
  %346 = trunc i64 %345 to i8
  %347 = getelementptr inbounds i8, ptr %282, i64 15
  store i8 %346, ptr %344, align 1, !tbaa !17
  %348 = lshr i64 %302, 56
  %349 = trunc i64 %348 to i8
  store i8 %349, ptr %347, align 1, !tbaa !17
  %350 = add nuw nsw i64 %281, 1
  %351 = getelementptr inbounds i8, ptr %282, i64 %212
  %352 = icmp eq i64 %350, %216
  br i1 %352, label %402, label %280, !llvm.loop !318

353:                                              ; preds = %206, %397
  %354 = phi i64 [ 0, %206 ], [ %398, %397 ]
  %355 = phi ptr [ %201, %206 ], [ %399, %397 ]
  %356 = load ptr, ptr %196, align 8, !tbaa !17
  %357 = getelementptr inbounds %struct.rtvec_def, ptr %356, i64 0, i32 1, i64 %354
  %358 = load ptr, ptr %357, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #31
  %359 = getelementptr inbounds %struct.rtx_def, ptr %358, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(32) %359, i64 32, i1 false), !tbaa.struct !315
  %360 = load i32, ptr %358, align 8
  %361 = lshr i32 %360, 16
  %362 = and i32 %361, 255
  %363 = call i64 @real_to_target(ptr noundef nonnull %5, ptr noundef nonnull %4, i32 noundef %362) #31
  %364 = load i32, ptr %358, align 8
  %365 = lshr i32 %364, 16
  %366 = and i32 %365, 255
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %367
  %369 = load i8, ptr %368, align 1, !tbaa !17
  %370 = icmp ult i8 %369, 4
  br i1 %370, label %397, label %371

371:                                              ; preds = %353, %371
  %372 = phi i64 [ %387, %371 ], [ 0, %353 ]
  %373 = phi ptr [ %386, %371 ], [ %355, %353 ]
  %374 = getelementptr inbounds [4 x i64], ptr %5, i64 0, i64 %372
  %375 = load i64, ptr %374, align 8, !tbaa !38
  %376 = trunc i64 %375 to i8
  %377 = getelementptr inbounds i8, ptr %373, i64 1
  store i8 %376, ptr %373, align 1, !tbaa !17
  %378 = lshr i64 %375, 8
  %379 = trunc i64 %378 to i8
  %380 = getelementptr inbounds i8, ptr %373, i64 2
  store i8 %379, ptr %377, align 1, !tbaa !17
  %381 = lshr i64 %375, 16
  %382 = trunc i64 %381 to i8
  %383 = getelementptr inbounds i8, ptr %373, i64 3
  store i8 %382, ptr %380, align 1, !tbaa !17
  %384 = lshr i64 %375, 24
  %385 = trunc i64 %384 to i8
  store i8 %385, ptr %383, align 1, !tbaa !17
  %386 = getelementptr inbounds i8, ptr %373, i64 4
  %387 = add nuw nsw i64 %372, 1
  %388 = load i32, ptr %358, align 8
  %389 = lshr i32 %388, 16
  %390 = and i32 %389, 255
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %391
  %393 = load i8, ptr %392, align 1, !tbaa !17
  %394 = lshr i8 %393, 2
  %395 = zext i8 %394 to i64
  %396 = icmp ult i64 %387, %395
  br i1 %396, label %371, label %397, !llvm.loop !316

397:                                              ; preds = %371, %353
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #31
  %398 = add nuw nsw i64 %354, 1
  %399 = getelementptr inbounds i8, ptr %355, i64 %207
  %400 = icmp eq i64 %398, %208
  br i1 %400, label %402, label %353, !llvm.loop !319

401:                                              ; preds = %183
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15409, ptr noundef nonnull @.str.5) #31
  br label %402

402:                                              ; preds = %397, %305, %276, %204, %209, %401
  %403 = icmp eq ptr %0, null
  br i1 %403, label %548, label %404

404:                                              ; preds = %402
  %405 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %406 = load ptr, ptr %405, align 8, !tbaa !6
  %407 = icmp eq ptr %406, null
  br i1 %407, label %408, label %411

408:                                              ; preds = %404
  %409 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %409, ptr %405, align 8, !tbaa !157
  %410 = icmp eq ptr %409, null
  br i1 %410, label %417, label %411

411:                                              ; preds = %408, %404
  %412 = phi ptr [ %409, %408 ], [ %406, %404 ]
  %413 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %412, i64 0, i32 1
  %414 = load i32, ptr %413, align 4, !tbaa !201
  %415 = load i32, ptr %412, align 8, !tbaa !159
  %416 = icmp eq i32 %414, %415
  br i1 %416, label %417, label %421

417:                                              ; preds = %411, %408
  %418 = phi ptr [ %412, %411 ], [ null, %408 ]
  %419 = call ptr @vec_gc_o_reserve(ptr noundef %418, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %419, ptr %405, align 8, !tbaa !6
  %420 = load i32, ptr %419, align 8, !tbaa !159
  br label %421

421:                                              ; preds = %417, %411
  %422 = phi i32 [ %415, %411 ], [ %420, %417 ]
  %423 = phi ptr [ %412, %411 ], [ %419, %417 ]
  %424 = add i32 %422, 1
  store i32 %424, ptr %423, align 8, !tbaa !159
  %425 = zext i32 %422 to i64
  %426 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %423, i64 0, i32 2, i64 %425
  store i32 28, ptr %426, align 8, !tbaa.struct !179
  %427 = getelementptr inbounds i8, ptr %426, i64 8
  store i32 8, ptr %427, align 8, !tbaa.struct !202
  %428 = getelementptr inbounds i8, ptr %426, i64 16
  store ptr %201, ptr %428, align 8, !tbaa.struct !203
  %429 = getelementptr inbounds i8, ptr %426, i64 24
  store i32 %198, ptr %429, align 8, !tbaa.struct !294
  %430 = getelementptr inbounds i8, ptr %426, i64 28
  store i32 %195, ptr %430, align 4, !tbaa.struct !309
  br label %548

431:                                              ; preds = %11
  store ptr %13, ptr %8, align 8, !tbaa !6
  %432 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %433 = icmp slt i32 %432, 4
  %434 = load i32, ptr @dwarf_strict, align 4
  %435 = icmp ne i32 %434, 0
  %436 = select i1 %433, i1 %435, i1 false
  br i1 %436, label %548, label %437

437:                                              ; preds = %431
  %438 = call i32 @resolve_one_addr(ptr noundef nonnull %8, ptr poison), !range !37
  %439 = load ptr, ptr %8, align 8, !tbaa !6
  br label %440

440:                                              ; preds = %529, %437
  %441 = phi ptr [ %13, %529 ], [ %439, %437 ]
  %442 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %443 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %442, i64 0, i32 1
  %444 = load i16, ptr %443, align 8
  %445 = and i16 %444, -256
  %446 = or i16 %445, 3
  store i16 %446, ptr %443, align 8
  %447 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %442, i64 0, i32 3
  %448 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %442, i64 0, i32 3, i32 1
  %449 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %442, i64 0, i32 4
  store i32 6, ptr %449, align 8, !tbaa !49
  %450 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %442, i64 0, i32 4, i32 1
  store i64 0, ptr %450, align 8, !tbaa !17
  store ptr %442, ptr %9, align 8, !tbaa !6
  store i32 0, ptr %447, align 8, !tbaa !52
  store ptr %441, ptr %448, align 8, !tbaa !17
  %451 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %452 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %451, i64 0, i32 1
  %453 = load i16, ptr %452, align 8
  %454 = and i16 %453, -256
  %455 = or i16 %454, 159
  store i16 %455, ptr %452, align 8
  %456 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %451, i64 0, i32 3
  store i32 6, ptr %456, align 8, !tbaa !52
  %457 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %451, i64 0, i32 3, i32 1
  store i64 0, ptr %457, align 8, !tbaa !17
  %458 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %451, i64 0, i32 4
  store i32 6, ptr %458, align 8, !tbaa !49
  %459 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %451, i64 0, i32 4, i32 1
  store i64 0, ptr %459, align 8, !tbaa !17
  br label %460

460:                                              ; preds = %460, %440
  %461 = phi ptr [ %9, %440 ], [ %462, %460 ]
  %462 = load ptr, ptr %461, align 8, !tbaa !6
  %463 = icmp eq ptr %462, null
  br i1 %463, label %464, label %460, !llvm.loop !53

464:                                              ; preds = %460
  store ptr %451, ptr %461, align 8, !tbaa !6
  %465 = load ptr, ptr %9, align 8, !tbaa !6
  %466 = icmp eq ptr %0, null
  br i1 %466, label %493, label %467

467:                                              ; preds = %464
  %468 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %469 = load ptr, ptr %468, align 8, !tbaa !6
  %470 = icmp eq ptr %469, null
  br i1 %470, label %471, label %474

471:                                              ; preds = %467
  %472 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %472, ptr %468, align 8, !tbaa !157
  %473 = icmp eq ptr %472, null
  br i1 %473, label %480, label %474

474:                                              ; preds = %471, %467
  %475 = phi ptr [ %472, %471 ], [ %469, %467 ]
  %476 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %475, i64 0, i32 1
  %477 = load i32, ptr %476, align 4, !tbaa !201
  %478 = load i32, ptr %475, align 8, !tbaa !159
  %479 = icmp eq i32 %477, %478
  br i1 %479, label %480, label %484

480:                                              ; preds = %474, %471
  %481 = phi ptr [ %475, %474 ], [ null, %471 ]
  %482 = tail call ptr @vec_gc_o_reserve(ptr noundef %481, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %482, ptr %468, align 8, !tbaa !6
  %483 = load i32, ptr %482, align 8, !tbaa !159
  br label %484

484:                                              ; preds = %480, %474
  %485 = phi i32 [ %478, %474 ], [ %483, %480 ]
  %486 = phi ptr [ %475, %474 ], [ %482, %480 ]
  %487 = add i32 %485, 1
  store i32 %487, ptr %486, align 8, !tbaa !159
  %488 = zext i32 %485 to i64
  %489 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %486, i64 0, i32 2, i64 %488
  store i32 2, ptr %489, align 8, !tbaa.struct !179
  %490 = getelementptr inbounds i8, ptr %489, i64 8
  store i32 2, ptr %490, align 8, !tbaa.struct !202
  %491 = getelementptr inbounds i8, ptr %489, i64 16
  store ptr %465, ptr %491, align 8, !tbaa.struct !203
  %492 = load ptr, ptr %8, align 8, !tbaa !6
  br label %493

493:                                              ; preds = %464, %484
  %494 = phi ptr [ %441, %464 ], [ %492, %484 ]
  %495 = load ptr, ptr @used_rtx_array, align 8, !tbaa !6
  %496 = icmp eq ptr %495, null
  br i1 %496, label %502, label %497

497:                                              ; preds = %493
  %498 = getelementptr inbounds %struct.VEC_rtx_base, ptr %495, i64 0, i32 1
  %499 = load i32, ptr %498, align 4, !tbaa !109
  %500 = load i32, ptr %495, align 8, !tbaa !102
  %501 = icmp eq i32 %499, %500
  br i1 %501, label %502, label %505

502:                                              ; preds = %497, %493
  %503 = tail call ptr @vec_gc_p_reserve(ptr noundef %495, i32 noundef 1) #31
  store ptr %503, ptr @used_rtx_array, align 8, !tbaa !6
  %504 = load i32, ptr %503, align 8, !tbaa !102
  br label %505

505:                                              ; preds = %497, %502
  %506 = phi i32 [ %500, %497 ], [ %504, %502 ]
  %507 = phi ptr [ %495, %497 ], [ %503, %502 ]
  %508 = add i32 %506, 1
  store i32 %508, ptr %507, align 8, !tbaa !102
  %509 = zext i32 %506 to i64
  %510 = getelementptr inbounds %struct.VEC_rtx_base, ptr %507, i64 0, i32 2, i64 %509
  store ptr %494, ptr %510, align 8, !tbaa !6
  br label %548

511:                                              ; preds = %11
  %512 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  %513 = load ptr, ptr %512, align 8, !tbaa !17
  %514 = load i32, ptr %513, align 8
  %515 = and i32 %514, 65535
  %516 = zext i32 %515 to i64
  %517 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %516
  %518 = load i32, ptr %517, align 4, !tbaa !17
  %519 = icmp eq i32 %518, 9
  br i1 %519, label %11, label %522

520:                                              ; preds = %11
  store ptr %13, ptr %8, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store ptr %13, ptr %3, align 8, !tbaa !6
  %521 = call i32 @const_ok_for_output_1(ptr noundef nonnull %3, ptr poison), !range !37
  br label %525

522:                                              ; preds = %511
  %523 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  store ptr %13, ptr %8, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %524 = tail call i32 @for_each_rtx(ptr noundef nonnull %523, ptr noundef nonnull @const_ok_for_output_1, ptr noundef null) #31
  br label %525

525:                                              ; preds = %520, %522
  %526 = phi i32 [ %521, %520 ], [ %524, %522 ]
  %527 = icmp eq i32 %526, 0
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br i1 %527, label %529, label %548

528:                                              ; preds = %11
  store ptr %13, ptr %8, align 8, !tbaa !6
  br label %529

529:                                              ; preds = %528, %525
  %530 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %531 = icmp slt i32 %530, 4
  %532 = load i32, ptr @dwarf_strict, align 4
  %533 = icmp ne i32 %532, 0
  %534 = select i1 %531, i1 %533, i1 false
  br i1 %534, label %548, label %440

535:                                              ; preds = %11
  %536 = getelementptr inbounds %struct.rtx_def, ptr %13, i64 0, i32 1
  %537 = load ptr, ptr %536, align 8, !tbaa !17
  %538 = load i32, ptr %537, align 8
  %539 = and i32 %538, 65535
  %540 = icmp eq i32 %539, 34
  %541 = and i32 %12, 83820544
  %542 = icmp eq i32 %541, 67174400
  %543 = and i1 %542, %540
  br i1 %543, label %544, label %548

544:                                              ; preds = %535
  %545 = getelementptr inbounds %struct.rtx_def, ptr %537, i64 0, i32 1
  %546 = load ptr, ptr %545, align 8, !tbaa !17
  tail call fastcc void @add_AT_string(ptr noundef %0, i32 noundef 28, ptr noundef %546)
  br label %548

547:                                              ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15474, ptr noundef nonnull @.str.5) #31
  br label %548

548:                                              ; preds = %11, %11, %11, %421, %402, %175, %154, %144, %123, %64, %46, %38, %20, %535, %529, %525, %431, %547, %544, %505
  %549 = phi i8 [ 0, %547 ], [ 1, %544 ], [ 1, %505 ], [ 0, %431 ], [ 0, %525 ], [ 0, %529 ], [ 0, %535 ], [ 1, %20 ], [ 1, %38 ], [ 1, %46 ], [ 1, %64 ], [ 1, %123 ], [ 1, %144 ], [ 1, %154 ], [ 1, %175 ], [ 1, %402 ], [ 1, %421 ], [ 0, %11 ], [ 0, %11 ], [ 0, %11 ]
  ret i8 %549
}

declare ptr @initializer_constant_valid_p(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i64 @int_size_in_bytes(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @native_encode_initializer(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %259, label %5

5:                                                ; preds = %3, %251
  %6 = phi ptr [ %253, %251 ], [ %0, %3 ]
  %7 = tail call ptr @tree_strip_nop_conversions(ptr noundef nonnull %6) #31
  %8 = load i64, ptr %7, align 8
  %9 = trunc i64 %8 to i16
  switch i16 %9, label %255 [
    i16 28, label %10
    i16 51, label %56
    i16 118, label %251
    i16 117, label %251
  ]

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 15
  br i1 %15, label %16, label %259

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, 65535
  %21 = icmp eq i64 %20, 14
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i32 @vector_type_mode(ptr noundef nonnull %18) #31
  br label %29

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 6
  %26 = load i32, ptr %25, align 4
  %27 = lshr i32 %26, 16
  %28 = and i32 %27, 255
  br label %29

29:                                               ; preds = %24, %22
  %30 = phi i32 [ %23, %22 ], [ %28, %24 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %31
  %33 = load i8, ptr %32, align 1, !tbaa !17
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %259

35:                                               ; preds = %29
  %36 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %31
  %37 = load i8, ptr %36, align 1, !tbaa !17
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %259

39:                                               ; preds = %35
  %40 = tail call i64 @int_size_in_bytes(ptr noundef nonnull %12) #31
  %41 = sext i32 %2 to i64
  %42 = icmp eq i64 %40, %41
  br i1 %42, label %43, label %259

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.tree_string, ptr %7, i64 0, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !17
  %46 = icmp slt i32 %45, %2
  %47 = getelementptr inbounds %struct.tree_string, ptr %7, i64 0, i32 2
  br i1 %46, label %48, label %55

48:                                               ; preds = %43
  %49 = sext i32 %45 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1, ptr nonnull align 4 %47, i64 %49, i1 false)
  %50 = load i32, ptr %44, align 8, !tbaa !17
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, ptr %1, i64 %51
  %53 = sub nsw i32 %2, %50
  %54 = sext i32 %53 to i64
  tail call void @llvm.memset.p0.i64(ptr align 1 %52, i8 0, i64 %54, i1 false)
  br label %259

55:                                               ; preds = %43
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1, ptr nonnull align 4 %47, i64 %41, i1 false)
  br label %259

56:                                               ; preds = %5
  %57 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = tail call i64 @int_size_in_bytes(ptr noundef %58) #31
  %60 = sext i32 %2 to i64
  %61 = icmp eq i64 %59, %60
  br i1 %61, label %62, label %259

62:                                               ; preds = %56
  %63 = load i64, ptr %58, align 8
  %64 = trunc i64 %63 to i16
  switch i16 %64, label %259 [
    i16 15, label %65
    i16 16, label %166
    i16 17, label %166
  ]

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.tree_type, ptr %58, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = icmp eq ptr %67, null
  br i1 %68, label %259, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.tree_type, ptr %67, i64 0, i32 13
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = tail call i32 @host_integerp(ptr noundef %71, i32 noundef 0) #31
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %259, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.tree_common, ptr %58, i64 0, i32 2
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = tail call i64 @int_size_in_bytes(ptr noundef %76) #31
  %78 = trunc i64 %77 to i32
  %79 = icmp slt i32 %78, 1
  br i1 %79, label %259, label %80

80:                                               ; preds = %74
  %81 = load ptr, ptr %66, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.tree_type, ptr %81, i64 0, i32 13
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = tail call i64 @tree_low_cst(ptr noundef %83, i32 noundef 0) #31
  tail call void @llvm.memset.p0.i64(ptr align 1 %1, i8 0, i64 %59, i1 false)
  %85 = getelementptr inbounds %struct.tree_constructor, ptr %7, i64 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = icmp eq ptr %86, null
  br i1 %87, label %259, label %88

88:                                               ; preds = %80
  %89 = and i64 %77, 4294967295
  br label %90

90:                                               ; preds = %88, %162
  %91 = phi ptr [ %86, %88 ], [ %164, %162 ]
  %92 = phi i64 [ 0, %88 ], [ %163, %162 ]
  %93 = phi i32 [ 0, %88 ], [ %131, %162 ]
  %94 = trunc i64 %92 to i32
  %95 = load i32, ptr %91, align 8, !tbaa !310
  %96 = icmp ugt i32 %95, %94
  br i1 %96, label %97, label %259

97:                                               ; preds = %90
  %98 = and i64 %92, 4294967295
  %99 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %91, i64 0, i32 2, i64 %98
  %100 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %91, i64 0, i32 2, i64 %98, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !312
  %102 = load ptr, ptr %99, align 8, !tbaa !320
  %103 = icmp eq ptr %102, null
  br i1 %103, label %120, label %104

104:                                              ; preds = %97
  %105 = load i64, ptr %102, align 8
  %106 = and i64 %105, 65535
  %107 = icmp eq i64 %106, 111
  br i1 %107, label %108, label %115

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.tree_exp, ptr %102, i64 0, i32 3
  %110 = load ptr, ptr %109, align 8, !tbaa !17
  %111 = tail call i64 @tree_low_cst(ptr noundef %110, i32 noundef 0) #31
  %112 = sub nsw i64 %111, %84
  %113 = mul i64 %112, %77
  %114 = trunc i64 %113 to i32
  br label %120

115:                                              ; preds = %104
  %116 = tail call i64 @tree_low_cst(ptr noundef nonnull %102, i32 noundef 0) #31
  %117 = sub nsw i64 %116, %84
  %118 = mul i64 %117, %77
  %119 = trunc i64 %118 to i32
  br label %120

120:                                              ; preds = %97, %115, %108
  %121 = phi i32 [ %114, %108 ], [ %119, %115 ], [ %93, %97 ]
  %122 = icmp eq ptr %101, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %120
  %124 = tail call ptr @tree_strip_nop_conversions(ptr noundef nonnull %101) #31
  %125 = sext i32 %121 to i64
  %126 = getelementptr inbounds i8, ptr %1, i64 %125
  %127 = tail call fastcc zeroext i8 @native_encode_initializer(ptr noundef %124, ptr noundef %126, i32 noundef %78)
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %259, label %129

129:                                              ; preds = %123, %120
  %130 = phi ptr [ %124, %123 ], [ null, %120 ]
  %131 = add nsw i32 %121, %78
  br i1 %103, label %159, label %132

132:                                              ; preds = %129
  %133 = load i64, ptr %102, align 8
  %134 = and i64 %133, 65535
  %135 = icmp eq i64 %134, 111
  br i1 %135, label %136, label %159

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.tree_exp, ptr %102, i64 0, i32 3
  %138 = getelementptr inbounds %struct.tree_exp, ptr %102, i64 1
  %139 = load ptr, ptr %138, align 8, !tbaa !17
  %140 = tail call i64 @tree_low_cst(ptr noundef %139, i32 noundef 0) #31
  %141 = load ptr, ptr %137, align 8, !tbaa !17
  %142 = tail call i64 @tree_low_cst(ptr noundef %141, i32 noundef 0) #31
  %143 = sub nsw i64 %140, %142
  %144 = trunc i64 %143 to i32
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %159

146:                                              ; preds = %136
  %147 = icmp eq ptr %130, null
  %148 = sext i32 %121 to i64
  %149 = getelementptr inbounds i8, ptr %1, i64 %148
  br i1 %147, label %150, label %151

150:                                              ; preds = %146, %150
  br label %150

151:                                              ; preds = %146
  %152 = sext i32 %131 to i64
  %153 = shl i64 %77, 32
  %154 = ashr exact i64 %153, 32
  br label %155

155:                                              ; preds = %155, %151
  %156 = phi i64 [ %158, %155 ], [ %152, %151 ]
  %157 = getelementptr inbounds i8, ptr %1, i64 %156
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %157, ptr align 1 %149, i64 %89, i1 false)
  %158 = add i64 %156, %154
  br label %155

159:                                              ; preds = %136, %132, %129
  %160 = icmp sgt i32 %131, %2
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16043, ptr noundef nonnull @.str.5) #31
  br label %162

162:                                              ; preds = %159, %161
  %163 = add i64 %92, 1
  %164 = load ptr, ptr %85, align 8, !tbaa !17
  %165 = icmp eq ptr %164, null
  br i1 %165, label %259, label %90, !llvm.loop !321

166:                                              ; preds = %62, %62
  %167 = tail call i64 @int_size_in_bytes(ptr noundef nonnull %58) #31
  %168 = icmp eq i64 %167, %59
  br i1 %168, label %169, label %259

169:                                              ; preds = %166
  %170 = load i64, ptr %58, align 8
  %171 = and i64 %170, 65535
  %172 = icmp eq i64 %171, 16
  br i1 %172, label %173, label %176

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct.tree_type, ptr %58, i64 0, i32 1
  %175 = load ptr, ptr %174, align 8, !tbaa !17
  br label %176

176:                                              ; preds = %173, %169
  %177 = phi ptr [ %175, %173 ], [ null, %169 ]
  %178 = getelementptr inbounds %struct.tree_constructor, ptr %7, i64 0, i32 1
  %179 = load ptr, ptr %178, align 8, !tbaa !17
  %180 = icmp eq ptr %179, null
  br i1 %180, label %259, label %181

181:                                              ; preds = %176, %245
  %182 = phi ptr [ %249, %245 ], [ %179, %176 ]
  %183 = phi i64 [ %246, %245 ], [ 0, %176 ]
  %184 = phi ptr [ %248, %245 ], [ %177, %176 ]
  %185 = trunc i64 %183 to i32
  %186 = load i32, ptr %182, align 8, !tbaa !310
  %187 = icmp ugt i32 %186, %185
  br i1 %187, label %188, label %259

188:                                              ; preds = %181
  %189 = and i64 %183, 4294967295
  %190 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %182, i64 0, i32 2, i64 %189
  %191 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %182, i64 0, i32 2, i64 %189, i32 1
  %192 = load ptr, ptr %191, align 8, !tbaa !312
  %193 = load ptr, ptr %190, align 8, !tbaa !320
  %194 = icmp eq ptr %193, null
  %195 = select i1 %194, ptr %184, ptr %193
  %196 = icmp eq ptr %192, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %188
  %198 = tail call ptr @tree_strip_nop_conversions(ptr noundef nonnull %192) #31
  br label %199

199:                                              ; preds = %197, %188
  %200 = phi ptr [ %198, %197 ], [ null, %188 ]
  %201 = icmp eq ptr %195, null
  br i1 %201, label %259, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %struct.tree_decl_common, ptr %195, i64 0, i32 2
  %204 = load i64, ptr %203, align 8
  %205 = and i64 %204, 33554432
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %259

207:                                              ; preds = %202
  %208 = getelementptr inbounds %struct.tree_common, ptr %195, i64 0, i32 2
  %209 = load ptr, ptr %208, align 8, !tbaa !17
  %210 = load i64, ptr %209, align 8
  %211 = and i64 %210, 65535
  %212 = icmp eq i64 %211, 15
  br i1 %212, label %213, label %221

213:                                              ; preds = %207
  %214 = getelementptr inbounds %struct.tree_type, ptr %209, i64 0, i32 1
  %215 = load ptr, ptr %214, align 8, !tbaa !17
  %216 = icmp eq ptr %215, null
  br i1 %216, label %221, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %struct.tree_type, ptr %215, i64 0, i32 14
  %219 = load ptr, ptr %218, align 8, !tbaa !17
  %220 = icmp eq ptr %219, null
  br i1 %220, label %259, label %221

221:                                              ; preds = %217, %213, %207
  %222 = getelementptr inbounds %struct.tree_decl_common, ptr %195, i64 0, i32 4
  %223 = load ptr, ptr %222, align 8, !tbaa !17
  %224 = icmp eq ptr %223, null
  br i1 %224, label %259, label %225

225:                                              ; preds = %221
  %226 = tail call i32 @host_integerp(ptr noundef nonnull %223, i32 noundef 0) #31
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %259, label %228

228:                                              ; preds = %225
  %229 = load ptr, ptr %222, align 8, !tbaa !17
  %230 = tail call i64 @tree_low_cst(ptr noundef %229, i32 noundef 0) #31
  %231 = trunc i64 %230 to i32
  %232 = tail call i64 @int_byte_position(ptr noundef nonnull %195) #31
  %233 = trunc i64 %232 to i32
  %234 = add nsw i32 %233, %231
  %235 = icmp sgt i32 %234, %2
  br i1 %235, label %236, label %237

236:                                              ; preds = %228
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16085, ptr noundef nonnull @.str.5) #31
  br label %237

237:                                              ; preds = %228, %236
  %238 = icmp eq ptr %200, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %237
  %240 = shl i64 %232, 32
  %241 = ashr exact i64 %240, 32
  %242 = getelementptr inbounds i8, ptr %1, i64 %241
  %243 = tail call fastcc zeroext i8 @native_encode_initializer(ptr noundef nonnull %200, ptr noundef %242, i32 noundef %231)
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %259, label %245

245:                                              ; preds = %239, %237
  %246 = add i64 %183, 1
  %247 = getelementptr inbounds %struct.tree_common, ptr %195, i64 0, i32 1
  %248 = load ptr, ptr %247, align 8, !tbaa !17
  %249 = load ptr, ptr %178, align 8, !tbaa !17
  %250 = icmp eq ptr %249, null
  br i1 %250, label %259, label %181, !llvm.loop !322

251:                                              ; preds = %5, %5
  %252 = getelementptr inbounds %struct.tree_exp, ptr %7, i64 0, i32 3
  %253 = load ptr, ptr %252, align 8, !tbaa !17
  %254 = icmp eq ptr %253, null
  br i1 %254, label %259, label %5

255:                                              ; preds = %5
  %256 = tail call i32 @native_encode_expr(ptr noundef nonnull %7, ptr noundef %1, i32 noundef %2) #31
  %257 = icmp eq i32 %256, %2
  %258 = zext i1 %257 to i8
  br label %259

259:                                              ; preds = %251, %202, %199, %217, %225, %221, %239, %181, %245, %123, %90, %162, %3, %176, %80, %166, %69, %65, %74, %62, %56, %10, %35, %29, %39, %55, %48, %255
  %260 = phi i8 [ %258, %255 ], [ 0, %35 ], [ 0, %29 ], [ 0, %39 ], [ 1, %55 ], [ 1, %48 ], [ 0, %10 ], [ 0, %56 ], [ 0, %62 ], [ 0, %69 ], [ 0, %65 ], [ 0, %74 ], [ 0, %166 ], [ 1, %80 ], [ 1, %176 ], [ 0, %3 ], [ 0, %123 ], [ 1, %90 ], [ 1, %162 ], [ 0, %202 ], [ 0, %199 ], [ 0, %217 ], [ 0, %225 ], [ 0, %221 ], [ 0, %239 ], [ 1, %181 ], [ 1, %245 ], [ 0, %251 ]
  ret i8 %260
}

declare i32 @integer_zerop(ptr noundef) local_unnamed_addr #3

declare i32 @compare_tree_int(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @gen_rtx_fmt_s_stat(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @walk_tree_1(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal ptr @reference_to_unused(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr nocapture readnone %2) #10 {
  %4 = load ptr, ptr %0, align 8, !tbaa !6
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, 65535
  %7 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %6
  %8 = load i32, ptr %7, align 4, !tbaa !17
  switch i32 %8, label %9 [
    i32 10, label %14
    i32 9, label %14
    i32 8, label %14
    i32 7, label %14
    i32 6, label %14
    i32 5, label %14
    i32 4, label %14
    i32 1, label %14
  ]

9:                                                ; preds = %3
  store i32 0, ptr %1, align 4, !tbaa !21
  %10 = load i64, ptr %4, align 8
  %11 = and i64 %10, 65535
  %12 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %11
  %13 = load i32, ptr %12, align 4, !tbaa !17
  br label %14

14:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %9
  %15 = phi i32 [ %8, %3 ], [ %8, %3 ], [ %8, %3 ], [ %8, %3 ], [ %8, %3 ], [ %8, %3 ], [ %8, %3 ], [ %8, %3 ], [ %13, %9 ]
  %16 = phi i64 [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %10, %9 ]
  %17 = icmp eq i32 %15, 3
  %18 = and i64 %16, 155189248
  %19 = icmp eq i64 %18, 0
  %20 = and i1 %17, %19
  br i1 %20, label %54, label %21

21:                                               ; preds = %14
  %22 = load i8, ptr @cgraph_global_info_ready, align 1, !tbaa !17
  %23 = icmp eq i8 %22, 0
  %24 = trunc i64 %16 to i16
  br i1 %23, label %25, label %26

25:                                               ; preds = %21
  switch i16 %24, label %50 [
    i16 32, label %54
    i16 29, label %54
  ]

26:                                               ; preds = %21
  switch i16 %24, label %50 [
    i16 32, label %27
    i16 29, label %35
  ]

27:                                               ; preds = %26
  %28 = tail call ptr @varpool_node(ptr noundef nonnull %4) #31
  %29 = getelementptr inbounds %struct.varpool_node, ptr %28, i64 0, i32 5
  %30 = load i8, ptr %29, align 4
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %53

33:                                               ; preds = %27
  %34 = load ptr, ptr %0, align 8, !tbaa !6
  br label %54

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 2
  %37 = load i64, ptr %36, align 8
  %38 = and i64 %37, 33554432
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.tree_function_decl, ptr %4, i64 0, i32 5
  %42 = load i32, ptr %41, align 8
  %43 = and i32 %42, 2097152
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40, %35
  %46 = tail call ptr @cgraph_get_node(ptr noundef nonnull %4) #31
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = load ptr, ptr %0, align 8, !tbaa !6
  br label %54

50:                                               ; preds = %25, %26, %40
  %51 = and i64 %16, 4259839
  %52 = icmp eq i64 %51, 28
  br i1 %52, label %54, label %53

53:                                               ; preds = %27, %45, %50
  br label %54

54:                                               ; preds = %25, %25, %33, %50, %14, %53, %48
  %55 = phi ptr [ %34, %33 ], [ null, %53 ], [ %49, %48 ], [ %4, %14 ], [ %4, %50 ], [ %4, %25 ], [ %4, %25 ]
  ret ptr %55
}

declare ptr @build_vector_from_ctor(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @varpool_node(ptr noundef) local_unnamed_addr #3

declare ptr @cgraph_get_node(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @insert_float(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) unnamed_addr #10 {
  %3 = alloca %struct.real_value, align 8
  %4 = alloca [4 x i64], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #31
  %5 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(32) %5, i64 32, i1 false), !tbaa.struct !315
  %6 = load i32, ptr %0, align 8
  %7 = lshr i32 %6, 16
  %8 = and i32 %7, 255
  %9 = call i64 @real_to_target(ptr noundef nonnull %4, ptr noundef nonnull %3, i32 noundef %8) #31
  %10 = load i32, ptr %0, align 8
  %11 = lshr i32 %10, 16
  %12 = and i32 %11, 255
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %13
  %15 = load i8, ptr %14, align 1, !tbaa !17
  %16 = icmp ult i8 %15, 4
  br i1 %16, label %43, label %17

17:                                               ; preds = %2, %17
  %18 = phi i64 [ %33, %17 ], [ 0, %2 ]
  %19 = phi ptr [ %32, %17 ], [ %1, %2 ]
  %20 = getelementptr inbounds [4 x i64], ptr %4, i64 0, i64 %18
  %21 = load i64, ptr %20, align 8, !tbaa !38
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds i8, ptr %19, i64 1
  store i8 %22, ptr %19, align 1, !tbaa !17
  %24 = lshr i64 %21, 8
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds i8, ptr %19, i64 2
  store i8 %25, ptr %23, align 1, !tbaa !17
  %27 = lshr i64 %21, 16
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds i8, ptr %19, i64 3
  store i8 %28, ptr %26, align 1, !tbaa !17
  %30 = lshr i64 %21, 24
  %31 = trunc i64 %30 to i8
  store i8 %31, ptr %29, align 1, !tbaa !17
  %32 = getelementptr inbounds i8, ptr %19, i64 4
  %33 = add nuw nsw i64 %18, 1
  %34 = load i32, ptr %0, align 8
  %35 = lshr i32 %34, 16
  %36 = and i32 %35, 255
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %37
  %39 = load i8, ptr %38, align 1, !tbaa !17
  %40 = lshr i8 %39, 2
  %41 = zext i8 %40 to i64
  %42 = icmp ult i64 %33, %41
  br i1 %42, label %17, label %43, !llvm.loop !316

43:                                               ; preds = %17, %2
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @resolve_one_addr(ptr nocapture noundef %0, ptr nocapture readnone %1) #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = load i32, ptr %3, align 8
  %5 = trunc i32 %4 to i16
  switch i16 %5, label %58 [
    i16 34, label %6
    i16 45, label %43
    i16 35, label %54
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %8)
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 1
  %12 = tail call ptr @build_string(i32 noundef %11, ptr noundef %8) #31
  %13 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef %9) #31
  %14 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %15 = tail call ptr @build_index_type(ptr noundef %13) #31
  %16 = tail call ptr @build_array_type(ptr noundef %14, ptr noundef %15) #31
  %17 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = tail call ptr @lookup_constant_def(ptr noundef %12) #31
  %19 = icmp eq ptr %18, null
  br i1 %19, label %59, label %20

20:                                               ; preds = %6
  %21 = load i32, ptr %18, align 8
  %22 = and i32 %21, 65535
  %23 = icmp eq i32 %22, 43
  br i1 %23, label %24, label %59

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.rtx_def, ptr %18, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = load ptr, ptr @used_rtx_array, align 8, !tbaa !6
  %28 = icmp eq ptr %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.VEC_rtx_base, ptr %27, i64 0, i32 1
  %31 = load i32, ptr %30, align 4, !tbaa !109
  %32 = load i32, ptr %27, align 8, !tbaa !102
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %29, %24
  %35 = tail call ptr @vec_gc_p_reserve(ptr noundef %27, i32 noundef 1) #31
  store ptr %35, ptr @used_rtx_array, align 8, !tbaa !6
  %36 = load i32, ptr %35, align 8, !tbaa !102
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi i32 [ %32, %29 ], [ %36, %34 ]
  %39 = phi ptr [ %27, %29 ], [ %35, %34 ]
  %40 = add i32 %38, 1
  store i32 %40, ptr %39, align 8, !tbaa !102
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds %struct.VEC_rtx_base, ptr %39, i64 0, i32 2, i64 %41
  store ptr %26, ptr %42, align 8, !tbaa !6
  store ptr %26, ptr %0, align 8, !tbaa !6
  br label %59

43:                                               ; preds = %2
  %44 = and i32 %4, 67108864
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1, i32 0, i32 0, i64 2
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = icmp eq ptr %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = load i64, ptr %48, align 8
  %52 = and i64 %51, 4259839
  %53 = icmp eq i64 %52, 32
  br i1 %53, label %59, label %58

54:                                               ; preds = %2
  %55 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %56 = tail call i32 @for_each_rtx(ptr noundef nonnull %55, ptr noundef nonnull @resolve_one_addr, ptr noundef null) #31
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %2, %46, %50, %43, %54
  br label %59

59:                                               ; preds = %54, %50, %37, %20, %6, %58
  %60 = phi i32 [ 0, %58 ], [ 0, %37 ], [ 1, %20 ], [ 1, %6 ], [ 1, %50 ], [ 1, %54 ]
  ret i32 %60
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @VEC_rtx_gc_safe_push(ptr noundef %0) unnamed_addr #2 {
  %2 = load ptr, ptr @used_rtx_array, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.VEC_rtx_base, ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !109
  %7 = load i32, ptr %2, align 8, !tbaa !102
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %4, %1
  %10 = tail call ptr @vec_gc_p_reserve(ptr noundef %2, i32 noundef 1) #31
  store ptr %10, ptr @used_rtx_array, align 8, !tbaa !6
  %11 = load i32, ptr %10, align 8, !tbaa !102
  br label %12

12:                                               ; preds = %4, %9
  %13 = phi i32 [ %7, %4 ], [ %11, %9 ]
  %14 = phi ptr [ %2, %4 ], [ %10, %9 ]
  %15 = add i32 %13, 1
  store i32 %15, ptr %14, align 8, !tbaa !102
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %struct.VEC_rtx_base, ptr %14, i64 0, i32 2, i64 %16
  store ptr %0, ptr %17, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @const_ok_for_output(ptr noundef %0) unnamed_addr #10 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8, !tbaa !6
  %3 = load i32, ptr %0, align 8
  %4 = trunc i32 %3 to i16
  switch i16 %4, label %12 [
    i16 45, label %5
    i16 35, label %8
  ]

5:                                                ; preds = %1
  %6 = call i32 @const_ok_for_output_1(ptr noundef nonnull %2, ptr poison), !range !37
  %7 = icmp eq i32 %6, 0
  br label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %10 = tail call i32 @for_each_rtx(ptr noundef nonnull %9, ptr noundef nonnull @const_ok_for_output_1, ptr noundef null) #31
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8, %5
  %13 = phi i1 [ %7, %5 ], [ %11, %8 ], [ true, %1 ]
  %14 = zext i1 %13 to i8
  ret i8 %14
}

declare i64 @real_to_target(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @build_string(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_int_cst(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @build_array_type(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_index_type(ptr noundef) local_unnamed_addr #3

declare ptr @lookup_constant_def(ptr noundef) local_unnamed_addr #3

declare i32 @for_each_rtx(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @vec_gc_p_reserve(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @const_ok_for_output_1(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #10 {
  %3 = alloca i8, align 1
  %4 = load ptr, ptr %0, align 8, !tbaa !6
  %5 = load i32, ptr %4, align 8
  %6 = trunc i32 %5 to i16
  switch i16 %6, label %78 [
    i16 18, label %7
    i16 45, label %21
  ]

7:                                                ; preds = %2
  %8 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  br i1 %9, label %78, label %10

10:                                               ; preds = %7
  %11 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %12 = and i32 %11, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %78, label %14

14:                                               ; preds = %10
  %15 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %8)
  %16 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %17 = tail call i32 @fputc(i32 10, ptr %16)
  %18 = load ptr, ptr @dump_file, align 8, !tbaa !6
  tail call void @print_rtl(ptr noundef %18, ptr noundef nonnull %4) #31
  %19 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %20 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %19, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.288)
  br label %78

21:                                               ; preds = %2
  %22 = and i32 %5, 67108864
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %44, label %24

24:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #31
  %25 = call ptr @get_pool_constant_mark(ptr noundef nonnull %4, ptr noundef nonnull %3) #31
  %26 = load i8, ptr %3, align 1, !tbaa !17
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %24
  %29 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  %32 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %33 = and i32 %32, 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %29)
  %37 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %38 = call i32 @fputc(i32 10, ptr %37)
  %39 = load ptr, ptr @dump_file, align 8, !tbaa !6
  call void @print_rtl(ptr noundef %39, ptr noundef nonnull %4) #31
  %40 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %41 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.289)
  br label %42

42:                                               ; preds = %28, %31, %35
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #31
  br label %78

43:                                               ; preds = %24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #31
  br label %44

44:                                               ; preds = %43, %21
  %45 = getelementptr inbounds %struct.rtx_def, ptr %4, i64 0, i32 1, i32 0, i32 0, i64 1
  %46 = load i32, ptr %45, align 8, !tbaa !17
  %47 = and i32 %46, 56
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %78

49:                                               ; preds = %44
  %50 = and i32 %46, 64
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = load i32, ptr %4, align 8
  %54 = and i32 %53, 67108864
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.rtx_def, ptr %4, i64 0, i32 1, i32 0, i32 0, i64 2
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = icmp eq ptr %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 49), align 8, !tbaa !323
  %62 = call zeroext i8 %61(ptr noundef nonnull %58) #31
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %52, %60, %56
  %65 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %64
  %68 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %69 = and i32 %68, 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %67
  %72 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %65)
  %73 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %74 = call i32 @fputc(i32 10, ptr %73)
  %75 = load ptr, ptr @dump_file, align 8, !tbaa !6
  call void @print_rtl(ptr noundef %75, ptr noundef nonnull %4) #31
  %76 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %77 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %76, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.290)
  br label %78

78:                                               ; preds = %71, %67, %64, %14, %10, %7, %42, %49, %60, %44, %2
  %79 = phi i32 [ 1, %42 ], [ 0, %2 ], [ 1, %44 ], [ 0, %60 ], [ 0, %49 ], [ 1, %7 ], [ 1, %10 ], [ 1, %14 ], [ 1, %64 ], [ 1, %67 ], [ 1, %71 ]
  ret i32 %79
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @expansion_failed(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #10 {
  %4 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  %7 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %8 = and i32 %7, 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %4)
  %12 = icmp eq ptr %0, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %15 = load i32, ptr @dump_flags, align 4, !tbaa !21
  tail call void @print_generic_expr(ptr noundef %14, ptr noundef nonnull %0, i32 noundef %15) #31
  br label %16

16:                                               ; preds = %13, %10
  %17 = icmp eq ptr %1, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %20 = tail call i32 @fputc(i32 10, ptr %19)
  %21 = load ptr, ptr @dump_file, align 8, !tbaa !6
  tail call void @print_rtl(ptr noundef %21, ptr noundef nonnull %1) #31
  br label %22

22:                                               ; preds = %18, %16
  %23 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %24 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %23, ptr noundef nonnull @.str.293, ptr noundef %2)
  br label %25

25:                                               ; preds = %22, %6, %3
  ret void
}

declare ptr @get_pool_constant_mark(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @print_generic_expr(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @print_rtl(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @tree_strip_nop_conversions(ptr noundef) local_unnamed_addr #3

declare i32 @host_integerp(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i64 @tree_low_cst(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i64 @int_byte_position(ptr noundef) local_unnamed_addr #3

declare i32 @native_encode_expr(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @rtl_for_decl_location(ptr noundef %0) unnamed_addr #10 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %3, i64 11
  %5 = load i8, ptr %4, align 1, !tbaa !17
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = load i32, ptr @reload_completed, align 4, !tbaa !21
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %43

12:                                               ; preds = %1
  %13 = load i32, ptr @reload_completed, align 4, !tbaa !21
  %14 = icmp ne i32 %13, 0
  %15 = icmp eq i64 %3, 34
  %16 = and i1 %15, %14
  br i1 %16, label %60, label %135

17:                                               ; preds = %7
  %18 = icmp eq ptr %9, null
  br i1 %18, label %135, label %19

19:                                               ; preds = %17
  %20 = load i32, ptr %9, align 8
  %21 = and i32 %20, 65535
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !17
  %25 = icmp eq i32 %24, 9
  br i1 %25, label %40, label %26

26:                                               ; preds = %19
  %27 = trunc i32 %20 to i16
  switch i16 %27, label %135 [
    i16 43, label %28
    i16 37, label %37
  ]

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = load i32, ptr %30, align 8
  %32 = and i32 %31, 65535
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !17
  %36 = icmp eq i32 %35, 9
  br i1 %36, label %40, label %135

37:                                               ; preds = %26
  %38 = and i64 %2, 67174399
  %39 = icmp eq i64 %38, 67108896
  br i1 %39, label %40, label %135

40:                                               ; preds = %37, %28, %19
  %41 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 40), align 8, !tbaa !324
  %42 = tail call ptr %41(ptr noundef nonnull %9) #31
  br label %201

43:                                               ; preds = %7
  %44 = trunc i64 %2 to i32
  %45 = and i32 %44, 65535
  %46 = icmp eq i32 %45, 34
  br i1 %46, label %47, label %114

47:                                               ; preds = %43
  %48 = icmp eq ptr %9, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %47
  %50 = load i32, ptr %9, align 8
  %51 = trunc i32 %50 to i16
  switch i16 %51, label %148 [
    i16 37, label %55
    i16 39, label %52
  ]

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  br label %55

55:                                               ; preds = %49, %52
  %56 = phi ptr [ %54, %52 ], [ %9, %49 ]
  %57 = getelementptr i8, ptr %56, i64 8
  %58 = load i32, ptr %57, align 8, !tbaa !17
  %59 = icmp ult i32 %58, 53
  br i1 %59, label %148, label %60

60:                                               ; preds = %12, %55, %47
  %61 = phi ptr [ %9, %55 ], [ null, %47 ], [ null, %12 ]
  %62 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = load i64, ptr %63, align 8
  %67 = and i64 %66, 65535
  %68 = icmp eq i64 %67, 14
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = tail call i32 @vector_type_mode(ptr noundef nonnull %63) #31
  br label %76

71:                                               ; preds = %60
  %72 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 6
  %73 = load i32, ptr %72, align 4
  %74 = lshr i32 %73, 16
  %75 = and i32 %74, 255
  br label %76

76:                                               ; preds = %71, %69
  %77 = phi i32 [ %70, %69 ], [ %75, %71 ]
  %78 = load i64, ptr %65, align 8
  %79 = and i64 %78, 65535
  %80 = icmp eq i64 %79, 14
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = tail call i32 @vector_type_mode(ptr noundef nonnull %65) #31
  br label %88

83:                                               ; preds = %76
  %84 = getelementptr inbounds %struct.tree_type, ptr %65, i64 0, i32 6
  %85 = load i32, ptr %84, align 4
  %86 = lshr i32 %85, 16
  %87 = and i32 %86, 255
  br label %88

88:                                               ; preds = %83, %81
  %89 = phi i32 [ %82, %81 ], [ %87, %83 ]
  %90 = icmp eq i32 %77, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.tree_parm_decl, ptr %0, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  br label %130

94:                                               ; preds = %88
  %95 = zext i32 %77 to i64
  %96 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %95
  %97 = load i8, ptr %96, align 1, !tbaa !17
  %98 = and i8 %97, -2
  %99 = icmp eq i8 %98, 2
  br i1 %99, label %100, label %130

100:                                              ; preds = %94
  %101 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %95
  %102 = load i8, ptr %101, align 1, !tbaa !17
  %103 = zext i32 %89 to i64
  %104 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %103
  %105 = load i8, ptr %104, align 1, !tbaa !17
  %106 = icmp ugt i8 %102, %105
  br i1 %106, label %130, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %struct.tree_parm_decl, ptr %0, i64 0, i32 1
  %109 = load ptr, ptr %108, align 8, !tbaa !17
  %110 = icmp eq ptr %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load i32, ptr %109, align 8
  %113 = trunc i32 %112 to i16
  switch i16 %113, label %130 [
    i16 37, label %148
    i16 43, label %148
  ]

114:                                              ; preds = %43
  %115 = icmp eq i32 %45, 32
  %116 = icmp ne ptr %9, null
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %130

118:                                              ; preds = %114
  %119 = load i32, ptr %9, align 8
  %120 = and i32 %119, 65535
  %121 = icmp eq i32 %120, 43
  br i1 %121, label %122, label %148

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !17
  %125 = load i64, ptr %124, align 8
  %126 = and i64 %125, 65535
  %127 = icmp eq i64 %126, 14
  br i1 %127, label %128, label %148

128:                                              ; preds = %122
  %129 = tail call i32 @vector_type_mode(ptr noundef nonnull %124) #31
  br label %148

130:                                              ; preds = %111, %94, %91, %107, %100, %114
  %131 = phi ptr [ %9, %114 ], [ %93, %91 ], [ %61, %107 ], [ %61, %100 ], [ %61, %94 ], [ %61, %111 ]
  %132 = icmp eq ptr %131, null
  br i1 %132, label %133, label %148

133:                                              ; preds = %130
  %134 = load i64, ptr %0, align 8
  br label %135

135:                                              ; preds = %133, %26, %28, %12, %17, %37
  %136 = phi i64 [ %134, %133 ], [ %2, %26 ], [ %2, %28 ], [ %2, %12 ], [ %2, %17 ], [ %2, %37 ]
  %137 = and i64 %136, 65535
  %138 = icmp eq i64 %137, 32
  br i1 %138, label %139, label %156

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %141 = load ptr, ptr %140, align 8, !tbaa !17
  %142 = icmp eq ptr %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %145 = load ptr, ptr %144, align 8, !tbaa !17
  %146 = tail call fastcc ptr @rtl_for_decl_init(ptr noundef nonnull %141, ptr noundef %145)
  %147 = icmp eq ptr %146, null
  br i1 %147, label %156, label %148

148:                                              ; preds = %55, %49, %111, %111, %118, %122, %128, %130, %143
  %149 = phi ptr [ %146, %143 ], [ %131, %130 ], [ %109, %111 ], [ %109, %111 ], [ %9, %118 ], [ %9, %122 ], [ %9, %128 ], [ %9, %49 ], [ %9, %55 ]
  %150 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 40), align 8, !tbaa !324
  %151 = tail call ptr %150(ptr noundef nonnull %149) #31
  %152 = icmp eq ptr %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %148
  %154 = tail call ptr @avoid_constant_pool_reference(ptr noundef nonnull %151) #31
  %155 = icmp eq ptr %154, null
  br i1 %155, label %156, label %201

156:                                              ; preds = %135, %139, %143, %148, %153
  %157 = load i64, ptr %0, align 8
  %158 = and i64 %157, 65535
  %159 = icmp eq i64 %158, 32
  br i1 %159, label %160, label %201

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %162 = load i64, ptr %161, align 8
  %163 = and i64 %162, 33554432
  %164 = icmp ne i64 %163, 0
  %165 = and i64 %157, 67108864
  %166 = icmp eq i64 %165, 0
  %167 = or i1 %166, %164
  br i1 %167, label %201, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %170 = load ptr, ptr %169, align 8, !tbaa !17
  %171 = icmp eq ptr %170, null
  br i1 %171, label %201, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %174 = load i32, ptr %173, align 8
  %175 = and i32 %174, 2
  %176 = icmp ne i32 %175, 0
  %177 = and i64 %162, 255
  %178 = icmp eq i64 %177, 0
  %179 = or i1 %178, %176
  br i1 %179, label %201, label %180

180:                                              ; preds = %172
  %181 = tail call ptr @make_decl_rtl_for_debug(ptr noundef nonnull %0) #31
  %182 = load i32, ptr %181, align 8
  %183 = and i32 %182, 65535
  %184 = icmp eq i32 %183, 43
  br i1 %184, label %185, label %200

185:                                              ; preds = %180
  %186 = getelementptr inbounds %struct.rtx_def, ptr %181, i64 0, i32 1
  %187 = load ptr, ptr %186, align 8, !tbaa !17
  %188 = load i32, ptr %187, align 8
  %189 = and i32 %188, 65535
  %190 = icmp eq i32 %189, 45
  br i1 %190, label %191, label %200

191:                                              ; preds = %185
  %192 = and i32 %188, 67108864
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %191
  %195 = getelementptr inbounds %struct.rtx_def, ptr %187, i64 0, i32 1, i32 0, i32 0, i64 2
  %196 = load ptr, ptr %195, align 8, !tbaa !17
  br label %197

197:                                              ; preds = %191, %194
  %198 = phi ptr [ %196, %194 ], [ null, %191 ]
  %199 = icmp eq ptr %198, %0
  br i1 %199, label %201, label %200

200:                                              ; preds = %197, %185, %180
  br label %201

201:                                              ; preds = %153, %156, %160, %168, %172, %200, %197, %40
  %202 = phi ptr [ %42, %40 ], [ null, %160 ], [ null, %172 ], [ null, %200 ], [ %181, %197 ], [ null, %168 ], [ null, %156 ], [ %154, %153 ]
  ret ptr %202
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @loc_list_from_tree(ptr noundef %0, i32 noundef %1) unnamed_addr #10 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store ptr null, ptr %3, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #31
  store ptr null, ptr %4, align 8, !tbaa !6
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %781 [
    i16 0, label %13
    i16 62, label %14
    i16 59, label %15
    i16 126, label %16
    i16 125, label %16
    i16 128, label %16
    i16 127, label %16
    i16 121, label %29
    i16 32, label %52
    i16 34, label %127
    i16 36, label %135
    i16 29, label %135
    i16 47, label %218
    i16 48, label %218
    i16 49, label %218
    i16 52, label %222
    i16 116, label %226
    i16 113, label %226
    i16 118, label %226
    i16 120, label %226
    i16 53, label %226
    i16 41, label %230
    i16 42, label %230
    i16 45, label %230
    i16 46, label %230
    i16 43, label %230
    i16 44, label %230
    i16 23, label %316
    i16 51, label %344
    i16 24, label %344
    i16 28, label %344
    i16 26, label %344
    i16 93, label %499
    i16 91, label %499
    i16 89, label %499
    i16 95, label %360
    i16 88, label %360
    i16 94, label %361
    i16 92, label %361
    i16 87, label %361
    i16 69, label %362
    i16 68, label %362
    i16 70, label %362
    i16 67, label %362
    i16 64, label %368
    i16 73, label %369
    i16 72, label %369
    i16 74, label %369
    i16 71, label %369
    i16 65, label %434
    i16 83, label %435
    i16 84, label %436
    i16 66, label %443
    i16 63, label %443
    i16 98, label %465
    i16 100, label %473
    i16 97, label %481
    i16 99, label %489
    i16 101, label %497
    i16 102, label %498
    i16 96, label %553
    i16 90, label %553
    i16 82, label %551
    i16 79, label %552
    i16 80, label %597
    i16 81, label %597
    i16 56, label %612
    i16 77, label %933
  ]

13:                                               ; preds = %2
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.294)
  br label %933

14:                                               ; preds = %2
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.295)
  br label %933

15:                                               ; preds = %2
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.296)
  br label %933

16:                                               ; preds = %2, %2, %2, %2
  %17 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %933, label %19

19:                                               ; preds = %16
  %20 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %21 = and i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %933, label %23

23:                                               ; preds = %19
  %24 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %17)
  %25 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %26 = load i32, ptr @dump_flags, align 4, !tbaa !21
  tail call void @print_generic_expr(ptr noundef %25, ptr noundef nonnull %0, i32 noundef %26) #31
  %27 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %28 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %27, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.297)
  br label %933

29:                                               ; preds = %2
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %29
  %32 = icmp eq i32 %1, 2
  %33 = zext i1 %32 to i8
  %34 = tail call fastcc ptr @loc_list_for_address_of_addr_expr_of_indirect_ref(ptr noundef nonnull %0, i8 noundef zeroext %33)
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %51

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = tail call zeroext i8 @decl_address_ip_invariant_p(ptr noundef %38) #31
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = tail call fastcc ptr @cst_pool_loc_descr(ptr noundef nonnull %0)
  store ptr %42, ptr %3, align 8, !tbaa !6
  %43 = icmp ne ptr %42, null
  %44 = zext i1 %43 to i32
  %45 = icmp eq ptr %42, null
  br i1 %45, label %46, label %51

46:                                               ; preds = %36, %29, %41
  %47 = phi i32 [ %44, %41 ], [ 0, %29 ], [ 0, %36 ]
  %48 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %49, i32 noundef 1)
  store ptr %50, ptr %4, align 8, !tbaa !6
  br label %793

51:                                               ; preds = %31, %41
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.298)
  br label %933

52:                                               ; preds = %2
  %53 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %54 = load i32, ptr %53, align 8
  %55 = and i32 %54, 49152
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %127, label %57

57:                                               ; preds = %52
  %58 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 113), align 4, !tbaa !325
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %57
  %61 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 37), align 8, !tbaa !141
  %62 = icmp eq ptr %61, null
  br i1 %62, label %933, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %65 = load i64, ptr %64, align 8
  %66 = and i64 %65, 33554432
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %63
  %69 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 49), align 8, !tbaa !323
  %70 = tail call zeroext i8 %69(ptr noundef nonnull %0) #31
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %933, label %83

72:                                               ; preds = %57
  %73 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 106, i32 9), align 1, !tbaa !326
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %933, label %75

75:                                               ; preds = %72
  %76 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %77 = icmp slt i32 %76, 3
  %78 = load i32, ptr @dwarf_strict, align 4
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %77, i1 %79, i1 false
  br i1 %80, label %933, label %81

81:                                               ; preds = %75
  %82 = tail call ptr @emutls_decl(ptr noundef nonnull %0) #31
  br label %83

83:                                               ; preds = %63, %68, %81
  %84 = phi i16 [ 3, %81 ], [ 259, %68 ], [ 259, %63 ]
  %85 = phi i16 [ 155, %81 ], [ 224, %68 ], [ 224, %63 ]
  %86 = phi ptr [ %82, %81 ], [ %0, %68 ], [ %0, %63 ]
  %87 = tail call fastcc ptr @rtl_for_decl_location(ptr noundef %86)
  %88 = icmp eq ptr %87, null
  br i1 %88, label %933, label %89

89:                                               ; preds = %83
  %90 = load i32, ptr %87, align 8
  %91 = and i32 %90, 65535
  %92 = icmp eq i32 %91, 43
  br i1 %92, label %93, label %933

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.rtx_def, ptr %87, i64 0, i32 1
  %95 = load ptr, ptr %94, align 8, !tbaa !17
  %96 = load i32, ptr %95, align 8
  %97 = and i32 %96, 65535
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !17
  %101 = icmp eq i32 %100, 9
  br i1 %101, label %102, label %933

102:                                              ; preds = %93
  %103 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %104 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %103, i64 0, i32 1
  %105 = load i16, ptr %104, align 8
  %106 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %103, i64 0, i32 3
  %107 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %103, i64 0, i32 3, i32 1
  %108 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %103, i64 0, i32 4
  store i32 6, ptr %108, align 8, !tbaa !49
  %109 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %103, i64 0, i32 4, i32 1
  store i64 0, ptr %109, align 8, !tbaa !17
  store ptr %103, ptr %3, align 8, !tbaa !6
  store i32 0, ptr %106, align 8, !tbaa !52
  store ptr %95, ptr %107, align 8, !tbaa !17
  %110 = and i16 %105, -512
  %111 = or i16 %84, %110
  store i16 %111, ptr %104, align 8
  %112 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %113 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %112, i64 0, i32 1
  %114 = load i16, ptr %113, align 8
  %115 = and i16 %114, -256
  %116 = or i16 %115, %85
  store i16 %116, ptr %113, align 8
  %117 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %112, i64 0, i32 3
  store i32 6, ptr %117, align 8, !tbaa !52
  %118 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %112, i64 0, i32 3, i32 1
  store i64 0, ptr %118, align 8, !tbaa !17
  %119 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %112, i64 0, i32 4
  store i32 6, ptr %119, align 8, !tbaa !49
  %120 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %112, i64 0, i32 4, i32 1
  store i64 0, ptr %120, align 8, !tbaa !17
  br label %121

121:                                              ; preds = %121, %102
  %122 = phi ptr [ %3, %102 ], [ %123, %121 ]
  %123 = load ptr, ptr %122, align 8, !tbaa !6
  %124 = icmp eq ptr %123, null
  br i1 %124, label %125, label %121, !llvm.loop !53

125:                                              ; preds = %121
  store ptr %112, ptr %122, align 8, !tbaa !6
  %126 = load ptr, ptr %3, align 8, !tbaa !6
  br label %793

127:                                              ; preds = %52, %2
  %128 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %129 = load i64, ptr %128, align 8
  %130 = and i64 %129, 67108864
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = tail call ptr @decl_value_expr_lookup(ptr noundef nonnull %0) #31
  %134 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %133, i32 noundef %1)
  br label %933

135:                                              ; preds = %127, %2, %2
  %136 = load ptr, ptr @decl_loc_table, align 8, !tbaa !6
  %137 = icmp eq ptr %136, null
  br i1 %137, label %150, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %140 = load i32, ptr %139, align 4, !tbaa !17
  %141 = tail call ptr @htab_find_with_hash(ptr noundef nonnull %136, ptr noundef nonnull %0, i32 noundef %140) #31
  %142 = icmp eq ptr %141, null
  br i1 %142, label %150, label %143

143:                                              ; preds = %138
  %144 = load ptr, ptr %141, align 8, !tbaa !249
  %145 = icmp eq ptr %144, null
  br i1 %145, label %150, label %146

146:                                              ; preds = %143
  %147 = tail call fastcc ptr @dw_loc_list(ptr noundef nonnull %141, ptr noundef nonnull %0, i32 noundef %1)
  store ptr %147, ptr %4, align 8, !tbaa !6
  %148 = icmp ne i32 %1, 0
  %149 = zext i1 %148 to i32
  br label %793

150:                                              ; preds = %135, %143, %138
  %151 = tail call fastcc ptr @rtl_for_decl_location(ptr noundef nonnull %0)
  %152 = icmp eq ptr %151, null
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.299)
  br label %933

154:                                              ; preds = %150
  %155 = load i32, ptr %151, align 8
  %156 = trunc i32 %155 to i16
  switch i16 %156, label %176 [
    i16 30, label %157
    i16 34, label %175
  ]

157:                                              ; preds = %154
  %158 = getelementptr inbounds %struct.rtx_def, ptr %151, i64 0, i32 1
  %159 = load i64, ptr %158, align 8, !tbaa !17
  %160 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %161 = load ptr, ptr %160, align 8, !tbaa !17
  %162 = load i64, ptr %161, align 8
  %163 = and i64 %162, 2097152
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %172, label %165

165:                                              ; preds = %157
  %166 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %167 = load i64, ptr %166, align 8
  %168 = and i64 %167, 255
  %169 = getelementptr inbounds [87 x i64], ptr @mode_mask_array, i64 0, i64 %168
  %170 = load i64, ptr %169, align 8, !tbaa !38
  %171 = and i64 %170, %159
  br label %172

172:                                              ; preds = %165, %157
  %173 = phi i64 [ %171, %165 ], [ %159, %157 ]
  %174 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %173)
  store ptr %174, ptr %3, align 8, !tbaa !6
  br label %793

175:                                              ; preds = %154
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.300)
  br label %933

176:                                              ; preds = %154
  %177 = and i32 %155, 65535
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !17
  %181 = icmp eq i32 %180, 9
  br i1 %181, label %182, label %195

182:                                              ; preds = %176
  %183 = tail call fastcc zeroext i8 @const_ok_for_output(ptr noundef nonnull %151), !range !155
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182
  %186 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %187 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %186, i64 0, i32 1
  %188 = load i16, ptr %187, align 8
  %189 = and i16 %188, -256
  %190 = or i16 %189, 3
  store i16 %190, ptr %187, align 8
  %191 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %186, i64 0, i32 3
  %192 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %186, i64 0, i32 3, i32 1
  %193 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %186, i64 0, i32 4
  store i32 6, ptr %193, align 8, !tbaa !49
  %194 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %186, i64 0, i32 4, i32 1
  store i64 0, ptr %194, align 8, !tbaa !17
  store ptr %186, ptr %3, align 8, !tbaa !6
  store i32 0, ptr %191, align 8, !tbaa !52
  store ptr %151, ptr %192, align 8, !tbaa !17
  br label %788

195:                                              ; preds = %182, %176
  %196 = icmp eq i32 %1, 2
  br i1 %196, label %197, label %199

197:                                              ; preds = %195
  %198 = tail call fastcc ptr @loc_descriptor(ptr noundef nonnull %151, i32 noundef 0, i32 noundef 2)
  br label %212

199:                                              ; preds = %195
  %200 = load i32, ptr %151, align 8
  %201 = lshr i32 %200, 16
  %202 = and i32 %201, 255
  %203 = and i32 %200, 65535
  %204 = icmp eq i32 %203, 43
  br i1 %204, label %205, label %208

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.rtx_def, ptr %151, i64 0, i32 1
  %207 = load ptr, ptr %206, align 8, !tbaa !17
  br label %208

208:                                              ; preds = %205, %199
  %209 = phi ptr [ %207, %205 ], [ %151, %199 ]
  %210 = phi i32 [ 1, %205 ], [ 0, %199 ]
  %211 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %209, i32 noundef %202, i32 noundef 2)
  br label %212

212:                                              ; preds = %208, %197
  %213 = phi ptr [ %211, %208 ], [ %198, %197 ]
  %214 = phi ptr [ %209, %208 ], [ %151, %197 ]
  %215 = phi i32 [ %210, %208 ], [ 1, %197 ]
  store ptr %213, ptr %3, align 8, !tbaa !6
  %216 = icmp eq ptr %213, null
  br i1 %216, label %217, label %788

217:                                              ; preds = %212
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef %214, ptr noundef nonnull @.str.301)
  br label %793

218:                                              ; preds = %2, %2, %2
  %219 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %220 = load ptr, ptr %219, align 8, !tbaa !17
  %221 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %220, i32 noundef 0)
  store ptr %221, ptr %4, align 8, !tbaa !6
  br label %793

222:                                              ; preds = %2
  %223 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %224 = load ptr, ptr %223, align 8, !tbaa !17
  %225 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %224, i32 noundef %1)
  br label %933

226:                                              ; preds = %2, %2, %2, %2, %2
  %227 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %228 = load ptr, ptr %227, align 8, !tbaa !17
  %229 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %228, i32 noundef %1)
  br label %933

230:                                              ; preds = %2, %2, %2, %2, %2, %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #31
  %231 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %232 = load ptr, ptr %231, align 8, !tbaa !17
  %233 = load i64, ptr %232, align 8
  %234 = trunc i64 %233 to i32
  %235 = lshr i32 %234, 21
  %236 = and i32 %235, 1
  store i32 %236, ptr %10, align 4, !tbaa !21
  %237 = call ptr @get_inner_reference(ptr noundef nonnull %0, ptr noundef nonnull %6, ptr noundef nonnull %7, ptr noundef nonnull %5, ptr noundef nonnull %8, ptr noundef nonnull %10, ptr noundef nonnull %9, i8 noundef zeroext 0) #31
  %238 = icmp eq ptr %237, %0
  br i1 %238, label %239, label %240

239:                                              ; preds = %230
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14573, ptr noundef nonnull @.str.5) #31
  br label %240

240:                                              ; preds = %230, %239
  %241 = icmp eq i32 %1, 2
  %242 = load i64, ptr %7, align 8
  %243 = icmp eq i64 %242, 0
  %244 = select i1 %241, i1 %243, i1 false
  %245 = load ptr, ptr %5, align 8
  %246 = icmp eq ptr %245, null
  %247 = select i1 %244, i1 %246, i1 false
  %248 = select i1 %247, i32 2, i32 1
  %249 = call fastcc ptr @loc_list_from_tree(ptr noundef %237, i32 noundef %248)
  store ptr %249, ptr %4, align 8, !tbaa !6
  %250 = icmp eq ptr %249, null
  br i1 %250, label %314, label %251

251:                                              ; preds = %240
  %252 = load i64, ptr %7, align 8, !tbaa !38
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %251
  %256 = load i64, ptr %6, align 8, !tbaa !38
  %257 = and i64 %256, 7
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %272, label %259

259:                                              ; preds = %255, %251
  %260 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %261 = icmp eq ptr %260, null
  br i1 %261, label %314, label %262

262:                                              ; preds = %259
  %263 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %264 = and i32 %263, 8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %314, label %266

266:                                              ; preds = %262
  %267 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %260)
  %268 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %269 = load i32, ptr @dump_flags, align 4, !tbaa !21
  call void @print_generic_expr(ptr noundef %268, ptr noundef nonnull %0, i32 noundef %269) #31
  %270 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %271 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %270, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.302)
  br label %314

272:                                              ; preds = %255
  %273 = load ptr, ptr %5, align 8, !tbaa !6
  %274 = icmp eq ptr %273, null
  br i1 %274, label %292, label %275

275:                                              ; preds = %272
  %276 = call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %273, i32 noundef 0)
  %277 = icmp eq ptr %276, null
  br i1 %277, label %314, label %278

278:                                              ; preds = %275
  call fastcc void @add_loc_list(ptr noundef nonnull %4, ptr noundef nonnull %276)
  %279 = load ptr, ptr %4, align 8
  %280 = icmp eq ptr %279, null
  br i1 %280, label %314, label %281

281:                                              ; preds = %278
  %282 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %283 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %282, i64 0, i32 1
  %284 = load i16, ptr %283, align 8
  %285 = and i16 %284, -256
  %286 = or i16 %285, 34
  store i16 %286, ptr %283, align 8
  %287 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %282, i64 0, i32 3
  store i32 6, ptr %287, align 8, !tbaa !52
  %288 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %282, i64 0, i32 3, i32 1
  store i64 0, ptr %288, align 8, !tbaa !17
  %289 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %282, i64 0, i32 4
  store i32 6, ptr %289, align 8, !tbaa !49
  %290 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %282, i64 0, i32 4, i32 1
  store i64 0, ptr %290, align 8, !tbaa !17
  call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %279, ptr noundef %282)
  %291 = load i64, ptr %7, align 8, !tbaa !38
  br label %292

292:                                              ; preds = %281, %272
  %293 = phi ptr [ %279, %281 ], [ %249, %272 ]
  %294 = phi i64 [ %291, %281 ], [ %252, %272 ]
  %295 = sdiv i64 %294, 8
  %296 = icmp sgt i64 %294, 7
  br i1 %296, label %297, label %307

297:                                              ; preds = %292
  %298 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %299 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %298, i64 0, i32 1
  %300 = load i16, ptr %299, align 8
  %301 = and i16 %300, -256
  %302 = or i16 %301, 35
  store i16 %302, ptr %299, align 8
  %303 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %298, i64 0, i32 3
  store i32 6, ptr %303, align 8, !tbaa !52
  %304 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %298, i64 0, i32 3, i32 1
  store i64 %295, ptr %304, align 8, !tbaa !17
  %305 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %298, i64 0, i32 4
  store i32 6, ptr %305, align 8, !tbaa !49
  %306 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %298, i64 0, i32 4, i32 1
  store i64 0, ptr %306, align 8, !tbaa !17
  call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %293, ptr noundef %298)
  br label %315

307:                                              ; preds = %292
  %308 = icmp sgt i64 %294, -8
  br i1 %308, label %315, label %309

309:                                              ; preds = %307, %309
  %310 = phi ptr [ %312, %309 ], [ %293, %307 ]
  %311 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %310, i64 0, i32 5
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %311, i64 noundef %295)
  %312 = load ptr, ptr %310, align 8, !tbaa !273
  %313 = icmp eq ptr %312, null
  br i1 %313, label %315, label %309, !llvm.loop !327

314:                                              ; preds = %240, %275, %278, %259, %262, %266
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #31
  br label %933

315:                                              ; preds = %309, %297, %307
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #31
  br label %793

316:                                              ; preds = %2
  %317 = icmp eq i32 %1, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %316
  %319 = tail call i32 @host_integerp(ptr noundef nonnull %0, i32 noundef 0) #31
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %337

321:                                              ; preds = %318, %316
  %322 = tail call fastcc ptr @cst_pool_loc_descr(ptr noundef nonnull %0)
  store ptr %322, ptr %3, align 8, !tbaa !6
  %323 = icmp eq ptr %322, null
  br i1 %323, label %324, label %785

324:                                              ; preds = %321
  %325 = icmp eq i32 %1, 2
  br i1 %325, label %326, label %337

326:                                              ; preds = %324
  %327 = tail call i32 @host_integerp(ptr noundef nonnull %0, i32 noundef 0) #31
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %337, label %329

329:                                              ; preds = %326
  %330 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %331 = load ptr, ptr %330, align 8, !tbaa !17
  %332 = tail call i64 @int_size_in_bytes(ptr noundef %331) #31
  %333 = trunc i64 %332 to i32
  %334 = tail call i64 @tree_low_cst(ptr noundef nonnull %0, i32 noundef 0) #31
  %335 = tail call fastcc ptr @address_of_int_loc_descriptor(i32 noundef %333, i64 noundef %334)
  store ptr %335, ptr %3, align 8, !tbaa !6
  %336 = icmp eq ptr %335, null
  br i1 %336, label %337, label %785

337:                                              ; preds = %318, %329, %326, %324
  %338 = tail call i32 @host_integerp(ptr noundef nonnull %0, i32 noundef 0) #31
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %343, label %340

340:                                              ; preds = %337
  %341 = tail call i64 @tree_low_cst(ptr noundef nonnull %0, i32 noundef 0) #31
  %342 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %341)
  store ptr %342, ptr %3, align 8, !tbaa !6
  br label %793

343:                                              ; preds = %337
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.303)
  br label %933

344:                                              ; preds = %2, %2, %2, %2
  %345 = tail call fastcc ptr @cst_pool_loc_descr(ptr noundef nonnull %0)
  store ptr %345, ptr %3, align 8, !tbaa !6
  %346 = icmp eq ptr %345, null
  br i1 %346, label %347, label %785

347:                                              ; preds = %344
  %348 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %349 = icmp eq ptr %348, null
  br i1 %349, label %793, label %350

350:                                              ; preds = %347
  %351 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %352 = and i32 %351, 8
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %793, label %354

354:                                              ; preds = %350
  %355 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %348)
  %356 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %357 = load i32, ptr @dump_flags, align 4, !tbaa !21
  tail call void @print_generic_expr(ptr noundef %356, ptr noundef nonnull %0, i32 noundef %357) #31
  %358 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %359 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %358, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.304)
  br label %793

360:                                              ; preds = %2, %2
  br label %499

361:                                              ; preds = %2, %2, %2
  br label %499

362:                                              ; preds = %2, %2, %2, %2
  %363 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %364 = load ptr, ptr %363, align 8, !tbaa !17
  %365 = load i64, ptr %364, align 8
  %366 = and i64 %365, 2097152
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %499, label %933

368:                                              ; preds = %2
  br label %499

369:                                              ; preds = %2, %2, %2, %2
  %370 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %371 = load ptr, ptr %370, align 8, !tbaa !17
  %372 = load i64, ptr %371, align 8
  %373 = and i64 %372, 2097152
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %375, label %499

375:                                              ; preds = %369
  %376 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %377 = load ptr, ptr %376, align 8, !tbaa !17
  %378 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %377, i32 noundef 0)
  store ptr %378, ptr %4, align 8, !tbaa !6
  %379 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %380 = load ptr, ptr %379, align 8, !tbaa !17
  %381 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %380, i32 noundef 0)
  %382 = icmp eq ptr %378, null
  %383 = icmp eq ptr %381, null
  %384 = select i1 %382, i1 true, i1 %383
  br i1 %384, label %933, label %385

385:                                              ; preds = %375
  call fastcc void @add_loc_list(ptr noundef nonnull %4, ptr noundef nonnull %381)
  %386 = load ptr, ptr %4, align 8
  %387 = icmp eq ptr %386, null
  br i1 %387, label %933, label %388

388:                                              ; preds = %385
  %389 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %390 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %389, i64 0, i32 1
  %391 = load i16, ptr %390, align 8
  %392 = and i16 %391, -256
  %393 = or i16 %392, 20
  store i16 %393, ptr %390, align 8
  %394 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %389, i64 0, i32 3
  store i32 6, ptr %394, align 8, !tbaa !52
  %395 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %389, i64 0, i32 3, i32 1
  store i64 0, ptr %395, align 8, !tbaa !17
  %396 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %389, i64 0, i32 4
  store i32 6, ptr %396, align 8, !tbaa !49
  %397 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %389, i64 0, i32 4, i32 1
  store i64 0, ptr %397, align 8, !tbaa !17
  tail call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %386, ptr noundef %389)
  %398 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %399 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %398, i64 0, i32 1
  %400 = load i16, ptr %399, align 8
  %401 = and i16 %400, -256
  %402 = or i16 %401, 20
  store i16 %402, ptr %399, align 8
  %403 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %398, i64 0, i32 3
  store i32 6, ptr %403, align 8, !tbaa !52
  %404 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %398, i64 0, i32 3, i32 1
  store i64 0, ptr %404, align 8, !tbaa !17
  %405 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %398, i64 0, i32 4
  store i32 6, ptr %405, align 8, !tbaa !49
  %406 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %398, i64 0, i32 4, i32 1
  store i64 0, ptr %406, align 8, !tbaa !17
  tail call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %386, ptr noundef %398)
  %407 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %408 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %407, i64 0, i32 1
  %409 = load i16, ptr %408, align 8
  %410 = and i16 %409, -256
  %411 = or i16 %410, 27
  store i16 %411, ptr %408, align 8
  %412 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %407, i64 0, i32 3
  store i32 6, ptr %412, align 8, !tbaa !52
  %413 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %407, i64 0, i32 3, i32 1
  store i64 0, ptr %413, align 8, !tbaa !17
  %414 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %407, i64 0, i32 4
  store i32 6, ptr %414, align 8, !tbaa !49
  %415 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %407, i64 0, i32 4, i32 1
  store i64 0, ptr %415, align 8, !tbaa !17
  tail call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %386, ptr noundef %407)
  %416 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %417 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %416, i64 0, i32 1
  %418 = load i16, ptr %417, align 8
  %419 = and i16 %418, -256
  %420 = or i16 %419, 30
  store i16 %420, ptr %417, align 8
  %421 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %416, i64 0, i32 3
  store i32 6, ptr %421, align 8, !tbaa !52
  %422 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %416, i64 0, i32 3, i32 1
  store i64 0, ptr %422, align 8, !tbaa !17
  %423 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %416, i64 0, i32 4
  store i32 6, ptr %423, align 8, !tbaa !49
  %424 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %416, i64 0, i32 4, i32 1
  store i64 0, ptr %424, align 8, !tbaa !17
  tail call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %386, ptr noundef %416)
  %425 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %426 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %425, i64 0, i32 1
  %427 = load i16, ptr %426, align 8
  %428 = and i16 %427, -256
  %429 = or i16 %428, 28
  store i16 %429, ptr %426, align 8
  %430 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %425, i64 0, i32 3
  store i32 6, ptr %430, align 8, !tbaa !52
  %431 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %425, i64 0, i32 3, i32 1
  store i64 0, ptr %431, align 8, !tbaa !17
  %432 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %425, i64 0, i32 4
  store i32 6, ptr %432, align 8, !tbaa !49
  %433 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %425, i64 0, i32 4, i32 1
  store i64 0, ptr %433, align 8, !tbaa !17
  tail call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %386, ptr noundef %425)
  br label %788

434:                                              ; preds = %2
  br label %499

435:                                              ; preds = %2
  br label %499

436:                                              ; preds = %2
  %437 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %438 = load ptr, ptr %437, align 8, !tbaa !17
  %439 = load i64, ptr %438, align 8
  %440 = and i64 %439, 2097152
  %441 = icmp eq i64 %440, 0
  %442 = select i1 %441, i16 38, i16 37
  br label %499

443:                                              ; preds = %2, %2
  %444 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %445 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %446 = load ptr, ptr %445, align 8, !tbaa !17
  %447 = load i64, ptr %446, align 8
  %448 = and i64 %447, 65535
  %449 = icmp eq i64 %448, 23
  br i1 %449, label %450, label %499

450:                                              ; preds = %443
  %451 = tail call i32 @host_integerp(ptr noundef nonnull %446, i32 noundef 0) #31
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %499, label %453

453:                                              ; preds = %450
  %454 = load ptr, ptr %444, align 8, !tbaa !17
  %455 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %454, i32 noundef 0)
  store ptr %455, ptr %4, align 8, !tbaa !6
  %456 = icmp eq ptr %455, null
  br i1 %456, label %933, label %457

457:                                              ; preds = %453
  %458 = load ptr, ptr %445, align 8, !tbaa !17
  %459 = tail call i64 @tree_low_cst(ptr noundef %458, i32 noundef 0) #31
  br label %460

460:                                              ; preds = %457, %460
  %461 = phi ptr [ %463, %460 ], [ %455, %457 ]
  %462 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %461, i64 0, i32 5
  tail call fastcc void @loc_descr_plus_const(ptr noundef nonnull %462, i64 noundef %459)
  %463 = load ptr, ptr %461, align 8, !tbaa !273
  %464 = icmp eq ptr %463, null
  br i1 %464, label %793, label %460, !llvm.loop !327

465:                                              ; preds = %2
  %466 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %467 = load ptr, ptr %466, align 8, !tbaa !17
  %468 = getelementptr inbounds %struct.tree_common, ptr %467, i64 0, i32 2
  %469 = load ptr, ptr %468, align 8, !tbaa !17
  %470 = load i64, ptr %469, align 8
  %471 = and i64 %470, 2097152
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %499, label %933

473:                                              ; preds = %2
  %474 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %475 = load ptr, ptr %474, align 8, !tbaa !17
  %476 = getelementptr inbounds %struct.tree_common, ptr %475, i64 0, i32 2
  %477 = load ptr, ptr %476, align 8, !tbaa !17
  %478 = load i64, ptr %477, align 8
  %479 = and i64 %478, 2097152
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %499, label %933

481:                                              ; preds = %2
  %482 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %483 = load ptr, ptr %482, align 8, !tbaa !17
  %484 = getelementptr inbounds %struct.tree_common, ptr %483, i64 0, i32 2
  %485 = load ptr, ptr %484, align 8, !tbaa !17
  %486 = load i64, ptr %485, align 8
  %487 = and i64 %486, 2097152
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %499, label %933

489:                                              ; preds = %2
  %490 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %491 = load ptr, ptr %490, align 8, !tbaa !17
  %492 = getelementptr inbounds %struct.tree_common, ptr %491, i64 0, i32 2
  %493 = load ptr, ptr %492, align 8, !tbaa !17
  %494 = load i64, ptr %493, align 8
  %495 = and i64 %494, 2097152
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %499, label %933

497:                                              ; preds = %2
  br label %499

498:                                              ; preds = %2
  br label %499

499:                                              ; preds = %489, %481, %473, %465, %443, %450, %369, %362, %2, %2, %2, %498, %497, %436, %435, %434, %368, %361, %360
  %500 = phi i16 [ 46, %498 ], [ 41, %497 ], [ %442, %436 ], [ 36, %435 ], [ 30, %434 ], [ 28, %368 ], [ 33, %361 ], [ 39, %360 ], [ 26, %2 ], [ 26, %2 ], [ 26, %2 ], [ 27, %362 ], [ 29, %369 ], [ 34, %450 ], [ 34, %443 ], [ 44, %465 ], [ 42, %473 ], [ 45, %481 ], [ 43, %489 ]
  %501 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %502 = load ptr, ptr %501, align 8, !tbaa !17
  %503 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %502, i32 noundef 0)
  store ptr %503, ptr %4, align 8, !tbaa !6
  %504 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %505 = load ptr, ptr %504, align 8, !tbaa !17
  %506 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %505, i32 noundef 0)
  %507 = icmp eq ptr %503, null
  %508 = icmp eq ptr %506, null
  %509 = select i1 %507, i1 true, i1 %508
  br i1 %509, label %933, label %510

510:                                              ; preds = %499
  call fastcc void @add_loc_list(ptr noundef nonnull %4, ptr noundef nonnull %506)
  %511 = load ptr, ptr %4, align 8
  %512 = icmp eq ptr %511, null
  br i1 %512, label %933, label %513

513:                                              ; preds = %510
  %514 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %515 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %514, i64 0, i32 1
  %516 = load i16, ptr %515, align 8
  %517 = and i16 %516, -256
  %518 = or i16 %517, %500
  store i16 %518, ptr %515, align 8
  %519 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %514, i64 0, i32 3
  store i32 6, ptr %519, align 8, !tbaa !52
  %520 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %514, i64 0, i32 3, i32 1
  store i64 0, ptr %520, align 8, !tbaa !17
  %521 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %514, i64 0, i32 4
  store i32 6, ptr %521, align 8, !tbaa !49
  %522 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %514, i64 0, i32 4, i32 1
  store i64 0, ptr %522, align 8, !tbaa !17
  %523 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %511, i64 0, i32 5
  br label %524

524:                                              ; preds = %524, %513
  %525 = phi ptr [ %523, %513 ], [ %526, %524 ]
  %526 = load ptr, ptr %525, align 8, !tbaa !6
  %527 = icmp eq ptr %526, null
  br i1 %527, label %528, label %524, !llvm.loop !53

528:                                              ; preds = %524
  store ptr %514, ptr %525, align 8, !tbaa !6
  %529 = load ptr, ptr %511, align 8, !tbaa !273
  %530 = icmp eq ptr %529, null
  br i1 %530, label %788, label %534

531:                                              ; preds = %545, %542
  %532 = load ptr, ptr %535, align 8, !tbaa !273
  %533 = icmp eq ptr %532, null
  br i1 %533, label %793, label %534, !llvm.loop !328

534:                                              ; preds = %528, %531
  %535 = phi ptr [ %532, %531 ], [ %529, %528 ]
  %536 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %536, ptr noundef nonnull align 8 dereferenceable(64) %514, i64 64, i1 false)
  %537 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %535, i64 0, i32 5
  br label %538

538:                                              ; preds = %538, %534
  %539 = phi ptr [ %537, %534 ], [ %540, %538 ]
  %540 = load ptr, ptr %539, align 8, !tbaa !6
  %541 = icmp eq ptr %540, null
  br i1 %541, label %542, label %538, !llvm.loop !53

542:                                              ; preds = %538
  store ptr %536, ptr %539, align 8, !tbaa !6
  %543 = load ptr, ptr %536, align 8, !tbaa !57
  %544 = icmp eq ptr %543, null
  br i1 %544, label %531, label %545

545:                                              ; preds = %542, %545
  %546 = phi ptr [ %547, %545 ], [ %536, %542 ]
  %547 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %548 = load ptr, ptr %546, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %547, ptr noundef nonnull align 8 dereferenceable(64) %548, i64 64, i1 false)
  store ptr %547, ptr %546, align 8, !tbaa !57
  %549 = load ptr, ptr %547, align 8, !tbaa !57
  %550 = icmp eq ptr %549, null
  br i1 %550, label %531, label %545, !llvm.loop !329

551:                                              ; preds = %2
  br label %553

552:                                              ; preds = %2
  br label %553

553:                                              ; preds = %2, %2, %552, %551
  %554 = phi i16 [ 31, %552 ], [ 25, %551 ], [ 32, %2 ], [ 32, %2 ]
  %555 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %556 = load ptr, ptr %555, align 8, !tbaa !17
  %557 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %556, i32 noundef 0)
  store ptr %557, ptr %4, align 8, !tbaa !6
  %558 = icmp eq ptr %557, null
  br i1 %558, label %933, label %559

559:                                              ; preds = %553
  %560 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %561 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %560, i64 0, i32 1
  %562 = load i16, ptr %561, align 8
  %563 = and i16 %562, -256
  %564 = or i16 %563, %554
  store i16 %564, ptr %561, align 8
  %565 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %560, i64 0, i32 3
  store i32 6, ptr %565, align 8, !tbaa !52
  %566 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %560, i64 0, i32 3, i32 1
  store i64 0, ptr %566, align 8, !tbaa !17
  %567 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %560, i64 0, i32 4
  store i32 6, ptr %567, align 8, !tbaa !49
  %568 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %560, i64 0, i32 4, i32 1
  store i64 0, ptr %568, align 8, !tbaa !17
  %569 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %557, i64 0, i32 5
  br label %570

570:                                              ; preds = %570, %559
  %571 = phi ptr [ %569, %559 ], [ %572, %570 ]
  %572 = load ptr, ptr %571, align 8, !tbaa !6
  %573 = icmp eq ptr %572, null
  br i1 %573, label %574, label %570, !llvm.loop !53

574:                                              ; preds = %570
  store ptr %560, ptr %571, align 8, !tbaa !6
  %575 = load ptr, ptr %557, align 8, !tbaa !273
  %576 = icmp eq ptr %575, null
  br i1 %576, label %788, label %580

577:                                              ; preds = %591, %588
  %578 = load ptr, ptr %581, align 8, !tbaa !273
  %579 = icmp eq ptr %578, null
  br i1 %579, label %793, label %580, !llvm.loop !328

580:                                              ; preds = %574, %577
  %581 = phi ptr [ %578, %577 ], [ %575, %574 ]
  %582 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %582, ptr noundef nonnull align 8 dereferenceable(64) %560, i64 64, i1 false)
  %583 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %581, i64 0, i32 5
  br label %584

584:                                              ; preds = %584, %580
  %585 = phi ptr [ %583, %580 ], [ %586, %584 ]
  %586 = load ptr, ptr %585, align 8, !tbaa !6
  %587 = icmp eq ptr %586, null
  br i1 %587, label %588, label %584, !llvm.loop !53

588:                                              ; preds = %584
  store ptr %582, ptr %585, align 8, !tbaa !6
  %589 = load ptr, ptr %582, align 8, !tbaa !57
  %590 = icmp eq ptr %589, null
  br i1 %590, label %577, label %591

591:                                              ; preds = %588, %591
  %592 = phi ptr [ %593, %591 ], [ %582, %588 ]
  %593 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %594 = load ptr, ptr %592, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %593, ptr noundef nonnull align 8 dereferenceable(64) %594, i64 64, i1 false)
  store ptr %593, ptr %592, align 8, !tbaa !57
  %595 = load ptr, ptr %593, align 8, !tbaa !57
  %596 = icmp eq ptr %595, null
  br i1 %596, label %577, label %591, !llvm.loop !329

597:                                              ; preds = %2, %2
  %598 = and i64 %11, 65535
  %599 = icmp eq i64 %598, 80
  %600 = select i1 %599, i32 99, i32 97
  %601 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %602 = load ptr, ptr %601, align 8, !tbaa !17
  %603 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %604 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %605 = load ptr, ptr %604, align 8, !tbaa !17
  %606 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %607 = load ptr, ptr %606, align 8, !tbaa !17
  %608 = tail call ptr @build2_stat(i32 noundef %600, ptr noundef %603, ptr noundef %605, ptr noundef %607) #31
  %609 = load ptr, ptr %606, align 8, !tbaa !17
  %610 = load ptr, ptr %604, align 8, !tbaa !17
  %611 = tail call ptr @build3_stat(i32 noundef 56, ptr noundef %602, ptr noundef %608, ptr noundef %609, ptr noundef %610) #31
  br label %612

612:                                              ; preds = %2, %597
  %613 = phi ptr [ %0, %2 ], [ %611, %597 ]
  %614 = getelementptr inbounds %struct.tree_exp, ptr %613, i64 0, i32 3
  %615 = getelementptr inbounds %struct.tree_exp, ptr %613, i64 1
  %616 = load ptr, ptr %615, align 8, !tbaa !17
  %617 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %616, i32 noundef 0)
  %618 = icmp eq ptr %617, null
  br i1 %618, label %626, label %619

619:                                              ; preds = %612
  %620 = load ptr, ptr %617, align 8, !tbaa !273
  %621 = icmp eq ptr %620, null
  br i1 %621, label %623, label %622

622:                                              ; preds = %619
  tail call fastcc void @expansion_failed(ptr noundef %616, ptr noundef null, ptr noundef nonnull @.str.313)
  br label %626

623:                                              ; preds = %619
  %624 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %617, i64 0, i32 5
  %625 = load ptr, ptr %624, align 8, !tbaa !270
  br label %626

626:                                              ; preds = %612, %622, %623
  %627 = phi ptr [ null, %622 ], [ %625, %623 ], [ null, %612 ]
  %628 = getelementptr inbounds %struct.tree_exp, ptr %613, i64 1, i32 0, i32 1
  %629 = load ptr, ptr %628, align 8, !tbaa !17
  %630 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %629, i32 noundef 0)
  %631 = load ptr, ptr %614, align 8, !tbaa !17
  %632 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %631, i32 noundef 0)
  store ptr %632, ptr %4, align 8, !tbaa !6
  %633 = icmp eq ptr %632, null
  %634 = icmp eq ptr %627, null
  %635 = select i1 %633, i1 true, i1 %634
  %636 = icmp eq ptr %630, null
  %637 = select i1 %635, i1 true, i1 %636
  br i1 %637, label %933, label %638

638:                                              ; preds = %626
  %639 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %640 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %639, i64 0, i32 1
  %641 = load i16, ptr %640, align 8
  %642 = and i16 %641, -256
  %643 = or i16 %642, 40
  store i16 %643, ptr %640, align 8
  %644 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %639, i64 0, i32 3
  store i32 6, ptr %644, align 8, !tbaa !52
  %645 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %639, i64 0, i32 3, i32 1
  store i64 0, ptr %645, align 8, !tbaa !17
  %646 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %639, i64 0, i32 4
  store i32 6, ptr %646, align 8, !tbaa !49
  %647 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %639, i64 0, i32 4, i32 1
  store i64 0, ptr %647, align 8, !tbaa !17
  %648 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %632, i64 0, i32 5
  br label %649

649:                                              ; preds = %649, %638
  %650 = phi ptr [ %648, %638 ], [ %651, %649 ]
  %651 = load ptr, ptr %650, align 8, !tbaa !6
  %652 = icmp eq ptr %651, null
  br i1 %652, label %653, label %649, !llvm.loop !53

653:                                              ; preds = %649
  store ptr %639, ptr %650, align 8, !tbaa !6
  %654 = load ptr, ptr %632, align 8, !tbaa !273
  %655 = icmp eq ptr %654, null
  br i1 %655, label %676, label %659

656:                                              ; preds = %670, %667
  %657 = load ptr, ptr %660, align 8, !tbaa !273
  %658 = icmp eq ptr %657, null
  br i1 %658, label %676, label %659, !llvm.loop !328

659:                                              ; preds = %653, %656
  %660 = phi ptr [ %657, %656 ], [ %654, %653 ]
  %661 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %661, ptr noundef nonnull align 8 dereferenceable(64) %639, i64 64, i1 false)
  %662 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %660, i64 0, i32 5
  br label %663

663:                                              ; preds = %663, %659
  %664 = phi ptr [ %662, %659 ], [ %665, %663 ]
  %665 = load ptr, ptr %664, align 8, !tbaa !6
  %666 = icmp eq ptr %665, null
  br i1 %666, label %667, label %663, !llvm.loop !53

667:                                              ; preds = %663
  store ptr %661, ptr %664, align 8, !tbaa !6
  %668 = load ptr, ptr %661, align 8, !tbaa !57
  %669 = icmp eq ptr %668, null
  br i1 %669, label %656, label %670

670:                                              ; preds = %667, %670
  %671 = phi ptr [ %672, %670 ], [ %661, %667 ]
  %672 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %673 = load ptr, ptr %671, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %672, ptr noundef nonnull align 8 dereferenceable(64) %673, i64 64, i1 false)
  store ptr %672, ptr %671, align 8, !tbaa !57
  %674 = load ptr, ptr %672, align 8, !tbaa !57
  %675 = icmp eq ptr %674, null
  br i1 %675, label %656, label %670, !llvm.loop !329

676:                                              ; preds = %656, %653
  call fastcc void @add_loc_list(ptr noundef nonnull %4, ptr noundef %630)
  %677 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %678 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 1
  %679 = load i16, ptr %678, align 8
  %680 = and i16 %679, -256
  %681 = or i16 %680, 47
  store i16 %681, ptr %678, align 8
  %682 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 3
  store i32 6, ptr %682, align 8, !tbaa !52
  %683 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 3, i32 1
  store i64 0, ptr %683, align 8, !tbaa !17
  %684 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 4
  store i32 6, ptr %684, align 8, !tbaa !49
  %685 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 4, i32 1
  store i64 0, ptr %685, align 8, !tbaa !17
  %686 = load ptr, ptr %4, align 8
  %687 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %686, i64 0, i32 5
  br label %688

688:                                              ; preds = %688, %676
  %689 = phi ptr [ %687, %676 ], [ %690, %688 ]
  %690 = load ptr, ptr %689, align 8, !tbaa !6
  %691 = icmp eq ptr %690, null
  br i1 %691, label %692, label %688, !llvm.loop !53

692:                                              ; preds = %688
  store ptr %677, ptr %689, align 8, !tbaa !6
  %693 = load ptr, ptr %686, align 8, !tbaa !273
  %694 = icmp eq ptr %693, null
  br i1 %694, label %695, label %699

695:                                              ; preds = %696, %692
  br label %716

696:                                              ; preds = %710, %707
  %697 = load ptr, ptr %700, align 8, !tbaa !273
  %698 = icmp eq ptr %697, null
  br i1 %698, label %695, label %699, !llvm.loop !328

699:                                              ; preds = %692, %696
  %700 = phi ptr [ %697, %696 ], [ %693, %692 ]
  %701 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %701, ptr noundef nonnull align 8 dereferenceable(64) %677, i64 64, i1 false)
  %702 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %700, i64 0, i32 5
  br label %703

703:                                              ; preds = %703, %699
  %704 = phi ptr [ %702, %699 ], [ %705, %703 ]
  %705 = load ptr, ptr %704, align 8, !tbaa !6
  %706 = icmp eq ptr %705, null
  br i1 %706, label %707, label %703, !llvm.loop !53

707:                                              ; preds = %703
  store ptr %701, ptr %704, align 8, !tbaa !6
  %708 = load ptr, ptr %701, align 8, !tbaa !57
  %709 = icmp eq ptr %708, null
  br i1 %709, label %696, label %710

710:                                              ; preds = %707, %710
  %711 = phi ptr [ %712, %710 ], [ %701, %707 ]
  %712 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %713 = load ptr, ptr %711, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %712, ptr noundef nonnull align 8 dereferenceable(64) %713, i64 64, i1 false)
  store ptr %712, ptr %711, align 8, !tbaa !57
  %714 = load ptr, ptr %712, align 8, !tbaa !57
  %715 = icmp eq ptr %714, null
  br i1 %715, label %696, label %710, !llvm.loop !329

716:                                              ; preds = %695, %716
  %717 = phi ptr [ %718, %716 ], [ %687, %695 ]
  %718 = load ptr, ptr %717, align 8, !tbaa !6
  %719 = icmp eq ptr %718, null
  br i1 %719, label %720, label %716, !llvm.loop !53

720:                                              ; preds = %716
  store ptr %627, ptr %717, align 8, !tbaa !6
  %721 = load ptr, ptr %686, align 8, !tbaa !273
  %722 = icmp eq ptr %721, null
  br i1 %722, label %743, label %726

723:                                              ; preds = %737, %734
  %724 = load ptr, ptr %727, align 8, !tbaa !273
  %725 = icmp eq ptr %724, null
  br i1 %725, label %743, label %726, !llvm.loop !328

726:                                              ; preds = %720, %723
  %727 = phi ptr [ %724, %723 ], [ %721, %720 ]
  %728 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %728, ptr noundef nonnull align 8 dereferenceable(64) %627, i64 64, i1 false)
  %729 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %727, i64 0, i32 5
  br label %730

730:                                              ; preds = %730, %726
  %731 = phi ptr [ %729, %726 ], [ %732, %730 ]
  %732 = load ptr, ptr %731, align 8, !tbaa !6
  %733 = icmp eq ptr %732, null
  br i1 %733, label %734, label %730, !llvm.loop !53

734:                                              ; preds = %730
  store ptr %728, ptr %731, align 8, !tbaa !6
  %735 = load ptr, ptr %728, align 8, !tbaa !57
  %736 = icmp eq ptr %735, null
  br i1 %736, label %723, label %737

737:                                              ; preds = %734, %737
  %738 = phi ptr [ %739, %737 ], [ %728, %734 ]
  %739 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %740 = load ptr, ptr %738, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %739, ptr noundef nonnull align 8 dereferenceable(64) %740, i64 64, i1 false)
  store ptr %739, ptr %738, align 8, !tbaa !57
  %741 = load ptr, ptr %739, align 8, !tbaa !57
  %742 = icmp eq ptr %741, null
  br i1 %742, label %723, label %737, !llvm.loop !329

743:                                              ; preds = %723, %720
  store i32 2, ptr %644, align 8, !tbaa !52
  store ptr %627, ptr %645, align 8, !tbaa !17
  %744 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %745 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %744, i64 0, i32 1
  %746 = load i16, ptr %745, align 8
  %747 = and i16 %746, -256
  %748 = or i16 %747, 150
  store i16 %748, ptr %745, align 8
  %749 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %744, i64 0, i32 3
  store i32 6, ptr %749, align 8, !tbaa !52
  %750 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %744, i64 0, i32 3, i32 1
  store i64 0, ptr %750, align 8, !tbaa !17
  %751 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %744, i64 0, i32 4
  store i32 6, ptr %751, align 8, !tbaa !49
  %752 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %744, i64 0, i32 4, i32 1
  store i64 0, ptr %752, align 8, !tbaa !17
  br label %753

753:                                              ; preds = %753, %743
  %754 = phi ptr [ %687, %743 ], [ %755, %753 ]
  %755 = load ptr, ptr %754, align 8, !tbaa !6
  %756 = icmp eq ptr %755, null
  br i1 %756, label %757, label %753, !llvm.loop !53

757:                                              ; preds = %753
  store ptr %744, ptr %754, align 8, !tbaa !6
  %758 = load ptr, ptr %686, align 8, !tbaa !273
  %759 = icmp eq ptr %758, null
  br i1 %759, label %780, label %763

760:                                              ; preds = %774, %771
  %761 = load ptr, ptr %764, align 8, !tbaa !273
  %762 = icmp eq ptr %761, null
  br i1 %762, label %780, label %763, !llvm.loop !328

763:                                              ; preds = %757, %760
  %764 = phi ptr [ %761, %760 ], [ %758, %757 ]
  %765 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %765, ptr noundef nonnull align 8 dereferenceable(64) %744, i64 64, i1 false)
  %766 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %764, i64 0, i32 5
  br label %767

767:                                              ; preds = %767, %763
  %768 = phi ptr [ %766, %763 ], [ %769, %767 ]
  %769 = load ptr, ptr %768, align 8, !tbaa !6
  %770 = icmp eq ptr %769, null
  br i1 %770, label %771, label %767, !llvm.loop !53

771:                                              ; preds = %767
  store ptr %765, ptr %768, align 8, !tbaa !6
  %772 = load ptr, ptr %765, align 8, !tbaa !57
  %773 = icmp eq ptr %772, null
  br i1 %773, label %760, label %774

774:                                              ; preds = %771, %774
  %775 = phi ptr [ %776, %774 ], [ %765, %771 ]
  %776 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %777 = load ptr, ptr %775, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %776, ptr noundef nonnull align 8 dereferenceable(64) %777, i64 64, i1 false)
  store ptr %776, ptr %775, align 8, !tbaa !57
  %778 = load ptr, ptr %776, align 8, !tbaa !57
  %779 = icmp eq ptr %778, null
  br i1 %779, label %760, label %774, !llvm.loop !329

780:                                              ; preds = %760, %757
  store i32 2, ptr %682, align 8, !tbaa !52
  store ptr %744, ptr %683, align 8, !tbaa !17
  br label %793

781:                                              ; preds = %2
  %782 = and i64 %11, 65532
  %783 = icmp ugt i64 %782, 187
  br i1 %783, label %784, label %933

784:                                              ; preds = %781
  tail call fastcc void @expansion_failed(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull @.str.305)
  br label %933

785:                                              ; preds = %321, %329, %344
  %786 = phi ptr [ %322, %321 ], [ %335, %329 ], [ %345, %344 ]
  %787 = icmp eq i32 %1, 0
  br label %877

788:                                              ; preds = %212, %185, %574, %528, %388
  %789 = phi ptr [ null, %185 ], [ null, %212 ], [ %386, %388 ], [ %511, %528 ], [ %557, %574 ]
  %790 = phi ptr [ %186, %185 ], [ %213, %212 ], [ null, %388 ], [ null, %528 ], [ null, %574 ]
  %791 = phi i32 [ 0, %185 ], [ %215, %212 ], [ 0, %388 ], [ 0, %528 ], [ 0, %574 ]
  %792 = icmp ne ptr %789, null
  br label %801

793:                                              ; preds = %577, %460, %531, %354, %350, %315, %125, %780, %218, %46, %146, %217, %172, %347, %340
  %794 = phi ptr [ null, %347 ], [ null, %340 ], [ null, %354 ], [ null, %350 ], [ %50, %46 ], [ null, %125 ], [ %221, %218 ], [ %293, %315 ], [ %686, %780 ], [ null, %217 ], [ null, %172 ], [ %147, %146 ], [ %511, %531 ], [ %455, %460 ], [ %557, %577 ]
  %795 = phi ptr [ null, %347 ], [ %342, %340 ], [ null, %354 ], [ null, %350 ], [ null, %46 ], [ %126, %125 ], [ null, %218 ], [ null, %315 ], [ null, %780 ], [ null, %217 ], [ %174, %172 ], [ null, %146 ], [ null, %531 ], [ null, %460 ], [ null, %577 ]
  %796 = phi i32 [ 0, %347 ], [ 0, %340 ], [ 0, %354 ], [ 0, %350 ], [ %47, %46 ], [ 1, %125 ], [ 1, %218 ], [ 1, %315 ], [ 0, %780 ], [ %215, %217 ], [ 0, %172 ], [ %149, %146 ], [ 0, %531 ], [ 0, %460 ], [ 0, %577 ]
  %797 = phi ptr [ %0, %347 ], [ %0, %340 ], [ %0, %354 ], [ %0, %350 ], [ %0, %46 ], [ %86, %125 ], [ %0, %218 ], [ %0, %315 ], [ %613, %780 ], [ %0, %217 ], [ %0, %172 ], [ %0, %146 ], [ %0, %531 ], [ %0, %460 ], [ %0, %577 ]
  %798 = icmp ne ptr %795, null
  %799 = icmp ne ptr %794, null
  %800 = select i1 %798, i1 true, i1 %799
  br i1 %800, label %801, label %933

801:                                              ; preds = %788, %793
  %802 = phi i1 [ %792, %788 ], [ %799, %793 ]
  %803 = phi ptr [ %0, %788 ], [ %797, %793 ]
  %804 = phi i32 [ %791, %788 ], [ %796, %793 ]
  %805 = phi ptr [ %790, %788 ], [ %795, %793 ]
  %806 = phi ptr [ %789, %788 ], [ %794, %793 ]
  %807 = icmp ne i32 %1, 2
  %808 = icmp ne i32 %804, 0
  %809 = or i1 %807, %808
  br i1 %809, label %851, label %810

810:                                              ; preds = %801
  %811 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %812 = icmp slt i32 %811, 4
  %813 = load i32, ptr @dwarf_strict, align 4
  %814 = icmp ne i32 %813, 0
  %815 = select i1 %812, i1 %814, i1 false
  br i1 %815, label %851, label %816

816:                                              ; preds = %810
  %817 = getelementptr inbounds %struct.tree_common, ptr %803, i64 0, i32 2
  %818 = load ptr, ptr %817, align 8, !tbaa !17
  %819 = call i64 @int_size_in_bytes(ptr noundef %818) #31
  %820 = icmp sgt i64 %819, 4
  br i1 %820, label %821, label %834

821:                                              ; preds = %816
  %822 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %823 = icmp eq ptr %822, null
  br i1 %823, label %933, label %824

824:                                              ; preds = %821
  %825 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %826 = and i32 %825, 8
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %933, label %828

828:                                              ; preds = %824
  %829 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %822)
  %830 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %831 = load i32, ptr @dump_flags, align 4, !tbaa !21
  call void @print_generic_expr(ptr noundef %830, ptr noundef nonnull %803, i32 noundef %831) #31
  %832 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %833 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %832, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.306)
  br label %933

834:                                              ; preds = %816
  %835 = icmp eq ptr %805, null
  %836 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %837 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %836, i64 0, i32 1
  %838 = load i16, ptr %837, align 8
  %839 = and i16 %838, -256
  %840 = or i16 %839, 159
  store i16 %840, ptr %837, align 8
  %841 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %836, i64 0, i32 3
  store i32 6, ptr %841, align 8, !tbaa !52
  %842 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %836, i64 0, i32 3, i32 1
  store i64 0, ptr %842, align 8, !tbaa !17
  %843 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %836, i64 0, i32 4
  store i32 6, ptr %843, align 8, !tbaa !49
  %844 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %836, i64 0, i32 4, i32 1
  store i64 0, ptr %844, align 8, !tbaa !17
  br i1 %835, label %850, label %845

845:                                              ; preds = %834, %845
  %846 = phi ptr [ %847, %845 ], [ %3, %834 ]
  %847 = load ptr, ptr %846, align 8, !tbaa !6
  %848 = icmp eq ptr %847, null
  br i1 %848, label %849, label %845, !llvm.loop !53

849:                                              ; preds = %845
  store ptr %836, ptr %846, align 8, !tbaa !6
  br label %870

850:                                              ; preds = %834
  call fastcc void @add_loc_descr_to_each(ptr noundef %806, ptr noundef nonnull %836)
  br label %870

851:                                              ; preds = %810, %801
  %852 = icmp eq i32 %1, 0
  %853 = or i1 %852, %808
  br i1 %853, label %870, label %854

854:                                              ; preds = %851
  %855 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %856 = icmp eq ptr %855, null
  br i1 %856, label %933, label %857

857:                                              ; preds = %854
  %858 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %859 = and i32 %858, 8
  %860 = icmp eq i32 %859, 0
  br i1 %860, label %933, label %861

861:                                              ; preds = %857
  %862 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %855)
  %863 = icmp eq ptr %803, null
  br i1 %863, label %867, label %864

864:                                              ; preds = %861
  %865 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %866 = load i32, ptr @dump_flags, align 4, !tbaa !21
  call void @print_generic_expr(ptr noundef %865, ptr noundef nonnull %803, i32 noundef %866) #31
  br label %867

867:                                              ; preds = %864, %861
  %868 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %869 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %868, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.307)
  br label %933

870:                                              ; preds = %849, %850, %851
  %871 = phi i1 [ %808, %851 ], [ true, %850 ], [ true, %849 ]
  %872 = phi i1 [ %852, %851 ], [ false, %850 ], [ false, %849 ]
  %873 = load ptr, ptr %3, align 8, !tbaa !6
  %874 = icmp ne ptr %873, null
  %875 = select i1 %874, i1 %802, i1 false
  br i1 %875, label %876, label %877

876:                                              ; preds = %870
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14891, ptr noundef nonnull @.str.5) #31
  br label %877

877:                                              ; preds = %785, %870, %876
  %878 = phi ptr [ %786, %785 ], [ %873, %870 ], [ %873, %876 ]
  %879 = phi i1 [ %787, %785 ], [ %872, %870 ], [ %872, %876 ]
  %880 = phi i1 [ true, %785 ], [ %871, %870 ], [ %871, %876 ]
  %881 = phi ptr [ null, %785 ], [ %806, %870 ], [ %806, %876 ]
  %882 = phi ptr [ %0, %785 ], [ %803, %870 ], [ %803, %876 ]
  %883 = and i1 %879, %880
  br i1 %883, label %884, label %923

884:                                              ; preds = %877
  %885 = getelementptr inbounds %struct.tree_common, ptr %882, i64 0, i32 2
  %886 = load ptr, ptr %885, align 8, !tbaa !17
  %887 = call i64 @int_size_in_bytes(ptr noundef %886) #31
  %888 = icmp slt i64 %887, 5
  %889 = icmp ne i64 %887, -1
  %890 = and i1 %888, %889
  br i1 %890, label %904, label %891

891:                                              ; preds = %884
  %892 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %893 = icmp eq ptr %892, null
  br i1 %893, label %933, label %894

894:                                              ; preds = %891
  %895 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %896 = and i32 %895, 8
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %933, label %898

898:                                              ; preds = %894
  %899 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %892)
  %900 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %901 = load i32, ptr @dump_flags, align 4, !tbaa !21
  call void @print_generic_expr(ptr noundef %900, ptr noundef nonnull %882, i32 noundef %901) #31
  %902 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %903 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %902, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.306)
  br label %933

904:                                              ; preds = %884
  %905 = icmp eq i64 %887, 4
  %906 = icmp eq ptr %878, null
  %907 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %908 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %907, i64 0, i32 1
  %909 = select i1 %905, i16 6, i16 148
  %910 = load i16, ptr %908, align 8
  %911 = and i16 %910, -256
  %912 = or i16 %911, %909
  store i16 %912, ptr %908, align 8
  %913 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %907, i64 0, i32 3
  store i32 6, ptr %913, align 8, !tbaa !52
  %914 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %907, i64 0, i32 3, i32 1
  store i64 %887, ptr %914, align 8, !tbaa !17
  %915 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %907, i64 0, i32 4
  store i32 6, ptr %915, align 8, !tbaa !49
  %916 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %907, i64 0, i32 4, i32 1
  store i64 0, ptr %916, align 8, !tbaa !17
  br i1 %906, label %921, label %917

917:                                              ; preds = %904, %917
  %918 = phi ptr [ %919, %917 ], [ %3, %904 ]
  %919 = load ptr, ptr %918, align 8, !tbaa !6
  %920 = icmp eq ptr %919, null
  br i1 %920, label %922, label %917, !llvm.loop !53

921:                                              ; preds = %904
  call fastcc void @add_loc_descr_to_each(ptr noundef %881, ptr noundef nonnull %907)
  br label %923

922:                                              ; preds = %917
  store ptr %907, ptr %918, align 8, !tbaa !6
  br label %923

923:                                              ; preds = %922, %921, %877
  %924 = load ptr, ptr %3, align 8, !tbaa !6
  %925 = icmp eq ptr %924, null
  br i1 %925, label %926, label %928

926:                                              ; preds = %923
  %927 = load ptr, ptr %4, align 8, !tbaa !6
  br label %933

928:                                              ; preds = %923
  %929 = call ptr @ggc_alloc_cleared_stat(i64 noundef 48) #31
  %930 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %929, i64 0, i32 1
  %931 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %929, i64 0, i32 5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %930, i8 0, i64 16, i1 false)
  store ptr %924, ptr %931, align 8, !tbaa !270
  %932 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %929, i64 0, i32 4
  store ptr null, ptr %932, align 8, !tbaa !303
  br label %933

933:                                              ; preds = %898, %894, %891, %928, %926, %93, %89, %83, %72, %75, %68, %60, %867, %857, %854, %828, %824, %821, %314, %153, %175, %23, %19, %16, %626, %793, %781, %2, %553, %510, %499, %489, %481, %473, %465, %453, %385, %375, %362, %51, %784, %343, %226, %222, %132, %15, %14, %13
  %934 = phi ptr [ null, %784 ], [ null, %343 ], [ %229, %226 ], [ %225, %222 ], [ %134, %132 ], [ null, %15 ], [ null, %14 ], [ null, %13 ], [ null, %51 ], [ null, %362 ], [ null, %375 ], [ null, %385 ], [ null, %453 ], [ null, %465 ], [ null, %473 ], [ null, %481 ], [ null, %489 ], [ null, %499 ], [ null, %510 ], [ null, %553 ], [ null, %2 ], [ null, %781 ], [ null, %793 ], [ null, %626 ], [ null, %16 ], [ null, %19 ], [ null, %23 ], [ null, %175 ], [ null, %153 ], [ null, %314 ], [ null, %821 ], [ null, %824 ], [ null, %828 ], [ null, %854 ], [ null, %857 ], [ null, %867 ], [ null, %60 ], [ null, %68 ], [ null, %75 ], [ null, %72 ], [ null, %83 ], [ null, %89 ], [ null, %93 ], [ %927, %926 ], [ %929, %928 ], [ null, %891 ], [ null, %894 ], [ null, %898 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  ret ptr %934
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_AT_location_description(ptr noundef %0, i32 noundef %1, ptr noundef %2) unnamed_addr #2 {
  %4 = icmp eq ptr %2, null
  br i1 %4, label %74, label %5

5:                                                ; preds = %3
  %6 = load ptr, ptr %2, align 8, !tbaa !273
  %7 = icmp eq ptr %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14182, ptr noundef nonnull @.str.5) #31
  br label %13

13:                                               ; preds = %5, %8, %12
  %14 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %2, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !274
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %46

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %2, i64 0, i32 5
  %19 = load ptr, ptr %18, align 8, !tbaa !270
  %20 = icmp eq ptr %0, null
  br i1 %20, label %74, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %26, ptr %22, align 8, !tbaa !157
  %27 = icmp eq ptr %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25, %21
  %29 = phi ptr [ %26, %25 ], [ %23, %21 ]
  %30 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %29, i64 0, i32 1
  %31 = load i32, ptr %30, align 4, !tbaa !201
  %32 = load i32, ptr %29, align 8, !tbaa !159
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %28, %25
  %35 = phi ptr [ %29, %28 ], [ null, %25 ]
  %36 = tail call ptr @vec_gc_o_reserve(ptr noundef %35, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %36, ptr %22, align 8, !tbaa !6
  %37 = load i32, ptr %36, align 8, !tbaa !159
  br label %38

38:                                               ; preds = %34, %28
  %39 = phi i32 [ %32, %28 ], [ %37, %34 ]
  %40 = phi ptr [ %29, %28 ], [ %36, %34 ]
  %41 = add i32 %39, 1
  store i32 %41, ptr %40, align 8, !tbaa !159
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %40, i64 0, i32 2, i64 %42
  store i32 %1, ptr %43, align 8, !tbaa.struct !179
  %44 = getelementptr inbounds i8, ptr %43, i64 8
  store i32 2, ptr %44, align 8, !tbaa.struct !202
  %45 = getelementptr inbounds i8, ptr %43, i64 16
  store ptr %19, ptr %45, align 8, !tbaa.struct !203
  br label %74

46:                                               ; preds = %13
  %47 = icmp eq ptr %0, null
  br i1 %47, label %73, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !6
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %53, ptr %49, align 8, !tbaa !157
  %54 = icmp eq ptr %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52, %48
  %56 = phi ptr [ %53, %52 ], [ %50, %48 ]
  %57 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 1
  %58 = load i32, ptr %57, align 4, !tbaa !201
  %59 = load i32, ptr %56, align 8, !tbaa !159
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %55, %52
  %62 = phi ptr [ %56, %55 ], [ null, %52 ]
  %63 = tail call ptr @vec_gc_o_reserve(ptr noundef %62, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %63, ptr %49, align 8, !tbaa !6
  %64 = load i32, ptr %63, align 8, !tbaa !159
  br label %65

65:                                               ; preds = %61, %55
  %66 = phi i32 [ %59, %55 ], [ %64, %61 ]
  %67 = phi ptr [ %56, %55 ], [ %63, %61 ]
  %68 = add i32 %66, 1
  store i32 %68, ptr %67, align 8, !tbaa !159
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %67, i64 0, i32 2, i64 %69
  store i32 %1, ptr %70, align 8, !tbaa.struct !179
  %71 = getelementptr inbounds i8, ptr %70, i64 8
  store i32 3, ptr %71, align 8, !tbaa.struct !202
  %72 = getelementptr inbounds i8, ptr %70, i64 16
  store ptr %2, ptr %72, align 8, !tbaa.struct !203
  br label %73

73:                                               ; preds = %46, %65
  store i8 1, ptr @have_location_lists, align 1, !tbaa !17
  br label %74

74:                                               ; preds = %38, %17, %3, %73
  ret void
}

declare ptr @plus_constant(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @avoid_constant_pool_reference(ptr noundef) local_unnamed_addr #3

declare ptr @make_decl_rtl_for_debug(ptr noundef) local_unnamed_addr #3

declare ptr @htab_find_with_hash(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @loc_list_for_address_of_addr_expr_of_indirect_ref(ptr noundef %0, i8 noundef zeroext %1) unnamed_addr #10 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #31
  %10 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load i64, ptr %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = lshr i32 %13, 21
  %15 = and i32 %14, 1
  store i32 %15, ptr %8, align 4, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #31
  %16 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = call ptr @get_inner_reference(ptr noundef %17, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %3, ptr noundef nonnull %6, ptr noundef nonnull %8, ptr noundef nonnull %7, i8 noundef zeroext 0) #31
  %19 = call ptr @tree_strip_nop_conversions(ptr noundef %18) #31
  %20 = load i64, ptr %5, align 8
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %2
  %24 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %25 = icmp eq ptr %24, null
  br i1 %25, label %134, label %26

26:                                               ; preds = %23
  %27 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %28 = and i32 %27, 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %134, label %30

30:                                               ; preds = %26
  %31 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %24)
  %32 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %33 = load i32, ptr @dump_flags, align 4, !tbaa !21
  call void @print_generic_expr(ptr noundef %32, ptr noundef nonnull %0, i32 noundef %33) #31
  %34 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %35 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %34, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.302)
  br label %134

36:                                               ; preds = %2
  %37 = load i64, ptr %19, align 8
  %38 = trunc i64 %37 to i32
  %39 = and i32 %38, 65535
  %40 = add nsw i32 %39, -47
  %41 = icmp ult i32 %40, 3
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %44 = icmp eq ptr %43, null
  br i1 %44, label %134, label %45

45:                                               ; preds = %42
  %46 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %47 = and i32 %46, 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %134, label %49

49:                                               ; preds = %45
  %50 = call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %43)
  %51 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %52 = load i32, ptr @dump_flags, align 4, !tbaa !21
  call void @print_generic_expr(ptr noundef %51, ptr noundef nonnull %19, i32 noundef %52) #31
  %53 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %54 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %53, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.308)
  br label %134

55:                                               ; preds = %36
  %56 = load ptr, ptr %3, align 8, !tbaa !6
  %57 = icmp ne ptr %56, null
  %58 = icmp ne i64 %20, 0
  %59 = or i1 %58, %57
  br i1 %59, label %66, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.tree_exp, ptr %19, i64 0, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = icmp eq i8 %1, 0
  %64 = select i1 %63, i32 1, i32 2
  %65 = call fastcc ptr @loc_list_from_tree(ptr noundef %62, i32 noundef %64)
  br label %134

66:                                               ; preds = %55
  %67 = icmp eq i8 %1, 0
  br i1 %67, label %134, label %68

68:                                               ; preds = %66
  %69 = load ptr, ptr %10, align 8, !tbaa !17
  %70 = call i64 @int_size_in_bytes(ptr noundef %69) #31
  %71 = icmp slt i64 %70, 5
  br i1 %71, label %72, label %134

72:                                               ; preds = %68
  %73 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %74 = icmp slt i32 %73, 4
  %75 = load i32, ptr @dwarf_strict, align 4
  %76 = icmp ne i32 %75, 0
  %77 = select i1 %74, i1 %76, i1 false
  br i1 %77, label %134, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.tree_exp, ptr %19, i64 0, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = call fastcc ptr @loc_list_from_tree(ptr noundef %80, i32 noundef 0)
  store ptr %81, ptr %9, align 8, !tbaa !6
  %82 = icmp eq ptr %81, null
  br i1 %82, label %134, label %83

83:                                               ; preds = %78
  %84 = load ptr, ptr %3, align 8, !tbaa !6
  %85 = icmp eq ptr %84, null
  br i1 %85, label %102, label %86

86:                                               ; preds = %83
  %87 = call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %84, i32 noundef 0)
  %88 = icmp eq ptr %87, null
  br i1 %88, label %134, label %89

89:                                               ; preds = %86
  call fastcc void @add_loc_list(ptr noundef nonnull %9, ptr noundef nonnull %87)
  %90 = load ptr, ptr %9, align 8
  %91 = icmp eq ptr %90, null
  br i1 %91, label %134, label %92

92:                                               ; preds = %89
  %93 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %94 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 1
  %95 = load i16, ptr %94, align 8
  %96 = and i16 %95, -256
  %97 = or i16 %96, 34
  store i16 %97, ptr %94, align 8
  %98 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 3
  store i32 6, ptr %98, align 8, !tbaa !52
  %99 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 3, i32 1
  store i64 0, ptr %99, align 8, !tbaa !17
  %100 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 4
  store i32 6, ptr %100, align 8, !tbaa !49
  %101 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 4, i32 1
  store i64 0, ptr %101, align 8, !tbaa !17
  call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %90, ptr noundef %93)
  br label %102

102:                                              ; preds = %92, %83
  %103 = phi ptr [ %90, %92 ], [ %81, %83 ]
  %104 = load i64, ptr %5, align 8, !tbaa !38
  %105 = sdiv i64 %104, 8
  %106 = icmp sgt i64 %104, 7
  br i1 %106, label %107, label %117

107:                                              ; preds = %102
  %108 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %109 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %108, i64 0, i32 1
  %110 = load i16, ptr %109, align 8
  %111 = and i16 %110, -256
  %112 = or i16 %111, 35
  store i16 %112, ptr %109, align 8
  %113 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %108, i64 0, i32 3
  store i32 6, ptr %113, align 8, !tbaa !52
  %114 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %108, i64 0, i32 3, i32 1
  store i64 %105, ptr %114, align 8, !tbaa !17
  %115 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %108, i64 0, i32 4
  store i32 6, ptr %115, align 8, !tbaa !49
  %116 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %108, i64 0, i32 4, i32 1
  store i64 0, ptr %116, align 8, !tbaa !17
  call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %103, ptr noundef %108)
  br label %124

117:                                              ; preds = %102
  %118 = icmp sgt i64 %104, -8
  br i1 %118, label %124, label %119

119:                                              ; preds = %117, %119
  %120 = phi ptr [ %122, %119 ], [ %103, %117 ]
  %121 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %120, i64 0, i32 5
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %121, i64 noundef %105)
  %122 = load ptr, ptr %120, align 8, !tbaa !273
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %119, !llvm.loop !327

124:                                              ; preds = %119, %117, %107
  %125 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %126 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %125, i64 0, i32 1
  %127 = load i16, ptr %126, align 8
  %128 = and i16 %127, -256
  %129 = or i16 %128, 159
  store i16 %129, ptr %126, align 8
  %130 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %125, i64 0, i32 3
  store i32 6, ptr %130, align 8, !tbaa !52
  %131 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %125, i64 0, i32 3, i32 1
  store i64 0, ptr %131, align 8, !tbaa !17
  %132 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %125, i64 0, i32 4
  store i32 6, ptr %132, align 8, !tbaa !49
  %133 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %125, i64 0, i32 4, i32 1
  store i64 0, ptr %133, align 8, !tbaa !17
  call fastcc void @add_loc_descr_to_each(ptr noundef nonnull %103, ptr noundef %125)
  br label %134

134:                                              ; preds = %60, %72, %124, %68, %66, %49, %45, %42, %30, %26, %23, %89, %86, %78
  %135 = phi ptr [ null, %78 ], [ null, %86 ], [ null, %89 ], [ null, %23 ], [ null, %26 ], [ null, %30 ], [ null, %42 ], [ null, %45 ], [ null, %49 ], [ null, %66 ], [ null, %68 ], [ %103, %124 ], [ null, %72 ], [ %65, %60 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #31
  ret ptr %135
}

declare zeroext i8 @decl_address_ip_invariant_p(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @cst_pool_loc_descr(ptr noundef %0) unnamed_addr #10 {
  %2 = tail call ptr @lookup_constant_def(ptr noundef %0) #31
  %3 = icmp eq ptr %2, null
  br i1 %3, label %49, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %2, align 8
  %6 = and i32 %5, 65535
  %7 = icmp eq i32 %6, 43
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14261, ptr noundef nonnull @.str.5) #31
  br label %49

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.rtx_def, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, 65535
  %14 = icmp eq i32 %13, 45
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14264, ptr noundef nonnull @.str.5) #31
  %16 = load ptr, ptr %10, align 8, !tbaa !17
  %17 = load i32, ptr %16, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i32 [ %12, %9 ], [ %17, %15 ]
  %20 = phi ptr [ %11, %9 ], [ %16, %15 ]
  %21 = and i32 %19, 67108864
  %22 = icmp eq i32 %21, 0
  tail call void @llvm.assume(i1 %22)
  %23 = getelementptr inbounds %struct.rtx_def, ptr %20, i64 0, i32 1, i32 0, i32 0, i64 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = load i64, ptr %24, align 8
  %26 = and i64 %25, 4194304
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %44

28:                                               ; preds = %18
  %29 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %49, label %31

31:                                               ; preds = %28
  %32 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %33 = and i32 %32, 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %31
  %36 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %29)
  %37 = icmp eq ptr %0, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %40 = load i32, ptr @dump_flags, align 4, !tbaa !21
  tail call void @print_generic_expr(ptr noundef %39, ptr noundef nonnull %0, i32 noundef %40) #31
  br label %41

41:                                               ; preds = %38, %35
  %42 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %43 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %42, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.309)
  br label %49

44:                                               ; preds = %18
  %45 = load i32, ptr %2, align 8
  %46 = lshr i32 %45, 16
  %47 = and i32 %46, 255
  %48 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %20, i32 noundef %47, i32 noundef 2)
  br label %49

49:                                               ; preds = %41, %31, %28, %8, %1, %44
  %50 = phi ptr [ %48, %44 ], [ null, %1 ], [ null, %8 ], [ null, %28 ], [ null, %31 ], [ null, %41 ]
  ret ptr %50
}

declare ptr @emutls_decl(ptr noundef) local_unnamed_addr #3

declare ptr @decl_value_expr_lookup(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @dw_loc_list(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = alloca [256 x i8], align 16
  %5 = alloca [30 x i8], align 16
  %6 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %5) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  store ptr null, ptr %6, align 8, !tbaa !6
  %7 = load i64, ptr %1, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %15 [
    i16 32, label %9
    i16 29, label %9
  ]

9:                                                ; preds = %3, %3
  %10 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.tree_string, ptr %11, i64 0, i32 2
  br label %32

15:                                               ; preds = %9, %3
  %16 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %16, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.tree_string, ptr %20, i64 0, i32 2
  br label %32

24:                                               ; preds = %18, %15
  %25 = load ptr, ptr @cfun, align 8, !tbaa !6
  %26 = icmp ne ptr %25, null
  %27 = load i8, ptr @in_cold_section_p, align 1
  %28 = icmp ne i8 %27, 0
  %29 = select i1 %26, i1 %28, i1 false
  %30 = load ptr, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 4, i32 1), align 8
  %31 = select i1 %29, ptr %30, ptr @text_section_label
  br label %32

32:                                               ; preds = %13, %22, %24
  %33 = phi ptr [ %14, %13 ], [ %23, %22 ], [ %31, %24 ]
  %34 = load ptr, ptr %0, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.var_loc_node, ptr %34, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !6
  %37 = icmp eq ptr %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %66
  %39 = phi ptr [ %70, %66 ], [ %36, %32 ]
  %40 = phi ptr [ %69, %66 ], [ %35, %32 ]
  %41 = phi ptr [ %67, %66 ], [ %34, %32 ]
  %42 = phi ptr [ %68, %66 ], [ %6, %32 ]
  %43 = load ptr, ptr %41, align 8, !tbaa !246
  %44 = getelementptr inbounds %struct.rtx_def, ptr %43, i64 0, i32 1, i32 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = getelementptr inbounds %struct.rtx_def, ptr %45, i64 0, i32 1, i32 0, i32 0, i64 1
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = icmp eq ptr %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %struct.rtx_def, ptr %45, i64 0, i32 1, i32 0, i32 0, i64 2
  %51 = load i32, ptr %50, align 8, !tbaa !17
  %52 = tail call fastcc ptr @dw_loc_list_1(ptr noundef nonnull %1, ptr noundef nonnull %45, i32 noundef %2, i32 noundef %51)
  %53 = icmp eq ptr %52, null
  %54 = load ptr, ptr %40, align 8, !tbaa !6
  br i1 %53, label %66, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.var_loc_node, ptr %41, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !250
  %58 = getelementptr inbounds %struct.var_loc_node, ptr %54, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !250
  %60 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 48) #31
  %61 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %60, i64 0, i32 1
  store ptr %57, ptr %61, align 8, !tbaa !301
  %62 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %60, i64 0, i32 2
  store ptr %59, ptr %62, align 8, !tbaa !302
  %63 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %60, i64 0, i32 5
  store ptr %52, ptr %63, align 8, !tbaa !270
  %64 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %60, i64 0, i32 4
  store ptr %33, ptr %64, align 8, !tbaa !303
  store ptr %60, ptr %42, align 8, !tbaa !6
  %65 = load ptr, ptr %40, align 8, !tbaa !6
  br label %66

66:                                               ; preds = %38, %55, %49
  %67 = phi ptr [ %65, %55 ], [ %54, %49 ], [ %39, %38 ]
  %68 = phi ptr [ %60, %55 ], [ %42, %49 ], [ %42, %38 ]
  %69 = getelementptr inbounds %struct.var_loc_node, ptr %67, i64 0, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !6
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %38, !llvm.loop !330

72:                                               ; preds = %66, %32
  %73 = phi ptr [ %6, %32 ], [ %68, %66 ]
  %74 = phi ptr [ %34, %32 ], [ %67, %66 ]
  %75 = load ptr, ptr %74, align 8, !tbaa !246
  %76 = getelementptr inbounds %struct.rtx_def, ptr %75, i64 0, i32 1, i32 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  %78 = getelementptr inbounds %struct.rtx_def, ptr %77, i64 0, i32 1, i32 0, i32 0, i64 1
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = icmp eq ptr %79, null
  br i1 %80, label %104, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds %struct.rtx_def, ptr %77, i64 0, i32 1, i32 0, i32 0, i64 2
  %83 = load i32, ptr %82, align 8, !tbaa !17
  %84 = tail call fastcc ptr @dw_loc_list_1(ptr noundef nonnull %1, ptr noundef nonnull %77, i32 noundef %2, i32 noundef %83)
  %85 = icmp eq ptr %84, null
  br i1 %85, label %104, label %86

86:                                               ; preds = %81
  %87 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %88 = icmp eq ptr %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %86
  %90 = load ptr, ptr @cfun, align 8, !tbaa !6
  %91 = getelementptr inbounds %struct.function, ptr %90, i64 0, i32 14
  %92 = load i32, ptr %91, align 4, !tbaa !114
  %93 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.194, i32 noundef %92)
  %94 = call ptr @ggc_alloc_string(ptr noundef nonnull %5, i32 noundef -1) #31
  br label %95

95:                                               ; preds = %86, %89
  %96 = phi ptr [ %94, %89 ], [ @text_end_label, %86 ]
  %97 = getelementptr inbounds %struct.var_loc_node, ptr %74, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !250
  %99 = call ptr @ggc_alloc_cleared_stat(i64 noundef 48) #31
  %100 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %99, i64 0, i32 1
  store ptr %98, ptr %100, align 8, !tbaa !301
  %101 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %99, i64 0, i32 2
  store ptr %96, ptr %101, align 8, !tbaa !302
  %102 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %99, i64 0, i32 5
  store ptr %84, ptr %102, align 8, !tbaa !270
  %103 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %99, i64 0, i32 4
  store ptr %33, ptr %103, align 8, !tbaa !303
  store ptr %99, ptr %73, align 8, !tbaa !6
  br label %104

104:                                              ; preds = %81, %95, %72
  %105 = load ptr, ptr %6, align 8, !tbaa !6
  %106 = icmp eq ptr %105, null
  br i1 %106, label %122, label %107

107:                                              ; preds = %104
  %108 = load ptr, ptr %0, align 8, !tbaa !249
  %109 = getelementptr inbounds %struct.var_loc_node, ptr %108, i64 0, i32 2
  %110 = load ptr, ptr %109, align 8, !tbaa !248
  %111 = icmp eq ptr %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %105, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !274
  %115 = icmp eq ptr %114, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %112
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10351, ptr noundef nonnull @.str.5) #31
  br label %117

117:                                              ; preds = %112, %116
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %4) #31
  %118 = load i32, ptr @label_num, align 4, !tbaa !21
  %119 = add nsw i32 %118, 1
  store i32 %119, ptr @label_num, align 4, !tbaa !21
  %120 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.310, i32 noundef %118)
  %121 = call ptr @xstrdup(ptr noundef nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %4) #31
  store ptr %121, ptr %113, align 8, !tbaa !274
  br label %122

122:                                              ; preds = %117, %107, %104
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %5) #31
  ret ptr %105
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @loc_descriptor(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = alloca ptr, align 8
  %5 = alloca %struct.real_value, align 8
  %6 = alloca [4 x i64], align 16
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  store ptr null, ptr %11, align 8, !tbaa !6
  %12 = load i32, ptr %0, align 8
  %13 = trunc i32 %12 to i16
  switch i16 %13, label %887 [
    i16 39, label %14
    i16 37, label %18
    i16 98, label %262
    i16 99, label %262
    i16 43, label %266
    i16 41, label %281
    i16 42, label %372
    i16 138, label %444
    i16 15, label %455
    i16 30, label %547
    i16 32, label %557
    i16 33, label %606
    i16 35, label %832
    i16 45, label %841
    i16 44, label %850
  ]

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = tail call fastcc ptr @loc_descriptor(ptr noundef %16, i32 noundef %1, i32 noundef %2)
  store ptr %17, ptr %11, align 8, !tbaa !6
  br label %924

18:                                               ; preds = %3
  %19 = getelementptr i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8, !tbaa !17
  %21 = icmp ugt i32 %20, 52
  br i1 %21, label %260, label %22

22:                                               ; preds = %18
  %23 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 64), align 8, !tbaa !76
  %24 = tail call ptr %23(ptr noundef nonnull %0) #31
  %25 = load i32, ptr %19, align 8, !tbaa !17
  %26 = zext i32 %25 to i64
  %27 = load i32, ptr %0, align 8
  %28 = lshr i32 %27, 16
  %29 = and i32 %28, 255
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [53 x [87 x i8]], ptr @hard_regno_nregs, i64 0, i64 %26, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !17
  %33 = icmp ugt i8 %32, 1
  %34 = icmp ne ptr %24, null
  %35 = select i1 %33, i1 true, i1 %34
  br i1 %35, label %36, label %215

36:                                               ; preds = %22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10)
  %37 = icmp ult i32 %25, 53
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12476, ptr noundef nonnull @.str.5) #31
  br label %39

39:                                               ; preds = %38, %36
  %40 = icmp eq ptr %24, null
  br i1 %40, label %41, label %113

41:                                               ; preds = %39
  %42 = load i32, ptr %19, align 8, !tbaa !17
  %43 = zext i32 %42 to i64
  %44 = load i32, ptr %0, align 8
  %45 = lshr i32 %44, 16
  %46 = and i32 %45, 255
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [53 x [87 x i8]], ptr @hard_regno_nregs, i64 0, i64 %43, i64 %47
  %49 = load i8, ptr %48, align 1, !tbaa !17
  %50 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %47
  %51 = load i8, ptr %50, align 1, !tbaa !17
  store ptr null, ptr %10, align 8, !tbaa !6
  %52 = icmp eq i8 %49, 0
  br i1 %52, label %213, label %53

53:                                               ; preds = %41
  %54 = zext i8 %49 to i32
  %55 = udiv i8 %51, %49
  %56 = zext i8 %55 to i64
  br label %57

57:                                               ; preds = %110, %53
  %58 = phi i32 [ %54, %53 ], [ %60, %110 ]
  %59 = phi i32 [ %25, %53 ], [ %111, %110 ]
  %60 = add nsw i32 %58, -1
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %61
  %63 = load i32, ptr %62, align 4, !tbaa !21
  %64 = icmp ult i32 %63, 32
  br i1 %64, label %65, label %69

65:                                               ; preds = %57
  %66 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %67 = trunc i32 %63 to i16
  %68 = add nuw nsw i16 %67, 80
  br label %72

69:                                               ; preds = %57
  %70 = zext i32 %63 to i64
  %71 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %72

72:                                               ; preds = %69, %65
  %73 = phi i16 [ 144, %69 ], [ %68, %65 ]
  %74 = phi ptr [ %71, %69 ], [ %66, %65 ]
  %75 = phi i64 [ %70, %69 ], [ 0, %65 ]
  %76 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %74, i64 0, i32 1
  %77 = load i16, ptr %76, align 8
  %78 = and i16 %77, -256
  %79 = or i16 %78, %73
  store i16 %79, ptr %76, align 8
  %80 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %74, i64 0, i32 3
  store i32 6, ptr %80, align 8, !tbaa !52
  %81 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %74, i64 0, i32 3, i32 1
  store i64 %75, ptr %81, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %74, i64 0, i32 4
  store i32 6, ptr %82, align 8, !tbaa !49
  %83 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %74, i64 0, i32 4, i32 1
  store i64 0, ptr %83, align 8, !tbaa !17
  br label %84

84:                                               ; preds = %84, %72
  %85 = phi ptr [ %10, %72 ], [ %86, %84 ]
  %86 = load ptr, ptr %85, align 8, !tbaa !6
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %84, !llvm.loop !53

88:                                               ; preds = %84
  store ptr %74, ptr %85, align 8, !tbaa !6
  %89 = load ptr, ptr %10, align 8, !tbaa !6
  %90 = icmp eq ptr %89, null
  br i1 %90, label %110, label %91

91:                                               ; preds = %88, %91
  %92 = phi ptr [ %93, %91 ], [ %89, %88 ]
  %93 = load ptr, ptr %92, align 8, !tbaa !57
  %94 = icmp eq ptr %93, null
  br i1 %94, label %95, label %91, !llvm.loop !331

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %92, i64 0, i32 1
  %97 = load i16, ptr %96, align 8
  %98 = and i16 %97, 255
  %99 = icmp eq i16 %98, 147
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %102 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 1
  %103 = load i16, ptr %102, align 8
  %104 = and i16 %103, -256
  %105 = or i16 %104, 147
  store i16 %105, ptr %102, align 8
  %106 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 3
  store i32 6, ptr %106, align 8, !tbaa !52
  %107 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 3, i32 1
  store i64 %56, ptr %107, align 8, !tbaa !17
  %108 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 4
  store i32 6, ptr %108, align 8, !tbaa !49
  %109 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 4, i32 1
  store i64 0, ptr %109, align 8, !tbaa !17
  store ptr %101, ptr %92, align 8, !tbaa !57
  br label %110

110:                                              ; preds = %100, %95, %88
  %111 = add i32 %59, 1
  %112 = icmp eq i32 %60, 0
  br i1 %112, label %213, label %57, !llvm.loop !332

113:                                              ; preds = %39
  %114 = load i32, ptr %24, align 8
  %115 = and i32 %114, 65535
  %116 = icmp eq i32 %115, 15
  br i1 %116, label %118, label %117

117:                                              ; preds = %113
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12593, ptr noundef nonnull @.str.5) #31
  br label %118

118:                                              ; preds = %117, %113
  %119 = getelementptr inbounds %struct.rtx_def, ptr %24, i64 0, i32 1
  store ptr null, ptr %10, align 8, !tbaa !6
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  %121 = load i32, ptr %120, align 8, !tbaa !73
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %213

123:                                              ; preds = %118, %187
  %124 = phi i64 [ %189, %187 ], [ 0, %118 ]
  %125 = phi ptr [ %188, %187 ], [ %120, %118 ]
  %126 = getelementptr inbounds %struct.rtvec_def, ptr %125, i64 0, i32 1, i64 %124
  %127 = load ptr, ptr %126, align 8, !tbaa !6
  %128 = getelementptr i8, ptr %127, i64 8
  %129 = load i32, ptr %128, align 8, !tbaa !17
  %130 = icmp ult i32 %129, 32
  br i1 %130, label %131, label %135

131:                                              ; preds = %123
  %132 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %133 = trunc i32 %129 to i16
  %134 = add nuw nsw i16 %133, 80
  br label %138

135:                                              ; preds = %123
  %136 = zext i32 %129 to i64
  %137 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %138

138:                                              ; preds = %135, %131
  %139 = phi i16 [ 144, %135 ], [ %134, %131 ]
  %140 = phi ptr [ %137, %135 ], [ %132, %131 ]
  %141 = phi i64 [ %136, %135 ], [ 0, %131 ]
  %142 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %140, i64 0, i32 1
  %143 = load i16, ptr %142, align 8
  %144 = and i16 %143, -256
  %145 = or i16 %144, %139
  store i16 %145, ptr %142, align 8
  %146 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %140, i64 0, i32 3
  store i32 6, ptr %146, align 8, !tbaa !52
  %147 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %140, i64 0, i32 3, i32 1
  store i64 %141, ptr %147, align 8, !tbaa !17
  %148 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %140, i64 0, i32 4
  store i32 6, ptr %148, align 8, !tbaa !49
  %149 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %140, i64 0, i32 4, i32 1
  store i64 0, ptr %149, align 8, !tbaa !17
  br label %150

150:                                              ; preds = %150, %138
  %151 = phi ptr [ %10, %138 ], [ %152, %150 ]
  %152 = load ptr, ptr %151, align 8, !tbaa !6
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %150, !llvm.loop !53

154:                                              ; preds = %150
  store ptr %140, ptr %151, align 8, !tbaa !6
  %155 = load ptr, ptr %119, align 8, !tbaa !17
  %156 = getelementptr inbounds %struct.rtvec_def, ptr %155, i64 0, i32 1
  %157 = load ptr, ptr %156, align 8, !tbaa !6
  %158 = load i32, ptr %157, align 8
  %159 = lshr i32 %158, 16
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %161
  %163 = load i8, ptr %162, align 1, !tbaa !17
  %164 = load ptr, ptr %10, align 8, !tbaa !6
  %165 = icmp eq ptr %164, null
  br i1 %165, label %187, label %166

166:                                              ; preds = %154, %166
  %167 = phi ptr [ %168, %166 ], [ %164, %154 ]
  %168 = load ptr, ptr %167, align 8, !tbaa !57
  %169 = icmp eq ptr %168, null
  br i1 %169, label %170, label %166, !llvm.loop !331

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %167, i64 0, i32 1
  %172 = load i16, ptr %171, align 8
  %173 = and i16 %172, 255
  %174 = icmp eq i16 %173, 147
  br i1 %174, label %187, label %175

175:                                              ; preds = %170
  %176 = zext i8 %163 to i64
  %177 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %178 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %177, i64 0, i32 1
  %179 = load i16, ptr %178, align 8
  %180 = and i16 %179, -256
  %181 = or i16 %180, 147
  store i16 %181, ptr %178, align 8
  %182 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %177, i64 0, i32 3
  store i32 6, ptr %182, align 8, !tbaa !52
  %183 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %177, i64 0, i32 3, i32 1
  store i64 %176, ptr %183, align 8, !tbaa !17
  %184 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %177, i64 0, i32 4
  store i32 6, ptr %184, align 8, !tbaa !49
  %185 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %177, i64 0, i32 4, i32 1
  store i64 0, ptr %185, align 8, !tbaa !17
  store ptr %177, ptr %167, align 8, !tbaa !57
  %186 = load ptr, ptr %119, align 8, !tbaa !17
  br label %187

187:                                              ; preds = %175, %170, %154
  %188 = phi ptr [ %155, %154 ], [ %155, %170 ], [ %186, %175 ]
  %189 = add nuw nsw i64 %124, 1
  %190 = load i32, ptr %188, align 8, !tbaa !73
  %191 = sext i32 %190 to i64
  %192 = icmp slt i64 %189, %191
  br i1 %192, label %123, label %193, !llvm.loop !333

193:                                              ; preds = %187
  %194 = icmp ne ptr %164, null
  %195 = icmp eq i32 %2, 1
  %196 = and i1 %195, %194
  br i1 %196, label %197, label %213

197:                                              ; preds = %193
  %198 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %199 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %198, i64 0, i32 1
  %200 = load i16, ptr %199, align 8
  %201 = and i16 %200, -256
  %202 = or i16 %201, 240
  store i16 %202, ptr %199, align 8
  %203 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %198, i64 0, i32 3
  store i32 6, ptr %203, align 8, !tbaa !52
  %204 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %198, i64 0, i32 3, i32 1
  store i64 0, ptr %204, align 8, !tbaa !17
  %205 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %198, i64 0, i32 4
  store i32 6, ptr %205, align 8, !tbaa !49
  %206 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %198, i64 0, i32 4, i32 1
  store i64 0, ptr %206, align 8, !tbaa !17
  br label %207

207:                                              ; preds = %207, %197
  %208 = phi ptr [ %10, %197 ], [ %209, %207 ]
  %209 = load ptr, ptr %208, align 8, !tbaa !6
  %210 = icmp eq ptr %209, null
  br i1 %210, label %211, label %207, !llvm.loop !53

211:                                              ; preds = %207
  store ptr %198, ptr %208, align 8, !tbaa !6
  %212 = load ptr, ptr %10, align 8, !tbaa !6
  br label %213

213:                                              ; preds = %110, %211, %193, %118, %41
  %214 = phi ptr [ null, %41 ], [ %164, %193 ], [ %212, %211 ], [ null, %118 ], [ %89, %110 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  br label %260

215:                                              ; preds = %22
  %216 = icmp ult i32 %25, 53
  br i1 %216, label %218, label %217

217:                                              ; preds = %215
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12476, ptr noundef nonnull @.str.5) #31
  br label %218

218:                                              ; preds = %217, %215
  %219 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %26
  %220 = load i32, ptr %219, align 4, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  %221 = icmp ult i32 %220, 32
  br i1 %221, label %222, label %226

222:                                              ; preds = %218
  %223 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %224 = trunc i32 %220 to i16
  %225 = add nuw nsw i16 %224, 80
  br label %229

226:                                              ; preds = %218
  %227 = zext i32 %220 to i64
  %228 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %229

229:                                              ; preds = %226, %222
  %230 = phi i16 [ 144, %226 ], [ %225, %222 ]
  %231 = phi ptr [ %228, %226 ], [ %223, %222 ]
  %232 = phi i64 [ %227, %226 ], [ 0, %222 ]
  %233 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %231, i64 0, i32 1
  %234 = load i16, ptr %233, align 8
  %235 = and i16 %234, -256
  %236 = or i16 %235, %230
  store i16 %236, ptr %233, align 8
  %237 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %231, i64 0, i32 3
  store i32 6, ptr %237, align 8, !tbaa !52
  %238 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %231, i64 0, i32 3, i32 1
  store i64 %232, ptr %238, align 8, !tbaa !17
  %239 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %231, i64 0, i32 4
  store i32 6, ptr %239, align 8, !tbaa !49
  %240 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %231, i64 0, i32 4, i32 1
  store i64 0, ptr %240, align 8, !tbaa !17
  store ptr %231, ptr %9, align 8, !tbaa !6
  %241 = icmp eq i32 %2, 1
  br i1 %241, label %242, label %258

242:                                              ; preds = %229
  %243 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %244 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 1
  %245 = load i16, ptr %244, align 8
  %246 = and i16 %245, -256
  %247 = or i16 %246, 240
  store i16 %247, ptr %244, align 8
  %248 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 3
  store i32 6, ptr %248, align 8, !tbaa !52
  %249 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 3, i32 1
  store i64 0, ptr %249, align 8, !tbaa !17
  %250 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 4
  store i32 6, ptr %250, align 8, !tbaa !49
  %251 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 4, i32 1
  store i64 0, ptr %251, align 8, !tbaa !17
  br label %252

252:                                              ; preds = %252, %242
  %253 = phi ptr [ %9, %242 ], [ %254, %252 ]
  %254 = load ptr, ptr %253, align 8, !tbaa !6
  %255 = icmp eq ptr %254, null
  br i1 %255, label %256, label %252, !llvm.loop !53

256:                                              ; preds = %252
  store ptr %243, ptr %253, align 8, !tbaa !6
  %257 = load ptr, ptr %9, align 8, !tbaa !6
  br label %258

258:                                              ; preds = %256, %229
  %259 = phi ptr [ %257, %256 ], [ %231, %229 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  br label %260

260:                                              ; preds = %18, %213, %258
  %261 = phi ptr [ %214, %213 ], [ %259, %258 ], [ null, %18 ]
  store ptr %261, ptr %11, align 8, !tbaa !6
  br label %924

262:                                              ; preds = %3, %3
  %263 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %264 = load ptr, ptr %263, align 8, !tbaa !17
  %265 = tail call fastcc ptr @loc_descriptor(ptr noundef %264, i32 noundef %1, i32 noundef %2)
  store ptr %265, ptr %11, align 8, !tbaa !6
  br label %924

266:                                              ; preds = %3
  %267 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %268 = load ptr, ptr %267, align 8, !tbaa !17
  %269 = lshr i32 %12, 16
  %270 = and i32 %269, 255
  %271 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %268, i32 noundef %270, i32 noundef %2)
  store ptr %271, ptr %11, align 8, !tbaa !6
  %272 = icmp eq ptr %271, null
  br i1 %272, label %273, label %924

273:                                              ; preds = %266
  %274 = tail call fastcc ptr @tls_mem_loc_descriptor(ptr noundef nonnull %0)
  store ptr %274, ptr %11, align 8, !tbaa !6
  %275 = icmp eq ptr %274, null
  br i1 %275, label %276, label %924

276:                                              ; preds = %273
  %277 = tail call ptr @avoid_constant_pool_reference(ptr noundef nonnull %0) #31
  %278 = icmp eq ptr %277, %0
  br i1 %278, label %924, label %279

279:                                              ; preds = %276
  %280 = tail call fastcc ptr @loc_descriptor(ptr noundef %277, i32 noundef %1, i32 noundef %2)
  store ptr %280, ptr %11, align 8, !tbaa !6
  br label %924

281:                                              ; preds = %3
  %282 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !17
  %284 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %285 = load ptr, ptr %284, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  %286 = tail call fastcc ptr @loc_descriptor(ptr noundef %283, i32 noundef 0, i32 noundef 2)
  %287 = tail call fastcc ptr @loc_descriptor(ptr noundef %285, i32 noundef 0, i32 noundef 2)
  %288 = icmp eq ptr %286, null
  %289 = icmp eq ptr %287, null
  %290 = select i1 %288, i1 true, i1 %289
  br i1 %290, label %370, label %291

291:                                              ; preds = %281
  store ptr %286, ptr %8, align 8, !tbaa !6
  %292 = load i32, ptr %283, align 8
  %293 = lshr i32 %292, 16
  %294 = and i32 %293, 255
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %295
  %297 = load i8, ptr %296, align 1, !tbaa !17
  br label %298

298:                                              ; preds = %291, %298
  %299 = phi ptr [ %300, %298 ], [ %286, %291 ]
  %300 = load ptr, ptr %299, align 8, !tbaa !57
  %301 = icmp eq ptr %300, null
  br i1 %301, label %302, label %298, !llvm.loop !331

302:                                              ; preds = %298
  %303 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %299, i64 0, i32 1
  %304 = load i16, ptr %303, align 8
  %305 = and i16 %304, 255
  %306 = icmp eq i16 %305, 147
  br i1 %306, label %318, label %307

307:                                              ; preds = %302
  %308 = zext i8 %297 to i64
  %309 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %310 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %309, i64 0, i32 1
  %311 = load i16, ptr %310, align 8
  %312 = and i16 %311, -256
  %313 = or i16 %312, 147
  store i16 %313, ptr %310, align 8
  %314 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %309, i64 0, i32 3
  store i32 6, ptr %314, align 8, !tbaa !52
  %315 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %309, i64 0, i32 3, i32 1
  store i64 %308, ptr %315, align 8, !tbaa !17
  %316 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %309, i64 0, i32 4
  store i32 6, ptr %316, align 8, !tbaa !49
  %317 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %309, i64 0, i32 4, i32 1
  store i64 0, ptr %317, align 8, !tbaa !17
  store ptr %309, ptr %299, align 8, !tbaa !57
  br label %318

318:                                              ; preds = %302, %307
  br label %319

319:                                              ; preds = %318, %319
  %320 = phi ptr [ %321, %319 ], [ %8, %318 ]
  %321 = load ptr, ptr %320, align 8, !tbaa !6
  %322 = icmp eq ptr %321, null
  br i1 %322, label %323, label %319, !llvm.loop !53

323:                                              ; preds = %319
  store ptr %287, ptr %320, align 8, !tbaa !6
  %324 = load i32, ptr %285, align 8
  %325 = lshr i32 %324, 16
  %326 = and i32 %325, 255
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %327
  %329 = load i8, ptr %328, align 1, !tbaa !17
  %330 = load ptr, ptr %8, align 8, !tbaa !6
  %331 = icmp eq ptr %330, null
  br i1 %331, label %352, label %332

332:                                              ; preds = %323, %332
  %333 = phi ptr [ %334, %332 ], [ %330, %323 ]
  %334 = load ptr, ptr %333, align 8, !tbaa !57
  %335 = icmp eq ptr %334, null
  br i1 %335, label %336, label %332, !llvm.loop !331

336:                                              ; preds = %332
  %337 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %333, i64 0, i32 1
  %338 = load i16, ptr %337, align 8
  %339 = and i16 %338, 255
  %340 = icmp eq i16 %339, 147
  br i1 %340, label %352, label %341

341:                                              ; preds = %336
  %342 = zext i8 %329 to i64
  %343 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %344 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %343, i64 0, i32 1
  %345 = load i16, ptr %344, align 8
  %346 = and i16 %345, -256
  %347 = or i16 %346, 147
  store i16 %347, ptr %344, align 8
  %348 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %343, i64 0, i32 3
  store i32 6, ptr %348, align 8, !tbaa !52
  %349 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %343, i64 0, i32 3, i32 1
  store i64 %342, ptr %349, align 8, !tbaa !17
  %350 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %343, i64 0, i32 4
  store i32 6, ptr %350, align 8, !tbaa !49
  %351 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %343, i64 0, i32 4, i32 1
  store i64 0, ptr %351, align 8, !tbaa !17
  store ptr %343, ptr %333, align 8, !tbaa !57
  br label %352

352:                                              ; preds = %323, %336, %341
  %353 = icmp eq i32 %2, 1
  br i1 %353, label %354, label %370

354:                                              ; preds = %352
  %355 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %356 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %355, i64 0, i32 1
  %357 = load i16, ptr %356, align 8
  %358 = and i16 %357, -256
  %359 = or i16 %358, 240
  store i16 %359, ptr %356, align 8
  %360 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %355, i64 0, i32 3
  store i32 6, ptr %360, align 8, !tbaa !52
  %361 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %355, i64 0, i32 3, i32 1
  store i64 0, ptr %361, align 8, !tbaa !17
  %362 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %355, i64 0, i32 4
  store i32 6, ptr %362, align 8, !tbaa !49
  %363 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %355, i64 0, i32 4, i32 1
  store i64 0, ptr %363, align 8, !tbaa !17
  br label %364

364:                                              ; preds = %364, %354
  %365 = phi ptr [ %8, %354 ], [ %366, %364 ]
  %366 = load ptr, ptr %365, align 8, !tbaa !6
  %367 = icmp eq ptr %366, null
  br i1 %367, label %368, label %364, !llvm.loop !53

368:                                              ; preds = %364
  store ptr %355, ptr %365, align 8, !tbaa !6
  %369 = load ptr, ptr %8, align 8, !tbaa !6
  br label %370

370:                                              ; preds = %352, %368, %281
  %371 = phi ptr [ null, %281 ], [ %369, %368 ], [ %330, %352 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  store ptr %371, ptr %11, align 8, !tbaa !6
  br label %924

372:                                              ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  store ptr null, ptr %7, align 8, !tbaa !6
  %373 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %374 = load ptr, ptr %373, align 8, !tbaa !17
  %375 = load i32, ptr %374, align 8, !tbaa !73
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %442, label %377

377:                                              ; preds = %372
  %378 = zext i32 %375 to i64
  br label %379

379:                                              ; preds = %377, %419
  %380 = phi i64 [ 0, %377 ], [ %420, %419 ]
  %381 = load ptr, ptr %373, align 8, !tbaa !17
  %382 = getelementptr inbounds %struct.rtvec_def, ptr %381, i64 0, i32 1, i64 %380
  %383 = load ptr, ptr %382, align 8, !tbaa !6
  %384 = tail call fastcc ptr @loc_descriptor(ptr noundef %383, i32 noundef 0, i32 noundef 2)
  %385 = icmp eq ptr %384, null
  br i1 %385, label %442, label %386

386:                                              ; preds = %379, %386
  %387 = phi ptr [ %388, %386 ], [ %7, %379 ]
  %388 = load ptr, ptr %387, align 8, !tbaa !6
  %389 = icmp eq ptr %388, null
  br i1 %389, label %390, label %386, !llvm.loop !53

390:                                              ; preds = %386
  store ptr %384, ptr %387, align 8, !tbaa !6
  %391 = load i32, ptr %383, align 8
  %392 = lshr i32 %391, 16
  %393 = and i32 %392, 255
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %394
  %396 = load i8, ptr %395, align 1, !tbaa !17
  %397 = load ptr, ptr %7, align 8, !tbaa !6
  %398 = icmp eq ptr %397, null
  br i1 %398, label %419, label %399

399:                                              ; preds = %390, %399
  %400 = phi ptr [ %401, %399 ], [ %397, %390 ]
  %401 = load ptr, ptr %400, align 8, !tbaa !57
  %402 = icmp eq ptr %401, null
  br i1 %402, label %403, label %399, !llvm.loop !331

403:                                              ; preds = %399
  %404 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %400, i64 0, i32 1
  %405 = load i16, ptr %404, align 8
  %406 = and i16 %405, 255
  %407 = icmp eq i16 %406, 147
  br i1 %407, label %419, label %408

408:                                              ; preds = %403
  %409 = zext i8 %396 to i64
  %410 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %411 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %410, i64 0, i32 1
  %412 = load i16, ptr %411, align 8
  %413 = and i16 %412, -256
  %414 = or i16 %413, 147
  store i16 %414, ptr %411, align 8
  %415 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %410, i64 0, i32 3
  store i32 6, ptr %415, align 8, !tbaa !52
  %416 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %410, i64 0, i32 3, i32 1
  store i64 %409, ptr %416, align 8, !tbaa !17
  %417 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %410, i64 0, i32 4
  store i32 6, ptr %417, align 8, !tbaa !49
  %418 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %410, i64 0, i32 4, i32 1
  store i64 0, ptr %418, align 8, !tbaa !17
  store ptr %410, ptr %400, align 8, !tbaa !57
  br label %419

419:                                              ; preds = %390, %403, %408
  %420 = add nuw nsw i64 %380, 1
  %421 = icmp eq i64 %420, %378
  br i1 %421, label %422, label %379, !llvm.loop !334

422:                                              ; preds = %419
  %423 = icmp ne ptr %397, null
  %424 = icmp eq i32 %2, 1
  %425 = and i1 %424, %423
  br i1 %425, label %426, label %442

426:                                              ; preds = %422
  %427 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %428 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %427, i64 0, i32 1
  %429 = load i16, ptr %428, align 8
  %430 = and i16 %429, -256
  %431 = or i16 %430, 240
  store i16 %431, ptr %428, align 8
  %432 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %427, i64 0, i32 3
  store i32 6, ptr %432, align 8, !tbaa !52
  %433 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %427, i64 0, i32 3, i32 1
  store i64 0, ptr %433, align 8, !tbaa !17
  %434 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %427, i64 0, i32 4
  store i32 6, ptr %434, align 8, !tbaa !49
  %435 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %427, i64 0, i32 4, i32 1
  store i64 0, ptr %435, align 8, !tbaa !17
  br label %436

436:                                              ; preds = %436, %426
  %437 = phi ptr [ %7, %426 ], [ %438, %436 ]
  %438 = load ptr, ptr %437, align 8, !tbaa !6
  %439 = icmp eq ptr %438, null
  br i1 %439, label %440, label %436, !llvm.loop !53

440:                                              ; preds = %436
  store ptr %427, ptr %437, align 8, !tbaa !6
  %441 = load ptr, ptr %7, align 8, !tbaa !6
  br label %442

442:                                              ; preds = %379, %372, %422, %440
  %443 = phi ptr [ %441, %440 ], [ %397, %422 ], [ null, %372 ], [ null, %379 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  store ptr %443, ptr %11, align 8, !tbaa !6
  br label %924

444:                                              ; preds = %3
  %445 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %446 = load ptr, ptr %445, align 8, !tbaa !17
  %447 = load i32, ptr %446, align 8
  %448 = trunc i32 %447 to i16
  switch i16 %448, label %452 [
    i16 15, label %455
    i16 3, label %449
  ]

449:                                              ; preds = %444
  %450 = getelementptr inbounds %struct.rtx_def, ptr %446, i64 0, i32 1
  %451 = load ptr, ptr %450, align 8, !tbaa !17
  br label %452

452:                                              ; preds = %444, %449
  %453 = phi ptr [ %451, %449 ], [ %446, %444 ]
  %454 = tail call fastcc ptr @loc_descriptor(ptr noundef %453, i32 noundef %1, i32 noundef %2)
  store ptr %454, ptr %11, align 8, !tbaa !6
  br label %924

455:                                              ; preds = %444, %3
  %456 = phi ptr [ %0, %3 ], [ %446, %444 ]
  %457 = getelementptr inbounds %struct.rtx_def, ptr %456, i64 0, i32 1
  %458 = load ptr, ptr %457, align 8, !tbaa !17
  %459 = load i32, ptr %458, align 8, !tbaa !73
  %460 = getelementptr inbounds %struct.rtvec_def, ptr %458, i64 0, i32 1
  %461 = load ptr, ptr %460, align 8, !tbaa !6
  %462 = getelementptr inbounds %struct.rtx_def, ptr %461, i64 0, i32 1
  %463 = load ptr, ptr %462, align 8, !tbaa !17
  %464 = tail call fastcc ptr @loc_descriptor(ptr noundef %463, i32 noundef 0, i32 noundef %2)
  store ptr %464, ptr %11, align 8, !tbaa !6
  %465 = icmp eq ptr %464, null
  br i1 %465, label %926, label %466

466:                                              ; preds = %455
  %467 = load ptr, ptr %460, align 8, !tbaa !6
  %468 = getelementptr inbounds %struct.rtx_def, ptr %467, i64 0, i32 1
  %469 = load ptr, ptr %468, align 8, !tbaa !17
  %470 = load i32, ptr %469, align 8
  %471 = lshr i32 %470, 16
  %472 = and i32 %471, 255
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %473
  %475 = load i8, ptr %474, align 1, !tbaa !17
  br label %476

476:                                              ; preds = %466, %476
  %477 = phi ptr [ %478, %476 ], [ %464, %466 ]
  %478 = load ptr, ptr %477, align 8, !tbaa !57
  %479 = icmp eq ptr %478, null
  br i1 %479, label %480, label %476, !llvm.loop !331

480:                                              ; preds = %476
  %481 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %477, i64 0, i32 1
  %482 = load i16, ptr %481, align 8
  %483 = and i16 %482, 255
  %484 = icmp eq i16 %483, 147
  br i1 %484, label %496, label %485

485:                                              ; preds = %480
  %486 = zext i8 %475 to i64
  %487 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %488 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %487, i64 0, i32 1
  %489 = load i16, ptr %488, align 8
  %490 = and i16 %489, -256
  %491 = or i16 %490, 147
  store i16 %491, ptr %488, align 8
  %492 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %487, i64 0, i32 3
  store i32 6, ptr %492, align 8, !tbaa !52
  %493 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %487, i64 0, i32 3, i32 1
  store i64 %486, ptr %493, align 8, !tbaa !17
  %494 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %487, i64 0, i32 4
  store i32 6, ptr %494, align 8, !tbaa !49
  %495 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %487, i64 0, i32 4, i32 1
  store i64 0, ptr %495, align 8, !tbaa !17
  store ptr %487, ptr %477, align 8, !tbaa !57
  br label %496

496:                                              ; preds = %480, %485
  %497 = icmp sgt i32 %459, 1
  br i1 %497, label %498, label %924

498:                                              ; preds = %496
  %499 = zext i32 %459 to i64
  br label %500

500:                                              ; preds = %498, %544
  %501 = phi i64 [ 1, %498 ], [ %545, %544 ]
  %502 = getelementptr inbounds %struct.rtvec_def, ptr %458, i64 0, i32 1, i64 %501
  %503 = load ptr, ptr %502, align 8, !tbaa !6
  %504 = getelementptr inbounds %struct.rtx_def, ptr %503, i64 0, i32 1
  %505 = load ptr, ptr %504, align 8, !tbaa !17
  %506 = tail call fastcc ptr @loc_descriptor(ptr noundef %505, i32 noundef 0, i32 noundef %2)
  %507 = icmp eq ptr %506, null
  br i1 %507, label %926, label %508

508:                                              ; preds = %500, %508
  %509 = phi ptr [ %510, %508 ], [ %11, %500 ]
  %510 = load ptr, ptr %509, align 8, !tbaa !6
  %511 = icmp eq ptr %510, null
  br i1 %511, label %512, label %508, !llvm.loop !53

512:                                              ; preds = %508
  store ptr %506, ptr %509, align 8, !tbaa !6
  %513 = load ptr, ptr %502, align 8, !tbaa !6
  %514 = getelementptr inbounds %struct.rtx_def, ptr %513, i64 0, i32 1
  %515 = load ptr, ptr %514, align 8, !tbaa !17
  %516 = load i32, ptr %515, align 8
  %517 = lshr i32 %516, 16
  %518 = and i32 %517, 255
  %519 = zext i32 %518 to i64
  %520 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %519
  %521 = load i8, ptr %520, align 1, !tbaa !17
  %522 = load ptr, ptr %11, align 8, !tbaa !6
  %523 = icmp eq ptr %522, null
  br i1 %523, label %544, label %524

524:                                              ; preds = %512, %524
  %525 = phi ptr [ %526, %524 ], [ %522, %512 ]
  %526 = load ptr, ptr %525, align 8, !tbaa !57
  %527 = icmp eq ptr %526, null
  br i1 %527, label %528, label %524, !llvm.loop !331

528:                                              ; preds = %524
  %529 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %525, i64 0, i32 1
  %530 = load i16, ptr %529, align 8
  %531 = and i16 %530, 255
  %532 = icmp eq i16 %531, 147
  br i1 %532, label %544, label %533

533:                                              ; preds = %528
  %534 = zext i8 %521 to i64
  %535 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %536 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %535, i64 0, i32 1
  %537 = load i16, ptr %536, align 8
  %538 = and i16 %537, -256
  %539 = or i16 %538, 147
  store i16 %539, ptr %536, align 8
  %540 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %535, i64 0, i32 3
  store i32 6, ptr %540, align 8, !tbaa !52
  %541 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %535, i64 0, i32 3, i32 1
  store i64 %534, ptr %541, align 8, !tbaa !17
  %542 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %535, i64 0, i32 4
  store i32 6, ptr %542, align 8, !tbaa !49
  %543 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %535, i64 0, i32 4, i32 1
  store i64 0, ptr %543, align 8, !tbaa !17
  store ptr %535, ptr %525, align 8, !tbaa !57
  br label %544

544:                                              ; preds = %512, %528, %533
  %545 = add nuw nsw i64 %501, 1
  %546 = icmp eq i64 %545, %499
  br i1 %546, label %924, label %500, !llvm.loop !335

547:                                              ; preds = %3
  %548 = icmp ugt i32 %1, 1
  br i1 %548, label %549, label %924

549:                                              ; preds = %547
  %550 = zext i32 %1 to i64
  %551 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %550
  %552 = load i8, ptr %551, align 1, !tbaa !17
  %553 = zext i8 %552 to i32
  %554 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %555 = load i64, ptr %554, align 8, !tbaa !17
  %556 = tail call fastcc ptr @address_of_int_loc_descriptor(i32 noundef %553, i64 noundef %555)
  store ptr %556, ptr %11, align 8, !tbaa !6
  br label %924

557:                                              ; preds = %3
  %558 = icmp eq i32 %1, 0
  %559 = lshr i32 %12, 16
  %560 = and i32 %559, 255
  %561 = select i1 %558, i32 %560, i32 %1
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %924, label %563

563:                                              ; preds = %557
  %564 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %565 = icmp slt i32 %564, 4
  %566 = load i32, ptr @dwarf_strict, align 4
  %567 = icmp ne i32 %566, 0
  %568 = select i1 %565, i1 %567, i1 false
  br i1 %568, label %924, label %569

569:                                              ; preds = %563
  %570 = icmp eq i32 %561, %560
  %571 = icmp eq i32 %560, 0
  %572 = or i1 %571, %570
  br i1 %572, label %574, label %573

573:                                              ; preds = %569
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 13815, ptr noundef nonnull @.str.5) #31
  br label %574

574:                                              ; preds = %569, %573
  %575 = zext i32 %561 to i64
  %576 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %575
  %577 = load i8, ptr %576, align 1, !tbaa !17
  %578 = zext i8 %577 to i64
  %579 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %580 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %579, i64 0, i32 1
  %581 = load i16, ptr %580, align 8
  %582 = and i16 %581, -256
  %583 = or i16 %582, 158
  store i16 %583, ptr %580, align 8
  %584 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %579, i64 0, i32 3
  store i32 6, ptr %584, align 8, !tbaa !52
  %585 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %579, i64 0, i32 3, i32 1
  store i64 %578, ptr %585, align 8, !tbaa !17
  %586 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %579, i64 0, i32 4
  store i32 6, ptr %586, align 8, !tbaa !49
  %587 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %579, i64 0, i32 4, i32 1
  store i64 0, ptr %587, align 8, !tbaa !17
  store ptr %579, ptr %11, align 8, !tbaa !6
  %588 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %575
  %589 = load i8, ptr %588, align 1, !tbaa !17
  %590 = and i8 %589, -2
  %591 = icmp eq i8 %590, 8
  br i1 %591, label %592, label %600

592:                                              ; preds = %574
  %593 = load i8, ptr %576, align 1, !tbaa !17
  %594 = zext i8 %593 to i64
  %595 = tail call ptr @ggc_alloc_stat(i64 noundef %594) #31
  tail call fastcc void @insert_float(ptr noundef nonnull %0, ptr noundef %595)
  store i32 8, ptr %586, align 8, !tbaa !49
  %596 = lshr i8 %593, 2
  %597 = zext i8 %596 to i32
  %598 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %579, i64 0, i32 4, i32 1, i32 0, i32 1
  store i32 %597, ptr %598, align 8, !tbaa !17
  %599 = getelementptr inbounds i8, ptr %579, i64 60
  store i32 4, ptr %599, align 4, !tbaa !17
  store ptr %595, ptr %587, align 8, !tbaa !17
  br label %924

600:                                              ; preds = %574
  store i32 7, ptr %586, align 8, !tbaa !49
  %601 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %602 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %603 = load i64, ptr %602, align 8, !tbaa !17
  %604 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %579, i64 0, i32 4, i32 1, i32 0, i32 1
  store i64 %603, ptr %604, align 8, !tbaa !17
  %605 = load i64, ptr %601, align 8, !tbaa !17
  store i64 %605, ptr %587, align 8, !tbaa !17
  br label %924

606:                                              ; preds = %3
  %607 = icmp eq i32 %1, 0
  %608 = lshr i32 %12, 16
  %609 = and i32 %608, 255
  %610 = select i1 %607, i32 %609, i32 %1
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %924, label %612

612:                                              ; preds = %606
  %613 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %614 = icmp slt i32 %613, 4
  %615 = load i32, ptr @dwarf_strict, align 4
  %616 = icmp ne i32 %615, 0
  %617 = select i1 %614, i1 %616, i1 false
  br i1 %617, label %924, label %618

618:                                              ; preds = %612
  %619 = zext i32 %609 to i64
  %620 = getelementptr inbounds [87 x i8], ptr @mode_inner, i64 0, i64 %619
  %621 = load i8, ptr %620, align 1, !tbaa !17
  %622 = icmp eq i8 %621, 0
  %623 = zext i8 %621 to i64
  %624 = select i1 %622, i64 %619, i64 %623
  %625 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %624
  %626 = load i8, ptr %625, align 1, !tbaa !17
  %627 = zext i8 %626 to i32
  %628 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %629 = load ptr, ptr %628, align 8, !tbaa !17
  %630 = load i32, ptr %629, align 8, !tbaa !73
  %631 = mul i32 %630, %627
  %632 = zext i32 %631 to i64
  %633 = tail call ptr @ggc_alloc_stat(i64 noundef %632) #31
  %634 = load i32, ptr %0, align 8
  %635 = lshr i32 %634, 16
  %636 = and i32 %635, 255
  %637 = icmp eq i32 %610, %636
  %638 = icmp eq i32 %636, 0
  %639 = or i1 %637, %638
  br i1 %639, label %641, label %640

640:                                              ; preds = %618
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 13857, ptr noundef nonnull @.str.5) #31
  br label %641

641:                                              ; preds = %618, %640
  %642 = zext i32 %610 to i64
  %643 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %642
  %644 = load i8, ptr %643, align 1, !tbaa !17
  switch i8 %644, label %819 [
    i8 12, label %650
    i8 17, label %645
  ]

645:                                              ; preds = %641
  %646 = icmp eq i32 %630, 0
  br i1 %646, label %820, label %647

647:                                              ; preds = %645
  %648 = zext i8 %626 to i64
  %649 = zext i32 %630 to i64
  br label %771

650:                                              ; preds = %641
  %651 = icmp eq i32 %630, 0
  br i1 %651, label %820, label %652

652:                                              ; preds = %650
  %653 = zext i8 %626 to i64
  %654 = icmp ult i8 %626, 9
  %655 = icmp eq i8 %626, 16
  %656 = icmp eq i8 %626, 0
  %657 = zext i32 %630 to i64
  %658 = icmp eq i8 %626, 1
  %659 = icmp eq i8 %626, 2
  %660 = icmp eq i8 %626, 3
  %661 = icmp eq i8 %626, 4
  %662 = icmp eq i8 %626, 5
  %663 = icmp eq i8 %626, 6
  %664 = icmp eq i8 %626, 7
  br label %665

665:                                              ; preds = %652, %767
  %666 = phi i64 [ 0, %652 ], [ %768, %767 ]
  %667 = phi i64 [ undef, %652 ], [ %687, %767 ]
  %668 = phi i64 [ undef, %652 ], [ %686, %767 ]
  %669 = phi ptr [ %633, %652 ], [ %769, %767 ]
  %670 = load ptr, ptr %628, align 8, !tbaa !17
  %671 = getelementptr inbounds %struct.rtvec_def, ptr %670, i64 0, i32 1, i64 %666
  %672 = load ptr, ptr %671, align 8, !tbaa !6
  %673 = load i32, ptr %672, align 8
  %674 = trunc i32 %673 to i16
  switch i16 %674, label %684 [
    i16 30, label %675
    i16 32, label %679
  ]

675:                                              ; preds = %665
  %676 = getelementptr inbounds %struct.rtx_def, ptr %672, i64 0, i32 1
  %677 = load i64, ptr %676, align 8, !tbaa !17
  %678 = ashr i64 %677, 63
  br label %685

679:                                              ; preds = %665
  %680 = getelementptr inbounds %struct.rtx_def, ptr %672, i64 0, i32 1
  %681 = load i64, ptr %680, align 8, !tbaa !17
  %682 = getelementptr inbounds %struct.rtx_def, ptr %672, i64 0, i32 1, i32 0, i32 0, i64 1
  %683 = load i64, ptr %682, align 8, !tbaa !17
  br label %685

684:                                              ; preds = %665
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 13879, ptr noundef nonnull @.str.5) #31
  br label %685

685:                                              ; preds = %684, %679, %675
  %686 = phi i64 [ %668, %684 ], [ %681, %679 ], [ %677, %675 ]
  %687 = phi i64 [ %667, %684 ], [ %683, %679 ], [ %678, %675 ]
  br i1 %654, label %688, label %719

688:                                              ; preds = %685
  br i1 %656, label %767, label %689

689:                                              ; preds = %688
  %690 = trunc i64 %686 to i8
  store i8 %690, ptr %669, align 1, !tbaa !17
  br i1 %658, label %767, label %691, !llvm.loop !317

691:                                              ; preds = %689
  %692 = lshr i64 %686, 8
  %693 = getelementptr inbounds i8, ptr %669, i64 1
  %694 = trunc i64 %692 to i8
  store i8 %694, ptr %693, align 1, !tbaa !17
  br i1 %659, label %767, label %695, !llvm.loop !317

695:                                              ; preds = %691
  %696 = lshr i64 %686, 16
  %697 = getelementptr inbounds i8, ptr %669, i64 2
  %698 = trunc i64 %696 to i8
  store i8 %698, ptr %697, align 1, !tbaa !17
  br i1 %660, label %767, label %699, !llvm.loop !317

699:                                              ; preds = %695
  %700 = lshr i64 %686, 24
  %701 = getelementptr inbounds i8, ptr %669, i64 3
  %702 = trunc i64 %700 to i8
  store i8 %702, ptr %701, align 1, !tbaa !17
  br i1 %661, label %767, label %703, !llvm.loop !317

703:                                              ; preds = %699
  %704 = lshr i64 %686, 32
  %705 = getelementptr inbounds i8, ptr %669, i64 4
  %706 = trunc i64 %704 to i8
  store i8 %706, ptr %705, align 1, !tbaa !17
  br i1 %662, label %767, label %707, !llvm.loop !317

707:                                              ; preds = %703
  %708 = lshr i64 %686, 40
  %709 = getelementptr inbounds i8, ptr %669, i64 5
  %710 = trunc i64 %708 to i8
  store i8 %710, ptr %709, align 1, !tbaa !17
  br i1 %663, label %767, label %711, !llvm.loop !317

711:                                              ; preds = %707
  %712 = lshr i64 %686, 48
  %713 = getelementptr inbounds i8, ptr %669, i64 6
  %714 = trunc i64 %712 to i8
  store i8 %714, ptr %713, align 1, !tbaa !17
  br i1 %664, label %767, label %715, !llvm.loop !317

715:                                              ; preds = %711
  %716 = lshr i64 %686, 56
  %717 = getelementptr inbounds i8, ptr %669, i64 7
  %718 = trunc i64 %716 to i8
  store i8 %718, ptr %717, align 1, !tbaa !17
  br label %767

719:                                              ; preds = %685
  %720 = getelementptr inbounds i8, ptr %669, i64 8
  br i1 %655, label %722, label %721

721:                                              ; preds = %719
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 13889, ptr noundef nonnull @.str.5) #31
  br label %722

722:                                              ; preds = %719, %721
  %723 = trunc i64 %686 to i8
  %724 = getelementptr inbounds i8, ptr %669, i64 1
  store i8 %723, ptr %669, align 1, !tbaa !17
  %725 = lshr i64 %686, 8
  %726 = trunc i64 %725 to i8
  %727 = getelementptr inbounds i8, ptr %669, i64 2
  store i8 %726, ptr %724, align 1, !tbaa !17
  %728 = lshr i64 %686, 16
  %729 = trunc i64 %728 to i8
  %730 = getelementptr inbounds i8, ptr %669, i64 3
  store i8 %729, ptr %727, align 1, !tbaa !17
  %731 = lshr i64 %686, 24
  %732 = trunc i64 %731 to i8
  %733 = getelementptr inbounds i8, ptr %669, i64 4
  store i8 %732, ptr %730, align 1, !tbaa !17
  %734 = lshr i64 %686, 32
  %735 = trunc i64 %734 to i8
  %736 = getelementptr inbounds i8, ptr %669, i64 5
  store i8 %735, ptr %733, align 1, !tbaa !17
  %737 = lshr i64 %686, 40
  %738 = trunc i64 %737 to i8
  %739 = getelementptr inbounds i8, ptr %669, i64 6
  store i8 %738, ptr %736, align 1, !tbaa !17
  %740 = lshr i64 %686, 48
  %741 = trunc i64 %740 to i8
  %742 = getelementptr inbounds i8, ptr %669, i64 7
  store i8 %741, ptr %739, align 1, !tbaa !17
  %743 = lshr i64 %686, 56
  %744 = trunc i64 %743 to i8
  store i8 %744, ptr %742, align 1, !tbaa !17
  %745 = trunc i64 %687 to i8
  %746 = getelementptr inbounds i8, ptr %669, i64 9
  store i8 %745, ptr %720, align 1, !tbaa !17
  %747 = lshr i64 %687, 8
  %748 = trunc i64 %747 to i8
  %749 = getelementptr inbounds i8, ptr %669, i64 10
  store i8 %748, ptr %746, align 1, !tbaa !17
  %750 = lshr i64 %687, 16
  %751 = trunc i64 %750 to i8
  %752 = getelementptr inbounds i8, ptr %669, i64 11
  store i8 %751, ptr %749, align 1, !tbaa !17
  %753 = lshr i64 %687, 24
  %754 = trunc i64 %753 to i8
  %755 = getelementptr inbounds i8, ptr %669, i64 12
  store i8 %754, ptr %752, align 1, !tbaa !17
  %756 = lshr i64 %687, 32
  %757 = trunc i64 %756 to i8
  %758 = getelementptr inbounds i8, ptr %669, i64 13
  store i8 %757, ptr %755, align 1, !tbaa !17
  %759 = lshr i64 %687, 40
  %760 = trunc i64 %759 to i8
  %761 = getelementptr inbounds i8, ptr %669, i64 14
  store i8 %760, ptr %758, align 1, !tbaa !17
  %762 = lshr i64 %687, 48
  %763 = trunc i64 %762 to i8
  %764 = getelementptr inbounds i8, ptr %669, i64 15
  store i8 %763, ptr %761, align 1, !tbaa !17
  %765 = lshr i64 %687, 56
  %766 = trunc i64 %765 to i8
  store i8 %766, ptr %764, align 1, !tbaa !17
  br label %767

767:                                              ; preds = %689, %691, %695, %699, %703, %707, %711, %715, %722, %688
  %768 = add nuw nsw i64 %666, 1
  %769 = getelementptr inbounds i8, ptr %669, i64 %653
  %770 = icmp eq i64 %768, %657
  br i1 %770, label %820, label %665, !llvm.loop !336

771:                                              ; preds = %647, %815
  %772 = phi i64 [ 0, %647 ], [ %816, %815 ]
  %773 = phi ptr [ %633, %647 ], [ %817, %815 ]
  %774 = load ptr, ptr %628, align 8, !tbaa !17
  %775 = getelementptr inbounds %struct.rtvec_def, ptr %774, i64 0, i32 1, i64 %772
  %776 = load ptr, ptr %775, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #31
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #31
  %777 = getelementptr inbounds %struct.rtx_def, ptr %776, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(32) %777, i64 32, i1 false), !tbaa.struct !315
  %778 = load i32, ptr %776, align 8
  %779 = lshr i32 %778, 16
  %780 = and i32 %779, 255
  %781 = call i64 @real_to_target(ptr noundef nonnull %6, ptr noundef nonnull %5, i32 noundef %780) #31
  %782 = load i32, ptr %776, align 8
  %783 = lshr i32 %782, 16
  %784 = and i32 %783, 255
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %785
  %787 = load i8, ptr %786, align 1, !tbaa !17
  %788 = icmp ult i8 %787, 4
  br i1 %788, label %815, label %789

789:                                              ; preds = %771, %789
  %790 = phi i64 [ %805, %789 ], [ 0, %771 ]
  %791 = phi ptr [ %804, %789 ], [ %773, %771 ]
  %792 = getelementptr inbounds [4 x i64], ptr %6, i64 0, i64 %790
  %793 = load i64, ptr %792, align 8, !tbaa !38
  %794 = trunc i64 %793 to i8
  %795 = getelementptr inbounds i8, ptr %791, i64 1
  store i8 %794, ptr %791, align 1, !tbaa !17
  %796 = lshr i64 %793, 8
  %797 = trunc i64 %796 to i8
  %798 = getelementptr inbounds i8, ptr %791, i64 2
  store i8 %797, ptr %795, align 1, !tbaa !17
  %799 = lshr i64 %793, 16
  %800 = trunc i64 %799 to i8
  %801 = getelementptr inbounds i8, ptr %791, i64 3
  store i8 %800, ptr %798, align 1, !tbaa !17
  %802 = lshr i64 %793, 24
  %803 = trunc i64 %802 to i8
  store i8 %803, ptr %801, align 1, !tbaa !17
  %804 = getelementptr inbounds i8, ptr %791, i64 4
  %805 = add nuw nsw i64 %790, 1
  %806 = load i32, ptr %776, align 8
  %807 = lshr i32 %806, 16
  %808 = and i32 %807, 255
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %809
  %811 = load i8, ptr %810, align 1, !tbaa !17
  %812 = lshr i8 %811, 2
  %813 = zext i8 %812 to i64
  %814 = icmp ult i64 %805, %813
  br i1 %814, label %789, label %815, !llvm.loop !316

815:                                              ; preds = %789, %771
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #31
  %816 = add nuw nsw i64 %772, 1
  %817 = getelementptr inbounds i8, ptr %773, i64 %648
  %818 = icmp eq i64 %816, %649
  br i1 %818, label %820, label %771, !llvm.loop !337

819:                                              ; preds = %641
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 13910, ptr noundef nonnull @.str.5) #31
  br label %820

820:                                              ; preds = %815, %767, %645, %650, %819
  %821 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %822 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %821, i64 0, i32 1
  %823 = load i16, ptr %822, align 8
  %824 = and i16 %823, -256
  %825 = or i16 %824, 158
  store i16 %825, ptr %822, align 8
  %826 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %821, i64 0, i32 3
  store i32 6, ptr %826, align 8, !tbaa !52
  %827 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %821, i64 0, i32 3, i32 1
  store i64 %632, ptr %827, align 8, !tbaa !17
  %828 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %821, i64 0, i32 4
  %829 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %821, i64 0, i32 4, i32 1
  store ptr %821, ptr %11, align 8, !tbaa !6
  store i32 8, ptr %828, align 8, !tbaa !49
  %830 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %821, i64 0, i32 4, i32 1, i32 0, i32 1
  store i32 %630, ptr %830, align 8, !tbaa !17
  %831 = getelementptr inbounds i8, ptr %821, i64 60
  store i32 %627, ptr %831, align 4, !tbaa !17
  store ptr %633, ptr %829, align 8, !tbaa !17
  br label %924

832:                                              ; preds = %3
  %833 = icmp eq i32 %1, 0
  %834 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %835 = load ptr, ptr %834, align 8, !tbaa !17
  br i1 %833, label %839, label %836

836:                                              ; preds = %832
  %837 = load i32, ptr %835, align 8
  %838 = trunc i32 %837 to i16
  switch i16 %838, label %843 [
    i16 30, label %839
    i16 32, label %839
    i16 33, label %839
  ]

839:                                              ; preds = %832, %836, %836, %836
  %840 = tail call fastcc ptr @loc_descriptor(ptr noundef %835, i32 noundef %1, i32 noundef %2)
  store ptr %840, ptr %11, align 8, !tbaa !6
  br label %924

841:                                              ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store ptr %0, ptr %4, align 8, !tbaa !6
  %842 = call i32 @const_ok_for_output_1(ptr noundef nonnull %4, ptr poison), !range !37
  br label %845

843:                                              ; preds = %836
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %844 = tail call i32 @for_each_rtx(ptr noundef nonnull %834, ptr noundef nonnull @const_ok_for_output_1, ptr noundef null) #31
  br label %845

845:                                              ; preds = %841, %843
  %846 = phi i32 [ %842, %841 ], [ %844, %843 ]
  %847 = icmp eq i32 %846, 0
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %848 = icmp ne i32 %1, 0
  %849 = and i1 %848, %847
  br i1 %849, label %852, label %924

850:                                              ; preds = %3
  %851 = icmp eq i32 %1, 0
  br i1 %851, label %924, label %852

852:                                              ; preds = %845, %850
  %853 = zext i32 %1 to i64
  %854 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %853
  %855 = load i8, ptr %854, align 1, !tbaa !17
  %856 = icmp eq i8 %855, 4
  br i1 %856, label %857, label %924

857:                                              ; preds = %852
  %858 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %859 = icmp slt i32 %858, 4
  %860 = load i32, ptr @dwarf_strict, align 4
  %861 = icmp ne i32 %860, 0
  %862 = select i1 %859, i1 %861, i1 false
  br i1 %862, label %924, label %863

863:                                              ; preds = %857
  %864 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %865 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %864, i64 0, i32 1
  %866 = load i16, ptr %865, align 8
  %867 = and i16 %866, -256
  %868 = or i16 %867, 3
  store i16 %868, ptr %865, align 8
  %869 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %864, i64 0, i32 3
  %870 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %864, i64 0, i32 3, i32 1
  %871 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %864, i64 0, i32 4
  store i32 6, ptr %871, align 8, !tbaa !49
  %872 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %864, i64 0, i32 4, i32 1
  store i64 0, ptr %872, align 8, !tbaa !17
  store ptr %864, ptr %11, align 8, !tbaa !6
  store i32 0, ptr %869, align 8, !tbaa !52
  store ptr %0, ptr %870, align 8, !tbaa !17
  %873 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %874 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 1
  %875 = load i16, ptr %874, align 8
  %876 = and i16 %875, -256
  %877 = or i16 %876, 159
  store i16 %877, ptr %874, align 8
  %878 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 3
  store i32 6, ptr %878, align 8, !tbaa !52
  %879 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 3, i32 1
  store i64 0, ptr %879, align 8, !tbaa !17
  %880 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 4
  store i32 6, ptr %880, align 8, !tbaa !49
  %881 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 4, i32 1
  store i64 0, ptr %881, align 8, !tbaa !17
  br label %882

882:                                              ; preds = %882, %863
  %883 = phi ptr [ %11, %863 ], [ %884, %882 ]
  %884 = load ptr, ptr %883, align 8, !tbaa !6
  %885 = icmp eq ptr %884, null
  br i1 %885, label %886, label %882, !llvm.loop !53

886:                                              ; preds = %882
  store ptr %873, ptr %883, align 8, !tbaa !6
  tail call fastcc void @VEC_rtx_gc_safe_push(ptr noundef %0)
  br label %924

887:                                              ; preds = %3
  %888 = zext i32 %1 to i64
  %889 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %888
  %890 = load i8, ptr %889, align 1, !tbaa !17
  %891 = icmp eq i8 %890, 2
  br i1 %891, label %892, label %924

892:                                              ; preds = %887
  %893 = lshr i32 %12, 16
  %894 = and i32 %893, 255
  %895 = icmp eq i32 %894, %1
  br i1 %895, label %896, label %924

896:                                              ; preds = %892
  %897 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %888
  %898 = load i8, ptr %897, align 1, !tbaa !17
  %899 = icmp ult i8 %898, 5
  br i1 %899, label %900, label %924

900:                                              ; preds = %896
  %901 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %902 = icmp slt i32 %901, 4
  %903 = load i32, ptr @dwarf_strict, align 4
  %904 = icmp ne i32 %903, 0
  %905 = select i1 %902, i1 %904, i1 false
  br i1 %905, label %924, label %906

906:                                              ; preds = %900
  %907 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %2)
  store ptr %907, ptr %11, align 8, !tbaa !6
  %908 = icmp eq ptr %907, null
  br i1 %908, label %924, label %909

909:                                              ; preds = %906
  %910 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %911 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %910, i64 0, i32 1
  %912 = load i16, ptr %911, align 8
  %913 = and i16 %912, -256
  %914 = or i16 %913, 159
  store i16 %914, ptr %911, align 8
  %915 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %910, i64 0, i32 3
  store i32 6, ptr %915, align 8, !tbaa !52
  %916 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %910, i64 0, i32 3, i32 1
  store i64 0, ptr %916, align 8, !tbaa !17
  %917 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %910, i64 0, i32 4
  store i32 6, ptr %917, align 8, !tbaa !49
  %918 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %910, i64 0, i32 4, i32 1
  store i64 0, ptr %918, align 8, !tbaa !17
  br label %919

919:                                              ; preds = %919, %909
  %920 = phi ptr [ %11, %909 ], [ %921, %919 ]
  %921 = load ptr, ptr %920, align 8, !tbaa !6
  %922 = icmp eq ptr %921, null
  br i1 %922, label %923, label %919, !llvm.loop !53

923:                                              ; preds = %919
  store ptr %910, ptr %920, align 8, !tbaa !6
  br label %924

924:                                              ; preds = %544, %496, %266, %276, %279, %887, %892, %896, %900, %923, %906, %850, %852, %886, %857, %845, %606, %820, %612, %557, %563, %600, %592, %547, %549, %273, %839, %452, %442, %370, %262, %260, %14
  %925 = load ptr, ptr %11, align 8, !tbaa !6
  br label %926

926:                                              ; preds = %500, %455, %924
  %927 = phi ptr [ %925, %924 ], [ null, %455 ], [ null, %500 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  ret ptr %927
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @mem_loc_descriptor(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #31
  store ptr null, ptr %6, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  %9 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 40), align 8, !tbaa !324
  %10 = tail call ptr %9(ptr noundef %0) #31
  store ptr %10, ptr %5, align 8, !tbaa !6
  %11 = load i32, ptr %10, align 8
  %12 = trunc i32 %11 to i16
  switch i16 %12, label %1311 [
    i16 77, label %13
    i16 76, label %13
    i16 79, label %13
    i16 39, label %17
    i16 37, label %36
    i16 98, label %60
    i16 99, label %60
    i16 43, label %165
    i16 122, label %222
    i16 44, label %226
    i16 35, label %226
    i16 45, label %226
    i16 41, label %304
    i16 42, label %304
    i16 138, label %304
    i16 78, label %318
    i16 75, label %321
    i16 74, label %321
    i16 49, label %352
    i16 50, label %420
    i16 52, label %411
    i16 55, label %412
    i16 60, label %413
    i16 65, label %414
    i16 67, label %415
    i16 68, label %416
    i16 61, label %417
    i16 62, label %418
    i16 63, label %419
    i16 58, label %451
    i16 64, label %539
    i16 111, label %537
    i16 51, label %538
    i16 30, label %560
    i16 81, label %569
    i16 82, label %564
    i16 83, label %565
    i16 84, label %566
    i16 85, label %567
    i16 80, label %568
    i16 86, label %750
    i16 87, label %747
    i16 88, label %748
    i16 89, label %749
    i16 70, label %926
    i16 71, label %926
    i16 72, label %926
    i16 73, label %926
    i16 120, label %1199
    i16 119, label %1199
    i16 34, label %1308
  ]

13:                                               ; preds = %3, %3, %3
  %14 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %15, i32 noundef %1, i32 noundef %2)
  br label %1332

17:                                               ; preds = %3
  %18 = tail call i32 @subreg_lowpart_p(ptr noundef nonnull %10) #31
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %1311, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = load i32, ptr %22, align 8
  %24 = lshr i32 %23, 16
  %25 = and i32 %24, 255
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !17
  %29 = icmp ugt i8 %28, 4
  br i1 %29, label %1311, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %26
  %32 = load i8, ptr %31, align 1, !tbaa !17
  %33 = icmp eq i8 %32, 2
  br i1 %33, label %34, label %1311

34:                                               ; preds = %30
  %35 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %22, i32 noundef %1, i32 noundef %2)
  store ptr %35, ptr %6, align 8, !tbaa !6
  br label %1311

36:                                               ; preds = %3
  %37 = getelementptr i8, ptr %10, i64 8
  %38 = load i32, ptr %37, align 8, !tbaa !17
  %39 = icmp ult i32 %38, 53
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = tail call fastcc ptr @based_loc_descr(ptr noundef nonnull %10, i64 noundef 0)
  store ptr %41, ptr %6, align 8, !tbaa !6
  br label %1311

42:                                               ; preds = %36
  %43 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 43), align 1, !tbaa !338
  %44 = icmp ne i8 %43, 0
  %45 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 45), align 1
  %46 = icmp ne i8 %45, 0
  %47 = select i1 %44, i1 %46, i1 false
  %48 = load ptr, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 16), align 8
  %49 = icmp ne ptr %48, null
  %50 = select i1 %47, i1 %49, i1 false
  %51 = load ptr, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 3, i32 5), align 8
  %52 = icmp eq ptr %51, %10
  %53 = select i1 %50, i1 %52, i1 false
  br i1 %53, label %54, label %1311

54:                                               ; preds = %42
  %55 = getelementptr i8, ptr %48, i64 8
  %56 = load i32, ptr %55, align 8, !tbaa !17
  %57 = icmp ult i32 %56, 53
  br i1 %57, label %58, label %1311

58:                                               ; preds = %54
  %59 = tail call fastcc ptr @based_loc_descr(ptr noundef nonnull %48, i64 noundef 0)
  store ptr %59, ptr %6, align 8, !tbaa !6
  br label %1311

60:                                               ; preds = %3, %3
  %61 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %62, i32 noundef %1, i32 noundef 2)
  %64 = icmp eq ptr %63, null
  br i1 %64, label %1311, label %65

65:                                               ; preds = %60
  %66 = load ptr, ptr %61, align 8, !tbaa !17
  %67 = load i32, ptr %66, align 8
  %68 = lshr i32 %67, 16
  %69 = and i32 %68, 255
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %70
  %72 = load i8, ptr %71, align 1, !tbaa !17
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 3
  %75 = sub nsw i32 32, %74
  %76 = load i32, ptr %10, align 8
  %77 = and i32 %76, 65535
  %78 = icmp eq i32 %77, 98
  store ptr %63, ptr %6, align 8, !tbaa !6
  %79 = sext i32 %75 to i64
  %80 = icmp ult i8 %72, 5
  br i1 %80, label %81, label %86

81:                                               ; preds = %65
  %82 = icmp ult i32 %75, 32
  br i1 %82, label %83, label %89

83:                                               ; preds = %81
  %84 = trunc i32 %75 to i16
  %85 = add nuw nsw i16 %84, 48
  br label %89

86:                                               ; preds = %65
  %87 = icmp ugt i32 %75, -129
  %88 = select i1 %87, i16 9, i16 11
  br label %89

89:                                               ; preds = %86, %81, %83
  %90 = phi i16 [ %85, %83 ], [ 8, %81 ], [ %88, %86 ]
  %91 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %92 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 1
  %93 = load i16, ptr %92, align 8
  %94 = and i16 %93, -256
  %95 = or i16 %94, %90
  store i16 %95, ptr %92, align 8
  %96 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 3
  store i32 6, ptr %96, align 8, !tbaa !52
  %97 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 3, i32 1
  store i64 %79, ptr %97, align 8, !tbaa !17
  %98 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 4
  store i32 6, ptr %98, align 8, !tbaa !49
  %99 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 4, i32 1
  store i64 0, ptr %99, align 8, !tbaa !17
  br label %100

100:                                              ; preds = %100, %89
  %101 = phi ptr [ %6, %89 ], [ %102, %100 ]
  %102 = load ptr, ptr %101, align 8, !tbaa !6
  %103 = icmp eq ptr %102, null
  br i1 %103, label %104, label %100, !llvm.loop !53

104:                                              ; preds = %100
  store ptr %91, ptr %101, align 8, !tbaa !6
  %105 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %106 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %105, i64 0, i32 1
  %107 = load i16, ptr %106, align 8
  %108 = and i16 %107, -256
  %109 = or i16 %108, 36
  store i16 %109, ptr %106, align 8
  %110 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %105, i64 0, i32 3
  store i32 6, ptr %110, align 8, !tbaa !52
  %111 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %105, i64 0, i32 3, i32 1
  store i64 0, ptr %111, align 8, !tbaa !17
  %112 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %105, i64 0, i32 4
  store i32 6, ptr %112, align 8, !tbaa !49
  %113 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %105, i64 0, i32 4, i32 1
  store i64 0, ptr %113, align 8, !tbaa !17
  br label %114

114:                                              ; preds = %114, %104
  %115 = phi ptr [ %6, %104 ], [ %116, %114 ]
  %116 = load ptr, ptr %115, align 8, !tbaa !6
  %117 = icmp eq ptr %116, null
  br i1 %117, label %118, label %114, !llvm.loop !53

118:                                              ; preds = %114
  store ptr %105, ptr %115, align 8, !tbaa !6
  br i1 %80, label %119, label %129

119:                                              ; preds = %118
  %120 = icmp ult i32 %75, 32
  br i1 %120, label %121, label %124

121:                                              ; preds = %119
  %122 = trunc i32 %75 to i16
  %123 = add nuw nsw i16 %122, 48
  br label %134

124:                                              ; preds = %119
  %125 = icmp ult i32 %75, 256
  br i1 %125, label %134, label %126

126:                                              ; preds = %124
  %127 = icmp ult i32 %75, 65536
  %128 = select i1 %127, i16 10, i16 12
  br label %134

129:                                              ; preds = %118
  %130 = icmp ugt i32 %75, -129
  br i1 %130, label %134, label %131

131:                                              ; preds = %129
  %132 = icmp ugt i32 %75, -32769
  %133 = select i1 %132, i16 11, i16 17
  br label %134

134:                                              ; preds = %126, %121, %124, %129, %131
  %135 = phi i16 [ %123, %121 ], [ 8, %124 ], [ 9, %129 ], [ %133, %131 ], [ %128, %126 ]
  %136 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %137 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %136, i64 0, i32 1
  %138 = load i16, ptr %137, align 8
  %139 = and i16 %138, -256
  %140 = or i16 %139, %135
  store i16 %140, ptr %137, align 8
  %141 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %136, i64 0, i32 3
  store i32 6, ptr %141, align 8, !tbaa !52
  %142 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %136, i64 0, i32 3, i32 1
  store i64 %79, ptr %142, align 8, !tbaa !17
  %143 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %136, i64 0, i32 4
  store i32 6, ptr %143, align 8, !tbaa !49
  %144 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %136, i64 0, i32 4, i32 1
  store i64 0, ptr %144, align 8, !tbaa !17
  br label %145

145:                                              ; preds = %145, %134
  %146 = phi ptr [ %6, %134 ], [ %147, %145 ]
  %147 = load ptr, ptr %146, align 8, !tbaa !6
  %148 = icmp eq ptr %147, null
  br i1 %148, label %149, label %145, !llvm.loop !53

149:                                              ; preds = %145
  store ptr %136, ptr %146, align 8, !tbaa !6
  %150 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %151 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %150, i64 0, i32 1
  %152 = select i1 %78, i16 38, i16 37
  %153 = load i16, ptr %151, align 8
  %154 = and i16 %153, -256
  %155 = or i16 %154, %152
  store i16 %155, ptr %151, align 8
  %156 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %150, i64 0, i32 3
  store i32 6, ptr %156, align 8, !tbaa !52
  %157 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %150, i64 0, i32 3, i32 1
  store i64 0, ptr %157, align 8, !tbaa !17
  %158 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %150, i64 0, i32 4
  store i32 6, ptr %158, align 8, !tbaa !49
  %159 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %150, i64 0, i32 4, i32 1
  store i64 0, ptr %159, align 8, !tbaa !17
  br label %160

160:                                              ; preds = %160, %149
  %161 = phi ptr [ %6, %149 ], [ %162, %160 ]
  %162 = load ptr, ptr %161, align 8, !tbaa !6
  %163 = icmp eq ptr %162, null
  br i1 %163, label %164, label %160, !llvm.loop !53

164:                                              ; preds = %160
  store ptr %150, ptr %161, align 8, !tbaa !6
  br label %1311

165:                                              ; preds = %3
  %166 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %167 = load ptr, ptr %166, align 8, !tbaa !17
  %168 = lshr i32 %11, 16
  %169 = and i32 %168, 255
  %170 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %167, i32 noundef %169, i32 noundef 2)
  store ptr %170, ptr %6, align 8, !tbaa !6
  %171 = icmp eq ptr %170, null
  br i1 %171, label %172, label %175

172:                                              ; preds = %165
  %173 = tail call fastcc ptr @tls_mem_loc_descriptor(ptr noundef nonnull %10)
  store ptr %173, ptr %6, align 8, !tbaa !6
  %174 = icmp eq ptr %173, null
  br i1 %174, label %217, label %175

175:                                              ; preds = %165, %172
  %176 = load i32, ptr %10, align 8
  %177 = lshr i32 %176, 16
  %178 = and i32 %177, 255
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %179
  %181 = load i8, ptr %180, align 1, !tbaa !17
  %182 = icmp ugt i8 %181, 4
  br i1 %182, label %183, label %184

183:                                              ; preds = %175
  tail call fastcc void @expansion_failed(ptr noundef null, ptr noundef nonnull %10, ptr noundef nonnull @.str.306)
  br label %1332

184:                                              ; preds = %175
  %185 = icmp eq i8 %181, 4
  br i1 %185, label %186, label %201

186:                                              ; preds = %184
  %187 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %188 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %187, i64 0, i32 1
  %189 = load i16, ptr %188, align 8
  %190 = and i16 %189, -256
  %191 = or i16 %190, 6
  store i16 %191, ptr %188, align 8
  %192 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %187, i64 0, i32 3
  store i32 6, ptr %192, align 8, !tbaa !52
  %193 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %187, i64 0, i32 3, i32 1
  store i64 0, ptr %193, align 8, !tbaa !17
  %194 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %187, i64 0, i32 4
  store i32 6, ptr %194, align 8, !tbaa !49
  %195 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %187, i64 0, i32 4, i32 1
  store i64 0, ptr %195, align 8, !tbaa !17
  br label %196

196:                                              ; preds = %196, %186
  %197 = phi ptr [ %6, %186 ], [ %198, %196 ]
  %198 = load ptr, ptr %197, align 8, !tbaa !6
  %199 = icmp eq ptr %198, null
  br i1 %199, label %200, label %196, !llvm.loop !53

200:                                              ; preds = %196
  store ptr %187, ptr %197, align 8, !tbaa !6
  br label %1311

201:                                              ; preds = %184
  %202 = zext i8 %181 to i64
  %203 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %204 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %203, i64 0, i32 1
  %205 = load i16, ptr %204, align 8
  %206 = and i16 %205, -256
  %207 = or i16 %206, 148
  store i16 %207, ptr %204, align 8
  %208 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %203, i64 0, i32 3
  store i32 6, ptr %208, align 8, !tbaa !52
  %209 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %203, i64 0, i32 3, i32 1
  store i64 %202, ptr %209, align 8, !tbaa !17
  %210 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %203, i64 0, i32 4
  store i32 6, ptr %210, align 8, !tbaa !49
  %211 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %203, i64 0, i32 4, i32 1
  store i64 0, ptr %211, align 8, !tbaa !17
  br label %212

212:                                              ; preds = %212, %201
  %213 = phi ptr [ %6, %201 ], [ %214, %212 ]
  %214 = load ptr, ptr %213, align 8, !tbaa !6
  %215 = icmp eq ptr %214, null
  br i1 %215, label %216, label %212, !llvm.loop !53

216:                                              ; preds = %212
  store ptr %203, ptr %213, align 8, !tbaa !6
  br label %1311

217:                                              ; preds = %172
  %218 = tail call ptr @avoid_constant_pool_reference(ptr noundef nonnull %10) #31
  %219 = icmp eq ptr %218, %10
  br i1 %219, label %1311, label %220

220:                                              ; preds = %217
  %221 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %218, i32 noundef %1, i32 noundef %2)
  br label %1332

222:                                              ; preds = %3
  %223 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %224 = load ptr, ptr %223, align 8, !tbaa !17
  %225 = load i32, ptr %224, align 8
  br label %226

226:                                              ; preds = %3, %3, %3, %222
  %227 = phi i32 [ %11, %3 ], [ %11, %3 ], [ %11, %3 ], [ %225, %222 ]
  %228 = phi ptr [ %10, %3 ], [ %10, %3 ], [ %10, %3 ], [ %224, %222 ]
  %229 = and i32 %227, 65535
  %230 = icmp eq i32 %229, 45
  br i1 %230, label %231, label %266

231:                                              ; preds = %226
  %232 = getelementptr inbounds %struct.rtx_def, ptr %228, i64 0, i32 1, i32 0, i32 0, i64 1
  %233 = load i32, ptr %232, align 8, !tbaa !17
  %234 = and i32 %233, 56
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %266, label %236

236:                                              ; preds = %231
  %237 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 113), align 4, !tbaa !325
  %238 = icmp ne i8 %237, 0
  %239 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 37), align 8
  %240 = icmp ne ptr %239, null
  %241 = select i1 %238, i1 %240, i1 false
  br i1 %241, label %242, label %1311

242:                                              ; preds = %236
  %243 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %244 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 1
  %245 = load i16, ptr %244, align 8
  %246 = and i16 %245, -512
  %247 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 3
  %248 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 3, i32 1
  %249 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 4
  store i32 6, ptr %249, align 8, !tbaa !49
  %250 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %243, i64 0, i32 4, i32 1
  store i64 0, ptr %250, align 8, !tbaa !17
  store i32 0, ptr %247, align 8, !tbaa !52
  store ptr %228, ptr %248, align 8, !tbaa !17
  %251 = or i16 %246, 259
  store i16 %251, ptr %244, align 8
  %252 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %253 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %252, i64 0, i32 1
  %254 = load i16, ptr %253, align 8
  %255 = and i16 %254, -256
  %256 = or i16 %255, 224
  store i16 %256, ptr %253, align 8
  %257 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %252, i64 0, i32 3
  store i32 6, ptr %257, align 8, !tbaa !52
  %258 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %252, i64 0, i32 3, i32 1
  store i64 0, ptr %258, align 8, !tbaa !17
  %259 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %252, i64 0, i32 4
  store i32 6, ptr %259, align 8, !tbaa !49
  %260 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %252, i64 0, i32 4, i32 1
  store i64 0, ptr %260, align 8, !tbaa !17
  store ptr %252, ptr %6, align 8, !tbaa !6
  br label %261

261:                                              ; preds = %242, %261
  %262 = phi ptr [ %263, %261 ], [ %252, %242 ]
  %263 = load ptr, ptr %262, align 8, !tbaa !6
  %264 = icmp eq ptr %263, null
  br i1 %264, label %265, label %261, !llvm.loop !53

265:                                              ; preds = %261
  store ptr %243, ptr %262, align 8, !tbaa !6
  br label %1311

266:                                              ; preds = %231, %226
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store ptr %228, ptr %4, align 8, !tbaa !6
  %267 = trunc i32 %227 to i16
  switch i16 %267, label %268 [
    i16 45, label %269
    i16 35, label %271
  ]

268:                                              ; preds = %266
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %277

269:                                              ; preds = %266
  %270 = call i32 @const_ok_for_output_1(ptr noundef nonnull %4, ptr poison), !range !37
  br label %274

271:                                              ; preds = %266
  %272 = getelementptr inbounds %struct.rtx_def, ptr %228, i64 0, i32 1
  %273 = tail call i32 @for_each_rtx(ptr noundef nonnull %272, ptr noundef nonnull @const_ok_for_output_1, ptr noundef null) #31
  br label %274

274:                                              ; preds = %269, %271
  %275 = phi i32 [ %270, %269 ], [ %273, %271 ]
  %276 = icmp eq i32 %275, 0
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br i1 %276, label %277, label %1311

277:                                              ; preds = %268, %274, %1308
  %278 = phi ptr [ %228, %268 ], [ %228, %274 ], [ %1310, %1308 ]
  %279 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %280 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %279, i64 0, i32 1
  %281 = load i16, ptr %280, align 8
  %282 = and i16 %281, -256
  %283 = or i16 %282, 3
  store i16 %283, ptr %280, align 8
  %284 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %279, i64 0, i32 3
  %285 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %279, i64 0, i32 3, i32 1
  %286 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %279, i64 0, i32 4
  store i32 6, ptr %286, align 8, !tbaa !49
  %287 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %279, i64 0, i32 4, i32 1
  store i64 0, ptr %287, align 8, !tbaa !17
  store ptr %279, ptr %6, align 8, !tbaa !6
  store i32 0, ptr %284, align 8, !tbaa !52
  store ptr %278, ptr %285, align 8, !tbaa !17
  %288 = load ptr, ptr @used_rtx_array, align 8, !tbaa !6
  %289 = icmp eq ptr %288, null
  br i1 %289, label %295, label %290

290:                                              ; preds = %277
  %291 = getelementptr inbounds %struct.VEC_rtx_base, ptr %288, i64 0, i32 1
  %292 = load i32, ptr %291, align 4, !tbaa !109
  %293 = load i32, ptr %288, align 8, !tbaa !102
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %295, label %298

295:                                              ; preds = %290, %277
  %296 = tail call ptr @vec_gc_p_reserve(ptr noundef %288, i32 noundef 1) #31
  store ptr %296, ptr @used_rtx_array, align 8, !tbaa !6
  %297 = load i32, ptr %296, align 8, !tbaa !102
  br label %298

298:                                              ; preds = %290, %295
  %299 = phi i32 [ %293, %290 ], [ %297, %295 ]
  %300 = phi ptr [ %288, %290 ], [ %296, %295 ]
  %301 = add i32 %299, 1
  store i32 %301, ptr %300, align 8, !tbaa !102
  %302 = zext i32 %299 to i64
  %303 = getelementptr inbounds %struct.VEC_rtx_base, ptr %300, i64 0, i32 2, i64 %302
  store ptr %278, ptr %303, align 8, !tbaa !6
  br label %1311

304:                                              ; preds = %3, %3, %3
  %305 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %306 = icmp eq ptr %305, null
  br i1 %306, label %1332, label %307

307:                                              ; preds = %304
  %308 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %309 = and i32 %308, 8
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %1332, label %311

311:                                              ; preds = %307
  %312 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %305)
  %313 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %314 = tail call i32 @fputc(i32 10, ptr %313)
  %315 = load ptr, ptr @dump_file, align 8, !tbaa !6
  tail call void @print_rtl(ptr noundef %315, ptr noundef nonnull %10) #31
  %316 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %317 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %316, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.311)
  br label %1332

318:                                              ; preds = %3
  %319 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %320 = load ptr, ptr %319, align 8, !tbaa !17
  br label %352

321:                                              ; preds = %3, %3
  %322 = load i32, ptr @word_mode, align 4, !tbaa !17
  %323 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %324 = load ptr, ptr %323, align 8, !tbaa !17
  %325 = and i32 %11, 65535
  %326 = icmp eq i32 %325, 75
  %327 = zext i32 %1 to i64
  %328 = getelementptr inbounds [87 x i8], ptr @mode_inner, i64 0, i64 %327
  %329 = load i8, ptr %328, align 1, !tbaa !17
  %330 = icmp eq i8 %329, 0
  br i1 %326, label %331, label %341

331:                                              ; preds = %321
  br i1 %330, label %332, label %336

332:                                              ; preds = %331
  %333 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %327
  %334 = load i8, ptr %333, align 1, !tbaa !17
  %335 = zext i8 %334 to i64
  br label %348

336:                                              ; preds = %331
  %337 = zext i8 %329 to i64
  %338 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %337
  %339 = load i8, ptr %338, align 1, !tbaa !17
  %340 = zext i8 %339 to i64
  br label %348

341:                                              ; preds = %321
  %342 = zext i8 %329 to i64
  %343 = select i1 %330, i64 %327, i64 %342
  %344 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %343
  %345 = load i8, ptr %344, align 1, !tbaa !17
  %346 = zext i8 %345 to i64
  %347 = sub nsw i64 0, %346
  br label %348

348:                                              ; preds = %332, %336, %341
  %349 = phi i64 [ %347, %341 ], [ %335, %332 ], [ %340, %336 ]
  %350 = tail call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %349) #31
  %351 = tail call ptr @gen_rtx_fmt_ee_stat(i32 noundef 49, i32 noundef %322, ptr noundef %324, ptr noundef %350) #31
  br label %352

352:                                              ; preds = %348, %3, %318
  %353 = phi ptr [ %351, %348 ], [ %10, %3 ], [ %320, %318 ]
  %354 = load i32, ptr %353, align 8
  %355 = and i32 %354, 65535
  %356 = icmp eq i32 %355, 49
  %357 = getelementptr inbounds %struct.rtx_def, ptr %353, i64 0, i32 1
  %358 = load ptr, ptr %357, align 8, !tbaa !17
  br i1 %356, label %359, label %377

359:                                              ; preds = %352
  %360 = load i32, ptr %358, align 8
  %361 = and i32 %360, 65535
  %362 = icmp eq i32 %361, 37
  br i1 %362, label %363, label %377

363:                                              ; preds = %359
  %364 = getelementptr i8, ptr %358, i64 8
  %365 = load i32, ptr %364, align 8, !tbaa !17
  %366 = icmp ult i32 %365, 53
  br i1 %366, label %367, label %377

367:                                              ; preds = %363
  %368 = getelementptr inbounds %struct.rtx_def, ptr %353, i64 0, i32 1, i32 0, i32 0, i64 1
  %369 = load ptr, ptr %368, align 8, !tbaa !17
  %370 = load i32, ptr %369, align 8
  %371 = and i32 %370, 65535
  %372 = icmp eq i32 %371, 30
  br i1 %372, label %373, label %377

373:                                              ; preds = %367
  %374 = getelementptr inbounds %struct.rtx_def, ptr %369, i64 0, i32 1
  %375 = load i64, ptr %374, align 8, !tbaa !17
  %376 = tail call fastcc ptr @based_loc_descr(ptr noundef nonnull %358, i64 noundef %375)
  store ptr %376, ptr %6, align 8, !tbaa !6
  br label %1311

377:                                              ; preds = %352, %359, %363, %367
  %378 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %358, i32 noundef %1, i32 noundef 2)
  store ptr %378, ptr %6, align 8, !tbaa !6
  %379 = icmp eq ptr %378, null
  br i1 %379, label %1311, label %380

380:                                              ; preds = %377
  %381 = getelementptr inbounds %struct.rtx_def, ptr %353, i64 0, i32 1, i32 0, i32 0, i64 1
  %382 = load ptr, ptr %381, align 8, !tbaa !17
  %383 = load i32, ptr %382, align 8
  %384 = and i32 %383, 65535
  %385 = icmp eq i32 %384, 30
  br i1 %385, label %386, label %389

386:                                              ; preds = %380
  %387 = getelementptr inbounds %struct.rtx_def, ptr %382, i64 0, i32 1
  %388 = load i64, ptr %387, align 8, !tbaa !17
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %6, i64 noundef %388)
  br label %1311

389:                                              ; preds = %380
  %390 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %382, i32 noundef %1, i32 noundef 2)
  %391 = icmp eq ptr %390, null
  br i1 %391, label %1311, label %392

392:                                              ; preds = %389, %392
  %393 = phi ptr [ %394, %392 ], [ %6, %389 ]
  %394 = load ptr, ptr %393, align 8, !tbaa !6
  %395 = icmp eq ptr %394, null
  br i1 %395, label %396, label %392, !llvm.loop !53

396:                                              ; preds = %392
  store ptr %390, ptr %393, align 8, !tbaa !6
  %397 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %398 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %397, i64 0, i32 1
  %399 = load i16, ptr %398, align 8
  %400 = and i16 %399, -256
  %401 = or i16 %400, 34
  store i16 %401, ptr %398, align 8
  %402 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %397, i64 0, i32 3
  store i32 6, ptr %402, align 8, !tbaa !52
  %403 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %397, i64 0, i32 3, i32 1
  store i64 0, ptr %403, align 8, !tbaa !17
  %404 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %397, i64 0, i32 4
  store i32 6, ptr %404, align 8, !tbaa !49
  %405 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %397, i64 0, i32 4, i32 1
  store i64 0, ptr %405, align 8, !tbaa !17
  br label %406

406:                                              ; preds = %406, %396
  %407 = phi ptr [ %6, %396 ], [ %408, %406 ]
  %408 = load ptr, ptr %407, align 8, !tbaa !6
  %409 = icmp eq ptr %408, null
  br i1 %409, label %410, label %406, !llvm.loop !53

410:                                              ; preds = %406
  store ptr %397, ptr %407, align 8, !tbaa !6
  br label %1311

411:                                              ; preds = %3
  br label %420

412:                                              ; preds = %3
  br label %420

413:                                              ; preds = %3
  br label %420

414:                                              ; preds = %3
  br label %420

415:                                              ; preds = %3
  br label %420

416:                                              ; preds = %3
  br label %420

417:                                              ; preds = %3
  br label %420

418:                                              ; preds = %3
  br label %420

419:                                              ; preds = %3
  br label %420

420:                                              ; preds = %3, %419, %418, %417, %416, %415, %414, %413, %412, %411
  %421 = phi i16 [ 39, %419 ], [ 33, %418 ], [ 26, %417 ], [ 37, %416 ], [ 38, %415 ], [ 36, %414 ], [ 29, %413 ], [ 27, %412 ], [ 30, %411 ], [ 28, %3 ]
  %422 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %423 = load ptr, ptr %422, align 8, !tbaa !17
  %424 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %423, i32 noundef %1, i32 noundef 2)
  %425 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %426 = load ptr, ptr %425, align 8, !tbaa !17
  %427 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %426, i32 noundef %1, i32 noundef 2)
  %428 = icmp eq ptr %424, null
  %429 = icmp eq ptr %427, null
  %430 = select i1 %428, i1 true, i1 %429
  br i1 %430, label %1311, label %431

431:                                              ; preds = %420
  store ptr %424, ptr %6, align 8, !tbaa !6
  br label %432

432:                                              ; preds = %431, %432
  %433 = phi ptr [ %424, %431 ], [ %434, %432 ]
  %434 = load ptr, ptr %433, align 8, !tbaa !6
  %435 = icmp eq ptr %434, null
  br i1 %435, label %436, label %432, !llvm.loop !53

436:                                              ; preds = %432
  store ptr %427, ptr %433, align 8, !tbaa !6
  %437 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %438 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %437, i64 0, i32 1
  %439 = load i16, ptr %438, align 8
  %440 = and i16 %439, -256
  %441 = or i16 %440, %421
  store i16 %441, ptr %438, align 8
  %442 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %437, i64 0, i32 3
  store i32 6, ptr %442, align 8, !tbaa !52
  %443 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %437, i64 0, i32 3, i32 1
  store i64 0, ptr %443, align 8, !tbaa !17
  %444 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %437, i64 0, i32 4
  store i32 6, ptr %444, align 8, !tbaa !49
  %445 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %437, i64 0, i32 4, i32 1
  store i64 0, ptr %445, align 8, !tbaa !17
  br label %446

446:                                              ; preds = %446, %436
  %447 = phi ptr [ %6, %436 ], [ %448, %446 ]
  %448 = load ptr, ptr %447, align 8, !tbaa !6
  %449 = icmp eq ptr %448, null
  br i1 %449, label %450, label %446, !llvm.loop !53

450:                                              ; preds = %446
  store ptr %437, ptr %447, align 8, !tbaa !6
  br label %1311

451:                                              ; preds = %3
  %452 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %453 = load ptr, ptr %452, align 8, !tbaa !17
  %454 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %453, i32 noundef %1, i32 noundef 2)
  %455 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %456 = load ptr, ptr %455, align 8, !tbaa !17
  %457 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %456, i32 noundef %1, i32 noundef 2)
  %458 = icmp eq ptr %454, null
  %459 = icmp eq ptr %457, null
  %460 = select i1 %458, i1 true, i1 %459
  br i1 %460, label %1311, label %461

461:                                              ; preds = %451
  store ptr %454, ptr %6, align 8, !tbaa !6
  br label %462

462:                                              ; preds = %461, %462
  %463 = phi ptr [ %454, %461 ], [ %464, %462 ]
  %464 = load ptr, ptr %463, align 8, !tbaa !6
  %465 = icmp eq ptr %464, null
  br i1 %465, label %466, label %462, !llvm.loop !53

466:                                              ; preds = %462
  store ptr %457, ptr %463, align 8, !tbaa !6
  %467 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %468 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %467, i64 0, i32 1
  %469 = load i16, ptr %468, align 8
  %470 = and i16 %469, -256
  %471 = or i16 %470, 20
  store i16 %471, ptr %468, align 8
  %472 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %467, i64 0, i32 3
  store i32 6, ptr %472, align 8, !tbaa !52
  %473 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %467, i64 0, i32 3, i32 1
  store i64 0, ptr %473, align 8, !tbaa !17
  %474 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %467, i64 0, i32 4
  store i32 6, ptr %474, align 8, !tbaa !49
  %475 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %467, i64 0, i32 4, i32 1
  store i64 0, ptr %475, align 8, !tbaa !17
  br label %476

476:                                              ; preds = %476, %466
  %477 = phi ptr [ %6, %466 ], [ %478, %476 ]
  %478 = load ptr, ptr %477, align 8, !tbaa !6
  %479 = icmp eq ptr %478, null
  br i1 %479, label %480, label %476, !llvm.loop !53

480:                                              ; preds = %476
  store ptr %467, ptr %477, align 8, !tbaa !6
  %481 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %482 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %481, i64 0, i32 1
  %483 = load i16, ptr %482, align 8
  %484 = and i16 %483, -256
  %485 = or i16 %484, 20
  store i16 %485, ptr %482, align 8
  %486 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %481, i64 0, i32 3
  store i32 6, ptr %486, align 8, !tbaa !52
  %487 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %481, i64 0, i32 3, i32 1
  store i64 0, ptr %487, align 8, !tbaa !17
  %488 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %481, i64 0, i32 4
  store i32 6, ptr %488, align 8, !tbaa !49
  %489 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %481, i64 0, i32 4, i32 1
  store i64 0, ptr %489, align 8, !tbaa !17
  br label %490

490:                                              ; preds = %490, %480
  %491 = phi ptr [ %6, %480 ], [ %492, %490 ]
  %492 = load ptr, ptr %491, align 8, !tbaa !6
  %493 = icmp eq ptr %492, null
  br i1 %493, label %494, label %490, !llvm.loop !53

494:                                              ; preds = %490
  store ptr %481, ptr %491, align 8, !tbaa !6
  %495 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %496 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %495, i64 0, i32 1
  %497 = load i16, ptr %496, align 8
  %498 = and i16 %497, -256
  %499 = or i16 %498, 27
  store i16 %499, ptr %496, align 8
  %500 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %495, i64 0, i32 3
  store i32 6, ptr %500, align 8, !tbaa !52
  %501 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %495, i64 0, i32 3, i32 1
  store i64 0, ptr %501, align 8, !tbaa !17
  %502 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %495, i64 0, i32 4
  store i32 6, ptr %502, align 8, !tbaa !49
  %503 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %495, i64 0, i32 4, i32 1
  store i64 0, ptr %503, align 8, !tbaa !17
  br label %504

504:                                              ; preds = %504, %494
  %505 = phi ptr [ %6, %494 ], [ %506, %504 ]
  %506 = load ptr, ptr %505, align 8, !tbaa !6
  %507 = icmp eq ptr %506, null
  br i1 %507, label %508, label %504, !llvm.loop !53

508:                                              ; preds = %504
  store ptr %495, ptr %505, align 8, !tbaa !6
  %509 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %510 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %509, i64 0, i32 1
  %511 = load i16, ptr %510, align 8
  %512 = and i16 %511, -256
  %513 = or i16 %512, 30
  store i16 %513, ptr %510, align 8
  %514 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %509, i64 0, i32 3
  store i32 6, ptr %514, align 8, !tbaa !52
  %515 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %509, i64 0, i32 3, i32 1
  store i64 0, ptr %515, align 8, !tbaa !17
  %516 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %509, i64 0, i32 4
  store i32 6, ptr %516, align 8, !tbaa !49
  %517 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %509, i64 0, i32 4, i32 1
  store i64 0, ptr %517, align 8, !tbaa !17
  br label %518

518:                                              ; preds = %518, %508
  %519 = phi ptr [ %6, %508 ], [ %520, %518 ]
  %520 = load ptr, ptr %519, align 8, !tbaa !6
  %521 = icmp eq ptr %520, null
  br i1 %521, label %522, label %518, !llvm.loop !53

522:                                              ; preds = %518
  store ptr %509, ptr %519, align 8, !tbaa !6
  %523 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %524 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %523, i64 0, i32 1
  %525 = load i16, ptr %524, align 8
  %526 = and i16 %525, -256
  %527 = or i16 %526, 28
  store i16 %527, ptr %524, align 8
  %528 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %523, i64 0, i32 3
  store i32 6, ptr %528, align 8, !tbaa !52
  %529 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %523, i64 0, i32 3, i32 1
  store i64 0, ptr %529, align 8, !tbaa !17
  %530 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %523, i64 0, i32 4
  store i32 6, ptr %530, align 8, !tbaa !49
  %531 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %523, i64 0, i32 4, i32 1
  store i64 0, ptr %531, align 8, !tbaa !17
  br label %532

532:                                              ; preds = %532, %522
  %533 = phi ptr [ %6, %522 ], [ %534, %532 ]
  %534 = load ptr, ptr %533, align 8, !tbaa !6
  %535 = icmp eq ptr %534, null
  br i1 %535, label %536, label %532, !llvm.loop !53

536:                                              ; preds = %532
  store ptr %523, ptr %533, align 8, !tbaa !6
  br label %1311

537:                                              ; preds = %3
  br label %539

538:                                              ; preds = %3
  br label %539

539:                                              ; preds = %3, %538, %537
  %540 = phi i16 [ 31, %538 ], [ 25, %537 ], [ 32, %3 ]
  %541 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %542 = load ptr, ptr %541, align 8, !tbaa !17
  %543 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %542, i32 noundef %1, i32 noundef 2)
  %544 = icmp eq ptr %543, null
  br i1 %544, label %1311, label %545

545:                                              ; preds = %539
  store ptr %543, ptr %6, align 8, !tbaa !6
  %546 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %547 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %546, i64 0, i32 1
  %548 = load i16, ptr %547, align 8
  %549 = and i16 %548, -256
  %550 = or i16 %549, %540
  store i16 %550, ptr %547, align 8
  %551 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %546, i64 0, i32 3
  store i32 6, ptr %551, align 8, !tbaa !52
  %552 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %546, i64 0, i32 3, i32 1
  store i64 0, ptr %552, align 8, !tbaa !17
  %553 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %546, i64 0, i32 4
  store i32 6, ptr %553, align 8, !tbaa !49
  %554 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %546, i64 0, i32 4, i32 1
  store i64 0, ptr %554, align 8, !tbaa !17
  br label %555

555:                                              ; preds = %555, %545
  %556 = phi ptr [ %6, %545 ], [ %557, %555 ]
  %557 = load ptr, ptr %556, align 8, !tbaa !6
  %558 = icmp eq ptr %557, null
  br i1 %558, label %559, label %555, !llvm.loop !53

559:                                              ; preds = %555
  store ptr %546, ptr %556, align 8, !tbaa !6
  br label %1311

560:                                              ; preds = %3
  %561 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %562 = load i64, ptr %561, align 8, !tbaa !17
  %563 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %562)
  store ptr %563, ptr %6, align 8, !tbaa !6
  br label %1311

564:                                              ; preds = %3
  br label %569

565:                                              ; preds = %3
  br label %569

566:                                              ; preds = %3
  br label %569

567:                                              ; preds = %3
  br label %569

568:                                              ; preds = %3
  br label %569

569:                                              ; preds = %3, %568, %567, %566, %565, %564
  %570 = phi i1 [ false, %568 ], [ false, %567 ], [ false, %566 ], [ false, %565 ], [ false, %564 ], [ true, %3 ]
  %571 = phi i1 [ true, %568 ], [ false, %567 ], [ false, %566 ], [ false, %565 ], [ false, %564 ], [ false, %3 ]
  %572 = phi i16 [ 46, %568 ], [ 45, %567 ], [ 44, %566 ], [ 43, %565 ], [ 42, %564 ], [ 41, %3 ]
  %573 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %574 = load ptr, ptr %573, align 8, !tbaa !17
  %575 = load i32, ptr %574, align 8
  %576 = lshr i32 %575, 16
  %577 = and i32 %576, 255
  %578 = zext i32 %577 to i64
  %579 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %578
  %580 = load i8, ptr %579, align 1, !tbaa !17
  %581 = icmp ugt i8 %580, 4
  br i1 %581, label %1311, label %582

582:                                              ; preds = %569
  %583 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %584 = load ptr, ptr %583, align 8, !tbaa !17
  %585 = load i32, ptr %584, align 8
  %586 = lshr i32 %585, 16
  %587 = and i32 %586, 255
  %588 = zext i32 %587 to i64
  %589 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %588
  %590 = load i8, ptr %589, align 1, !tbaa !17
  %591 = icmp ugt i8 %590, 4
  br i1 %591, label %1311, label %592

592:                                              ; preds = %582
  %593 = icmp eq i32 %577, 0
  %594 = select i1 %593, i32 %587, i32 %577
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %601, label %596

596:                                              ; preds = %592
  %597 = zext i32 %594 to i64
  %598 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %597
  %599 = load i8, ptr %598, align 1, !tbaa !17
  %600 = icmp eq i8 %599, 2
  br i1 %600, label %601, label %1311

601:                                              ; preds = %596, %592
  %602 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %574, i32 noundef %1, i32 noundef 2)
  store ptr %602, ptr %7, align 8, !tbaa !6
  %603 = load ptr, ptr %583, align 8, !tbaa !17
  %604 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %603, i32 noundef %1, i32 noundef 2)
  store ptr %604, ptr %8, align 8, !tbaa !6
  %605 = icmp eq ptr %602, null
  %606 = icmp eq ptr %604, null
  %607 = select i1 %605, i1 true, i1 %606
  br i1 %607, label %1311, label %608

608:                                              ; preds = %601
  br i1 %595, label %721, label %609

609:                                              ; preds = %608
  %610 = zext i32 %594 to i64
  %611 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %610
  %612 = load i8, ptr %611, align 1, !tbaa !17
  %613 = icmp ult i8 %612, 4
  br i1 %613, label %614, label %721

614:                                              ; preds = %609
  %615 = zext i8 %612 to i64
  %616 = shl nuw nsw i64 %615, 3
  %617 = sub nuw nsw i64 32, %616
  %618 = or i1 %570, %571
  br i1 %618, label %619, label %669

619:                                              ; preds = %614, %619
  %620 = phi ptr [ %621, %619 ], [ %602, %614 ]
  %621 = load ptr, ptr %620, align 8, !tbaa !57
  %622 = icmp eq ptr %621, null
  br i1 %622, label %623, label %619, !llvm.loop !339

623:                                              ; preds = %619, %623
  %624 = phi ptr [ %625, %623 ], [ %604, %619 ]
  %625 = load ptr, ptr %624, align 8, !tbaa !57
  %626 = icmp eq ptr %625, null
  br i1 %626, label %627, label %623, !llvm.loop !340

627:                                              ; preds = %623
  %628 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %620, i64 0, i32 1
  %629 = load i16, ptr %628, align 8
  %630 = and i16 %629, 255
  %631 = icmp eq i16 %630, 148
  br i1 %631, label %632, label %636

632:                                              ; preds = %627
  %633 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %620, i64 0, i32 3, i32 1
  %634 = load i64, ptr %633, align 8, !tbaa !17
  %635 = icmp sgt i64 %634, %615
  br i1 %635, label %636, label %648

636:                                              ; preds = %632, %627
  %637 = load ptr, ptr %573, align 8, !tbaa !17
  %638 = load i32, ptr %637, align 8
  %639 = and i32 %638, 65535
  %640 = icmp eq i32 %639, 30
  br i1 %640, label %641, label %669

641:                                              ; preds = %636
  %642 = getelementptr inbounds %struct.rtx_def, ptr %637, i64 0, i32 1
  %643 = load i64, ptr %642, align 8, !tbaa !17
  %644 = getelementptr inbounds [87 x i64], ptr @mode_mask_array, i64 0, i64 %610
  %645 = load i64, ptr %644, align 8, !tbaa !38
  %646 = and i64 %645, %643
  %647 = icmp eq i64 %643, %646
  br i1 %647, label %648, label %669

648:                                              ; preds = %641, %632
  %649 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %624, i64 0, i32 1
  %650 = load i16, ptr %649, align 8
  %651 = and i16 %650, 255
  %652 = icmp eq i16 %651, 148
  br i1 %652, label %653, label %657

653:                                              ; preds = %648
  %654 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %624, i64 0, i32 3, i32 1
  %655 = load i64, ptr %654, align 8, !tbaa !17
  %656 = icmp sgt i64 %655, %615
  br i1 %656, label %657, label %721

657:                                              ; preds = %653, %648
  %658 = load ptr, ptr %583, align 8, !tbaa !17
  %659 = load i32, ptr %658, align 8
  %660 = and i32 %659, 65535
  %661 = icmp eq i32 %660, 30
  br i1 %661, label %662, label %669

662:                                              ; preds = %657
  %663 = getelementptr inbounds %struct.rtx_def, ptr %658, i64 0, i32 1
  %664 = load i64, ptr %663, align 8, !tbaa !17
  %665 = getelementptr inbounds [87 x i64], ptr @mode_mask_array, i64 0, i64 %610
  %666 = load i64, ptr %665, align 8, !tbaa !38
  %667 = and i64 %666, %664
  %668 = icmp eq i64 %664, %667
  br i1 %668, label %721, label %669

669:                                              ; preds = %662, %657, %641, %636, %614
  %670 = and i64 %617, 4294967288
  %671 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %670)
  br label %672

672:                                              ; preds = %672, %669
  %673 = phi ptr [ %7, %669 ], [ %674, %672 ]
  %674 = load ptr, ptr %673, align 8, !tbaa !6
  %675 = icmp eq ptr %674, null
  br i1 %675, label %676, label %672, !llvm.loop !53

676:                                              ; preds = %672
  store ptr %671, ptr %673, align 8, !tbaa !6
  %677 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %678 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 1
  %679 = load i16, ptr %678, align 8
  %680 = and i16 %679, -256
  %681 = or i16 %680, 36
  store i16 %681, ptr %678, align 8
  %682 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 3
  store i32 6, ptr %682, align 8, !tbaa !52
  %683 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 3, i32 1
  store i64 0, ptr %683, align 8, !tbaa !17
  %684 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 4
  store i32 6, ptr %684, align 8, !tbaa !49
  %685 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %677, i64 0, i32 4, i32 1
  store i64 0, ptr %685, align 8, !tbaa !17
  br label %686

686:                                              ; preds = %686, %676
  %687 = phi ptr [ %7, %676 ], [ %688, %686 ]
  %688 = load ptr, ptr %687, align 8, !tbaa !6
  %689 = icmp eq ptr %688, null
  br i1 %689, label %690, label %686, !llvm.loop !53

690:                                              ; preds = %686
  store ptr %677, ptr %687, align 8, !tbaa !6
  %691 = load ptr, ptr %583, align 8, !tbaa !17
  %692 = load i32, ptr %691, align 8
  %693 = and i32 %692, 65535
  %694 = icmp eq i32 %693, 30
  br i1 %694, label %695, label %700

695:                                              ; preds = %690
  %696 = getelementptr inbounds %struct.rtx_def, ptr %691, i64 0, i32 1
  %697 = load i64, ptr %696, align 8, !tbaa !17
  %698 = shl i64 %697, %670
  %699 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %698)
  store ptr %699, ptr %8, align 8, !tbaa !6
  br label %721

700:                                              ; preds = %690
  %701 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %670)
  br label %702

702:                                              ; preds = %702, %700
  %703 = phi ptr [ %8, %700 ], [ %704, %702 ]
  %704 = load ptr, ptr %703, align 8, !tbaa !6
  %705 = icmp eq ptr %704, null
  br i1 %705, label %706, label %702, !llvm.loop !53

706:                                              ; preds = %702
  store ptr %701, ptr %703, align 8, !tbaa !6
  %707 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %708 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %707, i64 0, i32 1
  %709 = load i16, ptr %708, align 8
  %710 = and i16 %709, -256
  %711 = or i16 %710, 36
  store i16 %711, ptr %708, align 8
  %712 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %707, i64 0, i32 3
  store i32 6, ptr %712, align 8, !tbaa !52
  %713 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %707, i64 0, i32 3, i32 1
  store i64 0, ptr %713, align 8, !tbaa !17
  %714 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %707, i64 0, i32 4
  store i32 6, ptr %714, align 8, !tbaa !49
  %715 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %707, i64 0, i32 4, i32 1
  store i64 0, ptr %715, align 8, !tbaa !17
  br label %716

716:                                              ; preds = %716, %706
  %717 = phi ptr [ %8, %706 ], [ %718, %716 ]
  %718 = load ptr, ptr %717, align 8, !tbaa !6
  %719 = icmp eq ptr %718, null
  br i1 %719, label %720, label %716, !llvm.loop !53

720:                                              ; preds = %716
  store ptr %707, ptr %717, align 8, !tbaa !6
  br label %721

721:                                              ; preds = %860, %886, %850, %925, %906, %695, %720, %608, %609, %653, %662
  %722 = phi i16 [ %572, %662 ], [ %572, %653 ], [ %572, %609 ], [ %572, %608 ], [ %572, %720 ], [ %572, %695 ], [ %751, %906 ], [ %751, %925 ], [ %751, %850 ], [ %751, %886 ], [ %751, %860 ]
  %723 = load ptr, ptr %7, align 8, !tbaa !6
  store ptr %723, ptr %6, align 8, !tbaa !6
  %724 = load ptr, ptr %8, align 8, !tbaa !6
  %725 = icmp eq ptr %723, null
  br i1 %725, label %730, label %726, !llvm.loop !53

726:                                              ; preds = %721, %726
  %727 = phi ptr [ %728, %726 ], [ %723, %721 ]
  %728 = load ptr, ptr %727, align 8, !tbaa !6
  %729 = icmp eq ptr %728, null
  br i1 %729, label %730, label %726, !llvm.loop !53

730:                                              ; preds = %726, %721
  %731 = phi ptr [ %6, %721 ], [ %727, %726 ]
  store ptr %724, ptr %731, align 8, !tbaa !6
  %732 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %733 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %732, i64 0, i32 1
  %734 = load i16, ptr %733, align 8
  %735 = and i16 %722, 255
  %736 = and i16 %734, -256
  %737 = or i16 %736, %735
  store i16 %737, ptr %733, align 8
  %738 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %732, i64 0, i32 3
  store i32 6, ptr %738, align 8, !tbaa !52
  %739 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %732, i64 0, i32 3, i32 1
  store i64 0, ptr %739, align 8, !tbaa !17
  %740 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %732, i64 0, i32 4
  store i32 6, ptr %740, align 8, !tbaa !49
  %741 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %732, i64 0, i32 4, i32 1
  store i64 0, ptr %741, align 8, !tbaa !17
  br label %742

742:                                              ; preds = %742, %730
  %743 = phi ptr [ %6, %730 ], [ %744, %742 ]
  %744 = load ptr, ptr %743, align 8, !tbaa !6
  %745 = icmp eq ptr %744, null
  br i1 %745, label %746, label %742, !llvm.loop !53

746:                                              ; preds = %742
  store ptr %732, ptr %743, align 8, !tbaa !6
  br label %1311

747:                                              ; preds = %3
  br label %750

748:                                              ; preds = %3
  br label %750

749:                                              ; preds = %3
  br label %750

750:                                              ; preds = %3, %749, %748, %747
  %751 = phi i16 [ 45, %749 ], [ 44, %748 ], [ 43, %747 ], [ 42, %3 ]
  %752 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %753 = load ptr, ptr %752, align 8, !tbaa !17
  %754 = load i32, ptr %753, align 8
  %755 = lshr i32 %754, 16
  %756 = and i32 %755, 255
  %757 = zext i32 %756 to i64
  %758 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %757
  %759 = load i8, ptr %758, align 1, !tbaa !17
  %760 = icmp ugt i8 %759, 4
  br i1 %760, label %1311, label %761

761:                                              ; preds = %750
  %762 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %763 = load ptr, ptr %762, align 8, !tbaa !17
  %764 = load i32, ptr %763, align 8
  %765 = lshr i32 %764, 16
  %766 = and i32 %765, 255
  %767 = zext i32 %766 to i64
  %768 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %767
  %769 = load i8, ptr %768, align 1, !tbaa !17
  %770 = icmp ugt i8 %769, 4
  br i1 %770, label %1311, label %771

771:                                              ; preds = %761
  %772 = icmp eq i32 %756, 0
  %773 = select i1 %772, i32 %766, i32 %756
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %780, label %775

775:                                              ; preds = %771
  %776 = zext i32 %773 to i64
  %777 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %776
  %778 = load i8, ptr %777, align 1, !tbaa !17
  %779 = icmp eq i8 %778, 2
  br i1 %779, label %780, label %1311

780:                                              ; preds = %775, %771
  %781 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %753, i32 noundef %1, i32 noundef 2)
  store ptr %781, ptr %7, align 8, !tbaa !6
  %782 = load ptr, ptr %762, align 8, !tbaa !17
  %783 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %782, i32 noundef %1, i32 noundef 2)
  store ptr %783, ptr %8, align 8, !tbaa !6
  %784 = icmp eq ptr %781, null
  %785 = icmp eq ptr %783, null
  %786 = select i1 %784, i1 true, i1 %785
  br i1 %786, label %1311, label %787

787:                                              ; preds = %780
  br i1 %774, label %887, label %788

788:                                              ; preds = %787
  %789 = zext i32 %773 to i64
  %790 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %789
  %791 = load i8, ptr %790, align 1, !tbaa !17
  %792 = icmp ult i8 %791, 4
  br i1 %792, label %793, label %887

793:                                              ; preds = %788
  %794 = getelementptr inbounds [87 x i64], ptr @mode_mask_array, i64 0, i64 %789
  %795 = load i64, ptr %794, align 8, !tbaa !38
  br label %796

796:                                              ; preds = %796, %793
  %797 = phi ptr [ %781, %793 ], [ %798, %796 ]
  %798 = load ptr, ptr %797, align 8, !tbaa !57
  %799 = icmp eq ptr %798, null
  br i1 %799, label %800, label %796, !llvm.loop !341

800:                                              ; preds = %796, %800
  %801 = phi ptr [ %802, %800 ], [ %783, %796 ]
  %802 = load ptr, ptr %801, align 8, !tbaa !57
  %803 = icmp eq ptr %802, null
  br i1 %803, label %804, label %800, !llvm.loop !342

804:                                              ; preds = %800
  %805 = load ptr, ptr %752, align 8, !tbaa !17
  %806 = load i32, ptr %805, align 8
  %807 = and i32 %806, 65535
  %808 = icmp eq i32 %807, 30
  br i1 %808, label %809, label %814

809:                                              ; preds = %804
  %810 = getelementptr inbounds %struct.rtx_def, ptr %805, i64 0, i32 1
  %811 = load i64, ptr %810, align 8, !tbaa !17
  %812 = and i64 %811, %795
  %813 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %812)
  store ptr %813, ptr %7, align 8, !tbaa !6
  br label %845

814:                                              ; preds = %804
  %815 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %797, i64 0, i32 1
  %816 = load i16, ptr %815, align 8
  %817 = and i16 %816, 255
  %818 = icmp eq i16 %817, 148
  br i1 %818, label %819, label %824

819:                                              ; preds = %814
  %820 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %797, i64 0, i32 3, i32 1
  %821 = load i64, ptr %820, align 8, !tbaa !17
  %822 = zext i8 %791 to i64
  %823 = icmp sgt i64 %821, %822
  br i1 %823, label %824, label %845

824:                                              ; preds = %819, %814
  %825 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %795)
  br label %826

826:                                              ; preds = %826, %824
  %827 = phi ptr [ %7, %824 ], [ %828, %826 ]
  %828 = load ptr, ptr %827, align 8, !tbaa !6
  %829 = icmp eq ptr %828, null
  br i1 %829, label %830, label %826, !llvm.loop !53

830:                                              ; preds = %826
  store ptr %825, ptr %827, align 8, !tbaa !6
  %831 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %832 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %831, i64 0, i32 1
  %833 = load i16, ptr %832, align 8
  %834 = and i16 %833, -256
  %835 = or i16 %834, 26
  store i16 %835, ptr %832, align 8
  %836 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %831, i64 0, i32 3
  store i32 6, ptr %836, align 8, !tbaa !52
  %837 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %831, i64 0, i32 3, i32 1
  store i64 0, ptr %837, align 8, !tbaa !17
  %838 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %831, i64 0, i32 4
  store i32 6, ptr %838, align 8, !tbaa !49
  %839 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %831, i64 0, i32 4, i32 1
  store i64 0, ptr %839, align 8, !tbaa !17
  br label %840

840:                                              ; preds = %840, %830
  %841 = phi ptr [ %7, %830 ], [ %842, %840 ]
  %842 = load ptr, ptr %841, align 8, !tbaa !6
  %843 = icmp eq ptr %842, null
  br i1 %843, label %844, label %840, !llvm.loop !53

844:                                              ; preds = %840
  store ptr %831, ptr %841, align 8, !tbaa !6
  br label %845

845:                                              ; preds = %819, %844, %809
  %846 = load ptr, ptr %762, align 8, !tbaa !17
  %847 = load i32, ptr %846, align 8
  %848 = and i32 %847, 65535
  %849 = icmp eq i32 %848, 30
  br i1 %849, label %850, label %855

850:                                              ; preds = %845
  %851 = getelementptr inbounds %struct.rtx_def, ptr %846, i64 0, i32 1
  %852 = load i64, ptr %851, align 8, !tbaa !17
  %853 = and i64 %852, %795
  %854 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %853)
  store ptr %854, ptr %8, align 8, !tbaa !6
  br label %721

855:                                              ; preds = %845
  %856 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %801, i64 0, i32 1
  %857 = load i16, ptr %856, align 8
  %858 = and i16 %857, 255
  %859 = icmp eq i16 %858, 148
  br i1 %859, label %860, label %866

860:                                              ; preds = %855
  %861 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %801, i64 0, i32 3, i32 1
  %862 = load i64, ptr %861, align 8, !tbaa !17
  %863 = load i8, ptr %790, align 1, !tbaa !17
  %864 = zext i8 %863 to i64
  %865 = icmp sgt i64 %862, %864
  br i1 %865, label %866, label %721

866:                                              ; preds = %860, %855
  %867 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %795)
  br label %868

868:                                              ; preds = %868, %866
  %869 = phi ptr [ %8, %866 ], [ %870, %868 ]
  %870 = load ptr, ptr %869, align 8, !tbaa !6
  %871 = icmp eq ptr %870, null
  br i1 %871, label %872, label %868, !llvm.loop !53

872:                                              ; preds = %868
  store ptr %867, ptr %869, align 8, !tbaa !6
  %873 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %874 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 1
  %875 = load i16, ptr %874, align 8
  %876 = and i16 %875, -256
  %877 = or i16 %876, 26
  store i16 %877, ptr %874, align 8
  %878 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 3
  store i32 6, ptr %878, align 8, !tbaa !52
  %879 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 3, i32 1
  store i64 0, ptr %879, align 8, !tbaa !17
  %880 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 4
  store i32 6, ptr %880, align 8, !tbaa !49
  %881 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %873, i64 0, i32 4, i32 1
  store i64 0, ptr %881, align 8, !tbaa !17
  br label %882

882:                                              ; preds = %882, %872
  %883 = phi ptr [ %8, %872 ], [ %884, %882 ]
  %884 = load ptr, ptr %883, align 8, !tbaa !6
  %885 = icmp eq ptr %884, null
  br i1 %885, label %886, label %882, !llvm.loop !53

886:                                              ; preds = %882
  store ptr %873, ptr %883, align 8, !tbaa !6
  br label %721

887:                                              ; preds = %788, %787
  %888 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %889 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %888, i64 0, i32 1
  %890 = load i16, ptr %889, align 8
  %891 = and i16 %890, -256
  %892 = or i16 %891, 35
  store i16 %892, ptr %889, align 8
  %893 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %888, i64 0, i32 3
  store i32 6, ptr %893, align 8, !tbaa !52
  %894 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %888, i64 0, i32 3, i32 1
  store i64 2147483648, ptr %894, align 8, !tbaa !17
  %895 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %888, i64 0, i32 4
  store i32 6, ptr %895, align 8, !tbaa !49
  %896 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %888, i64 0, i32 4, i32 1
  store i64 0, ptr %896, align 8, !tbaa !17
  br label %897

897:                                              ; preds = %897, %887
  %898 = phi ptr [ %7, %887 ], [ %899, %897 ]
  %899 = load ptr, ptr %898, align 8, !tbaa !6
  %900 = icmp eq ptr %899, null
  br i1 %900, label %901, label %897, !llvm.loop !53

901:                                              ; preds = %897
  store ptr %888, ptr %898, align 8, !tbaa !6
  %902 = load ptr, ptr %762, align 8, !tbaa !17
  %903 = load i32, ptr %902, align 8
  %904 = and i32 %903, 65535
  %905 = icmp eq i32 %904, 30
  br i1 %905, label %906, label %911

906:                                              ; preds = %901
  %907 = getelementptr inbounds %struct.rtx_def, ptr %902, i64 0, i32 1
  %908 = load i64, ptr %907, align 8, !tbaa !17
  %909 = add i64 %908, 2147483648
  %910 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %909)
  store ptr %910, ptr %8, align 8, !tbaa !6
  br label %721

911:                                              ; preds = %901
  %912 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %913 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %912, i64 0, i32 1
  %914 = load i16, ptr %913, align 8
  %915 = and i16 %914, -256
  %916 = or i16 %915, 35
  store i16 %916, ptr %913, align 8
  %917 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %912, i64 0, i32 3
  store i32 6, ptr %917, align 8, !tbaa !52
  %918 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %912, i64 0, i32 3, i32 1
  store i64 2147483648, ptr %918, align 8, !tbaa !17
  %919 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %912, i64 0, i32 4
  store i32 6, ptr %919, align 8, !tbaa !49
  %920 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %912, i64 0, i32 4, i32 1
  store i64 0, ptr %920, align 8, !tbaa !17
  br label %921

921:                                              ; preds = %921, %911
  %922 = phi ptr [ %8, %911 ], [ %923, %921 ]
  %923 = load ptr, ptr %922, align 8, !tbaa !6
  %924 = icmp eq ptr %923, null
  br i1 %924, label %925, label %921, !llvm.loop !53

925:                                              ; preds = %921
  store ptr %912, ptr %922, align 8, !tbaa !6
  br label %721

926:                                              ; preds = %3, %3, %3, %3
  %927 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %928 = load ptr, ptr %927, align 8, !tbaa !17
  %929 = load i32, ptr %928, align 8
  %930 = lshr i32 %929, 16
  %931 = and i32 %930, 255
  %932 = zext i32 %931 to i64
  %933 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %932
  %934 = load i8, ptr %933, align 1, !tbaa !17
  %935 = icmp eq i8 %934, 2
  br i1 %935, label %936, label %1311

936:                                              ; preds = %926
  %937 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %932
  %938 = load i8, ptr %937, align 1, !tbaa !17
  %939 = icmp ugt i8 %938, 4
  br i1 %939, label %1311, label %940

940:                                              ; preds = %936
  %941 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %942 = load ptr, ptr %941, align 8, !tbaa !17
  %943 = load i32, ptr %942, align 8
  %944 = lshr i32 %943, 16
  %945 = and i32 %944, 255
  %946 = icmp eq i32 %931, %945
  br i1 %946, label %947, label %1311

947:                                              ; preds = %940
  %948 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %928, i32 noundef %1, i32 noundef 2)
  store ptr %948, ptr %7, align 8, !tbaa !6
  %949 = load ptr, ptr %941, align 8, !tbaa !17
  %950 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %949, i32 noundef %1, i32 noundef 2)
  store ptr %950, ptr %8, align 8, !tbaa !6
  %951 = icmp eq ptr %948, null
  %952 = icmp eq ptr %950, null
  %953 = select i1 %951, i1 true, i1 %952
  br i1 %953, label %1311, label %954

954:                                              ; preds = %947
  %955 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %956 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %955, i64 0, i32 1
  %957 = load i16, ptr %956, align 8
  %958 = and i16 %957, -256
  %959 = or i16 %958, 18
  store i16 %959, ptr %956, align 8
  %960 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %955, i64 0, i32 3
  store i32 6, ptr %960, align 8, !tbaa !52
  %961 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %955, i64 0, i32 3, i32 1
  store i64 0, ptr %961, align 8, !tbaa !17
  %962 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %955, i64 0, i32 4
  store i32 6, ptr %962, align 8, !tbaa !49
  %963 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %955, i64 0, i32 4, i32 1
  store i64 0, ptr %963, align 8, !tbaa !17
  br label %964

964:                                              ; preds = %964, %954
  %965 = phi ptr [ %7, %954 ], [ %966, %964 ]
  %966 = load ptr, ptr %965, align 8, !tbaa !6
  %967 = icmp eq ptr %966, null
  br i1 %967, label %968, label %964, !llvm.loop !53

968:                                              ; preds = %964
  store ptr %955, ptr %965, align 8, !tbaa !6
  %969 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %970 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %969, i64 0, i32 1
  %971 = load i16, ptr %970, align 8
  %972 = and i16 %971, -256
  %973 = or i16 %972, 22
  store i16 %973, ptr %970, align 8
  %974 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %969, i64 0, i32 3
  store i32 6, ptr %974, align 8, !tbaa !52
  %975 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %969, i64 0, i32 3, i32 1
  store i64 0, ptr %975, align 8, !tbaa !17
  %976 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %969, i64 0, i32 4
  store i32 6, ptr %976, align 8, !tbaa !49
  %977 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %969, i64 0, i32 4, i32 1
  store i64 0, ptr %977, align 8, !tbaa !17
  br label %978

978:                                              ; preds = %978, %968
  %979 = phi ptr [ %8, %968 ], [ %980, %978 ]
  %980 = load ptr, ptr %979, align 8, !tbaa !6
  %981 = icmp eq ptr %980, null
  br i1 %981, label %982, label %978, !llvm.loop !53

982:                                              ; preds = %978
  store ptr %969, ptr %979, align 8, !tbaa !6
  %983 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %984 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %983, i64 0, i32 1
  %985 = load i16, ptr %984, align 8
  %986 = and i16 %985, -256
  %987 = or i16 %986, 20
  store i16 %987, ptr %984, align 8
  %988 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %983, i64 0, i32 3
  store i32 6, ptr %988, align 8, !tbaa !52
  %989 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %983, i64 0, i32 3, i32 1
  store i64 0, ptr %989, align 8, !tbaa !17
  %990 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %983, i64 0, i32 4
  store i32 6, ptr %990, align 8, !tbaa !49
  %991 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %983, i64 0, i32 4, i32 1
  store i64 0, ptr %991, align 8, !tbaa !17
  br label %992

992:                                              ; preds = %992, %982
  %993 = phi ptr [ %8, %982 ], [ %994, %992 ]
  %994 = load ptr, ptr %993, align 8, !tbaa !6
  %995 = icmp eq ptr %994, null
  br i1 %995, label %996, label %992, !llvm.loop !53

996:                                              ; preds = %992
  store ptr %983, ptr %993, align 8, !tbaa !6
  %997 = load i32, ptr %10, align 8
  %998 = and i32 %997, 65534
  %999 = icmp eq i32 %998, 72
  %1000 = load ptr, ptr %927, align 8, !tbaa !17
  %1001 = load i32, ptr %1000, align 8
  %1002 = lshr i32 %1001, 16
  %1003 = and i32 %1002, 255
  %1004 = zext i32 %1003 to i64
  %1005 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %1004
  %1006 = load i8, ptr %1005, align 1, !tbaa !17
  %1007 = icmp ult i8 %1006, 4
  br i1 %999, label %1008, label %1081

1008:                                             ; preds = %996
  br i1 %1007, label %1009, label %1052

1009:                                             ; preds = %1008
  %1010 = getelementptr inbounds [87 x i64], ptr @mode_mask_array, i64 0, i64 %1004
  %1011 = load i64, ptr %1010, align 8, !tbaa !38
  %1012 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %1011)
  br label %1013

1013:                                             ; preds = %1013, %1009
  %1014 = phi ptr [ %7, %1009 ], [ %1015, %1013 ]
  %1015 = load ptr, ptr %1014, align 8, !tbaa !6
  %1016 = icmp eq ptr %1015, null
  br i1 %1016, label %1017, label %1013, !llvm.loop !53

1017:                                             ; preds = %1013
  store ptr %1012, ptr %1014, align 8, !tbaa !6
  %1018 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1019 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1018, i64 0, i32 1
  %1020 = load i16, ptr %1019, align 8
  %1021 = and i16 %1020, -256
  %1022 = or i16 %1021, 26
  store i16 %1022, ptr %1019, align 8
  %1023 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1018, i64 0, i32 3
  store i32 6, ptr %1023, align 8, !tbaa !52
  %1024 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1018, i64 0, i32 3, i32 1
  store i64 0, ptr %1024, align 8, !tbaa !17
  %1025 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1018, i64 0, i32 4
  store i32 6, ptr %1025, align 8, !tbaa !49
  %1026 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1018, i64 0, i32 4, i32 1
  store i64 0, ptr %1026, align 8, !tbaa !17
  br label %1027

1027:                                             ; preds = %1027, %1017
  %1028 = phi ptr [ %7, %1017 ], [ %1029, %1027 ]
  %1029 = load ptr, ptr %1028, align 8, !tbaa !6
  %1030 = icmp eq ptr %1029, null
  br i1 %1030, label %1031, label %1027, !llvm.loop !53

1031:                                             ; preds = %1027
  store ptr %1018, ptr %1028, align 8, !tbaa !6
  %1032 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %1011)
  br label %1033

1033:                                             ; preds = %1033, %1031
  %1034 = phi ptr [ %8, %1031 ], [ %1035, %1033 ]
  %1035 = load ptr, ptr %1034, align 8, !tbaa !6
  %1036 = icmp eq ptr %1035, null
  br i1 %1036, label %1037, label %1033, !llvm.loop !53

1037:                                             ; preds = %1033
  store ptr %1032, ptr %1034, align 8, !tbaa !6
  %1038 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1039 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1038, i64 0, i32 1
  %1040 = load i16, ptr %1039, align 8
  %1041 = and i16 %1040, -256
  %1042 = or i16 %1041, 26
  store i16 %1042, ptr %1039, align 8
  %1043 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1038, i64 0, i32 3
  store i32 6, ptr %1043, align 8, !tbaa !52
  %1044 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1038, i64 0, i32 3, i32 1
  store i64 0, ptr %1044, align 8, !tbaa !17
  %1045 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1038, i64 0, i32 4
  store i32 6, ptr %1045, align 8, !tbaa !49
  %1046 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1038, i64 0, i32 4, i32 1
  store i64 0, ptr %1046, align 8, !tbaa !17
  br label %1047

1047:                                             ; preds = %1047, %1037
  %1048 = phi ptr [ %8, %1037 ], [ %1049, %1047 ]
  %1049 = load ptr, ptr %1048, align 8, !tbaa !6
  %1050 = icmp eq ptr %1049, null
  br i1 %1050, label %1051, label %1047, !llvm.loop !53

1051:                                             ; preds = %1047
  store ptr %1038, ptr %1048, align 8, !tbaa !6
  br label %1127

1052:                                             ; preds = %1008
  %1053 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1054 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1053, i64 0, i32 1
  %1055 = load i16, ptr %1054, align 8
  %1056 = and i16 %1055, -256
  %1057 = or i16 %1056, 35
  store i16 %1057, ptr %1054, align 8
  %1058 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1053, i64 0, i32 3
  store i32 6, ptr %1058, align 8, !tbaa !52
  %1059 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1053, i64 0, i32 3, i32 1
  store i64 2147483648, ptr %1059, align 8, !tbaa !17
  %1060 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1053, i64 0, i32 4
  store i32 6, ptr %1060, align 8, !tbaa !49
  %1061 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1053, i64 0, i32 4, i32 1
  store i64 0, ptr %1061, align 8, !tbaa !17
  br label %1062

1062:                                             ; preds = %1062, %1052
  %1063 = phi ptr [ %7, %1052 ], [ %1064, %1062 ]
  %1064 = load ptr, ptr %1063, align 8, !tbaa !6
  %1065 = icmp eq ptr %1064, null
  br i1 %1065, label %1066, label %1062, !llvm.loop !53

1066:                                             ; preds = %1062
  store ptr %1053, ptr %1063, align 8, !tbaa !6
  %1067 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1068 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1067, i64 0, i32 1
  %1069 = load i16, ptr %1068, align 8
  %1070 = and i16 %1069, -256
  %1071 = or i16 %1070, 35
  store i16 %1071, ptr %1068, align 8
  %1072 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1067, i64 0, i32 3
  store i32 6, ptr %1072, align 8, !tbaa !52
  %1073 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1067, i64 0, i32 3, i32 1
  store i64 2147483648, ptr %1073, align 8, !tbaa !17
  %1074 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1067, i64 0, i32 4
  store i32 6, ptr %1074, align 8, !tbaa !49
  %1075 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1067, i64 0, i32 4, i32 1
  store i64 0, ptr %1075, align 8, !tbaa !17
  br label %1076

1076:                                             ; preds = %1076, %1066
  %1077 = phi ptr [ %8, %1066 ], [ %1078, %1076 ]
  %1078 = load ptr, ptr %1077, align 8, !tbaa !6
  %1079 = icmp eq ptr %1078, null
  br i1 %1079, label %1080, label %1076, !llvm.loop !53

1080:                                             ; preds = %1076
  store ptr %1067, ptr %1077, align 8, !tbaa !6
  br label %1127

1081:                                             ; preds = %996
  br i1 %1007, label %1082, label %1127

1082:                                             ; preds = %1081
  %1083 = zext i8 %1006 to i64
  %1084 = shl nuw nsw i64 %1083, 3
  %1085 = sub nuw nsw i64 32, %1084
  %1086 = and i64 %1085, 4294967288
  %1087 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %1086)
  br label %1088

1088:                                             ; preds = %1088, %1082
  %1089 = phi ptr [ %7, %1082 ], [ %1090, %1088 ]
  %1090 = load ptr, ptr %1089, align 8, !tbaa !6
  %1091 = icmp eq ptr %1090, null
  br i1 %1091, label %1092, label %1088, !llvm.loop !53

1092:                                             ; preds = %1088
  store ptr %1087, ptr %1089, align 8, !tbaa !6
  %1093 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1094 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1093, i64 0, i32 1
  %1095 = load i16, ptr %1094, align 8
  %1096 = and i16 %1095, -256
  %1097 = or i16 %1096, 36
  store i16 %1097, ptr %1094, align 8
  %1098 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1093, i64 0, i32 3
  store i32 6, ptr %1098, align 8, !tbaa !52
  %1099 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1093, i64 0, i32 3, i32 1
  store i64 0, ptr %1099, align 8, !tbaa !17
  %1100 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1093, i64 0, i32 4
  store i32 6, ptr %1100, align 8, !tbaa !49
  %1101 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1093, i64 0, i32 4, i32 1
  store i64 0, ptr %1101, align 8, !tbaa !17
  br label %1102

1102:                                             ; preds = %1102, %1092
  %1103 = phi ptr [ %7, %1092 ], [ %1104, %1102 ]
  %1104 = load ptr, ptr %1103, align 8, !tbaa !6
  %1105 = icmp eq ptr %1104, null
  br i1 %1105, label %1106, label %1102, !llvm.loop !53

1106:                                             ; preds = %1102
  store ptr %1093, ptr %1103, align 8, !tbaa !6
  %1107 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %1086)
  br label %1108

1108:                                             ; preds = %1108, %1106
  %1109 = phi ptr [ %8, %1106 ], [ %1110, %1108 ]
  %1110 = load ptr, ptr %1109, align 8, !tbaa !6
  %1111 = icmp eq ptr %1110, null
  br i1 %1111, label %1112, label %1108, !llvm.loop !53

1112:                                             ; preds = %1108
  store ptr %1107, ptr %1109, align 8, !tbaa !6
  %1113 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1114 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1113, i64 0, i32 1
  %1115 = load i16, ptr %1114, align 8
  %1116 = and i16 %1115, -256
  %1117 = or i16 %1116, 36
  store i16 %1117, ptr %1114, align 8
  %1118 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1113, i64 0, i32 3
  store i32 6, ptr %1118, align 8, !tbaa !52
  %1119 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1113, i64 0, i32 3, i32 1
  store i64 0, ptr %1119, align 8, !tbaa !17
  %1120 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1113, i64 0, i32 4
  store i32 6, ptr %1120, align 8, !tbaa !49
  %1121 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1113, i64 0, i32 4, i32 1
  store i64 0, ptr %1121, align 8, !tbaa !17
  br label %1122

1122:                                             ; preds = %1122, %1112
  %1123 = phi ptr [ %8, %1112 ], [ %1124, %1122 ]
  %1124 = load ptr, ptr %1123, align 8, !tbaa !6
  %1125 = icmp eq ptr %1124, null
  br i1 %1125, label %1126, label %1122, !llvm.loop !53

1126:                                             ; preds = %1122
  store ptr %1113, ptr %1123, align 8, !tbaa !6
  br label %1127

1127:                                             ; preds = %1081, %1126, %1051, %1080
  %1128 = load i32, ptr %10, align 8
  %1129 = and i32 %1128, 65535
  %1130 = add nsw i32 %1129, -70
  %1131 = and i32 %1130, -3
  %1132 = icmp eq i32 %1131, 0
  %1133 = load ptr, ptr %7, align 8, !tbaa !6
  store ptr %1133, ptr %6, align 8, !tbaa !6
  %1134 = load ptr, ptr %8, align 8, !tbaa !6
  %1135 = icmp eq ptr %1133, null
  br i1 %1135, label %1140, label %1136, !llvm.loop !53

1136:                                             ; preds = %1127, %1136
  %1137 = phi ptr [ %1138, %1136 ], [ %1133, %1127 ]
  %1138 = load ptr, ptr %1137, align 8, !tbaa !6
  %1139 = icmp eq ptr %1138, null
  br i1 %1139, label %1140, label %1136, !llvm.loop !53

1140:                                             ; preds = %1136, %1127
  %1141 = phi ptr [ %6, %1127 ], [ %1137, %1136 ]
  store ptr %1134, ptr %1141, align 8, !tbaa !6
  %1142 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1143 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1142, i64 0, i32 1
  %1144 = select i1 %1132, i16 45, i16 43
  %1145 = load i16, ptr %1143, align 8
  %1146 = and i16 %1145, -256
  %1147 = or i16 %1146, %1144
  store i16 %1147, ptr %1143, align 8
  %1148 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1142, i64 0, i32 3
  store i32 6, ptr %1148, align 8, !tbaa !52
  %1149 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1142, i64 0, i32 3, i32 1
  store i64 0, ptr %1149, align 8, !tbaa !17
  %1150 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1142, i64 0, i32 4
  store i32 6, ptr %1150, align 8, !tbaa !49
  %1151 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1142, i64 0, i32 4, i32 1
  store i64 0, ptr %1151, align 8, !tbaa !17
  br label %1152

1152:                                             ; preds = %1152, %1140
  %1153 = phi ptr [ %6, %1140 ], [ %1154, %1152 ]
  %1154 = load ptr, ptr %1153, align 8, !tbaa !6
  %1155 = icmp eq ptr %1154, null
  br i1 %1155, label %1156, label %1152, !llvm.loop !53

1156:                                             ; preds = %1152
  store ptr %1142, ptr %1153, align 8, !tbaa !6
  %1157 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1158 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1157, i64 0, i32 1
  %1159 = load i16, ptr %1158, align 8
  %1160 = and i16 %1159, -256
  %1161 = or i16 %1160, 40
  store i16 %1161, ptr %1158, align 8
  %1162 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1157, i64 0, i32 3
  store i32 6, ptr %1162, align 8, !tbaa !52
  %1163 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1157, i64 0, i32 3, i32 1
  store i64 0, ptr %1163, align 8, !tbaa !17
  %1164 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1157, i64 0, i32 4
  store i32 6, ptr %1164, align 8, !tbaa !49
  %1165 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1157, i64 0, i32 4, i32 1
  store i64 0, ptr %1165, align 8, !tbaa !17
  br label %1166

1166:                                             ; preds = %1166, %1156
  %1167 = phi ptr [ %6, %1156 ], [ %1168, %1166 ]
  %1168 = load ptr, ptr %1167, align 8, !tbaa !6
  %1169 = icmp eq ptr %1168, null
  br i1 %1169, label %1170, label %1166, !llvm.loop !53

1170:                                             ; preds = %1166
  store ptr %1157, ptr %1167, align 8, !tbaa !6
  %1171 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1172 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1171, i64 0, i32 1
  %1173 = load i16, ptr %1172, align 8
  %1174 = and i16 %1173, -256
  %1175 = or i16 %1174, 22
  store i16 %1175, ptr %1172, align 8
  %1176 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1171, i64 0, i32 3
  store i32 6, ptr %1176, align 8, !tbaa !52
  %1177 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1171, i64 0, i32 3, i32 1
  store i64 0, ptr %1177, align 8, !tbaa !17
  %1178 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1171, i64 0, i32 4
  store i32 6, ptr %1178, align 8, !tbaa !49
  %1179 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1171, i64 0, i32 4, i32 1
  store i64 0, ptr %1179, align 8, !tbaa !17
  br label %1180

1180:                                             ; preds = %1180, %1170
  %1181 = phi ptr [ %6, %1170 ], [ %1182, %1180 ]
  %1182 = load ptr, ptr %1181, align 8, !tbaa !6
  %1183 = icmp eq ptr %1182, null
  br i1 %1183, label %1184, label %1180, !llvm.loop !53

1184:                                             ; preds = %1180
  store ptr %1171, ptr %1181, align 8, !tbaa !6
  %1185 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1186 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1185, i64 0, i32 1
  %1187 = load i16, ptr %1186, align 8
  %1188 = and i16 %1187, -256
  %1189 = or i16 %1188, 19
  store i16 %1189, ptr %1186, align 8
  %1190 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1185, i64 0, i32 3
  store i32 6, ptr %1190, align 8, !tbaa !52
  %1191 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1185, i64 0, i32 3, i32 1
  store i64 0, ptr %1191, align 8, !tbaa !17
  %1192 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1185, i64 0, i32 4
  store i32 6, ptr %1192, align 8, !tbaa !49
  %1193 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1185, i64 0, i32 4, i32 1
  store i64 0, ptr %1193, align 8, !tbaa !17
  br label %1194

1194:                                             ; preds = %1194, %1184
  %1195 = phi ptr [ %6, %1184 ], [ %1196, %1194 ]
  %1196 = load ptr, ptr %1195, align 8, !tbaa !6
  %1197 = icmp eq ptr %1196, null
  br i1 %1197, label %1198, label %1194, !llvm.loop !53

1198:                                             ; preds = %1194
  store ptr %1185, ptr %1195, align 8, !tbaa !6
  store i32 2, ptr %1162, align 8, !tbaa !52
  store ptr %1185, ptr %1163, align 8, !tbaa !17
  br label %1311

1199:                                             ; preds = %3, %3
  %1200 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %1201 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 1
  %1202 = load ptr, ptr %1201, align 8, !tbaa !17
  %1203 = load i32, ptr %1202, align 8
  %1204 = and i32 %1203, 65535
  %1205 = icmp eq i32 %1204, 30
  br i1 %1205, label %1206, label %1311

1206:                                             ; preds = %1199
  %1207 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1, i32 0, i32 0, i64 2
  %1208 = load ptr, ptr %1207, align 8, !tbaa !17
  %1209 = load i32, ptr %1208, align 8
  %1210 = and i32 %1209, 65535
  %1211 = icmp eq i32 %1210, 30
  br i1 %1211, label %1212, label %1311

1212:                                             ; preds = %1206
  %1213 = getelementptr inbounds %struct.rtx_def, ptr %1202, i64 0, i32 1
  %1214 = load i64, ptr %1213, align 8, !tbaa !17
  %1215 = trunc i64 %1214 to i32
  %1216 = getelementptr inbounds %struct.rtx_def, ptr %1208, i64 0, i32 1
  %1217 = load i64, ptr %1216, align 8, !tbaa !17
  %1218 = trunc i64 %1217 to i32
  %1219 = add i32 %1218, %1215
  %1220 = lshr i32 %11, 16
  %1221 = and i32 %1220, 255
  %1222 = zext i32 %1221 to i64
  %1223 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %1222
  %1224 = load i8, ptr %1223, align 1, !tbaa !17
  %1225 = zext i8 %1224 to i32
  %1226 = shl nuw nsw i32 %1225, 3
  %1227 = icmp ule i32 %1219, %1226
  %1228 = icmp eq i8 %1224, 0
  %1229 = and i1 %1228, %1227
  br i1 %1229, label %1230, label %1311

1230:                                             ; preds = %1212
  %1231 = load ptr, ptr %1200, align 8, !tbaa !17
  %1232 = load i32, ptr %1231, align 8
  %1233 = lshr i32 %1232, 16
  %1234 = and i32 %1233, 255
  %1235 = zext i32 %1234 to i64
  %1236 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %1235
  %1237 = load i8, ptr %1236, align 1, !tbaa !17
  %1238 = icmp eq i8 %1237, 0
  br i1 %1238, label %1239, label %1311

1239:                                             ; preds = %1230
  %1240 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %1231, i32 noundef %1, i32 noundef 2)
  %1241 = icmp eq ptr %1240, null
  br i1 %1241, label %1311, label %1242

1242:                                             ; preds = %1239
  %1243 = load i32, ptr %10, align 8
  %1244 = and i32 %1243, 65535
  %1245 = icmp eq i32 %1244, 119
  store ptr %1240, ptr %6, align 8, !tbaa !6
  %1246 = load ptr, ptr %1201, align 8, !tbaa !17
  %1247 = getelementptr inbounds %struct.rtx_def, ptr %1246, i64 0, i32 1
  %1248 = load i64, ptr %1247, align 8, !tbaa !17
  %1249 = trunc i64 %1248 to i32
  %1250 = load ptr, ptr %1207, align 8, !tbaa !17
  %1251 = getelementptr inbounds %struct.rtx_def, ptr %1250, i64 0, i32 1
  %1252 = load i64, ptr %1251, align 8, !tbaa !17
  %1253 = trunc i64 %1252 to i32
  %1254 = add nsw i32 %1253, %1249
  %1255 = icmp eq i32 %1254, 4
  br i1 %1255, label %1281, label %1256

1256:                                             ; preds = %1242
  %1257 = add i64 %1252, %1248
  %1258 = shl i64 %1257, 32
  %1259 = sub i64 17179869184, %1258
  %1260 = ashr exact i64 %1259, 32
  %1261 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %1260)
  br label %1262

1262:                                             ; preds = %1262, %1256
  %1263 = phi ptr [ %6, %1256 ], [ %1264, %1262 ]
  %1264 = load ptr, ptr %1263, align 8, !tbaa !6
  %1265 = icmp eq ptr %1264, null
  br i1 %1265, label %1266, label %1262, !llvm.loop !53

1266:                                             ; preds = %1262
  store ptr %1261, ptr %1263, align 8, !tbaa !6
  %1267 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1268 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1267, i64 0, i32 1
  %1269 = load i16, ptr %1268, align 8
  %1270 = and i16 %1269, -256
  %1271 = or i16 %1270, 36
  store i16 %1271, ptr %1268, align 8
  %1272 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1267, i64 0, i32 3
  store i32 6, ptr %1272, align 8, !tbaa !52
  %1273 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1267, i64 0, i32 3, i32 1
  store i64 0, ptr %1273, align 8, !tbaa !17
  %1274 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1267, i64 0, i32 4
  store i32 6, ptr %1274, align 8, !tbaa !49
  %1275 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1267, i64 0, i32 4, i32 1
  store i64 0, ptr %1275, align 8, !tbaa !17
  br label %1276

1276:                                             ; preds = %1276, %1266
  %1277 = phi ptr [ %6, %1266 ], [ %1278, %1276 ]
  %1278 = load ptr, ptr %1277, align 8, !tbaa !6
  %1279 = icmp eq ptr %1278, null
  br i1 %1279, label %1280, label %1276, !llvm.loop !53

1280:                                             ; preds = %1276
  store ptr %1267, ptr %1277, align 8, !tbaa !6
  br label %1281

1281:                                             ; preds = %1280, %1242
  %1282 = icmp eq i32 %1249, 4
  br i1 %1282, label %1311, label %1283

1283:                                             ; preds = %1281
  %1284 = shl i64 %1248, 32
  %1285 = sub i64 17179869184, %1284
  %1286 = ashr exact i64 %1285, 32
  %1287 = tail call fastcc ptr @int_loc_descriptor(i64 noundef %1286)
  br label %1288

1288:                                             ; preds = %1288, %1283
  %1289 = phi ptr [ %6, %1283 ], [ %1290, %1288 ]
  %1290 = load ptr, ptr %1289, align 8, !tbaa !6
  %1291 = icmp eq ptr %1290, null
  br i1 %1291, label %1292, label %1288, !llvm.loop !53

1292:                                             ; preds = %1288
  store ptr %1287, ptr %1289, align 8, !tbaa !6
  %1293 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1294 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1293, i64 0, i32 1
  %1295 = select i1 %1245, i16 38, i16 37
  %1296 = load i16, ptr %1294, align 8
  %1297 = and i16 %1296, -256
  %1298 = or i16 %1297, %1295
  store i16 %1298, ptr %1294, align 8
  %1299 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1293, i64 0, i32 3
  store i32 6, ptr %1299, align 8, !tbaa !52
  %1300 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1293, i64 0, i32 3, i32 1
  store i64 0, ptr %1300, align 8, !tbaa !17
  %1301 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1293, i64 0, i32 4
  store i32 6, ptr %1301, align 8, !tbaa !49
  %1302 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1293, i64 0, i32 4, i32 1
  store i64 0, ptr %1302, align 8, !tbaa !17
  br label %1303

1303:                                             ; preds = %1303, %1292
  %1304 = phi ptr [ %6, %1292 ], [ %1305, %1303 ]
  %1305 = load ptr, ptr %1304, align 8, !tbaa !6
  %1306 = icmp eq ptr %1305, null
  br i1 %1306, label %1307, label %1303, !llvm.loop !53

1307:                                             ; preds = %1303
  store ptr %1293, ptr %1304, align 8, !tbaa !6
  br label %1311

1308:                                             ; preds = %3
  %1309 = call i32 @resolve_one_addr(ptr noundef nonnull %5, ptr poison), !range !37
  %1310 = load ptr, ptr %5, align 8, !tbaa !6
  br label %277

1311:                                             ; preds = %217, %775, %780, %596, %601, %1239, %1307, %1281, %410, %389, %265, %236, %3, %1199, %1206, %1212, %1230, %947, %926, %936, %940, %750, %761, %569, %582, %539, %451, %420, %373, %386, %377, %274, %200, %216, %60, %40, %58, %54, %42, %30, %20, %17, %1198, %746, %560, %559, %536, %450, %298, %164, %34
  %1312 = load ptr, ptr %6, align 8, !tbaa !6
  %1313 = icmp ne ptr %1312, null
  %1314 = icmp eq i32 %2, 1
  %1315 = and i1 %1314, %1313
  br i1 %1315, label %1316, label %1332

1316:                                             ; preds = %1311
  %1317 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1318 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1317, i64 0, i32 1
  %1319 = load i16, ptr %1318, align 8
  %1320 = and i16 %1319, -256
  %1321 = or i16 %1320, 240
  store i16 %1321, ptr %1318, align 8
  %1322 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1317, i64 0, i32 3
  store i32 6, ptr %1322, align 8, !tbaa !52
  %1323 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1317, i64 0, i32 3, i32 1
  store i64 0, ptr %1323, align 8, !tbaa !17
  %1324 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1317, i64 0, i32 4
  store i32 6, ptr %1324, align 8, !tbaa !49
  %1325 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1317, i64 0, i32 4, i32 1
  store i64 0, ptr %1325, align 8, !tbaa !17
  br label %1326

1326:                                             ; preds = %1326, %1316
  %1327 = phi ptr [ %6, %1316 ], [ %1328, %1326 ]
  %1328 = load ptr, ptr %1327, align 8, !tbaa !6
  %1329 = icmp eq ptr %1328, null
  br i1 %1329, label %1330, label %1326, !llvm.loop !53

1330:                                             ; preds = %1326
  store ptr %1317, ptr %1327, align 8, !tbaa !6
  %1331 = load ptr, ptr %6, align 8, !tbaa !6
  br label %1332

1332:                                             ; preds = %1311, %1330, %311, %307, %304, %220, %183, %13
  %1333 = phi ptr [ null, %183 ], [ %221, %220 ], [ %16, %13 ], [ null, %304 ], [ null, %307 ], [ null, %311 ], [ %1331, %1330 ], [ %1312, %1311 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #31
  ret ptr %1333
}

declare ptr @get_inner_reference(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_loc_list(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = icmp eq ptr %3, null
  br i1 %4, label %84, label %5

5:                                                ; preds = %2
  %6 = load ptr, ptr %1, align 8, !tbaa !273
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %39

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !270
  %11 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %3, i64 0, i32 5
  br label %12

12:                                               ; preds = %12, %8
  %13 = phi ptr [ %11, %8 ], [ %14, %12 ]
  %14 = load ptr, ptr %13, align 8, !tbaa !6
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %12, !llvm.loop !53

16:                                               ; preds = %12
  store ptr %10, ptr %13, align 8, !tbaa !6
  %17 = load ptr, ptr %3, align 8, !tbaa !273
  %18 = icmp eq ptr %17, null
  br i1 %18, label %86, label %22

19:                                               ; preds = %33, %30
  %20 = load ptr, ptr %23, align 8, !tbaa !273
  %21 = icmp eq ptr %20, null
  br i1 %21, label %86, label %22, !llvm.loop !328

22:                                               ; preds = %16, %19
  %23 = phi ptr [ %20, %19 ], [ %17, %16 ]
  %24 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %24, ptr noundef nonnull align 8 dereferenceable(64) %10, i64 64, i1 false)
  %25 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %23, i64 0, i32 5
  br label %26

26:                                               ; preds = %26, %22
  %27 = phi ptr [ %25, %22 ], [ %28, %26 ]
  %28 = load ptr, ptr %27, align 8, !tbaa !6
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %26, !llvm.loop !53

30:                                               ; preds = %26
  store ptr %24, ptr %27, align 8, !tbaa !6
  %31 = load ptr, ptr %24, align 8, !tbaa !57
  %32 = icmp eq ptr %31, null
  br i1 %32, label %19, label %33

33:                                               ; preds = %30, %33
  %34 = phi ptr [ %35, %33 ], [ %24, %30 ]
  %35 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %36 = load ptr, ptr %34, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %35, ptr noundef nonnull align 8 dereferenceable(64) %36, i64 64, i1 false)
  store ptr %35, ptr %34, align 8, !tbaa !57
  %37 = load ptr, ptr %35, align 8, !tbaa !57
  %38 = icmp eq ptr %37, null
  br i1 %38, label %19, label %33, !llvm.loop !329

39:                                               ; preds = %5
  %40 = load ptr, ptr %3, align 8, !tbaa !273
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %73

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %3, i64 0, i32 5
  %44 = load ptr, ptr %43, align 8, !tbaa !270
  %45 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1, i64 0, i32 5
  br label %46

46:                                               ; preds = %46, %42
  %47 = phi ptr [ %45, %42 ], [ %48, %46 ]
  %48 = load ptr, ptr %47, align 8, !tbaa !6
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %46, !llvm.loop !53

50:                                               ; preds = %46
  store ptr %44, ptr %47, align 8, !tbaa !6
  %51 = load ptr, ptr %1, align 8, !tbaa !273
  %52 = icmp eq ptr %51, null
  br i1 %52, label %84, label %56

53:                                               ; preds = %67, %64
  %54 = load ptr, ptr %57, align 8, !tbaa !273
  %55 = icmp eq ptr %54, null
  br i1 %55, label %84, label %56, !llvm.loop !328

56:                                               ; preds = %50, %53
  %57 = phi ptr [ %54, %53 ], [ %51, %50 ]
  %58 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %58, ptr noundef nonnull align 8 dereferenceable(64) %44, i64 64, i1 false)
  %59 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %57, i64 0, i32 5
  br label %60

60:                                               ; preds = %60, %56
  %61 = phi ptr [ %59, %56 ], [ %62, %60 ]
  %62 = load ptr, ptr %61, align 8, !tbaa !6
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %60, !llvm.loop !53

64:                                               ; preds = %60
  store ptr %58, ptr %61, align 8, !tbaa !6
  %65 = load ptr, ptr %58, align 8, !tbaa !57
  %66 = icmp eq ptr %65, null
  br i1 %66, label %53, label %67

67:                                               ; preds = %64, %67
  %68 = phi ptr [ %69, %67 ], [ %58, %64 ]
  %69 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %70 = load ptr, ptr %68, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %69, ptr noundef nonnull align 8 dereferenceable(64) %70, i64 64, i1 false)
  store ptr %69, ptr %68, align 8, !tbaa !57
  %71 = load ptr, ptr %69, align 8, !tbaa !57
  %72 = icmp eq ptr %71, null
  br i1 %72, label %53, label %67, !llvm.loop !329

73:                                               ; preds = %39
  %74 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %75 = icmp eq ptr %74, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %73
  %77 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %78 = and i32 %77, 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %74)
  %82 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %83 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %82, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.312)
  br label %84

84:                                               ; preds = %53, %80, %76, %73, %50, %2
  %85 = phi ptr [ %1, %2 ], [ %1, %50 ], [ null, %73 ], [ null, %76 ], [ null, %80 ], [ %1, %53 ]
  store ptr %85, ptr %0, align 8, !tbaa !6
  br label %86

86:                                               ; preds = %19, %84, %16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_loc_descr_to_each(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 5
  br label %4

4:                                                ; preds = %4, %2
  %5 = phi ptr [ %3, %2 ], [ %6, %4 ]
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %4, !llvm.loop !53

8:                                                ; preds = %4
  store ptr %1, ptr %5, align 8, !tbaa !6
  %9 = load ptr, ptr %0, align 8, !tbaa !273
  %10 = icmp eq ptr %9, null
  br i1 %10, label %31, label %14

11:                                               ; preds = %25, %22
  %12 = load ptr, ptr %15, align 8, !tbaa !273
  %13 = icmp eq ptr %12, null
  br i1 %13, label %31, label %14, !llvm.loop !328

14:                                               ; preds = %8, %11
  %15 = phi ptr [ %12, %11 ], [ %9, %8 ]
  %16 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %16, ptr noundef nonnull align 8 dereferenceable(64) %1, i64 64, i1 false)
  %17 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %15, i64 0, i32 5
  br label %18

18:                                               ; preds = %18, %14
  %19 = phi ptr [ %17, %14 ], [ %20, %18 ]
  %20 = load ptr, ptr %19, align 8, !tbaa !6
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %18, !llvm.loop !53

22:                                               ; preds = %18
  store ptr %16, ptr %19, align 8, !tbaa !6
  %23 = load ptr, ptr %16, align 8, !tbaa !57
  %24 = icmp eq ptr %23, null
  br i1 %24, label %11, label %25

25:                                               ; preds = %22, %25
  %26 = phi ptr [ %27, %25 ], [ %16, %22 ]
  %27 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %28 = load ptr, ptr %26, align 8, !tbaa !57
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %27, ptr noundef nonnull align 8 dereferenceable(64) %28, i64 64, i1 false)
  store ptr %27, ptr %26, align 8, !tbaa !57
  %29 = load ptr, ptr %27, align 8, !tbaa !57
  %30 = icmp eq ptr %29, null
  br i1 %30, label %11, label %25, !llvm.loop !329

31:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @address_of_int_loc_descriptor(i32 noundef %0, i64 noundef %1) unnamed_addr #10 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %4 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %5 = icmp slt i32 %4, 4
  %6 = load i32, ptr @dwarf_strict, align 4
  %7 = icmp ne i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %90, label %9

9:                                                ; preds = %2
  %10 = icmp sgt i64 %1, -1
  br i1 %10, label %11, label %22

11:                                               ; preds = %9
  %12 = icmp ult i64 %1, 32
  br i1 %12, label %29, label %13

13:                                               ; preds = %11
  %14 = icmp ult i64 %1, 256
  br i1 %14, label %29, label %15

15:                                               ; preds = %13
  %16 = icmp ult i64 %1, 65536
  br i1 %16, label %29, label %17

17:                                               ; preds = %15
  %18 = icmp ult i64 %1, 4294967296
  br i1 %18, label %29, label %19

19:                                               ; preds = %17
  %20 = tail call i32 @size_of_uleb128(i64 noundef %1) #31
  %21 = add nsw i32 %20, 1
  br label %29

22:                                               ; preds = %9
  %23 = icmp ugt i64 %1, -129
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = icmp ugt i64 %1, -32769
  br i1 %25, label %29, label %26

26:                                               ; preds = %24
  %27 = tail call i32 @size_of_sleb128(i64 noundef %1) #31
  %28 = add nsw i32 %27, 1
  br label %29

29:                                               ; preds = %24, %22, %17, %15, %13, %11, %26, %19
  %30 = phi i32 [ %21, %19 ], [ %28, %26 ], [ 1, %11 ], [ 2, %13 ], [ 3, %15 ], [ 5, %17 ], [ 2, %22 ], [ 3, %24 ]
  %31 = icmp slt i32 %0, 5
  %32 = add nsw i32 %0, 2
  %33 = icmp slt i32 %30, %32
  %34 = select i1 %31, i1 %33, i1 false
  br i1 %34, label %35, label %79

35:                                               ; preds = %29
  br i1 %10, label %36, label %48

36:                                               ; preds = %35
  %37 = icmp ult i64 %1, 32
  br i1 %37, label %38, label %41

38:                                               ; preds = %36
  %39 = trunc i64 %1 to i16
  %40 = add nuw nsw i16 %39, 48
  br label %53

41:                                               ; preds = %36
  %42 = icmp ult i64 %1, 256
  br i1 %42, label %53, label %43

43:                                               ; preds = %41
  %44 = icmp ult i64 %1, 65536
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = icmp ult i64 %1, 4294967296
  %47 = select i1 %46, i16 12, i16 16
  br label %53

48:                                               ; preds = %35
  %49 = icmp ugt i64 %1, -129
  br i1 %49, label %53, label %50

50:                                               ; preds = %48
  %51 = icmp ugt i64 %1, -32769
  %52 = select i1 %51, i16 11, i16 17
  br label %53

53:                                               ; preds = %38, %41, %43, %45, %48, %50
  %54 = phi i16 [ %40, %38 ], [ 8, %41 ], [ 10, %43 ], [ %47, %45 ], [ 9, %48 ], [ %52, %50 ]
  %55 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %56 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %55, i64 0, i32 1
  %57 = load i16, ptr %56, align 8
  %58 = and i16 %57, -256
  %59 = or i16 %58, %54
  store i16 %59, ptr %56, align 8
  %60 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %55, i64 0, i32 3
  store i32 6, ptr %60, align 8, !tbaa !52
  %61 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %55, i64 0, i32 3, i32 1
  store i64 %1, ptr %61, align 8, !tbaa !17
  %62 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %55, i64 0, i32 4
  store i32 6, ptr %62, align 8, !tbaa !49
  %63 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %55, i64 0, i32 4, i32 1
  store i64 0, ptr %63, align 8, !tbaa !17
  store ptr %55, ptr %3, align 8, !tbaa !6
  %64 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %65 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 1
  %66 = load i16, ptr %65, align 8
  %67 = and i16 %66, -256
  %68 = or i16 %67, 159
  store i16 %68, ptr %65, align 8
  %69 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 3
  store i32 6, ptr %69, align 8, !tbaa !52
  %70 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 3, i32 1
  store i64 0, ptr %70, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 4
  store i32 6, ptr %71, align 8, !tbaa !49
  %72 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %64, i64 0, i32 4, i32 1
  store i64 0, ptr %72, align 8, !tbaa !17
  br label %73

73:                                               ; preds = %73, %53
  %74 = phi ptr [ %3, %53 ], [ %75, %73 ]
  %75 = load ptr, ptr %74, align 8, !tbaa !6
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %73, !llvm.loop !53

77:                                               ; preds = %73
  store ptr %64, ptr %74, align 8, !tbaa !6
  %78 = load ptr, ptr %3, align 8, !tbaa !6
  br label %90

79:                                               ; preds = %29
  %80 = sext i32 %0 to i64
  %81 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %82 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %81, i64 0, i32 1
  %83 = load i16, ptr %82, align 8
  %84 = and i16 %83, -256
  %85 = or i16 %84, 158
  store i16 %85, ptr %82, align 8
  %86 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %81, i64 0, i32 3
  store i32 6, ptr %86, align 8, !tbaa !52
  %87 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %81, i64 0, i32 3, i32 1
  store i64 %80, ptr %87, align 8, !tbaa !17
  %88 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %81, i64 0, i32 4
  %89 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %81, i64 0, i32 4, i32 1
  store i32 5, ptr %88, align 8, !tbaa !49
  store i64 %1, ptr %89, align 8, !tbaa !17
  br label %90

90:                                               ; preds = %2, %79, %77
  %91 = phi ptr [ %78, %77 ], [ %81, %79 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  ret ptr %91
}

declare ptr @build3_stat(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build2_stat(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @dw_loc_list_1(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #10 {
  %5 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %6 = icmp eq i32 %2, 2
  br i1 %6, label %40, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr %1, align 8
  %9 = and i32 %8, 65535
  %10 = icmp eq i32 %9, 138
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14017, ptr noundef nonnull @.str.5) #31
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = load i32, ptr %14, align 8
  %16 = trunc i32 %15 to i16
  switch i16 %16, label %21 [
    i16 15, label %109
    i16 3, label %17
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.rtx_def, ptr %14, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = load i32, ptr %19, align 8
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i32 [ %20, %17 ], [ %15, %12 ]
  %23 = phi ptr [ %19, %17 ], [ %14, %12 ]
  %24 = lshr i32 %22, 16
  %25 = and i32 %24, 255
  %26 = and i32 %22, 65535
  %27 = icmp eq i32 %26, 43
  br i1 %27, label %28, label %38

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.rtx_def, ptr %23, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %30, i32 noundef %25, i32 noundef %3)
  store ptr %31, ptr %5, align 8, !tbaa !6
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %66

33:                                               ; preds = %28
  %34 = tail call ptr @avoid_constant_pool_reference(ptr noundef nonnull %23) #31
  %35 = icmp eq ptr %34, %23
  br i1 %35, label %109, label %36

36:                                               ; preds = %33
  %37 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef %34, i32 noundef %25, i32 noundef %3)
  store ptr %37, ptr %5, align 8, !tbaa !6
  br label %46

38:                                               ; preds = %21
  %39 = tail call fastcc ptr @mem_loc_descriptor(ptr noundef nonnull %23, i32 noundef %25, i32 noundef %3)
  store ptr %39, ptr %5, align 8, !tbaa !6
  br label %46

40:                                               ; preds = %4
  %41 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %42 = load i64, ptr %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = and i32 %43, 255
  %45 = tail call fastcc ptr @loc_descriptor(ptr noundef %1, i32 noundef %44, i32 noundef %3)
  store ptr %45, ptr %5, align 8, !tbaa !6
  br label %46

46:                                               ; preds = %36, %38, %40
  %47 = phi ptr [ %37, %36 ], [ %39, %38 ], [ %45, %40 ]
  %48 = icmp eq ptr %47, null
  br i1 %48, label %109, label %49

49:                                               ; preds = %46
  switch i32 %2, label %50 [
    i32 2, label %66
    i32 0, label %66
  ]

50:                                               ; preds = %49
  %51 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %52 = icmp eq ptr %51, null
  br i1 %52, label %109, label %53

53:                                               ; preds = %50
  %54 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %55 = and i32 %54, 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %109, label %57

57:                                               ; preds = %53
  %58 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %51)
  %59 = icmp eq ptr %0, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %62 = load i32, ptr @dump_flags, align 4, !tbaa !21
  tail call void @print_generic_expr(ptr noundef %61, ptr noundef nonnull %0, i32 noundef %62) #31
  br label %63

63:                                               ; preds = %60, %57
  %64 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %65 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %64, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.307)
  br label %109

66:                                               ; preds = %28, %49, %49
  %67 = phi ptr [ %47, %49 ], [ %47, %49 ], [ %31, %28 ]
  %68 = phi i1 [ %6, %49 ], [ %6, %49 ], [ true, %28 ]
  %69 = icmp eq i32 %2, 0
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %109

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = tail call i64 @int_size_in_bytes(ptr noundef %73) #31
  %75 = icmp slt i64 %74, 5
  %76 = icmp ne i64 %74, -1
  %77 = and i1 %75, %76
  br i1 %77, label %91, label %78

78:                                               ; preds = %71
  %79 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %80 = icmp eq ptr %79, null
  br i1 %80, label %109, label %81

81:                                               ; preds = %78
  %82 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %83 = and i32 %82, 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %109, label %85

85:                                               ; preds = %81
  %86 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %79)
  %87 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %88 = load i32, ptr @dump_flags, align 4, !tbaa !21
  tail call void @print_generic_expr(ptr noundef %87, ptr noundef nonnull %0, i32 noundef %88) #31
  %89 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %90 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %89, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.306)
  br label %109

91:                                               ; preds = %71
  %92 = icmp eq i64 %74, 4
  %93 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %94 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 1
  %95 = load i16, ptr %94, align 8
  %96 = and i16 %95, -256
  %97 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 3
  %98 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 3, i32 1
  %99 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 4
  %100 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %93, i64 0, i32 4, i32 1
  %101 = select i1 %92, i16 6, i16 148
  %102 = or i16 %96, %101
  store i16 %102, ptr %94, align 8
  store i32 6, ptr %97, align 8, !tbaa !52
  store i64 %74, ptr %98, align 8, !tbaa !17
  store i32 6, ptr %99, align 8, !tbaa !49
  store i64 0, ptr %100, align 8, !tbaa !17
  br label %103

103:                                              ; preds = %103, %91
  %104 = phi ptr [ %5, %91 ], [ %105, %103 ]
  %105 = load ptr, ptr %104, align 8, !tbaa !6
  %106 = icmp eq ptr %105, null
  br i1 %106, label %107, label %103, !llvm.loop !53

107:                                              ; preds = %103
  store ptr %93, ptr %104, align 8, !tbaa !6
  %108 = load ptr, ptr %5, align 8, !tbaa !6
  br label %109

109:                                              ; preds = %66, %107, %78, %81, %85, %33, %63, %53, %50, %46, %12
  %110 = phi ptr [ null, %12 ], [ null, %46 ], [ null, %50 ], [ null, %53 ], [ null, %63 ], [ null, %33 ], [ null, %85 ], [ null, %81 ], [ null, %78 ], [ %108, %107 ], [ %67, %66 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  ret ptr %110
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @tls_mem_loc_descriptor(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #31
  %3 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = icmp eq ptr %4, null
  br i1 %5, label %50, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !343
  %8 = icmp eq ptr %7, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.mem_attrs, ptr %4, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !345
  %12 = icmp eq ptr %11, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %9
  %14 = tail call ptr @get_base_address(ptr noundef nonnull %7) #31
  %15 = icmp eq ptr %14, null
  br i1 %15, label %50, label %16

16:                                               ; preds = %13
  %17 = load i64, ptr %14, align 8
  %18 = and i64 %17, 65535
  %19 = icmp eq i64 %18, 32
  br i1 %19, label %20, label %50

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %14, i64 0, i32 4
  %22 = load i32, ptr %21, align 8
  %23 = and i32 %22, 49152
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %50, label %25

25:                                               ; preds = %20
  %26 = load ptr, ptr %3, align 8, !tbaa !17
  %27 = icmp eq ptr %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = load ptr, ptr %26, align 8, !tbaa !343
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi ptr [ %29, %28 ], [ null, %25 ]
  %32 = tail call fastcc ptr @loc_list_from_tree(ptr noundef %31, i32 noundef 1)
  %33 = icmp eq ptr %32, null
  br i1 %33, label %50, label %34

34:                                               ; preds = %30
  %35 = load ptr, ptr %32, align 8, !tbaa !273
  %36 = icmp eq ptr %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  tail call fastcc void @expansion_failed(ptr noundef %31, ptr noundef null, ptr noundef nonnull @.str.313)
  br label %50

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %32, i64 0, i32 5
  %40 = load ptr, ptr %39, align 8, !tbaa !270
  store ptr %40, ptr %2, align 8, !tbaa !6
  %41 = icmp eq ptr %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %3, align 8, !tbaa !17, !nonnull !346, !noundef !346
  %44 = getelementptr inbounds %struct.mem_attrs, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !345
  %46 = getelementptr inbounds %struct.rtx_def, ptr %45, i64 0, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !17
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %42
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %2, i64 noundef %47)
  br label %50

50:                                               ; preds = %30, %37, %42, %49, %38, %13, %16, %20, %6, %9, %1
  %51 = phi ptr [ null, %1 ], [ null, %9 ], [ null, %6 ], [ null, %20 ], [ null, %16 ], [ null, %13 ], [ null, %38 ], [ %40, %49 ], [ %40, %42 ], [ null, %37 ], [ null, %30 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #31
  ret ptr %51
}

declare ptr @get_base_address(ptr noundef) local_unnamed_addr #3

declare i32 @subreg_lowpart_p(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @based_loc_descr(ptr noundef %0, i64 noundef %1) unnamed_addr #10 {
  %3 = load i32, ptr @fde_table_in_use, align 4
  %4 = icmp eq i32 %3, 0
  %5 = load ptr, ptr @fde_table, align 8
  %6 = add i32 %3, -1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.dw_fde_struct, ptr %5, i64 %7
  %9 = select i1 %4, ptr null, ptr %8
  %10 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %11 = icmp eq ptr %10, %0
  %12 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 3), align 8
  %13 = icmp eq ptr %12, %0
  %14 = select i1 %11, i1 true, i1 %13
  br i1 %14, label %15, label %80

15:                                               ; preds = %2
  %16 = tail call ptr @eliminate_regs(ptr noundef %0, i32 noundef 0, ptr noundef null) #31
  %17 = icmp eq ptr %16, %0
  br i1 %17, label %98, label %18

18:                                               ; preds = %15
  %19 = load i32, ptr %16, align 8
  %20 = and i32 %19, 65535
  %21 = icmp eq i32 %20, 49
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.rtx_def, ptr %16, i64 0, i32 1
  %24 = getelementptr inbounds %struct.rtx_def, ptr %16, i64 0, i32 1, i32 0, i32 0, i64 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.rtx_def, ptr %25, i64 0, i32 1
  %27 = load i64, ptr %26, align 8, !tbaa !17
  %28 = add nsw i64 %27, %1
  %29 = load ptr, ptr %23, align 8, !tbaa !17
  br label %30

30:                                               ; preds = %22, %18
  %31 = phi i64 [ %28, %22 ], [ %1, %18 ]
  %32 = phi ptr [ %29, %22 ], [ %16, %18 ]
  %33 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16
  %34 = icmp eq ptr %32, %33
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16
  %37 = icmp eq ptr %32, %36
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 41), align 1, !tbaa !89
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, ptr %36, ptr %33
  %42 = icmp eq ptr %32, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12747, ptr noundef nonnull @.str.5) #31
  br label %44

44:                                               ; preds = %30, %35, %38, %43
  %45 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 44), align 8, !tbaa !347
  %46 = icmp ne i8 %45, 0
  %47 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 3), align 8
  %48 = icmp eq ptr %47, %0
  %49 = select i1 %46, i1 %48, i1 false
  br i1 %49, label %50, label %75

50:                                               ; preds = %44
  %51 = icmp eq ptr %9, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.dw_fde_struct, ptr %9, i64 0, i32 12
  %54 = load i32, ptr %53, align 8, !tbaa !88
  %55 = icmp eq i32 %54, -1
  %56 = select i1 %55, i64 7, i64 6
  br label %57

57:                                               ; preds = %52, %50
  %58 = phi i64 [ 7, %50 ], [ %56, %52 ]
  %59 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !21
  %61 = icmp ult i32 %60, 32
  br i1 %61, label %62, label %66

62:                                               ; preds = %57
  %63 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %64 = trunc i32 %60 to i16
  %65 = add nuw nsw i16 %64, 112
  br label %69

66:                                               ; preds = %57
  %67 = zext i32 %60 to i64
  %68 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  br label %69

69:                                               ; preds = %62, %66
  %70 = phi i16 [ 146, %66 ], [ %65, %62 ]
  %71 = phi ptr [ %68, %66 ], [ %63, %62 ]
  %72 = phi i64 [ %67, %66 ], [ %31, %62 ]
  %73 = phi i64 [ %31, %66 ], [ 0, %62 ]
  %74 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %71, i64 0, i32 1
  br label %117

75:                                               ; preds = %44
  %76 = load i64, ptr @frame_pointer_fb_offset, align 8, !tbaa !38
  %77 = add nsw i64 %76, %31
  %78 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %79 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %78, i64 0, i32 1
  br label %117

80:                                               ; preds = %2
  %81 = load i32, ptr @optimize, align 4, !tbaa !21
  %82 = icmp eq i32 %81, 0
  %83 = icmp ne ptr %9, null
  %84 = select i1 %82, i1 %83, i1 false
  br i1 %84, label %85, label %98

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.dw_fde_struct, ptr %9, i64 0, i32 12
  %87 = load i32, ptr %86, align 8, !tbaa !88
  %88 = getelementptr i8, ptr %0, i64 8
  %89 = load i32, ptr %88, align 8, !tbaa !17
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct.dw_fde_struct, ptr %9, i64 0, i32 13
  %93 = load i32, ptr %92, align 4, !tbaa !78
  %94 = icmp eq i32 %93, %89
  br i1 %94, label %95, label %98

95:                                               ; preds = %91, %85
  %96 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %97 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %96, i64 0, i32 1
  br label %117

98:                                               ; preds = %15, %80, %91
  %99 = getelementptr i8, ptr %0, i64 8
  %100 = load i32, ptr %99, align 8, !tbaa !17
  %101 = icmp ult i32 %100, 53
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12476, ptr noundef nonnull @.str.5) #31
  br label %103

103:                                              ; preds = %98, %102
  %104 = zext i32 %100 to i64
  %105 = getelementptr inbounds [53 x i32], ptr @svr4_dbx_register_map, i64 0, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !21
  %107 = icmp ult i32 %106, 32
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %110 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %109, i64 0, i32 1
  %111 = trunc i32 %106 to i16
  %112 = add nuw nsw i16 %111, 112
  br label %117

113:                                              ; preds = %103
  %114 = zext i32 %106 to i64
  %115 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %116 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %115, i64 0, i32 1
  br label %117

117:                                              ; preds = %69, %75, %113, %108, %95
  %118 = phi ptr [ %74, %69 ], [ %79, %75 ], [ %116, %113 ], [ %110, %108 ], [ %97, %95 ]
  %119 = phi i16 [ %70, %69 ], [ 145, %75 ], [ 146, %113 ], [ %112, %108 ], [ 145, %95 ]
  %120 = phi ptr [ %71, %69 ], [ %78, %75 ], [ %115, %113 ], [ %109, %108 ], [ %96, %95 ]
  %121 = phi i64 [ %72, %69 ], [ %77, %75 ], [ %114, %113 ], [ %1, %108 ], [ %1, %95 ]
  %122 = phi i64 [ %73, %69 ], [ 0, %75 ], [ %1, %113 ], [ 0, %108 ], [ 0, %95 ]
  %123 = load i16, ptr %118, align 8
  %124 = and i16 %123, -256
  %125 = or i16 %124, %119
  store i16 %125, ptr %118, align 8
  %126 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %120, i64 0, i32 3
  store i32 6, ptr %126, align 8, !tbaa !52
  %127 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %120, i64 0, i32 3, i32 1
  store i64 %121, ptr %127, align 8, !tbaa !17
  %128 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %120, i64 0, i32 4
  store i32 6, ptr %128, align 8, !tbaa !49
  %129 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %120, i64 0, i32 4, i32 1
  store i64 %122, ptr %129, align 8, !tbaa !17
  ret ptr %120
}

declare ptr @gen_rtx_fmt_ee_stat(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @eliminate_regs(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #11

declare zeroext i8 @should_emit_struct_debug(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_type_die_with_usage(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = alloca %struct.array_descr_info, align 8
  call void @llvm.lifetime.start.p0(i64 288, ptr nonnull %4) #31
  %5 = icmp eq ptr %0, null
  %6 = load ptr, ptr @global_trees, align 16
  %7 = icmp eq ptr %6, %0
  %8 = select i1 %5, i1 true, i1 %7
  br i1 %8, label %429, label %9

9:                                                ; preds = %3
  %10 = getelementptr %struct.tree_type, ptr %0, i64 0, i32 12
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %46, label %13

13:                                               ; preds = %9
  %14 = load i64, ptr %11, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 35
  br i1 %16, label %17, label %46

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_decl_non_common, ptr %11, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %17
  %22 = load i64, ptr %0, align 8
  %23 = and i64 %22, 4194304
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %429

25:                                               ; preds = %21
  %26 = icmp eq ptr %19, %0
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 18982, ptr noundef nonnull @.str.5) #31
  %28 = load ptr, ptr %10, align 8, !tbaa !17
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi ptr [ %11, %25 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.tree_decl_minimal, ptr %30, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = load i64, ptr %32, align 8
  %36 = and i64 %35, 65535
  %37 = icmp eq i64 %36, 38
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = tail call fastcc ptr @get_context_die(ptr noundef nonnull %32)
  %40 = load ptr, ptr %10, align 8, !tbaa !17
  br label %41

41:                                               ; preds = %38, %34, %29
  %42 = phi ptr [ %40, %38 ], [ %30, %34 ], [ %30, %29 ]
  %43 = phi ptr [ %39, %38 ], [ %1, %34 ], [ %1, %29 ]
  %44 = load i64, ptr %0, align 8
  %45 = or i64 %44, 4194304
  store i64 %45, ptr %0, align 8
  tail call fastcc void @gen_decl_die(ptr noundef %42, ptr noundef null, ptr noundef %43)
  br label %429

46:                                               ; preds = %17, %13, %9
  %47 = load i64, ptr %0, align 8
  %48 = and i64 %47, 4194304
  %49 = icmp eq i64 %48, 0
  %50 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 12), align 8
  %51 = icmp ne ptr %50, null
  %52 = select i1 %49, i1 %51, i1 false
  br i1 %52, label %53, label %336

53:                                               ; preds = %46
  %54 = call zeroext i8 %50(ptr noundef nonnull %0, ptr noundef nonnull %4) #31
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %336, label %56

56:                                               ; preds = %53
  %57 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %58 = icmp slt i32 %57, 3
  %59 = load i32, ptr @dwarf_strict, align 4
  %60 = icmp ne i32 %59, 0
  %61 = select i1 %58, i1 %60, i1 false
  br i1 %61, label %336, label %62

62:                                               ; preds = %56
  %63 = call fastcc ptr @scope_die_for(ptr noundef nonnull %0, ptr noundef %1)
  %64 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 1, ptr %64, align 8, !tbaa !185
  %65 = icmp eq ptr %63, null
  br i1 %65, label %82, label %66

66:                                               ; preds = %62
  %67 = icmp eq ptr %64, %63
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %69

69:                                               ; preds = %68, %66
  %70 = getelementptr inbounds %struct.die_struct, ptr %64, i64 0, i32 3
  store ptr %63, ptr %70, align 8, !tbaa !174
  %71 = getelementptr inbounds %struct.die_struct, ptr %63, i64 0, i32 4
  %72 = load ptr, ptr %71, align 8, !tbaa !175
  %73 = icmp eq ptr %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.die_struct, ptr %72, i64 0, i32 5
  %76 = load ptr, ptr %75, align 8, !tbaa !176
  %77 = getelementptr inbounds %struct.die_struct, ptr %64, i64 0, i32 5
  store ptr %76, ptr %77, align 8, !tbaa !176
  br label %80

78:                                               ; preds = %69
  %79 = getelementptr inbounds %struct.die_struct, ptr %64, i64 0, i32 5
  br label %80

80:                                               ; preds = %78, %74
  %81 = phi ptr [ %79, %78 ], [ %75, %74 ]
  store ptr %64, ptr %81, align 8, !tbaa !176
  store ptr %64, ptr %71, align 8, !tbaa !175
  br label %87

82:                                               ; preds = %62
  %83 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %64, ptr %83, align 8, !tbaa !173
  %84 = getelementptr inbounds %struct.limbo_die_struct, ptr %83, i64 0, i32 1
  store ptr %0, ptr %84, align 8, !tbaa !177
  %85 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %86 = getelementptr inbounds %struct.limbo_die_struct, ptr %83, i64 0, i32 2
  store ptr %85, ptr %86, align 8, !tbaa !171
  store ptr %83, ptr @limbo_die_list, align 8, !tbaa !6
  br label %87

87:                                               ; preds = %80, %82
  %88 = load ptr, ptr %10, align 8, !tbaa !17
  %89 = icmp eq ptr %88, null
  br i1 %89, label %121, label %90

90:                                               ; preds = %87
  %91 = load i64, ptr %88, align 8
  %92 = trunc i64 %91 to i16
  switch i16 %92, label %121 [
    i16 1, label %105
    i16 35, label %93
  ]

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.tree_decl_common, ptr %88, i64 0, i32 2
  %95 = load i64, ptr %94, align 8
  %96 = and i64 %95, 1024
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %121

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.tree_decl_minimal, ptr %88, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !17
  %101 = icmp eq ptr %100, null
  br i1 %101, label %121, label %102

102:                                              ; preds = %98
  %103 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %104 = call ptr %103(ptr noundef nonnull %88, i32 noundef 2) #31
  br label %108

105:                                              ; preds = %90
  %106 = getelementptr inbounds %struct.tree_identifier, ptr %88, i64 0, i32 1
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  br label %108

108:                                              ; preds = %105, %102
  %109 = phi ptr [ %107, %105 ], [ %104, %102 ]
  %110 = icmp eq ptr %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %108
  %112 = load i8, ptr %109, align 1, !tbaa !17
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %121, label %114

114:                                              ; preds = %111
  %115 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %116 = icmp eq ptr %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = call ptr %115(ptr noundef nonnull %109) #31
  br label %119

119:                                              ; preds = %117, %114
  %120 = phi ptr [ %118, %117 ], [ %109, %114 ]
  call fastcc void @add_AT_string(ptr noundef nonnull %64, i32 noundef 3, ptr noundef %120)
  br label %121

121:                                              ; preds = %111, %90, %93, %98, %87, %108, %119
  %122 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 11
  store ptr %64, ptr %122, align 8, !tbaa !17
  %123 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %124

124:                                              ; preds = %158, %121
  %125 = phi ptr [ %123, %121 ], [ %159, %158 ]
  %126 = icmp eq ptr %125, null
  br i1 %126, label %170, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.die_struct, ptr %125, i64 0, i32 2
  %129 = load ptr, ptr %128, align 8, !tbaa !157
  %130 = icmp eq ptr %129, null
  br i1 %130, label %170, label %131

131:                                              ; preds = %127, %152
  %132 = phi ptr [ %153, %152 ], [ %129, %127 ]
  %133 = phi ptr [ %154, %152 ], [ %129, %127 ]
  %134 = phi i64 [ %156, %152 ], [ 0, %127 ]
  %135 = phi ptr [ %155, %152 ], [ null, %127 ]
  %136 = load i32, ptr %133, align 8, !tbaa !159
  %137 = zext i32 %136 to i64
  %138 = icmp ult i64 %134, %137
  br i1 %138, label %139, label %158

139:                                              ; preds = %131
  %140 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %133, i64 0, i32 2, i64 %134
  %141 = load i32, ptr %140, align 8, !tbaa !161
  switch i32 %141, label %152 [
    i32 19, label %161
    i32 71, label %142
    i32 49, label %142
  ]

142:                                              ; preds = %139, %139
  %143 = getelementptr i8, ptr %140, i64 8
  %144 = load i32, ptr %143, align 8, !tbaa !163
  %145 = icmp eq i32 %144, 10
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %147 = load ptr, ptr %128, align 8, !tbaa !157
  br label %148

148:                                              ; preds = %146, %142
  %149 = phi ptr [ %132, %142 ], [ %147, %146 ]
  %150 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %133, i64 0, i32 2, i64 %134, i32 1, i32 1
  %151 = load ptr, ptr %150, align 8, !tbaa !17
  br label %152

152:                                              ; preds = %148, %139
  %153 = phi ptr [ %149, %148 ], [ %132, %139 ]
  %154 = phi ptr [ %149, %148 ], [ %133, %139 ]
  %155 = phi ptr [ %151, %148 ], [ %135, %139 ]
  %156 = add nuw nsw i64 %134, 1
  %157 = icmp eq ptr %154, null
  br i1 %157, label %158, label %131, !llvm.loop !164

158:                                              ; preds = %152, %131
  %159 = phi ptr [ %155, %152 ], [ %135, %131 ]
  %160 = icmp eq ptr %159, null
  br i1 %160, label %170, label %124

161:                                              ; preds = %139
  %162 = getelementptr i8, ptr %140, i64 8
  %163 = load i32, ptr %162, align 8, !tbaa !163
  %164 = icmp eq i32 %163, 6
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %166

166:                                              ; preds = %165, %161
  %167 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %133, i64 0, i32 2, i64 %134, i32 1, i32 1
  %168 = load i64, ptr %167, align 8, !tbaa !17
  %169 = trunc i64 %168 to i32
  br label %170

170:                                              ; preds = %124, %127, %158, %166
  %171 = phi i32 [ %169, %166 ], [ 0, %158 ], [ 0, %127 ], [ 0, %124 ]
  %172 = add i32 %171, -9
  %173 = icmp ult i32 %172, -2
  %174 = icmp ne i32 %171, 14
  %175 = and i1 %174, %173
  %176 = load i32, ptr %4, align 8
  %177 = icmp slt i32 %176, 2
  %178 = select i1 %175, i1 true, i1 %177
  %179 = icmp eq ptr %64, null
  %180 = or i1 %179, %178
  br i1 %180, label %206, label %181

181:                                              ; preds = %170
  %182 = getelementptr inbounds %struct.die_struct, ptr %64, i64 0, i32 2
  %183 = load ptr, ptr %182, align 8, !tbaa !6
  %184 = icmp eq ptr %183, null
  br i1 %184, label %185, label %188

185:                                              ; preds = %181
  %186 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %186, ptr %182, align 8, !tbaa !157
  %187 = icmp eq ptr %186, null
  br i1 %187, label %194, label %188

188:                                              ; preds = %185, %181
  %189 = phi ptr [ %186, %185 ], [ %183, %181 ]
  %190 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %189, i64 0, i32 1
  %191 = load i32, ptr %190, align 4, !tbaa !201
  %192 = load i32, ptr %189, align 8, !tbaa !159
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %194, label %198

194:                                              ; preds = %188, %185
  %195 = phi ptr [ %189, %188 ], [ null, %185 ]
  %196 = call ptr @vec_gc_o_reserve(ptr noundef %195, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %196, ptr %182, align 8, !tbaa !6
  %197 = load i32, ptr %196, align 8, !tbaa !159
  br label %198

198:                                              ; preds = %194, %188
  %199 = phi i32 [ %192, %188 ], [ %197, %194 ]
  %200 = phi ptr [ %189, %188 ], [ %196, %194 ]
  %201 = add i32 %199, 1
  store i32 %201, ptr %200, align 8, !tbaa !159
  %202 = zext i32 %199 to i64
  %203 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %200, i64 0, i32 2, i64 %202
  store i32 9, ptr %203, align 8, !tbaa.struct !179
  %204 = getelementptr inbounds i8, ptr %203, i64 8
  store i32 6, ptr %204, align 8, !tbaa.struct !202
  %205 = getelementptr inbounds i8, ptr %203, i64 16
  store i64 1, ptr %205, align 8, !tbaa.struct !203
  br label %206

206:                                              ; preds = %198, %170
  %207 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 3
  %208 = load ptr, ptr %207, align 8, !tbaa !348
  %209 = icmp eq ptr %208, null
  br i1 %209, label %213, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 2
  %212 = load ptr, ptr %211, align 8, !tbaa !350
  call fastcc void @add_descr_info_field(ptr noundef %64, i32 noundef 80, ptr noundef nonnull %208, ptr noundef %212)
  br label %213

213:                                              ; preds = %210, %206
  %214 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 5
  %215 = load ptr, ptr %214, align 8, !tbaa !351
  %216 = icmp eq ptr %215, null
  br i1 %216, label %220, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 2
  %219 = load ptr, ptr %218, align 8, !tbaa !350
  call fastcc void @add_descr_info_field(ptr noundef %64, i32 noundef 79, ptr noundef nonnull %215, ptr noundef %219)
  br label %220

220:                                              ; preds = %217, %213
  %221 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 4
  %222 = load ptr, ptr %221, align 8, !tbaa !352
  %223 = icmp eq ptr %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 2
  %226 = load ptr, ptr %225, align 8, !tbaa !350
  call fastcc void @add_descr_info_field(ptr noundef %64, i32 noundef 78, ptr noundef nonnull %222, ptr noundef %226)
  br label %227

227:                                              ; preds = %224, %220
  %228 = load i32, ptr %4, align 8, !tbaa !353
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %291

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.die_struct, ptr %64, i64 0, i32 4
  %232 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 2
  br label %233

233:                                              ; preds = %230, %286
  %234 = phi i64 [ 0, %230 ], [ %287, %286 ]
  %235 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 33, ptr %235, align 8, !tbaa !185
  br i1 %179, label %251, label %236

236:                                              ; preds = %233
  %237 = icmp eq ptr %235, %64
  br i1 %237, label %238, label %239

238:                                              ; preds = %236
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %239

239:                                              ; preds = %238, %236
  %240 = getelementptr inbounds %struct.die_struct, ptr %235, i64 0, i32 3
  store ptr %64, ptr %240, align 8, !tbaa !174
  %241 = load ptr, ptr %231, align 8, !tbaa !175
  %242 = icmp eq ptr %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %struct.die_struct, ptr %241, i64 0, i32 5
  %245 = load ptr, ptr %244, align 8, !tbaa !176
  %246 = getelementptr inbounds %struct.die_struct, ptr %235, i64 0, i32 5
  store ptr %245, ptr %246, align 8, !tbaa !176
  br label %249

247:                                              ; preds = %239
  %248 = getelementptr inbounds %struct.die_struct, ptr %235, i64 0, i32 5
  br label %249

249:                                              ; preds = %247, %243
  %250 = phi ptr [ %248, %247 ], [ %244, %243 ]
  store ptr %235, ptr %250, align 8, !tbaa !176
  store ptr %235, ptr %231, align 8, !tbaa !175
  br label %256

251:                                              ; preds = %233
  %252 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %235, ptr %252, align 8, !tbaa !173
  %253 = getelementptr inbounds %struct.limbo_die_struct, ptr %252, i64 0, i32 1
  store ptr null, ptr %253, align 8, !tbaa !177
  %254 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %255 = getelementptr inbounds %struct.limbo_die_struct, ptr %252, i64 0, i32 2
  store ptr %254, ptr %255, align 8, !tbaa !171
  store ptr %252, ptr @limbo_die_list, align 8, !tbaa !6
  br label %256

256:                                              ; preds = %249, %251
  %257 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 6, i64 %234
  %258 = load ptr, ptr %257, align 8, !tbaa !354
  %259 = icmp eq ptr %258, null
  br i1 %259, label %274, label %260

260:                                              ; preds = %256
  %261 = call i32 @host_integerp(ptr noundef nonnull %258, i32 noundef 0) #31
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %260
  %264 = call fastcc i32 @lower_bound_default(), !range !356
  %265 = icmp eq i32 %264, -1
  br i1 %265, label %271, label %266

266:                                              ; preds = %263
  %267 = load ptr, ptr %257, align 8, !tbaa !354
  %268 = call i64 @tree_low_cst(ptr noundef %267, i32 noundef 0) #31
  %269 = zext i32 %264 to i64
  %270 = icmp eq i64 %268, %269
  br i1 %270, label %274, label %271

271:                                              ; preds = %266, %263, %260
  %272 = load ptr, ptr %257, align 8, !tbaa !354
  %273 = load ptr, ptr %232, align 8, !tbaa !350
  call fastcc void @add_descr_info_field(ptr noundef nonnull %235, i32 noundef 34, ptr noundef %272, ptr noundef %273)
  br label %274

274:                                              ; preds = %271, %266, %256
  %275 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 6, i64 %234, i32 1
  %276 = load ptr, ptr %275, align 8, !tbaa !357
  %277 = icmp eq ptr %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = load ptr, ptr %232, align 8, !tbaa !350
  call fastcc void @add_descr_info_field(ptr noundef nonnull %235, i32 noundef 47, ptr noundef nonnull %276, ptr noundef %279)
  br label %280

280:                                              ; preds = %278, %274
  %281 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 6, i64 %234, i32 2
  %282 = load ptr, ptr %281, align 8, !tbaa !358
  %283 = icmp eq ptr %282, null
  br i1 %283, label %286, label %284

284:                                              ; preds = %280
  %285 = load ptr, ptr %232, align 8, !tbaa !350
  call fastcc void @add_descr_info_field(ptr noundef nonnull %235, i32 noundef 81, ptr noundef nonnull %282, ptr noundef %285)
  br label %286

286:                                              ; preds = %284, %280
  %287 = add nuw nsw i64 %234, 1
  %288 = load i32, ptr %4, align 8, !tbaa !353
  %289 = sext i32 %288 to i64
  %290 = icmp slt i64 %287, %289
  br i1 %290, label %233, label %291, !llvm.loop !359

291:                                              ; preds = %286, %227
  %292 = getelementptr inbounds %struct.array_descr_info, ptr %4, i64 0, i32 1
  %293 = load ptr, ptr %292, align 8, !tbaa !360
  call fastcc void @gen_type_die_with_usage(ptr noundef %293, ptr noundef %1, i32 noundef 1)
  %294 = load ptr, ptr %292, align 8, !tbaa !360
  call fastcc void @add_type_attribute(ptr noundef %64, ptr noundef %294, i32 noundef 0, i32 noundef 0, ptr noundef %1)
  br label %295

295:                                              ; preds = %329, %291
  %296 = phi ptr [ %64, %291 ], [ %330, %329 ]
  %297 = icmp eq ptr %296, null
  br i1 %297, label %333, label %298

298:                                              ; preds = %295
  %299 = getelementptr inbounds %struct.die_struct, ptr %296, i64 0, i32 2
  %300 = load ptr, ptr %299, align 8, !tbaa !157
  %301 = icmp eq ptr %300, null
  br i1 %301, label %333, label %302

302:                                              ; preds = %298, %323
  %303 = phi ptr [ %324, %323 ], [ %300, %298 ]
  %304 = phi ptr [ %325, %323 ], [ %300, %298 ]
  %305 = phi i64 [ %327, %323 ], [ 0, %298 ]
  %306 = phi ptr [ %326, %323 ], [ null, %298 ]
  %307 = load i32, ptr %304, align 8, !tbaa !159
  %308 = zext i32 %307 to i64
  %309 = icmp ult i64 %305, %308
  br i1 %309, label %310, label %329

310:                                              ; preds = %302
  %311 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %304, i64 0, i32 2, i64 %305
  %312 = load i32, ptr %311, align 8, !tbaa !161
  switch i32 %312, label %323 [
    i32 3, label %332
    i32 71, label %313
    i32 49, label %313
  ]

313:                                              ; preds = %310, %310
  %314 = getelementptr i8, ptr %311, i64 8
  %315 = load i32, ptr %314, align 8, !tbaa !163
  %316 = icmp eq i32 %315, 10
  br i1 %316, label %319, label %317

317:                                              ; preds = %313
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %318 = load ptr, ptr %299, align 8, !tbaa !157
  br label %319

319:                                              ; preds = %317, %313
  %320 = phi ptr [ %303, %313 ], [ %318, %317 ]
  %321 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %304, i64 0, i32 2, i64 %305, i32 1, i32 1
  %322 = load ptr, ptr %321, align 8, !tbaa !17
  br label %323

323:                                              ; preds = %310, %319
  %324 = phi ptr [ %320, %319 ], [ %303, %310 ]
  %325 = phi ptr [ %320, %319 ], [ %304, %310 ]
  %326 = phi ptr [ %322, %319 ], [ %306, %310 ]
  %327 = add nuw nsw i64 %305, 1
  %328 = icmp eq ptr %325, null
  br i1 %328, label %329, label %302, !llvm.loop !164

329:                                              ; preds = %323, %302
  %330 = phi ptr [ %326, %323 ], [ %306, %302 ]
  %331 = icmp eq ptr %330, null
  br i1 %331, label %333, label %295

332:                                              ; preds = %310
  call fastcc void @add_pubtype(ptr noundef nonnull %0, ptr noundef %64)
  br label %333

333:                                              ; preds = %298, %329, %295, %332
  %334 = load i64, ptr %0, align 8
  %335 = or i64 %334, 4194304
  store i64 %335, ptr %0, align 8
  br label %429

336:                                              ; preds = %56, %53, %46
  %337 = load i64, ptr %0, align 8
  %338 = and i64 %337, 65535
  %339 = icmp eq i64 %338, 14
  br i1 %339, label %353, label %340

340:                                              ; preds = %336
  %341 = getelementptr i8, ptr %0, i64 128
  %342 = load ptr, ptr %341, align 8, !tbaa !17
  %343 = load i64, ptr %342, align 8
  %344 = and i64 %343, 65535
  %345 = icmp eq i64 %344, 15
  br i1 %345, label %346, label %353

346:                                              ; preds = %340, %346
  %347 = phi ptr [ %349, %346 ], [ %342, %340 ]
  %348 = getelementptr inbounds %struct.tree_type, ptr %347, i64 0, i32 16
  %349 = load ptr, ptr %348, align 8, !tbaa !17
  %350 = icmp eq ptr %347, %349
  br i1 %350, label %351, label %346, !llvm.loop !361

351:                                              ; preds = %346
  %352 = load i64, ptr %347, align 8
  br label %353

353:                                              ; preds = %351, %340, %336
  %354 = phi i64 [ %337, %336 ], [ %343, %340 ], [ %352, %351 ]
  %355 = phi ptr [ %0, %336 ], [ %342, %340 ], [ %347, %351 ]
  %356 = and i64 %354, 4194304
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %429

358:                                              ; preds = %353
  %359 = trunc i64 %354 to i16
  switch i16 %359, label %425 [
    i16 0, label %426
    i16 10, label %360
    i16 12, label %360
    i16 5, label %364
    i16 20, label %369
    i16 21, label %372
    i16 15, label %375
    i16 14, label %376
    i16 6, label %377
    i16 16, label %377
    i16 17, label %377
    i16 18, label %377
    i16 19, label %426
    i16 8, label %426
    i16 9, label %426
    i16 11, label %426
    i16 13, label %426
    i16 7, label %426
    i16 22, label %426
  ]

360:                                              ; preds = %358, %358
  %361 = or i64 %354, 4194304
  store i64 %361, ptr %355, align 8
  %362 = getelementptr inbounds %struct.tree_common, ptr %355, i64 0, i32 2
  %363 = load ptr, ptr %362, align 8, !tbaa !17
  call fastcc void @gen_type_die_with_usage(ptr noundef %363, ptr noundef %1, i32 noundef 2)
  br label %426

364:                                              ; preds = %358
  %365 = getelementptr inbounds %struct.tree_type, ptr %355, i64 0, i32 14
  %366 = load ptr, ptr %365, align 8, !tbaa !17
  call fastcc void @gen_type_die_with_usage(ptr noundef %366, ptr noundef %1, i32 noundef 2)
  %367 = getelementptr inbounds %struct.tree_common, ptr %355, i64 0, i32 2
  %368 = load ptr, ptr %367, align 8, !tbaa !17
  call fastcc void @gen_type_die_with_usage(ptr noundef %368, ptr noundef %1, i32 noundef 2)
  call fastcc void @gen_ptr_to_mbr_type_die(ptr noundef nonnull %355, ptr noundef %1)
  br label %426

369:                                              ; preds = %358
  %370 = getelementptr inbounds %struct.tree_common, ptr %355, i64 0, i32 2
  %371 = load ptr, ptr %370, align 8, !tbaa !17
  call fastcc void @gen_type_die_with_usage(ptr noundef %371, ptr noundef %1, i32 noundef 1)
  call fastcc void @gen_subroutine_type_die(ptr noundef nonnull %355, ptr noundef %1)
  br label %426

372:                                              ; preds = %358
  %373 = getelementptr inbounds %struct.tree_common, ptr %355, i64 0, i32 2
  %374 = load ptr, ptr %373, align 8, !tbaa !17
  call fastcc void @gen_type_die_with_usage(ptr noundef %374, ptr noundef %1, i32 noundef 1)
  call fastcc void @gen_subroutine_type_die(ptr noundef nonnull %355, ptr noundef %1)
  br label %426

375:                                              ; preds = %358
  call fastcc void @gen_array_type_die(ptr noundef nonnull %355, ptr noundef %1)
  br label %426

376:                                              ; preds = %358
  call fastcc void @gen_array_type_die(ptr noundef nonnull %355, ptr noundef %1)
  br label %426

377:                                              ; preds = %358, %358, %358, %358
  %378 = getelementptr inbounds %struct.tree_type, ptr %355, i64 0, i32 18
  %379 = load ptr, ptr %378, align 8, !tbaa !17
  %380 = icmp eq ptr %379, null
  br i1 %380, label %407, label %381

381:                                              ; preds = %377
  %382 = load i64, ptr %379, align 8
  %383 = trunc i64 %382 to i32
  %384 = and i32 %383, 65535
  %385 = add nsw i32 %384, -15
  %386 = icmp ult i32 %385, 4
  %387 = and i64 %382, 4194304
  %388 = icmp eq i64 %387, 0
  %389 = and i1 %388, %386
  br i1 %389, label %390, label %399

390:                                              ; preds = %381
  call fastcc void @gen_type_die_with_usage(ptr noundef nonnull %379, ptr noundef %1, i32 noundef %2)
  %391 = load i64, ptr %355, align 8
  %392 = and i64 %391, 4194304
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %429

394:                                              ; preds = %390
  %395 = load ptr, ptr %378, align 8, !tbaa !17
  call fastcc void @push_decl_scope(ptr noundef %395)
  %396 = load ptr, ptr %378, align 8, !tbaa !17
  %397 = getelementptr i8, ptr %396, i64 88
  %398 = load ptr, ptr %397, align 8, !tbaa !17
  br label %409

399:                                              ; preds = %381
  %400 = and i64 %382, 65535
  %401 = icmp eq i64 %400, 29
  br i1 %401, label %402, label %407

402:                                              ; preds = %399
  %403 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %404 = getelementptr inbounds %struct.tree_decl_minimal, ptr %379, i64 0, i32 2
  %405 = load i32, ptr %404, align 4, !tbaa !17
  %406 = call ptr @htab_find_with_hash(ptr noundef %403, ptr noundef nonnull %379, i32 noundef %405) #31
  br label %409

407:                                              ; preds = %377, %399
  %408 = call fastcc ptr @declare_in_namespace(ptr noundef nonnull %355, ptr noundef %1)
  br label %409

409:                                              ; preds = %402, %407, %394
  %410 = phi ptr [ %406, %402 ], [ %408, %407 ], [ %398, %394 ]
  %411 = phi i1 [ true, %402 ], [ true, %407 ], [ false, %394 ]
  %412 = load i64, ptr %355, align 8
  %413 = and i64 %412, 65535
  %414 = icmp eq i64 %413, 6
  br i1 %414, label %415, label %419

415:                                              ; preds = %409
  %416 = and i64 %412, 4194304
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %418, label %420

418:                                              ; preds = %415
  call fastcc void @gen_enumeration_type_die(ptr noundef nonnull %355, ptr noundef %410)
  br label %420

419:                                              ; preds = %409
  call fastcc void @gen_struct_or_union_type_die(ptr noundef nonnull %355, ptr noundef %410, i32 noundef %2)
  br label %420

420:                                              ; preds = %415, %418, %419
  br i1 %411, label %429, label %421

421:                                              ; preds = %420
  %422 = load ptr, ptr @decl_scope_table, align 8
  %423 = load i32, ptr %422, align 8, !tbaa !182
  %424 = add i32 %423, -1
  store i32 %424, ptr %422, align 8, !tbaa !182
  br label %429

425:                                              ; preds = %358
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19145, ptr noundef nonnull @.str.5) #31
  br label %426

426:                                              ; preds = %358, %358, %358, %358, %358, %358, %425, %358, %358, %376, %375, %372, %369, %364, %360
  %427 = load i64, ptr %355, align 8
  %428 = or i64 %427, 4194304
  store i64 %428, ptr %355, align 8
  br label %429

429:                                              ; preds = %420, %421, %390, %353, %21, %3, %426, %333, %41
  call void @llvm.lifetime.end.p0(i64 288, ptr nonnull %4) #31
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc ptr @get_context_die(ptr noundef %0) unnamed_addr #2 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %5
  %7 = load i32, ptr %6, align 4, !tbaa !17
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %28

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = getelementptr i8, ptr %11, i64 88
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %32

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 18
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = tail call fastcc ptr @get_context_die(ptr noundef %17)
  %19 = load i64, ptr %11, align 8
  %20 = trunc i64 %19 to i32
  %21 = lshr i32 %20, 20
  %22 = and i32 %21, 1
  %23 = lshr i32 %20, 19
  %24 = and i32 %23, 1
  %25 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %11, i32 noundef %22, i32 noundef %24, ptr noundef %18)
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %15
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19414, ptr noundef nonnull @.str.5) #31
  br label %32

28:                                               ; preds = %3
  %29 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %0)
  br label %32

30:                                               ; preds = %1
  %31 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %32

32:                                               ; preds = %27, %15, %9, %30, %28
  %33 = phi ptr [ %29, %28 ], [ %31, %30 ], [ %13, %9 ], [ %25, %15 ], [ null, %27 ]
  ret ptr %33
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_decl_die(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #10 {
  %4 = alloca [30 x i8], align 16
  %5 = icmp eq ptr %0, null
  %6 = select i1 %5, ptr %1, ptr %0
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %8
  %10 = load i32, ptr %9, align 4, !tbaa !17
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 1024
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %838

17:                                               ; preds = %12, %3
  %18 = trunc i64 %7 to i16
  switch i16 %18, label %833 [
    i16 0, label %838
    i16 33, label %19
    i16 29, label %179
    i16 35, label %248
    i16 30, label %371
    i16 32, label %466
    i16 36, label %466
    i16 31, label %585
    i16 34, label %604
    i16 38, label %617
    i16 39, label %617
  ]

19:                                               ; preds = %17
  %20 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %21

21:                                               ; preds = %55, %19
  %22 = phi ptr [ %20, %19 ], [ %56, %55 ]
  %23 = icmp eq ptr %22, null
  br i1 %23, label %838, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.die_struct, ptr %22, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !157
  %27 = icmp eq ptr %26, null
  br i1 %27, label %838, label %28

28:                                               ; preds = %24, %49
  %29 = phi ptr [ %50, %49 ], [ %26, %24 ]
  %30 = phi ptr [ %51, %49 ], [ %26, %24 ]
  %31 = phi i64 [ %53, %49 ], [ 0, %24 ]
  %32 = phi ptr [ %52, %49 ], [ null, %24 ]
  %33 = load i32, ptr %30, align 8, !tbaa !159
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %31, %34
  br i1 %35, label %36, label %55

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %31
  %38 = load i32, ptr %37, align 8, !tbaa !161
  switch i32 %38, label %49 [
    i32 19, label %58
    i32 71, label %39
    i32 49, label %39
  ]

39:                                               ; preds = %36, %36
  %40 = getelementptr i8, ptr %37, i64 8
  %41 = load i32, ptr %40, align 8, !tbaa !163
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %44 = load ptr, ptr %25, align 8, !tbaa !157
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi ptr [ %29, %39 ], [ %44, %43 ]
  %47 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %31, i32 1, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  br label %49

49:                                               ; preds = %45, %36
  %50 = phi ptr [ %46, %45 ], [ %29, %36 ]
  %51 = phi ptr [ %46, %45 ], [ %30, %36 ]
  %52 = phi ptr [ %48, %45 ], [ %32, %36 ]
  %53 = add nuw nsw i64 %31, 1
  %54 = icmp eq ptr %51, null
  br i1 %54, label %55, label %28, !llvm.loop !164

55:                                               ; preds = %49, %28
  %56 = phi ptr [ %52, %49 ], [ %32, %28 ]
  %57 = icmp eq ptr %56, null
  br i1 %57, label %838, label %21

58:                                               ; preds = %36
  %59 = getelementptr i8, ptr %37, i64 8
  %60 = load i32, ptr %59, align 8, !tbaa !163
  %61 = icmp eq i32 %60, 6
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %63

63:                                               ; preds = %58, %62
  %64 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %31, i32 1, i32 1
  %65 = load i64, ptr %64, align 8, !tbaa !17
  %66 = trunc i64 %65 to i32
  switch i32 %66, label %838 [
    i32 14, label %67
    i32 8, label %67
    i32 7, label %67
  ]

67:                                               ; preds = %63, %63, %63
  %68 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %69, ptr noundef %2, i32 noundef 1)
  %70 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %71 = icmp ult i32 %70, 2
  br i1 %71, label %96, label %72

72:                                               ; preds = %67
  %73 = load i64, ptr %0, align 8
  %74 = and i64 %73, 65535
  %75 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !17
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %96

82:                                               ; preds = %78, %72
  %83 = tail call fastcc ptr @setup_namespace_context(ptr noundef nonnull %0, ptr noundef %2)
  %84 = icmp eq ptr %83, %2
  br i1 %84, label %96, label %85

85:                                               ; preds = %82
  %86 = tail call fastcc zeroext i8 @is_fortran(), !range !155
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %96

88:                                               ; preds = %85
  %89 = load i64, ptr %0, align 8
  %90 = and i64 %89, 65535
  %91 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !17
  %93 = icmp eq i32 %92, 3
  br i1 %93, label %94, label %95

94:                                               ; preds = %88
  tail call fastcc void @gen_decl_die(ptr noundef nonnull %0, ptr noundef null, ptr noundef %83)
  br label %96

95:                                               ; preds = %88
  tail call fastcc void @gen_type_die_with_usage(ptr noundef nonnull %0, ptr noundef %83, i32 noundef 1)
  br label %96

96:                                               ; preds = %67, %78, %82, %85, %94, %95
  %97 = phi ptr [ %2, %67 ], [ %2, %78 ], [ %83, %85 ], [ %2, %94 ], [ %2, %95 ], [ %2, %82 ]
  %98 = load ptr, ptr %68, align 8, !tbaa !17
  %99 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 39, ptr %99, align 8, !tbaa !185
  %100 = icmp eq ptr %97, null
  br i1 %100, label %117, label %101

101:                                              ; preds = %96
  %102 = icmp eq ptr %99, %97
  br i1 %102, label %103, label %104

103:                                              ; preds = %101
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %104

104:                                              ; preds = %103, %101
  %105 = getelementptr inbounds %struct.die_struct, ptr %99, i64 0, i32 3
  store ptr %97, ptr %105, align 8, !tbaa !174
  %106 = getelementptr inbounds %struct.die_struct, ptr %97, i64 0, i32 4
  %107 = load ptr, ptr %106, align 8, !tbaa !175
  %108 = icmp eq ptr %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %struct.die_struct, ptr %107, i64 0, i32 5
  %111 = load ptr, ptr %110, align 8, !tbaa !176
  %112 = getelementptr inbounds %struct.die_struct, ptr %99, i64 0, i32 5
  store ptr %111, ptr %112, align 8, !tbaa !176
  br label %115

113:                                              ; preds = %104
  %114 = getelementptr inbounds %struct.die_struct, ptr %99, i64 0, i32 5
  br label %115

115:                                              ; preds = %113, %109
  %116 = phi ptr [ %114, %113 ], [ %110, %109 ]
  store ptr %99, ptr %116, align 8, !tbaa !176
  store ptr %99, ptr %106, align 8, !tbaa !175
  br label %122

117:                                              ; preds = %96
  %118 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %99, ptr %118, align 8, !tbaa !173
  %119 = getelementptr inbounds %struct.limbo_die_struct, ptr %118, i64 0, i32 1
  store ptr %0, ptr %119, align 8, !tbaa !177
  %120 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %121 = getelementptr inbounds %struct.limbo_die_struct, ptr %118, i64 0, i32 2
  store ptr %120, ptr %121, align 8, !tbaa !171
  store ptr %118, ptr @limbo_die_list, align 8, !tbaa !6
  br label %122

122:                                              ; preds = %115, %117
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %99, ptr noundef nonnull %0)
  tail call fastcc void @add_type_attribute(ptr noundef nonnull %99, ptr noundef %98, i32 noundef 1, i32 noundef 0, ptr noundef %97)
  %123 = load i64, ptr %0, align 8
  %124 = and i64 %123, 134217728
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  tail call fastcc void @add_AT_flag(ptr noundef nonnull %99, i32 noundef 63)
  br label %127

127:                                              ; preds = %126, %122
  %128 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %129 = load i64, ptr %128, align 8
  %130 = and i64 %129, 4096
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %127
  tail call fastcc void @add_AT_flag(ptr noundef nonnull %99, i32 noundef 52)
  br label %133

133:                                              ; preds = %132, %127
  %134 = load i64, ptr %0, align 8
  %135 = and i64 %134, 1638398
  %136 = icmp eq i64 %135, 1048608
  br i1 %136, label %137, label %838

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %139 = load ptr, ptr %138, align 8, !tbaa !17
  %140 = icmp eq ptr %139, null
  br i1 %140, label %838, label %141

141:                                              ; preds = %137, %173
  %142 = phi ptr [ %174, %173 ], [ %99, %137 ]
  %143 = getelementptr inbounds %struct.die_struct, ptr %142, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8, !tbaa !157
  %145 = icmp eq ptr %144, null
  br i1 %145, label %176, label %146

146:                                              ; preds = %141, %167
  %147 = phi ptr [ %168, %167 ], [ %144, %141 ]
  %148 = phi ptr [ %169, %167 ], [ %144, %141 ]
  %149 = phi i64 [ %171, %167 ], [ 0, %141 ]
  %150 = phi ptr [ %170, %167 ], [ null, %141 ]
  %151 = load i32, ptr %148, align 8, !tbaa !159
  %152 = zext i32 %151 to i64
  %153 = icmp ult i64 %149, %152
  br i1 %153, label %154, label %173

154:                                              ; preds = %146
  %155 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %148, i64 0, i32 2, i64 %149
  %156 = load i32, ptr %155, align 8, !tbaa !161
  switch i32 %156, label %167 [
    i32 28, label %838
    i32 71, label %157
    i32 49, label %157
  ]

157:                                              ; preds = %154, %154
  %158 = getelementptr i8, ptr %155, i64 8
  %159 = load i32, ptr %158, align 8, !tbaa !163
  %160 = icmp eq i32 %159, 10
  br i1 %160, label %163, label %161

161:                                              ; preds = %157
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %162 = load ptr, ptr %143, align 8, !tbaa !157
  br label %163

163:                                              ; preds = %161, %157
  %164 = phi ptr [ %147, %157 ], [ %162, %161 ]
  %165 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %148, i64 0, i32 2, i64 %149, i32 1, i32 1
  %166 = load ptr, ptr %165, align 8, !tbaa !17
  br label %167

167:                                              ; preds = %163, %154
  %168 = phi ptr [ %164, %163 ], [ %147, %154 ]
  %169 = phi ptr [ %164, %163 ], [ %148, %154 ]
  %170 = phi ptr [ %166, %163 ], [ %150, %154 ]
  %171 = add nuw nsw i64 %149, 1
  %172 = icmp eq ptr %169, null
  br i1 %172, label %173, label %146, !llvm.loop !164

173:                                              ; preds = %167, %146
  %174 = phi ptr [ %170, %167 ], [ %150, %146 ]
  %175 = icmp eq ptr %174, null
  br i1 %175, label %176, label %141

176:                                              ; preds = %173, %141
  %177 = load ptr, ptr %138, align 8, !tbaa !17
  %178 = tail call fastcc zeroext i8 @tree_add_const_value_attribute(ptr noundef nonnull %99, ptr noundef %177), !range !155
  br label %838

179:                                              ; preds = %17
  %180 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 5
  %181 = load ptr, ptr %180, align 8, !tbaa !17
  %182 = icmp eq ptr %181, null
  br i1 %182, label %183, label %195

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 4
  %185 = load ptr, ptr %184, align 8, !tbaa !17
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %195

187:                                              ; preds = %183
  %188 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %189 = icmp eq ptr %188, null
  br i1 %189, label %838, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %192 = load i64, ptr %191, align 8
  %193 = and i64 %192, 4096
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %838

195:                                              ; preds = %190, %183, %179
  %196 = icmp eq ptr %1, null
  br i1 %196, label %197, label %241

197:                                              ; preds = %195
  %198 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %199 = load ptr, ptr %198, align 8, !tbaa !17
  %200 = icmp eq ptr %199, null
  %201 = icmp eq ptr %199, %0
  %202 = or i1 %200, %201
  br i1 %202, label %204, label %203

203:                                              ; preds = %197
  tail call void @dwarf2out_abstract_function(ptr noundef nonnull %199)
  br label %246

204:                                              ; preds = %197
  %205 = tail call zeroext i8 @cgraph_function_possibly_inlined_p(ptr noundef nonnull %0) #31
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %221, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %209 = load i64, ptr %208, align 8
  %210 = and i64 %209, 2048
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %221

212:                                              ; preds = %207
  %213 = icmp eq ptr %2, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = load i32, ptr %2, align 8, !tbaa !185
  switch i32 %215, label %216 [
    i32 19, label %221
    i32 2, label %221
    i32 56, label %221
    i32 23, label %221
    i32 57, label %221
  ]

216:                                              ; preds = %214, %212
  %217 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %218 = load ptr, ptr %217, align 8, !tbaa !17
  %219 = icmp eq ptr %218, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %216
  tail call void @dwarf2out_abstract_function(ptr noundef nonnull %0)
  tail call void @set_decl_origin_self(ptr noundef nonnull %0) #31
  br label %246

221:                                              ; preds = %214, %214, %214, %214, %214, %216, %207, %204
  %222 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %223 = icmp ugt i32 %222, 1
  br i1 %223, label %224, label %246

224:                                              ; preds = %221
  %225 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %226 = load ptr, ptr %225, align 8, !tbaa !17
  %227 = getelementptr inbounds %struct.tree_common, ptr %226, i64 0, i32 2
  %228 = load ptr, ptr %227, align 8, !tbaa !17
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %228, ptr noundef %2, i32 noundef 1)
  %229 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 4
  %230 = load ptr, ptr %229, align 8, !tbaa !17
  %231 = icmp eq ptr %230, null
  br i1 %231, label %235, label %232

232:                                              ; preds = %224
  %233 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %234 = load ptr, ptr %233, align 8, !tbaa !17
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %234, ptr noundef %2, i32 noundef 1)
  br label %235

235:                                              ; preds = %224, %232
  %236 = tail call fastcc ptr @decl_class_context(ptr noundef nonnull %0)
  %237 = icmp eq ptr %236, null
  br i1 %237, label %239, label %238

238:                                              ; preds = %235
  tail call fastcc void @gen_type_die_for_member(ptr noundef nonnull %236, ptr noundef nonnull %0, ptr noundef %2)
  br label %239

239:                                              ; preds = %238, %235
  %240 = tail call fastcc ptr @declare_in_namespace(ptr noundef nonnull %0, ptr noundef %2)
  br label %246

241:                                              ; preds = %195
  %242 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  %243 = load ptr, ptr %242, align 8, !tbaa !17
  %244 = icmp eq ptr %243, null
  %245 = select i1 %244, ptr %1, ptr %243
  tail call void @dwarf2out_abstract_function(ptr noundef nonnull %245)
  br i1 %5, label %838, label %246

246:                                              ; preds = %221, %239, %220, %203, %241
  %247 = phi ptr [ %2, %241 ], [ %2, %203 ], [ %2, %220 ], [ %2, %221 ], [ %240, %239 ]
  tail call fastcc void @gen_subprogram_die(ptr noundef nonnull %0, ptr noundef %247)
  br label %838

248:                                              ; preds = %17
  %249 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %250 = icmp ult i32 %249, 2
  br i1 %250, label %838, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %253 = load ptr, ptr %252, align 8, !tbaa !17
  %254 = icmp eq ptr %253, null
  br i1 %254, label %283, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %257 = load i64, ptr %256, align 8
  %258 = and i64 %257, 4096
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %286, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !17
  %263 = load i64, ptr %262, align 8
  %264 = freeze i64 %263
  %265 = and i64 %264, 65534
  %266 = icmp eq i64 %265, 16
  br i1 %266, label %269, label %267

267:                                              ; preds = %260
  %268 = trunc i64 %264 to i16
  switch i16 %268, label %286 [
    i16 18, label %269
    i16 6, label %269
  ]

269:                                              ; preds = %267, %267, %260
  %270 = getelementptr inbounds %struct.tree_common, ptr %262, i64 0, i32 1
  %271 = load ptr, ptr %270, align 8, !tbaa !17
  %272 = icmp eq ptr %271, %0
  br i1 %272, label %283, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %275 = load ptr, ptr %274, align 8, !tbaa !17
  %276 = icmp eq ptr %275, null
  br i1 %276, label %286, label %277

277:                                              ; preds = %273
  %278 = tail call fastcc ptr @decl_ultimate_origin(ptr noundef nonnull %0)
  %279 = load ptr, ptr %261, align 8, !tbaa !17
  %280 = getelementptr inbounds %struct.tree_common, ptr %279, i64 0, i32 1
  %281 = load ptr, ptr %280, align 8, !tbaa !17
  %282 = icmp eq ptr %278, %281
  br i1 %282, label %283, label %286

283:                                              ; preds = %277, %269, %251
  %284 = tail call fastcc ptr @decl_ultimate_origin(ptr noundef nonnull %0)
  %285 = icmp eq ptr %284, null
  br i1 %285, label %286, label %838

286:                                              ; preds = %267, %283, %277, %273, %255
  %287 = load ptr, ptr %252, align 8, !tbaa !17
  %288 = icmp eq ptr %287, null
  br i1 %288, label %289, label %292

289:                                              ; preds = %286
  %290 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %291 = load ptr, ptr %290, align 8, !tbaa !17
  br label %368

292:                                              ; preds = %286
  %293 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %294 = load i64, ptr %293, align 8
  %295 = and i64 %294, 4096
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %370, label %297

297:                                              ; preds = %292
  %298 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %299 = load ptr, ptr %298, align 8, !tbaa !17
  %300 = load i64, ptr %299, align 8
  %301 = freeze i64 %300
  %302 = and i64 %301, 65534
  %303 = icmp eq i64 %302, 16
  br i1 %303, label %306, label %304

304:                                              ; preds = %297
  %305 = trunc i64 %301 to i16
  switch i16 %305, label %345 [
    i16 18, label %306
    i16 6, label %306
  ]

306:                                              ; preds = %304, %304, %297
  %307 = getelementptr inbounds %struct.tree_common, ptr %299, i64 0, i32 1
  %308 = load ptr, ptr %307, align 8, !tbaa !17
  %309 = icmp eq ptr %308, %0
  br i1 %309, label %368, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %312 = load ptr, ptr %311, align 8, !tbaa !17
  %313 = icmp eq ptr %312, null
  br i1 %313, label %345, label %314

314:                                              ; preds = %310
  %315 = load i64, ptr %0, align 8
  %316 = and i64 %315, 65535
  %317 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %316, i64 10
  %318 = load i8, ptr %317, align 2, !tbaa !17
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %314
  %321 = and i64 %294, 2048
  %322 = icmp ne i64 %321, 0
  %323 = icmp eq ptr %312, %0
  %324 = and i1 %322, %323
  br i1 %324, label %336, label %325

325:                                              ; preds = %320
  %326 = getelementptr inbounds %struct.tree_decl_common, ptr %312, i64 0, i32 7
  %327 = load ptr, ptr %326, align 8, !tbaa !17
  %328 = icmp eq ptr %327, null
  %329 = icmp eq ptr %327, %312
  %330 = or i1 %328, %329
  br i1 %330, label %336, label %331

331:                                              ; preds = %325
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %332 = load ptr, ptr %311, align 8, !tbaa !17
  %333 = load ptr, ptr %298, align 8, !tbaa !17
  %334 = getelementptr inbounds %struct.tree_common, ptr %333, i64 0, i32 1
  %335 = load ptr, ptr %334, align 8, !tbaa !17
  br label %336

336:                                              ; preds = %331, %325, %320, %314
  %337 = phi ptr [ %299, %314 ], [ %299, %325 ], [ %333, %331 ], [ %299, %320 ]
  %338 = phi ptr [ %308, %314 ], [ %308, %325 ], [ %335, %331 ], [ %308, %320 ]
  %339 = phi ptr [ null, %314 ], [ %312, %325 ], [ %332, %331 ], [ null, %320 ]
  %340 = icmp eq ptr %339, %338
  br i1 %340, label %368, label %341

341:                                              ; preds = %336
  %342 = load i64, ptr %293, align 8
  %343 = and i64 %342, 4096
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %370, label %345

345:                                              ; preds = %341, %310, %304
  %346 = phi ptr [ %337, %341 ], [ %299, %310 ], [ %299, %304 ]
  %347 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %348 = load ptr, ptr %347, align 8, !tbaa !17
  %349 = icmp eq ptr %348, null
  br i1 %349, label %370, label %350

350:                                              ; preds = %345
  %351 = load i64, ptr %348, align 8
  %352 = freeze i64 %351
  %353 = and i64 %352, 65534
  %354 = icmp eq i64 %353, 16
  br i1 %354, label %357, label %355

355:                                              ; preds = %350
  %356 = trunc i64 %352 to i16
  switch i16 %356, label %370 [
    i16 18, label %357
    i16 6, label %357
  ]

357:                                              ; preds = %355, %355, %350
  %358 = getelementptr inbounds %struct.tree_type, ptr %348, i64 0, i32 12
  %359 = load ptr, ptr %358, align 8, !tbaa !17
  %360 = load i64, ptr %359, align 8
  %361 = and i64 %360, 65535
  %362 = icmp eq i64 %361, 35
  br i1 %362, label %363, label %370

363:                                              ; preds = %357
  %364 = load ptr, ptr %252, align 8, !tbaa !17
  %365 = getelementptr inbounds %struct.tree_decl_minimal, ptr %359, i64 0, i32 3
  %366 = load ptr, ptr %365, align 8, !tbaa !17
  %367 = icmp eq ptr %364, %366
  br i1 %367, label %368, label %370

368:                                              ; preds = %289, %336, %306, %363
  %369 = phi ptr [ %291, %289 ], [ %337, %336 ], [ %299, %306 ], [ %346, %363 ]
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %369, ptr noundef %2, i32 noundef 1)
  br label %838

370:                                              ; preds = %363, %357, %355, %345, %341, %292
  tail call fastcc void @gen_typedef_die(ptr noundef nonnull %0, ptr noundef %2)
  br label %838

371:                                              ; preds = %17
  %372 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %373 = icmp ugt i32 %372, 1
  br i1 %373, label %374, label %838

374:                                              ; preds = %371
  %375 = load i64, ptr %0, align 8
  %376 = and i64 %375, 65535
  %377 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %376, i64 10
  %378 = load i8, ptr %377, align 2, !tbaa !17
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %399, label %380

380:                                              ; preds = %374
  %381 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %382 = load i64, ptr %381, align 8
  %383 = and i64 %382, 2048
  %384 = icmp ne i64 %383, 0
  %385 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %386 = load ptr, ptr %385, align 8, !tbaa !17
  %387 = icmp eq ptr %386, %0
  %388 = select i1 %384, i1 %387, i1 false
  br i1 %388, label %399, label %389

389:                                              ; preds = %380
  %390 = icmp eq ptr %386, null
  %391 = select i1 %390, ptr %0, ptr %386
  %392 = getelementptr inbounds %struct.tree_decl_common, ptr %391, i64 0, i32 7
  %393 = load ptr, ptr %392, align 8, !tbaa !17
  %394 = icmp eq ptr %393, null
  %395 = icmp eq ptr %393, %391
  %396 = or i1 %394, %395
  br i1 %396, label %399, label %397

397:                                              ; preds = %389
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %398 = load ptr, ptr %385, align 8, !tbaa !17
  br label %399

399:                                              ; preds = %374, %380, %389, %397
  %400 = phi ptr [ null, %374 ], [ %386, %389 ], [ %398, %397 ], [ null, %380 ]
  %401 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 10, ptr %401, align 8, !tbaa !185
  %402 = icmp eq ptr %2, null
  br i1 %402, label %419, label %403

403:                                              ; preds = %399
  %404 = icmp eq ptr %401, %2
  br i1 %404, label %405, label %406

405:                                              ; preds = %403
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %406

406:                                              ; preds = %405, %403
  %407 = getelementptr inbounds %struct.die_struct, ptr %401, i64 0, i32 3
  store ptr %2, ptr %407, align 8, !tbaa !174
  %408 = getelementptr inbounds %struct.die_struct, ptr %2, i64 0, i32 4
  %409 = load ptr, ptr %408, align 8, !tbaa !175
  %410 = icmp eq ptr %409, null
  br i1 %410, label %415, label %411

411:                                              ; preds = %406
  %412 = getelementptr inbounds %struct.die_struct, ptr %409, i64 0, i32 5
  %413 = load ptr, ptr %412, align 8, !tbaa !176
  %414 = getelementptr inbounds %struct.die_struct, ptr %401, i64 0, i32 5
  store ptr %413, ptr %414, align 8, !tbaa !176
  br label %417

415:                                              ; preds = %406
  %416 = getelementptr inbounds %struct.die_struct, ptr %401, i64 0, i32 5
  br label %417

417:                                              ; preds = %415, %411
  %418 = phi ptr [ %416, %415 ], [ %412, %411 ]
  store ptr %401, ptr %418, align 8, !tbaa !176
  store ptr %401, ptr %408, align 8, !tbaa !175
  br label %424

419:                                              ; preds = %399
  %420 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %401, ptr %420, align 8, !tbaa !173
  %421 = getelementptr inbounds %struct.limbo_die_struct, ptr %420, i64 0, i32 1
  store ptr %0, ptr %421, align 8, !tbaa !177
  %422 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %423 = getelementptr inbounds %struct.limbo_die_struct, ptr %420, i64 0, i32 2
  store ptr %422, ptr %423, align 8, !tbaa !171
  store ptr %420, ptr @limbo_die_list, align 8, !tbaa !6
  br label %424

424:                                              ; preds = %417, %419
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %4) #31
  %425 = icmp eq ptr %400, null
  br i1 %425, label %428, label %426

426:                                              ; preds = %424
  %427 = tail call fastcc ptr @add_abstract_origin_attribute(ptr noundef nonnull %401, ptr noundef nonnull %400)
  br label %429

428:                                              ; preds = %424
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %401, ptr noundef nonnull %0)
  br label %429

429:                                              ; preds = %428, %426
  %430 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %431 = load i64, ptr %430, align 8
  %432 = and i64 %431, 2048
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %440, label %434

434:                                              ; preds = %429
  %435 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %436 = load i32, ptr %435, align 4, !tbaa !17
  %437 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %438 = tail call ptr @htab_find_slot_with_hash(ptr noundef %437, ptr noundef nonnull %0, i32 noundef %436, i32 noundef 1) #31
  store ptr %401, ptr %438, align 8, !tbaa !6
  %439 = getelementptr inbounds %struct.die_struct, ptr %401, i64 0, i32 11
  store i32 %436, ptr %439, align 8, !tbaa !268
  br label %465

440:                                              ; preds = %429
  %441 = load i64, ptr %0, align 8
  %442 = and i64 %441, 65535
  %443 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %442, i64 11
  %444 = load i8, ptr %443, align 1, !tbaa !17
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %465, label %446

446:                                              ; preds = %440
  %447 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %0, i64 0, i32 1
  %448 = load ptr, ptr %447, align 8, !tbaa !17
  %449 = icmp eq ptr %448, null
  br i1 %449, label %465, label %450

450:                                              ; preds = %446
  %451 = load i32, ptr %448, align 8
  %452 = trunc i32 %451 to i16
  switch i16 %452, label %465 [
    i16 12, label %457
    i16 13, label %453
  ]

453:                                              ; preds = %450
  %454 = getelementptr inbounds %struct.rtx_def, ptr %448, i64 1
  %455 = load i32, ptr %454, align 8, !tbaa !17
  %456 = icmp eq i32 %455, 1
  br i1 %456, label %457, label %465

457:                                              ; preds = %453, %450
  %458 = and i32 %451, 134217728
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %461, label %460

460:                                              ; preds = %457
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 18463, ptr noundef nonnull @.str.5) #31
  br label %461

461:                                              ; preds = %460, %457
  %462 = getelementptr inbounds %struct.rtx_def, ptr %448, i64 1, i32 1
  %463 = load i32, ptr %462, align 8, !tbaa !17
  %464 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.319, i32 noundef %463)
  call fastcc void @add_AT_lbl_id(ptr noundef nonnull %401, i32 noundef 17, ptr noundef nonnull %4)
  br label %465

465:                                              ; preds = %440, %434, %446, %450, %453, %461
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %4) #31
  br label %838

466:                                              ; preds = %17, %17
  %467 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %468 = icmp ult i32 %467, 2
  br i1 %468, label %838, label %469

469:                                              ; preds = %466
  switch i16 %18, label %478 [
    i16 34, label %470
    i16 36, label %470
    i16 32, label %470
  ]

470:                                              ; preds = %469, %469, %469
  %471 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %472 = load i64, ptr %471, align 8
  %473 = and i64 %472, 268435456
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %478, label %475

475:                                              ; preds = %470
  %476 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %477 = load ptr, ptr %476, align 8, !tbaa !17
  br label %478

478:                                              ; preds = %470, %469, %475
  %479 = phi ptr [ %477, %475 ], [ %6, %469 ], [ %6, %470 ]
  %480 = getelementptr inbounds %struct.tree_common, ptr %479, i64 0, i32 2
  %481 = load ptr, ptr %480, align 8, !tbaa !17
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %481, ptr noundef %2, i32 noundef 1)
  %482 = load i64, ptr %6, align 8
  %483 = and i64 %482, 65535
  %484 = icmp eq i64 %483, 29
  br i1 %484, label %485, label %489

485:                                              ; preds = %478
  %486 = getelementptr inbounds %struct.tree_decl_non_common, ptr %6, i64 0, i32 4
  %487 = load ptr, ptr %486, align 8, !tbaa !17
  %488 = icmp eq ptr %487, null
  br i1 %488, label %489, label %491

489:                                              ; preds = %485, %478
  %490 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 4
  br label %501

491:                                              ; preds = %485
  %492 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %493 = load ptr, ptr %492, align 8, !tbaa !17
  %494 = getelementptr inbounds %struct.tree_type, ptr %493, i64 0, i32 1
  %495 = load ptr, ptr %494, align 8, !tbaa !17
  %496 = getelementptr inbounds %struct.tree_list, ptr %495, i64 0, i32 2
  %497 = load ptr, ptr %496, align 8, !tbaa !17
  %498 = getelementptr inbounds %struct.tree_common, ptr %497, i64 0, i32 2
  %499 = load ptr, ptr %498, align 8, !tbaa !17
  %500 = getelementptr inbounds %struct.tree_type, ptr %499, i64 0, i32 16
  br label %501

501:                                              ; preds = %491, %489
  %502 = phi ptr [ %490, %489 ], [ %500, %491 ]
  %503 = load ptr, ptr %502, align 8, !tbaa !17
  %504 = icmp eq ptr %503, null
  br i1 %504, label %512, label %505

505:                                              ; preds = %501
  %506 = load i64, ptr %503, align 8
  %507 = and i64 %506, 65535
  %508 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %507
  %509 = load i32, ptr %508, align 4, !tbaa !17
  %510 = icmp eq i32 %509, 2
  br i1 %510, label %511, label %512

511:                                              ; preds = %505
  tail call fastcc void @gen_type_die_for_member(ptr noundef nonnull %503, ptr noundef nonnull %6, ptr noundef %2)
  br label %512

512:                                              ; preds = %501, %505, %511
  %513 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %514 = icmp ult i32 %513, 2
  br i1 %514, label %549, label %515

515:                                              ; preds = %512
  %516 = load i64, ptr %6, align 8
  %517 = and i64 %516, 65535
  %518 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %517
  %519 = load i32, ptr %518, align 4, !tbaa !17
  %520 = icmp eq i32 %519, 3
  br i1 %520, label %521, label %525

521:                                              ; preds = %515
  %522 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 7
  %523 = load ptr, ptr %522, align 8, !tbaa !17
  %524 = icmp eq ptr %523, null
  br i1 %524, label %525, label %549

525:                                              ; preds = %521, %515
  %526 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 4
  %527 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 18
  %528 = select i1 %520, ptr %526, ptr %527
  %529 = load ptr, ptr %528, align 8, !tbaa !17
  %530 = icmp eq ptr %529, null
  br i1 %530, label %549, label %531

531:                                              ; preds = %525
  %532 = load i64, ptr %529, align 8
  %533 = and i64 %532, 65535
  %534 = icmp eq i64 %533, 38
  br i1 %534, label %535, label %549

535:                                              ; preds = %531
  %536 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %529)
  %537 = icmp eq ptr %536, %2
  br i1 %537, label %549, label %538

538:                                              ; preds = %535
  %539 = tail call fastcc zeroext i8 @is_fortran(), !range !155
  %540 = icmp eq i8 %539, 0
  br i1 %540, label %541, label %549

541:                                              ; preds = %538
  %542 = load i64, ptr %6, align 8
  %543 = and i64 %542, 65535
  %544 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %543
  %545 = load i32, ptr %544, align 4, !tbaa !17
  %546 = icmp eq i32 %545, 3
  br i1 %546, label %547, label %548

547:                                              ; preds = %541
  tail call fastcc void @gen_decl_die(ptr noundef nonnull %6, ptr noundef null, ptr noundef %536)
  br label %549

548:                                              ; preds = %541
  tail call fastcc void @gen_type_die_with_usage(ptr noundef nonnull %6, ptr noundef %536, i32 noundef 1)
  br label %549

549:                                              ; preds = %525, %531, %512, %521, %535, %538, %547, %548
  %550 = phi ptr [ %2, %512 ], [ %2, %521 ], [ %536, %538 ], [ %2, %547 ], [ %2, %548 ], [ %2, %535 ], [ %2, %531 ], [ %2, %525 ]
  %551 = load i64, ptr %6, align 8
  %552 = and i64 %551, 65535
  %553 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %552, i64 10
  %554 = load i8, ptr %553, align 2, !tbaa !17
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %584, label %556

556:                                              ; preds = %549
  %557 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %558 = load i64, ptr %557, align 8
  %559 = and i64 %558, 2048
  %560 = icmp ne i64 %559, 0
  %561 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 7
  %562 = load ptr, ptr %561, align 8, !tbaa !17
  %563 = icmp eq ptr %562, %6
  %564 = select i1 %560, i1 %563, i1 false
  br i1 %564, label %584, label %565

565:                                              ; preds = %556
  %566 = icmp eq ptr %562, null
  %567 = select i1 %566, ptr %6, ptr %562
  %568 = getelementptr inbounds %struct.tree_decl_common, ptr %567, i64 0, i32 7
  %569 = load ptr, ptr %568, align 8, !tbaa !17
  %570 = icmp eq ptr %569, null
  %571 = icmp eq ptr %569, %567
  %572 = or i1 %570, %571
  br i1 %572, label %575, label %573

573:                                              ; preds = %565
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %574 = load ptr, ptr %561, align 8, !tbaa !17
  br label %575

575:                                              ; preds = %565, %573
  %576 = phi ptr [ %562, %565 ], [ %574, %573 ]
  %577 = icmp eq ptr %576, null
  br i1 %577, label %584, label %578

578:                                              ; preds = %575
  %579 = load i64, ptr %576, align 8
  %580 = and i64 %579, 65535
  %581 = icmp eq i64 %580, 34
  br i1 %581, label %582, label %584

582:                                              ; preds = %578
  %583 = tail call fastcc ptr @gen_formal_parameter_die(ptr noundef %0, ptr noundef %1, i8 noundef zeroext 1, ptr noundef %550)
  br label %838

584:                                              ; preds = %556, %549, %578, %575
  tail call fastcc void @gen_variable_die(ptr noundef %0, ptr noundef %1, ptr noundef %550)
  br label %838

585:                                              ; preds = %17
  %586 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %587 = load ptr, ptr %586, align 8, !tbaa !17
  %588 = icmp eq ptr %587, null
  br i1 %588, label %589, label %595

589:                                              ; preds = %585
  %590 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %591 = load ptr, ptr %590, align 8, !tbaa !17
  %592 = load i64, ptr %591, align 8
  %593 = and i64 %592, 65534
  %594 = icmp eq i64 %593, 16
  br i1 %594, label %595, label %838

595:                                              ; preds = %589, %585
  %596 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 2
  %597 = load ptr, ptr %596, align 8, !tbaa !17
  %598 = icmp eq ptr %597, null
  br i1 %598, label %599, label %602

599:                                              ; preds = %595
  %600 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %601 = load ptr, ptr %600, align 8, !tbaa !17
  br label %602

602:                                              ; preds = %595, %599
  %603 = phi ptr [ %601, %599 ], [ %597, %595 ]
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %603, ptr noundef %2, i32 noundef 1)
  tail call fastcc void @gen_field_die(ptr noundef nonnull %0, ptr noundef %2)
  br label %838

604:                                              ; preds = %17
  %605 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %606 = load i64, ptr %605, align 8
  %607 = and i64 %606, 268435456
  %608 = icmp eq i64 %607, 0
  %609 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %610 = load ptr, ptr %609, align 8, !tbaa !17
  br i1 %608, label %614, label %611

611:                                              ; preds = %604
  %612 = getelementptr inbounds %struct.tree_common, ptr %610, i64 0, i32 2
  %613 = load ptr, ptr %612, align 8, !tbaa !17
  br label %614

614:                                              ; preds = %604, %611
  %615 = phi ptr [ %613, %611 ], [ %610, %604 ]
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %615, ptr noundef %2, i32 noundef 1)
  %616 = tail call fastcc ptr @gen_formal_parameter_die(ptr noundef %0, ptr noundef %1, i8 noundef zeroext 1, ptr noundef %2)
  br label %838

617:                                              ; preds = %17, %17
  %618 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %619 = icmp slt i32 %618, 3
  %620 = load i32, ptr @dwarf_strict, align 4
  %621 = icmp ne i32 %620, 0
  %622 = select i1 %619, i1 %621, i1 false
  br i1 %622, label %838, label %623

623:                                              ; preds = %617
  %624 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %625 = load ptr, ptr %624, align 8, !tbaa !17
  %626 = icmp eq ptr %625, null
  br i1 %626, label %627, label %751

627:                                              ; preds = %623
  %628 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %629 = load i64, ptr %0, align 8
  %630 = and i64 %629, 65535
  %631 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %630
  %632 = load i32, ptr %631, align 4, !tbaa !17
  %633 = icmp eq i32 %632, 3
  %634 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %635 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %636 = select i1 %633, ptr %634, ptr %635
  %637 = load ptr, ptr %636, align 8, !tbaa !17
  %638 = icmp eq ptr %637, null
  br i1 %638, label %646, label %639

639:                                              ; preds = %627
  %640 = load i64, ptr %637, align 8
  %641 = and i64 %640, 65535
  %642 = icmp eq i64 %641, 38
  br i1 %642, label %643, label %646

643:                                              ; preds = %639
  %644 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %637)
  %645 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %646

646:                                              ; preds = %627, %639, %643
  %647 = phi ptr [ %645, %643 ], [ %628, %639 ], [ %628, %627 ]
  %648 = phi ptr [ %644, %643 ], [ %628, %639 ], [ %628, %627 ]
  br label %649

649:                                              ; preds = %683, %646
  %650 = phi ptr [ %647, %646 ], [ %684, %683 ]
  %651 = icmp eq ptr %650, null
  br i1 %651, label %695, label %652

652:                                              ; preds = %649
  %653 = getelementptr inbounds %struct.die_struct, ptr %650, i64 0, i32 2
  %654 = load ptr, ptr %653, align 8, !tbaa !157
  %655 = icmp eq ptr %654, null
  br i1 %655, label %695, label %656

656:                                              ; preds = %652, %677
  %657 = phi ptr [ %678, %677 ], [ %654, %652 ]
  %658 = phi ptr [ %679, %677 ], [ %654, %652 ]
  %659 = phi i64 [ %681, %677 ], [ 0, %652 ]
  %660 = phi ptr [ %680, %677 ], [ null, %652 ]
  %661 = load i32, ptr %658, align 8, !tbaa !159
  %662 = zext i32 %661 to i64
  %663 = icmp ult i64 %659, %662
  br i1 %663, label %664, label %683

664:                                              ; preds = %656
  %665 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %658, i64 0, i32 2, i64 %659
  %666 = load i32, ptr %665, align 8, !tbaa !161
  switch i32 %666, label %677 [
    i32 19, label %686
    i32 71, label %667
    i32 49, label %667
  ]

667:                                              ; preds = %664, %664
  %668 = getelementptr i8, ptr %665, i64 8
  %669 = load i32, ptr %668, align 8, !tbaa !163
  %670 = icmp eq i32 %669, 10
  br i1 %670, label %673, label %671

671:                                              ; preds = %667
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %672 = load ptr, ptr %653, align 8, !tbaa !157
  br label %673

673:                                              ; preds = %671, %667
  %674 = phi ptr [ %657, %667 ], [ %672, %671 ]
  %675 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %658, i64 0, i32 2, i64 %659, i32 1, i32 1
  %676 = load ptr, ptr %675, align 8, !tbaa !17
  br label %677

677:                                              ; preds = %673, %664
  %678 = phi ptr [ %674, %673 ], [ %657, %664 ]
  %679 = phi ptr [ %674, %673 ], [ %658, %664 ]
  %680 = phi ptr [ %676, %673 ], [ %660, %664 ]
  %681 = add nuw nsw i64 %659, 1
  %682 = icmp eq ptr %679, null
  br i1 %682, label %683, label %656, !llvm.loop !164

683:                                              ; preds = %677, %656
  %684 = phi ptr [ %680, %677 ], [ %660, %656 ]
  %685 = icmp eq ptr %684, null
  br i1 %685, label %695, label %649

686:                                              ; preds = %664
  %687 = getelementptr i8, ptr %665, i64 8
  %688 = load i32, ptr %687, align 8, !tbaa !163
  %689 = icmp eq i32 %688, 6
  br i1 %689, label %691, label %690

690:                                              ; preds = %686
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %691

691:                                              ; preds = %690, %686
  %692 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %658, i64 0, i32 2, i64 %659, i32 1, i32 1
  %693 = load i64, ptr %692, align 8, !tbaa !17
  %694 = trunc i64 %693 to i32
  br label %695

695:                                              ; preds = %649, %652, %683, %691
  %696 = phi i32 [ %694, %691 ], [ 0, %683 ], [ 0, %652 ], [ 0, %649 ]
  %697 = add i32 %696, -9
  %698 = icmp ult i32 %697, -2
  %699 = icmp ne i32 %696, 14
  %700 = and i1 %699, %698
  %701 = select i1 %700, i32 57, i32 30
  %702 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 %701, ptr %702, align 8, !tbaa !185
  %703 = icmp eq ptr %648, null
  br i1 %703, label %720, label %704

704:                                              ; preds = %695
  %705 = icmp eq ptr %702, %648
  br i1 %705, label %706, label %707

706:                                              ; preds = %704
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %707

707:                                              ; preds = %706, %704
  %708 = getelementptr inbounds %struct.die_struct, ptr %702, i64 0, i32 3
  store ptr %648, ptr %708, align 8, !tbaa !174
  %709 = getelementptr inbounds %struct.die_struct, ptr %648, i64 0, i32 4
  %710 = load ptr, ptr %709, align 8, !tbaa !175
  %711 = icmp eq ptr %710, null
  br i1 %711, label %716, label %712

712:                                              ; preds = %707
  %713 = getelementptr inbounds %struct.die_struct, ptr %710, i64 0, i32 5
  %714 = load ptr, ptr %713, align 8, !tbaa !176
  %715 = getelementptr inbounds %struct.die_struct, ptr %702, i64 0, i32 5
  store ptr %714, ptr %715, align 8, !tbaa !176
  br label %718

716:                                              ; preds = %707
  %717 = getelementptr inbounds %struct.die_struct, ptr %702, i64 0, i32 5
  br label %718

718:                                              ; preds = %716, %712
  %719 = phi ptr [ %717, %716 ], [ %713, %712 ]
  store ptr %702, ptr %719, align 8, !tbaa !176
  store ptr %702, ptr %709, align 8, !tbaa !175
  br label %725

720:                                              ; preds = %695
  %721 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %702, ptr %721, align 8, !tbaa !173
  %722 = getelementptr inbounds %struct.limbo_die_struct, ptr %721, i64 0, i32 1
  store ptr %0, ptr %722, align 8, !tbaa !177
  %723 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %724 = getelementptr inbounds %struct.limbo_die_struct, ptr %721, i64 0, i32 2
  store ptr %723, ptr %724, align 8, !tbaa !171
  store ptr %721, ptr @limbo_die_list, align 8, !tbaa !6
  br label %725

725:                                              ; preds = %718, %720
  %726 = load i32, ptr %702, align 8, !tbaa !185
  %727 = icmp eq i32 %726, 30
  br i1 %727, label %728, label %738

728:                                              ; preds = %725
  %729 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %730 = load i64, ptr %729, align 8
  %731 = and i64 %730, 33554432
  %732 = icmp eq i64 %731, 0
  br i1 %732, label %738, label %733

733:                                              ; preds = %728
  %734 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %735 = tail call ptr %734(ptr noundef nonnull %0, i32 noundef 0) #31
  %736 = icmp eq ptr %735, null
  br i1 %736, label %739, label %737

737:                                              ; preds = %733
  tail call fastcc void @add_name_attribute(ptr noundef nonnull %702, ptr noundef nonnull %735)
  br label %739

738:                                              ; preds = %728, %725
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %702, ptr noundef nonnull %0)
  br label %739

739:                                              ; preds = %738, %737, %733
  %740 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %741 = load i64, ptr %740, align 8
  %742 = and i64 %741, 33554432
  %743 = icmp eq i64 %742, 0
  br i1 %743, label %745, label %744

744:                                              ; preds = %739
  tail call fastcc void @add_AT_flag(ptr noundef nonnull %702, i32 noundef 60)
  br label %745

745:                                              ; preds = %744, %739
  %746 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %747 = load i32, ptr %746, align 4, !tbaa !17
  %748 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %749 = tail call ptr @htab_find_slot_with_hash(ptr noundef %748, ptr noundef nonnull %0, i32 noundef %747, i32 noundef 1) #31
  store ptr %702, ptr %749, align 8, !tbaa !6
  %750 = getelementptr inbounds %struct.die_struct, ptr %702, i64 0, i32 11
  store i32 %747, ptr %750, align 8, !tbaa !268
  br label %838

751:                                              ; preds = %623
  %752 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %625)
  %753 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %754 = load ptr, ptr %753, align 8, !tbaa !17
  %755 = icmp eq ptr %754, null
  br i1 %755, label %760, label %756

756:                                              ; preds = %751
  %757 = load i64, ptr %754, align 8
  %758 = and i64 %757, 65535
  %759 = icmp eq i64 %758, 38
  br i1 %759, label %760, label %777

760:                                              ; preds = %756, %751
  %761 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %762 = load i64, ptr %0, align 8
  %763 = and i64 %762, 65535
  %764 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %763
  %765 = load i32, ptr %764, align 4, !tbaa !17
  %766 = icmp eq i32 %765, 3
  %767 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %768 = select i1 %766, ptr %753, ptr %767
  %769 = load ptr, ptr %768, align 8, !tbaa !17
  %770 = icmp eq ptr %769, null
  br i1 %770, label %777, label %771

771:                                              ; preds = %760
  %772 = load i64, ptr %769, align 8
  %773 = and i64 %772, 65535
  %774 = icmp eq i64 %773, 38
  br i1 %774, label %775, label %777

775:                                              ; preds = %771
  %776 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %769)
  br label %777

777:                                              ; preds = %775, %771, %760, %756
  %778 = phi ptr [ %2, %756 ], [ %776, %775 ], [ %761, %771 ], [ %761, %760 ]
  %779 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 8, ptr %779, align 8, !tbaa !185
  %780 = icmp eq ptr %778, null
  br i1 %780, label %797, label %781

781:                                              ; preds = %777
  %782 = icmp eq ptr %779, %778
  br i1 %782, label %783, label %784

783:                                              ; preds = %781
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %784

784:                                              ; preds = %783, %781
  %785 = getelementptr inbounds %struct.die_struct, ptr %779, i64 0, i32 3
  store ptr %778, ptr %785, align 8, !tbaa !174
  %786 = getelementptr inbounds %struct.die_struct, ptr %778, i64 0, i32 4
  %787 = load ptr, ptr %786, align 8, !tbaa !175
  %788 = icmp eq ptr %787, null
  br i1 %788, label %793, label %789

789:                                              ; preds = %784
  %790 = getelementptr inbounds %struct.die_struct, ptr %787, i64 0, i32 5
  %791 = load ptr, ptr %790, align 8, !tbaa !176
  %792 = getelementptr inbounds %struct.die_struct, ptr %779, i64 0, i32 5
  store ptr %791, ptr %792, align 8, !tbaa !176
  br label %795

793:                                              ; preds = %784
  %794 = getelementptr inbounds %struct.die_struct, ptr %779, i64 0, i32 5
  br label %795

795:                                              ; preds = %793, %789
  %796 = phi ptr [ %794, %793 ], [ %790, %789 ]
  store ptr %779, ptr %796, align 8, !tbaa !176
  store ptr %779, ptr %786, align 8, !tbaa !175
  br label %802

797:                                              ; preds = %777
  %798 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %779, ptr %798, align 8, !tbaa !173
  %799 = getelementptr inbounds %struct.limbo_die_struct, ptr %798, i64 0, i32 1
  store ptr %0, ptr %799, align 8, !tbaa !177
  %800 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %801 = getelementptr inbounds %struct.limbo_die_struct, ptr %798, i64 0, i32 2
  store ptr %800, ptr %801, align 8, !tbaa !171
  store ptr %798, ptr @limbo_die_list, align 8, !tbaa !6
  br label %802

802:                                              ; preds = %797, %795
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %779, ptr noundef nonnull %0)
  %803 = getelementptr inbounds %struct.die_struct, ptr %779, i64 0, i32 2
  %804 = load ptr, ptr %803, align 8, !tbaa !6
  %805 = icmp eq ptr %804, null
  br i1 %805, label %806, label %809

806:                                              ; preds = %802
  %807 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %807, ptr %803, align 8, !tbaa !157
  %808 = icmp eq ptr %807, null
  br i1 %808, label %815, label %809

809:                                              ; preds = %806, %802
  %810 = phi ptr [ %807, %806 ], [ %804, %802 ]
  %811 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %810, i64 0, i32 1
  %812 = load i32, ptr %811, align 4, !tbaa !201
  %813 = load i32, ptr %810, align 8, !tbaa !159
  %814 = icmp eq i32 %812, %813
  br i1 %814, label %815, label %819

815:                                              ; preds = %809, %806
  %816 = phi ptr [ %810, %809 ], [ null, %806 ]
  %817 = tail call ptr @vec_gc_o_reserve(ptr noundef %816, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %817, ptr %803, align 8, !tbaa !6
  %818 = load i32, ptr %817, align 8, !tbaa !159
  br label %819

819:                                              ; preds = %809, %815
  %820 = phi i32 [ %813, %809 ], [ %818, %815 ]
  %821 = phi ptr [ %810, %809 ], [ %817, %815 ]
  %822 = add i32 %820, 1
  store i32 %822, ptr %821, align 8, !tbaa !159
  %823 = zext i32 %820 to i64
  %824 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %821, i64 0, i32 2, i64 %823
  store i32 24, ptr %824, align 8, !tbaa.struct !179
  %825 = getelementptr inbounds i8, ptr %824, i64 8
  store i32 10, ptr %825, align 8, !tbaa.struct !202
  %826 = getelementptr inbounds i8, ptr %824, i64 16
  store ptr %752, ptr %826, align 8, !tbaa.struct !203
  %827 = getelementptr inbounds i8, ptr %824, i64 24
  store i32 0, ptr %827, align 8, !tbaa.struct !294
  %828 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %829 = load i32, ptr %828, align 4, !tbaa !17
  %830 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %831 = tail call ptr @htab_find_slot_with_hash(ptr noundef %830, ptr noundef nonnull %0, i32 noundef %829, i32 noundef 1) #31
  store ptr %779, ptr %831, align 8, !tbaa !6
  %832 = getelementptr inbounds %struct.die_struct, ptr %779, i64 0, i32 11
  store i32 %829, ptr %832, align 8, !tbaa !268
  br label %838

833:                                              ; preds = %17
  %834 = load i64, ptr %0, align 8
  %835 = and i64 %834, 65535
  %836 = icmp ugt i64 %835, 188
  br i1 %836, label %838, label %837

837:                                              ; preds = %833
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19709, ptr noundef nonnull @.str.5) #31
  br label %838

838:                                              ; preds = %21, %24, %55, %154, %63, %819, %745, %176, %137, %133, %589, %614, %17, %190, %187, %246, %241, %248, %283, %370, %368, %465, %371, %466, %584, %582, %602, %617, %833, %837, %12
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_ptr_to_mbr_type_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = tail call fastcc ptr @scope_die_for(ptr noundef %0, ptr noundef %1)
  %4 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 31, ptr %4, align 8, !tbaa !185
  %5 = icmp eq ptr %3, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = icmp eq ptr %4, %3
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %9

9:                                                ; preds = %8, %6
  %10 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 3
  store ptr %3, ptr %10, align 8, !tbaa !174
  %11 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %12 = load ptr, ptr %11, align 8, !tbaa !175
  %13 = icmp eq ptr %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.die_struct, ptr %12, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !176
  %17 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 5
  store ptr %16, ptr %17, align 8, !tbaa !176
  br label %20

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 5
  br label %20

20:                                               ; preds = %18, %14
  %21 = phi ptr [ %19, %18 ], [ %15, %14 ]
  store ptr %4, ptr %21, align 8, !tbaa !176
  store ptr %4, ptr %11, align 8, !tbaa !175
  br label %27

22:                                               ; preds = %2
  %23 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %4, ptr %23, align 8, !tbaa !173
  %24 = getelementptr inbounds %struct.limbo_die_struct, ptr %23, i64 0, i32 1
  store ptr %0, ptr %24, align 8, !tbaa !177
  %25 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.limbo_die_struct, ptr %23, i64 0, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !171
  store ptr %23, ptr @limbo_die_list, align 8, !tbaa !6
  br label %27

27:                                               ; preds = %22, %20
  %28 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 11
  store ptr %4, ptr %28, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = getelementptr i8, ptr %30, i64 88
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !6
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %27
  %37 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %37, ptr %33, align 8, !tbaa !157
  %38 = icmp eq ptr %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %36, %27
  %40 = phi ptr [ %37, %36 ], [ %34, %27 ]
  %41 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %40, i64 0, i32 1
  %42 = load i32, ptr %41, align 4, !tbaa !201
  %43 = load i32, ptr %40, align 8, !tbaa !159
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %39, %36
  %46 = phi ptr [ %40, %39 ], [ null, %36 ]
  %47 = tail call ptr @vec_gc_o_reserve(ptr noundef %46, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %47, ptr %33, align 8, !tbaa !6
  %48 = load i32, ptr %47, align 8, !tbaa !159
  br label %49

49:                                               ; preds = %39, %45
  %50 = phi i32 [ %43, %39 ], [ %48, %45 ]
  %51 = phi ptr [ %40, %39 ], [ %47, %45 ]
  %52 = add i32 %50, 1
  store i32 %52, ptr %51, align 8, !tbaa !159
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %51, i64 0, i32 2, i64 %53
  store i32 29, ptr %54, align 8, !tbaa.struct !179
  %55 = getelementptr inbounds i8, ptr %54, i64 8
  store i32 10, ptr %55, align 8, !tbaa.struct !202
  %56 = getelementptr inbounds i8, ptr %54, i64 16
  store ptr %32, ptr %56, align 8, !tbaa.struct !203
  %57 = getelementptr inbounds i8, ptr %54, i64 24
  store i32 0, ptr %57, align 8, !tbaa.struct !294
  %58 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = load i64, ptr %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = and i32 %61, 65535
  %63 = and i32 %61, 65534
  %64 = icmp eq i32 %63, 8
  %65 = icmp eq i32 %62, 11
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %79

67:                                               ; preds = %49
  %68 = getelementptr inbounds %struct.tree_common, ptr %59, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = icmp eq ptr %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.tree_type, ptr %59, i64 0, i32 12
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = icmp eq ptr %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = load i64, ptr %69, align 8
  %77 = trunc i64 %76 to i32
  %78 = and i32 %77, 65535
  br label %79

79:                                               ; preds = %75, %71, %67, %49
  %80 = phi i64 [ %76, %75 ], [ %60, %71 ], [ %60, %67 ], [ %60, %49 ]
  %81 = phi ptr [ %69, %75 ], [ %59, %71 ], [ %59, %67 ], [ %59, %49 ]
  %82 = phi i32 [ %78, %75 ], [ %62, %71 ], [ %62, %67 ], [ %62, %49 ]
  %83 = trunc i32 %82 to i16
  switch i16 %83, label %84 [
    i16 19, label %117
    i16 0, label %117
  ]

84:                                               ; preds = %79
  %85 = trunc i64 %80 to i32
  %86 = lshr i32 %85, 20
  %87 = and i32 %86, 1
  %88 = lshr i32 %85, 19
  %89 = and i32 %88, 1
  %90 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %81, i32 noundef %87, i32 noundef %89, ptr noundef %1)
  %91 = icmp eq ptr %90, null
  br i1 %91, label %117, label %92

92:                                               ; preds = %84
  %93 = load ptr, ptr %33, align 8, !tbaa !6
  %94 = icmp eq ptr %93, null
  br i1 %94, label %95, label %98

95:                                               ; preds = %92
  %96 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %96, ptr %33, align 8, !tbaa !157
  %97 = icmp eq ptr %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %95, %92
  %99 = phi ptr [ %96, %95 ], [ %93, %92 ]
  %100 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %99, i64 0, i32 1
  %101 = load i32, ptr %100, align 4, !tbaa !201
  %102 = load i32, ptr %99, align 8, !tbaa !159
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %98, %95
  %105 = phi ptr [ %99, %98 ], [ null, %95 ]
  %106 = tail call ptr @vec_gc_o_reserve(ptr noundef %105, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %106, ptr %33, align 8, !tbaa !6
  %107 = load i32, ptr %106, align 8, !tbaa !159
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi i32 [ %102, %98 ], [ %107, %104 ]
  %110 = phi ptr [ %99, %98 ], [ %106, %104 ]
  %111 = add i32 %109, 1
  store i32 %111, ptr %110, align 8, !tbaa !159
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %110, i64 0, i32 2, i64 %112
  store i32 73, ptr %113, align 8, !tbaa.struct !179
  %114 = getelementptr inbounds i8, ptr %113, i64 8
  store i32 10, ptr %114, align 8, !tbaa.struct !202
  %115 = getelementptr inbounds i8, ptr %113, i64 16
  store ptr %90, ptr %115, align 8, !tbaa.struct !203
  %116 = getelementptr inbounds i8, ptr %113, i64 24
  store i32 0, ptr %116, align 8, !tbaa.struct !294
  br label %117

117:                                              ; preds = %79, %79, %84, %108
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_subroutine_type_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = tail call fastcc ptr @scope_die_for(ptr noundef %0, ptr noundef %1)
  %6 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 21, ptr %6, align 8, !tbaa !185
  %7 = icmp eq ptr %5, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = icmp eq ptr %6, %5
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %11

11:                                               ; preds = %10, %8
  %12 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 3
  store ptr %5, ptr %12, align 8, !tbaa !174
  %13 = getelementptr inbounds %struct.die_struct, ptr %5, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !175
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.die_struct, ptr %14, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !176
  %19 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 5
  store ptr %18, ptr %19, align 8, !tbaa !176
  br label %22

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 5
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi ptr [ %21, %20 ], [ %17, %16 ]
  store ptr %6, ptr %23, align 8, !tbaa !176
  store ptr %6, ptr %13, align 8, !tbaa !175
  br label %29

24:                                               ; preds = %2
  %25 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %6, ptr %25, align 8, !tbaa !173
  %26 = getelementptr inbounds %struct.limbo_die_struct, ptr %25, i64 0, i32 1
  store ptr %0, ptr %26, align 8, !tbaa !177
  %27 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %28 = getelementptr inbounds %struct.limbo_die_struct, ptr %25, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !171
  store ptr %25, ptr @limbo_die_list, align 8, !tbaa !6
  br label %29

29:                                               ; preds = %22, %24
  %30 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 11
  store ptr %6, ptr %30, align 8, !tbaa !17
  tail call fastcc void @add_prototyped_attribute(ptr noundef nonnull %6, ptr noundef nonnull %0)
  %31 = load i64, ptr %4, align 8
  %32 = trunc i64 %31 to i32
  %33 = and i32 %32, 65535
  %34 = and i32 %32, 65534
  %35 = icmp eq i32 %34, 8
  %36 = icmp eq i32 %33, 11
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = icmp eq ptr %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 12
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = load i64, ptr %40, align 8
  %48 = trunc i64 %47 to i32
  %49 = and i32 %48, 65535
  br label %50

50:                                               ; preds = %46, %42, %38, %29
  %51 = phi i64 [ %47, %46 ], [ %31, %42 ], [ %31, %38 ], [ %31, %29 ]
  %52 = phi ptr [ %40, %46 ], [ %4, %42 ], [ %4, %38 ], [ %4, %29 ]
  %53 = phi i32 [ %49, %46 ], [ %33, %42 ], [ %33, %38 ], [ %33, %29 ]
  %54 = trunc i32 %53 to i16
  switch i16 %54, label %55 [
    i16 19, label %89
    i16 0, label %89
  ]

55:                                               ; preds = %50
  %56 = trunc i64 %51 to i32
  %57 = lshr i32 %56, 20
  %58 = and i32 %57, 1
  %59 = lshr i32 %56, 19
  %60 = and i32 %59, 1
  %61 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %52, i32 noundef %58, i32 noundef %60, ptr noundef %1)
  %62 = icmp eq ptr %61, null
  br i1 %62, label %89, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 2
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %68, ptr %64, align 8, !tbaa !157
  %69 = icmp eq ptr %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %67, %63
  %71 = phi ptr [ %68, %67 ], [ %65, %63 ]
  %72 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %71, i64 0, i32 1
  %73 = load i32, ptr %72, align 4, !tbaa !201
  %74 = load i32, ptr %71, align 8, !tbaa !159
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %70, %67
  %77 = phi ptr [ %71, %70 ], [ null, %67 ]
  %78 = tail call ptr @vec_gc_o_reserve(ptr noundef %77, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %78, ptr %64, align 8, !tbaa !6
  %79 = load i32, ptr %78, align 8, !tbaa !159
  br label %80

80:                                               ; preds = %70, %76
  %81 = phi i32 [ %74, %70 ], [ %79, %76 ]
  %82 = phi ptr [ %71, %70 ], [ %78, %76 ]
  %83 = add i32 %81, 1
  store i32 %83, ptr %82, align 8, !tbaa !159
  %84 = zext i32 %81 to i64
  %85 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %82, i64 0, i32 2, i64 %84
  store i32 73, ptr %85, align 8, !tbaa.struct !179
  %86 = getelementptr inbounds i8, ptr %85, i64 8
  store i32 10, ptr %86, align 8, !tbaa.struct !202
  %87 = getelementptr inbounds i8, ptr %85, i64 16
  store ptr %61, ptr %87, align 8, !tbaa.struct !203
  %88 = getelementptr inbounds i8, ptr %85, i64 24
  store i32 0, ptr %88, align 8, !tbaa.struct !294
  br label %89

89:                                               ; preds = %50, %50, %55, %80
  tail call fastcc void @gen_formal_types_die(ptr noundef nonnull %0, ptr noundef nonnull %6)
  br label %90

90:                                               ; preds = %89, %122
  %91 = phi ptr [ %6, %89 ], [ %123, %122 ]
  %92 = getelementptr inbounds %struct.die_struct, ptr %91, i64 0, i32 2
  %93 = load ptr, ptr %92, align 8, !tbaa !157
  %94 = icmp eq ptr %93, null
  br i1 %94, label %126, label %95

95:                                               ; preds = %90, %116
  %96 = phi ptr [ %117, %116 ], [ %93, %90 ]
  %97 = phi ptr [ %118, %116 ], [ %93, %90 ]
  %98 = phi i64 [ %120, %116 ], [ 0, %90 ]
  %99 = phi ptr [ %119, %116 ], [ null, %90 ]
  %100 = load i32, ptr %97, align 8, !tbaa !159
  %101 = zext i32 %100 to i64
  %102 = icmp ult i64 %98, %101
  br i1 %102, label %103, label %122

103:                                              ; preds = %95
  %104 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %97, i64 0, i32 2, i64 %98
  %105 = load i32, ptr %104, align 8, !tbaa !161
  switch i32 %105, label %116 [
    i32 3, label %125
    i32 71, label %106
    i32 49, label %106
  ]

106:                                              ; preds = %103, %103
  %107 = getelementptr i8, ptr %104, i64 8
  %108 = load i32, ptr %107, align 8, !tbaa !163
  %109 = icmp eq i32 %108, 10
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %111 = load ptr, ptr %92, align 8, !tbaa !157
  br label %112

112:                                              ; preds = %110, %106
  %113 = phi ptr [ %96, %106 ], [ %111, %110 ]
  %114 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %97, i64 0, i32 2, i64 %98, i32 1, i32 1
  %115 = load ptr, ptr %114, align 8, !tbaa !17
  br label %116

116:                                              ; preds = %103, %112
  %117 = phi ptr [ %113, %112 ], [ %96, %103 ]
  %118 = phi ptr [ %113, %112 ], [ %97, %103 ]
  %119 = phi ptr [ %115, %112 ], [ %99, %103 ]
  %120 = add nuw nsw i64 %98, 1
  %121 = icmp eq ptr %118, null
  br i1 %121, label %122, label %95, !llvm.loop !164

122:                                              ; preds = %116, %95
  %123 = phi ptr [ %119, %116 ], [ %99, %95 ]
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %90

125:                                              ; preds = %103
  tail call fastcc void @add_pubtype(ptr noundef %0, ptr noundef nonnull %6)
  br label %126

126:                                              ; preds = %90, %122, %125
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_array_type_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca [15 x i8], align 1
  %4 = tail call fastcc ptr @scope_die_for(ptr noundef %0, ptr noundef %1)
  %5 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %6

6:                                                ; preds = %40, %2
  %7 = phi ptr [ %5, %2 ], [ %41, %40 ]
  %8 = icmp eq ptr %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.die_struct, ptr %7, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !157
  %12 = icmp eq ptr %11, null
  br i1 %12, label %52, label %13

13:                                               ; preds = %9, %34
  %14 = phi ptr [ %35, %34 ], [ %11, %9 ]
  %15 = phi ptr [ %36, %34 ], [ %11, %9 ]
  %16 = phi i64 [ %38, %34 ], [ 0, %9 ]
  %17 = phi ptr [ %37, %34 ], [ null, %9 ]
  %18 = load i32, ptr %15, align 8, !tbaa !159
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %16, %19
  br i1 %20, label %21, label %40

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %15, i64 0, i32 2, i64 %16
  %23 = load i32, ptr %22, align 8, !tbaa !161
  switch i32 %23, label %34 [
    i32 19, label %43
    i32 71, label %24
    i32 49, label %24
  ]

24:                                               ; preds = %21, %21
  %25 = getelementptr i8, ptr %22, i64 8
  %26 = load i32, ptr %25, align 8, !tbaa !163
  %27 = icmp eq i32 %26, 10
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %29 = load ptr, ptr %10, align 8, !tbaa !157
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi ptr [ %14, %24 ], [ %29, %28 ]
  %32 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %15, i64 0, i32 2, i64 %16, i32 1, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  br label %34

34:                                               ; preds = %30, %21
  %35 = phi ptr [ %31, %30 ], [ %14, %21 ]
  %36 = phi ptr [ %31, %30 ], [ %15, %21 ]
  %37 = phi ptr [ %33, %30 ], [ %17, %21 ]
  %38 = add nuw nsw i64 %16, 1
  %39 = icmp eq ptr %36, null
  br i1 %39, label %40, label %13, !llvm.loop !164

40:                                               ; preds = %34, %13
  %41 = phi ptr [ %37, %34 ], [ %17, %13 ]
  %42 = icmp eq ptr %41, null
  br i1 %42, label %52, label %6

43:                                               ; preds = %21
  %44 = getelementptr i8, ptr %22, i64 8
  %45 = load i32, ptr %44, align 8, !tbaa !163
  %46 = icmp eq i32 %45, 6
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %48

48:                                               ; preds = %47, %43
  %49 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %15, i64 0, i32 2, i64 %16, i32 1, i32 1
  %50 = load i64, ptr %49, align 8, !tbaa !17
  %51 = trunc i64 %50 to i32
  br label %52

52:                                               ; preds = %6, %9, %40, %48
  %53 = phi i32 [ %51, %48 ], [ 0, %40 ], [ 0, %9 ], [ 0, %6 ]
  %54 = icmp ne i32 %53, 13
  %55 = icmp ne i32 %53, 3
  %56 = and i1 %54, %55
  %57 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %58 = load i32, ptr %57, align 4
  %59 = and i32 %58, 16777216
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %255, label %61

61:                                               ; preds = %52
  %62 = load i64, ptr %0, align 8
  %63 = and i64 %62, 65535
  %64 = icmp eq i64 %63, 15
  br i1 %64, label %65, label %255

65:                                               ; preds = %61
  %66 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %67

67:                                               ; preds = %101, %65
  %68 = phi ptr [ %66, %65 ], [ %102, %101 ]
  %69 = icmp eq ptr %68, null
  br i1 %69, label %255, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.die_struct, ptr %68, i64 0, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !157
  %73 = icmp eq ptr %72, null
  br i1 %73, label %255, label %74

74:                                               ; preds = %70, %95
  %75 = phi ptr [ %96, %95 ], [ %72, %70 ]
  %76 = phi ptr [ %97, %95 ], [ %72, %70 ]
  %77 = phi i64 [ %99, %95 ], [ 0, %70 ]
  %78 = phi ptr [ %98, %95 ], [ null, %70 ]
  %79 = load i32, ptr %76, align 8, !tbaa !159
  %80 = zext i32 %79 to i64
  %81 = icmp ult i64 %77, %80
  br i1 %81, label %82, label %101

82:                                               ; preds = %74
  %83 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %76, i64 0, i32 2, i64 %77
  %84 = load i32, ptr %83, align 8, !tbaa !161
  switch i32 %84, label %95 [
    i32 19, label %104
    i32 71, label %85
    i32 49, label %85
  ]

85:                                               ; preds = %82, %82
  %86 = getelementptr i8, ptr %83, i64 8
  %87 = load i32, ptr %86, align 8, !tbaa !163
  %88 = icmp eq i32 %87, 10
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %90 = load ptr, ptr %71, align 8, !tbaa !157
  br label %91

91:                                               ; preds = %89, %85
  %92 = phi ptr [ %75, %85 ], [ %90, %89 ]
  %93 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %76, i64 0, i32 2, i64 %77, i32 1, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !17
  br label %95

95:                                               ; preds = %91, %82
  %96 = phi ptr [ %92, %91 ], [ %75, %82 ]
  %97 = phi ptr [ %92, %91 ], [ %76, %82 ]
  %98 = phi ptr [ %94, %91 ], [ %78, %82 ]
  %99 = add nuw nsw i64 %77, 1
  %100 = icmp eq ptr %97, null
  br i1 %100, label %101, label %74, !llvm.loop !164

101:                                              ; preds = %95, %74
  %102 = phi ptr [ %98, %95 ], [ %78, %74 ]
  %103 = icmp eq ptr %102, null
  br i1 %103, label %255, label %67

104:                                              ; preds = %82
  %105 = getelementptr i8, ptr %83, i64 8
  %106 = load i32, ptr %105, align 8, !tbaa !163
  %107 = icmp eq i32 %106, 6
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %109

109:                                              ; preds = %104, %108
  %110 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %76, i64 0, i32 2, i64 %77, i32 1, i32 1
  %111 = load i64, ptr %110, align 8, !tbaa !17
  %112 = trunc i64 %111 to i32
  switch i32 %112, label %255 [
    i32 14, label %113
    i32 8, label %113
    i32 7, label %113
  ]

113:                                              ; preds = %109, %109, %109
  %114 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %115 = load ptr, ptr %114, align 8, !tbaa !17
  %116 = load i64, ptr %115, align 8
  %117 = and i64 %116, 65535
  %118 = icmp eq i64 %117, 14
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = tail call i32 @vector_type_mode(ptr noundef nonnull %115) #31
  br label %126

121:                                              ; preds = %113
  %122 = getelementptr inbounds %struct.tree_type, ptr %115, i64 0, i32 6
  %123 = load i32, ptr %122, align 4
  %124 = lshr i32 %123, 16
  %125 = and i32 %124, 255
  br label %126

126:                                              ; preds = %121, %119
  %127 = phi i32 [ %120, %119 ], [ %125, %121 ]
  %128 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %129 = load i64, ptr %128, align 8
  %130 = and i64 %129, 65535
  %131 = icmp eq i64 %130, 14
  br i1 %131, label %132, label %134

132:                                              ; preds = %126
  %133 = tail call i32 @vector_type_mode(ptr noundef nonnull %128) #31
  br label %139

134:                                              ; preds = %126
  %135 = getelementptr inbounds %struct.tree_type, ptr %128, i64 0, i32 6
  %136 = load i32, ptr %135, align 4
  %137 = lshr i32 %136, 16
  %138 = and i32 %137, 255
  br label %139

139:                                              ; preds = %134, %132
  %140 = phi i32 [ %133, %132 ], [ %138, %134 ]
  %141 = icmp eq i32 %127, %140
  br i1 %141, label %142, label %255

142:                                              ; preds = %139
  %143 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 18, ptr %143, align 8, !tbaa !185
  %144 = icmp eq ptr %4, null
  br i1 %144, label %161, label %145

145:                                              ; preds = %142
  %146 = icmp eq ptr %143, %4
  br i1 %146, label %147, label %148

147:                                              ; preds = %145
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %148

148:                                              ; preds = %147, %145
  %149 = getelementptr inbounds %struct.die_struct, ptr %143, i64 0, i32 3
  store ptr %4, ptr %149, align 8, !tbaa !174
  %150 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 4
  %151 = load ptr, ptr %150, align 8, !tbaa !175
  %152 = icmp eq ptr %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.die_struct, ptr %151, i64 0, i32 5
  %155 = load ptr, ptr %154, align 8, !tbaa !176
  %156 = getelementptr inbounds %struct.die_struct, ptr %143, i64 0, i32 5
  store ptr %155, ptr %156, align 8, !tbaa !176
  br label %159

157:                                              ; preds = %148
  %158 = getelementptr inbounds %struct.die_struct, ptr %143, i64 0, i32 5
  br label %159

159:                                              ; preds = %157, %153
  %160 = phi ptr [ %158, %157 ], [ %154, %153 ]
  store ptr %143, ptr %160, align 8, !tbaa !176
  store ptr %143, ptr %150, align 8, !tbaa !175
  br label %166

161:                                              ; preds = %142
  %162 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %143, ptr %162, align 8, !tbaa !173
  %163 = getelementptr inbounds %struct.limbo_die_struct, ptr %162, i64 0, i32 1
  store ptr %0, ptr %163, align 8, !tbaa !177
  %164 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %165 = getelementptr inbounds %struct.limbo_die_struct, ptr %162, i64 0, i32 2
  store ptr %164, ptr %165, align 8, !tbaa !171
  store ptr %162, ptr @limbo_die_list, align 8, !tbaa !6
  br label %166

166:                                              ; preds = %159, %161
  %167 = getelementptr i8, ptr %0, i64 96
  %168 = load ptr, ptr %167, align 8, !tbaa !17
  %169 = icmp eq ptr %168, null
  br i1 %169, label %201, label %170

170:                                              ; preds = %166
  %171 = load i64, ptr %168, align 8
  %172 = trunc i64 %171 to i16
  switch i16 %172, label %201 [
    i16 1, label %185
    i16 35, label %173
  ]

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.tree_decl_common, ptr %168, i64 0, i32 2
  %175 = load i64, ptr %174, align 8
  %176 = and i64 %175, 1024
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %201

178:                                              ; preds = %173
  %179 = getelementptr inbounds %struct.tree_decl_minimal, ptr %168, i64 0, i32 3
  %180 = load ptr, ptr %179, align 8, !tbaa !17
  %181 = icmp eq ptr %180, null
  br i1 %181, label %201, label %182

182:                                              ; preds = %178
  %183 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %184 = tail call ptr %183(ptr noundef nonnull %168, i32 noundef 2) #31
  br label %188

185:                                              ; preds = %170
  %186 = getelementptr inbounds %struct.tree_identifier, ptr %168, i64 0, i32 1
  %187 = load ptr, ptr %186, align 8, !tbaa !17
  br label %188

188:                                              ; preds = %185, %182
  %189 = phi ptr [ %187, %185 ], [ %184, %182 ]
  %190 = icmp eq ptr %189, null
  br i1 %190, label %201, label %191

191:                                              ; preds = %188
  %192 = load i8, ptr %189, align 1, !tbaa !17
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %201, label %194

194:                                              ; preds = %191
  %195 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %196 = icmp eq ptr %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %194
  %198 = tail call ptr %195(ptr noundef nonnull %189) #31
  br label %199

199:                                              ; preds = %197, %194
  %200 = phi ptr [ %198, %197 ], [ %189, %194 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %143, i32 noundef 3, ptr noundef %200)
  br label %201

201:                                              ; preds = %191, %170, %173, %178, %166, %188, %199
  %202 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 11
  store ptr %143, ptr %202, align 8, !tbaa !17
  %203 = tail call i64 @int_size_in_bytes(ptr noundef nonnull %0) #31
  %204 = icmp sgt i64 %203, -1
  br i1 %204, label %205, label %230

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.die_struct, ptr %143, i64 0, i32 2
  %207 = load ptr, ptr %206, align 8, !tbaa !6
  %208 = icmp eq ptr %207, null
  br i1 %208, label %209, label %212

209:                                              ; preds = %205
  %210 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %210, ptr %206, align 8, !tbaa !157
  %211 = icmp eq ptr %210, null
  br i1 %211, label %218, label %212

212:                                              ; preds = %209, %205
  %213 = phi ptr [ %210, %209 ], [ %207, %205 ]
  %214 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %213, i64 0, i32 1
  %215 = load i32, ptr %214, align 4, !tbaa !201
  %216 = load i32, ptr %213, align 8, !tbaa !159
  %217 = icmp eq i32 %215, %216
  br i1 %217, label %218, label %222

218:                                              ; preds = %212, %209
  %219 = phi ptr [ %213, %212 ], [ null, %209 ]
  %220 = tail call ptr @vec_gc_o_reserve(ptr noundef %219, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %220, ptr %206, align 8, !tbaa !6
  %221 = load i32, ptr %220, align 8, !tbaa !159
  br label %222

222:                                              ; preds = %212, %218
  %223 = phi i32 [ %216, %212 ], [ %221, %218 ]
  %224 = phi ptr [ %213, %212 ], [ %220, %218 ]
  %225 = add i32 %223, 1
  store i32 %225, ptr %224, align 8, !tbaa !159
  %226 = zext i32 %223 to i64
  %227 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %224, i64 0, i32 2, i64 %226
  store i32 11, ptr %227, align 8, !tbaa.struct !179
  %228 = getelementptr inbounds i8, ptr %227, i64 8
  store i32 6, ptr %228, align 8, !tbaa.struct !202
  %229 = getelementptr inbounds i8, ptr %227, i64 16
  store i64 %203, ptr %229, align 8, !tbaa.struct !203
  br label %747

230:                                              ; preds = %201
  %231 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %232 = load ptr, ptr %231, align 8, !tbaa !17
  %233 = icmp eq ptr %232, null
  br i1 %233, label %747, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %struct.tree_type, ptr %232, i64 0, i32 14
  %236 = load ptr, ptr %235, align 8, !tbaa !17
  %237 = icmp eq ptr %236, null
  br i1 %237, label %747, label %238

238:                                              ; preds = %234
  %239 = load i64, ptr %236, align 8
  %240 = and i64 %239, 65535
  %241 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %240
  %242 = load i32, ptr %241, align 4, !tbaa !17
  %243 = icmp eq i32 %242, 3
  br i1 %243, label %244, label %747

244:                                              ; preds = %238
  %245 = tail call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %236, i32 noundef 2)
  %246 = getelementptr inbounds %struct.tree_common, ptr %236, i64 0, i32 2
  %247 = load ptr, ptr %246, align 8, !tbaa !17
  %248 = tail call i64 @int_size_in_bytes(ptr noundef %247) #31
  %249 = icmp ne ptr %245, null
  %250 = icmp sgt i64 %248, 0
  %251 = select i1 %249, i1 %250, i1 false
  br i1 %251, label %252, label %747

252:                                              ; preds = %244
  tail call fastcc void @add_AT_location_description(ptr noundef nonnull %143, i32 noundef 25, ptr noundef nonnull %245)
  %253 = icmp eq i64 %248, 4
  br i1 %253, label %747, label %254

254:                                              ; preds = %252
  tail call fastcc void @add_AT_unsigned(ptr noundef nonnull %143, i32 noundef 11, i64 noundef %248)
  br label %747

255:                                              ; preds = %67, %70, %101, %109, %139, %61, %52
  %256 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 1, ptr %256, align 8, !tbaa !185
  %257 = icmp eq ptr %4, null
  br i1 %257, label %274, label %258

258:                                              ; preds = %255
  %259 = icmp eq ptr %256, %4
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %261

261:                                              ; preds = %260, %258
  %262 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 3
  store ptr %4, ptr %262, align 8, !tbaa !174
  %263 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 4
  %264 = load ptr, ptr %263, align 8, !tbaa !175
  %265 = icmp eq ptr %264, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %struct.die_struct, ptr %264, i64 0, i32 5
  %268 = load ptr, ptr %267, align 8, !tbaa !176
  %269 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 5
  store ptr %268, ptr %269, align 8, !tbaa !176
  br label %272

270:                                              ; preds = %261
  %271 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 5
  br label %272

272:                                              ; preds = %270, %266
  %273 = phi ptr [ %271, %270 ], [ %267, %266 ]
  store ptr %256, ptr %273, align 8, !tbaa !176
  store ptr %256, ptr %263, align 8, !tbaa !175
  br label %279

274:                                              ; preds = %255
  %275 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %256, ptr %275, align 8, !tbaa !173
  %276 = getelementptr inbounds %struct.limbo_die_struct, ptr %275, i64 0, i32 1
  store ptr %0, ptr %276, align 8, !tbaa !177
  %277 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %278 = getelementptr inbounds %struct.limbo_die_struct, ptr %275, i64 0, i32 2
  store ptr %277, ptr %278, align 8, !tbaa !171
  store ptr %275, ptr @limbo_die_list, align 8, !tbaa !6
  br label %279

279:                                              ; preds = %272, %274
  %280 = getelementptr i8, ptr %0, i64 96
  %281 = load ptr, ptr %280, align 8, !tbaa !17
  %282 = icmp eq ptr %281, null
  br i1 %282, label %314, label %283

283:                                              ; preds = %279
  %284 = load i64, ptr %281, align 8
  %285 = trunc i64 %284 to i16
  switch i16 %285, label %314 [
    i16 1, label %298
    i16 35, label %286
  ]

286:                                              ; preds = %283
  %287 = getelementptr inbounds %struct.tree_decl_common, ptr %281, i64 0, i32 2
  %288 = load i64, ptr %287, align 8
  %289 = and i64 %288, 1024
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %314

291:                                              ; preds = %286
  %292 = getelementptr inbounds %struct.tree_decl_minimal, ptr %281, i64 0, i32 3
  %293 = load ptr, ptr %292, align 8, !tbaa !17
  %294 = icmp eq ptr %293, null
  br i1 %294, label %314, label %295

295:                                              ; preds = %291
  %296 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %297 = tail call ptr %296(ptr noundef nonnull %281, i32 noundef 2) #31
  br label %301

298:                                              ; preds = %283
  %299 = getelementptr inbounds %struct.tree_identifier, ptr %281, i64 0, i32 1
  %300 = load ptr, ptr %299, align 8, !tbaa !17
  br label %301

301:                                              ; preds = %298, %295
  %302 = phi ptr [ %300, %298 ], [ %297, %295 ]
  %303 = icmp eq ptr %302, null
  br i1 %303, label %314, label %304

304:                                              ; preds = %301
  %305 = load i8, ptr %302, align 1, !tbaa !17
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %314, label %307

307:                                              ; preds = %304
  %308 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %309 = icmp eq ptr %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %307
  %311 = tail call ptr %308(ptr noundef nonnull %302) #31
  br label %312

312:                                              ; preds = %310, %307
  %313 = phi ptr [ %311, %310 ], [ %302, %307 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %256, i32 noundef 3, ptr noundef %313)
  br label %314

314:                                              ; preds = %304, %283, %286, %291, %279, %301, %312
  %315 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 11
  store ptr %256, ptr %315, align 8, !tbaa !17
  %316 = load i64, ptr %0, align 8
  %317 = and i64 %316, 65535
  %318 = icmp eq i64 %317, 14
  br i1 %318, label %319, label %351

319:                                              ; preds = %314
  %320 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %321 = load ptr, ptr %320, align 8, !tbaa !17
  %322 = getelementptr inbounds %struct.tree_type, ptr %321, i64 0, i32 1
  %323 = load ptr, ptr %322, align 8, !tbaa !17
  %324 = getelementptr inbounds %struct.tree_common, ptr %323, i64 0, i32 2
  %325 = load ptr, ptr %324, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %3)
  %326 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 2
  %327 = load ptr, ptr %326, align 8, !tbaa !6
  %328 = icmp eq ptr %327, null
  br i1 %328, label %329, label %332

329:                                              ; preds = %319
  %330 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %330, ptr %326, align 8, !tbaa !157
  %331 = icmp eq ptr %330, null
  br i1 %331, label %338, label %332

332:                                              ; preds = %329, %319
  %333 = phi ptr [ %330, %329 ], [ %327, %319 ]
  %334 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %333, i64 0, i32 1
  %335 = load i32, ptr %334, align 4, !tbaa !201
  %336 = load i32, ptr %333, align 8, !tbaa !159
  %337 = icmp eq i32 %335, %336
  br i1 %337, label %338, label %342

338:                                              ; preds = %332, %329
  %339 = phi ptr [ %333, %332 ], [ null, %329 ]
  %340 = tail call ptr @vec_gc_o_reserve(ptr noundef %339, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %340, ptr %326, align 8, !tbaa !6
  %341 = load i32, ptr %340, align 8, !tbaa !159
  br label %342

342:                                              ; preds = %332, %338
  %343 = phi i32 [ %336, %332 ], [ %341, %338 ]
  %344 = phi ptr [ %333, %332 ], [ %340, %338 ]
  %345 = add i32 %343, 1
  store i32 %345, ptr %344, align 8, !tbaa !159
  %346 = zext i32 %343 to i64
  %347 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %344, i64 0, i32 2, i64 %346
  store i32 8455, ptr %347, align 8, !tbaa.struct !179
  %348 = getelementptr inbounds i8, ptr %347, i64 8
  store i32 9, ptr %348, align 8, !tbaa.struct !202
  %349 = getelementptr inbounds i8, ptr %347, i64 16
  store i8 1, ptr %349, align 8, !tbaa.struct !203
  %350 = getelementptr inbounds i8, ptr %347, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %350, ptr noundef nonnull align 1 dereferenceable(15) %3, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %3)
  br label %351

351:                                              ; preds = %342, %314
  %352 = phi ptr [ %325, %342 ], [ %0, %314 ]
  %353 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %354

354:                                              ; preds = %388, %351
  %355 = phi ptr [ %353, %351 ], [ %389, %388 ]
  %356 = icmp eq ptr %355, null
  br i1 %356, label %442, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %struct.die_struct, ptr %355, i64 0, i32 2
  %359 = load ptr, ptr %358, align 8, !tbaa !157
  %360 = icmp eq ptr %359, null
  br i1 %360, label %442, label %361

361:                                              ; preds = %357, %382
  %362 = phi ptr [ %383, %382 ], [ %359, %357 ]
  %363 = phi ptr [ %384, %382 ], [ %359, %357 ]
  %364 = phi i64 [ %386, %382 ], [ 0, %357 ]
  %365 = phi ptr [ %385, %382 ], [ null, %357 ]
  %366 = load i32, ptr %363, align 8, !tbaa !159
  %367 = zext i32 %366 to i64
  %368 = icmp ult i64 %364, %367
  br i1 %368, label %369, label %388

369:                                              ; preds = %361
  %370 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %363, i64 0, i32 2, i64 %364
  %371 = load i32, ptr %370, align 8, !tbaa !161
  switch i32 %371, label %382 [
    i32 19, label %391
    i32 71, label %372
    i32 49, label %372
  ]

372:                                              ; preds = %369, %369
  %373 = getelementptr i8, ptr %370, i64 8
  %374 = load i32, ptr %373, align 8, !tbaa !163
  %375 = icmp eq i32 %374, 10
  br i1 %375, label %378, label %376

376:                                              ; preds = %372
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %377 = load ptr, ptr %358, align 8, !tbaa !157
  br label %378

378:                                              ; preds = %376, %372
  %379 = phi ptr [ %362, %372 ], [ %377, %376 ]
  %380 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %363, i64 0, i32 2, i64 %364, i32 1, i32 1
  %381 = load ptr, ptr %380, align 8, !tbaa !17
  br label %382

382:                                              ; preds = %378, %369
  %383 = phi ptr [ %379, %378 ], [ %362, %369 ]
  %384 = phi ptr [ %379, %378 ], [ %363, %369 ]
  %385 = phi ptr [ %381, %378 ], [ %365, %369 ]
  %386 = add nuw nsw i64 %364, 1
  %387 = icmp eq ptr %384, null
  br i1 %387, label %388, label %361, !llvm.loop !164

388:                                              ; preds = %382, %361
  %389 = phi ptr [ %385, %382 ], [ %365, %361 ]
  %390 = icmp eq ptr %389, null
  br i1 %390, label %442, label %354

391:                                              ; preds = %369
  %392 = getelementptr i8, ptr %370, i64 8
  %393 = load i32, ptr %392, align 8, !tbaa !163
  %394 = icmp eq i32 %393, 6
  br i1 %394, label %396, label %395

395:                                              ; preds = %391
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %396

396:                                              ; preds = %391, %395
  %397 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %363, i64 0, i32 2, i64 %364, i32 1, i32 1
  %398 = load i64, ptr %397, align 8, !tbaa !17
  %399 = trunc i64 %398 to i32
  switch i32 %399, label %442 [
    i32 14, label %400
    i32 8, label %400
    i32 7, label %400
  ]

400:                                              ; preds = %396, %396, %396
  %401 = load i64, ptr %352, align 8
  %402 = and i64 %401, 65535
  %403 = icmp eq i64 %402, 15
  br i1 %403, label %404, label %442

404:                                              ; preds = %400
  %405 = getelementptr inbounds %struct.tree_common, ptr %352, i64 0, i32 2
  %406 = load ptr, ptr %405, align 8, !tbaa !17
  %407 = load i64, ptr %406, align 8
  %408 = and i64 %407, 65535
  %409 = icmp eq i64 %408, 15
  br i1 %409, label %410, label %442

410:                                              ; preds = %404
  %411 = getelementptr inbounds %struct.tree_type, ptr %406, i64 0, i32 6
  %412 = load i32, ptr %411, align 4
  %413 = and i32 %412, 16777216
  %414 = icmp ne i32 %413, 0
  %415 = icmp eq ptr %256, null
  %416 = or i1 %415, %414
  br i1 %416, label %442, label %417

417:                                              ; preds = %410
  %418 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 2
  %419 = load ptr, ptr %418, align 8, !tbaa !6
  %420 = icmp eq ptr %419, null
  br i1 %420, label %421, label %424

421:                                              ; preds = %417
  %422 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %422, ptr %418, align 8, !tbaa !157
  %423 = icmp eq ptr %422, null
  br i1 %423, label %430, label %424

424:                                              ; preds = %421, %417
  %425 = phi ptr [ %422, %421 ], [ %419, %417 ]
  %426 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %425, i64 0, i32 1
  %427 = load i32, ptr %426, align 4, !tbaa !201
  %428 = load i32, ptr %425, align 8, !tbaa !159
  %429 = icmp eq i32 %427, %428
  br i1 %429, label %430, label %434

430:                                              ; preds = %424, %421
  %431 = phi ptr [ %425, %424 ], [ null, %421 ]
  %432 = tail call ptr @vec_gc_o_reserve(ptr noundef %431, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %432, ptr %418, align 8, !tbaa !6
  %433 = load i32, ptr %432, align 8, !tbaa !159
  br label %434

434:                                              ; preds = %430, %424
  %435 = phi i32 [ %428, %424 ], [ %433, %430 ]
  %436 = phi ptr [ %425, %424 ], [ %432, %430 ]
  %437 = add i32 %435, 1
  store i32 %437, ptr %436, align 8, !tbaa !159
  %438 = zext i32 %435 to i64
  %439 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %436, i64 0, i32 2, i64 %438
  store i32 9, ptr %439, align 8, !tbaa.struct !179
  %440 = getelementptr inbounds i8, ptr %439, i64 8
  store i32 6, ptr %440, align 8, !tbaa.struct !202
  %441 = getelementptr inbounds i8, ptr %439, i64 16
  store i64 1, ptr %441, align 8, !tbaa.struct !203
  br label %442

442:                                              ; preds = %354, %357, %388, %396, %434, %410, %404, %400
  %443 = load i64, ptr %352, align 8
  %444 = and i64 %443, 65535
  %445 = icmp eq i64 %444, 15
  br i1 %445, label %446, label %579

446:                                              ; preds = %442
  %447 = icmp eq ptr %256, null
  %448 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 4
  br label %449

449:                                              ; preds = %446, %572
  %450 = phi ptr [ %352, %446 ], [ %574, %572 ]
  %451 = phi i32 [ 0, %446 ], [ %575, %572 ]
  %452 = icmp eq i32 %451, 0
  %453 = or i1 %56, %452
  br i1 %453, label %457, label %454

454:                                              ; preds = %449
  %455 = getelementptr inbounds %struct.tree_common, ptr %352, i64 0, i32 2
  %456 = load ptr, ptr %455, align 8, !tbaa !17
  br label %646

457:                                              ; preds = %449
  %458 = getelementptr inbounds %struct.tree_type, ptr %450, i64 0, i32 1
  %459 = load ptr, ptr %458, align 8, !tbaa !17
  %460 = getelementptr inbounds %struct.tree_type, ptr %450, i64 0, i32 6
  %461 = load i32, ptr %460, align 4
  %462 = and i32 %461, 16777216
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %520, label %464

464:                                              ; preds = %457
  %465 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %466

466:                                              ; preds = %500, %464
  %467 = phi ptr [ %465, %464 ], [ %501, %500 ]
  %468 = icmp eq ptr %467, null
  br i1 %468, label %512, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %struct.die_struct, ptr %467, i64 0, i32 2
  %471 = load ptr, ptr %470, align 8, !tbaa !157
  %472 = icmp eq ptr %471, null
  br i1 %472, label %512, label %473

473:                                              ; preds = %469, %494
  %474 = phi ptr [ %495, %494 ], [ %471, %469 ]
  %475 = phi ptr [ %496, %494 ], [ %471, %469 ]
  %476 = phi i64 [ %498, %494 ], [ 0, %469 ]
  %477 = phi ptr [ %497, %494 ], [ null, %469 ]
  %478 = load i32, ptr %475, align 8, !tbaa !159
  %479 = zext i32 %478 to i64
  %480 = icmp ult i64 %476, %479
  br i1 %480, label %481, label %500

481:                                              ; preds = %473
  %482 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %475, i64 0, i32 2, i64 %476
  %483 = load i32, ptr %482, align 8, !tbaa !161
  switch i32 %483, label %494 [
    i32 19, label %503
    i32 71, label %484
    i32 49, label %484
  ]

484:                                              ; preds = %481, %481
  %485 = getelementptr i8, ptr %482, i64 8
  %486 = load i32, ptr %485, align 8, !tbaa !163
  %487 = icmp eq i32 %486, 10
  br i1 %487, label %490, label %488

488:                                              ; preds = %484
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %489 = load ptr, ptr %470, align 8, !tbaa !157
  br label %490

490:                                              ; preds = %488, %484
  %491 = phi ptr [ %474, %484 ], [ %489, %488 ]
  %492 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %475, i64 0, i32 2, i64 %476, i32 1, i32 1
  %493 = load ptr, ptr %492, align 8, !tbaa !17
  br label %494

494:                                              ; preds = %490, %481
  %495 = phi ptr [ %491, %490 ], [ %474, %481 ]
  %496 = phi ptr [ %491, %490 ], [ %475, %481 ]
  %497 = phi ptr [ %493, %490 ], [ %477, %481 ]
  %498 = add nuw nsw i64 %476, 1
  %499 = icmp eq ptr %496, null
  br i1 %499, label %500, label %473, !llvm.loop !164

500:                                              ; preds = %494, %473
  %501 = phi ptr [ %497, %494 ], [ %477, %473 ]
  %502 = icmp eq ptr %501, null
  br i1 %502, label %512, label %466

503:                                              ; preds = %481
  %504 = getelementptr i8, ptr %482, i64 8
  %505 = load i32, ptr %504, align 8, !tbaa !163
  %506 = icmp eq i32 %505, 6
  br i1 %506, label %508, label %507

507:                                              ; preds = %503
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %508

508:                                              ; preds = %507, %503
  %509 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %475, i64 0, i32 2, i64 %476, i32 1, i32 1
  %510 = load i64, ptr %509, align 8, !tbaa !17
  %511 = trunc i64 %510 to i32
  br label %512

512:                                              ; preds = %466, %469, %500, %508
  %513 = phi i32 [ %511, %508 ], [ 0, %500 ], [ 0, %469 ], [ 0, %466 ]
  %514 = add i32 %513, -7
  %515 = icmp ult i32 %514, 2
  %516 = icmp eq i32 %513, 14
  %517 = or i1 %516, %515
  %518 = icmp ne i32 %451, 0
  %519 = and i1 %517, %518
  br i1 %519, label %579, label %520

520:                                              ; preds = %512, %457
  %521 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 33, ptr %521, align 8, !tbaa !185
  br i1 %447, label %537, label %522

522:                                              ; preds = %520
  %523 = icmp eq ptr %521, %256
  br i1 %523, label %524, label %525

524:                                              ; preds = %522
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %525

525:                                              ; preds = %524, %522
  %526 = getelementptr inbounds %struct.die_struct, ptr %521, i64 0, i32 3
  store ptr %256, ptr %526, align 8, !tbaa !174
  %527 = load ptr, ptr %448, align 8, !tbaa !175
  %528 = icmp eq ptr %527, null
  br i1 %528, label %533, label %529

529:                                              ; preds = %525
  %530 = getelementptr inbounds %struct.die_struct, ptr %527, i64 0, i32 5
  %531 = load ptr, ptr %530, align 8, !tbaa !176
  %532 = getelementptr inbounds %struct.die_struct, ptr %521, i64 0, i32 5
  store ptr %531, ptr %532, align 8, !tbaa !176
  br label %535

533:                                              ; preds = %525
  %534 = getelementptr inbounds %struct.die_struct, ptr %521, i64 0, i32 5
  br label %535

535:                                              ; preds = %533, %529
  %536 = phi ptr [ %534, %533 ], [ %530, %529 ]
  store ptr %521, ptr %536, align 8, !tbaa !176
  store ptr %521, ptr %448, align 8, !tbaa !175
  br label %542

537:                                              ; preds = %520
  %538 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %521, ptr %538, align 8, !tbaa !173
  %539 = getelementptr inbounds %struct.limbo_die_struct, ptr %538, i64 0, i32 1
  store ptr null, ptr %539, align 8, !tbaa !177
  %540 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %541 = getelementptr inbounds %struct.limbo_die_struct, ptr %538, i64 0, i32 2
  store ptr %540, ptr %541, align 8, !tbaa !171
  store ptr %538, ptr @limbo_die_list, align 8, !tbaa !6
  br label %542

542:                                              ; preds = %535, %537
  %543 = icmp eq ptr %459, null
  br i1 %543, label %572, label %544

544:                                              ; preds = %542
  %545 = getelementptr inbounds %struct.tree_type, ptr %459, i64 0, i32 13
  %546 = load ptr, ptr %545, align 8, !tbaa !17
  %547 = getelementptr inbounds %struct.tree_type, ptr %459, i64 0, i32 14
  %548 = load ptr, ptr %547, align 8, !tbaa !17
  %549 = getelementptr inbounds %struct.tree_common, ptr %459, i64 0, i32 2
  %550 = load ptr, ptr %549, align 8, !tbaa !17
  %551 = icmp eq ptr %550, null
  br i1 %551, label %569, label %552

552:                                              ; preds = %544
  %553 = load i64, ptr %459, align 8
  %554 = and i64 %553, 65535
  %555 = icmp eq i64 %554, 8
  br i1 %555, label %556, label %568

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.tree_type, ptr %459, i64 0, i32 12
  %558 = load ptr, ptr %557, align 8, !tbaa !17
  %559 = icmp eq ptr %558, null
  br i1 %559, label %560, label %568

560:                                              ; preds = %556
  %561 = load i64, ptr %550, align 8
  %562 = and i64 %561, 65535
  %563 = icmp eq i64 %562, 8
  br i1 %563, label %564, label %568

564:                                              ; preds = %560
  %565 = getelementptr inbounds %struct.tree_type, ptr %550, i64 0, i32 12
  %566 = load ptr, ptr %565, align 8, !tbaa !17
  %567 = icmp eq ptr %566, null
  br i1 %567, label %569, label %568

568:                                              ; preds = %564, %560, %556, %552
  tail call fastcc void @add_type_attribute(ptr noundef nonnull %521, ptr noundef nonnull %550, i32 noundef 0, i32 noundef 0, ptr noundef %256)
  br label %569

569:                                              ; preds = %568, %564, %544
  tail call fastcc void @add_bound_info(ptr noundef nonnull %521, i32 noundef 34, ptr noundef %546)
  %570 = icmp eq ptr %548, null
  br i1 %570, label %572, label %571

571:                                              ; preds = %569
  tail call fastcc void @add_bound_info(ptr noundef nonnull %521, i32 noundef 47, ptr noundef nonnull %548)
  br label %572

572:                                              ; preds = %569, %571, %542
  %573 = getelementptr inbounds %struct.tree_common, ptr %450, i64 0, i32 2
  %574 = load ptr, ptr %573, align 8, !tbaa !17
  %575 = add i32 %451, 1
  %576 = load i64, ptr %574, align 8
  %577 = and i64 %576, 65535
  %578 = icmp eq i64 %577, 15
  br i1 %578, label %449, label %579, !llvm.loop !363

579:                                              ; preds = %572, %512, %442
  %580 = getelementptr inbounds %struct.tree_common, ptr %352, i64 0, i32 2
  %581 = load ptr, ptr %580, align 8, !tbaa !17
  switch i32 %53, label %582 [
    i32 13, label %646
    i32 3, label %646
  ]

582:                                              ; preds = %579
  %583 = load i64, ptr %581, align 8
  %584 = and i64 %583, 65535
  %585 = icmp eq i64 %584, 15
  br i1 %585, label %586, label %646

586:                                              ; preds = %582, %640
  %587 = phi ptr [ %642, %640 ], [ %581, %582 ]
  %588 = getelementptr inbounds %struct.tree_type, ptr %587, i64 0, i32 6
  %589 = load i32, ptr %588, align 4
  %590 = and i32 %589, 16777216
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %640, label %592

592:                                              ; preds = %586
  %593 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %594

594:                                              ; preds = %628, %592
  %595 = phi ptr [ %593, %592 ], [ %629, %628 ]
  %596 = icmp eq ptr %595, null
  br i1 %596, label %640, label %597

597:                                              ; preds = %594
  %598 = getelementptr inbounds %struct.die_struct, ptr %595, i64 0, i32 2
  %599 = load ptr, ptr %598, align 8, !tbaa !157
  %600 = icmp eq ptr %599, null
  br i1 %600, label %640, label %601

601:                                              ; preds = %597, %622
  %602 = phi ptr [ %623, %622 ], [ %599, %597 ]
  %603 = phi ptr [ %624, %622 ], [ %599, %597 ]
  %604 = phi i64 [ %626, %622 ], [ 0, %597 ]
  %605 = phi ptr [ %625, %622 ], [ null, %597 ]
  %606 = load i32, ptr %603, align 8, !tbaa !159
  %607 = zext i32 %606 to i64
  %608 = icmp ult i64 %604, %607
  br i1 %608, label %609, label %628

609:                                              ; preds = %601
  %610 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %603, i64 0, i32 2, i64 %604
  %611 = load i32, ptr %610, align 8, !tbaa !161
  switch i32 %611, label %622 [
    i32 19, label %631
    i32 71, label %612
    i32 49, label %612
  ]

612:                                              ; preds = %609, %609
  %613 = getelementptr i8, ptr %610, i64 8
  %614 = load i32, ptr %613, align 8, !tbaa !163
  %615 = icmp eq i32 %614, 10
  br i1 %615, label %618, label %616

616:                                              ; preds = %612
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %617 = load ptr, ptr %598, align 8, !tbaa !157
  br label %618

618:                                              ; preds = %616, %612
  %619 = phi ptr [ %602, %612 ], [ %617, %616 ]
  %620 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %603, i64 0, i32 2, i64 %604, i32 1, i32 1
  %621 = load ptr, ptr %620, align 8, !tbaa !17
  br label %622

622:                                              ; preds = %618, %609
  %623 = phi ptr [ %619, %618 ], [ %602, %609 ]
  %624 = phi ptr [ %619, %618 ], [ %603, %609 ]
  %625 = phi ptr [ %621, %618 ], [ %605, %609 ]
  %626 = add nuw nsw i64 %604, 1
  %627 = icmp eq ptr %624, null
  br i1 %627, label %628, label %601, !llvm.loop !164

628:                                              ; preds = %622, %601
  %629 = phi ptr [ %625, %622 ], [ %605, %601 ]
  %630 = icmp eq ptr %629, null
  br i1 %630, label %640, label %594

631:                                              ; preds = %609
  %632 = getelementptr i8, ptr %610, i64 8
  %633 = load i32, ptr %632, align 8, !tbaa !163
  %634 = icmp eq i32 %633, 6
  br i1 %634, label %636, label %635

635:                                              ; preds = %631
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %636

636:                                              ; preds = %631, %635
  %637 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %603, i64 0, i32 2, i64 %604, i32 1, i32 1
  %638 = load i64, ptr %637, align 8, !tbaa !17
  %639 = trunc i64 %638 to i32
  switch i32 %639, label %640 [
    i32 14, label %646
    i32 8, label %646
    i32 7, label %646
  ]

640:                                              ; preds = %594, %597, %628, %636, %586
  %641 = getelementptr inbounds %struct.tree_common, ptr %587, i64 0, i32 2
  %642 = load ptr, ptr %641, align 8, !tbaa !17
  %643 = load i64, ptr %642, align 8
  %644 = and i64 %643, 65535
  %645 = icmp eq i64 %644, 15
  br i1 %645, label %586, label %646, !llvm.loop !364

646:                                              ; preds = %640, %636, %636, %636, %582, %579, %579, %454
  %647 = phi ptr [ %581, %579 ], [ %456, %454 ], [ %581, %579 ], [ %581, %582 ], [ %642, %640 ], [ %587, %636 ], [ %587, %636 ], [ %587, %636 ]
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %647, ptr noundef %1, i32 noundef 1)
  %648 = load i64, ptr %647, align 8
  %649 = trunc i64 %648 to i32
  %650 = and i32 %649, 65535
  %651 = and i32 %649, 65534
  %652 = icmp eq i32 %651, 8
  %653 = icmp eq i32 %650, 11
  %654 = or i1 %652, %653
  br i1 %654, label %655, label %667

655:                                              ; preds = %646
  %656 = getelementptr inbounds %struct.tree_common, ptr %647, i64 0, i32 2
  %657 = load ptr, ptr %656, align 8, !tbaa !17
  %658 = icmp eq ptr %657, null
  br i1 %658, label %667, label %659

659:                                              ; preds = %655
  %660 = getelementptr inbounds %struct.tree_type, ptr %647, i64 0, i32 12
  %661 = load ptr, ptr %660, align 8, !tbaa !17
  %662 = icmp eq ptr %661, null
  br i1 %662, label %663, label %667

663:                                              ; preds = %659
  %664 = load i64, ptr %657, align 8
  %665 = trunc i64 %664 to i32
  %666 = and i32 %665, 65535
  br label %667

667:                                              ; preds = %663, %659, %655, %646
  %668 = phi i64 [ %664, %663 ], [ %648, %659 ], [ %648, %655 ], [ %648, %646 ]
  %669 = phi ptr [ %657, %663 ], [ %647, %659 ], [ %647, %655 ], [ %647, %646 ]
  %670 = phi i32 [ %666, %663 ], [ %650, %659 ], [ %650, %655 ], [ %650, %646 ]
  %671 = trunc i32 %670 to i16
  switch i16 %671, label %672 [
    i16 19, label %708
    i16 0, label %708
  ]

672:                                              ; preds = %667
  %673 = trunc i64 %668 to i32
  %674 = lshr i32 %673, 20
  %675 = and i32 %674, 1
  %676 = lshr i32 %673, 19
  %677 = and i32 %676, 1
  %678 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %669, i32 noundef %675, i32 noundef %677, ptr noundef %1)
  %679 = icmp eq ptr %678, null
  %680 = icmp eq ptr %256, null
  %681 = or i1 %680, %679
  br i1 %681, label %708, label %682

682:                                              ; preds = %672
  %683 = getelementptr inbounds %struct.die_struct, ptr %256, i64 0, i32 2
  %684 = load ptr, ptr %683, align 8, !tbaa !6
  %685 = icmp eq ptr %684, null
  br i1 %685, label %686, label %689

686:                                              ; preds = %682
  %687 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %687, ptr %683, align 8, !tbaa !157
  %688 = icmp eq ptr %687, null
  br i1 %688, label %695, label %689

689:                                              ; preds = %686, %682
  %690 = phi ptr [ %687, %686 ], [ %684, %682 ]
  %691 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %690, i64 0, i32 1
  %692 = load i32, ptr %691, align 4, !tbaa !201
  %693 = load i32, ptr %690, align 8, !tbaa !159
  %694 = icmp eq i32 %692, %693
  br i1 %694, label %695, label %699

695:                                              ; preds = %689, %686
  %696 = phi ptr [ %690, %689 ], [ null, %686 ]
  %697 = tail call ptr @vec_gc_o_reserve(ptr noundef %696, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %697, ptr %683, align 8, !tbaa !6
  %698 = load i32, ptr %697, align 8, !tbaa !159
  br label %699

699:                                              ; preds = %695, %689
  %700 = phi i32 [ %693, %689 ], [ %698, %695 ]
  %701 = phi ptr [ %690, %689 ], [ %697, %695 ]
  %702 = add i32 %700, 1
  store i32 %702, ptr %701, align 8, !tbaa !159
  %703 = zext i32 %700 to i64
  %704 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %701, i64 0, i32 2, i64 %703
  store i32 73, ptr %704, align 8, !tbaa.struct !179
  %705 = getelementptr inbounds i8, ptr %704, i64 8
  store i32 10, ptr %705, align 8, !tbaa.struct !202
  %706 = getelementptr inbounds i8, ptr %704, i64 16
  store ptr %678, ptr %706, align 8, !tbaa.struct !203
  %707 = getelementptr inbounds i8, ptr %704, i64 24
  store i32 0, ptr %707, align 8, !tbaa.struct !294
  br label %708

708:                                              ; preds = %699, %667, %667, %672
  br label %709

709:                                              ; preds = %708, %743
  %710 = phi ptr [ %744, %743 ], [ %256, %708 ]
  %711 = icmp eq ptr %710, null
  br i1 %711, label %747, label %712

712:                                              ; preds = %709
  %713 = getelementptr inbounds %struct.die_struct, ptr %710, i64 0, i32 2
  %714 = load ptr, ptr %713, align 8, !tbaa !157
  %715 = icmp eq ptr %714, null
  br i1 %715, label %747, label %716

716:                                              ; preds = %712, %737
  %717 = phi ptr [ %738, %737 ], [ %714, %712 ]
  %718 = phi ptr [ %739, %737 ], [ %714, %712 ]
  %719 = phi i64 [ %741, %737 ], [ 0, %712 ]
  %720 = phi ptr [ %740, %737 ], [ null, %712 ]
  %721 = load i32, ptr %718, align 8, !tbaa !159
  %722 = zext i32 %721 to i64
  %723 = icmp ult i64 %719, %722
  br i1 %723, label %724, label %743

724:                                              ; preds = %716
  %725 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %718, i64 0, i32 2, i64 %719
  %726 = load i32, ptr %725, align 8, !tbaa !161
  switch i32 %726, label %737 [
    i32 3, label %746
    i32 71, label %727
    i32 49, label %727
  ]

727:                                              ; preds = %724, %724
  %728 = getelementptr i8, ptr %725, i64 8
  %729 = load i32, ptr %728, align 8, !tbaa !163
  %730 = icmp eq i32 %729, 10
  br i1 %730, label %733, label %731

731:                                              ; preds = %727
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %732 = load ptr, ptr %713, align 8, !tbaa !157
  br label %733

733:                                              ; preds = %731, %727
  %734 = phi ptr [ %717, %727 ], [ %732, %731 ]
  %735 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %718, i64 0, i32 2, i64 %719, i32 1, i32 1
  %736 = load ptr, ptr %735, align 8, !tbaa !17
  br label %737

737:                                              ; preds = %724, %733
  %738 = phi ptr [ %734, %733 ], [ %717, %724 ]
  %739 = phi ptr [ %734, %733 ], [ %718, %724 ]
  %740 = phi ptr [ %736, %733 ], [ %720, %724 ]
  %741 = add nuw nsw i64 %719, 1
  %742 = icmp eq ptr %739, null
  br i1 %742, label %743, label %716, !llvm.loop !164

743:                                              ; preds = %737, %716
  %744 = phi ptr [ %740, %737 ], [ %720, %716 ]
  %745 = icmp eq ptr %744, null
  br i1 %745, label %747, label %709

746:                                              ; preds = %724
  tail call fastcc void @add_pubtype(ptr noundef nonnull %352, ptr noundef %256)
  br label %747

747:                                              ; preds = %712, %743, %709, %746, %222, %238, %234, %230, %252, %254, %244
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @push_decl_scope(ptr noundef %0) unnamed_addr #10 {
  %2 = load ptr, ptr @decl_scope_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.VEC_tree_base, ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !365
  %7 = load i32, ptr %2, align 8, !tbaa !182
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %4, %1
  %10 = tail call ptr @vec_gc_p_reserve(ptr noundef %2, i32 noundef 1) #31
  store ptr %10, ptr @decl_scope_table, align 8, !tbaa !6
  %11 = load i32, ptr %10, align 8, !tbaa !182
  br label %12

12:                                               ; preds = %4, %9
  %13 = phi i32 [ %7, %4 ], [ %11, %9 ]
  %14 = phi ptr [ %2, %4 ], [ %10, %9 ]
  %15 = add i32 %13, 1
  store i32 %15, ptr %14, align 8, !tbaa !182
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %struct.VEC_tree_base, ptr %14, i64 0, i32 2, i64 %16
  store ptr %0, ptr %17, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @declare_in_namespace(ptr noundef %0, ptr noundef readnone %1) unnamed_addr #10 {
  %3 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %4 = icmp ult i32 %3, 2
  br i1 %4, label %84, label %5

5:                                                ; preds = %2
  %6 = load i64, ptr %0, align 8
  %7 = and i64 %6, 65535
  %8 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !17
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %84

15:                                               ; preds = %11, %5
  %16 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %17 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %18 = select i1 %10, ptr %16, ptr %17
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %84, label %21

21:                                               ; preds = %15
  %22 = load i64, ptr %19, align 8
  %23 = and i64 %22, 65535
  %24 = icmp eq i64 %23, 38
  br i1 %24, label %25, label %84

25:                                               ; preds = %21
  %26 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %19)
  %27 = icmp eq ptr %26, %1
  br i1 %27, label %84, label %28

28:                                               ; preds = %25
  %29 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %30

30:                                               ; preds = %64, %28
  %31 = phi ptr [ %29, %28 ], [ %65, %64 ]
  %32 = icmp eq ptr %31, null
  br i1 %32, label %76, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.die_struct, ptr %31, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !157
  %36 = icmp eq ptr %35, null
  br i1 %36, label %76, label %37

37:                                               ; preds = %33, %58
  %38 = phi ptr [ %59, %58 ], [ %35, %33 ]
  %39 = phi ptr [ %60, %58 ], [ %35, %33 ]
  %40 = phi i64 [ %62, %58 ], [ 0, %33 ]
  %41 = phi ptr [ %61, %58 ], [ null, %33 ]
  %42 = load i32, ptr %39, align 8, !tbaa !159
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %45, label %64

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %39, i64 0, i32 2, i64 %40
  %47 = load i32, ptr %46, align 8, !tbaa !161
  switch i32 %47, label %58 [
    i32 19, label %67
    i32 71, label %48
    i32 49, label %48
  ]

48:                                               ; preds = %45, %45
  %49 = getelementptr i8, ptr %46, i64 8
  %50 = load i32, ptr %49, align 8, !tbaa !163
  %51 = icmp eq i32 %50, 10
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %53 = load ptr, ptr %34, align 8, !tbaa !157
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi ptr [ %38, %48 ], [ %53, %52 ]
  %56 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %39, i64 0, i32 2, i64 %40, i32 1, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  br label %58

58:                                               ; preds = %54, %45
  %59 = phi ptr [ %55, %54 ], [ %38, %45 ]
  %60 = phi ptr [ %55, %54 ], [ %39, %45 ]
  %61 = phi ptr [ %57, %54 ], [ %41, %45 ]
  %62 = add nuw nsw i64 %40, 1
  %63 = icmp eq ptr %60, null
  br i1 %63, label %64, label %37, !llvm.loop !164

64:                                               ; preds = %58, %37
  %65 = phi ptr [ %61, %58 ], [ %41, %37 ]
  %66 = icmp eq ptr %65, null
  br i1 %66, label %76, label %30

67:                                               ; preds = %45
  %68 = getelementptr i8, ptr %46, i64 8
  %69 = load i32, ptr %68, align 8, !tbaa !163
  %70 = icmp eq i32 %69, 6
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %72

72:                                               ; preds = %67, %71
  %73 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %39, i64 0, i32 2, i64 %40, i32 1, i32 1
  %74 = load i64, ptr %73, align 8, !tbaa !17
  %75 = trunc i64 %74 to i32
  switch i32 %75, label %76 [
    i32 14, label %84
    i32 8, label %84
    i32 7, label %84
  ]

76:                                               ; preds = %30, %33, %64, %72
  %77 = load i64, ptr %0, align 8
  %78 = and i64 %77, 65535
  %79 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !17
  %81 = icmp eq i32 %80, 3
  br i1 %81, label %82, label %83

82:                                               ; preds = %76
  tail call fastcc void @gen_decl_die(ptr noundef nonnull %0, ptr noundef null, ptr noundef %26)
  br label %84

83:                                               ; preds = %76
  tail call fastcc void @gen_type_die_with_usage(ptr noundef nonnull %0, ptr noundef %26, i32 noundef 1)
  br label %84

84:                                               ; preds = %72, %72, %72, %15, %21, %25, %83, %82, %11, %2
  %85 = phi ptr [ %1, %2 ], [ %1, %11 ], [ %26, %72 ], [ %1, %82 ], [ %1, %83 ], [ %1, %25 ], [ %1, %21 ], [ %1, %15 ], [ %26, %72 ], [ %26, %72 ]
  ret ptr %85
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_enumeration_type_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca [15 x i8], align 1
  %4 = getelementptr i8, ptr %0, i64 88
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %67

7:                                                ; preds = %2
  %8 = tail call fastcc ptr @scope_die_for(ptr noundef nonnull %0, ptr noundef %1)
  %9 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 4, ptr %9, align 8, !tbaa !185
  %10 = icmp eq ptr %8, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = icmp eq ptr %9, %8
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %14

14:                                               ; preds = %13, %11
  %15 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 3
  store ptr %8, ptr %15, align 8, !tbaa !174
  %16 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !175
  %18 = icmp eq ptr %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.die_struct, ptr %17, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !176
  %22 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  store ptr %21, ptr %22, align 8, !tbaa !176
  br label %25

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi ptr [ %24, %23 ], [ %20, %19 ]
  store ptr %9, ptr %26, align 8, !tbaa !176
  store ptr %9, ptr %16, align 8, !tbaa !175
  br label %32

27:                                               ; preds = %7
  %28 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %9, ptr %28, align 8, !tbaa !173
  %29 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 1
  store ptr %0, ptr %29, align 8, !tbaa !177
  %30 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !171
  store ptr %28, ptr @limbo_die_list, align 8, !tbaa !6
  br label %32

32:                                               ; preds = %25, %27
  store ptr %9, ptr %4, align 8, !tbaa !17
  %33 = getelementptr i8, ptr %0, i64 96
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = icmp eq ptr %34, null
  br i1 %35, label %109, label %36

36:                                               ; preds = %32
  %37 = load i64, ptr %34, align 8
  %38 = trunc i64 %37 to i16
  switch i16 %38, label %109 [
    i16 1, label %51
    i16 35, label %39
  ]

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.tree_decl_common, ptr %34, i64 0, i32 2
  %41 = load i64, ptr %40, align 8
  %42 = and i64 %41, 1024
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %109

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tree_decl_minimal, ptr %34, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  %47 = icmp eq ptr %46, null
  br i1 %47, label %109, label %48

48:                                               ; preds = %44
  %49 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %50 = tail call ptr %49(ptr noundef nonnull %34, i32 noundef 2) #31
  br label %54

51:                                               ; preds = %36
  %52 = getelementptr inbounds %struct.tree_identifier, ptr %34, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  br label %54

54:                                               ; preds = %51, %48
  %55 = phi ptr [ %53, %51 ], [ %50, %48 ]
  %56 = icmp eq ptr %55, null
  br i1 %56, label %109, label %57

57:                                               ; preds = %54
  %58 = load i8, ptr %55, align 1, !tbaa !17
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %109, label %60

60:                                               ; preds = %57
  %61 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %62 = icmp eq ptr %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = tail call ptr %61(ptr noundef nonnull %55) #31
  br label %65

65:                                               ; preds = %63, %60
  %66 = phi ptr [ %64, %63 ], [ %55, %60 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %9, i32 noundef 3, ptr noundef %66)
  br label %109

67:                                               ; preds = %2
  %68 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = icmp eq ptr %69, null
  br i1 %70, label %298, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.die_struct, ptr %5, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !157
  %74 = icmp eq ptr %73, null
  br i1 %74, label %109, label %75

75:                                               ; preds = %71
  %76 = load i32, ptr %73, align 8, !tbaa !159
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %109, label %78

78:                                               ; preds = %75
  %79 = zext i32 %76 to i64
  br label %80

80:                                               ; preds = %106, %78
  %81 = phi i64 [ 0, %78 ], [ %107, %106 ]
  %82 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %73, i64 0, i32 2, i64 %81
  %83 = load i32, ptr %82, align 8, !tbaa !161
  %84 = icmp eq i32 %83, 60
  br i1 %84, label %85, label %106

85:                                               ; preds = %80
  %86 = trunc i64 %81 to i32
  %87 = getelementptr i8, ptr %82, i64 8
  %88 = load i32, ptr %87, align 8, !tbaa !163
  %89 = icmp eq i32 %88, 14
  br i1 %89, label %90, label %98

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %73, i64 0, i32 2, i64 %81, i32 1, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = getelementptr inbounds %struct.indirect_string_node, ptr %92, i64 0, i32 1
  %94 = load i32, ptr %93, align 8, !tbaa !267
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %90
  %97 = add i32 %94, -1
  store i32 %97, ptr %93, align 8, !tbaa !267
  br label %98

98:                                               ; preds = %96, %90, %85
  %99 = and i64 %81, 4294967295
  %100 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %73, i64 0, i32 2, i64 %99
  %101 = getelementptr inbounds %struct.dw_attr_struct, ptr %100, i64 1
  %102 = add i32 %76, -1
  store i32 %102, ptr %73, align 8, !tbaa !159
  %103 = sub i32 %102, %86
  %104 = zext i32 %103 to i64
  %105 = shl nuw nsw i64 %104, 5
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %100, ptr nonnull align 8 %101, i64 %105, i1 false)
  br label %109

106:                                              ; preds = %80
  %107 = add nuw nsw i64 %81, 1
  %108 = icmp eq i64 %107, %79
  br i1 %108, label %109, label %80

109:                                              ; preds = %106, %57, %36, %39, %44, %32, %54, %98, %75, %71, %65
  %110 = phi ptr [ %9, %65 ], [ %5, %71 ], [ %5, %75 ], [ %5, %98 ], [ %9, %54 ], [ %9, %32 ], [ %9, %44 ], [ %9, %39 ], [ %9, %36 ], [ %9, %57 ], [ %5, %106 ]
  %111 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %112 = load ptr, ptr %111, align 8, !tbaa !17
  %113 = icmp eq ptr %112, null
  br i1 %113, label %235, label %114

114:                                              ; preds = %109
  %115 = load i64, ptr %0, align 8
  %116 = or i64 %115, 4194304
  store i64 %116, ptr %0, align 8
  tail call fastcc void @add_byte_size_attribute(ptr noundef nonnull %110, ptr noundef nonnull %0)
  %117 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !17
  %119 = icmp eq ptr %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = getelementptr i8, ptr %118, i64 24
  %122 = load i32, ptr %121, align 8, !tbaa !17
  tail call fastcc void @add_src_coords_attributes(ptr noundef nonnull %110, i32 %122)
  br label %123

123:                                              ; preds = %120, %114
  %124 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 3
  %125 = load ptr, ptr %124, align 8, !tbaa !174
  %126 = icmp eq ptr %125, null
  br i1 %126, label %127, label %145

127:                                              ; preds = %123
  %128 = tail call fastcc ptr @scope_die_for(ptr noundef nonnull %0, ptr noundef %1)
  %129 = icmp eq ptr %128, null
  br i1 %129, label %145, label %130

130:                                              ; preds = %127
  %131 = icmp eq ptr %128, %110
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %133

133:                                              ; preds = %132, %130
  store ptr %128, ptr %124, align 8, !tbaa !174
  %134 = getelementptr inbounds %struct.die_struct, ptr %128, i64 0, i32 4
  %135 = load ptr, ptr %134, align 8, !tbaa !175
  %136 = icmp eq ptr %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.die_struct, ptr %135, i64 0, i32 5
  %139 = load ptr, ptr %138, align 8, !tbaa !176
  %140 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 5
  store ptr %139, ptr %140, align 8, !tbaa !176
  br label %143

141:                                              ; preds = %133
  %142 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 5
  br label %143

143:                                              ; preds = %141, %137
  %144 = phi ptr [ %142, %141 ], [ %138, %137 ]
  store ptr %110, ptr %144, align 8, !tbaa !176
  store ptr %110, ptr %134, align 8, !tbaa !175
  br label %145

145:                                              ; preds = %143, %127, %123
  %146 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %147 = load ptr, ptr %146, align 8, !tbaa !17
  %148 = icmp eq ptr %147, null
  br i1 %148, label %261, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 4
  br label %151

151:                                              ; preds = %149, %231
  %152 = phi ptr [ %147, %149 ], [ %233, %231 ]
  %153 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 40, ptr %153, align 8, !tbaa !185
  %154 = icmp eq ptr %153, %110
  br i1 %154, label %155, label %156

155:                                              ; preds = %151
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %156

156:                                              ; preds = %155, %151
  %157 = getelementptr inbounds %struct.die_struct, ptr %153, i64 0, i32 3
  store ptr %110, ptr %157, align 8, !tbaa !174
  %158 = load ptr, ptr %150, align 8, !tbaa !175
  %159 = icmp eq ptr %158, null
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.die_struct, ptr %158, i64 0, i32 5
  %162 = load ptr, ptr %161, align 8, !tbaa !176
  %163 = getelementptr inbounds %struct.die_struct, ptr %153, i64 0, i32 5
  store ptr %162, ptr %163, align 8, !tbaa !176
  br label %166

164:                                              ; preds = %156
  %165 = getelementptr inbounds %struct.die_struct, ptr %153, i64 0, i32 5
  br label %166

166:                                              ; preds = %160, %164
  %167 = phi ptr [ %165, %164 ], [ %161, %160 ]
  store ptr %153, ptr %167, align 8, !tbaa !176
  store ptr %153, ptr %150, align 8, !tbaa !175
  %168 = getelementptr inbounds %struct.tree_list, ptr %152, i64 0, i32 2
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  %170 = getelementptr inbounds %struct.tree_list, ptr %152, i64 0, i32 1
  %171 = load ptr, ptr %170, align 8, !tbaa !17
  %172 = getelementptr inbounds %struct.tree_identifier, ptr %171, i64 0, i32 1
  %173 = load ptr, ptr %172, align 8, !tbaa !17
  %174 = icmp eq ptr %173, null
  br i1 %174, label %185, label %175

175:                                              ; preds = %166
  %176 = load i8, ptr %173, align 1, !tbaa !17
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %185, label %178

178:                                              ; preds = %175
  %179 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %180 = icmp eq ptr %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %178
  %182 = tail call ptr %179(ptr noundef nonnull %173) #31
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi ptr [ %182, %181 ], [ %173, %178 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %153, i32 noundef 3, ptr noundef %184)
  br label %185

185:                                              ; preds = %166, %175, %183
  %186 = load i64, ptr %169, align 8
  %187 = and i64 %186, 65535
  %188 = icmp eq i64 %187, 33
  br i1 %188, label %189, label %192

189:                                              ; preds = %185
  %190 = getelementptr inbounds %struct.tree_decl_common, ptr %169, i64 0, i32 5
  %191 = load ptr, ptr %190, align 8, !tbaa !17
  br label %192

192:                                              ; preds = %189, %185
  %193 = phi ptr [ %191, %189 ], [ %169, %185 ]
  %194 = getelementptr inbounds %struct.tree_common, ptr %193, i64 0, i32 2
  %195 = load ptr, ptr %194, align 8, !tbaa !17
  %196 = load i64, ptr %195, align 8
  %197 = trunc i64 %196 to i32
  %198 = lshr i32 %197, 21
  %199 = and i32 %198, 1
  %200 = tail call i32 @host_integerp(ptr noundef %193, i32 noundef %199) #31
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %231, label %202

202:                                              ; preds = %192
  %203 = tail call i32 @tree_int_cst_sgn(ptr noundef nonnull %193) #31
  %204 = icmp sgt i32 %203, 0
  %205 = zext i1 %204 to i32
  %206 = tail call i64 @tree_low_cst(ptr noundef nonnull %193, i32 noundef %205) #31
  %207 = getelementptr inbounds %struct.die_struct, ptr %153, i64 0, i32 2
  %208 = load ptr, ptr %207, align 8, !tbaa !6
  %209 = icmp eq ptr %208, null
  br i1 %209, label %210, label %213

210:                                              ; preds = %202
  %211 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %211, ptr %207, align 8, !tbaa !157
  %212 = icmp eq ptr %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %210, %202
  %214 = phi ptr [ %211, %210 ], [ %208, %202 ]
  %215 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %214, i64 0, i32 1
  %216 = load i32, ptr %215, align 4, !tbaa !201
  %217 = load i32, ptr %214, align 8, !tbaa !159
  %218 = icmp eq i32 %216, %217
  br i1 %218, label %219, label %223

219:                                              ; preds = %213, %210
  %220 = phi ptr [ %214, %213 ], [ null, %210 ]
  %221 = tail call ptr @vec_gc_o_reserve(ptr noundef %220, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %221, ptr %207, align 8, !tbaa !6
  %222 = load i32, ptr %221, align 8, !tbaa !159
  br label %223

223:                                              ; preds = %213, %219
  %224 = phi i32 [ %217, %213 ], [ %222, %219 ]
  %225 = phi ptr [ %214, %213 ], [ %221, %219 ]
  %226 = add i32 %224, 1
  store i32 %226, ptr %225, align 8, !tbaa !159
  %227 = zext i32 %224 to i64
  %228 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %225, i64 0, i32 2, i64 %227
  store i32 28, ptr %228, align 8, !tbaa.struct !179
  %229 = getelementptr inbounds i8, ptr %228, i64 8
  store i32 5, ptr %229, align 8, !tbaa.struct !202
  %230 = getelementptr inbounds i8, ptr %228, i64 16
  store i64 %206, ptr %230, align 8, !tbaa.struct !203
  br label %231

231:                                              ; preds = %223, %192
  %232 = getelementptr inbounds %struct.tree_common, ptr %152, i64 0, i32 1
  %233 = load ptr, ptr %232, align 8, !tbaa !17
  %234 = icmp eq ptr %233, null
  br i1 %234, label %261, label %151, !llvm.loop !366

235:                                              ; preds = %109
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %3)
  %236 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 2
  %237 = load ptr, ptr %236, align 8, !tbaa !6
  %238 = icmp eq ptr %237, null
  br i1 %238, label %239, label %242

239:                                              ; preds = %235
  %240 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %240, ptr %236, align 8, !tbaa !157
  %241 = icmp eq ptr %240, null
  br i1 %241, label %248, label %242

242:                                              ; preds = %239, %235
  %243 = phi ptr [ %240, %239 ], [ %237, %235 ]
  %244 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %243, i64 0, i32 1
  %245 = load i32, ptr %244, align 4, !tbaa !201
  %246 = load i32, ptr %243, align 8, !tbaa !159
  %247 = icmp eq i32 %245, %246
  br i1 %247, label %248, label %252

248:                                              ; preds = %242, %239
  %249 = phi ptr [ %243, %242 ], [ null, %239 ]
  %250 = tail call ptr @vec_gc_o_reserve(ptr noundef %249, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %250, ptr %236, align 8, !tbaa !6
  %251 = load i32, ptr %250, align 8, !tbaa !159
  br label %252

252:                                              ; preds = %242, %248
  %253 = phi i32 [ %246, %242 ], [ %251, %248 ]
  %254 = phi ptr [ %243, %242 ], [ %250, %248 ]
  %255 = add i32 %253, 1
  store i32 %255, ptr %254, align 8, !tbaa !159
  %256 = zext i32 %253 to i64
  %257 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %254, i64 0, i32 2, i64 %256
  store i32 60, ptr %257, align 8, !tbaa.struct !179
  %258 = getelementptr inbounds i8, ptr %257, i64 8
  store i32 9, ptr %258, align 8, !tbaa.struct !202
  %259 = getelementptr inbounds i8, ptr %257, i64 16
  store i8 1, ptr %259, align 8, !tbaa.struct !203
  %260 = getelementptr inbounds i8, ptr %257, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %260, ptr noundef nonnull align 1 dereferenceable(15) %3, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %3)
  br label %261

261:                                              ; preds = %231, %145, %252
  br label %262

262:                                              ; preds = %261, %294
  %263 = phi ptr [ %295, %294 ], [ %110, %261 ]
  %264 = getelementptr inbounds %struct.die_struct, ptr %263, i64 0, i32 2
  %265 = load ptr, ptr %264, align 8, !tbaa !157
  %266 = icmp eq ptr %265, null
  br i1 %266, label %298, label %267

267:                                              ; preds = %262, %288
  %268 = phi ptr [ %289, %288 ], [ %265, %262 ]
  %269 = phi ptr [ %290, %288 ], [ %265, %262 ]
  %270 = phi i64 [ %292, %288 ], [ 0, %262 ]
  %271 = phi ptr [ %291, %288 ], [ null, %262 ]
  %272 = load i32, ptr %269, align 8, !tbaa !159
  %273 = zext i32 %272 to i64
  %274 = icmp ult i64 %270, %273
  br i1 %274, label %275, label %294

275:                                              ; preds = %267
  %276 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %269, i64 0, i32 2, i64 %270
  %277 = load i32, ptr %276, align 8, !tbaa !161
  switch i32 %277, label %288 [
    i32 3, label %297
    i32 71, label %278
    i32 49, label %278
  ]

278:                                              ; preds = %275, %275
  %279 = getelementptr i8, ptr %276, i64 8
  %280 = load i32, ptr %279, align 8, !tbaa !163
  %281 = icmp eq i32 %280, 10
  br i1 %281, label %284, label %282

282:                                              ; preds = %278
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %283 = load ptr, ptr %264, align 8, !tbaa !157
  br label %284

284:                                              ; preds = %282, %278
  %285 = phi ptr [ %268, %278 ], [ %283, %282 ]
  %286 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %269, i64 0, i32 2, i64 %270, i32 1, i32 1
  %287 = load ptr, ptr %286, align 8, !tbaa !17
  br label %288

288:                                              ; preds = %275, %284
  %289 = phi ptr [ %285, %284 ], [ %268, %275 ]
  %290 = phi ptr [ %285, %284 ], [ %269, %275 ]
  %291 = phi ptr [ %287, %284 ], [ %271, %275 ]
  %292 = add nuw nsw i64 %270, 1
  %293 = icmp eq ptr %290, null
  br i1 %293, label %294, label %267, !llvm.loop !164

294:                                              ; preds = %288, %267
  %295 = phi ptr [ %291, %288 ], [ %271, %267 ]
  %296 = icmp eq ptr %295, null
  br i1 %296, label %298, label %262

297:                                              ; preds = %275
  tail call fastcc void @add_pubtype(ptr noundef %0, ptr noundef nonnull %110)
  br label %298

298:                                              ; preds = %262, %294, %297, %67
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_struct_or_union_type_die(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = alloca [15 x i8], align 1
  %5 = getelementptr i8, ptr %0, i64 88
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.tree_decl_common, ptr %12, i64 0, i32 2
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 33554432
  %18 = icmp eq i64 %17, 0
  br label %19

19:                                               ; preds = %10, %14, %3
  %20 = phi i1 [ false, %3 ], [ true, %10 ], [ %18, %14 ]
  %21 = icmp eq ptr %1, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = load i32, ptr %1, align 8, !tbaa !185
  %24 = icmp eq i32 %23, 57
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i1 [ false, %19 ], [ %24, %22 ]
  br i1 %20, label %27, label %30

27:                                               ; preds = %25
  %28 = tail call zeroext i8 @should_emit_struct_debug(ptr noundef nonnull %0, i32 noundef %2) #31
  %29 = icmp ne i8 %28, 0
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i1 [ false, %25 ], [ %29, %27 ]
  %32 = icmp eq ptr %6, null
  %33 = select i1 %32, i1 true, i1 %31
  br i1 %33, label %34, label %603

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = load i64, ptr %36, align 8
  %40 = trunc i64 %39 to i16
  %41 = icmp ult i16 %40, 39
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = trunc i64 %39 to i39
  %44 = and i39 %43, 65535
  %45 = lshr i39 -274877415424, %44
  %46 = and i39 %45, 1
  %47 = icmp ne i39 %46, 0
  br label %48

48:                                               ; preds = %42, %38, %34
  %49 = phi i1 [ false, %34 ], [ false, %38 ], [ %47, %42 ]
  %50 = tail call fastcc ptr @scope_die_for(ptr noundef nonnull %0, ptr noundef %1)
  br i1 %32, label %55, label %51

51:                                               ; preds = %48
  %52 = load ptr, ptr @comp_unit_die, align 8
  %53 = icmp eq ptr %50, %52
  %54 = select i1 %49, i1 %53, i1 false
  br i1 %54, label %55, label %165

55:                                               ; preds = %51, %48
  %56 = load i64, ptr %0, align 8
  %57 = and i64 %56, 65535
  %58 = icmp eq i64 %57, 16
  br i1 %58, label %59, label %73

59:                                               ; preds = %55
  %60 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 1), align 8, !tbaa !367
  %61 = icmp eq ptr %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %59
  %63 = tail call i32 %60(ptr noundef nonnull %0) #31
  switch i32 %63, label %72 [
    i32 0, label %73
    i32 1, label %64
    i32 2, label %65
  ]

64:                                               ; preds = %62
  br label %73

65:                                               ; preds = %62
  %66 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %67 = icmp slt i32 %66, 3
  %68 = load i32, ptr @dwarf_strict, align 4
  %69 = icmp ne i32 %68, 0
  %70 = select i1 %67, i1 %69, i1 false
  %71 = select i1 %70, i32 19, i32 56
  br label %73

72:                                               ; preds = %62
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 17372, ptr noundef nonnull @.str.5) #31
  br label %73

73:                                               ; preds = %72, %65, %64, %62, %59, %55
  %74 = phi i32 [ 23, %55 ], [ 0, %72 ], [ 2, %64 ], [ 19, %59 ], [ 19, %62 ], [ %71, %65 ]
  %75 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 %74, ptr %75, align 8, !tbaa !185
  %76 = icmp eq ptr %50, null
  br i1 %76, label %93, label %77

77:                                               ; preds = %73
  %78 = icmp eq ptr %75, %50
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %80

80:                                               ; preds = %79, %77
  %81 = getelementptr inbounds %struct.die_struct, ptr %75, i64 0, i32 3
  store ptr %50, ptr %81, align 8, !tbaa !174
  %82 = getelementptr inbounds %struct.die_struct, ptr %50, i64 0, i32 4
  %83 = load ptr, ptr %82, align 8, !tbaa !175
  %84 = icmp eq ptr %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.die_struct, ptr %83, i64 0, i32 5
  %87 = load ptr, ptr %86, align 8, !tbaa !176
  %88 = getelementptr inbounds %struct.die_struct, ptr %75, i64 0, i32 5
  store ptr %87, ptr %88, align 8, !tbaa !176
  br label %91

89:                                               ; preds = %80
  %90 = getelementptr inbounds %struct.die_struct, ptr %75, i64 0, i32 5
  br label %91

91:                                               ; preds = %89, %85
  %92 = phi ptr [ %90, %89 ], [ %86, %85 ]
  store ptr %75, ptr %92, align 8, !tbaa !176
  store ptr %75, ptr %82, align 8, !tbaa !175
  br label %98

93:                                               ; preds = %73
  %94 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %75, ptr %94, align 8, !tbaa !173
  %95 = getelementptr inbounds %struct.limbo_die_struct, ptr %94, i64 0, i32 1
  store ptr %0, ptr %95, align 8, !tbaa !177
  %96 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %97 = getelementptr inbounds %struct.limbo_die_struct, ptr %94, i64 0, i32 2
  store ptr %96, ptr %97, align 8, !tbaa !171
  store ptr %94, ptr @limbo_die_list, align 8, !tbaa !6
  br label %98

98:                                               ; preds = %91, %93
  store ptr %75, ptr %5, align 8, !tbaa !17
  br i1 %32, label %130, label %99

99:                                               ; preds = %98
  %100 = getelementptr inbounds %struct.die_struct, ptr %75, i64 0, i32 2
  %101 = load ptr, ptr %100, align 8, !tbaa !6
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %104, ptr %100, align 8, !tbaa !157
  %105 = icmp eq ptr %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %103, %99
  %107 = phi ptr [ %104, %103 ], [ %101, %99 ]
  %108 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %107, i64 0, i32 1
  %109 = load i32, ptr %108, align 4, !tbaa !201
  %110 = load i32, ptr %107, align 8, !tbaa !159
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %112, label %116

112:                                              ; preds = %106, %103
  %113 = phi ptr [ %107, %106 ], [ null, %103 ]
  %114 = tail call ptr @vec_gc_o_reserve(ptr noundef %113, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %114, ptr %100, align 8, !tbaa !6
  %115 = load i32, ptr %114, align 8, !tbaa !159
  br label %116

116:                                              ; preds = %106, %112
  %117 = phi i32 [ %110, %106 ], [ %115, %112 ]
  %118 = phi ptr [ %107, %106 ], [ %114, %112 ]
  %119 = add i32 %117, 1
  store i32 %119, ptr %118, align 8, !tbaa !159
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %118, i64 0, i32 2, i64 %120
  store i32 71, ptr %121, align 8, !tbaa.struct !179
  %122 = getelementptr inbounds i8, ptr %121, i64 8
  store i32 10, ptr %122, align 8, !tbaa.struct !202
  %123 = getelementptr inbounds i8, ptr %121, i64 16
  store ptr %6, ptr %123, align 8, !tbaa.struct !203
  %124 = getelementptr inbounds i8, ptr %121, i64 24
  store i32 0, ptr %124, align 8, !tbaa.struct !294
  %125 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 6
  %126 = load ptr, ptr %125, align 8, !tbaa !295
  %127 = icmp eq ptr %126, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %116
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7143, ptr noundef nonnull @.str.5) #31
  br label %129

129:                                              ; preds = %116, %128
  store ptr %75, ptr %125, align 8, !tbaa !295
  br label %203

130:                                              ; preds = %98
  %131 = getelementptr i8, ptr %0, i64 96
  %132 = load ptr, ptr %131, align 8, !tbaa !17
  %133 = icmp eq ptr %132, null
  br i1 %133, label %203, label %134

134:                                              ; preds = %130
  %135 = load i64, ptr %132, align 8
  %136 = trunc i64 %135 to i16
  switch i16 %136, label %203 [
    i16 1, label %149
    i16 35, label %137
  ]

137:                                              ; preds = %134
  %138 = getelementptr inbounds %struct.tree_decl_common, ptr %132, i64 0, i32 2
  %139 = load i64, ptr %138, align 8
  %140 = and i64 %139, 1024
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %203

142:                                              ; preds = %137
  %143 = getelementptr inbounds %struct.tree_decl_minimal, ptr %132, i64 0, i32 3
  %144 = load ptr, ptr %143, align 8, !tbaa !17
  %145 = icmp eq ptr %144, null
  br i1 %145, label %203, label %146

146:                                              ; preds = %142
  %147 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %148 = tail call ptr %147(ptr noundef nonnull %132, i32 noundef 2) #31
  br label %152

149:                                              ; preds = %134
  %150 = getelementptr inbounds %struct.tree_identifier, ptr %132, i64 0, i32 1
  %151 = load ptr, ptr %150, align 8, !tbaa !17
  br label %152

152:                                              ; preds = %149, %146
  %153 = phi ptr [ %151, %149 ], [ %148, %146 ]
  %154 = icmp eq ptr %153, null
  br i1 %154, label %203, label %155

155:                                              ; preds = %152
  %156 = load i8, ptr %153, align 1, !tbaa !17
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %203, label %158

158:                                              ; preds = %155
  %159 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %160 = icmp eq ptr %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = tail call ptr %159(ptr noundef nonnull %153) #31
  br label %163

163:                                              ; preds = %161, %158
  %164 = phi ptr [ %162, %161 ], [ %153, %158 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %75, i32 noundef 3, ptr noundef %164)
  br label %203

165:                                              ; preds = %51
  %166 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 2
  %167 = load ptr, ptr %166, align 8, !tbaa !157
  %168 = icmp eq ptr %167, null
  br i1 %168, label %203, label %169

169:                                              ; preds = %165
  %170 = load i32, ptr %167, align 8, !tbaa !159
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %203, label %172

172:                                              ; preds = %169
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %200, %172
  %175 = phi i64 [ 0, %172 ], [ %201, %200 ]
  %176 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %167, i64 0, i32 2, i64 %175
  %177 = load i32, ptr %176, align 8, !tbaa !161
  %178 = icmp eq i32 %177, 60
  br i1 %178, label %179, label %200

179:                                              ; preds = %174
  %180 = trunc i64 %175 to i32
  %181 = getelementptr i8, ptr %176, i64 8
  %182 = load i32, ptr %181, align 8, !tbaa !163
  %183 = icmp eq i32 %182, 14
  br i1 %183, label %184, label %192

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %167, i64 0, i32 2, i64 %175, i32 1, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !17
  %187 = getelementptr inbounds %struct.indirect_string_node, ptr %186, i64 0, i32 1
  %188 = load i32, ptr %187, align 8, !tbaa !267
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %184
  %191 = add i32 %188, -1
  store i32 %191, ptr %187, align 8, !tbaa !267
  br label %192

192:                                              ; preds = %190, %184, %179
  %193 = and i64 %175, 4294967295
  %194 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %167, i64 0, i32 2, i64 %193
  %195 = getelementptr inbounds %struct.dw_attr_struct, ptr %194, i64 1
  %196 = add i32 %170, -1
  store i32 %196, ptr %167, align 8, !tbaa !159
  %197 = sub i32 %196, %180
  %198 = zext i32 %197 to i64
  %199 = shl nuw nsw i64 %198, 5
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %194, ptr nonnull align 8 %195, i64 %199, i1 false)
  br label %203

200:                                              ; preds = %174
  %201 = add nuw nsw i64 %175, 1
  %202 = icmp eq i64 %201, %173
  br i1 %202, label %203, label %174

203:                                              ; preds = %200, %155, %134, %137, %142, %130, %152, %192, %169, %165, %163, %129
  %204 = phi ptr [ %75, %129 ], [ %75, %163 ], [ %6, %165 ], [ %6, %169 ], [ %6, %192 ], [ %75, %152 ], [ %75, %130 ], [ %75, %142 ], [ %75, %137 ], [ %75, %134 ], [ %75, %155 ], [ %6, %200 ]
  %205 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %206 = icmp ugt i32 %205, 1
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = load ptr, ptr %7, align 8, !tbaa !17
  %209 = icmp eq ptr %208, null
  br i1 %209, label %211, label %210

210:                                              ; preds = %207
  tail call fastcc void @gen_generic_params_dies(ptr noundef nonnull %0)
  br label %211

211:                                              ; preds = %210, %207, %203
  %212 = xor i1 %31, true
  %213 = select i1 %212, i1 true, i1 %26
  br i1 %213, label %515, label %214

214:                                              ; preds = %211
  %215 = load i64, ptr %0, align 8
  %216 = or i64 %215, 4194304
  store i64 %216, ptr %0, align 8
  tail call fastcc void @add_byte_size_attribute(ptr noundef nonnull %204, ptr noundef nonnull %0)
  %217 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  %218 = load ptr, ptr %217, align 8, !tbaa !17
  %219 = icmp eq ptr %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %214
  %221 = getelementptr i8, ptr %218, i64 24
  %222 = load i32, ptr %221, align 8, !tbaa !17
  tail call fastcc void @add_src_coords_attributes(ptr noundef nonnull %204, i32 %222)
  br label %223

223:                                              ; preds = %220, %214
  %224 = getelementptr inbounds %struct.die_struct, ptr %204, i64 0, i32 3
  %225 = load ptr, ptr %224, align 8, !tbaa !174
  %226 = icmp eq ptr %225, null
  %227 = icmp ne ptr %50, null
  %228 = select i1 %226, i1 %227, i1 false
  br i1 %228, label %229, label %244

229:                                              ; preds = %223
  %230 = icmp eq ptr %50, %204
  br i1 %230, label %231, label %232

231:                                              ; preds = %229
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %232

232:                                              ; preds = %231, %229
  store ptr %50, ptr %224, align 8, !tbaa !174
  %233 = getelementptr inbounds %struct.die_struct, ptr %50, i64 0, i32 4
  %234 = load ptr, ptr %233, align 8, !tbaa !175
  %235 = icmp eq ptr %234, null
  br i1 %235, label %240, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.die_struct, ptr %234, i64 0, i32 5
  %238 = load ptr, ptr %237, align 8, !tbaa !176
  %239 = getelementptr inbounds %struct.die_struct, ptr %204, i64 0, i32 5
  store ptr %238, ptr %239, align 8, !tbaa !176
  br label %242

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.die_struct, ptr %204, i64 0, i32 5
  br label %242

242:                                              ; preds = %240, %236
  %243 = phi ptr [ %241, %240 ], [ %237, %236 ]
  store ptr %204, ptr %243, align 8, !tbaa !176
  store ptr %204, ptr %233, align 8, !tbaa !175
  br label %244

244:                                              ; preds = %242, %223
  %245 = load ptr, ptr @decl_scope_table, align 8, !tbaa !6
  %246 = icmp eq ptr %245, null
  br i1 %246, label %252, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %struct.VEC_tree_base, ptr %245, i64 0, i32 1
  %249 = load i32, ptr %248, align 4, !tbaa !365
  %250 = load i32, ptr %245, align 8, !tbaa !182
  %251 = icmp eq i32 %249, %250
  br i1 %251, label %252, label %255

252:                                              ; preds = %247, %244
  %253 = tail call ptr @vec_gc_p_reserve(ptr noundef %245, i32 noundef 1) #31
  store ptr %253, ptr @decl_scope_table, align 8, !tbaa !6
  %254 = load i32, ptr %253, align 8, !tbaa !182
  br label %255

255:                                              ; preds = %247, %252
  %256 = phi i32 [ %250, %247 ], [ %254, %252 ]
  %257 = phi ptr [ %245, %247 ], [ %253, %252 ]
  %258 = add i32 %256, 1
  store i32 %258, ptr %257, align 8, !tbaa !182
  %259 = zext i32 %256 to i64
  %260 = getelementptr inbounds %struct.VEC_tree_base, ptr %257, i64 0, i32 2, i64 %259
  store ptr %0, ptr %260, align 8, !tbaa !6
  %261 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 17
  %262 = load ptr, ptr %261, align 8, !tbaa !17
  %263 = icmp eq ptr %262, null
  br i1 %263, label %440, label %264

264:                                              ; preds = %255
  %265 = getelementptr inbounds %struct.tree_binfo, ptr %262, i64 0, i32 5
  %266 = load ptr, ptr %265, align 8, !tbaa !17
  %267 = getelementptr inbounds %struct.tree_binfo, ptr %262, i64 0, i32 9
  %268 = load i32, ptr %267, align 8, !tbaa !182
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %440, label %270

270:                                              ; preds = %264
  %271 = icmp eq ptr %266, null
  %272 = getelementptr inbounds %struct.die_struct, ptr %204, i64 0, i32 4
  br label %273

273:                                              ; preds = %270, %435
  %274 = phi i64 [ 0, %270 ], [ %436, %435 ]
  %275 = getelementptr inbounds %struct.VEC_tree_base, ptr %267, i64 0, i32 2, i64 %274
  %276 = load ptr, ptr %275, align 8, !tbaa !6
  %277 = getelementptr inbounds %struct.VEC_tree_base, ptr %266, i64 0, i32 2, i64 %274
  %278 = select i1 %271, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 22), ptr %277
  %279 = load ptr, ptr %278, align 8, !tbaa !6
  %280 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 28, ptr %280, align 8, !tbaa !185
  %281 = icmp eq ptr %280, %204
  br i1 %281, label %282, label %283

282:                                              ; preds = %273
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %283

283:                                              ; preds = %282, %273
  %284 = getelementptr inbounds %struct.die_struct, ptr %280, i64 0, i32 3
  store ptr %204, ptr %284, align 8, !tbaa !174
  %285 = load ptr, ptr %272, align 8, !tbaa !175
  %286 = icmp eq ptr %285, null
  br i1 %286, label %291, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %struct.die_struct, ptr %285, i64 0, i32 5
  %289 = load ptr, ptr %288, align 8, !tbaa !176
  %290 = getelementptr inbounds %struct.die_struct, ptr %280, i64 0, i32 5
  store ptr %289, ptr %290, align 8, !tbaa !176
  br label %293

291:                                              ; preds = %283
  %292 = getelementptr inbounds %struct.die_struct, ptr %280, i64 0, i32 5
  br label %293

293:                                              ; preds = %287, %291
  %294 = phi ptr [ %292, %291 ], [ %288, %287 ]
  store ptr %280, ptr %294, align 8, !tbaa !176
  store ptr %280, ptr %272, align 8, !tbaa !175
  %295 = getelementptr inbounds %struct.tree_common, ptr %276, i64 0, i32 2
  %296 = load ptr, ptr %295, align 8, !tbaa !17
  %297 = load i64, ptr %296, align 8
  %298 = trunc i64 %297 to i32
  %299 = and i32 %298, 65535
  %300 = and i32 %298, 65534
  %301 = icmp eq i32 %300, 8
  %302 = icmp eq i32 %299, 11
  %303 = or i1 %301, %302
  br i1 %303, label %304, label %316

304:                                              ; preds = %293
  %305 = getelementptr inbounds %struct.tree_common, ptr %296, i64 0, i32 2
  %306 = load ptr, ptr %305, align 8, !tbaa !17
  %307 = icmp eq ptr %306, null
  br i1 %307, label %316, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %struct.tree_type, ptr %296, i64 0, i32 12
  %310 = load ptr, ptr %309, align 8, !tbaa !17
  %311 = icmp eq ptr %310, null
  br i1 %311, label %312, label %316

312:                                              ; preds = %308
  %313 = load i64, ptr %306, align 8
  %314 = trunc i64 %313 to i32
  %315 = and i32 %314, 65535
  br label %316

316:                                              ; preds = %312, %308, %304, %293
  %317 = phi i64 [ %313, %312 ], [ %297, %308 ], [ %297, %304 ], [ %297, %293 ]
  %318 = phi ptr [ %306, %312 ], [ %296, %308 ], [ %296, %304 ], [ %296, %293 ]
  %319 = phi i32 [ %315, %312 ], [ %299, %308 ], [ %299, %304 ], [ %299, %293 ]
  %320 = trunc i32 %319 to i16
  switch i16 %320, label %321 [
    i16 19, label %355
    i16 0, label %355
  ]

321:                                              ; preds = %316
  %322 = trunc i64 %317 to i32
  %323 = lshr i32 %322, 20
  %324 = and i32 %323, 1
  %325 = lshr i32 %322, 19
  %326 = and i32 %325, 1
  %327 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %318, i32 noundef %324, i32 noundef %326, ptr noundef nonnull %204)
  %328 = icmp eq ptr %327, null
  br i1 %328, label %355, label %329

329:                                              ; preds = %321
  %330 = getelementptr inbounds %struct.die_struct, ptr %280, i64 0, i32 2
  %331 = load ptr, ptr %330, align 8, !tbaa !6
  %332 = icmp eq ptr %331, null
  br i1 %332, label %333, label %336

333:                                              ; preds = %329
  %334 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %334, ptr %330, align 8, !tbaa !157
  %335 = icmp eq ptr %334, null
  br i1 %335, label %342, label %336

336:                                              ; preds = %333, %329
  %337 = phi ptr [ %334, %333 ], [ %331, %329 ]
  %338 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %337, i64 0, i32 1
  %339 = load i32, ptr %338, align 4, !tbaa !201
  %340 = load i32, ptr %337, align 8, !tbaa !159
  %341 = icmp eq i32 %339, %340
  br i1 %341, label %342, label %346

342:                                              ; preds = %336, %333
  %343 = phi ptr [ %337, %336 ], [ null, %333 ]
  %344 = tail call ptr @vec_gc_o_reserve(ptr noundef %343, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %344, ptr %330, align 8, !tbaa !6
  %345 = load i32, ptr %344, align 8, !tbaa !159
  br label %346

346:                                              ; preds = %336, %342
  %347 = phi i32 [ %340, %336 ], [ %345, %342 ]
  %348 = phi ptr [ %337, %336 ], [ %344, %342 ]
  %349 = add i32 %347, 1
  store i32 %349, ptr %348, align 8, !tbaa !159
  %350 = zext i32 %347 to i64
  %351 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %348, i64 0, i32 2, i64 %350
  store i32 73, ptr %351, align 8, !tbaa.struct !179
  %352 = getelementptr inbounds i8, ptr %351, i64 8
  store i32 10, ptr %352, align 8, !tbaa.struct !202
  %353 = getelementptr inbounds i8, ptr %351, i64 16
  store ptr %327, ptr %353, align 8, !tbaa.struct !203
  %354 = getelementptr inbounds i8, ptr %351, i64 24
  store i32 0, ptr %354, align 8, !tbaa.struct !294
  br label %355

355:                                              ; preds = %346, %321, %316, %316
  tail call fastcc void @add_data_member_location_attribute(ptr noundef nonnull %280, ptr noundef nonnull %276)
  %356 = load i64, ptr %276, align 8
  %357 = and i64 %356, 67108864
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %384, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %struct.die_struct, ptr %280, i64 0, i32 2
  %361 = load ptr, ptr %360, align 8, !tbaa !6
  %362 = icmp eq ptr %361, null
  br i1 %362, label %363, label %366

363:                                              ; preds = %359
  %364 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %364, ptr %360, align 8, !tbaa !157
  %365 = icmp eq ptr %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %363, %359
  %367 = phi ptr [ %364, %363 ], [ %361, %359 ]
  %368 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %367, i64 0, i32 1
  %369 = load i32, ptr %368, align 4, !tbaa !201
  %370 = load i32, ptr %367, align 8, !tbaa !159
  %371 = icmp eq i32 %369, %370
  br i1 %371, label %372, label %376

372:                                              ; preds = %366, %363
  %373 = phi ptr [ %367, %366 ], [ null, %363 ]
  %374 = tail call ptr @vec_gc_o_reserve(ptr noundef %373, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %374, ptr %360, align 8, !tbaa !6
  %375 = load i32, ptr %374, align 8, !tbaa !159
  br label %376

376:                                              ; preds = %366, %372
  %377 = phi i32 [ %370, %366 ], [ %375, %372 ]
  %378 = phi ptr [ %367, %366 ], [ %374, %372 ]
  %379 = add i32 %377, 1
  store i32 %379, ptr %378, align 8, !tbaa !159
  %380 = zext i32 %377 to i64
  %381 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %378, i64 0, i32 2, i64 %380
  store i32 76, ptr %381, align 8, !tbaa.struct !179
  %382 = getelementptr inbounds i8, ptr %381, i64 8
  store i32 6, ptr %382, align 8, !tbaa.struct !202
  %383 = getelementptr inbounds i8, ptr %381, i64 16
  store i64 1, ptr %383, align 8, !tbaa.struct !203
  br label %384

384:                                              ; preds = %376, %355
  %385 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 22), align 16, !tbaa !6
  %386 = icmp eq ptr %385, %279
  br i1 %386, label %387, label %403

387:                                              ; preds = %384
  %388 = getelementptr inbounds %struct.die_struct, ptr %280, i64 0, i32 2
  %389 = load ptr, ptr %388, align 8, !tbaa !6
  %390 = icmp eq ptr %389, null
  br i1 %390, label %391, label %394

391:                                              ; preds = %387
  %392 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %392, ptr %388, align 8, !tbaa !157
  %393 = icmp eq ptr %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %391, %387
  %395 = phi ptr [ %392, %391 ], [ %389, %387 ]
  %396 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %395, i64 0, i32 1
  %397 = load i32, ptr %396, align 4, !tbaa !201
  %398 = load i32, ptr %395, align 8, !tbaa !159
  %399 = icmp eq i32 %397, %398
  br i1 %399, label %400, label %426

400:                                              ; preds = %394, %391
  %401 = phi ptr [ %395, %394 ], [ null, %391 ]
  %402 = tail call ptr @vec_gc_o_reserve(ptr noundef %401, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %402, ptr %388, align 8, !tbaa !6
  br label %422

403:                                              ; preds = %384
  %404 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 23), align 8, !tbaa !6
  %405 = icmp eq ptr %404, %279
  br i1 %405, label %406, label %435

406:                                              ; preds = %403
  %407 = getelementptr inbounds %struct.die_struct, ptr %280, i64 0, i32 2
  %408 = load ptr, ptr %407, align 8, !tbaa !6
  %409 = icmp eq ptr %408, null
  br i1 %409, label %410, label %413

410:                                              ; preds = %406
  %411 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %411, ptr %407, align 8, !tbaa !157
  %412 = icmp eq ptr %411, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %410, %406
  %414 = phi ptr [ %411, %410 ], [ %408, %406 ]
  %415 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %414, i64 0, i32 1
  %416 = load i32, ptr %415, align 4, !tbaa !201
  %417 = load i32, ptr %414, align 8, !tbaa !159
  %418 = icmp eq i32 %416, %417
  br i1 %418, label %419, label %426

419:                                              ; preds = %413, %410
  %420 = phi ptr [ %414, %413 ], [ null, %410 ]
  %421 = tail call ptr @vec_gc_o_reserve(ptr noundef %420, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %421, ptr %407, align 8, !tbaa !6
  br label %422

422:                                              ; preds = %400, %419
  %423 = phi ptr [ %421, %419 ], [ %402, %400 ]
  %424 = phi i64 [ 2, %419 ], [ 1, %400 ]
  %425 = load i32, ptr %423, align 8, !tbaa !159
  br label %426

426:                                              ; preds = %422, %413, %394
  %427 = phi i32 [ %398, %394 ], [ %417, %413 ], [ %425, %422 ]
  %428 = phi ptr [ %395, %394 ], [ %414, %413 ], [ %423, %422 ]
  %429 = phi i64 [ 1, %394 ], [ 2, %413 ], [ %424, %422 ]
  %430 = add i32 %427, 1
  store i32 %430, ptr %428, align 8, !tbaa !159
  %431 = zext i32 %427 to i64
  %432 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %428, i64 0, i32 2, i64 %431
  store i32 50, ptr %432, align 8
  %433 = getelementptr inbounds i8, ptr %432, i64 8
  store i32 6, ptr %433, align 8
  %434 = getelementptr inbounds i8, ptr %432, i64 16
  store i64 %429, ptr %434, align 8
  br label %435

435:                                              ; preds = %426, %403
  %436 = add nuw nsw i64 %274, 1
  %437 = load i32, ptr %267, align 8, !tbaa !182
  %438 = zext i32 %437 to i64
  %439 = icmp ult i64 %436, %438
  br i1 %439, label %273, label %440, !llvm.loop !368

440:                                              ; preds = %435, %264, %255
  %441 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %442 = load ptr, ptr %441, align 8, !tbaa !17
  %443 = icmp eq ptr %442, null
  br i1 %443, label %457, label %444

444:                                              ; preds = %440, %453
  %445 = phi ptr [ %455, %453 ], [ %442, %440 ]
  %446 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %447 = getelementptr inbounds %struct.tree_decl_minimal, ptr %445, i64 0, i32 2
  %448 = load i32, ptr %447, align 4, !tbaa !17
  %449 = tail call ptr @htab_find_with_hash(ptr noundef %446, ptr noundef nonnull %445, i32 noundef %448) #31
  %450 = icmp eq ptr %449, null
  br i1 %450, label %452, label %451

451:                                              ; preds = %444
  tail call fastcc void @splice_child_die(ptr noundef nonnull %204, ptr noundef nonnull %449)
  br label %453

452:                                              ; preds = %444
  tail call fastcc void @gen_decl_die(ptr noundef nonnull %445, ptr noundef null, ptr noundef nonnull %204)
  br label %453

453:                                              ; preds = %452, %451
  %454 = getelementptr inbounds %struct.tree_common, ptr %445, i64 0, i32 1
  %455 = load ptr, ptr %454, align 8, !tbaa !17
  %456 = icmp eq ptr %455, null
  br i1 %456, label %457, label %444, !llvm.loop !369

457:                                              ; preds = %453, %440
  %458 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 14
  %459 = load ptr, ptr %458, align 8, !tbaa !17
  %460 = icmp eq ptr %459, null
  br i1 %460, label %478, label %461

461:                                              ; preds = %457, %474
  %462 = phi ptr [ %476, %474 ], [ %459, %457 ]
  %463 = getelementptr inbounds %struct.tree_decl_common, ptr %462, i64 0, i32 7
  %464 = load ptr, ptr %463, align 8, !tbaa !17
  %465 = icmp eq ptr %464, null
  br i1 %465, label %466, label %474

466:                                              ; preds = %461
  %467 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %468 = getelementptr inbounds %struct.tree_decl_minimal, ptr %462, i64 0, i32 2
  %469 = load i32, ptr %468, align 4, !tbaa !17
  %470 = tail call ptr @htab_find_with_hash(ptr noundef %467, ptr noundef nonnull %462, i32 noundef %469) #31
  %471 = icmp eq ptr %470, null
  br i1 %471, label %473, label %472

472:                                              ; preds = %466
  tail call fastcc void @splice_child_die(ptr noundef nonnull %204, ptr noundef nonnull %470)
  br label %474

473:                                              ; preds = %466
  tail call fastcc void @gen_decl_die(ptr noundef nonnull %462, ptr noundef null, ptr noundef nonnull %204)
  br label %474

474:                                              ; preds = %473, %472, %461
  %475 = getelementptr inbounds %struct.tree_common, ptr %462, i64 0, i32 1
  %476 = load ptr, ptr %475, align 8, !tbaa !17
  %477 = icmp eq ptr %476, null
  br i1 %477, label %478, label %461, !llvm.loop !370

478:                                              ; preds = %474, %457
  %479 = load ptr, ptr @decl_scope_table, align 8
  %480 = load i32, ptr %479, align 8, !tbaa !182
  %481 = add i32 %480, -1
  store i32 %481, ptr %479, align 8, !tbaa !182
  %482 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 13
  %483 = load ptr, ptr %482, align 8, !tbaa !17
  %484 = icmp eq ptr %483, null
  br i1 %484, label %564, label %485

485:                                              ; preds = %478
  %486 = getelementptr inbounds %struct.tree_field_decl, ptr %483, i64 0, i32 5
  %487 = load ptr, ptr %486, align 8, !tbaa !17
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %487, ptr noundef %1, i32 noundef 1)
  %488 = getelementptr i8, ptr %487, i64 88
  %489 = load ptr, ptr %488, align 8, !tbaa !17
  %490 = getelementptr inbounds %struct.die_struct, ptr %204, i64 0, i32 2
  %491 = load ptr, ptr %490, align 8, !tbaa !6
  %492 = icmp eq ptr %491, null
  br i1 %492, label %493, label %496

493:                                              ; preds = %485
  %494 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %494, ptr %490, align 8, !tbaa !157
  %495 = icmp eq ptr %494, null
  br i1 %495, label %502, label %496

496:                                              ; preds = %493, %485
  %497 = phi ptr [ %494, %493 ], [ %491, %485 ]
  %498 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %497, i64 0, i32 1
  %499 = load i32, ptr %498, align 4, !tbaa !201
  %500 = load i32, ptr %497, align 8, !tbaa !159
  %501 = icmp eq i32 %499, %500
  br i1 %501, label %502, label %506

502:                                              ; preds = %496, %493
  %503 = phi ptr [ %497, %496 ], [ null, %493 ]
  %504 = tail call ptr @vec_gc_o_reserve(ptr noundef %503, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %504, ptr %490, align 8, !tbaa !6
  %505 = load i32, ptr %504, align 8, !tbaa !159
  br label %506

506:                                              ; preds = %496, %502
  %507 = phi i32 [ %500, %496 ], [ %505, %502 ]
  %508 = phi ptr [ %497, %496 ], [ %504, %502 ]
  %509 = add i32 %507, 1
  store i32 %509, ptr %508, align 8, !tbaa !159
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %508, i64 0, i32 2, i64 %510
  store i32 29, ptr %511, align 8, !tbaa.struct !179
  %512 = getelementptr inbounds i8, ptr %511, i64 8
  store i32 10, ptr %512, align 8, !tbaa.struct !202
  %513 = getelementptr inbounds i8, ptr %511, i64 16
  store ptr %489, ptr %513, align 8, !tbaa.struct !203
  %514 = getelementptr inbounds i8, ptr %511, i64 24
  store i32 0, ptr %514, align 8, !tbaa.struct !294
  br label %564

515:                                              ; preds = %211
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %4)
  %516 = getelementptr inbounds %struct.die_struct, ptr %204, i64 0, i32 2
  %517 = load ptr, ptr %516, align 8, !tbaa !6
  %518 = icmp eq ptr %517, null
  br i1 %518, label %519, label %522

519:                                              ; preds = %515
  %520 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %520, ptr %516, align 8, !tbaa !157
  %521 = icmp eq ptr %520, null
  br i1 %521, label %528, label %522

522:                                              ; preds = %519, %515
  %523 = phi ptr [ %520, %519 ], [ %517, %515 ]
  %524 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %523, i64 0, i32 1
  %525 = load i32, ptr %524, align 4, !tbaa !201
  %526 = load i32, ptr %523, align 8, !tbaa !159
  %527 = icmp eq i32 %525, %526
  br i1 %527, label %528, label %532

528:                                              ; preds = %522, %519
  %529 = phi ptr [ %523, %522 ], [ null, %519 ]
  %530 = tail call ptr @vec_gc_o_reserve(ptr noundef %529, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %530, ptr %516, align 8, !tbaa !6
  %531 = load i32, ptr %530, align 8, !tbaa !159
  br label %532

532:                                              ; preds = %522, %528
  %533 = phi i32 [ %526, %522 ], [ %531, %528 ]
  %534 = phi ptr [ %523, %522 ], [ %530, %528 ]
  %535 = add i32 %533, 1
  store i32 %535, ptr %534, align 8, !tbaa !159
  %536 = zext i32 %533 to i64
  %537 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %534, i64 0, i32 2, i64 %536
  store i32 60, ptr %537, align 8, !tbaa.struct !179
  %538 = getelementptr inbounds i8, ptr %537, i64 8
  store i32 9, ptr %538, align 8, !tbaa.struct !202
  %539 = getelementptr inbounds i8, ptr %537, i64 16
  store i8 1, ptr %539, align 8, !tbaa.struct !203
  %540 = getelementptr inbounds i8, ptr %537, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %540, ptr noundef nonnull align 1 dereferenceable(15) %4, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %4)
  %541 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  %542 = load ptr, ptr %541, align 8, !tbaa !17
  %543 = icmp eq ptr %542, null
  br i1 %543, label %564, label %544

544:                                              ; preds = %532
  %545 = tail call ptr @decl_function_context(ptr noundef nonnull %542) #31
  %546 = icmp eq ptr %545, null
  br i1 %546, label %547, label %564

547:                                              ; preds = %544
  %548 = load ptr, ptr @incomplete_types, align 8, !tbaa !6
  %549 = icmp eq ptr %548, null
  br i1 %549, label %555, label %550

550:                                              ; preds = %547
  %551 = getelementptr inbounds %struct.VEC_tree_base, ptr %548, i64 0, i32 1
  %552 = load i32, ptr %551, align 4, !tbaa !365
  %553 = load i32, ptr %548, align 8, !tbaa !182
  %554 = icmp eq i32 %552, %553
  br i1 %554, label %555, label %558

555:                                              ; preds = %550, %547
  %556 = tail call ptr @vec_gc_p_reserve(ptr noundef %548, i32 noundef 1) #31
  store ptr %556, ptr @incomplete_types, align 8, !tbaa !6
  %557 = load i32, ptr %556, align 8, !tbaa !182
  br label %558

558:                                              ; preds = %550, %555
  %559 = phi i32 [ %553, %550 ], [ %557, %555 ]
  %560 = phi ptr [ %548, %550 ], [ %556, %555 ]
  %561 = add i32 %559, 1
  store i32 %561, ptr %560, align 8, !tbaa !182
  %562 = zext i32 %559 to i64
  %563 = getelementptr inbounds %struct.VEC_tree_base, ptr %560, i64 0, i32 2, i64 %562
  store ptr %0, ptr %563, align 8, !tbaa !6
  br label %564

564:                                              ; preds = %532, %544, %558, %478, %506
  br label %565

565:                                              ; preds = %564, %599
  %566 = phi ptr [ %600, %599 ], [ %204, %564 ]
  %567 = icmp eq ptr %566, null
  br i1 %567, label %603, label %568

568:                                              ; preds = %565
  %569 = getelementptr inbounds %struct.die_struct, ptr %566, i64 0, i32 2
  %570 = load ptr, ptr %569, align 8, !tbaa !157
  %571 = icmp eq ptr %570, null
  br i1 %571, label %603, label %572

572:                                              ; preds = %568, %593
  %573 = phi ptr [ %594, %593 ], [ %570, %568 ]
  %574 = phi ptr [ %595, %593 ], [ %570, %568 ]
  %575 = phi i64 [ %597, %593 ], [ 0, %568 ]
  %576 = phi ptr [ %596, %593 ], [ null, %568 ]
  %577 = load i32, ptr %574, align 8, !tbaa !159
  %578 = zext i32 %577 to i64
  %579 = icmp ult i64 %575, %578
  br i1 %579, label %580, label %599

580:                                              ; preds = %572
  %581 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %574, i64 0, i32 2, i64 %575
  %582 = load i32, ptr %581, align 8, !tbaa !161
  switch i32 %582, label %593 [
    i32 3, label %602
    i32 71, label %583
    i32 49, label %583
  ]

583:                                              ; preds = %580, %580
  %584 = getelementptr i8, ptr %581, i64 8
  %585 = load i32, ptr %584, align 8, !tbaa !163
  %586 = icmp eq i32 %585, 10
  br i1 %586, label %589, label %587

587:                                              ; preds = %583
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %588 = load ptr, ptr %569, align 8, !tbaa !157
  br label %589

589:                                              ; preds = %587, %583
  %590 = phi ptr [ %573, %583 ], [ %588, %587 ]
  %591 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %574, i64 0, i32 2, i64 %575, i32 1, i32 1
  %592 = load ptr, ptr %591, align 8, !tbaa !17
  br label %593

593:                                              ; preds = %580, %589
  %594 = phi ptr [ %590, %589 ], [ %573, %580 ]
  %595 = phi ptr [ %590, %589 ], [ %574, %580 ]
  %596 = phi ptr [ %592, %589 ], [ %576, %580 ]
  %597 = add nuw nsw i64 %575, 1
  %598 = icmp eq ptr %595, null
  br i1 %598, label %599, label %572, !llvm.loop !164

599:                                              ; preds = %593, %572
  %600 = phi ptr [ %596, %593 ], [ %576, %572 ]
  %601 = icmp eq ptr %600, null
  br i1 %601, label %603, label %565

602:                                              ; preds = %580
  tail call fastcc void @add_pubtype(ptr noundef %0, ptr noundef nonnull %204)
  br label %603

603:                                              ; preds = %568, %599, %565, %602, %30
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @force_decl_die(ptr noundef %0) unnamed_addr #10 {
  %2 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !17
  %5 = tail call ptr @htab_find_with_hash(ptr noundef %2, ptr noundef %0, i32 noundef %4) #31
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %45

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = tail call fastcc ptr @get_context_die(ptr noundef %9)
  %11 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %12 = load i32, ptr %3, align 4, !tbaa !17
  %13 = tail call ptr @htab_find_with_hash(ptr noundef %11, ptr noundef nonnull %0, i32 noundef %12) #31
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %45

15:                                               ; preds = %7
  %16 = load i64, ptr %0, align 8
  %17 = trunc i64 %16 to i16
  switch i16 %17, label %35 [
    i16 29, label %18
    i16 32, label %20
    i16 38, label %28
  ]

18:                                               ; preds = %15
  %19 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  store ptr null, ptr @current_function_decl, align 8, !tbaa !6
  tail call fastcc void @gen_subprogram_die(ptr noundef nonnull %0, ptr noundef %10)
  store ptr %19, ptr @current_function_decl, align 8, !tbaa !6
  br label %39

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, 33554432
  %24 = or i64 %22, 33554432
  store i64 %24, ptr %21, align 8
  tail call fastcc void @gen_decl_die(ptr noundef nonnull %0, ptr noundef null, ptr noundef %10)
  %25 = load i64, ptr %21, align 8
  %26 = and i64 %25, -33554433
  %27 = or i64 %26, %23
  store i64 %27, ptr %21, align 8
  br label %39

28:                                               ; preds = %15
  %29 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %30 = icmp slt i32 %29, 3
  %31 = load i32, ptr @dwarf_strict, align 4
  %32 = icmp ne i32 %31, 0
  %33 = select i1 %30, i1 %32, i1 false
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  tail call void @dwarf2out_decl(ptr noundef nonnull %0)
  br label %39

35:                                               ; preds = %15
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19387, ptr noundef nonnull @.str.5) #31
  br label %39

36:                                               ; preds = %28
  %37 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %18, %20, %34, %35, %36
  %40 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %41 = load i32, ptr %3, align 4, !tbaa !17
  %42 = tail call ptr @htab_find_with_hash(ptr noundef %40, ptr noundef nonnull %0, i32 noundef %41) #31
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19393, ptr noundef nonnull @.str.5) #31
  br label %45

45:                                               ; preds = %36, %39, %44, %1, %7
  %46 = phi ptr [ %13, %7 ], [ %5, %1 ], [ null, %44 ], [ %42, %39 ], [ %37, %36 ]
  ret ptr %46
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @modified_type_die(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) unnamed_addr #10 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = load i64, ptr %0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #31
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %262, label %10

10:                                               ; preds = %4
  %11 = icmp ne i32 %1, 0
  %12 = zext i1 %11 to i32
  %13 = icmp eq i32 %2, 0
  %14 = select i1 %13, i32 0, i32 2
  %15 = or i32 %14, %12
  %16 = tail call ptr @get_qualified_type(ptr noundef nonnull %0, i32 noundef %15) #31
  %17 = icmp eq ptr %16, null
  br i1 %17, label %58, label %18

18:                                               ; preds = %10
  %19 = getelementptr i8, ptr %16, i64 88
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %262

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 12
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = icmp eq ptr %24, null
  br i1 %25, label %58, label %26

26:                                               ; preds = %22
  %27 = load i64, ptr %24, align 8
  %28 = and i64 %27, 65535
  %29 = icmp eq i64 %28, 35
  br i1 %29, label %30, label %58

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.tree_decl_non_common, ptr %24, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %58, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.tree_common, ptr %24, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %16, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  tail call fastcc void @gen_type_die_with_usage(ptr noundef nonnull %16, ptr noundef %3, i32 noundef 1)
  %39 = load ptr, ptr %19, align 8, !tbaa !17
  br label %262

40:                                               ; preds = %34
  %41 = load i64, ptr %36, align 8
  %42 = trunc i64 %41 to i32
  %43 = lshr i32 %42, 20
  %44 = and i32 %43, 1
  %45 = icmp sgt i32 %44, %1
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  %47 = lshr i32 %42, 19
  %48 = and i32 %47, 1
  %49 = icmp sgt i32 %48, %2
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = icmp slt i32 %44, %1
  %52 = icmp slt i32 %48, %2
  %53 = or i1 %51, %52
  %54 = icmp eq ptr %32, %0
  %55 = or i1 %54, %53
  br i1 %55, label %58, label %56

56:                                               ; preds = %50, %46, %40
  %57 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %32, i32 noundef %1, i32 noundef %2, ptr noundef %3)
  br label %262

58:                                               ; preds = %10, %50, %30, %26, %22
  %59 = phi i1 [ false, %30 ], [ false, %26 ], [ true, %22 ], [ false, %50 ], [ true, %10 ]
  %60 = phi ptr [ %24, %30 ], [ %24, %26 ], [ null, %22 ], [ %24, %50 ], [ null, %10 ]
  br i1 %11, label %61, label %88

61:                                               ; preds = %58
  %62 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %63 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 38, ptr %63, align 8, !tbaa !185
  %64 = icmp eq ptr %62, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61
  %66 = icmp eq ptr %63, %62
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %68

68:                                               ; preds = %67, %65
  %69 = getelementptr inbounds %struct.die_struct, ptr %63, i64 0, i32 3
  store ptr %62, ptr %69, align 8, !tbaa !174
  %70 = getelementptr inbounds %struct.die_struct, ptr %62, i64 0, i32 4
  %71 = load ptr, ptr %70, align 8, !tbaa !175
  %72 = icmp eq ptr %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.die_struct, ptr %71, i64 0, i32 5
  %75 = load ptr, ptr %74, align 8, !tbaa !176
  %76 = getelementptr inbounds %struct.die_struct, ptr %63, i64 0, i32 5
  store ptr %75, ptr %76, align 8, !tbaa !176
  br label %79

77:                                               ; preds = %68
  %78 = getelementptr inbounds %struct.die_struct, ptr %63, i64 0, i32 5
  br label %79

79:                                               ; preds = %77, %73
  %80 = phi ptr [ %78, %77 ], [ %74, %73 ]
  store ptr %63, ptr %80, align 8, !tbaa !176
  store ptr %63, ptr %70, align 8, !tbaa !175
  br label %86

81:                                               ; preds = %61
  %82 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %63, ptr %82, align 8, !tbaa !173
  %83 = getelementptr inbounds %struct.limbo_die_struct, ptr %82, i64 0, i32 1
  store ptr %0, ptr %83, align 8, !tbaa !177
  %84 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %85 = getelementptr inbounds %struct.limbo_die_struct, ptr %82, i64 0, i32 2
  store ptr %84, ptr %85, align 8, !tbaa !171
  store ptr %82, ptr @limbo_die_list, align 8, !tbaa !6
  br label %86

86:                                               ; preds = %79, %81
  %87 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %0, i32 noundef 0, i32 noundef %2, ptr noundef %3)
  br label %180

88:                                               ; preds = %58
  br i1 %13, label %116, label %89

89:                                               ; preds = %88
  %90 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %91 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 53, ptr %91, align 8, !tbaa !185
  %92 = icmp eq ptr %90, null
  br i1 %92, label %109, label %93

93:                                               ; preds = %89
  %94 = icmp eq ptr %91, %90
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %96

96:                                               ; preds = %95, %93
  %97 = getelementptr inbounds %struct.die_struct, ptr %91, i64 0, i32 3
  store ptr %90, ptr %97, align 8, !tbaa !174
  %98 = getelementptr inbounds %struct.die_struct, ptr %90, i64 0, i32 4
  %99 = load ptr, ptr %98, align 8, !tbaa !175
  %100 = icmp eq ptr %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.die_struct, ptr %99, i64 0, i32 5
  %103 = load ptr, ptr %102, align 8, !tbaa !176
  %104 = getelementptr inbounds %struct.die_struct, ptr %91, i64 0, i32 5
  store ptr %103, ptr %104, align 8, !tbaa !176
  br label %107

105:                                              ; preds = %96
  %106 = getelementptr inbounds %struct.die_struct, ptr %91, i64 0, i32 5
  br label %107

107:                                              ; preds = %105, %101
  %108 = phi ptr [ %106, %105 ], [ %102, %101 ]
  store ptr %91, ptr %108, align 8, !tbaa !176
  store ptr %91, ptr %98, align 8, !tbaa !175
  br label %114

109:                                              ; preds = %89
  %110 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %91, ptr %110, align 8, !tbaa !173
  %111 = getelementptr inbounds %struct.limbo_die_struct, ptr %110, i64 0, i32 1
  store ptr %0, ptr %111, align 8, !tbaa !177
  %112 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %113 = getelementptr inbounds %struct.limbo_die_struct, ptr %110, i64 0, i32 2
  store ptr %112, ptr %113, align 8, !tbaa !171
  store ptr %110, ptr @limbo_die_list, align 8, !tbaa !6
  br label %114

114:                                              ; preds = %107, %109
  %115 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %0, i32 noundef 0, i32 noundef 0, ptr noundef %3)
  br label %180

116:                                              ; preds = %88
  %117 = trunc i64 %7 to i16
  switch i16 %117, label %152 [
    i16 10, label %118
    i16 12, label %129
    i16 8, label %140
  ]

118:                                              ; preds = %116
  %119 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %120 = tail call fastcc ptr @new_die(i32 noundef 15, ptr noundef %119, ptr noundef nonnull %0)
  %121 = tail call fastcc i64 @simple_type_size_in_bits(ptr noundef nonnull %0)
  %122 = lshr i64 %121, 3
  tail call fastcc void @add_AT_unsigned(ptr noundef %120, i32 noundef 11, i64 noundef %122)
  %123 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !17
  %125 = load i64, ptr %124, align 8
  %126 = icmp ult i64 %125, 72057594037927936
  br i1 %126, label %180, label %127

127:                                              ; preds = %118
  %128 = lshr i64 %125, 56
  tail call fastcc void @add_AT_unsigned(ptr noundef %120, i32 noundef 51, i64 noundef %128)
  br label %180

129:                                              ; preds = %116
  %130 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %131 = tail call fastcc ptr @new_die(i32 noundef 16, ptr noundef %130, ptr noundef nonnull %0)
  %132 = tail call fastcc i64 @simple_type_size_in_bits(ptr noundef nonnull %0)
  %133 = lshr i64 %132, 3
  tail call fastcc void @add_AT_unsigned(ptr noundef %131, i32 noundef 11, i64 noundef %133)
  %134 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !17
  %136 = load i64, ptr %135, align 8
  %137 = icmp ult i64 %136, 72057594037927936
  br i1 %137, label %180, label %138

138:                                              ; preds = %129
  %139 = lshr i64 %136, 56
  tail call fastcc void @add_AT_unsigned(ptr noundef %131, i32 noundef 51, i64 noundef %139)
  br label %180

140:                                              ; preds = %116
  %141 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  %143 = icmp eq ptr %142, null
  br i1 %143, label %152, label %144

144:                                              ; preds = %140
  %145 = call zeroext i8 @subrange_type_for_debug_p(ptr noundef nonnull %0, ptr noundef nonnull %5, ptr noundef nonnull %6) #31
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %144
  %148 = load ptr, ptr %5, align 8, !tbaa !6
  %149 = load ptr, ptr %6, align 8, !tbaa !6
  %150 = call fastcc ptr @subrange_type_die(ptr noundef nonnull %0, ptr noundef %148, ptr noundef %149, ptr noundef %3)
  %151 = load ptr, ptr %141, align 8, !tbaa !17
  br label %180

152:                                              ; preds = %116, %144, %140
  %153 = load i64, ptr %0, align 8
  %154 = trunc i64 %153 to i16
  switch i16 %154, label %155 [
    i16 0, label %156
    i16 19, label %156
    i16 8, label %156
    i16 9, label %156
    i16 11, label %156
    i16 13, label %156
    i16 7, label %156
    i16 15, label %158
    i16 16, label %158
    i16 17, label %158
    i16 18, label %158
    i16 6, label %158
    i16 20, label %158
    i16 21, label %158
    i16 10, label %158
    i16 12, label %158
    i16 5, label %158
    i16 22, label %158
    i16 14, label %158
  ]

155:                                              ; preds = %152
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12070, ptr noundef nonnull @.str.5) #31
  br label %158

156:                                              ; preds = %152, %152, %152, %152, %152, %152, %152
  %157 = call fastcc ptr @base_type_die(ptr noundef nonnull %0)
  br label %180

158:                                              ; preds = %152, %152, %152, %152, %152, %152, %152, %152, %152, %152, %152, %152, %155
  call fastcc void @gen_type_die_with_usage(ptr noundef nonnull %0, ptr noundef %3, i32 noundef 1)
  %159 = load i64, ptr %0, align 8
  %160 = and i64 %159, 65535
  %161 = icmp eq i64 %160, 14
  br i1 %161, label %177, label %162

162:                                              ; preds = %158
  %163 = getelementptr i8, ptr %0, i64 128
  %164 = load ptr, ptr %163, align 8, !tbaa !17
  %165 = load i64, ptr %164, align 8
  %166 = and i64 %165, 65535
  %167 = icmp eq i64 %166, 15
  br i1 %167, label %168, label %173

168:                                              ; preds = %162, %168
  %169 = phi ptr [ %171, %168 ], [ %164, %162 ]
  %170 = getelementptr inbounds %struct.tree_type, ptr %169, i64 0, i32 16
  %171 = load ptr, ptr %170, align 8, !tbaa !17
  %172 = icmp eq ptr %169, %171
  br i1 %172, label %173, label %168, !llvm.loop !361

173:                                              ; preds = %168, %162
  %174 = phi ptr [ %164, %162 ], [ %169, %168 ]
  %175 = getelementptr i8, ptr %174, i64 88
  %176 = load ptr, ptr %175, align 8, !tbaa !17
  br label %262

177:                                              ; preds = %158
  %178 = getelementptr i8, ptr %0, i64 88
  %179 = load ptr, ptr %178, align 8, !tbaa !17
  br label %262

180:                                              ; preds = %114, %138, %129, %156, %147, %118, %127, %86
  %181 = phi ptr [ %87, %86 ], [ %115, %114 ], [ null, %118 ], [ null, %127 ], [ null, %129 ], [ null, %138 ], [ null, %147 ], [ null, %156 ]
  %182 = phi ptr [ null, %86 ], [ null, %114 ], [ %124, %118 ], [ %124, %127 ], [ %135, %129 ], [ %135, %138 ], [ %151, %147 ], [ null, %156 ]
  %183 = phi ptr [ %63, %86 ], [ %91, %114 ], [ %120, %118 ], [ %120, %127 ], [ %131, %129 ], [ %131, %138 ], [ %150, %147 ], [ %157, %156 ]
  br i1 %59, label %218, label %184

184:                                              ; preds = %180
  %185 = load i64, ptr %60, align 8
  %186 = and i64 %185, 65535
  %187 = icmp eq i64 %186, 35
  br i1 %187, label %195, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %190 = load ptr, ptr %189, align 8, !tbaa !17
  %191 = icmp eq ptr %16, %190
  %192 = or i32 %2, %1
  %193 = icmp eq i32 %192, 0
  %194 = or i1 %193, %191
  br i1 %194, label %203, label %218

195:                                              ; preds = %184
  %196 = getelementptr inbounds %struct.tree_common, ptr %60, i64 0, i32 2
  %197 = load ptr, ptr %196, align 8, !tbaa !17
  %198 = icmp eq ptr %197, %16
  br i1 %198, label %199, label %218

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.tree_decl_minimal, ptr %60, i64 0, i32 3
  %201 = load ptr, ptr %200, align 8, !tbaa !17
  %202 = icmp eq ptr %201, null
  br i1 %202, label %218, label %203

203:                                              ; preds = %199, %188
  %204 = phi ptr [ %60, %188 ], [ %201, %199 ]
  %205 = getelementptr inbounds %struct.tree_identifier, ptr %204, i64 0, i32 1
  %206 = load ptr, ptr %205, align 8, !tbaa !17
  %207 = icmp eq ptr %206, null
  br i1 %207, label %218, label %208

208:                                              ; preds = %203
  %209 = load i8, ptr %206, align 1, !tbaa !17
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %218, label %211

211:                                              ; preds = %208
  %212 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %213 = icmp eq ptr %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %211
  %215 = call ptr %212(ptr noundef nonnull %206) #31
  br label %216

216:                                              ; preds = %214, %211
  %217 = phi ptr [ %215, %214 ], [ %206, %211 ]
  call fastcc void @add_AT_string(ptr noundef %183, i32 noundef 3, ptr noundef %217)
  br label %218

218:                                              ; preds = %216, %208, %203, %188, %199, %195, %180
  br i1 %17, label %221, label %219

219:                                              ; preds = %218
  %220 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 11
  store ptr %183, ptr %220, align 8, !tbaa !17
  br label %221

221:                                              ; preds = %219, %218
  %222 = icmp eq ptr %182, null
  br i1 %222, label %231, label %223

223:                                              ; preds = %221
  %224 = load i64, ptr %182, align 8
  %225 = trunc i64 %224 to i32
  %226 = lshr i32 %225, 20
  %227 = and i32 %226, 1
  %228 = lshr i32 %225, 19
  %229 = and i32 %228, 1
  %230 = call fastcc ptr @modified_type_die(ptr noundef nonnull %182, i32 noundef %227, i32 noundef %229, ptr noundef %3)
  br label %231

231:                                              ; preds = %223, %221
  %232 = phi ptr [ %230, %223 ], [ %181, %221 ]
  %233 = icmp eq ptr %232, null
  br i1 %233, label %262, label %234

234:                                              ; preds = %231
  %235 = icmp eq ptr %183, null
  br i1 %235, label %262, label %236

236:                                              ; preds = %234
  %237 = getelementptr inbounds %struct.die_struct, ptr %183, i64 0, i32 2
  %238 = load ptr, ptr %237, align 8, !tbaa !6
  %239 = icmp eq ptr %238, null
  br i1 %239, label %240, label %243

240:                                              ; preds = %236
  %241 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %241, ptr %237, align 8, !tbaa !157
  %242 = icmp eq ptr %241, null
  br i1 %242, label %249, label %243

243:                                              ; preds = %240, %236
  %244 = phi ptr [ %241, %240 ], [ %238, %236 ]
  %245 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %244, i64 0, i32 1
  %246 = load i32, ptr %245, align 4, !tbaa !201
  %247 = load i32, ptr %244, align 8, !tbaa !159
  %248 = icmp eq i32 %246, %247
  br i1 %248, label %249, label %253

249:                                              ; preds = %243, %240
  %250 = phi ptr [ %244, %243 ], [ null, %240 ]
  %251 = call ptr @vec_gc_o_reserve(ptr noundef %250, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %251, ptr %237, align 8, !tbaa !6
  %252 = load i32, ptr %251, align 8, !tbaa !159
  br label %253

253:                                              ; preds = %249, %243
  %254 = phi i32 [ %247, %243 ], [ %252, %249 ]
  %255 = phi ptr [ %244, %243 ], [ %251, %249 ]
  %256 = add i32 %254, 1
  store i32 %256, ptr %255, align 8, !tbaa !159
  %257 = zext i32 %254 to i64
  %258 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %255, i64 0, i32 2, i64 %257
  store i32 73, ptr %258, align 8, !tbaa.struct !179
  %259 = getelementptr inbounds i8, ptr %258, i64 8
  store i32 10, ptr %259, align 8, !tbaa.struct !202
  %260 = getelementptr inbounds i8, ptr %258, i64 16
  store ptr %232, ptr %260, align 8, !tbaa.struct !203
  %261 = getelementptr inbounds i8, ptr %258, i64 24
  store i32 0, ptr %261, align 8, !tbaa.struct !294
  br label %262

262:                                              ; preds = %56, %38, %253, %234, %231, %18, %4, %177, %173
  %263 = phi ptr [ %176, %173 ], [ %179, %177 ], [ null, %4 ], [ %20, %18 ], [ %183, %231 ], [ null, %234 ], [ %183, %253 ], [ %57, %56 ], [ %39, %38 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #31
  ret ptr %263
}

declare ptr @get_qualified_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc i64 @simple_type_size_in_bits(ptr nocapture noundef readonly %0) unnamed_addr #2 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @host_integerp(ptr noundef nonnull %7, i32 noundef 1) #31
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %6, align 8, !tbaa !17
  %14 = tail call i64 @tree_low_cst(ptr noundef %13, i32 noundef 1) #31
  br label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 7
  %17 = load i32, ptr %16, align 8, !tbaa !17
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %5, %1, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %15 ], [ 32, %1 ], [ 0, %5 ]
  ret i64 %20
}

declare zeroext i8 @subrange_type_for_debug_p(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @subrange_type_die(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #10 {
  %5 = tail call i64 @int_size_in_bytes(ptr noundef %0) #31
  %6 = icmp eq ptr %3, null
  %7 = load ptr, ptr @comp_unit_die, align 8
  %8 = select i1 %6, ptr %7, ptr %3
  %9 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 33, ptr %9, align 8, !tbaa !185
  %10 = icmp eq ptr %8, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %4
  %12 = icmp eq ptr %9, %8
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %14

14:                                               ; preds = %13, %11
  %15 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 3
  store ptr %8, ptr %15, align 8, !tbaa !174
  %16 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !175
  %18 = icmp eq ptr %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.die_struct, ptr %17, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !176
  %22 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  store ptr %21, ptr %22, align 8, !tbaa !176
  br label %25

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi ptr [ %24, %23 ], [ %20, %19 ]
  store ptr %9, ptr %26, align 8, !tbaa !176
  store ptr %9, ptr %16, align 8, !tbaa !175
  br label %32

27:                                               ; preds = %4
  %28 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %9, ptr %28, align 8, !tbaa !173
  %29 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 1
  store ptr %0, ptr %29, align 8, !tbaa !177
  %30 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !171
  store ptr %28, ptr @limbo_die_list, align 8, !tbaa !6
  br label %32

32:                                               ; preds = %25, %27
  %33 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = tail call i64 @int_size_in_bytes(ptr noundef %34) #31
  %36 = icmp eq i64 %35, %5
  br i1 %36, label %62, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !6
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %42, ptr %38, align 8, !tbaa !157
  %43 = icmp eq ptr %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %41, %37
  %45 = phi ptr [ %42, %41 ], [ %39, %37 ]
  %46 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %45, i64 0, i32 1
  %47 = load i32, ptr %46, align 4, !tbaa !201
  %48 = load i32, ptr %45, align 8, !tbaa !159
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %44, %41
  %51 = phi ptr [ %45, %44 ], [ null, %41 ]
  %52 = tail call ptr @vec_gc_o_reserve(ptr noundef %51, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %52, ptr %38, align 8, !tbaa !6
  %53 = load i32, ptr %52, align 8, !tbaa !159
  br label %54

54:                                               ; preds = %44, %50
  %55 = phi i32 [ %48, %44 ], [ %53, %50 ]
  %56 = phi ptr [ %45, %44 ], [ %52, %50 ]
  %57 = add i32 %55, 1
  store i32 %57, ptr %56, align 8, !tbaa !159
  %58 = zext i32 %55 to i64
  %59 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 2, i64 %58
  store i32 11, ptr %59, align 8, !tbaa.struct !179
  %60 = getelementptr inbounds i8, ptr %59, i64 8
  store i32 6, ptr %60, align 8, !tbaa.struct !202
  %61 = getelementptr inbounds i8, ptr %59, i64 16
  store i64 %5, ptr %61, align 8, !tbaa.struct !203
  br label %62

62:                                               ; preds = %54, %32
  %63 = icmp eq ptr %1, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %62
  tail call fastcc void @add_bound_info(ptr noundef nonnull %9, i32 noundef 34, ptr noundef nonnull %1)
  br label %65

65:                                               ; preds = %64, %62
  %66 = icmp eq ptr %2, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %65
  tail call fastcc void @add_bound_info(ptr noundef nonnull %9, i32 noundef 47, ptr noundef nonnull %2)
  br label %68

68:                                               ; preds = %67, %65
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @base_type_die(ptr noundef %0) unnamed_addr #10 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %10 [
    i16 0, label %145
    i16 19, label %145
    i16 8, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp eq ptr %6, null
  %8 = select i1 %7, ptr %0, ptr %6
  %9 = load i64, ptr %8, align 8
  br label %10

10:                                               ; preds = %4, %1
  %11 = phi i64 [ %2, %1 ], [ %9, %4 ]
  %12 = phi ptr [ %0, %1 ], [ %8, %4 ]
  %13 = trunc i64 %11 to i16
  switch i16 %13, label %58 [
    i16 8, label %14
    i16 9, label %25
    i16 11, label %41
    i16 13, label %51
    i16 7, label %59
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 6
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 16777216
  %18 = icmp eq i32 %17, 0
  %19 = and i64 %11, 2097152
  %20 = icmp eq i64 %19, 0
  br i1 %18, label %23, label %21

21:                                               ; preds = %14
  %22 = select i1 %20, i64 6, i64 8
  br label %59

23:                                               ; preds = %14
  %24 = select i1 %20, i64 5, i64 7
  br label %59

25:                                               ; preds = %10
  %26 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 6
  %27 = load i32, ptr %26, align 4
  %28 = lshr i32 %27, 16
  %29 = and i32 %28, 255
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !17
  %33 = icmp eq i8 %32, 9
  br i1 %33, label %34, label %59

34:                                               ; preds = %25
  %35 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %36 = icmp slt i32 %35, 3
  %37 = load i32, ptr @dwarf_strict, align 4
  %38 = icmp ne i32 %37, 0
  %39 = select i1 %36, i1 %38, i1 false
  %40 = select i1 %39, i64 128, i64 15
  br label %59

41:                                               ; preds = %10
  %42 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %43 = icmp slt i32 %42, 3
  %44 = load i32, ptr @dwarf_strict, align 4
  %45 = icmp ne i32 %44, 0
  %46 = select i1 %43, i1 %45, i1 false
  br i1 %46, label %59, label %47

47:                                               ; preds = %41
  %48 = and i64 %11, 2097152
  %49 = icmp eq i64 %48, 0
  %50 = select i1 %49, i64 13, i64 14
  br label %59

51:                                               ; preds = %10
  %52 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = load i64, ptr %53, align 8
  %55 = and i64 %54, 65535
  %56 = icmp eq i64 %55, 9
  %57 = select i1 %56, i64 3, i64 128
  br label %59

58:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12022, ptr noundef nonnull @.str.5) #31
  br label %59

59:                                               ; preds = %10, %51, %47, %41, %25, %34, %23, %21, %58
  %60 = phi i64 [ 0, %58 ], [ %22, %21 ], [ %24, %23 ], [ %40, %34 ], [ 4, %25 ], [ 128, %41 ], [ %50, %47 ], [ %57, %51 ], [ 2, %10 ]
  %61 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %62 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 36, ptr %62, align 8, !tbaa !185
  %63 = icmp eq ptr %61, null
  br i1 %63, label %80, label %64

64:                                               ; preds = %59
  %65 = icmp eq ptr %62, %61
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %67

67:                                               ; preds = %66, %64
  %68 = getelementptr inbounds %struct.die_struct, ptr %62, i64 0, i32 3
  store ptr %61, ptr %68, align 8, !tbaa !174
  %69 = getelementptr inbounds %struct.die_struct, ptr %61, i64 0, i32 4
  %70 = load ptr, ptr %69, align 8, !tbaa !175
  %71 = icmp eq ptr %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.die_struct, ptr %70, i64 0, i32 5
  %74 = load ptr, ptr %73, align 8, !tbaa !176
  %75 = getelementptr inbounds %struct.die_struct, ptr %62, i64 0, i32 5
  store ptr %74, ptr %75, align 8, !tbaa !176
  br label %78

76:                                               ; preds = %67
  %77 = getelementptr inbounds %struct.die_struct, ptr %62, i64 0, i32 5
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi ptr [ %77, %76 ], [ %73, %72 ]
  store ptr %62, ptr %79, align 8, !tbaa !176
  store ptr %62, ptr %69, align 8, !tbaa !175
  br label %85

80:                                               ; preds = %59
  %81 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %62, ptr %81, align 8, !tbaa !173
  %82 = getelementptr inbounds %struct.limbo_die_struct, ptr %81, i64 0, i32 1
  store ptr %12, ptr %82, align 8, !tbaa !177
  %83 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %84 = getelementptr inbounds %struct.limbo_die_struct, ptr %81, i64 0, i32 2
  store ptr %83, ptr %84, align 8, !tbaa !171
  store ptr %81, ptr @limbo_die_list, align 8, !tbaa !6
  br label %85

85:                                               ; preds = %78, %80
  %86 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 12
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = icmp eq ptr %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %85
  %90 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %91 = icmp eq ptr %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = tail call ptr %90(ptr noundef nonnull @.str.314) #31
  br label %94

94:                                               ; preds = %89, %92
  %95 = phi ptr [ %93, %92 ], [ @.str.314, %89 ]
  tail call fastcc void @add_AT_string(ptr noundef nonnull %62, i32 noundef 3, ptr noundef %95)
  br label %96

96:                                               ; preds = %85, %94
  %97 = tail call i64 @int_size_in_bytes(ptr noundef nonnull %12) #31
  %98 = getelementptr inbounds %struct.die_struct, ptr %62, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !6
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %102, ptr %98, align 8, !tbaa !157
  %103 = icmp eq ptr %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %101, %96
  %105 = phi ptr [ %102, %101 ], [ %99, %96 ]
  %106 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %105, i64 0, i32 1
  %107 = load i32, ptr %106, align 4, !tbaa !201
  %108 = load i32, ptr %105, align 8, !tbaa !159
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %114

110:                                              ; preds = %104, %101
  %111 = phi ptr [ %105, %104 ], [ null, %101 ]
  %112 = tail call ptr @vec_gc_o_reserve(ptr noundef %111, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %112, ptr %98, align 8, !tbaa !6
  %113 = load i32, ptr %112, align 8, !tbaa !159
  br label %114

114:                                              ; preds = %110, %104
  %115 = phi i32 [ %108, %104 ], [ %113, %110 ]
  %116 = phi ptr [ %105, %104 ], [ %112, %110 ]
  %117 = add i32 %115, 1
  store i32 %117, ptr %116, align 8, !tbaa !159
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %116, i64 0, i32 2, i64 %118
  store i32 11, ptr %119, align 8, !tbaa.struct !179
  %120 = getelementptr inbounds i8, ptr %119, i64 8
  store i32 6, ptr %120, align 8, !tbaa.struct !202
  %121 = getelementptr inbounds i8, ptr %119, i64 16
  store i64 %97, ptr %121, align 8, !tbaa.struct !203
  %122 = load ptr, ptr %98, align 8, !tbaa !6
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %114
  %125 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %125, ptr %98, align 8, !tbaa !157
  %126 = icmp eq ptr %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %124, %114
  %128 = phi ptr [ %125, %124 ], [ %122, %114 ]
  %129 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %128, i64 0, i32 1
  %130 = load i32, ptr %129, align 4, !tbaa !201
  %131 = load i32, ptr %128, align 8, !tbaa !159
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %133, label %137

133:                                              ; preds = %127, %124
  %134 = phi ptr [ %128, %127 ], [ null, %124 ]
  %135 = tail call ptr @vec_gc_o_reserve(ptr noundef %134, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %135, ptr %98, align 8, !tbaa !6
  %136 = load i32, ptr %135, align 8, !tbaa !159
  br label %137

137:                                              ; preds = %127, %133
  %138 = phi i32 [ %131, %127 ], [ %136, %133 ]
  %139 = phi ptr [ %128, %127 ], [ %135, %133 ]
  %140 = add i32 %138, 1
  store i32 %140, ptr %139, align 8, !tbaa !159
  %141 = zext i32 %138 to i64
  %142 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %139, i64 0, i32 2, i64 %141
  store i32 62, ptr %142, align 8, !tbaa.struct !179
  %143 = getelementptr inbounds i8, ptr %142, i64 8
  store i32 6, ptr %143, align 8, !tbaa.struct !202
  %144 = getelementptr inbounds i8, ptr %142, i64 16
  store i64 %60, ptr %144, align 8, !tbaa.struct !203
  br label %145

145:                                              ; preds = %1, %1, %137
  %146 = phi ptr [ %62, %137 ], [ null, %1 ], [ null, %1 ]
  ret ptr %146
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_bound_info(ptr noundef %0, i32 noundef %1, ptr noundef %2) unnamed_addr #10 {
  %4 = alloca [15 x i8], align 1
  br label %5

5:                                                ; preds = %143, %3
  %6 = phi ptr [ %2, %3 ], [ %145, %143 ]
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %180 [
    i16 0, label %371
    i16 23, label %9
    i16 116, label %143
    i16 113, label %143
    i16 118, label %143
    i16 120, label %371
    i16 32, label %146
    i16 34, label %146
    i16 36, label %146
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, 65535
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = tail call i32 @host_integerp(ptr noundef nonnull %17, i32 noundef 1) #31
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %16, align 8, !tbaa !17
  %24 = tail call i64 @tree_low_cst(ptr noundef %23, i32 noundef 1) #31
  br label %29

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 7
  %27 = load i32, ptr %26, align 8, !tbaa !17
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %9, %15, %22, %25
  %30 = phi i64 [ %24, %22 ], [ %28, %25 ], [ 32, %9 ], [ 0, %15 ]
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %1, 34
  br i1 %32, label %33, label %43

33:                                               ; preds = %29
  %34 = tail call i32 @host_integerp(ptr noundef nonnull %6, i32 noundef 0) #31
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = tail call fastcc i32 @lower_bound_default(), !range !356
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = tail call i64 @tree_low_cst(ptr noundef nonnull %6, i32 noundef 0) #31
  %41 = zext i32 %37 to i64
  %42 = icmp eq i64 %40, %41
  br i1 %42, label %371, label %43

43:                                               ; preds = %39, %36, %33, %29
  %44 = icmp ult i32 %31, 64
  br i1 %44, label %45, label %78

45:                                               ; preds = %43
  %46 = and i64 %30, 4294967295
  %47 = shl nsw i64 -1, %46
  %48 = xor i64 %47, -1
  %49 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1
  %50 = load i64, ptr %49, align 8, !tbaa !17
  %51 = and i64 %50, %48
  %52 = icmp eq ptr %0, null
  br i1 %52, label %371, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !6
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  %58 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %58, ptr %54, align 8, !tbaa !157
  %59 = icmp eq ptr %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %57, %53
  %61 = phi ptr [ %58, %57 ], [ %55, %53 ]
  %62 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %61, i64 0, i32 1
  %63 = load i32, ptr %62, align 4, !tbaa !201
  %64 = load i32, ptr %61, align 8, !tbaa !159
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %60, %57
  %67 = phi ptr [ %61, %60 ], [ null, %57 ]
  %68 = tail call ptr @vec_gc_o_reserve(ptr noundef %67, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %68, ptr %54, align 8, !tbaa !6
  %69 = load i32, ptr %68, align 8, !tbaa !159
  br label %70

70:                                               ; preds = %66, %60
  %71 = phi i32 [ %64, %60 ], [ %69, %66 ]
  %72 = phi ptr [ %61, %60 ], [ %68, %66 ]
  %73 = add i32 %71, 1
  store i32 %73, ptr %72, align 8, !tbaa !159
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %72, i64 0, i32 2, i64 %74
  store i32 %1, ptr %75, align 8, !tbaa.struct !179
  %76 = getelementptr inbounds i8, ptr %75, i64 8
  store i32 6, ptr %76, align 8, !tbaa.struct !202
  %77 = getelementptr inbounds i8, ptr %75, i64 16
  store i64 %51, ptr %77, align 8, !tbaa.struct !203
  br label %371

78:                                               ; preds = %43
  %79 = icmp eq i32 %31, 64
  br i1 %79, label %84, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1, i32 1
  %82 = load i64, ptr %81, align 8, !tbaa !17
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %113

84:                                               ; preds = %80, %78
  %85 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1
  %86 = load i64, ptr %85, align 8, !tbaa !17
  %87 = icmp eq ptr %0, null
  br i1 %87, label %371, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %90 = load ptr, ptr %89, align 8, !tbaa !6
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %93, ptr %89, align 8, !tbaa !157
  %94 = icmp eq ptr %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %92, %88
  %96 = phi ptr [ %93, %92 ], [ %90, %88 ]
  %97 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %96, i64 0, i32 1
  %98 = load i32, ptr %97, align 4, !tbaa !201
  %99 = load i32, ptr %96, align 8, !tbaa !159
  %100 = icmp eq i32 %98, %99
  br i1 %100, label %101, label %105

101:                                              ; preds = %95, %92
  %102 = phi ptr [ %96, %95 ], [ null, %92 ]
  %103 = tail call ptr @vec_gc_o_reserve(ptr noundef %102, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %103, ptr %89, align 8, !tbaa !6
  %104 = load i32, ptr %103, align 8, !tbaa !159
  br label %105

105:                                              ; preds = %101, %95
  %106 = phi i32 [ %99, %95 ], [ %104, %101 ]
  %107 = phi ptr [ %96, %95 ], [ %103, %101 ]
  %108 = add i32 %106, 1
  store i32 %108, ptr %107, align 8, !tbaa !159
  %109 = zext i32 %106 to i64
  %110 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %107, i64 0, i32 2, i64 %109
  store i32 %1, ptr %110, align 8, !tbaa.struct !179
  %111 = getelementptr inbounds i8, ptr %110, i64 8
  store i32 6, ptr %111, align 8, !tbaa.struct !202
  %112 = getelementptr inbounds i8, ptr %110, i64 16
  store i64 %86, ptr %112, align 8, !tbaa.struct !203
  br label %371

113:                                              ; preds = %80
  %114 = getelementptr inbounds %struct.tree_int_cst, ptr %6, i64 0, i32 1
  %115 = load i64, ptr %114, align 8, !tbaa !17
  %116 = icmp eq ptr %0, null
  br i1 %116, label %371, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %119 = load ptr, ptr %118, align 8, !tbaa !6
  %120 = icmp eq ptr %119, null
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %122, ptr %118, align 8, !tbaa !157
  %123 = icmp eq ptr %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %121, %117
  %125 = phi ptr [ %122, %121 ], [ %119, %117 ]
  %126 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %125, i64 0, i32 1
  %127 = load i32, ptr %126, align 4, !tbaa !201
  %128 = load i32, ptr %125, align 8, !tbaa !159
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %130, label %134

130:                                              ; preds = %124, %121
  %131 = phi ptr [ %125, %124 ], [ null, %121 ]
  %132 = tail call ptr @vec_gc_o_reserve(ptr noundef %131, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %132, ptr %118, align 8, !tbaa !6
  %133 = load i32, ptr %132, align 8, !tbaa !159
  br label %134

134:                                              ; preds = %130, %124
  %135 = phi i32 [ %128, %124 ], [ %133, %130 ]
  %136 = phi ptr [ %125, %124 ], [ %132, %130 ]
  %137 = add i32 %135, 1
  store i32 %137, ptr %136, align 8, !tbaa !159
  %138 = zext i32 %135 to i64
  %139 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %136, i64 0, i32 2, i64 %138
  store i32 %1, ptr %139, align 8, !tbaa.struct !179
  %140 = getelementptr inbounds i8, ptr %139, i64 8
  store i32 7, ptr %140, align 8, !tbaa.struct !202
  %141 = getelementptr inbounds i8, ptr %139, i64 16
  store i64 %115, ptr %141, align 8, !tbaa.struct !203
  %142 = getelementptr inbounds i8, ptr %139, i64 24
  store i64 %82, ptr %142, align 8, !tbaa.struct !294
  br label %371

143:                                              ; preds = %5, %5, %5
  %144 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %145 = load ptr, ptr %144, align 8, !tbaa !17
  br label %5

146:                                              ; preds = %5, %5, %5
  %147 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %148 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 2
  %149 = load i32, ptr %148, align 4, !tbaa !17
  %150 = tail call ptr @htab_find_with_hash(ptr noundef %147, ptr noundef nonnull %6, i32 noundef %149) #31
  %151 = icmp eq ptr %150, null
  br i1 %151, label %180, label %152

152:                                              ; preds = %146
  %153 = icmp eq ptr %0, null
  br i1 %153, label %371, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %156 = load ptr, ptr %155, align 8, !tbaa !6
  %157 = icmp eq ptr %156, null
  br i1 %157, label %158, label %161

158:                                              ; preds = %154
  %159 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %159, ptr %155, align 8, !tbaa !157
  %160 = icmp eq ptr %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %158, %154
  %162 = phi ptr [ %159, %158 ], [ %156, %154 ]
  %163 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %162, i64 0, i32 1
  %164 = load i32, ptr %163, align 4, !tbaa !201
  %165 = load i32, ptr %162, align 8, !tbaa !159
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %167, label %171

167:                                              ; preds = %161, %158
  %168 = phi ptr [ %162, %161 ], [ null, %158 ]
  %169 = tail call ptr @vec_gc_o_reserve(ptr noundef %168, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %169, ptr %155, align 8, !tbaa !6
  %170 = load i32, ptr %169, align 8, !tbaa !159
  br label %171

171:                                              ; preds = %167, %161
  %172 = phi i32 [ %165, %161 ], [ %170, %167 ]
  %173 = phi ptr [ %162, %161 ], [ %169, %167 ]
  %174 = add i32 %172, 1
  store i32 %174, ptr %173, align 8, !tbaa !159
  %175 = zext i32 %172 to i64
  %176 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %173, i64 0, i32 2, i64 %175
  store i32 %1, ptr %176, align 8, !tbaa.struct !179
  %177 = getelementptr inbounds i8, ptr %176, i64 8
  store i32 10, ptr %177, align 8, !tbaa.struct !202
  %178 = getelementptr inbounds i8, ptr %176, i64 16
  store ptr %150, ptr %178, align 8, !tbaa.struct !203
  %179 = getelementptr inbounds i8, ptr %176, i64 24
  store i32 0, ptr %179, align 8, !tbaa.struct !294
  br label %371

180:                                              ; preds = %5, %146
  %181 = phi i32 [ 0, %146 ], [ 2, %5 ]
  %182 = tail call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %6, i32 noundef %181)
  %183 = icmp eq ptr %182, null
  br i1 %183, label %371, label %184

184:                                              ; preds = %180
  %185 = load ptr, ptr %182, align 8, !tbaa !273
  %186 = icmp eq ptr %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %182, i64 0, i32 3
  %189 = load ptr, ptr %188, align 8, !tbaa !274
  %190 = icmp eq ptr %189, null
  br i1 %190, label %191, label %192

191:                                              ; preds = %187
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14182, ptr noundef nonnull @.str.5) #31
  br label %192

192:                                              ; preds = %184, %187, %191
  %193 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %182, i64 0, i32 3
  %194 = load ptr, ptr %193, align 8, !tbaa !274
  %195 = icmp eq ptr %194, null
  br i1 %195, label %196, label %225

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %182, i64 0, i32 5
  %198 = load ptr, ptr %197, align 8, !tbaa !270
  %199 = icmp eq ptr %0, null
  br i1 %199, label %371, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %202 = load ptr, ptr %201, align 8, !tbaa !6
  %203 = icmp eq ptr %202, null
  br i1 %203, label %204, label %207

204:                                              ; preds = %200
  %205 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %205, ptr %201, align 8, !tbaa !157
  %206 = icmp eq ptr %205, null
  br i1 %206, label %213, label %207

207:                                              ; preds = %204, %200
  %208 = phi ptr [ %205, %204 ], [ %202, %200 ]
  %209 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %208, i64 0, i32 1
  %210 = load i32, ptr %209, align 4, !tbaa !201
  %211 = load i32, ptr %208, align 8, !tbaa !159
  %212 = icmp eq i32 %210, %211
  br i1 %212, label %213, label %217

213:                                              ; preds = %207, %204
  %214 = phi ptr [ %208, %207 ], [ null, %204 ]
  %215 = tail call ptr @vec_gc_o_reserve(ptr noundef %214, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %215, ptr %201, align 8, !tbaa !6
  %216 = load i32, ptr %215, align 8, !tbaa !159
  br label %217

217:                                              ; preds = %213, %207
  %218 = phi i32 [ %211, %207 ], [ %216, %213 ]
  %219 = phi ptr [ %208, %207 ], [ %215, %213 ]
  %220 = add i32 %218, 1
  store i32 %220, ptr %219, align 8, !tbaa !159
  %221 = zext i32 %218 to i64
  %222 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %219, i64 0, i32 2, i64 %221
  store i32 %1, ptr %222, align 8, !tbaa.struct !179
  %223 = getelementptr inbounds i8, ptr %222, i64 8
  store i32 2, ptr %223, align 8, !tbaa.struct !202
  %224 = getelementptr inbounds i8, ptr %222, i64 16
  store ptr %198, ptr %224, align 8, !tbaa.struct !203
  br label %371

225:                                              ; preds = %192
  %226 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %227 = icmp eq ptr %226, null
  br i1 %227, label %228, label %230

228:                                              ; preds = %225
  %229 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %235

230:                                              ; preds = %225
  %231 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %232 = getelementptr inbounds %struct.tree_decl_minimal, ptr %226, i64 0, i32 2
  %233 = load i32, ptr %232, align 4, !tbaa !17
  %234 = tail call ptr @htab_find_with_hash(ptr noundef %231, ptr noundef nonnull %226, i32 noundef %233) #31
  br label %235

235:                                              ; preds = %230, %228
  %236 = phi ptr [ %229, %228 ], [ %234, %230 ]
  %237 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 52, ptr %237, align 8, !tbaa !185
  %238 = icmp eq ptr %236, null
  br i1 %238, label %255, label %239

239:                                              ; preds = %235
  %240 = icmp eq ptr %237, %236
  br i1 %240, label %241, label %242

241:                                              ; preds = %239
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %242

242:                                              ; preds = %241, %239
  %243 = getelementptr inbounds %struct.die_struct, ptr %237, i64 0, i32 3
  store ptr %236, ptr %243, align 8, !tbaa !174
  %244 = getelementptr inbounds %struct.die_struct, ptr %236, i64 0, i32 4
  %245 = load ptr, ptr %244, align 8, !tbaa !175
  %246 = icmp eq ptr %245, null
  br i1 %246, label %251, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %struct.die_struct, ptr %245, i64 0, i32 5
  %249 = load ptr, ptr %248, align 8, !tbaa !176
  %250 = getelementptr inbounds %struct.die_struct, ptr %237, i64 0, i32 5
  store ptr %249, ptr %250, align 8, !tbaa !176
  br label %253

251:                                              ; preds = %242
  %252 = getelementptr inbounds %struct.die_struct, ptr %237, i64 0, i32 5
  br label %253

253:                                              ; preds = %251, %247
  %254 = phi ptr [ %252, %251 ], [ %248, %247 ]
  store ptr %237, ptr %254, align 8, !tbaa !176
  store ptr %237, ptr %244, align 8, !tbaa !175
  br label %260

255:                                              ; preds = %235
  %256 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %237, ptr %256, align 8, !tbaa !173
  %257 = getelementptr inbounds %struct.limbo_die_struct, ptr %256, i64 0, i32 1
  store ptr %6, ptr %257, align 8, !tbaa !177
  %258 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %259 = getelementptr inbounds %struct.limbo_die_struct, ptr %256, i64 0, i32 2
  store ptr %258, ptr %259, align 8, !tbaa !171
  store ptr %256, ptr @limbo_die_list, align 8, !tbaa !6
  br label %260

260:                                              ; preds = %255, %253
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %4)
  %261 = getelementptr inbounds %struct.die_struct, ptr %237, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !6
  %263 = icmp eq ptr %262, null
  br i1 %263, label %264, label %267

264:                                              ; preds = %260
  %265 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %265, ptr %261, align 8, !tbaa !157
  %266 = icmp eq ptr %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %264, %260
  %268 = phi ptr [ %265, %264 ], [ %262, %260 ]
  %269 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %268, i64 0, i32 1
  %270 = load i32, ptr %269, align 4, !tbaa !201
  %271 = load i32, ptr %268, align 8, !tbaa !159
  %272 = icmp eq i32 %270, %271
  br i1 %272, label %273, label %277

273:                                              ; preds = %267, %264
  %274 = phi ptr [ %268, %267 ], [ null, %264 ]
  %275 = tail call ptr @vec_gc_o_reserve(ptr noundef %274, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %275, ptr %261, align 8, !tbaa !6
  %276 = load i32, ptr %275, align 8, !tbaa !159
  br label %277

277:                                              ; preds = %267, %273
  %278 = phi i32 [ %271, %267 ], [ %276, %273 ]
  %279 = phi ptr [ %268, %267 ], [ %275, %273 ]
  %280 = add i32 %278, 1
  store i32 %280, ptr %279, align 8, !tbaa !159
  %281 = zext i32 %278 to i64
  %282 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %279, i64 0, i32 2, i64 %281
  store i32 52, ptr %282, align 8, !tbaa.struct !179
  %283 = getelementptr inbounds i8, ptr %282, i64 8
  store i32 9, ptr %283, align 8, !tbaa.struct !202
  %284 = getelementptr inbounds i8, ptr %282, i64 16
  store i8 1, ptr %284, align 8, !tbaa.struct !203
  %285 = getelementptr inbounds i8, ptr %282, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %285, ptr noundef nonnull align 1 dereferenceable(15) %4, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %4)
  %286 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %287 = load ptr, ptr %286, align 8, !tbaa !17
  %288 = load i64, ptr %287, align 8
  %289 = trunc i64 %288 to i32
  %290 = and i32 %289, 65535
  %291 = and i32 %289, 65534
  %292 = icmp eq i32 %291, 8
  %293 = icmp eq i32 %290, 11
  %294 = or i1 %292, %293
  br i1 %294, label %295, label %307

295:                                              ; preds = %277
  %296 = getelementptr inbounds %struct.tree_common, ptr %287, i64 0, i32 2
  %297 = load ptr, ptr %296, align 8, !tbaa !17
  %298 = icmp eq ptr %297, null
  br i1 %298, label %307, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %struct.tree_type, ptr %287, i64 0, i32 12
  %301 = load ptr, ptr %300, align 8, !tbaa !17
  %302 = icmp eq ptr %301, null
  br i1 %302, label %303, label %307

303:                                              ; preds = %299
  %304 = load i64, ptr %297, align 8
  %305 = trunc i64 %304 to i32
  %306 = and i32 %305, 65535
  br label %307

307:                                              ; preds = %303, %299, %295, %277
  %308 = phi i64 [ %304, %303 ], [ %288, %299 ], [ %288, %295 ], [ %288, %277 ]
  %309 = phi ptr [ %297, %303 ], [ %287, %299 ], [ %287, %295 ], [ %287, %277 ]
  %310 = phi i32 [ %306, %303 ], [ %290, %299 ], [ %290, %295 ], [ %290, %277 ]
  %311 = trunc i32 %310 to i16
  switch i16 %311, label %312 [
    i16 19, label %343
    i16 0, label %343
  ]

312:                                              ; preds = %307
  %313 = trunc i64 %308 to i32
  %314 = lshr i32 %313, 19
  %315 = and i32 %314, 1
  %316 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %309, i32 noundef 1, i32 noundef %315, ptr noundef %236)
  %317 = icmp eq ptr %316, null
  br i1 %317, label %343, label %318

318:                                              ; preds = %312
  %319 = load ptr, ptr %261, align 8, !tbaa !6
  %320 = icmp eq ptr %319, null
  br i1 %320, label %321, label %324

321:                                              ; preds = %318
  %322 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %322, ptr %261, align 8, !tbaa !157
  %323 = icmp eq ptr %322, null
  br i1 %323, label %330, label %324

324:                                              ; preds = %321, %318
  %325 = phi ptr [ %322, %321 ], [ %319, %318 ]
  %326 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %325, i64 0, i32 1
  %327 = load i32, ptr %326, align 4, !tbaa !201
  %328 = load i32, ptr %325, align 8, !tbaa !159
  %329 = icmp eq i32 %327, %328
  br i1 %329, label %330, label %334

330:                                              ; preds = %324, %321
  %331 = phi ptr [ %325, %324 ], [ null, %321 ]
  %332 = tail call ptr @vec_gc_o_reserve(ptr noundef %331, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %332, ptr %261, align 8, !tbaa !6
  %333 = load i32, ptr %332, align 8, !tbaa !159
  br label %334

334:                                              ; preds = %324, %330
  %335 = phi i32 [ %328, %324 ], [ %333, %330 ]
  %336 = phi ptr [ %325, %324 ], [ %332, %330 ]
  %337 = add i32 %335, 1
  store i32 %337, ptr %336, align 8, !tbaa !159
  %338 = zext i32 %335 to i64
  %339 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %336, i64 0, i32 2, i64 %338
  store i32 73, ptr %339, align 8, !tbaa.struct !179
  %340 = getelementptr inbounds i8, ptr %339, i64 8
  store i32 10, ptr %340, align 8, !tbaa.struct !202
  %341 = getelementptr inbounds i8, ptr %339, i64 16
  store ptr %316, ptr %341, align 8, !tbaa.struct !203
  %342 = getelementptr inbounds i8, ptr %339, i64 24
  store i32 0, ptr %342, align 8, !tbaa.struct !294
  br label %343

343:                                              ; preds = %307, %307, %312, %334
  tail call fastcc void @add_AT_location_description(ptr noundef nonnull %237, i32 noundef 2, ptr noundef nonnull %182)
  %344 = icmp eq ptr %0, null
  br i1 %344, label %371, label %345

345:                                              ; preds = %343
  %346 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %347 = load ptr, ptr %346, align 8, !tbaa !6
  %348 = icmp eq ptr %347, null
  br i1 %348, label %349, label %352

349:                                              ; preds = %345
  %350 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %350, ptr %346, align 8, !tbaa !157
  %351 = icmp eq ptr %350, null
  br i1 %351, label %358, label %352

352:                                              ; preds = %349, %345
  %353 = phi ptr [ %350, %349 ], [ %347, %345 ]
  %354 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %353, i64 0, i32 1
  %355 = load i32, ptr %354, align 4, !tbaa !201
  %356 = load i32, ptr %353, align 8, !tbaa !159
  %357 = icmp eq i32 %355, %356
  br i1 %357, label %358, label %362

358:                                              ; preds = %352, %349
  %359 = phi ptr [ %353, %352 ], [ null, %349 ]
  %360 = tail call ptr @vec_gc_o_reserve(ptr noundef %359, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %360, ptr %346, align 8, !tbaa !6
  %361 = load i32, ptr %360, align 8, !tbaa !159
  br label %362

362:                                              ; preds = %358, %352
  %363 = phi i32 [ %356, %352 ], [ %361, %358 ]
  %364 = phi ptr [ %353, %352 ], [ %360, %358 ]
  %365 = add i32 %363, 1
  store i32 %365, ptr %364, align 8, !tbaa !159
  %366 = zext i32 %363 to i64
  %367 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %364, i64 0, i32 2, i64 %366
  store i32 %1, ptr %367, align 8, !tbaa.struct !179
  %368 = getelementptr inbounds i8, ptr %367, i64 8
  store i32 10, ptr %368, align 8, !tbaa.struct !202
  %369 = getelementptr inbounds i8, ptr %367, i64 16
  store ptr %237, ptr %369, align 8, !tbaa.struct !203
  %370 = getelementptr inbounds i8, ptr %367, i64 24
  store i32 0, ptr %370, align 8, !tbaa.struct !294
  br label %371

371:                                              ; preds = %5, %5, %134, %113, %171, %152, %362, %343, %217, %196, %105, %84, %70, %45, %39, %180
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @lower_bound_default() unnamed_addr #10 {
  %1 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %2

2:                                                ; preds = %36, %0
  %3 = phi ptr [ %1, %0 ], [ %37, %36 ]
  %4 = icmp eq ptr %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !157
  %8 = icmp eq ptr %7, null
  br i1 %8, label %57, label %9

9:                                                ; preds = %5, %30
  %10 = phi ptr [ %31, %30 ], [ %7, %5 ]
  %11 = phi ptr [ %32, %30 ], [ %7, %5 ]
  %12 = phi i64 [ %34, %30 ], [ 0, %5 ]
  %13 = phi ptr [ %33, %30 ], [ null, %5 ]
  %14 = load i32, ptr %11, align 8, !tbaa !159
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %12, %15
  br i1 %16, label %17, label %36

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12
  %19 = load i32, ptr %18, align 8, !tbaa !161
  switch i32 %19, label %30 [
    i32 19, label %39
    i32 71, label %20
    i32 49, label %20
  ]

20:                                               ; preds = %17, %17
  %21 = getelementptr i8, ptr %18, i64 8
  %22 = load i32, ptr %21, align 8, !tbaa !163
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %25 = load ptr, ptr %6, align 8, !tbaa !157
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi ptr [ %10, %20 ], [ %25, %24 ]
  %28 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  br label %30

30:                                               ; preds = %17, %26
  %31 = phi ptr [ %27, %26 ], [ %10, %17 ]
  %32 = phi ptr [ %27, %26 ], [ %11, %17 ]
  %33 = phi ptr [ %29, %26 ], [ %13, %17 ]
  %34 = add nuw nsw i64 %12, 1
  %35 = icmp eq ptr %32, null
  br i1 %35, label %36, label %9, !llvm.loop !164

36:                                               ; preds = %30, %9
  %37 = phi ptr [ %33, %30 ], [ %13, %9 ]
  %38 = icmp eq ptr %37, null
  br i1 %38, label %57, label %2

39:                                               ; preds = %17
  %40 = getelementptr i8, ptr %18, i64 8
  %41 = load i32, ptr %40, align 8, !tbaa !163
  %42 = icmp eq i32 %41, 6
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %44

44:                                               ; preds = %39, %43
  %45 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1, i32 1
  %46 = load i64, ptr %45, align 8, !tbaa !17
  %47 = trunc i64 %46 to i32
  switch i32 %47, label %57 [
    i32 2, label %58
    i32 1, label %58
    i32 12, label %58
    i32 4, label %58
    i32 16, label %58
    i32 17, label %58
    i32 11, label %58
    i32 7, label %48
    i32 8, label %48
    i32 14, label %48
    i32 18, label %49
    i32 19, label %49
    i32 13, label %53
    i32 3, label %53
    i32 5, label %53
    i32 6, label %53
    i32 9, label %53
    i32 10, label %53
    i32 15, label %53
  ]

48:                                               ; preds = %44, %44, %44
  br label %58

49:                                               ; preds = %44, %44
  %50 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %51 = icmp slt i32 %50, 4
  %52 = sext i1 %51 to i32
  br label %58

53:                                               ; preds = %44, %44, %44, %44, %44, %44, %44
  %54 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %55 = icmp sgt i32 %54, 3
  %56 = select i1 %55, i32 1, i32 -1
  br label %58

57:                                               ; preds = %5, %36, %2, %44
  br label %58

58:                                               ; preds = %44, %44, %44, %44, %44, %44, %44, %57, %53, %49, %48
  %59 = phi i32 [ -1, %57 ], [ %56, %53 ], [ %52, %49 ], [ 1, %48 ], [ 0, %44 ], [ 0, %44 ], [ 0, %44 ], [ 0, %44 ], [ 0, %44 ], [ 0, %44 ], [ 0, %44 ]
  ret i32 %59
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_AT_flag(ptr noundef %0, i32 noundef %1) unnamed_addr #2 {
  %3 = alloca [15 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %3)
  %4 = icmp eq ptr %0, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %10, ptr %6, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9, %5
  %13 = phi ptr [ %10, %9 ], [ %7, %5 ]
  %14 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %13, i64 0, i32 1
  %15 = load i32, ptr %14, align 4, !tbaa !201
  %16 = load i32, ptr %13, align 8, !tbaa !159
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %12, %9
  %19 = phi ptr [ %13, %12 ], [ null, %9 ]
  %20 = tail call ptr @vec_gc_o_reserve(ptr noundef %19, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %20, ptr %6, align 8, !tbaa !6
  %21 = load i32, ptr %20, align 8, !tbaa !159
  br label %22

22:                                               ; preds = %18, %12
  %23 = phi i32 [ %16, %12 ], [ %21, %18 ]
  %24 = phi ptr [ %13, %12 ], [ %20, %18 ]
  %25 = add i32 %23, 1
  store i32 %25, ptr %24, align 8, !tbaa !159
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %24, i64 0, i32 2, i64 %26
  store i32 %1, ptr %27, align 8, !tbaa.struct !179
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  store i32 9, ptr %28, align 8, !tbaa.struct !202
  %29 = getelementptr inbounds i8, ptr %27, i64 16
  store i8 1, ptr %29, align 8, !tbaa.struct !203
  %30 = getelementptr inbounds i8, ptr %27, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %30, ptr noundef nonnull align 1 dereferenceable(15) %3, i64 15, i1 false), !tbaa.struct !362
  br label %31

31:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %3)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_type_attribute(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4) unnamed_addr #10 {
  %6 = load i64, ptr %1, align 8
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 65535
  %9 = and i32 %7, 65534
  %10 = icmp eq i32 %9, 8
  %11 = icmp eq i32 %8, 11
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 12
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = load i64, ptr %15, align 8
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 65535
  br label %25

25:                                               ; preds = %5, %21, %17, %13
  %26 = phi i64 [ %22, %21 ], [ %6, %17 ], [ %6, %13 ], [ %6, %5 ]
  %27 = phi ptr [ %15, %21 ], [ %1, %17 ], [ %1, %13 ], [ %1, %5 ]
  %28 = phi i32 [ %24, %21 ], [ %8, %17 ], [ %8, %13 ], [ %8, %5 ]
  %29 = trunc i32 %28 to i16
  switch i16 %29, label %30 [
    i16 19, label %71
    i16 0, label %71
  ]

30:                                               ; preds = %25
  %31 = icmp eq i32 %2, 0
  %32 = trunc i64 %26 to i32
  %33 = lshr i32 %32, 20
  %34 = and i32 %33, 1
  %35 = select i1 %31, i32 %34, i32 1
  %36 = icmp eq i32 %3, 0
  %37 = trunc i64 %26 to i32
  %38 = lshr i32 %37, 19
  %39 = and i32 %38, 1
  %40 = select i1 %36, i32 %39, i32 1
  %41 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %27, i32 noundef %35, i32 noundef %40, ptr noundef %4)
  %42 = icmp eq ptr %41, null
  %43 = icmp eq ptr %0, null
  %44 = or i1 %43, %42
  br i1 %44, label %71, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !6
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %50, ptr %46, align 8, !tbaa !157
  %51 = icmp eq ptr %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %49, %45
  %53 = phi ptr [ %50, %49 ], [ %47, %45 ]
  %54 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %53, i64 0, i32 1
  %55 = load i32, ptr %54, align 4, !tbaa !201
  %56 = load i32, ptr %53, align 8, !tbaa !159
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %52, %49
  %59 = phi ptr [ %53, %52 ], [ null, %49 ]
  %60 = tail call ptr @vec_gc_o_reserve(ptr noundef %59, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %60, ptr %46, align 8, !tbaa !6
  %61 = load i32, ptr %60, align 8, !tbaa !159
  br label %62

62:                                               ; preds = %58, %52
  %63 = phi i32 [ %56, %52 ], [ %61, %58 ]
  %64 = phi ptr [ %53, %52 ], [ %60, %58 ]
  %65 = add i32 %63, 1
  store i32 %65, ptr %64, align 8, !tbaa !159
  %66 = zext i32 %63 to i64
  %67 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %64, i64 0, i32 2, i64 %66
  store i32 73, ptr %67, align 8, !tbaa.struct !179
  %68 = getelementptr inbounds i8, ptr %67, i64 8
  store i32 10, ptr %68, align 8, !tbaa.struct !202
  %69 = getelementptr inbounds i8, ptr %67, i64 16
  store ptr %41, ptr %69, align 8, !tbaa.struct !203
  %70 = getelementptr inbounds i8, ptr %67, i64 24
  store i32 0, ptr %70, align 8, !tbaa.struct !294
  br label %71

71:                                               ; preds = %62, %30, %25, %25
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc i32 @get_AT_unsigned(ptr noundef readonly %0, i32 noundef %1) unnamed_addr #2 {
  br label %3

3:                                                ; preds = %39, %2
  %4 = phi ptr [ %0, %2 ], [ %40, %39 ]
  %5 = icmp eq ptr %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !157
  %9 = icmp eq ptr %8, null
  br i1 %9, label %51, label %10

10:                                               ; preds = %6, %33
  %11 = phi ptr [ %34, %33 ], [ %8, %6 ]
  %12 = phi ptr [ %35, %33 ], [ %8, %6 ]
  %13 = phi i64 [ %37, %33 ], [ 0, %6 ]
  %14 = phi ptr [ %36, %33 ], [ null, %6 ]
  %15 = load i32, ptr %12, align 8, !tbaa !159
  %16 = zext i32 %15 to i64
  %17 = icmp ult i64 %13, %16
  br i1 %17, label %18, label %39

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %13
  %20 = load i32, ptr %19, align 8, !tbaa !161
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %42, label %22

22:                                               ; preds = %18
  switch i32 %20, label %33 [
    i32 71, label %23
    i32 49, label %23
  ]

23:                                               ; preds = %22, %22
  %24 = getelementptr i8, ptr %19, i64 8
  %25 = load i32, ptr %24, align 8, !tbaa !163
  %26 = icmp eq i32 %25, 10
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %28 = load ptr, ptr %7, align 8, !tbaa !157
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %11, %23 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %13, i32 1, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %29, %22
  %34 = phi ptr [ %30, %29 ], [ %11, %22 ]
  %35 = phi ptr [ %30, %29 ], [ %12, %22 ]
  %36 = phi ptr [ %32, %29 ], [ %14, %22 ]
  %37 = add nuw nsw i64 %13, 1
  %38 = icmp eq ptr %35, null
  br i1 %38, label %39, label %10, !llvm.loop !164

39:                                               ; preds = %33, %10
  %40 = phi ptr [ %36, %33 ], [ %14, %10 ]
  %41 = icmp eq ptr %40, null
  br i1 %41, label %51, label %3

42:                                               ; preds = %18
  %43 = getelementptr i8, ptr %19, i64 8
  %44 = load i32, ptr %43, align 8, !tbaa !163
  %45 = icmp eq i32 %44, 6
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %47

47:                                               ; preds = %42, %46
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %13, i32 1, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !17
  %50 = trunc i64 %49 to i32
  br label %51

51:                                               ; preds = %6, %39, %3, %47
  %52 = phi i32 [ %50, %47 ], [ 0, %3 ], [ 0, %39 ], [ 0, %6 ]
  ret i32 %52
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_subprogram_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca [256 x i8], align 16
  %4 = alloca ptr, align 8
  %5 = alloca %struct.cfa_loc, align 8
  %6 = alloca %struct.cfa_loc, align 8
  %7 = alloca %struct.cfa_loc, align 8
  %8 = alloca [15 x i8], align 1
  %9 = alloca [15 x i8], align 1
  %10 = alloca [15 x i8], align 1
  %11 = alloca [15 x i8], align 1
  %12 = alloca [15 x i8], align 1
  %13 = alloca [30 x i8], align 16
  %14 = alloca %struct.expanded_location, align 8
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %13) #31
  %15 = load i64, ptr %0, align 8
  %16 = and i64 %15, 65535
  %17 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %16, i64 10
  %18 = load i8, ptr %17, align 2, !tbaa !17
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %39, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, 2048
  %24 = icmp ne i64 %23, 0
  %25 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = icmp eq ptr %26, %0
  %28 = select i1 %24, i1 %27, i1 false
  br i1 %28, label %39, label %29

29:                                               ; preds = %20
  %30 = icmp eq ptr %26, null
  %31 = select i1 %30, ptr %0, ptr %26
  %32 = getelementptr inbounds %struct.tree_decl_common, ptr %31, i64 0, i32 7
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = icmp eq ptr %33, null
  %35 = icmp eq ptr %33, %31
  %36 = or i1 %34, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %29
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %38 = load ptr, ptr %25, align 8, !tbaa !17
  br label %39

39:                                               ; preds = %2, %20, %29, %37
  %40 = phi ptr [ null, %2 ], [ %26, %29 ], [ %38, %37 ], [ null, %20 ]
  %41 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %43 = load i32, ptr %42, align 4, !tbaa !17
  %44 = tail call ptr @htab_find_with_hash(ptr noundef %41, ptr noundef nonnull %0, i32 noundef %43) #31
  %45 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %46 = icmp eq ptr %45, %0
  br i1 %46, label %47, label %57

47:                                               ; preds = %39
  %48 = icmp eq ptr %1, null
  br i1 %48, label %57, label %49

49:                                               ; preds = %47
  %50 = load i32, ptr %1, align 8, !tbaa !185
  %51 = icmp ult i32 %50, 58
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = zext i32 %50 to i58
  %54 = lshr i58 -72057594029015036, %53
  %55 = and i58 %54, 1
  %56 = icmp ne i58 %55, 0
  br label %57

57:                                               ; preds = %49, %52, %47, %39
  %58 = phi i1 [ true, %39 ], [ false, %47 ], [ %56, %52 ], [ false, %49 ]
  %59 = load ptr, ptr @cfun, align 8, !tbaa !6
  %60 = icmp eq ptr %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.function, ptr %59, i64 0, i32 12
  %63 = load ptr, ptr %62, align 8, !tbaa !371
  %64 = icmp eq ptr %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  tail call void @htab_traverse(ptr noundef nonnull %63, ptr noundef nonnull @premark_used_types_helper, ptr noundef null) #31
  br label %66

66:                                               ; preds = %57, %61, %65
  %67 = icmp ne ptr %40, null
  %68 = and i1 %67, %58
  br i1 %68, label %69, label %76

69:                                               ; preds = %66
  %70 = icmp eq ptr %1, null
  br i1 %70, label %121, label %71

71:                                               ; preds = %69
  %72 = load i32, ptr %1, align 8, !tbaa !185
  switch i32 %72, label %110 [
    i32 19, label %73
    i32 2, label %73
    i32 56, label %73
    i32 23, label %73
    i32 57, label %73
  ]

73:                                               ; preds = %71, %71, %71, %71, %71
  %74 = icmp eq ptr %44, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %73
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 17823, ptr noundef nonnull @.str.5) #31
  br label %235

76:                                               ; preds = %73, %66
  %77 = phi ptr [ null, %73 ], [ %40, %66 ]
  %78 = icmp ne ptr %77, null
  %79 = select i1 %58, i1 true, i1 %78
  %80 = icmp ne ptr %44, null
  %81 = select i1 %79, i1 true, i1 %80
  br i1 %81, label %109, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %84 = load ptr, ptr %83, align 8, !tbaa !17
  %85 = icmp eq ptr %84, null
  br i1 %85, label %744, label %86

86:                                               ; preds = %82
  %87 = load i64, ptr %84, align 8
  %88 = and i64 %87, 65535
  %89 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !17
  %91 = icmp eq i32 %90, 2
  br i1 %91, label %92, label %744

92:                                               ; preds = %86
  %93 = icmp eq ptr %1, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %92
  %95 = load i32, ptr %1, align 8, !tbaa !185
  switch i32 %95, label %96 [
    i32 19, label %99
    i32 2, label %99
    i32 56, label %99
    i32 23, label %99
  ]

96:                                               ; preds = %94
  %97 = icmp eq i32 %95, 57
  %98 = zext i1 %97 to i32
  br label %101

99:                                               ; preds = %94, %94, %94, %94
  %100 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 46, ptr %100, align 8, !tbaa !185
  br label %747

101:                                              ; preds = %92, %96
  %102 = phi i32 [ %98, %96 ], [ 0, %92 ]
  %103 = icmp eq i32 %102, 0
  %104 = load i32, ptr @debug_info_level, align 4
  %105 = icmp ugt i32 %104, 1
  %106 = select i1 %103, i1 %105, i1 false
  br i1 %106, label %107, label %744

107:                                              ; preds = %101
  %108 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %0)
  br label %232

109:                                              ; preds = %76
  br i1 %78, label %110, label %232

110:                                              ; preds = %71, %109
  %111 = phi ptr [ %77, %109 ], [ %40, %71 ]
  br i1 %58, label %112, label %123

112:                                              ; preds = %110
  %113 = icmp eq ptr %1, null
  br i1 %113, label %121, label %114

114:                                              ; preds = %112, %117
  %115 = phi ptr [ %119, %117 ], [ %1, %112 ]
  %116 = load i32, ptr %115, align 8, !tbaa !185
  switch i32 %116, label %117 [
    i32 29, label %123
    i32 46, label %123
  ]

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.die_struct, ptr %115, i64 0, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !174
  %120 = icmp eq ptr %119, null
  br i1 %120, label %121, label %114, !llvm.loop !372

121:                                              ; preds = %117, %69, %112
  %122 = phi ptr [ %111, %112 ], [ %40, %69 ], [ %111, %117 ]
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 17836, ptr noundef nonnull @.str.5) #31
  br label %123

123:                                              ; preds = %114, %114, %110, %121
  %124 = phi ptr [ %111, %110 ], [ %122, %121 ], [ %111, %114 ], [ %111, %114 ]
  %125 = icmp eq ptr %44, null
  br i1 %125, label %148, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.die_struct, ptr %44, i64 0, i32 3
  %128 = load ptr, ptr %127, align 8, !tbaa !174
  %129 = icmp eq ptr %128, null
  %130 = icmp ne ptr %1, null
  %131 = and i1 %130, %129
  br i1 %131, label %132, label %148

132:                                              ; preds = %126
  %133 = icmp eq ptr %44, %1
  br i1 %133, label %134, label %135

134:                                              ; preds = %132
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %135

135:                                              ; preds = %134, %132
  store ptr %1, ptr %127, align 8, !tbaa !174
  %136 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %137 = load ptr, ptr %136, align 8, !tbaa !175
  %138 = icmp eq ptr %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.die_struct, ptr %137, i64 0, i32 5
  %141 = load ptr, ptr %140, align 8, !tbaa !176
  %142 = getelementptr inbounds %struct.die_struct, ptr %44, i64 0, i32 5
  store ptr %141, ptr %142, align 8, !tbaa !176
  br label %145

143:                                              ; preds = %135
  %144 = getelementptr inbounds %struct.die_struct, ptr %44, i64 0, i32 5
  br label %145

145:                                              ; preds = %139, %143
  %146 = phi ptr [ %144, %143 ], [ %140, %139 ]
  store ptr %44, ptr %146, align 8, !tbaa !176
  store ptr %44, ptr %136, align 8, !tbaa !175
  %147 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 46, ptr %147, align 8, !tbaa !185
  br label %151

148:                                              ; preds = %126, %123
  %149 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 46, ptr %149, align 8, !tbaa !185
  %150 = icmp eq ptr %1, null
  br i1 %150, label %168, label %151

151:                                              ; preds = %145, %148
  %152 = phi ptr [ %147, %145 ], [ %149, %148 ]
  %153 = icmp eq ptr %152, %1
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %155

155:                                              ; preds = %154, %151
  %156 = getelementptr inbounds %struct.die_struct, ptr %152, i64 0, i32 3
  store ptr %1, ptr %156, align 8, !tbaa !174
  %157 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %158 = load ptr, ptr %157, align 8, !tbaa !175
  %159 = icmp eq ptr %158, null
  br i1 %159, label %164, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.die_struct, ptr %158, i64 0, i32 5
  %162 = load ptr, ptr %161, align 8, !tbaa !176
  %163 = getelementptr inbounds %struct.die_struct, ptr %152, i64 0, i32 5
  store ptr %162, ptr %163, align 8, !tbaa !176
  br label %166

164:                                              ; preds = %155
  %165 = getelementptr inbounds %struct.die_struct, ptr %152, i64 0, i32 5
  br label %166

166:                                              ; preds = %164, %160
  %167 = phi ptr [ %165, %164 ], [ %161, %160 ]
  store ptr %152, ptr %167, align 8, !tbaa !176
  store ptr %152, ptr %157, align 8, !tbaa !175
  br label %173

168:                                              ; preds = %148
  %169 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %149, ptr %169, align 8, !tbaa !173
  %170 = getelementptr inbounds %struct.limbo_die_struct, ptr %169, i64 0, i32 1
  store ptr %0, ptr %170, align 8, !tbaa !177
  %171 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %172 = getelementptr inbounds %struct.limbo_die_struct, ptr %169, i64 0, i32 2
  store ptr %171, ptr %172, align 8, !tbaa !171
  store ptr %169, ptr @limbo_die_list, align 8, !tbaa !6
  br label %173

173:                                              ; preds = %166, %168
  %174 = phi ptr [ %152, %166 ], [ %149, %168 ]
  %175 = load i64, ptr %124, align 8
  %176 = and i64 %175, 65535
  %177 = icmp eq i64 %176, 29
  br i1 %177, label %190, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %176
  %180 = load i32, ptr %179, align 4, !tbaa !17
  %181 = icmp eq i32 %180, 2
  br i1 %181, label %182, label %185

182:                                              ; preds = %178
  %183 = getelementptr inbounds %struct.tree_common, ptr %124, i64 0, i32 1
  %184 = load ptr, ptr %183, align 8, !tbaa !17
  br label %185

185:                                              ; preds = %182, %178
  %186 = phi ptr [ %184, %182 ], [ %124, %178 ]
  %187 = tail call ptr @decl_function_context(ptr noundef %186) #31
  %188 = icmp eq ptr %187, null
  br i1 %188, label %190, label %189

189:                                              ; preds = %185
  tail call void @dwarf2out_abstract_function(ptr noundef nonnull %187)
  br label %190

190:                                              ; preds = %189, %185, %173
  %191 = load i64, ptr %124, align 8
  %192 = and i64 %191, 65535
  %193 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %192
  %194 = load i32, ptr %193, align 4, !tbaa !17
  switch i32 %194, label %1056 [
    i32 3, label %195
    i32 2, label %200
  ]

195:                                              ; preds = %190
  %196 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %197 = getelementptr inbounds %struct.tree_decl_minimal, ptr %124, i64 0, i32 2
  %198 = load i32, ptr %197, align 4, !tbaa !17
  %199 = tail call ptr @htab_find_with_hash(ptr noundef %196, ptr noundef nonnull %124, i32 noundef %198) #31
  br label %203

200:                                              ; preds = %190
  %201 = getelementptr i8, ptr %124, i64 88
  %202 = load ptr, ptr %201, align 8, !tbaa !17
  br label %203

203:                                              ; preds = %200, %195
  %204 = phi ptr [ %199, %195 ], [ %202, %200 ]
  %205 = icmp eq ptr %204, null
  br i1 %205, label %1056, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %struct.die_struct, ptr %174, i64 0, i32 2
  %208 = load ptr, ptr %207, align 8, !tbaa !6
  %209 = icmp eq ptr %208, null
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %211, ptr %207, align 8, !tbaa !157
  %212 = icmp eq ptr %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %210, %206
  %214 = phi ptr [ %211, %210 ], [ %208, %206 ]
  %215 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %214, i64 0, i32 1
  %216 = load i32, ptr %215, align 4, !tbaa !201
  %217 = load i32, ptr %214, align 8, !tbaa !159
  %218 = icmp eq i32 %216, %217
  br i1 %218, label %219, label %223

219:                                              ; preds = %213, %210
  %220 = phi ptr [ %214, %213 ], [ null, %210 ]
  %221 = tail call ptr @vec_gc_o_reserve(ptr noundef %220, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %221, ptr %207, align 8, !tbaa !6
  %222 = load i32, ptr %221, align 8, !tbaa !159
  br label %223

223:                                              ; preds = %213, %219
  %224 = phi i32 [ %217, %213 ], [ %222, %219 ]
  %225 = phi ptr [ %214, %213 ], [ %221, %219 ]
  %226 = add i32 %224, 1
  store i32 %226, ptr %225, align 8, !tbaa !159
  %227 = zext i32 %224 to i64
  %228 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %225, i64 0, i32 2, i64 %227
  store i32 49, ptr %228, align 8, !tbaa.struct !179
  %229 = getelementptr inbounds i8, ptr %228, i64 8
  store i32 10, ptr %229, align 8, !tbaa.struct !202
  %230 = getelementptr inbounds i8, ptr %228, i64 16
  store ptr %204, ptr %230, align 8, !tbaa.struct !203
  %231 = getelementptr inbounds i8, ptr %228, i64 24
  store i32 0, ptr %231, align 8, !tbaa.struct !294
  br label %1056

232:                                              ; preds = %107, %109
  %233 = phi ptr [ %108, %107 ], [ %44, %109 ]
  %234 = icmp eq ptr %233, null
  br i1 %234, label %744, label %235

235:                                              ; preds = %75, %232
  %236 = phi ptr [ %44, %75 ], [ %233, %232 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #31
  %237 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %238 = load i32, ptr %237, align 8, !tbaa !17
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %14, i32 noundef %238) #31
  %239 = load ptr, ptr %14, align 8, !tbaa !373
  %240 = load ptr, ptr @file_table_last_lookup, align 8, !tbaa !6
  %241 = icmp eq ptr %240, null
  br i1 %241, label %248, label %242

242:                                              ; preds = %235
  %243 = load ptr, ptr %240, align 8, !tbaa !124
  %244 = icmp eq ptr %243, %239
  br i1 %244, label %257, label %245

245:                                              ; preds = %242
  %246 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %243, ptr noundef nonnull dereferenceable(1) %239)
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %257, label %248

248:                                              ; preds = %245, %235
  %249 = load ptr, ptr @file_table, align 8, !tbaa !6
  %250 = call i32 @htab_hash_string(ptr noundef %239) #31
  %251 = call ptr @htab_find_slot_with_hash(ptr noundef %249, ptr noundef %239, i32 noundef %250, i32 noundef 1) #31
  %252 = load ptr, ptr %251, align 8, !tbaa !6
  %253 = icmp eq ptr %252, null
  br i1 %253, label %254, label %257

254:                                              ; preds = %248
  %255 = call ptr @ggc_alloc_stat(i64 noundef 16) #31
  store ptr %239, ptr %255, align 8, !tbaa !124
  %256 = getelementptr inbounds %struct.dwarf_file_data, ptr %255, i64 0, i32 1
  store i32 0, ptr %256, align 8, !tbaa !126
  store ptr %255, ptr %251, align 8, !tbaa !6
  br label %257

257:                                              ; preds = %242, %245, %248, %254
  %258 = phi ptr [ %255, %254 ], [ %252, %248 ], [ %240, %245 ], [ %240, %242 ]
  br label %259

259:                                              ; preds = %257, %291
  %260 = phi ptr [ %236, %257 ], [ %292, %291 ]
  %261 = getelementptr inbounds %struct.die_struct, ptr %260, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !157
  %263 = icmp eq ptr %262, null
  br i1 %263, label %303, label %264

264:                                              ; preds = %259, %285
  %265 = phi ptr [ %286, %285 ], [ %262, %259 ]
  %266 = phi ptr [ %287, %285 ], [ %262, %259 ]
  %267 = phi i64 [ %289, %285 ], [ 0, %259 ]
  %268 = phi ptr [ %288, %285 ], [ null, %259 ]
  %269 = load i32, ptr %266, align 8, !tbaa !159
  %270 = zext i32 %269 to i64
  %271 = icmp ult i64 %267, %270
  br i1 %271, label %272, label %291

272:                                              ; preds = %264
  %273 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %266, i64 0, i32 2, i64 %267
  %274 = load i32, ptr %273, align 8, !tbaa !161
  switch i32 %274, label %285 [
    i32 60, label %294
    i32 71, label %275
    i32 49, label %275
  ]

275:                                              ; preds = %272, %272
  %276 = getelementptr i8, ptr %273, i64 8
  %277 = load i32, ptr %276, align 8, !tbaa !163
  %278 = icmp eq i32 %277, 10
  br i1 %278, label %281, label %279

279:                                              ; preds = %275
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %280 = load ptr, ptr %261, align 8, !tbaa !157
  br label %281

281:                                              ; preds = %279, %275
  %282 = phi ptr [ %265, %275 ], [ %280, %279 ]
  %283 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %266, i64 0, i32 2, i64 %267, i32 1, i32 1
  %284 = load ptr, ptr %283, align 8, !tbaa !17
  br label %285

285:                                              ; preds = %281, %272
  %286 = phi ptr [ %282, %281 ], [ %265, %272 ]
  %287 = phi ptr [ %282, %281 ], [ %266, %272 ]
  %288 = phi ptr [ %284, %281 ], [ %268, %272 ]
  %289 = add nuw nsw i64 %267, 1
  %290 = icmp eq ptr %287, null
  br i1 %290, label %291, label %264, !llvm.loop !164

291:                                              ; preds = %285, %264
  %292 = phi ptr [ %288, %285 ], [ %268, %264 ]
  %293 = icmp eq ptr %292, null
  br i1 %293, label %303, label %259

294:                                              ; preds = %272
  %295 = getelementptr i8, ptr %273, i64 8
  %296 = load i32, ptr %295, align 8, !tbaa !163
  %297 = icmp eq i32 %296, 9
  br i1 %297, label %299, label %298

298:                                              ; preds = %294
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6900, ptr noundef nonnull @.str.5) #31
  br label %299

299:                                              ; preds = %294, %298
  %300 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %266, i64 0, i32 2, i64 %267, i32 1, i32 1
  %301 = load i8, ptr %300, align 8, !tbaa !17
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %303, label %341

303:                                              ; preds = %259, %291, %299
  br label %304

304:                                              ; preds = %303, %338
  %305 = phi ptr [ %339, %338 ], [ %236, %303 ]
  %306 = icmp eq ptr %305, null
  br i1 %306, label %743, label %307

307:                                              ; preds = %304
  %308 = getelementptr inbounds %struct.die_struct, ptr %305, i64 0, i32 2
  %309 = load ptr, ptr %308, align 8, !tbaa !157
  %310 = icmp eq ptr %309, null
  br i1 %310, label %743, label %311

311:                                              ; preds = %307, %332
  %312 = phi ptr [ %333, %332 ], [ %309, %307 ]
  %313 = phi ptr [ %334, %332 ], [ %309, %307 ]
  %314 = phi i64 [ %336, %332 ], [ 0, %307 ]
  %315 = phi ptr [ %335, %332 ], [ null, %307 ]
  %316 = load i32, ptr %313, align 8, !tbaa !159
  %317 = zext i32 %316 to i64
  %318 = icmp ult i64 %314, %317
  br i1 %318, label %319, label %338

319:                                              ; preds = %311
  %320 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %313, i64 0, i32 2, i64 %314
  %321 = load i32, ptr %320, align 8, !tbaa !161
  switch i32 %321, label %332 [
    i32 32, label %341
    i32 71, label %322
    i32 49, label %322
  ]

322:                                              ; preds = %319, %319
  %323 = getelementptr i8, ptr %320, i64 8
  %324 = load i32, ptr %323, align 8, !tbaa !163
  %325 = icmp eq i32 %324, 10
  br i1 %325, label %328, label %326

326:                                              ; preds = %322
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %327 = load ptr, ptr %308, align 8, !tbaa !157
  br label %328

328:                                              ; preds = %326, %322
  %329 = phi ptr [ %312, %322 ], [ %327, %326 ]
  %330 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %313, i64 0, i32 2, i64 %314, i32 1, i32 1
  %331 = load ptr, ptr %330, align 8, !tbaa !17
  br label %332

332:                                              ; preds = %319, %328
  %333 = phi ptr [ %329, %328 ], [ %312, %319 ]
  %334 = phi ptr [ %329, %328 ], [ %313, %319 ]
  %335 = phi ptr [ %331, %328 ], [ %315, %319 ]
  %336 = add nuw nsw i64 %314, 1
  %337 = icmp eq ptr %334, null
  br i1 %337, label %338, label %311, !llvm.loop !164

338:                                              ; preds = %332, %311
  %339 = phi ptr [ %335, %332 ], [ %315, %311 ]
  %340 = icmp eq ptr %339, null
  br i1 %340, label %743, label %304

341:                                              ; preds = %319, %299
  %342 = getelementptr inbounds %struct.die_struct, ptr %236, i64 0, i32 3
  %343 = load ptr, ptr %342, align 8, !tbaa !174
  %344 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %345 = icmp eq ptr %343, %344
  %346 = icmp eq ptr %1, null
  %347 = or i1 %346, %345
  br i1 %347, label %350, label %348

348:                                              ; preds = %341
  %349 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 46, ptr %349, align 8, !tbaa !185
  br label %540

350:                                              ; preds = %341
  %351 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %352 = load i64, ptr %351, align 8
  %353 = and i64 %352, 4096
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %355, label %452

355:                                              ; preds = %350, %387
  %356 = phi ptr [ %388, %387 ], [ %236, %350 ]
  %357 = getelementptr inbounds %struct.die_struct, ptr %356, i64 0, i32 2
  %358 = load ptr, ptr %357, align 8, !tbaa !157
  %359 = icmp eq ptr %358, null
  br i1 %359, label %398, label %360

360:                                              ; preds = %355, %381
  %361 = phi ptr [ %382, %381 ], [ %358, %355 ]
  %362 = phi ptr [ %383, %381 ], [ %358, %355 ]
  %363 = phi i64 [ %385, %381 ], [ 0, %355 ]
  %364 = phi ptr [ %384, %381 ], [ null, %355 ]
  %365 = load i32, ptr %362, align 8, !tbaa !159
  %366 = zext i32 %365 to i64
  %367 = icmp ult i64 %363, %366
  br i1 %367, label %368, label %387

368:                                              ; preds = %360
  %369 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %362, i64 0, i32 2, i64 %363
  %370 = load i32, ptr %369, align 8, !tbaa !161
  switch i32 %370, label %381 [
    i32 58, label %390
    i32 71, label %371
    i32 49, label %371
  ]

371:                                              ; preds = %368, %368
  %372 = getelementptr i8, ptr %369, i64 8
  %373 = load i32, ptr %372, align 8, !tbaa !163
  %374 = icmp eq i32 %373, 10
  br i1 %374, label %377, label %375

375:                                              ; preds = %371
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %376 = load ptr, ptr %357, align 8, !tbaa !157
  br label %377

377:                                              ; preds = %375, %371
  %378 = phi ptr [ %361, %371 ], [ %376, %375 ]
  %379 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %362, i64 0, i32 2, i64 %363, i32 1, i32 1
  %380 = load ptr, ptr %379, align 8, !tbaa !17
  br label %381

381:                                              ; preds = %377, %368
  %382 = phi ptr [ %378, %377 ], [ %361, %368 ]
  %383 = phi ptr [ %378, %377 ], [ %362, %368 ]
  %384 = phi ptr [ %380, %377 ], [ %364, %368 ]
  %385 = add nuw nsw i64 %363, 1
  %386 = icmp eq ptr %383, null
  br i1 %386, label %387, label %360, !llvm.loop !164

387:                                              ; preds = %381, %360
  %388 = phi ptr [ %384, %381 ], [ %364, %360 ]
  %389 = icmp eq ptr %388, null
  br i1 %389, label %398, label %355

390:                                              ; preds = %368
  %391 = getelementptr i8, ptr %369, i64 8
  %392 = load i32, ptr %391, align 8, !tbaa !163
  %393 = icmp eq i32 %392, 16
  br i1 %393, label %395, label %394

394:                                              ; preds = %390
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7270, ptr noundef nonnull @.str.5) #31
  br label %395

395:                                              ; preds = %394, %390
  %396 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %362, i64 0, i32 2, i64 %363, i32 1, i32 1
  %397 = load ptr, ptr %396, align 8, !tbaa !17
  br label %398

398:                                              ; preds = %355, %387, %395
  %399 = phi ptr [ %397, %395 ], [ null, %387 ], [ null, %355 ]
  %400 = icmp eq ptr %399, %258
  br i1 %400, label %401, label %538

401:                                              ; preds = %398, %435
  %402 = phi ptr [ %436, %435 ], [ %236, %398 ]
  %403 = icmp eq ptr %402, null
  br i1 %403, label %447, label %404

404:                                              ; preds = %401
  %405 = getelementptr inbounds %struct.die_struct, ptr %402, i64 0, i32 2
  %406 = load ptr, ptr %405, align 8, !tbaa !157
  %407 = icmp eq ptr %406, null
  br i1 %407, label %447, label %408

408:                                              ; preds = %404, %429
  %409 = phi ptr [ %430, %429 ], [ %406, %404 ]
  %410 = phi ptr [ %431, %429 ], [ %406, %404 ]
  %411 = phi i64 [ %433, %429 ], [ 0, %404 ]
  %412 = phi ptr [ %432, %429 ], [ null, %404 ]
  %413 = load i32, ptr %410, align 8, !tbaa !159
  %414 = zext i32 %413 to i64
  %415 = icmp ult i64 %411, %414
  br i1 %415, label %416, label %435

416:                                              ; preds = %408
  %417 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %410, i64 0, i32 2, i64 %411
  %418 = load i32, ptr %417, align 8, !tbaa !161
  switch i32 %418, label %429 [
    i32 59, label %438
    i32 71, label %419
    i32 49, label %419
  ]

419:                                              ; preds = %416, %416
  %420 = getelementptr i8, ptr %417, i64 8
  %421 = load i32, ptr %420, align 8, !tbaa !163
  %422 = icmp eq i32 %421, 10
  br i1 %422, label %425, label %423

423:                                              ; preds = %419
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %424 = load ptr, ptr %405, align 8, !tbaa !157
  br label %425

425:                                              ; preds = %423, %419
  %426 = phi ptr [ %409, %419 ], [ %424, %423 ]
  %427 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %410, i64 0, i32 2, i64 %411, i32 1, i32 1
  %428 = load ptr, ptr %427, align 8, !tbaa !17
  br label %429

429:                                              ; preds = %416, %425
  %430 = phi ptr [ %426, %425 ], [ %409, %416 ]
  %431 = phi ptr [ %426, %425 ], [ %410, %416 ]
  %432 = phi ptr [ %428, %425 ], [ %412, %416 ]
  %433 = add nuw nsw i64 %411, 1
  %434 = icmp eq ptr %431, null
  br i1 %434, label %435, label %408, !llvm.loop !164

435:                                              ; preds = %429, %408
  %436 = phi ptr [ %432, %429 ], [ %412, %408 ]
  %437 = icmp eq ptr %436, null
  br i1 %437, label %447, label %401

438:                                              ; preds = %416
  %439 = getelementptr i8, ptr %417, i64 8
  %440 = load i32, ptr %439, align 8, !tbaa !163
  %441 = icmp eq i32 %440, 6
  br i1 %441, label %443, label %442

442:                                              ; preds = %438
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %443

443:                                              ; preds = %442, %438
  %444 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %410, i64 0, i32 2, i64 %411, i32 1, i32 1
  %445 = load i64, ptr %444, align 8, !tbaa !17
  %446 = trunc i64 %445 to i32
  br label %447

447:                                              ; preds = %401, %404, %435, %443
  %448 = phi i32 [ %446, %443 ], [ 0, %435 ], [ 0, %404 ], [ 0, %401 ]
  %449 = getelementptr inbounds %struct.expanded_location, ptr %14, i64 0, i32 1
  %450 = load i32, ptr %449, align 8, !tbaa !375
  %451 = icmp eq i32 %448, %450
  br i1 %451, label %452, label %538

452:                                              ; preds = %350, %447
  %453 = getelementptr inbounds %struct.die_struct, ptr %236, i64 0, i32 2
  %454 = load ptr, ptr %453, align 8, !tbaa !157
  %455 = icmp eq ptr %454, null
  br i1 %455, label %490, label %456

456:                                              ; preds = %452
  %457 = load i32, ptr %454, align 8, !tbaa !159
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %490, label %459

459:                                              ; preds = %456
  %460 = zext i32 %457 to i64
  br label %461

461:                                              ; preds = %487, %459
  %462 = phi i64 [ 0, %459 ], [ %488, %487 ]
  %463 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %454, i64 0, i32 2, i64 %462
  %464 = load i32, ptr %463, align 8, !tbaa !161
  %465 = icmp eq i32 %464, 60
  br i1 %465, label %466, label %487

466:                                              ; preds = %461
  %467 = trunc i64 %462 to i32
  %468 = getelementptr i8, ptr %463, i64 8
  %469 = load i32, ptr %468, align 8, !tbaa !163
  %470 = icmp eq i32 %469, 14
  br i1 %470, label %471, label %479

471:                                              ; preds = %466
  %472 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %454, i64 0, i32 2, i64 %462, i32 1, i32 1
  %473 = load ptr, ptr %472, align 8, !tbaa !17
  %474 = getelementptr inbounds %struct.indirect_string_node, ptr %473, i64 0, i32 1
  %475 = load i32, ptr %474, align 8, !tbaa !267
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %479, label %477

477:                                              ; preds = %471
  %478 = add i32 %475, -1
  store i32 %478, ptr %474, align 8, !tbaa !267
  br label %479

479:                                              ; preds = %477, %471, %466
  %480 = and i64 %462, 4294967295
  %481 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %454, i64 0, i32 2, i64 %480
  %482 = getelementptr inbounds %struct.dw_attr_struct, ptr %481, i64 1
  %483 = add i32 %457, -1
  store i32 %483, ptr %454, align 8, !tbaa !159
  %484 = sub i32 %483, %467
  %485 = zext i32 %484 to i64
  %486 = shl nuw nsw i64 %485, 5
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %481, ptr nonnull align 8 %482, i64 %486, i1 false)
  br label %490

487:                                              ; preds = %461
  %488 = add nuw nsw i64 %462, 1
  %489 = icmp eq i64 %488, %460
  br i1 %489, label %490, label %461

490:                                              ; preds = %487, %452, %456, %479
  %491 = getelementptr inbounds %struct.die_struct, ptr %236, i64 0, i32 4
  %492 = load ptr, ptr %491, align 8, !tbaa !175
  %493 = icmp eq ptr %492, null
  br i1 %493, label %741, label %494

494:                                              ; preds = %490, %535
  %495 = phi ptr [ %500, %535 ], [ %492, %490 ]
  %496 = getelementptr inbounds %struct.die_struct, ptr %495, i64 0, i32 5
  %497 = load ptr, ptr %496, align 8, !tbaa !176
  %498 = getelementptr inbounds %struct.die_struct, ptr %495, i64 0, i32 3
  br label %499

499:                                              ; preds = %531, %494
  %500 = phi ptr [ %497, %494 ], [ %533, %531 ]
  %501 = load i32, ptr %500, align 8, !tbaa !185
  %502 = icmp eq i32 %501, 5
  br i1 %502, label %503, label %535

503:                                              ; preds = %499
  %504 = getelementptr inbounds %struct.die_struct, ptr %500, i64 0, i32 3
  %505 = load ptr, ptr %504, align 8, !tbaa !174
  %506 = load ptr, ptr %498, align 8, !tbaa !174
  %507 = icmp eq ptr %505, %506
  br i1 %507, label %509, label %508

508:                                              ; preds = %503
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7515, ptr noundef nonnull @.str.5) #31
  br label %509

509:                                              ; preds = %508, %503
  %510 = load ptr, ptr %496, align 8, !tbaa !176
  %511 = icmp eq ptr %510, %500
  br i1 %511, label %513, label %512

512:                                              ; preds = %509
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7516, ptr noundef nonnull @.str.5) #31
  br label %513

513:                                              ; preds = %512, %509
  %514 = icmp eq ptr %495, %500
  br i1 %514, label %515, label %521

515:                                              ; preds = %513
  %516 = load ptr, ptr %504, align 8, !tbaa !174
  %517 = getelementptr inbounds %struct.die_struct, ptr %516, i64 0, i32 4
  %518 = load ptr, ptr %517, align 8, !tbaa !175
  %519 = icmp eq ptr %518, %495
  br i1 %519, label %524, label %520

520:                                              ; preds = %515
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7519, ptr noundef nonnull @.str.5) #31
  br label %524

521:                                              ; preds = %513
  %522 = getelementptr inbounds %struct.die_struct, ptr %500, i64 0, i32 5
  %523 = load ptr, ptr %522, align 8, !tbaa !176
  store ptr %523, ptr %496, align 8, !tbaa !176
  br label %524

524:                                              ; preds = %521, %520, %515
  %525 = phi ptr [ %495, %521 ], [ null, %515 ], [ null, %520 ]
  %526 = load ptr, ptr %504, align 8, !tbaa !174
  %527 = getelementptr inbounds %struct.die_struct, ptr %526, i64 0, i32 4
  %528 = load ptr, ptr %527, align 8, !tbaa !175
  %529 = icmp eq ptr %528, %500
  br i1 %529, label %530, label %531

530:                                              ; preds = %524
  store ptr %525, ptr %527, align 8, !tbaa !175
  br label %531

531:                                              ; preds = %530, %524
  %532 = getelementptr inbounds %struct.die_struct, ptr %500, i64 0, i32 5
  %533 = load ptr, ptr %532, align 8, !tbaa !176
  %534 = icmp eq ptr %500, %533
  br i1 %534, label %741, label %499, !llvm.loop !376

535:                                              ; preds = %499
  %536 = load ptr, ptr %491, align 8, !tbaa !175
  %537 = icmp eq ptr %500, %536
  br i1 %537, label %741, label %494, !llvm.loop !377

538:                                              ; preds = %447, %398
  %539 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 46, ptr %539, align 8, !tbaa !185
  br i1 %346, label %557, label %540

540:                                              ; preds = %348, %538
  %541 = phi ptr [ %349, %348 ], [ %539, %538 ]
  %542 = icmp eq ptr %541, %1
  br i1 %542, label %543, label %544

543:                                              ; preds = %540
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %544

544:                                              ; preds = %543, %540
  %545 = getelementptr inbounds %struct.die_struct, ptr %541, i64 0, i32 3
  store ptr %1, ptr %545, align 8, !tbaa !174
  %546 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %547 = load ptr, ptr %546, align 8, !tbaa !175
  %548 = icmp eq ptr %547, null
  br i1 %548, label %553, label %549

549:                                              ; preds = %544
  %550 = getelementptr inbounds %struct.die_struct, ptr %547, i64 0, i32 5
  %551 = load ptr, ptr %550, align 8, !tbaa !176
  %552 = getelementptr inbounds %struct.die_struct, ptr %541, i64 0, i32 5
  store ptr %551, ptr %552, align 8, !tbaa !176
  br label %555

553:                                              ; preds = %544
  %554 = getelementptr inbounds %struct.die_struct, ptr %541, i64 0, i32 5
  br label %555

555:                                              ; preds = %553, %549
  %556 = phi ptr [ %554, %553 ], [ %550, %549 ]
  store ptr %541, ptr %556, align 8, !tbaa !176
  store ptr %541, ptr %546, align 8, !tbaa !175
  br label %562

557:                                              ; preds = %538
  %558 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %539, ptr %558, align 8, !tbaa !173
  %559 = getelementptr inbounds %struct.limbo_die_struct, ptr %558, i64 0, i32 1
  store ptr %0, ptr %559, align 8, !tbaa !177
  %560 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %561 = getelementptr inbounds %struct.limbo_die_struct, ptr %558, i64 0, i32 2
  store ptr %560, ptr %561, align 8, !tbaa !171
  store ptr %558, ptr @limbo_die_list, align 8, !tbaa !6
  br label %562

562:                                              ; preds = %557, %555
  %563 = phi ptr [ %541, %555 ], [ %539, %557 ]
  %564 = getelementptr inbounds %struct.die_struct, ptr %563, i64 0, i32 2
  %565 = load ptr, ptr %564, align 8, !tbaa !6
  %566 = icmp eq ptr %565, null
  br i1 %566, label %567, label %570

567:                                              ; preds = %562
  %568 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %568, ptr %564, align 8, !tbaa !157
  %569 = icmp eq ptr %568, null
  br i1 %569, label %576, label %570

570:                                              ; preds = %567, %562
  %571 = phi ptr [ %568, %567 ], [ %565, %562 ]
  %572 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %571, i64 0, i32 1
  %573 = load i32, ptr %572, align 4, !tbaa !201
  %574 = load i32, ptr %571, align 8, !tbaa !159
  %575 = icmp eq i32 %573, %574
  br i1 %575, label %576, label %580

576:                                              ; preds = %570, %567
  %577 = phi ptr [ %571, %570 ], [ null, %567 ]
  %578 = call ptr @vec_gc_o_reserve(ptr noundef %577, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %578, ptr %564, align 8, !tbaa !6
  %579 = load i32, ptr %578, align 8, !tbaa !159
  br label %580

580:                                              ; preds = %570, %576
  %581 = phi i32 [ %574, %570 ], [ %579, %576 ]
  %582 = phi ptr [ %571, %570 ], [ %578, %576 ]
  %583 = add i32 %581, 1
  store i32 %583, ptr %582, align 8, !tbaa !159
  %584 = zext i32 %581 to i64
  %585 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %582, i64 0, i32 2, i64 %584
  store i32 71, ptr %585, align 8, !tbaa.struct !179
  %586 = getelementptr inbounds i8, ptr %585, i64 8
  store i32 10, ptr %586, align 8, !tbaa.struct !202
  %587 = getelementptr inbounds i8, ptr %585, i64 16
  store ptr %236, ptr %587, align 8, !tbaa.struct !203
  %588 = getelementptr inbounds i8, ptr %585, i64 24
  store i32 0, ptr %588, align 8, !tbaa.struct !294
  %589 = getelementptr inbounds %struct.die_struct, ptr %236, i64 0, i32 6
  %590 = load ptr, ptr %589, align 8, !tbaa !295
  %591 = icmp eq ptr %590, null
  br i1 %591, label %593, label %592

592:                                              ; preds = %580
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7143, ptr noundef nonnull @.str.5) #31
  br label %593

593:                                              ; preds = %580, %592
  store ptr %563, ptr %589, align 8, !tbaa !295
  br label %594

594:                                              ; preds = %593, %626
  %595 = phi ptr [ %236, %593 ], [ %627, %626 ]
  %596 = getelementptr inbounds %struct.die_struct, ptr %595, i64 0, i32 2
  %597 = load ptr, ptr %596, align 8, !tbaa !157
  %598 = icmp eq ptr %597, null
  br i1 %598, label %637, label %599

599:                                              ; preds = %594, %620
  %600 = phi ptr [ %621, %620 ], [ %597, %594 ]
  %601 = phi ptr [ %622, %620 ], [ %597, %594 ]
  %602 = phi i64 [ %624, %620 ], [ 0, %594 ]
  %603 = phi ptr [ %623, %620 ], [ null, %594 ]
  %604 = load i32, ptr %601, align 8, !tbaa !159
  %605 = zext i32 %604 to i64
  %606 = icmp ult i64 %602, %605
  br i1 %606, label %607, label %626

607:                                              ; preds = %599
  %608 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %601, i64 0, i32 2, i64 %602
  %609 = load i32, ptr %608, align 8, !tbaa !161
  switch i32 %609, label %620 [
    i32 58, label %629
    i32 71, label %610
    i32 49, label %610
  ]

610:                                              ; preds = %607, %607
  %611 = getelementptr i8, ptr %608, i64 8
  %612 = load i32, ptr %611, align 8, !tbaa !163
  %613 = icmp eq i32 %612, 10
  br i1 %613, label %616, label %614

614:                                              ; preds = %610
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %615 = load ptr, ptr %596, align 8, !tbaa !157
  br label %616

616:                                              ; preds = %614, %610
  %617 = phi ptr [ %600, %610 ], [ %615, %614 ]
  %618 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %601, i64 0, i32 2, i64 %602, i32 1, i32 1
  %619 = load ptr, ptr %618, align 8, !tbaa !17
  br label %620

620:                                              ; preds = %616, %607
  %621 = phi ptr [ %617, %616 ], [ %600, %607 ]
  %622 = phi ptr [ %617, %616 ], [ %601, %607 ]
  %623 = phi ptr [ %619, %616 ], [ %603, %607 ]
  %624 = add nuw nsw i64 %602, 1
  %625 = icmp eq ptr %622, null
  br i1 %625, label %626, label %599, !llvm.loop !164

626:                                              ; preds = %620, %599
  %627 = phi ptr [ %623, %620 ], [ %603, %599 ]
  %628 = icmp eq ptr %627, null
  br i1 %628, label %637, label %594

629:                                              ; preds = %607
  %630 = getelementptr i8, ptr %608, i64 8
  %631 = load i32, ptr %630, align 8, !tbaa !163
  %632 = icmp eq i32 %631, 16
  br i1 %632, label %634, label %633

633:                                              ; preds = %629
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7270, ptr noundef nonnull @.str.5) #31
  br label %634

634:                                              ; preds = %633, %629
  %635 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %601, i64 0, i32 2, i64 %602, i32 1, i32 1
  %636 = load ptr, ptr %635, align 8, !tbaa !17
  br label %637

637:                                              ; preds = %594, %626, %634
  %638 = phi ptr [ %636, %634 ], [ null, %626 ], [ null, %594 ]
  %639 = icmp eq ptr %638, %258
  br i1 %639, label %664, label %640

640:                                              ; preds = %637
  %641 = load ptr, ptr %564, align 8, !tbaa !6
  %642 = icmp eq ptr %641, null
  br i1 %642, label %643, label %646

643:                                              ; preds = %640
  %644 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %644, ptr %564, align 8, !tbaa !157
  %645 = icmp eq ptr %644, null
  br i1 %645, label %652, label %646

646:                                              ; preds = %643, %640
  %647 = phi ptr [ %644, %643 ], [ %641, %640 ]
  %648 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %647, i64 0, i32 1
  %649 = load i32, ptr %648, align 4, !tbaa !201
  %650 = load i32, ptr %647, align 8, !tbaa !159
  %651 = icmp eq i32 %649, %650
  br i1 %651, label %652, label %656

652:                                              ; preds = %646, %643
  %653 = phi ptr [ %647, %646 ], [ null, %643 ]
  %654 = call ptr @vec_gc_o_reserve(ptr noundef %653, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %654, ptr %564, align 8, !tbaa !6
  %655 = load i32, ptr %654, align 8, !tbaa !159
  br label %656

656:                                              ; preds = %646, %652
  %657 = phi i32 [ %650, %646 ], [ %655, %652 ]
  %658 = phi ptr [ %647, %646 ], [ %654, %652 ]
  %659 = add i32 %657, 1
  store i32 %659, ptr %658, align 8, !tbaa !159
  %660 = zext i32 %657 to i64
  %661 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %658, i64 0, i32 2, i64 %660
  store i32 58, ptr %661, align 8, !tbaa.struct !179
  %662 = getelementptr inbounds i8, ptr %661, i64 8
  store i32 16, ptr %662, align 8, !tbaa.struct !202
  %663 = getelementptr inbounds i8, ptr %661, i64 16
  store ptr %258, ptr %663, align 8, !tbaa.struct !203
  br label %664

664:                                              ; preds = %656, %637
  br label %665

665:                                              ; preds = %664, %699
  %666 = phi ptr [ %700, %699 ], [ %236, %664 ]
  %667 = icmp eq ptr %666, null
  br i1 %667, label %711, label %668

668:                                              ; preds = %665
  %669 = getelementptr inbounds %struct.die_struct, ptr %666, i64 0, i32 2
  %670 = load ptr, ptr %669, align 8, !tbaa !157
  %671 = icmp eq ptr %670, null
  br i1 %671, label %711, label %672

672:                                              ; preds = %668, %693
  %673 = phi ptr [ %694, %693 ], [ %670, %668 ]
  %674 = phi ptr [ %695, %693 ], [ %670, %668 ]
  %675 = phi i64 [ %697, %693 ], [ 0, %668 ]
  %676 = phi ptr [ %696, %693 ], [ null, %668 ]
  %677 = load i32, ptr %674, align 8, !tbaa !159
  %678 = zext i32 %677 to i64
  %679 = icmp ult i64 %675, %678
  br i1 %679, label %680, label %699

680:                                              ; preds = %672
  %681 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %674, i64 0, i32 2, i64 %675
  %682 = load i32, ptr %681, align 8, !tbaa !161
  switch i32 %682, label %693 [
    i32 59, label %702
    i32 71, label %683
    i32 49, label %683
  ]

683:                                              ; preds = %680, %680
  %684 = getelementptr i8, ptr %681, i64 8
  %685 = load i32, ptr %684, align 8, !tbaa !163
  %686 = icmp eq i32 %685, 10
  br i1 %686, label %689, label %687

687:                                              ; preds = %683
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %688 = load ptr, ptr %669, align 8, !tbaa !157
  br label %689

689:                                              ; preds = %687, %683
  %690 = phi ptr [ %673, %683 ], [ %688, %687 ]
  %691 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %674, i64 0, i32 2, i64 %675, i32 1, i32 1
  %692 = load ptr, ptr %691, align 8, !tbaa !17
  br label %693

693:                                              ; preds = %680, %689
  %694 = phi ptr [ %690, %689 ], [ %673, %680 ]
  %695 = phi ptr [ %690, %689 ], [ %674, %680 ]
  %696 = phi ptr [ %692, %689 ], [ %676, %680 ]
  %697 = add nuw nsw i64 %675, 1
  %698 = icmp eq ptr %695, null
  br i1 %698, label %699, label %672, !llvm.loop !164

699:                                              ; preds = %693, %672
  %700 = phi ptr [ %696, %693 ], [ %676, %672 ]
  %701 = icmp eq ptr %700, null
  br i1 %701, label %711, label %665

702:                                              ; preds = %680
  %703 = getelementptr i8, ptr %681, i64 8
  %704 = load i32, ptr %703, align 8, !tbaa !163
  %705 = icmp eq i32 %704, 6
  br i1 %705, label %707, label %706

706:                                              ; preds = %702
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %707

707:                                              ; preds = %706, %702
  %708 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %674, i64 0, i32 2, i64 %675, i32 1, i32 1
  %709 = load i64, ptr %708, align 8, !tbaa !17
  %710 = trunc i64 %709 to i32
  br label %711

711:                                              ; preds = %665, %668, %699, %707
  %712 = phi i32 [ %710, %707 ], [ 0, %699 ], [ 0, %668 ], [ 0, %665 ]
  %713 = getelementptr inbounds %struct.expanded_location, ptr %14, i64 0, i32 1
  %714 = load i32, ptr %713, align 8, !tbaa !375
  %715 = icmp eq i32 %712, %714
  br i1 %715, label %741, label %716

716:                                              ; preds = %711
  %717 = sext i32 %714 to i64
  %718 = load ptr, ptr %564, align 8, !tbaa !6
  %719 = icmp eq ptr %718, null
  br i1 %719, label %720, label %723

720:                                              ; preds = %716
  %721 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %721, ptr %564, align 8, !tbaa !157
  %722 = icmp eq ptr %721, null
  br i1 %722, label %729, label %723

723:                                              ; preds = %720, %716
  %724 = phi ptr [ %721, %720 ], [ %718, %716 ]
  %725 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %724, i64 0, i32 1
  %726 = load i32, ptr %725, align 4, !tbaa !201
  %727 = load i32, ptr %724, align 8, !tbaa !159
  %728 = icmp eq i32 %726, %727
  br i1 %728, label %729, label %733

729:                                              ; preds = %723, %720
  %730 = phi ptr [ %724, %723 ], [ null, %720 ]
  %731 = call ptr @vec_gc_o_reserve(ptr noundef %730, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %731, ptr %564, align 8, !tbaa !6
  %732 = load i32, ptr %731, align 8, !tbaa !159
  br label %733

733:                                              ; preds = %723, %729
  %734 = phi i32 [ %727, %723 ], [ %732, %729 ]
  %735 = phi ptr [ %724, %723 ], [ %731, %729 ]
  %736 = add i32 %734, 1
  store i32 %736, ptr %735, align 8, !tbaa !159
  %737 = zext i32 %734 to i64
  %738 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %735, i64 0, i32 2, i64 %737
  store i32 59, ptr %738, align 8, !tbaa.struct !179
  %739 = getelementptr inbounds i8, ptr %738, i64 8
  store i32 6, ptr %739, align 8, !tbaa.struct !202
  %740 = getelementptr inbounds i8, ptr %738, i64 16
  store i64 %717, ptr %740, align 8, !tbaa.struct !203
  br label %741

741:                                              ; preds = %535, %531, %711, %733, %490
  %742 = phi ptr [ %236, %490 ], [ %563, %711 ], [ %563, %733 ], [ %236, %531 ], [ %236, %535 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #31
  br label %1056

743:                                              ; preds = %304, %338, %307
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #31
  br label %2082

744:                                              ; preds = %101, %86, %82, %232
  %745 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 46, ptr %745, align 8, !tbaa !185
  %746 = icmp eq ptr %1, null
  br i1 %746, label %764, label %747

747:                                              ; preds = %99, %744
  %748 = phi ptr [ %100, %99 ], [ %745, %744 ]
  %749 = icmp eq ptr %748, %1
  br i1 %749, label %750, label %751

750:                                              ; preds = %747
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %751

751:                                              ; preds = %750, %747
  %752 = getelementptr inbounds %struct.die_struct, ptr %748, i64 0, i32 3
  store ptr %1, ptr %752, align 8, !tbaa !174
  %753 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %754 = load ptr, ptr %753, align 8, !tbaa !175
  %755 = icmp eq ptr %754, null
  br i1 %755, label %760, label %756

756:                                              ; preds = %751
  %757 = getelementptr inbounds %struct.die_struct, ptr %754, i64 0, i32 5
  %758 = load ptr, ptr %757, align 8, !tbaa !176
  %759 = getelementptr inbounds %struct.die_struct, ptr %748, i64 0, i32 5
  store ptr %758, ptr %759, align 8, !tbaa !176
  br label %762

760:                                              ; preds = %751
  %761 = getelementptr inbounds %struct.die_struct, ptr %748, i64 0, i32 5
  br label %762

762:                                              ; preds = %760, %756
  %763 = phi ptr [ %761, %760 ], [ %757, %756 ]
  store ptr %748, ptr %763, align 8, !tbaa !176
  store ptr %748, ptr %753, align 8, !tbaa !175
  br label %769

764:                                              ; preds = %744
  %765 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %745, ptr %765, align 8, !tbaa !173
  %766 = getelementptr inbounds %struct.limbo_die_struct, ptr %765, i64 0, i32 1
  store ptr %0, ptr %766, align 8, !tbaa !177
  %767 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %768 = getelementptr inbounds %struct.limbo_die_struct, ptr %765, i64 0, i32 2
  store ptr %767, ptr %768, align 8, !tbaa !171
  store ptr %765, ptr @limbo_die_list, align 8, !tbaa !6
  br label %769

769:                                              ; preds = %762, %764
  %770 = phi ptr [ %748, %762 ], [ %745, %764 ]
  %771 = load i64, ptr %0, align 8
  %772 = and i64 %771, 134217728
  %773 = icmp eq i64 %772, 0
  br i1 %773, label %800, label %774

774:                                              ; preds = %769
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %12)
  %775 = getelementptr inbounds %struct.die_struct, ptr %770, i64 0, i32 2
  %776 = load ptr, ptr %775, align 8, !tbaa !6
  %777 = icmp eq ptr %776, null
  br i1 %777, label %778, label %781

778:                                              ; preds = %774
  %779 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %779, ptr %775, align 8, !tbaa !157
  %780 = icmp eq ptr %779, null
  br i1 %780, label %787, label %781

781:                                              ; preds = %778, %774
  %782 = phi ptr [ %779, %778 ], [ %776, %774 ]
  %783 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %782, i64 0, i32 1
  %784 = load i32, ptr %783, align 4, !tbaa !201
  %785 = load i32, ptr %782, align 8, !tbaa !159
  %786 = icmp eq i32 %784, %785
  br i1 %786, label %787, label %791

787:                                              ; preds = %781, %778
  %788 = phi ptr [ %782, %781 ], [ null, %778 ]
  %789 = tail call ptr @vec_gc_o_reserve(ptr noundef %788, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %789, ptr %775, align 8, !tbaa !6
  %790 = load i32, ptr %789, align 8, !tbaa !159
  br label %791

791:                                              ; preds = %781, %787
  %792 = phi i32 [ %785, %781 ], [ %790, %787 ]
  %793 = phi ptr [ %782, %781 ], [ %789, %787 ]
  %794 = add i32 %792, 1
  store i32 %794, ptr %793, align 8, !tbaa !159
  %795 = zext i32 %792 to i64
  %796 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %793, i64 0, i32 2, i64 %795
  store i32 63, ptr %796, align 8, !tbaa.struct !179
  %797 = getelementptr inbounds i8, ptr %796, i64 8
  store i32 9, ptr %797, align 8, !tbaa.struct !202
  %798 = getelementptr inbounds i8, ptr %796, i64 16
  store i8 1, ptr %798, align 8, !tbaa.struct !203
  %799 = getelementptr inbounds i8, ptr %796, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %799, ptr noundef nonnull align 1 dereferenceable(15) %12, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %12)
  br label %800

800:                                              ; preds = %791, %769
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %770, ptr noundef nonnull %0)
  %801 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %802 = icmp ugt i32 %801, 1
  br i1 %802, label %803, label %867

803:                                              ; preds = %800
  %804 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %805 = load ptr, ptr %804, align 8, !tbaa !17
  tail call fastcc void @add_prototyped_attribute(ptr noundef nonnull %770, ptr noundef %805)
  %806 = load ptr, ptr %804, align 8, !tbaa !17
  %807 = getelementptr inbounds %struct.tree_common, ptr %806, i64 0, i32 2
  %808 = load ptr, ptr %807, align 8, !tbaa !17
  %809 = load i64, ptr %808, align 8
  %810 = trunc i64 %809 to i32
  %811 = and i32 %810, 65535
  %812 = and i32 %810, 65534
  %813 = icmp eq i32 %812, 8
  %814 = icmp eq i32 %811, 11
  %815 = or i1 %813, %814
  br i1 %815, label %816, label %828

816:                                              ; preds = %803
  %817 = getelementptr inbounds %struct.tree_common, ptr %808, i64 0, i32 2
  %818 = load ptr, ptr %817, align 8, !tbaa !17
  %819 = icmp eq ptr %818, null
  br i1 %819, label %828, label %820

820:                                              ; preds = %816
  %821 = getelementptr inbounds %struct.tree_type, ptr %808, i64 0, i32 12
  %822 = load ptr, ptr %821, align 8, !tbaa !17
  %823 = icmp eq ptr %822, null
  br i1 %823, label %824, label %828

824:                                              ; preds = %820
  %825 = load i64, ptr %818, align 8
  %826 = trunc i64 %825 to i32
  %827 = and i32 %826, 65535
  br label %828

828:                                              ; preds = %824, %820, %816, %803
  %829 = phi i64 [ %825, %824 ], [ %809, %820 ], [ %809, %816 ], [ %809, %803 ]
  %830 = phi ptr [ %818, %824 ], [ %808, %820 ], [ %808, %816 ], [ %808, %803 ]
  %831 = phi i32 [ %827, %824 ], [ %811, %820 ], [ %811, %816 ], [ %811, %803 ]
  %832 = trunc i32 %831 to i16
  switch i16 %832, label %833 [
    i16 19, label %867
    i16 0, label %867
  ]

833:                                              ; preds = %828
  %834 = trunc i64 %829 to i32
  %835 = lshr i32 %834, 20
  %836 = and i32 %835, 1
  %837 = lshr i32 %834, 19
  %838 = and i32 %837, 1
  %839 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %830, i32 noundef %836, i32 noundef %838, ptr noundef %1)
  %840 = icmp eq ptr %839, null
  br i1 %840, label %867, label %841

841:                                              ; preds = %833
  %842 = getelementptr inbounds %struct.die_struct, ptr %770, i64 0, i32 2
  %843 = load ptr, ptr %842, align 8, !tbaa !6
  %844 = icmp eq ptr %843, null
  br i1 %844, label %845, label %848

845:                                              ; preds = %841
  %846 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %846, ptr %842, align 8, !tbaa !157
  %847 = icmp eq ptr %846, null
  br i1 %847, label %854, label %848

848:                                              ; preds = %845, %841
  %849 = phi ptr [ %846, %845 ], [ %843, %841 ]
  %850 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %849, i64 0, i32 1
  %851 = load i32, ptr %850, align 4, !tbaa !201
  %852 = load i32, ptr %849, align 8, !tbaa !159
  %853 = icmp eq i32 %851, %852
  br i1 %853, label %854, label %858

854:                                              ; preds = %848, %845
  %855 = phi ptr [ %849, %848 ], [ null, %845 ]
  %856 = tail call ptr @vec_gc_o_reserve(ptr noundef %855, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %856, ptr %842, align 8, !tbaa !6
  %857 = load i32, ptr %856, align 8, !tbaa !159
  br label %858

858:                                              ; preds = %848, %854
  %859 = phi i32 [ %852, %848 ], [ %857, %854 ]
  %860 = phi ptr [ %849, %848 ], [ %856, %854 ]
  %861 = add i32 %859, 1
  store i32 %861, ptr %860, align 8, !tbaa !159
  %862 = zext i32 %859 to i64
  %863 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %860, i64 0, i32 2, i64 %862
  store i32 73, ptr %863, align 8, !tbaa.struct !179
  %864 = getelementptr inbounds i8, ptr %863, i64 8
  store i32 10, ptr %864, align 8, !tbaa.struct !202
  %865 = getelementptr inbounds i8, ptr %863, i64 16
  store ptr %839, ptr %865, align 8, !tbaa.struct !203
  %866 = getelementptr inbounds i8, ptr %863, i64 24
  store i32 0, ptr %866, align 8, !tbaa.struct !294
  br label %867

867:                                              ; preds = %858, %833, %828, %828, %800
  %868 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 4
  %869 = load ptr, ptr %868, align 8, !tbaa !17
  %870 = icmp eq ptr %869, null
  br i1 %870, label %968, label %871

871:                                              ; preds = %867
  %872 = getelementptr inbounds %struct.die_struct, ptr %770, i64 0, i32 2
  %873 = load ptr, ptr %872, align 8, !tbaa !6
  %874 = icmp eq ptr %873, null
  br i1 %874, label %875, label %878

875:                                              ; preds = %871
  %876 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %876, ptr %872, align 8, !tbaa !157
  %877 = icmp eq ptr %876, null
  br i1 %877, label %884, label %878

878:                                              ; preds = %875, %871
  %879 = phi ptr [ %876, %875 ], [ %873, %871 ]
  %880 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %879, i64 0, i32 1
  %881 = load i32, ptr %880, align 4, !tbaa !201
  %882 = load i32, ptr %879, align 8, !tbaa !159
  %883 = icmp eq i32 %881, %882
  br i1 %883, label %884, label %888

884:                                              ; preds = %878, %875
  %885 = phi ptr [ %879, %878 ], [ null, %875 ]
  %886 = tail call ptr @vec_gc_o_reserve(ptr noundef %885, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %886, ptr %872, align 8, !tbaa !6
  %887 = load i32, ptr %886, align 8, !tbaa !159
  br label %888

888:                                              ; preds = %878, %884
  %889 = phi i32 [ %882, %878 ], [ %887, %884 ]
  %890 = phi ptr [ %879, %878 ], [ %886, %884 ]
  %891 = add i32 %889, 1
  store i32 %891, ptr %890, align 8, !tbaa !159
  %892 = zext i32 %889 to i64
  %893 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %890, i64 0, i32 2, i64 %892
  store i32 76, ptr %893, align 8, !tbaa.struct !179
  %894 = getelementptr inbounds i8, ptr %893, i64 8
  store i32 6, ptr %894, align 8, !tbaa.struct !202
  %895 = getelementptr inbounds i8, ptr %893, i64 16
  store i64 1, ptr %895, align 8, !tbaa.struct !203
  %896 = load ptr, ptr %868, align 8, !tbaa !17
  %897 = tail call i32 @host_integerp(ptr noundef %896, i32 noundef 0) #31
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %934, label %899

899:                                              ; preds = %888
  %900 = load ptr, ptr %868, align 8, !tbaa !17
  %901 = tail call i64 @tree_low_cst(ptr noundef %900, i32 noundef 0) #31
  %902 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %903 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %902, i64 0, i32 1
  %904 = load i16, ptr %903, align 8
  %905 = and i16 %904, -256
  %906 = or i16 %905, 16
  store i16 %906, ptr %903, align 8
  %907 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %902, i64 0, i32 3
  store i32 6, ptr %907, align 8, !tbaa !52
  %908 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %902, i64 0, i32 3, i32 1
  store i64 %901, ptr %908, align 8, !tbaa !17
  %909 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %902, i64 0, i32 4
  store i32 6, ptr %909, align 8, !tbaa !49
  %910 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %902, i64 0, i32 4, i32 1
  store i64 0, ptr %910, align 8, !tbaa !17
  %911 = load ptr, ptr %872, align 8, !tbaa !6
  %912 = icmp eq ptr %911, null
  br i1 %912, label %913, label %916

913:                                              ; preds = %899
  %914 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %914, ptr %872, align 8, !tbaa !157
  %915 = icmp eq ptr %914, null
  br i1 %915, label %922, label %916

916:                                              ; preds = %913, %899
  %917 = phi ptr [ %914, %913 ], [ %911, %899 ]
  %918 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %917, i64 0, i32 1
  %919 = load i32, ptr %918, align 4, !tbaa !201
  %920 = load i32, ptr %917, align 8, !tbaa !159
  %921 = icmp eq i32 %919, %920
  br i1 %921, label %922, label %926

922:                                              ; preds = %916, %913
  %923 = phi ptr [ %917, %916 ], [ null, %913 ]
  %924 = tail call ptr @vec_gc_o_reserve(ptr noundef %923, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %924, ptr %872, align 8, !tbaa !6
  %925 = load i32, ptr %924, align 8, !tbaa !159
  br label %926

926:                                              ; preds = %922, %916
  %927 = phi i32 [ %920, %916 ], [ %925, %922 ]
  %928 = phi ptr [ %917, %916 ], [ %924, %922 ]
  %929 = add i32 %927, 1
  store i32 %929, ptr %928, align 8, !tbaa !159
  %930 = zext i32 %927 to i64
  %931 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %928, i64 0, i32 2, i64 %930
  store i32 77, ptr %931, align 8, !tbaa.struct !179
  %932 = getelementptr inbounds i8, ptr %931, i64 8
  store i32 2, ptr %932, align 8, !tbaa.struct !202
  %933 = getelementptr inbounds i8, ptr %931, i64 16
  store ptr %902, ptr %933, align 8, !tbaa.struct !203
  br label %934

934:                                              ; preds = %926, %888
  %935 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %936 = icmp ugt i32 %935, 1
  br i1 %936, label %937, label %968

937:                                              ; preds = %934
  %938 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %939 = load ptr, ptr %938, align 8, !tbaa !17
  %940 = icmp eq ptr %939, null
  br i1 %940, label %968, label %941

941:                                              ; preds = %937
  %942 = getelementptr i8, ptr %939, i64 88
  %943 = load ptr, ptr %942, align 8, !tbaa !17
  %944 = load ptr, ptr %872, align 8, !tbaa !6
  %945 = icmp eq ptr %944, null
  br i1 %945, label %946, label %949

946:                                              ; preds = %941
  %947 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %947, ptr %872, align 8, !tbaa !157
  %948 = icmp eq ptr %947, null
  br i1 %948, label %955, label %949

949:                                              ; preds = %946, %941
  %950 = phi ptr [ %947, %946 ], [ %944, %941 ]
  %951 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %950, i64 0, i32 1
  %952 = load i32, ptr %951, align 4, !tbaa !201
  %953 = load i32, ptr %950, align 8, !tbaa !159
  %954 = icmp eq i32 %952, %953
  br i1 %954, label %955, label %959

955:                                              ; preds = %949, %946
  %956 = phi ptr [ %950, %949 ], [ null, %946 ]
  %957 = tail call ptr @vec_gc_o_reserve(ptr noundef %956, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %957, ptr %872, align 8, !tbaa !6
  %958 = load i32, ptr %957, align 8, !tbaa !159
  br label %959

959:                                              ; preds = %955, %949
  %960 = phi i32 [ %953, %949 ], [ %958, %955 ]
  %961 = phi ptr [ %950, %949 ], [ %957, %955 ]
  %962 = add i32 %960, 1
  store i32 %962, ptr %961, align 8, !tbaa !159
  %963 = zext i32 %960 to i64
  %964 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %961, i64 0, i32 2, i64 %963
  store i32 29, ptr %964, align 8, !tbaa.struct !179
  %965 = getelementptr inbounds i8, ptr %964, i64 8
  store i32 10, ptr %965, align 8, !tbaa.struct !202
  %966 = getelementptr inbounds i8, ptr %964, i64 16
  store ptr %943, ptr %966, align 8, !tbaa.struct !203
  %967 = getelementptr inbounds i8, ptr %964, i64 24
  store i32 0, ptr %967, align 8, !tbaa.struct !294
  br label %968

968:                                              ; preds = %867, %934, %937, %959
  %969 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %970 = load i64, ptr %969, align 8
  %971 = and i64 %970, 4096
  %972 = icmp eq i64 %971, 0
  br i1 %972, label %999, label %973

973:                                              ; preds = %968
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %11)
  %974 = getelementptr inbounds %struct.die_struct, ptr %770, i64 0, i32 2
  %975 = load ptr, ptr %974, align 8, !tbaa !6
  %976 = icmp eq ptr %975, null
  br i1 %976, label %977, label %980

977:                                              ; preds = %973
  %978 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %978, ptr %974, align 8, !tbaa !157
  %979 = icmp eq ptr %978, null
  br i1 %979, label %986, label %980

980:                                              ; preds = %977, %973
  %981 = phi ptr [ %978, %977 ], [ %975, %973 ]
  %982 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %981, i64 0, i32 1
  %983 = load i32, ptr %982, align 4, !tbaa !201
  %984 = load i32, ptr %981, align 8, !tbaa !159
  %985 = icmp eq i32 %983, %984
  br i1 %985, label %986, label %990

986:                                              ; preds = %980, %977
  %987 = phi ptr [ %981, %980 ], [ null, %977 ]
  %988 = tail call ptr @vec_gc_o_reserve(ptr noundef %987, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %988, ptr %974, align 8, !tbaa !6
  %989 = load i32, ptr %988, align 8, !tbaa !159
  br label %990

990:                                              ; preds = %980, %986
  %991 = phi i32 [ %984, %980 ], [ %989, %986 ]
  %992 = phi ptr [ %981, %980 ], [ %988, %986 ]
  %993 = add i32 %991, 1
  store i32 %993, ptr %992, align 8, !tbaa !159
  %994 = zext i32 %991 to i64
  %995 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %992, i64 0, i32 2, i64 %994
  store i32 52, ptr %995, align 8, !tbaa.struct !179
  %996 = getelementptr inbounds i8, ptr %995, i64 8
  store i32 9, ptr %996, align 8, !tbaa.struct !202
  %997 = getelementptr inbounds i8, ptr %995, i64 16
  store i8 1, ptr %997, align 8, !tbaa.struct !203
  %998 = getelementptr inbounds i8, ptr %995, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %998, ptr noundef nonnull align 1 dereferenceable(15) %11, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %11)
  br label %999

999:                                              ; preds = %990, %968
  %1000 = load i64, ptr %0, align 8
  %1001 = and i64 %1000, 536870912
  %1002 = icmp eq i64 %1001, 0
  br i1 %1002, label %1028, label %1003

1003:                                             ; preds = %999
  %1004 = getelementptr inbounds %struct.die_struct, ptr %770, i64 0, i32 2
  %1005 = load ptr, ptr %1004, align 8, !tbaa !6
  %1006 = icmp eq ptr %1005, null
  br i1 %1006, label %1007, label %1010

1007:                                             ; preds = %1003
  %1008 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1008, ptr %1004, align 8, !tbaa !157
  %1009 = icmp eq ptr %1008, null
  br i1 %1009, label %1016, label %1010

1010:                                             ; preds = %1007, %1003
  %1011 = phi ptr [ %1008, %1007 ], [ %1005, %1003 ]
  %1012 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1011, i64 0, i32 1
  %1013 = load i32, ptr %1012, align 4, !tbaa !201
  %1014 = load i32, ptr %1011, align 8, !tbaa !159
  %1015 = icmp eq i32 %1013, %1014
  br i1 %1015, label %1016, label %1020

1016:                                             ; preds = %1010, %1007
  %1017 = phi ptr [ %1011, %1010 ], [ null, %1007 ]
  %1018 = tail call ptr @vec_gc_o_reserve(ptr noundef %1017, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1018, ptr %1004, align 8, !tbaa !6
  %1019 = load i32, ptr %1018, align 8, !tbaa !159
  br label %1020

1020:                                             ; preds = %1010, %1016
  %1021 = phi i32 [ %1014, %1010 ], [ %1019, %1016 ]
  %1022 = phi ptr [ %1011, %1010 ], [ %1018, %1016 ]
  %1023 = add i32 %1021, 1
  store i32 %1023, ptr %1022, align 8, !tbaa !159
  %1024 = zext i32 %1021 to i64
  %1025 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1022, i64 0, i32 2, i64 %1024
  store i32 50, ptr %1025, align 8, !tbaa.struct !179
  %1026 = getelementptr inbounds i8, ptr %1025, i64 8
  store i32 6, ptr %1026, align 8, !tbaa.struct !202
  %1027 = getelementptr inbounds i8, ptr %1025, i64 16
  store i64 2, ptr %1027, align 8, !tbaa.struct !203
  br label %1056

1028:                                             ; preds = %999
  %1029 = and i64 %1000, 268435456
  %1030 = icmp eq i64 %1029, 0
  br i1 %1030, label %1056, label %1031

1031:                                             ; preds = %1028
  %1032 = getelementptr inbounds %struct.die_struct, ptr %770, i64 0, i32 2
  %1033 = load ptr, ptr %1032, align 8, !tbaa !6
  %1034 = icmp eq ptr %1033, null
  br i1 %1034, label %1035, label %1038

1035:                                             ; preds = %1031
  %1036 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1036, ptr %1032, align 8, !tbaa !157
  %1037 = icmp eq ptr %1036, null
  br i1 %1037, label %1044, label %1038

1038:                                             ; preds = %1035, %1031
  %1039 = phi ptr [ %1036, %1035 ], [ %1033, %1031 ]
  %1040 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1039, i64 0, i32 1
  %1041 = load i32, ptr %1040, align 4, !tbaa !201
  %1042 = load i32, ptr %1039, align 8, !tbaa !159
  %1043 = icmp eq i32 %1041, %1042
  br i1 %1043, label %1044, label %1048

1044:                                             ; preds = %1038, %1035
  %1045 = phi ptr [ %1039, %1038 ], [ null, %1035 ]
  %1046 = tail call ptr @vec_gc_o_reserve(ptr noundef %1045, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1046, ptr %1032, align 8, !tbaa !6
  %1047 = load i32, ptr %1046, align 8, !tbaa !159
  br label %1048

1048:                                             ; preds = %1038, %1044
  %1049 = phi i32 [ %1042, %1038 ], [ %1047, %1044 ]
  %1050 = phi ptr [ %1039, %1038 ], [ %1046, %1044 ]
  %1051 = add i32 %1049, 1
  store i32 %1051, ptr %1050, align 8, !tbaa !159
  %1052 = zext i32 %1049 to i64
  %1053 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1050, i64 0, i32 2, i64 %1052
  store i32 50, ptr %1053, align 8, !tbaa.struct !179
  %1054 = getelementptr inbounds i8, ptr %1053, i64 8
  store i32 6, ptr %1054, align 8, !tbaa.struct !202
  %1055 = getelementptr inbounds i8, ptr %1053, i64 16
  store i64 3, ptr %1055, align 8, !tbaa.struct !203
  br label %1056

1056:                                             ; preds = %190, %741, %223, %203, %1028, %1048, %1020
  %1057 = phi ptr [ null, %1020 ], [ null, %1048 ], [ null, %1028 ], [ %44, %203 ], [ %44, %223 ], [ %236, %741 ], [ %44, %190 ]
  %1058 = phi ptr [ %770, %1020 ], [ %770, %1048 ], [ %770, %1028 ], [ %174, %203 ], [ %174, %223 ], [ %742, %741 ], [ %174, %190 ]
  br i1 %58, label %1059, label %1167

1059:                                             ; preds = %1056
  %1060 = icmp eq ptr %1057, null
  br i1 %1060, label %1096, label %1061

1061:                                             ; preds = %1059, %1093
  %1062 = phi ptr [ %1094, %1093 ], [ %1057, %1059 ]
  %1063 = getelementptr inbounds %struct.die_struct, ptr %1062, i64 0, i32 2
  %1064 = load ptr, ptr %1063, align 8, !tbaa !157
  %1065 = icmp eq ptr %1064, null
  br i1 %1065, label %1096, label %1066

1066:                                             ; preds = %1061, %1087
  %1067 = phi ptr [ %1088, %1087 ], [ %1064, %1061 ]
  %1068 = phi ptr [ %1089, %1087 ], [ %1064, %1061 ]
  %1069 = phi i64 [ %1091, %1087 ], [ 0, %1061 ]
  %1070 = phi ptr [ %1090, %1087 ], [ null, %1061 ]
  %1071 = load i32, ptr %1068, align 8, !tbaa !159
  %1072 = zext i32 %1071 to i64
  %1073 = icmp ult i64 %1069, %1072
  br i1 %1073, label %1074, label %1093

1074:                                             ; preds = %1066
  %1075 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1068, i64 0, i32 2, i64 %1069
  %1076 = load i32, ptr %1075, align 8, !tbaa !161
  switch i32 %1076, label %1087 [
    i32 32, label %1769
    i32 71, label %1077
    i32 49, label %1077
  ]

1077:                                             ; preds = %1074, %1074
  %1078 = getelementptr i8, ptr %1075, i64 8
  %1079 = load i32, ptr %1078, align 8, !tbaa !163
  %1080 = icmp eq i32 %1079, 10
  br i1 %1080, label %1083, label %1081

1081:                                             ; preds = %1077
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1082 = load ptr, ptr %1063, align 8, !tbaa !157
  br label %1083

1083:                                             ; preds = %1081, %1077
  %1084 = phi ptr [ %1067, %1077 ], [ %1082, %1081 ]
  %1085 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1068, i64 0, i32 2, i64 %1069, i32 1, i32 1
  %1086 = load ptr, ptr %1085, align 8, !tbaa !17
  br label %1087

1087:                                             ; preds = %1074, %1083
  %1088 = phi ptr [ %1084, %1083 ], [ %1067, %1074 ]
  %1089 = phi ptr [ %1084, %1083 ], [ %1068, %1074 ]
  %1090 = phi ptr [ %1086, %1083 ], [ %1070, %1074 ]
  %1091 = add nuw nsw i64 %1069, 1
  %1092 = icmp eq ptr %1089, null
  br i1 %1092, label %1093, label %1066, !llvm.loop !164

1093:                                             ; preds = %1087, %1066
  %1094 = phi ptr [ %1090, %1087 ], [ %1070, %1066 ]
  %1095 = icmp eq ptr %1094, null
  br i1 %1095, label %1096, label %1061

1096:                                             ; preds = %1061, %1093, %1059
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %10)
  %1097 = icmp eq ptr %1058, null
  br i1 %1097, label %1124, label %1098

1098:                                             ; preds = %1096
  %1099 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1100 = load ptr, ptr %1099, align 8, !tbaa !6
  %1101 = icmp eq ptr %1100, null
  br i1 %1101, label %1102, label %1105

1102:                                             ; preds = %1098
  %1103 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1103, ptr %1099, align 8, !tbaa !157
  %1104 = icmp eq ptr %1103, null
  br i1 %1104, label %1111, label %1105

1105:                                             ; preds = %1102, %1098
  %1106 = phi ptr [ %1103, %1102 ], [ %1100, %1098 ]
  %1107 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1106, i64 0, i32 1
  %1108 = load i32, ptr %1107, align 4, !tbaa !201
  %1109 = load i32, ptr %1106, align 8, !tbaa !159
  %1110 = icmp eq i32 %1108, %1109
  br i1 %1110, label %1111, label %1115

1111:                                             ; preds = %1105, %1102
  %1112 = phi ptr [ %1106, %1105 ], [ null, %1102 ]
  %1113 = call ptr @vec_gc_o_reserve(ptr noundef %1112, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1113, ptr %1099, align 8, !tbaa !6
  %1114 = load i32, ptr %1113, align 8, !tbaa !159
  br label %1115

1115:                                             ; preds = %1111, %1105
  %1116 = phi i32 [ %1109, %1105 ], [ %1114, %1111 ]
  %1117 = phi ptr [ %1106, %1105 ], [ %1113, %1111 ]
  %1118 = add i32 %1116, 1
  store i32 %1118, ptr %1117, align 8, !tbaa !159
  %1119 = zext i32 %1116 to i64
  %1120 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1117, i64 0, i32 2, i64 %1119
  store i32 60, ptr %1120, align 8, !tbaa.struct !179
  %1121 = getelementptr inbounds i8, ptr %1120, i64 8
  store i32 9, ptr %1121, align 8, !tbaa.struct !202
  %1122 = getelementptr inbounds i8, ptr %1120, i64 16
  store i8 1, ptr %1122, align 8, !tbaa.struct !203
  %1123 = getelementptr inbounds i8, ptr %1120, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %1123, ptr noundef nonnull align 1 dereferenceable(15) %10, i64 15, i1 false), !tbaa.struct !362
  br label %1124

1124:                                             ; preds = %1096, %1115
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %10)
  %1125 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 3), align 8, !tbaa !378
  %1126 = call zeroext i8 %1125(ptr noundef %0) #31
  %1127 = icmp eq i8 %1126, 0
  br i1 %1127, label %1162, label %1128

1128:                                             ; preds = %1124
  %1129 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %1130 = icmp slt i32 %1129, 3
  %1131 = load i32, ptr @dwarf_strict, align 4
  %1132 = icmp ne i32 %1131, 0
  %1133 = select i1 %1130, i1 %1132, i1 false
  br i1 %1133, label %1162, label %1134

1134:                                             ; preds = %1128
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %9)
  br i1 %1097, label %1161, label %1135

1135:                                             ; preds = %1134
  %1136 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1137 = load ptr, ptr %1136, align 8, !tbaa !6
  %1138 = icmp eq ptr %1137, null
  br i1 %1138, label %1139, label %1142

1139:                                             ; preds = %1135
  %1140 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1140, ptr %1136, align 8, !tbaa !157
  %1141 = icmp eq ptr %1140, null
  br i1 %1141, label %1148, label %1142

1142:                                             ; preds = %1139, %1135
  %1143 = phi ptr [ %1140, %1139 ], [ %1137, %1135 ]
  %1144 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1143, i64 0, i32 1
  %1145 = load i32, ptr %1144, align 4, !tbaa !201
  %1146 = load i32, ptr %1143, align 8, !tbaa !159
  %1147 = icmp eq i32 %1145, %1146
  br i1 %1147, label %1148, label %1152

1148:                                             ; preds = %1142, %1139
  %1149 = phi ptr [ %1143, %1142 ], [ null, %1139 ]
  %1150 = call ptr @vec_gc_o_reserve(ptr noundef %1149, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1150, ptr %1136, align 8, !tbaa !6
  %1151 = load i32, ptr %1150, align 8, !tbaa !159
  br label %1152

1152:                                             ; preds = %1148, %1142
  %1153 = phi i32 [ %1146, %1142 ], [ %1151, %1148 ]
  %1154 = phi ptr [ %1143, %1142 ], [ %1150, %1148 ]
  %1155 = add i32 %1153, 1
  store i32 %1155, ptr %1154, align 8, !tbaa !159
  %1156 = zext i32 %1153 to i64
  %1157 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1154, i64 0, i32 2, i64 %1156
  store i32 99, ptr %1157, align 8, !tbaa.struct !179
  %1158 = getelementptr inbounds i8, ptr %1157, i64 8
  store i32 9, ptr %1158, align 8, !tbaa.struct !202
  %1159 = getelementptr inbounds i8, ptr %1157, i64 16
  store i8 1, ptr %1159, align 8, !tbaa.struct !203
  %1160 = getelementptr inbounds i8, ptr %1157, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %1160, ptr noundef nonnull align 1 dereferenceable(15) %9, i64 15, i1 false), !tbaa.struct !362
  br label %1161

1161:                                             ; preds = %1134, %1152
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %9)
  br label %1162

1162:                                             ; preds = %1128, %1161, %1124
  %1163 = load i32, ptr %42, align 4, !tbaa !17
  %1164 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %1165 = call ptr @htab_find_slot_with_hash(ptr noundef %1164, ptr noundef %0, i32 noundef %1163, i32 noundef 1) #31
  store ptr %1058, ptr %1165, align 8, !tbaa !6
  %1166 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 11
  store i32 %1163, ptr %1166, align 8, !tbaa !268
  br label %1769

1167:                                             ; preds = %1056
  %1168 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %1169 = load i64, ptr %1168, align 8
  %1170 = and i64 %1169, 2048
  %1171 = icmp eq i64 %1170, 0
  br i1 %1171, label %1305, label %1172

1172:                                             ; preds = %1167
  %1173 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1174 = load i32, ptr %1173, align 8
  %1175 = and i32 %1174, 2097152
  %1176 = icmp eq i32 %1175, 0
  %1177 = call zeroext i8 @cgraph_function_possibly_inlined_p(ptr noundef nonnull %0) #31
  %1178 = icmp eq i8 %1177, 0
  %1179 = icmp eq ptr %1058, null
  br i1 %1176, label %1215, label %1180

1180:                                             ; preds = %1172
  br i1 %1178, label %1198, label %1181

1181:                                             ; preds = %1180
  br i1 %1179, label %1263, label %1182

1182:                                             ; preds = %1181
  %1183 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1184 = load ptr, ptr %1183, align 8, !tbaa !6
  %1185 = icmp eq ptr %1184, null
  br i1 %1185, label %1186, label %1189

1186:                                             ; preds = %1182
  %1187 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1187, ptr %1183, align 8, !tbaa !157
  %1188 = icmp eq ptr %1187, null
  br i1 %1188, label %1195, label %1189

1189:                                             ; preds = %1186, %1182
  %1190 = phi ptr [ %1187, %1186 ], [ %1184, %1182 ]
  %1191 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1190, i64 0, i32 1
  %1192 = load i32, ptr %1191, align 4, !tbaa !201
  %1193 = load i32, ptr %1190, align 8, !tbaa !159
  %1194 = icmp eq i32 %1192, %1193
  br i1 %1194, label %1195, label %1254

1195:                                             ; preds = %1189, %1186
  %1196 = phi ptr [ %1190, %1189 ], [ null, %1186 ]
  %1197 = call ptr @vec_gc_o_reserve(ptr noundef %1196, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1197, ptr %1183, align 8, !tbaa !6
  br label %1250

1198:                                             ; preds = %1180
  br i1 %1179, label %1263, label %1199

1199:                                             ; preds = %1198
  %1200 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1201 = load ptr, ptr %1200, align 8, !tbaa !6
  %1202 = icmp eq ptr %1201, null
  br i1 %1202, label %1203, label %1206

1203:                                             ; preds = %1199
  %1204 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1204, ptr %1200, align 8, !tbaa !157
  %1205 = icmp eq ptr %1204, null
  br i1 %1205, label %1212, label %1206

1206:                                             ; preds = %1203, %1199
  %1207 = phi ptr [ %1204, %1203 ], [ %1201, %1199 ]
  %1208 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1207, i64 0, i32 1
  %1209 = load i32, ptr %1208, align 4, !tbaa !201
  %1210 = load i32, ptr %1207, align 8, !tbaa !159
  %1211 = icmp eq i32 %1209, %1210
  br i1 %1211, label %1212, label %1254

1212:                                             ; preds = %1206, %1203
  %1213 = phi ptr [ %1207, %1206 ], [ null, %1203 ]
  %1214 = call ptr @vec_gc_o_reserve(ptr noundef %1213, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1214, ptr %1200, align 8, !tbaa !6
  br label %1250

1215:                                             ; preds = %1172
  br i1 %1178, label %1233, label %1216

1216:                                             ; preds = %1215
  br i1 %1179, label %1263, label %1217

1217:                                             ; preds = %1216
  %1218 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1219 = load ptr, ptr %1218, align 8, !tbaa !6
  %1220 = icmp eq ptr %1219, null
  br i1 %1220, label %1221, label %1224

1221:                                             ; preds = %1217
  %1222 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1222, ptr %1218, align 8, !tbaa !157
  %1223 = icmp eq ptr %1222, null
  br i1 %1223, label %1230, label %1224

1224:                                             ; preds = %1221, %1217
  %1225 = phi ptr [ %1222, %1221 ], [ %1219, %1217 ]
  %1226 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1225, i64 0, i32 1
  %1227 = load i32, ptr %1226, align 4, !tbaa !201
  %1228 = load i32, ptr %1225, align 8, !tbaa !159
  %1229 = icmp eq i32 %1227, %1228
  br i1 %1229, label %1230, label %1254

1230:                                             ; preds = %1224, %1221
  %1231 = phi ptr [ %1225, %1224 ], [ null, %1221 ]
  %1232 = call ptr @vec_gc_o_reserve(ptr noundef %1231, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1232, ptr %1218, align 8, !tbaa !6
  br label %1250

1233:                                             ; preds = %1215
  br i1 %1179, label %1263, label %1234

1234:                                             ; preds = %1233
  %1235 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1236 = load ptr, ptr %1235, align 8, !tbaa !6
  %1237 = icmp eq ptr %1236, null
  br i1 %1237, label %1238, label %1241

1238:                                             ; preds = %1234
  %1239 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1239, ptr %1235, align 8, !tbaa !157
  %1240 = icmp eq ptr %1239, null
  br i1 %1240, label %1247, label %1241

1241:                                             ; preds = %1238, %1234
  %1242 = phi ptr [ %1239, %1238 ], [ %1236, %1234 ]
  %1243 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1242, i64 0, i32 1
  %1244 = load i32, ptr %1243, align 4, !tbaa !201
  %1245 = load i32, ptr %1242, align 8, !tbaa !159
  %1246 = icmp eq i32 %1244, %1245
  br i1 %1246, label %1247, label %1254

1247:                                             ; preds = %1241, %1238
  %1248 = phi ptr [ %1242, %1241 ], [ null, %1238 ]
  %1249 = call ptr @vec_gc_o_reserve(ptr noundef %1248, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1249, ptr %1235, align 8, !tbaa !6
  br label %1250

1250:                                             ; preds = %1195, %1212, %1230, %1247
  %1251 = phi ptr [ %1249, %1247 ], [ %1232, %1230 ], [ %1214, %1212 ], [ %1197, %1195 ]
  %1252 = phi i64 [ 0, %1247 ], [ 1, %1230 ], [ 2, %1212 ], [ 3, %1195 ]
  %1253 = load i32, ptr %1251, align 8, !tbaa !159
  br label %1254

1254:                                             ; preds = %1250, %1241, %1224, %1206, %1189
  %1255 = phi i32 [ %1193, %1189 ], [ %1210, %1206 ], [ %1228, %1224 ], [ %1245, %1241 ], [ %1253, %1250 ]
  %1256 = phi ptr [ %1190, %1189 ], [ %1207, %1206 ], [ %1225, %1224 ], [ %1242, %1241 ], [ %1251, %1250 ]
  %1257 = phi i64 [ 3, %1189 ], [ 2, %1206 ], [ 1, %1224 ], [ 0, %1241 ], [ %1252, %1250 ]
  %1258 = add i32 %1255, 1
  store i32 %1258, ptr %1256, align 8, !tbaa !159
  %1259 = zext i32 %1255 to i64
  %1260 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1256, i64 0, i32 2, i64 %1259
  store i32 32, ptr %1260, align 8
  %1261 = getelementptr inbounds i8, ptr %1260, i64 8
  store i32 6, ptr %1261, align 8
  %1262 = getelementptr inbounds i8, ptr %1260, i64 16
  store i64 %1257, ptr %1262, align 8
  br label %1263

1263:                                             ; preds = %1254, %1233, %1216, %1198, %1181
  %1264 = load i32, ptr %1173, align 8
  %1265 = and i32 %1264, 2097152
  %1266 = icmp eq i32 %1265, 0
  br i1 %1266, label %1300, label %1267

1267:                                             ; preds = %1263
  %1268 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  %1269 = load ptr, ptr %1268, align 8, !tbaa !17
  %1270 = call ptr @lookup_attribute(ptr noundef nonnull @.str.315, ptr noundef %1269) #31
  %1271 = icmp eq ptr %1270, null
  br i1 %1271, label %1300, label %1272

1272:                                             ; preds = %1267
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %8)
  br i1 %1179, label %1299, label %1273

1273:                                             ; preds = %1272
  %1274 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1275 = load ptr, ptr %1274, align 8, !tbaa !6
  %1276 = icmp eq ptr %1275, null
  br i1 %1276, label %1277, label %1280

1277:                                             ; preds = %1273
  %1278 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1278, ptr %1274, align 8, !tbaa !157
  %1279 = icmp eq ptr %1278, null
  br i1 %1279, label %1286, label %1280

1280:                                             ; preds = %1277, %1273
  %1281 = phi ptr [ %1278, %1277 ], [ %1275, %1273 ]
  %1282 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1281, i64 0, i32 1
  %1283 = load i32, ptr %1282, align 4, !tbaa !201
  %1284 = load i32, ptr %1281, align 8, !tbaa !159
  %1285 = icmp eq i32 %1283, %1284
  br i1 %1285, label %1286, label %1290

1286:                                             ; preds = %1280, %1277
  %1287 = phi ptr [ %1281, %1280 ], [ null, %1277 ]
  %1288 = call ptr @vec_gc_o_reserve(ptr noundef %1287, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1288, ptr %1274, align 8, !tbaa !6
  %1289 = load i32, ptr %1288, align 8, !tbaa !159
  br label %1290

1290:                                             ; preds = %1286, %1280
  %1291 = phi i32 [ %1284, %1280 ], [ %1289, %1286 ]
  %1292 = phi ptr [ %1281, %1280 ], [ %1288, %1286 ]
  %1293 = add i32 %1291, 1
  store i32 %1293, ptr %1292, align 8, !tbaa !159
  %1294 = zext i32 %1291 to i64
  %1295 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1292, i64 0, i32 2, i64 %1294
  store i32 52, ptr %1295, align 8, !tbaa.struct !179
  %1296 = getelementptr inbounds i8, ptr %1295, i64 8
  store i32 9, ptr %1296, align 8, !tbaa.struct !202
  %1297 = getelementptr inbounds i8, ptr %1295, i64 16
  store i8 1, ptr %1297, align 8, !tbaa.struct !203
  %1298 = getelementptr inbounds i8, ptr %1295, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %1298, ptr noundef nonnull align 1 dereferenceable(15) %8, i64 15, i1 false), !tbaa.struct !362
  br label %1299

1299:                                             ; preds = %1272, %1290
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %8)
  br label %1300

1300:                                             ; preds = %1299, %1267, %1263
  %1301 = load i32, ptr %42, align 4, !tbaa !17
  %1302 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %1303 = call ptr @htab_find_slot_with_hash(ptr noundef %1302, ptr noundef nonnull %0, i32 noundef %1301, i32 noundef 1) #31
  store ptr %1058, ptr %1303, align 8, !tbaa !6
  %1304 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 11
  store i32 %1301, ptr %1304, align 8, !tbaa !268
  br label %1769

1305:                                             ; preds = %1167
  %1306 = and i64 %1169, 33554432
  %1307 = icmp eq i64 %1306, 0
  br i1 %1307, label %1308, label %1769

1308:                                             ; preds = %1305
  %1309 = icmp eq ptr %1057, null
  br i1 %1309, label %1345, label %1310

1310:                                             ; preds = %1308, %1342
  %1311 = phi ptr [ %1343, %1342 ], [ %1057, %1308 ]
  %1312 = getelementptr inbounds %struct.die_struct, ptr %1311, i64 0, i32 2
  %1313 = load ptr, ptr %1312, align 8, !tbaa !157
  %1314 = icmp eq ptr %1313, null
  br i1 %1314, label %1345, label %1315

1315:                                             ; preds = %1310, %1336
  %1316 = phi ptr [ %1337, %1336 ], [ %1313, %1310 ]
  %1317 = phi ptr [ %1338, %1336 ], [ %1313, %1310 ]
  %1318 = phi i64 [ %1340, %1336 ], [ 0, %1310 ]
  %1319 = phi ptr [ %1339, %1336 ], [ null, %1310 ]
  %1320 = load i32, ptr %1317, align 8, !tbaa !159
  %1321 = zext i32 %1320 to i64
  %1322 = icmp ult i64 %1318, %1321
  br i1 %1322, label %1323, label %1342

1323:                                             ; preds = %1315
  %1324 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1317, i64 0, i32 2, i64 %1318
  %1325 = load i32, ptr %1324, align 8, !tbaa !161
  switch i32 %1325, label %1336 [
    i32 32, label %1350
    i32 71, label %1326
    i32 49, label %1326
  ]

1326:                                             ; preds = %1323, %1323
  %1327 = getelementptr i8, ptr %1324, i64 8
  %1328 = load i32, ptr %1327, align 8, !tbaa !163
  %1329 = icmp eq i32 %1328, 10
  br i1 %1329, label %1332, label %1330

1330:                                             ; preds = %1326
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1331 = load ptr, ptr %1312, align 8, !tbaa !157
  br label %1332

1332:                                             ; preds = %1330, %1326
  %1333 = phi ptr [ %1316, %1326 ], [ %1331, %1330 ]
  %1334 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1317, i64 0, i32 2, i64 %1318, i32 1, i32 1
  %1335 = load ptr, ptr %1334, align 8, !tbaa !17
  br label %1336

1336:                                             ; preds = %1323, %1332
  %1337 = phi ptr [ %1333, %1332 ], [ %1316, %1323 ]
  %1338 = phi ptr [ %1333, %1332 ], [ %1317, %1323 ]
  %1339 = phi ptr [ %1335, %1332 ], [ %1319, %1323 ]
  %1340 = add nuw nsw i64 %1318, 1
  %1341 = icmp eq ptr %1338, null
  br i1 %1341, label %1342, label %1315, !llvm.loop !164

1342:                                             ; preds = %1336, %1315
  %1343 = phi ptr [ %1339, %1336 ], [ %1319, %1315 ]
  %1344 = icmp eq ptr %1343, null
  br i1 %1344, label %1345, label %1310

1345:                                             ; preds = %1310, %1342, %1308
  %1346 = load i32, ptr %42, align 4, !tbaa !17
  %1347 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %1348 = call ptr @htab_find_slot_with_hash(ptr noundef %1347, ptr noundef %0, i32 noundef %1346, i32 noundef 1) #31
  store ptr %1058, ptr %1348, align 8, !tbaa !6
  %1349 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 11
  store i32 %1346, ptr %1349, align 8, !tbaa !268
  br label %1350

1350:                                             ; preds = %1323, %1345
  %1351 = load i32, ptr @flag_reorder_blocks_and_partition, align 4, !tbaa !21
  %1352 = icmp eq i32 %1351, 0
  br i1 %1352, label %1353, label %1468

1353:                                             ; preds = %1350
  %1354 = load ptr, ptr @cfun, align 8, !tbaa !6
  %1355 = getelementptr inbounds %struct.function, ptr %1354, i64 0, i32 14
  %1356 = load i32, ptr %1355, align 4, !tbaa !114
  %1357 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %13, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.182, i32 noundef %1356)
  %1358 = call ptr @xstrdup(ptr noundef nonnull %13) #31
  %1359 = icmp eq ptr %1058, null
  br i1 %1359, label %1385, label %1360

1360:                                             ; preds = %1353
  %1361 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1362 = load ptr, ptr %1361, align 8, !tbaa !6
  %1363 = icmp eq ptr %1362, null
  br i1 %1363, label %1364, label %1367

1364:                                             ; preds = %1360
  %1365 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1365, ptr %1361, align 8, !tbaa !157
  %1366 = icmp eq ptr %1365, null
  br i1 %1366, label %1373, label %1367

1367:                                             ; preds = %1364, %1360
  %1368 = phi ptr [ %1365, %1364 ], [ %1362, %1360 ]
  %1369 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1368, i64 0, i32 1
  %1370 = load i32, ptr %1369, align 4, !tbaa !201
  %1371 = load i32, ptr %1368, align 8, !tbaa !159
  %1372 = icmp eq i32 %1370, %1371
  br i1 %1372, label %1373, label %1377

1373:                                             ; preds = %1367, %1364
  %1374 = phi ptr [ %1368, %1367 ], [ null, %1364 ]
  %1375 = call ptr @vec_gc_o_reserve(ptr noundef %1374, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1375, ptr %1361, align 8, !tbaa !6
  %1376 = load i32, ptr %1375, align 8, !tbaa !159
  br label %1377

1377:                                             ; preds = %1373, %1367
  %1378 = phi i32 [ %1371, %1367 ], [ %1376, %1373 ]
  %1379 = phi ptr [ %1368, %1367 ], [ %1375, %1373 ]
  %1380 = add i32 %1378, 1
  store i32 %1380, ptr %1379, align 8, !tbaa !159
  %1381 = zext i32 %1378 to i64
  %1382 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1379, i64 0, i32 2, i64 %1381
  store i32 17, ptr %1382, align 8, !tbaa.struct !179
  %1383 = getelementptr inbounds i8, ptr %1382, i64 8
  store i32 12, ptr %1383, align 8, !tbaa.struct !202
  %1384 = getelementptr inbounds i8, ptr %1382, i64 16
  store ptr %1358, ptr %1384, align 8, !tbaa.struct !203
  br label %1385

1385:                                             ; preds = %1353, %1377
  %1386 = load ptr, ptr @cfun, align 8, !tbaa !6
  %1387 = getelementptr inbounds %struct.function, ptr %1386, i64 0, i32 14
  %1388 = load i32, ptr %1387, align 4, !tbaa !114
  %1389 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %13, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.194, i32 noundef %1388)
  %1390 = call ptr @xstrdup(ptr noundef nonnull %13) #31
  br i1 %1359, label %1416, label %1391

1391:                                             ; preds = %1385
  %1392 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1393 = load ptr, ptr %1392, align 8, !tbaa !6
  %1394 = icmp eq ptr %1393, null
  br i1 %1394, label %1395, label %1398

1395:                                             ; preds = %1391
  %1396 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1396, ptr %1392, align 8, !tbaa !157
  %1397 = icmp eq ptr %1396, null
  br i1 %1397, label %1404, label %1398

1398:                                             ; preds = %1395, %1391
  %1399 = phi ptr [ %1396, %1395 ], [ %1393, %1391 ]
  %1400 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1399, i64 0, i32 1
  %1401 = load i32, ptr %1400, align 4, !tbaa !201
  %1402 = load i32, ptr %1399, align 8, !tbaa !159
  %1403 = icmp eq i32 %1401, %1402
  br i1 %1403, label %1404, label %1408

1404:                                             ; preds = %1398, %1395
  %1405 = phi ptr [ %1399, %1398 ], [ null, %1395 ]
  %1406 = call ptr @vec_gc_o_reserve(ptr noundef %1405, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1406, ptr %1392, align 8, !tbaa !6
  %1407 = load i32, ptr %1406, align 8, !tbaa !159
  br label %1408

1408:                                             ; preds = %1404, %1398
  %1409 = phi i32 [ %1402, %1398 ], [ %1407, %1404 ]
  %1410 = phi ptr [ %1399, %1398 ], [ %1406, %1404 ]
  %1411 = add i32 %1409, 1
  store i32 %1411, ptr %1410, align 8, !tbaa !159
  %1412 = zext i32 %1409 to i64
  %1413 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1410, i64 0, i32 2, i64 %1412
  store i32 18, ptr %1413, align 8, !tbaa.struct !179
  %1414 = getelementptr inbounds i8, ptr %1413, i64 8
  store i32 12, ptr %1414, align 8, !tbaa.struct !202
  %1415 = getelementptr inbounds i8, ptr %1413, i64 16
  store ptr %1390, ptr %1415, align 8, !tbaa.struct !203
  br label %1416

1416:                                             ; preds = %1385, %1408
  %1417 = load i64, ptr %0, align 8
  %1418 = and i64 %1417, 134217728
  %1419 = icmp eq i64 %1418, 0
  br i1 %1419, label %1443, label %1420

1420:                                             ; preds = %1416
  %1421 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %1422 = call ptr %1421(ptr noundef nonnull %0, i32 noundef 1) #31
  %1423 = icmp eq ptr %1422, null
  br i1 %1423, label %1443, label %1424

1424:                                             ; preds = %1420
  %1425 = call ptr @xstrdup(ptr noundef nonnull %1422) #31
  %1426 = load ptr, ptr @pubname_table, align 8, !tbaa !6
  %1427 = icmp eq ptr %1426, null
  br i1 %1427, label %1433, label %1428

1428:                                             ; preds = %1424
  %1429 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %1426, i64 0, i32 1
  %1430 = load i32, ptr %1429, align 4, !tbaa !379
  %1431 = load i32, ptr %1426, align 8, !tbaa !218
  %1432 = icmp eq i32 %1430, %1431
  br i1 %1432, label %1433, label %1436

1433:                                             ; preds = %1428, %1424
  %1434 = call ptr @vec_gc_o_reserve(ptr noundef %1426, i32 noundef 1, i64 noundef 8, i64 noundef 16) #31
  store ptr %1434, ptr @pubname_table, align 8, !tbaa !6
  %1435 = load i32, ptr %1434, align 8, !tbaa !218
  br label %1436

1436:                                             ; preds = %1433, %1428
  %1437 = phi i32 [ %1431, %1428 ], [ %1435, %1433 ]
  %1438 = phi ptr [ %1426, %1428 ], [ %1434, %1433 ]
  %1439 = add i32 %1437, 1
  store i32 %1439, ptr %1438, align 8, !tbaa !218
  %1440 = zext i32 %1437 to i64
  %1441 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %1438, i64 0, i32 2, i64 %1440
  store ptr %1058, ptr %1441, align 8, !tbaa.struct !253
  %1442 = getelementptr inbounds i8, ptr %1441, i64 8
  store ptr %1425, ptr %1442, align 8, !tbaa.struct !254
  br label %1443

1443:                                             ; preds = %1416, %1420, %1436
  %1444 = getelementptr i8, ptr %0, i64 128
  %1445 = load ptr, ptr %1444, align 8, !tbaa !17
  %1446 = icmp eq ptr %1445, null
  br i1 %1446, label %1468, label %1447

1447:                                             ; preds = %1443
  %1448 = load i32, ptr @arange_table_in_use, align 4, !tbaa !21
  %1449 = load i32, ptr @arange_table_allocated, align 4, !tbaa !21
  %1450 = icmp eq i32 %1448, %1449
  %1451 = load ptr, ptr @arange_table, align 8, !tbaa !6
  br i1 %1450, label %1454, label %1452

1452:                                             ; preds = %1447
  %1453 = zext i32 %1448 to i64
  br label %1462

1454:                                             ; preds = %1447
  %1455 = add i32 %1448, 64
  store i32 %1455, ptr @arange_table_allocated, align 4, !tbaa !21
  %1456 = zext i32 %1455 to i64
  %1457 = shl nuw nsw i64 %1456, 3
  %1458 = call ptr @ggc_realloc_stat(ptr noundef %1451, i64 noundef %1457) #31
  store ptr %1458, ptr @arange_table, align 8, !tbaa !6
  %1459 = load i32, ptr @arange_table_in_use, align 4, !tbaa !21
  %1460 = zext i32 %1459 to i64
  %1461 = getelementptr inbounds ptr, ptr %1458, i64 %1460
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(512) %1461, i8 0, i64 512, i1 false)
  br label %1462

1462:                                             ; preds = %1454, %1452
  %1463 = phi i64 [ %1453, %1452 ], [ %1460, %1454 ]
  %1464 = phi i32 [ %1448, %1452 ], [ %1459, %1454 ]
  %1465 = phi ptr [ %1451, %1452 ], [ %1458, %1454 ]
  %1466 = add i32 %1464, 1
  store i32 %1466, ptr @arange_table_in_use, align 4, !tbaa !21
  %1467 = getelementptr inbounds ptr, ptr %1465, i64 %1463
  store ptr %1058, ptr %1467, align 8, !tbaa !6
  br label %1468

1468:                                             ; preds = %1462, %1443, %1350
  %1469 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %1470 = icmp sgt i32 %1469, 2
  br i1 %1470, label %1471, label %1507

1471:                                             ; preds = %1468
  %1472 = call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %1473 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1472, i64 0, i32 1
  %1474 = load i16, ptr %1473, align 8
  %1475 = and i16 %1474, -256
  %1476 = or i16 %1475, 156
  store i16 %1476, ptr %1473, align 8
  %1477 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1472, i64 0, i32 3
  store i32 6, ptr %1477, align 8, !tbaa !52
  %1478 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1472, i64 0, i32 3, i32 1
  store i64 0, ptr %1478, align 8, !tbaa !17
  %1479 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1472, i64 0, i32 4
  store i32 6, ptr %1479, align 8, !tbaa !49
  %1480 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1472, i64 0, i32 4, i32 1
  store i64 0, ptr %1480, align 8, !tbaa !17
  %1481 = icmp eq ptr %1058, null
  br i1 %1481, label %1731, label %1482

1482:                                             ; preds = %1471
  %1483 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1484 = load ptr, ptr %1483, align 8, !tbaa !6
  %1485 = icmp eq ptr %1484, null
  br i1 %1485, label %1486, label %1489

1486:                                             ; preds = %1482
  %1487 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1487, ptr %1483, align 8, !tbaa !157
  %1488 = icmp eq ptr %1487, null
  br i1 %1488, label %1495, label %1489

1489:                                             ; preds = %1486, %1482
  %1490 = phi ptr [ %1487, %1486 ], [ %1484, %1482 ]
  %1491 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1490, i64 0, i32 1
  %1492 = load i32, ptr %1491, align 4, !tbaa !201
  %1493 = load i32, ptr %1490, align 8, !tbaa !159
  %1494 = icmp eq i32 %1492, %1493
  br i1 %1494, label %1495, label %1499

1495:                                             ; preds = %1489, %1486
  %1496 = phi ptr [ %1490, %1489 ], [ null, %1486 ]
  %1497 = call ptr @vec_gc_o_reserve(ptr noundef %1496, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1497, ptr %1483, align 8, !tbaa !6
  %1498 = load i32, ptr %1497, align 8, !tbaa !159
  br label %1499

1499:                                             ; preds = %1495, %1489
  %1500 = phi i32 [ %1493, %1489 ], [ %1498, %1495 ]
  %1501 = phi ptr [ %1490, %1489 ], [ %1497, %1495 ]
  %1502 = add i32 %1500, 1
  store i32 %1502, ptr %1501, align 8, !tbaa !159
  %1503 = zext i32 %1500 to i64
  %1504 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1501, i64 0, i32 2, i64 %1503
  store i32 64, ptr %1504, align 8, !tbaa.struct !179
  %1505 = getelementptr inbounds i8, ptr %1504, i64 8
  store i32 2, ptr %1505, align 8, !tbaa.struct !202
  %1506 = getelementptr inbounds i8, ptr %1504, i64 16
  store ptr %1472, ptr %1506, align 8, !tbaa.struct !203
  br label %1731

1507:                                             ; preds = %1468
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #31
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #31
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #31
  %1508 = load i32, ptr @fde_table_in_use, align 4
  %1509 = icmp eq i32 %1508, 0
  %1510 = load ptr, ptr @fde_table, align 8
  %1511 = add i32 %1508, -1
  %1512 = zext i32 %1511 to i64
  %1513 = getelementptr inbounds %struct.dw_fde_struct, ptr %1510, i64 %1512
  %1514 = select i1 %1509, ptr null, ptr %1513
  %1515 = icmp eq ptr %1514, null
  br i1 %1515, label %1516, label %1517

1516:                                             ; preds = %1507
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16184, ptr noundef nonnull @.str.5) #31
  br label %1517

1517:                                             ; preds = %1516, %1507
  %1518 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %1519 = load i64, ptr %1518, align 8
  %1520 = trunc i64 %1519 to i16
  switch i16 %1520, label %1527 [
    i16 32, label %1521
    i16 29, label %1521
  ]

1521:                                             ; preds = %1517, %1517
  %1522 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1518, i64 0, i32 2
  %1523 = load ptr, ptr %1522, align 8, !tbaa !17
  %1524 = icmp eq ptr %1523, null
  br i1 %1524, label %1533, label %1525

1525:                                             ; preds = %1521
  %1526 = getelementptr inbounds %struct.tree_string, ptr %1523, i64 0, i32 2
  br label %1541

1527:                                             ; preds = %1517
  %1528 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1518, i64 0, i32 2
  %1529 = load ptr, ptr %1528, align 8, !tbaa !17
  %1530 = icmp eq ptr %1529, null
  br i1 %1530, label %1533, label %1531

1531:                                             ; preds = %1527
  %1532 = getelementptr inbounds %struct.tree_string, ptr %1529, i64 0, i32 2
  br label %1541

1533:                                             ; preds = %1527, %1521
  %1534 = load ptr, ptr @cfun, align 8, !tbaa !6
  %1535 = icmp ne ptr %1534, null
  %1536 = load i8, ptr @in_cold_section_p, align 1
  %1537 = icmp ne i8 %1536, 0
  %1538 = select i1 %1535, i1 %1537, i1 false
  %1539 = load ptr, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 4, i32 1), align 8
  %1540 = select i1 %1538, ptr %1539, ptr @text_section_label
  br label %1541

1541:                                             ; preds = %1533, %1531, %1525
  %1542 = phi ptr [ %1526, %1525 ], [ %1532, %1531 ], [ %1540, %1533 ]
  store ptr null, ptr %4, align 8, !tbaa !6
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  %1543 = getelementptr inbounds %struct.cfa_loc, ptr %6, i64 0, i32 2
  store i32 -1, ptr %1543, align 8, !tbaa !41
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false), !tbaa.struct !43
  %1544 = getelementptr inbounds %struct.dw_fde_struct, ptr %1514, i64 0, i32 1
  %1545 = load ptr, ptr %1544, align 8, !tbaa !118
  %1546 = load ptr, ptr @cie_cfi_head, align 8, !tbaa !6
  %1547 = icmp eq ptr %1546, null
  br i1 %1547, label %1552, label %1548

1548:                                             ; preds = %1541, %1548
  %1549 = phi ptr [ %1550, %1548 ], [ %1546, %1541 ]
  call fastcc void @lookup_cfa_1(ptr noundef nonnull %1549, ptr noundef nonnull %6, ptr noundef nonnull %7)
  %1550 = load ptr, ptr %1549, align 8, !tbaa !6
  %1551 = icmp eq ptr %1550, null
  br i1 %1551, label %1552, label %1548, !llvm.loop !380

1552:                                             ; preds = %1548, %1541
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false), !tbaa.struct !43
  %1553 = getelementptr inbounds %struct.dw_fde_struct, ptr %1514, i64 0, i32 8
  %1554 = load ptr, ptr %1553, align 8, !tbaa !6
  %1555 = icmp eq ptr %1554, null
  br i1 %1555, label %1609, label %1556

1556:                                             ; preds = %1552
  %1557 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 2
  %1558 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 3
  %1559 = getelementptr inbounds %struct.cfa_loc, ptr %6, i64 0, i32 3
  %1560 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 1
  %1561 = getelementptr inbounds %struct.cfa_loc, ptr %6, i64 0, i32 1
  br label %1562

1562:                                             ; preds = %1603, %1556
  %1563 = phi ptr [ %1554, %1556 ], [ %1607, %1603 ]
  %1564 = phi ptr [ %4, %1556 ], [ %1606, %1603 ]
  %1565 = phi ptr [ %1545, %1556 ], [ %1605, %1603 ]
  %1566 = phi ptr [ %1545, %1556 ], [ %1604, %1603 ]
  %1567 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1563, i64 0, i32 1
  %1568 = load i32, ptr %1567, align 8, !tbaa !48
  switch i32 %1568, label %1602 [
    i32 1, label %1569
    i32 2, label %1569
    i32 3, label %1569
    i32 4, label %1569
    i32 64, label %1601
  ]

1569:                                             ; preds = %1562, %1562, %1562, %1562
  %1570 = load i32, ptr %1557, align 8, !tbaa !41
  %1571 = load i32, ptr %1543, align 8, !tbaa !41
  %1572 = icmp eq i32 %1570, %1571
  br i1 %1572, label %1573, label %1589

1573:                                             ; preds = %1569
  %1574 = load i64, ptr %5, align 8, !tbaa !42
  %1575 = load i64, ptr %6, align 8, !tbaa !42
  %1576 = icmp eq i64 %1574, %1575
  br i1 %1576, label %1577, label %1589

1577:                                             ; preds = %1573
  %1578 = load i8, ptr %1558, align 4
  %1579 = and i8 %1578, 1
  %1580 = load i8, ptr %1559, align 4
  %1581 = and i8 %1580, 1
  %1582 = icmp eq i8 %1579, %1581
  br i1 %1582, label %1583, label %1589

1583:                                             ; preds = %1577
  %1584 = icmp eq i8 %1579, 0
  br i1 %1584, label %1596, label %1585

1585:                                             ; preds = %1583
  %1586 = load i64, ptr %1560, align 8, !tbaa !39
  %1587 = load i64, ptr %1561, align 8, !tbaa !39
  %1588 = icmp eq i64 %1586, %1587
  br i1 %1588, label %1596, label %1589

1589:                                             ; preds = %1585, %1577, %1573, %1569
  %1590 = call fastcc ptr @build_cfa_loc(ptr noundef nonnull %5)
  %1591 = call ptr @ggc_alloc_cleared_stat(i64 noundef 48) #31
  %1592 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1591, i64 0, i32 1
  store ptr %1566, ptr %1592, align 8, !tbaa !301
  %1593 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1591, i64 0, i32 2
  store ptr %1565, ptr %1593, align 8, !tbaa !302
  %1594 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1591, i64 0, i32 5
  store ptr %1590, ptr %1594, align 8, !tbaa !270
  %1595 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1591, i64 0, i32 4
  store ptr %1542, ptr %1595, align 8, !tbaa !303
  store ptr %1591, ptr %1564, align 8, !tbaa !6
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false), !tbaa.struct !43
  br label %1596

1596:                                             ; preds = %1589, %1585, %1583
  %1597 = phi ptr [ %1566, %1585 ], [ %1565, %1589 ], [ %1566, %1583 ]
  %1598 = phi ptr [ %1564, %1585 ], [ %1591, %1589 ], [ %1564, %1583 ]
  %1599 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1563, i64 0, i32 2
  %1600 = load ptr, ptr %1599, align 8, !tbaa !17
  br label %1603

1601:                                             ; preds = %1562
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16225, ptr noundef nonnull @.str.5) #31
  br label %1602

1602:                                             ; preds = %1601, %1562
  call fastcc void @lookup_cfa_1(ptr noundef nonnull %1563, ptr noundef nonnull %6, ptr noundef nonnull %7)
  br label %1603

1603:                                             ; preds = %1602, %1596
  %1604 = phi ptr [ %1566, %1602 ], [ %1597, %1596 ]
  %1605 = phi ptr [ %1565, %1602 ], [ %1600, %1596 ]
  %1606 = phi ptr [ %1564, %1602 ], [ %1598, %1596 ]
  %1607 = load ptr, ptr %1563, align 8, !tbaa !6
  %1608 = icmp eq ptr %1607, null
  br i1 %1608, label %1609, label %1562, !llvm.loop !381

1609:                                             ; preds = %1603, %1552
  %1610 = phi ptr [ %1545, %1552 ], [ %1604, %1603 ]
  %1611 = phi ptr [ %1545, %1552 ], [ %1605, %1603 ]
  %1612 = phi ptr [ %4, %1552 ], [ %1606, %1603 ]
  %1613 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 2
  %1614 = load i32, ptr %1613, align 8, !tbaa !41
  %1615 = load i32, ptr %1543, align 8, !tbaa !41
  %1616 = icmp eq i32 %1614, %1615
  br i1 %1616, label %1617, label %1637

1617:                                             ; preds = %1609
  %1618 = load i64, ptr %5, align 8, !tbaa !42
  %1619 = load i64, ptr %6, align 8, !tbaa !42
  %1620 = icmp eq i64 %1618, %1619
  br i1 %1620, label %1621, label %1637

1621:                                             ; preds = %1617
  %1622 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 3
  %1623 = load i8, ptr %1622, align 4
  %1624 = and i8 %1623, 1
  %1625 = getelementptr inbounds %struct.cfa_loc, ptr %6, i64 0, i32 3
  %1626 = load i8, ptr %1625, align 4
  %1627 = and i8 %1626, 1
  %1628 = icmp eq i8 %1624, %1627
  br i1 %1628, label %1629, label %1637

1629:                                             ; preds = %1621
  %1630 = icmp eq i8 %1624, 0
  br i1 %1630, label %1644, label %1631

1631:                                             ; preds = %1629
  %1632 = getelementptr inbounds %struct.cfa_loc, ptr %5, i64 0, i32 1
  %1633 = load i64, ptr %1632, align 8, !tbaa !39
  %1634 = getelementptr inbounds %struct.cfa_loc, ptr %6, i64 0, i32 1
  %1635 = load i64, ptr %1634, align 8, !tbaa !39
  %1636 = icmp eq i64 %1633, %1635
  br i1 %1636, label %1644, label %1637

1637:                                             ; preds = %1631, %1621, %1617, %1609
  %1638 = call fastcc ptr @build_cfa_loc(ptr noundef nonnull %5)
  %1639 = call ptr @ggc_alloc_cleared_stat(i64 noundef 48) #31
  %1640 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1639, i64 0, i32 1
  store ptr %1610, ptr %1640, align 8, !tbaa !301
  %1641 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1639, i64 0, i32 2
  store ptr %1611, ptr %1641, align 8, !tbaa !302
  %1642 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1639, i64 0, i32 5
  store ptr %1638, ptr %1642, align 8, !tbaa !270
  %1643 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1639, i64 0, i32 4
  store ptr %1542, ptr %1643, align 8, !tbaa !303
  store ptr %1639, ptr %1612, align 8, !tbaa !6
  br label %1644

1644:                                             ; preds = %1637, %1631, %1629
  %1645 = phi ptr [ %1610, %1631 ], [ %1611, %1637 ], [ %1610, %1629 ]
  %1646 = phi ptr [ %1612, %1631 ], [ %1639, %1637 ], [ %1612, %1629 ]
  %1647 = call fastcc ptr @build_cfa_loc(ptr noundef nonnull %6)
  %1648 = getelementptr inbounds %struct.dw_fde_struct, ptr %1514, i64 0, i32 3
  %1649 = load ptr, ptr %1648, align 8, !tbaa !119
  %1650 = call ptr @ggc_alloc_cleared_stat(i64 noundef 48) #31
  %1651 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1650, i64 0, i32 1
  store ptr %1645, ptr %1651, align 8, !tbaa !301
  %1652 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1650, i64 0, i32 2
  store ptr %1649, ptr %1652, align 8, !tbaa !302
  %1653 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1650, i64 0, i32 5
  store ptr %1647, ptr %1653, align 8, !tbaa !270
  %1654 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1650, i64 0, i32 4
  store ptr %1542, ptr %1654, align 8, !tbaa !303
  store ptr %1650, ptr %1646, align 8, !tbaa !6
  %1655 = load ptr, ptr %4, align 8, !tbaa !6
  %1656 = icmp eq ptr %1655, null
  br i1 %1656, label %1671, label %1657

1657:                                             ; preds = %1644
  %1658 = load ptr, ptr %1655, align 8, !tbaa !273
  %1659 = icmp eq ptr %1658, null
  br i1 %1659, label %1660, label %1661

1660:                                             ; preds = %1657
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %1702

1661:                                             ; preds = %1657
  %1662 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1655, i64 0, i32 3
  %1663 = load ptr, ptr %1662, align 8, !tbaa !274
  %1664 = icmp eq ptr %1663, null
  br i1 %1664, label %1666, label %1665

1665:                                             ; preds = %1661
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10351, ptr noundef nonnull @.str.5) #31
  br label %1666

1666:                                             ; preds = %1665, %1661
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %3) #31
  %1667 = load i32, ptr @label_num, align 4, !tbaa !21
  %1668 = add nsw i32 %1667, 1
  store i32 %1668, ptr @label_num, align 4, !tbaa !21
  %1669 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.310, i32 noundef %1667)
  %1670 = call ptr @xstrdup(ptr noundef nonnull %3) #31
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %3) #31
  store ptr %1670, ptr %1662, align 8, !tbaa !274
  br label %1671

1671:                                             ; preds = %1644, %1666
  %1672 = load ptr, ptr %1655, align 8, !tbaa !273
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %1673 = icmp eq ptr %1672, null
  br i1 %1673, label %1702, label %1674

1674:                                             ; preds = %1671
  %1675 = icmp eq ptr %1058, null
  br i1 %1675, label %1701, label %1676

1676:                                             ; preds = %1674
  %1677 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1678 = load ptr, ptr %1677, align 8, !tbaa !6
  %1679 = icmp eq ptr %1678, null
  br i1 %1679, label %1680, label %1683

1680:                                             ; preds = %1676
  %1681 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1681, ptr %1677, align 8, !tbaa !157
  %1682 = icmp eq ptr %1681, null
  br i1 %1682, label %1689, label %1683

1683:                                             ; preds = %1680, %1676
  %1684 = phi ptr [ %1681, %1680 ], [ %1678, %1676 ]
  %1685 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1684, i64 0, i32 1
  %1686 = load i32, ptr %1685, align 4, !tbaa !201
  %1687 = load i32, ptr %1684, align 8, !tbaa !159
  %1688 = icmp eq i32 %1686, %1687
  br i1 %1688, label %1689, label %1693

1689:                                             ; preds = %1683, %1680
  %1690 = phi ptr [ %1684, %1683 ], [ null, %1680 ]
  %1691 = call ptr @vec_gc_o_reserve(ptr noundef %1690, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1691, ptr %1677, align 8, !tbaa !6
  %1692 = load i32, ptr %1691, align 8, !tbaa !159
  br label %1693

1693:                                             ; preds = %1689, %1683
  %1694 = phi i32 [ %1687, %1683 ], [ %1692, %1689 ]
  %1695 = phi ptr [ %1684, %1683 ], [ %1691, %1689 ]
  %1696 = add i32 %1694, 1
  store i32 %1696, ptr %1695, align 8, !tbaa !159
  %1697 = zext i32 %1694 to i64
  %1698 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1695, i64 0, i32 2, i64 %1697
  store i32 64, ptr %1698, align 8, !tbaa.struct !179
  %1699 = getelementptr inbounds i8, ptr %1698, i64 8
  store i32 3, ptr %1699, align 8, !tbaa.struct !202
  %1700 = getelementptr inbounds i8, ptr %1698, i64 16
  store ptr %1655, ptr %1700, align 8, !tbaa.struct !203
  br label %1701

1701:                                             ; preds = %1674, %1693
  store i8 1, ptr @have_location_lists, align 1, !tbaa !17
  br label %1731

1702:                                             ; preds = %1660, %1671
  %1703 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1655, i64 0, i32 5
  %1704 = load ptr, ptr %1703, align 8, !tbaa !270
  %1705 = icmp eq ptr %1058, null
  br i1 %1705, label %1731, label %1706

1706:                                             ; preds = %1702
  %1707 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %1708 = load ptr, ptr %1707, align 8, !tbaa !6
  %1709 = icmp eq ptr %1708, null
  br i1 %1709, label %1710, label %1713

1710:                                             ; preds = %1706
  %1711 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1711, ptr %1707, align 8, !tbaa !157
  %1712 = icmp eq ptr %1711, null
  br i1 %1712, label %1719, label %1713

1713:                                             ; preds = %1710, %1706
  %1714 = phi ptr [ %1711, %1710 ], [ %1708, %1706 ]
  %1715 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1714, i64 0, i32 1
  %1716 = load i32, ptr %1715, align 4, !tbaa !201
  %1717 = load i32, ptr %1714, align 8, !tbaa !159
  %1718 = icmp eq i32 %1716, %1717
  br i1 %1718, label %1719, label %1723

1719:                                             ; preds = %1713, %1710
  %1720 = phi ptr [ %1714, %1713 ], [ null, %1710 ]
  %1721 = call ptr @vec_gc_o_reserve(ptr noundef %1720, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1721, ptr %1707, align 8, !tbaa !6
  %1722 = load i32, ptr %1721, align 8, !tbaa !159
  br label %1723

1723:                                             ; preds = %1719, %1713
  %1724 = phi i32 [ %1717, %1713 ], [ %1722, %1719 ]
  %1725 = phi ptr [ %1714, %1713 ], [ %1721, %1719 ]
  %1726 = add i32 %1724, 1
  store i32 %1726, ptr %1725, align 8, !tbaa !159
  %1727 = zext i32 %1724 to i64
  %1728 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1725, i64 0, i32 2, i64 %1727
  store i32 64, ptr %1728, align 8, !tbaa.struct !179
  %1729 = getelementptr inbounds i8, ptr %1728, i64 8
  store i32 2, ptr %1729, align 8, !tbaa.struct !202
  %1730 = getelementptr inbounds i8, ptr %1728, i64 16
  store ptr %1704, ptr %1730, align 8, !tbaa.struct !203
  br label %1731

1731:                                             ; preds = %1723, %1702, %1499, %1471, %1701
  %1732 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %1733 = load i32, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 3, i32 2), align 8, !tbaa !382
  %1734 = sext i32 %1733 to i64
  %1735 = call ptr @eliminate_regs(ptr noundef %1732, i32 noundef 0, ptr noundef null) #31
  %1736 = load i32, ptr %1735, align 8
  %1737 = and i32 %1736, 65535
  %1738 = icmp eq i32 %1737, 49
  br i1 %1738, label %1739, label %1747

1739:                                             ; preds = %1731
  %1740 = getelementptr inbounds %struct.rtx_def, ptr %1735, i64 0, i32 1
  %1741 = getelementptr inbounds %struct.rtx_def, ptr %1735, i64 0, i32 1, i32 0, i32 0, i64 1
  %1742 = load ptr, ptr %1741, align 8, !tbaa !17
  %1743 = getelementptr inbounds %struct.rtx_def, ptr %1742, i64 0, i32 1
  %1744 = load i64, ptr %1743, align 8, !tbaa !17
  %1745 = add nsw i64 %1744, %1734
  %1746 = load ptr, ptr %1740, align 8, !tbaa !17
  br label %1747

1747:                                             ; preds = %1739, %1731
  %1748 = phi i64 [ %1745, %1739 ], [ %1734, %1731 ]
  %1749 = phi ptr [ %1746, %1739 ], [ %1735, %1731 ]
  %1750 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16
  %1751 = icmp eq ptr %1749, %1750
  br i1 %1751, label %1761, label %1752

1752:                                             ; preds = %1747
  %1753 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16
  %1754 = icmp eq ptr %1749, %1753
  br i1 %1754, label %1761, label %1755

1755:                                             ; preds = %1752
  %1756 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 41), align 1, !tbaa !89
  %1757 = icmp eq i8 %1756, 0
  %1758 = select i1 %1757, ptr %1753, ptr %1750
  %1759 = icmp eq ptr %1749, %1758
  br i1 %1759, label %1761, label %1760

1760:                                             ; preds = %1755
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16279, ptr noundef nonnull @.str.5) #31
  br label %1761

1761:                                             ; preds = %1747, %1752, %1755, %1760
  %1762 = sub nsw i64 0, %1748
  store i64 %1762, ptr @frame_pointer_fb_offset, align 8, !tbaa !38
  %1763 = load ptr, ptr @cfun, align 8, !tbaa !6
  %1764 = getelementptr inbounds %struct.function, ptr %1763, i64 0, i32 7
  %1765 = load ptr, ptr %1764, align 8, !tbaa !383
  %1766 = icmp eq ptr %1765, null
  br i1 %1766, label %1769, label %1767

1767:                                             ; preds = %1761
  %1768 = call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %1765, i32 noundef 2)
  call fastcc void @add_AT_location_description(ptr noundef %1058, i32 noundef 72, ptr noundef %1768)
  br label %1769

1769:                                             ; preds = %1074, %1761, %1767, %1300, %1305, %1162
  %1770 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %1771 = icmp ugt i32 %1770, 1
  br i1 %1771, label %1772, label %1942

1772:                                             ; preds = %1769
  call fastcc void @gen_generic_params_dies(ptr noundef %0)
  %1773 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %1774 = icmp ult i32 %1773, 2
  br i1 %1774, label %1942, label %1775

1775:                                             ; preds = %1772
  br i1 %58, label %1776, label %1777

1776:                                             ; preds = %1775
  call fastcc void @gen_formal_types_die(ptr noundef %0, ptr noundef %1058)
  br label %1993

1777:                                             ; preds = %1775
  %1778 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 2
  %1779 = load ptr, ptr %1778, align 8, !tbaa !17
  %1780 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 6), align 8, !tbaa !384
  %1781 = call ptr %1780(ptr noundef %0) #31
  %1782 = icmp eq ptr %1781, null
  br i1 %1782, label %1786, label %1783

1783:                                             ; preds = %1777
  %1784 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1781, i64 0, i32 2
  %1785 = load ptr, ptr %1784, align 8, !tbaa !17
  br label %1786

1786:                                             ; preds = %1777, %1783
  %1787 = phi ptr [ %1785, %1783 ], [ null, %1777 ]
  %1788 = icmp ne ptr %1787, null
  %1789 = icmp ne ptr %1779, null
  %1790 = select i1 %1788, i1 true, i1 %1789
  br i1 %1790, label %1791, label %1878

1791:                                             ; preds = %1786
  %1792 = icmp ne ptr %1058, null
  %1793 = icmp eq ptr %1058, null
  %1794 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 4
  br label %1795

1795:                                             ; preds = %1791, %1872
  %1796 = phi i1 [ %1788, %1791 ], [ %1875, %1872 ]
  %1797 = phi ptr [ %1787, %1791 ], [ %1874, %1872 ]
  %1798 = phi ptr [ %1779, %1791 ], [ %1873, %1872 ]
  br i1 %1796, label %1799, label %1861

1799:                                             ; preds = %1795
  %1800 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 38), align 8, !tbaa !385
  %1801 = call zeroext i8 %1800(ptr noundef nonnull %1797) #31
  %1802 = icmp eq i8 %1801, 0
  br i1 %1802, label %1861, label %1803

1803:                                             ; preds = %1799
  %1804 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 38), align 8, !tbaa !385
  %1805 = call zeroext i8 %1804(ptr noundef nonnull %1797) #31
  %1806 = icmp ne i8 %1805, 0
  %1807 = and i1 %1792, %1806
  br i1 %1807, label %1808, label %1824

1808:                                             ; preds = %1803
  %1809 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 16648, ptr %1809, align 8, !tbaa !185
  %1810 = icmp eq ptr %1809, %1058
  br i1 %1810, label %1811, label %1812

1811:                                             ; preds = %1808
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %1812

1812:                                             ; preds = %1811, %1808
  %1813 = getelementptr inbounds %struct.die_struct, ptr %1809, i64 0, i32 3
  store ptr %1058, ptr %1813, align 8, !tbaa !174
  %1814 = load ptr, ptr %1794, align 8, !tbaa !175
  %1815 = icmp eq ptr %1814, null
  br i1 %1815, label %1820, label %1816

1816:                                             ; preds = %1812
  %1817 = getelementptr inbounds %struct.die_struct, ptr %1814, i64 0, i32 5
  %1818 = load ptr, ptr %1817, align 8, !tbaa !176
  %1819 = getelementptr inbounds %struct.die_struct, ptr %1809, i64 0, i32 5
  store ptr %1818, ptr %1819, align 8, !tbaa !176
  br label %1822

1820:                                             ; preds = %1812
  %1821 = getelementptr inbounds %struct.die_struct, ptr %1809, i64 0, i32 5
  br label %1822

1822:                                             ; preds = %1816, %1820
  %1823 = phi ptr [ %1821, %1820 ], [ %1817, %1816 ]
  store ptr %1809, ptr %1823, align 8, !tbaa !176
  store ptr %1809, ptr %1794, align 8, !tbaa !175
  br label %1846

1824:                                             ; preds = %1803
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 17541, ptr noundef nonnull @.str.5) #31
  %1825 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 16648, ptr %1825, align 8, !tbaa !185
  br i1 %1793, label %1841, label %1826

1826:                                             ; preds = %1824
  %1827 = icmp eq ptr %1825, %1058
  br i1 %1827, label %1828, label %1829

1828:                                             ; preds = %1826
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %1829

1829:                                             ; preds = %1828, %1826
  %1830 = getelementptr inbounds %struct.die_struct, ptr %1825, i64 0, i32 3
  store ptr %1058, ptr %1830, align 8, !tbaa !174
  %1831 = load ptr, ptr %1794, align 8, !tbaa !175
  %1832 = icmp eq ptr %1831, null
  br i1 %1832, label %1837, label %1833

1833:                                             ; preds = %1829
  %1834 = getelementptr inbounds %struct.die_struct, ptr %1831, i64 0, i32 5
  %1835 = load ptr, ptr %1834, align 8, !tbaa !176
  %1836 = getelementptr inbounds %struct.die_struct, ptr %1825, i64 0, i32 5
  store ptr %1835, ptr %1836, align 8, !tbaa !176
  br label %1839

1837:                                             ; preds = %1829
  %1838 = getelementptr inbounds %struct.die_struct, ptr %1825, i64 0, i32 5
  br label %1839

1839:                                             ; preds = %1837, %1833
  %1840 = phi ptr [ %1838, %1837 ], [ %1834, %1833 ]
  store ptr %1825, ptr %1840, align 8, !tbaa !176
  store ptr %1825, ptr %1794, align 8, !tbaa !175
  br label %1846

1841:                                             ; preds = %1824
  %1842 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %1825, ptr %1842, align 8, !tbaa !173
  %1843 = getelementptr inbounds %struct.limbo_die_struct, ptr %1842, i64 0, i32 1
  store ptr %1797, ptr %1843, align 8, !tbaa !177
  %1844 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %1845 = getelementptr inbounds %struct.limbo_die_struct, ptr %1842, i64 0, i32 2
  store ptr %1844, ptr %1845, align 8, !tbaa !171
  store ptr %1842, ptr @limbo_die_list, align 8, !tbaa !6
  br label %1846

1846:                                             ; preds = %1841, %1839, %1822
  %1847 = phi ptr [ %1809, %1822 ], [ %1825, %1839 ], [ %1825, %1841 ]
  %1848 = getelementptr i8, ptr %1797, i64 24
  %1849 = load i32, ptr %1848, align 8, !tbaa !17
  call fastcc void @add_src_coords_attributes(ptr noundef nonnull %1847, i32 %1849)
  %1850 = icmp eq ptr %1798, null
  br i1 %1850, label %1868, label %1851

1851:                                             ; preds = %1846, %1856
  %1852 = phi ptr [ %1859, %1856 ], [ %1798, %1846 ]
  %1853 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 5), align 8, !tbaa !386
  %1854 = call zeroext i8 %1853(ptr noundef nonnull %1852, ptr noundef nonnull %1797) #31
  %1855 = icmp eq i8 %1854, 0
  br i1 %1855, label %1866, label %1856

1856:                                             ; preds = %1851
  %1857 = call fastcc ptr @gen_formal_parameter_die(ptr noundef nonnull %1852, ptr noundef null, i8 noundef zeroext 0, ptr noundef nonnull %1847)
  %1858 = getelementptr inbounds %struct.tree_common, ptr %1852, i64 0, i32 1
  %1859 = load ptr, ptr %1858, align 8, !tbaa !17
  %1860 = icmp eq ptr %1859, null
  br i1 %1860, label %1866, label %1851, !llvm.loop !387

1861:                                             ; preds = %1799, %1795
  %1862 = icmp eq ptr %1798, null
  br i1 %1862, label %1866, label %1863

1863:                                             ; preds = %1861
  call fastcc void @gen_decl_die(ptr noundef nonnull %1798, ptr noundef null, ptr noundef %1058)
  %1864 = getelementptr inbounds %struct.tree_common, ptr %1798, i64 0, i32 1
  %1865 = load ptr, ptr %1864, align 8, !tbaa !17
  br label %1866

1866:                                             ; preds = %1856, %1851, %1861, %1863
  %1867 = phi ptr [ null, %1861 ], [ %1865, %1863 ], [ null, %1856 ], [ %1852, %1851 ]
  br i1 %1796, label %1868, label %1872

1868:                                             ; preds = %1846, %1866
  %1869 = phi ptr [ %1867, %1866 ], [ null, %1846 ]
  %1870 = getelementptr inbounds %struct.tree_common, ptr %1797, i64 0, i32 1
  %1871 = load ptr, ptr %1870, align 8, !tbaa !17
  br label %1872

1872:                                             ; preds = %1868, %1866
  %1873 = phi ptr [ %1869, %1868 ], [ %1867, %1866 ]
  %1874 = phi ptr [ %1871, %1868 ], [ null, %1866 ]
  %1875 = icmp ne ptr %1874, null
  %1876 = icmp ne ptr %1873, null
  %1877 = select i1 %1875, i1 true, i1 %1876
  br i1 %1877, label %1795, label %1878, !llvm.loop !388

1878:                                             ; preds = %1872, %1786
  %1879 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %1880 = load ptr, ptr %1879, align 8, !tbaa !17
  %1881 = getelementptr inbounds %struct.tree_type, ptr %1880, i64 0, i32 1
  %1882 = load ptr, ptr %1881, align 8, !tbaa !17
  %1883 = icmp eq ptr %1882, null
  br i1 %1883, label %1914, label %1884

1884:                                             ; preds = %1878
  %1885 = call ptr @tree_last(ptr noundef nonnull %1882) #31
  %1886 = getelementptr inbounds %struct.tree_list, ptr %1885, i64 0, i32 2
  %1887 = load ptr, ptr %1886, align 8, !tbaa !17
  %1888 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %1889 = icmp eq ptr %1887, %1888
  br i1 %1889, label %1942, label %1890

1890:                                             ; preds = %1884
  %1891 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 24, ptr %1891, align 8, !tbaa !185
  %1892 = icmp eq ptr %1058, null
  br i1 %1892, label %1909, label %1893

1893:                                             ; preds = %1890
  %1894 = icmp eq ptr %1891, %1058
  br i1 %1894, label %1895, label %1896

1895:                                             ; preds = %1893
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %1896

1896:                                             ; preds = %1895, %1893
  %1897 = getelementptr inbounds %struct.die_struct, ptr %1891, i64 0, i32 3
  store ptr %1058, ptr %1897, align 8, !tbaa !174
  %1898 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 4
  %1899 = load ptr, ptr %1898, align 8, !tbaa !175
  %1900 = icmp eq ptr %1899, null
  br i1 %1900, label %1905, label %1901

1901:                                             ; preds = %1896
  %1902 = getelementptr inbounds %struct.die_struct, ptr %1899, i64 0, i32 5
  %1903 = load ptr, ptr %1902, align 8, !tbaa !176
  %1904 = getelementptr inbounds %struct.die_struct, ptr %1891, i64 0, i32 5
  store ptr %1903, ptr %1904, align 8, !tbaa !176
  br label %1907

1905:                                             ; preds = %1896
  %1906 = getelementptr inbounds %struct.die_struct, ptr %1891, i64 0, i32 5
  br label %1907

1907:                                             ; preds = %1905, %1901
  %1908 = phi ptr [ %1906, %1905 ], [ %1902, %1901 ]
  store ptr %1891, ptr %1908, align 8, !tbaa !176
  store ptr %1891, ptr %1898, align 8, !tbaa !175
  br label %1942

1909:                                             ; preds = %1890
  %1910 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %1891, ptr %1910, align 8, !tbaa !173
  %1911 = getelementptr inbounds %struct.limbo_die_struct, ptr %1910, i64 0, i32 1
  store ptr %0, ptr %1911, align 8, !tbaa !177
  %1912 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %1913 = getelementptr inbounds %struct.limbo_die_struct, ptr %1910, i64 0, i32 2
  store ptr %1912, ptr %1913, align 8, !tbaa !171
  store ptr %1910, ptr @limbo_die_list, align 8, !tbaa !6
  br label %1942

1914:                                             ; preds = %1878
  %1915 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %1916 = load ptr, ptr %1915, align 8, !tbaa !17
  %1917 = icmp eq ptr %1916, null
  br i1 %1917, label %1918, label %1942

1918:                                             ; preds = %1914
  %1919 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 24, ptr %1919, align 8, !tbaa !185
  %1920 = icmp eq ptr %1058, null
  br i1 %1920, label %1937, label %1921

1921:                                             ; preds = %1918
  %1922 = icmp eq ptr %1919, %1058
  br i1 %1922, label %1923, label %1924

1923:                                             ; preds = %1921
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %1924

1924:                                             ; preds = %1923, %1921
  %1925 = getelementptr inbounds %struct.die_struct, ptr %1919, i64 0, i32 3
  store ptr %1058, ptr %1925, align 8, !tbaa !174
  %1926 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 4
  %1927 = load ptr, ptr %1926, align 8, !tbaa !175
  %1928 = icmp eq ptr %1927, null
  br i1 %1928, label %1933, label %1929

1929:                                             ; preds = %1924
  %1930 = getelementptr inbounds %struct.die_struct, ptr %1927, i64 0, i32 5
  %1931 = load ptr, ptr %1930, align 8, !tbaa !176
  %1932 = getelementptr inbounds %struct.die_struct, ptr %1919, i64 0, i32 5
  store ptr %1931, ptr %1932, align 8, !tbaa !176
  br label %1935

1933:                                             ; preds = %1924
  %1934 = getelementptr inbounds %struct.die_struct, ptr %1919, i64 0, i32 5
  br label %1935

1935:                                             ; preds = %1933, %1929
  %1936 = phi ptr [ %1934, %1933 ], [ %1930, %1929 ]
  store ptr %1919, ptr %1936, align 8, !tbaa !176
  store ptr %1919, ptr %1926, align 8, !tbaa !175
  br label %1942

1937:                                             ; preds = %1918
  %1938 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %1919, ptr %1938, align 8, !tbaa !173
  %1939 = getelementptr inbounds %struct.limbo_die_struct, ptr %1938, i64 0, i32 1
  store ptr %0, ptr %1939, align 8, !tbaa !177
  %1940 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %1941 = getelementptr inbounds %struct.limbo_die_struct, ptr %1938, i64 0, i32 2
  store ptr %1940, ptr %1941, align 8, !tbaa !171
  store ptr %1938, ptr @limbo_die_list, align 8, !tbaa !6
  br label %1942

1942:                                             ; preds = %1769, %1884, %1914, %1907, %1909, %1935, %1937, %1772
  %1943 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %1944 = load ptr, ptr %1943, align 8, !tbaa !17
  br i1 %58, label %1993, label %1945

1945:                                             ; preds = %1942
  %1946 = load i64, ptr %1944, align 8
  %1947 = and i64 %1946, 65535
  %1948 = icmp eq i64 %1947, 0
  br i1 %1948, label %1993, label %1949

1949:                                             ; preds = %1945
  %1950 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 3
  %1951 = load ptr, ptr %1950, align 8, !tbaa !17
  %1952 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1951, i64 0, i32 3
  %1953 = load ptr, ptr %1952, align 8, !tbaa !17
  %1954 = icmp eq ptr %1953, null
  br i1 %1954, label %1956, label %1955

1955:                                             ; preds = %1949
  call fastcc void @gen_decl_die(ptr noundef nonnull %1951, ptr noundef null, ptr noundef %1058)
  br label %1956

1956:                                             ; preds = %1949, %1955
  %1957 = getelementptr inbounds %struct.tree_block, ptr %1944, i64 0, i32 3
  %1958 = load ptr, ptr %1957, align 8, !tbaa !17
  %1959 = icmp eq ptr %1958, null
  br i1 %1959, label %1960, label %1962

1960:                                             ; preds = %1962, %1956
  %1961 = getelementptr inbounds %struct.tree_block, ptr %1944, i64 0, i32 4
  br label %1967

1962:                                             ; preds = %1956, %1962
  %1963 = phi ptr [ %1965, %1962 ], [ %1958, %1956 ]
  call fastcc void @process_scope_var(ptr noundef nonnull %1944, ptr noundef nonnull %1963, ptr noundef null, ptr noundef %1058)
  %1964 = getelementptr inbounds %struct.tree_common, ptr %1963, i64 0, i32 1
  %1965 = load ptr, ptr %1964, align 8, !tbaa !17
  %1966 = icmp eq ptr %1965, null
  br i1 %1966, label %1960, label %1962, !llvm.loop !389

1967:                                             ; preds = %1977, %1960
  %1968 = phi i64 [ 0, %1960 ], [ %1980, %1977 ]
  %1969 = load ptr, ptr %1961, align 8, !tbaa !17
  %1970 = icmp eq ptr %1969, null
  br i1 %1970, label %1973, label %1971

1971:                                             ; preds = %1967
  %1972 = load i32, ptr %1969, align 8, !tbaa !182
  br label %1973

1973:                                             ; preds = %1971, %1967
  %1974 = phi i32 [ %1972, %1971 ], [ 0, %1967 ]
  %1975 = zext i32 %1974 to i64
  %1976 = icmp ult i64 %1968, %1975
  br i1 %1976, label %1977, label %1981

1977:                                             ; preds = %1973
  %1978 = getelementptr inbounds %struct.VEC_tree_base, ptr %1969, i64 0, i32 2, i64 %1968
  %1979 = load ptr, ptr %1978, align 8, !tbaa !6
  call fastcc void @process_scope_var(ptr noundef nonnull %1944, ptr noundef null, ptr noundef %1979, ptr noundef %1058)
  %1980 = add nuw nsw i64 %1968, 1
  br label %1967, !llvm.loop !390

1981:                                             ; preds = %1973
  %1982 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %1983 = icmp ult i32 %1982, 2
  br i1 %1983, label %1993, label %1984

1984:                                             ; preds = %1981
  %1985 = getelementptr inbounds %struct.tree_block, ptr %1944, i64 0, i32 5
  %1986 = load ptr, ptr %1985, align 8, !tbaa !17
  %1987 = icmp eq ptr %1986, null
  br i1 %1987, label %1993, label %1988

1988:                                             ; preds = %1984, %1988
  %1989 = phi ptr [ %1991, %1988 ], [ %1986, %1984 ]
  call fastcc void @gen_block_die(ptr noundef nonnull %1989, ptr noundef %1058, i32 noundef 1)
  %1990 = getelementptr inbounds %struct.tree_common, ptr %1989, i64 0, i32 1
  %1991 = load ptr, ptr %1990, align 8, !tbaa !17
  %1992 = icmp eq ptr %1991, null
  br i1 %1992, label %1993, label %1988, !llvm.loop !391

1993:                                             ; preds = %1988, %1984, %1981, %1776, %1945, %1942
  %1994 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 80), align 8, !tbaa !392
  %1995 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %1996 = load ptr, ptr %1995, align 8, !tbaa !17
  %1997 = call i32 %1994(ptr noundef %1996) #31
  %1998 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %1999

1999:                                             ; preds = %2033, %1993
  %2000 = phi ptr [ %1998, %1993 ], [ %2034, %2033 ]
  %2001 = icmp eq ptr %2000, null
  br i1 %2001, label %2051, label %2002

2002:                                             ; preds = %1999
  %2003 = getelementptr inbounds %struct.die_struct, ptr %2000, i64 0, i32 2
  %2004 = load ptr, ptr %2003, align 8, !tbaa !157
  %2005 = icmp eq ptr %2004, null
  br i1 %2005, label %2051, label %2006

2006:                                             ; preds = %2002, %2027
  %2007 = phi ptr [ %2028, %2027 ], [ %2004, %2002 ]
  %2008 = phi ptr [ %2029, %2027 ], [ %2004, %2002 ]
  %2009 = phi i64 [ %2031, %2027 ], [ 0, %2002 ]
  %2010 = phi ptr [ %2030, %2027 ], [ null, %2002 ]
  %2011 = load i32, ptr %2008, align 8, !tbaa !159
  %2012 = zext i32 %2011 to i64
  %2013 = icmp ult i64 %2009, %2012
  br i1 %2013, label %2014, label %2033

2014:                                             ; preds = %2006
  %2015 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %2008, i64 0, i32 2, i64 %2009
  %2016 = load i32, ptr %2015, align 8, !tbaa !161
  switch i32 %2016, label %2027 [
    i32 19, label %2036
    i32 71, label %2017
    i32 49, label %2017
  ]

2017:                                             ; preds = %2014, %2014
  %2018 = getelementptr i8, ptr %2015, i64 8
  %2019 = load i32, ptr %2018, align 8, !tbaa !163
  %2020 = icmp eq i32 %2019, 10
  br i1 %2020, label %2023, label %2021

2021:                                             ; preds = %2017
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %2022 = load ptr, ptr %2003, align 8, !tbaa !157
  br label %2023

2023:                                             ; preds = %2021, %2017
  %2024 = phi ptr [ %2007, %2017 ], [ %2022, %2021 ]
  %2025 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %2008, i64 0, i32 2, i64 %2009, i32 1, i32 1
  %2026 = load ptr, ptr %2025, align 8, !tbaa !17
  br label %2027

2027:                                             ; preds = %2023, %2014
  %2028 = phi ptr [ %2024, %2023 ], [ %2007, %2014 ]
  %2029 = phi ptr [ %2024, %2023 ], [ %2008, %2014 ]
  %2030 = phi ptr [ %2026, %2023 ], [ %2010, %2014 ]
  %2031 = add nuw nsw i64 %2009, 1
  %2032 = icmp eq ptr %2029, null
  br i1 %2032, label %2033, label %2006, !llvm.loop !164

2033:                                             ; preds = %2027, %2006
  %2034 = phi ptr [ %2030, %2027 ], [ %2010, %2006 ]
  %2035 = icmp eq ptr %2034, null
  br i1 %2035, label %2051, label %1999

2036:                                             ; preds = %2014
  %2037 = getelementptr i8, ptr %2015, i64 8
  %2038 = load i32, ptr %2037, align 8, !tbaa !163
  %2039 = icmp eq i32 %2038, 6
  br i1 %2039, label %2041, label %2040

2040:                                             ; preds = %2036
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %2041

2041:                                             ; preds = %2040, %2036
  %2042 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %2008, i64 0, i32 2, i64 %2009, i32 1, i32 1
  %2043 = load i64, ptr %2042, align 8, !tbaa !17
  %2044 = trunc i64 %2043 to i32
  switch i32 %2044, label %2051 [
    i32 14, label %2045
    i32 8, label %2045
    i32 7, label %2045
  ]

2045:                                             ; preds = %2041, %2041, %2041
  %2046 = call ptr @decl_assembler_name(ptr noundef %0) #31
  %2047 = getelementptr inbounds %struct.tree_identifier, ptr %2046, i64 0, i32 1
  %2048 = load ptr, ptr %2047, align 8, !tbaa !17
  %2049 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %2048, ptr noundef nonnull dereferenceable(7) @.str.318)
  %2050 = icmp eq i32 %2049, 0
  br i1 %2050, label %2053, label %2051

2051:                                             ; preds = %2033, %2002, %1999, %2045, %2041
  %2052 = icmp ugt i32 %1997, 1
  br i1 %2052, label %2053, label %2082

2053:                                             ; preds = %2051, %2045
  %2054 = phi i32 [ %1997, %2051 ], [ 2, %2045 ]
  %2055 = zext i32 %2054 to i64
  %2056 = icmp eq ptr %1058, null
  br i1 %2056, label %2082, label %2057

2057:                                             ; preds = %2053
  %2058 = getelementptr inbounds %struct.die_struct, ptr %1058, i64 0, i32 2
  %2059 = load ptr, ptr %2058, align 8, !tbaa !6
  %2060 = icmp eq ptr %2059, null
  br i1 %2060, label %2061, label %2064

2061:                                             ; preds = %2057
  %2062 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %2062, ptr %2058, align 8, !tbaa !157
  %2063 = icmp eq ptr %2062, null
  br i1 %2063, label %2070, label %2064

2064:                                             ; preds = %2061, %2057
  %2065 = phi ptr [ %2062, %2061 ], [ %2059, %2057 ]
  %2066 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %2065, i64 0, i32 1
  %2067 = load i32, ptr %2066, align 4, !tbaa !201
  %2068 = load i32, ptr %2065, align 8, !tbaa !159
  %2069 = icmp eq i32 %2067, %2068
  br i1 %2069, label %2070, label %2074

2070:                                             ; preds = %2064, %2061
  %2071 = phi ptr [ %2065, %2064 ], [ null, %2061 ]
  %2072 = call ptr @vec_gc_o_reserve(ptr noundef %2071, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %2072, ptr %2058, align 8, !tbaa !6
  %2073 = load i32, ptr %2072, align 8, !tbaa !159
  br label %2074

2074:                                             ; preds = %2070, %2064
  %2075 = phi i32 [ %2068, %2064 ], [ %2073, %2070 ]
  %2076 = phi ptr [ %2065, %2064 ], [ %2072, %2070 ]
  %2077 = add i32 %2075, 1
  store i32 %2077, ptr %2076, align 8, !tbaa !159
  %2078 = zext i32 %2075 to i64
  %2079 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %2076, i64 0, i32 2, i64 %2078
  store i32 54, ptr %2079, align 8, !tbaa.struct !179
  %2080 = getelementptr inbounds i8, ptr %2079, i64 8
  store i32 6, ptr %2080, align 8, !tbaa.struct !202
  %2081 = getelementptr inbounds i8, ptr %2079, i64 16
  store i64 %2055, ptr %2081, align 8, !tbaa.struct !203
  br label %2082

2082:                                             ; preds = %2074, %2053, %2051, %743
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %13) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @dwarf2out_decl(ptr noundef %0) local_unnamed_addr #10 {
  %2 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %189 [
    i16 35, label %113
    i16 29, label %5
    i16 32, label %16
    i16 33, label %41
    i16 38, label %104
    i16 39, label %104
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %189, label %9

9:                                                ; preds = %5
  %10 = tail call ptr @decl_function_context(ptr noundef nonnull %0) #31
  %11 = icmp ne ptr %10, null
  %12 = load i32, ptr @debug_info_level, align 4
  %13 = icmp ugt i32 %12, 1
  %14 = select i1 %11, i1 %13, i1 false
  %15 = select i1 %14, ptr null, ptr %2
  br label %187

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 33554432
  %20 = icmp ne i64 %19, 0
  %21 = and i64 %3, 16777216
  %22 = icmp eq i64 %21, 0
  %23 = and i1 %22, %20
  br i1 %23, label %189, label %24

24:                                               ; preds = %16
  %25 = and i64 %3, 67108864
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %24
  %28 = tail call ptr @decl_function_context(ptr noundef nonnull %0) #31
  %29 = icmp eq ptr %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.tree_decl_minimal, ptr %32, i64 0, i32 2
  %35 = load i32, ptr %34, align 4, !tbaa !17
  %36 = tail call ptr @htab_find_with_hash(ptr noundef %33, ptr noundef %32, i32 noundef %35) #31
  br label %37

37:                                               ; preds = %30, %27, %24
  %38 = phi ptr [ %36, %30 ], [ %2, %27 ], [ %2, %24 ]
  %39 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %189, label %187

41:                                               ; preds = %1
  %42 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %189, label %44

44:                                               ; preds = %41, %78
  %45 = phi ptr [ %79, %78 ], [ %2, %41 ]
  %46 = icmp eq ptr %45, null
  br i1 %46, label %189, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.die_struct, ptr %45, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !157
  %50 = icmp eq ptr %49, null
  br i1 %50, label %189, label %51

51:                                               ; preds = %47, %72
  %52 = phi ptr [ %73, %72 ], [ %49, %47 ]
  %53 = phi ptr [ %74, %72 ], [ %49, %47 ]
  %54 = phi i64 [ %76, %72 ], [ 0, %47 ]
  %55 = phi ptr [ %75, %72 ], [ null, %47 ]
  %56 = load i32, ptr %53, align 8, !tbaa !159
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %54, %57
  br i1 %58, label %59, label %78

59:                                               ; preds = %51
  %60 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %53, i64 0, i32 2, i64 %54
  %61 = load i32, ptr %60, align 8, !tbaa !161
  switch i32 %61, label %72 [
    i32 19, label %81
    i32 71, label %62
    i32 49, label %62
  ]

62:                                               ; preds = %59, %59
  %63 = getelementptr i8, ptr %60, i64 8
  %64 = load i32, ptr %63, align 8, !tbaa !163
  %65 = icmp eq i32 %64, 10
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %67 = load ptr, ptr %48, align 8, !tbaa !157
  br label %68

68:                                               ; preds = %66, %62
  %69 = phi ptr [ %52, %62 ], [ %67, %66 ]
  %70 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %53, i64 0, i32 2, i64 %54, i32 1, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  br label %72

72:                                               ; preds = %68, %59
  %73 = phi ptr [ %69, %68 ], [ %52, %59 ]
  %74 = phi ptr [ %69, %68 ], [ %53, %59 ]
  %75 = phi ptr [ %71, %68 ], [ %55, %59 ]
  %76 = add nuw nsw i64 %54, 1
  %77 = icmp eq ptr %74, null
  br i1 %77, label %78, label %51, !llvm.loop !164

78:                                               ; preds = %72, %51
  %79 = phi ptr [ %75, %72 ], [ %55, %51 ]
  %80 = icmp eq ptr %79, null
  br i1 %80, label %189, label %44

81:                                               ; preds = %59
  %82 = getelementptr i8, ptr %60, i64 8
  %83 = load i32, ptr %82, align 8, !tbaa !163
  %84 = icmp eq i32 %83, 6
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %86

86:                                               ; preds = %81, %85
  %87 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %53, i64 0, i32 2, i64 %54, i32 1, i32 1
  %88 = load i64, ptr %87, align 8, !tbaa !17
  %89 = trunc i64 %88 to i32
  switch i32 %89, label %189 [
    i32 14, label %90
    i32 8, label %90
    i32 7, label %90
  ]

90:                                               ; preds = %86, %86, %86
  %91 = load i64, ptr %0, align 8
  %92 = and i64 %91, 67108864
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %187, label %94

94:                                               ; preds = %90
  %95 = tail call ptr @decl_function_context(ptr noundef nonnull %0) #31
  %96 = icmp eq ptr %95, null
  br i1 %96, label %187, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  %100 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %101 = getelementptr inbounds %struct.tree_decl_minimal, ptr %99, i64 0, i32 2
  %102 = load i32, ptr %101, align 4, !tbaa !17
  %103 = tail call ptr @htab_find_with_hash(ptr noundef %100, ptr noundef %99, i32 noundef %102) #31
  br label %187

104:                                              ; preds = %1, %1
  %105 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %106 = icmp ult i32 %105, 2
  br i1 %106, label %189, label %107

107:                                              ; preds = %104
  %108 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %109 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %110 = load i32, ptr %109, align 4, !tbaa !17
  %111 = tail call ptr @htab_find_with_hash(ptr noundef %108, ptr noundef nonnull %0, i32 noundef %110) #31
  %112 = icmp eq ptr %111, null
  br i1 %112, label %187, label %189

113:                                              ; preds = %1
  %114 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %115 = load i64, ptr %114, align 8
  %116 = and i64 %115, 33554432
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %189

118:                                              ; preds = %113
  %119 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %120 = load i32, ptr %119, align 8, !tbaa !17
  %121 = icmp ult i32 %120, 2
  br i1 %121, label %122, label %180

122:                                              ; preds = %118, %156
  %123 = phi ptr [ %157, %156 ], [ %2, %118 ]
  %124 = icmp eq ptr %123, null
  br i1 %124, label %189, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.die_struct, ptr %123, i64 0, i32 2
  %127 = load ptr, ptr %126, align 8, !tbaa !157
  %128 = icmp eq ptr %127, null
  br i1 %128, label %189, label %129

129:                                              ; preds = %125, %150
  %130 = phi ptr [ %151, %150 ], [ %127, %125 ]
  %131 = phi ptr [ %152, %150 ], [ %127, %125 ]
  %132 = phi i64 [ %154, %150 ], [ 0, %125 ]
  %133 = phi ptr [ %153, %150 ], [ null, %125 ]
  %134 = load i32, ptr %131, align 8, !tbaa !159
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %132, %135
  br i1 %136, label %137, label %156

137:                                              ; preds = %129
  %138 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %131, i64 0, i32 2, i64 %132
  %139 = load i32, ptr %138, align 8, !tbaa !161
  switch i32 %139, label %150 [
    i32 19, label %159
    i32 71, label %140
    i32 49, label %140
  ]

140:                                              ; preds = %137, %137
  %141 = getelementptr i8, ptr %138, i64 8
  %142 = load i32, ptr %141, align 8, !tbaa !163
  %143 = icmp eq i32 %142, 10
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %145 = load ptr, ptr %126, align 8, !tbaa !157
  br label %146

146:                                              ; preds = %144, %140
  %147 = phi ptr [ %130, %140 ], [ %145, %144 ]
  %148 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %131, i64 0, i32 2, i64 %132, i32 1, i32 1
  %149 = load ptr, ptr %148, align 8, !tbaa !17
  br label %150

150:                                              ; preds = %146, %137
  %151 = phi ptr [ %147, %146 ], [ %130, %137 ]
  %152 = phi ptr [ %147, %146 ], [ %131, %137 ]
  %153 = phi ptr [ %149, %146 ], [ %133, %137 ]
  %154 = add nuw nsw i64 %132, 1
  %155 = icmp eq ptr %152, null
  br i1 %155, label %156, label %129, !llvm.loop !164

156:                                              ; preds = %150, %129
  %157 = phi ptr [ %153, %150 ], [ %133, %129 ]
  %158 = icmp eq ptr %157, null
  br i1 %158, label %189, label %122

159:                                              ; preds = %137
  %160 = getelementptr i8, ptr %138, i64 8
  %161 = load i32, ptr %160, align 8, !tbaa !163
  %162 = icmp eq i32 %161, 6
  br i1 %162, label %164, label %163

163:                                              ; preds = %159
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %164

164:                                              ; preds = %159, %163
  %165 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %131, i64 0, i32 2, i64 %132, i32 1, i32 1
  %166 = load i64, ptr %165, align 8, !tbaa !17
  %167 = trunc i64 %166 to i32
  switch i32 %167, label %189 [
    i32 17, label %168
    i32 4, label %168
  ]

168:                                              ; preds = %164, %164
  %169 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %170 = load ptr, ptr %169, align 8, !tbaa !17
  %171 = load i64, ptr %170, align 8
  %172 = and i64 %171, 65535
  %173 = icmp eq i64 %172, 7
  br i1 %173, label %174, label %189

174:                                              ; preds = %168
  %175 = load i64, ptr %114, align 8
  %176 = and i64 %175, 1024
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %189

178:                                              ; preds = %174
  %179 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %170, i32 noundef 0, i32 noundef 0, ptr noundef null)
  br label %189

180:                                              ; preds = %118
  %181 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %182 = icmp ult i32 %181, 2
  br i1 %182, label %189, label %183

183:                                              ; preds = %180
  %184 = tail call ptr @decl_function_context(ptr noundef nonnull %0) #31
  %185 = icmp eq ptr %184, null
  %186 = select i1 %185, ptr %2, ptr null
  br label %187

187:                                              ; preds = %183, %9, %107, %90, %94, %97, %37
  %188 = phi ptr [ %2, %107 ], [ %103, %97 ], [ %2, %94 ], [ %2, %90 ], [ %38, %37 ], [ %15, %9 ], [ %186, %183 ]
  tail call fastcc void @gen_decl_die(ptr noundef nonnull %0, ptr noundef null, ptr noundef %188)
  br label %189

189:                                              ; preds = %44, %47, %78, %122, %125, %156, %164, %86, %1, %180, %168, %174, %178, %113, %107, %104, %41, %37, %16, %5, %187
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @decl_ultimate_origin(ptr noundef readonly %0) unnamed_addr #10 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %3, i64 10
  %5 = load i8, ptr %4, align 2, !tbaa !17
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 2048
  %11 = icmp ne i64 %10, 0
  %12 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, %0
  %15 = select i1 %11, i1 %14, i1 false
  br i1 %15, label %27, label %16

16:                                               ; preds = %7
  %17 = icmp eq ptr %13, null
  %18 = select i1 %17, ptr %0, ptr %13
  %19 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  %22 = icmp eq ptr %20, %18
  %23 = or i1 %21, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  br label %27

27:                                               ; preds = %7, %24, %16, %1
  %28 = phi ptr [ null, %1 ], [ %13, %16 ], [ %26, %24 ], [ null, %7 ]
  ret ptr %28
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc ptr @add_abstract_origin_attribute(ptr noundef %0, ptr noundef %1) unnamed_addr #2 {
  %3 = load i64, ptr %1, align 8
  %4 = and i64 %3, 65535
  %5 = icmp eq i64 %4, 29
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %4
  %8 = load i32, ptr %7, align 4, !tbaa !17
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi ptr [ %12, %10 ], [ %1, %6 ]
  %15 = tail call ptr @decl_function_context(ptr noundef %14) #31
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @dwarf2out_abstract_function(ptr noundef nonnull %15)
  br label %18

18:                                               ; preds = %13, %17, %2
  %19 = load i64, ptr %1, align 8
  %20 = and i64 %19, 65535
  %21 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !17
  switch i32 %22, label %62 [
    i32 3, label %23
    i32 2, label %28
  ]

23:                                               ; preds = %18
  %24 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %25 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !17
  %27 = tail call ptr @htab_find_with_hash(ptr noundef %24, ptr noundef nonnull %1, i32 noundef %26) #31
  br label %31

28:                                               ; preds = %18
  %29 = getelementptr i8, ptr %1, i64 88
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  br label %31

31:                                               ; preds = %28, %23
  %32 = phi ptr [ %27, %23 ], [ %30, %28 ]
  %33 = icmp eq ptr %32, null
  br i1 %33, label %62, label %34

34:                                               ; preds = %31
  %35 = icmp eq ptr %0, null
  br i1 %35, label %62, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !6
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %41, ptr %37, align 8, !tbaa !157
  %42 = icmp eq ptr %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %40, %36
  %44 = phi ptr [ %41, %40 ], [ %38, %36 ]
  %45 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %44, i64 0, i32 1
  %46 = load i32, ptr %45, align 4, !tbaa !201
  %47 = load i32, ptr %44, align 8, !tbaa !159
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %53

49:                                               ; preds = %43, %40
  %50 = phi ptr [ %44, %43 ], [ null, %40 ]
  %51 = tail call ptr @vec_gc_o_reserve(ptr noundef %50, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %51, ptr %37, align 8, !tbaa !6
  %52 = load i32, ptr %51, align 8, !tbaa !159
  br label %53

53:                                               ; preds = %49, %43
  %54 = phi i32 [ %47, %43 ], [ %52, %49 ]
  %55 = phi ptr [ %44, %43 ], [ %51, %49 ]
  %56 = add i32 %54, 1
  store i32 %56, ptr %55, align 8, !tbaa !159
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %55, i64 0, i32 2, i64 %57
  store i32 49, ptr %58, align 8, !tbaa.struct !179
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  store i32 10, ptr %59, align 8, !tbaa.struct !202
  %60 = getelementptr inbounds i8, ptr %58, i64 16
  store ptr %32, ptr %60, align 8, !tbaa.struct !203
  %61 = getelementptr inbounds i8, ptr %58, i64 24
  store i32 0, ptr %61, align 8, !tbaa.struct !294
  br label %62

62:                                               ; preds = %18, %53, %34, %31
  %63 = phi ptr [ null, %31 ], [ %32, %34 ], [ %32, %53 ], [ null, %18 ]
  ret ptr %63
}

declare void @expand_location(ptr sret(%struct.expanded_location) align 8, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc ptr @get_AT_file(ptr noundef readonly %0) unnamed_addr #2 {
  br label %2

2:                                                ; preds = %36, %1
  %3 = phi ptr [ %0, %1 ], [ %37, %36 ]
  %4 = icmp eq ptr %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !157
  %8 = icmp eq ptr %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %5, %30
  %10 = phi ptr [ %31, %30 ], [ %7, %5 ]
  %11 = phi ptr [ %32, %30 ], [ %7, %5 ]
  %12 = phi i64 [ %34, %30 ], [ 0, %5 ]
  %13 = phi ptr [ %33, %30 ], [ null, %5 ]
  %14 = load i32, ptr %11, align 8, !tbaa !159
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %12, %15
  br i1 %16, label %17, label %36

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12
  %19 = load i32, ptr %18, align 8, !tbaa !161
  switch i32 %19, label %30 [
    i32 58, label %39
    i32 71, label %20
    i32 49, label %20
  ]

20:                                               ; preds = %17, %17
  %21 = getelementptr i8, ptr %18, i64 8
  %22 = load i32, ptr %21, align 8, !tbaa !163
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %25 = load ptr, ptr %6, align 8, !tbaa !157
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi ptr [ %10, %20 ], [ %25, %24 ]
  %28 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  br label %30

30:                                               ; preds = %17, %26
  %31 = phi ptr [ %27, %26 ], [ %10, %17 ]
  %32 = phi ptr [ %27, %26 ], [ %11, %17 ]
  %33 = phi ptr [ %29, %26 ], [ %13, %17 ]
  %34 = add nuw nsw i64 %12, 1
  %35 = icmp eq ptr %32, null
  br i1 %35, label %36, label %9, !llvm.loop !164

36:                                               ; preds = %30, %9
  %37 = phi ptr [ %33, %30 ], [ %13, %9 ]
  %38 = icmp eq ptr %37, null
  br i1 %38, label %47, label %2

39:                                               ; preds = %17
  %40 = getelementptr i8, ptr %18, i64 8
  %41 = load i32, ptr %40, align 8, !tbaa !163
  %42 = icmp eq i32 %41, 16
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7270, ptr noundef nonnull @.str.5) #31
  br label %44

44:                                               ; preds = %39, %43
  %45 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  br label %47

47:                                               ; preds = %5, %36, %2, %44
  %48 = phi ptr [ %46, %44 ], [ null, %2 ], [ null, %36 ], [ null, %5 ]
  ret ptr %48
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_AT_file(ptr noundef %0, i32 noundef %1, ptr noundef %2) unnamed_addr #2 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %10, ptr %6, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9, %5
  %13 = phi ptr [ %10, %9 ], [ %7, %5 ]
  %14 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %13, i64 0, i32 1
  %15 = load i32, ptr %14, align 4, !tbaa !201
  %16 = load i32, ptr %13, align 8, !tbaa !159
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %12, %9
  %19 = phi ptr [ %13, %12 ], [ null, %9 ]
  %20 = tail call ptr @vec_gc_o_reserve(ptr noundef %19, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %20, ptr %6, align 8, !tbaa !6
  %21 = load i32, ptr %20, align 8, !tbaa !159
  br label %22

22:                                               ; preds = %18, %12
  %23 = phi i32 [ %16, %12 ], [ %21, %18 ]
  %24 = phi ptr [ %13, %12 ], [ %20, %18 ]
  %25 = add i32 %23, 1
  store i32 %25, ptr %24, align 8, !tbaa !159
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %24, i64 0, i32 2, i64 %26
  store i32 %1, ptr %27, align 8, !tbaa.struct !179
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  store i32 16, ptr %28, align 8, !tbaa.struct !202
  %29 = getelementptr inbounds i8, ptr %27, i64 16
  store ptr %2, ptr %29, align 8, !tbaa.struct !203
  br label %30

30:                                               ; preds = %3, %22
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_name_and_src_coords_attributes(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = icmp eq ptr %4, null
  br i1 %5, label %119, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.tree_identifier, ptr %4, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %119, label %10

10:                                               ; preds = %6
  %11 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %12 = tail call ptr %11(ptr noundef nonnull %1, i32 noundef 0) #31
  %13 = icmp eq ptr %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = load i8, ptr %12, align 1, !tbaa !17
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = load ptr, ptr @demangle_name_func, align 8, !tbaa !6
  %19 = icmp eq ptr %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = tail call ptr %18(ptr noundef nonnull %12) #31
  br label %22

22:                                               ; preds = %20, %17
  %23 = phi ptr [ %21, %20 ], [ %12, %17 ]
  tail call fastcc void @add_AT_string(ptr noundef %0, i32 noundef 3, ptr noundef %23)
  br label %24

24:                                               ; preds = %22, %14, %10
  %25 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %26 = load i64, ptr %25, align 8
  %27 = and i64 %26, 4096
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr i8, ptr %1, i64 24
  %31 = load i32, ptr %30, align 8, !tbaa !17
  tail call fastcc void @add_src_coords_attributes(ptr noundef %0, i32 %31)
  br label %32

32:                                               ; preds = %29, %24
  %33 = load i64, ptr %1, align 8
  %34 = trunc i64 %33 to i16
  switch i16 %34, label %119 [
    i16 29, label %35
    i16 32, label %35
  ]

35:                                               ; preds = %32, %32
  %36 = and i64 %33, 134217728
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %119, label %38

38:                                               ; preds = %35
  %39 = load i64, ptr %25, align 8
  %40 = and i64 %39, 2048
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %119

42:                                               ; preds = %38
  %43 = and i64 %33, 65535
  %44 = icmp ne i64 %43, 32
  %45 = and i64 %39, 16777216
  %46 = icmp eq i64 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %119

48:                                               ; preds = %42
  %49 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %50

50:                                               ; preds = %84, %48
  %51 = phi ptr [ %49, %48 ], [ %85, %84 ]
  %52 = icmp eq ptr %51, null
  br i1 %52, label %96, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.die_struct, ptr %51, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !157
  %56 = icmp eq ptr %55, null
  br i1 %56, label %96, label %57

57:                                               ; preds = %53, %78
  %58 = phi ptr [ %79, %78 ], [ %55, %53 ]
  %59 = phi ptr [ %80, %78 ], [ %55, %53 ]
  %60 = phi i64 [ %82, %78 ], [ 0, %53 ]
  %61 = phi ptr [ %81, %78 ], [ null, %53 ]
  %62 = load i32, ptr %59, align 8, !tbaa !159
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %60, %63
  br i1 %64, label %65, label %84

65:                                               ; preds = %57
  %66 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %59, i64 0, i32 2, i64 %60
  %67 = load i32, ptr %66, align 8, !tbaa !161
  switch i32 %67, label %78 [
    i32 19, label %87
    i32 71, label %68
    i32 49, label %68
  ]

68:                                               ; preds = %65, %65
  %69 = getelementptr i8, ptr %66, i64 8
  %70 = load i32, ptr %69, align 8, !tbaa !163
  %71 = icmp eq i32 %70, 10
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %73 = load ptr, ptr %54, align 8, !tbaa !157
  br label %74

74:                                               ; preds = %72, %68
  %75 = phi ptr [ %58, %68 ], [ %73, %72 ]
  %76 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %59, i64 0, i32 2, i64 %60, i32 1, i32 1
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  br label %78

78:                                               ; preds = %74, %65
  %79 = phi ptr [ %75, %74 ], [ %58, %65 ]
  %80 = phi ptr [ %75, %74 ], [ %59, %65 ]
  %81 = phi ptr [ %77, %74 ], [ %61, %65 ]
  %82 = add nuw nsw i64 %60, 1
  %83 = icmp eq ptr %80, null
  br i1 %83, label %84, label %57, !llvm.loop !164

84:                                               ; preds = %78, %57
  %85 = phi ptr [ %81, %78 ], [ %61, %57 ]
  %86 = icmp eq ptr %85, null
  br i1 %86, label %96, label %50

87:                                               ; preds = %65
  %88 = getelementptr i8, ptr %66, i64 8
  %89 = load i32, ptr %88, align 8, !tbaa !163
  %90 = icmp eq i32 %89, 6
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %92

92:                                               ; preds = %87, %91
  %93 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %59, i64 0, i32 2, i64 %60, i32 1, i32 1
  %94 = load i64, ptr %93, align 8, !tbaa !17
  %95 = trunc i64 %94 to i32
  switch i32 %95, label %96 [
    i32 14, label %119
    i32 8, label %119
    i32 7, label %119
  ]

96:                                               ; preds = %50, %53, %84, %92
  %97 = load i64, ptr %1, align 8
  %98 = and i64 %97, 65535
  %99 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %98, i64 13
  %100 = load i8, ptr %99, align 1, !tbaa !17
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 1
  %104 = load ptr, ptr %103, align 8, !tbaa !17
  %105 = icmp eq ptr %104, null
  br i1 %105, label %106, label %111

106:                                              ; preds = %102, %96
  %107 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %0, ptr %107, align 8, !tbaa !173
  %108 = getelementptr inbounds %struct.limbo_die_struct, ptr %107, i64 0, i32 1
  store ptr %1, ptr %108, align 8, !tbaa !177
  %109 = load ptr, ptr @deferred_asm_name, align 8, !tbaa !6
  %110 = getelementptr inbounds %struct.limbo_die_struct, ptr %107, i64 0, i32 2
  store ptr %109, ptr %110, align 8, !tbaa !171
  store ptr %107, ptr @deferred_asm_name, align 8, !tbaa !6
  br label %119

111:                                              ; preds = %102
  %112 = tail call ptr @decl_assembler_name(ptr noundef nonnull %1) #31
  %113 = load ptr, ptr %3, align 8, !tbaa !17
  %114 = icmp eq ptr %112, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = tail call ptr @decl_assembler_name(ptr noundef nonnull %1) #31
  %117 = getelementptr inbounds %struct.tree_identifier, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !17
  tail call fastcc void @add_AT_string(ptr noundef %0, i32 noundef 8199, ptr noundef %118)
  br label %119

119:                                              ; preds = %92, %92, %92, %35, %38, %111, %115, %106, %32, %42, %6, %2
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_prototyped_attribute(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #2 {
  %3 = alloca [15 x i8], align 1
  %4 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %5

5:                                                ; preds = %39, %2
  %6 = phi ptr [ %4, %2 ], [ %40, %39 ]
  %7 = icmp eq ptr %6, null
  br i1 %7, label %85, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %85, label %12

12:                                               ; preds = %8, %33
  %13 = phi ptr [ %34, %33 ], [ %10, %8 ]
  %14 = phi ptr [ %35, %33 ], [ %10, %8 ]
  %15 = phi i64 [ %37, %33 ], [ 0, %8 ]
  %16 = phi ptr [ %36, %33 ], [ null, %8 ]
  %17 = load i32, ptr %14, align 8, !tbaa !159
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %20, label %39

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15
  %22 = load i32, ptr %21, align 8, !tbaa !161
  switch i32 %22, label %33 [
    i32 19, label %42
    i32 71, label %23
    i32 49, label %23
  ]

23:                                               ; preds = %20, %20
  %24 = getelementptr i8, ptr %21, i64 8
  %25 = load i32, ptr %24, align 8, !tbaa !163
  %26 = icmp eq i32 %25, 10
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %28 = load ptr, ptr %9, align 8, !tbaa !157
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %13, %23 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %20, %29
  %34 = phi ptr [ %30, %29 ], [ %13, %20 ]
  %35 = phi ptr [ %30, %29 ], [ %14, %20 ]
  %36 = phi ptr [ %32, %29 ], [ %16, %20 ]
  %37 = add nuw nsw i64 %15, 1
  %38 = icmp eq ptr %35, null
  br i1 %38, label %39, label %12, !llvm.loop !164

39:                                               ; preds = %33, %12
  %40 = phi ptr [ %36, %33 ], [ %16, %12 ]
  %41 = icmp eq ptr %40, null
  br i1 %41, label %85, label %5

42:                                               ; preds = %20
  %43 = getelementptr i8, ptr %21, i64 8
  %44 = load i32, ptr %43, align 8, !tbaa !163
  %45 = icmp eq i32 %44, 6
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %47

47:                                               ; preds = %42, %46
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !17
  %50 = and i64 %49, 4294967295
  %51 = icmp eq i64 %50, 1
  br i1 %51, label %52, label %85

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = icmp eq ptr %54, null
  br i1 %55, label %85, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %3)
  %57 = icmp eq ptr %0, null
  br i1 %57, label %84, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !6
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %63, ptr %59, align 8, !tbaa !157
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %62, %58
  %66 = phi ptr [ %63, %62 ], [ %60, %58 ]
  %67 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 1
  %68 = load i32, ptr %67, align 4, !tbaa !201
  %69 = load i32, ptr %66, align 8, !tbaa !159
  %70 = icmp eq i32 %68, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %65, %62
  %72 = phi ptr [ %66, %65 ], [ null, %62 ]
  %73 = tail call ptr @vec_gc_o_reserve(ptr noundef %72, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %73, ptr %59, align 8, !tbaa !6
  %74 = load i32, ptr %73, align 8, !tbaa !159
  br label %75

75:                                               ; preds = %71, %65
  %76 = phi i32 [ %69, %65 ], [ %74, %71 ]
  %77 = phi ptr [ %66, %65 ], [ %73, %71 ]
  %78 = add i32 %76, 1
  store i32 %78, ptr %77, align 8, !tbaa !159
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %77, i64 0, i32 2, i64 %79
  store i32 39, ptr %80, align 8, !tbaa.struct !179
  %81 = getelementptr inbounds i8, ptr %80, i64 8
  store i32 9, ptr %81, align 8, !tbaa.struct !202
  %82 = getelementptr inbounds i8, ptr %80, i64 16
  store i8 1, ptr %82, align 8, !tbaa.struct !203
  %83 = getelementptr inbounds i8, ptr %80, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %83, ptr noundef nonnull align 1 dereferenceable(15) %3, i64 15, i1 false), !tbaa.struct !362
  br label %84

84:                                               ; preds = %56, %75
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %3)
  br label %85

85:                                               ; preds = %8, %39, %5, %84, %52, %47
  ret void
}

declare zeroext i8 @cgraph_function_possibly_inlined_p(ptr noundef) local_unnamed_addr #3

declare ptr @lookup_attribute(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_generic_params_dies(ptr noundef %0) unnamed_addr #10 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %103, label %3

3:                                                ; preds = %1
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %5
  %7 = load i32, ptr %6, align 4, !tbaa !17
  switch i32 %7, label %23 [
    i32 2, label %8
    i32 3, label %15
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %103, label %12

12:                                               ; preds = %8
  %13 = getelementptr i8, ptr %0, i64 88
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  br label %20

15:                                               ; preds = %3
  %16 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %17 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !17
  %19 = tail call ptr @htab_find_with_hash(ptr noundef %16, ptr noundef nonnull %0, i32 noundef %18) #31
  br label %20

20:                                               ; preds = %15, %12
  %21 = phi ptr [ %14, %12 ], [ %19, %15 ]
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %3, %20
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12298, ptr noundef nonnull @.str.5) #31
  br label %24

24:                                               ; preds = %20, %23
  %25 = phi i1 [ false, %20 ], [ true, %23 ]
  %26 = phi ptr [ %21, %20 ], [ null, %23 ]
  %27 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 36), align 8, !tbaa !393
  %28 = tail call ptr %27(ptr noundef nonnull %0) #31
  %29 = icmp eq ptr %28, null
  br i1 %29, label %103, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.tree_vec, ptr %28, i64 0, i32 1
  %32 = load i32, ptr %31, align 8, !tbaa !17
  %33 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 37), align 8, !tbaa !394
  %34 = tail call ptr %33(ptr noundef nonnull %0) #31
  %35 = icmp sgt i32 %32, 0
  br i1 %35, label %36, label %103

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.die_struct, ptr %26, i64 0, i32 4
  %38 = zext i32 %32 to i64
  br label %39

39:                                               ; preds = %36, %100
  %40 = phi i64 [ 0, %36 ], [ %101, %100 ]
  %41 = getelementptr inbounds %struct.tree_vec, ptr %28, i64 0, i32 2, i64 %40
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.tree_vec, ptr %34, i64 0, i32 2, i64 %40
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 5), align 8, !tbaa !395
  %46 = tail call ptr %45(ptr noundef %44) #31
  %47 = icmp eq ptr %42, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %39
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12315, ptr noundef nonnull @.str.5) #31
  br label %100

49:                                               ; preds = %39
  %50 = getelementptr inbounds %struct.tree_list, ptr %42, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = icmp ne ptr %51, null
  %53 = icmp ne ptr %44, null
  %54 = and i1 %53, %52
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12315, ptr noundef nonnull @.str.5) #31
  %56 = load ptr, ptr %50, align 8, !tbaa !17
  br label %57

57:                                               ; preds = %49, %55
  %58 = phi ptr [ %51, %49 ], [ %56, %55 ]
  %59 = icmp ne ptr %58, null
  %60 = and i1 %53, %59
  br i1 %60, label %61, label %100

61:                                               ; preds = %57
  %62 = icmp eq ptr %46, null
  br i1 %62, label %99, label %63

63:                                               ; preds = %61
  br i1 %25, label %80, label %64

64:                                               ; preds = %63
  %65 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 16647, ptr %65, align 8, !tbaa !185
  %66 = icmp eq ptr %65, %26
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %68

68:                                               ; preds = %67, %64
  %69 = getelementptr inbounds %struct.die_struct, ptr %65, i64 0, i32 3
  store ptr %26, ptr %69, align 8, !tbaa !174
  %70 = load ptr, ptr %37, align 8, !tbaa !175
  %71 = icmp eq ptr %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.die_struct, ptr %70, i64 0, i32 5
  %74 = load ptr, ptr %73, align 8, !tbaa !176
  %75 = getelementptr inbounds %struct.die_struct, ptr %65, i64 0, i32 5
  store ptr %74, ptr %75, align 8, !tbaa !176
  br label %78

76:                                               ; preds = %68
  %77 = getelementptr inbounds %struct.die_struct, ptr %65, i64 0, i32 5
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi ptr [ %77, %76 ], [ %73, %72 ]
  store ptr %65, ptr %79, align 8, !tbaa !176
  store ptr %65, ptr %37, align 8, !tbaa !175
  br label %86

80:                                               ; preds = %63
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12448, ptr noundef nonnull @.str.5) #31
  %81 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 16647, ptr %81, align 8, !tbaa !185
  %82 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %81, ptr %82, align 8, !tbaa !173
  %83 = getelementptr inbounds %struct.limbo_die_struct, ptr %82, i64 0, i32 1
  store ptr %58, ptr %83, align 8, !tbaa !177
  %84 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %85 = getelementptr inbounds %struct.limbo_die_struct, ptr %82, i64 0, i32 2
  store ptr %84, ptr %85, align 8, !tbaa !171
  store ptr %82, ptr @limbo_die_list, align 8, !tbaa !6
  br label %86

86:                                               ; preds = %78, %80
  %87 = phi ptr [ %65, %78 ], [ %81, %80 ]
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %87, ptr noundef nonnull %58)
  %88 = getelementptr inbounds %struct.tree_vec, ptr %46, i64 0, i32 1
  %89 = load i32, ptr %88, align 8, !tbaa !17
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %100

91:                                               ; preds = %86, %91
  %92 = phi i64 [ %95, %91 ], [ 0, %86 ]
  %93 = getelementptr inbounds %struct.tree_vec, ptr %46, i64 0, i32 2, i64 %92
  %94 = load ptr, ptr %93, align 8, !tbaa !17
  tail call fastcc void @generic_parameter_die(ptr noundef nonnull %58, ptr noundef %94, i8 noundef zeroext 0, ptr noundef nonnull %87)
  %95 = add nuw nsw i64 %92, 1
  %96 = load i32, ptr %88, align 8, !tbaa !17
  %97 = sext i32 %96 to i64
  %98 = icmp slt i64 %95, %97
  br i1 %98, label %91, label %100, !llvm.loop !396

99:                                               ; preds = %61
  tail call fastcc void @generic_parameter_die(ptr noundef nonnull %58, ptr noundef nonnull %44, i8 noundef zeroext 1, ptr noundef %26)
  br label %100

100:                                              ; preds = %91, %86, %48, %99, %57
  %101 = add nuw nsw i64 %40, 1
  %102 = icmp eq i64 %101, %38
  br i1 %102, label %103, label %39, !llvm.loop !397

103:                                              ; preds = %100, %30, %24, %1, %8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_formal_types_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca [15 x i8], align 1
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 29
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi ptr [ %9, %7 ], [ null, %2 ]
  %14 = phi ptr [ %11, %7 ], [ %0, %2 ]
  %15 = getelementptr inbounds %struct.tree_type, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %85, label %18

18:                                               ; preds = %12, %81
  %19 = phi ptr [ %83, %81 ], [ %13, %12 ]
  %20 = phi ptr [ %82, %81 ], [ %16, %12 ]
  %21 = getelementptr inbounds %struct.tree_list, ptr %20, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %85, label %25

25:                                               ; preds = %18
  %26 = tail call fastcc ptr @gen_formal_parameter_die(ptr noundef %22, ptr noundef null, i8 noundef zeroext 1, ptr noundef %1)
  %27 = load i64, ptr %14, align 8
  %28 = and i64 %27, 65535
  %29 = icmp eq i64 %28, 21
  %30 = icmp eq ptr %20, %16
  %31 = and i1 %29, %30
  br i1 %31, label %45, label %32

32:                                               ; preds = %25
  %33 = icmp eq ptr %19, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  br label %81

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.tree_decl_common, ptr %19, i64 0, i32 2
  %39 = load i64, ptr %38, align 8
  %40 = and i64 %39, 4096
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  br label %77

45:                                               ; preds = %25, %37
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %3)
  %46 = icmp eq ptr %26, null
  br i1 %46, label %73, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.die_struct, ptr %26, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !6
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %52, ptr %48, align 8, !tbaa !157
  %53 = icmp eq ptr %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %51, %47
  %55 = phi ptr [ %52, %51 ], [ %49, %47 ]
  %56 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %55, i64 0, i32 1
  %57 = load i32, ptr %56, align 4, !tbaa !201
  %58 = load i32, ptr %55, align 8, !tbaa !159
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %54, %51
  %61 = phi ptr [ %55, %54 ], [ null, %51 ]
  %62 = tail call ptr @vec_gc_o_reserve(ptr noundef %61, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %62, ptr %48, align 8, !tbaa !6
  %63 = load i32, ptr %62, align 8, !tbaa !159
  br label %64

64:                                               ; preds = %60, %54
  %65 = phi i32 [ %58, %54 ], [ %63, %60 ]
  %66 = phi ptr [ %55, %54 ], [ %62, %60 ]
  %67 = add i32 %65, 1
  store i32 %67, ptr %66, align 8, !tbaa !159
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %68
  store i32 52, ptr %69, align 8, !tbaa.struct !179
  %70 = getelementptr inbounds i8, ptr %69, i64 8
  store i32 9, ptr %70, align 8, !tbaa.struct !202
  %71 = getelementptr inbounds i8, ptr %69, i64 16
  store i8 1, ptr %71, align 8, !tbaa.struct !203
  %72 = getelementptr inbounds i8, ptr %69, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %72, ptr noundef nonnull align 1 dereferenceable(15) %3, i64 15, i1 false), !tbaa.struct !362
  br label %73

73:                                               ; preds = %64, %45
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %3)
  %74 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = icmp eq ptr %19, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %42, %73
  %78 = phi ptr [ %44, %42 ], [ %75, %73 ]
  %79 = getelementptr inbounds %struct.tree_common, ptr %19, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  br label %81

81:                                               ; preds = %34, %73, %77
  %82 = phi ptr [ %78, %77 ], [ %75, %73 ], [ %36, %34 ]
  %83 = phi ptr [ %80, %77 ], [ null, %73 ], [ null, %34 ]
  %84 = icmp eq ptr %82, null
  br i1 %84, label %85, label %18

85:                                               ; preds = %81, %18, %12
  %86 = phi ptr [ null, %12 ], [ %22, %18 ], [ %22, %81 ]
  %87 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %88 = icmp eq ptr %86, %87
  br i1 %88, label %113, label %89

89:                                               ; preds = %85
  %90 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 24, ptr %90, align 8, !tbaa !185
  %91 = icmp eq ptr %1, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %89
  %93 = icmp eq ptr %90, %1
  br i1 %93, label %94, label %95

94:                                               ; preds = %92
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %95

95:                                               ; preds = %94, %92
  %96 = getelementptr inbounds %struct.die_struct, ptr %90, i64 0, i32 3
  store ptr %1, ptr %96, align 8, !tbaa !174
  %97 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %98 = load ptr, ptr %97, align 8, !tbaa !175
  %99 = icmp eq ptr %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.die_struct, ptr %98, i64 0, i32 5
  %102 = load ptr, ptr %101, align 8, !tbaa !176
  %103 = getelementptr inbounds %struct.die_struct, ptr %90, i64 0, i32 5
  store ptr %102, ptr %103, align 8, !tbaa !176
  br label %106

104:                                              ; preds = %95
  %105 = getelementptr inbounds %struct.die_struct, ptr %90, i64 0, i32 5
  br label %106

106:                                              ; preds = %104, %100
  %107 = phi ptr [ %105, %104 ], [ %101, %100 ]
  store ptr %90, ptr %107, align 8, !tbaa !176
  store ptr %90, ptr %97, align 8, !tbaa !175
  br label %113

108:                                              ; preds = %89
  %109 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %90, ptr %109, align 8, !tbaa !173
  %110 = getelementptr inbounds %struct.limbo_die_struct, ptr %109, i64 0, i32 1
  store ptr %14, ptr %110, align 8, !tbaa !177
  %111 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %112 = getelementptr inbounds %struct.limbo_die_struct, ptr %109, i64 0, i32 2
  store ptr %111, ptr %112, align 8, !tbaa !171
  store ptr %109, ptr @limbo_die_list, align 8, !tbaa !6
  br label %113

113:                                              ; preds = %108, %106, %85
  %114 = load ptr, ptr %15, align 8, !tbaa !17
  %115 = icmp eq ptr %114, null
  br i1 %115, label %125, label %116

116:                                              ; preds = %113, %121
  %117 = phi ptr [ %123, %121 ], [ %114, %113 ]
  %118 = getelementptr inbounds %struct.tree_list, ptr %117, i64 0, i32 2
  %119 = load ptr, ptr %118, align 8, !tbaa !17
  %120 = icmp eq ptr %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  tail call fastcc void @gen_type_die_with_usage(ptr noundef nonnull %119, ptr noundef %1, i32 noundef 1)
  %122 = getelementptr inbounds %struct.tree_common, ptr %117, i64 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = icmp eq ptr %123, null
  br i1 %124, label %125, label %116, !llvm.loop !398

125:                                              ; preds = %116, %121, %113
  ret void
}

declare ptr @tree_last(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @premark_used_types_helper(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #20 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = getelementptr i8, ptr %3, i64 88
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.die_struct, ptr %5, i64 0, i32 10
  store i32 1, ptr %8, align 4, !tbaa !399
  br label %9

9:                                                ; preds = %7, %2
  ret i32 1
}

declare ptr @decl_function_context(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_src_coords_attributes(ptr noundef %0, i32 %1) unnamed_addr #10 {
  %3 = alloca %struct.expanded_location, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #31
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %3, i32 noundef %1) #31
  %4 = load ptr, ptr %3, align 8, !tbaa !373
  %5 = load ptr, ptr @file_table_last_lookup, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = load ptr, ptr %5, align 8, !tbaa !124
  %9 = icmp eq ptr %8, %4
  br i1 %9, label %22, label %10

10:                                               ; preds = %7
  %11 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %8, ptr noundef nonnull dereferenceable(1) %4)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %10, %2
  %14 = load ptr, ptr @file_table, align 8, !tbaa !6
  %15 = call i32 @htab_hash_string(ptr noundef %4) #31
  %16 = call ptr @htab_find_slot_with_hash(ptr noundef %14, ptr noundef %4, i32 noundef %15, i32 noundef 1) #31
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = call ptr @ggc_alloc_stat(i64 noundef 16) #31
  store ptr %4, ptr %20, align 8, !tbaa !124
  %21 = getelementptr inbounds %struct.dwarf_file_data, ptr %20, i64 0, i32 1
  store i32 0, ptr %21, align 8, !tbaa !126
  store ptr %20, ptr %16, align 8, !tbaa !6
  br label %22

22:                                               ; preds = %7, %10, %13, %19
  %23 = phi ptr [ %20, %19 ], [ %17, %13 ], [ %5, %10 ], [ %5, %7 ]
  %24 = icmp eq ptr %0, null
  br i1 %24, label %76, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !6
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %30, ptr %26, align 8, !tbaa !157
  %31 = icmp eq ptr %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29, %25
  %33 = phi ptr [ %30, %29 ], [ %27, %25 ]
  %34 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %33, i64 0, i32 1
  %35 = load i32, ptr %34, align 4, !tbaa !201
  %36 = load i32, ptr %33, align 8, !tbaa !159
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %32, %29
  %39 = phi ptr [ %33, %32 ], [ null, %29 ]
  %40 = call ptr @vec_gc_o_reserve(ptr noundef %39, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %40, ptr %26, align 8, !tbaa !6
  %41 = load i32, ptr %40, align 8, !tbaa !159
  br label %42

42:                                               ; preds = %38, %32
  %43 = phi i32 [ %36, %32 ], [ %41, %38 ]
  %44 = phi ptr [ %33, %32 ], [ %40, %38 ]
  %45 = add i32 %43, 1
  store i32 %45, ptr %44, align 8, !tbaa !159
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %44, i64 0, i32 2, i64 %46
  store i32 58, ptr %47, align 8, !tbaa.struct !179
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i32 16, ptr %48, align 8, !tbaa.struct !202
  %49 = getelementptr inbounds i8, ptr %47, i64 16
  store ptr %23, ptr %49, align 8, !tbaa.struct !203
  %50 = getelementptr inbounds %struct.expanded_location, ptr %3, i64 0, i32 1
  %51 = load i32, ptr %50, align 8, !tbaa !375
  %52 = sext i32 %51 to i64
  %53 = load ptr, ptr %26, align 8, !tbaa !6
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %42
  %56 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %56, ptr %26, align 8, !tbaa !157
  %57 = icmp eq ptr %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %55, %42
  %59 = phi ptr [ %56, %55 ], [ %53, %42 ]
  %60 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %59, i64 0, i32 1
  %61 = load i32, ptr %60, align 4, !tbaa !201
  %62 = load i32, ptr %59, align 8, !tbaa !159
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %58, %55
  %65 = phi ptr [ %59, %58 ], [ null, %55 ]
  %66 = call ptr @vec_gc_o_reserve(ptr noundef %65, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %66, ptr %26, align 8, !tbaa !6
  %67 = load i32, ptr %66, align 8, !tbaa !159
  br label %68

68:                                               ; preds = %64, %58
  %69 = phi i32 [ %62, %58 ], [ %67, %64 ]
  %70 = phi ptr [ %59, %58 ], [ %66, %64 ]
  %71 = add i32 %69, 1
  store i32 %71, ptr %70, align 8, !tbaa !159
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %70, i64 0, i32 2, i64 %72
  store i32 59, ptr %73, align 8, !tbaa.struct !179
  %74 = getelementptr inbounds i8, ptr %73, i64 8
  store i32 6, ptr %74, align 8, !tbaa.struct !202
  %75 = getelementptr inbounds i8, ptr %73, i64 16
  store i64 %52, ptr %75, align 8, !tbaa.struct !203
  br label %76

76:                                               ; preds = %22, %68
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #31
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc zeroext i8 @is_fortran() unnamed_addr #2 {
  %1 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %2

2:                                                ; preds = %36, %0
  %3 = phi ptr [ %1, %0 ], [ %37, %36 ]
  %4 = icmp eq ptr %3, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !157
  %8 = icmp eq ptr %7, null
  br i1 %8, label %48, label %9

9:                                                ; preds = %5, %30
  %10 = phi ptr [ %31, %30 ], [ %7, %5 ]
  %11 = phi ptr [ %32, %30 ], [ %7, %5 ]
  %12 = phi i64 [ %34, %30 ], [ 0, %5 ]
  %13 = phi ptr [ %33, %30 ], [ null, %5 ]
  %14 = load i32, ptr %11, align 8, !tbaa !159
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %12, %15
  br i1 %16, label %17, label %36

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12
  %19 = load i32, ptr %18, align 8, !tbaa !161
  switch i32 %19, label %30 [
    i32 19, label %39
    i32 71, label %20
    i32 49, label %20
  ]

20:                                               ; preds = %17, %17
  %21 = getelementptr i8, ptr %18, i64 8
  %22 = load i32, ptr %21, align 8, !tbaa !163
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %25 = load ptr, ptr %6, align 8, !tbaa !157
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi ptr [ %10, %20 ], [ %25, %24 ]
  %28 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  br label %30

30:                                               ; preds = %17, %26
  %31 = phi ptr [ %27, %26 ], [ %10, %17 ]
  %32 = phi ptr [ %27, %26 ], [ %11, %17 ]
  %33 = phi ptr [ %29, %26 ], [ %13, %17 ]
  %34 = add nuw nsw i64 %12, 1
  %35 = icmp eq ptr %32, null
  br i1 %35, label %36, label %9, !llvm.loop !164

36:                                               ; preds = %30, %9
  %37 = phi ptr [ %33, %30 ], [ %13, %9 ]
  %38 = icmp eq ptr %37, null
  br i1 %38, label %48, label %2

39:                                               ; preds = %17
  %40 = getelementptr i8, ptr %18, i64 8
  %41 = load i32, ptr %40, align 8, !tbaa !163
  %42 = icmp eq i32 %41, 6
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %44

44:                                               ; preds = %43, %39
  %45 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1, i32 1
  %46 = load i64, ptr %45, align 8, !tbaa !17
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %2, %5, %36, %44
  %49 = phi i32 [ %47, %44 ], [ 0, %36 ], [ 0, %5 ], [ 0, %2 ]
  %50 = add i32 %49, -7
  %51 = icmp ult i32 %50, 2
  %52 = icmp eq i32 %49, 14
  %53 = or i1 %52, %51
  %54 = zext i1 %53 to i8
  ret i8 %54
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @generic_parameter_die(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, ptr noundef %3) unnamed_addr #10 {
  %5 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp ne ptr %6, null
  %8 = icmp ne ptr %1, null
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %214

10:                                               ; preds = %4
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %61 [
    i16 34, label %13
    i16 35, label %37
  ]

13:                                               ; preds = %10
  %14 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 48, ptr %14, align 8, !tbaa !185
  %15 = icmp eq ptr %3, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %13
  %17 = icmp eq ptr %14, %3
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %19

19:                                               ; preds = %18, %16
  %20 = getelementptr inbounds %struct.die_struct, ptr %14, i64 0, i32 3
  store ptr %3, ptr %20, align 8, !tbaa !174
  %21 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %22 = load ptr, ptr %21, align 8, !tbaa !175
  %23 = icmp eq ptr %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.die_struct, ptr %22, i64 0, i32 5
  %26 = load ptr, ptr %25, align 8, !tbaa !176
  %27 = getelementptr inbounds %struct.die_struct, ptr %14, i64 0, i32 5
  store ptr %26, ptr %27, align 8, !tbaa !176
  br label %30

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.die_struct, ptr %14, i64 0, i32 5
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi ptr [ %29, %28 ], [ %25, %24 ]
  store ptr %14, ptr %31, align 8, !tbaa !176
  store ptr %14, ptr %21, align 8, !tbaa !175
  br label %90

32:                                               ; preds = %13
  %33 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %14, ptr %33, align 8, !tbaa !173
  %34 = getelementptr inbounds %struct.limbo_die_struct, ptr %33, i64 0, i32 1
  store ptr %0, ptr %34, align 8, !tbaa !177
  %35 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %36 = getelementptr inbounds %struct.limbo_die_struct, ptr %33, i64 0, i32 2
  store ptr %35, ptr %36, align 8, !tbaa !171
  store ptr %33, ptr @limbo_die_list, align 8, !tbaa !6
  br label %90

37:                                               ; preds = %10
  %38 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 47, ptr %38, align 8, !tbaa !185
  %39 = icmp eq ptr %3, null
  br i1 %39, label %56, label %40

40:                                               ; preds = %37
  %41 = icmp eq ptr %38, %3
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %43

43:                                               ; preds = %42, %40
  %44 = getelementptr inbounds %struct.die_struct, ptr %38, i64 0, i32 3
  store ptr %3, ptr %44, align 8, !tbaa !174
  %45 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %46 = load ptr, ptr %45, align 8, !tbaa !175
  %47 = icmp eq ptr %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.die_struct, ptr %46, i64 0, i32 5
  %50 = load ptr, ptr %49, align 8, !tbaa !176
  %51 = getelementptr inbounds %struct.die_struct, ptr %38, i64 0, i32 5
  store ptr %50, ptr %51, align 8, !tbaa !176
  br label %54

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.die_struct, ptr %38, i64 0, i32 5
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi ptr [ %53, %52 ], [ %49, %48 ]
  store ptr %38, ptr %55, align 8, !tbaa !176
  store ptr %38, ptr %45, align 8, !tbaa !175
  br label %90

56:                                               ; preds = %37
  %57 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %38, ptr %57, align 8, !tbaa !173
  %58 = getelementptr inbounds %struct.limbo_die_struct, ptr %57, i64 0, i32 1
  store ptr %0, ptr %58, align 8, !tbaa !177
  %59 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.limbo_die_struct, ptr %57, i64 0, i32 2
  store ptr %59, ptr %60, align 8, !tbaa !171
  store ptr %57, ptr @limbo_die_list, align 8, !tbaa !6
  br label %90

61:                                               ; preds = %10
  %62 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 4), align 8, !tbaa !400
  %63 = tail call zeroext i8 %62(ptr noundef nonnull %0) #31
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %89, label %65

65:                                               ; preds = %61
  %66 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 16646, ptr %66, align 8, !tbaa !185
  %67 = icmp eq ptr %3, null
  br i1 %67, label %84, label %68

68:                                               ; preds = %65
  %69 = icmp eq ptr %66, %3
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %71

71:                                               ; preds = %70, %68
  %72 = getelementptr inbounds %struct.die_struct, ptr %66, i64 0, i32 3
  store ptr %3, ptr %72, align 8, !tbaa !174
  %73 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %74 = load ptr, ptr %73, align 8, !tbaa !175
  %75 = icmp eq ptr %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 5
  %78 = load ptr, ptr %77, align 8, !tbaa !176
  %79 = getelementptr inbounds %struct.die_struct, ptr %66, i64 0, i32 5
  store ptr %78, ptr %79, align 8, !tbaa !176
  br label %82

80:                                               ; preds = %71
  %81 = getelementptr inbounds %struct.die_struct, ptr %66, i64 0, i32 5
  br label %82

82:                                               ; preds = %80, %76
  %83 = phi ptr [ %81, %80 ], [ %77, %76 ]
  store ptr %66, ptr %83, align 8, !tbaa !176
  store ptr %66, ptr %73, align 8, !tbaa !175
  br label %90

84:                                               ; preds = %65
  %85 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %66, ptr %85, align 8, !tbaa !173
  %86 = getelementptr inbounds %struct.limbo_die_struct, ptr %85, i64 0, i32 1
  store ptr %0, ptr %86, align 8, !tbaa !177
  %87 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %88 = getelementptr inbounds %struct.limbo_die_struct, ptr %85, i64 0, i32 2
  store ptr %87, ptr %88, align 8, !tbaa !171
  store ptr %85, ptr @limbo_die_list, align 8, !tbaa !6
  br label %90

89:                                               ; preds = %61
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12374, ptr noundef nonnull @.str.5) #31
  br label %214

90:                                               ; preds = %30, %32, %54, %56, %82, %84
  %91 = phi ptr [ %66, %84 ], [ %66, %82 ], [ %38, %56 ], [ %38, %54 ], [ %14, %32 ], [ %14, %30 ]
  %92 = icmp eq i8 %2, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %90
  %94 = load ptr, ptr %5, align 8, !tbaa !17
  %95 = getelementptr inbounds %struct.tree_identifier, ptr %94, i64 0, i32 1
  %96 = load ptr, ptr %95, align 8, !tbaa !17
  %97 = icmp eq ptr %96, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %93
  tail call fastcc void @add_AT_string(ptr noundef nonnull %91, i32 noundef 3, ptr noundef nonnull %96)
  br label %100

99:                                               ; preds = %93
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12388, ptr noundef nonnull @.str.5) #31
  tail call fastcc void @add_AT_string(ptr noundef nonnull %91, i32 noundef 3, ptr noundef null)
  br label %100

100:                                              ; preds = %99, %98, %90
  %101 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 4), align 8, !tbaa !400
  %102 = tail call zeroext i8 %101(ptr noundef nonnull %0) #31
  %103 = icmp eq i8 %102, 0
  %104 = load i64, ptr %1, align 8
  %105 = and i64 %104, 65535
  %106 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !17
  %108 = icmp eq i32 %107, 2
  br i1 %103, label %109, label %177

109:                                              ; preds = %100
  br i1 %108, label %114, label %110

110:                                              ; preds = %109
  %111 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %112 = load ptr, ptr %111, align 8, !tbaa !17
  %113 = load i64, ptr %112, align 8
  br label %114

114:                                              ; preds = %109, %110
  %115 = phi i64 [ %113, %110 ], [ %104, %109 ]
  %116 = phi ptr [ %112, %110 ], [ %1, %109 ]
  %117 = trunc i64 %115 to i32
  %118 = and i32 %117, 65535
  %119 = and i32 %117, 65534
  %120 = icmp eq i32 %119, 8
  %121 = icmp eq i32 %118, 11
  %122 = or i1 %120, %121
  br i1 %122, label %123, label %135

123:                                              ; preds = %114
  %124 = getelementptr inbounds %struct.tree_common, ptr %116, i64 0, i32 2
  %125 = load ptr, ptr %124, align 8, !tbaa !17
  %126 = icmp eq ptr %125, null
  br i1 %126, label %135, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.tree_type, ptr %116, i64 0, i32 12
  %129 = load ptr, ptr %128, align 8, !tbaa !17
  %130 = icmp eq ptr %129, null
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = load i64, ptr %125, align 8
  %133 = trunc i64 %132 to i32
  %134 = and i32 %133, 65535
  br label %135

135:                                              ; preds = %131, %127, %123, %114
  %136 = phi i64 [ %132, %131 ], [ %115, %127 ], [ %115, %123 ], [ %115, %114 ]
  %137 = phi ptr [ %125, %131 ], [ %116, %127 ], [ %116, %123 ], [ %116, %114 ]
  %138 = phi i32 [ %134, %131 ], [ %118, %127 ], [ %118, %123 ], [ %118, %114 ]
  %139 = trunc i32 %138 to i16
  switch i16 %139, label %140 [
    i16 19, label %187
    i16 0, label %187
  ]

140:                                              ; preds = %135
  %141 = trunc i64 %136 to i32
  %142 = lshr i32 %141, 20
  %143 = and i32 %142, 1
  %144 = and i32 %117, 524288
  %145 = icmp eq i32 %144, 0
  %146 = lshr i32 %141, 19
  %147 = and i32 %146, 1
  %148 = select i1 %145, i32 %147, i32 1
  %149 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %137, i32 noundef %143, i32 noundef %148, ptr noundef %3)
  %150 = icmp eq ptr %149, null
  br i1 %150, label %187, label %151

151:                                              ; preds = %140
  %152 = getelementptr inbounds %struct.die_struct, ptr %91, i64 0, i32 2
  %153 = load ptr, ptr %152, align 8, !tbaa !6
  %154 = icmp eq ptr %153, null
  br i1 %154, label %155, label %158

155:                                              ; preds = %151
  %156 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %156, ptr %152, align 8, !tbaa !157
  %157 = icmp eq ptr %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %155, %151
  %159 = phi ptr [ %156, %155 ], [ %153, %151 ]
  %160 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %159, i64 0, i32 1
  %161 = load i32, ptr %160, align 4, !tbaa !201
  %162 = load i32, ptr %159, align 8, !tbaa !159
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %164, label %168

164:                                              ; preds = %158, %155
  %165 = phi ptr [ %159, %158 ], [ null, %155 ]
  %166 = tail call ptr @vec_gc_o_reserve(ptr noundef %165, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %166, ptr %152, align 8, !tbaa !6
  %167 = load i32, ptr %166, align 8, !tbaa !159
  br label %168

168:                                              ; preds = %158, %164
  %169 = phi i32 [ %162, %158 ], [ %167, %164 ]
  %170 = phi ptr [ %159, %158 ], [ %166, %164 ]
  %171 = add i32 %169, 1
  store i32 %171, ptr %170, align 8, !tbaa !159
  %172 = zext i32 %169 to i64
  %173 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %170, i64 0, i32 2, i64 %172
  store i32 73, ptr %173, align 8, !tbaa.struct !179
  %174 = getelementptr inbounds i8, ptr %173, i64 8
  store i32 10, ptr %174, align 8, !tbaa.struct !202
  %175 = getelementptr inbounds i8, ptr %173, i64 16
  store ptr %149, ptr %175, align 8, !tbaa.struct !203
  %176 = getelementptr inbounds i8, ptr %173, i64 24
  store i32 0, ptr %176, align 8, !tbaa.struct !294
  br label %187

177:                                              ; preds = %100
  br i1 %108, label %178, label %181

178:                                              ; preds = %177
  %179 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 12
  %180 = load ptr, ptr %179, align 8, !tbaa !17
  br label %181

181:                                              ; preds = %177, %178
  %182 = phi ptr [ %180, %178 ], [ %1, %177 ]
  %183 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %184 = tail call ptr %183(ptr noundef %182, i32 noundef 1) #31
  %185 = icmp eq ptr %184, null
  br i1 %185, label %187, label %186

186:                                              ; preds = %181
  tail call fastcc void @add_AT_string(ptr noundef nonnull %91, i32 noundef 8464, ptr noundef nonnull %184)
  br label %187

187:                                              ; preds = %168, %140, %135, %135, %181, %186
  %188 = load i64, ptr %0, align 8
  %189 = and i64 %188, 65535
  %190 = icmp eq i64 %189, 34
  br i1 %190, label %191, label %214

191:                                              ; preds = %187
  %192 = load ptr, ptr @tmpl_value_parm_die_table, align 8, !tbaa !6
  %193 = icmp eq ptr %192, null
  br i1 %193, label %194, label %197

194:                                              ; preds = %191
  %195 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 32, i64 noundef 8, i64 noundef 16) #31
  store ptr %195, ptr @tmpl_value_parm_die_table, align 8, !tbaa !6
  %196 = icmp eq ptr %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %194, %191
  %198 = phi ptr [ %195, %194 ], [ %192, %191 ]
  %199 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %198, i64 0, i32 1
  %200 = load i32, ptr %199, align 4, !tbaa !401
  %201 = load i32, ptr %198, align 8, !tbaa !150
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %203, label %207

203:                                              ; preds = %197, %194
  %204 = phi ptr [ %198, %197 ], [ null, %194 ]
  %205 = tail call ptr @vec_gc_o_reserve(ptr noundef %204, i32 noundef 1, i64 noundef 8, i64 noundef 16) #31
  store ptr %205, ptr @tmpl_value_parm_die_table, align 8, !tbaa !6
  %206 = load i32, ptr %205, align 8, !tbaa !150
  br label %207

207:                                              ; preds = %197, %203
  %208 = phi i32 [ %201, %197 ], [ %206, %203 ]
  %209 = phi ptr [ %198, %197 ], [ %205, %203 ]
  %210 = add i32 %208, 1
  store i32 %210, ptr %209, align 8, !tbaa !150
  %211 = zext i32 %208 to i64
  %212 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %209, i64 0, i32 2, i64 %211
  store ptr %91, ptr %212, align 8, !tbaa.struct !253
  %213 = getelementptr inbounds i8, ptr %212, i64 8
  store ptr %1, ptr %213, align 8, !tbaa.struct !254
  br label %214

214:                                              ; preds = %89, %207, %187, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @gen_formal_parameter_die(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, ptr noundef %3) unnamed_addr #10 {
  %5 = alloca [15 x i8], align 1
  %6 = icmp ne ptr %0, null
  %7 = select i1 %6, ptr %0, ptr %1
  %8 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 5, ptr %8, align 8, !tbaa !185
  %9 = icmp eq ptr %3, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %4
  %11 = icmp eq ptr %8, %3
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %13

13:                                               ; preds = %12, %10
  %14 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 3
  store ptr %3, ptr %14, align 8, !tbaa !174
  %15 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !175
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !176
  %21 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 5
  store ptr %20, ptr %21, align 8, !tbaa !176
  br label %24

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 5
  br label %24

24:                                               ; preds = %22, %18
  %25 = phi ptr [ %23, %22 ], [ %19, %18 ]
  store ptr %8, ptr %25, align 8, !tbaa !176
  store ptr %8, ptr %15, align 8, !tbaa !175
  br label %31

26:                                               ; preds = %4
  %27 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %8, ptr %27, align 8, !tbaa !173
  %28 = getelementptr inbounds %struct.limbo_die_struct, ptr %27, i64 0, i32 1
  store ptr %0, ptr %28, align 8, !tbaa !177
  %29 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.limbo_die_struct, ptr %27, i64 0, i32 2
  store ptr %29, ptr %30, align 8, !tbaa !171
  store ptr %27, ptr @limbo_die_list, align 8, !tbaa !6
  br label %31

31:                                               ; preds = %24, %26
  %32 = load i64, ptr %7, align 8
  %33 = and i64 %32, 65535
  %34 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !17
  switch i32 %35, label %342 [
    i32 3, label %36
    i32 2, label %284
  ]

36:                                               ; preds = %31
  %37 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %33, i64 10
  %38 = load i8, ptr %37, align 2, !tbaa !17
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %59, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.tree_decl_common, ptr %7, i64 0, i32 2
  %42 = load i64, ptr %41, align 8
  %43 = and i64 %42, 2048
  %44 = icmp ne i64 %43, 0
  %45 = getelementptr inbounds %struct.tree_decl_common, ptr %7, i64 0, i32 7
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  %47 = icmp eq ptr %46, %7
  %48 = select i1 %44, i1 %47, i1 false
  br i1 %48, label %59, label %49

49:                                               ; preds = %40
  %50 = icmp eq ptr %46, null
  %51 = select i1 %50, ptr %7, ptr %46
  %52 = getelementptr inbounds %struct.tree_decl_common, ptr %51, i64 0, i32 7
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = icmp eq ptr %53, null
  %55 = icmp eq ptr %53, %51
  %56 = or i1 %54, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %49
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %58 = load ptr, ptr %45, align 8, !tbaa !17
  br label %59

59:                                               ; preds = %36, %40, %49, %57
  %60 = phi ptr [ null, %36 ], [ %46, %49 ], [ %58, %57 ], [ null, %40 ]
  %61 = icmp ne ptr %60, null
  %62 = select i1 %6, i1 true, i1 %61
  %63 = select i1 %62, ptr %60, ptr %1
  %64 = icmp eq ptr %63, null
  br i1 %64, label %123, label %65

65:                                               ; preds = %59
  %66 = load i64, ptr %63, align 8
  %67 = and i64 %66, 65535
  %68 = icmp eq i64 %67, 29
  br i1 %68, label %81, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %67
  %71 = load i32, ptr %70, align 4, !tbaa !17
  %72 = icmp eq i32 %71, 2
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.tree_common, ptr %63, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  br label %76

76:                                               ; preds = %73, %69
  %77 = phi ptr [ %75, %73 ], [ %63, %69 ]
  %78 = tail call ptr @decl_function_context(ptr noundef %77) #31
  %79 = icmp eq ptr %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @dwarf2out_abstract_function(ptr noundef nonnull %78)
  br label %81

81:                                               ; preds = %80, %76, %65
  %82 = load i64, ptr %63, align 8
  %83 = and i64 %82, 65535
  %84 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %83
  %85 = load i32, ptr %84, align 4, !tbaa !17
  switch i32 %85, label %269 [
    i32 3, label %86
    i32 2, label %91
  ]

86:                                               ; preds = %81
  %87 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %88 = getelementptr inbounds %struct.tree_decl_minimal, ptr %63, i64 0, i32 2
  %89 = load i32, ptr %88, align 4, !tbaa !17
  %90 = tail call ptr @htab_find_with_hash(ptr noundef %87, ptr noundef nonnull %63, i32 noundef %89) #31
  br label %94

91:                                               ; preds = %81
  %92 = getelementptr i8, ptr %63, i64 88
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  br label %94

94:                                               ; preds = %91, %86
  %95 = phi ptr [ %90, %86 ], [ %93, %91 ]
  %96 = icmp eq ptr %95, null
  br i1 %96, label %269, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !6
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %102, ptr %98, align 8, !tbaa !157
  %103 = icmp eq ptr %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %101, %97
  %105 = phi ptr [ %102, %101 ], [ %99, %97 ]
  %106 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %105, i64 0, i32 1
  %107 = load i32, ptr %106, align 4, !tbaa !201
  %108 = load i32, ptr %105, align 8, !tbaa !159
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %114

110:                                              ; preds = %104, %101
  %111 = phi ptr [ %105, %104 ], [ null, %101 ]
  %112 = tail call ptr @vec_gc_o_reserve(ptr noundef %111, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %112, ptr %98, align 8, !tbaa !6
  %113 = load i32, ptr %112, align 8, !tbaa !159
  br label %114

114:                                              ; preds = %104, %110
  %115 = phi i32 [ %108, %104 ], [ %113, %110 ]
  %116 = phi ptr [ %105, %104 ], [ %112, %110 ]
  %117 = add i32 %115, 1
  store i32 %117, ptr %116, align 8, !tbaa !159
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %116, i64 0, i32 2, i64 %118
  store i32 49, ptr %119, align 8, !tbaa.struct !179
  %120 = getelementptr inbounds i8, ptr %119, i64 8
  store i32 10, ptr %120, align 8, !tbaa.struct !202
  %121 = getelementptr inbounds i8, ptr %119, i64 16
  store ptr %95, ptr %121, align 8, !tbaa.struct !203
  %122 = getelementptr inbounds i8, ptr %119, i64 24
  store i32 0, ptr %122, align 8, !tbaa.struct !294
  br label %269

123:                                              ; preds = %59
  %124 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %125 = load ptr, ptr %124, align 8, !tbaa !17
  %126 = icmp eq i8 %2, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %123
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %8, ptr noundef nonnull %0)
  br label %128

128:                                              ; preds = %127, %123
  %129 = load i64, ptr %0, align 8
  %130 = trunc i64 %129 to i16
  switch i16 %130, label %171 [
    i16 34, label %131
    i16 36, label %131
    i16 32, label %131
  ]

131:                                              ; preds = %128, %128, %128
  %132 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %133 = load i64, ptr %132, align 8
  %134 = and i64 %133, 268435456
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %171, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %struct.tree_common, ptr %125, i64 0, i32 2
  %138 = load ptr, ptr %137, align 8, !tbaa !17
  %139 = load i64, ptr %138, align 8
  %140 = trunc i64 %139 to i32
  %141 = and i32 %140, 65535
  %142 = and i32 %140, 65534
  %143 = icmp eq i32 %142, 8
  %144 = icmp eq i32 %141, 11
  %145 = or i1 %143, %144
  br i1 %145, label %146, label %158

146:                                              ; preds = %136
  %147 = getelementptr inbounds %struct.tree_common, ptr %138, i64 0, i32 2
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = icmp eq ptr %148, null
  br i1 %149, label %158, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 12
  %152 = load ptr, ptr %151, align 8, !tbaa !17
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  %155 = load i64, ptr %148, align 8
  %156 = trunc i64 %155 to i32
  %157 = and i32 %156, 65535
  br label %158

158:                                              ; preds = %154, %150, %146, %136
  %159 = phi i64 [ %155, %154 ], [ %139, %150 ], [ %139, %146 ], [ %139, %136 ]
  %160 = phi ptr [ %148, %154 ], [ %138, %150 ], [ %138, %146 ], [ %138, %136 ]
  %161 = phi i32 [ %157, %154 ], [ %141, %150 ], [ %141, %146 ], [ %141, %136 ]
  %162 = trunc i32 %161 to i16
  switch i16 %162, label %163 [
    i16 19, label %238
    i16 0, label %238
  ]

163:                                              ; preds = %158
  %164 = trunc i64 %159 to i32
  %165 = lshr i32 %164, 20
  %166 = and i32 %165, 1
  %167 = lshr i32 %164, 19
  %168 = and i32 %167, 1
  %169 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %160, i32 noundef %166, i32 noundef %168, ptr noundef %3)
  %170 = icmp eq ptr %169, null
  br i1 %170, label %238, label %211

171:                                              ; preds = %128, %131
  %172 = trunc i64 %129 to i32
  %173 = load i64, ptr %125, align 8
  %174 = trunc i64 %173 to i32
  %175 = and i32 %174, 65535
  %176 = and i32 %174, 65534
  %177 = icmp eq i32 %176, 8
  %178 = icmp eq i32 %175, 11
  %179 = or i1 %177, %178
  br i1 %179, label %180, label %192

180:                                              ; preds = %171
  %181 = getelementptr inbounds %struct.tree_common, ptr %125, i64 0, i32 2
  %182 = load ptr, ptr %181, align 8, !tbaa !17
  %183 = icmp eq ptr %182, null
  br i1 %183, label %192, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.tree_type, ptr %125, i64 0, i32 12
  %186 = load ptr, ptr %185, align 8, !tbaa !17
  %187 = icmp eq ptr %186, null
  br i1 %187, label %188, label %192

188:                                              ; preds = %184
  %189 = load i64, ptr %182, align 8
  %190 = trunc i64 %189 to i32
  %191 = and i32 %190, 65535
  br label %192

192:                                              ; preds = %188, %184, %180, %171
  %193 = phi i64 [ %189, %188 ], [ %173, %184 ], [ %173, %180 ], [ %173, %171 ]
  %194 = phi ptr [ %182, %188 ], [ %125, %184 ], [ %125, %180 ], [ %125, %171 ]
  %195 = phi i32 [ %191, %188 ], [ %175, %184 ], [ %175, %180 ], [ %175, %171 ]
  %196 = trunc i32 %195 to i16
  switch i16 %196, label %197 [
    i16 19, label %238
    i16 0, label %238
  ]

197:                                              ; preds = %192
  %198 = and i32 %172, 1048576
  %199 = icmp eq i32 %198, 0
  %200 = trunc i64 %193 to i32
  %201 = lshr i32 %200, 20
  %202 = and i32 %201, 1
  %203 = select i1 %199, i32 %202, i32 1
  %204 = and i32 %172, 524288
  %205 = icmp eq i32 %204, 0
  %206 = lshr i32 %200, 19
  %207 = and i32 %206, 1
  %208 = select i1 %205, i32 %207, i32 1
  %209 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %194, i32 noundef %203, i32 noundef %208, ptr noundef %3)
  %210 = icmp eq ptr %209, null
  br i1 %210, label %238, label %211

211:                                              ; preds = %163, %197
  %212 = phi ptr [ %169, %163 ], [ %209, %197 ]
  %213 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %214 = load ptr, ptr %213, align 8, !tbaa !6
  %215 = icmp eq ptr %214, null
  br i1 %215, label %216, label %219

216:                                              ; preds = %211
  %217 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %217, ptr %213, align 8, !tbaa !157
  %218 = icmp eq ptr %217, null
  br i1 %218, label %225, label %219

219:                                              ; preds = %216, %211
  %220 = phi ptr [ %217, %216 ], [ %214, %211 ]
  %221 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %220, i64 0, i32 1
  %222 = load i32, ptr %221, align 4, !tbaa !201
  %223 = load i32, ptr %220, align 8, !tbaa !159
  %224 = icmp eq i32 %222, %223
  br i1 %224, label %225, label %229

225:                                              ; preds = %219, %216
  %226 = phi ptr [ %220, %219 ], [ null, %216 ]
  %227 = tail call ptr @vec_gc_o_reserve(ptr noundef %226, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %227, ptr %213, align 8, !tbaa !6
  %228 = load i32, ptr %227, align 8, !tbaa !159
  br label %229

229:                                              ; preds = %219, %225
  %230 = phi i32 [ %223, %219 ], [ %228, %225 ]
  %231 = phi ptr [ %220, %219 ], [ %227, %225 ]
  %232 = add i32 %230, 1
  store i32 %232, ptr %231, align 8, !tbaa !159
  %233 = zext i32 %230 to i64
  %234 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %231, i64 0, i32 2, i64 %233
  store i32 73, ptr %234, align 8, !tbaa.struct !179
  %235 = getelementptr inbounds i8, ptr %234, i64 8
  store i32 10, ptr %235, align 8, !tbaa.struct !202
  %236 = getelementptr inbounds i8, ptr %234, i64 16
  store ptr %212, ptr %236, align 8, !tbaa.struct !203
  %237 = getelementptr inbounds i8, ptr %234, i64 24
  store i32 0, ptr %237, align 8, !tbaa.struct !294
  br label %238

238:                                              ; preds = %229, %197, %192, %192, %163, %158, %158
  %239 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %240 = load i64, ptr %239, align 8
  %241 = and i64 %240, 4096
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %269, label %243

243:                                              ; preds = %238
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %5)
  %244 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %245 = load ptr, ptr %244, align 8, !tbaa !6
  %246 = icmp eq ptr %245, null
  br i1 %246, label %247, label %250

247:                                              ; preds = %243
  %248 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %248, ptr %244, align 8, !tbaa !157
  %249 = icmp eq ptr %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %247, %243
  %251 = phi ptr [ %248, %247 ], [ %245, %243 ]
  %252 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %251, i64 0, i32 1
  %253 = load i32, ptr %252, align 4, !tbaa !201
  %254 = load i32, ptr %251, align 8, !tbaa !159
  %255 = icmp eq i32 %253, %254
  br i1 %255, label %256, label %260

256:                                              ; preds = %250, %247
  %257 = phi ptr [ %251, %250 ], [ null, %247 ]
  %258 = tail call ptr @vec_gc_o_reserve(ptr noundef %257, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %258, ptr %244, align 8, !tbaa !6
  %259 = load i32, ptr %258, align 8, !tbaa !159
  br label %260

260:                                              ; preds = %250, %256
  %261 = phi i32 [ %254, %250 ], [ %259, %256 ]
  %262 = phi ptr [ %251, %250 ], [ %258, %256 ]
  %263 = add i32 %261, 1
  store i32 %263, ptr %262, align 8, !tbaa !159
  %264 = zext i32 %261 to i64
  %265 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %262, i64 0, i32 2, i64 %264
  store i32 52, ptr %265, align 8, !tbaa.struct !179
  %266 = getelementptr inbounds i8, ptr %265, i64 8
  store i32 9, ptr %266, align 8, !tbaa.struct !202
  %267 = getelementptr inbounds i8, ptr %265, i64 16
  store i8 1, ptr %267, align 8, !tbaa.struct !203
  %268 = getelementptr inbounds i8, ptr %265, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %268, ptr noundef nonnull align 1 dereferenceable(15) %5, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %5)
  br label %269

269:                                              ; preds = %81, %114, %94, %238, %260
  %270 = icmp ne ptr %63, %0
  %271 = and i1 %6, %270
  br i1 %271, label %272, label %278

272:                                              ; preds = %269
  %273 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %274 = load i32, ptr %273, align 4, !tbaa !17
  %275 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %276 = tail call ptr @htab_find_slot_with_hash(ptr noundef %275, ptr noundef nonnull %0, i32 noundef %274, i32 noundef 1) #31
  store ptr %8, ptr %276, align 8, !tbaa !6
  %277 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 11
  store i32 %274, ptr %277, align 8, !tbaa !268
  br label %278

278:                                              ; preds = %272, %269
  %279 = getelementptr inbounds %struct.tree_decl_common, ptr %7, i64 0, i32 2
  %280 = load i64, ptr %279, align 8
  %281 = and i64 %280, 2048
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %343

283:                                              ; preds = %278
  tail call fastcc void @add_location_or_const_value_attribute(ptr noundef nonnull %8, ptr noundef nonnull %7)
  br label %343

284:                                              ; preds = %31
  %285 = trunc i64 %32 to i32
  %286 = and i32 %285, 65535
  %287 = and i32 %285, 65534
  %288 = icmp eq i32 %287, 8
  %289 = icmp eq i32 %286, 11
  %290 = or i1 %288, %289
  br i1 %290, label %291, label %303

291:                                              ; preds = %284
  %292 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %293 = load ptr, ptr %292, align 8, !tbaa !17
  %294 = icmp eq ptr %293, null
  br i1 %294, label %303, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 12
  %297 = load ptr, ptr %296, align 8, !tbaa !17
  %298 = icmp eq ptr %297, null
  br i1 %298, label %299, label %303

299:                                              ; preds = %295
  %300 = load i64, ptr %293, align 8
  %301 = trunc i64 %300 to i32
  %302 = and i32 %301, 65535
  br label %303

303:                                              ; preds = %299, %295, %291, %284
  %304 = phi i64 [ %300, %299 ], [ %32, %295 ], [ %32, %291 ], [ %32, %284 ]
  %305 = phi ptr [ %293, %299 ], [ %7, %295 ], [ %7, %291 ], [ %7, %284 ]
  %306 = phi i32 [ %302, %299 ], [ %286, %295 ], [ %286, %291 ], [ %286, %284 ]
  %307 = trunc i32 %306 to i16
  switch i16 %307, label %308 [
    i16 19, label %343
    i16 0, label %343
  ]

308:                                              ; preds = %303
  %309 = trunc i64 %304 to i32
  %310 = lshr i32 %309, 20
  %311 = and i32 %310, 1
  %312 = lshr i32 %309, 19
  %313 = and i32 %312, 1
  %314 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %305, i32 noundef %311, i32 noundef %313, ptr noundef %3)
  %315 = icmp eq ptr %314, null
  br i1 %315, label %343, label %316

316:                                              ; preds = %308
  %317 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %318 = load ptr, ptr %317, align 8, !tbaa !6
  %319 = icmp eq ptr %318, null
  br i1 %319, label %320, label %323

320:                                              ; preds = %316
  %321 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %321, ptr %317, align 8, !tbaa !157
  %322 = icmp eq ptr %321, null
  br i1 %322, label %329, label %323

323:                                              ; preds = %320, %316
  %324 = phi ptr [ %321, %320 ], [ %318, %316 ]
  %325 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %324, i64 0, i32 1
  %326 = load i32, ptr %325, align 4, !tbaa !201
  %327 = load i32, ptr %324, align 8, !tbaa !159
  %328 = icmp eq i32 %326, %327
  br i1 %328, label %329, label %333

329:                                              ; preds = %323, %320
  %330 = phi ptr [ %324, %323 ], [ null, %320 ]
  %331 = tail call ptr @vec_gc_o_reserve(ptr noundef %330, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %331, ptr %317, align 8, !tbaa !6
  %332 = load i32, ptr %331, align 8, !tbaa !159
  br label %333

333:                                              ; preds = %323, %329
  %334 = phi i32 [ %327, %323 ], [ %332, %329 ]
  %335 = phi ptr [ %324, %323 ], [ %331, %329 ]
  %336 = add i32 %334, 1
  store i32 %336, ptr %335, align 8, !tbaa !159
  %337 = zext i32 %334 to i64
  %338 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %335, i64 0, i32 2, i64 %337
  store i32 73, ptr %338, align 8, !tbaa.struct !179
  %339 = getelementptr inbounds i8, ptr %338, i64 8
  store i32 10, ptr %339, align 8, !tbaa.struct !202
  %340 = getelementptr inbounds i8, ptr %338, i64 16
  store ptr %314, ptr %340, align 8, !tbaa.struct !203
  %341 = getelementptr inbounds i8, ptr %338, i64 24
  store i32 0, ptr %341, align 8, !tbaa.struct !294
  br label %343

342:                                              ; preds = %31
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 17513, ptr noundef nonnull @.str.5) #31
  br label %343

343:                                              ; preds = %333, %308, %303, %303, %278, %283, %342
  ret ptr %8
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @process_scope_var(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #10 {
  %5 = icmp eq ptr %1, null
  %6 = select i1 %5, ptr %2, ptr %1
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %97 [
    i16 29, label %9
    i16 35, label %14
  ]

9:                                                ; preds = %4
  %10 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !17
  %13 = tail call ptr @htab_find_with_hash(ptr noundef %10, ptr noundef nonnull %6, i32 noundef %12) #31
  br label %73

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  br label %69

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %23 = load i64, ptr %22, align 8
  %24 = and i64 %23, 4096
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %97, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = load i64, ptr %28, align 8
  %30 = freeze i64 %29
  %31 = and i64 %30, 65534
  %32 = icmp eq i64 %31, 16
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = trunc i64 %30 to i16
  switch i16 %34, label %97 [
    i16 18, label %35
    i16 6, label %35
  ]

35:                                               ; preds = %33, %33, %26
  %36 = getelementptr inbounds %struct.tree_common, ptr %28, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = icmp eq ptr %6, %37
  br i1 %38, label %69, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 7
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %97, label %43

43:                                               ; preds = %39
  %44 = and i64 %7, 65535
  %45 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %44, i64 10
  %46 = load i8, ptr %45, align 2, !tbaa !17
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %43
  %49 = and i64 %23, 2048
  %50 = icmp ne i64 %49, 0
  %51 = icmp eq ptr %41, %6
  %52 = and i1 %50, %51
  br i1 %52, label %64, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.tree_decl_common, ptr %41, i64 0, i32 7
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = icmp eq ptr %55, null
  %57 = icmp eq ptr %55, %41
  %58 = or i1 %56, %57
  br i1 %58, label %64, label %59

59:                                               ; preds = %53
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %60 = load ptr, ptr %40, align 8, !tbaa !17
  %61 = load ptr, ptr %27, align 8, !tbaa !17
  %62 = getelementptr inbounds %struct.tree_common, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  br label %64

64:                                               ; preds = %43, %48, %53, %59
  %65 = phi ptr [ %37, %43 ], [ %37, %53 ], [ %63, %59 ], [ %37, %48 ]
  %66 = phi ptr [ %28, %43 ], [ %28, %53 ], [ %61, %59 ], [ %28, %48 ]
  %67 = phi ptr [ null, %43 ], [ %41, %53 ], [ %60, %59 ], [ null, %48 ]
  %68 = icmp eq ptr %67, %65
  br i1 %68, label %69, label %97

69:                                               ; preds = %18, %64, %35
  %70 = phi ptr [ %20, %18 ], [ %66, %64 ], [ %28, %35 ]
  %71 = getelementptr i8, ptr %70, i64 88
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  br label %73

73:                                               ; preds = %69, %9
  %74 = phi ptr [ %13, %9 ], [ %72, %69 ]
  %75 = icmp eq ptr %74, null
  br i1 %75, label %97, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 3
  %78 = load ptr, ptr %77, align 8, !tbaa !174
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %97

80:                                               ; preds = %76
  %81 = icmp eq ptr %3, null
  br i1 %81, label %105, label %82

82:                                               ; preds = %80
  %83 = icmp eq ptr %74, %3
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %85

85:                                               ; preds = %84, %82
  store ptr %3, ptr %77, align 8, !tbaa !174
  %86 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %87 = load ptr, ptr %86, align 8, !tbaa !175
  %88 = icmp eq ptr %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.die_struct, ptr %87, i64 0, i32 5
  %91 = load ptr, ptr %90, align 8, !tbaa !176
  %92 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 5
  store ptr %91, ptr %92, align 8, !tbaa !176
  br label %95

93:                                               ; preds = %85
  %94 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 5
  br label %95

95:                                               ; preds = %93, %89
  %96 = phi ptr [ %94, %93 ], [ %90, %89 ]
  store ptr %74, ptr %96, align 8, !tbaa !176
  store ptr %74, ptr %86, align 8, !tbaa !175
  br label %105

97:                                               ; preds = %33, %21, %39, %64, %4, %76, %73
  %98 = load i64, ptr %6, align 8
  %99 = and i64 %98, 65535
  %100 = icmp eq i64 %99, 39
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  tail call fastcc void @dwarf2out_imported_module_or_decl_1(ptr noundef nonnull %6, ptr noundef %103, ptr noundef %0, ptr noundef %3)
  br label %105

104:                                              ; preds = %97
  tail call fastcc void @gen_decl_die(ptr noundef %1, ptr noundef %2, ptr noundef %3)
  br label %105

105:                                              ; preds = %95, %80, %101, %104
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_block_die(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #10 {
  %4 = alloca %struct.expanded_location, align 8
  %5 = getelementptr i8, ptr %0, i64 28
  %6 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %327, label %13

13:                                               ; preds = %9
  %14 = add nsw i32 %2, 1
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi ptr [ %11, %13 ], [ %18, %15 ]
  tail call fastcc void @gen_block_die(ptr noundef nonnull %16, ptr noundef %1, i32 noundef %14)
  %17 = getelementptr inbounds %struct.tree_common, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = icmp eq ptr %18, null
  br i1 %19, label %327, label %15, !llvm.loop !402

20:                                               ; preds = %3
  %21 = load i32, ptr %5, align 4, !tbaa !17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %58

23:                                               ; preds = %20
  %24 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %25 = icmp ugt i32 %24, 1
  br i1 %25, label %26, label %46

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 3
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %288, label %34

34:                                               ; preds = %30
  %35 = load i32, ptr %32, align 8, !tbaa !182
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %288, label %37

37:                                               ; preds = %34, %26
  %38 = load i64, ptr %0, align 8
  %39 = and i64 %38, 20971520
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %215

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %43 = load i32, ptr %42, align 8
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %288, label %215

46:                                               ; preds = %23
  %47 = load i64, ptr %0, align 8
  %48 = and i64 %47, 20971520
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %52 = load i32, ptr %51, align 8
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %288, label %55

55:                                               ; preds = %46, %50
  %56 = tail call zeroext i8 @dwarf2out_ignore_block(ptr noundef nonnull %0), !range !155
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %215, label %288

58:                                               ; preds = %20
  %59 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %60 = load i32, ptr %59, align 8
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %327

63:                                               ; preds = %58
  %64 = tail call ptr @block_ultimate_origin(ptr noundef nonnull %0) #31
  tail call void @dwarf2out_abstract_function(ptr noundef %64)
  %65 = load i32, ptr %59, align 8
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %327

68:                                               ; preds = %63
  %69 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 29, ptr %69, align 8, !tbaa !185
  %70 = icmp eq ptr %1, null
  br i1 %70, label %87, label %71

71:                                               ; preds = %68
  %72 = icmp eq ptr %69, %1
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %74

74:                                               ; preds = %73, %71
  %75 = getelementptr inbounds %struct.die_struct, ptr %69, i64 0, i32 3
  store ptr %1, ptr %75, align 8, !tbaa !174
  %76 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %77 = load ptr, ptr %76, align 8, !tbaa !175
  %78 = icmp eq ptr %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.die_struct, ptr %77, i64 0, i32 5
  %81 = load ptr, ptr %80, align 8, !tbaa !176
  %82 = getelementptr inbounds %struct.die_struct, ptr %69, i64 0, i32 5
  store ptr %81, ptr %82, align 8, !tbaa !176
  br label %85

83:                                               ; preds = %74
  %84 = getelementptr inbounds %struct.die_struct, ptr %69, i64 0, i32 5
  br label %85

85:                                               ; preds = %83, %79
  %86 = phi ptr [ %84, %83 ], [ %80, %79 ]
  store ptr %69, ptr %86, align 8, !tbaa !176
  store ptr %69, ptr %76, align 8, !tbaa !175
  br label %92

87:                                               ; preds = %68
  %88 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %69, ptr %88, align 8, !tbaa !173
  %89 = getelementptr inbounds %struct.limbo_die_struct, ptr %88, i64 0, i32 1
  store ptr %0, ptr %89, align 8, !tbaa !177
  %90 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %91 = getelementptr inbounds %struct.limbo_die_struct, ptr %88, i64 0, i32 2
  store ptr %90, ptr %91, align 8, !tbaa !171
  store ptr %88, ptr @limbo_die_list, align 8, !tbaa !6
  br label %92

92:                                               ; preds = %85, %87
  %93 = tail call fastcc ptr @add_abstract_origin_attribute(ptr noundef nonnull %69, ptr noundef %64)
  %94 = load i64, ptr %0, align 8
  %95 = and i64 %94, 4194304
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %92
  tail call fastcc void @add_high_low_attributes(ptr noundef nonnull %0, ptr noundef nonnull %69)
  br label %98

98:                                               ; preds = %97, %92
  %99 = load i32, ptr %5, align 4, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #31
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %4, i32 noundef %99) #31
  %100 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %101 = icmp slt i32 %100, 3
  %102 = load i32, ptr @dwarf_strict, align 4
  %103 = icmp ne i32 %102, 0
  %104 = select i1 %101, i1 %103, i1 false
  br i1 %104, label %176, label %105

105:                                              ; preds = %98
  %106 = load ptr, ptr %4, align 8, !tbaa !373
  %107 = load ptr, ptr @file_table_last_lookup, align 8, !tbaa !6
  %108 = icmp eq ptr %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %105
  %110 = load ptr, ptr %107, align 8, !tbaa !124
  %111 = icmp eq ptr %110, %106
  br i1 %111, label %124, label %112

112:                                              ; preds = %109
  %113 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %110, ptr noundef nonnull dereferenceable(1) %106)
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %112, %105
  %116 = load ptr, ptr @file_table, align 8, !tbaa !6
  %117 = call i32 @htab_hash_string(ptr noundef %106) #31
  %118 = call ptr @htab_find_slot_with_hash(ptr noundef %116, ptr noundef %106, i32 noundef %117, i32 noundef 1) #31
  %119 = load ptr, ptr %118, align 8, !tbaa !6
  %120 = icmp eq ptr %119, null
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = call ptr @ggc_alloc_stat(i64 noundef 16) #31
  store ptr %106, ptr %122, align 8, !tbaa !124
  %123 = getelementptr inbounds %struct.dwarf_file_data, ptr %122, i64 0, i32 1
  store i32 0, ptr %123, align 8, !tbaa !126
  store ptr %122, ptr %118, align 8, !tbaa !6
  br label %124

124:                                              ; preds = %109, %112, %115, %121
  %125 = phi ptr [ %122, %121 ], [ %119, %115 ], [ %107, %112 ], [ %107, %109 ]
  %126 = getelementptr inbounds %struct.die_struct, ptr %69, i64 0, i32 2
  %127 = load ptr, ptr %126, align 8, !tbaa !6
  %128 = icmp eq ptr %127, null
  br i1 %128, label %129, label %132

129:                                              ; preds = %124
  %130 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %130, ptr %126, align 8, !tbaa !157
  %131 = icmp eq ptr %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %129, %124
  %133 = phi ptr [ %130, %129 ], [ %127, %124 ]
  %134 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %133, i64 0, i32 1
  %135 = load i32, ptr %134, align 4, !tbaa !201
  %136 = load i32, ptr %133, align 8, !tbaa !159
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %132, %129
  %139 = phi ptr [ %133, %132 ], [ null, %129 ]
  %140 = call ptr @vec_gc_o_reserve(ptr noundef %139, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %140, ptr %126, align 8, !tbaa !6
  %141 = load i32, ptr %140, align 8, !tbaa !159
  br label %142

142:                                              ; preds = %138, %132
  %143 = phi i32 [ %136, %132 ], [ %141, %138 ]
  %144 = phi ptr [ %133, %132 ], [ %140, %138 ]
  %145 = add i32 %143, 1
  store i32 %145, ptr %144, align 8, !tbaa !159
  %146 = zext i32 %143 to i64
  %147 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %144, i64 0, i32 2, i64 %146
  store i32 88, ptr %147, align 8, !tbaa.struct !179
  %148 = getelementptr inbounds i8, ptr %147, i64 8
  store i32 16, ptr %148, align 8, !tbaa.struct !202
  %149 = getelementptr inbounds i8, ptr %147, i64 16
  store ptr %125, ptr %149, align 8, !tbaa.struct !203
  %150 = getelementptr inbounds %struct.expanded_location, ptr %4, i64 0, i32 1
  %151 = load i32, ptr %150, align 8, !tbaa !375
  %152 = sext i32 %151 to i64
  %153 = load ptr, ptr %126, align 8, !tbaa !6
  %154 = icmp eq ptr %153, null
  br i1 %154, label %155, label %158

155:                                              ; preds = %142
  %156 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %156, ptr %126, align 8, !tbaa !157
  %157 = icmp eq ptr %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %155, %142
  %159 = phi ptr [ %156, %155 ], [ %153, %142 ]
  %160 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %159, i64 0, i32 1
  %161 = load i32, ptr %160, align 4, !tbaa !201
  %162 = load i32, ptr %159, align 8, !tbaa !159
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %164, label %168

164:                                              ; preds = %158, %155
  %165 = phi ptr [ %159, %158 ], [ null, %155 ]
  %166 = call ptr @vec_gc_o_reserve(ptr noundef %165, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %166, ptr %126, align 8, !tbaa !6
  %167 = load i32, ptr %166, align 8, !tbaa !159
  br label %168

168:                                              ; preds = %164, %158
  %169 = phi i32 [ %162, %158 ], [ %167, %164 ]
  %170 = phi ptr [ %159, %158 ], [ %166, %164 ]
  %171 = add i32 %169, 1
  store i32 %171, ptr %170, align 8, !tbaa !159
  %172 = zext i32 %169 to i64
  %173 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %170, i64 0, i32 2, i64 %172
  store i32 89, ptr %173, align 8, !tbaa.struct !179
  %174 = getelementptr inbounds i8, ptr %173, i64 8
  store i32 6, ptr %174, align 8, !tbaa.struct !202
  %175 = getelementptr inbounds i8, ptr %173, i64 16
  store i64 %152, ptr %175, align 8, !tbaa.struct !203
  br label %176

176:                                              ; preds = %168, %98
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #31
  %177 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 3
  %178 = load ptr, ptr %177, align 8, !tbaa !17
  %179 = icmp eq ptr %178, null
  br i1 %179, label %180, label %182

180:                                              ; preds = %182, %176
  %181 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 4
  br label %187

182:                                              ; preds = %176, %182
  %183 = phi ptr [ %185, %182 ], [ %178, %176 ]
  call fastcc void @process_scope_var(ptr noundef nonnull %0, ptr noundef nonnull %183, ptr noundef null, ptr noundef nonnull %69)
  %184 = getelementptr inbounds %struct.tree_common, ptr %183, i64 0, i32 1
  %185 = load ptr, ptr %184, align 8, !tbaa !17
  %186 = icmp eq ptr %185, null
  br i1 %186, label %180, label %182, !llvm.loop !389

187:                                              ; preds = %180, %197
  %188 = phi i64 [ 0, %180 ], [ %200, %197 ]
  %189 = load ptr, ptr %181, align 8, !tbaa !17
  %190 = icmp eq ptr %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %187
  %192 = load i32, ptr %189, align 8, !tbaa !182
  br label %193

193:                                              ; preds = %191, %187
  %194 = phi i32 [ %192, %191 ], [ 0, %187 ]
  %195 = zext i32 %194 to i64
  %196 = icmp ult i64 %188, %195
  br i1 %196, label %197, label %201

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.VEC_tree_base, ptr %189, i64 0, i32 2, i64 %188
  %199 = load ptr, ptr %198, align 8, !tbaa !6
  call fastcc void @process_scope_var(ptr noundef nonnull %0, ptr noundef null, ptr noundef %199, ptr noundef nonnull %69)
  %200 = add nuw nsw i64 %188, 1
  br label %187, !llvm.loop !390

201:                                              ; preds = %193
  %202 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %203 = icmp ult i32 %202, 2
  br i1 %203, label %327, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 5
  %206 = load ptr, ptr %205, align 8, !tbaa !17
  %207 = icmp eq ptr %206, null
  br i1 %207, label %327, label %208

208:                                              ; preds = %204
  %209 = add nsw i32 %2, 1
  br label %210

210:                                              ; preds = %208, %210
  %211 = phi ptr [ %206, %208 ], [ %213, %210 ]
  call fastcc void @gen_block_die(ptr noundef nonnull %211, ptr noundef nonnull %69, i32 noundef %209)
  %212 = getelementptr inbounds %struct.tree_common, ptr %211, i64 0, i32 1
  %213 = load ptr, ptr %212, align 8, !tbaa !17
  %214 = icmp eq ptr %213, null
  br i1 %214, label %327, label %210, !llvm.loop !391

215:                                              ; preds = %55, %37, %41
  %216 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 11, ptr %216, align 8, !tbaa !185
  %217 = icmp eq ptr %1, null
  br i1 %217, label %234, label %218

218:                                              ; preds = %215
  %219 = icmp eq ptr %216, %1
  br i1 %219, label %220, label %221

220:                                              ; preds = %218
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %221

221:                                              ; preds = %220, %218
  %222 = getelementptr inbounds %struct.die_struct, ptr %216, i64 0, i32 3
  store ptr %1, ptr %222, align 8, !tbaa !174
  %223 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %224 = load ptr, ptr %223, align 8, !tbaa !175
  %225 = icmp eq ptr %224, null
  br i1 %225, label %230, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.die_struct, ptr %224, i64 0, i32 5
  %228 = load ptr, ptr %227, align 8, !tbaa !176
  %229 = getelementptr inbounds %struct.die_struct, ptr %216, i64 0, i32 5
  store ptr %228, ptr %229, align 8, !tbaa !176
  br label %232

230:                                              ; preds = %221
  %231 = getelementptr inbounds %struct.die_struct, ptr %216, i64 0, i32 5
  br label %232

232:                                              ; preds = %230, %226
  %233 = phi ptr [ %231, %230 ], [ %227, %226 ]
  store ptr %216, ptr %233, align 8, !tbaa !176
  store ptr %216, ptr %223, align 8, !tbaa !175
  br label %239

234:                                              ; preds = %215
  %235 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %216, ptr %235, align 8, !tbaa !173
  %236 = getelementptr inbounds %struct.limbo_die_struct, ptr %235, i64 0, i32 1
  store ptr %0, ptr %236, align 8, !tbaa !177
  %237 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %238 = getelementptr inbounds %struct.limbo_die_struct, ptr %235, i64 0, i32 2
  store ptr %237, ptr %238, align 8, !tbaa !171
  store ptr %235, ptr @limbo_die_list, align 8, !tbaa !6
  br label %239

239:                                              ; preds = %232, %234
  %240 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %241 = load i32, ptr %240, align 8
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %249

244:                                              ; preds = %239
  %245 = load i64, ptr %0, align 8
  %246 = and i64 %245, 4194304
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  tail call fastcc void @add_high_low_attributes(ptr noundef nonnull %0, ptr noundef nonnull %216)
  br label %249

249:                                              ; preds = %248, %244, %239
  %250 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 3
  %251 = load ptr, ptr %250, align 8, !tbaa !17
  %252 = icmp eq ptr %251, null
  br i1 %252, label %253, label %255

253:                                              ; preds = %255, %249
  %254 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 4
  br label %260

255:                                              ; preds = %249, %255
  %256 = phi ptr [ %258, %255 ], [ %251, %249 ]
  tail call fastcc void @process_scope_var(ptr noundef nonnull %0, ptr noundef nonnull %256, ptr noundef null, ptr noundef nonnull %216)
  %257 = getelementptr inbounds %struct.tree_common, ptr %256, i64 0, i32 1
  %258 = load ptr, ptr %257, align 8, !tbaa !17
  %259 = icmp eq ptr %258, null
  br i1 %259, label %253, label %255, !llvm.loop !389

260:                                              ; preds = %253, %270
  %261 = phi i64 [ 0, %253 ], [ %273, %270 ]
  %262 = load ptr, ptr %254, align 8, !tbaa !17
  %263 = icmp eq ptr %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = load i32, ptr %262, align 8, !tbaa !182
  br label %266

266:                                              ; preds = %264, %260
  %267 = phi i32 [ %265, %264 ], [ 0, %260 ]
  %268 = zext i32 %267 to i64
  %269 = icmp ult i64 %261, %268
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = getelementptr inbounds %struct.VEC_tree_base, ptr %262, i64 0, i32 2, i64 %261
  %272 = load ptr, ptr %271, align 8, !tbaa !6
  tail call fastcc void @process_scope_var(ptr noundef nonnull %0, ptr noundef null, ptr noundef %272, ptr noundef nonnull %216)
  %273 = add nuw nsw i64 %261, 1
  br label %260, !llvm.loop !390

274:                                              ; preds = %266
  %275 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %276 = icmp ult i32 %275, 2
  br i1 %276, label %327, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 5
  %279 = load ptr, ptr %278, align 8, !tbaa !17
  %280 = icmp eq ptr %279, null
  br i1 %280, label %327, label %281

281:                                              ; preds = %277
  %282 = add nsw i32 %2, 1
  br label %283

283:                                              ; preds = %281, %283
  %284 = phi ptr [ %279, %281 ], [ %286, %283 ]
  tail call fastcc void @gen_block_die(ptr noundef nonnull %284, ptr noundef nonnull %216, i32 noundef %282)
  %285 = getelementptr inbounds %struct.tree_common, ptr %284, i64 0, i32 1
  %286 = load ptr, ptr %285, align 8, !tbaa !17
  %287 = icmp eq ptr %286, null
  br i1 %287, label %327, label %283, !llvm.loop !391

288:                                              ; preds = %30, %55, %34, %50, %41
  %289 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 3
  %290 = load ptr, ptr %289, align 8, !tbaa !17
  %291 = icmp eq ptr %290, null
  br i1 %291, label %292, label %294

292:                                              ; preds = %294, %288
  %293 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 4
  br label %299

294:                                              ; preds = %288, %294
  %295 = phi ptr [ %297, %294 ], [ %290, %288 ]
  tail call fastcc void @process_scope_var(ptr noundef nonnull %0, ptr noundef nonnull %295, ptr noundef null, ptr noundef %1)
  %296 = getelementptr inbounds %struct.tree_common, ptr %295, i64 0, i32 1
  %297 = load ptr, ptr %296, align 8, !tbaa !17
  %298 = icmp eq ptr %297, null
  br i1 %298, label %292, label %294, !llvm.loop !389

299:                                              ; preds = %292, %309
  %300 = phi i64 [ 0, %292 ], [ %312, %309 ]
  %301 = load ptr, ptr %293, align 8, !tbaa !17
  %302 = icmp eq ptr %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = load i32, ptr %301, align 8, !tbaa !182
  br label %305

305:                                              ; preds = %303, %299
  %306 = phi i32 [ %304, %303 ], [ 0, %299 ]
  %307 = zext i32 %306 to i64
  %308 = icmp ult i64 %300, %307
  br i1 %308, label %309, label %313

309:                                              ; preds = %305
  %310 = getelementptr inbounds %struct.VEC_tree_base, ptr %301, i64 0, i32 2, i64 %300
  %311 = load ptr, ptr %310, align 8, !tbaa !6
  tail call fastcc void @process_scope_var(ptr noundef nonnull %0, ptr noundef null, ptr noundef %311, ptr noundef %1)
  %312 = add nuw nsw i64 %300, 1
  br label %299, !llvm.loop !390

313:                                              ; preds = %305
  %314 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %315 = icmp ult i32 %314, 2
  br i1 %315, label %327, label %316

316:                                              ; preds = %313
  %317 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 5
  %318 = load ptr, ptr %317, align 8, !tbaa !17
  %319 = icmp eq ptr %318, null
  br i1 %319, label %327, label %320

320:                                              ; preds = %316
  %321 = add nsw i32 %2, 1
  br label %322

322:                                              ; preds = %320, %322
  %323 = phi ptr [ %318, %320 ], [ %325, %322 ]
  tail call fastcc void @gen_block_die(ptr noundef nonnull %323, ptr noundef %1, i32 noundef %321)
  %324 = getelementptr inbounds %struct.tree_common, ptr %323, i64 0, i32 1
  %325 = load ptr, ptr %324, align 8, !tbaa !17
  %326 = icmp eq ptr %325, null
  br i1 %326, label %327, label %322, !llvm.loop !391

327:                                              ; preds = %15, %210, %283, %322, %9, %204, %277, %316, %313, %274, %63, %201, %58
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dwarf2out_imported_module_or_decl_1(ptr noundef %0, ptr noundef readonly %1, ptr noundef %2, ptr noundef %3) unnamed_addr #10 {
  %5 = alloca %struct.expanded_location, align 8
  %6 = alloca %struct.expanded_location, align 8
  %7 = load i64, ptr %0, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 39
  br i1 %9, label %10, label %20

10:                                               ; preds = %4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #31
  %11 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !17
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %5, i32 noundef %12) #31
  %13 = load ptr, ptr %5, align 8, !tbaa.struct !403
  %14 = getelementptr inbounds i8, ptr %5, i64 8
  %15 = load i32, ptr %14, align 8, !tbaa.struct !404
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #31
  %16 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %25

19:                                               ; preds = %10
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19756, ptr noundef nonnull @.str.5) #31
  br label %25

20:                                               ; preds = %4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #31
  %21 = load i32, ptr @input_location, align 4, !tbaa !21
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %6, i32 noundef %21) #31
  %22 = load ptr, ptr %6, align 8, !tbaa.struct !403
  %23 = getelementptr inbounds i8, ptr %6, i64 8
  %24 = load i32, ptr %23, align 8, !tbaa.struct !404
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #31
  br label %25

25:                                               ; preds = %19, %10, %20
  %26 = phi i32 [ %15, %10 ], [ %15, %19 ], [ %24, %20 ]
  %27 = phi ptr [ %13, %10 ], [ %13, %19 ], [ %22, %20 ]
  %28 = phi ptr [ %17, %10 ], [ null, %19 ], [ %0, %20 ]
  %29 = load i64, ptr %28, align 8
  %30 = trunc i64 %29 to i16
  switch i16 %30, label %73 [
    i16 35, label %31
    i16 33, label %31
  ]

31:                                               ; preds = %25, %25
  %32 = getelementptr inbounds %struct.tree_common, ptr %28, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = load i64, ptr %33, align 8
  %35 = trunc i64 %34 to i16
  switch i16 %35, label %36 [
    i16 0, label %56
    i16 19, label %56
    i16 8, label %56
    i16 9, label %56
    i16 11, label %56
    i16 13, label %56
    i16 7, label %56
    i16 15, label %38
    i16 16, label %38
    i16 17, label %38
    i16 18, label %38
    i16 6, label %38
    i16 20, label %38
    i16 21, label %38
    i16 10, label %38
    i16 12, label %38
    i16 5, label %38
    i16 22, label %38
    i16 14, label %38
  ]

36:                                               ; preds = %31
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 12070, ptr noundef nonnull @.str.5) #31
  %37 = load ptr, ptr %32, align 8, !tbaa !17
  br label %38

38:                                               ; preds = %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %31, %36
  %39 = phi ptr [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %37, %36 ]
  %40 = getelementptr i8, ptr %39, i64 88
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %105

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 18
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = call fastcc ptr @get_context_die(ptr noundef %45)
  %47 = load i64, ptr %39, align 8
  %48 = trunc i64 %47 to i32
  %49 = lshr i32 %48, 20
  %50 = and i32 %49, 1
  %51 = lshr i32 %48, 19
  %52 = and i32 %51, 1
  %53 = call fastcc ptr @modified_type_die(ptr noundef nonnull %39, i32 noundef %50, i32 noundef %52, ptr noundef %46)
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %105

55:                                               ; preds = %43
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19414, ptr noundef nonnull @.str.5) #31
  br label %59

56:                                               ; preds = %31, %31, %31, %31, %31, %31, %31
  %57 = call fastcc ptr @base_type_die(ptr noundef nonnull %33)
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %105

59:                                               ; preds = %55, %56
  %60 = load i64, ptr %28, align 8
  %61 = and i64 %60, 65535
  %62 = icmp eq i64 %61, 35
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19772, ptr noundef nonnull @.str.5) #31
  br label %64

64:                                               ; preds = %59, %63
  %65 = getelementptr inbounds %struct.tree_decl_minimal, ptr %28, i64 0, i32 4
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = call fastcc ptr @get_context_die(ptr noundef %66)
  call fastcc void @gen_typedef_die(ptr noundef nonnull %28, ptr noundef %67)
  %68 = load ptr, ptr %32, align 8, !tbaa !17
  %69 = getelementptr i8, ptr %68, i64 88
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %105

72:                                               ; preds = %64
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 19775, ptr noundef nonnull @.str.5) #31
  br label %105

73:                                               ; preds = %25
  %74 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %75 = getelementptr inbounds %struct.tree_decl_minimal, ptr %28, i64 0, i32 2
  %76 = load i32, ptr %75, align 4, !tbaa !17
  %77 = call ptr @htab_find_with_hash(ptr noundef %74, ptr noundef nonnull %28, i32 noundef %76) #31
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %105

79:                                               ; preds = %73
  %80 = load i64, ptr %28, align 8
  %81 = and i64 %80, 65535
  %82 = icmp eq i64 %81, 31
  br i1 %82, label %83, label %103

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.tree_decl_minimal, ptr %28, i64 0, i32 4
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.tree_type, ptr %85, i64 0, i32 18
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = icmp eq ptr %87, null
  br i1 %88, label %100, label %89

89:                                               ; preds = %83
  %90 = load i64, ptr %87, align 8
  %91 = and i64 %90, 65535
  %92 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !17
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %95, label %100

95:                                               ; preds = %89
  %96 = call zeroext i8 @should_emit_struct_debug(ptr noundef nonnull %87, i32 noundef 1) #31
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %262, label %98

98:                                               ; preds = %95
  %99 = load ptr, ptr %86, align 8, !tbaa !17
  br label %100

100:                                              ; preds = %98, %89, %83
  %101 = phi ptr [ %99, %98 ], [ %87, %89 ], [ null, %83 ]
  %102 = call fastcc ptr @get_context_die(ptr noundef %101)
  call fastcc void @gen_type_die_for_member(ptr noundef nonnull %85, ptr noundef nonnull %28, ptr noundef %102)
  br label %103

103:                                              ; preds = %100, %79
  %104 = call fastcc ptr @force_decl_die(ptr noundef nonnull %28)
  br label %105

105:                                              ; preds = %43, %38, %72, %64, %73, %103, %56
  %106 = phi ptr [ %57, %56 ], [ %70, %64 ], [ null, %72 ], [ %77, %73 ], [ %104, %103 ], [ %53, %43 ], [ %41, %38 ]
  %107 = load i64, ptr %28, align 8
  %108 = and i64 %107, 65535
  %109 = icmp eq i64 %108, 38
  br i1 %109, label %110, label %140

110:                                              ; preds = %105
  %111 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %112 = icmp slt i32 %111, 3
  %113 = load i32, ptr @dwarf_strict, align 4
  %114 = icmp ne i32 %113, 0
  %115 = select i1 %112, i1 %114, i1 false
  br i1 %115, label %262, label %116

116:                                              ; preds = %110
  %117 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 58, ptr %117, align 8, !tbaa !185
  %118 = icmp eq ptr %3, null
  br i1 %118, label %135, label %119

119:                                              ; preds = %116
  %120 = icmp eq ptr %117, %3
  br i1 %120, label %121, label %122

121:                                              ; preds = %119
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %122

122:                                              ; preds = %121, %119
  %123 = getelementptr inbounds %struct.die_struct, ptr %117, i64 0, i32 3
  store ptr %3, ptr %123, align 8, !tbaa !174
  %124 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %125 = load ptr, ptr %124, align 8, !tbaa !175
  %126 = icmp eq ptr %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %struct.die_struct, ptr %125, i64 0, i32 5
  %129 = load ptr, ptr %128, align 8, !tbaa !176
  %130 = getelementptr inbounds %struct.die_struct, ptr %117, i64 0, i32 5
  store ptr %129, ptr %130, align 8, !tbaa !176
  br label %133

131:                                              ; preds = %122
  %132 = getelementptr inbounds %struct.die_struct, ptr %117, i64 0, i32 5
  br label %133

133:                                              ; preds = %131, %127
  %134 = phi ptr [ %132, %131 ], [ %128, %127 ]
  store ptr %117, ptr %134, align 8, !tbaa !176
  store ptr %117, ptr %124, align 8, !tbaa !175
  br label %164

135:                                              ; preds = %116
  %136 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %117, ptr %136, align 8, !tbaa !173
  %137 = getelementptr inbounds %struct.limbo_die_struct, ptr %136, i64 0, i32 1
  store ptr %2, ptr %137, align 8, !tbaa !177
  %138 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %139 = getelementptr inbounds %struct.limbo_die_struct, ptr %136, i64 0, i32 2
  store ptr %138, ptr %139, align 8, !tbaa !171
  store ptr %136, ptr @limbo_die_list, align 8, !tbaa !6
  br label %164

140:                                              ; preds = %105
  %141 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 8, ptr %141, align 8, !tbaa !185
  %142 = icmp eq ptr %3, null
  br i1 %142, label %159, label %143

143:                                              ; preds = %140
  %144 = icmp eq ptr %141, %3
  br i1 %144, label %145, label %146

145:                                              ; preds = %143
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %146

146:                                              ; preds = %145, %143
  %147 = getelementptr inbounds %struct.die_struct, ptr %141, i64 0, i32 3
  store ptr %3, ptr %147, align 8, !tbaa !174
  %148 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 4
  %149 = load ptr, ptr %148, align 8, !tbaa !175
  %150 = icmp eq ptr %149, null
  br i1 %150, label %155, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.die_struct, ptr %149, i64 0, i32 5
  %153 = load ptr, ptr %152, align 8, !tbaa !176
  %154 = getelementptr inbounds %struct.die_struct, ptr %141, i64 0, i32 5
  store ptr %153, ptr %154, align 8, !tbaa !176
  br label %157

155:                                              ; preds = %146
  %156 = getelementptr inbounds %struct.die_struct, ptr %141, i64 0, i32 5
  br label %157

157:                                              ; preds = %155, %151
  %158 = phi ptr [ %156, %155 ], [ %152, %151 ]
  store ptr %141, ptr %158, align 8, !tbaa !176
  store ptr %141, ptr %148, align 8, !tbaa !175
  br label %164

159:                                              ; preds = %140
  %160 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %141, ptr %160, align 8, !tbaa !173
  %161 = getelementptr inbounds %struct.limbo_die_struct, ptr %160, i64 0, i32 1
  store ptr %2, ptr %161, align 8, !tbaa !177
  %162 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %163 = getelementptr inbounds %struct.limbo_die_struct, ptr %160, i64 0, i32 2
  store ptr %162, ptr %163, align 8, !tbaa !171
  store ptr %160, ptr @limbo_die_list, align 8, !tbaa !6
  br label %164

164:                                              ; preds = %159, %157, %135, %133
  %165 = phi ptr [ %117, %133 ], [ %117, %135 ], [ %141, %157 ], [ %141, %159 ]
  %166 = load ptr, ptr @file_table_last_lookup, align 8, !tbaa !6
  %167 = icmp eq ptr %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %164
  %169 = load ptr, ptr %166, align 8, !tbaa !124
  %170 = icmp eq ptr %169, %27
  br i1 %170, label %183, label %171

171:                                              ; preds = %168
  %172 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %169, ptr noundef nonnull dereferenceable(1) %27)
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %171, %164
  %175 = load ptr, ptr @file_table, align 8, !tbaa !6
  %176 = call i32 @htab_hash_string(ptr noundef %27) #31
  %177 = call ptr @htab_find_slot_with_hash(ptr noundef %175, ptr noundef %27, i32 noundef %176, i32 noundef 1) #31
  %178 = load ptr, ptr %177, align 8, !tbaa !6
  %179 = icmp eq ptr %178, null
  br i1 %179, label %180, label %183

180:                                              ; preds = %174
  %181 = call ptr @ggc_alloc_stat(i64 noundef 16) #31
  store ptr %27, ptr %181, align 8, !tbaa !124
  %182 = getelementptr inbounds %struct.dwarf_file_data, ptr %181, i64 0, i32 1
  store i32 0, ptr %182, align 8, !tbaa !126
  store ptr %181, ptr %177, align 8, !tbaa !6
  br label %183

183:                                              ; preds = %180, %174, %171, %168
  %184 = phi ptr [ %181, %180 ], [ %178, %174 ], [ %166, %171 ], [ %166, %168 ]
  %185 = getelementptr inbounds %struct.die_struct, ptr %165, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !6
  %187 = icmp eq ptr %186, null
  br i1 %187, label %188, label %191

188:                                              ; preds = %183
  %189 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %189, ptr %185, align 8, !tbaa !157
  %190 = icmp eq ptr %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %188, %183
  %192 = phi ptr [ %189, %188 ], [ %186, %183 ]
  %193 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %192, i64 0, i32 1
  %194 = load i32, ptr %193, align 4, !tbaa !201
  %195 = load i32, ptr %192, align 8, !tbaa !159
  %196 = icmp eq i32 %194, %195
  br i1 %196, label %197, label %201

197:                                              ; preds = %191, %188
  %198 = phi ptr [ %192, %191 ], [ null, %188 ]
  %199 = call ptr @vec_gc_o_reserve(ptr noundef %198, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %199, ptr %185, align 8, !tbaa !6
  %200 = load i32, ptr %199, align 8, !tbaa !159
  br label %201

201:                                              ; preds = %197, %191
  %202 = phi i32 [ %195, %191 ], [ %200, %197 ]
  %203 = phi ptr [ %192, %191 ], [ %199, %197 ]
  %204 = add i32 %202, 1
  store i32 %204, ptr %203, align 8, !tbaa !159
  %205 = zext i32 %202 to i64
  %206 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %203, i64 0, i32 2, i64 %205
  store i32 58, ptr %206, align 8, !tbaa.struct !179
  %207 = getelementptr inbounds i8, ptr %206, i64 8
  store i32 16, ptr %207, align 8, !tbaa.struct !202
  %208 = getelementptr inbounds i8, ptr %206, i64 16
  store ptr %184, ptr %208, align 8, !tbaa.struct !203
  %209 = sext i32 %26 to i64
  %210 = load ptr, ptr %185, align 8, !tbaa !6
  %211 = icmp eq ptr %210, null
  br i1 %211, label %212, label %215

212:                                              ; preds = %201
  %213 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %213, ptr %185, align 8, !tbaa !157
  %214 = icmp eq ptr %213, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %212, %201
  %216 = phi ptr [ %213, %212 ], [ %210, %201 ]
  %217 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %216, i64 0, i32 1
  %218 = load i32, ptr %217, align 4, !tbaa !201
  %219 = load i32, ptr %216, align 8, !tbaa !159
  %220 = icmp eq i32 %218, %219
  br i1 %220, label %221, label %225

221:                                              ; preds = %215, %212
  %222 = phi ptr [ %216, %215 ], [ null, %212 ]
  %223 = call ptr @vec_gc_o_reserve(ptr noundef %222, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %223, ptr %185, align 8, !tbaa !6
  %224 = load i32, ptr %223, align 8, !tbaa !159
  br label %225

225:                                              ; preds = %215, %221
  %226 = phi i32 [ %219, %215 ], [ %224, %221 ]
  %227 = phi ptr [ %216, %215 ], [ %223, %221 ]
  %228 = add i32 %226, 1
  store i32 %228, ptr %227, align 8, !tbaa !159
  %229 = zext i32 %226 to i64
  %230 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %227, i64 0, i32 2, i64 %229
  store i32 59, ptr %230, align 8, !tbaa.struct !179
  %231 = getelementptr inbounds i8, ptr %230, i64 8
  store i32 6, ptr %231, align 8, !tbaa.struct !202
  %232 = getelementptr inbounds i8, ptr %230, i64 16
  store i64 %209, ptr %232, align 8, !tbaa.struct !203
  %233 = icmp eq ptr %1, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %225
  %235 = getelementptr inbounds %struct.tree_identifier, ptr %1, i64 0, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !17
  call fastcc void @add_AT_string(ptr noundef nonnull %165, i32 noundef 3, ptr noundef %236)
  br label %237

237:                                              ; preds = %225, %234
  %238 = load ptr, ptr %185, align 8, !tbaa !6
  %239 = icmp eq ptr %238, null
  br i1 %239, label %240, label %243

240:                                              ; preds = %237
  %241 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %241, ptr %185, align 8, !tbaa !157
  %242 = icmp eq ptr %241, null
  br i1 %242, label %249, label %243

243:                                              ; preds = %240, %237
  %244 = phi ptr [ %241, %240 ], [ %238, %237 ]
  %245 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %244, i64 0, i32 1
  %246 = load i32, ptr %245, align 4, !tbaa !201
  %247 = load i32, ptr %244, align 8, !tbaa !159
  %248 = icmp eq i32 %246, %247
  br i1 %248, label %249, label %253

249:                                              ; preds = %243, %240
  %250 = phi ptr [ %244, %243 ], [ null, %240 ]
  %251 = call ptr @vec_gc_o_reserve(ptr noundef %250, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %251, ptr %185, align 8, !tbaa !6
  %252 = load i32, ptr %251, align 8, !tbaa !159
  br label %253

253:                                              ; preds = %243, %249
  %254 = phi i32 [ %247, %243 ], [ %252, %249 ]
  %255 = phi ptr [ %244, %243 ], [ %251, %249 ]
  %256 = add i32 %254, 1
  store i32 %256, ptr %255, align 8, !tbaa !159
  %257 = zext i32 %254 to i64
  %258 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %255, i64 0, i32 2, i64 %257
  store i32 24, ptr %258, align 8, !tbaa.struct !179
  %259 = getelementptr inbounds i8, ptr %258, i64 8
  store i32 10, ptr %259, align 8, !tbaa.struct !202
  %260 = getelementptr inbounds i8, ptr %258, i64 16
  store ptr %106, ptr %260, align 8, !tbaa.struct !203
  %261 = getelementptr inbounds i8, ptr %258, i64 24
  store i32 0, ptr %261, align 8, !tbaa.struct !294
  br label %262

262:                                              ; preds = %110, %95, %253
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_typedef_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 4194304
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %247

6:                                                ; preds = %2
  %7 = or i64 %3, 4194304
  store i64 %7, ptr %0, align 8
  %8 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 22, ptr %8, align 8, !tbaa !185
  %9 = icmp eq ptr %1, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = icmp eq ptr %8, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %13

13:                                               ; preds = %12, %10
  %14 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 3
  store ptr %1, ptr %14, align 8, !tbaa !174
  %15 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !175
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !176
  %21 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 5
  store ptr %20, ptr %21, align 8, !tbaa !176
  br label %24

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 5
  br label %24

24:                                               ; preds = %22, %18
  %25 = phi ptr [ %23, %22 ], [ %19, %18 ]
  store ptr %8, ptr %25, align 8, !tbaa !176
  store ptr %8, ptr %15, align 8, !tbaa !175
  br label %31

26:                                               ; preds = %6
  %27 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %8, ptr %27, align 8, !tbaa !173
  %28 = getelementptr inbounds %struct.limbo_die_struct, ptr %27, i64 0, i32 1
  store ptr %0, ptr %28, align 8, !tbaa !177
  %29 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.limbo_die_struct, ptr %27, i64 0, i32 2
  store ptr %29, ptr %30, align 8, !tbaa !171
  store ptr %27, ptr @limbo_die_list, align 8, !tbaa !6
  br label %31

31:                                               ; preds = %24, %26
  %32 = load i64, ptr %0, align 8
  %33 = and i64 %32, 65535
  %34 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %33, i64 10
  %35 = load i8, ptr %34, align 2, !tbaa !17
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %114, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %39 = load i64, ptr %38, align 8
  %40 = and i64 %39, 2048
  %41 = icmp ne i64 %40, 0
  %42 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = icmp eq ptr %43, %0
  %45 = select i1 %41, i1 %44, i1 false
  br i1 %45, label %114, label %46

46:                                               ; preds = %37
  %47 = icmp eq ptr %43, null
  %48 = select i1 %47, ptr %0, ptr %43
  %49 = getelementptr inbounds %struct.tree_decl_common, ptr %48, i64 0, i32 7
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = icmp eq ptr %50, null
  %52 = icmp eq ptr %50, %48
  %53 = or i1 %51, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %46
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %55 = load ptr, ptr %42, align 8, !tbaa !17
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi ptr [ %43, %46 ], [ %55, %54 ]
  %58 = icmp eq ptr %57, null
  br i1 %58, label %114, label %59

59:                                               ; preds = %56
  %60 = load i64, ptr %57, align 8
  %61 = and i64 %60, 65535
  %62 = icmp eq i64 %61, 29
  br i1 %62, label %75, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %61
  %65 = load i32, ptr %64, align 4, !tbaa !17
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.tree_common, ptr %57, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  br label %70

70:                                               ; preds = %67, %63
  %71 = phi ptr [ %69, %67 ], [ %57, %63 ]
  %72 = tail call ptr @decl_function_context(ptr noundef %71) #31
  %73 = icmp eq ptr %72, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %70
  tail call void @dwarf2out_abstract_function(ptr noundef nonnull %72)
  br label %75

75:                                               ; preds = %74, %70, %59
  %76 = load i64, ptr %57, align 8
  %77 = and i64 %76, 65535
  %78 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %77
  %79 = load i32, ptr %78, align 4, !tbaa !17
  switch i32 %79, label %199 [
    i32 3, label %80
    i32 2, label %85
  ]

80:                                               ; preds = %75
  %81 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %82 = getelementptr inbounds %struct.tree_decl_minimal, ptr %57, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !17
  %84 = tail call ptr @htab_find_with_hash(ptr noundef %81, ptr noundef nonnull %57, i32 noundef %83) #31
  br label %88

85:                                               ; preds = %75
  %86 = getelementptr i8, ptr %57, i64 88
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi ptr [ %84, %80 ], [ %87, %85 ]
  %90 = icmp eq ptr %89, null
  br i1 %90, label %199, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %93 = load ptr, ptr %92, align 8, !tbaa !6
  %94 = icmp eq ptr %93, null
  br i1 %94, label %95, label %98

95:                                               ; preds = %91
  %96 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %96, ptr %92, align 8, !tbaa !157
  %97 = icmp eq ptr %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %95, %91
  %99 = phi ptr [ %96, %95 ], [ %93, %91 ]
  %100 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %99, i64 0, i32 1
  %101 = load i32, ptr %100, align 4, !tbaa !201
  %102 = load i32, ptr %99, align 8, !tbaa !159
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %98, %95
  %105 = phi ptr [ %99, %98 ], [ null, %95 ]
  %106 = tail call ptr @vec_gc_o_reserve(ptr noundef %105, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %106, ptr %92, align 8, !tbaa !6
  %107 = load i32, ptr %106, align 8, !tbaa !159
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi i32 [ %102, %98 ], [ %107, %104 ]
  %110 = phi ptr [ %99, %98 ], [ %106, %104 ]
  %111 = add i32 %109, 1
  store i32 %111, ptr %110, align 8, !tbaa !159
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %110, i64 0, i32 2, i64 %112
  store i32 49, ptr %113, align 8, !tbaa.struct !179
  br label %193

114:                                              ; preds = %37, %31, %56
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %8, ptr noundef nonnull %0)
  %115 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = icmp eq ptr %116, null
  %118 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %119 = load ptr, ptr %118, align 8, !tbaa !17
  br i1 %117, label %127, label %120

120:                                              ; preds = %114
  %121 = icmp eq ptr %116, %119
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 18944, ptr noundef nonnull @.str.5) #31
  %123 = load ptr, ptr %118, align 8, !tbaa !17
  br label %124

124:                                              ; preds = %120, %122
  %125 = phi ptr [ %119, %120 ], [ %123, %122 ]
  %126 = getelementptr inbounds %struct.tree_type, ptr %125, i64 0, i32 11
  store ptr %8, ptr %126, align 8, !tbaa !17
  br label %127

127:                                              ; preds = %114, %124
  %128 = phi ptr [ %116, %124 ], [ %119, %114 ]
  %129 = load i64, ptr %0, align 8
  %130 = trunc i64 %129 to i32
  %131 = load i64, ptr %128, align 8
  %132 = trunc i64 %131 to i32
  %133 = and i32 %132, 65535
  %134 = and i32 %132, 65534
  %135 = icmp eq i32 %134, 8
  %136 = icmp eq i32 %133, 11
  %137 = or i1 %135, %136
  br i1 %137, label %138, label %150

138:                                              ; preds = %127
  %139 = getelementptr inbounds %struct.tree_common, ptr %128, i64 0, i32 2
  %140 = load ptr, ptr %139, align 8, !tbaa !17
  %141 = icmp eq ptr %140, null
  br i1 %141, label %150, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.tree_type, ptr %128, i64 0, i32 12
  %144 = load ptr, ptr %143, align 8, !tbaa !17
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = load i64, ptr %140, align 8
  %148 = trunc i64 %147 to i32
  %149 = and i32 %148, 65535
  br label %150

150:                                              ; preds = %146, %142, %138, %127
  %151 = phi i64 [ %147, %146 ], [ %131, %142 ], [ %131, %138 ], [ %131, %127 ]
  %152 = phi ptr [ %140, %146 ], [ %128, %142 ], [ %128, %138 ], [ %128, %127 ]
  %153 = phi i32 [ %149, %146 ], [ %133, %142 ], [ %133, %138 ], [ %133, %127 ]
  %154 = trunc i32 %153 to i16
  switch i16 %154, label %155 [
    i16 19, label %199
    i16 0, label %199
  ]

155:                                              ; preds = %150
  %156 = and i32 %130, 1048576
  %157 = icmp eq i32 %156, 0
  %158 = trunc i64 %151 to i32
  %159 = lshr i32 %158, 20
  %160 = and i32 %159, 1
  %161 = select i1 %157, i32 %160, i32 1
  %162 = and i32 %130, 524288
  %163 = icmp eq i32 %162, 0
  %164 = trunc i64 %151 to i32
  %165 = lshr i32 %164, 19
  %166 = and i32 %165, 1
  %167 = select i1 %163, i32 %166, i32 1
  %168 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %152, i32 noundef %161, i32 noundef %167, ptr noundef %1)
  %169 = icmp eq ptr %168, null
  br i1 %169, label %199, label %170

170:                                              ; preds = %155
  %171 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %172 = load ptr, ptr %171, align 8, !tbaa !6
  %173 = icmp eq ptr %172, null
  br i1 %173, label %174, label %177

174:                                              ; preds = %170
  %175 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %175, ptr %171, align 8, !tbaa !157
  %176 = icmp eq ptr %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %174, %170
  %178 = phi ptr [ %175, %174 ], [ %172, %170 ]
  %179 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %178, i64 0, i32 1
  %180 = load i32, ptr %179, align 4, !tbaa !201
  %181 = load i32, ptr %178, align 8, !tbaa !159
  %182 = icmp eq i32 %180, %181
  br i1 %182, label %183, label %187

183:                                              ; preds = %177, %174
  %184 = phi ptr [ %178, %177 ], [ null, %174 ]
  %185 = tail call ptr @vec_gc_o_reserve(ptr noundef %184, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %185, ptr %171, align 8, !tbaa !6
  %186 = load i32, ptr %185, align 8, !tbaa !159
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i32 [ %181, %177 ], [ %186, %183 ]
  %189 = phi ptr [ %178, %177 ], [ %185, %183 ]
  %190 = add i32 %188, 1
  store i32 %190, ptr %189, align 8, !tbaa !159
  %191 = zext i32 %188 to i64
  %192 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %189, i64 0, i32 2, i64 %191
  store i32 73, ptr %192, align 8, !tbaa.struct !179
  br label %193

193:                                              ; preds = %108, %187
  %194 = phi ptr [ %192, %187 ], [ %113, %108 ]
  %195 = phi ptr [ %168, %187 ], [ %89, %108 ]
  %196 = getelementptr inbounds i8, ptr %194, i64 8
  store i32 10, ptr %196, align 8
  %197 = getelementptr inbounds i8, ptr %194, i64 16
  store ptr %195, ptr %197, align 8
  %198 = getelementptr inbounds i8, ptr %194, i64 24
  store i32 0, ptr %198, align 8
  br label %199

199:                                              ; preds = %193, %75, %155, %150, %150, %88
  %200 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %201 = load i64, ptr %200, align 8
  %202 = and i64 %201, 2048
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %210, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %206 = load i32, ptr %205, align 4, !tbaa !17
  %207 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %208 = tail call ptr @htab_find_slot_with_hash(ptr noundef %207, ptr noundef nonnull %0, i32 noundef %206, i32 noundef 1) #31
  store ptr %8, ptr %208, align 8, !tbaa !6
  %209 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 11
  store i32 %206, ptr %209, align 8, !tbaa !268
  br label %210

210:                                              ; preds = %204, %199
  br label %211

211:                                              ; preds = %210, %243
  %212 = phi ptr [ %244, %243 ], [ %8, %210 ]
  %213 = getelementptr inbounds %struct.die_struct, ptr %212, i64 0, i32 2
  %214 = load ptr, ptr %213, align 8, !tbaa !157
  %215 = icmp eq ptr %214, null
  br i1 %215, label %247, label %216

216:                                              ; preds = %211, %237
  %217 = phi ptr [ %238, %237 ], [ %214, %211 ]
  %218 = phi ptr [ %239, %237 ], [ %214, %211 ]
  %219 = phi i64 [ %241, %237 ], [ 0, %211 ]
  %220 = phi ptr [ %240, %237 ], [ null, %211 ]
  %221 = load i32, ptr %218, align 8, !tbaa !159
  %222 = zext i32 %221 to i64
  %223 = icmp ult i64 %219, %222
  br i1 %223, label %224, label %243

224:                                              ; preds = %216
  %225 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %218, i64 0, i32 2, i64 %219
  %226 = load i32, ptr %225, align 8, !tbaa !161
  switch i32 %226, label %237 [
    i32 3, label %246
    i32 71, label %227
    i32 49, label %227
  ]

227:                                              ; preds = %224, %224
  %228 = getelementptr i8, ptr %225, i64 8
  %229 = load i32, ptr %228, align 8, !tbaa !163
  %230 = icmp eq i32 %229, 10
  br i1 %230, label %233, label %231

231:                                              ; preds = %227
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %232 = load ptr, ptr %213, align 8, !tbaa !157
  br label %233

233:                                              ; preds = %231, %227
  %234 = phi ptr [ %217, %227 ], [ %232, %231 ]
  %235 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %218, i64 0, i32 2, i64 %219, i32 1, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !17
  br label %237

237:                                              ; preds = %224, %233
  %238 = phi ptr [ %234, %233 ], [ %217, %224 ]
  %239 = phi ptr [ %234, %233 ], [ %218, %224 ]
  %240 = phi ptr [ %236, %233 ], [ %220, %224 ]
  %241 = add nuw nsw i64 %219, 1
  %242 = icmp eq ptr %239, null
  br i1 %242, label %243, label %216, !llvm.loop !164

243:                                              ; preds = %237, %216
  %244 = phi ptr [ %240, %237 ], [ %220, %216 ]
  %245 = icmp eq ptr %244, null
  br i1 %245, label %247, label %211

246:                                              ; preds = %224
  tail call fastcc void @add_pubtype(ptr noundef nonnull %0, ptr noundef nonnull %8)
  br label %247

247:                                              ; preds = %211, %243, %246, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_type_die_for_member(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #10 {
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %0, ptr noundef %2, i32 noundef 1)
  %4 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  br i1 %6, label %93, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.tree_decl_common, ptr %5, i64 0, i32 2
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 33554432
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %93, label %12

12:                                               ; preds = %7
  %13 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !17
  %16 = tail call ptr @htab_find_with_hash(ptr noundef %13, ptr noundef %1, i32 noundef %15) #31
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %93

18:                                               ; preds = %12
  %19 = load i64, ptr %1, align 8
  %20 = and i64 %19, 65535
  %21 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %20, i64 10
  %22 = load i8, ptr %21, align 2, !tbaa !17
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %26 = load i64, ptr %25, align 8
  %27 = and i64 %26, 2048
  %28 = icmp ne i64 %27, 0
  %29 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = icmp eq ptr %30, %1
  %32 = select i1 %28, i1 %31, i1 false
  br i1 %32, label %47, label %33

33:                                               ; preds = %24
  %34 = icmp eq ptr %30, null
  %35 = select i1 %34, ptr %1, ptr %30
  %36 = getelementptr inbounds %struct.tree_decl_common, ptr %35, i64 0, i32 7
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = icmp eq ptr %37, null
  %39 = icmp eq ptr %37, %35
  %40 = or i1 %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %42 = load ptr, ptr %29, align 8, !tbaa !17
  br label %43

43:                                               ; preds = %33, %41
  %44 = phi ptr [ %30, %33 ], [ %42, %41 ]
  %45 = icmp eq ptr %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %43
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 17647, ptr noundef nonnull @.str.5) #31
  br label %47

47:                                               ; preds = %24, %18, %43, %46
  %48 = load ptr, ptr @decl_scope_table, align 8, !tbaa !6
  %49 = icmp eq ptr %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.VEC_tree_base, ptr %48, i64 0, i32 1
  %52 = load i32, ptr %51, align 4, !tbaa !365
  %53 = load i32, ptr %48, align 8, !tbaa !182
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %50, %47
  %56 = tail call ptr @vec_gc_p_reserve(ptr noundef %48, i32 noundef 1) #31
  store ptr %56, ptr @decl_scope_table, align 8, !tbaa !6
  %57 = load i32, ptr %56, align 8, !tbaa !182
  br label %58

58:                                               ; preds = %50, %55
  %59 = phi i32 [ %53, %50 ], [ %57, %55 ]
  %60 = phi ptr [ %48, %50 ], [ %56, %55 ]
  %61 = add i32 %59, 1
  store i32 %61, ptr %60, align 8, !tbaa !182
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %struct.VEC_tree_base, ptr %60, i64 0, i32 2, i64 %62
  store ptr %0, ptr %63, align 8, !tbaa !6
  %64 = getelementptr i8, ptr %0, i64 88
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = load i64, ptr %1, align 8
  %67 = trunc i64 %66 to i16
  switch i16 %67, label %88 [
    i16 29, label %68
    i16 31, label %69
  ]

68:                                               ; preds = %58
  tail call fastcc void @gen_subprogram_die(ptr noundef nonnull %1, ptr noundef %65)
  br label %89

69:                                               ; preds = %58
  %70 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = load i64, ptr %75, align 8
  %77 = and i64 %76, 65534
  %78 = icmp eq i64 %77, 16
  br i1 %78, label %79, label %89

79:                                               ; preds = %73, %69
  %80 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  br label %86

86:                                               ; preds = %79, %83
  %87 = phi ptr [ %85, %83 ], [ %81, %79 ]
  tail call fastcc void @gen_type_die_with_usage(ptr noundef %87, ptr noundef %65, i32 noundef 1)
  tail call fastcc void @gen_field_die(ptr noundef nonnull %1, ptr noundef %65)
  br label %89

88:                                               ; preds = %58
  tail call fastcc void @gen_variable_die(ptr noundef nonnull %1, ptr noundef null, ptr noundef %65)
  br label %89

89:                                               ; preds = %73, %88, %86, %68
  %90 = load ptr, ptr @decl_scope_table, align 8
  %91 = load i32, ptr %90, align 8, !tbaa !182
  %92 = add i32 %91, -1
  store i32 %92, ptr %90, align 8, !tbaa !182
  br label %93

93:                                               ; preds = %89, %12, %7, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_pubtype(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 134217728
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !174
  %9 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %11, label %118

11:                                               ; preds = %6, %2
  %12 = load i32, ptr %1, align 8, !tbaa !185
  %13 = icmp eq i32 %12, 22
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %118, label %18

18:                                               ; preds = %14, %11
  %19 = and i64 %3, 65535
  %20 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !17
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %23, label %88

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 12
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %118, label %27

27:                                               ; preds = %23
  %28 = load i64, ptr %25, align 8
  %29 = trunc i64 %28 to i16
  switch i16 %29, label %37 [
    i16 1, label %30
    i16 35, label %33
  ]

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.tree_identifier, ptr %25, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  br label %94

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.tree_decl_minimal, ptr %25, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %27, %33
  br label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.tree_identifier, ptr %35, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  br label %94

41:                                               ; preds = %37, %73
  %42 = phi ptr [ %74, %73 ], [ %1, %37 ]
  %43 = getelementptr inbounds %struct.die_struct, ptr %42, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !157
  %45 = icmp eq ptr %44, null
  br i1 %45, label %85, label %46

46:                                               ; preds = %41, %67
  %47 = phi ptr [ %68, %67 ], [ %44, %41 ]
  %48 = phi ptr [ %69, %67 ], [ %44, %41 ]
  %49 = phi i64 [ %71, %67 ], [ 0, %41 ]
  %50 = phi ptr [ %70, %67 ], [ null, %41 ]
  %51 = load i32, ptr %48, align 8, !tbaa !159
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %49, %52
  br i1 %53, label %54, label %73

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %48, i64 0, i32 2, i64 %49
  %56 = load i32, ptr %55, align 8, !tbaa !161
  switch i32 %56, label %67 [
    i32 3, label %76
    i32 71, label %57
    i32 49, label %57
  ]

57:                                               ; preds = %54, %54
  %58 = getelementptr i8, ptr %55, i64 8
  %59 = load i32, ptr %58, align 8, !tbaa !163
  %60 = icmp eq i32 %59, 10
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %62 = load ptr, ptr %43, align 8, !tbaa !157
  br label %63

63:                                               ; preds = %61, %57
  %64 = phi ptr [ %47, %57 ], [ %62, %61 ]
  %65 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %48, i64 0, i32 2, i64 %49, i32 1, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  br label %67

67:                                               ; preds = %63, %54
  %68 = phi ptr [ %64, %63 ], [ %47, %54 ]
  %69 = phi ptr [ %64, %63 ], [ %48, %54 ]
  %70 = phi ptr [ %66, %63 ], [ %50, %54 ]
  %71 = add nuw nsw i64 %49, 1
  %72 = icmp eq ptr %69, null
  br i1 %72, label %73, label %46, !llvm.loop !164

73:                                               ; preds = %67, %46
  %74 = phi ptr [ %70, %67 ], [ %50, %46 ]
  %75 = icmp eq ptr %74, null
  br i1 %75, label %85, label %41

76:                                               ; preds = %54
  %77 = getelementptr i8, ptr %55, i64 8
  %78 = load i32, ptr %77, align 8, !tbaa !163
  %79 = icmp eq i32 %78, 14
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  br label %81

81:                                               ; preds = %80, %76
  %82 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %48, i64 0, i32 2, i64 %49, i32 1, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  %84 = load ptr, ptr %83, align 8, !tbaa !186
  br label %85

85:                                               ; preds = %41, %73, %81
  %86 = phi ptr [ %84, %81 ], [ null, %73 ], [ null, %41 ]
  %87 = tail call ptr @xstrdup(ptr noundef %86) #31
  br label %94

88:                                               ; preds = %18
  %89 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %90 = tail call ptr %89(ptr noundef nonnull %0, i32 noundef 1) #31
  %91 = icmp eq ptr %90, null
  br i1 %91, label %118, label %92

92:                                               ; preds = %88
  %93 = tail call ptr @xstrdup(ptr noundef nonnull %90) #31
  br label %94

94:                                               ; preds = %92, %38, %85, %30
  %95 = phi ptr [ %87, %85 ], [ %40, %38 ], [ %32, %30 ], [ %93, %92 ]
  %96 = icmp eq ptr %95, null
  br i1 %96, label %118, label %97

97:                                               ; preds = %94
  %98 = load i8, ptr %95, align 1, !tbaa !17
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %118, label %100

100:                                              ; preds = %97
  %101 = load ptr, ptr @pubtype_table, align 8, !tbaa !6
  %102 = icmp eq ptr %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %101, i64 0, i32 1
  %105 = load i32, ptr %104, align 4, !tbaa !379
  %106 = load i32, ptr %101, align 8, !tbaa !218
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %103, %100
  %109 = tail call ptr @vec_gc_o_reserve(ptr noundef %101, i32 noundef 1, i64 noundef 8, i64 noundef 16) #31
  store ptr %109, ptr @pubtype_table, align 8, !tbaa !6
  %110 = load i32, ptr %109, align 8, !tbaa !218
  br label %111

111:                                              ; preds = %103, %108
  %112 = phi i32 [ %106, %103 ], [ %110, %108 ]
  %113 = phi ptr [ %101, %103 ], [ %109, %108 ]
  %114 = add i32 %112, 1
  store i32 %114, ptr %113, align 8, !tbaa !218
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %113, i64 0, i32 2, i64 %115
  store ptr %1, ptr %116, align 8, !tbaa.struct !253
  %117 = getelementptr inbounds i8, ptr %116, i64 8
  store ptr %95, ptr %117, align 8, !tbaa.struct !254
  br label %118

118:                                              ; preds = %88, %23, %94, %97, %111, %14, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_field_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca [15 x i8], align 1
  %4 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %314, label %8

8:                                                ; preds = %2
  %9 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 13, ptr %9, align 8, !tbaa !185
  %10 = icmp eq ptr %1, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %8
  %12 = icmp eq ptr %9, %1
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %14

14:                                               ; preds = %13, %11
  %15 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 3
  store ptr %1, ptr %15, align 8, !tbaa !174
  %16 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !175
  %18 = icmp eq ptr %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.die_struct, ptr %17, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !176
  %22 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  store ptr %21, ptr %22, align 8, !tbaa !176
  br label %25

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 5
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi ptr [ %24, %23 ], [ %20, %19 ]
  store ptr %9, ptr %26, align 8, !tbaa !176
  store ptr %9, ptr %16, align 8, !tbaa !175
  br label %32

27:                                               ; preds = %8
  %28 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %9, ptr %28, align 8, !tbaa !173
  %29 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 1
  store ptr %0, ptr %29, align 8, !tbaa !177
  %30 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.limbo_die_struct, ptr %28, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !171
  store ptr %28, ptr @limbo_die_list, align 8, !tbaa !6
  br label %32

32:                                               ; preds = %25, %27
  tail call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %9, ptr noundef nonnull %0)
  %33 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = load ptr, ptr %4, align 8, !tbaa !17
  br label %38

38:                                               ; preds = %32, %36
  %39 = phi ptr [ %37, %36 ], [ %34, %32 ]
  %40 = load i64, ptr %0, align 8
  %41 = trunc i64 %40 to i32
  %42 = load i64, ptr %39, align 8
  %43 = trunc i64 %42 to i32
  %44 = and i32 %43, 65535
  %45 = and i32 %43, 65534
  %46 = icmp eq i32 %45, 8
  %47 = icmp eq i32 %44, 11
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %61

49:                                               ; preds = %38
  %50 = getelementptr inbounds %struct.tree_common, ptr %39, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = icmp eq ptr %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 12
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = load i64, ptr %51, align 8
  %59 = trunc i64 %58 to i32
  %60 = and i32 %59, 65535
  br label %61

61:                                               ; preds = %57, %53, %49, %38
  %62 = phi i64 [ %58, %57 ], [ %42, %53 ], [ %42, %49 ], [ %42, %38 ]
  %63 = phi ptr [ %51, %57 ], [ %39, %53 ], [ %39, %49 ], [ %39, %38 ]
  %64 = phi i32 [ %60, %57 ], [ %44, %53 ], [ %44, %49 ], [ %44, %38 ]
  %65 = trunc i32 %64 to i16
  switch i16 %65, label %66 [
    i16 19, label %107
    i16 0, label %107
  ]

66:                                               ; preds = %61
  %67 = and i32 %41, 1048576
  %68 = icmp eq i32 %67, 0
  %69 = trunc i64 %62 to i32
  %70 = lshr i32 %69, 20
  %71 = and i32 %70, 1
  %72 = select i1 %68, i32 %71, i32 1
  %73 = and i32 %41, 524288
  %74 = icmp eq i32 %73, 0
  %75 = trunc i64 %62 to i32
  %76 = lshr i32 %75, 19
  %77 = and i32 %76, 1
  %78 = select i1 %74, i32 %77, i32 1
  %79 = tail call fastcc ptr @modified_type_die(ptr noundef nonnull %63, i32 noundef %72, i32 noundef %78, ptr noundef %1)
  %80 = icmp eq ptr %79, null
  br i1 %80, label %107, label %81

81:                                               ; preds = %66
  %82 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !6
  %84 = icmp eq ptr %83, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %81
  %86 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %86, ptr %82, align 8, !tbaa !157
  %87 = icmp eq ptr %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %85, %81
  %89 = phi ptr [ %86, %85 ], [ %83, %81 ]
  %90 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %89, i64 0, i32 1
  %91 = load i32, ptr %90, align 4, !tbaa !201
  %92 = load i32, ptr %89, align 8, !tbaa !159
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %98

94:                                               ; preds = %88, %85
  %95 = phi ptr [ %89, %88 ], [ null, %85 ]
  %96 = tail call ptr @vec_gc_o_reserve(ptr noundef %95, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %96, ptr %82, align 8, !tbaa !6
  %97 = load i32, ptr %96, align 8, !tbaa !159
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi i32 [ %92, %88 ], [ %97, %94 ]
  %100 = phi ptr [ %89, %88 ], [ %96, %94 ]
  %101 = add i32 %99, 1
  store i32 %101, ptr %100, align 8, !tbaa !159
  %102 = zext i32 %99 to i64
  %103 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %100, i64 0, i32 2, i64 %102
  store i32 73, ptr %103, align 8, !tbaa.struct !179
  %104 = getelementptr inbounds i8, ptr %103, i64 8
  store i32 10, ptr %104, align 8, !tbaa.struct !202
  %105 = getelementptr inbounds i8, ptr %103, i64 16
  store ptr %79, ptr %105, align 8, !tbaa.struct !203
  %106 = getelementptr inbounds i8, ptr %103, i64 24
  store i32 0, ptr %106, align 8, !tbaa.struct !294
  br label %107

107:                                              ; preds = %61, %61, %66, %98
  %108 = load ptr, ptr %33, align 8, !tbaa !17
  %109 = icmp eq ptr %108, null
  br i1 %109, label %218, label %110

110:                                              ; preds = %107
  tail call fastcc void @add_byte_size_attribute(ptr noundef nonnull %9, ptr noundef nonnull %0)
  %111 = load i64, ptr %0, align 8
  %112 = and i64 %111, 65535
  %113 = icmp eq i64 %112, 31
  br i1 %113, label %114, label %117

114:                                              ; preds = %110
  %115 = load ptr, ptr %33, align 8, !tbaa !17
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %118

117:                                              ; preds = %114, %110
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16635, ptr noundef nonnull @.str.5) #31
  br label %118

118:                                              ; preds = %117, %114
  %119 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 1
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  %121 = tail call i32 @host_integerp(ptr noundef %120, i32 noundef 1) #31
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %150, label %123

123:                                              ; preds = %118
  %124 = load ptr, ptr %119, align 8, !tbaa !17
  %125 = tail call i64 @tree_low_cst(ptr noundef %124, i32 noundef 1) #31
  %126 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %127 = load ptr, ptr %126, align 8, !tbaa !6
  %128 = icmp eq ptr %127, null
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %130, ptr %126, align 8, !tbaa !157
  %131 = icmp eq ptr %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %129, %123
  %133 = phi ptr [ %130, %129 ], [ %127, %123 ]
  %134 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %133, i64 0, i32 1
  %135 = load i32, ptr %134, align 4, !tbaa !201
  %136 = load i32, ptr %133, align 8, !tbaa !159
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %132, %129
  %139 = phi ptr [ %133, %132 ], [ null, %129 ]
  %140 = tail call ptr @vec_gc_o_reserve(ptr noundef %139, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %140, ptr %126, align 8, !tbaa !6
  %141 = load i32, ptr %140, align 8, !tbaa !159
  br label %142

142:                                              ; preds = %138, %132
  %143 = phi i32 [ %136, %132 ], [ %141, %138 ]
  %144 = phi ptr [ %133, %132 ], [ %140, %138 ]
  %145 = add i32 %143, 1
  store i32 %145, ptr %144, align 8, !tbaa !159
  %146 = zext i32 %143 to i64
  %147 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %144, i64 0, i32 2, i64 %146
  store i32 13, ptr %147, align 8, !tbaa.struct !179
  %148 = getelementptr inbounds i8, ptr %147, i64 8
  store i32 6, ptr %148, align 8, !tbaa.struct !202
  %149 = getelementptr inbounds i8, ptr %147, i64 16
  store i64 %125, ptr %149, align 8, !tbaa.struct !203
  br label %150

150:                                              ; preds = %118, %142
  %151 = tail call fastcc i64 @field_byte_offset(ptr noundef nonnull %0), !range !405
  %152 = load ptr, ptr %33, align 8, !tbaa !17
  %153 = icmp eq ptr %152, null
  br i1 %153, label %158, label %154

154:                                              ; preds = %150
  %155 = load i64, ptr %0, align 8
  %156 = and i64 %155, 65535
  %157 = icmp eq i64 %156, 31
  br i1 %157, label %159, label %158

158:                                              ; preds = %154, %150
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16594, ptr noundef nonnull @.str.5) #31
  br label %159

159:                                              ; preds = %158, %154
  %160 = tail call ptr @bit_position(ptr noundef nonnull %0) #31
  %161 = tail call i32 @host_integerp(ptr noundef %160, i32 noundef 0) #31
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %218, label %163

163:                                              ; preds = %159
  %164 = load ptr, ptr %119, align 8, !tbaa !17
  %165 = tail call i32 @host_integerp(ptr noundef %164, i32 noundef 1) #31
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %218, label %167

167:                                              ; preds = %163
  %168 = tail call i64 @int_bit_position(ptr noundef nonnull %0) #31
  %169 = shl nsw i64 %151, 3
  %170 = load ptr, ptr %119, align 8, !tbaa !17
  %171 = tail call i64 @tree_low_cst(ptr noundef %170, i32 noundef 0) #31
  %172 = load i64, ptr %152, align 8
  %173 = and i64 %172, 65535
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %189, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %struct.tree_type, ptr %152, i64 0, i32 2
  %177 = load ptr, ptr %176, align 8, !tbaa !17
  %178 = icmp eq ptr %177, null
  br i1 %178, label %189, label %179

179:                                              ; preds = %175
  %180 = tail call i32 @host_integerp(ptr noundef nonnull %177, i32 noundef 1) #31
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %179
  %183 = load ptr, ptr %176, align 8, !tbaa !17
  %184 = tail call i64 @tree_low_cst(ptr noundef %183, i32 noundef 1) #31
  br label %189

185:                                              ; preds = %179
  %186 = getelementptr inbounds %struct.tree_type, ptr %152, i64 0, i32 7
  %187 = load i32, ptr %186, align 8, !tbaa !17
  %188 = zext i32 %187 to i64
  br label %189

189:                                              ; preds = %167, %175, %182, %185
  %190 = phi i64 [ %184, %182 ], [ %188, %185 ], [ 32, %167 ], [ 0, %175 ]
  %191 = add i64 %168, %171
  %192 = sub i64 %169, %191
  %193 = add i64 %192, %190
  %194 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %195 = load ptr, ptr %194, align 8, !tbaa !6
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %200

197:                                              ; preds = %189
  %198 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %198, ptr %194, align 8, !tbaa !157
  %199 = icmp eq ptr %198, null
  br i1 %199, label %206, label %200

200:                                              ; preds = %197, %189
  %201 = phi ptr [ %198, %197 ], [ %195, %189 ]
  %202 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %201, i64 0, i32 1
  %203 = load i32, ptr %202, align 4, !tbaa !201
  %204 = load i32, ptr %201, align 8, !tbaa !159
  %205 = icmp eq i32 %203, %204
  br i1 %205, label %206, label %210

206:                                              ; preds = %200, %197
  %207 = phi ptr [ %201, %200 ], [ null, %197 ]
  %208 = tail call ptr @vec_gc_o_reserve(ptr noundef %207, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %208, ptr %194, align 8, !tbaa !6
  %209 = load i32, ptr %208, align 8, !tbaa !159
  br label %210

210:                                              ; preds = %206, %200
  %211 = phi i32 [ %204, %200 ], [ %209, %206 ]
  %212 = phi ptr [ %201, %200 ], [ %208, %206 ]
  %213 = add i32 %211, 1
  store i32 %213, ptr %212, align 8, !tbaa !159
  %214 = zext i32 %211 to i64
  %215 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %212, i64 0, i32 2, i64 %214
  store i32 12, ptr %215, align 8, !tbaa.struct !179
  %216 = getelementptr inbounds i8, ptr %215, i64 8
  store i32 6, ptr %216, align 8, !tbaa.struct !202
  %217 = getelementptr inbounds i8, ptr %215, i64 16
  store i64 %193, ptr %217, align 8, !tbaa.struct !203
  br label %218

218:                                              ; preds = %210, %163, %159, %107
  %219 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %220 = load ptr, ptr %219, align 8, !tbaa !17
  %221 = load i64, ptr %220, align 8
  %222 = and i64 %221, 65535
  %223 = icmp eq i64 %222, 17
  br i1 %223, label %225, label %224

224:                                              ; preds = %218
  tail call fastcc void @add_data_member_location_attribute(ptr noundef nonnull %9, ptr noundef nonnull %0)
  br label %225

225:                                              ; preds = %224, %218
  %226 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %227 = load i64, ptr %226, align 8
  %228 = and i64 %227, 4096
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %256, label %230

230:                                              ; preds = %225
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %3)
  %231 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %232 = load ptr, ptr %231, align 8, !tbaa !6
  %233 = icmp eq ptr %232, null
  br i1 %233, label %234, label %237

234:                                              ; preds = %230
  %235 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %235, ptr %231, align 8, !tbaa !157
  %236 = icmp eq ptr %235, null
  br i1 %236, label %243, label %237

237:                                              ; preds = %234, %230
  %238 = phi ptr [ %235, %234 ], [ %232, %230 ]
  %239 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %238, i64 0, i32 1
  %240 = load i32, ptr %239, align 4, !tbaa !201
  %241 = load i32, ptr %238, align 8, !tbaa !159
  %242 = icmp eq i32 %240, %241
  br i1 %242, label %243, label %247

243:                                              ; preds = %237, %234
  %244 = phi ptr [ %238, %237 ], [ null, %234 ]
  %245 = tail call ptr @vec_gc_o_reserve(ptr noundef %244, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %245, ptr %231, align 8, !tbaa !6
  %246 = load i32, ptr %245, align 8, !tbaa !159
  br label %247

247:                                              ; preds = %237, %243
  %248 = phi i32 [ %241, %237 ], [ %246, %243 ]
  %249 = phi ptr [ %238, %237 ], [ %245, %243 ]
  %250 = add i32 %248, 1
  store i32 %250, ptr %249, align 8, !tbaa !159
  %251 = zext i32 %248 to i64
  %252 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %249, i64 0, i32 2, i64 %251
  store i32 52, ptr %252, align 8, !tbaa.struct !179
  %253 = getelementptr inbounds i8, ptr %252, i64 8
  store i32 9, ptr %253, align 8, !tbaa.struct !202
  %254 = getelementptr inbounds i8, ptr %252, i64 16
  store i8 1, ptr %254, align 8, !tbaa.struct !203
  %255 = getelementptr inbounds i8, ptr %252, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %255, ptr noundef nonnull align 1 dereferenceable(15) %3, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %3)
  br label %256

256:                                              ; preds = %247, %225
  %257 = load i64, ptr %0, align 8
  %258 = and i64 %257, 536870912
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %276, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !6
  %263 = icmp eq ptr %262, null
  br i1 %263, label %264, label %267

264:                                              ; preds = %260
  %265 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %265, ptr %261, align 8, !tbaa !157
  %266 = icmp eq ptr %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %264, %260
  %268 = phi ptr [ %265, %264 ], [ %262, %260 ]
  %269 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %268, i64 0, i32 1
  %270 = load i32, ptr %269, align 4, !tbaa !201
  %271 = load i32, ptr %268, align 8, !tbaa !159
  %272 = icmp eq i32 %270, %271
  br i1 %272, label %273, label %299

273:                                              ; preds = %267, %264
  %274 = phi ptr [ %268, %267 ], [ null, %264 ]
  %275 = tail call ptr @vec_gc_o_reserve(ptr noundef %274, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %275, ptr %261, align 8, !tbaa !6
  br label %295

276:                                              ; preds = %256
  %277 = and i64 %257, 268435456
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %308, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %281 = load ptr, ptr %280, align 8, !tbaa !6
  %282 = icmp eq ptr %281, null
  br i1 %282, label %283, label %286

283:                                              ; preds = %279
  %284 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %284, ptr %280, align 8, !tbaa !157
  %285 = icmp eq ptr %284, null
  br i1 %285, label %292, label %286

286:                                              ; preds = %283, %279
  %287 = phi ptr [ %284, %283 ], [ %281, %279 ]
  %288 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %287, i64 0, i32 1
  %289 = load i32, ptr %288, align 4, !tbaa !201
  %290 = load i32, ptr %287, align 8, !tbaa !159
  %291 = icmp eq i32 %289, %290
  br i1 %291, label %292, label %299

292:                                              ; preds = %286, %283
  %293 = phi ptr [ %287, %286 ], [ null, %283 ]
  %294 = tail call ptr @vec_gc_o_reserve(ptr noundef %293, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %294, ptr %280, align 8, !tbaa !6
  br label %295

295:                                              ; preds = %273, %292
  %296 = phi ptr [ %294, %292 ], [ %275, %273 ]
  %297 = phi i64 [ 3, %292 ], [ 2, %273 ]
  %298 = load i32, ptr %296, align 8, !tbaa !159
  br label %299

299:                                              ; preds = %295, %286, %267
  %300 = phi i32 [ %271, %267 ], [ %290, %286 ], [ %298, %295 ]
  %301 = phi ptr [ %268, %267 ], [ %287, %286 ], [ %296, %295 ]
  %302 = phi i64 [ 2, %267 ], [ 3, %286 ], [ %297, %295 ]
  %303 = add i32 %300, 1
  store i32 %303, ptr %301, align 8, !tbaa !159
  %304 = zext i32 %300 to i64
  %305 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %301, i64 0, i32 2, i64 %304
  store i32 50, ptr %305, align 8
  %306 = getelementptr inbounds i8, ptr %305, i64 8
  store i32 6, ptr %306, align 8
  %307 = getelementptr inbounds i8, ptr %305, i64 16
  store i64 %302, ptr %307, align 8
  br label %308

308:                                              ; preds = %299, %276
  %309 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %310 = load i32, ptr %309, align 4, !tbaa !17
  %311 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %312 = tail call ptr @htab_find_slot_with_hash(ptr noundef %311, ptr noundef nonnull %0, i32 noundef %310, i32 noundef 1) #31
  store ptr %9, ptr %312, align 8, !tbaa !6
  %313 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 11
  store i32 %310, ptr %313, align 8, !tbaa !268
  br label %314

314:                                              ; preds = %2, %308
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @gen_variable_die(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #10 {
  %4 = alloca [15 x i8], align 1
  %5 = alloca [15 x i8], align 1
  %6 = alloca [15 x i8], align 1
  %7 = alloca [15 x i8], align 1
  %8 = alloca [15 x i8], align 1
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.die_struct, align 8
  %16 = alloca %struct.expanded_location, align 8
  %17 = icmp ne ptr %0, null
  %18 = select i1 %17, ptr %0, ptr %1
  br i1 %17, label %19, label %24

19:                                               ; preds = %3
  %20 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !17
  %23 = tail call ptr @htab_find_with_hash(ptr noundef %20, ptr noundef nonnull %0, i32 noundef %22) #31
  br label %24

24:                                               ; preds = %3, %19
  %25 = phi ptr [ %23, %19 ], [ null, %3 ]
  %26 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 2
  %27 = load i64, ptr %26, align 8
  %28 = and i64 %27, 33554432
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %24
  %31 = icmp eq ptr %2, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = load i32, ptr %2, align 8, !tbaa !185
  %34 = icmp ult i32 %33, 58
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = zext i32 %33 to i58
  %37 = lshr i58 -72057594029015036, %36
  %38 = and i58 %37, 1
  %39 = icmp ne i58 %38, 0
  br label %40

40:                                               ; preds = %32, %35, %30, %24
  %41 = phi i1 [ true, %24 ], [ false, %30 ], [ %39, %35 ], [ false, %32 ]
  %42 = load i64, ptr %18, align 8
  %43 = and i64 %42, 65535
  %44 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %43, i64 10
  %45 = load i8, ptr %44, align 2, !tbaa !17
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %40
  %48 = and i64 %27, 2048
  %49 = icmp ne i64 %48, 0
  %50 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = icmp eq ptr %51, %18
  %53 = select i1 %49, i1 %52, i1 false
  br i1 %53, label %65, label %54

54:                                               ; preds = %47
  %55 = icmp eq ptr %51, null
  %56 = select i1 %55, ptr %18, ptr %51
  %57 = getelementptr inbounds %struct.tree_decl_common, ptr %56, i64 0, i32 7
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = icmp eq ptr %58, null
  %60 = icmp eq ptr %58, %56
  %61 = or i1 %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %54
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6838, ptr noundef nonnull @.str.5) #31
  %63 = load ptr, ptr %50, align 8, !tbaa !17
  %64 = load i64, ptr %18, align 8
  br label %65

65:                                               ; preds = %40, %47, %54, %62
  %66 = phi i64 [ %42, %40 ], [ %42, %54 ], [ %64, %62 ], [ %42, %47 ]
  %67 = phi ptr [ null, %40 ], [ %51, %54 ], [ %63, %62 ], [ null, %47 ]
  %68 = icmp ne ptr %67, null
  %69 = select i1 %17, i1 true, i1 %68
  %70 = select i1 %69, ptr %67, ptr %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #31
  store i32 0, ptr %13, align 4, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #31
  store i32 0, ptr %14, align 4, !tbaa !21
  %71 = and i64 %66, 67174399
  %72 = icmp eq i64 %71, 67108896
  br i1 %72, label %73, label %628

73:                                               ; preds = %65
  %74 = load i64, ptr %26, align 8
  %75 = and i64 %74, 67108864
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %628, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %79

79:                                               ; preds = %113, %77
  %80 = phi ptr [ %78, %77 ], [ %114, %113 ]
  %81 = icmp eq ptr %80, null
  br i1 %81, label %628, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.die_struct, ptr %80, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !157
  %85 = icmp eq ptr %84, null
  br i1 %85, label %628, label %86

86:                                               ; preds = %82, %107
  %87 = phi ptr [ %108, %107 ], [ %84, %82 ]
  %88 = phi ptr [ %109, %107 ], [ %84, %82 ]
  %89 = phi i64 [ %111, %107 ], [ 0, %82 ]
  %90 = phi ptr [ %110, %107 ], [ null, %82 ]
  %91 = load i32, ptr %88, align 8, !tbaa !159
  %92 = zext i32 %91 to i64
  %93 = icmp ult i64 %89, %92
  br i1 %93, label %94, label %113

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %88, i64 0, i32 2, i64 %89
  %96 = load i32, ptr %95, align 8, !tbaa !161
  switch i32 %96, label %107 [
    i32 19, label %116
    i32 71, label %97
    i32 49, label %97
  ]

97:                                               ; preds = %94, %94
  %98 = getelementptr i8, ptr %95, i64 8
  %99 = load i32, ptr %98, align 8, !tbaa !163
  %100 = icmp eq i32 %99, 10
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %102 = load ptr, ptr %83, align 8, !tbaa !157
  br label %103

103:                                              ; preds = %101, %97
  %104 = phi ptr [ %87, %97 ], [ %102, %101 ]
  %105 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %88, i64 0, i32 2, i64 %89, i32 1, i32 1
  %106 = load ptr, ptr %105, align 8, !tbaa !17
  br label %107

107:                                              ; preds = %103, %94
  %108 = phi ptr [ %104, %103 ], [ %87, %94 ]
  %109 = phi ptr [ %104, %103 ], [ %88, %94 ]
  %110 = phi ptr [ %106, %103 ], [ %90, %94 ]
  %111 = add nuw nsw i64 %89, 1
  %112 = icmp eq ptr %109, null
  br i1 %112, label %113, label %86, !llvm.loop !164

113:                                              ; preds = %107, %86
  %114 = phi ptr [ %110, %107 ], [ %90, %86 ]
  %115 = icmp eq ptr %114, null
  br i1 %115, label %628, label %79

116:                                              ; preds = %94
  %117 = getelementptr i8, ptr %95, i64 8
  %118 = load i32, ptr %117, align 8, !tbaa !163
  %119 = icmp eq i32 %118, 6
  br i1 %119, label %121, label %120

120:                                              ; preds = %116
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %121

121:                                              ; preds = %120, %116
  %122 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %88, i64 0, i32 2, i64 %89, i32 1, i32 1
  %123 = load i64, ptr %122, align 8, !tbaa !17
  %124 = trunc i64 %123 to i32
  switch i32 %124, label %628 [
    i32 14, label %125
    i32 8, label %125
    i32 7, label %125
  ]

125:                                              ; preds = %121, %121, %121
  %126 = tail call ptr @decl_value_expr_lookup(ptr noundef nonnull %18) #31
  %127 = load i64, ptr %126, align 8
  %128 = and i64 %127, 65535
  %129 = icmp eq i64 %128, 41
  br i1 %129, label %130, label %628

130:                                              ; preds = %125
  %131 = call ptr @get_inner_reference(ptr noundef nonnull %126, ptr noundef nonnull %10, ptr noundef nonnull %11, ptr noundef nonnull %12, ptr noundef nonnull %9, ptr noundef nonnull %14, ptr noundef nonnull %13, i8 noundef zeroext 1) #31
  %132 = icmp eq ptr %131, null
  br i1 %132, label %628, label %133

133:                                              ; preds = %130
  %134 = load i64, ptr %131, align 8
  %135 = and i64 %134, 65535
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %137, label %628

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.tree_decl_common, ptr %131, i64 0, i32 2
  %139 = load i64, ptr %138, align 8
  %140 = and i64 %139, 4096
  %141 = icmp ne i64 %140, 0
  %142 = and i64 %134, 134217728
  %143 = icmp eq i64 %142, 0
  %144 = or i1 %143, %141
  br i1 %144, label %628, label %145

145:                                              ; preds = %137
  %146 = load ptr, ptr %12, align 8, !tbaa !6
  %147 = icmp eq ptr %146, null
  br i1 %147, label %154, label %148

148:                                              ; preds = %145
  %149 = call i32 @host_integerp(ptr noundef nonnull %146, i32 noundef 0) #31
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %628, label %151

151:                                              ; preds = %148
  %152 = load ptr, ptr %12, align 8, !tbaa !6
  %153 = call i64 @tree_low_cst(ptr noundef %152, i32 noundef 0) #31
  br label %154

154:                                              ; preds = %151, %145
  %155 = phi i64 [ 0, %145 ], [ %153, %151 ]
  %156 = load i64, ptr %11, align 8, !tbaa !38
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = sdiv i64 %156, 8
  %160 = add nsw i64 %159, %155
  br label %161

161:                                              ; preds = %158, %154
  %162 = phi i64 [ %155, %154 ], [ %160, %158 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #31
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %15) #31
  %163 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %164 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 2
  %165 = load i32, ptr %164, align 4, !tbaa !17
  %166 = call ptr @htab_find_with_hash(ptr noundef %163, ptr noundef nonnull %18, i32 noundef %165) #31
  %167 = icmp eq ptr %166, null
  br i1 %167, label %285, label %168

168:                                              ; preds = %161, %200
  %169 = phi ptr [ %201, %200 ], [ %166, %161 ]
  %170 = getelementptr inbounds %struct.die_struct, ptr %169, i64 0, i32 2
  %171 = load ptr, ptr %170, align 8, !tbaa !157
  %172 = icmp eq ptr %171, null
  br i1 %172, label %203, label %173

173:                                              ; preds = %168, %194
  %174 = phi ptr [ %195, %194 ], [ %171, %168 ]
  %175 = phi ptr [ %196, %194 ], [ %171, %168 ]
  %176 = phi i64 [ %198, %194 ], [ 0, %168 ]
  %177 = phi ptr [ %197, %194 ], [ null, %168 ]
  %178 = load i32, ptr %175, align 8, !tbaa !159
  %179 = zext i32 %178 to i64
  %180 = icmp ult i64 %176, %179
  br i1 %180, label %181, label %200

181:                                              ; preds = %173
  %182 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %175, i64 0, i32 2, i64 %176
  %183 = load i32, ptr %182, align 8, !tbaa !161
  switch i32 %183, label %194 [
    i32 2, label %627
    i32 71, label %184
    i32 49, label %184
  ]

184:                                              ; preds = %181, %181
  %185 = getelementptr i8, ptr %182, i64 8
  %186 = load i32, ptr %185, align 8, !tbaa !163
  %187 = icmp eq i32 %186, 10
  br i1 %187, label %190, label %188

188:                                              ; preds = %184
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %189 = load ptr, ptr %170, align 8, !tbaa !157
  br label %190

190:                                              ; preds = %188, %184
  %191 = phi ptr [ %174, %184 ], [ %189, %188 ]
  %192 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %175, i64 0, i32 2, i64 %176, i32 1, i32 1
  %193 = load ptr, ptr %192, align 8, !tbaa !17
  br label %194

194:                                              ; preds = %181, %190
  %195 = phi ptr [ %191, %190 ], [ %174, %181 ]
  %196 = phi ptr [ %191, %190 ], [ %175, %181 ]
  %197 = phi ptr [ %193, %190 ], [ %177, %181 ]
  %198 = add nuw nsw i64 %176, 1
  %199 = icmp eq ptr %196, null
  br i1 %199, label %200, label %173, !llvm.loop !164

200:                                              ; preds = %194, %173
  %201 = phi ptr [ %197, %194 ], [ %177, %173 ]
  %202 = icmp eq ptr %201, null
  br i1 %202, label %203, label %168

203:                                              ; preds = %200, %168
  %204 = icmp eq i64 %162, 0
  %205 = select i1 %204, i32 2, i32 1
  %206 = call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %131, i32 noundef %205)
  %207 = icmp eq ptr %206, null
  br i1 %207, label %627, label %208

208:                                              ; preds = %203
  br i1 %204, label %247, label %209

209:                                              ; preds = %208
  %210 = load ptr, ptr %206, align 8, !tbaa !273
  %211 = icmp eq ptr %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %206, i64 0, i32 3
  %214 = load ptr, ptr %213, align 8, !tbaa !274
  %215 = icmp eq ptr %214, null
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14182, ptr noundef nonnull @.str.5) #31
  br label %217

217:                                              ; preds = %209, %212, %216
  %218 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %206, i64 0, i32 3
  %219 = load ptr, ptr %218, align 8, !tbaa !274
  %220 = icmp eq ptr %219, null
  br i1 %220, label %222, label %221

221:                                              ; preds = %232, %229, %222, %217
  br label %242

222:                                              ; preds = %217
  %223 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %206, i64 0, i32 5
  %224 = load ptr, ptr %223, align 8, !tbaa !270
  %225 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %224, i64 0, i32 1
  %226 = load i16, ptr %225, align 8
  %227 = and i16 %226, 255
  %228 = icmp eq i16 %227, 3
  br i1 %228, label %229, label %221

229:                                              ; preds = %222
  %230 = load ptr, ptr %224, align 8, !tbaa !57
  %231 = icmp eq ptr %230, null
  br i1 %231, label %232, label %221

232:                                              ; preds = %229
  %233 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %224, i64 0, i32 3, i32 1
  %234 = load ptr, ptr %233, align 8, !tbaa !17
  %235 = load i32, ptr %234, align 8
  %236 = and i32 %235, 65535
  %237 = icmp eq i32 %236, 45
  br i1 %237, label %238, label %221

238:                                              ; preds = %232
  %239 = call ptr @plus_constant(ptr noundef nonnull %234, i64 noundef %162) #31
  %240 = load ptr, ptr %223, align 8, !tbaa !270
  %241 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %240, i64 0, i32 3, i32 1
  store ptr %239, ptr %241, align 8, !tbaa !17
  br label %247

242:                                              ; preds = %221, %242
  %243 = phi ptr [ %245, %242 ], [ %206, %221 ]
  %244 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %243, i64 0, i32 5
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %244, i64 noundef %162)
  %245 = load ptr, ptr %243, align 8, !tbaa !273
  %246 = icmp eq ptr %245, null
  br i1 %246, label %247, label %242, !llvm.loop !327

247:                                              ; preds = %242, %208, %238
  call fastcc void @add_AT_location_description(ptr noundef nonnull %166, i32 noundef 2, ptr noundef nonnull %206)
  %248 = getelementptr inbounds %struct.die_struct, ptr %166, i64 0, i32 2
  %249 = load ptr, ptr %248, align 8, !tbaa !157
  %250 = icmp eq ptr %249, null
  br i1 %250, label %627, label %251

251:                                              ; preds = %247
  %252 = load i32, ptr %249, align 8, !tbaa !159
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %627, label %254

254:                                              ; preds = %251
  %255 = zext i32 %252 to i64
  br label %256

256:                                              ; preds = %282, %254
  %257 = phi i64 [ 0, %254 ], [ %283, %282 ]
  %258 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %249, i64 0, i32 2, i64 %257
  %259 = load i32, ptr %258, align 8, !tbaa !161
  %260 = icmp eq i32 %259, 60
  br i1 %260, label %261, label %282

261:                                              ; preds = %256
  %262 = trunc i64 %257 to i32
  %263 = getelementptr i8, ptr %258, i64 8
  %264 = load i32, ptr %263, align 8, !tbaa !163
  %265 = icmp eq i32 %264, 14
  br i1 %265, label %266, label %274

266:                                              ; preds = %261
  %267 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %249, i64 0, i32 2, i64 %257, i32 1, i32 1
  %268 = load ptr, ptr %267, align 8, !tbaa !17
  %269 = getelementptr inbounds %struct.indirect_string_node, ptr %268, i64 0, i32 1
  %270 = load i32, ptr %269, align 8, !tbaa !267
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %274, label %272

272:                                              ; preds = %266
  %273 = add i32 %270, -1
  store i32 %273, ptr %269, align 8, !tbaa !267
  br label %274

274:                                              ; preds = %272, %266, %261
  %275 = and i64 %257, 4294967295
  %276 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %249, i64 0, i32 2, i64 %275
  %277 = getelementptr inbounds %struct.dw_attr_struct, ptr %276, i64 1
  %278 = add i32 %252, -1
  store i32 %278, ptr %249, align 8, !tbaa !159
  %279 = sub i32 %278, %262
  %280 = zext i32 %279 to i64
  %281 = shl nuw nsw i64 %280, 5
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %276, ptr nonnull align 8 %277, i64 %281, i1 false)
  br label %627

282:                                              ; preds = %256
  %283 = add nuw nsw i64 %257, 1
  %284 = icmp eq i64 %283, %255
  br i1 %284, label %627, label %256

285:                                              ; preds = %161
  %286 = load ptr, ptr @common_block_die_table, align 8, !tbaa !6
  %287 = icmp eq ptr %286, null
  br i1 %287, label %288, label %290

288:                                              ; preds = %285
  %289 = call ptr @htab_create_alloc(i64 noundef 10, ptr noundef nonnull @common_block_die_table_hash, ptr noundef nonnull @common_block_die_table_eq, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #31
  store ptr %289, ptr @common_block_die_table, align 8, !tbaa !6
  br label %290

290:                                              ; preds = %288, %285
  %291 = phi ptr [ %289, %288 ], [ %286, %285 ]
  %292 = getelementptr inbounds %struct.tree_decl_minimal, ptr %131, i64 0, i32 2
  %293 = load i32, ptr %292, align 4, !tbaa !17
  %294 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 11
  store i32 %293, ptr %294, align 8, !tbaa !268
  %295 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 3
  store ptr %2, ptr %295, align 8, !tbaa !174
  %296 = call ptr @htab_find(ptr noundef %291, ptr noundef nonnull %15) #31
  %297 = call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %131, i32 noundef 2)
  %298 = icmp eq ptr %296, null
  br i1 %298, label %299, label %360

299:                                              ; preds = %290
  %300 = call ptr @decl_assembler_name(ptr noundef nonnull %131) #31
  %301 = getelementptr inbounds %struct.tree_identifier, ptr %300, i64 0, i32 1
  %302 = load ptr, ptr %301, align 8, !tbaa !17
  %303 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 26, ptr %303, align 8, !tbaa !185
  %304 = icmp eq ptr %2, null
  br i1 %304, label %321, label %305

305:                                              ; preds = %299
  %306 = icmp eq ptr %303, %2
  br i1 %306, label %307, label %308

307:                                              ; preds = %305
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %308

308:                                              ; preds = %307, %305
  %309 = getelementptr inbounds %struct.die_struct, ptr %303, i64 0, i32 3
  store ptr %2, ptr %309, align 8, !tbaa !174
  %310 = getelementptr inbounds %struct.die_struct, ptr %2, i64 0, i32 4
  %311 = load ptr, ptr %310, align 8, !tbaa !175
  %312 = icmp eq ptr %311, null
  br i1 %312, label %317, label %313

313:                                              ; preds = %308
  %314 = getelementptr inbounds %struct.die_struct, ptr %311, i64 0, i32 5
  %315 = load ptr, ptr %314, align 8, !tbaa !176
  %316 = getelementptr inbounds %struct.die_struct, ptr %303, i64 0, i32 5
  store ptr %315, ptr %316, align 8, !tbaa !176
  br label %319

317:                                              ; preds = %308
  %318 = getelementptr inbounds %struct.die_struct, ptr %303, i64 0, i32 5
  br label %319

319:                                              ; preds = %317, %313
  %320 = phi ptr [ %318, %317 ], [ %314, %313 ]
  store ptr %303, ptr %320, align 8, !tbaa !176
  store ptr %303, ptr %310, align 8, !tbaa !175
  br label %326

321:                                              ; preds = %299
  %322 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %303, ptr %322, align 8, !tbaa !173
  %323 = getelementptr inbounds %struct.limbo_die_struct, ptr %322, i64 0, i32 1
  store ptr %0, ptr %323, align 8, !tbaa !177
  %324 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %325 = getelementptr inbounds %struct.limbo_die_struct, ptr %322, i64 0, i32 2
  store ptr %324, ptr %325, align 8, !tbaa !171
  store ptr %322, ptr @limbo_die_list, align 8, !tbaa !6
  br label %326

326:                                              ; preds = %319, %321
  call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %303, ptr noundef nonnull %131)
  %327 = icmp eq ptr %297, null
  br i1 %327, label %330, label %328

328:                                              ; preds = %326
  call fastcc void @add_AT_location_description(ptr noundef nonnull %303, i32 noundef 2, ptr noundef nonnull %297)
  %329 = call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %131, i32 noundef 2)
  br label %336

330:                                              ; preds = %326
  %331 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %332 = load i64, ptr %331, align 8
  %333 = and i64 %332, 33554432
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %336, label %335

335:                                              ; preds = %330
  call fastcc void @add_AT_flag(ptr noundef nonnull %303, i32 noundef 60)
  br label %336

336:                                              ; preds = %330, %335, %328
  %337 = phi ptr [ %329, %328 ], [ null, %335 ], [ null, %330 ]
  %338 = call ptr @xstrdup(ptr noundef %302) #31
  %339 = load ptr, ptr @pubname_table, align 8, !tbaa !6
  %340 = icmp eq ptr %339, null
  br i1 %340, label %346, label %341

341:                                              ; preds = %336
  %342 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %339, i64 0, i32 1
  %343 = load i32, ptr %342, align 4, !tbaa !379
  %344 = load i32, ptr %339, align 8, !tbaa !218
  %345 = icmp eq i32 %343, %344
  br i1 %345, label %346, label %349

346:                                              ; preds = %341, %336
  %347 = call ptr @vec_gc_o_reserve(ptr noundef %339, i32 noundef 1, i64 noundef 8, i64 noundef 16) #31
  store ptr %347, ptr @pubname_table, align 8, !tbaa !6
  %348 = load i32, ptr %347, align 8, !tbaa !218
  br label %349

349:                                              ; preds = %341, %346
  %350 = phi i32 [ %344, %341 ], [ %348, %346 ]
  %351 = phi ptr [ %339, %341 ], [ %347, %346 ]
  %352 = add i32 %350, 1
  store i32 %352, ptr %351, align 8, !tbaa !218
  %353 = zext i32 %350 to i64
  %354 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %351, i64 0, i32 2, i64 %353
  store ptr %303, ptr %354, align 8, !tbaa.struct !253
  %355 = getelementptr inbounds i8, ptr %354, i64 8
  store ptr %338, ptr %355, align 8, !tbaa.struct !254
  %356 = load i32, ptr %292, align 4, !tbaa !17
  %357 = getelementptr inbounds %struct.die_struct, ptr %303, i64 0, i32 11
  store i32 %356, ptr %357, align 8, !tbaa !268
  %358 = load ptr, ptr @common_block_die_table, align 8, !tbaa !6
  %359 = call ptr @htab_find_slot(ptr noundef %358, ptr noundef nonnull %303, i32 noundef 1) #31
  store ptr %303, ptr %359, align 8, !tbaa !6
  br label %436

360:                                              ; preds = %290, %392
  %361 = phi ptr [ %393, %392 ], [ %296, %290 ]
  %362 = getelementptr inbounds %struct.die_struct, ptr %361, i64 0, i32 2
  %363 = load ptr, ptr %362, align 8, !tbaa !157
  %364 = icmp eq ptr %363, null
  br i1 %364, label %395, label %365

365:                                              ; preds = %360, %386
  %366 = phi ptr [ %387, %386 ], [ %363, %360 ]
  %367 = phi ptr [ %388, %386 ], [ %363, %360 ]
  %368 = phi i64 [ %390, %386 ], [ 0, %360 ]
  %369 = phi ptr [ %389, %386 ], [ null, %360 ]
  %370 = load i32, ptr %367, align 8, !tbaa !159
  %371 = zext i32 %370 to i64
  %372 = icmp ult i64 %368, %371
  br i1 %372, label %373, label %392

373:                                              ; preds = %365
  %374 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %367, i64 0, i32 2, i64 %368
  %375 = load i32, ptr %374, align 8, !tbaa !161
  switch i32 %375, label %386 [
    i32 2, label %436
    i32 71, label %376
    i32 49, label %376
  ]

376:                                              ; preds = %373, %373
  %377 = getelementptr i8, ptr %374, i64 8
  %378 = load i32, ptr %377, align 8, !tbaa !163
  %379 = icmp eq i32 %378, 10
  br i1 %379, label %382, label %380

380:                                              ; preds = %376
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %381 = load ptr, ptr %362, align 8, !tbaa !157
  br label %382

382:                                              ; preds = %380, %376
  %383 = phi ptr [ %366, %376 ], [ %381, %380 ]
  %384 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %367, i64 0, i32 2, i64 %368, i32 1, i32 1
  %385 = load ptr, ptr %384, align 8, !tbaa !17
  br label %386

386:                                              ; preds = %373, %382
  %387 = phi ptr [ %383, %382 ], [ %366, %373 ]
  %388 = phi ptr [ %383, %382 ], [ %367, %373 ]
  %389 = phi ptr [ %385, %382 ], [ %369, %373 ]
  %390 = add nuw nsw i64 %368, 1
  %391 = icmp eq ptr %388, null
  br i1 %391, label %392, label %365, !llvm.loop !164

392:                                              ; preds = %386, %365
  %393 = phi ptr [ %389, %386 ], [ %369, %365 ]
  %394 = icmp eq ptr %393, null
  br i1 %394, label %395, label %360

395:                                              ; preds = %360, %392
  %396 = icmp eq ptr %297, null
  br i1 %396, label %436, label %397

397:                                              ; preds = %395
  call fastcc void @add_AT_location_description(ptr noundef nonnull %296, i32 noundef 2, ptr noundef nonnull %297)
  %398 = call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %131, i32 noundef 2)
  %399 = getelementptr inbounds %struct.die_struct, ptr %296, i64 0, i32 2
  %400 = load ptr, ptr %399, align 8, !tbaa !157
  %401 = icmp eq ptr %400, null
  br i1 %401, label %436, label %402

402:                                              ; preds = %397
  %403 = load i32, ptr %400, align 8, !tbaa !159
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %436, label %405

405:                                              ; preds = %402
  %406 = zext i32 %403 to i64
  br label %407

407:                                              ; preds = %433, %405
  %408 = phi i64 [ 0, %405 ], [ %434, %433 ]
  %409 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %400, i64 0, i32 2, i64 %408
  %410 = load i32, ptr %409, align 8, !tbaa !161
  %411 = icmp eq i32 %410, 60
  br i1 %411, label %412, label %433

412:                                              ; preds = %407
  %413 = trunc i64 %408 to i32
  %414 = getelementptr i8, ptr %409, i64 8
  %415 = load i32, ptr %414, align 8, !tbaa !163
  %416 = icmp eq i32 %415, 14
  br i1 %416, label %417, label %425

417:                                              ; preds = %412
  %418 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %400, i64 0, i32 2, i64 %408, i32 1, i32 1
  %419 = load ptr, ptr %418, align 8, !tbaa !17
  %420 = getelementptr inbounds %struct.indirect_string_node, ptr %419, i64 0, i32 1
  %421 = load i32, ptr %420, align 8, !tbaa !267
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %425, label %423

423:                                              ; preds = %417
  %424 = add i32 %421, -1
  store i32 %424, ptr %420, align 8, !tbaa !267
  br label %425

425:                                              ; preds = %423, %417, %412
  %426 = and i64 %408, 4294967295
  %427 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %400, i64 0, i32 2, i64 %426
  %428 = getelementptr inbounds %struct.dw_attr_struct, ptr %427, i64 1
  %429 = add i32 %403, -1
  store i32 %429, ptr %400, align 8, !tbaa !159
  %430 = sub i32 %429, %413
  %431 = zext i32 %430 to i64
  %432 = shl nuw nsw i64 %431, 5
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %427, ptr nonnull align 8 %428, i64 %432, i1 false)
  br label %436

433:                                              ; preds = %407
  %434 = add nuw nsw i64 %408, 1
  %435 = icmp eq i64 %434, %406
  br i1 %435, label %436, label %407

436:                                              ; preds = %373, %433, %349, %395, %397, %402, %425
  %437 = phi ptr [ %337, %349 ], [ null, %395 ], [ %398, %397 ], [ %398, %402 ], [ %398, %425 ], [ %398, %433 ], [ %297, %373 ]
  %438 = phi ptr [ %303, %349 ], [ %296, %395 ], [ %296, %397 ], [ %296, %402 ], [ %296, %425 ], [ %296, %433 ], [ %296, %373 ]
  %439 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 52, ptr %439, align 8, !tbaa !185
  %440 = icmp eq ptr %439, %438
  br i1 %440, label %441, label %442

441:                                              ; preds = %436
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %442

442:                                              ; preds = %441, %436
  %443 = getelementptr inbounds %struct.die_struct, ptr %439, i64 0, i32 3
  store ptr %438, ptr %443, align 8, !tbaa !174
  %444 = getelementptr inbounds %struct.die_struct, ptr %438, i64 0, i32 4
  %445 = load ptr, ptr %444, align 8, !tbaa !175
  %446 = icmp eq ptr %445, null
  br i1 %446, label %451, label %447

447:                                              ; preds = %442
  %448 = getelementptr inbounds %struct.die_struct, ptr %445, i64 0, i32 5
  %449 = load ptr, ptr %448, align 8, !tbaa !176
  %450 = getelementptr inbounds %struct.die_struct, ptr %439, i64 0, i32 5
  store ptr %449, ptr %450, align 8, !tbaa !176
  br label %453

451:                                              ; preds = %442
  %452 = getelementptr inbounds %struct.die_struct, ptr %439, i64 0, i32 5
  br label %453

453:                                              ; preds = %447, %451
  %454 = phi ptr [ %452, %451 ], [ %448, %447 ]
  store ptr %439, ptr %454, align 8, !tbaa !176
  store ptr %439, ptr %444, align 8, !tbaa !175
  call fastcc void @add_name_and_src_coords_attributes(ptr noundef nonnull %439, ptr noundef %0)
  %455 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %456 = load ptr, ptr %455, align 8, !tbaa !17
  %457 = load i64, ptr %0, align 8
  %458 = trunc i64 %457 to i32
  %459 = load i64, ptr %456, align 8
  %460 = trunc i64 %459 to i32
  %461 = and i32 %460, 65535
  %462 = and i32 %460, 65534
  %463 = icmp eq i32 %462, 8
  %464 = icmp eq i32 %461, 11
  %465 = or i1 %463, %464
  br i1 %465, label %466, label %478

466:                                              ; preds = %453
  %467 = getelementptr inbounds %struct.tree_common, ptr %456, i64 0, i32 2
  %468 = load ptr, ptr %467, align 8, !tbaa !17
  %469 = icmp eq ptr %468, null
  br i1 %469, label %478, label %470

470:                                              ; preds = %466
  %471 = getelementptr inbounds %struct.tree_type, ptr %456, i64 0, i32 12
  %472 = load ptr, ptr %471, align 8, !tbaa !17
  %473 = icmp eq ptr %472, null
  br i1 %473, label %474, label %478

474:                                              ; preds = %470
  %475 = load i64, ptr %468, align 8
  %476 = trunc i64 %475 to i32
  %477 = and i32 %476, 65535
  br label %478

478:                                              ; preds = %474, %470, %466, %453
  %479 = phi i64 [ %475, %474 ], [ %459, %470 ], [ %459, %466 ], [ %459, %453 ]
  %480 = phi ptr [ %468, %474 ], [ %456, %470 ], [ %456, %466 ], [ %456, %453 ]
  %481 = phi i32 [ %477, %474 ], [ %461, %470 ], [ %461, %466 ], [ %461, %453 ]
  %482 = trunc i32 %481 to i16
  switch i16 %482, label %483 [
    i16 19, label %523
    i16 0, label %523
  ]

483:                                              ; preds = %478
  %484 = and i32 %458, 1048576
  %485 = icmp eq i32 %484, 0
  %486 = trunc i64 %479 to i32
  %487 = lshr i32 %486, 20
  %488 = and i32 %487, 1
  %489 = select i1 %485, i32 %488, i32 1
  %490 = and i32 %458, 524288
  %491 = icmp eq i32 %490, 0
  %492 = lshr i32 %486, 19
  %493 = and i32 %492, 1
  %494 = select i1 %491, i32 %493, i32 1
  %495 = call fastcc ptr @modified_type_die(ptr noundef nonnull %480, i32 noundef %489, i32 noundef %494, ptr noundef %2)
  %496 = icmp eq ptr %495, null
  br i1 %496, label %523, label %497

497:                                              ; preds = %483
  %498 = getelementptr inbounds %struct.die_struct, ptr %439, i64 0, i32 2
  %499 = load ptr, ptr %498, align 8, !tbaa !6
  %500 = icmp eq ptr %499, null
  br i1 %500, label %501, label %504

501:                                              ; preds = %497
  %502 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %502, ptr %498, align 8, !tbaa !157
  %503 = icmp eq ptr %502, null
  br i1 %503, label %510, label %504

504:                                              ; preds = %501, %497
  %505 = phi ptr [ %502, %501 ], [ %499, %497 ]
  %506 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %505, i64 0, i32 1
  %507 = load i32, ptr %506, align 4, !tbaa !201
  %508 = load i32, ptr %505, align 8, !tbaa !159
  %509 = icmp eq i32 %507, %508
  br i1 %509, label %510, label %514

510:                                              ; preds = %504, %501
  %511 = phi ptr [ %505, %504 ], [ null, %501 ]
  %512 = call ptr @vec_gc_o_reserve(ptr noundef %511, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %512, ptr %498, align 8, !tbaa !6
  %513 = load i32, ptr %512, align 8, !tbaa !159
  br label %514

514:                                              ; preds = %504, %510
  %515 = phi i32 [ %508, %504 ], [ %513, %510 ]
  %516 = phi ptr [ %505, %504 ], [ %512, %510 ]
  %517 = add i32 %515, 1
  store i32 %517, ptr %516, align 8, !tbaa !159
  %518 = zext i32 %515 to i64
  %519 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %516, i64 0, i32 2, i64 %518
  store i32 73, ptr %519, align 8, !tbaa.struct !179
  %520 = getelementptr inbounds i8, ptr %519, i64 8
  store i32 10, ptr %520, align 8, !tbaa.struct !202
  %521 = getelementptr inbounds i8, ptr %519, i64 16
  store ptr %495, ptr %521, align 8, !tbaa.struct !203
  %522 = getelementptr inbounds i8, ptr %519, i64 24
  store i32 0, ptr %522, align 8, !tbaa.struct !294
  br label %523

523:                                              ; preds = %514, %483, %478, %478
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %8)
  %524 = getelementptr inbounds %struct.die_struct, ptr %439, i64 0, i32 2
  %525 = load ptr, ptr %524, align 8, !tbaa !6
  %526 = icmp eq ptr %525, null
  br i1 %526, label %527, label %530

527:                                              ; preds = %523
  %528 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %528, ptr %524, align 8, !tbaa !157
  %529 = icmp eq ptr %528, null
  br i1 %529, label %536, label %530

530:                                              ; preds = %527, %523
  %531 = phi ptr [ %528, %527 ], [ %525, %523 ]
  %532 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %531, i64 0, i32 1
  %533 = load i32, ptr %532, align 4, !tbaa !201
  %534 = load i32, ptr %531, align 8, !tbaa !159
  %535 = icmp eq i32 %533, %534
  br i1 %535, label %536, label %540

536:                                              ; preds = %530, %527
  %537 = phi ptr [ %531, %530 ], [ null, %527 ]
  %538 = call ptr @vec_gc_o_reserve(ptr noundef %537, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %538, ptr %524, align 8, !tbaa !6
  %539 = load i32, ptr %538, align 8, !tbaa !159
  br label %540

540:                                              ; preds = %530, %536
  %541 = phi i32 [ %534, %530 ], [ %539, %536 ]
  %542 = phi ptr [ %531, %530 ], [ %538, %536 ]
  %543 = add i32 %541, 1
  store i32 %543, ptr %542, align 8, !tbaa !159
  %544 = zext i32 %541 to i64
  %545 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %542, i64 0, i32 2, i64 %544
  store i32 63, ptr %545, align 8, !tbaa.struct !179
  %546 = getelementptr inbounds i8, ptr %545, i64 8
  store i32 9, ptr %546, align 8, !tbaa.struct !202
  %547 = getelementptr inbounds i8, ptr %545, i64 16
  store i8 1, ptr %547, align 8, !tbaa.struct !203
  %548 = getelementptr inbounds i8, ptr %545, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %548, ptr noundef nonnull align 1 dereferenceable(15) %8, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %8)
  %549 = icmp eq ptr %437, null
  br i1 %549, label %591, label %550

550:                                              ; preds = %540
  %551 = icmp eq i64 %162, 0
  br i1 %551, label %590, label %552

552:                                              ; preds = %550
  %553 = load ptr, ptr %437, align 8, !tbaa !273
  %554 = icmp eq ptr %553, null
  br i1 %554, label %560, label %555

555:                                              ; preds = %552
  %556 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %437, i64 0, i32 3
  %557 = load ptr, ptr %556, align 8, !tbaa !274
  %558 = icmp eq ptr %557, null
  br i1 %558, label %559, label %560

559:                                              ; preds = %555
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 14182, ptr noundef nonnull @.str.5) #31
  br label %560

560:                                              ; preds = %552, %555, %559
  %561 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %437, i64 0, i32 3
  %562 = load ptr, ptr %561, align 8, !tbaa !274
  %563 = icmp eq ptr %562, null
  br i1 %563, label %565, label %564

564:                                              ; preds = %575, %572, %565, %560
  br label %585

565:                                              ; preds = %560
  %566 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %437, i64 0, i32 5
  %567 = load ptr, ptr %566, align 8, !tbaa !270
  %568 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %567, i64 0, i32 1
  %569 = load i16, ptr %568, align 8
  %570 = and i16 %569, 255
  %571 = icmp eq i16 %570, 3
  br i1 %571, label %572, label %564

572:                                              ; preds = %565
  %573 = load ptr, ptr %567, align 8, !tbaa !57
  %574 = icmp eq ptr %573, null
  br i1 %574, label %575, label %564

575:                                              ; preds = %572
  %576 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %567, i64 0, i32 3, i32 1
  %577 = load ptr, ptr %576, align 8, !tbaa !17
  %578 = load i32, ptr %577, align 8
  %579 = and i32 %578, 65535
  %580 = icmp eq i32 %579, 45
  br i1 %580, label %581, label %564

581:                                              ; preds = %575
  %582 = call ptr @plus_constant(ptr noundef nonnull %577, i64 noundef %162) #31
  %583 = load ptr, ptr %566, align 8, !tbaa !270
  %584 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %583, i64 0, i32 3, i32 1
  store ptr %582, ptr %584, align 8, !tbaa !17
  br label %590

585:                                              ; preds = %564, %585
  %586 = phi ptr [ %588, %585 ], [ %437, %564 ]
  %587 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %586, i64 0, i32 5
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %587, i64 noundef %162)
  %588 = load ptr, ptr %586, align 8, !tbaa !273
  %589 = icmp eq ptr %588, null
  br i1 %589, label %590, label %585, !llvm.loop !327

590:                                              ; preds = %585, %581, %550
  call fastcc void @add_AT_location_description(ptr noundef nonnull %439, i32 noundef 2, ptr noundef nonnull %437)
  br label %621

591:                                              ; preds = %540
  %592 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %593 = load i64, ptr %592, align 8
  %594 = and i64 %593, 33554432
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %621, label %596

596:                                              ; preds = %591
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %7)
  %597 = load ptr, ptr %524, align 8, !tbaa !6
  %598 = icmp eq ptr %597, null
  br i1 %598, label %599, label %602

599:                                              ; preds = %596
  %600 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %600, ptr %524, align 8, !tbaa !157
  %601 = icmp eq ptr %600, null
  br i1 %601, label %608, label %602

602:                                              ; preds = %599, %596
  %603 = phi ptr [ %600, %599 ], [ %597, %596 ]
  %604 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %603, i64 0, i32 1
  %605 = load i32, ptr %604, align 4, !tbaa !201
  %606 = load i32, ptr %603, align 8, !tbaa !159
  %607 = icmp eq i32 %605, %606
  br i1 %607, label %608, label %612

608:                                              ; preds = %602, %599
  %609 = phi ptr [ %603, %602 ], [ null, %599 ]
  %610 = call ptr @vec_gc_o_reserve(ptr noundef %609, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %610, ptr %524, align 8, !tbaa !6
  %611 = load i32, ptr %610, align 8, !tbaa !159
  br label %612

612:                                              ; preds = %602, %608
  %613 = phi i32 [ %606, %602 ], [ %611, %608 ]
  %614 = phi ptr [ %603, %602 ], [ %610, %608 ]
  %615 = add i32 %613, 1
  store i32 %615, ptr %614, align 8, !tbaa !159
  %616 = zext i32 %613 to i64
  %617 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %614, i64 0, i32 2, i64 %616
  store i32 60, ptr %617, align 8, !tbaa.struct !179
  %618 = getelementptr inbounds i8, ptr %617, i64 8
  store i32 9, ptr %618, align 8, !tbaa.struct !202
  %619 = getelementptr inbounds i8, ptr %617, i64 16
  store i8 1, ptr %619, align 8, !tbaa.struct !203
  %620 = getelementptr inbounds i8, ptr %617, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %620, ptr noundef nonnull align 1 dereferenceable(15) %7, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %7)
  br label %621

621:                                              ; preds = %591, %612, %590
  %622 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %623 = load i32, ptr %622, align 4, !tbaa !17
  %624 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %625 = call ptr @htab_find_slot_with_hash(ptr noundef %624, ptr noundef nonnull %0, i32 noundef %623, i32 noundef 1) #31
  store ptr %439, ptr %625, align 8, !tbaa !6
  %626 = getelementptr inbounds %struct.die_struct, ptr %439, i64 0, i32 11
  store i32 %623, ptr %626, align 8, !tbaa !268
  br label %627

627:                                              ; preds = %181, %282, %274, %251, %247, %203, %621
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #31
  br label %1224

628:                                              ; preds = %113, %82, %79, %121, %73, %65, %125, %137, %133, %130, %148
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #31
  %629 = icmp ne ptr %25, null
  %630 = and i1 %629, %41
  br i1 %630, label %631, label %640

631:                                              ; preds = %628
  %632 = icmp eq ptr %2, null
  br i1 %632, label %1224, label %633

633:                                              ; preds = %631, %636
  %634 = phi ptr [ %638, %636 ], [ %2, %631 ]
  %635 = load i32, ptr %634, align 8, !tbaa !185
  switch i32 %635, label %636 [
    i32 29, label %640
    i32 46, label %640
  ]

636:                                              ; preds = %633
  %637 = getelementptr inbounds %struct.die_struct, ptr %634, i64 0, i32 3
  %638 = load ptr, ptr %637, align 8, !tbaa !174
  %639 = icmp eq ptr %638, null
  br i1 %639, label %1224, label %633, !llvm.loop !372

640:                                              ; preds = %633, %633, %628
  br i1 %41, label %641, label %666

641:                                              ; preds = %640
  %642 = icmp eq ptr %2, null
  br i1 %642, label %643, label %645

643:                                              ; preds = %641
  %644 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 52, ptr %644, align 8, !tbaa !185
  br label %686

645:                                              ; preds = %641
  %646 = load i32, ptr %2, align 8, !tbaa !185
  switch i32 %646, label %647 [
    i32 19, label %649
    i32 2, label %649
    i32 56, label %649
    i32 23, label %649
  ]

647:                                              ; preds = %645
  %648 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 52, ptr %648, align 8, !tbaa !185
  br label %669

649:                                              ; preds = %645, %645, %645, %645
  %650 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 13, ptr %650, align 8, !tbaa !185
  %651 = icmp eq ptr %650, %2
  br i1 %651, label %652, label %653

652:                                              ; preds = %649
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %653

653:                                              ; preds = %652, %649
  %654 = getelementptr inbounds %struct.die_struct, ptr %650, i64 0, i32 3
  store ptr %2, ptr %654, align 8, !tbaa !174
  %655 = getelementptr inbounds %struct.die_struct, ptr %2, i64 0, i32 4
  %656 = load ptr, ptr %655, align 8, !tbaa !175
  %657 = icmp eq ptr %656, null
  br i1 %657, label %662, label %658

658:                                              ; preds = %653
  %659 = getelementptr inbounds %struct.die_struct, ptr %656, i64 0, i32 5
  %660 = load ptr, ptr %659, align 8, !tbaa !176
  %661 = getelementptr inbounds %struct.die_struct, ptr %650, i64 0, i32 5
  store ptr %660, ptr %661, align 8, !tbaa !176
  br label %664

662:                                              ; preds = %653
  %663 = getelementptr inbounds %struct.die_struct, ptr %650, i64 0, i32 5
  br label %664

664:                                              ; preds = %658, %662
  %665 = phi ptr [ %663, %662 ], [ %659, %658 ]
  store ptr %650, ptr %665, align 8, !tbaa !176
  store ptr %650, ptr %655, align 8, !tbaa !175
  br label %692

666:                                              ; preds = %640
  %667 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  store i32 52, ptr %667, align 8, !tbaa !185
  %668 = icmp eq ptr %2, null
  br i1 %668, label %686, label %669

669:                                              ; preds = %647, %666
  %670 = phi ptr [ %648, %647 ], [ %667, %666 ]
  %671 = icmp eq ptr %670, %2
  br i1 %671, label %672, label %673

672:                                              ; preds = %669
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %673

673:                                              ; preds = %672, %669
  %674 = getelementptr inbounds %struct.die_struct, ptr %670, i64 0, i32 3
  store ptr %2, ptr %674, align 8, !tbaa !174
  %675 = getelementptr inbounds %struct.die_struct, ptr %2, i64 0, i32 4
  %676 = load ptr, ptr %675, align 8, !tbaa !175
  %677 = icmp eq ptr %676, null
  br i1 %677, label %682, label %678

678:                                              ; preds = %673
  %679 = getelementptr inbounds %struct.die_struct, ptr %676, i64 0, i32 5
  %680 = load ptr, ptr %679, align 8, !tbaa !176
  %681 = getelementptr inbounds %struct.die_struct, ptr %670, i64 0, i32 5
  store ptr %680, ptr %681, align 8, !tbaa !176
  br label %684

682:                                              ; preds = %673
  %683 = getelementptr inbounds %struct.die_struct, ptr %670, i64 0, i32 5
  br label %684

684:                                              ; preds = %682, %678
  %685 = phi ptr [ %683, %682 ], [ %679, %678 ]
  store ptr %670, ptr %685, align 8, !tbaa !176
  store ptr %670, ptr %675, align 8, !tbaa !175
  br label %692

686:                                              ; preds = %643, %666
  %687 = phi ptr [ %644, %643 ], [ %667, %666 ]
  %688 = call ptr @ggc_alloc_cleared_stat(i64 noundef 24) #31
  store ptr %687, ptr %688, align 8, !tbaa !173
  %689 = getelementptr inbounds %struct.limbo_die_struct, ptr %688, i64 0, i32 1
  store ptr %0, ptr %689, align 8, !tbaa !177
  %690 = load ptr, ptr @limbo_die_list, align 8, !tbaa !6
  %691 = getelementptr inbounds %struct.limbo_die_struct, ptr %688, i64 0, i32 2
  store ptr %690, ptr %691, align 8, !tbaa !171
  store ptr %688, ptr @limbo_die_list, align 8, !tbaa !6
  br label %692

692:                                              ; preds = %686, %684, %664
  %693 = phi ptr [ %650, %664 ], [ %670, %684 ], [ %687, %686 ]
  %694 = icmp eq ptr %70, null
  br i1 %694, label %697, label %695

695:                                              ; preds = %692
  %696 = call fastcc ptr @add_abstract_origin_attribute(ptr noundef nonnull %693, ptr noundef nonnull %70)
  br label %1027

697:                                              ; preds = %692
  br i1 %629, label %698, label %797

698:                                              ; preds = %697
  %699 = load i64, ptr %0, align 8
  %700 = and i64 %699, 67108864
  %701 = icmp eq i64 %700, 0
  %702 = or i1 %41, %701
  br i1 %702, label %797, label %703

703:                                              ; preds = %698, %735
  %704 = phi ptr [ %736, %735 ], [ %25, %698 ]
  %705 = getelementptr inbounds %struct.die_struct, ptr %704, i64 0, i32 2
  %706 = load ptr, ptr %705, align 8, !tbaa !157
  %707 = icmp eq ptr %706, null
  br i1 %707, label %797, label %708

708:                                              ; preds = %703, %729
  %709 = phi ptr [ %730, %729 ], [ %706, %703 ]
  %710 = phi ptr [ %731, %729 ], [ %706, %703 ]
  %711 = phi i64 [ %733, %729 ], [ 0, %703 ]
  %712 = phi ptr [ %732, %729 ], [ null, %703 ]
  %713 = load i32, ptr %710, align 8, !tbaa !159
  %714 = zext i32 %713 to i64
  %715 = icmp ult i64 %711, %714
  br i1 %715, label %716, label %735

716:                                              ; preds = %708
  %717 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %710, i64 0, i32 2, i64 %711
  %718 = load i32, ptr %717, align 8, !tbaa !161
  switch i32 %718, label %729 [
    i32 60, label %738
    i32 71, label %719
    i32 49, label %719
  ]

719:                                              ; preds = %716, %716
  %720 = getelementptr i8, ptr %717, i64 8
  %721 = load i32, ptr %720, align 8, !tbaa !163
  %722 = icmp eq i32 %721, 10
  br i1 %722, label %725, label %723

723:                                              ; preds = %719
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %724 = load ptr, ptr %705, align 8, !tbaa !157
  br label %725

725:                                              ; preds = %723, %719
  %726 = phi ptr [ %709, %719 ], [ %724, %723 ]
  %727 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %710, i64 0, i32 2, i64 %711, i32 1, i32 1
  %728 = load ptr, ptr %727, align 8, !tbaa !17
  br label %729

729:                                              ; preds = %725, %716
  %730 = phi ptr [ %726, %725 ], [ %709, %716 ]
  %731 = phi ptr [ %726, %725 ], [ %710, %716 ]
  %732 = phi ptr [ %728, %725 ], [ %712, %716 ]
  %733 = add nuw nsw i64 %711, 1
  %734 = icmp eq ptr %731, null
  br i1 %734, label %735, label %708, !llvm.loop !164

735:                                              ; preds = %729, %708
  %736 = phi ptr [ %732, %729 ], [ %712, %708 ]
  %737 = icmp eq ptr %736, null
  br i1 %737, label %797, label %703

738:                                              ; preds = %716
  %739 = getelementptr i8, ptr %717, i64 8
  %740 = load i32, ptr %739, align 8, !tbaa !163
  %741 = icmp eq i32 %740, 9
  br i1 %741, label %743, label %742

742:                                              ; preds = %738
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6900, ptr noundef nonnull @.str.5) #31
  br label %743

743:                                              ; preds = %738, %742
  %744 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %710, i64 0, i32 2, i64 %711, i32 1, i32 1
  %745 = load i8, ptr %744, align 8, !tbaa !17
  %746 = icmp eq i8 %745, 1
  br i1 %746, label %747, label %797

747:                                              ; preds = %743
  %748 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 2
  %749 = load ptr, ptr %748, align 8, !tbaa !6
  %750 = icmp eq ptr %749, null
  br i1 %750, label %751, label %754

751:                                              ; preds = %747
  %752 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %752, ptr %748, align 8, !tbaa !157
  %753 = icmp eq ptr %752, null
  br i1 %753, label %760, label %754

754:                                              ; preds = %751, %747
  %755 = phi ptr [ %752, %751 ], [ %749, %747 ]
  %756 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %755, i64 0, i32 1
  %757 = load i32, ptr %756, align 4, !tbaa !201
  %758 = load i32, ptr %755, align 8, !tbaa !159
  %759 = icmp eq i32 %757, %758
  br i1 %759, label %760, label %764

760:                                              ; preds = %754, %751
  %761 = phi ptr [ %755, %754 ], [ null, %751 ]
  %762 = call ptr @vec_gc_o_reserve(ptr noundef %761, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %762, ptr %748, align 8, !tbaa !6
  %763 = load i32, ptr %762, align 8, !tbaa !159
  br label %764

764:                                              ; preds = %754, %760
  %765 = phi i32 [ %758, %754 ], [ %763, %760 ]
  %766 = phi ptr [ %755, %754 ], [ %762, %760 ]
  %767 = add i32 %765, 1
  store i32 %767, ptr %766, align 8, !tbaa !159
  %768 = zext i32 %765 to i64
  %769 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %766, i64 0, i32 2, i64 %768
  store i32 71, ptr %769, align 8, !tbaa.struct !179
  %770 = getelementptr inbounds i8, ptr %769, i64 8
  store i32 10, ptr %770, align 8, !tbaa.struct !202
  %771 = getelementptr inbounds i8, ptr %769, i64 16
  store ptr %25, ptr %771, align 8, !tbaa.struct !203
  %772 = getelementptr inbounds i8, ptr %769, i64 24
  store i32 0, ptr %772, align 8, !tbaa.struct !294
  %773 = getelementptr inbounds %struct.die_struct, ptr %25, i64 0, i32 6
  %774 = load ptr, ptr %773, align 8, !tbaa !295
  %775 = icmp eq ptr %774, null
  br i1 %775, label %777, label %776

776:                                              ; preds = %764
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7143, ptr noundef nonnull @.str.5) #31
  br label %777

777:                                              ; preds = %764, %776
  store ptr %693, ptr %773, align 8, !tbaa !295
  %778 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %779 = load ptr, ptr %778, align 8, !tbaa !17
  %780 = icmp eq ptr %779, null
  br i1 %780, label %1027, label %781

781:                                              ; preds = %777
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %16) #31
  %782 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %783 = load i32, ptr %782, align 8, !tbaa !17
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %16, i32 noundef %783) #31
  %784 = load ptr, ptr %16, align 8, !tbaa !373
  %785 = call fastcc ptr @lookup_filename(ptr noundef %784)
  %786 = call fastcc ptr @get_AT_file(ptr noundef nonnull %25)
  %787 = icmp eq ptr %786, %785
  br i1 %787, label %789, label %788

788:                                              ; preds = %781
  call fastcc void @add_AT_file(ptr noundef nonnull %693, i32 noundef 58, ptr noundef %785)
  br label %789

789:                                              ; preds = %788, %781
  %790 = call fastcc i32 @get_AT_unsigned(ptr noundef nonnull %25, i32 noundef 59)
  %791 = getelementptr inbounds %struct.expanded_location, ptr %16, i64 0, i32 1
  %792 = load i32, ptr %791, align 8, !tbaa !375
  %793 = icmp eq i32 %790, %792
  br i1 %793, label %796, label %794

794:                                              ; preds = %789
  %795 = sext i32 %792 to i64
  call fastcc void @add_AT_unsigned(ptr noundef nonnull %693, i32 noundef 59, i64 noundef %795)
  br label %796

796:                                              ; preds = %794, %789
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #31
  br label %1027

797:                                              ; preds = %703, %735, %743, %698, %697
  %798 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %799 = load ptr, ptr %798, align 8, !tbaa !17
  call fastcc void @add_name_and_src_coords_attributes(ptr noundef %693, ptr noundef %0)
  %800 = load i64, ptr %0, align 8
  %801 = trunc i64 %800 to i16
  switch i16 %801, label %842 [
    i16 34, label %802
    i16 36, label %802
    i16 32, label %802
  ]

802:                                              ; preds = %797, %797, %797
  %803 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %804 = load i64, ptr %803, align 8
  %805 = and i64 %804, 268435456
  %806 = icmp eq i64 %805, 0
  br i1 %806, label %842, label %807

807:                                              ; preds = %802
  %808 = getelementptr inbounds %struct.tree_common, ptr %799, i64 0, i32 2
  %809 = load ptr, ptr %808, align 8, !tbaa !17
  %810 = load i64, ptr %809, align 8
  %811 = trunc i64 %810 to i32
  %812 = and i32 %811, 65535
  %813 = and i32 %811, 65534
  %814 = icmp eq i32 %813, 8
  %815 = icmp eq i32 %812, 11
  %816 = or i1 %814, %815
  br i1 %816, label %817, label %829

817:                                              ; preds = %807
  %818 = getelementptr inbounds %struct.tree_common, ptr %809, i64 0, i32 2
  %819 = load ptr, ptr %818, align 8, !tbaa !17
  %820 = icmp eq ptr %819, null
  br i1 %820, label %829, label %821

821:                                              ; preds = %817
  %822 = getelementptr inbounds %struct.tree_type, ptr %809, i64 0, i32 12
  %823 = load ptr, ptr %822, align 8, !tbaa !17
  %824 = icmp eq ptr %823, null
  br i1 %824, label %825, label %829

825:                                              ; preds = %821
  %826 = load i64, ptr %819, align 8
  %827 = trunc i64 %826 to i32
  %828 = and i32 %827, 65535
  br label %829

829:                                              ; preds = %825, %821, %817, %807
  %830 = phi i64 [ %826, %825 ], [ %810, %821 ], [ %810, %817 ], [ %810, %807 ]
  %831 = phi ptr [ %819, %825 ], [ %809, %821 ], [ %809, %817 ], [ %809, %807 ]
  %832 = phi i32 [ %828, %825 ], [ %812, %821 ], [ %812, %817 ], [ %812, %807 ]
  %833 = trunc i32 %832 to i16
  switch i16 %833, label %834 [
    i16 19, label %909
    i16 0, label %909
  ]

834:                                              ; preds = %829
  %835 = trunc i64 %830 to i32
  %836 = lshr i32 %835, 20
  %837 = and i32 %836, 1
  %838 = lshr i32 %835, 19
  %839 = and i32 %838, 1
  %840 = call fastcc ptr @modified_type_die(ptr noundef nonnull %831, i32 noundef %837, i32 noundef %839, ptr noundef %2)
  %841 = icmp eq ptr %840, null
  br i1 %841, label %909, label %882

842:                                              ; preds = %797, %802
  %843 = trunc i64 %800 to i32
  %844 = load i64, ptr %799, align 8
  %845 = trunc i64 %844 to i32
  %846 = and i32 %845, 65535
  %847 = and i32 %845, 65534
  %848 = icmp eq i32 %847, 8
  %849 = icmp eq i32 %846, 11
  %850 = or i1 %848, %849
  br i1 %850, label %851, label %863

851:                                              ; preds = %842
  %852 = getelementptr inbounds %struct.tree_common, ptr %799, i64 0, i32 2
  %853 = load ptr, ptr %852, align 8, !tbaa !17
  %854 = icmp eq ptr %853, null
  br i1 %854, label %863, label %855

855:                                              ; preds = %851
  %856 = getelementptr inbounds %struct.tree_type, ptr %799, i64 0, i32 12
  %857 = load ptr, ptr %856, align 8, !tbaa !17
  %858 = icmp eq ptr %857, null
  br i1 %858, label %859, label %863

859:                                              ; preds = %855
  %860 = load i64, ptr %853, align 8
  %861 = trunc i64 %860 to i32
  %862 = and i32 %861, 65535
  br label %863

863:                                              ; preds = %859, %855, %851, %842
  %864 = phi i64 [ %860, %859 ], [ %844, %855 ], [ %844, %851 ], [ %844, %842 ]
  %865 = phi ptr [ %853, %859 ], [ %799, %855 ], [ %799, %851 ], [ %799, %842 ]
  %866 = phi i32 [ %862, %859 ], [ %846, %855 ], [ %846, %851 ], [ %846, %842 ]
  %867 = trunc i32 %866 to i16
  switch i16 %867, label %868 [
    i16 19, label %909
    i16 0, label %909
  ]

868:                                              ; preds = %863
  %869 = and i32 %843, 1048576
  %870 = icmp eq i32 %869, 0
  %871 = trunc i64 %864 to i32
  %872 = lshr i32 %871, 20
  %873 = and i32 %872, 1
  %874 = select i1 %870, i32 %873, i32 1
  %875 = and i32 %843, 524288
  %876 = icmp eq i32 %875, 0
  %877 = lshr i32 %871, 19
  %878 = and i32 %877, 1
  %879 = select i1 %876, i32 %878, i32 1
  %880 = call fastcc ptr @modified_type_die(ptr noundef nonnull %865, i32 noundef %874, i32 noundef %879, ptr noundef %2)
  %881 = icmp eq ptr %880, null
  br i1 %881, label %909, label %882

882:                                              ; preds = %834, %868
  %883 = phi ptr [ %840, %834 ], [ %880, %868 ]
  %884 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 2
  %885 = load ptr, ptr %884, align 8, !tbaa !6
  %886 = icmp eq ptr %885, null
  br i1 %886, label %887, label %890

887:                                              ; preds = %882
  %888 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %888, ptr %884, align 8, !tbaa !157
  %889 = icmp eq ptr %888, null
  br i1 %889, label %896, label %890

890:                                              ; preds = %887, %882
  %891 = phi ptr [ %888, %887 ], [ %885, %882 ]
  %892 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %891, i64 0, i32 1
  %893 = load i32, ptr %892, align 4, !tbaa !201
  %894 = load i32, ptr %891, align 8, !tbaa !159
  %895 = icmp eq i32 %893, %894
  br i1 %895, label %896, label %900

896:                                              ; preds = %890, %887
  %897 = phi ptr [ %891, %890 ], [ null, %887 ]
  %898 = call ptr @vec_gc_o_reserve(ptr noundef %897, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %898, ptr %884, align 8, !tbaa !6
  %899 = load i32, ptr %898, align 8, !tbaa !159
  br label %900

900:                                              ; preds = %890, %896
  %901 = phi i32 [ %894, %890 ], [ %899, %896 ]
  %902 = phi ptr [ %891, %890 ], [ %898, %896 ]
  %903 = add i32 %901, 1
  store i32 %903, ptr %902, align 8, !tbaa !159
  %904 = zext i32 %901 to i64
  %905 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %902, i64 0, i32 2, i64 %904
  store i32 73, ptr %905, align 8, !tbaa.struct !179
  %906 = getelementptr inbounds i8, ptr %905, i64 8
  store i32 10, ptr %906, align 8, !tbaa.struct !202
  %907 = getelementptr inbounds i8, ptr %905, i64 16
  store ptr %883, ptr %907, align 8, !tbaa.struct !203
  %908 = getelementptr inbounds i8, ptr %905, i64 24
  store i32 0, ptr %908, align 8, !tbaa.struct !294
  br label %909

909:                                              ; preds = %900, %868, %863, %863, %834, %829, %829
  %910 = load i64, ptr %0, align 8
  %911 = and i64 %910, 134217728
  %912 = icmp eq i64 %911, 0
  br i1 %912, label %939, label %913

913:                                              ; preds = %909
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %6)
  %914 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 2
  %915 = load ptr, ptr %914, align 8, !tbaa !6
  %916 = icmp eq ptr %915, null
  br i1 %916, label %917, label %920

917:                                              ; preds = %913
  %918 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %918, ptr %914, align 8, !tbaa !157
  %919 = icmp eq ptr %918, null
  br i1 %919, label %926, label %920

920:                                              ; preds = %917, %913
  %921 = phi ptr [ %918, %917 ], [ %915, %913 ]
  %922 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %921, i64 0, i32 1
  %923 = load i32, ptr %922, align 4, !tbaa !201
  %924 = load i32, ptr %921, align 8, !tbaa !159
  %925 = icmp eq i32 %923, %924
  br i1 %925, label %926, label %930

926:                                              ; preds = %920, %917
  %927 = phi ptr [ %921, %920 ], [ null, %917 ]
  %928 = call ptr @vec_gc_o_reserve(ptr noundef %927, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %928, ptr %914, align 8, !tbaa !6
  %929 = load i32, ptr %928, align 8, !tbaa !159
  br label %930

930:                                              ; preds = %920, %926
  %931 = phi i32 [ %924, %920 ], [ %929, %926 ]
  %932 = phi ptr [ %921, %920 ], [ %928, %926 ]
  %933 = add i32 %931, 1
  store i32 %933, ptr %932, align 8, !tbaa !159
  %934 = zext i32 %931 to i64
  %935 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %932, i64 0, i32 2, i64 %934
  store i32 63, ptr %935, align 8, !tbaa.struct !179
  %936 = getelementptr inbounds i8, ptr %935, i64 8
  store i32 9, ptr %936, align 8, !tbaa.struct !202
  %937 = getelementptr inbounds i8, ptr %935, i64 16
  store i8 1, ptr %937, align 8, !tbaa.struct !203
  %938 = getelementptr inbounds i8, ptr %935, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %938, ptr noundef nonnull align 1 dereferenceable(15) %6, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %6)
  br label %939

939:                                              ; preds = %930, %909
  %940 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %941 = load i64, ptr %940, align 8
  %942 = and i64 %941, 4096
  %943 = icmp eq i64 %942, 0
  br i1 %943, label %970, label %944

944:                                              ; preds = %939
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %5)
  %945 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 2
  %946 = load ptr, ptr %945, align 8, !tbaa !6
  %947 = icmp eq ptr %946, null
  br i1 %947, label %948, label %951

948:                                              ; preds = %944
  %949 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %949, ptr %945, align 8, !tbaa !157
  %950 = icmp eq ptr %949, null
  br i1 %950, label %957, label %951

951:                                              ; preds = %948, %944
  %952 = phi ptr [ %949, %948 ], [ %946, %944 ]
  %953 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %952, i64 0, i32 1
  %954 = load i32, ptr %953, align 4, !tbaa !201
  %955 = load i32, ptr %952, align 8, !tbaa !159
  %956 = icmp eq i32 %954, %955
  br i1 %956, label %957, label %961

957:                                              ; preds = %951, %948
  %958 = phi ptr [ %952, %951 ], [ null, %948 ]
  %959 = call ptr @vec_gc_o_reserve(ptr noundef %958, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %959, ptr %945, align 8, !tbaa !6
  %960 = load i32, ptr %959, align 8, !tbaa !159
  br label %961

961:                                              ; preds = %951, %957
  %962 = phi i32 [ %955, %951 ], [ %960, %957 ]
  %963 = phi ptr [ %952, %951 ], [ %959, %957 ]
  %964 = add i32 %962, 1
  store i32 %964, ptr %963, align 8, !tbaa !159
  %965 = zext i32 %962 to i64
  %966 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %963, i64 0, i32 2, i64 %965
  store i32 52, ptr %966, align 8, !tbaa.struct !179
  %967 = getelementptr inbounds i8, ptr %966, i64 8
  store i32 9, ptr %967, align 8, !tbaa.struct !202
  %968 = getelementptr inbounds i8, ptr %966, i64 16
  store i8 1, ptr %968, align 8, !tbaa.struct !203
  %969 = getelementptr inbounds i8, ptr %966, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %969, ptr noundef nonnull align 1 dereferenceable(15) %5, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %5)
  br label %970

970:                                              ; preds = %961, %939
  %971 = load i64, ptr %0, align 8
  %972 = and i64 %971, 536870912
  %973 = icmp eq i64 %972, 0
  br i1 %973, label %999, label %974

974:                                              ; preds = %970
  %975 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 2
  %976 = load ptr, ptr %975, align 8, !tbaa !6
  %977 = icmp eq ptr %976, null
  br i1 %977, label %978, label %981

978:                                              ; preds = %974
  %979 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %979, ptr %975, align 8, !tbaa !157
  %980 = icmp eq ptr %979, null
  br i1 %980, label %987, label %981

981:                                              ; preds = %978, %974
  %982 = phi ptr [ %979, %978 ], [ %976, %974 ]
  %983 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %982, i64 0, i32 1
  %984 = load i32, ptr %983, align 4, !tbaa !201
  %985 = load i32, ptr %982, align 8, !tbaa !159
  %986 = icmp eq i32 %984, %985
  br i1 %986, label %987, label %991

987:                                              ; preds = %981, %978
  %988 = phi ptr [ %982, %981 ], [ null, %978 ]
  %989 = call ptr @vec_gc_o_reserve(ptr noundef %988, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %989, ptr %975, align 8, !tbaa !6
  %990 = load i32, ptr %989, align 8, !tbaa !159
  br label %991

991:                                              ; preds = %981, %987
  %992 = phi i32 [ %985, %981 ], [ %990, %987 ]
  %993 = phi ptr [ %982, %981 ], [ %989, %987 ]
  %994 = add i32 %992, 1
  store i32 %994, ptr %993, align 8, !tbaa !159
  %995 = zext i32 %992 to i64
  %996 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %993, i64 0, i32 2, i64 %995
  store i32 50, ptr %996, align 8, !tbaa.struct !179
  %997 = getelementptr inbounds i8, ptr %996, i64 8
  store i32 6, ptr %997, align 8, !tbaa.struct !202
  %998 = getelementptr inbounds i8, ptr %996, i64 16
  store i64 2, ptr %998, align 8, !tbaa.struct !203
  br label %1027

999:                                              ; preds = %970
  %1000 = and i64 %971, 268435456
  %1001 = icmp eq i64 %1000, 0
  br i1 %1001, label %1027, label %1002

1002:                                             ; preds = %999
  %1003 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 2
  %1004 = load ptr, ptr %1003, align 8, !tbaa !6
  %1005 = icmp eq ptr %1004, null
  br i1 %1005, label %1006, label %1009

1006:                                             ; preds = %1002
  %1007 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1007, ptr %1003, align 8, !tbaa !157
  %1008 = icmp eq ptr %1007, null
  br i1 %1008, label %1015, label %1009

1009:                                             ; preds = %1006, %1002
  %1010 = phi ptr [ %1007, %1006 ], [ %1004, %1002 ]
  %1011 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1010, i64 0, i32 1
  %1012 = load i32, ptr %1011, align 4, !tbaa !201
  %1013 = load i32, ptr %1010, align 8, !tbaa !159
  %1014 = icmp eq i32 %1012, %1013
  br i1 %1014, label %1015, label %1019

1015:                                             ; preds = %1009, %1006
  %1016 = phi ptr [ %1010, %1009 ], [ null, %1006 ]
  %1017 = call ptr @vec_gc_o_reserve(ptr noundef %1016, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1017, ptr %1003, align 8, !tbaa !6
  %1018 = load i32, ptr %1017, align 8, !tbaa !159
  br label %1019

1019:                                             ; preds = %1009, %1015
  %1020 = phi i32 [ %1013, %1009 ], [ %1018, %1015 ]
  %1021 = phi ptr [ %1010, %1009 ], [ %1017, %1015 ]
  %1022 = add i32 %1020, 1
  store i32 %1022, ptr %1021, align 8, !tbaa !159
  %1023 = zext i32 %1020 to i64
  %1024 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1021, i64 0, i32 2, i64 %1023
  store i32 50, ptr %1024, align 8, !tbaa.struct !179
  %1025 = getelementptr inbounds i8, ptr %1024, i64 8
  store i32 6, ptr %1025, align 8, !tbaa.struct !202
  %1026 = getelementptr inbounds i8, ptr %1024, i64 16
  store i64 3, ptr %1026, align 8, !tbaa.struct !203
  br label %1027

1027:                                             ; preds = %991, %1019, %999, %796, %777, %695
  %1028 = phi ptr [ %696, %695 ], [ null, %796 ], [ null, %777 ], [ null, %999 ], [ null, %1019 ], [ null, %991 ]
  br i1 %41, label %1029, label %1055

1029:                                             ; preds = %1027
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %4)
  %1030 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 2
  %1031 = load ptr, ptr %1030, align 8, !tbaa !6
  %1032 = icmp eq ptr %1031, null
  br i1 %1032, label %1033, label %1036

1033:                                             ; preds = %1029
  %1034 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1034, ptr %1030, align 8, !tbaa !157
  %1035 = icmp eq ptr %1034, null
  br i1 %1035, label %1042, label %1036

1036:                                             ; preds = %1033, %1029
  %1037 = phi ptr [ %1034, %1033 ], [ %1031, %1029 ]
  %1038 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1037, i64 0, i32 1
  %1039 = load i32, ptr %1038, align 4, !tbaa !201
  %1040 = load i32, ptr %1037, align 8, !tbaa !159
  %1041 = icmp eq i32 %1039, %1040
  br i1 %1041, label %1042, label %1046

1042:                                             ; preds = %1036, %1033
  %1043 = phi ptr [ %1037, %1036 ], [ null, %1033 ]
  %1044 = call ptr @vec_gc_o_reserve(ptr noundef %1043, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %1044, ptr %1030, align 8, !tbaa !6
  %1045 = load i32, ptr %1044, align 8, !tbaa !159
  br label %1046

1046:                                             ; preds = %1036, %1042
  %1047 = phi i32 [ %1040, %1036 ], [ %1045, %1042 ]
  %1048 = phi ptr [ %1037, %1036 ], [ %1044, %1042 ]
  %1049 = add i32 %1047, 1
  store i32 %1049, ptr %1048, align 8, !tbaa !159
  %1050 = zext i32 %1047 to i64
  %1051 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1048, i64 0, i32 2, i64 %1050
  store i32 60, ptr %1051, align 8, !tbaa.struct !179
  %1052 = getelementptr inbounds i8, ptr %1051, i64 8
  store i32 9, ptr %1052, align 8, !tbaa.struct !202
  %1053 = getelementptr inbounds i8, ptr %1051, i64 16
  store i8 1, ptr %1053, align 8, !tbaa.struct !203
  %1054 = getelementptr inbounds i8, ptr %1051, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %1054, ptr noundef nonnull align 1 dereferenceable(15) %4, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %4)
  br label %1055

1055:                                             ; preds = %1046, %1027
  br i1 %17, label %1056, label %1068

1056:                                             ; preds = %1055
  %1057 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %1058 = load i64, ptr %1057, align 8
  %1059 = and i64 %1058, 2048
  %1060 = icmp ne i64 %1059, 0
  %1061 = or i1 %41, %1060
  br i1 %1061, label %1062, label %1068

1062:                                             ; preds = %1056
  %1063 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  %1064 = load i32, ptr %1063, align 4, !tbaa !17
  %1065 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %1066 = call ptr @htab_find_slot_with_hash(ptr noundef %1065, ptr noundef nonnull %0, i32 noundef %1064, i32 noundef 1) #31
  store ptr %693, ptr %1066, align 8, !tbaa !6
  %1067 = getelementptr inbounds %struct.die_struct, ptr %693, i64 0, i32 11
  store i32 %1064, ptr %1067, align 8, !tbaa !268
  br label %1068

1068:                                             ; preds = %1056, %1062, %1055
  br i1 %41, label %1176, label %1069

1069:                                             ; preds = %1068
  %1070 = load i64, ptr %26, align 8
  %1071 = and i64 %1070, 2048
  %1072 = icmp eq i64 %1071, 0
  br i1 %1072, label %1084, label %1073

1073:                                             ; preds = %1069
  %1074 = load i64, ptr %18, align 8
  %1075 = and i64 %1074, 67174399
  %1076 = icmp ne i64 %1075, 67108896
  %1077 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 32, i64 11), align 1
  %1078 = icmp eq i8 %1077, 0
  %1079 = select i1 %1076, i1 true, i1 %1078
  br i1 %1079, label %1176, label %1080

1080:                                             ; preds = %1073
  %1081 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %1082 = load ptr, ptr %1081, align 8, !tbaa !17
  %1083 = icmp eq ptr %1082, null
  br i1 %1083, label %1176, label %1084

1084:                                             ; preds = %1080, %1069
  %1085 = icmp eq ptr %1028, null
  br i1 %1085, label %1121, label %1086

1086:                                             ; preds = %1084, %1118
  %1087 = phi ptr [ %1119, %1118 ], [ %1028, %1084 ]
  %1088 = getelementptr inbounds %struct.die_struct, ptr %1087, i64 0, i32 2
  %1089 = load ptr, ptr %1088, align 8, !tbaa !157
  %1090 = icmp eq ptr %1089, null
  br i1 %1090, label %1121, label %1091

1091:                                             ; preds = %1086, %1112
  %1092 = phi ptr [ %1113, %1112 ], [ %1089, %1086 ]
  %1093 = phi ptr [ %1114, %1112 ], [ %1089, %1086 ]
  %1094 = phi i64 [ %1116, %1112 ], [ 0, %1086 ]
  %1095 = phi ptr [ %1115, %1112 ], [ null, %1086 ]
  %1096 = load i32, ptr %1093, align 8, !tbaa !159
  %1097 = zext i32 %1096 to i64
  %1098 = icmp ult i64 %1094, %1097
  br i1 %1098, label %1099, label %1118

1099:                                             ; preds = %1091
  %1100 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1093, i64 0, i32 2, i64 %1094
  %1101 = load i32, ptr %1100, align 8, !tbaa !161
  switch i32 %1101, label %1112 [
    i32 2, label %1176
    i32 71, label %1102
    i32 49, label %1102
  ]

1102:                                             ; preds = %1099, %1099
  %1103 = getelementptr i8, ptr %1100, i64 8
  %1104 = load i32, ptr %1103, align 8, !tbaa !163
  %1105 = icmp eq i32 %1104, 10
  br i1 %1105, label %1108, label %1106

1106:                                             ; preds = %1102
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1107 = load ptr, ptr %1088, align 8, !tbaa !157
  br label %1108

1108:                                             ; preds = %1106, %1102
  %1109 = phi ptr [ %1092, %1102 ], [ %1107, %1106 ]
  %1110 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1093, i64 0, i32 2, i64 %1094, i32 1, i32 1
  %1111 = load ptr, ptr %1110, align 8, !tbaa !17
  br label %1112

1112:                                             ; preds = %1099, %1108
  %1113 = phi ptr [ %1109, %1108 ], [ %1092, %1099 ]
  %1114 = phi ptr [ %1109, %1108 ], [ %1093, %1099 ]
  %1115 = phi ptr [ %1111, %1108 ], [ %1095, %1099 ]
  %1116 = add nuw nsw i64 %1094, 1
  %1117 = icmp eq ptr %1114, null
  br i1 %1117, label %1118, label %1091, !llvm.loop !164

1118:                                             ; preds = %1112, %1091
  %1119 = phi ptr [ %1115, %1112 ], [ %1095, %1091 ]
  %1120 = icmp eq ptr %1119, null
  br i1 %1120, label %1121, label %1086

1121:                                             ; preds = %1086, %1118, %1084
  %1122 = load i64, ptr %18, align 8
  %1123 = and i64 %1122, 67174399
  %1124 = icmp eq i64 %1123, 67108896
  br i1 %1124, label %1125, label %1148

1125:                                             ; preds = %1121
  %1126 = call ptr @decl_assembler_name(ptr noundef nonnull %18) #31
  %1127 = load i64, ptr %1126, align 8
  %1128 = and i64 %1127, 67108864
  %1129 = icmp eq i64 %1128, 0
  br i1 %1129, label %1130, label %1148

1130:                                             ; preds = %1125
  %1131 = load ptr, ptr @deferred_locations_list, align 8, !tbaa !6
  %1132 = icmp eq ptr %1131, null
  br i1 %1132, label %1138, label %1133

1133:                                             ; preds = %1130
  %1134 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %1131, i64 0, i32 1
  %1135 = load i32, ptr %1134, align 4, !tbaa !406
  %1136 = load i32, ptr %1131, align 8, !tbaa !165
  %1137 = icmp eq i32 %1135, %1136
  br i1 %1137, label %1138, label %1141

1138:                                             ; preds = %1133, %1130
  %1139 = call ptr @vec_gc_o_reserve(ptr noundef %1131, i32 noundef 1, i64 noundef 8, i64 noundef 16) #31
  store ptr %1139, ptr @deferred_locations_list, align 8, !tbaa !6
  %1140 = load i32, ptr %1139, align 8, !tbaa !165
  br label %1141

1141:                                             ; preds = %1133, %1138
  %1142 = phi i32 [ %1136, %1133 ], [ %1140, %1138 ]
  %1143 = phi ptr [ %1131, %1133 ], [ %1139, %1138 ]
  %1144 = add i32 %1142, 1
  store i32 %1144, ptr %1143, align 8, !tbaa !165
  %1145 = zext i32 %1142 to i64
  %1146 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %1143, i64 0, i32 2, i64 %1145
  store ptr %18, ptr %1146, align 8, !tbaa.struct !253
  %1147 = getelementptr inbounds i8, ptr %1146, i64 8
  store ptr %693, ptr %1147, align 8, !tbaa.struct !254
  br label %1149

1148:                                             ; preds = %1125, %1121
  call fastcc void @add_location_or_const_value_attribute(ptr noundef %693, ptr noundef nonnull %18)
  br label %1149

1149:                                             ; preds = %1148, %1141
  %1150 = load i64, ptr %18, align 8
  %1151 = and i64 %1150, 134217728
  %1152 = icmp eq i64 %1151, 0
  br i1 %1152, label %1224, label %1153

1153:                                             ; preds = %1149
  %1154 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 23), align 8, !tbaa !259
  %1155 = call ptr %1154(ptr noundef nonnull %18, i32 noundef 1) #31
  %1156 = icmp eq ptr %1155, null
  br i1 %1156, label %1224, label %1157

1157:                                             ; preds = %1153
  %1158 = call ptr @xstrdup(ptr noundef nonnull %1155) #31
  %1159 = load ptr, ptr @pubname_table, align 8, !tbaa !6
  %1160 = icmp eq ptr %1159, null
  br i1 %1160, label %1166, label %1161

1161:                                             ; preds = %1157
  %1162 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %1159, i64 0, i32 1
  %1163 = load i32, ptr %1162, align 4, !tbaa !379
  %1164 = load i32, ptr %1159, align 8, !tbaa !218
  %1165 = icmp eq i32 %1163, %1164
  br i1 %1165, label %1166, label %1169

1166:                                             ; preds = %1161, %1157
  %1167 = call ptr @vec_gc_o_reserve(ptr noundef %1159, i32 noundef 1, i64 noundef 8, i64 noundef 16) #31
  store ptr %1167, ptr @pubname_table, align 8, !tbaa !6
  %1168 = load i32, ptr %1167, align 8, !tbaa !218
  br label %1169

1169:                                             ; preds = %1166, %1161
  %1170 = phi i32 [ %1164, %1161 ], [ %1168, %1166 ]
  %1171 = phi ptr [ %1159, %1161 ], [ %1167, %1166 ]
  %1172 = add i32 %1170, 1
  store i32 %1172, ptr %1171, align 8, !tbaa !218
  %1173 = zext i32 %1170 to i64
  %1174 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %1171, i64 0, i32 2, i64 %1173
  store ptr %693, ptr %1174, align 8, !tbaa.struct !253
  %1175 = getelementptr inbounds i8, ptr %1174, i64 8
  store ptr %1158, ptr %1175, align 8, !tbaa.struct !254
  br label %1224

1176:                                             ; preds = %1099, %1068, %1073, %1080
  %1177 = load i64, ptr %18, align 8
  %1178 = and i64 %1177, 1638398
  %1179 = icmp eq i64 %1178, 1048608
  br i1 %1179, label %1180, label %1224

1180:                                             ; preds = %1176
  %1181 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %1182 = load ptr, ptr %1181, align 8, !tbaa !17
  %1183 = icmp eq ptr %1182, null
  br i1 %1183, label %1224, label %1184

1184:                                             ; preds = %1180, %1218
  %1185 = phi ptr [ %1219, %1218 ], [ %693, %1180 ]
  %1186 = icmp eq ptr %1185, null
  br i1 %1186, label %1221, label %1187

1187:                                             ; preds = %1184
  %1188 = getelementptr inbounds %struct.die_struct, ptr %1185, i64 0, i32 2
  %1189 = load ptr, ptr %1188, align 8, !tbaa !157
  %1190 = icmp eq ptr %1189, null
  br i1 %1190, label %1221, label %1191

1191:                                             ; preds = %1187, %1212
  %1192 = phi ptr [ %1213, %1212 ], [ %1189, %1187 ]
  %1193 = phi ptr [ %1214, %1212 ], [ %1189, %1187 ]
  %1194 = phi i64 [ %1216, %1212 ], [ 0, %1187 ]
  %1195 = phi ptr [ %1215, %1212 ], [ null, %1187 ]
  %1196 = load i32, ptr %1193, align 8, !tbaa !159
  %1197 = zext i32 %1196 to i64
  %1198 = icmp ult i64 %1194, %1197
  br i1 %1198, label %1199, label %1218

1199:                                             ; preds = %1191
  %1200 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1193, i64 0, i32 2, i64 %1194
  %1201 = load i32, ptr %1200, align 8, !tbaa !161
  switch i32 %1201, label %1212 [
    i32 28, label %1224
    i32 71, label %1202
    i32 49, label %1202
  ]

1202:                                             ; preds = %1199, %1199
  %1203 = getelementptr i8, ptr %1200, i64 8
  %1204 = load i32, ptr %1203, align 8, !tbaa !163
  %1205 = icmp eq i32 %1204, 10
  br i1 %1205, label %1208, label %1206

1206:                                             ; preds = %1202
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %1207 = load ptr, ptr %1188, align 8, !tbaa !157
  br label %1208

1208:                                             ; preds = %1206, %1202
  %1209 = phi ptr [ %1192, %1202 ], [ %1207, %1206 ]
  %1210 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1193, i64 0, i32 2, i64 %1194, i32 1, i32 1
  %1211 = load ptr, ptr %1210, align 8, !tbaa !17
  br label %1212

1212:                                             ; preds = %1208, %1199
  %1213 = phi ptr [ %1209, %1208 ], [ %1192, %1199 ]
  %1214 = phi ptr [ %1209, %1208 ], [ %1193, %1199 ]
  %1215 = phi ptr [ %1211, %1208 ], [ %1195, %1199 ]
  %1216 = add nuw nsw i64 %1194, 1
  %1217 = icmp eq ptr %1214, null
  br i1 %1217, label %1218, label %1191, !llvm.loop !164

1218:                                             ; preds = %1212, %1191
  %1219 = phi ptr [ %1215, %1212 ], [ %1195, %1191 ]
  %1220 = icmp eq ptr %1219, null
  br i1 %1220, label %1221, label %1184

1221:                                             ; preds = %1218, %1187, %1184
  %1222 = load ptr, ptr %1181, align 8, !tbaa !17
  %1223 = call fastcc zeroext i8 @tree_add_const_value_attribute(ptr noundef %693, ptr noundef %1222), !range !155
  br label %1224

1224:                                             ; preds = %636, %1199, %631, %1221, %1180, %1176, %1169, %1153, %1149, %627
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_byte_size_attribute(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = load i64, ptr %1, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %41 [
    i16 0, label %42
    i16 6, label %5
    i16 16, label %5
    i16 17, label %5
    i16 18, label %5
    i16 31, label %7
  ]

5:                                                ; preds = %2, %2, %2, %2
  %6 = tail call i64 @int_size_in_bytes(ptr noundef nonnull %1) #31
  br label %42

7:                                                ; preds = %2
  %8 = and i64 %3, 65535
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi ptr [ %15, %14 ], [ getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), %7 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  br label %19

19:                                               ; preds = %10, %16
  %20 = phi ptr [ %12, %10 ], [ %18, %16 ]
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 65535
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = icmp eq ptr %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = tail call i32 @host_integerp(ptr noundef nonnull %26, i32 noundef 1) #31
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %25, align 8, !tbaa !17
  %33 = tail call i64 @tree_low_cst(ptr noundef %32, i32 noundef 1) #31
  br label %38

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 7
  %36 = load i32, ptr %35, align 8, !tbaa !17
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %19, %24, %31, %34
  %39 = phi i64 [ %33, %31 ], [ %37, %34 ], [ 32, %19 ], [ 0, %24 ]
  %40 = lshr i64 %39, 3
  br label %42

41:                                               ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16557, ptr noundef nonnull @.str.5) #31
  br label %42

42:                                               ; preds = %2, %41, %38, %5
  %43 = phi i64 [ 0, %41 ], [ %40, %38 ], [ %6, %5 ], [ 0, %2 ]
  %44 = and i64 %43, 4294967295
  %45 = icmp eq ptr %0, null
  br i1 %45, label %71, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !6
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %51, ptr %47, align 8, !tbaa !157
  %52 = icmp eq ptr %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %50, %46
  %54 = phi ptr [ %51, %50 ], [ %48, %46 ]
  %55 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %54, i64 0, i32 1
  %56 = load i32, ptr %55, align 4, !tbaa !201
  %57 = load i32, ptr %54, align 8, !tbaa !159
  %58 = icmp eq i32 %56, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %53, %50
  %60 = phi ptr [ %54, %53 ], [ null, %50 ]
  %61 = tail call ptr @vec_gc_o_reserve(ptr noundef %60, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %61, ptr %47, align 8, !tbaa !6
  %62 = load i32, ptr %61, align 8, !tbaa !159
  br label %63

63:                                               ; preds = %59, %53
  %64 = phi i32 [ %57, %53 ], [ %62, %59 ]
  %65 = phi ptr [ %54, %53 ], [ %61, %59 ]
  %66 = add i32 %64, 1
  store i32 %66, ptr %65, align 8, !tbaa !159
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %65, i64 0, i32 2, i64 %67
  store i32 11, ptr %68, align 8, !tbaa.struct !179
  %69 = getelementptr inbounds i8, ptr %68, i64 8
  store i32 6, ptr %69, align 8, !tbaa.struct !202
  %70 = getelementptr inbounds i8, ptr %68, i64 16
  store i64 %44, ptr %70, align 8, !tbaa.struct !203
  br label %71

71:                                               ; preds = %42, %63
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_data_member_location_attribute(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store ptr null, ptr %3, align 8, !tbaa !6
  %4 = load i64, ptr %1, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 149
  br i1 %6, label %7, label %176

7:                                                ; preds = %2
  %8 = and i64 %4, 67108864
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %172, label %10

10:                                               ; preds = %7
  %11 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  br label %12

12:                                               ; preds = %46, %10
  %13 = phi ptr [ %11, %10 ], [ %47, %46 ]
  %14 = icmp eq ptr %13, null
  br i1 %14, label %172, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.die_struct, ptr %13, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !157
  %18 = icmp eq ptr %17, null
  br i1 %18, label %172, label %19

19:                                               ; preds = %15, %40
  %20 = phi ptr [ %41, %40 ], [ %17, %15 ]
  %21 = phi ptr [ %42, %40 ], [ %17, %15 ]
  %22 = phi i64 [ %44, %40 ], [ 0, %15 ]
  %23 = phi ptr [ %43, %40 ], [ null, %15 ]
  %24 = load i32, ptr %21, align 8, !tbaa !159
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %22, %25
  br i1 %26, label %27, label %46

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %21, i64 0, i32 2, i64 %22
  %29 = load i32, ptr %28, align 8, !tbaa !161
  switch i32 %29, label %40 [
    i32 19, label %49
    i32 71, label %30
    i32 49, label %30
  ]

30:                                               ; preds = %27, %27
  %31 = getelementptr i8, ptr %28, i64 8
  %32 = load i32, ptr %31, align 8, !tbaa !163
  %33 = icmp eq i32 %32, 10
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %35 = load ptr, ptr %16, align 8, !tbaa !157
  br label %36

36:                                               ; preds = %34, %30
  %37 = phi ptr [ %20, %30 ], [ %35, %34 ]
  %38 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %21, i64 0, i32 2, i64 %22, i32 1, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  br label %40

40:                                               ; preds = %36, %27
  %41 = phi ptr [ %37, %36 ], [ %20, %27 ]
  %42 = phi ptr [ %37, %36 ], [ %21, %27 ]
  %43 = phi ptr [ %39, %36 ], [ %23, %27 ]
  %44 = add nuw nsw i64 %22, 1
  %45 = icmp eq ptr %42, null
  br i1 %45, label %46, label %19, !llvm.loop !164

46:                                               ; preds = %40, %19
  %47 = phi ptr [ %43, %40 ], [ %23, %19 ]
  %48 = icmp eq ptr %47, null
  br i1 %48, label %172, label %12

49:                                               ; preds = %27
  %50 = getelementptr i8, ptr %28, i64 8
  %51 = load i32, ptr %50, align 8, !tbaa !163
  %52 = icmp eq i32 %51, 6
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %54

54:                                               ; preds = %49, %53
  %55 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %21, i64 0, i32 2, i64 %22, i32 1, i32 1
  %56 = load i64, ptr %55, align 8, !tbaa !17
  %57 = trunc i64 %56 to i32
  switch i32 %57, label %172 [
    i32 17, label %58
    i32 4, label %58
  ]

58:                                               ; preds = %54, %54
  %59 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %60 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %59, i64 0, i32 1
  %61 = load i16, ptr %60, align 8
  %62 = and i16 %61, -256
  %63 = or i16 %62, 18
  store i16 %63, ptr %60, align 8
  %64 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %59, i64 0, i32 3
  store i32 6, ptr %64, align 8, !tbaa !52
  %65 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %59, i64 0, i32 3, i32 1
  store i64 0, ptr %65, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %59, i64 0, i32 4
  store i32 6, ptr %66, align 8, !tbaa !49
  %67 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %59, i64 0, i32 4, i32 1
  store i64 0, ptr %67, align 8, !tbaa !17
  br label %68

68:                                               ; preds = %68, %58
  %69 = phi ptr [ %3, %58 ], [ %70, %68 ]
  %70 = load ptr, ptr %69, align 8, !tbaa !6
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %68, !llvm.loop !53

72:                                               ; preds = %68
  store ptr %59, ptr %69, align 8, !tbaa !6
  %73 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %74 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 1
  %75 = load i16, ptr %74, align 8
  %76 = and i16 %75, -256
  %77 = or i16 %76, 6
  store i16 %77, ptr %74, align 8
  %78 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 3
  store i32 6, ptr %78, align 8, !tbaa !52
  %79 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 3, i32 1
  store i64 0, ptr %79, align 8, !tbaa !17
  %80 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 4
  store i32 6, ptr %80, align 8, !tbaa !49
  %81 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %73, i64 0, i32 4, i32 1
  store i64 0, ptr %81, align 8, !tbaa !17
  br label %82

82:                                               ; preds = %82, %72
  %83 = phi ptr [ %3, %72 ], [ %84, %82 ]
  %84 = load ptr, ptr %83, align 8, !tbaa !6
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %82, !llvm.loop !53

86:                                               ; preds = %82
  store ptr %73, ptr %83, align 8, !tbaa !6
  %87 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 4
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = tail call i64 @tree_low_cst(ptr noundef %88, i32 noundef 0) #31
  %90 = icmp slt i64 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = sub nsw i64 0, %89
  br label %96

93:                                               ; preds = %86
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15201, ptr noundef nonnull @.str.5) #31
  %94 = sub nsw i64 0, %89
  %95 = icmp eq i64 %89, 0
  br i1 %95, label %96, label %109

96:                                               ; preds = %91, %93
  %97 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %98 = icmp ult i64 %97, 32
  br i1 %98, label %99, label %102

99:                                               ; preds = %96
  %100 = trunc i64 %97 to i16
  %101 = add nuw nsw i16 %100, 48
  br label %114

102:                                              ; preds = %96
  %103 = icmp ult i64 %97, 256
  br i1 %103, label %114, label %104

104:                                              ; preds = %102
  %105 = icmp ult i64 %97, 65536
  br i1 %105, label %114, label %106

106:                                              ; preds = %104
  %107 = icmp ult i64 %97, 4294967296
  %108 = select i1 %107, i16 12, i16 16
  br label %114

109:                                              ; preds = %93
  %110 = icmp ugt i64 %94, -129
  br i1 %110, label %114, label %111

111:                                              ; preds = %109
  %112 = icmp ugt i64 %94, -32769
  %113 = select i1 %112, i16 11, i16 17
  br label %114

114:                                              ; preds = %99, %102, %104, %106, %109, %111
  %115 = phi i64 [ %97, %99 ], [ %97, %102 ], [ %97, %104 ], [ %97, %106 ], [ %94, %109 ], [ %94, %111 ]
  %116 = phi i16 [ %101, %99 ], [ 8, %102 ], [ 10, %104 ], [ %108, %106 ], [ 9, %109 ], [ %113, %111 ]
  %117 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %118 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %117, i64 0, i32 1
  %119 = load i16, ptr %118, align 8
  %120 = and i16 %119, -256
  %121 = or i16 %120, %116
  store i16 %121, ptr %118, align 8
  %122 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %117, i64 0, i32 3
  store i32 6, ptr %122, align 8, !tbaa !52
  %123 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %117, i64 0, i32 3, i32 1
  store i64 %115, ptr %123, align 8, !tbaa !17
  %124 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %117, i64 0, i32 4
  store i32 6, ptr %124, align 8, !tbaa !49
  %125 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %117, i64 0, i32 4, i32 1
  store i64 0, ptr %125, align 8, !tbaa !17
  br label %126

126:                                              ; preds = %126, %114
  %127 = phi ptr [ %3, %114 ], [ %128, %126 ]
  %128 = load ptr, ptr %127, align 8, !tbaa !6
  %129 = icmp eq ptr %128, null
  br i1 %129, label %130, label %126, !llvm.loop !53

130:                                              ; preds = %126
  store ptr %117, ptr %127, align 8, !tbaa !6
  %131 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %132 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %131, i64 0, i32 1
  %133 = load i16, ptr %132, align 8
  %134 = and i16 %133, -256
  %135 = or i16 %134, 28
  store i16 %135, ptr %132, align 8
  %136 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %131, i64 0, i32 3
  store i32 6, ptr %136, align 8, !tbaa !52
  %137 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %131, i64 0, i32 3, i32 1
  store i64 0, ptr %137, align 8, !tbaa !17
  %138 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %131, i64 0, i32 4
  store i32 6, ptr %138, align 8, !tbaa !49
  %139 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %131, i64 0, i32 4, i32 1
  store i64 0, ptr %139, align 8, !tbaa !17
  br label %140

140:                                              ; preds = %140, %130
  %141 = phi ptr [ %3, %130 ], [ %142, %140 ]
  %142 = load ptr, ptr %141, align 8, !tbaa !6
  %143 = icmp eq ptr %142, null
  br i1 %143, label %144, label %140, !llvm.loop !53

144:                                              ; preds = %140
  store ptr %131, ptr %141, align 8, !tbaa !6
  %145 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %146 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %145, i64 0, i32 1
  %147 = load i16, ptr %146, align 8
  %148 = and i16 %147, -256
  %149 = or i16 %148, 6
  store i16 %149, ptr %146, align 8
  %150 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %145, i64 0, i32 3
  store i32 6, ptr %150, align 8, !tbaa !52
  %151 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %145, i64 0, i32 3, i32 1
  store i64 0, ptr %151, align 8, !tbaa !17
  %152 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %145, i64 0, i32 4
  store i32 6, ptr %152, align 8, !tbaa !49
  %153 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %145, i64 0, i32 4, i32 1
  store i64 0, ptr %153, align 8, !tbaa !17
  br label %154

154:                                              ; preds = %154, %144
  %155 = phi ptr [ %3, %144 ], [ %156, %154 ]
  %156 = load ptr, ptr %155, align 8, !tbaa !6
  %157 = icmp eq ptr %156, null
  br i1 %157, label %158, label %154, !llvm.loop !53

158:                                              ; preds = %154
  store ptr %145, ptr %155, align 8, !tbaa !6
  %159 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %160 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %159, i64 0, i32 1
  %161 = load i16, ptr %160, align 8
  %162 = and i16 %161, -256
  %163 = or i16 %162, 34
  store i16 %163, ptr %160, align 8
  %164 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %159, i64 0, i32 3
  store i32 6, ptr %164, align 8, !tbaa !52
  %165 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %159, i64 0, i32 3, i32 1
  store i64 0, ptr %165, align 8, !tbaa !17
  %166 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %159, i64 0, i32 4
  store i32 6, ptr %166, align 8, !tbaa !49
  %167 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %159, i64 0, i32 4, i32 1
  store i64 0, ptr %167, align 8, !tbaa !17
  br label %168

168:                                              ; preds = %168, %158
  %169 = phi ptr [ %3, %158 ], [ %170, %168 ]
  %170 = load ptr, ptr %169, align 8, !tbaa !6
  %171 = icmp eq ptr %170, null
  br i1 %171, label %178, label %168, !llvm.loop !53

172:                                              ; preds = %12, %15, %46, %54, %7
  %173 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 1
  %174 = load ptr, ptr %173, align 8, !tbaa !17
  %175 = tail call i64 @tree_low_cst(ptr noundef %174, i32 noundef 0) #31
  br label %181

176:                                              ; preds = %2
  %177 = tail call fastcc i64 @field_byte_offset(ptr noundef nonnull %1), !range !405
  br label %181

178:                                              ; preds = %168
  store ptr %159, ptr %169, align 8, !tbaa !6
  %179 = load ptr, ptr %3, align 8, !tbaa !6
  %180 = icmp eq ptr %179, null
  br i1 %180, label %181, label %222

181:                                              ; preds = %176, %172, %178
  %182 = phi i64 [ %89, %178 ], [ %177, %176 ], [ %175, %172 ]
  %183 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %184 = icmp sgt i32 %183, 2
  br i1 %184, label %185, label %212

185:                                              ; preds = %181
  %186 = icmp eq ptr %0, null
  br i1 %186, label %250, label %187

187:                                              ; preds = %185
  %188 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %189 = load ptr, ptr %188, align 8, !tbaa !6
  %190 = icmp eq ptr %189, null
  br i1 %190, label %191, label %194

191:                                              ; preds = %187
  %192 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %192, ptr %188, align 8, !tbaa !157
  %193 = icmp eq ptr %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %191, %187
  %195 = phi ptr [ %192, %191 ], [ %189, %187 ]
  %196 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %195, i64 0, i32 1
  %197 = load i32, ptr %196, align 4, !tbaa !201
  %198 = load i32, ptr %195, align 8, !tbaa !159
  %199 = icmp eq i32 %197, %198
  br i1 %199, label %200, label %204

200:                                              ; preds = %194, %191
  %201 = phi ptr [ %195, %194 ], [ null, %191 ]
  %202 = tail call ptr @vec_gc_o_reserve(ptr noundef %201, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %202, ptr %188, align 8, !tbaa !6
  %203 = load i32, ptr %202, align 8, !tbaa !159
  br label %204

204:                                              ; preds = %200, %194
  %205 = phi i32 [ %198, %194 ], [ %203, %200 ]
  %206 = phi ptr [ %195, %194 ], [ %202, %200 ]
  %207 = add i32 %205, 1
  store i32 %207, ptr %206, align 8, !tbaa !159
  %208 = zext i32 %205 to i64
  %209 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %206, i64 0, i32 2, i64 %208
  store i32 56, ptr %209, align 8, !tbaa.struct !179
  %210 = getelementptr inbounds i8, ptr %209, i64 8
  store i32 5, ptr %210, align 8, !tbaa.struct !202
  %211 = getelementptr inbounds i8, ptr %209, i64 16
  store i64 %182, ptr %211, align 8, !tbaa.struct !203
  br label %250

212:                                              ; preds = %181
  %213 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %214 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %213, i64 0, i32 1
  %215 = load i16, ptr %214, align 8
  %216 = and i16 %215, -256
  %217 = or i16 %216, 35
  store i16 %217, ptr %214, align 8
  %218 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %213, i64 0, i32 3
  store i32 6, ptr %218, align 8, !tbaa !52
  %219 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %213, i64 0, i32 3, i32 1
  store i64 %182, ptr %219, align 8, !tbaa !17
  %220 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %213, i64 0, i32 4
  store i32 6, ptr %220, align 8, !tbaa !49
  %221 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %213, i64 0, i32 4, i32 1
  store i64 0, ptr %221, align 8, !tbaa !17
  br label %222

222:                                              ; preds = %212, %178
  %223 = phi ptr [ %213, %212 ], [ %179, %178 ]
  %224 = icmp eq ptr %0, null
  br i1 %224, label %250, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %227 = load ptr, ptr %226, align 8, !tbaa !6
  %228 = icmp eq ptr %227, null
  br i1 %228, label %229, label %232

229:                                              ; preds = %225
  %230 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %230, ptr %226, align 8, !tbaa !157
  %231 = icmp eq ptr %230, null
  br i1 %231, label %238, label %232

232:                                              ; preds = %229, %225
  %233 = phi ptr [ %230, %229 ], [ %227, %225 ]
  %234 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %233, i64 0, i32 1
  %235 = load i32, ptr %234, align 4, !tbaa !201
  %236 = load i32, ptr %233, align 8, !tbaa !159
  %237 = icmp eq i32 %235, %236
  br i1 %237, label %238, label %242

238:                                              ; preds = %232, %229
  %239 = phi ptr [ %233, %232 ], [ null, %229 ]
  %240 = tail call ptr @vec_gc_o_reserve(ptr noundef %239, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %240, ptr %226, align 8, !tbaa !6
  %241 = load i32, ptr %240, align 8, !tbaa !159
  br label %242

242:                                              ; preds = %238, %232
  %243 = phi i32 [ %236, %232 ], [ %241, %238 ]
  %244 = phi ptr [ %233, %232 ], [ %240, %238 ]
  %245 = add i32 %243, 1
  store i32 %245, ptr %244, align 8, !tbaa !159
  %246 = zext i32 %243 to i64
  %247 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %244, i64 0, i32 2, i64 %246
  store i32 56, ptr %247, align 8, !tbaa.struct !179
  %248 = getelementptr inbounds i8, ptr %247, i64 8
  store i32 2, ptr %248, align 8, !tbaa.struct !202
  %249 = getelementptr inbounds i8, ptr %247, i64 16
  store ptr %223, ptr %249, align 8, !tbaa.struct !203
  br label %250

250:                                              ; preds = %242, %222, %204, %185
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @field_byte_offset(ptr noundef %0) unnamed_addr #10 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %4 [
    i16 0, label %90
    i16 31, label %5
  ]

4:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 15015, ptr noundef nonnull @.str.5) #31
  br label %5

5:                                                ; preds = %1, %4
  %6 = tail call ptr @bit_position(ptr noundef nonnull %0) #31
  %7 = tail call i32 @host_integerp(ptr noundef %6, i32 noundef 0) #31
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %90, label %9

9:                                                ; preds = %5
  %10 = tail call i64 @int_bit_position(ptr noundef nonnull %0) #31
  %11 = load i64, ptr %0, align 8
  %12 = and i64 %11, 65535
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tree_field_decl, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %23

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  br label %20

20:                                               ; preds = %18, %9
  %21 = phi ptr [ %19, %18 ], [ getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), %9 ]
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  br label %23

23:                                               ; preds = %14, %20
  %24 = phi ptr [ %16, %14 ], [ %22, %20 ]
  %25 = load i64, ptr %24, align 8
  %26 = and i64 %25, 65535
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %42, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.tree_type, ptr %24, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = icmp eq ptr %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = tail call i32 @host_integerp(ptr noundef nonnull %30, i32 noundef 1) #31
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = load ptr, ptr %29, align 8, !tbaa !17
  %37 = tail call i64 @tree_low_cst(ptr noundef %36, i32 noundef 1) #31
  br label %42

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.tree_type, ptr %24, i64 0, i32 7
  %40 = load i32, ptr %39, align 8, !tbaa !17
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %23, %28, %35, %38
  %43 = phi i64 [ %37, %35 ], [ %41, %38 ], [ 32, %23 ], [ 0, %28 ]
  %44 = load i64, ptr %24, align 8
  %45 = and i64 %44, 65535
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.tree_type, ptr %24, i64 0, i32 7
  %49 = load i32, ptr %48, align 8, !tbaa !17
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi i32 [ %49, %47 ], [ 32, %42 ]
  %52 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = icmp eq ptr %53, null
  %55 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 19), align 8
  %56 = select i1 %54, ptr %55, ptr %53
  %57 = tail call i32 @host_integerp(ptr noundef %56, i32 noundef 1) #31
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %50
  %60 = tail call i64 @tree_low_cst(ptr noundef %56, i32 noundef 1) #31
  br label %61

61:                                               ; preds = %50, %59
  %62 = phi i64 [ %60, %59 ], [ %43, %50 ]
  %63 = load i64, ptr %0, align 8
  %64 = and i64 %63, 65535
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 3
  %68 = load i32, ptr %67, align 8, !tbaa !17
  br label %69

69:                                               ; preds = %61, %66
  %70 = phi i32 [ %68, %66 ], [ 32, %61 ]
  %71 = sub i64 %10, %43
  %72 = add i64 %71, %62
  %73 = add i32 %51, -1
  %74 = zext i32 %73 to i64
  %75 = add i64 %72, %74
  %76 = zext i32 %51 to i64
  %77 = urem i64 %75, %76
  %78 = sub nuw i64 %75, %77
  %79 = icmp sgt i64 %78, %10
  br i1 %79, label %80, label %87

80:                                               ; preds = %69
  %81 = add i32 %70, -1
  %82 = zext i32 %81 to i64
  %83 = add i64 %72, %82
  %84 = zext i32 %70 to i64
  %85 = urem i64 %83, %84
  %86 = sub nuw i64 %83, %85
  br label %87

87:                                               ; preds = %80, %69
  %88 = phi i64 [ %86, %80 ], [ %78, %69 ]
  %89 = sdiv i64 %88, 8
  br label %90

90:                                               ; preds = %5, %1, %87
  %91 = phi i64 [ %89, %87 ], [ 0, %1 ], [ 0, %5 ]
  ret i64 %91
}

declare ptr @bit_position(ptr noundef) local_unnamed_addr #3

declare i64 @int_bit_position(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @common_block_die_table_hash(ptr nocapture noundef readonly %0) #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 11
  %3 = load i32, ptr %2, align 8, !tbaa !268
  %4 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !174
  %7 = tail call i32 %4(ptr noundef %6) #31
  %8 = xor i32 %7, %3
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @common_block_die_table_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #17 {
  %3 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 11
  %4 = load i32, ptr %3, align 8, !tbaa !268
  %5 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 11
  %6 = load i32, ptr %5, align 8, !tbaa !268
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !174
  %11 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !174
  %13 = icmp eq ptr %10, %12
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %2
  %16 = phi i32 [ 0, %2 ], [ %14, %8 ]
  ret i32 %16
}

declare ptr @htab_find(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @block_ultimate_origin(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @add_high_low_attributes(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #2 {
  %3 = alloca [30 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %3) #31
  %4 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 9
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  br i1 %6, label %145, label %7

7:                                                ; preds = %2
  %8 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %9 = icmp slt i32 %8, 3
  %10 = load i32, ptr @dwarf_strict, align 4
  %11 = icmp ne i32 %10, 0
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %145, label %13

13:                                               ; preds = %7
  %14 = getelementptr i8, ptr %0, i64 28
  %15 = load i32, ptr %14, align 4, !tbaa !17
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %49, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = lshr i32 %19, 1
  %21 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.316, i32 noundef %20)
  %22 = call ptr @xstrdup(ptr noundef nonnull %3) #31
  %23 = icmp eq ptr %1, null
  br i1 %23, label %49, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !6
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %29, ptr %25, align 8, !tbaa !157
  %30 = icmp eq ptr %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28, %24
  %32 = phi ptr [ %29, %28 ], [ %26, %24 ]
  %33 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %32, i64 0, i32 1
  %34 = load i32, ptr %33, align 4, !tbaa !201
  %35 = load i32, ptr %32, align 8, !tbaa !159
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %31, %28
  %38 = phi ptr [ %32, %31 ], [ null, %28 ]
  %39 = call ptr @vec_gc_o_reserve(ptr noundef %38, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %39, ptr %25, align 8, !tbaa !6
  %40 = load i32, ptr %39, align 8, !tbaa !159
  br label %41

41:                                               ; preds = %37, %31
  %42 = phi i32 [ %35, %31 ], [ %40, %37 ]
  %43 = phi ptr [ %32, %31 ], [ %39, %37 ]
  %44 = add i32 %42, 1
  store i32 %44, ptr %43, align 8, !tbaa !159
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %43, i64 0, i32 2, i64 %45
  store i32 82, ptr %46, align 8, !tbaa.struct !179
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store i32 12, ptr %47, align 8, !tbaa.struct !202
  %48 = getelementptr inbounds i8, ptr %46, i64 16
  store ptr %22, ptr %48, align 8, !tbaa.struct !203
  br label %49

49:                                               ; preds = %41, %17, %13
  %50 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %51 = load i32, ptr %50, align 8
  %52 = lshr i32 %51, 1
  %53 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %54 = load i32, ptr @ranges_table_allocated, align 4, !tbaa !21
  %55 = icmp eq i32 %53, %54
  %56 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  br i1 %55, label %57, label %65

57:                                               ; preds = %49
  %58 = add i32 %53, 64
  store i32 %58, ptr @ranges_table_allocated, align 4, !tbaa !21
  %59 = zext i32 %58 to i64
  %60 = shl nuw nsw i64 %59, 2
  %61 = call ptr @ggc_realloc_stat(ptr noundef %56, i64 noundef %60) #31
  store ptr %61, ptr @ranges_table, align 8, !tbaa !6
  %62 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %struct.dw_ranges_struct, ptr %61, i64 %63
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(256) %64, i8 0, i64 256, i1 false)
  br label %65

65:                                               ; preds = %49, %57
  %66 = phi ptr [ %61, %57 ], [ %56, %49 ]
  %67 = zext i32 %53 to i64
  %68 = getelementptr inbounds %struct.dw_ranges_struct, ptr %66, i64 %67
  store i32 %52, ptr %68, align 4, !tbaa !209
  %69 = add i32 %53, 1
  store i32 %69, ptr @ranges_table_in_use, align 4, !tbaa !21
  %70 = shl i32 %53, 3
  %71 = zext i32 %70 to i64
  %72 = icmp eq ptr %1, null
  br i1 %72, label %98, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !6
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %78, ptr %74, align 8, !tbaa !157
  %79 = icmp eq ptr %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %77, %73
  %81 = phi ptr [ %78, %77 ], [ %75, %73 ]
  %82 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %81, i64 0, i32 1
  %83 = load i32, ptr %82, align 4, !tbaa !201
  %84 = load i32, ptr %81, align 8, !tbaa !159
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %80, %77
  %87 = phi ptr [ %81, %80 ], [ null, %77 ]
  %88 = call ptr @vec_gc_o_reserve(ptr noundef %87, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %88, ptr %74, align 8, !tbaa !6
  %89 = load i32, ptr %88, align 8, !tbaa !159
  br label %90

90:                                               ; preds = %86, %80
  %91 = phi i32 [ %84, %80 ], [ %89, %86 ]
  %92 = phi ptr [ %81, %80 ], [ %88, %86 ]
  %93 = add i32 %91, 1
  store i32 %93, ptr %92, align 8, !tbaa !159
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %92, i64 0, i32 2, i64 %94
  store i32 85, ptr %95, align 8, !tbaa.struct !179
  %96 = getelementptr inbounds i8, ptr %95, i64 8
  store i32 4, ptr %96, align 8, !tbaa.struct !202
  %97 = getelementptr inbounds i8, ptr %95, i64 16
  store i64 %71, ptr %97, align 8, !tbaa.struct !203
  br label %98

98:                                               ; preds = %65, %90
  %99 = load ptr, ptr %4, align 8, !tbaa !17
  br label %100

100:                                              ; preds = %121, %98
  %101 = phi ptr [ %99, %98 ], [ %127, %121 ]
  %102 = icmp eq ptr %101, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.tree_block, ptr %101, i64 0, i32 1
  %105 = load i32, ptr %104, align 8
  %106 = lshr i32 %105, 1
  br label %107

107:                                              ; preds = %103, %100
  %108 = phi i32 [ %106, %103 ], [ 0, %100 ]
  %109 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %110 = load i32, ptr @ranges_table_allocated, align 4, !tbaa !21
  %111 = icmp eq i32 %109, %110
  %112 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  br i1 %111, label %113, label %121

113:                                              ; preds = %107
  %114 = add i32 %109, 64
  store i32 %114, ptr @ranges_table_allocated, align 4, !tbaa !21
  %115 = zext i32 %114 to i64
  %116 = shl nuw nsw i64 %115, 2
  %117 = call ptr @ggc_realloc_stat(ptr noundef %112, i64 noundef %116) #31
  store ptr %117, ptr @ranges_table, align 8, !tbaa !6
  %118 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %struct.dw_ranges_struct, ptr %117, i64 %119
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(256) %120, i8 0, i64 256, i1 false)
  br label %121

121:                                              ; preds = %107, %113
  %122 = phi ptr [ %117, %113 ], [ %112, %107 ]
  %123 = zext i32 %109 to i64
  %124 = getelementptr inbounds %struct.dw_ranges_struct, ptr %122, i64 %123
  store i32 %108, ptr %124, align 4, !tbaa !209
  %125 = add i32 %109, 1
  store i32 %125, ptr @ranges_table_in_use, align 4, !tbaa !21
  %126 = getelementptr inbounds %struct.tree_block, ptr %101, i64 0, i32 9
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  %128 = icmp eq ptr %127, null
  br i1 %128, label %129, label %100, !llvm.loop !407

129:                                              ; preds = %121
  %130 = load i32, ptr @ranges_table_allocated, align 4, !tbaa !21
  %131 = icmp eq i32 %125, %130
  br i1 %131, label %132, label %140

132:                                              ; preds = %129
  %133 = add i32 %109, 65
  store i32 %133, ptr @ranges_table_allocated, align 4, !tbaa !21
  %134 = zext i32 %133 to i64
  %135 = shl nuw nsw i64 %134, 2
  %136 = call ptr @ggc_realloc_stat(ptr noundef nonnull %122, i64 noundef %135) #31
  store ptr %136, ptr @ranges_table, align 8, !tbaa !6
  %137 = load i32, ptr @ranges_table_in_use, align 4, !tbaa !21
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %struct.dw_ranges_struct, ptr %136, i64 %138
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(256) %139, i8 0, i64 256, i1 false)
  br label %140

140:                                              ; preds = %129, %132
  %141 = phi ptr [ %136, %132 ], [ %122, %129 ]
  %142 = zext i32 %125 to i64
  %143 = getelementptr inbounds %struct.dw_ranges_struct, ptr %141, i64 %142
  store i32 0, ptr %143, align 4, !tbaa !209
  %144 = add i32 %109, 2
  store i32 %144, ptr @ranges_table_in_use, align 4, !tbaa !21
  br label %207

145:                                              ; preds = %2, %7
  %146 = getelementptr inbounds %struct.tree_block, ptr %0, i64 0, i32 1
  %147 = load i32, ptr %146, align 8
  %148 = lshr i32 %147, 1
  %149 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.316, i32 noundef %148)
  %150 = call ptr @xstrdup(ptr noundef nonnull %3) #31
  %151 = icmp eq ptr %1, null
  br i1 %151, label %177, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  %154 = load ptr, ptr %153, align 8, !tbaa !6
  %155 = icmp eq ptr %154, null
  br i1 %155, label %156, label %159

156:                                              ; preds = %152
  %157 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %157, ptr %153, align 8, !tbaa !157
  %158 = icmp eq ptr %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %156, %152
  %160 = phi ptr [ %157, %156 ], [ %154, %152 ]
  %161 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %160, i64 0, i32 1
  %162 = load i32, ptr %161, align 4, !tbaa !201
  %163 = load i32, ptr %160, align 8, !tbaa !159
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %165, label %169

165:                                              ; preds = %159, %156
  %166 = phi ptr [ %160, %159 ], [ null, %156 ]
  %167 = call ptr @vec_gc_o_reserve(ptr noundef %166, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %167, ptr %153, align 8, !tbaa !6
  %168 = load i32, ptr %167, align 8, !tbaa !159
  br label %169

169:                                              ; preds = %165, %159
  %170 = phi i32 [ %163, %159 ], [ %168, %165 ]
  %171 = phi ptr [ %160, %159 ], [ %167, %165 ]
  %172 = add i32 %170, 1
  store i32 %172, ptr %171, align 8, !tbaa !159
  %173 = zext i32 %170 to i64
  %174 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %171, i64 0, i32 2, i64 %173
  store i32 17, ptr %174, align 8, !tbaa.struct !179
  %175 = getelementptr inbounds i8, ptr %174, i64 8
  store i32 12, ptr %175, align 8, !tbaa.struct !202
  %176 = getelementptr inbounds i8, ptr %174, i64 16
  store ptr %150, ptr %176, align 8, !tbaa.struct !203
  br label %177

177:                                              ; preds = %145, %169
  %178 = load i32, ptr %146, align 8
  %179 = lshr i32 %178, 1
  %180 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.317, i32 noundef %179)
  %181 = call ptr @xstrdup(ptr noundef nonnull %3) #31
  br i1 %151, label %207, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  %184 = load ptr, ptr %183, align 8, !tbaa !6
  %185 = icmp eq ptr %184, null
  br i1 %185, label %186, label %189

186:                                              ; preds = %182
  %187 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %187, ptr %183, align 8, !tbaa !157
  %188 = icmp eq ptr %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %186, %182
  %190 = phi ptr [ %187, %186 ], [ %184, %182 ]
  %191 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %190, i64 0, i32 1
  %192 = load i32, ptr %191, align 4, !tbaa !201
  %193 = load i32, ptr %190, align 8, !tbaa !159
  %194 = icmp eq i32 %192, %193
  br i1 %194, label %195, label %199

195:                                              ; preds = %189, %186
  %196 = phi ptr [ %190, %189 ], [ null, %186 ]
  %197 = call ptr @vec_gc_o_reserve(ptr noundef %196, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %197, ptr %183, align 8, !tbaa !6
  %198 = load i32, ptr %197, align 8, !tbaa !159
  br label %199

199:                                              ; preds = %195, %189
  %200 = phi i32 [ %193, %189 ], [ %198, %195 ]
  %201 = phi ptr [ %190, %189 ], [ %197, %195 ]
  %202 = add i32 %200, 1
  store i32 %202, ptr %201, align 8, !tbaa !159
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %201, i64 0, i32 2, i64 %203
  store i32 18, ptr %204, align 8, !tbaa.struct !179
  %205 = getelementptr inbounds i8, ptr %204, i64 8
  store i32 12, ptr %205, align 8, !tbaa.struct !202
  %206 = getelementptr inbounds i8, ptr %204, i64 16
  store ptr %181, ptr %206, align 8, !tbaa.struct !203
  br label %207

207:                                              ; preds = %199, %177, %140
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %3) #31
  ret void
}

declare void @set_decl_origin_self(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal fastcc ptr @decl_class_context(ptr nocapture noundef readonly %0) unnamed_addr #21 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 29
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  br label %21

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.tree_list, ptr %15, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.tree_common, ptr %17, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.tree_type, ptr %19, i64 0, i32 16
  br label %21

21:                                               ; preds = %11, %9
  %22 = phi ptr [ %10, %9 ], [ %20, %11 ]
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = icmp eq ptr %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = load i64, ptr %23, align 8
  %27 = and i64 %26, 65535
  %28 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !17
  %30 = icmp eq i32 %29, 2
  %31 = select i1 %30, ptr %23, ptr null
  br label %32

32:                                               ; preds = %25, %21
  %33 = phi ptr [ %31, %25 ], [ null, %21 ]
  ret ptr %33
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @setup_namespace_context(ptr nocapture noundef readonly %0, ptr noundef readnone %1) unnamed_addr #10 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %4
  %6 = load i32, ptr %5, align 4, !tbaa !17
  %7 = icmp eq i32 %6, 3
  %8 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %10 = select i1 %7, ptr %8, ptr %9
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = load i64, ptr %11, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 38
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = tail call fastcc ptr @force_decl_die(ptr noundef nonnull %11)
  br label %19

19:                                               ; preds = %17, %13, %2
  %20 = phi ptr [ %18, %17 ], [ %1, %13 ], [ %1, %2 ]
  ret ptr %20
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @scope_die_for(ptr nocapture noundef readonly %0, ptr noundef readnone %1) unnamed_addr #10 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %4
  %6 = load i32, ptr %5, align 4, !tbaa !17
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16814, ptr noundef nonnull @.str.5) #31
  br label %9

9:                                                ; preds = %2, %8
  %10 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 18
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %59, label %13

13:                                               ; preds = %9
  %14 = load i64, ptr %11, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 38
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = load ptr, ptr @decl_die_table, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.tree_decl_minimal, ptr %11, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !17
  %21 = tail call ptr @htab_find_with_hash(ptr noundef %18, ptr noundef nonnull %11, i32 noundef %20) #31
  %22 = icmp eq ptr %21, %1
  br i1 %22, label %23, label %59

23:                                               ; preds = %17
  %24 = load i64, ptr %11, align 8
  %25 = and i64 %24, 65535
  br label %26

26:                                               ; preds = %23, %13
  %27 = phi i64 [ %25, %23 ], [ %15, %13 ]
  %28 = phi i64 [ %24, %23 ], [ %14, %13 ]
  %29 = icmp eq i64 %27, 20
  br i1 %29, label %59, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %27
  %32 = load i32, ptr %31, align 4, !tbaa !17
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %34, label %62

34:                                               ; preds = %30
  %35 = load ptr, ptr @decl_scope_table, align 8
  %36 = icmp eq ptr %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = load i32, ptr %35, align 8, !tbaa !182
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i32 [ 0, %34 ], [ %38, %37 ]
  br label %41

41:                                               ; preds = %39, %45
  %42 = phi i32 [ %43, %45 ], [ %40, %39 ]
  %43 = add i32 %42, -1
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %45, label %50

45:                                               ; preds = %41
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds %struct.VEC_tree_base, ptr %35, i64 0, i32 2, i64 %46
  %48 = load ptr, ptr %47, align 8, !tbaa !6
  %49 = icmp eq ptr %48, %11
  br i1 %49, label %57, label %41, !llvm.loop !408

50:                                               ; preds = %41
  %51 = load i32, ptr @debug_info_level, align 4, !tbaa !17
  %52 = icmp ugt i32 %51, 1
  %53 = and i64 %28, 4194304
  %54 = icmp eq i64 %53, 0
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 16847, ptr noundef nonnull @.str.5) #31
  br label %59

57:                                               ; preds = %45
  %58 = getelementptr i8, ptr %11, i64 88
  br label %59

59:                                               ; preds = %56, %50, %9, %17, %26, %57
  %60 = phi ptr [ %58, %57 ], [ @comp_unit_die, %26 ], [ @comp_unit_die, %17 ], [ @comp_unit_die, %9 ], [ @comp_unit_die, %50 ], [ @comp_unit_die, %56 ]
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  br label %62

62:                                               ; preds = %59, %30
  %63 = phi ptr [ %1, %30 ], [ %61, %59 ]
  ret ptr %63
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_descr_info_field(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #10 {
  %5 = tail call i32 @host_integerp(ptr noundef %2, i32 noundef 0) #31
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %4
  %8 = tail call i64 @tree_low_cst(ptr noundef %2, i32 noundef 0) #31
  %9 = icmp eq ptr %0, null
  br i1 %9, label %65, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %15, ptr %11, align 8, !tbaa !157
  %16 = icmp eq ptr %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %14, %10
  %18 = phi ptr [ %15, %14 ], [ %12, %10 ]
  %19 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %18, i64 0, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !201
  %21 = load i32, ptr %18, align 8, !tbaa !159
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %17, %14
  %24 = phi ptr [ %18, %17 ], [ null, %14 ]
  %25 = tail call ptr @vec_gc_o_reserve(ptr noundef %24, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %25, ptr %11, align 8, !tbaa !6
  %26 = load i32, ptr %25, align 8, !tbaa !159
  br label %27

27:                                               ; preds = %23, %17
  %28 = phi i32 [ %21, %17 ], [ %26, %23 ]
  %29 = phi ptr [ %18, %17 ], [ %25, %23 ]
  %30 = add i32 %28, 1
  store i32 %30, ptr %29, align 8, !tbaa !159
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %29, i64 0, i32 2, i64 %31
  store i32 %1, ptr %32, align 8, !tbaa.struct !179
  %33 = getelementptr inbounds i8, ptr %32, i64 8
  store i32 6, ptr %33, align 8, !tbaa.struct !202
  %34 = getelementptr inbounds i8, ptr %32, i64 16
  store i64 %8, ptr %34, align 8, !tbaa.struct !203
  br label %65

35:                                               ; preds = %4
  %36 = tail call fastcc ptr @descr_info_loc(ptr noundef %2, ptr noundef %3)
  %37 = icmp eq ptr %36, null
  %38 = icmp eq ptr %0, null
  %39 = or i1 %38, %37
  br i1 %39, label %65, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !6
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %45, ptr %41, align 8, !tbaa !157
  %46 = icmp eq ptr %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %44, %40
  %48 = phi ptr [ %45, %44 ], [ %42, %40 ]
  %49 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %48, i64 0, i32 1
  %50 = load i32, ptr %49, align 4, !tbaa !201
  %51 = load i32, ptr %48, align 8, !tbaa !159
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %47, %44
  %54 = phi ptr [ %48, %47 ], [ null, %44 ]
  %55 = tail call ptr @vec_gc_o_reserve(ptr noundef %54, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %55, ptr %41, align 8, !tbaa !6
  %56 = load i32, ptr %55, align 8, !tbaa !159
  br label %57

57:                                               ; preds = %53, %47
  %58 = phi i32 [ %51, %47 ], [ %56, %53 ]
  %59 = phi ptr [ %48, %47 ], [ %55, %53 ]
  %60 = add i32 %58, 1
  store i32 %60, ptr %59, align 8, !tbaa !159
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %59, i64 0, i32 2, i64 %61
  store i32 %1, ptr %62, align 8, !tbaa.struct !179
  %63 = getelementptr inbounds i8, ptr %62, i64 8
  store i32 2, ptr %63, align 8, !tbaa.struct !202
  %64 = getelementptr inbounds i8, ptr %62, i64 16
  store ptr %36, ptr %64, align 8, !tbaa.struct !203
  br label %65

65:                                               ; preds = %57, %27, %7, %35
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @descr_info_loc(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %5 = icmp eq ptr %0, %1
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %8 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %7, i64 0, i32 1
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, -256
  %11 = or i16 %10, 151
  store i16 %11, ptr %8, align 8
  %12 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %7, i64 0, i32 3
  store i32 6, ptr %12, align 8, !tbaa !52
  %13 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %7, i64 0, i32 3, i32 1
  store i64 0, ptr %13, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %7, i64 0, i32 4
  store i32 6, ptr %14, align 8, !tbaa !49
  %15 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %7, i64 0, i32 4, i32 1
  store i64 0, ptr %15, align 8, !tbaa !17
  br label %165

16:                                               ; preds = %2
  %17 = load i64, ptr %0, align 8
  %18 = trunc i64 %17 to i16
  switch i16 %18, label %165 [
    i16 116, label %19
    i16 113, label %19
    i16 32, label %23
    i16 23, label %45
    i16 47, label %79
    i16 66, label %114
    i16 63, label %114
    i16 64, label %131
    i16 65, label %162
    i16 101, label %163
    i16 102, label %164
  ]

19:                                               ; preds = %16, %16
  %20 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = tail call fastcc ptr @descr_info_loc(ptr noundef %21, ptr noundef %1)
  br label %165

23:                                               ; preds = %16
  %24 = tail call fastcc ptr @loc_list_from_tree(ptr noundef nonnull %0, i32 noundef 0)
  %25 = icmp eq ptr %24, null
  br i1 %25, label %165, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %24, align 8, !tbaa !273
  %28 = icmp eq ptr %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %31 = icmp eq ptr %30, null
  br i1 %31, label %165, label %32

32:                                               ; preds = %29
  %33 = load i32, ptr @dump_flags, align 4, !tbaa !21
  %34 = and i32 %33, 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %165, label %36

36:                                               ; preds = %32
  %37 = tail call i64 @fwrite(ptr nonnull @.str.291, i64 27, i64 1, ptr nonnull %30)
  %38 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %39 = load i32, ptr @dump_flags, align 4, !tbaa !21
  tail call void @print_generic_expr(ptr noundef %38, ptr noundef nonnull %0, i32 noundef %39) #31
  %40 = load ptr, ptr @dump_file, align 8, !tbaa !6
  %41 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.313)
  br label %165

42:                                               ; preds = %26
  %43 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %24, i64 0, i32 5
  %44 = load ptr, ptr %43, align 8, !tbaa !270
  br label %165

45:                                               ; preds = %16
  %46 = tail call i32 @host_integerp(ptr noundef nonnull %0, i32 noundef 0) #31
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %165, label %48

48:                                               ; preds = %45
  %49 = tail call i64 @tree_low_cst(ptr noundef nonnull %0, i32 noundef 0) #31
  %50 = icmp sgt i64 %49, -1
  br i1 %50, label %51, label %63

51:                                               ; preds = %48
  %52 = icmp ult i64 %49, 32
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = trunc i64 %49 to i16
  %55 = add nuw nsw i16 %54, 48
  br label %68

56:                                               ; preds = %51
  %57 = icmp ult i64 %49, 256
  br i1 %57, label %68, label %58

58:                                               ; preds = %56
  %59 = icmp ult i64 %49, 65536
  br i1 %59, label %68, label %60

60:                                               ; preds = %58
  %61 = icmp ult i64 %49, 4294967296
  %62 = select i1 %61, i16 12, i16 16
  br label %68

63:                                               ; preds = %48
  %64 = icmp ugt i64 %49, -129
  br i1 %64, label %68, label %65

65:                                               ; preds = %63
  %66 = icmp ugt i64 %49, -32769
  %67 = select i1 %66, i16 11, i16 17
  br label %68

68:                                               ; preds = %53, %56, %58, %60, %63, %65
  %69 = phi i16 [ %55, %53 ], [ 8, %56 ], [ 10, %58 ], [ %62, %60 ], [ 9, %63 ], [ %67, %65 ]
  %70 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %71 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %70, i64 0, i32 1
  %72 = load i16, ptr %71, align 8
  %73 = and i16 %72, -256
  %74 = or i16 %73, %69
  store i16 %74, ptr %71, align 8
  %75 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %70, i64 0, i32 3
  store i32 6, ptr %75, align 8, !tbaa !52
  %76 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %70, i64 0, i32 3, i32 1
  store i64 %49, ptr %76, align 8, !tbaa !17
  %77 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %70, i64 0, i32 4
  store i32 6, ptr %77, align 8, !tbaa !49
  %78 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %70, i64 0, i32 4, i32 1
  store i64 0, ptr %78, align 8, !tbaa !17
  br label %165

79:                                               ; preds = %16
  %80 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = tail call i64 @int_size_in_bytes(ptr noundef %81) #31
  %83 = icmp slt i64 %82, 0
  br i1 %83, label %165, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = tail call fastcc ptr @descr_info_loc(ptr noundef %86, ptr noundef %1)
  store ptr %87, ptr %3, align 8, !tbaa !6
  %88 = icmp eq ptr %87, null
  br i1 %88, label %165, label %89

89:                                               ; preds = %84
  %90 = icmp eq i64 %82, 4
  %91 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %92 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 1
  %93 = load i16, ptr %92, align 8
  %94 = and i16 %93, -256
  %95 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 3
  %96 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 3, i32 1
  %97 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 4
  %98 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %91, i64 0, i32 4, i32 1
  br i1 %90, label %99, label %105

99:                                               ; preds = %89
  %100 = or i16 %94, 6
  store i16 %100, ptr %92, align 8
  store i32 6, ptr %95, align 8, !tbaa !52
  store i64 0, ptr %96, align 8, !tbaa !17
  store i32 6, ptr %97, align 8, !tbaa !49
  store i64 0, ptr %98, align 8, !tbaa !17
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi ptr [ %3, %99 ], [ %103, %101 ]
  %103 = load ptr, ptr %102, align 8, !tbaa !6
  %104 = icmp eq ptr %103, null
  br i1 %104, label %111, label %101, !llvm.loop !53

105:                                              ; preds = %89
  %106 = or i16 %94, 148
  store i16 %106, ptr %92, align 8
  store i32 6, ptr %95, align 8, !tbaa !52
  store i64 %82, ptr %96, align 8, !tbaa !17
  store i32 6, ptr %97, align 8, !tbaa !49
  store i64 0, ptr %98, align 8, !tbaa !17
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi ptr [ %3, %105 ], [ %109, %107 ]
  %109 = load ptr, ptr %108, align 8, !tbaa !6
  %110 = icmp eq ptr %109, null
  br i1 %110, label %111, label %107, !llvm.loop !53

111:                                              ; preds = %107, %101
  %112 = phi ptr [ %102, %101 ], [ %108, %107 ]
  store ptr %91, ptr %112, align 8, !tbaa !6
  %113 = load ptr, ptr %3, align 8, !tbaa !6
  br label %165

114:                                              ; preds = %16, %16
  %115 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %116 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %117 = load ptr, ptr %116, align 8, !tbaa !17
  %118 = tail call i32 @host_integerp(ptr noundef %117, i32 noundef 1) #31
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %114
  %121 = load ptr, ptr %116, align 8, !tbaa !17
  %122 = tail call i64 @tree_low_cst(ptr noundef %121, i32 noundef 1) #31
  %123 = icmp ult i64 %122, 16384
  br i1 %123, label %124, label %131

124:                                              ; preds = %120
  %125 = load ptr, ptr %115, align 8, !tbaa !17
  %126 = tail call fastcc ptr @descr_info_loc(ptr noundef %125, ptr noundef %1)
  store ptr %126, ptr %3, align 8, !tbaa !6
  %127 = icmp eq ptr %126, null
  br i1 %127, label %165, label %128

128:                                              ; preds = %124
  %129 = load ptr, ptr %116, align 8, !tbaa !17
  %130 = tail call i64 @tree_low_cst(ptr noundef %129, i32 noundef 0) #31
  call fastcc void @loc_descr_plus_const(ptr noundef nonnull %3, i64 noundef %130)
  br label %165

131:                                              ; preds = %16, %114, %120, %164, %163, %162
  %132 = phi i16 [ 46, %164 ], [ 41, %163 ], [ 30, %162 ], [ 34, %120 ], [ 34, %114 ], [ 28, %16 ]
  %133 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %134 = load ptr, ptr %133, align 8, !tbaa !17
  %135 = tail call fastcc ptr @descr_info_loc(ptr noundef %134, ptr noundef %1)
  store ptr %135, ptr %3, align 8, !tbaa !6
  %136 = icmp eq ptr %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %139 = load ptr, ptr %138, align 8, !tbaa !17
  %140 = tail call fastcc ptr @descr_info_loc(ptr noundef %139, ptr noundef %1)
  store ptr %140, ptr %4, align 8, !tbaa !6
  %141 = icmp eq ptr %140, null
  br i1 %141, label %165, label %142

142:                                              ; preds = %137, %142
  %143 = phi ptr [ %144, %142 ], [ %3, %137 ]
  %144 = load ptr, ptr %143, align 8, !tbaa !6
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %142, !llvm.loop !53

146:                                              ; preds = %142
  store ptr %140, ptr %143, align 8, !tbaa !6
  %147 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 64) #31
  %148 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %147, i64 0, i32 1
  %149 = load i16, ptr %148, align 8
  %150 = and i16 %149, -256
  %151 = or i16 %150, %132
  store i16 %151, ptr %148, align 8
  %152 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %147, i64 0, i32 3
  store i32 6, ptr %152, align 8, !tbaa !52
  %153 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %147, i64 0, i32 3, i32 1
  store i64 0, ptr %153, align 8, !tbaa !17
  %154 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %147, i64 0, i32 4
  store i32 6, ptr %154, align 8, !tbaa !49
  %155 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %147, i64 0, i32 4, i32 1
  store i64 0, ptr %155, align 8, !tbaa !17
  br label %156

156:                                              ; preds = %156, %146
  %157 = phi ptr [ %4, %146 ], [ %158, %156 ]
  %158 = load ptr, ptr %157, align 8, !tbaa !6
  %159 = icmp eq ptr %158, null
  br i1 %159, label %160, label %156, !llvm.loop !53

160:                                              ; preds = %156
  store ptr %147, ptr %157, align 8, !tbaa !6
  %161 = load ptr, ptr %3, align 8, !tbaa !6
  br label %165

162:                                              ; preds = %16
  br label %131

163:                                              ; preds = %16
  br label %131

164:                                              ; preds = %16
  br label %131

165:                                              ; preds = %128, %160, %42, %36, %32, %29, %23, %45, %79, %84, %124, %131, %137, %16, %111, %68, %19, %6
  %166 = phi ptr [ %7, %6 ], [ %113, %111 ], [ %70, %68 ], [ %22, %19 ], [ null, %16 ], [ null, %137 ], [ null, %131 ], [ null, %124 ], [ null, %84 ], [ null, %79 ], [ null, %45 ], [ %44, %42 ], [ null, %23 ], [ null, %29 ], [ null, %32 ], [ null, %36 ], [ %161, %160 ], [ %126, %128 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #31
  ret ptr %166
}

declare i32 @tree_int_cst_sgn(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @splice_child_die(ptr noundef %0, ptr noundef %1) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !174
  %5 = icmp eq ptr %4, %0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 3
  br label %108

8:                                                ; preds = %2, %40
  %9 = phi ptr [ %41, %40 ], [ %1, %2 ]
  %10 = getelementptr inbounds %struct.die_struct, ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !157
  %12 = icmp eq ptr %11, null
  br i1 %12, label %51, label %13

13:                                               ; preds = %8, %34
  %14 = phi ptr [ %35, %34 ], [ %11, %8 ]
  %15 = phi ptr [ %36, %34 ], [ %11, %8 ]
  %16 = phi i64 [ %38, %34 ], [ 0, %8 ]
  %17 = phi ptr [ %37, %34 ], [ null, %8 ]
  %18 = load i32, ptr %15, align 8, !tbaa !159
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %16, %19
  br i1 %20, label %21, label %40

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %15, i64 0, i32 2, i64 %16
  %23 = load i32, ptr %22, align 8, !tbaa !161
  switch i32 %23, label %34 [
    i32 71, label %43
    i32 49, label %24
  ]

24:                                               ; preds = %21
  %25 = getelementptr i8, ptr %22, i64 8
  %26 = load i32, ptr %25, align 8, !tbaa !163
  %27 = icmp eq i32 %26, 10
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %29 = load ptr, ptr %10, align 8, !tbaa !157
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi ptr [ %14, %24 ], [ %29, %28 ]
  %32 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %15, i64 0, i32 2, i64 %16, i32 1, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  br label %34

34:                                               ; preds = %21, %30
  %35 = phi ptr [ %31, %30 ], [ %14, %21 ]
  %36 = phi ptr [ %31, %30 ], [ %15, %21 ]
  %37 = phi ptr [ %33, %30 ], [ %17, %21 ]
  %38 = add nuw nsw i64 %16, 1
  %39 = icmp eq ptr %36, null
  br i1 %39, label %40, label %13, !llvm.loop !164

40:                                               ; preds = %34, %13
  %41 = phi ptr [ %37, %34 ], [ %17, %13 ]
  %42 = icmp eq ptr %41, null
  br i1 %42, label %51, label %8

43:                                               ; preds = %21
  %44 = getelementptr i8, ptr %22, i64 8
  %45 = load i32, ptr %44, align 8, !tbaa !163
  %46 = icmp eq i32 %45, 10
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %48

48:                                               ; preds = %47, %43
  %49 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %15, i64 0, i32 2, i64 %16, i32 1, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  br label %51

51:                                               ; preds = %40, %8, %48
  %52 = phi ptr [ %50, %48 ], [ null, %8 ], [ null, %40 ]
  %53 = icmp eq ptr %52, null
  %54 = select i1 %53, ptr %1, ptr %52
  %55 = getelementptr inbounds %struct.die_struct, ptr %54, i64 0, i32 3
  %56 = load ptr, ptr %55, align 8, !tbaa !174
  %57 = getelementptr inbounds %struct.die_struct, ptr %54, i64 0, i32 3
  %58 = icmp eq ptr %56, %0
  br i1 %58, label %108, label %59

59:                                               ; preds = %51, %93
  %60 = phi ptr [ %94, %93 ], [ %0, %51 ]
  %61 = icmp eq ptr %60, null
  br i1 %61, label %104, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.die_struct, ptr %60, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !157
  %65 = icmp eq ptr %64, null
  br i1 %65, label %104, label %66

66:                                               ; preds = %62, %87
  %67 = phi ptr [ %88, %87 ], [ %64, %62 ]
  %68 = phi ptr [ %89, %87 ], [ %64, %62 ]
  %69 = phi i64 [ %91, %87 ], [ 0, %62 ]
  %70 = phi ptr [ %90, %87 ], [ null, %62 ]
  %71 = load i32, ptr %68, align 8, !tbaa !159
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %74, label %93

74:                                               ; preds = %66
  %75 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %68, i64 0, i32 2, i64 %69
  %76 = load i32, ptr %75, align 8, !tbaa !161
  switch i32 %76, label %87 [
    i32 71, label %96
    i32 49, label %77
  ]

77:                                               ; preds = %74
  %78 = getelementptr i8, ptr %75, i64 8
  %79 = load i32, ptr %78, align 8, !tbaa !163
  %80 = icmp eq i32 %79, 10
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %82 = load ptr, ptr %63, align 8, !tbaa !157
  br label %83

83:                                               ; preds = %81, %77
  %84 = phi ptr [ %67, %77 ], [ %82, %81 ]
  %85 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %68, i64 0, i32 2, i64 %69, i32 1, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  br label %87

87:                                               ; preds = %74, %83
  %88 = phi ptr [ %84, %83 ], [ %67, %74 ]
  %89 = phi ptr [ %84, %83 ], [ %68, %74 ]
  %90 = phi ptr [ %86, %83 ], [ %70, %74 ]
  %91 = add nuw nsw i64 %69, 1
  %92 = icmp eq ptr %89, null
  br i1 %92, label %93, label %66, !llvm.loop !164

93:                                               ; preds = %87, %66
  %94 = phi ptr [ %90, %87 ], [ %70, %66 ]
  %95 = icmp eq ptr %94, null
  br i1 %95, label %104, label %59

96:                                               ; preds = %74
  %97 = getelementptr i8, ptr %75, i64 8
  %98 = load i32, ptr %97, align 8, !tbaa !163
  %99 = icmp eq i32 %98, 10
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %101

101:                                              ; preds = %100, %96
  %102 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %68, i64 0, i32 2, i64 %69, i32 1, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  br label %104

104:                                              ; preds = %59, %62, %93, %101
  %105 = phi ptr [ %103, %101 ], [ null, %93 ], [ null, %62 ], [ null, %59 ]
  %106 = icmp eq ptr %56, %105
  br i1 %106, label %108, label %107

107:                                              ; preds = %104
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7630, ptr noundef nonnull @.str.5) #31
  br label %108

108:                                              ; preds = %6, %51, %104, %107
  %109 = phi ptr [ %7, %6 ], [ %57, %51 ], [ %57, %104 ], [ %57, %107 ]
  %110 = phi ptr [ %1, %6 ], [ %54, %51 ], [ %54, %104 ], [ %54, %107 ]
  %111 = load ptr, ptr %109, align 8, !tbaa !174
  %112 = getelementptr inbounds %struct.die_struct, ptr %111, i64 0, i32 4
  %113 = load ptr, ptr %112, align 8, !tbaa !175
  br label %114

114:                                              ; preds = %114, %108
  %115 = phi ptr [ %113, %108 ], [ %117, %114 ]
  %116 = getelementptr inbounds %struct.die_struct, ptr %115, i64 0, i32 5
  %117 = load ptr, ptr %116, align 8, !tbaa !176
  %118 = icmp eq ptr %117, %110
  br i1 %118, label %119, label %114

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.die_struct, ptr %115, i64 0, i32 5
  %121 = getelementptr inbounds %struct.die_struct, ptr %115, i64 0, i32 3
  %122 = load ptr, ptr %121, align 8, !tbaa !174
  %123 = icmp eq ptr %111, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %119
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7515, ptr noundef nonnull @.str.5) #31
  %125 = load ptr, ptr %120, align 8, !tbaa !176
  %126 = icmp eq ptr %125, %110
  br i1 %126, label %128, label %127

127:                                              ; preds = %124
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7516, ptr noundef nonnull @.str.5) #31
  br label %128

128:                                              ; preds = %119, %127, %124
  %129 = icmp eq ptr %115, %110
  br i1 %129, label %130, label %136

130:                                              ; preds = %128
  %131 = load ptr, ptr %109, align 8, !tbaa !174
  %132 = getelementptr inbounds %struct.die_struct, ptr %131, i64 0, i32 4
  %133 = load ptr, ptr %132, align 8, !tbaa !175
  %134 = icmp eq ptr %133, %110
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7519, ptr noundef nonnull @.str.5) #31
  br label %139

136:                                              ; preds = %128
  %137 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 5
  %138 = load ptr, ptr %137, align 8, !tbaa !176
  store ptr %138, ptr %120, align 8, !tbaa !176
  br label %139

139:                                              ; preds = %136, %135, %130
  %140 = phi ptr [ %115, %136 ], [ null, %130 ], [ null, %135 ]
  %141 = load ptr, ptr %109, align 8, !tbaa !174
  %142 = getelementptr inbounds %struct.die_struct, ptr %141, i64 0, i32 4
  %143 = load ptr, ptr %142, align 8, !tbaa !175
  %144 = icmp eq ptr %143, %110
  br i1 %144, label %145, label %146

145:                                              ; preds = %139
  store ptr %140, ptr %142, align 8, !tbaa !175
  br label %146

146:                                              ; preds = %139, %145
  %147 = icmp eq ptr %0, null
  br i1 %147, label %163, label %148

148:                                              ; preds = %146
  %149 = icmp eq ptr %110, %0
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %151

151:                                              ; preds = %150, %148
  store ptr %0, ptr %109, align 8, !tbaa !174
  %152 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %153 = load ptr, ptr %152, align 8, !tbaa !175
  %154 = icmp eq ptr %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.die_struct, ptr %153, i64 0, i32 5
  %157 = load ptr, ptr %156, align 8, !tbaa !176
  %158 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 5
  store ptr %157, ptr %158, align 8, !tbaa !176
  br label %161

159:                                              ; preds = %151
  %160 = getelementptr inbounds %struct.die_struct, ptr %110, i64 0, i32 5
  br label %161

161:                                              ; preds = %159, %155
  %162 = phi ptr [ %160, %159 ], [ %156, %155 ]
  store ptr %110, ptr %162, align 8, !tbaa !176
  store ptr %110, ptr %152, align 8, !tbaa !175
  br label %163

163:                                              ; preds = %146, %161
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @verify_marks_clear(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !235
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 20749, ptr noundef nonnull @.str.5) #31
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !175
  %9 = icmp eq ptr %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi ptr [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !176
  tail call fastcc void @verify_marks_clear(ptr noundef %13)
  %14 = load ptr, ptr %7, align 8, !tbaa !175
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %10, !llvm.loop !409

16:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @prune_unused_types_walk(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !235
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = load i32, ptr %0, align 8, !tbaa !185
  switch i32 %6, label %24 [
    i32 19, label %7
    i32 23, label %7
    i32 2, label %7
    i32 38, label %20
    i32 45, label %20
    i32 15, label %20
    i32 16, label %20
    i32 53, label %20
    i32 22, label %20
    i32 1, label %20
    i32 56, label %20
    i32 42, label %20
    i32 51, label %20
    i32 4, label %20
    i32 21, label %20
    i32 18, label %20
    i32 32, label %20
    i32 33, label %20
    i32 31, label %20
    i32 41, label %20
  ]

7:                                                ; preds = %5, %5, %5
  %8 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 10
  %9 = load i32, ptr %8, align 4, !tbaa !399
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %7, %16
  %12 = phi ptr [ %14, %16 ], [ %0, %7 ]
  %13 = getelementptr inbounds %struct.die_struct, ptr %12, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !174
  %15 = icmp eq ptr %14, null
  br i1 %15, label %79, label %16

16:                                               ; preds = %11
  %17 = load i32, ptr %14, align 8, !tbaa !185
  %18 = icmp eq i32 %17, 46
  br i1 %18, label %19, label %11, !llvm.loop !410

19:                                               ; preds = %16
  tail call fastcc void @prune_unused_types_walk_local_classes(ptr noundef nonnull %0)
  br label %79

20:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %21 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 10
  %22 = load i32, ptr %21, align 4, !tbaa !399
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %79, label %24

24:                                               ; preds = %5, %20, %7
  %25 = icmp eq i32 %3, 0
  br i1 %25, label %26, label %69

26:                                               ; preds = %24
  store i32 1, ptr %2, align 8, !tbaa !235
  %27 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !157
  %29 = icmp eq ptr %28, null
  br i1 %29, label %69, label %30

30:                                               ; preds = %26, %65
  %31 = phi i64 [ %66, %65 ], [ 0, %26 ]
  %32 = phi ptr [ %67, %65 ], [ %28, %26 ]
  %33 = load i32, ptr %32, align 8, !tbaa !159
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %31, %34
  br i1 %35, label %36, label %69

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %32, i64 0, i32 2, i64 %31
  %38 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %32, i64 0, i32 2, i64 %31, i32 1
  %39 = load i32, ptr %38, align 8, !tbaa !163
  %40 = icmp eq i32 %39, 10
  br i1 %40, label %41, label %58

41:                                               ; preds = %36
  %42 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %43 = icmp slt i32 %42, 4
  br i1 %43, label %53, label %44

44:                                               ; preds = %41
  %45 = load i32, ptr %37, align 8, !tbaa !161
  %46 = icmp eq i32 %45, 71
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %32, i64 0, i32 2, i64 %31, i32 1, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.die_struct, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %65

53:                                               ; preds = %47, %44, %41
  %54 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %32, i64 0, i32 2, i64 %31, i32 1, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  tail call fastcc void @prune_unused_types_mark(ptr noundef %55, i32 noundef 1)
  %56 = getelementptr i8, ptr %37, i64 8
  %57 = load i32, ptr %56, align 8, !tbaa !163
  br label %58

58:                                               ; preds = %53, %36
  %59 = phi i32 [ %57, %53 ], [ %39, %36 ]
  %60 = icmp eq i32 %59, 14
  br i1 %60, label %61, label %65

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %32, i64 0, i32 2, i64 %31, i32 1, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.indirect_string_node, ptr %63, i64 0, i32 1
  store i32 0, ptr %64, align 8, !tbaa !267
  br label %65

65:                                               ; preds = %47, %61, %58
  %66 = add nuw nsw i64 %31, 1
  %67 = load ptr, ptr %27, align 8, !tbaa !157
  %68 = icmp eq ptr %67, null
  br i1 %68, label %69, label %30, !llvm.loop !411

69:                                               ; preds = %30, %65, %26, %24
  store i32 2, ptr %2, align 8, !tbaa !235
  %70 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %71 = load ptr, ptr %70, align 8, !tbaa !175
  %72 = icmp eq ptr %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %69, %73
  %74 = phi ptr [ %76, %73 ], [ %71, %69 ]
  %75 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 5
  %76 = load ptr, ptr %75, align 8, !tbaa !176
  tail call fastcc void @prune_unused_types_walk(ptr noundef %76)
  %77 = load ptr, ptr %70, align 8, !tbaa !175
  %78 = icmp eq ptr %76, %77
  br i1 %78, label %79, label %73, !llvm.loop !412

79:                                               ; preds = %11, %73, %69, %20, %19, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @prune_unused_types_mark(ptr nocapture noundef %0, i32 noundef %1) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %4 = load i32, ptr %3, align 8, !tbaa !235
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %104

6:                                                ; preds = %2
  store i32 1, ptr %3, align 8, !tbaa !235
  %7 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !174
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call fastcc void @prune_unused_types_mark(ptr noundef nonnull %8, i32 noundef 0)
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !157
  %14 = icmp eq ptr %13, null
  br i1 %14, label %54, label %15

15:                                               ; preds = %11, %50
  %16 = phi i64 [ %51, %50 ], [ 0, %11 ]
  %17 = phi ptr [ %52, %50 ], [ %13, %11 ]
  %18 = load i32, ptr %17, align 8, !tbaa !159
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %16, %19
  br i1 %20, label %21, label %54

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %16
  %23 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %16, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !163
  %25 = icmp eq i32 %24, 10
  br i1 %25, label %26, label %43

26:                                               ; preds = %21
  %27 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %28 = icmp slt i32 %27, 4
  br i1 %28, label %38, label %29

29:                                               ; preds = %26
  %30 = load i32, ptr %22, align 8, !tbaa !161
  %31 = icmp eq i32 %30, 71
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %16, i32 1, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.die_struct, ptr %34, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %50

38:                                               ; preds = %32, %29, %26
  %39 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %16, i32 1, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  tail call fastcc void @prune_unused_types_mark(ptr noundef %40, i32 noundef 1)
  %41 = getelementptr i8, ptr %22, i64 8
  %42 = load i32, ptr %41, align 8, !tbaa !163
  br label %43

43:                                               ; preds = %38, %21
  %44 = phi i32 [ %42, %38 ], [ %24, %21 ]
  %45 = icmp eq i32 %44, 14
  br i1 %45, label %46, label %50

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %17, i64 0, i32 2, i64 %16, i32 1, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.indirect_string_node, ptr %48, i64 0, i32 1
  store i32 0, ptr %49, align 8, !tbaa !267
  br label %50

50:                                               ; preds = %32, %46, %43
  %51 = add nuw nsw i64 %16, 1
  %52 = load ptr, ptr %12, align 8, !tbaa !157
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %15, !llvm.loop !411

54:                                               ; preds = %50, %15, %11
  br label %55

55:                                               ; preds = %54, %87
  %56 = phi ptr [ %88, %87 ], [ %0, %54 ]
  %57 = getelementptr inbounds %struct.die_struct, ptr %56, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !157
  %59 = icmp eq ptr %58, null
  br i1 %59, label %104, label %60

60:                                               ; preds = %55, %81
  %61 = phi ptr [ %82, %81 ], [ %58, %55 ]
  %62 = phi ptr [ %83, %81 ], [ %58, %55 ]
  %63 = phi i64 [ %85, %81 ], [ 0, %55 ]
  %64 = phi ptr [ %84, %81 ], [ null, %55 ]
  %65 = load i32, ptr %62, align 8, !tbaa !159
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %63, %66
  br i1 %67, label %68, label %87

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %62, i64 0, i32 2, i64 %63
  %70 = load i32, ptr %69, align 8, !tbaa !161
  switch i32 %70, label %81 [
    i32 60, label %90
    i32 71, label %71
    i32 49, label %71
  ]

71:                                               ; preds = %68, %68
  %72 = getelementptr i8, ptr %69, i64 8
  %73 = load i32, ptr %72, align 8, !tbaa !163
  %74 = icmp eq i32 %73, 10
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %76 = load ptr, ptr %57, align 8, !tbaa !157
  br label %77

77:                                               ; preds = %75, %71
  %78 = phi ptr [ %61, %71 ], [ %76, %75 ]
  %79 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %62, i64 0, i32 2, i64 %63, i32 1, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  br label %81

81:                                               ; preds = %77, %68
  %82 = phi ptr [ %78, %77 ], [ %61, %68 ]
  %83 = phi ptr [ %78, %77 ], [ %62, %68 ]
  %84 = phi ptr [ %80, %77 ], [ %64, %68 ]
  %85 = add nuw nsw i64 %63, 1
  %86 = icmp eq ptr %83, null
  br i1 %86, label %87, label %60, !llvm.loop !164

87:                                               ; preds = %81, %60
  %88 = phi ptr [ %84, %81 ], [ %64, %60 ]
  %89 = icmp eq ptr %88, null
  br i1 %89, label %104, label %55

90:                                               ; preds = %68
  %91 = getelementptr i8, ptr %69, i64 8
  %92 = load i32, ptr %91, align 8, !tbaa !163
  %93 = icmp eq i32 %92, 9
  br i1 %93, label %95, label %94

94:                                               ; preds = %90
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6900, ptr noundef nonnull @.str.5) #31
  br label %95

95:                                               ; preds = %90, %94
  %96 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %62, i64 0, i32 2, i64 %63, i32 1, i32 1
  %97 = load i8, ptr %96, align 8, !tbaa !17
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 6
  %101 = load ptr, ptr %100, align 8, !tbaa !295
  %102 = icmp eq ptr %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  tail call fastcc void @prune_unused_types_mark(ptr noundef nonnull %101, i32 noundef 1)
  br label %104

104:                                              ; preds = %55, %87, %95, %99, %103, %2
  %105 = icmp eq i32 %1, 0
  br i1 %105, label %153, label %106

106:                                              ; preds = %104
  %107 = load i32, ptr %3, align 8, !tbaa !235
  %108 = icmp eq i32 %107, 2
  br i1 %108, label %153, label %109

109:                                              ; preds = %106
  store i32 2, ptr %3, align 8, !tbaa !235
  %110 = load i32, ptr %0, align 8, !tbaa !185
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %133, label %112

112:                                              ; preds = %109
  %113 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %114 = icmp sgt i32 %113, 3
  br i1 %114, label %115, label %143

115:                                              ; preds = %112
  switch i32 %110, label %143 [
    i32 22, label %116
    i32 2, label %116
    i32 56, label %116
    i32 4, label %116
    i32 15, label %116
    i32 16, label %116
    i32 18, label %116
    i32 19, label %116
    i32 21, label %116
    i32 23, label %116
    i32 31, label %116
    i32 32, label %116
    i32 33, label %116
    i32 36, label %116
    i32 38, label %116
    i32 41, label %116
    i32 45, label %116
    i32 53, label %116
  ]

116:                                              ; preds = %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115, %115
  %117 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %118 = load ptr, ptr %117, align 8, !tbaa !157
  %119 = icmp eq ptr %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %116
  %121 = load i32, ptr %118, align 8, !tbaa !159
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %120
  %124 = zext i32 %121 to i64
  br label %128

125:                                              ; preds = %128
  %126 = add nuw nsw i64 %129, 1
  %127 = icmp eq i64 %126, %124
  br i1 %127, label %133, label %128

128:                                              ; preds = %125, %123
  %129 = phi i64 [ 0, %123 ], [ %126, %125 ]
  %130 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %118, i64 0, i32 2, i64 %129
  %131 = load i32, ptr %130, align 8, !tbaa !161
  %132 = icmp eq i32 %131, 60
  br i1 %132, label %143, label %125

133:                                              ; preds = %125, %120, %116, %109
  %134 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %135 = load ptr, ptr %134, align 8, !tbaa !175
  %136 = icmp eq ptr %135, null
  br i1 %136, label %153, label %137

137:                                              ; preds = %133, %137
  %138 = phi ptr [ %140, %137 ], [ %135, %133 ]
  %139 = getelementptr inbounds %struct.die_struct, ptr %138, i64 0, i32 5
  %140 = load ptr, ptr %139, align 8, !tbaa !176
  tail call fastcc void @prune_unused_types_mark(ptr noundef %140, i32 noundef 1)
  %141 = load ptr, ptr %134, align 8, !tbaa !175
  %142 = icmp eq ptr %140, %141
  br i1 %142, label %153, label %137, !llvm.loop !413

143:                                              ; preds = %128, %115, %112
  %144 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %145 = load ptr, ptr %144, align 8, !tbaa !175
  %146 = icmp eq ptr %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %143, %147
  %148 = phi ptr [ %150, %147 ], [ %145, %143 ]
  %149 = getelementptr inbounds %struct.die_struct, ptr %148, i64 0, i32 5
  %150 = load ptr, ptr %149, align 8, !tbaa !176
  tail call fastcc void @prune_unused_types_walk(ptr noundef %150)
  %151 = load ptr, ptr %144, align 8, !tbaa !175
  %152 = icmp eq ptr %150, %151
  br i1 %152, label %153, label %147, !llvm.loop !414

153:                                              ; preds = %147, %137, %133, %143, %106, %104
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @prune_indirect_string(ptr noundef %0, ptr nocapture readnone %1) #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.indirect_string_node, ptr %3, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !308
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.indirect_string_node, ptr %3, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !267
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7, %2
  %12 = load ptr, ptr @debug_str_hash, align 8, !tbaa !6
  tail call void @htab_clear_slot(ptr noundef %12, ptr noundef nonnull %0) #31
  br label %13

13:                                               ; preds = %11, %7
  ret i32 1
}

declare void @htab_empty(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @prune_unused_types_prune(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !235
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 20987, ptr noundef nonnull @.str.5) #31
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !157
  %9 = icmp eq ptr %8, null
  br i1 %9, label %44, label %10

10:                                               ; preds = %6, %40
  %11 = phi ptr [ %41, %40 ], [ %8, %6 ]
  %12 = phi i64 [ %42, %40 ], [ 0, %6 ]
  %13 = load i32, ptr %11, align 8, !tbaa !159
  %14 = zext i32 %13 to i64
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %44

16:                                               ; preds = %10
  %17 = getelementptr %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1
  %18 = load i32, ptr %17, align 8, !tbaa !163
  %19 = icmp eq i32 %18, 14
  br i1 %19, label %20, label %40

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %12, i32 1, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.indirect_string_node, ptr %22, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !267
  %25 = add i32 %24, 1
  store i32 %25, ptr %23, align 8, !tbaa !267
  %26 = load i32, ptr @flag_merge_debug_strings, align 4, !tbaa !21
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i32 2, i32 1
  %29 = icmp eq i32 %25, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %20
  %31 = load ptr, ptr @debug_str_hash, align 8, !tbaa !6
  %32 = load ptr, ptr %22, align 8, !tbaa !186
  %33 = tail call i32 @htab_hash_string(ptr noundef %32) #31
  %34 = tail call ptr @htab_find_slot_with_hash(ptr noundef %31, ptr noundef %32, i32 noundef %33, i32 noundef 1) #31
  %35 = load ptr, ptr %34, align 8, !tbaa !6
  %36 = icmp eq ptr %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %30
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 20974, ptr noundef nonnull @.str.5) #31
  br label %38

38:                                               ; preds = %37, %30
  store ptr %22, ptr %34, align 8, !tbaa !6
  %39 = load ptr, ptr %7, align 8, !tbaa !157
  br label %40

40:                                               ; preds = %38, %20, %16
  %41 = phi ptr [ %11, %20 ], [ %39, %38 ], [ %11, %16 ]
  %42 = add nuw nsw i64 %12, 1
  %43 = icmp eq ptr %41, null
  br i1 %43, label %44, label %10, !llvm.loop !415

44:                                               ; preds = %10, %40, %6
  %45 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %46 = load ptr, ptr %45, align 8, !tbaa !175
  %47 = icmp eq ptr %46, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %44, %75
  %49 = phi ptr [ %77, %75 ], [ %46, %44 ]
  %50 = phi ptr [ %76, %75 ], [ %46, %44 ]
  %51 = getelementptr inbounds %struct.die_struct, ptr %50, i64 0, i32 5
  %52 = load ptr, ptr %51, align 8, !tbaa !176
  %53 = getelementptr inbounds %struct.die_struct, ptr %52, i64 0, i32 9
  %54 = load i32, ptr %53, align 8, !tbaa !235
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %75

56:                                               ; preds = %48, %66
  %57 = phi ptr [ %68, %66 ], [ %52, %48 ]
  %58 = icmp eq ptr %57, %49
  br i1 %58, label %59, label %66

59:                                               ; preds = %56
  %60 = icmp eq ptr %50, %49
  br i1 %60, label %64, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.die_struct, ptr %49, i64 0, i32 5
  %63 = load ptr, ptr %62, align 8, !tbaa !176
  store ptr %63, ptr %51, align 8, !tbaa !176
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi ptr [ %50, %61 ], [ null, %59 ]
  store ptr %65, ptr %45, align 8, !tbaa !175
  br label %79

66:                                               ; preds = %56
  %67 = getelementptr inbounds %struct.die_struct, ptr %57, i64 0, i32 5
  %68 = load ptr, ptr %67, align 8, !tbaa !176
  %69 = getelementptr inbounds %struct.die_struct, ptr %68, i64 0, i32 9
  %70 = load i32, ptr %69, align 8, !tbaa !235
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %56, label %72, !llvm.loop !416

72:                                               ; preds = %66
  %73 = icmp eq ptr %68, %52
  br i1 %73, label %75, label %74

74:                                               ; preds = %72
  store ptr %68, ptr %51, align 8, !tbaa !176
  br label %75

75:                                               ; preds = %48, %74, %72
  %76 = phi ptr [ %68, %74 ], [ %68, %72 ], [ %52, %48 ]
  tail call fastcc void @prune_unused_types_prune(ptr noundef nonnull %76)
  %77 = load ptr, ptr %45, align 8, !tbaa !175
  %78 = icmp eq ptr %76, %77
  br i1 %78, label %79, label %48, !llvm.loop !417

79:                                               ; preds = %75, %64, %44
  ret void
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @prune_unmark_dies(ptr nocapture noundef %0) unnamed_addr #22 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !235
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i32 0, ptr %2, align 8, !tbaa !235
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !175
  %9 = icmp eq ptr %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi ptr [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !176
  tail call fastcc void @prune_unmark_dies(ptr noundef %13)
  %14 = load ptr, ptr %7, align 8, !tbaa !175
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %10, !llvm.loop !418

16:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @premark_types_used_by_global_vars_helper(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = load ptr, ptr %3, align 8, !tbaa !419
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.types_used_by_vars_entry, ptr %3, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !421
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6, %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 17759, ptr noundef nonnull @.str.5) #31
  %11 = load ptr, ptr %3, align 8, !tbaa !419
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi ptr [ %4, %6 ], [ %11, %10 ]
  %14 = getelementptr i8, ptr %13, i64 88
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %39, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.types_used_by_vars_entry, ptr %3, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !421
  %20 = tail call ptr @varpool_node(ptr noundef %19) #31
  %21 = getelementptr inbounds %struct.varpool_node, ptr %20, i64 0, i32 5
  %22 = load i8, ptr %21, align 4
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 10
  store i32 1, ptr %26, align 4, !tbaa !399
  %27 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 3
  %28 = load ptr, ptr %27, align 8, !tbaa !174
  %29 = icmp eq ptr %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %25, %35
  %31 = phi ptr [ %37, %35 ], [ %28, %25 ]
  %32 = getelementptr inbounds %struct.die_struct, ptr %31, i64 0, i32 10
  %33 = load i32, ptr %32, align 4, !tbaa !399
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  store i32 1, ptr %32, align 4, !tbaa !399
  %36 = getelementptr inbounds %struct.die_struct, ptr %31, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !174
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %30, !llvm.loop !422

39:                                               ; preds = %30, %35, %25, %17, %12
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @prune_unused_types_walk_local_classes(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !235
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %66, label %5

5:                                                ; preds = %1
  %6 = load i32, ptr %0, align 8, !tbaa !185
  switch i32 %6, label %66 [
    i32 19, label %56
    i32 23, label %56
    i32 2, label %56
    i32 46, label %7
  ]

7:                                                ; preds = %5, %39
  %8 = phi ptr [ %40, %39 ], [ %0, %5 ]
  %9 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %55, label %12

12:                                               ; preds = %7, %33
  %13 = phi ptr [ %34, %33 ], [ %10, %7 ]
  %14 = phi ptr [ %35, %33 ], [ %10, %7 ]
  %15 = phi i64 [ %37, %33 ], [ 0, %7 ]
  %16 = phi ptr [ %36, %33 ], [ null, %7 ]
  %17 = load i32, ptr %14, align 8, !tbaa !159
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %20, label %39

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15
  %22 = load i32, ptr %21, align 8, !tbaa !161
  switch i32 %22, label %33 [
    i32 60, label %42
    i32 71, label %23
    i32 49, label %23
  ]

23:                                               ; preds = %20, %20
  %24 = getelementptr i8, ptr %21, i64 8
  %25 = load i32, ptr %24, align 8, !tbaa !163
  %26 = icmp eq i32 %25, 10
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %28 = load ptr, ptr %9, align 8, !tbaa !157
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %13, %23 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %29, %20
  %34 = phi ptr [ %30, %29 ], [ %13, %20 ]
  %35 = phi ptr [ %30, %29 ], [ %14, %20 ]
  %36 = phi ptr [ %32, %29 ], [ %16, %20 ]
  %37 = add nuw nsw i64 %15, 1
  %38 = icmp eq ptr %35, null
  br i1 %38, label %39, label %12, !llvm.loop !164

39:                                               ; preds = %33, %12
  %40 = phi ptr [ %36, %33 ], [ %16, %12 ]
  %41 = icmp eq ptr %40, null
  br i1 %41, label %55, label %7

42:                                               ; preds = %20
  %43 = getelementptr i8, ptr %21, i64 8
  %44 = load i32, ptr %43, align 8, !tbaa !163
  %45 = icmp eq i32 %44, 9
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6900, ptr noundef nonnull @.str.5) #31
  br label %47

47:                                               ; preds = %42, %46
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %49 = load i8, ptr %48, align 8, !tbaa !17
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 6
  %53 = load ptr, ptr %52, align 8, !tbaa !295
  %54 = icmp eq ptr %53, null
  br i1 %54, label %66, label %55

55:                                               ; preds = %7, %39, %51, %47
  tail call fastcc void @prune_unused_types_mark(ptr noundef nonnull %0, i32 noundef 1)
  br label %66

56:                                               ; preds = %5, %5, %5
  %57 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %58 = load ptr, ptr %57, align 8, !tbaa !175
  %59 = icmp eq ptr %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %56, %60
  %61 = phi ptr [ %63, %60 ], [ %58, %56 ]
  %62 = getelementptr inbounds %struct.die_struct, ptr %61, i64 0, i32 5
  %63 = load ptr, ptr %62, align 8, !tbaa !176
  tail call fastcc void @prune_unused_types_walk_local_classes(ptr noundef %63)
  %64 = load ptr, ptr %57, align 8, !tbaa !175
  %65 = icmp eq ptr %63, %64
  br i1 %65, label %66, label %60, !llvm.loop !423

66:                                               ; preds = %60, %56, %5, %51, %55, %1
  ret void
}

declare void @htab_clear_slot(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @assign_symbol_names(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = alloca [256 x i8], align 16
  %3 = load i32, ptr %0, align 8, !tbaa !185
  switch i32 %3, label %4 [
    i32 1, label %22
    i32 2, label %22
    i32 56, label %22
    i32 4, label %22
    i32 15, label %22
    i32 16, label %22
    i32 18, label %22
    i32 19, label %22
    i32 21, label %22
    i32 23, label %22
    i32 31, label %22
    i32 32, label %22
    i32 33, label %22
    i32 36, label %22
    i32 38, label %22
    i32 41, label %22
    i32 45, label %22
    i32 53, label %22
    i32 22, label %22
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !157
  %7 = icmp eq ptr %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = load i32, ptr %6, align 8, !tbaa !159
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %8
  %12 = zext i32 %9 to i64
  br label %16

13:                                               ; preds = %16
  %14 = add nuw nsw i64 %17, 1
  %15 = icmp eq i64 %14, %12
  br i1 %15, label %21, label %16

16:                                               ; preds = %13, %11
  %17 = phi i64 [ 0, %11 ], [ %14, %13 ]
  %18 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %17
  %19 = load i32, ptr %18, align 8, !tbaa !161
  %20 = icmp eq i32 %19, 60
  br i1 %20, label %22, label %13

21:                                               ; preds = %13, %8, %4
  switch i32 %3, label %41 [
    i32 57, label %22
    i32 30, label %22
  ]

22:                                               ; preds = %16, %21, %21, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %23 = load ptr, ptr @comdat_symbol_id, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %23)
  %27 = add i64 %26, 64
  %28 = alloca i8, i64 %27, align 16
  %29 = load i32, ptr @comdat_symbol_number, align 4, !tbaa !21
  %30 = add i32 %29, 1
  store i32 %30, ptr @comdat_symbol_number, align 4, !tbaa !21
  %31 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %28, ptr noundef nonnull dereferenceable(1) @.str.320, ptr noundef nonnull @.str.321, ptr noundef nonnull %23, i32 noundef %29)
  %32 = call ptr @xstrdup(ptr noundef nonnull %28) #31
  br label %38

33:                                               ; preds = %22
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %2) #31
  %34 = load i32, ptr @label_num, align 4, !tbaa !21
  %35 = add nsw i32 %34, 1
  store i32 %35, ptr @label_num, align 4, !tbaa !21
  %36 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.322, i32 noundef %34)
  %37 = call ptr @xstrdup(ptr noundef nonnull %2) #31
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %2) #31
  br label %38

38:                                               ; preds = %25, %33
  %39 = phi ptr [ %37, %33 ], [ %32, %25 ]
  %40 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 1
  store ptr %39, ptr %40, align 8, !tbaa !17
  br label %41

41:                                               ; preds = %38, %21
  %42 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %43 = load ptr, ptr %42, align 8, !tbaa !175
  %44 = icmp eq ptr %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %41, %45
  %46 = phi ptr [ %48, %45 ], [ %43, %41 ]
  %47 = getelementptr inbounds %struct.die_struct, ptr %46, i64 0, i32 5
  %48 = load ptr, ptr %47, align 8, !tbaa !176
  call fastcc void @assign_symbol_names(ptr noundef %48)
  %49 = load ptr, ptr %42, align 8, !tbaa !175
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %51, label %45, !llvm.loop !424

51:                                               ; preds = %45, %41
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @htab_cu_hash(ptr nocapture noundef readonly %0) #10 {
  %2 = load ptr, ptr %0, align 8, !tbaa !191
  %3 = getelementptr inbounds %struct.die_struct, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = tail call i32 @htab_hash_string(ptr noundef %4) #31
  ret i32 %5
}

; Function Attrs: mustprogress nofree nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @htab_cu_eq(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #16 {
  %3 = load ptr, ptr %0, align 8, !tbaa !191
  %4 = getelementptr inbounds %struct.die_struct, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) %7)
  %9 = icmp eq i32 %8, 0
  %10 = zext i1 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @htab_cu_del(ptr noundef %0) #10 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1, %3
  %4 = phi ptr [ %6, %3 ], [ %0, %1 ]
  %5 = getelementptr inbounds %struct.cu_hash_table_entry, ptr %4, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !194
  tail call void @free(ptr noundef nonnull %4)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %3, !llvm.loop !425

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @compute_section_prefix(ptr noundef %0) unnamed_addr #10 {
  %2 = alloca i32, align 4
  %3 = alloca [16 x i8], align 16
  %4 = alloca %struct.md5_ctx, align 4
  br label %5

5:                                                ; preds = %39, %1
  %6 = phi ptr [ %0, %1 ], [ %40, %39 ]
  %7 = icmp eq ptr %6, null
  br i1 %7, label %54, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %54, label %12

12:                                               ; preds = %8, %33
  %13 = phi ptr [ %34, %33 ], [ %10, %8 ]
  %14 = phi ptr [ %35, %33 ], [ %10, %8 ]
  %15 = phi i64 [ %37, %33 ], [ 0, %8 ]
  %16 = phi ptr [ %36, %33 ], [ null, %8 ]
  %17 = load i32, ptr %14, align 8, !tbaa !159
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %20, label %39

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15
  %22 = load i32, ptr %21, align 8, !tbaa !161
  switch i32 %22, label %33 [
    i32 3, label %42
    i32 71, label %23
    i32 49, label %23
  ]

23:                                               ; preds = %20, %20
  %24 = getelementptr i8, ptr %21, i64 8
  %25 = load i32, ptr %24, align 8, !tbaa !163
  %26 = icmp eq i32 %25, 10
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %28 = load ptr, ptr %9, align 8, !tbaa !157
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %13, %23 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %29, %20
  %34 = phi ptr [ %30, %29 ], [ %13, %20 ]
  %35 = phi ptr [ %30, %29 ], [ %14, %20 ]
  %36 = phi ptr [ %32, %29 ], [ %16, %20 ]
  %37 = add nuw nsw i64 %15, 1
  %38 = icmp eq ptr %35, null
  br i1 %38, label %39, label %12, !llvm.loop !164

39:                                               ; preds = %33, %12
  %40 = phi ptr [ %36, %33 ], [ %16, %12 ]
  %41 = icmp eq ptr %40, null
  br i1 %41, label %54, label %5

42:                                               ; preds = %20
  %43 = getelementptr i8, ptr %21, i64 8
  %44 = load i32, ptr %43, align 8, !tbaa !163
  %45 = icmp eq i32 %44, 14
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  br label %47

47:                                               ; preds = %42, %46
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = load ptr, ptr %49, align 8, !tbaa !186
  %51 = icmp eq ptr %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = tail call ptr @lbasename(ptr noundef nonnull %50) #31
  br label %54

54:                                               ; preds = %8, %39, %5, %47, %52
  %55 = phi ptr [ %53, %52 ], [ @.str.323, %47 ], [ @.str.323, %5 ], [ @.str.323, %39 ], [ @.str.323, %8 ]
  %56 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %55)
  %57 = add i64 %56, 64
  %58 = alloca i8, i64 %57, align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 156, ptr nonnull %4) #31
  call void @md5_init_ctx(ptr noundef nonnull %4) #31
  store i32 0, ptr %2, align 4, !tbaa !21
  call fastcc void @die_checksum(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %2)
  call fastcc void @unmark_all_dies(ptr noundef %0)
  %59 = call ptr @md5_finish_ctx(ptr noundef nonnull %4, ptr noundef nonnull %3) #31
  %60 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %58, ptr noundef nonnull dereferenceable(1) @.str.324, ptr noundef %55)
  call void @clean_symbol_name(ptr noundef nonnull %58) #31
  %61 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %58)
  %62 = getelementptr inbounds i8, ptr %58, i64 %61
  %63 = load i8, ptr %3, align 16, !tbaa !17
  %64 = zext i8 %63 to i32
  %65 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %62, ptr noundef nonnull dereferenceable(1) @.str.325, i32 noundef %64)
  %66 = getelementptr inbounds i8, ptr %62, i64 2
  %67 = getelementptr inbounds [16 x i8], ptr %3, i64 0, i64 1
  %68 = load i8, ptr %67, align 1, !tbaa !17
  %69 = zext i8 %68 to i32
  %70 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %66, ptr noundef nonnull dereferenceable(1) @.str.325, i32 noundef %69)
  %71 = getelementptr inbounds i8, ptr %62, i64 4
  %72 = getelementptr inbounds [16 x i8], ptr %3, i64 0, i64 2
  %73 = load i8, ptr %72, align 2, !tbaa !17
  %74 = zext i8 %73 to i32
  %75 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %71, ptr noundef nonnull dereferenceable(1) @.str.325, i32 noundef %74)
  %76 = getelementptr inbounds i8, ptr %62, i64 6
  %77 = getelementptr inbounds [16 x i8], ptr %3, i64 0, i64 3
  %78 = load i8, ptr %77, align 1, !tbaa !17
  %79 = zext i8 %78 to i32
  %80 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %76, ptr noundef nonnull dereferenceable(1) @.str.325, i32 noundef %79)
  %81 = call ptr @xstrdup(ptr noundef nonnull %58) #31
  %82 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 1
  store ptr %81, ptr %82, align 8, !tbaa !17
  store ptr %81, ptr @comdat_symbol_id, align 8, !tbaa !6
  store i32 0, ptr @comdat_symbol_number, align 4, !tbaa !21
  call void @llvm.lifetime.end.p0(i64 156, ptr nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #31
  ret void
}

declare ptr @lbasename(ptr noundef) local_unnamed_addr #3

declare void @md5_init_ctx(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @die_checksum(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #10 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %6 = load i32, ptr %5, align 8, !tbaa !235
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @md5_process_bytes(ptr noundef nonnull %5, i64 noundef 4, ptr noundef %1) #31
  br label %94

9:                                                ; preds = %3
  %10 = load i32, ptr %2, align 4, !tbaa !21
  %11 = add nsw i32 %10, 1
  store i32 %11, ptr %2, align 4, !tbaa !21
  store i32 %11, ptr %5, align 8, !tbaa !235
  tail call void @md5_process_bytes(ptr noundef nonnull %0, i64 noundef 4, ptr noundef %1) #31
  %12 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !157
  %14 = icmp eq ptr %13, null
  br i1 %14, label %84, label %15

15:                                               ; preds = %9, %80
  %16 = phi ptr [ %82, %80 ], [ %13, %9 ]
  %17 = phi i32 [ %81, %80 ], [ 0, %9 ]
  %18 = load i32, ptr %16, align 8, !tbaa !159
  %19 = icmp ugt i32 %18, %17
  br i1 %19, label %20, label %84

20:                                               ; preds = %15
  %21 = zext i32 %17 to i64
  %22 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21
  call void @md5_process_bytes(ptr noundef nonnull %22, i64 noundef 4, ptr noundef %1) #31
  %23 = load i32, ptr %22, align 8, !tbaa !161
  %24 = icmp eq i32 %23, 37
  br i1 %24, label %80, label %25

25:                                               ; preds = %20
  %26 = getelementptr i8, ptr %22, i64 8
  %27 = load i32, ptr %26, align 8, !tbaa !163
  switch i32 %27, label %80 [
    i32 5, label %28
    i32 6, label %30
    i32 7, label %32
    i32 8, label %34
    i32 9, label %36
    i32 14, label %38
    i32 0, label %43
    i32 1, label %54
    i32 2, label %56
    i32 10, label %70
    i32 17, label %78
    i32 16, label %73
  ]

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %29, i64 noundef 8, ptr noundef %1) #31
  br label %80

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %31, i64 noundef 8, ptr noundef %1) #31
  br label %80

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %33, i64 noundef 16, ptr noundef %1) #31
  br label %80

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %35, i64 noundef 16, ptr noundef %1) #31
  br label %80

36:                                               ; preds = %25
  %37 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %37, i64 noundef 1, ptr noundef %1) #31
  br label %80

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = load ptr, ptr %40, align 8, !tbaa !186
  %42 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %41)
  call void @md5_process_bytes(ptr noundef %41, i64 noundef %42, ptr noundef %1) #31
  br label %80

43:                                               ; preds = %25
  %44 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = load i32, ptr %45, align 8
  %47 = and i32 %46, 65535
  %48 = icmp eq i32 %47, 45
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 8064, ptr noundef nonnull @.str.5) #31
  br label %50

50:                                               ; preds = %49, %43
  %51 = getelementptr inbounds %struct.rtx_def, ptr %45, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %52)
  call void @md5_process_bytes(ptr noundef %52, i64 noundef %53, ptr noundef %1) #31
  br label %80

54:                                               ; preds = %25
  %55 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %55, i64 noundef 8, ptr noundef %1) #31
  br label %80

56:                                               ; preds = %25
  %57 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = icmp eq ptr %58, null
  br i1 %59, label %80, label %60

60:                                               ; preds = %56, %60
  %61 = phi ptr [ %68, %60 ], [ %58, %56 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #31
  %62 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %61, i64 0, i32 1
  %63 = load i16, ptr %62, align 8
  %64 = and i16 %63, 511
  %65 = zext i16 %64 to i32
  store i32 %65, ptr %4, align 4, !tbaa !21
  call void @md5_process_bytes(ptr noundef nonnull %4, i64 noundef 4, ptr noundef %1) #31
  %66 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %61, i64 0, i32 3
  call void @md5_process_bytes(ptr noundef nonnull %66, i64 noundef 24, ptr noundef %1) #31
  %67 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %61, i64 0, i32 4
  call void @md5_process_bytes(ptr noundef nonnull %67, i64 noundef 24, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #31
  %68 = load ptr, ptr %61, align 8, !tbaa !17
  %69 = icmp eq ptr %68, null
  br i1 %69, label %80, label %60, !llvm.loop !426

70:                                               ; preds = %25
  %71 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  call fastcc void @die_checksum(ptr noundef %72, ptr noundef %1, ptr noundef nonnull %2)
  br label %80

73:                                               ; preds = %25
  %74 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = load ptr, ptr %75, align 8, !tbaa !124
  %77 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %76)
  call void @md5_process_bytes(ptr noundef %76, i64 noundef %77, ptr noundef %1) #31
  br label %80

78:                                               ; preds = %25
  %79 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %16, i64 0, i32 2, i64 %21, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %79, i64 noundef 8, ptr noundef %1) #31
  br label %80

80:                                               ; preds = %60, %56, %20, %25, %28, %30, %32, %34, %36, %38, %50, %54, %70, %73, %78
  %81 = add i32 %17, 1
  %82 = load ptr, ptr %12, align 8, !tbaa !157
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %15, !llvm.loop !427

84:                                               ; preds = %80, %15, %9
  %85 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %86 = load ptr, ptr %85, align 8, !tbaa !175
  %87 = icmp eq ptr %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %84, %88
  %89 = phi ptr [ %91, %88 ], [ %86, %84 ]
  %90 = getelementptr inbounds %struct.die_struct, ptr %89, i64 0, i32 5
  %91 = load ptr, ptr %90, align 8, !tbaa !176
  call fastcc void @die_checksum(ptr noundef %91, ptr noundef %1, ptr noundef nonnull %2)
  %92 = load ptr, ptr %85, align 8, !tbaa !175
  %93 = icmp eq ptr %91, %92
  br i1 %93, label %94, label %88, !llvm.loop !428

94:                                               ; preds = %88, %84, %8
  ret void
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @unmark_all_dies(ptr nocapture noundef %0) unnamed_addr #22 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !235
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  store i32 0, ptr %2, align 8, !tbaa !235
  %6 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !175
  %8 = icmp eq ptr %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %9
  %10 = phi ptr [ %12, %9 ], [ %7, %5 ]
  %11 = getelementptr inbounds %struct.die_struct, ptr %10, i64 0, i32 5
  %12 = load ptr, ptr %11, align 8, !tbaa !176
  tail call fastcc void @unmark_all_dies(ptr noundef %12)
  %13 = load ptr, ptr %6, align 8, !tbaa !175
  %14 = icmp eq ptr %12, %13
  br i1 %14, label %15, label %9, !llvm.loop !429

15:                                               ; preds = %9, %5
  %16 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !157
  %18 = icmp eq ptr %17, null
  br i1 %18, label %37, label %19

19:                                               ; preds = %15, %33
  %20 = phi ptr [ %34, %33 ], [ %17, %15 ]
  %21 = phi i64 [ %35, %33 ], [ 0, %15 ]
  %22 = load i32, ptr %20, align 8, !tbaa !159
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %19
  %26 = getelementptr %struct.VEC_dw_attr_node_base, ptr %20, i64 0, i32 2, i64 %21, i32 1
  %27 = load i32, ptr %26, align 8, !tbaa !163
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %20, i64 0, i32 2, i64 %21, i32 1, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  tail call fastcc void @unmark_all_dies(ptr noundef %31)
  %32 = load ptr, ptr %16, align 8, !tbaa !157
  br label %33

33:                                               ; preds = %25, %29
  %34 = phi ptr [ %20, %25 ], [ %32, %29 ]
  %35 = add nuw i64 %21, 1
  %36 = icmp eq ptr %34, null
  br i1 %36, label %37, label %19, !llvm.loop !430

37:                                               ; preds = %19, %33, %15, %1
  ret void
}

declare ptr @md5_finish_ctx(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @clean_symbol_name(ptr noundef) local_unnamed_addr #3

declare void @md5_process_bytes(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @xcalloc(i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @same_die_p(ptr nocapture noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %5 = load i32, ptr %4, align 8, !tbaa !235
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 9
  %9 = load i32, ptr %8, align 8, !tbaa !235
  %10 = icmp eq i32 %5, %9
  %11 = zext i1 %10 to i32
  br label %86

12:                                               ; preds = %3
  %13 = load i32, ptr %2, align 4, !tbaa !21
  %14 = add nsw i32 %13, 1
  store i32 %14, ptr %2, align 4, !tbaa !21
  %15 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 9
  store i32 %14, ptr %15, align 8, !tbaa !235
  store i32 %14, ptr %4, align 8, !tbaa !235
  %16 = load i32, ptr %0, align 8, !tbaa !185
  %17 = load i32, ptr %1, align 8, !tbaa !185
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %19, label %86

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !157
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = load i32, ptr %21, align 8, !tbaa !159
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i32 [ %24, %23 ], [ 0, %19 ]
  %27 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !157
  %29 = icmp eq ptr %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = load i32, ptr %28, align 8, !tbaa !159
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i32 [ %31, %30 ], [ 0, %25 ]
  %34 = icmp eq i32 %26, %33
  br i1 %34, label %35, label %86

35:                                               ; preds = %32
  br i1 %22, label %62, label %36

36:                                               ; preds = %35, %58
  %37 = phi ptr [ %59, %58 ], [ %21, %35 ]
  %38 = phi i64 [ %60, %58 ], [ 0, %35 ]
  %39 = load i32, ptr %37, align 8, !tbaa !159
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %42, label %62

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %37, i64 0, i32 2, i64 %38
  %44 = load ptr, ptr %27, align 8, !tbaa !157
  %45 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %44, i64 0, i32 2, i64 %38
  %46 = load i32, ptr %43, align 8, !tbaa !161
  %47 = load i32, ptr %45, align 8, !tbaa !161
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %86

49:                                               ; preds = %42
  %50 = icmp eq i32 %46, 37
  br i1 %50, label %58, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %37, i64 0, i32 2, i64 %38, i32 1
  %53 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %44, i64 0, i32 2, i64 %38, i32 1
  %54 = tail call fastcc i32 @same_dw_val_p(ptr noundef nonnull %52, ptr noundef nonnull %53, ptr noundef nonnull %2), !range !37
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %86, label %56

56:                                               ; preds = %51
  %57 = load ptr, ptr %20, align 8, !tbaa !157
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi ptr [ %57, %56 ], [ %37, %49 ]
  %60 = add nuw i64 %38, 1
  %61 = icmp eq ptr %59, null
  br i1 %61, label %62, label %36, !llvm.loop !431

62:                                               ; preds = %58, %36, %35
  %63 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %64 = load ptr, ptr %63, align 8, !tbaa !175
  %65 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %66 = load ptr, ptr %65, align 8, !tbaa !175
  %67 = icmp eq ptr %64, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = icmp eq ptr %66, null
  br i1 %69, label %85, label %86

70:                                               ; preds = %62, %75
  %71 = phi ptr [ %77, %75 ], [ %64, %62 ]
  %72 = phi ptr [ %79, %75 ], [ %66, %62 ]
  %73 = tail call fastcc i32 @same_die_p(ptr noundef %71, ptr noundef %72, ptr noundef nonnull %2), !range !37
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.die_struct, ptr %71, i64 0, i32 5
  %77 = load ptr, ptr %76, align 8, !tbaa !176
  %78 = getelementptr inbounds %struct.die_struct, ptr %72, i64 0, i32 5
  %79 = load ptr, ptr %78, align 8, !tbaa !176
  %80 = load ptr, ptr %63, align 8, !tbaa !175
  %81 = icmp eq ptr %77, %80
  br i1 %81, label %82, label %70

82:                                               ; preds = %75
  %83 = load ptr, ptr %65, align 8, !tbaa !175
  %84 = icmp eq ptr %79, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %82, %68
  br label %86

86:                                               ; preds = %42, %51, %70, %82, %68, %32, %12, %85, %7
  %87 = phi i32 [ %11, %7 ], [ 1, %85 ], [ 0, %12 ], [ 0, %32 ], [ 0, %68 ], [ 0, %82 ], [ 0, %70 ], [ 0, %51 ], [ 0, %42 ]
  ret i32 %87
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @same_dw_val_p(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef %2) unnamed_addr #10 {
  %4 = load i32, ptr %0, align 8, !tbaa !62
  %5 = load i32, ptr %1, align 8, !tbaa !62
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %7, label %147

7:                                                ; preds = %3
  switch i32 %4, label %147 [
    i32 5, label %8
    i32 6, label %15
    i32 7, label %22
    i32 8, label %35
    i32 9, label %57
    i32 14, label %64
    i32 0, label %74
    i32 1, label %88
    i32 2, label %95
    i32 10, label %128
    i32 17, label %141
    i32 16, label %134
  ]

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !17
  %13 = icmp eq i64 %10, %12
  %14 = zext i1 %13 to i32
  br label %147

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !17
  %20 = icmp eq i64 %17, %19
  %21 = zext i1 %20 to i32
  br label %147

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1, i32 0, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !17
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %28, label %147

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %30 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !17
  %32 = load i64, ptr %29, align 8, !tbaa !17
  %33 = icmp eq i64 %31, %32
  %34 = zext i1 %33 to i32
  br label %147

35:                                               ; preds = %7
  %36 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %37 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1, i32 0, i32 1
  %38 = load i32, ptr %37, align 8, !tbaa !17
  %39 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %40 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1, i32 0, i32 1
  %41 = load i32, ptr %40, align 8, !tbaa !17
  %42 = icmp eq i32 %38, %41
  br i1 %42, label %43, label %147

43:                                               ; preds = %35
  %44 = getelementptr inbounds i8, ptr %0, i64 20
  %45 = load i32, ptr %44, align 4, !tbaa !17
  %46 = getelementptr inbounds i8, ptr %1, i64 20
  %47 = load i32, ptr %46, align 4, !tbaa !17
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %147

49:                                               ; preds = %43
  %50 = load ptr, ptr %36, align 8, !tbaa !17
  %51 = load ptr, ptr %39, align 8, !tbaa !17
  %52 = mul i32 %45, %38
  %53 = zext i32 %52 to i64
  %54 = tail call i32 @bcmp(ptr %50, ptr %51, i64 %53)
  %55 = icmp eq i32 %54, 0
  %56 = zext i1 %55 to i32
  br label %147

57:                                               ; preds = %7
  %58 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %59 = load i8, ptr %58, align 8, !tbaa !17
  %60 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %61 = load i8, ptr %60, align 8, !tbaa !17
  %62 = icmp eq i8 %59, %61
  %63 = zext i1 %62 to i32
  br label %147

64:                                               ; preds = %7
  %65 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = load ptr, ptr %66, align 8, !tbaa !186
  %68 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = load ptr, ptr %69, align 8, !tbaa !186
  %71 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %67, ptr noundef nonnull dereferenceable(1) %70)
  %72 = icmp eq i32 %71, 0
  %73 = zext i1 %72 to i32
  br label %147

74:                                               ; preds = %7
  %75 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = load i32, ptr %76, align 8
  %80 = load i32, ptr %78, align 8
  %81 = xor i32 %80, %79
  %82 = and i32 %81, 65535
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %147

84:                                               ; preds = %74
  %85 = tail call i32 @rtx_equal_p(ptr noundef nonnull %76, ptr noundef nonnull %78) #31
  %86 = icmp eq i32 %85, 0
  %87 = zext i1 %86 to i32
  br label %147

88:                                               ; preds = %7
  %89 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %90 = load i64, ptr %89, align 8, !tbaa !17
  %91 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %92 = load i64, ptr %91, align 8, !tbaa !17
  %93 = icmp eq i64 %90, %92
  %94 = zext i1 %93 to i32
  br label %147

95:                                               ; preds = %7
  %96 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %97 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  br label %98

98:                                               ; preds = %119, %95
  %99 = phi ptr [ %97, %95 ], [ %102, %119 ]
  %100 = phi ptr [ %96, %95 ], [ %101, %119 ]
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = load ptr, ptr %99, align 8, !tbaa !17
  %103 = icmp ne ptr %101, null
  %104 = icmp ne ptr %102, null
  %105 = select i1 %103, i1 %104, i1 false
  br i1 %105, label %106, label %124

106:                                              ; preds = %98
  %107 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 1
  %108 = load i16, ptr %107, align 8
  %109 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %102, i64 0, i32 1
  %110 = load i16, ptr %109, align 8
  %111 = xor i16 %110, %108
  %112 = and i16 %111, 255
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %114, label %147

114:                                              ; preds = %106
  %115 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 3
  %116 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %102, i64 0, i32 3
  %117 = tail call fastcc i32 @same_dw_val_p(ptr noundef nonnull %115, ptr noundef nonnull %116, ptr noundef %2), !range !37
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %147, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %101, i64 0, i32 4
  %121 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %102, i64 0, i32 4
  %122 = tail call fastcc i32 @same_dw_val_p(ptr noundef nonnull %120, ptr noundef nonnull %121, ptr noundef %2), !range !37
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %147, label %98, !llvm.loop !432

124:                                              ; preds = %98
  %125 = select i1 %103, i1 true, i1 %104
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i32
  br label %147

128:                                              ; preds = %7
  %129 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %130 = load ptr, ptr %129, align 8, !tbaa !17
  %131 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %132 = load ptr, ptr %131, align 8, !tbaa !17
  %133 = tail call fastcc i32 @same_die_p(ptr noundef %130, ptr noundef %132, ptr noundef %2), !range !37
  br label %147

134:                                              ; preds = %7
  %135 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !17
  %137 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %138 = load ptr, ptr %137, align 8, !tbaa !17
  %139 = icmp eq ptr %136, %138
  %140 = zext i1 %139 to i32
  br label %147

141:                                              ; preds = %7
  %142 = getelementptr inbounds %struct.dw_val_struct, ptr %0, i64 0, i32 1
  %143 = getelementptr inbounds %struct.dw_val_struct, ptr %1, i64 0, i32 1
  %144 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(8) %142, ptr noundef nonnull dereferenceable(8) %143, i64 8)
  %145 = icmp eq i32 %144, 0
  %146 = zext i1 %145 to i32
  br label %147

147:                                              ; preds = %106, %114, %119, %7, %74, %49, %35, %43, %22, %28, %3, %141, %134, %128, %124, %88, %84, %64, %57, %15, %8
  %148 = phi i32 [ %146, %141 ], [ %140, %134 ], [ %133, %128 ], [ %127, %124 ], [ %94, %88 ], [ %87, %84 ], [ %73, %64 ], [ %63, %57 ], [ %21, %15 ], [ %14, %8 ], [ 0, %3 ], [ 0, %22 ], [ %34, %28 ], [ 0, %43 ], [ 0, %35 ], [ %56, %49 ], [ 0, %74 ], [ 1, %7 ], [ 0, %119 ], [ 0, %114 ], [ 0, %106 ]
  ret i32 %148
}

declare i32 @rtx_equal_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @checksum_die_context(ptr noundef readonly %0, ptr noundef %1) unnamed_addr #10 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = load i32, ptr %0, align 8, !tbaa !185
  switch i32 %5, label %121 [
    i32 57, label %6
    i32 19, label %6
    i32 2, label %6
  ]

6:                                                ; preds = %2, %2, %2
  br label %7

7:                                                ; preds = %6, %39
  %8 = phi ptr [ %40, %39 ], [ %0, %6 ]
  %9 = getelementptr inbounds %struct.die_struct, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !157
  %11 = icmp eq ptr %10, null
  br i1 %11, label %51, label %12

12:                                               ; preds = %7, %33
  %13 = phi ptr [ %34, %33 ], [ %10, %7 ]
  %14 = phi ptr [ %35, %33 ], [ %10, %7 ]
  %15 = phi i64 [ %37, %33 ], [ 0, %7 ]
  %16 = phi ptr [ %36, %33 ], [ null, %7 ]
  %17 = load i32, ptr %14, align 8, !tbaa !159
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %15, %18
  br i1 %19, label %20, label %39

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15
  %22 = load i32, ptr %21, align 8, !tbaa !161
  switch i32 %22, label %33 [
    i32 3, label %42
    i32 71, label %23
    i32 49, label %23
  ]

23:                                               ; preds = %20, %20
  %24 = getelementptr i8, ptr %21, i64 8
  %25 = load i32, ptr %24, align 8, !tbaa !163
  %26 = icmp eq i32 %25, 10
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %28 = load ptr, ptr %9, align 8, !tbaa !157
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %13, %23 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %29, %20
  %34 = phi ptr [ %30, %29 ], [ %13, %20 ]
  %35 = phi ptr [ %30, %29 ], [ %14, %20 ]
  %36 = phi ptr [ %32, %29 ], [ %16, %20 ]
  %37 = add nuw nsw i64 %15, 1
  %38 = icmp eq ptr %35, null
  br i1 %38, label %39, label %12, !llvm.loop !164

39:                                               ; preds = %33, %12
  %40 = phi ptr [ %36, %33 ], [ %16, %12 ]
  %41 = icmp eq ptr %40, null
  br i1 %41, label %51, label %7

42:                                               ; preds = %20
  %43 = getelementptr i8, ptr %21, i64 8
  %44 = load i32, ptr %43, align 8, !tbaa !163
  %45 = icmp eq i32 %44, 14
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  br label %47

47:                                               ; preds = %46, %42
  %48 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %14, i64 0, i32 2, i64 %15, i32 1, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = load ptr, ptr %49, align 8, !tbaa !186
  br label %51

51:                                               ; preds = %7, %39, %47
  %52 = phi ptr [ %50, %47 ], [ null, %39 ], [ null, %7 ]
  br label %53

53:                                               ; preds = %87, %51
  %54 = phi ptr [ %0, %51 ], [ %88, %87 ]
  %55 = icmp eq ptr %54, null
  br i1 %55, label %98, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.die_struct, ptr %54, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !157
  %59 = icmp eq ptr %58, null
  br i1 %59, label %98, label %60

60:                                               ; preds = %56, %81
  %61 = phi ptr [ %82, %81 ], [ %58, %56 ]
  %62 = phi ptr [ %83, %81 ], [ %58, %56 ]
  %63 = phi i64 [ %85, %81 ], [ 0, %56 ]
  %64 = phi ptr [ %84, %81 ], [ null, %56 ]
  %65 = load i32, ptr %62, align 8, !tbaa !159
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %63, %66
  br i1 %67, label %68, label %87

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %62, i64 0, i32 2, i64 %63
  %70 = load i32, ptr %69, align 8, !tbaa !161
  switch i32 %70, label %81 [
    i32 71, label %90
    i32 49, label %71
  ]

71:                                               ; preds = %68
  %72 = getelementptr i8, ptr %69, i64 8
  %73 = load i32, ptr %72, align 8, !tbaa !163
  %74 = icmp eq i32 %73, 10
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %76 = load ptr, ptr %57, align 8, !tbaa !157
  br label %77

77:                                               ; preds = %75, %71
  %78 = phi ptr [ %61, %71 ], [ %76, %75 ]
  %79 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %62, i64 0, i32 2, i64 %63, i32 1, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  br label %81

81:                                               ; preds = %68, %77
  %82 = phi ptr [ %78, %77 ], [ %61, %68 ]
  %83 = phi ptr [ %78, %77 ], [ %62, %68 ]
  %84 = phi ptr [ %80, %77 ], [ %64, %68 ]
  %85 = add nuw nsw i64 %63, 1
  %86 = icmp eq ptr %83, null
  br i1 %86, label %87, label %60, !llvm.loop !164

87:                                               ; preds = %81, %60
  %88 = phi ptr [ %84, %81 ], [ %64, %60 ]
  %89 = icmp eq ptr %88, null
  br i1 %89, label %98, label %53

90:                                               ; preds = %68
  %91 = getelementptr i8, ptr %69, i64 8
  %92 = load i32, ptr %91, align 8, !tbaa !163
  %93 = icmp eq i32 %92, 10
  br i1 %93, label %95, label %94

94:                                               ; preds = %90
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %95

95:                                               ; preds = %94, %90
  %96 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %62, i64 0, i32 2, i64 %63, i32 1, i32 1
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  br label %98

98:                                               ; preds = %53, %56, %87, %95
  %99 = phi ptr [ %97, %95 ], [ null, %87 ], [ null, %56 ], [ null, %53 ]
  %100 = icmp eq ptr %99, null
  %101 = select i1 %100, ptr %0, ptr %99
  %102 = getelementptr inbounds %struct.die_struct, ptr %101, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !174
  %104 = icmp eq ptr %103, null
  br i1 %104, label %106, label %105

105:                                              ; preds = %98
  tail call fastcc void @checksum_die_context(ptr noundef nonnull %103, ptr noundef %1)
  br label %106

106:                                              ; preds = %98, %105
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #31
  store i8 67, ptr %4, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %4, i64 noundef 1, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #31
  %107 = sext i32 %5 to i64
  br label %108

108:                                              ; preds = %108, %106
  %109 = phi i64 [ %107, %106 ], [ %112, %108 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #31
  %110 = trunc i64 %109 to i8
  %111 = and i8 %110, 127
  %112 = lshr i64 %109, 7
  %113 = icmp ult i64 %109, 128
  %114 = select i1 %113, i8 0, i8 -128
  %115 = or i8 %111, %114
  store i8 %115, ptr %3, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %3, i64 noundef 1, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #31
  br i1 %113, label %116, label %108

116:                                              ; preds = %108
  %117 = icmp eq ptr %52, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %116
  %119 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %52)
  %120 = add i64 %119, 1
  call void @md5_process_bytes(ptr noundef nonnull %52, i64 noundef %120, ptr noundef %1) #31
  br label %121

121:                                              ; preds = %116, %118, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @die_checksum_ordered(ptr noundef readonly %0, ptr noundef %1, ptr nocapture noundef %2) unnamed_addr #10 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca %struct.checksum_attributes, align 8
  call void @llvm.lifetime.start.p0(i64 376, ptr nonnull %9) #31
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #31
  store i8 68, ptr %8, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %8, i64 noundef 1, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #31
  %10 = load i32, ptr %0, align 8, !tbaa !185
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %12, %3
  %13 = phi i64 [ %11, %3 ], [ %16, %12 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #31
  %14 = trunc i64 %13 to i8
  %15 = and i8 %14, 127
  %16 = lshr i64 %13, 7
  %17 = icmp ult i64 %13, 128
  %18 = select i1 %17, i8 0, i8 -128
  %19 = or i8 %15, %18
  store i8 %19, ptr %7, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %7, i64 noundef 1, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #31
  br i1 %17, label %20, label %12

20:                                               ; preds = %12
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(376) %9, i8 0, i64 376, i1 false)
  br label %21

21:                                               ; preds = %55, %20
  %22 = phi ptr [ %0, %20 ], [ %56, %55 ]
  %23 = icmp eq ptr %22, null
  br i1 %23, label %68, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.die_struct, ptr %22, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !157
  %27 = icmp eq ptr %26, null
  br i1 %27, label %68, label %28

28:                                               ; preds = %24, %49
  %29 = phi ptr [ %50, %49 ], [ %26, %24 ]
  %30 = phi ptr [ %51, %49 ], [ %26, %24 ]
  %31 = phi i64 [ %53, %49 ], [ 0, %24 ]
  %32 = phi ptr [ %52, %49 ], [ null, %24 ]
  %33 = load i32, ptr %30, align 8, !tbaa !159
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %31, %34
  br i1 %35, label %36, label %55

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %31
  %38 = load i32, ptr %37, align 8, !tbaa !161
  switch i32 %38, label %49 [
    i32 71, label %58
    i32 49, label %39
  ]

39:                                               ; preds = %36
  %40 = getelementptr i8, ptr %37, i64 8
  %41 = load i32, ptr %40, align 8, !tbaa !163
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %44 = load ptr, ptr %25, align 8, !tbaa !157
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi ptr [ %29, %39 ], [ %44, %43 ]
  %47 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %31, i32 1, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  br label %49

49:                                               ; preds = %36, %45
  %50 = phi ptr [ %46, %45 ], [ %29, %36 ]
  %51 = phi ptr [ %46, %45 ], [ %30, %36 ]
  %52 = phi ptr [ %48, %45 ], [ %32, %36 ]
  %53 = add nuw nsw i64 %31, 1
  %54 = icmp eq ptr %51, null
  br i1 %54, label %55, label %28, !llvm.loop !164

55:                                               ; preds = %49, %28
  %56 = phi ptr [ %52, %49 ], [ %32, %28 ]
  %57 = icmp eq ptr %56, null
  br i1 %57, label %68, label %21

58:                                               ; preds = %36
  %59 = getelementptr i8, ptr %37, i64 8
  %60 = load i32, ptr %59, align 8, !tbaa !163
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %63

63:                                               ; preds = %58, %62
  %64 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %31, i32 1, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = icmp eq ptr %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  call fastcc void @collect_checksum_attributes(ptr noundef nonnull %9, ptr noundef nonnull %65)
  br label %68

68:                                               ; preds = %24, %55, %21, %67, %63
  call fastcc void @collect_checksum_attributes(ptr noundef nonnull %9, ptr noundef %0)
  %69 = load ptr, ptr %9, align 8, !tbaa !433
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %72, ptr noundef nonnull %69, ptr noundef %1, ptr noundef %2)
  br label %73

73:                                               ; preds = %71, %68
  %74 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 3
  %75 = load ptr, ptr %74, align 8, !tbaa !435
  %76 = icmp eq ptr %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %78, ptr noundef nonnull %75, ptr noundef %1, ptr noundef %2)
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 4
  %81 = load ptr, ptr %80, align 8, !tbaa !436
  %82 = icmp eq ptr %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %84, ptr noundef nonnull %81, ptr noundef %1, ptr noundef %2)
  br label %85

85:                                               ; preds = %83, %79
  %86 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 5
  %87 = load ptr, ptr %86, align 8, !tbaa !437
  %88 = icmp eq ptr %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %90, ptr noundef nonnull %87, ptr noundef %1, ptr noundef %2)
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 6
  %93 = load ptr, ptr %92, align 8, !tbaa !438
  %94 = icmp eq ptr %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %96, ptr noundef nonnull %93, ptr noundef %1, ptr noundef %2)
  br label %97

97:                                               ; preds = %95, %91
  %98 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 7
  %99 = load ptr, ptr %98, align 8, !tbaa !439
  %100 = icmp eq ptr %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %102, ptr noundef nonnull %99, ptr noundef %1, ptr noundef %2)
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 8
  %105 = load ptr, ptr %104, align 8, !tbaa !440
  %106 = icmp eq ptr %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  %108 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %108, ptr noundef nonnull %105, ptr noundef %1, ptr noundef %2)
  br label %109

109:                                              ; preds = %107, %103
  %110 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 9
  %111 = load ptr, ptr %110, align 8, !tbaa !441
  %112 = icmp eq ptr %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %114, ptr noundef nonnull %111, ptr noundef %1, ptr noundef %2)
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 10
  %117 = load ptr, ptr %116, align 8, !tbaa !442
  %118 = icmp eq ptr %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %120, ptr noundef nonnull %117, ptr noundef %1, ptr noundef %2)
  br label %121

121:                                              ; preds = %119, %115
  %122 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 11
  %123 = load ptr, ptr %122, align 8, !tbaa !443
  %124 = icmp eq ptr %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %126, ptr noundef nonnull %123, ptr noundef %1, ptr noundef %2)
  br label %127

127:                                              ; preds = %125, %121
  %128 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 12
  %129 = load ptr, ptr %128, align 8, !tbaa !444
  %130 = icmp eq ptr %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %132, ptr noundef nonnull %129, ptr noundef %1, ptr noundef %2)
  br label %133

133:                                              ; preds = %131, %127
  %134 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 13
  %135 = load ptr, ptr %134, align 8, !tbaa !445
  %136 = icmp eq ptr %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %138, ptr noundef nonnull %135, ptr noundef %1, ptr noundef %2)
  br label %139

139:                                              ; preds = %137, %133
  %140 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 14
  %141 = load ptr, ptr %140, align 8, !tbaa !446
  %142 = icmp eq ptr %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %144, ptr noundef nonnull %141, ptr noundef %1, ptr noundef %2)
  br label %145

145:                                              ; preds = %143, %139
  %146 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 15
  %147 = load ptr, ptr %146, align 8, !tbaa !447
  %148 = icmp eq ptr %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  %150 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %150, ptr noundef nonnull %147, ptr noundef %1, ptr noundef %2)
  br label %151

151:                                              ; preds = %149, %145
  %152 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 16
  %153 = load ptr, ptr %152, align 8, !tbaa !448
  %154 = icmp eq ptr %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %156, ptr noundef nonnull %153, ptr noundef %1, ptr noundef %2)
  br label %157

157:                                              ; preds = %155, %151
  %158 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 17
  %159 = load ptr, ptr %158, align 8, !tbaa !449
  %160 = icmp eq ptr %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %157
  %162 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %162, ptr noundef nonnull %159, ptr noundef %1, ptr noundef %2)
  br label %163

163:                                              ; preds = %161, %157
  %164 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 18
  %165 = load ptr, ptr %164, align 8, !tbaa !450
  %166 = icmp eq ptr %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %168, ptr noundef nonnull %165, ptr noundef %1, ptr noundef %2)
  br label %169

169:                                              ; preds = %167, %163
  %170 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 19
  %171 = load ptr, ptr %170, align 8, !tbaa !451
  %172 = icmp eq ptr %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %174, ptr noundef nonnull %171, ptr noundef %1, ptr noundef %2)
  br label %175

175:                                              ; preds = %173, %169
  %176 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 20
  %177 = load ptr, ptr %176, align 8, !tbaa !452
  %178 = icmp eq ptr %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %180, ptr noundef nonnull %177, ptr noundef %1, ptr noundef %2)
  br label %181

181:                                              ; preds = %179, %175
  %182 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 21
  %183 = load ptr, ptr %182, align 8, !tbaa !453
  %184 = icmp eq ptr %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %181
  %186 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %186, ptr noundef nonnull %183, ptr noundef %1, ptr noundef %2)
  br label %187

187:                                              ; preds = %185, %181
  %188 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 22
  %189 = load ptr, ptr %188, align 8, !tbaa !454
  %190 = icmp eq ptr %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %187
  %192 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %192, ptr noundef nonnull %189, ptr noundef %1, ptr noundef %2)
  br label %193

193:                                              ; preds = %191, %187
  %194 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 23
  %195 = load ptr, ptr %194, align 8, !tbaa !455
  %196 = icmp eq ptr %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %193
  %198 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %198, ptr noundef nonnull %195, ptr noundef %1, ptr noundef %2)
  br label %199

199:                                              ; preds = %197, %193
  %200 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 24
  %201 = load ptr, ptr %200, align 8, !tbaa !456
  %202 = icmp eq ptr %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %199
  %204 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %204, ptr noundef nonnull %201, ptr noundef %1, ptr noundef %2)
  br label %205

205:                                              ; preds = %203, %199
  %206 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 25
  %207 = load ptr, ptr %206, align 8, !tbaa !457
  %208 = icmp eq ptr %207, null
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %210, ptr noundef nonnull %207, ptr noundef %1, ptr noundef %2)
  br label %211

211:                                              ; preds = %209, %205
  %212 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 26
  %213 = load ptr, ptr %212, align 8, !tbaa !458
  %214 = icmp eq ptr %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %211
  %216 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %216, ptr noundef nonnull %213, ptr noundef %1, ptr noundef %2)
  br label %217

217:                                              ; preds = %215, %211
  %218 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 27
  %219 = load ptr, ptr %218, align 8, !tbaa !459
  %220 = icmp eq ptr %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %222, ptr noundef nonnull %219, ptr noundef %1, ptr noundef %2)
  br label %223

223:                                              ; preds = %221, %217
  %224 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 28
  %225 = load ptr, ptr %224, align 8, !tbaa !460
  %226 = icmp eq ptr %225, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %223
  %228 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %228, ptr noundef nonnull %225, ptr noundef %1, ptr noundef %2)
  br label %229

229:                                              ; preds = %227, %223
  %230 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 29
  %231 = load ptr, ptr %230, align 8, !tbaa !461
  %232 = icmp eq ptr %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %229
  %234 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %234, ptr noundef nonnull %231, ptr noundef %1, ptr noundef %2)
  br label %235

235:                                              ; preds = %233, %229
  %236 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 30
  %237 = load ptr, ptr %236, align 8, !tbaa !462
  %238 = icmp eq ptr %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %235
  %240 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %240, ptr noundef nonnull %237, ptr noundef %1, ptr noundef %2)
  br label %241

241:                                              ; preds = %239, %235
  %242 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 31
  %243 = load ptr, ptr %242, align 8, !tbaa !463
  %244 = icmp eq ptr %243, null
  br i1 %244, label %247, label %245

245:                                              ; preds = %241
  %246 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %246, ptr noundef nonnull %243, ptr noundef %1, ptr noundef %2)
  br label %247

247:                                              ; preds = %245, %241
  %248 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 32
  %249 = load ptr, ptr %248, align 8, !tbaa !464
  %250 = icmp eq ptr %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %252, ptr noundef nonnull %249, ptr noundef %1, ptr noundef %2)
  br label %253

253:                                              ; preds = %251, %247
  %254 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 33
  %255 = load ptr, ptr %254, align 8, !tbaa !465
  %256 = icmp eq ptr %255, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %253
  %258 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %258, ptr noundef nonnull %255, ptr noundef %1, ptr noundef %2)
  br label %259

259:                                              ; preds = %257, %253
  %260 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 34
  %261 = load ptr, ptr %260, align 8, !tbaa !466
  %262 = icmp eq ptr %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %259
  %264 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %264, ptr noundef nonnull %261, ptr noundef %1, ptr noundef %2)
  br label %265

265:                                              ; preds = %263, %259
  %266 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 35
  %267 = load ptr, ptr %266, align 8, !tbaa !467
  %268 = icmp eq ptr %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %265
  %270 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %270, ptr noundef nonnull %267, ptr noundef %1, ptr noundef %2)
  br label %271

271:                                              ; preds = %269, %265
  %272 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 36
  %273 = load ptr, ptr %272, align 8, !tbaa !468
  %274 = icmp eq ptr %273, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %271
  %276 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %276, ptr noundef nonnull %273, ptr noundef %1, ptr noundef %2)
  br label %277

277:                                              ; preds = %275, %271
  %278 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 37
  %279 = load ptr, ptr %278, align 8, !tbaa !469
  %280 = icmp eq ptr %279, null
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %282, ptr noundef nonnull %279, ptr noundef %1, ptr noundef %2)
  br label %283

283:                                              ; preds = %281, %277
  %284 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 38
  %285 = load ptr, ptr %284, align 8, !tbaa !470
  %286 = icmp eq ptr %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %288, ptr noundef nonnull %285, ptr noundef %1, ptr noundef %2)
  br label %289

289:                                              ; preds = %287, %283
  %290 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 39
  %291 = load ptr, ptr %290, align 8, !tbaa !471
  %292 = icmp eq ptr %291, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %289
  %294 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %294, ptr noundef nonnull %291, ptr noundef %1, ptr noundef %2)
  br label %295

295:                                              ; preds = %293, %289
  %296 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 40
  %297 = load ptr, ptr %296, align 8, !tbaa !472
  %298 = icmp eq ptr %297, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %295
  %300 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %300, ptr noundef nonnull %297, ptr noundef %1, ptr noundef %2)
  br label %301

301:                                              ; preds = %299, %295
  %302 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 41
  %303 = load ptr, ptr %302, align 8, !tbaa !473
  %304 = icmp eq ptr %303, null
  br i1 %304, label %307, label %305

305:                                              ; preds = %301
  %306 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %306, ptr noundef nonnull %303, ptr noundef %1, ptr noundef %2)
  br label %307

307:                                              ; preds = %305, %301
  %308 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 42
  %309 = load ptr, ptr %308, align 8, !tbaa !474
  %310 = icmp eq ptr %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %307
  %312 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %312, ptr noundef nonnull %309, ptr noundef %1, ptr noundef %2)
  br label %313

313:                                              ; preds = %311, %307
  %314 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 43
  %315 = load ptr, ptr %314, align 8, !tbaa !475
  %316 = icmp eq ptr %315, null
  br i1 %316, label %319, label %317

317:                                              ; preds = %313
  %318 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %318, ptr noundef nonnull %315, ptr noundef %1, ptr noundef %2)
  br label %319

319:                                              ; preds = %317, %313
  %320 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 44
  %321 = load ptr, ptr %320, align 8, !tbaa !476
  %322 = icmp eq ptr %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %319
  %324 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %324, ptr noundef nonnull %321, ptr noundef %1, ptr noundef %2)
  br label %325

325:                                              ; preds = %323, %319
  %326 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 45
  %327 = load ptr, ptr %326, align 8, !tbaa !477
  %328 = icmp eq ptr %327, null
  br i1 %328, label %331, label %329

329:                                              ; preds = %325
  %330 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %330, ptr noundef nonnull %327, ptr noundef %1, ptr noundef %2)
  br label %331

331:                                              ; preds = %329, %325
  %332 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 46
  %333 = load ptr, ptr %332, align 8, !tbaa !478
  %334 = icmp eq ptr %333, null
  br i1 %334, label %337, label %335

335:                                              ; preds = %331
  %336 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %336, ptr noundef nonnull %333, ptr noundef %1, ptr noundef %2)
  br label %337

337:                                              ; preds = %335, %331
  %338 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 1
  %339 = load ptr, ptr %338, align 8, !tbaa !479
  %340 = icmp eq ptr %339, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %337
  %342 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %342, ptr noundef nonnull %339, ptr noundef %1, ptr noundef %2)
  br label %343

343:                                              ; preds = %341, %337
  %344 = getelementptr inbounds %struct.checksum_attributes, ptr %9, i64 0, i32 2
  %345 = load ptr, ptr %344, align 8, !tbaa !480
  %346 = icmp eq ptr %345, null
  br i1 %346, label %349, label %347

347:                                              ; preds = %343
  %348 = load i32, ptr %0, align 8, !tbaa !185
  call fastcc void @attr_checksum_ordered(i32 noundef %348, ptr noundef nonnull %345, ptr noundef %1, ptr noundef %2)
  br label %349

349:                                              ; preds = %347, %343
  %350 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %351 = load ptr, ptr %350, align 8, !tbaa !175
  %352 = icmp eq ptr %351, null
  br i1 %352, label %448, label %353

353:                                              ; preds = %349, %445
  %354 = phi ptr [ %356, %445 ], [ %351, %349 ]
  %355 = getelementptr inbounds %struct.die_struct, ptr %354, i64 0, i32 5
  %356 = load ptr, ptr %355, align 8, !tbaa !176
  br label %357

357:                                              ; preds = %391, %353
  %358 = phi ptr [ %356, %353 ], [ %392, %391 ]
  %359 = icmp eq ptr %358, null
  br i1 %359, label %394, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %struct.die_struct, ptr %358, i64 0, i32 2
  %362 = load ptr, ptr %361, align 8, !tbaa !157
  %363 = icmp eq ptr %362, null
  br i1 %363, label %394, label %364

364:                                              ; preds = %360, %385
  %365 = phi ptr [ %386, %385 ], [ %362, %360 ]
  %366 = phi ptr [ %387, %385 ], [ %362, %360 ]
  %367 = phi i64 [ %389, %385 ], [ 0, %360 ]
  %368 = phi ptr [ %388, %385 ], [ null, %360 ]
  %369 = load i32, ptr %366, align 8, !tbaa !159
  %370 = zext i32 %369 to i64
  %371 = icmp ult i64 %367, %370
  br i1 %371, label %372, label %391

372:                                              ; preds = %364
  %373 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %366, i64 0, i32 2, i64 %367
  %374 = load i32, ptr %373, align 8, !tbaa !161
  switch i32 %374, label %385 [
    i32 3, label %394
    i32 71, label %375
    i32 49, label %375
  ]

375:                                              ; preds = %372, %372
  %376 = getelementptr i8, ptr %373, i64 8
  %377 = load i32, ptr %376, align 8, !tbaa !163
  %378 = icmp eq i32 %377, 10
  br i1 %378, label %381, label %379

379:                                              ; preds = %375
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %380 = load ptr, ptr %361, align 8, !tbaa !157
  br label %381

381:                                              ; preds = %379, %375
  %382 = phi ptr [ %365, %375 ], [ %380, %379 ]
  %383 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %366, i64 0, i32 2, i64 %367, i32 1, i32 1
  %384 = load ptr, ptr %383, align 8, !tbaa !17
  br label %385

385:                                              ; preds = %372, %381
  %386 = phi ptr [ %382, %381 ], [ %365, %372 ]
  %387 = phi ptr [ %382, %381 ], [ %366, %372 ]
  %388 = phi ptr [ %384, %381 ], [ %368, %372 ]
  %389 = add nuw nsw i64 %367, 1
  %390 = icmp eq ptr %387, null
  br i1 %390, label %391, label %364, !llvm.loop !164

391:                                              ; preds = %385, %364
  %392 = phi ptr [ %388, %385 ], [ %368, %364 ]
  %393 = icmp eq ptr %392, null
  br i1 %393, label %394, label %357

394:                                              ; preds = %357, %360, %391, %372
  %395 = phi ptr [ %373, %372 ], [ null, %391 ], [ null, %360 ], [ null, %357 ]
  %396 = load i32, ptr %356, align 8, !tbaa !185
  switch i32 %396, label %397 [
    i32 1, label %401
    i32 2, label %401
    i32 56, label %401
    i32 4, label %401
    i32 15, label %401
    i32 16, label %401
    i32 18, label %401
    i32 19, label %401
    i32 21, label %401
    i32 23, label %401
    i32 31, label %401
    i32 32, label %401
    i32 33, label %401
    i32 36, label %401
    i32 38, label %401
    i32 41, label %401
    i32 45, label %401
    i32 53, label %401
    i32 22, label %401
  ]

397:                                              ; preds = %394
  %398 = icmp eq i32 %396, 46
  %399 = icmp ne ptr %395, null
  %400 = and i1 %399, %398
  br i1 %400, label %403, label %439

401:                                              ; preds = %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394, %394
  %402 = icmp eq ptr %395, null
  br i1 %402, label %439, label %403

403:                                              ; preds = %401, %397
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #31
  store i8 83, ptr %6, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %6, i64 noundef 1, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #31
  %404 = load i32, ptr %356, align 8, !tbaa !185
  %405 = zext i32 %404 to i64
  br label %406

406:                                              ; preds = %406, %403
  %407 = phi i64 [ %405, %403 ], [ %410, %406 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #31
  %408 = trunc i64 %407 to i8
  %409 = and i8 %408, 127
  %410 = lshr i64 %407, 7
  %411 = icmp ult i64 %407, 128
  %412 = select i1 %411, i8 0, i8 -128
  %413 = or i8 %409, %412
  store i8 %413, ptr %5, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %5, i64 noundef 1, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #31
  br i1 %411, label %414, label %406

414:                                              ; preds = %406
  %415 = icmp eq ptr %395, null
  br i1 %415, label %424, label %416

416:                                              ; preds = %414
  %417 = getelementptr i8, ptr %395, i64 8
  %418 = load i32, ptr %417, align 8, !tbaa !163
  %419 = icmp eq i32 %418, 14
  br i1 %419, label %420, label %424

420:                                              ; preds = %416
  %421 = getelementptr inbounds %struct.dw_attr_struct, ptr %395, i64 0, i32 1, i32 1
  %422 = load ptr, ptr %421, align 8, !tbaa !17
  %423 = load ptr, ptr %422, align 8, !tbaa !186
  br label %434

424:                                              ; preds = %414, %416
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  %425 = getelementptr i8, ptr %395, i64 8
  %426 = load i32, ptr %425, align 8, !tbaa !163
  %427 = getelementptr inbounds %struct.dw_attr_struct, ptr %395, i64 0, i32 1, i32 1
  %428 = load ptr, ptr %427, align 8, !tbaa !17
  %429 = load ptr, ptr %428, align 8, !tbaa !186
  %430 = icmp eq i32 %426, 14
  br i1 %430, label %434, label %431

431:                                              ; preds = %424
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  %432 = load ptr, ptr %427, align 8, !tbaa !17
  %433 = load ptr, ptr %432, align 8, !tbaa !186
  br label %434

434:                                              ; preds = %420, %424, %431
  %435 = phi ptr [ %429, %424 ], [ %429, %431 ], [ %423, %420 ]
  %436 = phi ptr [ %429, %424 ], [ %433, %431 ], [ %423, %420 ]
  %437 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %436)
  %438 = add i64 %437, 1
  call void @md5_process_bytes(ptr noundef %435, i64 noundef %438, ptr noundef %1) #31
  br label %445

439:                                              ; preds = %401, %397
  %440 = getelementptr inbounds %struct.die_struct, ptr %356, i64 0, i32 9
  %441 = load i32, ptr %440, align 8, !tbaa !235
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %439
  store i32 -1, ptr %440, align 8, !tbaa !235
  br label %444

444:                                              ; preds = %443, %439
  call fastcc void @die_checksum_ordered(ptr noundef nonnull %356, ptr noundef %1, ptr noundef %2)
  br label %445

445:                                              ; preds = %444, %434
  %446 = load ptr, ptr %350, align 8, !tbaa !175
  %447 = icmp eq ptr %356, %446
  br i1 %447, label %448, label %353, !llvm.loop !481

448:                                              ; preds = %445, %349
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #31
  store i8 0, ptr %4, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %4, i64 noundef 1, ptr noundef %1) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 376, ptr nonnull %9) #31
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @collect_checksum_attributes(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) unnamed_addr #23 {
  %3 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !157
  %5 = icmp eq ptr %4, null
  br i1 %5, label %111, label %6

6:                                                ; preds = %2
  %7 = load i32, ptr %4, align 8, !tbaa !159
  %8 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 46
  %9 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 45
  %10 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 44
  %11 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 43
  %12 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 42
  %13 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 41
  %14 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 40
  %15 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 39
  %16 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 38
  %17 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 37
  %18 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 36
  %19 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 35
  %20 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 34
  %21 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 33
  %22 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 32
  %23 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 31
  %24 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 30
  %25 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 29
  %26 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 28
  %27 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 27
  %28 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 26
  %29 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 25
  %30 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 24
  %31 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 23
  %32 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 22
  %33 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 21
  %34 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 20
  %35 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 19
  %36 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 18
  %37 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 17
  %38 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 16
  %39 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 15
  %40 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 14
  %41 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 13
  %42 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 12
  %43 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 11
  %44 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 10
  %45 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 9
  %46 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 8
  %47 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 7
  %48 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 6
  %49 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 5
  %50 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 4
  %51 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 3
  %52 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 2
  %53 = getelementptr inbounds %struct.checksum_attributes, ptr %0, i64 0, i32 1
  %54 = zext i32 %7 to i64
  %55 = icmp eq i32 %7, 0
  br i1 %55, label %111, label %56

56:                                               ; preds = %6, %108
  %57 = phi i64 [ %109, %108 ], [ 0, %6 ]
  %58 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %4, i64 0, i32 2, i64 %57
  %59 = load i32, ptr %58, align 8, !tbaa !161
  switch i32 %59, label %108 [
    i32 3, label %106
    i32 73, label %60
    i32 65, label %61
    i32 50, label %62
    i32 51, label %63
    i32 78, label %64
    i32 52, label %65
    i32 79, label %66
    i32 91, label %67
    i32 12, label %68
    i32 13, label %69
    i32 46, label %70
    i32 11, label %71
    i32 81, label %72
    i32 28, label %73
    i32 29, label %74
    i32 55, label %75
    i32 80, label %76
    i32 56, label %77
    i32 92, label %78
    i32 94, label %79
    i32 30, label %80
    i32 95, label %81
    i32 21, label %82
    i32 61, label %83
    i32 22, label %84
    i32 62, label %85
    i32 101, label %86
    i32 99, label %87
    i32 33, label %88
    i32 2, label %89
    i32 34, label %90
    i32 97, label %91
    i32 9, label %92
    i32 96, label %93
    i32 39, label %94
    i32 93, label %95
    i32 70, label %96
    i32 25, label %97
    i32 98, label %98
    i32 47, label %99
    i32 74, label %100
    i32 83, label %101
    i32 75, label %102
    i32 76, label %103
    i32 23, label %104
    i32 77, label %105
  ]

60:                                               ; preds = %56
  br label %106

61:                                               ; preds = %56
  br label %106

62:                                               ; preds = %56
  br label %106

63:                                               ; preds = %56
  br label %106

64:                                               ; preds = %56
  br label %106

65:                                               ; preds = %56
  br label %106

66:                                               ; preds = %56
  br label %106

67:                                               ; preds = %56
  br label %106

68:                                               ; preds = %56
  br label %106

69:                                               ; preds = %56
  br label %106

70:                                               ; preds = %56
  br label %106

71:                                               ; preds = %56
  br label %106

72:                                               ; preds = %56
  br label %106

73:                                               ; preds = %56
  br label %106

74:                                               ; preds = %56
  br label %106

75:                                               ; preds = %56
  br label %106

76:                                               ; preds = %56
  br label %106

77:                                               ; preds = %56
  br label %106

78:                                               ; preds = %56
  br label %106

79:                                               ; preds = %56
  br label %106

80:                                               ; preds = %56
  br label %106

81:                                               ; preds = %56
  br label %106

82:                                               ; preds = %56
  br label %106

83:                                               ; preds = %56
  br label %106

84:                                               ; preds = %56
  br label %106

85:                                               ; preds = %56
  br label %106

86:                                               ; preds = %56
  br label %106

87:                                               ; preds = %56
  br label %106

88:                                               ; preds = %56
  br label %106

89:                                               ; preds = %56
  br label %106

90:                                               ; preds = %56
  br label %106

91:                                               ; preds = %56
  br label %106

92:                                               ; preds = %56
  br label %106

93:                                               ; preds = %56
  br label %106

94:                                               ; preds = %56
  br label %106

95:                                               ; preds = %56
  br label %106

96:                                               ; preds = %56
  br label %106

97:                                               ; preds = %56
  br label %106

98:                                               ; preds = %56
  br label %106

99:                                               ; preds = %56
  br label %106

100:                                              ; preds = %56
  br label %106

101:                                              ; preds = %56
  br label %106

102:                                              ; preds = %56
  br label %106

103:                                              ; preds = %56
  br label %106

104:                                              ; preds = %56
  br label %106

105:                                              ; preds = %56
  br label %106

106:                                              ; preds = %56, %105, %104, %103, %102, %101, %100, %99, %98, %97, %96, %95, %94, %93, %92, %91, %90, %89, %88, %87, %86, %85, %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60
  %107 = phi ptr [ %53, %60 ], [ %52, %61 ], [ %51, %62 ], [ %50, %63 ], [ %49, %64 ], [ %48, %65 ], [ %47, %66 ], [ %46, %67 ], [ %45, %68 ], [ %44, %69 ], [ %43, %70 ], [ %42, %71 ], [ %41, %72 ], [ %40, %73 ], [ %39, %74 ], [ %38, %75 ], [ %37, %76 ], [ %36, %77 ], [ %35, %78 ], [ %34, %79 ], [ %33, %80 ], [ %32, %81 ], [ %31, %82 ], [ %30, %83 ], [ %29, %84 ], [ %28, %85 ], [ %27, %86 ], [ %26, %87 ], [ %25, %88 ], [ %24, %89 ], [ %23, %90 ], [ %22, %91 ], [ %21, %92 ], [ %20, %93 ], [ %19, %94 ], [ %18, %95 ], [ %17, %96 ], [ %16, %97 ], [ %15, %98 ], [ %14, %99 ], [ %13, %100 ], [ %12, %101 ], [ %11, %102 ], [ %10, %103 ], [ %9, %104 ], [ %8, %105 ], [ %0, %56 ]
  store ptr %58, ptr %107, align 8, !tbaa !6
  br label %108

108:                                              ; preds = %106, %56
  %109 = add nuw nsw i64 %57, 1
  %110 = icmp eq i64 %109, %54
  br i1 %110, label %111, label %56

111:                                              ; preds = %108, %6, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @attr_checksum_ordered(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef %3) unnamed_addr #10 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = getelementptr i8, ptr %1, i64 8
  %34 = load i32, ptr %33, align 8, !tbaa !163
  %35 = icmp eq i32 %34, 10
  br i1 %35, label %36, label %261

36:                                               ; preds = %4
  %37 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = load i32, ptr %1, align 8, !tbaa !161
  %40 = icmp eq i32 %39, 73
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  switch i32 %0, label %170 [
    i32 31, label %46
    i32 16, label %46
    i32 15, label %46
  ]

42:                                               ; preds = %36
  %43 = icmp eq i32 %39, 65
  %44 = icmp eq i32 %0, 42
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %170

46:                                               ; preds = %41, %41, %41, %42
  br label %47

47:                                               ; preds = %46, %81
  %48 = phi ptr [ %82, %81 ], [ %38, %46 ]
  %49 = icmp eq ptr %48, null
  br i1 %49, label %170, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.die_struct, ptr %48, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !157
  %53 = icmp eq ptr %52, null
  br i1 %53, label %170, label %54

54:                                               ; preds = %50, %75
  %55 = phi ptr [ %76, %75 ], [ %52, %50 ]
  %56 = phi ptr [ %77, %75 ], [ %52, %50 ]
  %57 = phi i64 [ %79, %75 ], [ 0, %50 ]
  %58 = phi ptr [ %78, %75 ], [ null, %50 ]
  %59 = load i32, ptr %56, align 8, !tbaa !159
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 2, i64 %57
  %64 = load i32, ptr %63, align 8, !tbaa !161
  switch i32 %64, label %75 [
    i32 3, label %84
    i32 71, label %65
    i32 49, label %65
  ]

65:                                               ; preds = %62, %62
  %66 = getelementptr i8, ptr %63, i64 8
  %67 = load i32, ptr %66, align 8, !tbaa !163
  %68 = icmp eq i32 %67, 10
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %70 = load ptr, ptr %51, align 8, !tbaa !157
  br label %71

71:                                               ; preds = %69, %65
  %72 = phi ptr [ %55, %65 ], [ %70, %69 ]
  %73 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 2, i64 %57, i32 1, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  br label %75

75:                                               ; preds = %62, %71
  %76 = phi ptr [ %72, %71 ], [ %55, %62 ]
  %77 = phi ptr [ %72, %71 ], [ %56, %62 ]
  %78 = phi ptr [ %74, %71 ], [ %58, %62 ]
  %79 = add nuw nsw i64 %57, 1
  %80 = icmp eq ptr %77, null
  br i1 %80, label %81, label %54, !llvm.loop !164

81:                                               ; preds = %75, %54
  %82 = phi ptr [ %78, %75 ], [ %58, %54 ]
  %83 = icmp eq ptr %82, null
  br i1 %83, label %170, label %47

84:                                               ; preds = %62, %118
  %85 = phi ptr [ %119, %118 ], [ %38, %62 ]
  %86 = icmp eq ptr %85, null
  br i1 %86, label %129, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.die_struct, ptr %85, i64 0, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !157
  %90 = icmp eq ptr %89, null
  br i1 %90, label %129, label %91

91:                                               ; preds = %87, %112
  %92 = phi ptr [ %113, %112 ], [ %89, %87 ]
  %93 = phi ptr [ %114, %112 ], [ %89, %87 ]
  %94 = phi i64 [ %116, %112 ], [ 0, %87 ]
  %95 = phi ptr [ %115, %112 ], [ null, %87 ]
  %96 = load i32, ptr %93, align 8, !tbaa !159
  %97 = zext i32 %96 to i64
  %98 = icmp ult i64 %94, %97
  br i1 %98, label %99, label %118

99:                                               ; preds = %91
  %100 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %93, i64 0, i32 2, i64 %94
  %101 = load i32, ptr %100, align 8, !tbaa !161
  switch i32 %101, label %112 [
    i32 71, label %121
    i32 49, label %102
  ]

102:                                              ; preds = %99
  %103 = getelementptr i8, ptr %100, i64 8
  %104 = load i32, ptr %103, align 8, !tbaa !163
  %105 = icmp eq i32 %104, 10
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %107 = load ptr, ptr %88, align 8, !tbaa !157
  br label %108

108:                                              ; preds = %106, %102
  %109 = phi ptr [ %92, %102 ], [ %107, %106 ]
  %110 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %93, i64 0, i32 2, i64 %94, i32 1, i32 1
  %111 = load ptr, ptr %110, align 8, !tbaa !17
  br label %112

112:                                              ; preds = %99, %108
  %113 = phi ptr [ %109, %108 ], [ %92, %99 ]
  %114 = phi ptr [ %109, %108 ], [ %93, %99 ]
  %115 = phi ptr [ %111, %108 ], [ %95, %99 ]
  %116 = add nuw nsw i64 %94, 1
  %117 = icmp eq ptr %114, null
  br i1 %117, label %118, label %91, !llvm.loop !164

118:                                              ; preds = %112, %91
  %119 = phi ptr [ %115, %112 ], [ %95, %91 ]
  %120 = icmp eq ptr %119, null
  br i1 %120, label %129, label %84

121:                                              ; preds = %99
  %122 = getelementptr i8, ptr %100, i64 8
  %123 = load i32, ptr %122, align 8, !tbaa !163
  %124 = icmp eq i32 %123, 10
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %126

126:                                              ; preds = %125, %121
  %127 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %93, i64 0, i32 2, i64 %94, i32 1, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !17
  br label %129

129:                                              ; preds = %84, %87, %118, %126
  %130 = phi ptr [ %128, %126 ], [ null, %118 ], [ null, %87 ], [ null, %84 ]
  %131 = icmp eq ptr %130, null
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %32) #31
  store i8 78, ptr %32, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %32, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %32) #31
  %132 = load i32, ptr %1, align 8, !tbaa !161
  %133 = zext i32 %132 to i64
  br label %134

134:                                              ; preds = %134, %129
  %135 = phi i64 [ %133, %129 ], [ %138, %134 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %31) #31
  %136 = trunc i64 %135 to i8
  %137 = and i8 %136, 127
  %138 = lshr i64 %135, 7
  %139 = icmp ult i64 %135, 128
  %140 = select i1 %139, i8 0, i8 -128
  %141 = or i8 %137, %140
  store i8 %141, ptr %31, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %31, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %31) #31
  br i1 %139, label %142, label %134

142:                                              ; preds = %134
  %143 = select i1 %131, ptr %38, ptr %130
  %144 = getelementptr inbounds %struct.die_struct, ptr %143, i64 0, i32 3
  %145 = load ptr, ptr %144, align 8, !tbaa !174
  %146 = icmp eq ptr %145, null
  br i1 %146, label %148, label %147

147:                                              ; preds = %142
  call fastcc void @checksum_die_context(ptr noundef nonnull %145, ptr noundef %2)
  br label %148

148:                                              ; preds = %142, %147
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %30) #31
  store i8 69, ptr %30, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %30, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %30) #31
  %149 = getelementptr i8, ptr %63, i64 8
  %150 = load i32, ptr %149, align 8, !tbaa !163
  %151 = icmp eq i32 %150, 14
  br i1 %151, label %152, label %156

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 2, i64 %57, i32 1, i32 1
  %154 = load ptr, ptr %153, align 8, !tbaa !17
  %155 = load ptr, ptr %154, align 8, !tbaa !186
  br label %165

156:                                              ; preds = %148
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  %157 = load i32, ptr %149, align 8, !tbaa !163
  %158 = icmp eq i32 %157, 14
  %159 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 2, i64 %57, i32 1, i32 1
  %160 = load ptr, ptr %159, align 8, !tbaa !17
  %161 = load ptr, ptr %160, align 8, !tbaa !186
  br i1 %158, label %165, label %162

162:                                              ; preds = %156
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  %163 = load ptr, ptr %159, align 8, !tbaa !17
  %164 = load ptr, ptr %163, align 8, !tbaa !186
  br label %165

165:                                              ; preds = %152, %156, %162
  %166 = phi ptr [ %161, %156 ], [ %161, %162 ], [ %155, %152 ]
  %167 = phi ptr [ %161, %156 ], [ %164, %162 ], [ %155, %152 ]
  %168 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %167)
  %169 = add i64 %168, 1
  call void @md5_process_bytes(ptr noundef %166, i64 noundef %169, ptr noundef %2) #31
  br label %449

170:                                              ; preds = %50, %81, %47, %41, %42
  %171 = getelementptr inbounds %struct.die_struct, ptr %38, i64 0, i32 9
  %172 = load i32, ptr %171, align 8, !tbaa !235
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %196

174:                                              ; preds = %170
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %29) #31
  store i8 82, ptr %29, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %29, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %29) #31
  %175 = load i32, ptr %1, align 8, !tbaa !161
  %176 = zext i32 %175 to i64
  br label %177

177:                                              ; preds = %177, %174
  %178 = phi i64 [ %176, %174 ], [ %181, %177 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %28) #31
  %179 = trunc i64 %178 to i8
  %180 = and i8 %179, 127
  %181 = lshr i64 %178, 7
  %182 = icmp ult i64 %178, 128
  %183 = select i1 %182, i8 0, i8 -128
  %184 = or i8 %180, %183
  store i8 %184, ptr %28, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %28, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %28) #31
  br i1 %182, label %185, label %177

185:                                              ; preds = %177
  %186 = load i32, ptr %171, align 8, !tbaa !235
  %187 = sext i32 %186 to i64
  br label %188

188:                                              ; preds = %188, %185
  %189 = phi i64 [ %187, %185 ], [ %192, %188 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %27) #31
  %190 = trunc i64 %189 to i8
  %191 = and i8 %190, 127
  %192 = lshr i64 %189, 7
  %193 = icmp ult i64 %189, 128
  %194 = select i1 %193, i8 0, i8 -128
  %195 = or i8 %191, %194
  store i8 %195, ptr %27, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %27, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %27) #31
  br i1 %193, label %449, label %188

196:                                              ; preds = %170, %228
  %197 = phi ptr [ %229, %228 ], [ %38, %170 ]
  %198 = getelementptr inbounds %struct.die_struct, ptr %197, i64 0, i32 2
  %199 = load ptr, ptr %198, align 8, !tbaa !157
  %200 = icmp eq ptr %199, null
  br i1 %200, label %239, label %201

201:                                              ; preds = %196, %222
  %202 = phi ptr [ %223, %222 ], [ %199, %196 ]
  %203 = phi ptr [ %224, %222 ], [ %199, %196 ]
  %204 = phi i64 [ %226, %222 ], [ 0, %196 ]
  %205 = phi ptr [ %225, %222 ], [ null, %196 ]
  %206 = load i32, ptr %203, align 8, !tbaa !159
  %207 = zext i32 %206 to i64
  %208 = icmp ult i64 %204, %207
  br i1 %208, label %209, label %228

209:                                              ; preds = %201
  %210 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %203, i64 0, i32 2, i64 %204
  %211 = load i32, ptr %210, align 8, !tbaa !161
  switch i32 %211, label %222 [
    i32 71, label %231
    i32 49, label %212
  ]

212:                                              ; preds = %209
  %213 = getelementptr i8, ptr %210, i64 8
  %214 = load i32, ptr %213, align 8, !tbaa !163
  %215 = icmp eq i32 %214, 10
  br i1 %215, label %218, label %216

216:                                              ; preds = %212
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %217 = load ptr, ptr %198, align 8, !tbaa !157
  br label %218

218:                                              ; preds = %216, %212
  %219 = phi ptr [ %202, %212 ], [ %217, %216 ]
  %220 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %203, i64 0, i32 2, i64 %204, i32 1, i32 1
  %221 = load ptr, ptr %220, align 8, !tbaa !17
  br label %222

222:                                              ; preds = %209, %218
  %223 = phi ptr [ %219, %218 ], [ %202, %209 ]
  %224 = phi ptr [ %219, %218 ], [ %203, %209 ]
  %225 = phi ptr [ %221, %218 ], [ %205, %209 ]
  %226 = add nuw nsw i64 %204, 1
  %227 = icmp eq ptr %224, null
  br i1 %227, label %228, label %201, !llvm.loop !164

228:                                              ; preds = %222, %201
  %229 = phi ptr [ %225, %222 ], [ %205, %201 ]
  %230 = icmp eq ptr %229, null
  br i1 %230, label %239, label %196

231:                                              ; preds = %209
  %232 = getelementptr i8, ptr %210, i64 8
  %233 = load i32, ptr %232, align 8, !tbaa !163
  %234 = icmp eq i32 %233, 10
  br i1 %234, label %236, label %235

235:                                              ; preds = %231
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %236

236:                                              ; preds = %235, %231
  %237 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %203, i64 0, i32 2, i64 %204, i32 1, i32 1
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  br label %239

239:                                              ; preds = %196, %228, %236
  %240 = phi ptr [ %238, %236 ], [ null, %228 ], [ null, %196 ]
  %241 = icmp eq ptr %240, null
  %242 = load i32, ptr %3, align 4, !tbaa !21
  %243 = add nsw i32 %242, 1
  store i32 %243, ptr %3, align 4, !tbaa !21
  store i32 %243, ptr %171, align 8, !tbaa !235
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %26) #31
  store i8 84, ptr %26, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %26, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %26) #31
  %244 = load i32, ptr %1, align 8, !tbaa !161
  %245 = zext i32 %244 to i64
  br label %246

246:                                              ; preds = %246, %239
  %247 = phi i64 [ %245, %239 ], [ %250, %246 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %25) #31
  %248 = trunc i64 %247 to i8
  %249 = and i8 %248, 127
  %250 = lshr i64 %247, 7
  %251 = icmp ult i64 %247, 128
  %252 = select i1 %251, i8 0, i8 -128
  %253 = or i8 %249, %252
  store i8 %253, ptr %25, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %25, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %25) #31
  br i1 %251, label %254, label %246

254:                                              ; preds = %246
  %255 = select i1 %241, ptr %38, ptr %240
  %256 = getelementptr inbounds %struct.die_struct, ptr %255, i64 0, i32 3
  %257 = load ptr, ptr %256, align 8, !tbaa !174
  %258 = icmp eq ptr %257, null
  br i1 %258, label %260, label %259

259:                                              ; preds = %254
  call fastcc void @checksum_die_context(ptr noundef nonnull %257, ptr noundef %2)
  br label %260

260:                                              ; preds = %259, %254
  call fastcc void @die_checksum_ordered(ptr noundef %38, ptr noundef %2, ptr noundef nonnull %3)
  br label %449

261:                                              ; preds = %4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %24) #31
  store i8 65, ptr %24, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %24, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %24) #31
  %262 = load i32, ptr %1, align 8, !tbaa !161
  %263 = zext i32 %262 to i64
  br label %264

264:                                              ; preds = %264, %261
  %265 = phi i64 [ %263, %261 ], [ %268, %264 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %23) #31
  %266 = trunc i64 %265 to i8
  %267 = and i8 %266, 127
  %268 = lshr i64 %265, 7
  %269 = icmp ult i64 %265, 128
  %270 = select i1 %269, i8 0, i8 -128
  %271 = or i8 %267, %270
  store i8 %271, ptr %23, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %23, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %23) #31
  br i1 %269, label %272, label %264

272:                                              ; preds = %264
  %273 = load i32, ptr %33, align 8, !tbaa !163
  switch i32 %273, label %449 [
    i32 5, label %274
    i32 6, label %294
    i32 7, label %317
    i32 8, label %319
    i32 9, label %321
    i32 14, label %326
    i32 0, label %347
    i32 1, label %359
    i32 2, label %370
    i32 17, label %447
    i32 16, label %426
  ]

274:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #31
  store i8 13, ptr %22, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %22, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %22) #31
  %275 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %276 = load i64, ptr %275, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %21) #31
  %277 = trunc i64 %276 to i8
  %278 = and i8 %277, 127
  store i8 %278, ptr %21, align 1, !tbaa !17
  %279 = icmp ult i64 %276, 64
  br i1 %279, label %293, label %280

280:                                              ; preds = %274, %288
  %281 = phi i64 [ %283, %288 ], [ %276, %274 ]
  %282 = phi i8 [ %290, %288 ], [ %277, %274 ]
  %283 = ashr i64 %281, 7
  %284 = icmp eq i64 %283, -1
  %285 = and i8 %282, 64
  %286 = icmp ne i8 %285, 0
  %287 = and i1 %284, %286
  br i1 %287, label %293, label %288

288:                                              ; preds = %280
  %289 = or i8 %282, -128
  store i8 %289, ptr %21, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %21, i64 noundef 1, ptr noundef %2) #31
  %290 = trunc i64 %283 to i8
  %291 = and i8 %290, 127
  store i8 %291, ptr %21, align 1, !tbaa !17
  %292 = icmp ult i64 %281, 8192
  br i1 %292, label %293, label %280

293:                                              ; preds = %280, %288, %274
  call void @md5_process_bytes(ptr noundef nonnull %21, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %21) #31
  br label %449

294:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %20) #31
  store i8 13, ptr %20, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %20, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #31
  %295 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %296 = load i64, ptr %295, align 8, !tbaa !17
  %297 = shl i64 %296, 32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %19) #31
  %298 = trunc i64 %296 to i8
  %299 = and i8 %298, 127
  store i8 %299, ptr %19, align 1, !tbaa !17
  %300 = icmp ult i64 %297, 274877906944
  br i1 %300, label %316, label %301

301:                                              ; preds = %294
  %302 = ashr exact i64 %297, 32
  br label %303

303:                                              ; preds = %301, %311
  %304 = phi i64 [ %306, %311 ], [ %302, %301 ]
  %305 = phi i8 [ %313, %311 ], [ %298, %301 ]
  %306 = ashr i64 %304, 7
  %307 = icmp eq i64 %306, -1
  %308 = and i8 %305, 64
  %309 = icmp ne i8 %308, 0
  %310 = and i1 %307, %309
  br i1 %310, label %316, label %311

311:                                              ; preds = %303
  %312 = or i8 %305, -128
  store i8 %312, ptr %19, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %19, i64 noundef 1, ptr noundef %2) #31
  %313 = trunc i64 %306 to i8
  %314 = and i8 %313, 127
  store i8 %314, ptr %19, align 1, !tbaa !17
  %315 = icmp ult i64 %304, 8192
  br i1 %315, label %316, label %303

316:                                              ; preds = %303, %311, %294
  call void @md5_process_bytes(ptr noundef nonnull %19, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %19) #31
  br label %449

317:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %18) #31
  store i8 9, ptr %18, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %18, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %18) #31
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %17) #31
  store i8 16, ptr %17, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %17, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #31
  %318 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %318, i64 noundef 16, ptr noundef %2) #31
  br label %449

319:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #31
  store i8 9, ptr %16, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %16, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #31
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %15) #31
  store i8 16, ptr %15, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %15, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %15) #31
  %320 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %320, i64 noundef 16, ptr noundef %2) #31
  br label %449

321:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %14) #31
  store i8 12, ptr %14, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %14, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %14) #31
  %322 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %323 = load i8, ptr %322, align 8, !tbaa !17
  %324 = icmp ne i8 %323, 0
  %325 = zext i1 %324 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #31
  store i8 %325, ptr %13, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %13, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #31
  br label %449

326:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #31
  store i8 8, ptr %12, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %12, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #31
  %327 = load i32, ptr %33, align 8, !tbaa !163
  %328 = icmp eq i32 %327, 14
  br i1 %328, label %329, label %333

329:                                              ; preds = %326
  %330 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %331 = load ptr, ptr %330, align 8, !tbaa !17
  %332 = load ptr, ptr %331, align 8, !tbaa !186
  br label %342

333:                                              ; preds = %326
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  %334 = load i32, ptr %33, align 8, !tbaa !163
  %335 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %336 = load ptr, ptr %335, align 8, !tbaa !17
  %337 = load ptr, ptr %336, align 8, !tbaa !186
  %338 = icmp eq i32 %334, 14
  br i1 %338, label %342, label %339

339:                                              ; preds = %333
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  %340 = load ptr, ptr %335, align 8, !tbaa !17
  %341 = load ptr, ptr %340, align 8, !tbaa !186
  br label %342

342:                                              ; preds = %329, %333, %339
  %343 = phi ptr [ %332, %329 ], [ %337, %333 ], [ %341, %339 ]
  %344 = phi ptr [ %332, %329 ], [ %337, %333 ], [ %337, %339 ]
  %345 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %343)
  %346 = add i64 %345, 1
  call void @md5_process_bytes(ptr noundef %344, i64 noundef %346, ptr noundef %2) #31
  br label %449

347:                                              ; preds = %272
  %348 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %349 = load ptr, ptr %348, align 8, !tbaa !17
  %350 = load i32, ptr %349, align 8
  %351 = and i32 %350, 65535
  %352 = icmp eq i32 %351, 45
  br i1 %352, label %354, label %353

353:                                              ; preds = %347
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 8337, ptr noundef nonnull @.str.5) #31
  br label %354

354:                                              ; preds = %353, %347
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #31
  store i8 8, ptr %11, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %11, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #31
  %355 = getelementptr inbounds %struct.rtx_def, ptr %349, i64 0, i32 1
  %356 = load ptr, ptr %355, align 8, !tbaa !17
  %357 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %356)
  %358 = add i64 %357, 1
  call void @md5_process_bytes(ptr noundef %356, i64 noundef %358, ptr noundef %2) #31
  br label %449

359:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %10) #31
  store i8 13, ptr %10, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %10, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10) #31
  %360 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %361 = load i64, ptr %360, align 8, !tbaa !17
  br label %362

362:                                              ; preds = %362, %359
  %363 = phi i64 [ %361, %359 ], [ %366, %362 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #31
  %364 = trunc i64 %363 to i8
  %365 = and i8 %364, 127
  %366 = lshr i64 %363, 7
  %367 = icmp ult i64 %363, 128
  %368 = select i1 %367, i8 0, i8 -128
  %369 = or i8 %365, %368
  store i8 %369, ptr %9, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %9, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #31
  br i1 %367, label %449, label %362

370:                                              ; preds = %272
  %371 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %372 = load ptr, ptr %371, align 8, !tbaa !17
  %373 = icmp eq ptr %372, null
  br i1 %373, label %449, label %374

374:                                              ; preds = %370, %423
  %375 = phi ptr [ %424, %423 ], [ %372, %370 ]
  %376 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %375, i64 0, i32 1
  %377 = load i16, ptr %376, align 8
  %378 = and i16 %377, 255
  %379 = icmp eq i16 %378, 35
  br i1 %379, label %381, label %380

380:                                              ; preds = %381, %374
  br label %404

381:                                              ; preds = %374
  %382 = load ptr, ptr %375, align 8, !tbaa !57
  %383 = icmp eq ptr %382, null
  br i1 %383, label %384, label %380

384:                                              ; preds = %381
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #31
  store i8 13, ptr %8, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %8, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #31
  %385 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %375, i64 0, i32 3, i32 1
  %386 = load i64, ptr %385, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #31
  %387 = trunc i64 %386 to i8
  %388 = and i8 %387, 127
  store i8 %388, ptr %7, align 1, !tbaa !17
  %389 = icmp ult i64 %386, 64
  br i1 %389, label %403, label %390

390:                                              ; preds = %384, %398
  %391 = phi i64 [ %393, %398 ], [ %386, %384 ]
  %392 = phi i8 [ %400, %398 ], [ %387, %384 ]
  %393 = ashr i64 %391, 7
  %394 = icmp eq i64 %393, -1
  %395 = and i8 %392, 64
  %396 = icmp ne i8 %395, 0
  %397 = and i1 %394, %396
  br i1 %397, label %403, label %398

398:                                              ; preds = %390
  %399 = or i8 %392, -128
  store i8 %399, ptr %7, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %7, i64 noundef 1, ptr noundef %2) #31
  %400 = trunc i64 %393 to i8
  %401 = and i8 %400, 127
  store i8 %401, ptr %7, align 1, !tbaa !17
  %402 = icmp ult i64 %391, 8192
  br i1 %402, label %403, label %390

403:                                              ; preds = %398, %390, %384
  call void @md5_process_bytes(ptr noundef nonnull %7, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #31
  br label %423

404:                                              ; preds = %380, %418
  %405 = phi ptr [ %421, %418 ], [ %375, %380 ]
  %406 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %405, i64 0, i32 1
  %407 = load i16, ptr %406, align 8
  %408 = and i16 %407, 255
  %409 = zext i16 %408 to i64
  br label %410

410:                                              ; preds = %410, %404
  %411 = phi i64 [ %409, %404 ], [ %414, %410 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #31
  %412 = trunc i64 %411 to i8
  %413 = and i8 %412, 127
  %414 = lshr i64 %411, 7
  %415 = icmp ult i64 %411, 128
  %416 = select i1 %415, i8 0, i8 -128
  %417 = or i8 %413, %416
  store i8 %417, ptr %6, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %6, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #31
  br i1 %415, label %418, label %410

418:                                              ; preds = %410
  %419 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %405, i64 0, i32 3
  call void @md5_process_bytes(ptr noundef nonnull %419, i64 noundef 24, ptr noundef %2) #31
  %420 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %405, i64 0, i32 4
  call void @md5_process_bytes(ptr noundef nonnull %420, i64 noundef 24, ptr noundef %2) #31
  %421 = load ptr, ptr %405, align 8, !tbaa !57
  %422 = icmp eq ptr %421, null
  br i1 %422, label %423, label %404, !llvm.loop !482

423:                                              ; preds = %418, %403
  %424 = load ptr, ptr %375, align 8, !tbaa !17
  %425 = icmp eq ptr %424, null
  br i1 %425, label %449, label %374, !llvm.loop !483

426:                                              ; preds = %272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #31
  store i8 8, ptr %5, align 1, !tbaa !17
  call void @md5_process_bytes(ptr noundef nonnull %5, i64 noundef 1, ptr noundef %2) #31
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #31
  %427 = load i32, ptr %33, align 8, !tbaa !163
  %428 = icmp eq i32 %427, 16
  br i1 %428, label %429, label %433

429:                                              ; preds = %426
  %430 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %431 = load ptr, ptr %430, align 8, !tbaa !17
  %432 = load ptr, ptr %431, align 8, !tbaa !124
  br label %442

433:                                              ; preds = %426
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7270, ptr noundef nonnull @.str.5) #31
  %434 = load i32, ptr %33, align 8, !tbaa !163
  %435 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  %436 = load ptr, ptr %435, align 8, !tbaa !17
  %437 = load ptr, ptr %436, align 8, !tbaa !124
  %438 = icmp eq i32 %434, 16
  br i1 %438, label %442, label %439

439:                                              ; preds = %433
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7270, ptr noundef nonnull @.str.5) #31
  %440 = load ptr, ptr %435, align 8, !tbaa !17
  %441 = load ptr, ptr %440, align 8, !tbaa !124
  br label %442

442:                                              ; preds = %429, %433, %439
  %443 = phi ptr [ %432, %429 ], [ %437, %433 ], [ %441, %439 ]
  %444 = phi ptr [ %432, %429 ], [ %437, %433 ], [ %437, %439 ]
  %445 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %443)
  %446 = add i64 %445, 1
  call void @md5_process_bytes(ptr noundef %444, i64 noundef %446, ptr noundef %2) #31
  br label %449

447:                                              ; preds = %272
  %448 = getelementptr inbounds %struct.dw_attr_struct, ptr %1, i64 0, i32 1, i32 1
  call void @md5_process_bytes(ptr noundef nonnull %448, i64 noundef 8, ptr noundef %2) #31
  br label %449

449:                                              ; preds = %423, %362, %188, %370, %321, %165, %293, %316, %317, %319, %342, %354, %442, %447, %272, %260
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @clone_tree(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  %3 = load i32, ptr %0, align 8, !tbaa !185
  store i32 %3, ptr %2, align 8, !tbaa !185
  %4 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !157
  %6 = icmp eq ptr %5, null
  br i1 %6, label %41, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.die_struct, ptr %2, i64 0, i32 2
  br label %9

9:                                                ; preds = %32, %7
  %10 = phi i64 [ 0, %7 ], [ %38, %32 ]
  %11 = phi ptr [ %5, %7 ], [ %39, %32 ]
  %12 = load i32, ptr %11, align 8, !tbaa !159
  %13 = zext i32 %12 to i64
  %14 = icmp ult i64 %10, %13
  br i1 %14, label %15, label %41

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %11, i64 0, i32 2, i64 %10
  %17 = load ptr, ptr %8, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %20, ptr %8, align 8, !tbaa !157
  %21 = icmp eq ptr %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19, %15
  %23 = phi ptr [ %20, %19 ], [ %17, %15 ]
  %24 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %23, i64 0, i32 1
  %25 = load i32, ptr %24, align 4, !tbaa !201
  %26 = load i32, ptr %23, align 8, !tbaa !159
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %22, %19
  %29 = phi ptr [ %23, %22 ], [ null, %19 ]
  %30 = tail call ptr @vec_gc_o_reserve(ptr noundef %29, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %30, ptr %8, align 8, !tbaa !6
  %31 = load i32, ptr %30, align 8, !tbaa !159
  br label %32

32:                                               ; preds = %28, %22
  %33 = phi i32 [ %26, %22 ], [ %31, %28 ]
  %34 = phi ptr [ %23, %22 ], [ %30, %28 ]
  %35 = add i32 %33, 1
  store i32 %35, ptr %34, align 8, !tbaa !159
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %34, i64 0, i32 2, i64 %36
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %37, ptr noundef nonnull align 8 dereferenceable(32) %16, i64 32, i1 false), !tbaa.struct !179
  %38 = add nuw nsw i64 %10, 1
  %39 = load ptr, ptr %4, align 8, !tbaa !157
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %9, !llvm.loop !484

41:                                               ; preds = %9, %32, %1
  %42 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %43 = load ptr, ptr %42, align 8, !tbaa !175
  %44 = icmp eq ptr %43, null
  br i1 %44, label %71, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.die_struct, ptr %2, i64 0, i32 4
  br label %47

47:                                               ; preds = %45, %68
  %48 = phi ptr [ %50, %68 ], [ %43, %45 ]
  %49 = getelementptr inbounds %struct.die_struct, ptr %48, i64 0, i32 5
  %50 = load ptr, ptr %49, align 8, !tbaa !176
  %51 = tail call fastcc ptr @clone_tree(ptr noundef %50)
  %52 = icmp eq ptr %51, null
  br i1 %52, label %68, label %53

53:                                               ; preds = %47
  %54 = icmp eq ptr %2, %51
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %56

56:                                               ; preds = %55, %53
  %57 = getelementptr inbounds %struct.die_struct, ptr %51, i64 0, i32 3
  store ptr %2, ptr %57, align 8, !tbaa !174
  %58 = load ptr, ptr %46, align 8, !tbaa !175
  %59 = icmp eq ptr %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.die_struct, ptr %58, i64 0, i32 5
  %62 = load ptr, ptr %61, align 8, !tbaa !176
  %63 = getelementptr inbounds %struct.die_struct, ptr %51, i64 0, i32 5
  store ptr %62, ptr %63, align 8, !tbaa !176
  br label %66

64:                                               ; preds = %56
  %65 = getelementptr inbounds %struct.die_struct, ptr %51, i64 0, i32 5
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi ptr [ %65, %64 ], [ %61, %60 ]
  store ptr %51, ptr %67, align 8, !tbaa !176
  store ptr %51, ptr %46, align 8, !tbaa !175
  br label %68

68:                                               ; preds = %47, %66
  %69 = load ptr, ptr %42, align 8, !tbaa !175
  %70 = icmp eq ptr %50, %69
  br i1 %70, label %71, label %47, !llvm.loop !485

71:                                               ; preds = %68, %41
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @copy_ancestor_tree(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !174
  %6 = icmp eq ptr %2, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %9 = tail call i32 %8(ptr noundef nonnull %1) #31
  %10 = tail call ptr @htab_find_slot_with_hash(ptr noundef nonnull %2, ptr noundef nonnull %1, i32 noundef %9, i32 noundef 1) #31
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = icmp eq ptr %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.decl_table_entry, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !486
  br label %98

16:                                               ; preds = %7
  %17 = tail call ptr @xcalloc(i64 noundef 1, i64 noundef 16) #31
  store ptr %1, ptr %17, align 8, !tbaa !488
  %18 = getelementptr inbounds %struct.decl_table_entry, ptr %17, i64 0, i32 1
  store ptr null, ptr %18, align 8, !tbaa !486
  store ptr %17, ptr %10, align 8, !tbaa !6
  br label %19

19:                                               ; preds = %16, %3
  %20 = phi ptr [ %17, %16 ], [ null, %3 ]
  %21 = icmp eq ptr %5, null
  br i1 %21, label %72, label %22

22:                                               ; preds = %19, %54
  %23 = phi ptr [ %55, %54 ], [ %5, %19 ]
  %24 = getelementptr inbounds %struct.die_struct, ptr %23, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !157
  %26 = icmp eq ptr %25, null
  br i1 %26, label %65, label %27

27:                                               ; preds = %22, %48
  %28 = phi ptr [ %49, %48 ], [ %25, %22 ]
  %29 = phi ptr [ %50, %48 ], [ %25, %22 ]
  %30 = phi i64 [ %52, %48 ], [ 0, %22 ]
  %31 = phi ptr [ %51, %48 ], [ null, %22 ]
  %32 = load i32, ptr %29, align 8, !tbaa !159
  %33 = zext i32 %32 to i64
  %34 = icmp ult i64 %30, %33
  br i1 %34, label %35, label %54

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %29, i64 0, i32 2, i64 %30
  %37 = load i32, ptr %36, align 8, !tbaa !161
  switch i32 %37, label %48 [
    i32 71, label %57
    i32 49, label %38
  ]

38:                                               ; preds = %35
  %39 = getelementptr i8, ptr %36, i64 8
  %40 = load i32, ptr %39, align 8, !tbaa !163
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %43 = load ptr, ptr %24, align 8, !tbaa !157
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi ptr [ %28, %38 ], [ %43, %42 ]
  %46 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %29, i64 0, i32 2, i64 %30, i32 1, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  br label %48

48:                                               ; preds = %35, %44
  %49 = phi ptr [ %45, %44 ], [ %28, %35 ]
  %50 = phi ptr [ %45, %44 ], [ %29, %35 ]
  %51 = phi ptr [ %47, %44 ], [ %31, %35 ]
  %52 = add nuw nsw i64 %30, 1
  %53 = icmp eq ptr %50, null
  br i1 %53, label %54, label %27, !llvm.loop !164

54:                                               ; preds = %48, %27
  %55 = phi ptr [ %51, %48 ], [ %31, %27 ]
  %56 = icmp eq ptr %55, null
  br i1 %56, label %65, label %22

57:                                               ; preds = %35
  %58 = getelementptr i8, ptr %36, i64 8
  %59 = load i32, ptr %58, align 8, !tbaa !163
  %60 = icmp eq i32 %59, 10
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %62

62:                                               ; preds = %61, %57
  %63 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %29, i64 0, i32 2, i64 %30, i32 1, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  br label %65

65:                                               ; preds = %22, %54, %62
  %66 = phi ptr [ %64, %62 ], [ null, %54 ], [ null, %22 ]
  %67 = icmp eq ptr %66, null
  %68 = select i1 %67, ptr %5, ptr %66
  %69 = load i32, ptr %68, align 8, !tbaa !185
  switch i32 %69, label %70 [
    i32 17, label %72
    i32 65, label %72
  ]

70:                                               ; preds = %65
  %71 = tail call fastcc ptr @copy_ancestor_tree(ptr noundef %0, ptr noundef nonnull %68, ptr noundef %2)
  br label %72

72:                                               ; preds = %70, %65, %65, %19
  %73 = phi ptr [ %0, %19 ], [ %71, %70 ], [ %0, %65 ], [ %0, %65 ]
  %74 = tail call fastcc ptr @clone_as_declaration(ptr noundef %1)
  %75 = icmp ne ptr %73, null
  %76 = icmp ne ptr %74, null
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %94

78:                                               ; preds = %72
  %79 = icmp eq ptr %73, %74
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %81

81:                                               ; preds = %80, %78
  %82 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 3
  store ptr %73, ptr %82, align 8, !tbaa !174
  %83 = getelementptr inbounds %struct.die_struct, ptr %73, i64 0, i32 4
  %84 = load ptr, ptr %83, align 8, !tbaa !175
  %85 = icmp eq ptr %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.die_struct, ptr %84, i64 0, i32 5
  %88 = load ptr, ptr %87, align 8, !tbaa !176
  %89 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 5
  store ptr %88, ptr %89, align 8, !tbaa !176
  br label %92

90:                                               ; preds = %81
  %91 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 5
  br label %92

92:                                               ; preds = %90, %86
  %93 = phi ptr [ %91, %90 ], [ %87, %86 ]
  store ptr %74, ptr %93, align 8, !tbaa !176
  store ptr %74, ptr %83, align 8, !tbaa !175
  br label %94

94:                                               ; preds = %72, %92
  br i1 %6, label %98, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %struct.die_struct, ptr %74, i64 0, i32 9
  store i32 1, ptr %96, align 8, !tbaa !235
  %97 = getelementptr inbounds %struct.decl_table_entry, ptr %20, i64 0, i32 1
  store ptr %74, ptr %97, align 8, !tbaa !486
  br label %98

98:                                               ; preds = %94, %95, %13
  %99 = phi ptr [ %15, %13 ], [ %74, %95 ], [ %74, %94 ]
  ret ptr %99
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @clone_as_declaration(ptr noundef %0) unnamed_addr #10 {
  %2 = alloca [15 x i8], align 1
  %3 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !157
  %5 = icmp eq ptr %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = load i32, ptr %4, align 8, !tbaa !159
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %12, %1, %6
  br label %59

10:                                               ; preds = %6
  %11 = zext i32 %7 to i64
  br label %15

12:                                               ; preds = %15
  %13 = add nuw nsw i64 %16, 1
  %14 = icmp eq i64 %13, %11
  br i1 %14, label %9, label %15

15:                                               ; preds = %12, %10
  %16 = phi i64 [ 0, %10 ], [ %13, %12 ]
  %17 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %4, i64 0, i32 2, i64 %16
  %18 = load i32, ptr %17, align 8, !tbaa !161
  %19 = icmp eq i32 %18, 60
  br i1 %19, label %20, label %12

20:                                               ; preds = %15
  %21 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  %22 = load i32, ptr %0, align 8, !tbaa !185
  store i32 %22, ptr %21, align 8, !tbaa !185
  %23 = load ptr, ptr %3, align 8, !tbaa !157
  %24 = icmp eq ptr %23, null
  br i1 %24, label %244, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.die_struct, ptr %21, i64 0, i32 2
  br label %27

27:                                               ; preds = %50, %25
  %28 = phi i64 [ 0, %25 ], [ %56, %50 ]
  %29 = phi ptr [ %23, %25 ], [ %57, %50 ]
  %30 = load i32, ptr %29, align 8, !tbaa !159
  %31 = zext i32 %30 to i64
  %32 = icmp ult i64 %28, %31
  br i1 %32, label %33, label %244

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %29, i64 0, i32 2, i64 %28
  %35 = load ptr, ptr %26, align 8, !tbaa !6
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %38, ptr %26, align 8, !tbaa !157
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37, %33
  %41 = phi ptr [ %38, %37 ], [ %35, %33 ]
  %42 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %41, i64 0, i32 1
  %43 = load i32, ptr %42, align 4, !tbaa !201
  %44 = load i32, ptr %41, align 8, !tbaa !159
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %40, %37
  %47 = phi ptr [ %41, %40 ], [ null, %37 ]
  %48 = tail call ptr @vec_gc_o_reserve(ptr noundef %47, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %48, ptr %26, align 8, !tbaa !6
  %49 = load i32, ptr %48, align 8, !tbaa !159
  br label %50

50:                                               ; preds = %46, %40
  %51 = phi i32 [ %44, %40 ], [ %49, %46 ]
  %52 = phi ptr [ %41, %40 ], [ %48, %46 ]
  %53 = add i32 %51, 1
  store i32 %53, ptr %52, align 8, !tbaa !159
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %52, i64 0, i32 2, i64 %54
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %55, ptr noundef nonnull align 8 dereferenceable(32) %34, i64 32, i1 false), !tbaa.struct !179
  %56 = add nuw nsw i64 %28, 1
  %57 = load ptr, ptr %3, align 8, !tbaa !157
  %58 = icmp eq ptr %57, null
  br i1 %58, label %244, label %27, !llvm.loop !484

59:                                               ; preds = %9, %93
  %60 = phi ptr [ %94, %93 ], [ %0, %9 ]
  %61 = icmp eq ptr %60, null
  br i1 %61, label %145, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.die_struct, ptr %60, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !157
  %65 = icmp eq ptr %64, null
  br i1 %65, label %145, label %66

66:                                               ; preds = %62, %87
  %67 = phi ptr [ %88, %87 ], [ %64, %62 ]
  %68 = phi ptr [ %89, %87 ], [ %64, %62 ]
  %69 = phi i64 [ %91, %87 ], [ 0, %62 ]
  %70 = phi ptr [ %90, %87 ], [ null, %62 ]
  %71 = load i32, ptr %68, align 8, !tbaa !159
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %74, label %93

74:                                               ; preds = %66
  %75 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %68, i64 0, i32 2, i64 %69
  %76 = load i32, ptr %75, align 8, !tbaa !161
  switch i32 %76, label %87 [
    i32 71, label %96
    i32 49, label %77
  ]

77:                                               ; preds = %74
  %78 = getelementptr i8, ptr %75, i64 8
  %79 = load i32, ptr %78, align 8, !tbaa !163
  %80 = icmp eq i32 %79, 10
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  %82 = load ptr, ptr %63, align 8, !tbaa !157
  br label %83

83:                                               ; preds = %81, %77
  %84 = phi ptr [ %67, %77 ], [ %82, %81 ]
  %85 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %68, i64 0, i32 2, i64 %69, i32 1, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  br label %87

87:                                               ; preds = %74, %83
  %88 = phi ptr [ %84, %83 ], [ %67, %74 ]
  %89 = phi ptr [ %84, %83 ], [ %68, %74 ]
  %90 = phi ptr [ %86, %83 ], [ %70, %74 ]
  %91 = add nuw nsw i64 %69, 1
  %92 = icmp eq ptr %89, null
  br i1 %92, label %93, label %66, !llvm.loop !164

93:                                               ; preds = %87, %66
  %94 = phi ptr [ %90, %87 ], [ %70, %66 ]
  %95 = icmp eq ptr %94, null
  br i1 %95, label %145, label %59

96:                                               ; preds = %74
  %97 = getelementptr i8, ptr %75, i64 8
  %98 = load i32, ptr %97, align 8, !tbaa !163
  %99 = icmp eq i32 %98, 10
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %101

101:                                              ; preds = %96, %100
  %102 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %68, i64 0, i32 2, i64 %69, i32 1, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = icmp eq ptr %103, null
  br i1 %104, label %145, label %105

105:                                              ; preds = %101
  %106 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  %107 = load i32, ptr %103, align 8, !tbaa !185
  store i32 %107, ptr %106, align 8, !tbaa !185
  %108 = getelementptr inbounds %struct.die_struct, ptr %103, i64 0, i32 2
  %109 = load ptr, ptr %108, align 8, !tbaa !157
  %110 = icmp eq ptr %109, null
  br i1 %110, label %244, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.die_struct, ptr %106, i64 0, i32 2
  br label %113

113:                                              ; preds = %136, %111
  %114 = phi i64 [ 0, %111 ], [ %142, %136 ]
  %115 = phi ptr [ %109, %111 ], [ %143, %136 ]
  %116 = load i32, ptr %115, align 8, !tbaa !159
  %117 = zext i32 %116 to i64
  %118 = icmp ult i64 %114, %117
  br i1 %118, label %119, label %244

119:                                              ; preds = %113
  %120 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %115, i64 0, i32 2, i64 %114
  %121 = load ptr, ptr %112, align 8, !tbaa !6
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %119
  %124 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %124, ptr %112, align 8, !tbaa !157
  %125 = icmp eq ptr %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %123, %119
  %127 = phi ptr [ %124, %123 ], [ %121, %119 ]
  %128 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %127, i64 0, i32 1
  %129 = load i32, ptr %128, align 4, !tbaa !201
  %130 = load i32, ptr %127, align 8, !tbaa !159
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %132, label %136

132:                                              ; preds = %126, %123
  %133 = phi ptr [ %127, %126 ], [ null, %123 ]
  %134 = tail call ptr @vec_gc_o_reserve(ptr noundef %133, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %134, ptr %112, align 8, !tbaa !6
  %135 = load i32, ptr %134, align 8, !tbaa !159
  br label %136

136:                                              ; preds = %132, %126
  %137 = phi i32 [ %130, %126 ], [ %135, %132 ]
  %138 = phi ptr [ %127, %126 ], [ %134, %132 ]
  %139 = add i32 %137, 1
  store i32 %139, ptr %138, align 8, !tbaa !159
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %138, i64 0, i32 2, i64 %140
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %141, ptr noundef nonnull align 8 dereferenceable(32) %120, i64 32, i1 false), !tbaa.struct !179
  %142 = add nuw nsw i64 %114, 1
  %143 = load ptr, ptr %108, align 8, !tbaa !157
  %144 = icmp eq ptr %143, null
  br i1 %144, label %244, label %113, !llvm.loop !484

145:                                              ; preds = %62, %93, %59, %101
  %146 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  %147 = load i32, ptr %0, align 8, !tbaa !185
  store i32 %147, ptr %146, align 8, !tbaa !185
  %148 = load ptr, ptr %3, align 8, !tbaa !157
  %149 = icmp eq ptr %148, null
  br i1 %149, label %188, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.die_struct, ptr %146, i64 0, i32 2
  br label %152

152:                                              ; preds = %150, %184
  %153 = phi ptr [ %148, %150 ], [ %185, %184 ]
  %154 = phi i64 [ 0, %150 ], [ %186, %184 ]
  %155 = load i32, ptr %153, align 8, !tbaa !159
  %156 = zext i32 %155 to i64
  %157 = icmp ult i64 %154, %156
  br i1 %157, label %158, label %188

158:                                              ; preds = %152
  %159 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %153, i64 0, i32 2, i64 %154
  %160 = load i32, ptr %159, align 8, !tbaa !161
  switch i32 %160, label %184 [
    i32 52, label %161
    i32 29, label %161
    i32 63, label %161
    i32 3, label %161
    i32 73, label %161
    i32 76, label %161
    i32 8199, label %161
  ]

161:                                              ; preds = %158, %158, %158, %158, %158, %158, %158
  %162 = load ptr, ptr %151, align 8, !tbaa !6
  %163 = icmp eq ptr %162, null
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %165, ptr %151, align 8, !tbaa !157
  %166 = icmp eq ptr %165, null
  br i1 %166, label %173, label %167

167:                                              ; preds = %164, %161
  %168 = phi ptr [ %165, %164 ], [ %162, %161 ]
  %169 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %168, i64 0, i32 1
  %170 = load i32, ptr %169, align 4, !tbaa !201
  %171 = load i32, ptr %168, align 8, !tbaa !159
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %173, label %177

173:                                              ; preds = %167, %164
  %174 = phi ptr [ %168, %167 ], [ null, %164 ]
  %175 = tail call ptr @vec_gc_o_reserve(ptr noundef %174, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %175, ptr %151, align 8, !tbaa !6
  %176 = load i32, ptr %175, align 8, !tbaa !159
  br label %177

177:                                              ; preds = %173, %167
  %178 = phi i32 [ %171, %167 ], [ %176, %173 ]
  %179 = phi ptr [ %168, %167 ], [ %175, %173 ]
  %180 = add i32 %178, 1
  store i32 %180, ptr %179, align 8, !tbaa !159
  %181 = zext i32 %178 to i64
  %182 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %179, i64 0, i32 2, i64 %181
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %182, ptr noundef nonnull align 8 dereferenceable(32) %159, i64 32, i1 false), !tbaa.struct !179
  %183 = load ptr, ptr %3, align 8, !tbaa !157
  br label %184

184:                                              ; preds = %177, %158
  %185 = phi ptr [ %183, %177 ], [ %153, %158 ]
  %186 = add nuw i64 %154, 1
  %187 = icmp eq ptr %185, null
  br i1 %187, label %188, label %152, !llvm.loop !489

188:                                              ; preds = %184, %152, %145
  %189 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 1
  %190 = load ptr, ptr %189, align 8, !tbaa !17
  %191 = icmp eq ptr %190, null
  br i1 %191, label %218, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.die_struct, ptr %146, i64 0, i32 2
  %194 = load ptr, ptr %193, align 8, !tbaa !6
  %195 = icmp eq ptr %194, null
  br i1 %195, label %196, label %199

196:                                              ; preds = %192
  %197 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %197, ptr %193, align 8, !tbaa !157
  %198 = icmp eq ptr %197, null
  br i1 %198, label %205, label %199

199:                                              ; preds = %196, %192
  %200 = phi ptr [ %197, %196 ], [ %194, %192 ]
  %201 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %200, i64 0, i32 1
  %202 = load i32, ptr %201, align 4, !tbaa !201
  %203 = load i32, ptr %200, align 8, !tbaa !159
  %204 = icmp eq i32 %202, %203
  br i1 %204, label %205, label %209

205:                                              ; preds = %199, %196
  %206 = phi ptr [ %200, %199 ], [ null, %196 ]
  %207 = tail call ptr @vec_gc_o_reserve(ptr noundef %206, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %207, ptr %193, align 8, !tbaa !6
  %208 = load i32, ptr %207, align 8, !tbaa !159
  br label %209

209:                                              ; preds = %199, %205
  %210 = phi i32 [ %203, %199 ], [ %208, %205 ]
  %211 = phi ptr [ %200, %199 ], [ %207, %205 ]
  %212 = add i32 %210, 1
  store i32 %212, ptr %211, align 8, !tbaa !159
  %213 = zext i32 %210 to i64
  %214 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %211, i64 0, i32 2, i64 %213
  store i32 105, ptr %214, align 8, !tbaa.struct !179
  %215 = getelementptr inbounds i8, ptr %214, i64 8
  store i32 10, ptr %215, align 8, !tbaa.struct !202
  %216 = getelementptr inbounds i8, ptr %214, i64 16
  store ptr %0, ptr %216, align 8, !tbaa.struct !203
  %217 = getelementptr inbounds i8, ptr %214, i64 24
  store i32 0, ptr %217, align 8, !tbaa.struct !294
  br label %218

218:                                              ; preds = %188, %209
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %2)
  %219 = getelementptr inbounds %struct.die_struct, ptr %146, i64 0, i32 2
  %220 = load ptr, ptr %219, align 8, !tbaa !6
  %221 = icmp eq ptr %220, null
  br i1 %221, label %222, label %225

222:                                              ; preds = %218
  %223 = tail call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %223, ptr %219, align 8, !tbaa !157
  %224 = icmp eq ptr %223, null
  br i1 %224, label %231, label %225

225:                                              ; preds = %222, %218
  %226 = phi ptr [ %223, %222 ], [ %220, %218 ]
  %227 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %226, i64 0, i32 1
  %228 = load i32, ptr %227, align 4, !tbaa !201
  %229 = load i32, ptr %226, align 8, !tbaa !159
  %230 = icmp eq i32 %228, %229
  br i1 %230, label %231, label %235

231:                                              ; preds = %225, %222
  %232 = phi ptr [ %226, %225 ], [ null, %222 ]
  %233 = tail call ptr @vec_gc_o_reserve(ptr noundef %232, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %233, ptr %219, align 8, !tbaa !6
  %234 = load i32, ptr %233, align 8, !tbaa !159
  br label %235

235:                                              ; preds = %225, %231
  %236 = phi i32 [ %229, %225 ], [ %234, %231 ]
  %237 = phi ptr [ %226, %225 ], [ %233, %231 ]
  %238 = add i32 %236, 1
  store i32 %238, ptr %237, align 8, !tbaa !159
  %239 = zext i32 %236 to i64
  %240 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %237, i64 0, i32 2, i64 %239
  store i32 60, ptr %240, align 8, !tbaa.struct !179
  %241 = getelementptr inbounds i8, ptr %240, i64 8
  store i32 9, ptr %241, align 8, !tbaa.struct !202
  %242 = getelementptr inbounds i8, ptr %240, i64 16
  store i8 1, ptr %242, align 8, !tbaa.struct !203
  %243 = getelementptr inbounds i8, ptr %240, i64 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %243, ptr noundef nonnull align 1 dereferenceable(15) %2, i64 15, i1 false), !tbaa.struct !362
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %2)
  br label %244

244:                                              ; preds = %50, %27, %136, %113, %105, %20, %235
  %245 = phi ptr [ %146, %235 ], [ %21, %20 ], [ %106, %105 ], [ %106, %113 ], [ %106, %136 ], [ %21, %27 ], [ %21, %50 ]
  ret ptr %245
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @generate_skeleton_bottom_up(ptr noundef %0) unnamed_addr #10 {
  %2 = alloca %struct.skeleton_chain_struct, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #31
  %3 = getelementptr inbounds %struct.skeleton_chain_struct, ptr %2, i64 0, i32 2
  store ptr %0, ptr %3, align 8, !tbaa !490
  %4 = load ptr, ptr %0, align 8, !tbaa !296
  %5 = getelementptr inbounds %struct.die_struct, ptr %4, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !175
  %7 = icmp eq ptr %6, null
  br i1 %7, label %151, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.die_struct, ptr %6, i64 0, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !176
  %11 = getelementptr inbounds %struct.skeleton_chain_struct, ptr %2, i64 0, i32 1
  %12 = getelementptr inbounds %struct.skeleton_chain_struct, ptr %0, i64 0, i32 1
  br label %13

13:                                               ; preds = %8, %148
  %14 = phi ptr [ null, %8 ], [ %24, %148 ]
  %15 = phi ptr [ %10, %8 ], [ %30, %148 ]
  %16 = phi ptr [ %6, %8 ], [ %149, %148 ]
  %17 = icmp eq ptr %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.die_struct, ptr %14, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !176
  %21 = icmp eq ptr %20, %16
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %13
  br label %23

23:                                               ; preds = %22, %18
  %24 = phi ptr [ %16, %22 ], [ %14, %18 ]
  %25 = icmp eq ptr %15, %6
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !176
  br label %29

29:                                               ; preds = %23, %26
  %30 = phi ptr [ %28, %26 ], [ null, %23 ]
  store ptr %15, ptr %2, align 8, !tbaa !296
  store ptr null, ptr %11, align 8, !tbaa !298
  %31 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !157
  %33 = icmp eq ptr %32, null
  br i1 %33, label %148, label %34

34:                                               ; preds = %29
  %35 = load i32, ptr %32, align 8, !tbaa !159
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %148, label %37

37:                                               ; preds = %34
  %38 = zext i32 %35 to i64
  br label %42

39:                                               ; preds = %42
  %40 = add nuw nsw i64 %43, 1
  %41 = icmp eq i64 %40, %38
  br i1 %41, label %148, label %42

42:                                               ; preds = %39, %37
  %43 = phi i64 [ 0, %37 ], [ %40, %39 ]
  %44 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %32, i64 0, i32 2, i64 %43
  %45 = load i32, ptr %44, align 8, !tbaa !161
  %46 = icmp eq i32 %45, 60
  br i1 %46, label %47, label %39

47:                                               ; preds = %42
  %48 = call ptr @ggc_alloc_cleared_stat(i64 noundef 88) #31
  %49 = load i32, ptr %15, align 8, !tbaa !185
  store i32 %49, ptr %48, align 8, !tbaa !185
  %50 = load ptr, ptr %31, align 8, !tbaa !157
  %51 = icmp eq ptr %50, null
  br i1 %51, label %86, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.die_struct, ptr %48, i64 0, i32 2
  br label %54

54:                                               ; preds = %77, %52
  %55 = phi i64 [ 0, %52 ], [ %83, %77 ]
  %56 = phi ptr [ %50, %52 ], [ %84, %77 ]
  %57 = load i32, ptr %56, align 8, !tbaa !159
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %55, %58
  br i1 %59, label %60, label %86

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %56, i64 0, i32 2, i64 %55
  %62 = load ptr, ptr %53, align 8, !tbaa !6
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = call ptr @vec_gc_o_reserve_exact(ptr noundef null, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %65, ptr %53, align 8, !tbaa !157
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %64, %60
  %68 = phi ptr [ %65, %64 ], [ %62, %60 ]
  %69 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %68, i64 0, i32 1
  %70 = load i32, ptr %69, align 4, !tbaa !201
  %71 = load i32, ptr %68, align 8, !tbaa !159
  %72 = icmp eq i32 %70, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %67, %64
  %74 = phi ptr [ %68, %67 ], [ null, %64 ]
  %75 = call ptr @vec_gc_o_reserve(ptr noundef %74, i32 noundef 1, i64 noundef 8, i64 noundef 32) #31
  store ptr %75, ptr %53, align 8, !tbaa !6
  %76 = load i32, ptr %75, align 8, !tbaa !159
  br label %77

77:                                               ; preds = %73, %67
  %78 = phi i32 [ %71, %67 ], [ %76, %73 ]
  %79 = phi ptr [ %68, %67 ], [ %75, %73 ]
  %80 = add i32 %78, 1
  store i32 %80, ptr %79, align 8, !tbaa !159
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %79, i64 0, i32 2, i64 %81
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %82, ptr noundef nonnull align 8 dereferenceable(32) %61, i64 32, i1 false), !tbaa.struct !179
  %83 = add nuw nsw i64 %55, 1
  %84 = load ptr, ptr %31, align 8, !tbaa !157
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %54, !llvm.loop !484

86:                                               ; preds = %54, %77, %47
  %87 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 4
  %88 = load ptr, ptr %87, align 8, !tbaa !175
  %89 = getelementptr inbounds %struct.die_struct, ptr %48, i64 0, i32 4
  store ptr %88, ptr %89, align 8, !tbaa !175
  store ptr null, ptr %87, align 8, !tbaa !175
  %90 = load ptr, ptr %89, align 8, !tbaa !175
  %91 = icmp eq ptr %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %86, %92
  %93 = phi ptr [ %95, %92 ], [ %90, %86 ]
  %94 = getelementptr inbounds %struct.die_struct, ptr %93, i64 0, i32 5
  %95 = load ptr, ptr %94, align 8, !tbaa !176
  %96 = getelementptr inbounds %struct.die_struct, ptr %95, i64 0, i32 3
  store ptr %48, ptr %96, align 8, !tbaa !174
  %97 = icmp eq ptr %95, %90
  br i1 %97, label %98, label %92, !llvm.loop !491

98:                                               ; preds = %92, %86
  %99 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !174
  %101 = getelementptr inbounds %struct.die_struct, ptr %24, i64 0, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !174
  %103 = icmp eq ptr %100, %102
  br i1 %103, label %105, label %104

104:                                              ; preds = %98
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7536, ptr noundef nonnull @.str.5) #31
  br label %105

105:                                              ; preds = %104, %98
  %106 = getelementptr inbounds %struct.die_struct, ptr %24, i64 0, i32 5
  %107 = load ptr, ptr %106, align 8, !tbaa !176
  %108 = icmp eq ptr %107, %15
  br i1 %108, label %110, label %109

109:                                              ; preds = %105
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7537, ptr noundef nonnull @.str.5) #31
  br label %110

110:                                              ; preds = %109, %105
  %111 = getelementptr inbounds %struct.die_struct, ptr %48, i64 0, i32 3
  store ptr %100, ptr %111, align 8, !tbaa !174
  %112 = icmp eq ptr %24, %15
  br i1 %112, label %113, label %118

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.die_struct, ptr %100, i64 0, i32 4
  %115 = load ptr, ptr %114, align 8, !tbaa !175
  %116 = icmp eq ptr %115, %15
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7542, ptr noundef nonnull @.str.5) #31
  br label %121

118:                                              ; preds = %110
  store ptr %48, ptr %106, align 8, !tbaa !176
  %119 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  %120 = load ptr, ptr %119, align 8, !tbaa !176
  br label %121

121:                                              ; preds = %118, %117, %113
  %122 = phi ptr [ %120, %118 ], [ %48, %113 ], [ %48, %117 ]
  %123 = getelementptr inbounds %struct.die_struct, ptr %48, i64 0, i32 5
  store ptr %122, ptr %123, align 8, !tbaa !176
  %124 = load ptr, ptr %99, align 8, !tbaa !174
  %125 = getelementptr inbounds %struct.die_struct, ptr %124, i64 0, i32 4
  %126 = load ptr, ptr %125, align 8, !tbaa !175
  %127 = icmp eq ptr %126, %15
  br i1 %127, label %128, label %129

128:                                              ; preds = %121
  store ptr %48, ptr %125, align 8, !tbaa !175
  br label %129

129:                                              ; preds = %121, %128
  call fastcc void @generate_skeleton_ancestor_tree(ptr noundef nonnull %0)
  %130 = load ptr, ptr %12, align 8, !tbaa !298
  %131 = icmp eq ptr %130, null
  br i1 %131, label %147, label %132

132:                                              ; preds = %129
  %133 = icmp eq ptr %130, %15
  br i1 %133, label %134, label %135

134:                                              ; preds = %132
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %135

135:                                              ; preds = %134, %132
  store ptr %130, ptr %99, align 8, !tbaa !174
  %136 = getelementptr inbounds %struct.die_struct, ptr %130, i64 0, i32 4
  %137 = load ptr, ptr %136, align 8, !tbaa !175
  %138 = icmp eq ptr %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.die_struct, ptr %137, i64 0, i32 5
  %141 = load ptr, ptr %140, align 8, !tbaa !176
  %142 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  store ptr %141, ptr %142, align 8, !tbaa !176
  br label %145

143:                                              ; preds = %135
  %144 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  br label %145

145:                                              ; preds = %143, %139
  %146 = phi ptr [ %144, %143 ], [ %140, %139 ]
  store ptr %15, ptr %146, align 8, !tbaa !176
  store ptr %15, ptr %136, align 8, !tbaa !175
  br label %147

147:                                              ; preds = %129, %145
  store ptr %15, ptr %11, align 8, !tbaa !298
  br label %148

148:                                              ; preds = %39, %34, %29, %147
  %149 = phi ptr [ %48, %147 ], [ %15, %29 ], [ %15, %34 ], [ %15, %39 ]
  call fastcc void @generate_skeleton_bottom_up(ptr noundef nonnull %2)
  %150 = icmp eq ptr %30, null
  br i1 %150, label %151, label %13, !llvm.loop !492

151:                                              ; preds = %148, %1
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @generate_skeleton_ancestor_tree(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.skeleton_chain_struct, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !298
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = load ptr, ptr %0, align 8, !tbaa !296
  %7 = tail call fastcc ptr @clone_as_declaration(ptr noundef %6)
  store ptr %7, ptr %2, align 8, !tbaa !298
  %8 = getelementptr inbounds %struct.skeleton_chain_struct, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !490
  %10 = icmp eq ptr %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %5
  tail call fastcc void @generate_skeleton_ancestor_tree(ptr noundef nonnull %9)
  %12 = load ptr, ptr %8, align 8, !tbaa !490
  %13 = getelementptr inbounds %struct.skeleton_chain_struct, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !298
  %15 = load ptr, ptr %2, align 8, !tbaa !298
  %16 = icmp ne ptr %14, null
  %17 = icmp ne ptr %15, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %35

19:                                               ; preds = %11
  %20 = icmp eq ptr %14, %15
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %22

22:                                               ; preds = %21, %19
  %23 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 3
  store ptr %14, ptr %23, align 8, !tbaa !174
  %24 = getelementptr inbounds %struct.die_struct, ptr %14, i64 0, i32 4
  %25 = load ptr, ptr %24, align 8, !tbaa !175
  %26 = icmp eq ptr %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.die_struct, ptr %25, i64 0, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !176
  %30 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  store ptr %29, ptr %30, align 8, !tbaa !176
  br label %33

31:                                               ; preds = %22
  %32 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  br label %33

33:                                               ; preds = %31, %27
  %34 = phi ptr [ %32, %31 ], [ %28, %27 ]
  store ptr %15, ptr %34, align 8, !tbaa !176
  store ptr %15, ptr %24, align 8, !tbaa !175
  br label %35

35:                                               ; preds = %33, %11, %1, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @mark_dies(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !235
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10026, ptr noundef nonnull @.str.5) #31
  br label %6

6:                                                ; preds = %1, %5
  store i32 1, ptr %2, align 8, !tbaa !235
  %7 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !175
  %9 = icmp eq ptr %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi ptr [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !176
  tail call fastcc void @mark_dies(ptr noundef %13)
  %14 = load ptr, ptr %7, align 8, !tbaa !175
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %10, !llvm.loop !493

16:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @htab_decl_hash(ptr nocapture noundef readonly %0) #10 {
  %2 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %3 = load ptr, ptr %0, align 8, !tbaa !488
  %4 = tail call i32 %2(ptr noundef %3) #31
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @htab_decl_eq(ptr nocapture noundef readonly %0, ptr noundef readnone %1) #17 {
  %3 = load ptr, ptr %0, align 8, !tbaa !488
  %4 = icmp eq ptr %3, %1
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: mustprogress nounwind sspstrong willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal void @htab_decl_del(ptr nocapture noundef %0) #24 {
  tail call void @free(ptr noundef %0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @copy_decls_walk(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !157
  %6 = icmp eq ptr %5, null
  br i1 %6, label %75, label %7

7:                                                ; preds = %3, %71
  %8 = phi i64 [ %72, %71 ], [ 0, %3 ]
  %9 = phi ptr [ %73, %71 ], [ %5, %3 ]
  %10 = load i32, ptr %9, align 8, !tbaa !159
  %11 = zext i32 %10 to i64
  %12 = icmp ult i64 %8, %11
  br i1 %12, label %13, label %75

13:                                               ; preds = %7
  %14 = getelementptr %struct.VEC_dw_attr_node_base, ptr %9, i64 0, i32 2, i64 %8, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !163
  %16 = icmp eq i32 %15, 10
  br i1 %16, label %17, label %71

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %9, i64 0, i32 2, i64 %8, i32 1, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.die_struct, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.die_struct, ptr %19, i64 0, i32 9
  %23 = load i32, ptr %22, align 8, !tbaa !235
  %24 = icmp ne i32 %23, 0
  %25 = icmp ne ptr %21, null
  %26 = select i1 %24, i1 true, i1 %25
  br i1 %26, label %71, label %27

27:                                               ; preds = %17
  %28 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !6
  %29 = tail call i32 %28(ptr noundef nonnull %19) #31
  %30 = tail call ptr @htab_find_slot_with_hash(ptr noundef %2, ptr noundef nonnull %19, i32 noundef %29, i32 noundef 1) #31
  %31 = load ptr, ptr %30, align 8, !tbaa !6
  %32 = icmp eq ptr %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.decl_table_entry, ptr %31, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !486
  store ptr %35, ptr %18, align 8, !tbaa !17
  br label %71

36:                                               ; preds = %27
  %37 = tail call fastcc ptr @clone_tree(ptr noundef nonnull %19)
  tail call fastcc void @mark_dies(ptr noundef %37)
  %38 = tail call ptr @xcalloc(i64 noundef 1, i64 noundef 16) #31
  store ptr %19, ptr %38, align 8, !tbaa !488
  %39 = getelementptr inbounds %struct.decl_table_entry, ptr %38, i64 0, i32 1
  store ptr %37, ptr %39, align 8, !tbaa !486
  store ptr %38, ptr %30, align 8, !tbaa !6
  %40 = getelementptr inbounds %struct.die_struct, ptr %19, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !174
  %42 = icmp eq ptr %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = load i32, ptr %41, align 8, !tbaa !185
  switch i32 %44, label %45 [
    i32 17, label %47
    i32 65, label %47
  ]

45:                                               ; preds = %43
  %46 = tail call fastcc ptr @copy_ancestor_tree(ptr noundef %0, ptr noundef nonnull %41, ptr noundef %2)
  br label %47

47:                                               ; preds = %43, %43, %45, %36
  %48 = phi ptr [ %46, %45 ], [ %0, %43 ], [ %0, %36 ], [ %0, %43 ]
  %49 = icmp ne ptr %48, null
  %50 = icmp ne ptr %37, null
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %68

52:                                               ; preds = %47
  %53 = icmp eq ptr %48, %37
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7596, ptr noundef nonnull @.str.5) #31
  br label %55

55:                                               ; preds = %54, %52
  %56 = getelementptr inbounds %struct.die_struct, ptr %37, i64 0, i32 3
  store ptr %48, ptr %56, align 8, !tbaa !174
  %57 = getelementptr inbounds %struct.die_struct, ptr %48, i64 0, i32 4
  %58 = load ptr, ptr %57, align 8, !tbaa !175
  %59 = icmp eq ptr %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.die_struct, ptr %58, i64 0, i32 5
  %62 = load ptr, ptr %61, align 8, !tbaa !176
  %63 = getelementptr inbounds %struct.die_struct, ptr %37, i64 0, i32 5
  store ptr %62, ptr %63, align 8, !tbaa !176
  br label %66

64:                                               ; preds = %55
  %65 = getelementptr inbounds %struct.die_struct, ptr %37, i64 0, i32 5
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi ptr [ %65, %64 ], [ %61, %60 ]
  store ptr %37, ptr %67, align 8, !tbaa !176
  store ptr %37, ptr %57, align 8, !tbaa !175
  br label %68

68:                                               ; preds = %47, %66
  store ptr %37, ptr %18, align 8, !tbaa !17
  %69 = icmp eq ptr %48, %0
  br i1 %69, label %71, label %70

70:                                               ; preds = %68
  tail call fastcc void @copy_decls_walk(ptr noundef %0, ptr noundef %48, ptr noundef %2)
  br label %71

71:                                               ; preds = %17, %68, %70, %33, %13
  %72 = add nuw i64 %8, 1
  %73 = load ptr, ptr %4, align 8, !tbaa !157
  %74 = icmp eq ptr %73, null
  br i1 %74, label %75, label %7, !llvm.loop !494

75:                                               ; preds = %71, %7, %3
  %76 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  %77 = load ptr, ptr %76, align 8, !tbaa !175
  %78 = icmp eq ptr %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75, %79
  %80 = phi ptr [ %82, %79 ], [ %77, %75 ]
  %81 = getelementptr inbounds %struct.die_struct, ptr %80, i64 0, i32 5
  %82 = load ptr, ptr %81, align 8, !tbaa !176
  tail call fastcc void @copy_decls_walk(ptr noundef %0, ptr noundef %82, ptr noundef %2)
  %83 = load ptr, ptr %76, align 8, !tbaa !175
  %84 = icmp eq ptr %82, %83
  br i1 %84, label %85, label %79, !llvm.loop !495

85:                                               ; preds = %79, %75
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @unmark_dies(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %3 = icmp slt i32 %2, 4
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  %6 = load i32, ptr %5, align 8, !tbaa !235
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10040, ptr noundef nonnull @.str.5) #31
  br label %9

9:                                                ; preds = %8, %4, %1
  %10 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 9
  store i32 0, ptr %10, align 8, !tbaa !235
  %11 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %12 = load ptr, ptr %11, align 8, !tbaa !175
  %13 = icmp eq ptr %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %9, %14
  %15 = phi ptr [ %17, %14 ], [ %12, %9 ]
  %16 = getelementptr inbounds %struct.die_struct, ptr %15, i64 0, i32 5
  %17 = load ptr, ptr %16, align 8, !tbaa !176
  tail call fastcc void @unmark_dies(ptr noundef %17)
  %18 = load ptr, ptr %11, align 8, !tbaa !175
  %19 = icmp eq ptr %17, %18
  br i1 %19, label %20, label %14, !llvm.loop !496

20:                                               ; preds = %14, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @build_abbrev_table(ptr noundef %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !157
  %4 = icmp eq ptr %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %40
  %6 = phi ptr [ %41, %40 ], [ %3, %1 ]
  %7 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %8 = load i32, ptr %6, align 8, !tbaa !159
  %9 = zext i32 %8 to i64
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %16, label %11

11:                                               ; preds = %5, %40, %1
  %12 = load i32, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  %13 = icmp ugt i32 %12, 1
  br i1 %13, label %14, label %108

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  br label %44

16:                                               ; preds = %5
  %17 = getelementptr %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %7, i32 1
  %18 = load i32, ptr %17, align 8, !tbaa !163
  %19 = icmp eq i32 %18, 10
  br i1 %19, label %20, label %40

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %7, i32 1, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.die_struct, ptr %22, i64 0, i32 9
  %24 = load i32, ptr %23, align 8, !tbaa !235
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %20
  %27 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %28 = icmp sgt i32 %27, 3
  br i1 %28, label %37, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.die_struct, ptr %22, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 9808, ptr noundef nonnull @.str.5) #31
  %34 = load i32, ptr %17, align 8, !tbaa !163
  %35 = icmp eq i32 %34, 10
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7166, ptr noundef nonnull @.str.5) #31
  br label %37

37:                                               ; preds = %26, %29, %33, %36
  %38 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %6, i64 0, i32 2, i64 %7, i32 1, i32 1, i32 0, i32 1
  store i32 1, ptr %38, align 8, !tbaa !17
  %39 = load ptr, ptr %2, align 8, !tbaa !157
  br label %40

40:                                               ; preds = %16, %20, %37
  %41 = phi ptr [ %6, %16 ], [ %6, %20 ], [ %39, %37 ]
  %42 = add nuw i64 %7, 1
  %43 = icmp eq ptr %41, null
  br i1 %43, label %11, label %5, !llvm.loop !497

44:                                               ; preds = %14, %101
  %45 = phi i32 [ %12, %14 ], [ %102, %101 ]
  %46 = phi i64 [ 1, %14 ], [ %103, %101 ]
  %47 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8, !tbaa !6
  %50 = load i32, ptr %49, align 8, !tbaa !185
  %51 = load i32, ptr %0, align 8, !tbaa !185
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %53, label %101

53:                                               ; preds = %44
  %54 = getelementptr inbounds %struct.die_struct, ptr %49, i64 0, i32 4
  %55 = load ptr, ptr %54, align 8, !tbaa !175
  %56 = icmp eq ptr %55, null
  %57 = load ptr, ptr %15, align 8, !tbaa !175
  %58 = icmp ne ptr %57, null
  %59 = xor i1 %56, %58
  br i1 %59, label %60, label %101

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.die_struct, ptr %49, i64 0, i32 2
  %62 = load ptr, ptr %61, align 8, !tbaa !157
  %63 = icmp eq ptr %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = load i32, ptr %62, align 8, !tbaa !159
  %66 = load ptr, ptr %2, align 8, !tbaa !157
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %73

68:                                               ; preds = %60
  %69 = load ptr, ptr %2, align 8, !tbaa !157
  %70 = icmp eq ptr %69, null
  br i1 %70, label %108, label %73

71:                                               ; preds = %64
  %72 = icmp eq i32 %65, 0
  br i1 %72, label %108, label %101

73:                                               ; preds = %64, %68
  %74 = phi ptr [ %69, %68 ], [ %66, %64 ]
  %75 = phi i32 [ 0, %68 ], [ %65, %64 ]
  %76 = load i32, ptr %74, align 8, !tbaa !159
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %82, label %101

78:                                               ; preds = %95
  %79 = add nuw nsw i64 %83, 1
  %80 = load ptr, ptr %2, align 8, !tbaa !157
  %81 = icmp eq ptr %80, null
  br i1 %81, label %106, label %82, !llvm.loop !498

82:                                               ; preds = %73, %78
  %83 = phi i64 [ %79, %78 ], [ 0, %73 ]
  %84 = phi ptr [ %80, %78 ], [ %74, %73 ]
  %85 = load i32, ptr %84, align 8, !tbaa !159
  %86 = zext i32 %85 to i64
  %87 = icmp ult i64 %83, %86
  br i1 %87, label %88, label %106

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %84, i64 0, i32 2, i64 %83
  %90 = load ptr, ptr %61, align 8, !tbaa !157
  %91 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %90, i64 0, i32 2, i64 %83
  %92 = load i32, ptr %91, align 8, !tbaa !161
  %93 = load i32, ptr %89, align 8, !tbaa !161
  %94 = icmp eq i32 %92, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %88
  %96 = tail call fastcc i32 @value_format(ptr noundef nonnull %91)
  %97 = tail call fastcc i32 @value_format(ptr noundef nonnull %89)
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %78, label %99

99:                                               ; preds = %88, %95
  %100 = load i32, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  br label %101

101:                                              ; preds = %73, %99, %44, %53, %71
  %102 = phi i32 [ %100, %99 ], [ %45, %44 ], [ %45, %53 ], [ %45, %71 ], [ %45, %73 ]
  %103 = add nuw nsw i64 %46, 1
  %104 = zext i32 %102 to i64
  %105 = icmp ult i64 %103, %104
  br i1 %105, label %44, label %108, !llvm.loop !499

106:                                              ; preds = %82, %78
  %107 = load i32, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  br label %108

108:                                              ; preds = %68, %101, %71, %106, %11
  %109 = phi i32 [ %12, %11 ], [ %107, %106 ], [ %45, %68 ], [ %45, %71 ], [ %102, %101 ]
  %110 = phi i64 [ 1, %11 ], [ %46, %106 ], [ %46, %68 ], [ %46, %71 ], [ %103, %101 ]
  %111 = zext i32 %109 to i64
  %112 = icmp ult i64 %110, %111
  br i1 %112, label %135, label %113

113:                                              ; preds = %108
  %114 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  %115 = icmp ult i32 %109, %114
  %116 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  br i1 %115, label %130, label %117

117:                                              ; preds = %113
  %118 = add i32 %114, 256
  %119 = zext i32 %118 to i64
  %120 = shl nuw nsw i64 %119, 3
  %121 = tail call ptr @ggc_realloc_stat(ptr noundef %116, i64 noundef %120) #31
  store ptr %121, ptr @abbrev_die_table, align 8, !tbaa !6
  %122 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds ptr, ptr %121, i64 %123
  %125 = sub i32 %118, %122
  %126 = zext i32 %125 to i64
  %127 = shl nuw nsw i64 %126, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %124, i8 0, i64 %127, i1 false)
  store i32 %118, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  %128 = load i32, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  %129 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  br label %130

130:                                              ; preds = %117, %113
  %131 = phi ptr [ %129, %117 ], [ %116, %113 ]
  %132 = phi i32 [ %128, %117 ], [ %109, %113 ]
  %133 = add i32 %132, 1
  store i32 %133, ptr @abbrev_die_table_in_use, align 4, !tbaa !21
  %134 = getelementptr inbounds ptr, ptr %131, i64 %110
  store ptr %0, ptr %134, align 8, !tbaa !6
  br label %135

135:                                              ; preds = %130, %108
  %136 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 8
  store i64 %110, ptr %136, align 8, !tbaa !500
  %137 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %138 = load ptr, ptr %137, align 8, !tbaa !175
  %139 = icmp eq ptr %138, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %135, %140
  %141 = phi ptr [ %143, %140 ], [ %138, %135 ]
  %142 = getelementptr inbounds %struct.die_struct, ptr %141, i64 0, i32 5
  %143 = load ptr, ptr %142, align 8, !tbaa !176
  tail call fastcc void @build_abbrev_table(ptr noundef %143)
  %144 = load ptr, ptr %137, align 8, !tbaa !175
  %145 = icmp eq ptr %143, %144
  br i1 %145, label %146, label %140, !llvm.loop !501

146:                                              ; preds = %140, %135
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @calc_die_sizes(ptr nocapture noundef %0) unnamed_addr #10 {
  %2 = load i64, ptr @next_die_offset, align 8, !tbaa !38
  %3 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 7
  store i64 %2, ptr %3, align 8, !tbaa !214
  %4 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 8
  %5 = load i64, ptr %4, align 8, !tbaa !500
  %6 = tail call i32 @size_of_uleb128(i64 noundef %5) #31
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !157
  %10 = icmp eq ptr %9, null
  br i1 %10, label %215, label %11

11:                                               ; preds = %1, %210
  %12 = phi ptr [ %213, %210 ], [ %9, %1 ]
  %13 = phi i64 [ %211, %210 ], [ %7, %1 ]
  %14 = phi i32 [ %212, %210 ], [ 0, %1 ]
  %15 = load i32, ptr %12, align 8, !tbaa !159
  %16 = icmp ugt i32 %15, %14
  br i1 %16, label %17, label %215

17:                                               ; preds = %11
  %18 = zext i32 %14 to i64
  %19 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load i32, ptr %20, align 8, !tbaa !163
  switch i32 %21, label %209 [
    i32 0, label %22
    i32 1, label %24
    i32 2, label %26
    i32 3, label %79
    i32 4, label %81
    i32 5, label %83
    i32 6, label %89
    i32 7, label %104
    i32 8, label %106
    i32 9, label %129
    i32 10, label %139
    i32 11, label %152
    i32 12, label %154
    i32 13, label %156
    i32 15, label %156
    i32 14, label %158
    i32 16, label %170
    i32 17, label %207
  ]

22:                                               ; preds = %17
  %23 = add i64 %13, 4
  br label %210

24:                                               ; preds = %17
  %25 = add i64 %13, 4
  br label %210

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = icmp eq ptr %28, null
  br i1 %29, label %55, label %30

30:                                               ; preds = %26, %37
  %31 = phi i64 [ %39, %37 ], [ 0, %26 ]
  %32 = phi ptr [ %40, %37 ], [ %28, %26 ]
  %33 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %32, i64 0, i32 1
  %34 = load i16, ptr %33, align 8
  %35 = trunc i16 %34 to i8
  switch i8 %35, label %37 [
    i8 47, label %36
    i8 40, label %36
  ]

36:                                               ; preds = %30, %30
  br label %42

37:                                               ; preds = %30
  %38 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %32)
  %39 = add i64 %38, %31
  %40 = load ptr, ptr %32, align 8, !tbaa !57
  %41 = icmp eq ptr %40, null
  br i1 %41, label %51, label %30, !llvm.loop !59

42:                                               ; preds = %36, %42
  %43 = phi i64 [ %48, %42 ], [ 0, %36 ]
  %44 = phi ptr [ %49, %42 ], [ %28, %36 ]
  %45 = trunc i64 %43 to i32
  %46 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %44, i64 0, i32 2
  store i32 %45, ptr %46, align 4, !tbaa !60
  %47 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %44)
  %48 = add i64 %47, %43
  %49 = load ptr, ptr %44, align 8, !tbaa !57
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %42, !llvm.loop !61

51:                                               ; preds = %37, %42
  %52 = phi i64 [ %48, %42 ], [ %39, %37 ]
  %53 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %54 = icmp sgt i32 %53, 3
  br i1 %54, label %58, label %61

55:                                               ; preds = %26
  %56 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %57 = icmp sgt i32 %56, 3
  br i1 %57, label %58, label %67

58:                                               ; preds = %55, %51
  %59 = phi i64 [ 0, %55 ], [ %52, %51 ]
  %60 = tail call i32 @size_of_uleb128(i64 noundef %59) #31
  br label %73

61:                                               ; preds = %51
  %62 = icmp eq i64 %52, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %61
  %64 = tail call i32 @floor_log2(i64 noundef %52) #31
  %65 = sdiv i32 %64, 8
  %66 = sext i32 %65 to i64
  br label %67

67:                                               ; preds = %63, %61, %55
  %68 = phi i64 [ %52, %63 ], [ 0, %61 ], [ 0, %55 ]
  %69 = phi i64 [ %66, %63 ], [ 0, %61 ], [ 0, %55 ]
  %70 = tail call i32 @floor_log2(i64 noundef %69) #31
  %71 = add nsw i32 %70, 1
  %72 = shl nuw i32 1, %71
  br label %73

73:                                               ; preds = %67, %58
  %74 = phi i64 [ %59, %58 ], [ %68, %67 ]
  %75 = phi i32 [ %60, %58 ], [ %72, %67 ]
  %76 = sext i32 %75 to i64
  %77 = add i64 %74, %13
  %78 = add i64 %77, %76
  br label %210

79:                                               ; preds = %17
  %80 = add i64 %13, 4
  br label %210

81:                                               ; preds = %17
  %82 = add i64 %13, 4
  br label %210

83:                                               ; preds = %17
  %84 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1
  %85 = load i64, ptr %84, align 8, !tbaa !17
  %86 = tail call i32 @size_of_sleb128(i64 noundef %85) #31
  %87 = sext i32 %86 to i64
  %88 = add i64 %13, %87
  br label %210

89:                                               ; preds = %17
  %90 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1
  %91 = load i64, ptr %90, align 8, !tbaa !17
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = tail call i32 @floor_log2(i64 noundef %91) #31
  %95 = sdiv i32 %94, 8
  %96 = sext i32 %95 to i64
  br label %97

97:                                               ; preds = %93, %89
  %98 = phi i64 [ %96, %93 ], [ 0, %89 ]
  %99 = tail call i32 @floor_log2(i64 noundef %98) #31
  %100 = add nsw i32 %99, 1
  %101 = shl nuw i32 1, %100
  %102 = sext i32 %101 to i64
  %103 = add i64 %13, %102
  br label %210

104:                                              ; preds = %17
  %105 = add i64 %13, 17
  br label %210

106:                                              ; preds = %17
  %107 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1, i32 0, i32 1
  %108 = load i32, ptr %107, align 8, !tbaa !17
  %109 = getelementptr inbounds i8, ptr %19, i64 28
  %110 = load i32, ptr %109, align 4, !tbaa !17
  %111 = mul i32 %110, %108
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %106
  %114 = zext i32 %111 to i64
  %115 = tail call i32 @floor_log2(i64 noundef %114) #31
  %116 = sdiv i32 %115, 8
  %117 = sext i32 %116 to i64
  br label %118

118:                                              ; preds = %113, %106
  %119 = phi i64 [ %117, %113 ], [ 0, %106 ]
  %120 = tail call i32 @floor_log2(i64 noundef %119) #31
  %121 = add nsw i32 %120, 1
  %122 = shl nuw i32 1, %121
  %123 = load i32, ptr %107, align 8, !tbaa !17
  %124 = load i32, ptr %109, align 4, !tbaa !17
  %125 = mul i32 %124, %123
  %126 = add i32 %125, %122
  %127 = zext i32 %126 to i64
  %128 = add i64 %13, %127
  br label %210

129:                                              ; preds = %17
  %130 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %131 = icmp sgt i32 %130, 3
  br i1 %131, label %132, label %137

132:                                              ; preds = %129
  %133 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1
  %134 = load i8, ptr %133, align 8, !tbaa !17
  %135 = icmp eq i8 %134, 1
  br i1 %135, label %210, label %136

136:                                              ; preds = %132
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 9945, ptr noundef nonnull @.str.5) #31
  br label %210

137:                                              ; preds = %129
  %138 = add i64 %13, 1
  br label %210

139:                                              ; preds = %17
  %140 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1, i32 0, i32 1
  %141 = load i32, ptr %140, align 8, !tbaa !17
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %150, label %143

143:                                              ; preds = %139
  %144 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %145 = icmp sgt i32 %144, 3
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = add i64 %13, 8
  br label %210

148:                                              ; preds = %143
  %149 = add i64 %13, 4
  br label %210

150:                                              ; preds = %139
  %151 = add i64 %13, 4
  br label %210

152:                                              ; preds = %17
  %153 = add i64 %13, 4
  br label %210

154:                                              ; preds = %17
  %155 = add i64 %13, 4
  br label %210

156:                                              ; preds = %17, %17
  %157 = add i64 %13, 4
  br label %210

158:                                              ; preds = %17
  %159 = tail call fastcc i32 @AT_string_form(ptr noundef nonnull %19), !range !502
  %160 = icmp eq i32 %159, 14
  br i1 %160, label %161, label %163

161:                                              ; preds = %158
  %162 = add i64 %13, 4
  br label %210

163:                                              ; preds = %158
  %164 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1
  %165 = load ptr, ptr %164, align 8, !tbaa !17
  %166 = load ptr, ptr %165, align 8, !tbaa !186
  %167 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %166)
  %168 = add i64 %13, 1
  %169 = add i64 %168, %167
  br label %210

170:                                              ; preds = %17
  %171 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %12, i64 0, i32 2, i64 %18, i32 1, i32 1
  %172 = load ptr, ptr %171, align 8, !tbaa !17
  %173 = getelementptr inbounds %struct.dwarf_file_data, ptr %172, i64 0, i32 1
  %174 = load i32, ptr %173, align 8, !tbaa !126
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %194

176:                                              ; preds = %170
  %177 = load ptr, ptr @last_emitted_file, align 8, !tbaa !6
  %178 = icmp eq ptr %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %struct.dwarf_file_data, ptr %177, i64 0, i32 1
  %181 = load i32, ptr %180, align 8, !tbaa !126
  %182 = add nsw i32 %181, 1
  br label %183

183:                                              ; preds = %179, %176
  %184 = phi i32 [ %182, %179 ], [ 1, %176 ]
  store i32 %184, ptr %173, align 8, !tbaa !126
  store ptr %172, ptr @last_emitted_file, align 8, !tbaa !6
  %185 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %186 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %185, ptr noundef nonnull @.str.187, i32 noundef %184)
  %187 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %188 = load ptr, ptr %172, align 8, !tbaa !124
  %189 = tail call ptr @remap_debug_filename(ptr noundef %188) #31
  tail call void @output_quoted_string(ptr noundef %187, ptr noundef %189) #31
  %190 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %191 = tail call i32 @fputc(i32 noundef 10, ptr noundef %190)
  %192 = load i32, ptr %173, align 8, !tbaa !126
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %200, label %194

194:                                              ; preds = %183, %170
  %195 = phi i32 [ %192, %183 ], [ %174, %170 ]
  %196 = sext i32 %195 to i64
  %197 = tail call i32 @floor_log2(i64 noundef %196) #31
  %198 = sdiv i32 %197, 8
  %199 = sext i32 %198 to i64
  br label %200

200:                                              ; preds = %194, %183
  %201 = phi i64 [ %199, %194 ], [ 0, %183 ]
  %202 = tail call i32 @floor_log2(i64 noundef %201) #31
  %203 = add nsw i32 %202, 1
  %204 = shl nuw i32 1, %203
  %205 = sext i32 %204 to i64
  %206 = add i64 %13, %205
  br label %210

207:                                              ; preds = %17
  %208 = add i64 %13, 8
  br label %210

209:                                              ; preds = %17
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 9989, ptr noundef nonnull @.str.5) #31
  br label %210

210:                                              ; preds = %209, %207, %200, %163, %161, %156, %154, %152, %150, %148, %146, %137, %136, %132, %118, %104, %97, %83, %81, %79, %73, %24, %22
  %211 = phi i64 [ %13, %209 ], [ %208, %207 ], [ %206, %200 ], [ %162, %161 ], [ %169, %163 ], [ %157, %156 ], [ %155, %154 ], [ %153, %152 ], [ %147, %146 ], [ %151, %150 ], [ %13, %132 ], [ %13, %136 ], [ %138, %137 ], [ %128, %118 ], [ %105, %104 ], [ %103, %97 ], [ %88, %83 ], [ %82, %81 ], [ %80, %79 ], [ %78, %73 ], [ %25, %24 ], [ %23, %22 ], [ %149, %148 ]
  %212 = add i32 %14, 1
  %213 = load ptr, ptr %8, align 8, !tbaa !157
  %214 = icmp eq ptr %213, null
  br i1 %214, label %215, label %11, !llvm.loop !503

215:                                              ; preds = %11, %210, %1
  %216 = phi i64 [ %7, %1 ], [ %211, %210 ], [ %13, %11 ]
  %217 = load i64, ptr @next_die_offset, align 8, !tbaa !38
  %218 = add i64 %217, %216
  store i64 %218, ptr @next_die_offset, align 8, !tbaa !38
  %219 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %220 = load ptr, ptr %219, align 8, !tbaa !175
  %221 = icmp eq ptr %220, null
  br i1 %221, label %233, label %222

222:                                              ; preds = %215, %222
  %223 = phi ptr [ %225, %222 ], [ %220, %215 ]
  %224 = getelementptr inbounds %struct.die_struct, ptr %223, i64 0, i32 5
  %225 = load ptr, ptr %224, align 8, !tbaa !176
  tail call fastcc void @calc_die_sizes(ptr noundef %225)
  %226 = load ptr, ptr %219, align 8, !tbaa !175
  %227 = icmp eq ptr %225, %226
  br i1 %227, label %228, label %222, !llvm.loop !504

228:                                              ; preds = %222
  %229 = icmp eq ptr %225, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %228
  %231 = load i64, ptr @next_die_offset, align 8, !tbaa !38
  %232 = add i64 %231, 1
  store i64 %232, ptr @next_die_offset, align 8, !tbaa !38
  br label %233

233:                                              ; preds = %215, %230, %228
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @output_die(ptr nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = alloca [20 x i8], align 16
  %3 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %4 = icmp slt i32 %3, 4
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = getelementptr %struct.die_struct, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %7, ptr noundef nonnull dereferenceable(3) @.str.321, i64 noundef 2)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 0, i32 6), align 8, !tbaa !128
  %14 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void %13(ptr noundef %14, ptr noundef nonnull %7) #31
  br label %15

15:                                               ; preds = %12, %9
  %16 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(ptr noundef %16, ptr noundef nonnull %7) #31
  %17 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %18 = tail call i64 @fwrite(ptr nonnull @.str.3, i64 2, i64 1, ptr %17)
  br label %19

19:                                               ; preds = %15, %5, %1
  %20 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 8
  %21 = load i64, ptr %20, align 8, !tbaa !500
  %22 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 7
  %23 = load i64, ptr %22, align 8, !tbaa !214
  %24 = load i32, ptr %0, align 8, !tbaa !185
  %25 = tail call fastcc ptr @dwarf_tag_name(i32 noundef %24)
  tail call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %21, ptr noundef nonnull @.str.337, i64 noundef %23, ptr noundef nonnull %25) #31
  %26 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !157
  %28 = icmp eq ptr %27, null
  br i1 %28, label %408, label %29

29:                                               ; preds = %19, %404
  %30 = phi ptr [ %406, %404 ], [ %27, %19 ]
  %31 = phi i32 [ %405, %404 ], [ 0, %19 ]
  %32 = load i32, ptr %30, align 8, !tbaa !159
  %33 = icmp ugt i32 %32, %31
  br i1 %33, label %34, label %408

34:                                               ; preds = %29
  %35 = zext i32 %31 to i64
  %36 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35
  %37 = load i32, ptr %36, align 8, !tbaa !161
  %38 = call fastcc ptr @dwarf_attr_name(i32 noundef %37)
  %39 = getelementptr i8, ptr %36, i64 8
  %40 = load i32, ptr %39, align 8, !tbaa !163
  switch i32 %40, label %403 [
    i32 0, label %66
    i32 1, label %69
    i32 4, label %72
    i32 2, label %79
    i32 5, label %131
    i32 6, label %134
    i32 7, label %152
    i32 8, label %157
    i32 9, label %242
    i32 3, label %258
    i32 10, label %267
    i32 11, label %324
    i32 12, label %330
    i32 13, label %333
    i32 15, label %337
    i32 14, label %341
    i32 16, label %365
    i32 17, label %41
  ]

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %43 = load i8, ptr %42, align 1, !tbaa !17
  %44 = zext i8 %43 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %44, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  %45 = getelementptr inbounds [8 x i8], ptr %42, i64 0, i64 1
  %46 = load i8, ptr %45, align 1, !tbaa !17
  %47 = zext i8 %46 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %47, ptr noundef null, ptr noundef nonnull %38) #31
  %48 = getelementptr inbounds [8 x i8], ptr %42, i64 0, i64 2
  %49 = load i8, ptr %48, align 1, !tbaa !17
  %50 = zext i8 %49 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %50, ptr noundef null, ptr noundef nonnull %38) #31
  %51 = getelementptr inbounds [8 x i8], ptr %42, i64 0, i64 3
  %52 = load i8, ptr %51, align 1, !tbaa !17
  %53 = zext i8 %52 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %53, ptr noundef null, ptr noundef nonnull %38) #31
  %54 = getelementptr inbounds [8 x i8], ptr %42, i64 0, i64 4
  %55 = load i8, ptr %54, align 1, !tbaa !17
  %56 = zext i8 %55 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %56, ptr noundef null, ptr noundef nonnull %38) #31
  %57 = getelementptr inbounds [8 x i8], ptr %42, i64 0, i64 5
  %58 = load i8, ptr %57, align 1, !tbaa !17
  %59 = zext i8 %58 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %59, ptr noundef null, ptr noundef nonnull %38) #31
  %60 = getelementptr inbounds [8 x i8], ptr %42, i64 0, i64 6
  %61 = load i8, ptr %60, align 1, !tbaa !17
  %62 = zext i8 %61 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %62, ptr noundef null, ptr noundef nonnull %38) #31
  %63 = getelementptr inbounds [8 x i8], ptr %42, i64 0, i64 7
  %64 = load i8, ptr %63, align 1, !tbaa !17
  %65 = zext i8 %64 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %65, ptr noundef null, ptr noundef nonnull %38) #31
  br label %404

66:                                               ; preds = %34
  %67 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr_rtx(i32 noundef 4, ptr noundef %68, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

69:                                               ; preds = %34
  %70 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !17
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %71, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

72:                                               ; preds = %34
  %73 = call i64 @strlen(ptr nonnull dereferenceable(1) @ranges_section_label)
  %74 = getelementptr inbounds i8, ptr @ranges_section_label, i64 %73
  %75 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %76 = load i64, ptr %75, align 8, !tbaa !17
  %77 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %74, ptr noundef nonnull dereferenceable(1) @.str.338, i64 noundef %76)
  %78 = load ptr, ptr @debug_ranges_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull @ranges_section_label, ptr noundef %78, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  store i8 0, ptr %74, align 1, !tbaa !17
  br label %404

79:                                               ; preds = %34
  %80 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = icmp eq ptr %81, null
  br i1 %82, label %108, label %83

83:                                               ; preds = %79, %90
  %84 = phi i64 [ %92, %90 ], [ 0, %79 ]
  %85 = phi ptr [ %93, %90 ], [ %81, %79 ]
  %86 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %85, i64 0, i32 1
  %87 = load i16, ptr %86, align 8
  %88 = trunc i16 %87 to i8
  switch i8 %88, label %90 [
    i8 47, label %89
    i8 40, label %89
  ]

89:                                               ; preds = %83, %83
  br label %95

90:                                               ; preds = %83
  %91 = call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %85)
  %92 = add i64 %91, %84
  %93 = load ptr, ptr %85, align 8, !tbaa !57
  %94 = icmp eq ptr %93, null
  br i1 %94, label %104, label %83, !llvm.loop !59

95:                                               ; preds = %89, %95
  %96 = phi i64 [ %101, %95 ], [ 0, %89 ]
  %97 = phi ptr [ %102, %95 ], [ %81, %89 ]
  %98 = trunc i64 %96 to i32
  %99 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %97, i64 0, i32 2
  store i32 %98, ptr %99, align 4, !tbaa !60
  %100 = call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %97)
  %101 = add i64 %100, %96
  %102 = load ptr, ptr %97, align 8, !tbaa !57
  %103 = icmp eq ptr %102, null
  br i1 %103, label %104, label %95, !llvm.loop !61

104:                                              ; preds = %90, %95
  %105 = phi i64 [ %101, %95 ], [ %92, %90 ]
  %106 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %107 = icmp sgt i32 %106, 3
  br i1 %107, label %111, label %113

108:                                              ; preds = %79
  %109 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %110 = icmp sgt i32 %109, 3
  br i1 %110, label %111, label %119

111:                                              ; preds = %108, %104
  %112 = phi i64 [ 0, %108 ], [ %105, %104 ]
  call void (i64, ptr, ...) @dw2_asm_output_data_uleb128(i64 noundef %112, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %125

113:                                              ; preds = %104
  %114 = icmp eq i64 %105, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %113
  %116 = call i32 @floor_log2(i64 noundef %105) #31
  %117 = sdiv i32 %116, 8
  %118 = sext i32 %117 to i64
  br label %119

119:                                              ; preds = %108, %113, %115
  %120 = phi i64 [ %105, %115 ], [ 0, %113 ], [ 0, %108 ]
  %121 = phi i64 [ %118, %115 ], [ 0, %113 ], [ 0, %108 ]
  %122 = call i32 @floor_log2(i64 noundef %121) #31
  %123 = add nsw i32 %122, 1
  %124 = shl nuw i32 1, %123
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %124, i64 noundef %120, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %125

125:                                              ; preds = %111, %119
  %126 = load i32, ptr %39, align 8, !tbaa !163
  %127 = icmp eq i32 %126, 2
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7199, ptr noundef nonnull @.str.5) #31
  br label %129

129:                                              ; preds = %125, %128
  %130 = load ptr, ptr %80, align 8, !tbaa !17
  call fastcc void @output_loc_sequence(ptr noundef %130)
  br label %404

131:                                              ; preds = %34
  %132 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %133 = load i64, ptr %132, align 8, !tbaa !17
  call void (i64, ptr, ...) @dw2_asm_output_data_sleb128(i64 noundef %133, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

134:                                              ; preds = %34
  %135 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %136 = load i64, ptr %135, align 8, !tbaa !17
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %134
  %139 = call i32 @floor_log2(i64 noundef %136) #31
  %140 = sdiv i32 %139, 8
  %141 = sext i32 %140 to i64
  br label %142

142:                                              ; preds = %138, %134
  %143 = phi i64 [ %141, %138 ], [ 0, %134 ]
  %144 = call i32 @floor_log2(i64 noundef %143) #31
  %145 = add nsw i32 %144, 1
  %146 = shl nuw i32 1, %145
  %147 = load i32, ptr %39, align 8, !tbaa !163
  %148 = icmp eq i32 %147, 6
  br i1 %148, label %150, label %149

149:                                              ; preds = %142
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 6941, ptr noundef nonnull @.str.5) #31
  br label %150

150:                                              ; preds = %142, %149
  %151 = load i64, ptr %135, align 8, !tbaa !17
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %146, i64 noundef %151, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

152:                                              ; preds = %34
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 16, ptr noundef null) #31
  %153 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %154 = load i64, ptr %153, align 8, !tbaa !17
  %155 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1, i32 0, i32 1
  %156 = load i64, ptr %155, align 8, !tbaa !17
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 8, i64 noundef %154, ptr noundef nonnull %38) #31
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 8, i64 noundef %156, ptr noundef null) #31
  br label %404

157:                                              ; preds = %34
  %158 = getelementptr inbounds i8, ptr %36, i64 28
  %159 = load i32, ptr %158, align 4, !tbaa !17
  %160 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1, i32 0, i32 1
  %161 = load i32, ptr %160, align 8, !tbaa !17
  %162 = mul i32 %161, %159
  %163 = zext i32 %162 to i64
  %164 = icmp eq i32 %162, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %157
  %166 = call i32 @floor_log2(i64 noundef %163) #31
  %167 = sdiv i32 %166, 8
  %168 = sext i32 %167 to i64
  br label %169

169:                                              ; preds = %157, %165
  %170 = phi i64 [ %168, %165 ], [ 0, %157 ]
  %171 = call i32 @floor_log2(i64 noundef %170) #31
  %172 = add nsw i32 %171, 1
  %173 = shl nuw i32 1, %172
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %173, i64 noundef %163, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  %174 = icmp ugt i32 %159, 8
  %175 = zext i1 %174 to i32
  %176 = shl i32 %161, %175
  %177 = lshr i32 %159, %175
  %178 = icmp eq i32 %176, 0
  br i1 %178, label %404, label %179

179:                                              ; preds = %169
  %180 = icmp eq i32 %177, 0
  %181 = zext i32 %177 to i64
  br i1 %180, label %189, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %184 = load ptr, ptr %183, align 8, !tbaa !17
  %185 = and i32 %177, 3
  %186 = icmp ult i32 %177, 4
  %187 = and i32 %177, -4
  %188 = icmp eq i32 %185, 0
  br label %193

189:                                              ; preds = %179, %189
  %190 = phi i32 [ %191, %189 ], [ 0, %179 ]
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.246, i32 noundef %190) #31
  %191 = add nuw i32 %190, 1
  %192 = icmp eq i32 %191, %176
  br i1 %192, label %404, label %189, !llvm.loop !505

193:                                              ; preds = %182, %238
  %194 = phi ptr [ %196, %238 ], [ %184, %182 ]
  %195 = phi i32 [ %240, %238 ], [ 0, %182 ]
  %196 = getelementptr inbounds i8, ptr %194, i64 %181
  br i1 %186, label %223, label %197

197:                                              ; preds = %193, %197
  %198 = phi i64 [ %220, %197 ], [ 0, %193 ]
  %199 = phi ptr [ %217, %197 ], [ %196, %193 ]
  %200 = phi i32 [ %221, %197 ], [ 0, %193 ]
  %201 = getelementptr inbounds i8, ptr %199, i64 -1
  %202 = load i8, ptr %201, align 1, !tbaa !17
  %203 = zext i8 %202 to i64
  %204 = shl i64 %198, 16
  %205 = shl nuw nsw i64 %203, 8
  %206 = or i64 %204, %205
  %207 = getelementptr inbounds i8, ptr %199, i64 -2
  %208 = load i8, ptr %207, align 1, !tbaa !17
  %209 = zext i8 %208 to i64
  %210 = or i64 %206, %209
  %211 = getelementptr inbounds i8, ptr %199, i64 -3
  %212 = load i8, ptr %211, align 1, !tbaa !17
  %213 = zext i8 %212 to i64
  %214 = shl i64 %210, 16
  %215 = shl nuw nsw i64 %213, 8
  %216 = or i64 %214, %215
  %217 = getelementptr inbounds i8, ptr %199, i64 -4
  %218 = load i8, ptr %217, align 1, !tbaa !17
  %219 = zext i8 %218 to i64
  %220 = or i64 %216, %219
  %221 = add i32 %200, 4
  %222 = icmp eq i32 %221, %187
  br i1 %222, label %223, label %197, !llvm.loop !139

223:                                              ; preds = %197, %193
  %224 = phi i64 [ undef, %193 ], [ %220, %197 ]
  %225 = phi i64 [ 0, %193 ], [ %220, %197 ]
  %226 = phi ptr [ %196, %193 ], [ %217, %197 ]
  br i1 %188, label %238, label %227

227:                                              ; preds = %223, %227
  %228 = phi i64 [ %235, %227 ], [ %225, %223 ]
  %229 = phi ptr [ %232, %227 ], [ %226, %223 ]
  %230 = phi i32 [ %236, %227 ], [ 0, %223 ]
  %231 = shl i64 %228, 8
  %232 = getelementptr inbounds i8, ptr %229, i64 -1
  %233 = load i8, ptr %232, align 1, !tbaa !17
  %234 = zext i8 %233 to i64
  %235 = or i64 %231, %234
  %236 = add i32 %230, 1
  %237 = icmp eq i32 %236, %185
  br i1 %237, label %238, label %227, !llvm.loop !506

238:                                              ; preds = %227, %223
  %239 = phi i64 [ %224, %223 ], [ %235, %227 ]
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %177, i64 noundef %239, ptr noundef nonnull @.str.246, i32 noundef %195) #31
  %240 = add nuw i32 %195, 1
  %241 = icmp eq i32 %240, %176
  br i1 %241, label %404, label %193, !llvm.loop !505

242:                                              ; preds = %34
  %243 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %244 = icmp sgt i32 %243, 3
  %245 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %246 = load i8, ptr %245, align 8, !tbaa !17
  br i1 %244, label %247, label %256

247:                                              ; preds = %242
  %248 = icmp eq i8 %246, 1
  br i1 %248, label %250, label %249

249:                                              ; preds = %247
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10547, ptr noundef nonnull @.str.5) #31
  br label %250

250:                                              ; preds = %247, %249
  %251 = load i32, ptr @flag_debug_asm, align 4, !tbaa !21
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %404, label %253

253:                                              ; preds = %250
  %254 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %255 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %254, ptr noundef nonnull @.str.339, ptr noundef nonnull @.str.177, ptr noundef nonnull %38)
  br label %404

256:                                              ; preds = %242
  %257 = zext i8 %246 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %257, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

258:                                              ; preds = %34
  %259 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %260 = load ptr, ptr %259, align 8, !tbaa !17
  %261 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %260, i64 0, i32 3
  %262 = load ptr, ptr %261, align 8, !tbaa !274
  %263 = icmp eq ptr %262, null
  br i1 %263, label %264, label %265

264:                                              ; preds = %258
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10560, ptr noundef nonnull @.str.5) #31
  br label %265

265:                                              ; preds = %258, %264
  %266 = load ptr, ptr @debug_loc_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef %262, ptr noundef %266, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

267:                                              ; preds = %34
  %268 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1, i32 0, i32 1
  %269 = load i32, ptr %268, align 8, !tbaa !17
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %310, label %271

271:                                              ; preds = %267
  %272 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %273 = icmp sgt i32 %272, 3
  %274 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %275 = load ptr, ptr %274, align 8, !tbaa !17
  %276 = getelementptr inbounds %struct.die_struct, ptr %275, i64 0, i32 1
  %277 = load ptr, ptr %276, align 8, !tbaa !17
  %278 = icmp eq ptr %277, null
  br i1 %273, label %279, label %306

279:                                              ; preds = %271
  br i1 %278, label %280, label %281

280:                                              ; preds = %279
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10574, ptr noundef nonnull @.str.5) #31
  br label %281

281:                                              ; preds = %279, %280
  %282 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2
  %283 = load i8, ptr %282, align 1, !tbaa !17
  %284 = sext i8 %283 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %284, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  %285 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2, i64 1
  %286 = load i8, ptr %285, align 1, !tbaa !17
  %287 = sext i8 %286 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %287, ptr noundef null, ptr noundef nonnull %38) #31
  %288 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2, i64 2
  %289 = load i8, ptr %288, align 1, !tbaa !17
  %290 = sext i8 %289 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %290, ptr noundef null, ptr noundef nonnull %38) #31
  %291 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2, i64 3
  %292 = load i8, ptr %291, align 1, !tbaa !17
  %293 = sext i8 %292 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %293, ptr noundef null, ptr noundef nonnull %38) #31
  %294 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2, i64 4
  %295 = load i8, ptr %294, align 1, !tbaa !17
  %296 = sext i8 %295 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %296, ptr noundef null, ptr noundef nonnull %38) #31
  %297 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2, i64 5
  %298 = load i8, ptr %297, align 1, !tbaa !17
  %299 = sext i8 %298 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %299, ptr noundef null, ptr noundef nonnull %38) #31
  %300 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2, i64 6
  %301 = load i8, ptr %300, align 1, !tbaa !17
  %302 = sext i8 %301 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %302, ptr noundef null, ptr noundef nonnull %38) #31
  %303 = getelementptr inbounds %struct.comdat_type_struct, ptr %277, i64 0, i32 2, i64 7
  %304 = load i8, ptr %303, align 1, !tbaa !17
  %305 = sext i8 %304 to i64
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef %305, ptr noundef null, ptr noundef nonnull %38) #31
  br label %404

306:                                              ; preds = %271
  br i1 %278, label %307, label %308

307:                                              ; preds = %306
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10582, ptr noundef nonnull @.str.5) #31
  br label %308

308:                                              ; preds = %307, %306
  %309 = load ptr, ptr @debug_info_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef %277, ptr noundef %309, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

310:                                              ; preds = %267
  %311 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %312 = load ptr, ptr %311, align 8, !tbaa !17
  %313 = getelementptr inbounds %struct.die_struct, ptr %312, i64 0, i32 7
  %314 = load i64, ptr %313, align 8, !tbaa !214
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %316, label %320

316:                                              ; preds = %310
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10596, ptr noundef nonnull @.str.5) #31
  %317 = load i32, ptr %39, align 8, !tbaa !163
  %318 = icmp eq i32 %317, 10
  br i1 %318, label %320, label %319

319:                                              ; preds = %316
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %320

320:                                              ; preds = %310, %316, %319
  %321 = load ptr, ptr %311, align 8, !tbaa !17
  %322 = getelementptr inbounds %struct.die_struct, ptr %321, i64 0, i32 7
  %323 = load i64, ptr %322, align 8, !tbaa !214
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 4, i64 noundef %323, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

324:                                              ; preds = %34
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #31
  %325 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %326 = load i32, ptr %325, align 8, !tbaa !17
  %327 = shl i32 %326, 1
  %328 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.247, i32 noundef %327)
  %329 = load ptr, ptr @debug_frame_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef nonnull %2, ptr noundef %329, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #31
  br label %404

330:                                              ; preds = %34
  %331 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %332 = load ptr, ptr %331, align 8, !tbaa !17
  call void (i32, ptr, ptr, ...) @dw2_asm_output_addr(i32 noundef 4, ptr noundef %332, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

333:                                              ; preds = %34
  %334 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %335 = load ptr, ptr %334, align 8, !tbaa !17
  %336 = load ptr, ptr @debug_line_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef %335, ptr noundef %336, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

337:                                              ; preds = %34
  %338 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %339 = load ptr, ptr %338, align 8, !tbaa !17
  %340 = load ptr, ptr @debug_macinfo_section, align 8, !tbaa !6
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef %339, ptr noundef %340, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

341:                                              ; preds = %34
  %342 = call fastcc i32 @AT_string_form(ptr noundef nonnull %36), !range !502
  %343 = icmp eq i32 %342, 14
  br i1 %343, label %344, label %357

344:                                              ; preds = %341
  %345 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %346 = load ptr, ptr %345, align 8, !tbaa !17
  %347 = getelementptr inbounds %struct.indirect_string_node, ptr %346, i64 0, i32 3
  %348 = load ptr, ptr %347, align 8, !tbaa !308
  %349 = load ptr, ptr @debug_str_section, align 8, !tbaa !6
  %350 = load i32, ptr %39, align 8, !tbaa !163
  %351 = icmp eq i32 %350, 14
  br i1 %351, label %354, label %352

352:                                              ; preds = %344
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  %353 = load ptr, ptr %345, align 8, !tbaa !17
  br label %354

354:                                              ; preds = %344, %352
  %355 = phi ptr [ %346, %344 ], [ %353, %352 ]
  %356 = load ptr, ptr %355, align 8, !tbaa !186
  call void (i32, ptr, ptr, ptr, ...) @dw2_asm_output_offset(i32 noundef 4, ptr noundef %348, ptr noundef %349, ptr noundef nonnull @.str.340, ptr noundef nonnull %38, ptr noundef %356) #31
  br label %404

357:                                              ; preds = %341
  %358 = load i32, ptr %39, align 8, !tbaa !163
  %359 = icmp eq i32 %358, 14
  br i1 %359, label %361, label %360

360:                                              ; preds = %357
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7083, ptr noundef nonnull @.str.5) #31
  br label %361

361:                                              ; preds = %357, %360
  %362 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %363 = load ptr, ptr %362, align 8, !tbaa !17
  %364 = load ptr, ptr %363, align 8, !tbaa !186
  call void (ptr, i64, ptr, ...) @dw2_asm_output_nstring(ptr noundef %364, i64 noundef -1, ptr noundef nonnull @.str.217, ptr noundef nonnull %38) #31
  br label %404

365:                                              ; preds = %34
  %366 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %30, i64 0, i32 2, i64 %35, i32 1, i32 1
  %367 = load ptr, ptr %366, align 8, !tbaa !17
  %368 = getelementptr inbounds %struct.dwarf_file_data, ptr %367, i64 0, i32 1
  %369 = load i32, ptr %368, align 8, !tbaa !126
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %389

371:                                              ; preds = %365
  %372 = load ptr, ptr @last_emitted_file, align 8, !tbaa !6
  %373 = icmp eq ptr %372, null
  br i1 %373, label %378, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %struct.dwarf_file_data, ptr %372, i64 0, i32 1
  %376 = load i32, ptr %375, align 8, !tbaa !126
  %377 = add nsw i32 %376, 1
  br label %378

378:                                              ; preds = %371, %374
  %379 = phi i32 [ %377, %374 ], [ 1, %371 ]
  store i32 %379, ptr %368, align 8, !tbaa !126
  store ptr %367, ptr @last_emitted_file, align 8, !tbaa !6
  %380 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %381 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %380, ptr noundef nonnull @.str.187, i32 noundef %379)
  %382 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %383 = load ptr, ptr %367, align 8, !tbaa !124
  %384 = call ptr @remap_debug_filename(ptr noundef %383) #31
  call void @output_quoted_string(ptr noundef %382, ptr noundef %384) #31
  %385 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %386 = call i32 @fputc(i32 noundef 10, ptr noundef %385)
  %387 = load i32, ptr %368, align 8, !tbaa !126
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %395, label %389

389:                                              ; preds = %365, %378
  %390 = phi i32 [ %387, %378 ], [ %369, %365 ]
  %391 = sext i32 %390 to i64
  %392 = call i32 @floor_log2(i64 noundef %391) #31
  %393 = sdiv i32 %392, 8
  %394 = sext i32 %393 to i64
  br label %395

395:                                              ; preds = %378, %389
  %396 = phi i64 [ %391, %389 ], [ 0, %378 ]
  %397 = phi i64 [ %394, %389 ], [ 0, %378 ]
  %398 = call i32 @floor_log2(i64 noundef %397) #31
  %399 = add nsw i32 %398, 1
  %400 = shl nuw i32 1, %399
  %401 = load ptr, ptr %366, align 8, !tbaa !17
  %402 = load ptr, ptr %401, align 8, !tbaa !124
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef %400, i64 noundef %396, ptr noundef nonnull @.str.341, ptr noundef nonnull %38, ptr noundef %402) #31
  br label %404

403:                                              ; preds = %34
  call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10657, ptr noundef nonnull @.str.5) #31
  br label %404

404:                                              ; preds = %238, %189, %41, %169, %354, %361, %320, %308, %281, %250, %253, %403, %395, %337, %333, %330, %324, %265, %256, %152, %150, %131, %129, %72, %69, %66
  %405 = add i32 %31, 1
  %406 = load ptr, ptr %26, align 8, !tbaa !157
  %407 = icmp eq ptr %406, null
  br i1 %407, label %408, label %29, !llvm.loop !507

408:                                              ; preds = %404, %29, %19
  %409 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %410 = load ptr, ptr %409, align 8, !tbaa !175
  %411 = icmp eq ptr %410, null
  br i1 %411, label %422, label %412

412:                                              ; preds = %408, %412
  %413 = phi ptr [ %415, %412 ], [ %410, %408 ]
  %414 = getelementptr inbounds %struct.die_struct, ptr %413, i64 0, i32 5
  %415 = load ptr, ptr %414, align 8, !tbaa !176
  call fastcc void @output_die(ptr noundef %415)
  %416 = load ptr, ptr %409, align 8, !tbaa !175
  %417 = icmp eq ptr %415, %416
  br i1 %417, label %418, label %412, !llvm.loop !508

418:                                              ; preds = %412
  %419 = icmp eq ptr %415, null
  br i1 %419, label %422, label %420

420:                                              ; preds = %418
  %421 = load i64, ptr %22, align 8, !tbaa !214
  call void (i32, i64, ptr, ...) @dw2_asm_output_data(i32 noundef 1, i64 noundef 0, ptr noundef nonnull @.str.342, i64 noundef %421) #31
  br label %422

422:                                              ; preds = %408, %420, %418
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @value_format(ptr noundef %0) unnamed_addr #10 {
  %2 = getelementptr %struct.dw_attr_struct, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !163
  switch i32 %3, label %153 [
    i32 0, label %4
    i32 4, label %7
    i32 3, label %7
    i32 1, label %10
    i32 2, label %11
    i32 5, label %163
    i32 6, label %53
    i32 7, label %69
    i32 8, label %70
    i32 9, label %90
    i32 10, label %98
    i32 11, label %106
    i32 12, label %107
    i32 13, label %108
    i32 15, label %108
    i32 14, label %112
    i32 16, label %114
    i32 17, label %152
  ]

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %5, label %6 [
    i32 17, label %163
    i32 18, label %163
    i32 82, label %163
    i32 86, label %163
  ]

6:                                                ; preds = %4
  br label %163

7:                                                ; preds = %1, %1
  %8 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %9 = icmp sgt i32 %8, 3
  br i1 %9, label %163, label %10

10:                                               ; preds = %7, %1
  br label %163

11:                                               ; preds = %1
  %12 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %13 = icmp sgt i32 %12, 3
  br i1 %13, label %163, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.dw_attr_struct, ptr %0, i64 0, i32 1, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %46, label %18

18:                                               ; preds = %14, %25
  %19 = phi i64 [ %27, %25 ], [ 0, %14 ]
  %20 = phi ptr [ %28, %25 ], [ %16, %14 ]
  %21 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %20, i64 0, i32 1
  %22 = load i16, ptr %21, align 8
  %23 = trunc i16 %22 to i8
  switch i8 %23, label %25 [
    i8 47, label %24
    i8 40, label %24
  ]

24:                                               ; preds = %18, %18
  br label %30

25:                                               ; preds = %18
  %26 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %20)
  %27 = add i64 %26, %19
  %28 = load ptr, ptr %20, align 8, !tbaa !57
  %29 = icmp eq ptr %28, null
  br i1 %29, label %39, label %18, !llvm.loop !59

30:                                               ; preds = %24, %30
  %31 = phi i64 [ %36, %30 ], [ 0, %24 ]
  %32 = phi ptr [ %37, %30 ], [ %16, %24 ]
  %33 = trunc i64 %31 to i32
  %34 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %32, i64 0, i32 2
  store i32 %33, ptr %34, align 4, !tbaa !60
  %35 = tail call fastcc i64 @size_of_loc_descr(ptr noundef nonnull %32)
  %36 = add i64 %35, %31
  %37 = load ptr, ptr %32, align 8, !tbaa !57
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %30, !llvm.loop !61

39:                                               ; preds = %25, %30
  %40 = phi i64 [ %36, %30 ], [ %27, %25 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @floor_log2(i64 noundef %40) #31
  %44 = sdiv i32 %43, 8
  %45 = sext i32 %44 to i64
  br label %46

46:                                               ; preds = %14, %39, %42
  %47 = phi i64 [ %45, %42 ], [ 0, %39 ], [ 0, %14 ]
  %48 = tail call i32 @floor_log2(i64 noundef %47) #31
  %49 = add nsw i32 %48, 1
  %50 = shl nuw i32 1, %49
  switch i32 %50, label %52 [
    i32 1, label %163
    i32 2, label %51
  ]

51:                                               ; preds = %46
  br label %163

52:                                               ; preds = %46
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10165, ptr noundef nonnull @.str.5) #31
  br label %163

53:                                               ; preds = %1
  %54 = getelementptr inbounds %struct.dw_attr_struct, ptr %0, i64 0, i32 1, i32 1
  %55 = load i64, ptr %54, align 8, !tbaa !17
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = tail call i32 @floor_log2(i64 noundef %55) #31
  %59 = sdiv i32 %58, 8
  %60 = sext i32 %59 to i64
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i64 [ %60, %57 ], [ 0, %53 ]
  %63 = tail call i32 @floor_log2(i64 noundef %62) #31
  %64 = add nsw i32 %63, 1
  %65 = shl nsw i32 -1, %64
  %66 = xor i32 %65, -1
  %67 = icmp ugt i32 %65, -9
  br i1 %67, label %154, label %68

68:                                               ; preds = %154, %61
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10181, ptr noundef nonnull @.str.5) #31
  br label %69

69:                                               ; preds = %1, %68
  br label %163

70:                                               ; preds = %1
  %71 = getelementptr inbounds %struct.dw_attr_struct, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %72 = load i32, ptr %71, align 8, !tbaa !17
  %73 = getelementptr inbounds i8, ptr %0, i64 28
  %74 = load i32, ptr %73, align 4, !tbaa !17
  %75 = mul i32 %74, %72
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %70
  %78 = zext i32 %75 to i64
  %79 = tail call i32 @floor_log2(i64 noundef %78) #31
  %80 = sdiv i32 %79, 8
  %81 = sext i32 %80 to i64
  br label %82

82:                                               ; preds = %70, %77
  %83 = phi i64 [ %81, %77 ], [ 0, %70 ]
  %84 = tail call i32 @floor_log2(i64 noundef %83) #31
  %85 = add nsw i32 %84, 1
  %86 = shl nuw i32 1, %85
  switch i32 %86, label %89 [
    i32 1, label %163
    i32 2, label %87
    i32 4, label %88
  ]

87:                                               ; preds = %82
  br label %163

88:                                               ; preds = %82
  br label %163

89:                                               ; preds = %82
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10207, ptr noundef nonnull @.str.5) #31
  br label %90

90:                                               ; preds = %1, %89
  %91 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %92 = icmp sgt i32 %91, 3
  br i1 %92, label %93, label %163

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.dw_attr_struct, ptr %0, i64 0, i32 1, i32 1
  %95 = load i8, ptr %94, align 8, !tbaa !17
  %96 = icmp eq i8 %95, 1
  br i1 %96, label %163, label %97

97:                                               ; preds = %93
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10218, ptr noundef nonnull @.str.5) #31
  br label %163

98:                                               ; preds = %1
  %99 = getelementptr inbounds %struct.dw_attr_struct, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %100 = load i32, ptr %99, align 8, !tbaa !17
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %163, label %102

102:                                              ; preds = %98
  %103 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %104 = icmp sgt i32 %103, 3
  %105 = select i1 %104, i32 32, i32 16
  br label %163

106:                                              ; preds = %1
  br label %163

107:                                              ; preds = %1
  br label %163

108:                                              ; preds = %1, %1
  %109 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %110 = icmp sgt i32 %109, 3
  %111 = select i1 %110, i32 23, i32 6
  br label %163

112:                                              ; preds = %1
  %113 = tail call fastcc i32 @AT_string_form(ptr noundef nonnull %0), !range !502
  br label %163

114:                                              ; preds = %1
  %115 = getelementptr inbounds %struct.dw_attr_struct, ptr %0, i64 0, i32 1, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = getelementptr inbounds %struct.dwarf_file_data, ptr %116, i64 0, i32 1
  %118 = load i32, ptr %117, align 8, !tbaa !126
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %138

120:                                              ; preds = %114
  %121 = load ptr, ptr @last_emitted_file, align 8, !tbaa !6
  %122 = icmp eq ptr %121, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %struct.dwarf_file_data, ptr %121, i64 0, i32 1
  %125 = load i32, ptr %124, align 8, !tbaa !126
  %126 = add nsw i32 %125, 1
  br label %127

127:                                              ; preds = %120, %123
  %128 = phi i32 [ %126, %123 ], [ 1, %120 ]
  store i32 %128, ptr %117, align 8, !tbaa !126
  store ptr %116, ptr @last_emitted_file, align 8, !tbaa !6
  %129 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %130 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %129, ptr noundef nonnull @.str.187, i32 noundef %128)
  %131 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %132 = load ptr, ptr %116, align 8, !tbaa !124
  %133 = tail call ptr @remap_debug_filename(ptr noundef %132) #31
  tail call void @output_quoted_string(ptr noundef %131, ptr noundef %133) #31
  %134 = load ptr, ptr @asm_out_file, align 8, !tbaa !6
  %135 = tail call i32 @fputc(i32 noundef 10, ptr noundef %134)
  %136 = load i32, ptr %117, align 8, !tbaa !126
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %114, %127
  %139 = phi i32 [ %136, %127 ], [ %118, %114 ]
  %140 = sext i32 %139 to i64
  %141 = tail call i32 @floor_log2(i64 noundef %140) #31
  %142 = sdiv i32 %141, 8
  %143 = sext i32 %142 to i64
  br label %144

144:                                              ; preds = %127, %138
  %145 = phi i64 [ %143, %138 ], [ 0, %127 ]
  %146 = tail call i32 @floor_log2(i64 noundef %145) #31
  %147 = add nsw i32 %146, 1
  %148 = shl nuw i32 1, %147
  switch i32 %148, label %151 [
    i32 1, label %163
    i32 2, label %149
    i32 4, label %150
  ]

149:                                              ; preds = %144
  br label %163

150:                                              ; preds = %144
  br label %163

151:                                              ; preds = %144
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10246, ptr noundef nonnull @.str.5) #31
  br label %152

152:                                              ; preds = %1, %151
  br label %163

153:                                              ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 10253, ptr noundef nonnull @.str.5) #31
  br label %163

154:                                              ; preds = %61
  %155 = trunc i32 %66 to i8
  %156 = lshr i8 -117, %155
  %157 = and i8 %156, 1
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %68, label %159

159:                                              ; preds = %154
  %160 = zext i32 %66 to i64
  %161 = getelementptr inbounds [8 x i32], ptr @switch.table.value_format, i64 0, i64 %160
  %162 = load i32, ptr %161, align 4
  br label %163

163:                                              ; preds = %159, %144, %98, %90, %97, %93, %82, %52, %1, %46, %11, %7, %4, %4, %4, %4, %153, %152, %150, %149, %112, %108, %107, %106, %102, %88, %87, %69, %51, %10, %6
  %164 = phi i32 [ 0, %153 ], [ 7, %152 ], [ 6, %150 ], [ 5, %149 ], [ %113, %112 ], [ %111, %108 ], [ 1, %107 ], [ 6, %106 ], [ %105, %102 ], [ 4, %88 ], [ 3, %87 ], [ 10, %69 ], [ 3, %51 ], [ 6, %10 ], [ 6, %6 ], [ 1, %4 ], [ 1, %4 ], [ 1, %4 ], [ 1, %4 ], [ 23, %7 ], [ 24, %11 ], [ 10, %46 ], [ 13, %1 ], [ 13, %52 ], [ 10, %82 ], [ 25, %93 ], [ 25, %97 ], [ 12, %90 ], [ 19, %98 ], [ 11, %144 ], [ %162, %159 ]
  ret i32 %164
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @AT_string_form(ptr noundef readonly %0) unnamed_addr #10 {
  %2 = alloca [32 x i8], align 16
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr i8, ptr %0, i64 8
  %6 = load i32, ptr %5, align 8, !tbaa !163
  %7 = icmp eq i32 %6, 14
  br i1 %7, label %9, label %8

8:                                                ; preds = %4, %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7096, ptr noundef nonnull @.str.5) #31
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.dw_attr_struct, ptr %0, i64 0, i32 1, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.indirect_string_node, ptr %11, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !509
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %47

15:                                               ; preds = %9
  %16 = load ptr, ptr %11, align 8, !tbaa !186
  %17 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %16)
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, 1
  %20 = icmp ult i32 %19, 5
  br i1 %20, label %45, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.indirect_string_node, ptr %11, i64 0, i32 1
  %23 = load i32, ptr %22, align 8, !tbaa !267
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = load ptr, ptr @debug_str_section, align 8, !tbaa !6
  %27 = load i32, ptr %26, align 8, !tbaa !17
  %28 = and i32 %27, 32768
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = add i32 %18, -3
  %32 = mul i32 %23, %31
  %33 = icmp ugt i32 %32, %19
  br i1 %33, label %34, label %45

34:                                               ; preds = %30, %25
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #31
  %35 = getelementptr inbounds %struct.indirect_string_node, ptr %11, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !308
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = load i32, ptr @dw2_string_counter, align 4, !tbaa !21
  %40 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1, ptr noundef nonnull @.str.332, i32 noundef %39)
  %41 = load i32, ptr @dw2_string_counter, align 4, !tbaa !21
  %42 = add nsw i32 %41, 1
  store i32 %42, ptr @dw2_string_counter, align 4, !tbaa !21
  %43 = call ptr @xstrdup(ptr noundef nonnull %2) #31
  store ptr %43, ptr %35, align 8, !tbaa !308
  br label %44

44:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #31
  br label %45

45:                                               ; preds = %30, %15, %21, %44
  %46 = phi i32 [ 14, %44 ], [ 8, %21 ], [ 8, %15 ], [ 8, %30 ]
  store i32 %46, ptr %12, align 4, !tbaa !509
  br label %47

47:                                               ; preds = %45, %9
  %48 = phi i32 [ %13, %9 ], [ %46, %45 ]
  ret i32 %48
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal fastcc nonnull ptr @dwarf_tag_name(i32 noundef %0) unnamed_addr #13 {
  switch i32 %0, label %71 [
    i32 0, label %72
    i32 1, label %2
    i32 2, label %3
    i32 3, label %4
    i32 4, label %5
    i32 5, label %6
    i32 8, label %7
    i32 10, label %8
    i32 11, label %9
    i32 13, label %10
    i32 15, label %11
    i32 16, label %12
    i32 17, label %13
    i32 18, label %14
    i32 19, label %15
    i32 21, label %16
    i32 22, label %17
    i32 23, label %18
    i32 24, label %19
    i32 25, label %20
    i32 26, label %21
    i32 27, label %22
    i32 28, label %23
    i32 29, label %24
    i32 30, label %25
    i32 31, label %26
    i32 32, label %27
    i32 33, label %28
    i32 34, label %29
    i32 35, label %30
    i32 36, label %31
    i32 37, label %32
    i32 38, label %33
    i32 39, label %34
    i32 40, label %35
    i32 41, label %36
    i32 42, label %37
    i32 43, label %38
    i32 44, label %39
    i32 45, label %40
    i32 46, label %41
    i32 47, label %42
    i32 48, label %43
    i32 49, label %44
    i32 50, label %45
    i32 51, label %46
    i32 52, label %47
    i32 53, label %48
    i32 54, label %49
    i32 55, label %50
    i32 56, label %51
    i32 57, label %52
    i32 58, label %53
    i32 59, label %54
    i32 60, label %55
    i32 61, label %56
    i32 63, label %57
    i32 64, label %58
    i32 65, label %59
    i32 66, label %60
    i32 67, label %61
    i32 16647, label %62
    i32 16648, label %63
    i32 16513, label %64
    i32 16641, label %65
    i32 16642, label %66
    i32 16643, label %67
    i32 16644, label %68
    i32 16645, label %69
    i32 16646, label %70
  ]

2:                                                ; preds = %1
  br label %72

3:                                                ; preds = %1
  br label %72

4:                                                ; preds = %1
  br label %72

5:                                                ; preds = %1
  br label %72

6:                                                ; preds = %1
  br label %72

7:                                                ; preds = %1
  br label %72

8:                                                ; preds = %1
  br label %72

9:                                                ; preds = %1
  br label %72

10:                                               ; preds = %1
  br label %72

11:                                               ; preds = %1
  br label %72

12:                                               ; preds = %1
  br label %72

13:                                               ; preds = %1
  br label %72

14:                                               ; preds = %1
  br label %72

15:                                               ; preds = %1
  br label %72

16:                                               ; preds = %1
  br label %72

17:                                               ; preds = %1
  br label %72

18:                                               ; preds = %1
  br label %72

19:                                               ; preds = %1
  br label %72

20:                                               ; preds = %1
  br label %72

21:                                               ; preds = %1
  br label %72

22:                                               ; preds = %1
  br label %72

23:                                               ; preds = %1
  br label %72

24:                                               ; preds = %1
  br label %72

25:                                               ; preds = %1
  br label %72

26:                                               ; preds = %1
  br label %72

27:                                               ; preds = %1
  br label %72

28:                                               ; preds = %1
  br label %72

29:                                               ; preds = %1
  br label %72

30:                                               ; preds = %1
  br label %72

31:                                               ; preds = %1
  br label %72

32:                                               ; preds = %1
  br label %72

33:                                               ; preds = %1
  br label %72

34:                                               ; preds = %1
  br label %72

35:                                               ; preds = %1
  br label %72

36:                                               ; preds = %1
  br label %72

37:                                               ; preds = %1
  br label %72

38:                                               ; preds = %1
  br label %72

39:                                               ; preds = %1
  br label %72

40:                                               ; preds = %1
  br label %72

41:                                               ; preds = %1
  br label %72

42:                                               ; preds = %1
  br label %72

43:                                               ; preds = %1
  br label %72

44:                                               ; preds = %1
  br label %72

45:                                               ; preds = %1
  br label %72

46:                                               ; preds = %1
  br label %72

47:                                               ; preds = %1
  br label %72

48:                                               ; preds = %1
  br label %72

49:                                               ; preds = %1
  br label %72

50:                                               ; preds = %1
  br label %72

51:                                               ; preds = %1
  br label %72

52:                                               ; preds = %1
  br label %72

53:                                               ; preds = %1
  br label %72

54:                                               ; preds = %1
  br label %72

55:                                               ; preds = %1
  br label %72

56:                                               ; preds = %1
  br label %72

57:                                               ; preds = %1
  br label %72

58:                                               ; preds = %1
  br label %72

59:                                               ; preds = %1
  br label %72

60:                                               ; preds = %1
  br label %72

61:                                               ; preds = %1
  br label %72

62:                                               ; preds = %1
  br label %72

63:                                               ; preds = %1
  br label %72

64:                                               ; preds = %1
  br label %72

65:                                               ; preds = %1
  br label %72

66:                                               ; preds = %1
  br label %72

67:                                               ; preds = %1
  br label %72

68:                                               ; preds = %1
  br label %72

69:                                               ; preds = %1
  br label %72

70:                                               ; preds = %1
  br label %72

71:                                               ; preds = %1
  br label %72

72:                                               ; preds = %1, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %73 = phi ptr [ @.str.413, %71 ], [ @.str.412, %70 ], [ @.str.411, %69 ], [ @.str.410, %68 ], [ @.str.409, %67 ], [ @.str.408, %66 ], [ @.str.407, %65 ], [ @.str.406, %64 ], [ @.str.405, %63 ], [ @.str.404, %62 ], [ @.str.403, %61 ], [ @.str.402, %60 ], [ @.str.401, %59 ], [ @.str.400, %58 ], [ @.str.399, %57 ], [ @.str.398, %56 ], [ @.str.397, %55 ], [ @.str.396, %54 ], [ @.str.395, %53 ], [ @.str.394, %52 ], [ @.str.393, %51 ], [ @.str.392, %50 ], [ @.str.391, %49 ], [ @.str.390, %48 ], [ @.str.389, %47 ], [ @.str.388, %46 ], [ @.str.387, %45 ], [ @.str.386, %44 ], [ @.str.385, %43 ], [ @.str.384, %42 ], [ @.str.383, %41 ], [ @.str.382, %40 ], [ @.str.381, %39 ], [ @.str.380, %38 ], [ @.str.379, %37 ], [ @.str.378, %36 ], [ @.str.377, %35 ], [ @.str.376, %34 ], [ @.str.375, %33 ], [ @.str.374, %32 ], [ @.str.373, %31 ], [ @.str.372, %30 ], [ @.str.371, %29 ], [ @.str.370, %28 ], [ @.str.369, %27 ], [ @.str.368, %26 ], [ @.str.367, %25 ], [ @.str.366, %24 ], [ @.str.365, %23 ], [ @.str.364, %22 ], [ @.str.363, %21 ], [ @.str.362, %20 ], [ @.str.361, %19 ], [ @.str.360, %18 ], [ @.str.359, %17 ], [ @.str.358, %16 ], [ @.str.357, %15 ], [ @.str.356, %14 ], [ @.str.355, %13 ], [ @.str.354, %12 ], [ @.str.353, %11 ], [ @.str.352, %10 ], [ @.str.351, %9 ], [ @.str.350, %8 ], [ @.str.349, %7 ], [ @.str.348, %6 ], [ @.str.347, %5 ], [ @.str.346, %4 ], [ @.str.345, %3 ], [ @.str.344, %2 ], [ @.str.343, %1 ]
  ret ptr %73
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal fastcc nonnull ptr @dwarf_attr_name(i32 noundef %0) unnamed_addr #13 {
  switch i32 %0, label %110 [
    i32 1, label %111
    i32 2, label %2
    i32 3, label %3
    i32 9, label %4
    i32 10, label %5
    i32 11, label %6
    i32 12, label %7
    i32 13, label %8
    i32 15, label %9
    i32 16, label %10
    i32 17, label %11
    i32 18, label %12
    i32 19, label %13
    i32 20, label %14
    i32 21, label %15
    i32 22, label %16
    i32 23, label %17
    i32 24, label %18
    i32 25, label %19
    i32 26, label %20
    i32 27, label %21
    i32 28, label %22
    i32 29, label %23
    i32 30, label %24
    i32 32, label %25
    i32 33, label %26
    i32 34, label %27
    i32 37, label %28
    i32 39, label %29
    i32 42, label %30
    i32 44, label %31
    i32 46, label %32
    i32 47, label %33
    i32 49, label %34
    i32 50, label %35
    i32 51, label %36
    i32 52, label %37
    i32 53, label %38
    i32 54, label %39
    i32 55, label %40
    i32 56, label %41
    i32 57, label %42
    i32 58, label %43
    i32 59, label %44
    i32 60, label %45
    i32 61, label %46
    i32 62, label %47
    i32 63, label %48
    i32 99, label %49
    i32 64, label %50
    i32 65, label %51
    i32 66, label %52
    i32 67, label %53
    i32 68, label %54
    i32 69, label %55
    i32 70, label %56
    i32 71, label %57
    i32 72, label %58
    i32 73, label %59
    i32 74, label %60
    i32 75, label %61
    i32 76, label %62
    i32 77, label %63
    i32 78, label %64
    i32 79, label %65
    i32 80, label %66
    i32 81, label %67
    i32 82, label %68
    i32 83, label %69
    i32 84, label %70
    i32 85, label %71
    i32 86, label %72
    i32 87, label %73
    i32 88, label %74
    i32 89, label %75
    i32 105, label %76
    i32 106, label %77
    i32 107, label %78
    i32 108, label %79
    i32 109, label %80
    i32 110, label %81
    i32 8193, label %82
    i32 8194, label %83
    i32 8195, label %84
    i32 8196, label %85
    i32 8197, label %86
    i32 8198, label %87
    i32 8199, label %88
    i32 8200, label %89
    i32 8201, label %90
    i32 8202, label %91
    i32 8203, label %92
    i32 8449, label %93
    i32 8450, label %94
    i32 8451, label %95
    i32 8452, label %96
    i32 8453, label %97
    i32 8454, label %98
    i32 8455, label %99
    i32 8456, label %100
    i32 8457, label %101
    i32 8458, label %102
    i32 8459, label %103
    i32 8460, label %104
    i32 8461, label %105
    i32 8462, label %106
    i32 8463, label %107
    i32 8464, label %108
    i32 8705, label %109
  ]

2:                                                ; preds = %1
  br label %111

3:                                                ; preds = %1
  br label %111

4:                                                ; preds = %1
  br label %111

5:                                                ; preds = %1
  br label %111

6:                                                ; preds = %1
  br label %111

7:                                                ; preds = %1
  br label %111

8:                                                ; preds = %1
  br label %111

9:                                                ; preds = %1
  br label %111

10:                                               ; preds = %1
  br label %111

11:                                               ; preds = %1
  br label %111

12:                                               ; preds = %1
  br label %111

13:                                               ; preds = %1
  br label %111

14:                                               ; preds = %1
  br label %111

15:                                               ; preds = %1
  br label %111

16:                                               ; preds = %1
  br label %111

17:                                               ; preds = %1
  br label %111

18:                                               ; preds = %1
  br label %111

19:                                               ; preds = %1
  br label %111

20:                                               ; preds = %1
  br label %111

21:                                               ; preds = %1
  br label %111

22:                                               ; preds = %1
  br label %111

23:                                               ; preds = %1
  br label %111

24:                                               ; preds = %1
  br label %111

25:                                               ; preds = %1
  br label %111

26:                                               ; preds = %1
  br label %111

27:                                               ; preds = %1
  br label %111

28:                                               ; preds = %1
  br label %111

29:                                               ; preds = %1
  br label %111

30:                                               ; preds = %1
  br label %111

31:                                               ; preds = %1
  br label %111

32:                                               ; preds = %1
  br label %111

33:                                               ; preds = %1
  br label %111

34:                                               ; preds = %1
  br label %111

35:                                               ; preds = %1
  br label %111

36:                                               ; preds = %1
  br label %111

37:                                               ; preds = %1
  br label %111

38:                                               ; preds = %1
  br label %111

39:                                               ; preds = %1
  br label %111

40:                                               ; preds = %1
  br label %111

41:                                               ; preds = %1
  br label %111

42:                                               ; preds = %1
  br label %111

43:                                               ; preds = %1
  br label %111

44:                                               ; preds = %1
  br label %111

45:                                               ; preds = %1
  br label %111

46:                                               ; preds = %1
  br label %111

47:                                               ; preds = %1
  br label %111

48:                                               ; preds = %1
  br label %111

49:                                               ; preds = %1
  br label %111

50:                                               ; preds = %1
  br label %111

51:                                               ; preds = %1
  br label %111

52:                                               ; preds = %1
  br label %111

53:                                               ; preds = %1
  br label %111

54:                                               ; preds = %1
  br label %111

55:                                               ; preds = %1
  br label %111

56:                                               ; preds = %1
  br label %111

57:                                               ; preds = %1
  br label %111

58:                                               ; preds = %1
  br label %111

59:                                               ; preds = %1
  br label %111

60:                                               ; preds = %1
  br label %111

61:                                               ; preds = %1
  br label %111

62:                                               ; preds = %1
  br label %111

63:                                               ; preds = %1
  br label %111

64:                                               ; preds = %1
  br label %111

65:                                               ; preds = %1
  br label %111

66:                                               ; preds = %1
  br label %111

67:                                               ; preds = %1
  br label %111

68:                                               ; preds = %1
  br label %111

69:                                               ; preds = %1
  br label %111

70:                                               ; preds = %1
  br label %111

71:                                               ; preds = %1
  br label %111

72:                                               ; preds = %1
  br label %111

73:                                               ; preds = %1
  br label %111

74:                                               ; preds = %1
  br label %111

75:                                               ; preds = %1
  br label %111

76:                                               ; preds = %1
  br label %111

77:                                               ; preds = %1
  br label %111

78:                                               ; preds = %1
  br label %111

79:                                               ; preds = %1
  br label %111

80:                                               ; preds = %1
  br label %111

81:                                               ; preds = %1
  br label %111

82:                                               ; preds = %1
  br label %111

83:                                               ; preds = %1
  br label %111

84:                                               ; preds = %1
  br label %111

85:                                               ; preds = %1
  br label %111

86:                                               ; preds = %1
  br label %111

87:                                               ; preds = %1
  br label %111

88:                                               ; preds = %1
  br label %111

89:                                               ; preds = %1
  br label %111

90:                                               ; preds = %1
  br label %111

91:                                               ; preds = %1
  br label %111

92:                                               ; preds = %1
  br label %111

93:                                               ; preds = %1
  br label %111

94:                                               ; preds = %1
  br label %111

95:                                               ; preds = %1
  br label %111

96:                                               ; preds = %1
  br label %111

97:                                               ; preds = %1
  br label %111

98:                                               ; preds = %1
  br label %111

99:                                               ; preds = %1
  br label %111

100:                                              ; preds = %1
  br label %111

101:                                              ; preds = %1
  br label %111

102:                                              ; preds = %1
  br label %111

103:                                              ; preds = %1
  br label %111

104:                                              ; preds = %1
  br label %111

105:                                              ; preds = %1
  br label %111

106:                                              ; preds = %1
  br label %111

107:                                              ; preds = %1
  br label %111

108:                                              ; preds = %1
  br label %111

109:                                              ; preds = %1
  br label %111

110:                                              ; preds = %1
  br label %111

111:                                              ; preds = %1, %110, %109, %108, %107, %106, %105, %104, %103, %102, %101, %100, %99, %98, %97, %96, %95, %94, %93, %92, %91, %90, %89, %88, %87, %86, %85, %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %112 = phi ptr [ @.str.523, %110 ], [ @.str.522, %109 ], [ @.str.521, %108 ], [ @.str.520, %107 ], [ @.str.519, %106 ], [ @.str.518, %105 ], [ @.str.517, %104 ], [ @.str.516, %103 ], [ @.str.515, %102 ], [ @.str.514, %101 ], [ @.str.513, %100 ], [ @.str.512, %99 ], [ @.str.511, %98 ], [ @.str.510, %97 ], [ @.str.509, %96 ], [ @.str.508, %95 ], [ @.str.507, %94 ], [ @.str.506, %93 ], [ @.str.505, %92 ], [ @.str.504, %91 ], [ @.str.503, %90 ], [ @.str.502, %89 ], [ @.str.501, %88 ], [ @.str.500, %87 ], [ @.str.499, %86 ], [ @.str.498, %85 ], [ @.str.497, %84 ], [ @.str.496, %83 ], [ @.str.495, %82 ], [ @.str.494, %81 ], [ @.str.493, %80 ], [ @.str.492, %79 ], [ @.str.491, %78 ], [ @.str.490, %77 ], [ @.str.489, %76 ], [ @.str.488, %75 ], [ @.str.487, %74 ], [ @.str.486, %73 ], [ @.str.485, %72 ], [ @.str.484, %71 ], [ @.str.483, %70 ], [ @.str.482, %69 ], [ @.str.481, %68 ], [ @.str.480, %67 ], [ @.str.479, %66 ], [ @.str.478, %65 ], [ @.str.477, %64 ], [ @.str.476, %63 ], [ @.str.475, %62 ], [ @.str.474, %61 ], [ @.str.473, %60 ], [ @.str.472, %59 ], [ @.str.471, %58 ], [ @.str.470, %57 ], [ @.str.469, %56 ], [ @.str.468, %55 ], [ @.str.467, %54 ], [ @.str.466, %53 ], [ @.str.465, %52 ], [ @.str.464, %51 ], [ @.str.463, %50 ], [ @.str.462, %49 ], [ @.str.461, %48 ], [ @.str.460, %47 ], [ @.str.459, %46 ], [ @.str.458, %45 ], [ @.str.457, %44 ], [ @.str.456, %43 ], [ @.str.455, %42 ], [ @.str.454, %41 ], [ @.str.453, %40 ], [ @.str.452, %39 ], [ @.str.451, %38 ], [ @.str.450, %37 ], [ @.str.449, %36 ], [ @.str.448, %35 ], [ @.str.447, %34 ], [ @.str.446, %33 ], [ @.str.445, %32 ], [ @.str.444, %31 ], [ @.str.443, %30 ], [ @.str.442, %29 ], [ @.str.441, %28 ], [ @.str.440, %27 ], [ @.str.439, %26 ], [ @.str.438, %25 ], [ @.str.437, %24 ], [ @.str.436, %23 ], [ @.str.435, %22 ], [ @.str.434, %21 ], [ @.str.433, %20 ], [ @.str.432, %19 ], [ @.str.431, %18 ], [ @.str.430, %17 ], [ @.str.429, %16 ], [ @.str.428, %15 ], [ @.str.427, %14 ], [ @.str.426, %13 ], [ @.str.425, %12 ], [ @.str.424, %11 ], [ @.str.423, %10 ], [ @.str.422, %9 ], [ @.str.421, %8 ], [ @.str.420, %7 ], [ @.str.419, %6 ], [ @.str.418, %5 ], [ @.str.417, %4 ], [ @.str.416, %3 ], [ @.str.415, %2 ], [ @.str.414, %1 ]
  ret ptr %112
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #14

declare ptr @get_identifier(ptr noundef) local_unnamed_addr #3

declare void @assemble_string(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @push_cfun(ptr noundef) local_unnamed_addr #3

declare void @set_decl_abstract_flags(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @pop_cfun() local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @dwarf2out_set_demangle_name_func(ptr noundef %0) local_unnamed_addr #25 {
  store ptr %0, ptr @demangle_name_func, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @debug_dwarf_die(ptr nocapture noundef readonly %0) local_unnamed_addr #10 {
  %2 = load ptr, ptr @stderr, align 8, !tbaa !6
  tail call fastcc void @print_die(ptr noundef %0, ptr noundef %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @print_die(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) unnamed_addr #10 {
  %3 = load i32, ptr @print_indent, align 4, !tbaa !21
  %4 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.616, i32 noundef %3, ptr noundef nonnull @.str.181)
  %5 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 7
  %6 = load i64, ptr %5, align 8, !tbaa !214
  %7 = load i32, ptr %0, align 8, !tbaa !185
  %8 = tail call fastcc ptr @dwarf_tag_name(i32 noundef %7)
  %9 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.593, i64 noundef %6, ptr noundef nonnull %8)
  %10 = load i32, ptr @print_indent, align 4, !tbaa !21
  %11 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.616, i32 noundef %10, ptr noundef nonnull @.str.181)
  %12 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 8
  %13 = load i64, ptr %12, align 8, !tbaa !500
  %14 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.594, i64 noundef %13)
  %15 = load i64, ptr %5, align 8, !tbaa !214
  %16 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.595, i64 noundef %15)
  %17 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %18 = icmp sgt i32 %17, 3
  br i1 %18, label %19, label %61

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  br i1 %22, label %61, label %23

23:                                               ; preds = %19
  %24 = load i32, ptr @print_indent, align 4, !tbaa !21
  %25 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.616, i32 noundef %24, ptr noundef nonnull @.str.181)
  %26 = tail call i64 @fwrite(ptr nonnull @.str.596, i64 13, i64 1, ptr %1)
  %27 = load ptr, ptr %20, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2
  %29 = load i8, ptr %28, align 1, !tbaa !17
  %30 = zext i8 %29 to i32
  %31 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %30)
  %32 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2, i64 1
  %33 = load i8, ptr %32, align 1, !tbaa !17
  %34 = zext i8 %33 to i32
  %35 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %34)
  %36 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2, i64 2
  %37 = load i8, ptr %36, align 1, !tbaa !17
  %38 = zext i8 %37 to i32
  %39 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %38)
  %40 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2, i64 3
  %41 = load i8, ptr %40, align 1, !tbaa !17
  %42 = zext i8 %41 to i32
  %43 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %42)
  %44 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2, i64 4
  %45 = load i8, ptr %44, align 1, !tbaa !17
  %46 = zext i8 %45 to i32
  %47 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %46)
  %48 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2, i64 5
  %49 = load i8, ptr %48, align 1, !tbaa !17
  %50 = zext i8 %49 to i32
  %51 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %50)
  %52 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2, i64 6
  %53 = load i8, ptr %52, align 1, !tbaa !17
  %54 = zext i8 %53 to i32
  %55 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %54)
  %56 = getelementptr inbounds %struct.comdat_type_struct, ptr %27, i64 0, i32 2, i64 7
  %57 = load i8, ptr %56, align 1, !tbaa !17
  %58 = zext i8 %57 to i32
  %59 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %58)
  %60 = tail call i32 @fputc(i32 10, ptr %1)
  br label %61

61:                                               ; preds = %23, %19, %2
  %62 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !157
  %64 = icmp eq ptr %63, null
  br i1 %64, label %234, label %65

65:                                               ; preds = %61, %229
  %66 = phi ptr [ %232, %229 ], [ %63, %61 ]
  %67 = phi i32 [ %231, %229 ], [ 0, %61 ]
  %68 = load i32, ptr %66, align 8, !tbaa !159
  %69 = icmp ugt i32 %68, %67
  br i1 %69, label %70, label %234

70:                                               ; preds = %65
  %71 = zext i32 %67 to i64
  %72 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71
  %73 = load i32, ptr @print_indent, align 4, !tbaa !21
  %74 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.616, i32 noundef %73, ptr noundef nonnull @.str.181)
  %75 = load i32, ptr %72, align 8, !tbaa !161
  %76 = tail call fastcc ptr @dwarf_attr_name(i32 noundef %75)
  %77 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.597, ptr noundef nonnull %76)
  %78 = getelementptr i8, ptr %72, i64 8
  %79 = load i32, ptr %78, align 8, !tbaa !163
  switch i32 %79, label %229 [
    i32 0, label %113
    i32 1, label %115
    i32 2, label %117
    i32 3, label %119
    i32 4, label %125
    i32 5, label %127
    i32 6, label %131
    i32 7, label %135
    i32 8, label %141
    i32 9, label %143
    i32 10, label %148
    i32 17, label %80
    i32 16, label %222
    i32 14, label %213
    i32 12, label %209
    i32 13, label %209
    i32 15, label %209
  ]

80:                                               ; preds = %70
  %81 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %82 = load i8, ptr %81, align 1, !tbaa !17
  %83 = zext i8 %82 to i32
  %84 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %83)
  %85 = getelementptr inbounds [8 x i8], ptr %81, i64 0, i64 1
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = zext i8 %86 to i32
  %88 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %87)
  %89 = getelementptr inbounds [8 x i8], ptr %81, i64 0, i64 2
  %90 = load i8, ptr %89, align 1, !tbaa !17
  %91 = zext i8 %90 to i32
  %92 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %91)
  %93 = getelementptr inbounds [8 x i8], ptr %81, i64 0, i64 3
  %94 = load i8, ptr %93, align 1, !tbaa !17
  %95 = zext i8 %94 to i32
  %96 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %95)
  %97 = getelementptr inbounds [8 x i8], ptr %81, i64 0, i64 4
  %98 = load i8, ptr %97, align 1, !tbaa !17
  %99 = zext i8 %98 to i32
  %100 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %99)
  %101 = getelementptr inbounds [8 x i8], ptr %81, i64 0, i64 5
  %102 = load i8, ptr %101, align 1, !tbaa !17
  %103 = zext i8 %102 to i32
  %104 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %103)
  %105 = getelementptr inbounds [8 x i8], ptr %81, i64 0, i64 6
  %106 = load i8, ptr %105, align 1, !tbaa !17
  %107 = zext i8 %106 to i32
  %108 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %107)
  %109 = getelementptr inbounds [8 x i8], ptr %81, i64 0, i64 7
  %110 = load i8, ptr %109, align 1, !tbaa !17
  %111 = zext i8 %110 to i32
  %112 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %111)
  br label %229

113:                                              ; preds = %70
  %114 = tail call i64 @fwrite(ptr nonnull @.str.598, i64 7, i64 1, ptr %1)
  br label %229

115:                                              ; preds = %70
  %116 = tail call i64 @fwrite(ptr nonnull @.str.599, i64 6, i64 1, ptr %1)
  br label %229

117:                                              ; preds = %70
  %118 = tail call i64 @fwrite(ptr nonnull @.str.600, i64 19, i64 1, ptr %1)
  br label %229

119:                                              ; preds = %70
  %120 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !17
  %122 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %121, i64 0, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !274
  %124 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.601, ptr noundef %123)
  br label %229

125:                                              ; preds = %70
  %126 = tail call i64 @fwrite(ptr nonnull @.str.602, i64 10, i64 1, ptr %1)
  br label %229

127:                                              ; preds = %70
  %128 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %129 = load i64, ptr %128, align 8, !tbaa !17
  %130 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.603, i64 noundef %129)
  br label %229

131:                                              ; preds = %70
  %132 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %133 = load i64, ptr %132, align 8, !tbaa !17
  %134 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.604, i64 noundef %133)
  br label %229

135:                                              ; preds = %70
  %136 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %137 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1, i32 0, i32 1
  %138 = load i64, ptr %137, align 8, !tbaa !17
  %139 = load i64, ptr %136, align 8, !tbaa !17
  %140 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.605, i64 noundef %138, i64 noundef %139)
  br label %229

141:                                              ; preds = %70
  %142 = tail call i64 @fwrite(ptr nonnull @.str.606, i64 33, i64 1, ptr %1)
  br label %229

143:                                              ; preds = %70
  %144 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %145 = load i8, ptr %144, align 8, !tbaa !17
  %146 = zext i8 %145 to i32
  %147 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.607, i32 noundef %146)
  br label %229

148:                                              ; preds = %70
  %149 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %150 = load ptr, ptr %149, align 8, !tbaa !17
  %151 = icmp eq ptr %150, null
  br i1 %151, label %207, label %152

152:                                              ; preds = %148
  %153 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %154 = icmp sgt i32 %153, 3
  %155 = getelementptr inbounds %struct.die_struct, ptr %150, i64 0, i32 1
  %156 = load ptr, ptr %155, align 8, !tbaa !17
  %157 = icmp eq ptr %156, null
  br i1 %154, label %158, label %200

158:                                              ; preds = %152
  br i1 %157, label %203, label %159

159:                                              ; preds = %158
  %160 = tail call i64 @fwrite(ptr nonnull @.str.608, i64 18, i64 1, ptr %1)
  %161 = load i32, ptr %78, align 8, !tbaa !163
  %162 = icmp eq i32 %161, 10
  br i1 %162, label %164, label %163

163:                                              ; preds = %159
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 7150, ptr noundef nonnull @.str.5) #31
  br label %164

164:                                              ; preds = %159, %163
  %165 = load ptr, ptr %149, align 8, !tbaa !17
  %166 = getelementptr inbounds %struct.die_struct, ptr %165, i64 0, i32 1
  %167 = load ptr, ptr %166, align 8, !tbaa !17
  %168 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2
  %169 = load i8, ptr %168, align 1, !tbaa !17
  %170 = zext i8 %169 to i32
  %171 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %170)
  %172 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2, i64 1
  %173 = load i8, ptr %172, align 1, !tbaa !17
  %174 = zext i8 %173 to i32
  %175 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %174)
  %176 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2, i64 2
  %177 = load i8, ptr %176, align 1, !tbaa !17
  %178 = zext i8 %177 to i32
  %179 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %178)
  %180 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2, i64 3
  %181 = load i8, ptr %180, align 1, !tbaa !17
  %182 = zext i8 %181 to i32
  %183 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %182)
  %184 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2, i64 4
  %185 = load i8, ptr %184, align 1, !tbaa !17
  %186 = zext i8 %185 to i32
  %187 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %186)
  %188 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2, i64 5
  %189 = load i8, ptr %188, align 1, !tbaa !17
  %190 = zext i8 %189 to i32
  %191 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %190)
  %192 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2, i64 6
  %193 = load i8, ptr %192, align 1, !tbaa !17
  %194 = zext i8 %193 to i32
  %195 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %194)
  %196 = getelementptr inbounds %struct.comdat_type_struct, ptr %167, i64 0, i32 2, i64 7
  %197 = load i8, ptr %196, align 1, !tbaa !17
  %198 = zext i8 %197 to i32
  %199 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.526, i32 noundef %198)
  br label %229

200:                                              ; preds = %152
  br i1 %157, label %203, label %201

201:                                              ; preds = %200
  %202 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.609, ptr noundef nonnull %156)
  br label %229

203:                                              ; preds = %158, %200
  %204 = getelementptr inbounds %struct.die_struct, ptr %150, i64 0, i32 7
  %205 = load i64, ptr %204, align 8, !tbaa !214
  %206 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.610, i64 noundef %205)
  br label %229

207:                                              ; preds = %148
  %208 = tail call i64 @fwrite(ptr nonnull @.str.611, i64 13, i64 1, ptr %1)
  br label %229

209:                                              ; preds = %70, %70, %70
  %210 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %211 = load ptr, ptr %210, align 8, !tbaa !17
  %212 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.612, ptr noundef %211)
  br label %229

213:                                              ; preds = %70
  %214 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %215 = load ptr, ptr %214, align 8, !tbaa !17
  %216 = load ptr, ptr %215, align 8, !tbaa !186
  %217 = icmp eq ptr %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %213
  %219 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.613, ptr noundef nonnull %216)
  br label %229

220:                                              ; preds = %213
  %221 = tail call i64 @fwrite(ptr nonnull @.str.614, i64 6, i64 1, ptr %1)
  br label %229

222:                                              ; preds = %70
  %223 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %66, i64 0, i32 2, i64 %71, i32 1, i32 1
  %224 = load ptr, ptr %223, align 8, !tbaa !17
  %225 = load ptr, ptr %224, align 8, !tbaa !124
  %226 = getelementptr inbounds %struct.dwarf_file_data, ptr %224, i64 0, i32 1
  %227 = load i32, ptr %226, align 8, !tbaa !126
  %228 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.615, ptr noundef %225, i32 noundef %227)
  br label %229

229:                                              ; preds = %80, %70, %218, %220, %207, %201, %203, %164, %222, %209, %143, %141, %135, %131, %127, %125, %119, %117, %115, %113
  %230 = tail call i32 @fputc(i32 10, ptr %1)
  %231 = add nuw i32 %67, 1
  %232 = load ptr, ptr %62, align 8, !tbaa !157
  %233 = icmp eq ptr %232, null
  br i1 %233, label %234, label %65, !llvm.loop !510

234:                                              ; preds = %229, %65, %61
  %235 = getelementptr inbounds %struct.die_struct, ptr %0, i64 0, i32 4
  %236 = load ptr, ptr %235, align 8, !tbaa !175
  %237 = icmp eq ptr %236, null
  %238 = load i32, ptr @print_indent, align 4, !tbaa !21
  br i1 %237, label %250, label %239

239:                                              ; preds = %234
  %240 = add nsw i32 %238, 4
  store i32 %240, ptr @print_indent, align 4, !tbaa !21
  br label %241

241:                                              ; preds = %239, %241
  %242 = phi ptr [ %236, %239 ], [ %244, %241 ]
  %243 = getelementptr inbounds %struct.die_struct, ptr %242, i64 0, i32 5
  %244 = load ptr, ptr %243, align 8, !tbaa !176
  tail call fastcc void @print_die(ptr noundef %244, ptr noundef %1)
  %245 = load ptr, ptr %235, align 8, !tbaa !175
  %246 = icmp eq ptr %244, %245
  br i1 %246, label %247, label %241, !llvm.loop !511

247:                                              ; preds = %241
  %248 = load i32, ptr @print_indent, align 4, !tbaa !21
  %249 = add nsw i32 %248, -4
  store i32 %249, ptr @print_indent, align 4, !tbaa !21
  br label %250

250:                                              ; preds = %234, %247
  %251 = phi i32 [ %249, %247 ], [ %238, %234 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %250
  %254 = tail call i32 @fputc(i32 10, ptr %1)
  br label %255

255:                                              ; preds = %253, %250
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @debug_dwarf() local_unnamed_addr #10 {
  store i32 0, ptr @print_indent, align 4, !tbaa !21
  %1 = load ptr, ptr @comp_unit_die, align 8, !tbaa !6
  %2 = load ptr, ptr @stderr, align 8, !tbaa !6
  tail call fastcc void @print_die(ptr noundef %1, ptr noundef %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_vcall_insn(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare i32 @ggc_set_mark(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_vcall_entry_gc(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_dcall_entry_gc(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !512
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %6, %21
  %11 = phi i64 [ %22, %21 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %0, i64 0, i32 2, i64 %11, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !224
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %13) #31
  br label %16

16:                                               ; preds = %10, %15
  %17 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %0, i64 0, i32 2, i64 %11, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !222
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %18)
  br label %21

21:                                               ; preds = %16, %20
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp eq i64 %22, %8
  br i1 %23, label %24, label %10, !llvm.loop !514

24:                                               ; preds = %21, %6, %1, %3
  ret void
}

declare void @gt_ggc_mx_lang_tree_node(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_die_struct(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %53, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %53

6:                                                ; preds = %3, %11
  %7 = phi ptr [ %9, %11 ], [ %0, %3 ]
  %8 = getelementptr inbounds %struct.die_struct, ptr %7, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !176
  %10 = icmp ult ptr %9, inttoptr (i64 2 to ptr)
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @ggc_set_mark(ptr noundef nonnull %9) #31
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %6, label %14, !llvm.loop !515

14:                                               ; preds = %6, %11
  br label %15

15:                                               ; preds = %14, %50
  %16 = phi ptr [ %51, %50 ], [ %0, %14 ]
  %17 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %18 = icmp slt i32 %17, 4
  %19 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  br i1 %18, label %21, label %22

21:                                               ; preds = %15
  tail call void @gt_ggc_m_S(ptr noundef %20) #31
  br label %25

22:                                               ; preds = %15
  %23 = icmp eq ptr %20, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  tail call void @gt_ggc_mx_comdat_type_struct(ptr noundef nonnull %20)
  br label %25

25:                                               ; preds = %21, %24, %22
  %26 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !157
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @gt_ggc_mx_VEC_dw_attr_node_gc(ptr noundef nonnull %27)
  br label %30

30:                                               ; preds = %25, %29
  %31 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !174
  %33 = icmp eq ptr %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %32)
  br label %35

35:                                               ; preds = %30, %34
  %36 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 4
  %37 = load ptr, ptr %36, align 8, !tbaa !175
  %38 = icmp eq ptr %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %37)
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 5
  %42 = load ptr, ptr %41, align 8, !tbaa !176
  %43 = icmp eq ptr %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %42)
  br label %45

45:                                               ; preds = %40, %44
  %46 = getelementptr inbounds %struct.die_struct, ptr %16, i64 0, i32 6
  %47 = load ptr, ptr %46, align 8, !tbaa !295
  %48 = icmp eq ptr %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %47)
  br label %50

50:                                               ; preds = %49, %45
  %51 = load ptr, ptr %41, align 8, !tbaa !176
  %52 = icmp eq ptr %51, %9
  br i1 %52, label %53, label %15, !llvm.loop !516

53:                                               ; preds = %50, %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_var_loc_list_def(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !249
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_var_loc_node(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %1, %6, %9, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_var_loc_node(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %30, label %3

3:                                                ; preds = %1, %7
  %4 = phi ptr [ %9, %7 ], [ %0, %1 ]
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %4) #31
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.var_loc_node, ptr %4, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !248
  %10 = icmp ult ptr %9, inttoptr (i64 2 to ptr)
  br i1 %10, label %11, label %3, !llvm.loop !517

11:                                               ; preds = %3, %7
  %12 = phi ptr [ %4, %3 ], [ %9, %7 ]
  %13 = icmp eq ptr %12, %0
  br i1 %13, label %30, label %14

14:                                               ; preds = %11, %27
  %15 = phi ptr [ %28, %27 ], [ %0, %11 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !246
  %17 = icmp eq ptr %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %16) #31
  br label %19

19:                                               ; preds = %18, %14
  %20 = getelementptr inbounds %struct.var_loc_node, ptr %15, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !250
  tail call void @gt_ggc_m_S(ptr noundef %21) #31
  %22 = getelementptr inbounds %struct.var_loc_node, ptr %15, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !248
  %24 = icmp eq ptr %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  tail call void @gt_ggc_mx_var_loc_node(ptr noundef nonnull %23)
  %26 = load ptr, ptr %22, align 8, !tbaa !248
  br label %27

27:                                               ; preds = %25, %19
  %28 = phi ptr [ %26, %25 ], [ null, %19 ]
  %29 = icmp eq ptr %28, %12
  br i1 %29, label %30, label %14, !llvm.loop !518

30:                                               ; preds = %27, %1, %11
  ret void
}

declare void @gt_ggc_mx_rtx_def(ptr noundef) #3

declare void @gt_ggc_m_S(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_die_arg_entry_gc(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !519
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %6, %21
  %11 = phi i64 [ %22, %21 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %0, i64 0, i32 2, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !152
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %13)
  br label %16

16:                                               ; preds = %10, %15
  %17 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %0, i64 0, i32 2, i64 %11, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !154
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %18) #31
  br label %21

21:                                               ; preds = %16, %20
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp eq i64 %22, %8
  br i1 %23, label %24, label %10, !llvm.loop !521

24:                                               ; preds = %21, %6, %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_limbo_die_struct(ptr noundef %0) #10 {
  br label %2

2:                                                ; preds = %17, %1
  %3 = phi ptr [ %0, %1 ], [ %19, %17 ]
  %4 = icmp ult ptr %3, inttoptr (i64 2 to ptr)
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @ggc_set_mark(ptr noundef nonnull %3) #31
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %5
  %9 = load ptr, ptr %3, align 8, !tbaa !173
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %9)
  br label %12

12:                                               ; preds = %8, %11
  %13 = getelementptr inbounds %struct.limbo_die_struct, ptr %3, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !177
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %14) #31
  br label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %struct.limbo_die_struct, ptr %3, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !171
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %2

21:                                               ; preds = %2, %17, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_pubname_entry_gc(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !522
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %6, %16
  %11 = phi i64 [ %19, %16 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !282
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %13)
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %11, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !307
  tail call void @gt_ggc_m_S(ptr noundef %18) #31
  %19 = add nuw nsw i64 %11, 1
  %20 = icmp eq i64 %19, %8
  br i1 %20, label %21, label %10, !llvm.loop !524

21:                                               ; preds = %16, %6, %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_dw_attr_node_gc(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %66, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %66

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !525
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %66, label %10

10:                                               ; preds = %6, %63
  %11 = phi i64 [ %64, %63 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !163
  switch i32 %13, label %63 [
    i32 0, label %14
    i32 16, label %54
    i32 3, label %19
    i32 2, label %24
    i32 12, label %51
    i32 14, label %40
    i32 8, label %29
    i32 10, label %35
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %63, label %18

18:                                               ; preds = %14
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %16) #31
  br label %63

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  br i1 %22, label %63, label %23

23:                                               ; preds = %19
  tail call void @gt_ggc_mx_dw_loc_list_struct(ptr noundef nonnull %21)
  br label %63

24:                                               ; preds = %10
  %25 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = icmp eq ptr %26, null
  br i1 %27, label %63, label %28

28:                                               ; preds = %24
  tail call void @gt_ggc_mx_dw_loc_descr_struct(ptr noundef nonnull %26)
  br label %63

29:                                               ; preds = %10
  %30 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = icmp ult ptr %31, inttoptr (i64 2 to ptr)
  br i1 %32, label %63, label %33

33:                                               ; preds = %29
  %34 = tail call i32 @ggc_set_mark(ptr noundef nonnull %31) #31
  br label %63

35:                                               ; preds = %10
  %36 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = icmp eq ptr %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %37)
  br label %63

40:                                               ; preds = %10
  %41 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = icmp ult ptr %42, inttoptr (i64 2 to ptr)
  br i1 %43, label %63, label %44

44:                                               ; preds = %40
  %45 = tail call i32 @ggc_set_mark(ptr noundef nonnull %42) #31
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %63

47:                                               ; preds = %44
  %48 = load ptr, ptr %42, align 8, !tbaa !186
  tail call void @gt_ggc_m_S(ptr noundef %48) #31
  %49 = getelementptr inbounds %struct.indirect_string_node, ptr %42, i64 0, i32 3
  %50 = load ptr, ptr %49, align 8, !tbaa !308
  tail call void @gt_ggc_m_S(ptr noundef %50) #31
  br label %63

51:                                               ; preds = %10
  %52 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  tail call void @gt_ggc_m_S(ptr noundef %53) #31
  br label %63

54:                                               ; preds = %10
  %55 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %11, i32 1, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = icmp ult ptr %56, inttoptr (i64 2 to ptr)
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = tail call i32 @ggc_set_mark(ptr noundef nonnull %56) #31
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = load ptr, ptr %56, align 8, !tbaa !124
  tail call void @gt_ggc_m_S(ptr noundef %62) #31
  br label %63

63:                                               ; preds = %29, %54, %40, %61, %58, %47, %44, %33, %51, %18, %14, %23, %19, %28, %24, %10, %39, %35
  %64 = add nuw nsw i64 %11, 1
  %65 = icmp eq i64 %64, %8
  br i1 %65, label %66, label %10, !llvm.loop !527

66:                                               ; preds = %63, %6, %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_loc_list_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %23

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !273
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_dw_loc_list_struct(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %9, %6
  %11 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !301
  tail call void @gt_ggc_m_S(ptr noundef %12) #31
  %13 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !302
  tail call void @gt_ggc_m_S(ptr noundef %14) #31
  %15 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !274
  tail call void @gt_ggc_m_S(ptr noundef %16) #31
  %17 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 4
  %18 = load ptr, ptr %17, align 8, !tbaa !303
  tail call void @gt_ggc_m_S(ptr noundef %18) #31
  %19 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !270
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %10
  tail call void @gt_ggc_mx_dw_loc_descr_struct(ptr noundef nonnull %20)
  br label %23

23:                                               ; preds = %1, %10, %22, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_loc_descr_struct(ptr noundef %0) local_unnamed_addr #10 {
  br label %2

2:                                                ; preds = %67, %1
  %3 = phi ptr [ %0, %1 ], [ %69, %67 ]
  %4 = icmp ult ptr %3, inttoptr (i64 2 to ptr)
  br i1 %4, label %95, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @ggc_set_mark(ptr noundef nonnull %3) #31
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %95

8:                                                ; preds = %5
  %9 = load ptr, ptr %3, align 8, !tbaa !57
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @gt_ggc_mx_dw_loc_descr_struct(ptr noundef nonnull %9)
  br label %12

12:                                               ; preds = %11, %8
  %13 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3
  %14 = load i32, ptr %13, align 8, !tbaa !52
  switch i32 %14, label %54 [
    i32 0, label %15
    i32 16, label %49
    i32 3, label %20
    i32 2, label %25
    i32 12, label %46
    i32 14, label %41
    i32 8, label %30
    i32 10, label %36
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, null
  br i1 %18, label %54, label %19

19:                                               ; preds = %15
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %17) #31
  br label %54

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = icmp eq ptr %22, null
  br i1 %23, label %54, label %24

24:                                               ; preds = %20
  tail call void @gt_ggc_mx_dw_loc_list_struct(ptr noundef nonnull %22)
  br label %54

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = icmp eq ptr %27, null
  br i1 %28, label %54, label %29

29:                                               ; preds = %25
  tail call void @gt_ggc_mx_dw_loc_descr_struct(ptr noundef nonnull %27)
  br label %54

30:                                               ; preds = %12
  %31 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp ult ptr %32, inttoptr (i64 2 to ptr)
  br i1 %33, label %54, label %34

34:                                               ; preds = %30
  %35 = tail call i32 @ggc_set_mark(ptr noundef nonnull %32) #31
  br label %54

36:                                               ; preds = %12
  %37 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = icmp eq ptr %38, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %36
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %38)
  br label %54

41:                                               ; preds = %12
  %42 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = icmp eq ptr %43, null
  br i1 %44, label %54, label %45

45:                                               ; preds = %41
  tail call void @gt_ggc_mx_indirect_string_node(ptr noundef nonnull %43)
  br label %54

46:                                               ; preds = %12
  %47 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  tail call void @gt_ggc_m_S(ptr noundef %48) #31
  br label %54

49:                                               ; preds = %12
  %50 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @gt_ggc_mx_dwarf_file_data(ptr noundef nonnull %51)
  br label %54

54:                                               ; preds = %30, %34, %49, %53, %41, %45, %36, %40, %12, %25, %29, %20, %24, %15, %19, %46
  %55 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4
  %56 = load i32, ptr %55, align 8, !tbaa !49
  switch i32 %56, label %95 [
    i32 0, label %57
    i32 16, label %90
    i32 3, label %62
    i32 2, label %67
    i32 12, label %87
    i32 14, label %82
    i32 8, label %71
    i32 10, label %77
  ]

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = icmp eq ptr %59, null
  br i1 %60, label %95, label %61

61:                                               ; preds = %57
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %59) #31
  br label %95

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %95, label %66

66:                                               ; preds = %62
  tail call void @gt_ggc_mx_dw_loc_list_struct(ptr noundef nonnull %64)
  br label %95

67:                                               ; preds = %54
  %68 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = icmp eq ptr %69, null
  br i1 %70, label %95, label %2

71:                                               ; preds = %54
  %72 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = icmp ult ptr %73, inttoptr (i64 2 to ptr)
  br i1 %74, label %95, label %75

75:                                               ; preds = %71
  %76 = tail call i32 @ggc_set_mark(ptr noundef nonnull %73) #31
  br label %95

77:                                               ; preds = %54
  %78 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = icmp eq ptr %79, null
  br i1 %80, label %95, label %81

81:                                               ; preds = %77
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %79)
  br label %95

82:                                               ; preds = %54
  %83 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !17
  %85 = icmp eq ptr %84, null
  br i1 %85, label %95, label %86

86:                                               ; preds = %82
  tail call void @gt_ggc_mx_indirect_string_node(ptr noundef nonnull %84)
  br label %95

87:                                               ; preds = %54
  %88 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !17
  tail call void @gt_ggc_m_S(ptr noundef %89) #31
  br label %95

90:                                               ; preds = %54
  %91 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = icmp eq ptr %92, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %90
  tail call void @gt_ggc_mx_dwarf_file_data(ptr noundef nonnull %92)
  br label %95

95:                                               ; preds = %2, %67, %54, %5, %71, %75, %87, %61, %57, %66, %62, %81, %77, %86, %82, %94, %90
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_indirect_string_node(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !186
  tail call void @gt_ggc_m_S(ptr noundef %7) #31
  %8 = getelementptr inbounds %struct.indirect_string_node, ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !308
  tail call void @gt_ggc_m_S(ptr noundef %9) #31
  br label %10

10:                                               ; preds = %1, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dwarf_file_data(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !124
  tail call void @gt_ggc_m_S(ptr noundef %7) #31
  br label %8

8:                                                ; preds = %1, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_comdat_type_struct(ptr noundef %0) #10 {
  br label %2

2:                                                ; preds = %17, %1
  %3 = phi ptr [ %0, %1 ], [ %19, %17 ]
  %4 = icmp ult ptr %3, inttoptr (i64 2 to ptr)
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @ggc_set_mark(ptr noundef nonnull %3) #31
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %5
  %9 = load ptr, ptr %3, align 8, !tbaa !196
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %9)
  br label %12

12:                                               ; preds = %8, %11
  %13 = getelementptr inbounds %struct.comdat_type_struct, ptr %3, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !213
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %14)
  br label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %struct.comdat_type_struct, ptr %3, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !291
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %2

21:                                               ; preds = %2, %17, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_ranges_by_label_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !237
  tail call void @gt_ggc_m_S(ptr noundef %7) #31
  %8 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !239
  tail call void @gt_ggc_m_S(ptr noundef %9) #31
  br label %10

10:                                               ; preds = %1, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_ranges_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_separate_line_info_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_line_info_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_deferred_locations_gc(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !528
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %6, %21
  %11 = phi i64 [ %22, %21 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %0, i64 0, i32 2, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !169
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %13) #31
  br label %16

16:                                               ; preds = %10, %15
  %17 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %0, i64 0, i32 2, i64 %11, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !167
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %18)
  br label %21

21:                                               ; preds = %16, %20
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp eq i64 %22, %8
  br i1 %23, label %24, label %10, !llvm.loop !530

24:                                               ; preds = %21, %6, %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_queued_reg_save(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !100
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_queued_reg_save(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %6, %9
  %11 = getelementptr inbounds %struct.queued_reg_save, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !70
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %12) #31
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.queued_reg_save, ptr %0, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !81
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %17) #31
  br label %20

20:                                               ; preds = %1, %15, %19, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_fde_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !117
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %7) #31
  br label %10

10:                                               ; preds = %9, %6
  %11 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !118
  tail call void @gt_ggc_m_S(ptr noundef %12) #31
  %13 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !54
  tail call void @gt_ggc_m_S(ptr noundef %14) #31
  %15 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !119
  tail call void @gt_ggc_m_S(ptr noundef %16) #31
  %17 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 4
  %18 = load ptr, ptr %17, align 8, !tbaa !204
  tail call void @gt_ggc_m_S(ptr noundef %18) #31
  %19 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !205
  tail call void @gt_ggc_m_S(ptr noundef %20) #31
  %21 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 6
  %22 = load ptr, ptr %21, align 8, !tbaa !206
  tail call void @gt_ggc_m_S(ptr noundef %22) #31
  %23 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 7
  %24 = load ptr, ptr %23, align 8, !tbaa !207
  tail call void @gt_ggc_m_S(ptr noundef %24) #31
  %25 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !134
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %10
  tail call void @gt_ggc_mx_dw_cfi_struct(ptr noundef nonnull %26)
  br label %29

29:                                               ; preds = %10, %28
  %30 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 9
  %31 = load ptr, ptr %30, align 8, !tbaa !132
  %32 = icmp eq ptr %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @gt_ggc_mx_dw_cfi_struct(ptr noundef nonnull %31)
  br label %34

34:                                               ; preds = %1, %29, %33, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_dw_cfi_struct(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !46
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_dw_cfi_struct(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %9, %6
  %11 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !48
  %13 = tail call fastcc i32 @dw_cfi_oprnd1_desc(i32 noundef %12), !range !531
  switch i32 %13, label %22 [
    i32 4, label %17
    i32 3, label %14
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  tail call void @gt_ggc_m_S(ptr noundef %16) #31
  br label %22

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @gt_ggc_mx_dw_loc_descr_struct(ptr noundef nonnull %19)
  br label %22

22:                                               ; preds = %10, %17, %21, %14
  %23 = load i32, ptr %11, align 8, !tbaa !48
  %24 = icmp eq i32 %23, 16
  br i1 %24, label %25, label %30

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @gt_ggc_mx_dw_loc_descr_struct(ptr noundef nonnull %27)
  br label %30

30:                                               ; preds = %22, %1, %29, %25, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @dw_cfi_oprnd1_desc(i32 noundef %0) unnamed_addr #10 {
  switch i32 %0, label %6 [
    i32 0, label %7
    i32 45, label %7
    i32 10, label %7
    i32 11, label %7
    i32 1, label %2
    i32 2, label %2
    i32 3, label %2
    i32 4, label %2
    i32 29, label %2
    i32 128, label %3
    i32 5, label %3
    i32 12, label %3
    i32 17, label %3
    i32 18, label %3
    i32 192, label %3
    i32 6, label %3
    i32 7, label %3
    i32 8, label %3
    i32 13, label %3
    i32 9, label %3
    i32 16, label %3
    i32 14, label %4
    i32 46, label %4
    i32 19, label %4
    i32 15, label %5
  ]

2:                                                ; preds = %1, %1, %1, %1, %1
  br label %7

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %7

4:                                                ; preds = %1, %1, %1
  br label %7

5:                                                ; preds = %1
  br label %7

6:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.4, i32 noundef 2926, ptr noundef nonnull @.str.5) #31
  br label %7

7:                                                ; preds = %1, %1, %1, %1, %6, %5, %4, %3, %2
  %8 = phi i32 [ 0, %6 ], [ 4, %5 ], [ 2, %4 ], [ 1, %3 ], [ 3, %2 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_m_P10vcall_insn4htab(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %35

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !532
  %9 = icmp eq ptr %8, null
  br i1 %9, label %35, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %11, align 8, !tbaa !534
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %10, %24
  %15 = phi i64 [ %25, %24 ], [ %12, %10 ]
  %16 = phi i64 [ %26, %24 ], [ 0, %10 ]
  %17 = load ptr, ptr %7, align 8, !tbaa !532
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8, !tbaa !6
  %20 = icmp ult ptr %19, inttoptr (i64 2 to ptr)
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = tail call i32 @ggc_set_mark(ptr noundef nonnull %19) #31
  %23 = load i64, ptr %11, align 8, !tbaa !534
  br label %24

24:                                               ; preds = %14, %21
  %25 = phi i64 [ %15, %14 ], [ %23, %21 ]
  %26 = add i64 %16, 1
  %27 = icmp eq i64 %26, %25
  br i1 %27, label %28, label %14, !llvm.loop !535

28:                                               ; preds = %24
  %29 = load ptr, ptr %7, align 8, !tbaa !532
  br label %30

30:                                               ; preds = %28, %10
  %31 = phi ptr [ %29, %28 ], [ %8, %10 ]
  %32 = icmp ult ptr %31, inttoptr (i64 2 to ptr)
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @ggc_set_mark(ptr noundef nonnull %31) #31
  br label %35

35:                                               ; preds = %30, %1, %33, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_m_P16var_loc_list_def4htab(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %38, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %38

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !532
  %9 = icmp eq ptr %8, null
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %11, align 8, !tbaa !534
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %10, %27
  %15 = phi i64 [ %28, %27 ], [ 0, %10 ]
  %16 = load ptr, ptr %7, align 8, !tbaa !532
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8, !tbaa !6
  %19 = icmp ult ptr %18, inttoptr (i64 2 to ptr)
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = tail call i32 @ggc_set_mark(ptr noundef nonnull %18) #31
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = load ptr, ptr %18, align 8, !tbaa !249
  %25 = icmp eq ptr %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @gt_ggc_mx_var_loc_node(ptr noundef nonnull %24)
  br label %27

27:                                               ; preds = %14, %26, %23, %20
  %28 = add i64 %15, 1
  %29 = load i64, ptr %11, align 8, !tbaa !534
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %31, label %14, !llvm.loop !536

31:                                               ; preds = %27
  %32 = load ptr, ptr %7, align 8, !tbaa !532
  br label %33

33:                                               ; preds = %31, %10
  %34 = phi ptr [ %32, %31 ], [ %8, %10 ]
  %35 = icmp ult ptr %34, inttoptr (i64 2 to ptr)
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @ggc_set_mark(ptr noundef nonnull %34) #31
  br label %38

38:                                               ; preds = %33, %1, %36, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_m_P10die_struct4htab(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !532
  %9 = icmp eq ptr %8, null
  br i1 %9, label %34, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %11, align 8, !tbaa !534
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %29, label %14

14:                                               ; preds = %10, %23
  %15 = phi i64 [ %24, %23 ], [ %12, %10 ]
  %16 = phi i64 [ %25, %23 ], [ 0, %10 ]
  %17 = load ptr, ptr %7, align 8, !tbaa !532
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8, !tbaa !6
  %20 = icmp eq ptr %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %14
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %19)
  %22 = load i64, ptr %11, align 8, !tbaa !534
  br label %23

23:                                               ; preds = %14, %21
  %24 = phi i64 [ %15, %14 ], [ %22, %21 ]
  %25 = add i64 %16, 1
  %26 = icmp eq i64 %25, %24
  br i1 %26, label %27, label %14, !llvm.loop !537

27:                                               ; preds = %23
  %28 = load ptr, ptr %7, align 8, !tbaa !532
  br label %29

29:                                               ; preds = %27, %10
  %30 = phi ptr [ %28, %27 ], [ %8, %10 ]
  %31 = icmp ult ptr %30, inttoptr (i64 2 to ptr)
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @ggc_set_mark(ptr noundef nonnull %30) #31
  br label %34

34:                                               ; preds = %29, %1, %32, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_m_P15dwarf_file_data4htab(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !532
  %9 = icmp eq ptr %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %11, align 8, !tbaa !534
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %10, %25
  %15 = phi i64 [ %26, %25 ], [ 0, %10 ]
  %16 = load ptr, ptr %7, align 8, !tbaa !532
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8, !tbaa !6
  %19 = icmp ult ptr %18, inttoptr (i64 2 to ptr)
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = tail call i32 @ggc_set_mark(ptr noundef nonnull %18) #31
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = load ptr, ptr %18, align 8, !tbaa !124
  tail call void @gt_ggc_m_S(ptr noundef %24) #31
  br label %25

25:                                               ; preds = %14, %23, %20
  %26 = add i64 %15, 1
  %27 = load i64, ptr %11, align 8, !tbaa !534
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %14, !llvm.loop !538

29:                                               ; preds = %25
  %30 = load ptr, ptr %7, align 8, !tbaa !532
  br label %31

31:                                               ; preds = %29, %10
  %32 = phi ptr [ %30, %29 ], [ %8, %10 ]
  %33 = icmp ult ptr %32, inttoptr (i64 2 to ptr)
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = tail call i32 @ggc_set_mark(ptr noundef nonnull %32) #31
  br label %36

36:                                               ; preds = %31, %1, %34, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_m_P20indirect_string_node4htab(ptr noundef %0) #10 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %38, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %38

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !532
  %9 = icmp eq ptr %8, null
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %11, align 8, !tbaa !534
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %10, %27
  %15 = phi i64 [ %28, %27 ], [ 0, %10 ]
  %16 = load ptr, ptr %7, align 8, !tbaa !532
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8, !tbaa !6
  %19 = icmp ult ptr %18, inttoptr (i64 2 to ptr)
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = tail call i32 @ggc_set_mark(ptr noundef nonnull %18) #31
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = load ptr, ptr %18, align 8, !tbaa !186
  tail call void @gt_ggc_m_S(ptr noundef %24) #31
  %25 = getelementptr inbounds %struct.indirect_string_node, ptr %18, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !308
  tail call void @gt_ggc_m_S(ptr noundef %26) #31
  br label %27

27:                                               ; preds = %14, %23, %20
  %28 = add i64 %15, 1
  %29 = load i64, ptr %11, align 8, !tbaa !534
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %31, label %14, !llvm.loop !539

31:                                               ; preds = %27
  %32 = load ptr, ptr %7, align 8, !tbaa !532
  br label %33

33:                                               ; preds = %31, %10
  %34 = phi ptr [ %32, %31 ], [ %8, %10 ]
  %35 = icmp ult ptr %34, inttoptr (i64 2 to ptr)
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @ggc_set_mark(ptr noundef nonnull %34) #31
  br label %38

38:                                               ; preds = %33, %1, %36, %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_vcall_insn(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_10vcall_insn, i32 noundef 70) #31
  ret void
}

declare i32 @gt_pch_note_object(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @gt_pch_p_10vcall_insn(ptr nocapture %0, ptr nocapture %1, ptr nocapture %2, ptr nocapture %3) #13 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_vcall_entry_gc(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_18VEC_vcall_entry_gc, i32 noundef 71) #31
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @gt_pch_p_18VEC_vcall_entry_gc(ptr nocapture %0, ptr nocapture %1, ptr nocapture %2, ptr nocapture %3) #13 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_dcall_entry_gc(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_18VEC_dcall_entry_gc, i32 noundef 72) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !512
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %4, %19
  %9 = phi i64 [ %20, %19 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %0, i64 0, i32 2, i64 %9, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !224
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %11) #31
  br label %14

14:                                               ; preds = %8, %13
  %15 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %0, i64 0, i32 2, i64 %9, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !222
  %17 = icmp eq ptr %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %16)
  br label %19

19:                                               ; preds = %14, %18
  %20 = add nuw nsw i64 %9, 1
  %21 = icmp eq i64 %20, %6
  br i1 %21, label %22, label %8, !llvm.loop !540

22:                                               ; preds = %19, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_18VEC_dcall_entry_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load i32, ptr %1, align 8, !tbaa !512
  %6 = zext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %14, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %1, i64 0, i32 2, i64 %11, i32 1
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #31
  %13 = getelementptr inbounds %struct.VEC_dcall_entry_base, ptr %1, i64 0, i32 2, i64 %11, i32 2
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #31
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %6
  br i1 %15, label %16, label %10, !llvm.loop !541

16:                                               ; preds = %10, %4
  ret void
}

declare void @gt_pch_nx_lang_tree_node(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_die_struct(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_10die_struct, i32 noundef 138) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1, %4
  %5 = phi ptr [ %7, %4 ], [ %0, %1 ]
  %6 = getelementptr inbounds %struct.die_struct, ptr %5, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !176
  %8 = tail call i32 @gt_pch_note_object(ptr noundef %7, ptr noundef %7, ptr noundef nonnull @gt_pch_p_10die_struct, i32 noundef 138) #31
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %4, !llvm.loop !542

10:                                               ; preds = %4, %45
  %11 = phi ptr [ %46, %45 ], [ %0, %4 ]
  %12 = load i32, ptr @dwarf_version, align 4, !tbaa !21
  %13 = icmp slt i32 %12, 4
  %14 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  br i1 %13, label %16, label %17

16:                                               ; preds = %10
  tail call void @gt_pch_n_S(ptr noundef %15) #31
  br label %20

17:                                               ; preds = %10
  %18 = icmp eq ptr %15, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  tail call void @gt_pch_nx_comdat_type_struct(ptr noundef nonnull %15)
  br label %20

20:                                               ; preds = %16, %19, %17
  %21 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !157
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @gt_pch_nx_VEC_dw_attr_node_gc(ptr noundef nonnull %22)
  br label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !174
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %27)
  br label %30

30:                                               ; preds = %25, %29
  %31 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !175
  %33 = icmp eq ptr %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %32)
  br label %35

35:                                               ; preds = %30, %34
  %36 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 5
  %37 = load ptr, ptr %36, align 8, !tbaa !176
  %38 = icmp eq ptr %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %37)
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %struct.die_struct, ptr %11, i64 0, i32 6
  %42 = load ptr, ptr %41, align 8, !tbaa !295
  %43 = icmp eq ptr %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %42)
  br label %45

45:                                               ; preds = %44, %40
  %46 = load ptr, ptr %36, align 8, !tbaa !176
  %47 = icmp eq ptr %46, %7
  br i1 %47, label %48, label %10, !llvm.loop !543

48:                                               ; preds = %45, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_var_loc_list_def(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_16var_loc_list_def, i32 noundef 73) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !249
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_var_loc_node(ptr noundef nonnull %5)
  br label %8

8:                                                ; preds = %4, %7, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_16var_loc_list_def(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  br label %7

7:                                                ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_var_loc_node(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_12var_loc_node, i32 noundef 74) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %28, label %6

4:                                                ; preds = %6
  %5 = icmp eq ptr %9, %0
  br i1 %5, label %28, label %12

6:                                                ; preds = %1, %6
  %7 = phi ptr [ %9, %6 ], [ %0, %1 ]
  %8 = getelementptr inbounds %struct.var_loc_node, ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !248
  %10 = tail call i32 @gt_pch_note_object(ptr noundef %9, ptr noundef %9, ptr noundef nonnull @gt_pch_p_12var_loc_node, i32 noundef 74) #31
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %4, label %6, !llvm.loop !544

12:                                               ; preds = %4, %25
  %13 = phi ptr [ %26, %25 ], [ %0, %4 ]
  %14 = load ptr, ptr %13, align 8, !tbaa !246
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %14) #31
  br label %17

17:                                               ; preds = %16, %12
  %18 = getelementptr inbounds %struct.var_loc_node, ptr %13, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !250
  tail call void @gt_pch_n_S(ptr noundef %19) #31
  %20 = getelementptr inbounds %struct.var_loc_node, ptr %13, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !248
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  tail call void @gt_pch_nx_var_loc_node(ptr noundef nonnull %21)
  %24 = load ptr, ptr %20, align 8, !tbaa !248
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi ptr [ %24, %23 ], [ null, %17 ]
  %27 = icmp eq ptr %26, %9
  br i1 %27, label %28, label %12, !llvm.loop !545

28:                                               ; preds = %25, %1, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_12var_loc_node(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.var_loc_node, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  %8 = getelementptr inbounds %struct.var_loc_node, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #31
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

declare void @gt_pch_nx_rtx_def(ptr noundef) #3

declare void @gt_pch_n_S(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_die_arg_entry_gc(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_20VEC_die_arg_entry_gc, i32 noundef 75) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !519
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %4, %19
  %9 = phi i64 [ %20, %19 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %0, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !152
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %11)
  br label %14

14:                                               ; preds = %8, %13
  %15 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %0, i64 0, i32 2, i64 %9, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !154
  %17 = icmp eq ptr %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %16) #31
  br label %19

19:                                               ; preds = %14, %18
  %20 = add nuw nsw i64 %9, 1
  %21 = icmp eq i64 %20, %6
  br i1 %21, label %22, label %8, !llvm.loop !546

22:                                               ; preds = %19, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_20VEC_die_arg_entry_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load i32, ptr %1, align 8, !tbaa !519
  %6 = zext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %14, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %1, i64 0, i32 2, i64 %11
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #31
  %13 = getelementptr inbounds %struct.VEC_die_arg_entry_base, ptr %1, i64 0, i32 2, i64 %11, i32 1
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #31
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %6
  br i1 %15, label %16, label %10, !llvm.loop !547

16:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_limbo_die_struct(ptr noundef %0) #10 {
  br label %2

2:                                                ; preds = %15, %1
  %3 = phi ptr [ %0, %1 ], [ %17, %15 ]
  %4 = tail call i32 @gt_pch_note_object(ptr noundef %3, ptr noundef %3, ptr noundef nonnull @gt_pch_p_16limbo_die_struct, i32 noundef 76) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %3, align 8, !tbaa !173
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %6, %9
  %11 = getelementptr inbounds %struct.limbo_die_struct, ptr %3, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !177
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %12) #31
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.limbo_die_struct, ptr %3, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !171
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %2

19:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_16limbo_die_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.limbo_die_struct, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  %8 = getelementptr inbounds %struct.limbo_die_struct, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #31
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_pubname_entry_gc(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_20VEC_pubname_entry_gc, i32 noundef 77) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !522
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %4, %14
  %9 = phi i64 [ %17, %14 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !282
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %11)
  br label %14

14:                                               ; preds = %13, %8
  %15 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %0, i64 0, i32 2, i64 %9, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !307
  tail call void @gt_pch_n_S(ptr noundef %16) #31
  %17 = add nuw nsw i64 %9, 1
  %18 = icmp eq i64 %17, %6
  br i1 %18, label %19, label %8, !llvm.loop !548

19:                                               ; preds = %14, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_20VEC_pubname_entry_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load i32, ptr %1, align 8, !tbaa !522
  %6 = zext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %14, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %1, i64 0, i32 2, i64 %11
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #31
  %13 = getelementptr inbounds %struct.VEC_pubname_entry_base, ptr %1, i64 0, i32 2, i64 %11, i32 1
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #31
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %6
  br i1 %15, label %16, label %10, !llvm.loop !549

16:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_dw_attr_node_gc(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_19VEC_dw_attr_node_gc, i32 noundef 78) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %64, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !525
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %64, label %8

8:                                                ; preds = %4, %61
  %9 = phi i64 [ %62, %61 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !163
  switch i32 %11, label %61 [
    i32 0, label %12
    i32 16, label %52
    i32 3, label %17
    i32 2, label %22
    i32 12, label %49
    i32 14, label %38
    i32 8, label %27
    i32 10, label %33
  ]

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %61, label %16

16:                                               ; preds = %12
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %14) #31
  br label %61

17:                                               ; preds = %8
  %18 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %61, label %21

21:                                               ; preds = %17
  tail call void @gt_pch_nx_dw_loc_list_struct(ptr noundef nonnull %19)
  br label %61

22:                                               ; preds = %8
  %23 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = icmp eq ptr %24, null
  br i1 %25, label %61, label %26

26:                                               ; preds = %22
  tail call void @gt_pch_nx_dw_loc_descr_struct(ptr noundef nonnull %24)
  br label %61

27:                                               ; preds = %8
  %28 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = icmp eq ptr %29, null
  br i1 %30, label %61, label %31

31:                                               ; preds = %27
  %32 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %29, ptr noundef nonnull %0, ptr noundef nonnull @gt_pch_p_19VEC_dw_attr_node_gc, i32 noundef 217) #31
  br label %61

33:                                               ; preds = %8
  %34 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %61, label %37

37:                                               ; preds = %33
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %35)
  br label %61

38:                                               ; preds = %8
  %39 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = icmp eq ptr %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %40, ptr noundef nonnull %40, ptr noundef nonnull @gt_pch_p_20indirect_string_node, i32 noundef 88) #31
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %42
  %46 = load ptr, ptr %40, align 8, !tbaa !186
  tail call void @gt_pch_n_S(ptr noundef %46) #31
  %47 = getelementptr inbounds %struct.indirect_string_node, ptr %40, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !308
  tail call void @gt_pch_n_S(ptr noundef %48) #31
  br label %61

49:                                               ; preds = %8
  %50 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  tail call void @gt_pch_n_S(ptr noundef %51) #31
  br label %61

52:                                               ; preds = %8
  %53 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %0, i64 0, i32 2, i64 %9, i32 1, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = icmp eq ptr %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %54, ptr noundef nonnull %54, ptr noundef nonnull @gt_pch_p_15dwarf_file_data, i32 noundef 86) #31
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = load ptr, ptr %54, align 8, !tbaa !124
  tail call void @gt_pch_n_S(ptr noundef %60) #31
  br label %61

61:                                               ; preds = %59, %56, %45, %42, %49, %16, %12, %21, %17, %26, %22, %8, %31, %27, %37, %33, %38, %52
  %62 = add nuw nsw i64 %9, 1
  %63 = icmp eq i64 %62, %6
  br i1 %63, label %64, label %8, !llvm.loop !550

64:                                               ; preds = %61, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_19VEC_dw_attr_node_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load i32, ptr %1, align 8, !tbaa !525
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  %9 = icmp ne ptr %1, %0
  br label %10

10:                                               ; preds = %8, %42
  %11 = phi i64 [ 0, %8 ], [ %43, %42 ]
  %12 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !163
  switch i32 %13, label %42 [
    i32 0, label %14
    i32 16, label %37
    i32 3, label %17
    i32 2, label %20
    i32 12, label %34
    i32 14, label %31
    i32 8, label %23
    i32 10, label %28
  ]

14:                                               ; preds = %10
  br i1 %9, label %42, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  br label %40

17:                                               ; preds = %10
  br i1 %9, label %42, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  br label %40

20:                                               ; preds = %10
  br i1 %9, label %42, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  br label %40

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  %27 = or i1 %26, %9
  br i1 %27, label %42, label %40

28:                                               ; preds = %10
  br i1 %9, label %42, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  br label %40

31:                                               ; preds = %10
  br i1 %9, label %42, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  br label %40

34:                                               ; preds = %10
  br i1 %9, label %42, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  br label %40

37:                                               ; preds = %10
  br i1 %9, label %42, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.VEC_dw_attr_node_base, ptr %1, i64 0, i32 2, i64 %11, i32 1, i32 1
  br label %40

40:                                               ; preds = %23, %38, %35, %32, %29, %21, %18, %15
  %41 = phi ptr [ %16, %15 ], [ %19, %18 ], [ %22, %21 ], [ %30, %29 ], [ %33, %32 ], [ %36, %35 ], [ %39, %38 ], [ %24, %23 ]
  tail call void %2(ptr noundef nonnull %41, ptr noundef %3) #31
  br label %42

42:                                               ; preds = %40, %23, %14, %17, %20, %10, %28, %31, %34, %37
  %43 = add nuw nsw i64 %11, 1
  %44 = icmp eq i64 %43, %6
  br i1 %44, label %45, label %10, !llvm.loop !551

45:                                               ; preds = %42, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_loc_list_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_18dw_loc_list_struct, i32 noundef 85) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %21, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !273
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_dw_loc_list_struct(ptr noundef nonnull %5)
  br label %8

8:                                                ; preds = %7, %4
  %9 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !301
  tail call void @gt_pch_n_S(ptr noundef %10) #31
  %11 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !302
  tail call void @gt_pch_n_S(ptr noundef %12) #31
  %13 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !274
  tail call void @gt_pch_n_S(ptr noundef %14) #31
  %15 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !303
  tail call void @gt_pch_n_S(ptr noundef %16) #31
  %17 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %0, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !270
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %8
  tail call void @gt_pch_nx_dw_loc_descr_struct(ptr noundef nonnull %18)
  br label %21

21:                                               ; preds = %8, %20, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_loc_descr_struct(ptr noundef %0) local_unnamed_addr #10 {
  br label %2

2:                                                ; preds = %75, %1
  %3 = phi ptr [ %0, %1 ], [ %77, %75 ]
  %4 = tail call i32 @gt_pch_note_object(ptr noundef %3, ptr noundef %3, ptr noundef nonnull @gt_pch_p_19dw_loc_descr_struct, i32 noundef 89) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %113, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %3, align 8, !tbaa !57
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_pch_nx_dw_loc_descr_struct(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %9, %6
  %11 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3
  %12 = load i32, ptr %11, align 8, !tbaa !52
  switch i32 %12, label %62 [
    i32 0, label %13
    i32 16, label %53
    i32 3, label %18
    i32 2, label %23
    i32 12, label %50
    i32 14, label %39
    i32 8, label %28
    i32 10, label %34
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %62, label %17

17:                                               ; preds = %13
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %15) #31
  br label %62

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  br i1 %21, label %62, label %22

22:                                               ; preds = %18
  tail call void @gt_pch_nx_dw_loc_list_struct(ptr noundef nonnull %20)
  br label %62

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %62, label %27

27:                                               ; preds = %23
  tail call void @gt_pch_nx_dw_loc_descr_struct(ptr noundef nonnull %25)
  br label %62

28:                                               ; preds = %10
  %29 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = icmp eq ptr %30, null
  br i1 %31, label %62, label %32

32:                                               ; preds = %28
  %33 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %30, ptr noundef nonnull %3, ptr noundef nonnull @gt_pch_p_19dw_loc_descr_struct, i32 noundef 217) #31
  br label %62

34:                                               ; preds = %10
  %35 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %62, label %38

38:                                               ; preds = %34
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %36)
  br label %62

39:                                               ; preds = %10
  %40 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %39
  %44 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %41, ptr noundef nonnull %41, ptr noundef nonnull @gt_pch_p_20indirect_string_node, i32 noundef 88) #31
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %43
  %47 = load ptr, ptr %41, align 8, !tbaa !186
  tail call void @gt_pch_n_S(ptr noundef %47) #31
  %48 = getelementptr inbounds %struct.indirect_string_node, ptr %41, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !308
  tail call void @gt_pch_n_S(ptr noundef %49) #31
  br label %62

50:                                               ; preds = %10
  %51 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  tail call void @gt_pch_n_S(ptr noundef %52) #31
  br label %62

53:                                               ; preds = %10
  %54 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 3, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = icmp eq ptr %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %55, ptr noundef nonnull %55, ptr noundef nonnull @gt_pch_p_15dwarf_file_data, i32 noundef 86) #31
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = load ptr, ptr %55, align 8, !tbaa !124
  tail call void @gt_pch_n_S(ptr noundef %61) #31
  br label %62

62:                                               ; preds = %60, %57, %46, %43, %53, %39, %34, %38, %28, %32, %10, %23, %27, %18, %22, %13, %17, %50
  %63 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4
  %64 = load i32, ptr %63, align 8, !tbaa !49
  switch i32 %64, label %113 [
    i32 0, label %65
    i32 16, label %104
    i32 3, label %70
    i32 2, label %75
    i32 12, label %101
    i32 14, label %90
    i32 8, label %79
    i32 10, label %85
  ]

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = icmp eq ptr %67, null
  br i1 %68, label %113, label %69

69:                                               ; preds = %65
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %67) #31
  br label %113

70:                                               ; preds = %62
  %71 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = icmp eq ptr %72, null
  br i1 %73, label %113, label %74

74:                                               ; preds = %70
  tail call void @gt_pch_nx_dw_loc_list_struct(ptr noundef nonnull %72)
  br label %113

75:                                               ; preds = %62
  %76 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  %78 = icmp eq ptr %77, null
  br i1 %78, label %113, label %2

79:                                               ; preds = %62
  %80 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = icmp eq ptr %81, null
  br i1 %82, label %113, label %83

83:                                               ; preds = %79
  %84 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %81, ptr noundef nonnull %3, ptr noundef nonnull @gt_pch_p_19dw_loc_descr_struct, i32 noundef 217) #31
  br label %113

85:                                               ; preds = %62
  %86 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = icmp eq ptr %87, null
  br i1 %88, label %113, label %89

89:                                               ; preds = %85
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %87)
  br label %113

90:                                               ; preds = %62
  %91 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = icmp eq ptr %92, null
  br i1 %93, label %113, label %94

94:                                               ; preds = %90
  %95 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %92, ptr noundef nonnull %92, ptr noundef nonnull @gt_pch_p_20indirect_string_node, i32 noundef 88) #31
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94
  %98 = load ptr, ptr %92, align 8, !tbaa !186
  tail call void @gt_pch_n_S(ptr noundef %98) #31
  %99 = getelementptr inbounds %struct.indirect_string_node, ptr %92, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !308
  tail call void @gt_pch_n_S(ptr noundef %100) #31
  br label %113

101:                                              ; preds = %62
  %102 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  tail call void @gt_pch_n_S(ptr noundef %103) #31
  br label %113

104:                                              ; preds = %62
  %105 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %3, i64 0, i32 4, i32 1
  %106 = load ptr, ptr %105, align 8, !tbaa !17
  %107 = icmp eq ptr %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %106, ptr noundef nonnull %106, ptr noundef nonnull @gt_pch_p_15dwarf_file_data, i32 noundef 86) #31
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %108
  %112 = load ptr, ptr %106, align 8, !tbaa !124
  tail call void @gt_pch_n_S(ptr noundef %112) #31
  br label %113

113:                                              ; preds = %75, %62, %2, %111, %108, %97, %94, %101, %69, %65, %74, %70, %83, %79, %89, %85, %90, %104
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_indirect_string_node(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_20indirect_string_node, i32 noundef 88) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !186
  tail call void @gt_pch_n_S(ptr noundef %5) #31
  %6 = getelementptr inbounds %struct.indirect_string_node, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !308
  tail call void @gt_pch_n_S(ptr noundef %7) #31
  br label %8

8:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dwarf_file_data(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_15dwarf_file_data, i32 noundef 86) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !124
  tail call void @gt_pch_n_S(ptr noundef %5) #31
  br label %6

6:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_comdat_type_struct(ptr noundef %0) #10 {
  br label %2

2:                                                ; preds = %15, %1
  %3 = phi ptr [ %0, %1 ], [ %17, %15 ]
  %4 = tail call i32 @gt_pch_note_object(ptr noundef %3, ptr noundef %3, ptr noundef nonnull @gt_pch_p_18comdat_type_struct, i32 noundef 79) #31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %3, align 8, !tbaa !196
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %6, %9
  %11 = getelementptr inbounds %struct.comdat_type_struct, ptr %3, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !213
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %12)
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.comdat_type_struct, ptr %3, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !291
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %2

19:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_18comdat_type_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.comdat_type_struct, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  %8 = getelementptr inbounds %struct.comdat_type_struct, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #31
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_ranges_by_label_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_25dw_ranges_by_label_struct, i32 noundef 80) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !237
  tail call void @gt_pch_n_S(ptr noundef %5) #31
  %6 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !239
  tail call void @gt_pch_n_S(ptr noundef %7) #31
  br label %8

8:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_25dw_ranges_by_label_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  br label %8

8:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_ranges_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_16dw_ranges_struct, i32 noundef 81) #31
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @gt_pch_p_16dw_ranges_struct(ptr nocapture %0, ptr nocapture %1, ptr nocapture %2, ptr nocapture %3) #13 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_separate_line_info_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_28dw_separate_line_info_struct, i32 noundef 82) #31
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @gt_pch_p_28dw_separate_line_info_struct(ptr nocapture %0, ptr nocapture %1, ptr nocapture %2, ptr nocapture %3) #13 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_line_info_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_19dw_line_info_struct, i32 noundef 83) #31
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @gt_pch_p_19dw_line_info_struct(ptr nocapture %0, ptr nocapture %1, ptr nocapture %2, ptr nocapture %3) #13 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_deferred_locations_gc(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_25VEC_deferred_locations_gc, i32 noundef 84) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !528
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %4, %19
  %9 = phi i64 [ %20, %19 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %0, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !169
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %11) #31
  br label %14

14:                                               ; preds = %8, %13
  %15 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %0, i64 0, i32 2, i64 %9, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !167
  %17 = icmp eq ptr %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %16)
  br label %19

19:                                               ; preds = %14, %18
  %20 = add nuw nsw i64 %9, 1
  %21 = icmp eq i64 %20, %6
  br i1 %21, label %22, label %8, !llvm.loop !552

22:                                               ; preds = %19, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_25VEC_deferred_locations_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load i32, ptr %1, align 8, !tbaa !528
  %6 = zext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %14, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %1, i64 0, i32 2, i64 %11
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #31
  %13 = getelementptr inbounds %struct.VEC_deferred_locations_base, ptr %1, i64 0, i32 2, i64 %11, i32 1
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #31
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %6
  br i1 %15, label %16, label %10, !llvm.loop !553

16:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_18dw_loc_list_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  %8 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #31
  %9 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %9, ptr noundef %3) #31
  %10 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %10, ptr noundef %3) #31
  %11 = getelementptr inbounds %struct.dw_loc_list_struct, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %11, ptr noundef %3) #31
  br label %12

12:                                               ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_15dwarf_file_data(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  br label %7

7:                                                ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_queued_reg_save(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_15queued_reg_save, i32 noundef 87) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %18, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !100
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_queued_reg_save(ptr noundef nonnull %5)
  br label %8

8:                                                ; preds = %4, %7
  %9 = getelementptr inbounds %struct.queued_reg_save, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !70
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %10) #31
  br label %13

13:                                               ; preds = %8, %12
  %14 = getelementptr inbounds %struct.queued_reg_save, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !81
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %15) #31
  br label %18

18:                                               ; preds = %13, %17, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_15queued_reg_save(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.queued_reg_save, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  %8 = getelementptr inbounds %struct.queued_reg_save, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #31
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_20indirect_string_node(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.indirect_string_node, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  br label %8

8:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_19dw_loc_descr_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp ne ptr %1, %0
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  br label %7

7:                                                ; preds = %6, %4
  %8 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3
  %9 = load i32, ptr %8, align 8, !tbaa !52
  switch i32 %9, label %38 [
    i32 0, label %10
    i32 16, label %33
    i32 3, label %13
    i32 2, label %16
    i32 12, label %30
    i32 14, label %27
    i32 8, label %19
    i32 10, label %24
  ]

10:                                               ; preds = %7
  br i1 %5, label %38, label %11

11:                                               ; preds = %10
  %12 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  br label %36

13:                                               ; preds = %7
  br i1 %5, label %38, label %14

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  br label %36

16:                                               ; preds = %7
  br i1 %5, label %38, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  br label %36

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  %23 = or i1 %22, %5
  br i1 %23, label %38, label %36

24:                                               ; preds = %7
  br i1 %5, label %38, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  br label %36

27:                                               ; preds = %7
  br i1 %5, label %38, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  br label %36

30:                                               ; preds = %7
  br i1 %5, label %38, label %31

31:                                               ; preds = %30
  %32 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  br label %36

33:                                               ; preds = %7
  br i1 %5, label %38, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 3, i32 1
  br label %36

36:                                               ; preds = %19, %11, %14, %17, %25, %28, %31, %34
  %37 = phi ptr [ %35, %34 ], [ %32, %31 ], [ %29, %28 ], [ %26, %25 ], [ %18, %17 ], [ %15, %14 ], [ %12, %11 ], [ %20, %19 ]
  tail call void %2(ptr noundef nonnull %37, ptr noundef %3) #31
  br label %38

38:                                               ; preds = %36, %19, %33, %30, %27, %24, %7, %16, %13, %10
  %39 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4
  %40 = load i32, ptr %39, align 8, !tbaa !49
  switch i32 %40, label %69 [
    i32 0, label %41
    i32 16, label %64
    i32 3, label %44
    i32 2, label %47
    i32 12, label %61
    i32 14, label %58
    i32 8, label %50
    i32 10, label %55
  ]

41:                                               ; preds = %38
  br i1 %5, label %69, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  br label %67

44:                                               ; preds = %38
  br i1 %5, label %69, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  br label %67

47:                                               ; preds = %38
  br i1 %5, label %69, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  br label %67

50:                                               ; preds = %38
  %51 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = icmp eq ptr %52, null
  %54 = or i1 %53, %5
  br i1 %54, label %69, label %67

55:                                               ; preds = %38
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  br label %67

58:                                               ; preds = %38
  br i1 %5, label %69, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  br label %67

61:                                               ; preds = %38
  br i1 %5, label %69, label %62

62:                                               ; preds = %61
  %63 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  br label %67

64:                                               ; preds = %38
  br i1 %5, label %69, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %struct.dw_loc_descr_struct, ptr %1, i64 0, i32 4, i32 1
  br label %67

67:                                               ; preds = %50, %42, %45, %48, %56, %59, %62, %65
  %68 = phi ptr [ %66, %65 ], [ %63, %62 ], [ %60, %59 ], [ %57, %56 ], [ %49, %48 ], [ %46, %45 ], [ %43, %42 ], [ %51, %50 ]
  tail call void %2(ptr noundef nonnull %68, ptr noundef %3) #31
  br label %69

69:                                               ; preds = %67, %50, %64, %61, %58, %55, %38, %47, %44, %41
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_fde_struct(ptr noundef %0) local_unnamed_addr #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_13dw_fde_struct, i32 noundef 90) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %32, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !117
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %5) #31
  br label %8

8:                                                ; preds = %7, %4
  %9 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !118
  tail call void @gt_pch_n_S(ptr noundef %10) #31
  %11 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !54
  tail call void @gt_pch_n_S(ptr noundef %12) #31
  %13 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !119
  tail call void @gt_pch_n_S(ptr noundef %14) #31
  %15 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !204
  tail call void @gt_pch_n_S(ptr noundef %16) #31
  %17 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !205
  tail call void @gt_pch_n_S(ptr noundef %18) #31
  %19 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 6
  %20 = load ptr, ptr %19, align 8, !tbaa !206
  tail call void @gt_pch_n_S(ptr noundef %20) #31
  %21 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 7
  %22 = load ptr, ptr %21, align 8, !tbaa !207
  tail call void @gt_pch_n_S(ptr noundef %22) #31
  %23 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !134
  %25 = icmp eq ptr %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %8
  tail call void @gt_pch_nx_dw_cfi_struct(ptr noundef nonnull %24)
  br label %27

27:                                               ; preds = %8, %26
  %28 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 0, i32 9
  %29 = load ptr, ptr %28, align 8, !tbaa !132
  %30 = icmp eq ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @gt_pch_nx_dw_cfi_struct(ptr noundef nonnull %29)
  br label %32

32:                                               ; preds = %27, %31, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_13dw_fde_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %16

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  %7 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  %8 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #31
  %9 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %9, ptr noundef %3) #31
  %10 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %10, ptr noundef %3) #31
  %11 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %11, ptr noundef %3) #31
  %12 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #31
  %13 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #31
  %14 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %14, ptr noundef %3) #31
  %15 = getelementptr inbounds %struct.dw_fde_struct, ptr %1, i64 0, i32 9
  tail call void %2(ptr noundef nonnull %15, ptr noundef %3) #31
  br label %16

16:                                               ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_dw_cfi_struct(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_13dw_cfi_struct, i32 noundef 91) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !46
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_dw_cfi_struct(ptr noundef nonnull %5)
  br label %8

8:                                                ; preds = %7, %4
  %9 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !48
  %11 = tail call fastcc i32 @dw_cfi_oprnd1_desc(i32 noundef %10), !range !531
  switch i32 %11, label %20 [
    i32 4, label %15
    i32 3, label %12
  ]

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  tail call void @gt_pch_n_S(ptr noundef %14) #31
  br label %20

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @gt_pch_nx_dw_loc_descr_struct(ptr noundef nonnull %17)
  br label %20

20:                                               ; preds = %8, %15, %19, %12
  %21 = load i32, ptr %9, align 8, !tbaa !48
  %22 = icmp eq i32 %21, 16
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.dw_cfi_struct, ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @gt_pch_nx_dw_loc_descr_struct(ptr noundef nonnull %25)
  br label %28

28:                                               ; preds = %20, %27, %23, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_13dw_cfi_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp ne ptr %1, %0
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #31
  br label %7

7:                                                ; preds = %6, %4
  %8 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !48
  %10 = tail call fastcc i32 @dw_cfi_oprnd1_desc(i32 noundef %9), !range !531
  switch i32 %10, label %15 [
    i32 4, label %12
    i32 3, label %11
  ]

11:                                               ; preds = %7
  br i1 %5, label %21, label %13

12:                                               ; preds = %7
  br i1 %5, label %21, label %13

13:                                               ; preds = %12, %11
  %14 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %14, ptr noundef %3) #31
  br label %15

15:                                               ; preds = %13, %7
  %16 = load i32, ptr %8, align 8, !tbaa !48
  %17 = icmp ne i32 %16, 16
  %18 = or i1 %5, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.dw_cfi_struct, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %20, ptr noundef %3) #31
  br label %21

21:                                               ; preds = %11, %12, %15, %19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_10die_struct(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #31
  br label %8

8:                                                ; preds = %4, %6
  %9 = icmp eq ptr %1, %0
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %11, ptr noundef %3) #31
  %12 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #31
  %13 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #31
  %14 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %14, ptr noundef %3) #31
  %15 = getelementptr inbounds %struct.die_struct, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %15, ptr noundef %3) #31
  br label %16

16:                                               ; preds = %8, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_n_P10vcall_insn4htab(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_P10vcall_insn4htab, i32 noundef 205) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %31, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %8, %22
  %13 = phi i64 [ %23, %22 ], [ %10, %8 ]
  %14 = phi i64 [ %24, %22 ], [ 0, %8 ]
  %15 = load ptr, ptr %5, align 8, !tbaa !532
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %17, ptr noundef nonnull %17, ptr noundef nonnull @gt_pch_p_10vcall_insn, i32 noundef 70) #31
  %21 = load i64, ptr %9, align 8, !tbaa !534
  br label %22

22:                                               ; preds = %12, %19
  %23 = phi i64 [ %13, %12 ], [ %21, %19 ]
  %24 = add i64 %14, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %26, label %12, !llvm.loop !554

26:                                               ; preds = %22
  %27 = load ptr, ptr %5, align 8, !tbaa !532
  br label %28

28:                                               ; preds = %26, %8
  %29 = phi ptr [ %27, %26 ], [ %6, %8 ]
  %30 = tail call i32 @gt_pch_note_object(ptr noundef %29, ptr noundef nonnull %0, ptr noundef nonnull @gt_pch_p_P10vcall_insn4htab, i32 noundef 217) #31
  br label %31

31:                                               ; preds = %4, %28, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_P10vcall_insn4htab(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp ne i64 %10, 0
  %12 = icmp eq ptr %6, %0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8, %22
  %15 = phi i64 [ %23, %22 ], [ %10, %8 ]
  %16 = phi i64 [ %24, %22 ], [ 0, %8 ]
  %17 = load ptr, ptr %5, align 8, !tbaa !532
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds ptr, ptr %0, i64 %16
  tail call void %2(ptr noundef %20, ptr noundef %3) #31
  %21 = load i64, ptr %9, align 8, !tbaa !534
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i64 [ %15, %14 ], [ %21, %19 ]
  %24 = add i64 %16, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %26, label %14, !llvm.loop !555

26:                                               ; preds = %22, %8
  %27 = icmp eq ptr %1, %0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void %2(ptr noundef nonnull %5, ptr noundef %3) #31
  br label %29

29:                                               ; preds = %26, %28, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_n_P16var_loc_list_def4htab(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_P16var_loc_list_def4htab, i32 noundef 206) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %34, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %8, %25
  %13 = phi i64 [ %26, %25 ], [ 0, %8 ]
  %14 = load ptr, ptr %5, align 8, !tbaa !532
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %16, ptr noundef nonnull %16, ptr noundef nonnull @gt_pch_p_16var_loc_list_def, i32 noundef 73) #31
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = load ptr, ptr %16, align 8, !tbaa !249
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @gt_pch_nx_var_loc_node(ptr noundef nonnull %22)
  br label %25

25:                                               ; preds = %24, %21, %18, %12
  %26 = add i64 %13, 1
  %27 = load i64, ptr %9, align 8, !tbaa !534
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %12, !llvm.loop !557

29:                                               ; preds = %25
  %30 = load ptr, ptr %5, align 8, !tbaa !532
  br label %31

31:                                               ; preds = %29, %8
  %32 = phi ptr [ %30, %29 ], [ %6, %8 ]
  %33 = tail call i32 @gt_pch_note_object(ptr noundef %32, ptr noundef nonnull %0, ptr noundef nonnull @gt_pch_p_P16var_loc_list_def4htab, i32 noundef 217) #31
  br label %34

34:                                               ; preds = %4, %31, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_P16var_loc_list_def4htab(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp ne i64 %10, 0
  %12 = icmp eq ptr %6, %0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8, %22
  %15 = phi i64 [ %23, %22 ], [ %10, %8 ]
  %16 = phi i64 [ %24, %22 ], [ 0, %8 ]
  %17 = load ptr, ptr %5, align 8, !tbaa !532
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds ptr, ptr %0, i64 %16
  tail call void %2(ptr noundef %20, ptr noundef %3) #31
  %21 = load i64, ptr %9, align 8, !tbaa !534
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i64 [ %15, %14 ], [ %21, %19 ]
  %24 = add i64 %16, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %26, label %14, !llvm.loop !558

26:                                               ; preds = %22, %8
  %27 = icmp eq ptr %1, %0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void %2(ptr noundef nonnull %5, ptr noundef %3) #31
  br label %29

29:                                               ; preds = %26, %28, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_n_P10die_struct4htab(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_P10die_struct4htab, i32 noundef 207) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %30, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %8, %21
  %13 = phi i64 [ %22, %21 ], [ %10, %8 ]
  %14 = phi i64 [ %23, %21 ], [ 0, %8 ]
  %15 = load ptr, ptr %5, align 8, !tbaa !532
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %17)
  %20 = load i64, ptr %9, align 8, !tbaa !534
  br label %21

21:                                               ; preds = %12, %19
  %22 = phi i64 [ %13, %12 ], [ %20, %19 ]
  %23 = add i64 %14, 1
  %24 = icmp eq i64 %23, %22
  br i1 %24, label %25, label %12, !llvm.loop !559

25:                                               ; preds = %21
  %26 = load ptr, ptr %5, align 8, !tbaa !532
  br label %27

27:                                               ; preds = %25, %8
  %28 = phi ptr [ %26, %25 ], [ %6, %8 ]
  %29 = tail call i32 @gt_pch_note_object(ptr noundef %28, ptr noundef nonnull %0, ptr noundef nonnull @gt_pch_p_P10die_struct4htab, i32 noundef 217) #31
  br label %30

30:                                               ; preds = %4, %27, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_P10die_struct4htab(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp ne i64 %10, 0
  %12 = icmp eq ptr %6, %0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8, %22
  %15 = phi i64 [ %23, %22 ], [ %10, %8 ]
  %16 = phi i64 [ %24, %22 ], [ 0, %8 ]
  %17 = load ptr, ptr %5, align 8, !tbaa !532
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds ptr, ptr %0, i64 %16
  tail call void %2(ptr noundef %20, ptr noundef %3) #31
  %21 = load i64, ptr %9, align 8, !tbaa !534
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i64 [ %15, %14 ], [ %21, %19 ]
  %24 = add i64 %16, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %26, label %14, !llvm.loop !560

26:                                               ; preds = %22, %8
  %27 = icmp eq ptr %1, %0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void %2(ptr noundef nonnull %5, ptr noundef %3) #31
  br label %29

29:                                               ; preds = %26, %28, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_n_P15dwarf_file_data4htab(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_P15dwarf_file_data4htab, i32 noundef 208) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %32, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %8, %23
  %13 = phi i64 [ %24, %23 ], [ 0, %8 ]
  %14 = load ptr, ptr %5, align 8, !tbaa !532
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %16, ptr noundef nonnull %16, ptr noundef nonnull @gt_pch_p_15dwarf_file_data, i32 noundef 86) #31
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = load ptr, ptr %16, align 8, !tbaa !124
  tail call void @gt_pch_n_S(ptr noundef %22) #31
  br label %23

23:                                               ; preds = %21, %18, %12
  %24 = add i64 %13, 1
  %25 = load i64, ptr %9, align 8, !tbaa !534
  %26 = icmp eq i64 %24, %25
  br i1 %26, label %27, label %12, !llvm.loop !561

27:                                               ; preds = %23
  %28 = load ptr, ptr %5, align 8, !tbaa !532
  br label %29

29:                                               ; preds = %27, %8
  %30 = phi ptr [ %28, %27 ], [ %6, %8 ]
  %31 = tail call i32 @gt_pch_note_object(ptr noundef %30, ptr noundef nonnull %0, ptr noundef nonnull @gt_pch_p_P15dwarf_file_data4htab, i32 noundef 217) #31
  br label %32

32:                                               ; preds = %4, %29, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_P15dwarf_file_data4htab(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp ne i64 %10, 0
  %12 = icmp eq ptr %6, %0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8, %22
  %15 = phi i64 [ %23, %22 ], [ %10, %8 ]
  %16 = phi i64 [ %24, %22 ], [ 0, %8 ]
  %17 = load ptr, ptr %5, align 8, !tbaa !532
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds ptr, ptr %0, i64 %16
  tail call void %2(ptr noundef %20, ptr noundef %3) #31
  %21 = load i64, ptr %9, align 8, !tbaa !534
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i64 [ %15, %14 ], [ %21, %19 ]
  %24 = add i64 %16, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %26, label %14, !llvm.loop !562

26:                                               ; preds = %22, %8
  %27 = icmp eq ptr %1, %0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void %2(ptr noundef nonnull %5, ptr noundef %3) #31
  br label %29

29:                                               ; preds = %26, %28, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_n_P20indirect_string_node4htab(ptr noundef %0) #10 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_P20indirect_string_node4htab, i32 noundef 209) #31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %34, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %0, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %8, %25
  %13 = phi i64 [ %26, %25 ], [ 0, %8 ]
  %14 = load ptr, ptr %5, align 8, !tbaa !532
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %16, ptr noundef nonnull %16, ptr noundef nonnull @gt_pch_p_20indirect_string_node, i32 noundef 88) #31
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = load ptr, ptr %16, align 8, !tbaa !186
  tail call void @gt_pch_n_S(ptr noundef %22) #31
  %23 = getelementptr inbounds %struct.indirect_string_node, ptr %16, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !308
  tail call void @gt_pch_n_S(ptr noundef %24) #31
  br label %25

25:                                               ; preds = %21, %18, %12
  %26 = add i64 %13, 1
  %27 = load i64, ptr %9, align 8, !tbaa !534
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %12, !llvm.loop !563

29:                                               ; preds = %25
  %30 = load ptr, ptr %5, align 8, !tbaa !532
  br label %31

31:                                               ; preds = %29, %8
  %32 = phi ptr [ %30, %29 ], [ %6, %8 ]
  %33 = tail call i32 @gt_pch_note_object(ptr noundef %32, ptr noundef nonnull %0, ptr noundef nonnull @gt_pch_p_P20indirect_string_node4htab, i32 noundef 217) #31
  br label %34

34:                                               ; preds = %4, %31, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_P20indirect_string_node4htab(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !532
  %7 = icmp eq ptr %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.htab, ptr %1, i64 0, i32 4
  %10 = load i64, ptr %9, align 8, !tbaa !534
  %11 = icmp ne i64 %10, 0
  %12 = icmp eq ptr %6, %0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8, %22
  %15 = phi i64 [ %23, %22 ], [ %10, %8 ]
  %16 = phi i64 [ %24, %22 ], [ 0, %8 ]
  %17 = load ptr, ptr %5, align 8, !tbaa !532
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds ptr, ptr %0, i64 %16
  tail call void %2(ptr noundef %20, ptr noundef %3) #31
  %21 = load i64, ptr %9, align 8, !tbaa !534
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i64 [ %15, %14 ], [ %21, %19 ]
  %24 = add i64 %16, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %26, label %14, !llvm.loop !564

26:                                               ; preds = %22, %8
  %27 = icmp eq ptr %1, %0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void %2(ptr noundef nonnull %5, ptr noundef %3) #31
  br label %29

29:                                               ; preds = %26, %28, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_ranges_by_label(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %4, %7
  %8 = phi i64 [ %15, %7 ], [ 0, %4 ]
  %9 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8, !tbaa !237
  tail call void @gt_ggc_m_S(ptr noundef %11) #31
  %12 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %12, i64 %8, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !239
  tail call void @gt_ggc_m_S(ptr noundef %14) #31
  %15 = add i64 %8, 1
  %16 = load i32, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %17 = zext i32 %16 to i64
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %19, label %7, !llvm.loop !565

19:                                               ; preds = %7
  %20 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  br label %21

21:                                               ; preds = %19, %4
  %22 = phi ptr [ %20, %19 ], [ %2, %4 ]
  %23 = icmp ult ptr %22, inttoptr (i64 2 to ptr)
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @ggc_set_mark(ptr noundef nonnull %22) #31
  br label %26

26:                                               ; preds = %21, %24, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_ranges_by_label(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %4, %7
  %8 = phi i64 [ %15, %7 ], [ 0, %4 ]
  %9 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8, !tbaa !237
  tail call void @gt_pch_n_S(ptr noundef %11) #31
  %12 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %12, i64 %8, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !239
  tail call void @gt_pch_n_S(ptr noundef %14) #31
  %15 = add i64 %8, 1
  %16 = load i32, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %17 = zext i32 %16 to i64
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %19, label %7, !llvm.loop !566

19:                                               ; preds = %7
  %20 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  br label %21

21:                                               ; preds = %19, %4
  %22 = phi ptr [ %20, %19 ], [ %2, %4 ]
  %23 = tail call i32 @gt_pch_note_object(ptr noundef %22, ptr noundef nonnull @ranges_by_label, ptr noundef nonnull @gt_pch_pa_ranges_by_label, i32 noundef 217) #31
  br label %24

24:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_ranges_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  %3 = icmp ult ptr %2, inttoptr (i64 2 to ptr)
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %2) #31
  br label %6

6:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_ranges_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %2, ptr noundef nonnull @ranges_table, ptr noundef nonnull @gt_pch_pa_ranges_table, i32 noundef 217) #31
  br label %6

6:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_arange_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @arange_table_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %4, %17
  %8 = phi i32 [ %18, %17 ], [ %5, %4 ]
  %9 = phi ptr [ %19, %17 ], [ %2, %4 ]
  %10 = phi i64 [ %20, %17 ], [ 0, %4 ]
  %11 = getelementptr inbounds ptr, ptr %9, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %12)
  %15 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %16 = load i32, ptr @arange_table_allocated, align 4, !tbaa !21
  br label %17

17:                                               ; preds = %7, %14
  %18 = phi i32 [ %8, %7 ], [ %16, %14 ]
  %19 = phi ptr [ %9, %7 ], [ %15, %14 ]
  %20 = add i64 %10, 1
  %21 = zext i32 %18 to i64
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %23, label %7, !llvm.loop !567

23:                                               ; preds = %17, %4
  %24 = phi ptr [ %2, %4 ], [ %19, %17 ]
  %25 = icmp ult ptr %24, inttoptr (i64 2 to ptr)
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @ggc_set_mark(ptr noundef nonnull %24) #31
  br label %28

28:                                               ; preds = %23, %26, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_arange_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @arange_table_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %4, %17
  %8 = phi i32 [ %18, %17 ], [ %5, %4 ]
  %9 = phi ptr [ %19, %17 ], [ %2, %4 ]
  %10 = phi i64 [ %20, %17 ], [ 0, %4 ]
  %11 = getelementptr inbounds ptr, ptr %9, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %12)
  %15 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %16 = load i32, ptr @arange_table_allocated, align 4, !tbaa !21
  br label %17

17:                                               ; preds = %7, %14
  %18 = phi i32 [ %8, %7 ], [ %16, %14 ]
  %19 = phi ptr [ %9, %7 ], [ %15, %14 ]
  %20 = add i64 %10, 1
  %21 = zext i32 %18 to i64
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %23, label %7, !llvm.loop !568

23:                                               ; preds = %17, %4
  %24 = phi ptr [ %2, %4 ], [ %19, %17 ]
  %25 = tail call i32 @gt_pch_note_object(ptr noundef %24, ptr noundef nonnull @arange_table, ptr noundef nonnull @gt_pch_pa_arange_table, i32 noundef 217) #31
  br label %26

26:                                               ; preds = %23, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_separate_line_info_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @separate_line_info_table, align 8, !tbaa !6
  %3 = icmp ult ptr %2, inttoptr (i64 2 to ptr)
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %2) #31
  br label %6

6:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_separate_line_info_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @separate_line_info_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %2, ptr noundef nonnull @separate_line_info_table, ptr noundef nonnull @gt_pch_pa_separate_line_info_table, i32 noundef 217) #31
  br label %6

6:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_line_info_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @line_info_table, align 8, !tbaa !6
  %3 = icmp ult ptr %2, inttoptr (i64 2 to ptr)
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %2) #31
  br label %6

6:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_line_info_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @line_info_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %2, ptr noundef nonnull @line_info_table, ptr noundef nonnull @gt_pch_pa_line_info_table, i32 noundef 217) #31
  br label %6

6:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_abbrev_die_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %4, %17
  %8 = phi i32 [ %18, %17 ], [ %5, %4 ]
  %9 = phi ptr [ %19, %17 ], [ %2, %4 ]
  %10 = phi i64 [ %20, %17 ], [ 0, %4 ]
  %11 = getelementptr inbounds ptr, ptr %9, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %12)
  %15 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %16 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  br label %17

17:                                               ; preds = %7, %14
  %18 = phi i32 [ %8, %7 ], [ %16, %14 ]
  %19 = phi ptr [ %9, %7 ], [ %15, %14 ]
  %20 = add i64 %10, 1
  %21 = zext i32 %18 to i64
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %23, label %7, !llvm.loop !569

23:                                               ; preds = %17, %4
  %24 = phi ptr [ %2, %4 ], [ %19, %17 ]
  %25 = icmp ult ptr %24, inttoptr (i64 2 to ptr)
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @ggc_set_mark(ptr noundef nonnull %24) #31
  br label %28

28:                                               ; preds = %23, %26, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_abbrev_die_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %4, %17
  %8 = phi i32 [ %18, %17 ], [ %5, %4 ]
  %9 = phi ptr [ %19, %17 ], [ %2, %4 ]
  %10 = phi i64 [ %20, %17 ], [ 0, %4 ]
  %11 = getelementptr inbounds ptr, ptr %9, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %12)
  %15 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %16 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  br label %17

17:                                               ; preds = %7, %14
  %18 = phi i32 [ %8, %7 ], [ %16, %14 ]
  %19 = phi ptr [ %9, %7 ], [ %15, %14 ]
  %20 = add i64 %10, 1
  %21 = zext i32 %18 to i64
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %23, label %7, !llvm.loop !570

23:                                               ; preds = %17, %4
  %24 = phi ptr [ %2, %4 ], [ %19, %17 ]
  %25 = tail call i32 @gt_pch_note_object(ptr noundef %24, ptr noundef nonnull @abbrev_die_table, ptr noundef nonnull @gt_pch_pa_abbrev_die_table, i32 noundef 217) #31
  br label %26

26:                                               ; preds = %23, %1
  ret void
}

declare void @gt_ggc_mx_section(ptr noundef) #3

declare void @gt_pch_nx_section(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_fde_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %61, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @fde_table_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %56, label %7

7:                                                ; preds = %4, %50
  %8 = phi ptr [ %51, %50 ], [ %2, %4 ]
  %9 = phi i64 [ %52, %50 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.dw_fde_struct, ptr %8, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !117
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %11) #31
  %14 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %15

15:                                               ; preds = %13, %7
  %16 = phi ptr [ %14, %13 ], [ %8, %7 ]
  %17 = getelementptr inbounds %struct.dw_fde_struct, ptr %16, i64 %9, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !118
  tail call void @gt_ggc_m_S(ptr noundef %18) #31
  %19 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.dw_fde_struct, ptr %19, i64 %9, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !54
  tail call void @gt_ggc_m_S(ptr noundef %21) #31
  %22 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.dw_fde_struct, ptr %22, i64 %9, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !119
  tail call void @gt_ggc_m_S(ptr noundef %24) #31
  %25 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.dw_fde_struct, ptr %25, i64 %9, i32 4
  %27 = load ptr, ptr %26, align 8, !tbaa !204
  tail call void @gt_ggc_m_S(ptr noundef %27) #31
  %28 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.dw_fde_struct, ptr %28, i64 %9, i32 5
  %30 = load ptr, ptr %29, align 8, !tbaa !205
  tail call void @gt_ggc_m_S(ptr noundef %30) #31
  %31 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.dw_fde_struct, ptr %31, i64 %9, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !206
  tail call void @gt_ggc_m_S(ptr noundef %33) #31
  %34 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.dw_fde_struct, ptr %34, i64 %9, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !207
  tail call void @gt_ggc_m_S(ptr noundef %36) #31
  %37 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %38 = getelementptr inbounds %struct.dw_fde_struct, ptr %37, i64 %9, i32 8
  %39 = load ptr, ptr %38, align 8, !tbaa !134
  %40 = icmp eq ptr %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %15
  tail call void @gt_ggc_mx_dw_cfi_struct(ptr noundef nonnull %39)
  %42 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %43

43:                                               ; preds = %15, %41
  %44 = phi ptr [ %37, %15 ], [ %42, %41 ]
  %45 = getelementptr inbounds %struct.dw_fde_struct, ptr %44, i64 %9, i32 9
  %46 = load ptr, ptr %45, align 8, !tbaa !132
  %47 = icmp eq ptr %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  tail call void @gt_ggc_mx_dw_cfi_struct(ptr noundef nonnull %46)
  %49 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi ptr [ %44, %43 ], [ %49, %48 ]
  %52 = add i64 %9, 1
  %53 = load i32, ptr @fde_table_allocated, align 4, !tbaa !21
  %54 = zext i32 %53 to i64
  %55 = icmp eq i64 %52, %54
  br i1 %55, label %56, label %7, !llvm.loop !571

56:                                               ; preds = %50, %4
  %57 = phi ptr [ %2, %4 ], [ %51, %50 ]
  %58 = icmp ult ptr %57, inttoptr (i64 2 to ptr)
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = tail call i32 @ggc_set_mark(ptr noundef nonnull %57) #31
  br label %61

61:                                               ; preds = %56, %59, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_fde_table(ptr nocapture readnone %0) #10 {
  %2 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %59, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @fde_table_allocated, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %56, label %7

7:                                                ; preds = %4, %50
  %8 = phi ptr [ %51, %50 ], [ %2, %4 ]
  %9 = phi i64 [ %52, %50 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.dw_fde_struct, ptr %8, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !117
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %11) #31
  %14 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %15

15:                                               ; preds = %13, %7
  %16 = phi ptr [ %14, %13 ], [ %8, %7 ]
  %17 = getelementptr inbounds %struct.dw_fde_struct, ptr %16, i64 %9, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !118
  tail call void @gt_pch_n_S(ptr noundef %18) #31
  %19 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.dw_fde_struct, ptr %19, i64 %9, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !54
  tail call void @gt_pch_n_S(ptr noundef %21) #31
  %22 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.dw_fde_struct, ptr %22, i64 %9, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !119
  tail call void @gt_pch_n_S(ptr noundef %24) #31
  %25 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.dw_fde_struct, ptr %25, i64 %9, i32 4
  %27 = load ptr, ptr %26, align 8, !tbaa !204
  tail call void @gt_pch_n_S(ptr noundef %27) #31
  %28 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.dw_fde_struct, ptr %28, i64 %9, i32 5
  %30 = load ptr, ptr %29, align 8, !tbaa !205
  tail call void @gt_pch_n_S(ptr noundef %30) #31
  %31 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.dw_fde_struct, ptr %31, i64 %9, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !206
  tail call void @gt_pch_n_S(ptr noundef %33) #31
  %34 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.dw_fde_struct, ptr %34, i64 %9, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !207
  tail call void @gt_pch_n_S(ptr noundef %36) #31
  %37 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %38 = getelementptr inbounds %struct.dw_fde_struct, ptr %37, i64 %9, i32 8
  %39 = load ptr, ptr %38, align 8, !tbaa !134
  %40 = icmp eq ptr %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %15
  tail call void @gt_pch_nx_dw_cfi_struct(ptr noundef nonnull %39)
  %42 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %43

43:                                               ; preds = %15, %41
  %44 = phi ptr [ %37, %15 ], [ %42, %41 ]
  %45 = getelementptr inbounds %struct.dw_fde_struct, ptr %44, i64 %9, i32 9
  %46 = load ptr, ptr %45, align 8, !tbaa !132
  %47 = icmp eq ptr %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  tail call void @gt_pch_nx_dw_cfi_struct(ptr noundef nonnull %46)
  %49 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi ptr [ %44, %43 ], [ %49, %48 ]
  %52 = add i64 %9, 1
  %53 = load i32, ptr @fde_table_allocated, align 4, !tbaa !21
  %54 = zext i32 %53 to i64
  %55 = icmp eq i64 %52, %54
  br i1 %55, label %56, label %7, !llvm.loop !572

56:                                               ; preds = %50, %4
  %57 = phi ptr [ %2, %4 ], [ %51, %50 ]
  %58 = tail call i32 @gt_pch_note_object(ptr noundef %57, ptr noundef nonnull @fde_table, ptr noundef nonnull @gt_pch_pa_fde_table, i32 noundef 217) #31
  br label %59

59:                                               ; preds = %56, %1
  ret void
}

declare void @gt_ggc_mx_VEC_tree_gc(ptr noundef) #3

declare void @gt_pch_nx_VEC_tree_gc(ptr noundef) #3

declare void @gt_ggc_mx_VEC_rtx_gc(ptr noundef) #3

declare void @gt_pch_nx_VEC_rtx_gc(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_ranges_by_label(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %7, %23
  %11 = phi ptr [ %24, %23 ], [ %5, %7 ]
  %12 = phi i64 [ %25, %23 ], [ 0, %7 ]
  %13 = icmp eq ptr %11, %0
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %0, i64 %12
  tail call void %2(ptr noundef %15, ptr noundef %3) #31
  %16 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi ptr [ %16, %14 ], [ %11, %10 ]
  %19 = icmp eq ptr %18, %0
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.dw_ranges_by_label_struct, ptr %0, i64 %12, i32 1
  tail call void %2(ptr noundef nonnull %21, ptr noundef %3) #31
  %22 = load ptr, ptr @ranges_by_label, align 8, !tbaa !6
  br label %23

23:                                               ; preds = %17, %20
  %24 = phi ptr [ %18, %17 ], [ %22, %20 ]
  %25 = add i64 %12, 1
  %26 = load i32, ptr @ranges_by_label_allocated, align 4, !tbaa !21
  %27 = zext i32 %26 to i64
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %29, label %10, !llvm.loop !573

29:                                               ; preds = %23, %7
  %30 = icmp eq ptr %0, @ranges_by_label
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void %2(ptr noundef nonnull @ranges_by_label, ptr noundef %3) #31
  br label %32

32:                                               ; preds = %29, %31, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_ranges_table(ptr noundef readnone %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load ptr, ptr @ranges_table, align 8, !tbaa !6
  %6 = icmp ne ptr %5, null
  %7 = icmp eq ptr %0, @ranges_table
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void %2(ptr noundef nonnull @ranges_table, ptr noundef %3) #31
  br label %10

10:                                               ; preds = %9, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_arange_table(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @arange_table_allocated, align 4, !tbaa !21
  %9 = icmp ne i32 %8, 0
  %10 = icmp eq ptr %5, %0
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %27

12:                                               ; preds = %7, %21
  %13 = phi i32 [ %22, %21 ], [ %8, %7 ]
  %14 = phi ptr [ %23, %21 ], [ %0, %7 ]
  %15 = phi i64 [ %24, %21 ], [ 0, %7 ]
  %16 = icmp eq ptr %14, %0
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds ptr, ptr %0, i64 %15
  tail call void %2(ptr noundef %18, ptr noundef %3) #31
  %19 = load ptr, ptr @arange_table, align 8, !tbaa !6
  %20 = load i32, ptr @arange_table_allocated, align 4, !tbaa !21
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i32 [ %13, %12 ], [ %20, %17 ]
  %23 = phi ptr [ %14, %12 ], [ %19, %17 ]
  %24 = add i64 %15, 1
  %25 = zext i32 %22 to i64
  %26 = icmp eq i64 %24, %25
  br i1 %26, label %27, label %12, !llvm.loop !574

27:                                               ; preds = %21, %7
  %28 = icmp eq ptr %0, @arange_table
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void %2(ptr noundef nonnull @arange_table, ptr noundef %3) #31
  br label %30

30:                                               ; preds = %27, %29, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_separate_line_info_table(ptr noundef readnone %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load ptr, ptr @separate_line_info_table, align 8, !tbaa !6
  %6 = icmp ne ptr %5, null
  %7 = icmp eq ptr %0, @separate_line_info_table
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void %2(ptr noundef nonnull @separate_line_info_table, ptr noundef %3) #31
  br label %10

10:                                               ; preds = %9, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_line_info_table(ptr noundef readnone %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load ptr, ptr @line_info_table, align 8, !tbaa !6
  %6 = icmp ne ptr %5, null
  %7 = icmp eq ptr %0, @line_info_table
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void %2(ptr noundef nonnull @line_info_table, ptr noundef %3) #31
  br label %10

10:                                               ; preds = %9, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_abbrev_die_table(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  %9 = icmp ne i32 %8, 0
  %10 = icmp eq ptr %5, %0
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %27

12:                                               ; preds = %7, %21
  %13 = phi i32 [ %22, %21 ], [ %8, %7 ]
  %14 = phi ptr [ %23, %21 ], [ %0, %7 ]
  %15 = phi i64 [ %24, %21 ], [ 0, %7 ]
  %16 = icmp eq ptr %14, %0
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds ptr, ptr %0, i64 %15
  tail call void %2(ptr noundef %18, ptr noundef %3) #31
  %19 = load ptr, ptr @abbrev_die_table, align 8, !tbaa !6
  %20 = load i32, ptr @abbrev_die_table_allocated, align 4, !tbaa !21
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i32 [ %13, %12 ], [ %20, %17 ]
  %23 = phi ptr [ %14, %12 ], [ %19, %17 ]
  %24 = add i64 %15, 1
  %25 = zext i32 %22 to i64
  %26 = icmp eq i64 %24, %25
  br i1 %26, label %27, label %12, !llvm.loop !575

27:                                               ; preds = %21, %7
  %28 = icmp eq ptr %0, @abbrev_die_table
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void %2(ptr noundef nonnull @abbrev_die_table, ptr noundef %3) #31
  br label %30

30:                                               ; preds = %27, %29, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_fde_table(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #10 {
  %5 = load ptr, ptr @fde_table, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %80, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @fde_table_allocated, align 4, !tbaa !21
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %77, label %10

10:                                               ; preds = %7, %71
  %11 = phi ptr [ %72, %71 ], [ %5, %7 ]
  %12 = phi i64 [ %73, %71 ], [ 0, %7 ]
  %13 = icmp eq ptr %11, %0
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12
  tail call void %2(ptr noundef %15, ptr noundef %3) #31
  %16 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi ptr [ %16, %14 ], [ %11, %10 ]
  %19 = icmp eq ptr %18, %0
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 1
  tail call void %2(ptr noundef nonnull %21, ptr noundef %3) #31
  %22 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %23

23:                                               ; preds = %20, %17
  %24 = phi ptr [ %22, %20 ], [ %18, %17 ]
  %25 = icmp eq ptr %24, %0
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 2
  tail call void %2(ptr noundef nonnull %27, ptr noundef %3) #31
  %28 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %29

29:                                               ; preds = %26, %23
  %30 = phi ptr [ %28, %26 ], [ %24, %23 ]
  %31 = icmp eq ptr %30, %0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 3
  tail call void %2(ptr noundef nonnull %33, ptr noundef %3) #31
  %34 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi ptr [ %34, %32 ], [ %30, %29 ]
  %37 = icmp eq ptr %36, %0
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 4
  tail call void %2(ptr noundef nonnull %39, ptr noundef %3) #31
  %40 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %41

41:                                               ; preds = %38, %35
  %42 = phi ptr [ %40, %38 ], [ %36, %35 ]
  %43 = icmp eq ptr %42, %0
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 5
  tail call void %2(ptr noundef nonnull %45, ptr noundef %3) #31
  %46 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %47

47:                                               ; preds = %44, %41
  %48 = phi ptr [ %46, %44 ], [ %42, %41 ]
  %49 = icmp eq ptr %48, %0
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 6
  tail call void %2(ptr noundef nonnull %51, ptr noundef %3) #31
  %52 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %53

53:                                               ; preds = %50, %47
  %54 = phi ptr [ %52, %50 ], [ %48, %47 ]
  %55 = icmp eq ptr %54, %0
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 7
  tail call void %2(ptr noundef nonnull %57, ptr noundef %3) #31
  %58 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %59

59:                                               ; preds = %56, %53
  %60 = phi ptr [ %58, %56 ], [ %54, %53 ]
  %61 = icmp eq ptr %60, %0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 8
  tail call void %2(ptr noundef nonnull %63, ptr noundef %3) #31
  %64 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %65

65:                                               ; preds = %62, %59
  %66 = phi ptr [ %64, %62 ], [ %60, %59 ]
  %67 = icmp eq ptr %66, %0
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.dw_fde_struct, ptr %0, i64 %12, i32 9
  tail call void %2(ptr noundef nonnull %69, ptr noundef %3) #31
  %70 = load ptr, ptr @fde_table, align 8, !tbaa !6
  br label %71

71:                                               ; preds = %65, %68
  %72 = phi ptr [ %66, %65 ], [ %70, %68 ]
  %73 = add i64 %12, 1
  %74 = load i32, ptr @fde_table_allocated, align 4, !tbaa !21
  %75 = zext i32 %74 to i64
  %76 = icmp eq i64 %73, %75
  br i1 %76, label %77, label %10, !llvm.loop !576

77:                                               ; preds = %71, %7
  %78 = icmp eq ptr %0, @fde_table
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  tail call void %2(ptr noundef nonnull @fde_table, ptr noundef %3) #31
  br label %80

80:                                               ; preds = %77, %79, %4
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #26

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #27

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #28

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #29

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.load.relative.i64(ptr, i64) #30

attributes #0 = { inlinehint nofree nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { inlinehint nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nounwind willreturn "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #12 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { mustprogress nofree nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #18 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #19 = { mustprogress nofree nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #20 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #21 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #22 = { nofree nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #23 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #24 = { mustprogress nounwind sspstrong willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #25 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #26 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #27 = { nofree nounwind }
attributes #28 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #29 = { nofree nounwind willreturn memory(argmem: read) }
attributes #30 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #31 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !7, i64 8}
!11 = !{!"_IO_FILE", !12, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !12, i64 112, !12, i64 116, !13, i64 120, !14, i64 128, !8, i64 130, !8, i64 131, !7, i64 136, !13, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !13, i64 184, !12, i64 192, !8, i64 196}
!12 = !{!"int", !8, i64 0}
!13 = !{!"long", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!11, !7, i64 16}
!16 = !{!"branch_weights", i32 2000, i32 1}
!17 = !{!8, !8, i64 0}
!18 = !{!11, !7, i64 40}
!19 = !{!11, !7, i64 48}
!20 = !{!11, !12, i64 0}
!21 = !{!12, !12, i64 0}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.mustprogress"}
!24 = distinct !{!24, !23}
!25 = !{!26, !7, i64 1288}
!26 = !{!"gcc_target", !27, i64 0, !29, i64 368, !30, i64 664, !12, i64 744, !7, i64 752, !7, i64 760, !7, i64 768, !7, i64 776, !7, i64 784, !7, i64 792, !7, i64 800, !7, i64 808, !7, i64 816, !7, i64 824, !7, i64 832, !7, i64 840, !7, i64 848, !7, i64 856, !7, i64 864, !7, i64 872, !7, i64 880, !7, i64 888, !7, i64 896, !7, i64 904, !7, i64 912, !7, i64 920, !7, i64 928, !7, i64 936, !7, i64 944, !7, i64 952, !7, i64 960, !7, i64 968, !7, i64 976, !7, i64 984, !7, i64 992, !7, i64 1000, !7, i64 1008, !7, i64 1016, !7, i64 1024, !7, i64 1032, !7, i64 1040, !7, i64 1048, !7, i64 1056, !13, i64 1064, !13, i64 1072, !7, i64 1080, !7, i64 1088, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !7, i64 1136, !7, i64 1144, !7, i64 1152, !7, i64 1160, !7, i64 1168, !31, i64 1176, !7, i64 1232, !7, i64 1240, !7, i64 1248, !7, i64 1256, !7, i64 1264, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !7, i64 1304, !7, i64 1312, !7, i64 1320, !7, i64 1328, !7, i64 1336, !7, i64 1344, !7, i64 1352, !7, i64 1360, !7, i64 1368, !7, i64 1376, !7, i64 1384, !7, i64 1392, !7, i64 1400, !7, i64 1408, !7, i64 1416, !7, i64 1424, !7, i64 1432, !7, i64 1440, !7, i64 1448, !7, i64 1456, !13, i64 1464, !32, i64 1472, !7, i64 1664, !7, i64 1672, !7, i64 1680, !7, i64 1688, !7, i64 1696, !7, i64 1704, !7, i64 1712, !7, i64 1720, !7, i64 1728, !7, i64 1736, !7, i64 1744, !7, i64 1752, !7, i64 1760, !7, i64 1768, !7, i64 1776, !33, i64 1784, !34, i64 1792, !35, i64 1896, !36, i64 1968, !7, i64 2016, !8, i64 2024, !8, i64 2025, !8, i64 2026, !8, i64 2027, !8, i64 2028, !8, i64 2029, !8, i64 2030, !8, i64 2031, !8, i64 2032, !8, i64 2033, !8, i64 2034, !8, i64 2035}
!27 = !{!"asm_out", !7, i64 0, !7, i64 8, !7, i64 16, !28, i64 24, !28, i64 56, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288, !7, i64 296, !7, i64 304, !7, i64 312, !7, i64 320, !7, i64 328, !7, i64 336, !7, i64 344, !7, i64 352, !7, i64 360}
!28 = !{!"asm_int_op", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!29 = !{!"sched", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288}
!30 = !{!"vectorize", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72}
!31 = !{!"addr_space", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48}
!32 = !{!"calls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184}
!33 = !{!"c", !7, i64 0}
!34 = !{!"cxx", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96}
!35 = !{!"emutls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !8, i64 64, !8, i64 65}
!36 = !{!"target_option_hooks", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!37 = !{i32 0, i32 2}
!38 = !{!13, !13, i64 0}
!39 = !{!40, !13, i64 8}
!40 = !{!"cfa_loc", !13, i64 0, !13, i64 8, !12, i64 16, !12, i64 20, !12, i64 20}
!41 = !{!40, !12, i64 16}
!42 = !{!40, !13, i64 0}
!43 = !{i64 0, i64 8, !38, i64 8, i64 8, !38, i64 16, i64 4, !21, i64 20, i64 4, !21, i64 20, i64 4, !21}
!44 = distinct !{!44, !23}
!45 = distinct !{!45, !23}
!46 = !{!47, !7, i64 0}
!47 = !{!"dw_cfi_struct", !7, i64 0, !8, i64 8, !8, i64 16, !8, i64 24}
!48 = !{!47, !8, i64 8}
!49 = !{!50, !8, i64 40}
!50 = !{!"dw_loc_descr_struct", !7, i64 0, !12, i64 8, !12, i64 9, !12, i64 12, !51, i64 16, !51, i64 40}
!51 = !{!"dw_val_struct", !8, i64 0, !8, i64 8}
!52 = !{!50, !8, i64 16}
!53 = distinct !{!53, !23}
!54 = !{!55, !7, i64 16}
!55 = !{!"dw_fde_struct", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !12, i64 80, !13, i64 88, !12, i64 96, !12, i64 100, !12, i64 104, !12, i64 104, !12, i64 104, !12, i64 104, !12, i64 104, !12, i64 104, !12, i64 104, !12, i64 104, !12, i64 105}
!56 = distinct !{!56, !23}
!57 = !{!50, !7, i64 0}
!58 = distinct !{!58, !23}
!59 = distinct !{!59, !23}
!60 = !{!50, !12, i64 12}
!61 = distinct !{!61, !23}
!62 = !{!51, !8, i64 0}
!63 = !{!55, !13, i64 88}
!64 = distinct !{!64, !23}
!65 = !{!66, !7, i64 0}
!66 = !{!"reg_saved_in_data", !7, i64 0, !7, i64 8}
!67 = distinct !{!67, !23}
!68 = !{!66, !7, i64 8}
!69 = distinct !{!69, !23}
!70 = !{!71, !7, i64 8}
!71 = !{!"queued_reg_save", !7, i64 0, !7, i64 8, !13, i64 16, !7, i64 24}
!72 = distinct !{!72, !23}
!73 = !{!74, !12, i64 0}
!74 = !{!"rtvec_def", !12, i64 0, !8, i64 8}
!75 = distinct !{!75, !23}
!76 = !{!26, !7, i64 1280}
!77 = distinct !{!77, !23}
!78 = !{!55, !12, i64 100}
!79 = distinct !{!79, !23}
!80 = distinct !{!80, !23}
!81 = !{!71, !7, i64 24}
!82 = !{!71, !13, i64 16}
!83 = distinct !{!83, !23}
!84 = distinct !{!84, !23}
!85 = distinct !{!85, !23}
!86 = distinct !{!86, !23}
!87 = distinct !{!87, !23}
!88 = !{!55, !12, i64 96}
!89 = !{!90, !8, i64 477}
!90 = !{!"rtl_data", !91, i64 0, !92, i64 40, !93, i64 96, !94, i64 112, !96, i64 208, !97, i64 248, !12, i64 312, !7, i64 320, !7, i64 328, !7, i64 336, !7, i64 344, !7, i64 352, !7, i64 360, !7, i64 368, !7, i64 376, !7, i64 384, !7, i64 392, !13, i64 400, !7, i64 408, !7, i64 416, !7, i64 424, !12, i64 432, !12, i64 436, !12, i64 440, !12, i64 444, !12, i64 448, !12, i64 452, !7, i64 456, !8, i64 464, !8, i64 465, !8, i64 466, !8, i64 467, !8, i64 468, !8, i64 469, !8, i64 470, !8, i64 471, !8, i64 472, !8, i64 473, !8, i64 474, !8, i64 475, !8, i64 476, !8, i64 477, !8, i64 478, !8, i64 479, !8, i64 480, !8, i64 481, !8, i64 482, !8, i64 483, !8, i64 484, !8, i64 485}
!91 = !{!"expr_status", !12, i64 0, !12, i64 4, !12, i64 8, !7, i64 16, !7, i64 24, !7, i64 32}
!92 = !{!"emit_status", !12, i64 0, !12, i64 4, !7, i64 8, !7, i64 16, !7, i64 24, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !7, i64 48}
!93 = !{!"varasm_status", !7, i64 0, !12, i64 8}
!94 = !{!"incoming_args", !12, i64 0, !12, i64 4, !12, i64 8, !7, i64 16, !95, i64 24, !7, i64 88}
!95 = !{!"ix86_args", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !8, i64 60}
!96 = !{!"function_subsections", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32}
!97 = !{!"rtl_eh", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !8, i64 48}
!98 = !{!26, !7, i64 1416}
!99 = distinct !{!99, !23}
!100 = !{!71, !7, i64 0}
!101 = distinct !{!101, !23}
!102 = !{!103, !12, i64 0}
!103 = !{!"VEC_rtx_base", !12, i64 0, !12, i64 4, !8, i64 8}
!104 = distinct !{!104, !23}
!105 = distinct !{!105, !23}
!106 = distinct !{!106, !23}
!107 = distinct !{!107, !23}
!108 = distinct !{!108, !23}
!109 = !{!103, !12, i64 4}
!110 = distinct !{!110, !23}
!111 = distinct !{!111, !112}
!112 = !{!"llvm.loop.unroll.disable"}
!113 = distinct !{!113, !23}
!114 = !{!115, !12, i64 108}
!115 = !{!"function", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !12, i64 104, !12, i64 108, !12, i64 112, !12, i64 116, !12, i64 120, !12, i64 124, !7, i64 128, !12, i64 136, !12, i64 137, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 138, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139, !12, i64 139}
!116 = !{!26, !7, i64 136}
!117 = !{!55, !7, i64 0}
!118 = !{!55, !7, i64 8}
!119 = !{!55, !7, i64 24}
!120 = !{!55, !12, i64 80}
!121 = !{!90, !8, i64 485}
!122 = !{!90, !8, i64 474}
!123 = !{!90, !8, i64 469}
!124 = !{!125, !7, i64 0}
!125 = !{!"dwarf_file_data", !7, i64 0, !12, i64 8}
!126 = !{!125, !12, i64 8}
!127 = distinct !{!127, !23}
!128 = !{!26, !7, i64 96}
!129 = distinct !{!129, !23}
!130 = !{!26, !7, i64 112}
!131 = distinct !{!131, !23}
!132 = !{!55, !7, i64 72}
!133 = distinct !{!133, !23}
!134 = !{!55, !7, i64 64}
!135 = distinct !{!135, !23}
!136 = distinct !{!136, !23}
!137 = distinct !{!137, !23}
!138 = distinct !{!138, !23}
!139 = distinct !{!139, !23}
!140 = distinct !{!140, !112}
!141 = !{!26, !7, i64 344}
!142 = distinct !{!142, !23}
!143 = distinct !{!143, !23}
!144 = !{!145, !12, i64 0}
!145 = !{!"VEC_dw_cfi_ref_base", !12, i64 0, !12, i64 4, !8, i64 8}
!146 = !{!145, !12, i64 4}
!147 = distinct !{!147, !23}
!148 = !{i64 0, i64 8, !6, i64 8, i64 4, !17, i64 16, i64 4, !21, i64 16, i64 8, !38, i64 16, i64 8, !6, i64 16, i64 8, !6, i64 24, i64 4, !21, i64 24, i64 8, !38, i64 24, i64 8, !6, i64 24, i64 8, !6}
!149 = distinct !{!149, !23}
!150 = !{!151, !12, i64 0}
!151 = !{!"VEC_die_arg_entry_base", !12, i64 0, !12, i64 4, !8, i64 8}
!152 = !{!153, !7, i64 0}
!153 = !{!"die_arg_entry_struct", !7, i64 0, !7, i64 8}
!154 = !{!153, !7, i64 8}
!155 = !{i8 0, i8 2}
!156 = distinct !{!156, !23}
!157 = !{!158, !7, i64 16}
!158 = !{!"die_struct", !8, i64 0, !8, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !13, i64 56, !13, i64 64, !12, i64 72, !12, i64 76, !12, i64 80}
!159 = !{!160, !12, i64 0}
!160 = !{!"VEC_dw_attr_node_base", !12, i64 0, !12, i64 4, !8, i64 8}
!161 = !{!162, !8, i64 0}
!162 = !{!"dw_attr_struct", !8, i64 0, !51, i64 8}
!163 = !{!162, !8, i64 8}
!164 = distinct !{!164, !23}
!165 = !{!166, !12, i64 0}
!166 = !{!"VEC_deferred_locations_base", !12, i64 0, !12, i64 4, !8, i64 8}
!167 = !{!168, !7, i64 8}
!168 = !{!"deferred_locations_struct", !7, i64 0, !7, i64 8}
!169 = !{!168, !7, i64 0}
!170 = distinct !{!170, !23}
!171 = !{!172, !7, i64 16}
!172 = !{!"limbo_die_struct", !7, i64 0, !7, i64 8, !7, i64 16}
!173 = !{!172, !7, i64 0}
!174 = !{!158, !7, i64 24}
!175 = !{!158, !7, i64 32}
!176 = !{!158, !7, i64 40}
!177 = !{!172, !7, i64 8}
!178 = distinct !{!178, !23}
!179 = !{i64 0, i64 4, !17, i64 8, i64 4, !17, i64 16, i64 8, !6, i64 16, i64 8, !38, i64 16, i64 8, !6, i64 16, i64 8, !6, i64 16, i64 8, !38, i64 16, i64 8, !38, i64 16, i64 8, !38, i64 24, i64 8, !38, i64 16, i64 8, !6, i64 24, i64 4, !21, i64 28, i64 4, !21, i64 16, i64 8, !6, i64 24, i64 4, !21, i64 16, i64 4, !21, i64 16, i64 8, !6, i64 16, i64 8, !6, i64 16, i64 1, !17, i64 16, i64 8, !6, i64 16, i64 8, !17}
!180 = !{i64 4, i64 4, !17, i64 12, i64 8, !6, i64 12, i64 8, !38, i64 12, i64 8, !6, i64 12, i64 8, !6, i64 12, i64 8, !38, i64 12, i64 8, !38, i64 12, i64 8, !38, i64 20, i64 8, !38, i64 12, i64 8, !6, i64 20, i64 4, !21, i64 24, i64 4, !21, i64 12, i64 8, !6, i64 20, i64 4, !21, i64 12, i64 4, !21, i64 12, i64 8, !6, i64 12, i64 8, !6, i64 12, i64 1, !17, i64 12, i64 8, !6, i64 12, i64 8, !17}
!181 = distinct !{!181, !23}
!182 = !{!183, !12, i64 0}
!183 = !{!"VEC_tree_base", !12, i64 0, !12, i64 4, !8, i64 8}
!184 = distinct !{!184, !23}
!185 = !{!158, !8, i64 0}
!186 = !{!187, !7, i64 0}
!187 = !{!"indirect_string_node", !7, i64 0, !12, i64 8, !8, i64 12, !7, i64 16}
!188 = distinct !{!188, !23}
!189 = !{!190, !12, i64 12}
!190 = !{!"cu_hash_table_entry", !7, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!191 = !{!190, !7, i64 0}
!192 = distinct !{!192, !23}
!193 = !{!190, !12, i64 8}
!194 = !{!190, !7, i64 16}
!195 = distinct !{!195, !23}
!196 = !{!197, !7, i64 0}
!197 = !{!"comdat_type_struct", !7, i64 0, !7, i64 8, !8, i64 16, !7, i64 24}
!198 = distinct !{!198, !23}
!199 = distinct !{!199, !23}
!200 = distinct !{!200, !23}
!201 = !{!160, !12, i64 4}
!202 = !{i64 0, i64 4, !17, i64 8, i64 8, !6, i64 8, i64 8, !38, i64 8, i64 8, !6, i64 8, i64 8, !6, i64 8, i64 8, !38, i64 8, i64 8, !38, i64 8, i64 8, !38, i64 16, i64 8, !38, i64 8, i64 8, !6, i64 16, i64 4, !21, i64 20, i64 4, !21, i64 8, i64 8, !6, i64 16, i64 4, !21, i64 8, i64 4, !21, i64 8, i64 8, !6, i64 8, i64 8, !6, i64 8, i64 1, !17, i64 8, i64 8, !6, i64 8, i64 8, !17}
!203 = !{i64 0, i64 8, !6, i64 0, i64 8, !38, i64 0, i64 8, !6, i64 0, i64 8, !6, i64 0, i64 8, !38, i64 0, i64 8, !38, i64 0, i64 8, !38, i64 8, i64 8, !38, i64 0, i64 8, !6, i64 8, i64 4, !21, i64 12, i64 4, !21, i64 0, i64 8, !6, i64 8, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 8, !6, i64 0, i64 8, !6, i64 0, i64 1, !17, i64 0, i64 8, !6, i64 0, i64 8, !17}
!204 = !{!55, !7, i64 32}
!205 = !{!55, !7, i64 40}
!206 = !{!55, !7, i64 48}
!207 = !{!55, !7, i64 56}
!208 = distinct !{!208, !23}
!209 = !{!210, !12, i64 0}
!210 = !{!"dw_ranges_struct", !12, i64 0}
!211 = distinct !{!211, !23}
!212 = !{!26, !7, i64 200}
!213 = !{!197, !7, i64 8}
!214 = !{!158, !13, i64 56}
!215 = distinct !{!215, !23}
!216 = distinct !{!216, !23}
!217 = distinct !{!217, !23}
!218 = !{!219, !12, i64 0}
!219 = !{!"VEC_pubname_entry_base", !12, i64 0, !12, i64 4, !8, i64 8}
!220 = !{!221, !12, i64 0}
!221 = !{!"VEC_dcall_entry_base", !12, i64 0, !12, i64 4, !8, i64 8}
!222 = !{!223, !7, i64 16}
!223 = !{!"dcall_struct", !12, i64 0, !7, i64 8, !7, i64 16}
!224 = !{!223, !7, i64 8}
!225 = distinct !{!225, !23}
!226 = !{!223, !12, i64 0}
!227 = distinct !{!227, !23}
!228 = !{!229, !12, i64 0}
!229 = !{!"VEC_vcall_entry_base", !12, i64 0, !12, i64 4, !8, i64 8}
!230 = !{!231, !12, i64 4}
!231 = !{!"vcall_struct", !12, i64 0, !12, i64 4}
!232 = distinct !{!232, !23}
!233 = !{!231, !12, i64 0}
!234 = distinct !{!234, !23}
!235 = !{!158, !12, i64 72}
!236 = distinct !{!236, !23}
!237 = !{!238, !7, i64 0}
!238 = !{!"dw_ranges_by_label_struct", !7, i64 0, !7, i64 8}
!239 = !{!238, !7, i64 8}
!240 = distinct !{!240, !23}
!241 = distinct !{!241, !23}
!242 = distinct !{!242, !23}
!243 = !{!244, !12, i64 16}
!244 = !{!"var_loc_list_def", !7, i64 0, !7, i64 8, !12, i64 16}
!245 = !{!244, !7, i64 8}
!246 = !{!247, !7, i64 0}
!247 = !{!"var_loc_node", !7, i64 0, !7, i64 8, !7, i64 16}
!248 = !{!247, !7, i64 16}
!249 = !{!244, !7, i64 0}
!250 = !{!247, !7, i64 8}
!251 = !{!221, !12, i64 4}
!252 = !{i64 0, i64 4, !21, i64 8, i64 8, !6, i64 16, i64 8, !6}
!253 = !{i64 0, i64 8, !6, i64 8, i64 8, !6}
!254 = !{i64 0, i64 8, !6}
!255 = !{!256, !12, i64 0}
!256 = !{!"vcall_insn", !12, i64 0, !12, i64 4}
!257 = !{!256, !12, i64 4}
!258 = !{!229, !12, i64 4}
!259 = !{!260, !7, i64 184}
!260 = !{!"lang_hooks", !7, i64 0, !13, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !261, i64 240, !262, i64 248, !263, i64 256, !264, i64 272, !265, i64 432, !266, i64 560, !7, i64 584, !7, i64 592, !7, i64 600, !7, i64 608, !7, i64 616, !7, i64 624, !7, i64 632, !7, i64 640, !7, i64 648, !7, i64 656, !7, i64 664, !8, i64 672}
!261 = !{!"lang_hooks_for_tree_inlining", !7, i64 0}
!262 = !{!"lang_hooks_for_callgraph", !7, i64 0}
!263 = !{!"lang_hooks_for_tree_dump", !7, i64 0, !7, i64 8}
!264 = !{!"lang_hooks_for_decls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152}
!265 = !{!"lang_hooks_for_types", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !8, i64 120}
!266 = !{!"lang_hooks_for_lto", !7, i64 0, !7, i64 8, !7, i64 16}
!267 = !{!187, !12, i64 8}
!268 = !{!158, !12, i64 80}
!269 = !{!260, !7, i64 0}
!270 = !{!271, !7, i64 40}
!271 = !{!"dw_loc_list_struct", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!272 = distinct !{!272, !23}
!273 = !{!271, !7, i64 0}
!274 = !{!271, !7, i64 24}
!275 = distinct !{!275, !23}
!276 = distinct !{!276, !23}
!277 = distinct !{!277, !23}
!278 = distinct !{!278, !23}
!279 = distinct !{!279, !23}
!280 = distinct !{!280, !23}
!281 = distinct !{!281, !23}
!282 = !{!283, !7, i64 0}
!283 = !{!"pubname_struct", !7, i64 0, !7, i64 8}
!284 = distinct !{!284, !23}
!285 = distinct !{!285, !23}
!286 = distinct !{!286, !23}
!287 = distinct !{!287, !23}
!288 = distinct !{!288, !23}
!289 = distinct !{!289, !23}
!290 = distinct !{!290, !23}
!291 = !{!197, !7, i64 24}
!292 = distinct !{!292, !23}
!293 = distinct !{!293, !23}
!294 = !{i64 0, i64 8, !38, i64 0, i64 4, !21, i64 4, i64 4, !21, i64 0, i64 4, !21}
!295 = !{!158, !7, i64 48}
!296 = !{!297, !7, i64 0}
!297 = !{!"skeleton_chain_struct", !7, i64 0, !7, i64 8, !7, i64 16}
!298 = !{!297, !7, i64 8}
!299 = distinct !{!299, !23}
!300 = distinct !{!300, !23}
!301 = !{!271, !7, i64 8}
!302 = !{!271, !7, i64 16}
!303 = !{!271, !7, i64 32}
!304 = distinct !{!304, !23}
!305 = distinct !{!305, !23}
!306 = distinct !{!306, !23}
!307 = !{!283, !7, i64 8}
!308 = !{!187, !7, i64 16}
!309 = !{i64 0, i64 4, !38, i64 0, i64 4, !21}
!310 = !{!311, !12, i64 0}
!311 = !{!"VEC_constructor_elt_base", !12, i64 0, !12, i64 4, !8, i64 8}
!312 = !{!313, !7, i64 8}
!313 = !{!"constructor_elt_d", !7, i64 0, !7, i64 8}
!314 = distinct !{!314, !23}
!315 = !{i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 8, i64 24, !17}
!316 = distinct !{!316, !23}
!317 = distinct !{!317, !23}
!318 = distinct !{!318, !23}
!319 = distinct !{!319, !23}
!320 = !{!313, !7, i64 0}
!321 = distinct !{!321, !23}
!322 = distinct !{!322, !23}
!323 = !{!26, !7, i64 1112}
!324 = !{!26, !7, i64 1040}
!325 = !{!26, !8, i64 2028}
!326 = !{!26, !8, i64 1961}
!327 = distinct !{!327, !23}
!328 = distinct !{!328, !23}
!329 = distinct !{!329, !23}
!330 = distinct !{!330, !23}
!331 = distinct !{!331, !23}
!332 = distinct !{!332, !23}
!333 = distinct !{!333, !23}
!334 = distinct !{!334, !23}
!335 = distinct !{!335, !23}
!336 = distinct !{!336, !23}
!337 = distinct !{!337, !23}
!338 = !{!90, !8, i64 479}
!339 = distinct !{!339, !23}
!340 = distinct !{!340, !23}
!341 = distinct !{!341, !23}
!342 = distinct !{!342, !23}
!343 = !{!344, !7, i64 0}
!344 = !{!"mem_attrs", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !12, i64 28, !8, i64 32}
!345 = !{!344, !7, i64 8}
!346 = !{}
!347 = !{!90, !8, i64 480}
!348 = !{!349, !7, i64 24}
!349 = !{!"array_descr_info", !12, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !8, i64 48}
!350 = !{!349, !7, i64 16}
!351 = !{!349, !7, i64 40}
!352 = !{!349, !7, i64 32}
!353 = !{!349, !12, i64 0}
!354 = !{!355, !7, i64 0}
!355 = !{!"array_descr_dimen", !7, i64 0, !7, i64 8, !7, i64 16}
!356 = !{i32 -1, i32 2}
!357 = !{!355, !7, i64 8}
!358 = !{!355, !7, i64 16}
!359 = distinct !{!359, !23}
!360 = !{!349, !7, i64 8}
!361 = distinct !{!361, !23}
!362 = !{i64 0, i64 7, !6, i64 0, i64 7, !38, i64 0, i64 7, !6, i64 0, i64 7, !6, i64 0, i64 7, !38, i64 0, i64 7, !38, i64 0, i64 7, !38, i64 7, i64 8, !38, i64 0, i64 7, !6, i64 7, i64 4, !21, i64 11, i64 4, !21, i64 0, i64 7, !6, i64 7, i64 4, !21, i64 0, i64 3, !21, i64 0, i64 7, !6, i64 0, i64 7, !6, i64 0, i64 7, !6, i64 0, i64 7, !17}
!363 = distinct !{!363, !23}
!364 = distinct !{!364, !23}
!365 = !{!183, !12, i64 4}
!366 = distinct !{!366, !23}
!367 = !{!260, !7, i64 440}
!368 = distinct !{!368, !23}
!369 = distinct !{!369, !23}
!370 = distinct !{!370, !23}
!371 = !{!115, !7, i64 96}
!372 = distinct !{!372, !23}
!373 = !{!374, !7, i64 0}
!374 = !{!"", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!375 = !{!374, !12, i64 8}
!376 = distinct !{!376, !23}
!377 = distinct !{!377, !23}
!378 = !{!260, !7, i64 296}
!379 = !{!219, !12, i64 4}
!380 = distinct !{!380, !23}
!381 = distinct !{!381, !23}
!382 = !{!90, !12, i64 120}
!383 = !{!115, !7, i64 56}
!384 = !{!260, !7, i64 320}
!385 = !{!260, !7, i64 600}
!386 = !{!260, !7, i64 312}
!387 = distinct !{!387, !23}
!388 = distinct !{!388, !23}
!389 = distinct !{!389, !23}
!390 = distinct !{!390, !23}
!391 = distinct !{!391, !23}
!392 = !{!26, !7, i64 1408}
!393 = !{!260, !7, i64 584}
!394 = !{!260, !7, i64 592}
!395 = !{!260, !7, i64 472}
!396 = distinct !{!396, !23}
!397 = distinct !{!397, !23}
!398 = distinct !{!398, !23}
!399 = !{!158, !12, i64 76}
!400 = !{!260, !7, i64 304}
!401 = !{!151, !12, i64 4}
!402 = distinct !{!402, !23}
!403 = !{i64 0, i64 8, !6, i64 8, i64 4, !21, i64 12, i64 4, !21, i64 16, i64 1, !17}
!404 = !{i64 0, i64 4, !21, i64 4, i64 4, !21, i64 8, i64 1, !17}
!405 = !{i64 -1152921504606846976, i64 1152921504606846976}
!406 = !{!166, !12, i64 4}
!407 = distinct !{!407, !23}
!408 = distinct !{!408, !23}
!409 = distinct !{!409, !23}
!410 = distinct !{!410, !23}
!411 = distinct !{!411, !23}
!412 = distinct !{!412, !23}
!413 = distinct !{!413, !23}
!414 = distinct !{!414, !23}
!415 = distinct !{!415, !23}
!416 = distinct !{!416, !23}
!417 = distinct !{!417, !23}
!418 = distinct !{!418, !23}
!419 = !{!420, !7, i64 0}
!420 = !{!"types_used_by_vars_entry", !7, i64 0, !7, i64 8}
!421 = !{!420, !7, i64 8}
!422 = distinct !{!422, !23}
!423 = distinct !{!423, !23}
!424 = distinct !{!424, !23}
!425 = distinct !{!425, !23}
!426 = distinct !{!426, !23}
!427 = distinct !{!427, !23}
!428 = distinct !{!428, !23}
!429 = distinct !{!429, !23}
!430 = distinct !{!430, !23}
!431 = distinct !{!431, !23}
!432 = distinct !{!432, !23}
!433 = !{!434, !7, i64 0}
!434 = !{!"checksum_attributes", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288, !7, i64 296, !7, i64 304, !7, i64 312, !7, i64 320, !7, i64 328, !7, i64 336, !7, i64 344, !7, i64 352, !7, i64 360, !7, i64 368}
!435 = !{!434, !7, i64 24}
!436 = !{!434, !7, i64 32}
!437 = !{!434, !7, i64 40}
!438 = !{!434, !7, i64 48}
!439 = !{!434, !7, i64 56}
!440 = !{!434, !7, i64 64}
!441 = !{!434, !7, i64 72}
!442 = !{!434, !7, i64 80}
!443 = !{!434, !7, i64 88}
!444 = !{!434, !7, i64 96}
!445 = !{!434, !7, i64 104}
!446 = !{!434, !7, i64 112}
!447 = !{!434, !7, i64 120}
!448 = !{!434, !7, i64 128}
!449 = !{!434, !7, i64 136}
!450 = !{!434, !7, i64 144}
!451 = !{!434, !7, i64 152}
!452 = !{!434, !7, i64 160}
!453 = !{!434, !7, i64 168}
!454 = !{!434, !7, i64 176}
!455 = !{!434, !7, i64 184}
!456 = !{!434, !7, i64 192}
!457 = !{!434, !7, i64 200}
!458 = !{!434, !7, i64 208}
!459 = !{!434, !7, i64 216}
!460 = !{!434, !7, i64 224}
!461 = !{!434, !7, i64 232}
!462 = !{!434, !7, i64 240}
!463 = !{!434, !7, i64 248}
!464 = !{!434, !7, i64 256}
!465 = !{!434, !7, i64 264}
!466 = !{!434, !7, i64 272}
!467 = !{!434, !7, i64 280}
!468 = !{!434, !7, i64 288}
!469 = !{!434, !7, i64 296}
!470 = !{!434, !7, i64 304}
!471 = !{!434, !7, i64 312}
!472 = !{!434, !7, i64 320}
!473 = !{!434, !7, i64 328}
!474 = !{!434, !7, i64 336}
!475 = !{!434, !7, i64 344}
!476 = !{!434, !7, i64 352}
!477 = !{!434, !7, i64 360}
!478 = !{!434, !7, i64 368}
!479 = !{!434, !7, i64 8}
!480 = !{!434, !7, i64 16}
!481 = distinct !{!481, !23}
!482 = distinct !{!482, !23}
!483 = distinct !{!483, !23}
!484 = distinct !{!484, !23}
!485 = distinct !{!485, !23}
!486 = !{!487, !7, i64 8}
!487 = !{!"decl_table_entry", !7, i64 0, !7, i64 8}
!488 = !{!487, !7, i64 0}
!489 = distinct !{!489, !23}
!490 = !{!297, !7, i64 16}
!491 = distinct !{!491, !23}
!492 = distinct !{!492, !23}
!493 = distinct !{!493, !23}
!494 = distinct !{!494, !23}
!495 = distinct !{!495, !23}
!496 = distinct !{!496, !23}
!497 = distinct !{!497, !23}
!498 = distinct !{!498, !23}
!499 = distinct !{!499, !23}
!500 = !{!158, !13, i64 64}
!501 = distinct !{!501, !23}
!502 = !{i32 1, i32 0}
!503 = distinct !{!503, !23}
!504 = distinct !{!504, !23}
!505 = distinct !{!505, !23}
!506 = distinct !{!506, !112}
!507 = distinct !{!507, !23}
!508 = distinct !{!508, !23}
!509 = !{!187, !8, i64 12}
!510 = distinct !{!510, !23}
!511 = distinct !{!511, !23}
!512 = !{!513, !12, i64 0}
!513 = !{!"VEC_dcall_entry_gc", !221, i64 0}
!514 = distinct !{!514, !23}
!515 = distinct !{!515, !23}
!516 = distinct !{!516, !23}
!517 = distinct !{!517, !23}
!518 = distinct !{!518, !23}
!519 = !{!520, !12, i64 0}
!520 = !{!"VEC_die_arg_entry_gc", !151, i64 0}
!521 = distinct !{!521, !23}
!522 = !{!523, !12, i64 0}
!523 = !{!"VEC_pubname_entry_gc", !219, i64 0}
!524 = distinct !{!524, !23}
!525 = !{!526, !12, i64 0}
!526 = !{!"VEC_dw_attr_node_gc", !160, i64 0}
!527 = distinct !{!527, !23}
!528 = !{!529, !12, i64 0}
!529 = !{!"VEC_deferred_locations_gc", !166, i64 0}
!530 = distinct !{!530, !23}
!531 = !{i32 0, i32 5}
!532 = !{!533, !7, i64 24}
!533 = !{!"htab", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !12, i64 56, !12, i64 60, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !12, i64 104}
!534 = !{!533, !13, i64 32}
!535 = distinct !{!535, !23}
!536 = distinct !{!536, !23}
!537 = distinct !{!537, !23}
!538 = distinct !{!538, !23}
!539 = distinct !{!539, !23}
!540 = distinct !{!540, !23}
!541 = distinct !{!541, !23}
!542 = distinct !{!542, !23}
!543 = distinct !{!543, !23}
!544 = distinct !{!544, !23}
!545 = distinct !{!545, !23}
!546 = distinct !{!546, !23}
!547 = distinct !{!547, !23}
!548 = distinct !{!548, !23}
!549 = distinct !{!549, !23}
!550 = distinct !{!550, !23}
!551 = distinct !{!551, !23}
!552 = distinct !{!552, !23}
!553 = distinct !{!553, !23}
!554 = distinct !{!554, !23}
!555 = distinct !{!555, !23, !556}
!556 = !{!"llvm.loop.unswitch.partial.disable"}
!557 = distinct !{!557, !23}
!558 = distinct !{!558, !23, !556}
!559 = distinct !{!559, !23}
!560 = distinct !{!560, !23, !556}
!561 = distinct !{!561, !23}
!562 = distinct !{!562, !23, !556}
!563 = distinct !{!563, !23}
!564 = distinct !{!564, !23, !556}
!565 = distinct !{!565, !23}
!566 = distinct !{!566, !23}
!567 = distinct !{!567, !23}
!568 = distinct !{!568, !23}
!569 = distinct !{!569, !23}
!570 = distinct !{!570, !23}
!571 = distinct !{!571, !23}
!572 = distinct !{!572, !23}
!573 = distinct !{!573, !23}
!574 = distinct !{!574, !23, !556}
!575 = distinct !{!575, !23, !556}
!576 = distinct !{!576, !23}
