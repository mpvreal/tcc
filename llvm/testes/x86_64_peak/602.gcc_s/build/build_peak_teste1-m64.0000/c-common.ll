; ModuleID = 'c-common.c'
source_filename = "c-common.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.fname_var_t = type { ptr, i32, i32 }
%struct.attribute_spec = type { ptr, i32, i32, i8, i8, i8, ptr }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.addr_space, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.calls, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { ptr, ptr, ptr, %struct.asm_int_op, %struct.asm_int_op, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.asm_int_op = type { ptr, ptr, ptr, ptr }
%struct.sched = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vectorize = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.addr_space = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.calls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.c = type { ptr }
%struct.cxx = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.emutls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%struct.target_option_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lang_hooks = type { ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.lang_hooks_for_tree_inlining = type { ptr }
%struct.lang_hooks_for_callgraph = type { ptr }
%struct.lang_hooks_for_tree_dump = type { ptr, ptr }
%struct.lang_hooks_for_decls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lang_hooks_for_types = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.lang_hooks_for_lto = type { ptr, ptr, ptr }
%struct.obstack = type { i64, ptr, ptr, ptr, ptr, i64, i32, ptr, ptr, ptr, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.visibility_flags = type { i8, [3 x i8] }
%struct.gcc_targetcm = type { ptr }
%struct.ggc_root_tab = type { ptr, i64, i64, ptr, ptr }
%struct._IO_FILE = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i64, i16, i8, [1 x i8], ptr, i64, ptr, ptr, ptr, ptr, i64, i32, [20 x i8] }
%struct.tree_common = type { %struct.tree_base, ptr, ptr }
%struct.tree_base = type { i64 }
%struct.tree_type = type { %struct.tree_common, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.tree_type_symtab, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%union.tree_type_symtab = type { ptr }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, ptr, i40, i32, ptr, ptr, ptr, ptr, ptr }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, ptr, ptr }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, ptr, ptr, ptr, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, ptr }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, ptr, ptr, ptr, ptr, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, ptr, ptr, ptr, ptr }
%struct.tree_list = type { %struct.tree_common, ptr, ptr }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { ptr, i32, i32 }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.cl_optimization = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.tree_optimization_option = type { %struct.tree_common, %struct.cl_optimization }
%struct.VEC_const_char_p_base = type { i32, i32, [1 x ptr] }
%struct.c_common_resword = type { ptr, i32 }
%struct.tree_exp = type { %struct.tree_common, i32, ptr, [1 x ptr] }
%struct.cpp_string = type { i32, ptr }
%struct.tree_complex = type { %struct.tree_common, ptr, ptr }
%struct.tree_real_cst = type { %struct.tree_common, ptr }
%struct.tlist = type { ptr, ptr, ptr }
%struct.tlist_cache = type { ptr, ptr, ptr, ptr }
%struct.expanded_location = type { ptr, i32, i32, i8 }
%struct.tree_fixed_cst = type { %struct.tree_common, ptr }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.disabled_builtin = type { ptr, ptr }
%struct.splay_tree_node_s = type { i64, i64, ptr, ptr }
%struct.sorted_fields_type = type { i32, [1 x ptr] }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, ptr, i32, i32 }
%struct.text_info = type { ptr, ptr, i32, ptr, ptr }
%struct.tree_field_decl = type { %struct.tree_decl_common, ptr, ptr, ptr, ptr, ptr }
%struct.tree_constructor = type { %struct.tree_common, ptr }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { ptr, ptr }
%struct.VEC_tree_base = type { i32, i32, [1 x ptr] }
%struct.VEC_tree_gc_vec_base = type { i32, i32, [1 x ptr] }

@parse_in = dso_local local_unnamed_addr global ptr null, align 8
@c_global_trees = dso_local global [55 x ptr] zeroinitializer, align 16
@flag_preprocess_only = dso_local local_unnamed_addr global i32 0, align 4
@flag_no_line_commands = dso_local local_unnamed_addr global i8 0, align 1
@flag_no_output = dso_local local_unnamed_addr global i8 0, align 1
@flag_dump_macros = dso_local local_unnamed_addr global i8 0, align 1
@flag_dump_includes = dso_local local_unnamed_addr global i8 0, align 1
@flag_pch_preprocess = dso_local local_unnamed_addr global i8 0, align 1
@pch_file = dso_local local_unnamed_addr global ptr null, align 8
@flag_iso = dso_local local_unnamed_addr global i32 0, align 4
@flag_undef = dso_local local_unnamed_addr global i32 0, align 4
@flag_no_builtin = dso_local local_unnamed_addr global i32 0, align 4
@flag_no_nonansi_builtin = dso_local local_unnamed_addr global i32 0, align 4
@flag_short_double = dso_local local_unnamed_addr global i32 0, align 4
@flag_short_wchar = dso_local local_unnamed_addr global i32 0, align 4
@flag_lax_vector_conversions = dso_local local_unnamed_addr global i32 0, align 4
@flag_ms_extensions = dso_local local_unnamed_addr global i32 0, align 4
@flag_no_asm = dso_local local_unnamed_addr global i32 0, align 4
@warn_unknown_pragmas = dso_local local_unnamed_addr global i32 0, align 4
@warn_format = dso_local local_unnamed_addr global i32 0, align 4
@warn_strict_null_sentinel = dso_local local_unnamed_addr global i32 0, align 4
@flag_cond_mismatch = dso_local local_unnamed_addr global i32 0, align 4
@flag_isoc94 = dso_local local_unnamed_addr global i32 0, align 4
@flag_isoc99 = dso_local local_unnamed_addr global i32 0, align 4
@flag_gen_declaration = dso_local local_unnamed_addr global i32 0, align 4
@print_struct_values = dso_local local_unnamed_addr global i32 0, align 4
@constant_string_class_name = dso_local local_unnamed_addr global ptr null, align 8
@flag_no_gnu_keywords = dso_local local_unnamed_addr global i32 0, align 4
@flag_use_repository = dso_local local_unnamed_addr global i32 0, align 4
@flag_conserve_space = dso_local local_unnamed_addr global i32 0, align 4
@flag_check_new = dso_local local_unnamed_addr global i32 0, align 4
@ridpointers = dso_local global ptr null, align 8
@make_fname_decl = dso_local local_unnamed_addr global ptr null, align 8
@c_inhibit_evaluation_warnings = dso_local local_unnamed_addr global i32 0, align 4
@stdout = external local_unnamed_addr global ptr, align 8
@stdin = external local_unnamed_addr global ptr, align 8
@flag_signed_bitfields = dso_local local_unnamed_addr global i32 1, align 4
@flag_nil_receivers = dso_local local_unnamed_addr global i32 1, align 4
@flag_zero_link = dso_local local_unnamed_addr global i32 0, align 4
@flag_replace_objc_classes = dso_local local_unnamed_addr global i32 0, align 4
@flag_hosted = dso_local local_unnamed_addr global i32 1, align 4
@flag_implement_inlines = dso_local local_unnamed_addr global i32 1, align 4
@flag_implicit_templates = dso_local local_unnamed_addr global i32 1, align 4
@flag_implicit_inline_templates = dso_local local_unnamed_addr global i32 1, align 4
@flag_optional_diags = dso_local local_unnamed_addr global i32 1, align 4
@flag_elide_constructors = dso_local local_unnamed_addr global i32 1, align 4
@flag_default_inline = dso_local local_unnamed_addr global i32 1, align 4
@flag_rtti = dso_local local_unnamed_addr global i32 1, align 4
@flag_access_control = dso_local local_unnamed_addr global i32 1, align 4
@cxx_dialect = dso_local local_unnamed_addr global i32 0, align 4
@flag_new_for_scope = dso_local local_unnamed_addr global i32 1, align 4
@flag_weak = dso_local local_unnamed_addr global i32 1, align 4
@flag_working_directory = dso_local local_unnamed_addr global i32 -1, align 4
@flag_use_cxa_atexit = dso_local local_unnamed_addr global i32 2, align 4
@flag_use_cxa_get_exception_ptr = dso_local local_unnamed_addr global i32 2, align 4
@flag_enforce_eh_specs = dso_local local_unnamed_addr global i32 1, align 4
@flag_threadsafe_statics = dso_local local_unnamed_addr global i32 1, align 4
@flag_pretty_templates = dso_local local_unnamed_addr global i32 1, align 4
@warn_implicit = dso_local local_unnamed_addr global i32 1, align 4
@max_tinst_depth = dso_local local_unnamed_addr global i32 1024, align 4
@done_lexing = dso_local local_unnamed_addr global i8 0, align 1
@fname_vars = dso_local local_unnamed_addr constant [4 x %struct.fname_var_t] [%struct.fname_var_t { ptr getelementptr (i8, ptr @c_global_trees, i64 408), i32 68, i32 0 }, %struct.fname_var_t { ptr getelementptr (i8, ptr @c_global_trees, i64 392), i32 66, i32 0 }, %struct.fname_var_t { ptr getelementptr (i8, ptr @c_global_trees, i64 400), i32 67, i32 1 }, %struct.fname_var_t zeroinitializer], align 16
@.str = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"_Complex\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"_Imaginary\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"_Decimal32\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"_Decimal64\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"_Decimal128\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"_Fract\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"_Accum\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"_Sat\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"__FUNCTION__\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"__PRETTY_FUNCTION__\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"__alignof\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"__alignof__\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"__asm\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"__asm__\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"__attribute\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"__attribute__\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"__builtin_choose_expr\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"__builtin_offsetof\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"__builtin_types_compatible_p\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"__builtin_va_arg\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"__complex\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"__complex__\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"__const\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"__const__\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"__decltype\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"__extension__\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"__func__\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"__has_nothrow_assign\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"__has_nothrow_constructor\00", align 1
@.str.30 = private unnamed_addr constant [19 x i8] c"__has_nothrow_copy\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"__has_trivial_assign\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"__has_trivial_constructor\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"__has_trivial_copy\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"__has_trivial_destructor\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"__has_virtual_destructor\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"__is_abstract\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"__is_base_of\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"__is_class\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"__is_convertible_to\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"__is_empty\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"__is_enum\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"__is_pod\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"__is_polymorphic\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"__is_standard_layout\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"__is_trivial\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"__is_union\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"__imag\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"__imag__\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"__inline\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"__inline__\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"__label__\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"__null\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"__real\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"__real__\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"__restrict\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"__restrict__\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"__signed\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"__signed__\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"__thread\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"__typeof\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"__typeof__\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"__volatile\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"__volatile__\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"alignof\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"asm\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"catch\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"char16_t\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"char32_t\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"constexpr\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"const_cast\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"decltype\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"dynamic_cast\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"explicit\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"export\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"extern\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"friend\00", align 1
@.str.94 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"inline\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"mutable\00", align 1
@.str.100 = private unnamed_addr constant [10 x i8] c"namespace\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"operator\00", align 1
@.str.103 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"register\00", align 1
@.str.107 = private unnamed_addr constant [17 x i8] c"reinterpret_cast\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"restrict\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"signed\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"sizeof\00", align 1
@.str.113 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@.str.114 = private unnamed_addr constant [14 x i8] c"static_assert\00", align 1
@.str.115 = private unnamed_addr constant [12 x i8] c"static_cast\00", align 1
@.str.116 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.118 = private unnamed_addr constant [9 x i8] c"template\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"try\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"typedef\00", align 1
@.str.124 = private unnamed_addr constant [9 x i8] c"typename\00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"typeid\00", align 1
@.str.126 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"unsigned\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"using\00", align 1
@.str.130 = private unnamed_addr constant [8 x i8] c"virtual\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.132 = private unnamed_addr constant [9 x i8] c"volatile\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"wchar_t\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.135 = private unnamed_addr constant [20 x i8] c"compatibility_alias\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c"defs\00", align 1
@.str.137 = private unnamed_addr constant [7 x i8] c"encode\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"implementation\00", align 1
@.str.140 = private unnamed_addr constant [10 x i8] c"interface\00", align 1
@.str.141 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"selector\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"finally\00", align 1
@.str.144 = private unnamed_addr constant [13 x i8] c"synchronized\00", align 1
@.str.145 = private unnamed_addr constant [7 x i8] c"bycopy\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"byref\00", align 1
@.str.147 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"inout\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"oneway\00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@c_common_reswords = dso_local local_unnamed_addr constant [151 x { ptr, i8, i8, i8, i8 }] [{ ptr, i8, i8, i8, i8 } { ptr @.str, i8 69, i8 0, i8 1, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.1, i8 13, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.2, i8 27, i8 0, i8 1, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.3, i8 60, i8 0, i8 17, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.4, i8 61, i8 0, i8 17, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.5, i8 62, i8 0, i8 17, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.6, i8 63, i8 0, i8 17, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.7, i8 64, i8 0, i8 17, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.8, i8 15, i8 0, i8 17, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.9, i8 66, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.10, i8 67, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.11, i8 51, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.12, i8 51, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.13, i8 49, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.14, i8 49, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.15, i8 52, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.16, i8 52, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.17, i8 58, i8 0, i8 1, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.18, i8 82, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.19, i8 59, i8 0, i8 1, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.20, i8 53, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.21, i8 13, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.22, i8 13, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.23, i8 3, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.24, i8 3, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.25, i8 118, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.26, i8 54, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.27, i8 68, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.28, i8 97, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.29, i8 98, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.30, i8 99, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.31, i8 100, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.32, i8 101, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.33, i8 102, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.34, i8 103, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.35, i8 104, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.36, i8 105, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.37, i8 106, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.38, i8 108, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.39, i8 107, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.40, i8 109, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.41, i8 110, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.42, i8 111, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.43, i8 112, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.44, i8 113, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.45, i8 114, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.46, i8 115, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.47, i8 55, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.48, i8 55, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.49, i8 8, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.50, i8 8, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.51, i8 57, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.52, i8 76, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.53, i8 56, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.54, i8 56, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.55, i8 12, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.56, i8 12, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.57, i8 10, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.58, i8 10, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.59, i8 14, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.60, i8 50, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.61, i8 50, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.62, i8 9, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.63, i8 9, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.64, i8 51, i8 0, i8 10, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.65, i8 49, i8 0, i8 64, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.66, i8 11, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.67, i8 69, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.68, i8 44, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.69, i8 42, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.70, i8 77, i8 0, i8 0, i8 3 }, { ptr, i8, i8, i8, i8 } { ptr @.str.71, i8 29, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.72, i8 91, i8 0, i8 10, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.73, i8 92, i8 0, i8 10, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.74, i8 71, i8 0, i8 0, i8 3 }, { ptr, i8, i8, i8, i8 } { ptr @.str.75, i8 3, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.76, i8 117, i8 0, i8 10, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.77, i8 93, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.78, i8 45, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.79, i8 118, i8 0, i8 10, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.80, i8 43, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.81, i8 78, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.82, i8 39, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.83, i8 31, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.84, i8 94, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.85, i8 37, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.86, i8 33, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.87, i8 18, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.88, i8 19, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.89, i8 4, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.90, i8 79, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.91, i8 30, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.92, i8 40, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.93, i8 16, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.94, i8 47, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.95, i8 36, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.96, i8 8, i8 0, i8 32, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.97, i8 28, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.98, i8 2, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.99, i8 20, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.100, i8 80, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.101, i8 81, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.102, i8 83, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.103, i8 73, i8 0, i8 0, i8 3 }, { ptr, i8, i8, i8, i8 } { ptr @.str.104, i8 74, i8 0, i8 0, i8 3 }, { ptr, i8, i8, i8, i8 } { ptr @.str.105, i8 72, i8 0, i8 0, i8 3 }, { ptr, i8, i8, i8, i8 } { ptr @.str.106, i8 5, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.107, i8 95, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.108, i8 12, i8 0, i8 5, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.109, i8 46, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.110, i8 7, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.111, i8 10, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.112, i8 48, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.113, i8 0, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.114, i8 116, i8 0, i8 10, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.115, i8 96, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.116, i8 34, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.117, i8 41, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.118, i8 75, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.119, i8 84, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.120, i8 85, i8 0, i8 0, i8 3 }, { ptr, i8, i8, i8, i8 } { ptr @.str.121, i8 86, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.122, i8 87, i8 0, i8 0, i8 3 }, { ptr, i8, i8, i8, i8 } { ptr @.str.123, i8 6, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.124, i8 88, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.125, i8 89, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.126, i8 50, i8 0, i8 80, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.127, i8 35, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.128, i8 1, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.129, i8 90, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.130, i8 17, i8 0, i8 2, i8 2 }, { ptr, i8, i8, i8, i8 } { ptr @.str.131, i8 32, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.132, i8 9, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.133, i8 70, i8 0, i8 2, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.134, i8 38, i8 0, i8 0, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.135, i8 122, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.136, i8 123, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.137, i8 119, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.138, i8 120, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.139, i8 -121, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.140, i8 -122, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.141, i8 127, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.142, i8 -128, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.143, i8 -124, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.144, i8 -123, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.145, i8 24, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.146, i8 25, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.147, i8 21, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.148, i8 23, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.149, i8 26, i8 0, i8 -128, i8 0 }, { ptr, i8, i8, i8, i8 } { ptr @.str.150, i8 22, i8 0, i8 -128, i8 0 }], align 16
@num_c_common_reswords = dso_local local_unnamed_addr constant i32 151, align 4
@c_common_attribute_table = dso_local local_unnamed_addr constant [49 x %struct.attribute_spec] [%struct.attribute_spec { ptr @.str.152, i32 0, i32 0, i8 0, i8 0, i8 0, ptr @handle_packed_attribute }, %struct.attribute_spec { ptr @.str.153, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_nocommon_attribute }, %struct.attribute_spec { ptr @.str.154, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_common_attribute }, %struct.attribute_spec { ptr @.str.155, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_noreturn_attribute }, %struct.attribute_spec { ptr @.str.132, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_noreturn_attribute }, %struct.attribute_spec { ptr @.str.156, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_noinline_attribute }, %struct.attribute_spec { ptr @.str.157, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_noclone_attribute }, %struct.attribute_spec { ptr @.str.158, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_always_inline_attribute }, %struct.attribute_spec { ptr @.str.159, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_gnu_inline_attribute }, %struct.attribute_spec { ptr @.str.160, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_artificial_attribute }, %struct.attribute_spec { ptr @.str.161, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_flatten_attribute }, %struct.attribute_spec { ptr @.str.162, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_used_attribute }, %struct.attribute_spec { ptr @.str.163, i32 0, i32 0, i8 0, i8 0, i8 0, ptr @handle_unused_attribute }, %struct.attribute_spec { ptr @.str.164, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_externally_visible_attribute }, %struct.attribute_spec { ptr @.str.75, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_const_attribute }, %struct.attribute_spec { ptr @.str.165, i32 0, i32 0, i8 0, i8 0, i8 0, ptr @handle_transparent_union_attribute }, %struct.attribute_spec { ptr @.str.166, i32 0, i32 1, i8 1, i8 0, i8 0, ptr @handle_constructor_attribute }, %struct.attribute_spec { ptr @.str.167, i32 0, i32 1, i8 1, i8 0, i8 0, ptr @handle_destructor_attribute }, %struct.attribute_spec { ptr @.str.168, i32 1, i32 1, i8 0, i8 1, i8 0, ptr @handle_mode_attribute }, %struct.attribute_spec { ptr @.str.169, i32 1, i32 1, i8 1, i8 0, i8 0, ptr @handle_section_attribute }, %struct.attribute_spec { ptr @.str.170, i32 0, i32 1, i8 0, i8 0, i8 0, ptr @handle_aligned_attribute }, %struct.attribute_spec { ptr @.str.171, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_weak_attribute }, %struct.attribute_spec { ptr @.str.172, i32 1, i32 1, i8 1, i8 0, i8 0, ptr @handle_alias_attribute }, %struct.attribute_spec { ptr @.str.173, i32 0, i32 1, i8 1, i8 0, i8 0, ptr @handle_weakref_attribute }, %struct.attribute_spec { ptr @.str.174, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_no_instrument_function_attribute }, %struct.attribute_spec { ptr @.str.175, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_malloc_attribute }, %struct.attribute_spec { ptr @.str.176, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_returns_twice_attribute }, %struct.attribute_spec { ptr @.str.177, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_no_limit_stack_attribute }, %struct.attribute_spec { ptr @.str.178, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_pure_attribute }, %struct.attribute_spec { ptr @.str.179, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_novops_attribute }, %struct.attribute_spec { ptr @.str.180, i32 0, i32 1, i8 0, i8 0, i8 0, ptr @handle_deprecated_attribute }, %struct.attribute_spec { ptr @.str.181, i32 1, i32 1, i8 0, i8 1, i8 0, ptr @handle_vector_size_attribute }, %struct.attribute_spec { ptr @.str.182, i32 1, i32 1, i8 0, i8 0, i8 0, ptr @handle_visibility_attribute }, %struct.attribute_spec { ptr @.str.183, i32 1, i32 1, i8 1, i8 0, i8 0, ptr @handle_tls_model_attribute }, %struct.attribute_spec { ptr @.str.184, i32 0, i32 -1, i8 0, i8 1, i8 1, ptr @handle_nonnull_attribute }, %struct.attribute_spec { ptr @.str.185, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_nothrow_attribute }, %struct.attribute_spec { ptr @.str.186, i32 0, i32 0, i8 0, i8 1, i8 0, ptr null }, %struct.attribute_spec { ptr @.str.187, i32 1, i32 1, i8 1, i8 0, i8 0, ptr @handle_cleanup_attribute }, %struct.attribute_spec { ptr @.str.188, i32 0, i32 0, i8 0, i8 1, i8 1, ptr @handle_warn_unused_result_attribute }, %struct.attribute_spec { ptr @.str.189, i32 0, i32 1, i8 0, i8 1, i8 1, ptr @handle_sentinel_attribute }, %struct.attribute_spec { ptr @.str.190, i32 0, i32 0, i8 0, i8 1, i8 1, ptr @handle_type_generic_attribute }, %struct.attribute_spec { ptr @.str.191, i32 1, i32 2, i8 0, i8 1, i8 1, ptr @handle_alloc_size_attribute }, %struct.attribute_spec { ptr @.str.192, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_cold_attribute }, %struct.attribute_spec { ptr @.str.193, i32 0, i32 0, i8 1, i8 0, i8 0, ptr @handle_hot_attribute }, %struct.attribute_spec { ptr @.str.194, i32 1, i32 1, i8 1, i8 0, i8 0, ptr @handle_error_attribute }, %struct.attribute_spec { ptr @.str.195, i32 1, i32 1, i8 1, i8 0, i8 0, ptr @handle_error_attribute }, %struct.attribute_spec { ptr @.str.196, i32 1, i32 -1, i8 1, i8 0, i8 0, ptr @handle_target_attribute }, %struct.attribute_spec { ptr @.str.197, i32 1, i32 -1, i8 1, i8 0, i8 0, ptr @handle_optimize_attribute }, %struct.attribute_spec zeroinitializer], align 16
@.str.152 = private unnamed_addr constant [7 x i8] c"packed\00", align 1
@.str.153 = private unnamed_addr constant [9 x i8] c"nocommon\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"noreturn\00", align 1
@.str.156 = private unnamed_addr constant [9 x i8] c"noinline\00", align 1
@.str.157 = private unnamed_addr constant [8 x i8] c"noclone\00", align 1
@.str.158 = private unnamed_addr constant [14 x i8] c"always_inline\00", align 1
@.str.159 = private unnamed_addr constant [11 x i8] c"gnu_inline\00", align 1
@.str.160 = private unnamed_addr constant [11 x i8] c"artificial\00", align 1
@.str.161 = private unnamed_addr constant [8 x i8] c"flatten\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"used\00", align 1
@.str.163 = private unnamed_addr constant [7 x i8] c"unused\00", align 1
@.str.164 = private unnamed_addr constant [19 x i8] c"externally_visible\00", align 1
@.str.165 = private unnamed_addr constant [18 x i8] c"transparent_union\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.167 = private unnamed_addr constant [11 x i8] c"destructor\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.169 = private unnamed_addr constant [8 x i8] c"section\00", align 1
@.str.170 = private unnamed_addr constant [8 x i8] c"aligned\00", align 1
@.str.171 = private unnamed_addr constant [5 x i8] c"weak\00", align 1
@.str.172 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@.str.173 = private unnamed_addr constant [8 x i8] c"weakref\00", align 1
@.str.174 = private unnamed_addr constant [23 x i8] c"no_instrument_function\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@.str.176 = private unnamed_addr constant [14 x i8] c"returns_twice\00", align 1
@.str.177 = private unnamed_addr constant [15 x i8] c"no_stack_limit\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"pure\00", align 1
@.str.179 = private unnamed_addr constant [8 x i8] c"no vops\00", align 1
@.str.180 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@.str.181 = private unnamed_addr constant [12 x i8] c"vector_size\00", align 1
@.str.182 = private unnamed_addr constant [11 x i8] c"visibility\00", align 1
@.str.183 = private unnamed_addr constant [10 x i8] c"tls_model\00", align 1
@.str.184 = private unnamed_addr constant [8 x i8] c"nonnull\00", align 1
@.str.185 = private unnamed_addr constant [8 x i8] c"nothrow\00", align 1
@.str.186 = private unnamed_addr constant [10 x i8] c"may_alias\00", align 1
@.str.187 = private unnamed_addr constant [8 x i8] c"cleanup\00", align 1
@.str.188 = private unnamed_addr constant [19 x i8] c"warn_unused_result\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"sentinel\00", align 1
@.str.190 = private unnamed_addr constant [13 x i8] c"type generic\00", align 1
@.str.191 = private unnamed_addr constant [11 x i8] c"alloc_size\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"cold\00", align 1
@.str.193 = private unnamed_addr constant [4 x i8] c"hot\00", align 1
@.str.194 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.197 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@tree_code_type = external local_unnamed_addr constant [0 x i32], align 4
@.str.198 = private unnamed_addr constant [44 x i8] c"%qE attribute ignored for field of type %qT\00", align 1
@.str.199 = private unnamed_addr constant [22 x i8] c"%qE attribute ignored\00", align 1
@.str.200 = private unnamed_addr constant [49 x i8] c"%qE attribute have effect only on public objects\00", align 1
@.str.201 = private unnamed_addr constant [71 x i8] c"destructor priorities from 0 to %d are reserved for the implementation\00", align 1
@.str.202 = private unnamed_addr constant [72 x i8] c"constructor priorities from 0 to %d are reserved for the implementation\00", align 1
@.str.203 = private unnamed_addr constant [62 x i8] c"destructor priorities must be integers from 0 to %d inclusive\00", align 1
@.str.204 = private unnamed_addr constant [63 x i8] c"constructor priorities must be integers from 0 to %d inclusive\00", align 1
@.str.205 = private unnamed_addr constant [5 x i8] c"byte\00", align 1
@byte_mode = external local_unnamed_addr global i32, align 4
@.str.206 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@word_mode = external local_unnamed_addr global i32, align 4
@.str.207 = private unnamed_addr constant [8 x i8] c"pointer\00", align 1
@ptr_mode = external local_unnamed_addr global i32, align 4
@.str.208 = private unnamed_addr constant [18 x i8] c"libgcc_cmp_return\00", align 1
@targetm = external local_unnamed_addr global %struct.gcc_target, align 8
@.str.209 = private unnamed_addr constant [19 x i8] c"libgcc_shift_count\00", align 1
@.str.210 = private unnamed_addr constant [12 x i8] c"unwind_word\00", align 1
@mode_name = external local_unnamed_addr constant [87 x ptr], align 16
@.str.211 = private unnamed_addr constant [25 x i8] c"unknown machine mode %qE\00", align 1
@mode_class = external local_unnamed_addr constant [87 x i8], align 16
@mode_inner = external local_unnamed_addr constant [87 x i8], align 16
@.str.212 = private unnamed_addr constant [66 x i8] c"specifying vector types with __attribute__ ((mode)) is deprecated\00", align 1
@.str.213 = private unnamed_addr constant [42 x i8] c"use __attribute__ ((vector_size)) instead\00", align 1
@.str.214 = private unnamed_addr constant [22 x i8] c"unable to emulate %qs\00", align 1
@.str.215 = private unnamed_addr constant [25 x i8] c"invalid pointer mode %qs\00", align 1
@.str.216 = private unnamed_addr constant [50 x i8] c"signness of type and machine mode %qs don't match\00", align 1
@lang_hooks = external local_unnamed_addr global %struct.lang_hooks, align 8
@.str.217 = private unnamed_addr constant [26 x i8] c"no data type for mode %qs\00", align 1
@.str.218 = private unnamed_addr constant [39 x i8] c"cannot use mode %qs for enumeral types\00", align 1
@.str.219 = private unnamed_addr constant [39 x i8] c"mode %qs applied to inappropriate type\00", align 1
@user_defined_section_attribute = external local_unnamed_addr global i8, align 1
@current_function_decl = external local_unnamed_addr global ptr, align 8
@.str.220 = private unnamed_addr constant [58 x i8] c"section attribute cannot be specified for local variables\00", align 1
@.str.221 = private unnamed_addr constant [52 x i8] c"section of %q+D conflicts with previous declaration\00", align 1
@.str.222 = private unnamed_addr constant [37 x i8] c"section of %q+D cannot be overridden\00", align 1
@.str.223 = private unnamed_addr constant [39 x i8] c"section attribute not allowed for %q+D\00", align 1
@.str.224 = private unnamed_addr constant [53 x i8] c"section attributes are not supported for this target\00", align 1
@.str.225 = private unnamed_addr constant [38 x i8] c"requested alignment is not a constant\00", align 1
@.str.226 = private unnamed_addr constant [40 x i8] c"requested alignment is not a power of 2\00", align 1
@.str.227 = private unnamed_addr constant [33 x i8] c"requested alignment is too large\00", align 1
@global_trees = external local_unnamed_addr global [131 x ptr], align 16
@.str.228 = private unnamed_addr constant [40 x i8] c"alignment may not be specified for %q+D\00", align 1
@.str.229 = private unnamed_addr constant [75 x i8] c"alignment for %q+D was previously specified as %d and may not be decreased\00", align 1
@.str.230 = private unnamed_addr constant [39 x i8] c"alignment for %q+D must be at least %d\00", align 1
@.str.231 = private unnamed_addr constant [45 x i8] c"inline function %q+D cannot be declared weak\00", align 1
@.str.232 = private unnamed_addr constant [43 x i8] c"%q+D defined both normally and as an alias\00", align 1
@.str.233 = private unnamed_addr constant [28 x i8] c"alias argument not a string\00", align 1
@.str.234 = private unnamed_addr constant [53 x i8] c"weakref attribute must appear before alias attribute\00", align 1
@.str.235 = private unnamed_addr constant [40 x i8] c"%qE attribute applies only to functions\00", align 1
@.str.236 = private unnamed_addr constant [42 x i8] c"can%'t set %qE attribute after definition\00", align 1
@.str.237 = private unnamed_addr constant [11 x i8] c"c-common.c\00", align 1
@.str.238 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.239 = private unnamed_addr constant [35 x i8] c"deprecated message is not a string\00", align 1
@.str.240 = private unnamed_addr constant [30 x i8] c"%qE attribute ignored for %qE\00", align 1
@.str.241 = private unnamed_addr constant [38 x i8] c"invalid vector type for attribute %qE\00", align 1
@.str.242 = private unnamed_addr constant [55 x i8] c"vector size not an integral multiple of component size\00", align 1
@.str.243 = private unnamed_addr constant [17 x i8] c"zero vector size\00", align 1
@.str.244 = private unnamed_addr constant [54 x i8] c"number of components of the vector not a power of two\00", align 1
@.str.245 = private unnamed_addr constant [41 x i8] c"%qE attribute ignored on non-class types\00", align 1
@.str.246 = private unnamed_addr constant [53 x i8] c"%qE attribute ignored because %qT is already defined\00", align 1
@.str.247 = private unnamed_addr constant [33 x i8] c"visibility argument not a string\00", align 1
@.str.248 = private unnamed_addr constant [31 x i8] c"%qE attribute ignored on types\00", align 1
@.str.249 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.250 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.251 = private unnamed_addr constant [82 x i8] c"visibility argument must be one of \22default\22, \22hidden\22, \22protected\22 or \22internal\22\00", align 1
@.str.252 = private unnamed_addr constant [41 x i8] c"%qD redeclared with different visibility\00", align 1
@.str.253 = private unnamed_addr constant [32 x i8] c"tls_model argument not a string\00", align 1
@.str.254 = private unnamed_addr constant [11 x i8] c"local-exec\00", align 1
@.str.255 = private unnamed_addr constant [13 x i8] c"initial-exec\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"local-dynamic\00", align 1
@optimize = external local_unnamed_addr global i32, align 4
@.str.257 = private unnamed_addr constant [15 x i8] c"global-dynamic\00", align 1
@.str.258 = private unnamed_addr constant [100 x i8] c"tls_model argument must be one of \22local-exec\22, \22initial-exec\22, \22local-dynamic\22 or \22global-dynamic\22\00", align 1
@.str.259 = private unnamed_addr constant [55 x i8] c"nonnull attribute without arguments on a non-prototype\00", align 1
@.str.260 = private unnamed_addr constant [59 x i8] c"nonnull argument has invalid operand number (argument %lu)\00", align 1
@.str.261 = private unnamed_addr constant [78 x i8] c"nonnull argument with out-of-range operand number (argument %lu, operand %lu)\00", align 1
@.str.262 = private unnamed_addr constant [76 x i8] c"nonnull argument references non-pointer operand (argument %lu, operand %lu)\00", align 1
@.str.263 = private unnamed_addr constant [35 x i8] c"cleanup argument not an identifier\00", align 1
@.str.264 = private unnamed_addr constant [32 x i8] c"cleanup argument not a function\00", align 1
@.str.265 = private unnamed_addr constant [55 x i8] c"%qE attribute requires prototypes with named arguments\00", align 1
@.str.266 = private unnamed_addr constant [49 x i8] c"%qE attribute only applies to variadic functions\00", align 1
@.str.267 = private unnamed_addr constant [46 x i8] c"requested position is not an integer constant\00", align 1
@.str.268 = private unnamed_addr constant [37 x i8] c"requested position is less than zero\00", align 1
@.str.269 = private unnamed_addr constant [35 x i8] c"alloc_size parameter outside range\00", align 1
@.str.270 = private unnamed_addr constant [42 x i8] c"%qE attribute conflicts with attribute %s\00", align 1
@c_common_format_attribute_table = dso_local local_unnamed_addr constant [3 x %struct.attribute_spec] [%struct.attribute_spec { ptr @.str.271, i32 3, i32 3, i8 0, i8 1, i8 1, ptr @handle_format_attribute }, %struct.attribute_spec { ptr @.str.272, i32 1, i32 1, i8 0, i8 1, i8 1, ptr @handle_format_arg_attribute }, %struct.attribute_spec zeroinitializer], align 16
@.str.271 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.272 = private unnamed_addr constant [11 x i8] c"format_arg\00", align 1
@.str.273 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.274 = private unnamed_addr constant [10 x i8] c"top level\00", align 1
@.str.275 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@input_location = external local_unnamed_addr global i32, align 4
@.str.276 = private unnamed_addr constant [45 x i8] c"%qD is not defined outside of function scope\00", align 1
@integer_types = external local_unnamed_addr global [11 x ptr], align 16
@warn_overlength_strings = external local_unnamed_addr global i32, align 4
@.str.277 = private unnamed_addr constant [91 x i8] c"string length %qd is greater than the length %qd ISO C%d compilers are required to support\00", align 1
@c_language = external local_unnamed_addr global i32, align 4
@warn_write_strings = external local_unnamed_addr global i32, align 4
@warn_overflow = external local_unnamed_addr global i32, align 4
@pedantic = external local_unnamed_addr global i32, align 4
@.str.278 = private unnamed_addr constant [32 x i8] c"overflow in constant expression\00", align 1
@.str.279 = private unnamed_addr constant [31 x i8] c"integer overflow in expression\00", align 1
@.str.280 = private unnamed_addr constant [38 x i8] c"floating point overflow in expression\00", align 1
@.str.281 = private unnamed_addr constant [35 x i8] c"fixed-point overflow in expression\00", align 1
@.str.282 = private unnamed_addr constant [30 x i8] c"vector overflow in expression\00", align 1
@.str.283 = private unnamed_addr constant [39 x i8] c"complex integer overflow in expression\00", align 1
@.str.284 = private unnamed_addr constant [46 x i8] c"complex floating point overflow in expression\00", align 1
@.str.285 = private unnamed_addr constant [47 x i8] c"logical %<or%> applied to non-boolean constant\00", align 1
@.str.286 = private unnamed_addr constant [48 x i8] c"logical %<and%> applied to non-boolean constant\00", align 1
@.str.287 = private unnamed_addr constant [63 x i8] c"logical %<or%> of collectively exhaustive tests is always true\00", align 1
@.str.288 = private unnamed_addr constant [60 x i8] c"logical %<and%> of mutually exclusive tests is always false\00", align 1
@flag_strict_aliasing = external local_unnamed_addr global i32, align 4
@warn_strict_aliasing = external local_unnamed_addr global i32, align 4
@.str.289 = private unnamed_addr constant [66 x i8] c"type-punning to incomplete type might break strict-aliasing rules\00", align 1
@.str.290 = private unnamed_addr constant [67 x i8] c"dereferencing type-punned pointer will break strict-aliasing rules\00", align 1
@.str.291 = private unnamed_addr constant [68 x i8] c"dereferencing type-punned pointer might break strict-aliasing rules\00", align 1
@.str.292 = private unnamed_addr constant [41 x i8] c"first argument of %q+D should be %<int%>\00", align 1
@.str.293 = private unnamed_addr constant [46 x i8] c"second argument of %q+D should be %<char **%>\00", align 1
@.str.294 = private unnamed_addr constant [54 x i8] c"third argument of %q+D should probably be %<char **%>\00", align 1
@.str.295 = private unnamed_addr constant [38 x i8] c"%q+D takes only zero or two arguments\00", align 1
@vector_types_convertible_p.emitted_lax_note = internal unnamed_addr global i1 false, align 1
@.str.296 = private unnamed_addr constant [119 x i8] c"use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts\00", align 1
@.str.297 = private unnamed_addr constant [52 x i8] c"large integer implicitly truncated to unsigned type\00", align 1
@.str.298 = private unnamed_addr constant [41 x i8] c"overflow in implicit constant conversion\00", align 1
@warn_conversion = external local_unnamed_addr global i32, align 4
@warn_sign_conversion = external local_unnamed_addr global i32, align 4
@.str.299 = private unnamed_addr constant [42 x i8] c"conversion to %qT from boolean expression\00", align 1
@.str.300 = private unnamed_addr constant [55 x i8] c"negative integer implicitly converted to unsigned type\00", align 1
@.str.301 = private unnamed_addr constant [58 x i8] c"conversion of unsigned constant value to negative integer\00", align 1
@.str.302 = private unnamed_addr constant [44 x i8] c"conversion to %qT alters %qT constant value\00", align 1
@.str.303 = private unnamed_addr constant [61 x i8] c"conversion to %qT from %qT may change the sign of the result\00", align 1
@.str.304 = private unnamed_addr constant [47 x i8] c"conversion to %qT from %qT may alter its value\00", align 1
@tree_code_length = external local_unnamed_addr constant [0 x i8], align 1
@warned_ids = internal unnamed_addr global ptr null, align 8
@save_expr_cache = internal unnamed_addr global ptr null, align 8
@tlist_firstobj = internal unnamed_addr global ptr null, align 8
@tlist_obstack = internal global %struct.obstack zeroinitializer, align 8
@.str.305 = private unnamed_addr constant [34 x i8] c"operation on %qE may be undefined\00", align 1
@mode_ibit = external local_unnamed_addr constant [87 x i8], align 16
@mode_fbit = external local_unnamed_addr constant [87 x i8], align 16
@mode_wider = external local_unnamed_addr constant [87 x i8], align 16
@.str.306 = private unnamed_addr constant [127 x i8] c"GCC cannot support operators with integer types and fixed-point types that have too many integral and fractional bits together\00", align 1
@mode_precision = external local_unnamed_addr constant [87 x i16], align 16
@registered_builtin_types = internal global ptr null, align 8
@.str.307 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.308 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.309 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.310 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.311 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.312 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.313 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.314 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.315 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.316 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.317 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.318 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.319 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.320 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.321 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.322 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.323 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.324 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.325 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.326 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.327 = private unnamed_addr constant [49 x i8] c"invalid operands to binary %s (have %qT and %qT)\00", align 1
@.str.328 = private unnamed_addr constant [61 x i8] c"comparison is always false due to limited range of data type\00", align 1
@.str.329 = private unnamed_addr constant [60 x i8] c"comparison is always true due to limited range of data type\00", align 1
@warn_type_limits = external local_unnamed_addr global i32, align 4
@.str.330 = private unnamed_addr constant [54 x i8] c"comparison of unsigned expression >= 0 is always true\00", align 1
@.str.331 = private unnamed_addr constant [54 x i8] c"comparison of unsigned expression < 0 is always false\00", align 1
@.str.332 = private unnamed_addr constant [46 x i8] c"pointer of type %<void *%> used in arithmetic\00", align 1
@.str.333 = private unnamed_addr constant [41 x i8] c"pointer to a function used in arithmetic\00", align 1
@.str.334 = private unnamed_addr constant [46 x i8] c"pointer to member function used in arithmetic\00", align 1
@sizetype_tab = external local_unnamed_addr global [4 x ptr], align 16
@dconst0 = external global %struct.real_value, align 8
@fconst0 = external global [18 x %struct.fixed_value], align 16
@.str.335 = private unnamed_addr constant [52 x i8] c"the address of %qD will always evaluate as %<true%>\00", align 1
@warn_parentheses = external local_unnamed_addr global i32, align 4
@.str.336 = private unnamed_addr constant [58 x i8] c"suggest parentheses around assignment used as truth value\00", align 1
@.str.337 = private unnamed_addr constant [28 x i8] c"invalid use of %<restrict%>\00", align 1
@num_in_fnames = external local_unnamed_addr global i32, align 4
@type_hash_table = internal global ptr null, align 8
@warn_pointer_arith = external local_unnamed_addr global i32, align 4
@.str.338 = private unnamed_addr constant [53 x i8] c"invalid application of %<sizeof%> to a function type\00", align 1
@.str.339 = private unnamed_addr constant [42 x i8] c"invalid application of %qs to a void type\00", align 1
@.str.340 = private unnamed_addr constant [51 x i8] c"invalid application of %qs to incomplete type %qT \00", align 1
@.str.341 = private unnamed_addr constant [37 x i8] c"%<__alignof%> applied to a bit-field\00", align 1
@.str.342 = private unnamed_addr constant [9 x i8] c"long int\00", align 1
@.str.343 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"long unsigned int\00", align 1
@.str.345 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.346 = private unnamed_addr constant [14 x i8] c"long long int\00", align 1
@.str.347 = private unnamed_addr constant [23 x i8] c"long long unsigned int\00", align 1
@.str.348 = private unnamed_addr constant [19 x i8] c"long long unsigned\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"short int\00", align 1
@.str.350 = private unnamed_addr constant [19 x i8] c"short unsigned int\00", align 1
@.str.351 = private unnamed_addr constant [15 x i8] c"unsigned short\00", align 1
@.str.352 = private unnamed_addr constant [12 x i8] c"signed char\00", align 1
@.str.353 = private unnamed_addr constant [14 x i8] c"unsigned char\00", align 1
@.str.354 = private unnamed_addr constant [11 x i8] c"__int128_t\00", align 1
@.str.355 = private unnamed_addr constant [12 x i8] c"__uint128_t\00", align 1
@.str.356 = private unnamed_addr constant [12 x i8] c"long double\00", align 1
@.str.357 = private unnamed_addr constant [13 x i8] c"short _Fract\00", align 1
@.str.358 = private unnamed_addr constant [12 x i8] c"long _Fract\00", align 1
@.str.359 = private unnamed_addr constant [17 x i8] c"long long _Fract\00", align 1
@.str.360 = private unnamed_addr constant [22 x i8] c"unsigned short _Fract\00", align 1
@.str.361 = private unnamed_addr constant [16 x i8] c"unsigned _Fract\00", align 1
@.str.362 = private unnamed_addr constant [21 x i8] c"unsigned long _Fract\00", align 1
@.str.363 = private unnamed_addr constant [26 x i8] c"unsigned long long _Fract\00", align 1
@.str.364 = private unnamed_addr constant [18 x i8] c"_Sat short _Fract\00", align 1
@.str.365 = private unnamed_addr constant [12 x i8] c"_Sat _Fract\00", align 1
@.str.366 = private unnamed_addr constant [17 x i8] c"_Sat long _Fract\00", align 1
@.str.367 = private unnamed_addr constant [22 x i8] c"_Sat long long _Fract\00", align 1
@.str.368 = private unnamed_addr constant [27 x i8] c"_Sat unsigned short _Fract\00", align 1
@.str.369 = private unnamed_addr constant [21 x i8] c"_Sat unsigned _Fract\00", align 1
@.str.370 = private unnamed_addr constant [26 x i8] c"_Sat unsigned long _Fract\00", align 1
@.str.371 = private unnamed_addr constant [31 x i8] c"_Sat unsigned long long _Fract\00", align 1
@.str.372 = private unnamed_addr constant [13 x i8] c"short _Accum\00", align 1
@.str.373 = private unnamed_addr constant [12 x i8] c"long _Accum\00", align 1
@.str.374 = private unnamed_addr constant [17 x i8] c"long long _Accum\00", align 1
@.str.375 = private unnamed_addr constant [22 x i8] c"unsigned short _Accum\00", align 1
@.str.376 = private unnamed_addr constant [16 x i8] c"unsigned _Accum\00", align 1
@.str.377 = private unnamed_addr constant [21 x i8] c"unsigned long _Accum\00", align 1
@.str.378 = private unnamed_addr constant [26 x i8] c"unsigned long long _Accum\00", align 1
@.str.379 = private unnamed_addr constant [18 x i8] c"_Sat short _Accum\00", align 1
@.str.380 = private unnamed_addr constant [12 x i8] c"_Sat _Accum\00", align 1
@.str.381 = private unnamed_addr constant [17 x i8] c"_Sat long _Accum\00", align 1
@.str.382 = private unnamed_addr constant [22 x i8] c"_Sat long long _Accum\00", align 1
@.str.383 = private unnamed_addr constant [27 x i8] c"_Sat unsigned short _Accum\00", align 1
@.str.384 = private unnamed_addr constant [21 x i8] c"_Sat unsigned _Accum\00", align 1
@.str.385 = private unnamed_addr constant [26 x i8] c"_Sat unsigned long _Accum\00", align 1
@.str.386 = private unnamed_addr constant [31 x i8] c"_Sat unsigned long long _Accum\00", align 1
@.str.387 = private unnamed_addr constant [12 x i8] c"complex int\00", align 1
@.str.388 = private unnamed_addr constant [14 x i8] c"complex float\00", align 1
@.str.389 = private unnamed_addr constant [15 x i8] c"complex double\00", align 1
@.str.390 = private unnamed_addr constant [20 x i8] c"complex long double\00", align 1
@.str.391 = private unnamed_addr constant [18 x i8] c"__builtin_va_list\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@builtin_types = internal unnamed_addr global [252 x ptr] zeroinitializer, align 32
@.str.393 = private unnamed_addr constant [15 x i8] c"__builtin_acos\00", align 1
@built_in_attributes = internal global [107 x ptr] zeroinitializer, align 16
@flag_errno_math = external local_unnamed_addr global i32, align 4
@flag_rounding_math = external local_unnamed_addr global i32, align 4
@.str.394 = private unnamed_addr constant [16 x i8] c"__builtin_acosf\00", align 1
@linux_uclibc = external local_unnamed_addr global i32, align 4
@.str.395 = private unnamed_addr constant [16 x i8] c"__builtin_acosh\00", align 1
@.str.396 = private unnamed_addr constant [17 x i8] c"__builtin_acoshf\00", align 1
@.str.397 = private unnamed_addr constant [17 x i8] c"__builtin_acoshl\00", align 1
@.str.398 = private unnamed_addr constant [16 x i8] c"__builtin_acosl\00", align 1
@.str.399 = private unnamed_addr constant [15 x i8] c"__builtin_asin\00", align 1
@.str.400 = private unnamed_addr constant [16 x i8] c"__builtin_asinf\00", align 1
@.str.401 = private unnamed_addr constant [16 x i8] c"__builtin_asinh\00", align 1
@.str.402 = private unnamed_addr constant [17 x i8] c"__builtin_asinhf\00", align 1
@.str.403 = private unnamed_addr constant [17 x i8] c"__builtin_asinhl\00", align 1
@.str.404 = private unnamed_addr constant [16 x i8] c"__builtin_asinl\00", align 1
@.str.405 = private unnamed_addr constant [15 x i8] c"__builtin_atan\00", align 1
@.str.406 = private unnamed_addr constant [16 x i8] c"__builtin_atan2\00", align 1
@.str.407 = private unnamed_addr constant [17 x i8] c"__builtin_atan2f\00", align 1
@.str.408 = private unnamed_addr constant [17 x i8] c"__builtin_atan2l\00", align 1
@.str.409 = private unnamed_addr constant [16 x i8] c"__builtin_atanf\00", align 1
@.str.410 = private unnamed_addr constant [16 x i8] c"__builtin_atanh\00", align 1
@.str.411 = private unnamed_addr constant [17 x i8] c"__builtin_atanhf\00", align 1
@.str.412 = private unnamed_addr constant [17 x i8] c"__builtin_atanhl\00", align 1
@.str.413 = private unnamed_addr constant [16 x i8] c"__builtin_atanl\00", align 1
@.str.414 = private unnamed_addr constant [15 x i8] c"__builtin_cbrt\00", align 1
@.str.415 = private unnamed_addr constant [16 x i8] c"__builtin_cbrtf\00", align 1
@.str.416 = private unnamed_addr constant [16 x i8] c"__builtin_cbrtl\00", align 1
@.str.417 = private unnamed_addr constant [15 x i8] c"__builtin_ceil\00", align 1
@.str.418 = private unnamed_addr constant [16 x i8] c"__builtin_ceilf\00", align 1
@.str.419 = private unnamed_addr constant [16 x i8] c"__builtin_ceill\00", align 1
@.str.420 = private unnamed_addr constant [19 x i8] c"__builtin_copysign\00", align 1
@.str.421 = private unnamed_addr constant [20 x i8] c"__builtin_copysignf\00", align 1
@.str.422 = private unnamed_addr constant [20 x i8] c"__builtin_copysignl\00", align 1
@.str.423 = private unnamed_addr constant [14 x i8] c"__builtin_cos\00", align 1
@.str.424 = private unnamed_addr constant [15 x i8] c"__builtin_cosf\00", align 1
@.str.425 = private unnamed_addr constant [15 x i8] c"__builtin_cosh\00", align 1
@.str.426 = private unnamed_addr constant [16 x i8] c"__builtin_coshf\00", align 1
@.str.427 = private unnamed_addr constant [16 x i8] c"__builtin_coshl\00", align 1
@.str.428 = private unnamed_addr constant [15 x i8] c"__builtin_cosl\00", align 1
@.str.429 = private unnamed_addr constant [15 x i8] c"__builtin_drem\00", align 1
@.str.430 = private unnamed_addr constant [16 x i8] c"__builtin_dremf\00", align 1
@.str.431 = private unnamed_addr constant [16 x i8] c"__builtin_dreml\00", align 1
@.str.432 = private unnamed_addr constant [14 x i8] c"__builtin_erf\00", align 1
@.str.433 = private unnamed_addr constant [15 x i8] c"__builtin_erfc\00", align 1
@.str.434 = private unnamed_addr constant [16 x i8] c"__builtin_erfcf\00", align 1
@.str.435 = private unnamed_addr constant [16 x i8] c"__builtin_erfcl\00", align 1
@.str.436 = private unnamed_addr constant [15 x i8] c"__builtin_erff\00", align 1
@.str.437 = private unnamed_addr constant [15 x i8] c"__builtin_erfl\00", align 1
@.str.438 = private unnamed_addr constant [14 x i8] c"__builtin_exp\00", align 1
@.str.439 = private unnamed_addr constant [16 x i8] c"__builtin_exp10\00", align 1
@.str.440 = private unnamed_addr constant [17 x i8] c"__builtin_exp10f\00", align 1
@.str.441 = private unnamed_addr constant [17 x i8] c"__builtin_exp10l\00", align 1
@.str.442 = private unnamed_addr constant [15 x i8] c"__builtin_exp2\00", align 1
@.str.443 = private unnamed_addr constant [16 x i8] c"__builtin_exp2f\00", align 1
@.str.444 = private unnamed_addr constant [16 x i8] c"__builtin_exp2l\00", align 1
@.str.445 = private unnamed_addr constant [15 x i8] c"__builtin_expf\00", align 1
@.str.446 = private unnamed_addr constant [15 x i8] c"__builtin_expl\00", align 1
@.str.447 = private unnamed_addr constant [16 x i8] c"__builtin_expm1\00", align 1
@.str.448 = private unnamed_addr constant [17 x i8] c"__builtin_expm1f\00", align 1
@.str.449 = private unnamed_addr constant [17 x i8] c"__builtin_expm1l\00", align 1
@.str.450 = private unnamed_addr constant [15 x i8] c"__builtin_fabs\00", align 1
@.str.451 = private unnamed_addr constant [16 x i8] c"__builtin_fabsf\00", align 1
@.str.452 = private unnamed_addr constant [16 x i8] c"__builtin_fabsl\00", align 1
@.str.453 = private unnamed_addr constant [15 x i8] c"__builtin_fdim\00", align 1
@.str.454 = private unnamed_addr constant [16 x i8] c"__builtin_fdimf\00", align 1
@.str.455 = private unnamed_addr constant [16 x i8] c"__builtin_fdiml\00", align 1
@.str.456 = private unnamed_addr constant [16 x i8] c"__builtin_floor\00", align 1
@.str.457 = private unnamed_addr constant [17 x i8] c"__builtin_floorf\00", align 1
@.str.458 = private unnamed_addr constant [17 x i8] c"__builtin_floorl\00", align 1
@.str.459 = private unnamed_addr constant [14 x i8] c"__builtin_fma\00", align 1
@.str.460 = private unnamed_addr constant [15 x i8] c"__builtin_fmaf\00", align 1
@.str.461 = private unnamed_addr constant [15 x i8] c"__builtin_fmal\00", align 1
@.str.462 = private unnamed_addr constant [15 x i8] c"__builtin_fmax\00", align 1
@.str.463 = private unnamed_addr constant [16 x i8] c"__builtin_fmaxf\00", align 1
@.str.464 = private unnamed_addr constant [16 x i8] c"__builtin_fmaxl\00", align 1
@.str.465 = private unnamed_addr constant [15 x i8] c"__builtin_fmin\00", align 1
@.str.466 = private unnamed_addr constant [16 x i8] c"__builtin_fminf\00", align 1
@.str.467 = private unnamed_addr constant [16 x i8] c"__builtin_fminl\00", align 1
@.str.468 = private unnamed_addr constant [15 x i8] c"__builtin_fmod\00", align 1
@.str.469 = private unnamed_addr constant [16 x i8] c"__builtin_fmodf\00", align 1
@.str.470 = private unnamed_addr constant [16 x i8] c"__builtin_fmodl\00", align 1
@.str.471 = private unnamed_addr constant [16 x i8] c"__builtin_frexp\00", align 1
@.str.472 = private unnamed_addr constant [17 x i8] c"__builtin_frexpf\00", align 1
@.str.473 = private unnamed_addr constant [17 x i8] c"__builtin_frexpl\00", align 1
@.str.474 = private unnamed_addr constant [16 x i8] c"__builtin_gamma\00", align 1
@.str.475 = private unnamed_addr constant [17 x i8] c"__builtin_gammaf\00", align 1
@.str.476 = private unnamed_addr constant [17 x i8] c"__builtin_gammal\00", align 1
@.str.477 = private unnamed_addr constant [18 x i8] c"__builtin_gamma_r\00", align 1
@.str.478 = private unnamed_addr constant [19 x i8] c"__builtin_gammaf_r\00", align 1
@.str.479 = private unnamed_addr constant [19 x i8] c"__builtin_gammal_r\00", align 1
@.str.480 = private unnamed_addr constant [19 x i8] c"__builtin_huge_val\00", align 1
@.str.481 = private unnamed_addr constant [20 x i8] c"__builtin_huge_valf\00", align 1
@.str.482 = private unnamed_addr constant [20 x i8] c"__builtin_huge_vall\00", align 1
@.str.483 = private unnamed_addr constant [16 x i8] c"__builtin_hypot\00", align 1
@.str.484 = private unnamed_addr constant [17 x i8] c"__builtin_hypotf\00", align 1
@.str.485 = private unnamed_addr constant [17 x i8] c"__builtin_hypotl\00", align 1
@.str.486 = private unnamed_addr constant [16 x i8] c"__builtin_ilogb\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"__builtin_ilogbf\00", align 1
@.str.488 = private unnamed_addr constant [17 x i8] c"__builtin_ilogbl\00", align 1
@.str.489 = private unnamed_addr constant [14 x i8] c"__builtin_inf\00", align 1
@.str.490 = private unnamed_addr constant [15 x i8] c"__builtin_inff\00", align 1
@.str.491 = private unnamed_addr constant [15 x i8] c"__builtin_infl\00", align 1
@.str.492 = private unnamed_addr constant [17 x i8] c"__builtin_infd32\00", align 1
@.str.493 = private unnamed_addr constant [17 x i8] c"__builtin_infd64\00", align 1
@.str.494 = private unnamed_addr constant [18 x i8] c"__builtin_infd128\00", align 1
@.str.495 = private unnamed_addr constant [13 x i8] c"__builtin_j0\00", align 1
@.str.496 = private unnamed_addr constant [14 x i8] c"__builtin_j0f\00", align 1
@.str.497 = private unnamed_addr constant [14 x i8] c"__builtin_j0l\00", align 1
@.str.498 = private unnamed_addr constant [13 x i8] c"__builtin_j1\00", align 1
@.str.499 = private unnamed_addr constant [14 x i8] c"__builtin_j1f\00", align 1
@.str.500 = private unnamed_addr constant [14 x i8] c"__builtin_j1l\00", align 1
@.str.501 = private unnamed_addr constant [13 x i8] c"__builtin_jn\00", align 1
@.str.502 = private unnamed_addr constant [14 x i8] c"__builtin_jnf\00", align 1
@.str.503 = private unnamed_addr constant [14 x i8] c"__builtin_jnl\00", align 1
@.str.504 = private unnamed_addr constant [16 x i8] c"__builtin_lceil\00", align 1
@.str.505 = private unnamed_addr constant [17 x i8] c"__builtin_lceilf\00", align 1
@.str.506 = private unnamed_addr constant [17 x i8] c"__builtin_lceill\00", align 1
@.str.507 = private unnamed_addr constant [16 x i8] c"__builtin_ldexp\00", align 1
@.str.508 = private unnamed_addr constant [17 x i8] c"__builtin_ldexpf\00", align 1
@.str.509 = private unnamed_addr constant [17 x i8] c"__builtin_ldexpl\00", align 1
@.str.510 = private unnamed_addr constant [17 x i8] c"__builtin_lfloor\00", align 1
@.str.511 = private unnamed_addr constant [18 x i8] c"__builtin_lfloorf\00", align 1
@.str.512 = private unnamed_addr constant [18 x i8] c"__builtin_lfloorl\00", align 1
@.str.513 = private unnamed_addr constant [17 x i8] c"__builtin_lgamma\00", align 1
@.str.514 = private unnamed_addr constant [18 x i8] c"__builtin_lgammaf\00", align 1
@.str.515 = private unnamed_addr constant [18 x i8] c"__builtin_lgammal\00", align 1
@.str.516 = private unnamed_addr constant [19 x i8] c"__builtin_lgamma_r\00", align 1
@.str.517 = private unnamed_addr constant [20 x i8] c"__builtin_lgammaf_r\00", align 1
@.str.518 = private unnamed_addr constant [20 x i8] c"__builtin_lgammal_r\00", align 1
@.str.519 = private unnamed_addr constant [17 x i8] c"__builtin_llceil\00", align 1
@.str.520 = private unnamed_addr constant [18 x i8] c"__builtin_llceilf\00", align 1
@.str.521 = private unnamed_addr constant [18 x i8] c"__builtin_llceill\00", align 1
@.str.522 = private unnamed_addr constant [18 x i8] c"__builtin_llfloor\00", align 1
@.str.523 = private unnamed_addr constant [19 x i8] c"__builtin_llfloorf\00", align 1
@.str.524 = private unnamed_addr constant [19 x i8] c"__builtin_llfloorl\00", align 1
@.str.525 = private unnamed_addr constant [17 x i8] c"__builtin_llrint\00", align 1
@.str.526 = private unnamed_addr constant [18 x i8] c"__builtin_llrintf\00", align 1
@.str.527 = private unnamed_addr constant [18 x i8] c"__builtin_llrintl\00", align 1
@.str.528 = private unnamed_addr constant [18 x i8] c"__builtin_llround\00", align 1
@.str.529 = private unnamed_addr constant [19 x i8] c"__builtin_llroundf\00", align 1
@.str.530 = private unnamed_addr constant [19 x i8] c"__builtin_llroundl\00", align 1
@.str.531 = private unnamed_addr constant [14 x i8] c"__builtin_log\00", align 1
@.str.532 = private unnamed_addr constant [16 x i8] c"__builtin_log10\00", align 1
@.str.533 = private unnamed_addr constant [17 x i8] c"__builtin_log10f\00", align 1
@.str.534 = private unnamed_addr constant [17 x i8] c"__builtin_log10l\00", align 1
@.str.535 = private unnamed_addr constant [16 x i8] c"__builtin_log1p\00", align 1
@.str.536 = private unnamed_addr constant [17 x i8] c"__builtin_log1pf\00", align 1
@.str.537 = private unnamed_addr constant [17 x i8] c"__builtin_log1pl\00", align 1
@.str.538 = private unnamed_addr constant [15 x i8] c"__builtin_log2\00", align 1
@.str.539 = private unnamed_addr constant [16 x i8] c"__builtin_log2f\00", align 1
@.str.540 = private unnamed_addr constant [16 x i8] c"__builtin_log2l\00", align 1
@.str.541 = private unnamed_addr constant [15 x i8] c"__builtin_logb\00", align 1
@.str.542 = private unnamed_addr constant [16 x i8] c"__builtin_logbf\00", align 1
@.str.543 = private unnamed_addr constant [16 x i8] c"__builtin_logbl\00", align 1
@.str.544 = private unnamed_addr constant [15 x i8] c"__builtin_logf\00", align 1
@.str.545 = private unnamed_addr constant [15 x i8] c"__builtin_logl\00", align 1
@.str.546 = private unnamed_addr constant [16 x i8] c"__builtin_lrint\00", align 1
@.str.547 = private unnamed_addr constant [17 x i8] c"__builtin_lrintf\00", align 1
@.str.548 = private unnamed_addr constant [17 x i8] c"__builtin_lrintl\00", align 1
@.str.549 = private unnamed_addr constant [17 x i8] c"__builtin_lround\00", align 1
@.str.550 = private unnamed_addr constant [18 x i8] c"__builtin_lroundf\00", align 1
@.str.551 = private unnamed_addr constant [18 x i8] c"__builtin_lroundl\00", align 1
@.str.552 = private unnamed_addr constant [15 x i8] c"__builtin_modf\00", align 1
@.str.553 = private unnamed_addr constant [16 x i8] c"__builtin_modff\00", align 1
@.str.554 = private unnamed_addr constant [16 x i8] c"__builtin_modfl\00", align 1
@.str.555 = private unnamed_addr constant [14 x i8] c"__builtin_nan\00", align 1
@.str.556 = private unnamed_addr constant [15 x i8] c"__builtin_nanf\00", align 1
@.str.557 = private unnamed_addr constant [15 x i8] c"__builtin_nanl\00", align 1
@.str.558 = private unnamed_addr constant [17 x i8] c"__builtin_nand32\00", align 1
@.str.559 = private unnamed_addr constant [17 x i8] c"__builtin_nand64\00", align 1
@.str.560 = private unnamed_addr constant [18 x i8] c"__builtin_nand128\00", align 1
@.str.561 = private unnamed_addr constant [15 x i8] c"__builtin_nans\00", align 1
@.str.562 = private unnamed_addr constant [16 x i8] c"__builtin_nansf\00", align 1
@.str.563 = private unnamed_addr constant [16 x i8] c"__builtin_nansl\00", align 1
@.str.564 = private unnamed_addr constant [20 x i8] c"__builtin_nearbyint\00", align 1
@.str.565 = private unnamed_addr constant [21 x i8] c"__builtin_nearbyintf\00", align 1
@.str.566 = private unnamed_addr constant [21 x i8] c"__builtin_nearbyintl\00", align 1
@.str.567 = private unnamed_addr constant [20 x i8] c"__builtin_nextafter\00", align 1
@.str.568 = private unnamed_addr constant [21 x i8] c"__builtin_nextafterf\00", align 1
@.str.569 = private unnamed_addr constant [21 x i8] c"__builtin_nextafterl\00", align 1
@.str.570 = private unnamed_addr constant [21 x i8] c"__builtin_nexttoward\00", align 1
@.str.571 = private unnamed_addr constant [22 x i8] c"__builtin_nexttowardf\00", align 1
@.str.572 = private unnamed_addr constant [22 x i8] c"__builtin_nexttowardl\00", align 1
@.str.573 = private unnamed_addr constant [14 x i8] c"__builtin_pow\00", align 1
@.str.574 = private unnamed_addr constant [16 x i8] c"__builtin_pow10\00", align 1
@.str.575 = private unnamed_addr constant [17 x i8] c"__builtin_pow10f\00", align 1
@.str.576 = private unnamed_addr constant [17 x i8] c"__builtin_pow10l\00", align 1
@.str.577 = private unnamed_addr constant [15 x i8] c"__builtin_powf\00", align 1
@.str.578 = private unnamed_addr constant [15 x i8] c"__builtin_powi\00", align 1
@.str.579 = private unnamed_addr constant [16 x i8] c"__builtin_powif\00", align 1
@.str.580 = private unnamed_addr constant [16 x i8] c"__builtin_powil\00", align 1
@.str.581 = private unnamed_addr constant [15 x i8] c"__builtin_powl\00", align 1
@.str.582 = private unnamed_addr constant [20 x i8] c"__builtin_remainder\00", align 1
@.str.583 = private unnamed_addr constant [21 x i8] c"__builtin_remainderf\00", align 1
@.str.584 = private unnamed_addr constant [21 x i8] c"__builtin_remainderl\00", align 1
@.str.585 = private unnamed_addr constant [17 x i8] c"__builtin_remquo\00", align 1
@.str.586 = private unnamed_addr constant [18 x i8] c"__builtin_remquof\00", align 1
@.str.587 = private unnamed_addr constant [18 x i8] c"__builtin_remquol\00", align 1
@.str.588 = private unnamed_addr constant [15 x i8] c"__builtin_rint\00", align 1
@.str.589 = private unnamed_addr constant [16 x i8] c"__builtin_rintf\00", align 1
@.str.590 = private unnamed_addr constant [16 x i8] c"__builtin_rintl\00", align 1
@.str.591 = private unnamed_addr constant [16 x i8] c"__builtin_round\00", align 1
@.str.592 = private unnamed_addr constant [17 x i8] c"__builtin_roundf\00", align 1
@.str.593 = private unnamed_addr constant [17 x i8] c"__builtin_roundl\00", align 1
@.str.594 = private unnamed_addr constant [16 x i8] c"__builtin_scalb\00", align 1
@.str.595 = private unnamed_addr constant [17 x i8] c"__builtin_scalbf\00", align 1
@.str.596 = private unnamed_addr constant [17 x i8] c"__builtin_scalbl\00", align 1
@.str.597 = private unnamed_addr constant [18 x i8] c"__builtin_scalbln\00", align 1
@.str.598 = private unnamed_addr constant [19 x i8] c"__builtin_scalblnf\00", align 1
@.str.599 = private unnamed_addr constant [19 x i8] c"__builtin_scalblnl\00", align 1
@.str.600 = private unnamed_addr constant [17 x i8] c"__builtin_scalbn\00", align 1
@.str.601 = private unnamed_addr constant [18 x i8] c"__builtin_scalbnf\00", align 1
@.str.602 = private unnamed_addr constant [18 x i8] c"__builtin_scalbnl\00", align 1
@.str.603 = private unnamed_addr constant [18 x i8] c"__builtin_signbit\00", align 1
@.str.604 = private unnamed_addr constant [19 x i8] c"__builtin_signbitf\00", align 1
@.str.605 = private unnamed_addr constant [19 x i8] c"__builtin_signbitl\00", align 1
@.str.606 = private unnamed_addr constant [21 x i8] c"__builtin_signbitd32\00", align 1
@.str.607 = private unnamed_addr constant [21 x i8] c"__builtin_signbitd64\00", align 1
@.str.608 = private unnamed_addr constant [22 x i8] c"__builtin_signbitd128\00", align 1
@.str.609 = private unnamed_addr constant [22 x i8] c"__builtin_significand\00", align 1
@.str.610 = private unnamed_addr constant [23 x i8] c"__builtin_significandf\00", align 1
@.str.611 = private unnamed_addr constant [23 x i8] c"__builtin_significandl\00", align 1
@.str.612 = private unnamed_addr constant [14 x i8] c"__builtin_sin\00", align 1
@.str.613 = private unnamed_addr constant [17 x i8] c"__builtin_sincos\00", align 1
@.str.614 = private unnamed_addr constant [18 x i8] c"__builtin_sincosf\00", align 1
@.str.615 = private unnamed_addr constant [18 x i8] c"__builtin_sincosl\00", align 1
@.str.616 = private unnamed_addr constant [15 x i8] c"__builtin_sinf\00", align 1
@.str.617 = private unnamed_addr constant [15 x i8] c"__builtin_sinh\00", align 1
@.str.618 = private unnamed_addr constant [16 x i8] c"__builtin_sinhf\00", align 1
@.str.619 = private unnamed_addr constant [16 x i8] c"__builtin_sinhl\00", align 1
@.str.620 = private unnamed_addr constant [15 x i8] c"__builtin_sinl\00", align 1
@.str.621 = private unnamed_addr constant [15 x i8] c"__builtin_sqrt\00", align 1
@.str.622 = private unnamed_addr constant [16 x i8] c"__builtin_sqrtf\00", align 1
@.str.623 = private unnamed_addr constant [16 x i8] c"__builtin_sqrtl\00", align 1
@.str.624 = private unnamed_addr constant [14 x i8] c"__builtin_tan\00", align 1
@.str.625 = private unnamed_addr constant [15 x i8] c"__builtin_tanf\00", align 1
@.str.626 = private unnamed_addr constant [15 x i8] c"__builtin_tanh\00", align 1
@.str.627 = private unnamed_addr constant [16 x i8] c"__builtin_tanhf\00", align 1
@.str.628 = private unnamed_addr constant [16 x i8] c"__builtin_tanhl\00", align 1
@.str.629 = private unnamed_addr constant [15 x i8] c"__builtin_tanl\00", align 1
@.str.630 = private unnamed_addr constant [17 x i8] c"__builtin_tgamma\00", align 1
@.str.631 = private unnamed_addr constant [18 x i8] c"__builtin_tgammaf\00", align 1
@.str.632 = private unnamed_addr constant [18 x i8] c"__builtin_tgammal\00", align 1
@.str.633 = private unnamed_addr constant [16 x i8] c"__builtin_trunc\00", align 1
@.str.634 = private unnamed_addr constant [17 x i8] c"__builtin_truncf\00", align 1
@.str.635 = private unnamed_addr constant [17 x i8] c"__builtin_truncl\00", align 1
@.str.636 = private unnamed_addr constant [13 x i8] c"__builtin_y0\00", align 1
@.str.637 = private unnamed_addr constant [14 x i8] c"__builtin_y0f\00", align 1
@.str.638 = private unnamed_addr constant [14 x i8] c"__builtin_y0l\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"__builtin_y1\00", align 1
@.str.640 = private unnamed_addr constant [14 x i8] c"__builtin_y1f\00", align 1
@.str.641 = private unnamed_addr constant [14 x i8] c"__builtin_y1l\00", align 1
@.str.642 = private unnamed_addr constant [13 x i8] c"__builtin_yn\00", align 1
@.str.643 = private unnamed_addr constant [14 x i8] c"__builtin_ynf\00", align 1
@.str.644 = private unnamed_addr constant [14 x i8] c"__builtin_ynl\00", align 1
@.str.645 = private unnamed_addr constant [15 x i8] c"__builtin_cabs\00", align 1
@.str.646 = private unnamed_addr constant [16 x i8] c"__builtin_cabsf\00", align 1
@.str.647 = private unnamed_addr constant [16 x i8] c"__builtin_cabsl\00", align 1
@.str.648 = private unnamed_addr constant [16 x i8] c"__builtin_cacos\00", align 1
@.str.649 = private unnamed_addr constant [17 x i8] c"__builtin_cacosf\00", align 1
@.str.650 = private unnamed_addr constant [17 x i8] c"__builtin_cacosh\00", align 1
@.str.651 = private unnamed_addr constant [18 x i8] c"__builtin_cacoshf\00", align 1
@.str.652 = private unnamed_addr constant [18 x i8] c"__builtin_cacoshl\00", align 1
@.str.653 = private unnamed_addr constant [17 x i8] c"__builtin_cacosl\00", align 1
@.str.654 = private unnamed_addr constant [15 x i8] c"__builtin_carg\00", align 1
@.str.655 = private unnamed_addr constant [16 x i8] c"__builtin_cargf\00", align 1
@.str.656 = private unnamed_addr constant [16 x i8] c"__builtin_cargl\00", align 1
@.str.657 = private unnamed_addr constant [16 x i8] c"__builtin_casin\00", align 1
@.str.658 = private unnamed_addr constant [17 x i8] c"__builtin_casinf\00", align 1
@.str.659 = private unnamed_addr constant [17 x i8] c"__builtin_casinh\00", align 1
@.str.660 = private unnamed_addr constant [18 x i8] c"__builtin_casinhf\00", align 1
@.str.661 = private unnamed_addr constant [18 x i8] c"__builtin_casinhl\00", align 1
@.str.662 = private unnamed_addr constant [17 x i8] c"__builtin_casinl\00", align 1
@.str.663 = private unnamed_addr constant [16 x i8] c"__builtin_catan\00", align 1
@.str.664 = private unnamed_addr constant [17 x i8] c"__builtin_catanf\00", align 1
@.str.665 = private unnamed_addr constant [17 x i8] c"__builtin_catanh\00", align 1
@.str.666 = private unnamed_addr constant [18 x i8] c"__builtin_catanhf\00", align 1
@.str.667 = private unnamed_addr constant [18 x i8] c"__builtin_catanhl\00", align 1
@.str.668 = private unnamed_addr constant [17 x i8] c"__builtin_catanl\00", align 1
@.str.669 = private unnamed_addr constant [15 x i8] c"__builtin_ccos\00", align 1
@.str.670 = private unnamed_addr constant [16 x i8] c"__builtin_ccosf\00", align 1
@.str.671 = private unnamed_addr constant [16 x i8] c"__builtin_ccosh\00", align 1
@.str.672 = private unnamed_addr constant [17 x i8] c"__builtin_ccoshf\00", align 1
@.str.673 = private unnamed_addr constant [17 x i8] c"__builtin_ccoshl\00", align 1
@.str.674 = private unnamed_addr constant [16 x i8] c"__builtin_ccosl\00", align 1
@.str.675 = private unnamed_addr constant [15 x i8] c"__builtin_cexp\00", align 1
@.str.676 = private unnamed_addr constant [16 x i8] c"__builtin_cexpf\00", align 1
@.str.677 = private unnamed_addr constant [16 x i8] c"__builtin_cexpl\00", align 1
@.str.678 = private unnamed_addr constant [16 x i8] c"__builtin_cexpi\00", align 1
@.str.679 = private unnamed_addr constant [17 x i8] c"__builtin_cexpif\00", align 1
@.str.680 = private unnamed_addr constant [17 x i8] c"__builtin_cexpil\00", align 1
@.str.681 = private unnamed_addr constant [16 x i8] c"__builtin_cimag\00", align 1
@.str.682 = private unnamed_addr constant [17 x i8] c"__builtin_cimagf\00", align 1
@.str.683 = private unnamed_addr constant [17 x i8] c"__builtin_cimagl\00", align 1
@.str.684 = private unnamed_addr constant [15 x i8] c"__builtin_clog\00", align 1
@.str.685 = private unnamed_addr constant [16 x i8] c"__builtin_clogf\00", align 1
@.str.686 = private unnamed_addr constant [16 x i8] c"__builtin_clogl\00", align 1
@.str.687 = private unnamed_addr constant [17 x i8] c"__builtin_clog10\00", align 1
@.str.688 = private unnamed_addr constant [18 x i8] c"__builtin_clog10f\00", align 1
@.str.689 = private unnamed_addr constant [18 x i8] c"__builtin_clog10l\00", align 1
@.str.690 = private unnamed_addr constant [15 x i8] c"__builtin_conj\00", align 1
@.str.691 = private unnamed_addr constant [16 x i8] c"__builtin_conjf\00", align 1
@.str.692 = private unnamed_addr constant [16 x i8] c"__builtin_conjl\00", align 1
@.str.693 = private unnamed_addr constant [15 x i8] c"__builtin_cpow\00", align 1
@.str.694 = private unnamed_addr constant [16 x i8] c"__builtin_cpowf\00", align 1
@.str.695 = private unnamed_addr constant [16 x i8] c"__builtin_cpowl\00", align 1
@.str.696 = private unnamed_addr constant [16 x i8] c"__builtin_cproj\00", align 1
@.str.697 = private unnamed_addr constant [17 x i8] c"__builtin_cprojf\00", align 1
@.str.698 = private unnamed_addr constant [17 x i8] c"__builtin_cprojl\00", align 1
@.str.699 = private unnamed_addr constant [16 x i8] c"__builtin_creal\00", align 1
@.str.700 = private unnamed_addr constant [17 x i8] c"__builtin_crealf\00", align 1
@.str.701 = private unnamed_addr constant [17 x i8] c"__builtin_creall\00", align 1
@.str.702 = private unnamed_addr constant [15 x i8] c"__builtin_csin\00", align 1
@.str.703 = private unnamed_addr constant [16 x i8] c"__builtin_csinf\00", align 1
@.str.704 = private unnamed_addr constant [16 x i8] c"__builtin_csinh\00", align 1
@.str.705 = private unnamed_addr constant [17 x i8] c"__builtin_csinhf\00", align 1
@.str.706 = private unnamed_addr constant [17 x i8] c"__builtin_csinhl\00", align 1
@.str.707 = private unnamed_addr constant [16 x i8] c"__builtin_csinl\00", align 1
@.str.708 = private unnamed_addr constant [16 x i8] c"__builtin_csqrt\00", align 1
@.str.709 = private unnamed_addr constant [17 x i8] c"__builtin_csqrtf\00", align 1
@.str.710 = private unnamed_addr constant [17 x i8] c"__builtin_csqrtl\00", align 1
@.str.711 = private unnamed_addr constant [15 x i8] c"__builtin_ctan\00", align 1
@.str.712 = private unnamed_addr constant [16 x i8] c"__builtin_ctanf\00", align 1
@.str.713 = private unnamed_addr constant [16 x i8] c"__builtin_ctanh\00", align 1
@.str.714 = private unnamed_addr constant [17 x i8] c"__builtin_ctanhf\00", align 1
@.str.715 = private unnamed_addr constant [17 x i8] c"__builtin_ctanhl\00", align 1
@.str.716 = private unnamed_addr constant [16 x i8] c"__builtin_ctanl\00", align 1
@.str.717 = private unnamed_addr constant [15 x i8] c"__builtin_bcmp\00", align 1
@.str.718 = private unnamed_addr constant [16 x i8] c"__builtin_bcopy\00", align 1
@.str.719 = private unnamed_addr constant [16 x i8] c"__builtin_bzero\00", align 1
@.str.720 = private unnamed_addr constant [16 x i8] c"__builtin_index\00", align 1
@.str.721 = private unnamed_addr constant [17 x i8] c"__builtin_memchr\00", align 1
@.str.722 = private unnamed_addr constant [17 x i8] c"__builtin_memcmp\00", align 1
@.str.723 = private unnamed_addr constant [17 x i8] c"__builtin_memcpy\00", align 1
@.str.724 = private unnamed_addr constant [18 x i8] c"__builtin_memmove\00", align 1
@.str.725 = private unnamed_addr constant [18 x i8] c"__builtin_mempcpy\00", align 1
@.str.726 = private unnamed_addr constant [17 x i8] c"__builtin_memset\00", align 1
@.str.727 = private unnamed_addr constant [17 x i8] c"__builtin_rindex\00", align 1
@.str.728 = private unnamed_addr constant [17 x i8] c"__builtin_stpcpy\00", align 1
@.str.729 = private unnamed_addr constant [18 x i8] c"__builtin_stpncpy\00", align 1
@.str.730 = private unnamed_addr constant [21 x i8] c"__builtin_strcasecmp\00", align 1
@.str.731 = private unnamed_addr constant [17 x i8] c"__builtin_strcat\00", align 1
@.str.732 = private unnamed_addr constant [17 x i8] c"__builtin_strchr\00", align 1
@.str.733 = private unnamed_addr constant [17 x i8] c"__builtin_strcmp\00", align 1
@.str.734 = private unnamed_addr constant [17 x i8] c"__builtin_strcpy\00", align 1
@.str.735 = private unnamed_addr constant [18 x i8] c"__builtin_strcspn\00", align 1
@.str.736 = private unnamed_addr constant [17 x i8] c"__builtin_strdup\00", align 1
@.str.737 = private unnamed_addr constant [18 x i8] c"__builtin_strndup\00", align 1
@.str.738 = private unnamed_addr constant [17 x i8] c"__builtin_strlen\00", align 1
@.str.739 = private unnamed_addr constant [22 x i8] c"__builtin_strncasecmp\00", align 1
@.str.740 = private unnamed_addr constant [18 x i8] c"__builtin_strncat\00", align 1
@.str.741 = private unnamed_addr constant [18 x i8] c"__builtin_strncmp\00", align 1
@.str.742 = private unnamed_addr constant [18 x i8] c"__builtin_strncpy\00", align 1
@.str.743 = private unnamed_addr constant [18 x i8] c"__builtin_strpbrk\00", align 1
@.str.744 = private unnamed_addr constant [18 x i8] c"__builtin_strrchr\00", align 1
@.str.745 = private unnamed_addr constant [17 x i8] c"__builtin_strspn\00", align 1
@.str.746 = private unnamed_addr constant [17 x i8] c"__builtin_strstr\00", align 1
@.str.747 = private unnamed_addr constant [18 x i8] c"__builtin_fprintf\00", align 1
@.str.748 = private unnamed_addr constant [27 x i8] c"__builtin_fprintf_unlocked\00", align 1
@.str.749 = private unnamed_addr constant [15 x i8] c"__builtin_putc\00", align 1
@.str.750 = private unnamed_addr constant [24 x i8] c"__builtin_putc_unlocked\00", align 1
@.str.751 = private unnamed_addr constant [16 x i8] c"__builtin_fputc\00", align 1
@.str.752 = private unnamed_addr constant [25 x i8] c"__builtin_fputc_unlocked\00", align 1
@.str.753 = private unnamed_addr constant [16 x i8] c"__builtin_fputs\00", align 1
@.str.754 = private unnamed_addr constant [25 x i8] c"__builtin_fputs_unlocked\00", align 1
@.str.755 = private unnamed_addr constant [17 x i8] c"__builtin_fscanf\00", align 1
@.str.756 = private unnamed_addr constant [17 x i8] c"__builtin_fwrite\00", align 1
@.str.757 = private unnamed_addr constant [26 x i8] c"__builtin_fwrite_unlocked\00", align 1
@.str.758 = private unnamed_addr constant [17 x i8] c"__builtin_printf\00", align 1
@.str.759 = private unnamed_addr constant [26 x i8] c"__builtin_printf_unlocked\00", align 1
@.str.760 = private unnamed_addr constant [18 x i8] c"__builtin_putchar\00", align 1
@.str.761 = private unnamed_addr constant [27 x i8] c"__builtin_putchar_unlocked\00", align 1
@.str.762 = private unnamed_addr constant [15 x i8] c"__builtin_puts\00", align 1
@.str.763 = private unnamed_addr constant [24 x i8] c"__builtin_puts_unlocked\00", align 1
@.str.764 = private unnamed_addr constant [16 x i8] c"__builtin_scanf\00", align 1
@.str.765 = private unnamed_addr constant [19 x i8] c"__builtin_snprintf\00", align 1
@.str.766 = private unnamed_addr constant [18 x i8] c"__builtin_sprintf\00", align 1
@.str.767 = private unnamed_addr constant [17 x i8] c"__builtin_sscanf\00", align 1
@.str.768 = private unnamed_addr constant [19 x i8] c"__builtin_vfprintf\00", align 1
@.str.769 = private unnamed_addr constant [18 x i8] c"__builtin_vfscanf\00", align 1
@.str.770 = private unnamed_addr constant [18 x i8] c"__builtin_vprintf\00", align 1
@.str.771 = private unnamed_addr constant [17 x i8] c"__builtin_vscanf\00", align 1
@.str.772 = private unnamed_addr constant [20 x i8] c"__builtin_vsnprintf\00", align 1
@.str.773 = private unnamed_addr constant [19 x i8] c"__builtin_vsprintf\00", align 1
@.str.774 = private unnamed_addr constant [18 x i8] c"__builtin_vsscanf\00", align 1
@.str.775 = private unnamed_addr constant [18 x i8] c"__builtin_isalnum\00", align 1
@.str.776 = private unnamed_addr constant [18 x i8] c"__builtin_isalpha\00", align 1
@.str.777 = private unnamed_addr constant [18 x i8] c"__builtin_isascii\00", align 1
@.str.778 = private unnamed_addr constant [18 x i8] c"__builtin_isblank\00", align 1
@.str.779 = private unnamed_addr constant [18 x i8] c"__builtin_iscntrl\00", align 1
@.str.780 = private unnamed_addr constant [18 x i8] c"__builtin_isdigit\00", align 1
@.str.781 = private unnamed_addr constant [18 x i8] c"__builtin_isgraph\00", align 1
@.str.782 = private unnamed_addr constant [18 x i8] c"__builtin_islower\00", align 1
@.str.783 = private unnamed_addr constant [18 x i8] c"__builtin_isprint\00", align 1
@.str.784 = private unnamed_addr constant [18 x i8] c"__builtin_ispunct\00", align 1
@.str.785 = private unnamed_addr constant [18 x i8] c"__builtin_isspace\00", align 1
@.str.786 = private unnamed_addr constant [18 x i8] c"__builtin_isupper\00", align 1
@.str.787 = private unnamed_addr constant [19 x i8] c"__builtin_isxdigit\00", align 1
@.str.788 = private unnamed_addr constant [18 x i8] c"__builtin_toascii\00", align 1
@.str.789 = private unnamed_addr constant [18 x i8] c"__builtin_tolower\00", align 1
@.str.790 = private unnamed_addr constant [18 x i8] c"__builtin_toupper\00", align 1
@.str.791 = private unnamed_addr constant [19 x i8] c"__builtin_iswalnum\00", align 1
@.str.792 = private unnamed_addr constant [19 x i8] c"__builtin_iswalpha\00", align 1
@.str.793 = private unnamed_addr constant [19 x i8] c"__builtin_iswblank\00", align 1
@.str.794 = private unnamed_addr constant [19 x i8] c"__builtin_iswcntrl\00", align 1
@.str.795 = private unnamed_addr constant [19 x i8] c"__builtin_iswdigit\00", align 1
@.str.796 = private unnamed_addr constant [19 x i8] c"__builtin_iswgraph\00", align 1
@.str.797 = private unnamed_addr constant [19 x i8] c"__builtin_iswlower\00", align 1
@.str.798 = private unnamed_addr constant [19 x i8] c"__builtin_iswprint\00", align 1
@.str.799 = private unnamed_addr constant [19 x i8] c"__builtin_iswpunct\00", align 1
@.str.800 = private unnamed_addr constant [19 x i8] c"__builtin_iswspace\00", align 1
@.str.801 = private unnamed_addr constant [19 x i8] c"__builtin_iswupper\00", align 1
@.str.802 = private unnamed_addr constant [20 x i8] c"__builtin_iswxdigit\00", align 1
@.str.803 = private unnamed_addr constant [19 x i8] c"__builtin_towlower\00", align 1
@.str.804 = private unnamed_addr constant [19 x i8] c"__builtin_towupper\00", align 1
@.str.805 = private unnamed_addr constant [16 x i8] c"__builtin_abort\00", align 1
@.str.806 = private unnamed_addr constant [14 x i8] c"__builtin_abs\00", align 1
@.str.807 = private unnamed_addr constant [37 x i8] c"__builtin_aggregate_incoming_address\00", align 1
@.str.808 = private unnamed_addr constant [17 x i8] c"__builtin_alloca\00", align 1
@.str.809 = private unnamed_addr constant [16 x i8] c"__builtin_apply\00", align 1
@.str.810 = private unnamed_addr constant [21 x i8] c"__builtin_apply_args\00", align 1
@.str.811 = private unnamed_addr constant [20 x i8] c"__builtin_args_info\00", align 1
@.str.812 = private unnamed_addr constant [18 x i8] c"__builtin_bswap32\00", align 1
@.str.813 = private unnamed_addr constant [18 x i8] c"__builtin_bswap64\00", align 1
@.str.814 = private unnamed_addr constant [24 x i8] c"__builtin___clear_cache\00", align 1
@.str.815 = private unnamed_addr constant [17 x i8] c"__builtin_calloc\00", align 1
@.str.816 = private unnamed_addr constant [24 x i8] c"__builtin_classify_type\00", align 1
@.str.817 = private unnamed_addr constant [14 x i8] c"__builtin_clz\00", align 1
@.str.818 = private unnamed_addr constant [18 x i8] c"__builtin_clzimax\00", align 1
@.str.819 = private unnamed_addr constant [15 x i8] c"__builtin_clzl\00", align 1
@.str.820 = private unnamed_addr constant [16 x i8] c"__builtin_clzll\00", align 1
@.str.821 = private unnamed_addr constant [21 x i8] c"__builtin_constant_p\00", align 1
@.str.822 = private unnamed_addr constant [14 x i8] c"__builtin_ctz\00", align 1
@.str.823 = private unnamed_addr constant [18 x i8] c"__builtin_ctzimax\00", align 1
@.str.824 = private unnamed_addr constant [15 x i8] c"__builtin_ctzl\00", align 1
@.str.825 = private unnamed_addr constant [16 x i8] c"__builtin_ctzll\00", align 1
@.str.826 = private unnamed_addr constant [20 x i8] c"__builtin_dcgettext\00", align 1
@.str.827 = private unnamed_addr constant [19 x i8] c"__builtin_dgettext\00", align 1
@.str.828 = private unnamed_addr constant [20 x i8] c"__builtin_dwarf_cfa\00", align 1
@.str.829 = private unnamed_addr constant [26 x i8] c"__builtin_dwarf_sp_column\00", align 1
@.str.830 = private unnamed_addr constant [20 x i8] c"__builtin_eh_return\00", align 1
@.str.831 = private unnamed_addr constant [31 x i8] c"__builtin_eh_return_data_regno\00", align 1
@.str.832 = private unnamed_addr constant [16 x i8] c"__builtin_execl\00", align 1
@.str.833 = private unnamed_addr constant [17 x i8] c"__builtin_execlp\00", align 1
@.str.834 = private unnamed_addr constant [17 x i8] c"__builtin_execle\00", align 1
@.str.835 = private unnamed_addr constant [16 x i8] c"__builtin_execv\00", align 1
@.str.836 = private unnamed_addr constant [17 x i8] c"__builtin_execvp\00", align 1
@.str.837 = private unnamed_addr constant [17 x i8] c"__builtin_execve\00", align 1
@.str.838 = private unnamed_addr constant [15 x i8] c"__builtin_exit\00", align 1
@.str.839 = private unnamed_addr constant [17 x i8] c"__builtin_expect\00", align 1
@.str.840 = private unnamed_addr constant [25 x i8] c"__builtin_extend_pointer\00", align 1
@.str.841 = private unnamed_addr constant [30 x i8] c"__builtin_extract_return_addr\00", align 1
@.str.842 = private unnamed_addr constant [14 x i8] c"__builtin_ffs\00", align 1
@.str.843 = private unnamed_addr constant [18 x i8] c"__builtin_ffsimax\00", align 1
@.str.844 = private unnamed_addr constant [15 x i8] c"__builtin_ffsl\00", align 1
@.str.845 = private unnamed_addr constant [16 x i8] c"__builtin_ffsll\00", align 1
@.str.846 = private unnamed_addr constant [15 x i8] c"__builtin_fork\00", align 1
@.str.847 = private unnamed_addr constant [24 x i8] c"__builtin_frame_address\00", align 1
@.str.848 = private unnamed_addr constant [15 x i8] c"__builtin_free\00", align 1
@.str.849 = private unnamed_addr constant [27 x i8] c"__builtin_frob_return_addr\00", align 1
@.str.850 = private unnamed_addr constant [18 x i8] c"__builtin_gettext\00", align 1
@.str.851 = private unnamed_addr constant [18 x i8] c"__builtin_imaxabs\00", align 1
@.str.852 = private unnamed_addr constant [36 x i8] c"__builtin_init_dwarf_reg_size_table\00", align 1
@.str.853 = private unnamed_addr constant [17 x i8] c"__builtin_finite\00", align 1
@.str.854 = private unnamed_addr constant [18 x i8] c"__builtin_finitef\00", align 1
@.str.855 = private unnamed_addr constant [18 x i8] c"__builtin_finitel\00", align 1
@.str.856 = private unnamed_addr constant [20 x i8] c"__builtin_finited32\00", align 1
@.str.857 = private unnamed_addr constant [20 x i8] c"__builtin_finited64\00", align 1
@.str.858 = private unnamed_addr constant [21 x i8] c"__builtin_finited128\00", align 1
@.str.859 = private unnamed_addr constant [21 x i8] c"__builtin_fpclassify\00", align 1
@.str.860 = private unnamed_addr constant [19 x i8] c"__builtin_isfinite\00", align 1
@.str.861 = private unnamed_addr constant [21 x i8] c"__builtin_isinf_sign\00", align 1
@.str.862 = private unnamed_addr constant [16 x i8] c"__builtin_isinf\00", align 1
@.str.863 = private unnamed_addr constant [17 x i8] c"__builtin_isinff\00", align 1
@.str.864 = private unnamed_addr constant [17 x i8] c"__builtin_isinfl\00", align 1
@.str.865 = private unnamed_addr constant [19 x i8] c"__builtin_isinfd32\00", align 1
@.str.866 = private unnamed_addr constant [19 x i8] c"__builtin_isinfd64\00", align 1
@.str.867 = private unnamed_addr constant [20 x i8] c"__builtin_isinfd128\00", align 1
@.str.868 = private unnamed_addr constant [16 x i8] c"__builtin_isnan\00", align 1
@.str.869 = private unnamed_addr constant [17 x i8] c"__builtin_isnanf\00", align 1
@.str.870 = private unnamed_addr constant [17 x i8] c"__builtin_isnanl\00", align 1
@.str.871 = private unnamed_addr constant [19 x i8] c"__builtin_isnand32\00", align 1
@.str.872 = private unnamed_addr constant [19 x i8] c"__builtin_isnand64\00", align 1
@.str.873 = private unnamed_addr constant [20 x i8] c"__builtin_isnand128\00", align 1
@.str.874 = private unnamed_addr constant [19 x i8] c"__builtin_isnormal\00", align 1
@.str.875 = private unnamed_addr constant [20 x i8] c"__builtin_isgreater\00", align 1
@.str.876 = private unnamed_addr constant [25 x i8] c"__builtin_isgreaterequal\00", align 1
@.str.877 = private unnamed_addr constant [17 x i8] c"__builtin_isless\00", align 1
@.str.878 = private unnamed_addr constant [22 x i8] c"__builtin_islessequal\00", align 1
@.str.879 = private unnamed_addr constant [24 x i8] c"__builtin_islessgreater\00", align 1
@.str.880 = private unnamed_addr constant [22 x i8] c"__builtin_isunordered\00", align 1
@.str.881 = private unnamed_addr constant [15 x i8] c"__builtin_labs\00", align 1
@.str.882 = private unnamed_addr constant [16 x i8] c"__builtin_llabs\00", align 1
@.str.883 = private unnamed_addr constant [18 x i8] c"__builtin_longjmp\00", align 1
@.str.884 = private unnamed_addr constant [17 x i8] c"__builtin_malloc\00", align 1
@.str.885 = private unnamed_addr constant [19 x i8] c"__builtin_next_arg\00", align 1
@.str.886 = private unnamed_addr constant [17 x i8] c"__builtin_parity\00", align 1
@.str.887 = private unnamed_addr constant [21 x i8] c"__builtin_parityimax\00", align 1
@.str.888 = private unnamed_addr constant [18 x i8] c"__builtin_parityl\00", align 1
@.str.889 = private unnamed_addr constant [19 x i8] c"__builtin_parityll\00", align 1
@.str.890 = private unnamed_addr constant [19 x i8] c"__builtin_popcount\00", align 1
@.str.891 = private unnamed_addr constant [23 x i8] c"__builtin_popcountimax\00", align 1
@.str.892 = private unnamed_addr constant [20 x i8] c"__builtin_popcountl\00", align 1
@.str.893 = private unnamed_addr constant [21 x i8] c"__builtin_popcountll\00", align 1
@.str.894 = private unnamed_addr constant [19 x i8] c"__builtin_prefetch\00", align 1
@.str.895 = private unnamed_addr constant [18 x i8] c"__builtin_realloc\00", align 1
@.str.896 = private unnamed_addr constant [17 x i8] c"__builtin_return\00", align 1
@.str.897 = private unnamed_addr constant [25 x i8] c"__builtin_return_address\00", align 1
@.str.898 = private unnamed_addr constant [19 x i8] c"__builtin_saveregs\00", align 1
@.str.899 = private unnamed_addr constant [17 x i8] c"__builtin_setjmp\00", align 1
@.str.900 = private unnamed_addr constant [18 x i8] c"__builtin_strfmon\00", align 1
@.str.901 = private unnamed_addr constant [19 x i8] c"__builtin_strftime\00", align 1
@.str.902 = private unnamed_addr constant [15 x i8] c"__builtin_trap\00", align 1
@.str.903 = private unnamed_addr constant [22 x i8] c"__builtin_unreachable\00", align 1
@.str.904 = private unnamed_addr constant [22 x i8] c"__builtin_unwind_init\00", align 1
@.str.905 = private unnamed_addr constant [28 x i8] c"__builtin_update_setjmp_buf\00", align 1
@.str.906 = private unnamed_addr constant [18 x i8] c"__builtin_va_copy\00", align 1
@.str.907 = private unnamed_addr constant [17 x i8] c"__builtin_va_end\00", align 1
@.str.908 = private unnamed_addr constant [19 x i8] c"__builtin_va_start\00", align 1
@.str.909 = private unnamed_addr constant [22 x i8] c"__builtin_va_arg_pack\00", align 1
@.str.910 = private unnamed_addr constant [26 x i8] c"__builtin_va_arg_pack_len\00", align 1
@.str.911 = private unnamed_addr constant [16 x i8] c"__builtin__exit\00", align 1
@.str.912 = private unnamed_addr constant [16 x i8] c"__builtin__Exit\00", align 1
@.str.913 = private unnamed_addr constant [22 x i8] c"__builtin_object_size\00", align 1
@.str.914 = private unnamed_addr constant [23 x i8] c"__builtin___memcpy_chk\00", align 1
@.str.915 = private unnamed_addr constant [24 x i8] c"__builtin___memmove_chk\00", align 1
@.str.916 = private unnamed_addr constant [24 x i8] c"__builtin___mempcpy_chk\00", align 1
@.str.917 = private unnamed_addr constant [23 x i8] c"__builtin___memset_chk\00", align 1
@.str.918 = private unnamed_addr constant [23 x i8] c"__builtin___stpcpy_chk\00", align 1
@.str.919 = private unnamed_addr constant [23 x i8] c"__builtin___strcat_chk\00", align 1
@.str.920 = private unnamed_addr constant [23 x i8] c"__builtin___strcpy_chk\00", align 1
@.str.921 = private unnamed_addr constant [24 x i8] c"__builtin___strncat_chk\00", align 1
@.str.922 = private unnamed_addr constant [24 x i8] c"__builtin___strncpy_chk\00", align 1
@.str.923 = private unnamed_addr constant [25 x i8] c"__builtin___snprintf_chk\00", align 1
@.str.924 = private unnamed_addr constant [24 x i8] c"__builtin___sprintf_chk\00", align 1
@.str.925 = private unnamed_addr constant [26 x i8] c"__builtin___vsnprintf_chk\00", align 1
@.str.926 = private unnamed_addr constant [25 x i8] c"__builtin___vsprintf_chk\00", align 1
@.str.927 = private unnamed_addr constant [24 x i8] c"__builtin___fprintf_chk\00", align 1
@.str.928 = private unnamed_addr constant [23 x i8] c"__builtin___printf_chk\00", align 1
@.str.929 = private unnamed_addr constant [25 x i8] c"__builtin___vfprintf_chk\00", align 1
@.str.930 = private unnamed_addr constant [24 x i8] c"__builtin___vprintf_chk\00", align 1
@.str.931 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_add\00", align 1
@.str.932 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_1\00", align 1
@.str.933 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_2\00", align 1
@.str.934 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_4\00", align 1
@.str.935 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_add_8\00", align 1
@.str.936 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_add_16\00", align 1
@.str.937 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_sub\00", align 1
@.str.938 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_1\00", align 1
@.str.939 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_2\00", align 1
@.str.940 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_4\00", align 1
@.str.941 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_sub_8\00", align 1
@.str.942 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_sub_16\00", align 1
@.str.943 = private unnamed_addr constant [20 x i8] c"__sync_fetch_and_or\00", align 1
@.str.944 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_1\00", align 1
@.str.945 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_2\00", align 1
@.str.946 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_4\00", align 1
@.str.947 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_or_8\00", align 1
@.str.948 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_or_16\00", align 1
@.str.949 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_and\00", align 1
@.str.950 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_1\00", align 1
@.str.951 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_2\00", align 1
@.str.952 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_4\00", align 1
@.str.953 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_and_8\00", align 1
@.str.954 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_and_16\00", align 1
@.str.955 = private unnamed_addr constant [21 x i8] c"__sync_fetch_and_xor\00", align 1
@.str.956 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_1\00", align 1
@.str.957 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_2\00", align 1
@.str.958 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_4\00", align 1
@.str.959 = private unnamed_addr constant [23 x i8] c"__sync_fetch_and_xor_8\00", align 1
@.str.960 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_xor_16\00", align 1
@.str.961 = private unnamed_addr constant [22 x i8] c"__sync_fetch_and_nand\00", align 1
@.str.962 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_1\00", align 1
@.str.963 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_2\00", align 1
@.str.964 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_4\00", align 1
@.str.965 = private unnamed_addr constant [24 x i8] c"__sync_fetch_and_nand_8\00", align 1
@.str.966 = private unnamed_addr constant [25 x i8] c"__sync_fetch_and_nand_16\00", align 1
@.str.967 = private unnamed_addr constant [21 x i8] c"__sync_add_and_fetch\00", align 1
@.str.968 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_1\00", align 1
@.str.969 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_2\00", align 1
@.str.970 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_4\00", align 1
@.str.971 = private unnamed_addr constant [23 x i8] c"__sync_add_and_fetch_8\00", align 1
@.str.972 = private unnamed_addr constant [24 x i8] c"__sync_add_and_fetch_16\00", align 1
@.str.973 = private unnamed_addr constant [21 x i8] c"__sync_sub_and_fetch\00", align 1
@.str.974 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_1\00", align 1
@.str.975 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_2\00", align 1
@.str.976 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_4\00", align 1
@.str.977 = private unnamed_addr constant [23 x i8] c"__sync_sub_and_fetch_8\00", align 1
@.str.978 = private unnamed_addr constant [24 x i8] c"__sync_sub_and_fetch_16\00", align 1
@.str.979 = private unnamed_addr constant [20 x i8] c"__sync_or_and_fetch\00", align 1
@.str.980 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_1\00", align 1
@.str.981 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_2\00", align 1
@.str.982 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_4\00", align 1
@.str.983 = private unnamed_addr constant [22 x i8] c"__sync_or_and_fetch_8\00", align 1
@.str.984 = private unnamed_addr constant [23 x i8] c"__sync_or_and_fetch_16\00", align 1
@.str.985 = private unnamed_addr constant [21 x i8] c"__sync_and_and_fetch\00", align 1
@.str.986 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_1\00", align 1
@.str.987 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_2\00", align 1
@.str.988 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_4\00", align 1
@.str.989 = private unnamed_addr constant [23 x i8] c"__sync_and_and_fetch_8\00", align 1
@.str.990 = private unnamed_addr constant [24 x i8] c"__sync_and_and_fetch_16\00", align 1
@.str.991 = private unnamed_addr constant [21 x i8] c"__sync_xor_and_fetch\00", align 1
@.str.992 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_1\00", align 1
@.str.993 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_2\00", align 1
@.str.994 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_4\00", align 1
@.str.995 = private unnamed_addr constant [23 x i8] c"__sync_xor_and_fetch_8\00", align 1
@.str.996 = private unnamed_addr constant [24 x i8] c"__sync_xor_and_fetch_16\00", align 1
@.str.997 = private unnamed_addr constant [22 x i8] c"__sync_nand_and_fetch\00", align 1
@.str.998 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_1\00", align 1
@.str.999 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_2\00", align 1
@.str.1000 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_4\00", align 1
@.str.1001 = private unnamed_addr constant [24 x i8] c"__sync_nand_and_fetch_8\00", align 1
@.str.1002 = private unnamed_addr constant [25 x i8] c"__sync_nand_and_fetch_16\00", align 1
@.str.1003 = private unnamed_addr constant [29 x i8] c"__sync_bool_compare_and_swap\00", align 1
@.str.1004 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_1\00", align 1
@.str.1005 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_2\00", align 1
@.str.1006 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_4\00", align 1
@.str.1007 = private unnamed_addr constant [31 x i8] c"__sync_bool_compare_and_swap_8\00", align 1
@.str.1008 = private unnamed_addr constant [32 x i8] c"__sync_bool_compare_and_swap_16\00", align 1
@.str.1009 = private unnamed_addr constant [28 x i8] c"__sync_val_compare_and_swap\00", align 1
@.str.1010 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_1\00", align 1
@.str.1011 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_2\00", align 1
@.str.1012 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_4\00", align 1
@.str.1013 = private unnamed_addr constant [30 x i8] c"__sync_val_compare_and_swap_8\00", align 1
@.str.1014 = private unnamed_addr constant [31 x i8] c"__sync_val_compare_and_swap_16\00", align 1
@.str.1015 = private unnamed_addr constant [25 x i8] c"__sync_lock_test_and_set\00", align 1
@.str.1016 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_1\00", align 1
@.str.1017 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_2\00", align 1
@.str.1018 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_4\00", align 1
@.str.1019 = private unnamed_addr constant [27 x i8] c"__sync_lock_test_and_set_8\00", align 1
@.str.1020 = private unnamed_addr constant [28 x i8] c"__sync_lock_test_and_set_16\00", align 1
@.str.1021 = private unnamed_addr constant [20 x i8] c"__sync_lock_release\00", align 1
@.str.1022 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_1\00", align 1
@.str.1023 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_2\00", align 1
@.str.1024 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_4\00", align 1
@.str.1025 = private unnamed_addr constant [22 x i8] c"__sync_lock_release_8\00", align 1
@.str.1026 = private unnamed_addr constant [23 x i8] c"__sync_lock_release_16\00", align 1
@.str.1027 = private unnamed_addr constant [19 x i8] c"__sync_synchronize\00", align 1
@.str.1028 = private unnamed_addr constant [29 x i8] c"__builtin_omp_get_thread_num\00", align 1
@flag_openmp = external local_unnamed_addr global i32, align 4
@flag_tree_parallelize_loops = external local_unnamed_addr global i32, align 4
@.str.1029 = private unnamed_addr constant [30 x i8] c"__builtin_omp_get_num_threads\00", align 1
@.str.1030 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_atomic_start\00", align 1
@.str.1031 = private unnamed_addr constant [26 x i8] c"__builtin_GOMP_atomic_end\00", align 1
@.str.1032 = private unnamed_addr constant [23 x i8] c"__builtin_GOMP_barrier\00", align 1
@.str.1033 = private unnamed_addr constant [24 x i8] c"__builtin_GOMP_taskwait\00", align 1
@.str.1034 = private unnamed_addr constant [30 x i8] c"__builtin_GOMP_critical_start\00", align 1
@.str.1035 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_critical_end\00", align 1
@.str.1036 = private unnamed_addr constant [35 x i8] c"__builtin_GOMP_critical_name_start\00", align 1
@.str.1037 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_critical_name_end\00", align 1
@.str.1038 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_static_start\00", align 1
@.str.1039 = private unnamed_addr constant [34 x i8] c"__builtin_GOMP_loop_dynamic_start\00", align 1
@.str.1040 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_guided_start\00", align 1
@.str.1041 = private unnamed_addr constant [34 x i8] c"__builtin_GOMP_loop_runtime_start\00", align 1
@.str.1042 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_static_start\00", align 1
@.str.1043 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_loop_ordered_dynamic_start\00", align 1
@.str.1044 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_guided_start\00", align 1
@.str.1045 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_loop_ordered_runtime_start\00", align 1
@.str.1046 = private unnamed_addr constant [32 x i8] c"__builtin_GOMP_loop_static_next\00", align 1
@.str.1047 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_dynamic_next\00", align 1
@.str.1048 = private unnamed_addr constant [32 x i8] c"__builtin_GOMP_loop_guided_next\00", align 1
@.str.1049 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_loop_runtime_next\00", align 1
@.str.1050 = private unnamed_addr constant [40 x i8] c"__builtin_GOMP_loop_ordered_static_next\00", align 1
@.str.1051 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_dynamic_next\00", align 1
@.str.1052 = private unnamed_addr constant [40 x i8] c"__builtin_GOMP_loop_ordered_guided_next\00", align 1
@.str.1053 = private unnamed_addr constant [41 x i8] c"__builtin_GOMP_loop_ordered_runtime_next\00", align 1
@.str.1054 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_static_start\00", align 1
@.str.1055 = private unnamed_addr constant [38 x i8] c"__builtin_GOMP_loop_ull_dynamic_start\00", align 1
@.str.1056 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_guided_start\00", align 1
@.str.1057 = private unnamed_addr constant [38 x i8] c"__builtin_GOMP_loop_ull_runtime_start\00", align 1
@.str.1058 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_static_start\00", align 1
@.str.1059 = private unnamed_addr constant [46 x i8] c"__builtin_GOMP_loop_ull_ordered_dynamic_start\00", align 1
@.str.1060 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_guided_start\00", align 1
@.str.1061 = private unnamed_addr constant [46 x i8] c"__builtin_GOMP_loop_ull_ordered_runtime_start\00", align 1
@.str.1062 = private unnamed_addr constant [36 x i8] c"__builtin_GOMP_loop_ull_static_next\00", align 1
@.str.1063 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_dynamic_next\00", align 1
@.str.1064 = private unnamed_addr constant [36 x i8] c"__builtin_GOMP_loop_ull_guided_next\00", align 1
@.str.1065 = private unnamed_addr constant [37 x i8] c"__builtin_GOMP_loop_ull_runtime_next\00", align 1
@.str.1066 = private unnamed_addr constant [44 x i8] c"__builtin_GOMP_loop_ull_ordered_static_next\00", align 1
@.str.1067 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_dynamic_next\00", align 1
@.str.1068 = private unnamed_addr constant [44 x i8] c"__builtin_GOMP_loop_ull_ordered_guided_next\00", align 1
@.str.1069 = private unnamed_addr constant [45 x i8] c"__builtin_GOMP_loop_ull_ordered_runtime_next\00", align 1
@.str.1070 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_parallel_loop_static_start\00", align 1
@.str.1071 = private unnamed_addr constant [43 x i8] c"__builtin_GOMP_parallel_loop_dynamic_start\00", align 1
@.str.1072 = private unnamed_addr constant [42 x i8] c"__builtin_GOMP_parallel_loop_guided_start\00", align 1
@.str.1073 = private unnamed_addr constant [43 x i8] c"__builtin_GOMP_parallel_loop_runtime_start\00", align 1
@.str.1074 = private unnamed_addr constant [24 x i8] c"__builtin_GOMP_loop_end\00", align 1
@.str.1075 = private unnamed_addr constant [31 x i8] c"__builtin_GOMP_loop_end_nowait\00", align 1
@.str.1076 = private unnamed_addr constant [29 x i8] c"__builtin_GOMP_ordered_start\00", align 1
@.str.1077 = private unnamed_addr constant [27 x i8] c"__builtin_GOMP_ordered_end\00", align 1
@.str.1078 = private unnamed_addr constant [30 x i8] c"__builtin_GOMP_parallel_start\00", align 1
@.str.1079 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_parallel_end\00", align 1
@.str.1080 = private unnamed_addr constant [20 x i8] c"__builtin_GOMP_task\00", align 1
@.str.1081 = private unnamed_addr constant [30 x i8] c"__builtin_GOMP_sections_start\00", align 1
@.str.1082 = private unnamed_addr constant [29 x i8] c"__builtin_GOMP_sections_next\00", align 1
@.str.1083 = private unnamed_addr constant [39 x i8] c"__builtin_GOMP_parallel_sections_start\00", align 1
@.str.1084 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_sections_end\00", align 1
@.str.1085 = private unnamed_addr constant [35 x i8] c"__builtin_GOMP_sections_end_nowait\00", align 1
@.str.1086 = private unnamed_addr constant [28 x i8] c"__builtin_GOMP_single_start\00", align 1
@.str.1087 = private unnamed_addr constant [33 x i8] c"__builtin_GOMP_single_copy_start\00", align 1
@.str.1088 = private unnamed_addr constant [31 x i8] c"__builtin_GOMP_single_copy_end\00", align 1
@flag_mudflap = external local_unnamed_addr global i32, align 4
@.str.1089 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.1090 = private unnamed_addr constant [12 x i8] c"asm_fprintf\00", align 1
@.str.1091 = private unnamed_addr constant [9 x i8] c"gcc_diag\00", align 1
@.str.1092 = private unnamed_addr constant [10 x i8] c"gcc_cdiag\00", align 1
@.str.1093 = private unnamed_addr constant [12 x i8] c"gcc_cxxdiag\00", align 1
@.str.1094 = private unnamed_addr constant [6 x i8] c"scanf\00", align 1
@.str.1095 = private unnamed_addr constant [8 x i8] c"strfmon\00", align 1
@.str.1096 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.1097 = private unnamed_addr constant [11 x i8] c"__builtin_\00", align 1
@built_in_decls = external local_unnamed_addr global [721 x ptr], align 16
@implicit_built_in_decls = external local_unnamed_addr global [721 x ptr], align 16
@disabled_builtins = internal unnamed_addr global ptr null, align 8
@.str.1098 = private unnamed_addr constant [19 x i8] c"__compound_literal\00", align 1
@.str.1099 = private unnamed_addr constant [7 x i8] c"%s.%lu\00", align 1
@compound_literal_number = internal global i32 0, align 4
@.str.1100 = private unnamed_addr constant [37 x i8] c"cannot disable built-in function %qs\00", align 1
@.str.1101 = private unnamed_addr constant [42 x i8] c"pointers are not permitted as case values\00", align 1
@.str.1102 = private unnamed_addr constant [56 x i8] c"range expressions in switch statements are non-standard\00", align 1
@.str.1103 = private unnamed_addr constant [22 x i8] c"empty range specified\00", align 1
@.str.1104 = private unnamed_addr constant [38 x i8] c"duplicate (or overlapping) case value\00", align 1
@.str.1105 = private unnamed_addr constant [47 x i8] c"this is the first entry overlapping that value\00", align 1
@.str.1106 = private unnamed_addr constant [21 x i8] c"duplicate case value\00", align 1
@.str.1107 = private unnamed_addr constant [21 x i8] c"previously used here\00", align 1
@.str.1108 = private unnamed_addr constant [38 x i8] c"multiple default labels in one switch\00", align 1
@.str.1109 = private unnamed_addr constant [32 x i8] c"this is the first default label\00", align 1
@.str.1110 = private unnamed_addr constant [50 x i8] c"case label does not reduce to an integer constant\00", align 1
@.str.1111 = private unnamed_addr constant [53 x i8] c"case label value is less than minimum value for type\00", align 1
@.str.1112 = private unnamed_addr constant [48 x i8] c"case label value exceeds maximum value for type\00", align 1
@.str.1113 = private unnamed_addr constant [65 x i8] c"lower value in case label range less than minimum value for type\00", align 1
@.str.1114 = private unnamed_addr constant [63 x i8] c"upper value in case label range exceeds maximum value for type\00", align 1
@warn_switch = external local_unnamed_addr global i32, align 4
@warn_switch_enum = external local_unnamed_addr global i32, align 4
@warn_switch_default = external local_unnamed_addr global i32, align 4
@.str.1115 = private unnamed_addr constant [28 x i8] c"switch missing default case\00", align 1
@.str.1116 = private unnamed_addr constant [44 x i8] c"enumeration value %qE not handled in switch\00", align 1
@.str.1117 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.1118 = private unnamed_addr constant [5 x i8] c"-%lu\00", align 1
@.str.1119 = private unnamed_addr constant [12 x i8] c"0x%lx%016lx\00", align 1
@.str.1120 = private unnamed_addr constant [38 x i8] c"case value %qs not in enumerated type\00", align 1
@.str.1121 = private unnamed_addr constant [42 x i8] c"case value %qs not in enumerated type %qT\00", align 1
@.str.1122 = private unnamed_addr constant [46 x i8] c"taking the address of a label is non-standard\00", align 1
@.str.1123 = private unnamed_addr constant [14 x i8] c"__SIZE_TYPE__\00", align 1
@.str.1124 = private unnamed_addr constant [17 x i8] c"__PTRDIFF_TYPE__\00", align 1
@.str.1125 = private unnamed_addr constant [15 x i8] c"__WCHAR_TYPE__\00", align 1
@.str.1126 = private unnamed_addr constant [14 x i8] c"__WINT_TYPE__\00", align 1
@.str.1127 = private unnamed_addr constant [16 x i8] c"__INTMAX_TYPE__\00", align 1
@.str.1128 = private unnamed_addr constant [17 x i8] c"__UINTMAX_TYPE__\00", align 1
@.str.1129 = private unnamed_addr constant [16 x i8] c"__CHAR16_TYPE__\00", align 1
@.str.1130 = private unnamed_addr constant [16 x i8] c"__CHAR32_TYPE__\00", align 1
@.str.1131 = private unnamed_addr constant [20 x i8] c"__SIG_ATOMIC_TYPE__\00", align 1
@.str.1132 = private unnamed_addr constant [14 x i8] c"__INT8_TYPE__\00", align 1
@.str.1133 = private unnamed_addr constant [15 x i8] c"__INT16_TYPE__\00", align 1
@.str.1134 = private unnamed_addr constant [15 x i8] c"__INT32_TYPE__\00", align 1
@.str.1135 = private unnamed_addr constant [15 x i8] c"__INT64_TYPE__\00", align 1
@.str.1136 = private unnamed_addr constant [15 x i8] c"__UINT8_TYPE__\00", align 1
@.str.1137 = private unnamed_addr constant [16 x i8] c"__UINT16_TYPE__\00", align 1
@.str.1138 = private unnamed_addr constant [16 x i8] c"__UINT32_TYPE__\00", align 1
@.str.1139 = private unnamed_addr constant [16 x i8] c"__UINT64_TYPE__\00", align 1
@.str.1140 = private unnamed_addr constant [20 x i8] c"__INT_LEAST8_TYPE__\00", align 1
@.str.1141 = private unnamed_addr constant [21 x i8] c"__INT_LEAST16_TYPE__\00", align 1
@.str.1142 = private unnamed_addr constant [21 x i8] c"__INT_LEAST32_TYPE__\00", align 1
@.str.1143 = private unnamed_addr constant [21 x i8] c"__INT_LEAST64_TYPE__\00", align 1
@.str.1144 = private unnamed_addr constant [21 x i8] c"__UINT_LEAST8_TYPE__\00", align 1
@.str.1145 = private unnamed_addr constant [22 x i8] c"__UINT_LEAST16_TYPE__\00", align 1
@.str.1146 = private unnamed_addr constant [22 x i8] c"__UINT_LEAST32_TYPE__\00", align 1
@.str.1147 = private unnamed_addr constant [22 x i8] c"__UINT_LEAST64_TYPE__\00", align 1
@.str.1148 = private unnamed_addr constant [19 x i8] c"__INT_FAST8_TYPE__\00", align 1
@.str.1149 = private unnamed_addr constant [20 x i8] c"__INT_FAST16_TYPE__\00", align 1
@.str.1150 = private unnamed_addr constant [20 x i8] c"__INT_FAST32_TYPE__\00", align 1
@.str.1151 = private unnamed_addr constant [20 x i8] c"__INT_FAST64_TYPE__\00", align 1
@.str.1152 = private unnamed_addr constant [20 x i8] c"__UINT_FAST8_TYPE__\00", align 1
@.str.1153 = private unnamed_addr constant [21 x i8] c"__UINT_FAST16_TYPE__\00", align 1
@.str.1154 = private unnamed_addr constant [21 x i8] c"__UINT_FAST32_TYPE__\00", align 1
@.str.1155 = private unnamed_addr constant [21 x i8] c"__UINT_FAST64_TYPE__\00", align 1
@.str.1156 = private unnamed_addr constant [16 x i8] c"__INTPTR_TYPE__\00", align 1
@.str.1157 = private unnamed_addr constant [17 x i8] c"__UINTPTR_TYPE__\00", align 1
@visibility_options = external local_unnamed_addr global %struct.visibility_flags, align 4
@default_visibility = external local_unnamed_addr global i32, align 4
@tree_contains_struct = external local_unnamed_addr global [191 x [64 x i8]], align 16
@optimize_args = internal global ptr null, align 8
@.str.1158 = private unnamed_addr constant [6 x i8] c"-O%ld\00", align 1
@libiberty_optr = external local_unnamed_addr global ptr, align 8
@libiberty_len = external local_unnamed_addr global i64, align 8
@libiberty_nptr = external local_unnamed_addr global ptr, align 8
@.str.1159 = private unnamed_addr constant [37 x i8] c"Bad option %s to optimize attribute.\00", align 1
@.str.1160 = private unnamed_addr constant [34 x i8] c"Bad option %s to pragma attribute\00", align 1
@warn_nonnull = external local_unnamed_addr global i32, align 4
@warn_missing_format_attribute = external local_unnamed_addr global i32, align 4
@.str.1161 = private unnamed_addr constant [53 x i8] c"null argument where non-null required (argument %lu)\00", align 1
@.str.1162 = private unnamed_addr constant [48 x i8] c"not enough variable arguments to fit a sentinel\00", align 1
@.str.1163 = private unnamed_addr constant [34 x i8] c"missing sentinel in function call\00", align 1
@.str.1164 = private unnamed_addr constant [52 x i8] c"non-floating-point argument in call to function %qE\00", align 1
@.str.1165 = private unnamed_addr constant [53 x i8] c"non-floating-point arguments in call to function %qE\00", align 1
@.str.1166 = private unnamed_addr constant [54 x i8] c"non-const integer argument %u in call to function %qE\00", align 1
@.str.1167 = private unnamed_addr constant [37 x i8] c"not enough arguments to function %qE\00", align 1
@.str.1168 = private unnamed_addr constant [35 x i8] c"too many arguments to function %qE\00", align 1
@resort_data.0 = internal unnamed_addr global ptr null, align 8
@resort_data.1 = internal unnamed_addr global ptr null, align 8
@.str.1169 = private unnamed_addr constant [17 x i8] c" at end of input\00", align 1
@.str.1170 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.1171 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.1172 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@_sch_istable = external local_unnamed_addr constant [256 x i16], align 16
@.str.1173 = private unnamed_addr constant [15 x i8] c" before %s'%c'\00", align 1
@.str.1174 = private unnamed_addr constant [17 x i8] c" before %s'\\x%x'\00", align 1
@.str.1175 = private unnamed_addr constant [24 x i8] c" before string constant\00", align 1
@.str.1176 = private unnamed_addr constant [25 x i8] c" before numeric constant\00", align 1
@.str.1177 = private unnamed_addr constant [12 x i8] c" before %qE\00", align 1
@.str.1178 = private unnamed_addr constant [20 x i8] c" before %<#pragma%>\00", align 1
@.str.1179 = private unnamed_addr constant [20 x i8] c" before end of line\00", align 1
@.str.1180 = private unnamed_addr constant [18 x i8] c" before %qs token\00", align 1
@warn_system_headers = external local_unnamed_addr global i32, align 4
@flag_pedantic_errors = external local_unnamed_addr global i32, align 4
@global_dc = external local_unnamed_addr global ptr, align 8
@flag_signed_char = external local_unnamed_addr global i32, align 4
@.str.1181 = private unnamed_addr constant [52 x i8] c"cannot apply %<offsetof%> to static data member %qD\00", align 1
@.str.1182 = private unnamed_addr constant [60 x i8] c"cannot apply %<offsetof%> when %<operator[]%> is overloaded\00", align 1
@.str.1183 = private unnamed_addr constant [52 x i8] c"cannot apply %<offsetof%> to a non constant address\00", align 1
@.str.1184 = private unnamed_addr constant [58 x i8] c"attempt to take address of bit-field structure member %qD\00", align 1
@.str.1185 = private unnamed_addr constant [52 x i8] c"index %E denotes an offset greater than size of %qT\00", align 1
@.str.1186 = private unnamed_addr constant [46 x i8] c"lvalue required as left operand of assignment\00", align 1
@.str.1187 = private unnamed_addr constant [37 x i8] c"lvalue required as increment operand\00", align 1
@.str.1188 = private unnamed_addr constant [37 x i8] c"lvalue required as decrement operand\00", align 1
@.str.1189 = private unnamed_addr constant [39 x i8] c"lvalue required as unary %<&%> operand\00", align 1
@.str.1190 = private unnamed_addr constant [33 x i8] c"lvalue required in asm statement\00", align 1
@.str.1191 = private unnamed_addr constant [27 x i8] c"size of array is too large\00", align 1
@.str.1192 = private unnamed_addr constant [34 x i8] c"too few arguments to function %qE\00", align 1
@.str.1193 = private unnamed_addr constant [41 x i8] c"incompatible type for argument %d of %qE\00", align 1
@.str.1194 = private unnamed_addr constant [34 x i8] c"array subscript has type %<char%>\00", align 1
@.str.1195 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<+%> inside %<<<%>\00", align 1
@.str.1196 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<-%> inside %<<<%>\00", align 1
@.str.1197 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<+%> inside %<>>%>\00", align 1
@.str.1198 = private unnamed_addr constant [47 x i8] c"suggest parentheses around %<-%> inside %<>>%>\00", align 1
@.str.1199 = private unnamed_addr constant [48 x i8] c"suggest parentheses around %<&&%> within %<||%>\00", align 1
@.str.1200 = private unnamed_addr constant [58 x i8] c"suggest parentheses around arithmetic in operand of %<|%>\00", align 1
@.str.1201 = private unnamed_addr constant [58 x i8] c"suggest parentheses around comparison in operand of %<|%>\00", align 1
@.str.1202 = private unnamed_addr constant [88 x i8] c"suggest parentheses around operand of %<!%> or change %<|%> to %<||%> or %<!%> to %<~%>\00", align 1
@.str.1203 = private unnamed_addr constant [58 x i8] c"suggest parentheses around arithmetic in operand of %<^%>\00", align 1
@.str.1204 = private unnamed_addr constant [58 x i8] c"suggest parentheses around comparison in operand of %<^%>\00", align 1
@.str.1205 = private unnamed_addr constant [53 x i8] c"suggest parentheses around %<+%> in operand of %<&%>\00", align 1
@.str.1206 = private unnamed_addr constant [53 x i8] c"suggest parentheses around %<-%> in operand of %<&%>\00", align 1
@.str.1207 = private unnamed_addr constant [58 x i8] c"suggest parentheses around comparison in operand of %<&%>\00", align 1
@.str.1208 = private unnamed_addr constant [88 x i8] c"suggest parentheses around operand of %<!%> or change %<&%> to %<&&%> or %<!%> to %<~%>\00", align 1
@.str.1209 = private unnamed_addr constant [59 x i8] c"suggest parentheses around comparison in operand of %<==%>\00", align 1
@.str.1210 = private unnamed_addr constant [59 x i8] c"suggest parentheses around comparison in operand of %<!=%>\00", align 1
@.str.1211 = private unnamed_addr constant [68 x i8] c"comparisons like %<X<=Y<=Z%> do not have their mathematical meaning\00", align 1
@.str.1212 = private unnamed_addr constant [32 x i8] c"label %q+D defined but not used\00", align 1
@.str.1213 = private unnamed_addr constant [36 x i8] c"label %q+D declared but not defined\00", align 1
@targetcm = dso_local local_unnamed_addr global %struct.gcc_targetcm { ptr @default_handle_c_option }, align 8
@.str.1214 = private unnamed_addr constant [17 x i8] c"division by zero\00", align 1
@.str.1215 = private unnamed_addr constant [37 x i8] c"comparison between types %qT and %qT\00", align 1
@.str.1216 = private unnamed_addr constant [59 x i8] c"comparison between signed and unsigned integer expressions\00", align 1
@.str.1217 = private unnamed_addr constant [38 x i8] c"promoted ~unsigned is always non-zero\00", align 1
@.str.1218 = private unnamed_addr constant [47 x i8] c"comparison of promoted ~unsigned with constant\00", align 1
@.str.1219 = private unnamed_addr constant [47 x i8] c"comparison of promoted ~unsigned with unsigned\00", align 1
@types_used_by_cur_var_decl = external local_unnamed_addr global ptr, align 8
@tree_vector_cache = internal global ptr null, align 8
@gt_ggc_r_gt_c_common_h = dso_local local_unnamed_addr constant [7 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @c_global_trees, i64 55, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @ridpointers, i64 1, i64 8, ptr @gt_ggc_ma_ridpointers, ptr @gt_pch_na_ridpointers }, %struct.ggc_root_tab { ptr @optimize_args, i64 1, i64 8, ptr @gt_ggc_mx_VEC_const_char_p_gc, ptr @gt_pch_nx_VEC_const_char_p_gc }, %struct.ggc_root_tab { ptr @built_in_attributes, i64 107, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @type_hash_table, i64 1, i64 8, ptr @gt_ggc_m_P9tree_node4htab, ptr @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab { ptr @registered_builtin_types, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16
@gt_ggc_rd_gt_c_common_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @tree_vector_cache, i64 1, i64 8, ptr null, ptr null }, %struct.ggc_root_tab zeroinitializer], align 16
@gt_pch_rs_gt_c_common_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @pending_lang_change, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab { ptr @compound_literal_number, i64 1, i64 4, ptr null, ptr null }, %struct.ggc_root_tab zeroinitializer], align 16
@pending_lang_change = external global i32, align 4
@reltable.binary_op_error = private unnamed_addr constant [40 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.308 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.309 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.321 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.321 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.320 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.320 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.311 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.310 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.318 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.319 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.323 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.326 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.322 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.324 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.325 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.307 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.316 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.314 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.317 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.315 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.312 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.313 to i64), i64 ptrtoint (ptr @reltable.binary_op_error to i64)) to i32)], align 4
@switch.table.shorten_compare = private unnamed_addr constant [4 x i32] [i32 99, i32 100, i32 97, i32 98], align 4
@reltable.c_parse_error = private unnamed_addr constant [3 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.1170 to i64), i64 ptrtoint (ptr @reltable.c_parse_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.1171 to i64), i64 ptrtoint (ptr @reltable.c_parse_error to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.1172 to i64), i64 ptrtoint (ptr @reltable.c_parse_error to i64)) to i32)], align 4

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @vprintf(ptr noalias nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = load ptr, ptr @stdout, align 8, !tbaa !6
  %4 = tail call i32 @vfprintf(ptr noundef %3, ptr noundef %0, ptr noundef %1)
  ret i32 %4
}

; Function Attrs: nofree nounwind
declare noundef i32 @vfprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !6
  %2 = tail call i32 @getc(ptr noundef %1)
  ret i32 %2
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fgetc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #22
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

declare i32 @__uflow(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #22
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #2 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !16

7:                                                ; preds = %0
  %8 = tail call i32 @__uflow(ptr noundef nonnull %1) #22
  br label %13

9:                                                ; preds = %0
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !10
  %11 = load i8, ptr %3, align 1, !tbaa !17
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @putchar(i32 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !6
  %3 = tail call i32 @putc(i32 noundef %0, ptr noundef %2)
  ret i32 %3
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fputc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #22
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

declare i32 @__overflow(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #22
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putchar_unlocked(i32 noundef %0) local_unnamed_addr #2 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !19
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !16

8:                                                ; preds = %1
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %2, i32 noundef %9) #22
  br label %15

11:                                               ; preds = %1
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !18
  store i8 %12, ptr %4, align 1, !tbaa !17
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @getline(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #2 {
  %4 = tail call i64 @__getdelim(ptr noundef %0, ptr noundef %1, i32 noundef 10, ptr noundef %2) #22
  ret i64 %4
}

declare i64 @__getdelim(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @feof_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = lshr i32 %2, 4
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ferror_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = lshr i32 %2, 5
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @tolower(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_tolower_loc() #22
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !21
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_tolower_loc() local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @toupper(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_toupper_loc() #22
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !21
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_toupper_loc() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @atoi(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #22
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

declare i64 @__isoc23_strtol(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atol(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #22
  ret i64 %2
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atoll(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtoll(ptr noundef %0, ptr noundef null, i32 noundef 10) #22
  ret i64 %2
}

declare i64 @__isoc23_strtoll(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local ptr @bsearch(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, ptr nocapture noundef readonly %4) local_unnamed_addr #2 {
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %5, %20
  %8 = phi i64 [ %22, %20 ], [ 0, %5 ]
  %9 = phi i64 [ %21, %20 ], [ %2, %5 ]
  %10 = add i64 %8, %9
  %11 = lshr i64 %10, 1
  %12 = mul i64 %11, %3
  %13 = getelementptr inbounds i8, ptr %1, i64 %12
  %14 = tail call i32 %4(ptr noundef %0, ptr noundef %13) #22
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 1
  br label %20

20:                                               ; preds = %7, %18
  %21 = phi i64 [ %9, %18 ], [ %11, %7 ]
  %22 = phi i64 [ %19, %18 ], [ %8, %7 ]
  %23 = icmp ult i64 %22, %21
  br i1 %23, label %7, label %24, !llvm.loop !22

24:                                               ; preds = %16, %20, %5
  %25 = phi ptr [ null, %5 ], [ null, %20 ], [ %13, %16 ]
  ret ptr %25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable
define dso_local nofpclass(nan inf) double @atof(ptr nocapture noundef readonly %0) local_unnamed_addr #7 {
  %2 = tail call fast nofpclass(nan inf) double @strtod(ptr nocapture noundef %0, ptr noundef null)
  ret double %2
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare nofpclass(nan inf) double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_packed_attribute(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture readnone %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %8
  %10 = load i32, ptr %9, align 4, !tbaa !17
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %22

12:                                               ; preds = %5
  %13 = and i32 %3, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = tail call ptr @build_variant_type_copy(ptr noundef nonnull %6) #22
  store ptr %16, ptr %0, align 8, !tbaa !6
  %17 = load i64, ptr %16, align 8
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi i64 [ %17, %15 ], [ %7, %12 ]
  %20 = phi ptr [ %16, %15 ], [ %6, %12 ]
  %21 = or i64 %19, 2199023255552
  store i64 %21, ptr %20, align 8
  br label %40

22:                                               ; preds = %5
  %23 = icmp eq i64 %8, 31
  br i1 %23, label %24, label %38

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.tree_type, ptr %26, i64 0, i32 7
  %28 = load i32, ptr %27, align 8, !tbaa !17
  %29 = icmp ult i32 %28, 9
  br i1 %29, label %30, label %36

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 5
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.198, ptr noundef %1, ptr noundef nonnull %26) #22
  br label %40

36:                                               ; preds = %30, %24
  %37 = or i64 %7, 2199023255552
  store i64 %37, ptr %6, align 8
  br label %40

38:                                               ; preds = %22
  %39 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %40

40:                                               ; preds = %38, %36, %34, %18
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_nocommon_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 32
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %6, i64 0, i32 4
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, -9
  store i32 %13, ptr %11, align 8
  br label %16

14:                                               ; preds = %5
  %15 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %16

16:                                               ; preds = %14, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_common_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 32
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %6, i64 0, i32 4
  %12 = load i32, ptr %11, align 8
  %13 = or i32 %12, 8
  store i32 %13, ptr %11, align 8
  br label %16

14:                                               ; preds = %5
  %15 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %16

16:                                               ; preds = %14, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_noreturn_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i64, ptr %6, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 29
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = or i64 %9, 524288
  store i64 %13, ptr %6, align 8
  br label %35

14:                                               ; preds = %5
  %15 = load i64, ptr %8, align 8
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, 10
  br i1 %17, label %18, label %33

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 65535
  %23 = icmp eq i64 %22, 20
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = trunc i64 %21 to i32
  %26 = lshr i32 %25, 20
  %27 = and i32 %26, 1
  %28 = or i32 %27, 2
  %29 = tail call ptr @build_qualified_type(ptr noundef nonnull %20, i32 noundef %28) #22
  %30 = tail call ptr @build_pointer_type(ptr noundef %29) #22
  %31 = load ptr, ptr %0, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.tree_common, ptr %31, i64 0, i32 2
  store ptr %30, ptr %32, align 8, !tbaa !17
  br label %35

33:                                               ; preds = %18, %14
  %34 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %35

35:                                               ; preds = %24, %33, %12
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_noinline_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = or i32 %12, 32768
  store i32 %13, ptr %11, align 8
  br label %16

14:                                               ; preds = %5
  %15 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %16

16:                                               ; preds = %14, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_noclone_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %12

12:                                               ; preds = %10, %5
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_always_inline_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = or i32 %12, 67108864
  store i32 %13, ptr %11, align 8
  br label %16

14:                                               ; preds = %5
  %15 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %16

16:                                               ; preds = %14, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_gnu_inline_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %15

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, 2097152
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10, %5
  %16 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %17

17:                                               ; preds = %10, %15
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_artificial_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %15

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, 2097152
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10, %5
  %16 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %17

17:                                               ; preds = %10, %15
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_flatten_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %12

12:                                               ; preds = %5, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_used_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %17 [
    i16 29, label %12
    i16 32, label %9
  ]

9:                                                ; preds = %5
  %10 = and i64 %7, 67108864
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5, %9
  %13 = or i64 %7, 16777216
  store i64 %13, ptr %6, align 8
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = or i64 %15, 8192
  store i64 %16, ptr %14, align 8
  br label %19

17:                                               ; preds = %5, %9
  %18 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %19

19:                                               ; preds = %17, %12
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_unused_attribute(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture readnone %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %8
  %10 = load i32, ptr %9, align 4, !tbaa !17
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = trunc i64 %7 to i16
  switch i16 %13, label %16 [
    i16 34, label %14
    i16 32, label %14
    i16 29, label %14
    i16 30, label %14
    i16 35, label %14
  ]

14:                                               ; preds = %12, %12, %12, %12, %12
  %15 = or i64 %7, 16777216
  store i64 %15, ptr %6, align 8
  br label %28

16:                                               ; preds = %12
  %17 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %28

18:                                               ; preds = %5
  %19 = and i32 %3, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = tail call ptr @build_variant_type_copy(ptr noundef nonnull %6) #22
  store ptr %22, ptr %0, align 8, !tbaa !6
  %23 = load i64, ptr %22, align 8
  br label %24

24:                                               ; preds = %21, %18
  %25 = phi i64 [ %23, %21 ], [ %7, %18 ]
  %26 = phi ptr [ %22, %21 ], [ %6, %18 ]
  %27 = or i64 %25, 16777216
  store i64 %27, ptr %26, align 8
  br label %28

28:                                               ; preds = %14, %16, %24
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_externally_visible_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %26 [
    i16 29, label %9
    i16 32, label %9
  ]

9:                                                ; preds = %5, %5
  %10 = and i64 %7, 67108864
  %11 = icmp ne i64 %10, 0
  %12 = and i64 %7, 65535
  %13 = icmp eq i64 %12, 29
  %14 = or i1 %11, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 33554432
  %19 = icmp eq i64 %18, 0
  %20 = and i64 %7, 134217728
  %21 = icmp eq i64 %20, 0
  %22 = or i1 %21, %19
  br i1 %22, label %26, label %29

23:                                               ; preds = %9
  %24 = and i64 %7, 134217728
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %5, %15, %23
  %27 = phi ptr [ @.str.200, %23 ], [ @.str.200, %15 ], [ @.str.199, %5 ]
  %28 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull %27, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %29

29:                                               ; preds = %26, %15, %23
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_const_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i64, ptr %6, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 29
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = or i64 %9, 1048576
  store i64 %13, ptr %6, align 8
  br label %35

14:                                               ; preds = %5
  %15 = load i64, ptr %8, align 8
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, 10
  br i1 %17, label %18, label %33

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 65535
  %23 = icmp eq i64 %22, 20
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = trunc i64 %21 to i32
  %26 = lshr i32 %25, 18
  %27 = and i32 %26, 2
  %28 = or i32 %27, 1
  %29 = tail call ptr @build_qualified_type(ptr noundef nonnull %20, i32 noundef %28) #22
  %30 = tail call ptr @build_pointer_type(ptr noundef %29) #22
  %31 = load ptr, ptr %0, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.tree_common, ptr %31, i64 0, i32 2
  store ptr %30, ptr %32, align 8, !tbaa !17
  br label %35

33:                                               ; preds = %18, %14
  %34 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %35

35:                                               ; preds = %24, %33, %12
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_transparent_union_attribute(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture readnone %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  store i8 1, ptr %4, align 1, !tbaa !17
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 35
  %10 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %11 = select i1 %9, ptr %10, ptr %0
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 17
  br i1 %15, label %16, label %40

16:                                               ; preds = %5
  %17 = and i32 %3, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %35

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = lshr i32 %25, 16
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %21, i64 0, i32 2
  %28 = load i64, ptr %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %26, %29
  %31 = and i32 %30, 255
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %23
  %34 = tail call ptr @build_duplicate_type(ptr noundef nonnull %12) #22
  store ptr %34, ptr %11, align 8, !tbaa !6
  br label %35

35:                                               ; preds = %33, %16
  %36 = phi ptr [ %12, %16 ], [ %34, %33 ]
  %37 = getelementptr inbounds %struct.tree_type, ptr %36, i64 0, i32 6
  %38 = load i32, ptr %37, align 4
  %39 = or i32 %38, 4096
  store i32 %39, ptr %37, align 4
  br label %42

40:                                               ; preds = %5, %19, %23
  %41 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %42

42:                                               ; preds = %40, %35
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_constructor_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %16, label %52

16:                                               ; preds = %10
  %17 = tail call ptr @decl_function_context(ptr noundef nonnull %6) #22
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %52

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = or i32 %21, 8192
  store i32 %22, ptr %20, align 8
  %23 = icmp eq ptr %2, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = tail call i32 @host_integerp(ptr noundef %26, i32 noundef 0) #22
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.tree_common, ptr %26, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = load i64, ptr %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = and i32 %33, 65535
  %35 = add nsw i32 %34, -6
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %47

37:                                               ; preds = %29
  %38 = load ptr, ptr %25, align 8, !tbaa !17
  %39 = tail call i64 @tree_low_cst(ptr noundef %38, i32 noundef 0) #22
  %40 = icmp ugt i64 %39, 65535
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = icmp ult i64 %39, 101
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.202, i32 noundef 100) #22
  br label %45

45:                                               ; preds = %43, %41
  %46 = trunc i64 %39 to i16
  br label %48

47:                                               ; preds = %37, %29, %24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.204, i32 noundef 65535) #22
  br label %48

48:                                               ; preds = %19, %45, %47
  %49 = phi i16 [ %46, %45 ], [ -1, %19 ], [ -1, %47 ]
  tail call void @decl_init_priority_insert(ptr noundef nonnull %6, i16 noundef zeroext %49) #22
  %50 = load i64, ptr %6, align 8
  %51 = or i64 %50, 16777216
  store i64 %51, ptr %6, align 8
  br label %54

52:                                               ; preds = %16, %10, %5
  %53 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %54

54:                                               ; preds = %52, %48
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_destructor_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %16, label %52

16:                                               ; preds = %10
  %17 = tail call ptr @decl_function_context(ptr noundef nonnull %6) #22
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %52

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = or i32 %21, 16384
  store i32 %22, ptr %20, align 8
  %23 = icmp eq ptr %2, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = tail call i32 @host_integerp(ptr noundef %26, i32 noundef 0) #22
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.tree_common, ptr %26, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = load i64, ptr %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = and i32 %33, 65535
  %35 = add nsw i32 %34, -6
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %47

37:                                               ; preds = %29
  %38 = load ptr, ptr %25, align 8, !tbaa !17
  %39 = tail call i64 @tree_low_cst(ptr noundef %38, i32 noundef 0) #22
  %40 = icmp ugt i64 %39, 65535
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = icmp ult i64 %39, 101
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.201, i32 noundef 100) #22
  br label %45

45:                                               ; preds = %43, %41
  %46 = trunc i64 %39 to i16
  br label %48

47:                                               ; preds = %37, %29, %24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.203, i32 noundef 65535) #22
  br label %48

48:                                               ; preds = %19, %45, %47
  %49 = phi i16 [ %46, %45 ], [ -1, %19 ], [ -1, %47 ]
  tail call void @decl_fini_priority_insert(ptr noundef nonnull %6, i16 noundef zeroext %49) #22
  %50 = load i64, ptr %6, align 8
  %51 = or i64 %50, 16777216
  store i64 %51, ptr %6, align 8
  br label %54

52:                                               ; preds = %16, %10, %5
  %53 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %54

54:                                               ; preds = %52, %48
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal ptr @handle_mode_attribute(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  store i8 1, ptr %4, align 1, !tbaa !17
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %212

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.tree_identifier, ptr %8, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %16)
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %18, 4
  br i1 %19, label %20, label %46

20:                                               ; preds = %14
  %21 = load i8, ptr %16, align 1, !tbaa !17
  %22 = icmp eq i8 %21, 95
  br i1 %22, label %23, label %46

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, ptr %16, i64 1
  %25 = load i8, ptr %24, align 1, !tbaa !17
  %26 = icmp eq i8 %25, 95
  br i1 %26, label %27, label %46

27:                                               ; preds = %23
  %28 = add i64 %17, 4294967295
  %29 = and i64 %28, 4294967295
  %30 = getelementptr inbounds i8, ptr %16, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !17
  %32 = icmp eq i8 %31, 95
  br i1 %32, label %33, label %46

33:                                               ; preds = %27
  %34 = add i64 %17, 4294967294
  %35 = and i64 %34, 4294967295
  %36 = getelementptr inbounds i8, ptr %16, i64 %35
  %37 = load i8, ptr %36, align 1, !tbaa !17
  %38 = icmp eq i8 %37, 95
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = alloca i8, i64 %29, align 16
  %41 = getelementptr inbounds i8, ptr %16, i64 2
  %42 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %40, ptr noundef nonnull dereferenceable(1) %41)
  %43 = add i64 %17, 4294967292
  %44 = and i64 %43, 4294967295
  %45 = getelementptr inbounds i8, ptr %40, i64 %44
  store i8 0, ptr %45, align 1, !tbaa !17
  br label %46

46:                                               ; preds = %39, %33, %27, %23, %20, %14
  %47 = phi ptr [ %40, %39 ], [ %16, %33 ], [ %16, %27 ], [ %16, %23 ], [ %16, %20 ], [ %16, %14 ]
  %48 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %47, ptr noundef nonnull dereferenceable(5) @.str.205)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = load i32, ptr @byte_mode, align 4, !tbaa !17
  br label %91

52:                                               ; preds = %46
  %53 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %47, ptr noundef nonnull dereferenceable(5) @.str.206)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i32, ptr @word_mode, align 4, !tbaa !17
  br label %91

57:                                               ; preds = %52
  %58 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %47, ptr noundef nonnull dereferenceable(8) @.str.207)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = load i32, ptr @ptr_mode, align 4, !tbaa !17
  br label %91

62:                                               ; preds = %57
  %63 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %47, ptr noundef nonnull dereferenceable(18) @.str.208)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 8), align 8, !tbaa !24
  %67 = call i32 %66() #22
  br label %91

68:                                               ; preds = %62
  %69 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %47, ptr noundef nonnull dereferenceable(19) @.str.209)
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 9), align 8, !tbaa !36
  %73 = call i32 %72() #22
  br label %91

74:                                               ; preds = %68
  %75 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %47, ptr noundef nonnull dereferenceable(12) @.str.210)
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 10), align 8, !tbaa !37
  %79 = call i32 %78() #22
  br label %91

80:                                               ; preds = %74, %86
  %81 = phi i64 [ %87, %86 ], [ 0, %74 ]
  %82 = getelementptr inbounds [87 x ptr], ptr @mode_name, i64 0, i64 %81
  %83 = load ptr, ptr %82, align 8, !tbaa !6
  %84 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %47, ptr noundef nonnull dereferenceable(1) %83)
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %80
  %87 = add nuw nsw i64 %81, 1
  %88 = icmp eq i64 %87, 87
  br i1 %88, label %94, label %80, !llvm.loop !38

89:                                               ; preds = %80
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %89, %55, %65, %77, %71, %60, %50
  %92 = phi i32 [ %79, %77 ], [ %73, %71 ], [ %67, %65 ], [ %61, %60 ], [ %56, %55 ], [ %51, %50 ], [ %90, %89 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %86, %91
  call void (ptr, ...) @error(ptr noundef nonnull @.str.211, ptr noundef nonnull %8) #22
  br label %212

95:                                               ; preds = %91
  %96 = zext i32 %92 to i64
  %97 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %96
  %98 = load i8, ptr %97, align 1, !tbaa !17
  switch i8 %98, label %116 [
    i8 2, label %99
    i8 3, label %99
    i8 8, label %99
    i8 9, label %99
    i8 4, label %99
    i8 5, label %99
    i8 6, label %99
    i8 7, label %99
    i8 10, label %102
    i8 11, label %102
    i8 12, label %108
    i8 17, label %108
    i8 13, label %108
    i8 14, label %108
    i8 15, label %108
    i8 16, label %108
  ]

99:                                               ; preds = %95, %95, %95, %95, %95, %95, %95, %95
  %100 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %101 = call zeroext i8 %100(i32 noundef %92) #22
  br label %113

102:                                              ; preds = %95, %95
  %103 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %104 = getelementptr inbounds [87 x i8], ptr @mode_inner, i64 0, i64 %96
  %105 = load i8, ptr %104, align 1, !tbaa !17
  %106 = zext i8 %105 to i32
  %107 = call zeroext i8 %103(i32 noundef %106) #22
  br label %113

108:                                              ; preds = %95, %95, %95, %95, %95, %95
  %109 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.212) #22
  %110 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.213) #22
  %111 = call i32 @vector_mode_valid_p(i32 noundef %92) #22
  %112 = trunc i32 %111 to i8
  br label %113

113:                                              ; preds = %108, %102, %99
  %114 = phi i8 [ %112, %108 ], [ %107, %102 ], [ %101, %99 ]
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %95, %113
  call void (ptr, ...) @error(ptr noundef nonnull @.str.214, ptr noundef %47) #22
  br label %212

117:                                              ; preds = %113
  %118 = load i64, ptr %6, align 8
  %119 = trunc i64 %118 to i32
  %120 = trunc i64 %118 to i16
  switch i16 %120, label %138 [
    i16 10, label %121
    i16 12, label %121
  ]

121:                                              ; preds = %117, %117
  %122 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = load i64, ptr %123, align 8
  %125 = lshr i64 %124, 56
  %126 = trunc i64 %125 to i8
  %127 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 2), align 8, !tbaa !40
  %128 = call zeroext i8 %127(i32 noundef %92, i8 noundef zeroext %126) #22
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %121
  call void (ptr, ...) @error(ptr noundef nonnull @.str.215, ptr noundef %47) #22
  br label %212

131:                                              ; preds = %121
  %132 = load i64, ptr %6, align 8
  %133 = and i64 %132, 65535
  %134 = icmp eq i64 %133, 10
  %135 = select i1 %134, ptr @build_pointer_type_for_mode, ptr @build_reference_type_for_mode
  %136 = load ptr, ptr %122, align 8, !tbaa !17
  %137 = call ptr %135(ptr noundef %136, i32 noundef %92, i8 noundef zeroext 0) #22, !callees !41
  br label %156

138:                                              ; preds = %117
  switch i8 %98, label %146 [
    i8 5, label %139
    i8 14, label %139
    i8 7, label %139
    i8 16, label %139
    i8 4, label %142
    i8 6, label %142
    i8 13, label %142
    i8 15, label %142
  ]

139:                                              ; preds = %138, %138, %138, %138
  %140 = and i64 %118, 2097152
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %145, label %146

142:                                              ; preds = %138, %138, %138, %138
  %143 = and i64 %118, 2097152
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %139, %142
  call void (ptr, ...) @error(ptr noundef nonnull @.str.216, ptr noundef %47) #22
  br label %212

146:                                              ; preds = %138, %139, %142
  %147 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 2), align 8, !tbaa !42
  switch i8 %98, label %150 [
    i8 4, label %148
    i8 13, label %148
    i8 6, label %148
    i8 15, label %148
    i8 5, label %148
    i8 14, label %148
    i8 7, label %148
    i8 16, label %148
  ]

148:                                              ; preds = %146, %146, %146, %146, %146, %146, %146, %146
  %149 = lshr i32 %119, 31
  br label %153

150:                                              ; preds = %146
  %151 = lshr i32 %119, 21
  %152 = and i32 %151, 1
  br label %153

153:                                              ; preds = %150, %148
  %154 = phi i32 [ %149, %148 ], [ %152, %150 ]
  %155 = call ptr %147(i32 noundef %92, i32 noundef %154) #22
  br label %156

156:                                              ; preds = %131, %153
  %157 = phi ptr [ %137, %131 ], [ %155, %153 ]
  %158 = icmp eq ptr %157, null
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void (ptr, ...) @error(ptr noundef nonnull @.str.217, ptr noundef %47) #22
  br label %212

160:                                              ; preds = %156
  %161 = load i64, ptr %6, align 8
  %162 = trunc i64 %161 to i32
  %163 = and i32 %162, 65535
  %164 = icmp eq i32 %163, 6
  br i1 %164, label %165, label %194

165:                                              ; preds = %160
  %166 = load i64, ptr %157, align 8
  %167 = and i64 %166, 65535
  %168 = icmp eq i64 %167, 8
  br i1 %168, label %170, label %169

169:                                              ; preds = %165
  call void (ptr, ...) @error(ptr noundef nonnull @.str.218, ptr noundef %47) #22
  br label %212

170:                                              ; preds = %165
  %171 = and i32 %3, 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %181, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.tree_type, ptr %157, i64 0, i32 6
  %175 = load i32, ptr %174, align 4
  %176 = and i32 %175, 1023
  %177 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 6
  %178 = load i32, ptr %177, align 4
  %179 = and i32 %178, -1024
  %180 = or i32 %179, %176
  store i32 %180, ptr %177, align 4
  br label %210

181:                                              ; preds = %170
  %182 = and i64 %161, 2097152
  %183 = icmp eq i64 %182, 0
  %184 = getelementptr inbounds %struct.tree_type, ptr %157, i64 0, i32 6
  %185 = load i32, ptr %184, align 4
  %186 = and i32 %185, 1023
  br i1 %183, label %189, label %187

187:                                              ; preds = %181
  %188 = call ptr @make_unsigned_type(i32 noundef %186) #22
  br label %191

189:                                              ; preds = %181
  %190 = call ptr @make_signed_type(i32 noundef %186) #22
  br label %191

191:                                              ; preds = %189, %187
  %192 = phi ptr [ %188, %187 ], [ %190, %189 ]
  %193 = getelementptr inbounds %struct.tree_common, ptr %192, i64 0, i32 2
  store ptr %6, ptr %193, align 8, !tbaa !17
  br label %210

194:                                              ; preds = %160
  %195 = add nsw i8 %98, -12
  %196 = icmp ult i8 %195, 6
  br i1 %196, label %197, label %204

197:                                              ; preds = %194
  %198 = getelementptr inbounds %struct.tree_common, ptr %157, i64 0, i32 2
  %199 = load ptr, ptr %198, align 8, !tbaa !17
  %200 = load i64, ptr %199, align 8
  %201 = xor i64 %200, %161
  %202 = and i64 %201, 65535
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %210, label %209

204:                                              ; preds = %194
  %205 = load i64, ptr %157, align 8
  %206 = trunc i64 %205 to i32
  %207 = and i32 %206, 65535
  %208 = icmp eq i32 %163, %207
  br i1 %208, label %210, label %209

209:                                              ; preds = %204, %197
  call void (ptr, ...) @error(ptr noundef nonnull @.str.219, ptr noundef %47) #22
  br label %212

210:                                              ; preds = %191, %173, %204, %197
  %211 = phi ptr [ %6, %173 ], [ %192, %191 ], [ %157, %197 ], [ %157, %204 ]
  store ptr %211, ptr %0, align 8, !tbaa !6
  br label %212

212:                                              ; preds = %130, %94, %159, %169, %209, %145, %116, %12, %210
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_section_attribute(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 110), align 1, !tbaa !50
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %5
  store i8 1, ptr @user_defined_section_attribute, align 1, !tbaa !17
  %10 = load i64, ptr %6, align 8
  %11 = trunc i64 %10 to i16
  switch i16 %11, label %55 [
    i16 29, label %12
    i16 32, label %12
  ]

12:                                               ; preds = %9, %9
  %13 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, 28
  br i1 %17, label %18, label %55

18:                                               ; preds = %12
  %19 = and i64 %10, 65535
  %20 = icmp eq i64 %19, 32
  %21 = load ptr, ptr @current_function_decl, align 8
  %22 = icmp ne ptr %21, null
  %23 = and i64 %10, 67174399
  %24 = icmp eq i64 %23, 32
  %25 = select i1 %24, i1 %22, i1 false
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %28, ptr noundef nonnull @.str.220) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %60

29:                                               ; preds = %18
  %30 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %6, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = icmp eq ptr %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.tree_string, ptr %31, i64 0, i32 2
  %35 = getelementptr inbounds %struct.tree_string, ptr %14, i64 0, i32 2
  %36 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %34, ptr noundef nonnull dereferenceable(1) %35)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = load ptr, ptr %0, align 8, !tbaa !6
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.221, ptr noundef %39) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %60

40:                                               ; preds = %33, %29
  %41 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 113), align 4
  %42 = icmp eq i8 %41, 0
  %43 = select i1 %20, i1 %42, i1 false
  %44 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 106, i32 3), align 8
  %45 = icmp ne ptr %44, null
  %46 = select i1 %43, i1 %45, i1 false
  br i1 %46, label %47, label %54

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %6, i64 0, i32 4
  %49 = load i32, ptr %48, align 8
  %50 = and i32 %49, 49152
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = load ptr, ptr %0, align 8, !tbaa !6
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.222, ptr noundef %53) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %60

54:                                               ; preds = %47, %40
  store ptr %14, ptr %30, align 8, !tbaa !17
  br label %60

55:                                               ; preds = %9, %12
  %56 = load ptr, ptr %0, align 8, !tbaa !6
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.223, ptr noundef %56) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %60

57:                                               ; preds = %5
  %58 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 1
  %59 = load i32, ptr %58, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %59, ptr noundef nonnull @.str.224) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %60

60:                                               ; preds = %55, %38, %54, %52, %26, %57
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_aligned_attribute(ptr nocapture noundef %0, ptr nocapture readnone %1, ptr noundef readonly %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = icmp eq ptr %2, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  br label %12

10:                                               ; preds = %5
  %11 = tail call ptr @size_int_kind(i64 noundef 16, i32 noundef 0) #22
  br label %12

12:                                               ; preds = %10, %7
  %13 = phi ptr [ %9, %7 ], [ %11, %10 ]
  %14 = load ptr, ptr %0, align 8, !tbaa !6
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 65535
  %17 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !17
  switch i32 %18, label %24 [
    i32 3, label %19
    i32 2, label %23
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 2
  %21 = icmp eq i64 %16, 35
  %22 = zext i1 %21 to i32
  br label %24

23:                                               ; preds = %12
  br label %24

24:                                               ; preds = %12, %23, %19
  %25 = phi i32 [ %22, %19 ], [ 1, %23 ], [ 0, %12 ]
  %26 = phi ptr [ %20, %19 ], [ %0, %23 ], [ null, %12 ]
  %27 = phi ptr [ %14, %19 ], [ null, %23 ], [ null, %12 ]
  %28 = load i64, ptr %13, align 8
  %29 = and i64 %28, 65535
  %30 = icmp eq i64 %29, 23
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.225) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %101

32:                                               ; preds = %24
  %33 = tail call i32 @tree_log2(ptr noundef nonnull %13) #22
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.226) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %101

36:                                               ; preds = %32
  %37 = icmp sgt i32 %33, 28
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.227) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %101

39:                                               ; preds = %36
  %40 = icmp eq i32 %25, 0
  br i1 %40, label %78, label %41

41:                                               ; preds = %39
  %42 = icmp eq ptr %27, null
  br i1 %42, label %65, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.tree_common, ptr %27, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %47 = icmp eq ptr %45, %46
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.tree_decl_non_common, ptr %27, i64 0, i32 3
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %65

52:                                               ; preds = %48
  %53 = load ptr, ptr %26, align 8, !tbaa !6
  %54 = tail call ptr @build_variant_type_copy(ptr noundef %53) #22
  store ptr %54, ptr %26, align 8, !tbaa !6
  store ptr %45, ptr %49, align 8, !tbaa !17
  %55 = load ptr, ptr %26, align 8, !tbaa !6
  %56 = getelementptr inbounds %struct.tree_type, ptr %55, i64 0, i32 12
  store ptr %27, ptr %56, align 8, !tbaa !17
  %57 = load i64, ptr %27, align 8
  %58 = and i64 %57, 16777216
  %59 = load ptr, ptr %26, align 8, !tbaa !6
  %60 = load i64, ptr %59, align 8
  %61 = and i64 %60, -16777217
  %62 = or i64 %61, %58
  store i64 %62, ptr %59, align 8
  %63 = load ptr, ptr %26, align 8, !tbaa !6
  store ptr %63, ptr %44, align 8, !tbaa !17
  %64 = load ptr, ptr %26, align 8, !tbaa !6
  br label %71

65:                                               ; preds = %48, %43, %41
  %66 = and i32 %3, 8
  %67 = icmp eq i32 %66, 0
  %68 = load ptr, ptr %26, align 8, !tbaa !6
  br i1 %67, label %69, label %71

69:                                               ; preds = %65
  %70 = tail call ptr @build_variant_type_copy(ptr noundef %68) #22
  store ptr %70, ptr %26, align 8, !tbaa !6
  br label %71

71:                                               ; preds = %65, %69, %52
  %72 = phi ptr [ %68, %65 ], [ %70, %69 ], [ %64, %52 ]
  %73 = shl nuw i32 8, %33
  %74 = getelementptr inbounds %struct.tree_type, ptr %72, i64 0, i32 7
  store i32 %73, ptr %74, align 8, !tbaa !17
  %75 = load ptr, ptr %26, align 8, !tbaa !6
  %76 = load i64, ptr %75, align 8
  %77 = or i64 %76, 4398046511104
  store i64 %77, ptr %75, align 8
  br label %101

78:                                               ; preds = %39
  %79 = load i64, ptr %27, align 8
  %80 = trunc i64 %79 to i16
  switch i16 %80, label %81 [
    i16 32, label %82
    i16 29, label %82
    i16 31, label %82
  ]

81:                                               ; preds = %78
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.228, ptr noundef nonnull %27) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %101

82:                                               ; preds = %78, %78, %78
  %83 = and i64 %79, 65535
  %84 = icmp eq i64 %83, 29
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = shl nuw i32 8, %33
  br label %97

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.tree_decl_common, ptr %27, i64 0, i32 3
  %89 = load i32, ptr %88, align 8, !tbaa !17
  %90 = shl nuw i32 8, %33
  %91 = icmp ugt i32 %89, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %87
  %93 = and i64 %79, 4398046511104
  %94 = icmp eq i64 %93, 0
  %95 = lshr i32 %89, 3
  %96 = select i1 %94, ptr @.str.230, ptr @.str.229
  tail call void (ptr, ...) @error(ptr noundef nonnull %96, ptr noundef nonnull %27, i32 noundef %95) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %101

97:                                               ; preds = %85, %87
  %98 = phi i32 [ %86, %85 ], [ %90, %87 ]
  %99 = getelementptr inbounds %struct.tree_decl_common, ptr %27, i64 0, i32 3
  store i32 %98, ptr %99, align 8, !tbaa !17
  %100 = or i64 %79, 4398046511104
  store i64 %100, ptr %27, align 8
  br label %101

101:                                              ; preds = %35, %71, %92, %97, %81, %38, %31
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_weak_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, 2097152
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.231, ptr noundef nonnull %6) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %21

16:                                               ; preds = %10, %5
  %17 = trunc i64 %7 to i16
  switch i16 %17, label %19 [
    i16 29, label %18
    i16 32, label %18
  ]

18:                                               ; preds = %16, %16
  tail call void @declare_weak(ptr noundef nonnull %6) #22
  br label %21

19:                                               ; preds = %16
  %20 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %21

21:                                               ; preds = %18, %19, %15
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_alias_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %9 [
    i16 29, label %11
    i16 32, label %11
  ]

9:                                                ; preds = %5
  %10 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %69

11:                                               ; preds = %5, %5
  %12 = and i64 %7, 65535
  %13 = icmp eq i64 %12, 29
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %30

18:                                               ; preds = %11
  %19 = and i64 %7, 134217728
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %23 = load i64, ptr %22, align 8
  %24 = and i64 %23, 33554432
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %31

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26, %21, %14
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.232, ptr noundef nonnull %6) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %69

31:                                               ; preds = %21, %14, %26
  %32 = tail call ptr @decl_function_context(ptr noundef nonnull %6) #22
  %33 = icmp eq ptr %32, null
  %34 = load ptr, ptr @current_function_decl, align 8
  %35 = icmp eq ptr %34, null
  %36 = select i1 %33, i1 %35, i1 false
  br i1 %36, label %37, label %67

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = load i64, ptr %39, align 8
  %41 = and i64 %40, 65535
  %42 = icmp eq i64 %41, 28
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.233) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %69

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.tree_string, ptr %39, i64 0, i32 2
  %46 = tail call ptr @get_identifier(ptr noundef nonnull %45) #22
  %47 = load i64, ptr %46, align 8
  %48 = or i64 %47, 16777216
  store i64 %48, ptr %46, align 8
  %49 = load i64, ptr %6, align 8
  %50 = and i64 %49, 65535
  %51 = icmp eq i64 %50, 29
  br i1 %51, label %52, label %55

52:                                               ; preds = %44
  %53 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %54 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 5
  store ptr %53, ptr %54, align 8, !tbaa !17
  br label %69

55:                                               ; preds = %44
  %56 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 6
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.173, ptr noundef %57) #22
  %59 = icmp eq ptr %58, null
  %60 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %61 = load i64, ptr %60, align 8
  %62 = and i64 %61, -33554433
  %63 = select i1 %59, i64 0, i64 33554432
  %64 = or i64 %62, %63
  store i64 %64, ptr %60, align 8
  %65 = load i64, ptr %6, align 8
  %66 = or i64 %65, 67108864
  store i64 %66, ptr %6, align 8
  br label %69

67:                                               ; preds = %31
  %68 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %69

69:                                               ; preds = %43, %55, %52, %9, %67, %30
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_weakref_attribute(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = tail call ptr @decl_function_context(ptr noundef %6) #22
  %8 = icmp ne ptr %7, null
  %9 = load ptr, ptr @current_function_decl, align 8
  %10 = icmp ne ptr %9, null
  %11 = select i1 %8, i1 true, i1 %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = load ptr, ptr %0, align 8, !tbaa !6
  %14 = load i64, ptr %13, align 8
  %15 = trunc i64 %14 to i16
  switch i16 %15, label %16 [
    i16 32, label %18
    i16 29, label %18
  ]

16:                                               ; preds = %12, %5
  %17 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %40

18:                                               ; preds = %12, %12
  %19 = icmp eq ptr %2, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %18
  %21 = tail call ptr @get_identifier(ptr noundef nonnull @.str.172) #22
  %22 = tail call ptr @tree_cons_stat(ptr noundef %21, ptr noundef nonnull %2, ptr noundef null) #22
  %23 = tail call ptr @get_identifier(ptr noundef nonnull @.str.173) #22
  %24 = tail call ptr @tree_cons_stat(ptr noundef %23, ptr noundef null, ptr noundef %22) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  %25 = tail call ptr @decl_attributes(ptr noundef nonnull %0, ptr noundef %24, i32 noundef %3) #22
  br label %40

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %13, i64 0, i32 6
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.172, ptr noundef %28) #22
  %30 = icmp eq ptr %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = load ptr, ptr %0, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.tree_decl_minimal, ptr %32, i64 0, i32 1
  %34 = load i32, ptr %33, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %34, ptr noundef nonnull @.str.234) #22
  br label %35

35:                                               ; preds = %31, %26
  %36 = load ptr, ptr %0, align 8, !tbaa !6
  %37 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %36, i64 0, i32 4
  %38 = load i32, ptr %37, align 8
  %39 = or i32 %38, 128
  store i32 %39, ptr %37, align 8
  br label %40

40:                                               ; preds = %20, %35, %16
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_no_instrument_function_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %12, ptr noundef nonnull @.str.235, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %24

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 5
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %19, ptr noundef nonnull @.str.236, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %22 = load i32, ptr %21, align 8
  %23 = or i32 %22, 16777216
  store i32 %23, ptr %21, align 8
  br label %24

24:                                               ; preds = %17, %20, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_malloc_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = load i64, ptr %14, align 8
  %16 = trunc i64 %15 to i16
  switch i16 %16, label %21 [
    i16 10, label %17
    i16 12, label %17
  ]

17:                                               ; preds = %10, %10
  %18 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %19 = load i32, ptr %18, align 8
  %20 = or i32 %19, 524288
  store i32 %20, ptr %18, align 8
  br label %23

21:                                               ; preds = %10, %5
  %22 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %23

23:                                               ; preds = %21, %17
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_returns_twice_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = or i32 %12, 262144
  store i32 %13, ptr %11, align 8
  br label %16

14:                                               ; preds = %5
  %15 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %16

16:                                               ; preds = %14, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_no_limit_stack_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %12, ptr noundef nonnull @.str.235, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %24

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 5
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %19, ptr noundef nonnull @.str.236, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %22 = load i32, ptr %21, align 8
  %23 = or i32 %22, 33554432
  store i32 %23, ptr %21, align 8
  br label %24

24:                                               ; preds = %17, %20, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_pure_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_function_decl, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = or i32 %12, 134217728
  store i32 %13, ptr %11, align 8
  br label %16

14:                                               ; preds = %5
  %15 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %16

16:                                               ; preds = %14, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_novops_attribute(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, ptr nocapture readnone %2, i32 %3, ptr nocapture readnone %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 7189, ptr noundef nonnull @.str.238) #22
  %11 = load ptr, ptr %0, align 8, !tbaa !6
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi ptr [ %6, %5 ], [ %11, %10 ]
  %14 = getelementptr inbounds %struct.tree_function_decl, ptr %13, i64 0, i32 5
  %15 = load i32, ptr %14, align 8
  %16 = or i32 %15, 131072
  store i32 %16, ptr %14, align 8
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_deprecated_attribute(ptr nocapture noundef %0, ptr noundef %1, ptr noundef readonly %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = icmp eq ptr %2, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = load i64, ptr %9, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 28
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.239) #22
  br label %14

14:                                               ; preds = %5, %13
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %15

15:                                               ; preds = %14, %7
  %16 = load ptr, ptr %0, align 8, !tbaa !6
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 65535
  %19 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !17
  switch i32 %20, label %21 [
    i32 3, label %22
    i32 2, label %28
  ]

21:                                               ; preds = %15
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %58

22:                                               ; preds = %15
  %23 = trunc i64 %17 to i16
  %24 = getelementptr inbounds %struct.tree_common, ptr %16, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  switch i16 %23, label %38 [
    i16 35, label %26
    i16 34, label %26
    i16 32, label %26
    i16 29, label %26
    i16 31, label %26
  ]

26:                                               ; preds = %22, %22, %22, %22, %22
  %27 = or i64 %17, 1073741824
  store i64 %27, ptr %16, align 8
  br label %60

28:                                               ; preds = %15
  %29 = and i32 %3, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = tail call ptr @build_variant_type_copy(ptr noundef nonnull %16) #22
  store ptr %32, ptr %0, align 8, !tbaa !6
  %33 = load i64, ptr %32, align 8
  br label %34

34:                                               ; preds = %31, %28
  %35 = phi i64 [ %33, %31 ], [ %17, %28 ]
  %36 = phi ptr [ %32, %31 ], [ %16, %28 ]
  %37 = or i64 %35, 1073741824
  store i64 %37, ptr %36, align 8
  br label %60

38:                                               ; preds = %22
  store i8 1, ptr %4, align 1, !tbaa !17
  %39 = icmp eq ptr %25, null
  br i1 %39, label %58, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 12
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = icmp eq ptr %42, null
  br i1 %43, label %58, label %44

44:                                               ; preds = %40
  %45 = load i64, ptr %42, align 8
  %46 = trunc i64 %45 to i16
  switch i16 %46, label %58 [
    i16 1, label %47
    i16 35, label %50
  ]

47:                                               ; preds = %44
  %48 = load ptr, ptr %0, align 8, !tbaa !6
  %49 = getelementptr inbounds %struct.tree_type, ptr %48, i64 0, i32 12
  br label %52

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.tree_decl_minimal, ptr %42, i64 0, i32 3
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi ptr [ %49, %47 ], [ %51, %50 ]
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.240, ptr noundef %1, ptr noundef nonnull %54) #22
  br label %60

58:                                               ; preds = %21, %44, %38, %40, %52
  %59 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %60

60:                                               ; preds = %26, %34, %56, %58
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal ptr @handle_vector_size_attribute(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  store i8 1, ptr %4, align 1, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = tail call i32 @host_integerp(ptr noundef %8, i32 noundef 1) #22
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %70

13:                                               ; preds = %5
  %14 = tail call i64 @tree_low_cst(ptr noundef %8, i32 noundef 1) #22
  br label %15

15:                                               ; preds = %19, %13
  %16 = phi ptr [ %6, %13 ], [ %21, %19 ]
  %17 = load i64, ptr %16, align 8
  %18 = trunc i64 %17 to i16
  switch i16 %18, label %26 [
    i16 10, label %19
    i16 12, label %19
    i16 20, label %19
    i16 21, label %19
    i16 15, label %19
    i16 5, label %19
    i16 14, label %22
  ]

19:                                               ; preds = %15, %15, %15, %15, %15, %15
  %20 = getelementptr inbounds %struct.tree_common, ptr %16, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  br label %15, !llvm.loop !51

22:                                               ; preds = %15
  %23 = tail call i32 @vector_type_mode(ptr noundef nonnull %16) #22
  %24 = load i64, ptr %16, align 8
  %25 = trunc i64 %24 to i16
  br label %31

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 6
  %28 = load i32, ptr %27, align 4
  %29 = lshr i32 %28, 16
  %30 = and i32 %29, 255
  br label %31

31:                                               ; preds = %26, %22
  %32 = phi i16 [ %18, %26 ], [ %25, %22 ]
  %33 = phi i32 [ %30, %26 ], [ %23, %22 ]
  switch i16 %32, label %47 [
    i16 6, label %34
    i16 7, label %34
    i16 8, label %34
    i16 9, label %34
    i16 11, label %34
  ]

34:                                               ; preds = %31, %31, %31, %31, %31
  %35 = zext i32 %33 to i64
  %36 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %35
  %37 = load i8, ptr %36, align 1, !tbaa !17
  switch i8 %37, label %47 [
    i8 8, label %38
    i8 9, label %38
    i8 2, label %38
    i8 4, label %38
    i8 6, label %38
    i8 5, label %38
    i8 7, label %38
  ]

38:                                               ; preds = %34, %34, %34, %34, %34, %34, %34
  %39 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = tail call i32 @host_integerp(ptr noundef %40, i32 noundef 1) #22
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %38
  %44 = load i64, ptr %16, align 8
  %45 = and i64 %44, 65535
  %46 = icmp eq i64 %45, 7
  br i1 %46, label %47, label %48

47:                                               ; preds = %34, %31, %43, %38
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.241, ptr noundef %1) #22
  br label %70

48:                                               ; preds = %43
  %49 = load ptr, ptr %39, align 8, !tbaa !17
  %50 = tail call i64 @tree_low_cst(ptr noundef %49, i32 noundef 1) #22
  %51 = urem i64 %14, %50
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.242) #22
  br label %70

54:                                               ; preds = %48
  %55 = icmp eq i64 %14, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.243) #22
  br label %70

57:                                               ; preds = %54
  %58 = load ptr, ptr %39, align 8, !tbaa !17
  %59 = tail call i64 @tree_low_cst(ptr noundef %58, i32 noundef 1) #22
  %60 = udiv i64 %14, %59
  %61 = tail call i64 @llvm.ctpop.i64(i64 %60), !range !52
  %62 = icmp ult i64 %61, 2
  br i1 %62, label %64, label %63

63:                                               ; preds = %57
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.244) #22
  br label %70

64:                                               ; preds = %57
  %65 = trunc i64 %60 to i32
  %66 = tail call ptr @build_vector_type(ptr noundef nonnull %16, i32 noundef %65) #22
  %67 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 14), align 8, !tbaa !53
  %68 = load ptr, ptr %0, align 8, !tbaa !6
  %69 = tail call ptr %67(ptr noundef %68, ptr noundef %66) #22
  store ptr %69, ptr %0, align 8, !tbaa !6
  br label %70

70:                                               ; preds = %64, %63, %56, %53, %47, %11
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_visibility_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 %3, ptr nocapture readnone %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i64, ptr %6, align 8
  %10 = and i64 %9, 65535
  %11 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !17
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = trunc i64 %9 to i16
  switch i16 %15, label %16 [
    i16 6, label %32
    i16 16, label %18
    i16 17, label %18
  ]

16:                                               ; preds = %14
  %17 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.245, ptr noundef %1) #22
  br label %98

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.246, ptr noundef %1, ptr noundef nonnull %6) #22
  br label %98

23:                                               ; preds = %5
  %24 = tail call ptr @decl_function_context(ptr noundef nonnull %6) #22
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = load i64, ptr %6, align 8
  %28 = and i64 %27, 134217728
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26, %23
  %31 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %98

32:                                               ; preds = %14, %26, %18
  %33 = phi i64 [ %9, %14 ], [ %27, %26 ], [ %9, %18 ]
  %34 = load i64, ptr %8, align 8
  %35 = and i64 %34, 65535
  %36 = icmp eq i64 %35, 28
  br i1 %36, label %38, label %37

37:                                               ; preds = %32
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.247) #22
  br label %98

38:                                               ; preds = %32
  %39 = and i64 %33, 65535
  %40 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !17
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 12
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = icmp eq ptr %45, null
  br i1 %46, label %98, label %47

47:                                               ; preds = %43
  %48 = load i64, ptr %45, align 8
  %49 = and i64 %48, 65535
  %50 = icmp eq i64 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.248, ptr noundef %1) #22
  br label %98

53:                                               ; preds = %47, %38
  %54 = phi ptr [ %45, %47 ], [ %6, %38 ]
  %55 = getelementptr inbounds %struct.tree_string, ptr %8, i64 0, i32 2
  %56 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %55, ptr noundef nonnull dereferenceable(8) @.str.80)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %53
  %59 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %55, ptr noundef nonnull dereferenceable(9) @.str.249)
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %58
  %62 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %55, ptr noundef nonnull dereferenceable(7) @.str.250)
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %55, ptr noundef nonnull dereferenceable(10) @.str.104)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.251) #22
  br label %68

68:                                               ; preds = %64, %61, %58, %53, %67
  %69 = phi i32 [ 0, %67 ], [ 0, %53 ], [ 3, %58 ], [ 2, %61 ], [ 1, %64 ]
  %70 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %54, i64 0, i32 4
  %71 = load i32, ptr %70, align 8
  %72 = and i32 %71, 4096
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %92, label %74

74:                                               ; preds = %68
  %75 = lshr i32 %71, 10
  %76 = and i32 %75, 3
  %77 = icmp eq i32 %69, %76
  br i1 %77, label %92, label %78

78:                                               ; preds = %74
  %79 = load ptr, ptr %0, align 8, !tbaa !6
  %80 = load i64, ptr %79, align 8
  %81 = and i64 %80, 65535
  %82 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %81
  %83 = load i32, ptr %82, align 4, !tbaa !17
  %84 = icmp eq i32 %83, 2
  %85 = getelementptr inbounds %struct.tree_type, ptr %79, i64 0, i32 4
  %86 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 6
  %87 = select i1 %84, ptr %85, ptr %86
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.182, ptr noundef %88) #22
  %90 = icmp eq ptr %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %78
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.252, ptr noundef nonnull %54) #22
  br label %92

92:                                               ; preds = %91, %78, %74, %68
  %93 = load i32, ptr %70, align 8
  %94 = shl nuw nsw i32 %69, 10
  %95 = and i32 %93, -7169
  %96 = or i32 %95, %94
  %97 = or i32 %96, 4096
  store i32 %97, ptr %70, align 8
  br label %98

98:                                               ; preds = %43, %92, %51, %37, %30, %22, %16
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_tls_model_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  store i8 1, ptr %4, align 1, !tbaa !17
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 32
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %6, i64 0, i32 4
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 13
  %14 = and i32 %13, 7
  %15 = icmp ugt i32 %14, 1
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %5
  %17 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %50

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 65535
  %23 = icmp eq i64 %22, 28
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.253) #22
  br label %50

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.tree_string, ptr %20, i64 0, i32 2
  %27 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %26, ptr noundef nonnull dereferenceable(11) @.str.254)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %44, label %29

29:                                               ; preds = %25
  %30 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %26, ptr noundef nonnull dereferenceable(13) @.str.255)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %26, ptr noundef nonnull dereferenceable(14) @.str.256)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = load i32, ptr @optimize, align 4, !tbaa !21
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %37, i32 2, i32 3
  br label %44

39:                                               ; preds = %32
  %40 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %26, ptr noundef nonnull dereferenceable(15) @.str.257)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.258) #22
  %43 = load i32, ptr %11, align 8
  br label %44

44:                                               ; preds = %39, %29, %25, %42, %35
  %45 = phi i32 [ %43, %42 ], [ %12, %35 ], [ %12, %25 ], [ %12, %29 ], [ %12, %39 ]
  %46 = phi i32 [ %14, %42 ], [ %38, %35 ], [ 5, %25 ], [ 4, %29 ], [ 2, %39 ]
  %47 = shl nuw nsw i32 %46, 13
  %48 = and i32 %45, -57345
  %49 = or i32 %48, %47
  store i32 %49, ptr %11, align 8
  br label %50

50:                                               ; preds = %44, %24, %16
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_nonnull_attribute(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, ptr noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = icmp eq ptr %2, null
  %8 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 1
  br i1 %7, label %9, label %13

9:                                                ; preds = %5
  %10 = load ptr, ptr %8, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %55

12:                                               ; preds = %9
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.259) #22
  br label %54

13:                                               ; preds = %5, %50
  %14 = phi ptr [ %52, %50 ], [ %2, %5 ]
  %15 = getelementptr inbounds %struct.tree_list, ptr %14, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 65535
  %19 = icmp eq i64 %18, 23
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.tree_int_cst, ptr %16, i64 0, i32 1, i32 1
  %22 = load i64, ptr %21, align 8, !tbaa !17
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20, %13
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.260, i64 noundef 1) #22
  br label %54

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.tree_int_cst, ptr %16, i64 0, i32 1
  %27 = load i64, ptr %26, align 8, !tbaa !17
  %28 = load ptr, ptr %8, align 8, !tbaa !17
  %29 = icmp eq ptr %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %25
  %31 = icmp eq i64 %27, 1
  br i1 %31, label %42, label %32

32:                                               ; preds = %30, %32
  %33 = phi i64 [ %37, %32 ], [ 1, %30 ]
  %34 = phi ptr [ %36, %32 ], [ %28, %30 ]
  %35 = getelementptr inbounds %struct.tree_common, ptr %34, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = add i64 %33, 1
  %38 = icmp eq ptr %36, null
  %39 = icmp eq i64 %37, %27
  %40 = select i1 %38, i1 true, i1 %39
  br i1 %40, label %41, label %32

41:                                               ; preds = %32
  br i1 %38, label %48, label %42

42:                                               ; preds = %30, %41
  %43 = phi ptr [ %36, %41 ], [ %28, %30 ]
  %44 = getelementptr inbounds %struct.tree_list, ptr %43, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = load i64, ptr %45, align 8
  %47 = trunc i64 %46 to i16
  switch i16 %47, label %49 [
    i16 19, label %48
    i16 10, label %50
  ]

48:                                               ; preds = %42, %41
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.261, i64 noundef 1, i64 noundef %27) #22
  br label %54

49:                                               ; preds = %42
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.262, i64 noundef 1, i64 noundef %27) #22
  br label %54

50:                                               ; preds = %25, %42
  %51 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = icmp eq ptr %52, null
  br i1 %53, label %55, label %13, !llvm.loop !54

54:                                               ; preds = %12, %24, %49, %48
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %55

55:                                               ; preds = %50, %54, %9
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_nothrow_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = or i64 %7, 33554432
  store i64 %11, ptr %6, align 8
  br label %14

12:                                               ; preds = %5
  %13 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %14

14:                                               ; preds = %12, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_cleanup_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 67174399
  %9 = icmp eq i64 %8, 32
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %27

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, 1
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.263) #22
  br label %27

19:                                               ; preds = %12
  %20 = tail call ptr @lookup_name(ptr noundef nonnull %14) #22
  %21 = icmp eq ptr %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = load i64, ptr %20, align 8
  %24 = and i64 %23, 65535
  %25 = icmp eq i64 %24, 29
  br i1 %25, label %28, label %26

26:                                               ; preds = %22, %19
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.264) #22
  br label %27

27:                                               ; preds = %10, %18, %26
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %28

28:                                               ; preds = %27, %22
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_warn_unused_result_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 19
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %14

14:                                               ; preds = %12, %5
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_sentinel_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %5, %10
  %11 = phi ptr [ %13, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %10, !llvm.loop !55

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.tree_list, ptr %11, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 19
  br i1 %20, label %21, label %24

21:                                               ; preds = %15, %5
  %22 = phi ptr [ @.str.265, %5 ], [ @.str.266, %15 ]
  %23 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull %22, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %24

24:                                               ; preds = %21, %15
  %25 = icmp eq ptr %2, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = load i64, ptr %28, align 8
  %30 = and i64 %29, 65535
  %31 = icmp eq i64 %30, 23
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !6
  %34 = tail call i32 @tree_int_cst_lt(ptr noundef nonnull %28, ptr noundef %33) #22
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32, %26
  %37 = phi ptr [ @.str.267, %26 ], [ @.str.268, %32 ]
  %38 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull %37) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %39

39:                                               ; preds = %36, %32, %24
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_type_generic_attribute(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, ptr nocapture readnone %2, i32 %3, ptr nocapture readnone %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 20
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 7692, ptr noundef nonnull @.str.238) #22
  %11 = load ptr, ptr %0, align 8, !tbaa !6
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi ptr [ %6, %5 ], [ %11, %10 ]
  %14 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %15, null
  br i1 %16, label %29, label %21

17:                                               ; preds = %21
  %18 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %29, label %21, !llvm.loop !56

21:                                               ; preds = %12, %17
  %22 = phi ptr [ %19, %17 ], [ %15, %12 ]
  %23 = getelementptr inbounds %struct.tree_list, ptr %22, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = load i64, ptr %24, align 8
  %26 = and i64 %25, 65535
  %27 = icmp eq i64 %26, 19
  br i1 %27, label %28, label %17

28:                                               ; preds = %21
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 7699, ptr noundef nonnull @.str.238) #22
  br label %29

29:                                               ; preds = %17, %12, %28
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_alloc_size_attribute(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, ptr noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = tail call i32 @type_num_arguments(ptr noundef %6) #22
  %8 = icmp eq ptr %2, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %5
  %10 = freeze i32 %7
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %9, %30
  %13 = phi ptr [ %2, %9 ], [ %32, %30 ]
  %14 = getelementptr inbounds %struct.tree_list, ptr %13, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 65535
  %18 = icmp eq i64 %17, 23
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.tree_int_cst, ptr %15, i64 0, i32 1, i32 1
  %21 = load i64, ptr %20, align 8, !tbaa !17
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tree_int_cst, ptr %15, i64 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !17
  %26 = add i64 %25, -1
  %27 = icmp ult i64 %26, %11
  br i1 %27, label %30, label %28

28:                                               ; preds = %23, %19, %12
  %29 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.269) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %34

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.tree_common, ptr %13, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %12, !llvm.loop !57

34:                                               ; preds = %30, %5, %28
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_cold_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 6
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.193, ptr noundef %12) #22
  %14 = icmp eq ptr %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.270, ptr noundef %1, ptr noundef nonnull @.str.193) #22
  br label %19

17:                                               ; preds = %5
  %18 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %19

19:                                               ; preds = %17, %15
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %20

20:                                               ; preds = %19, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_hot_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture readnone %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 6
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.192, ptr noundef %12) #22
  %14 = icmp eq ptr %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.270, ptr noundef %1, ptr noundef nonnull @.str.192) #22
  br label %19

17:                                               ; preds = %5
  %18 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %19

19:                                               ; preds = %17, %15
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %20

20:                                               ; preds = %19, %10
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_error_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %18, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_list, ptr %2, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 28
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %18

18:                                               ; preds = %5, %10, %16
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal ptr @handle_target_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = load ptr, ptr %0, align 8, !tbaa !6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  br label %16

12:                                               ; preds = %5
  %13 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 107), align 8, !tbaa !58
  %14 = tail call zeroext i8 %13(ptr noundef nonnull %6, ptr noundef %1, ptr noundef %2, i32 noundef %3) #22
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %10
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %17

17:                                               ; preds = %16, %12
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @handle_optimize_attribute(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 %3, ptr nocapture noundef writeonly %4) #9 {
  %6 = alloca %struct.cl_optimization, align 4
  %7 = load ptr, ptr %0, align 8, !tbaa !6
  %8 = load i64, ptr %7, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 29
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.199, ptr noundef %1) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  br label %24

13:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 184, ptr nonnull %6) #22
  %14 = getelementptr inbounds %struct.tree_function_decl, ptr %7, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  call void @cl_optimization_save(ptr noundef nonnull %6) #22
  %16 = icmp eq ptr %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_optimization_option, ptr %15, i64 0, i32 1
  call void @cl_optimization_restore(ptr noundef nonnull %18) #22
  br label %19

19:                                               ; preds = %17, %13
  %20 = call zeroext i8 @parse_optimize_options(ptr noundef %2, i8 noundef zeroext 1), !range !59
  %21 = call ptr @build_optimization_node() #22
  %22 = load ptr, ptr %0, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.tree_function_decl, ptr %22, i64 0, i32 4
  store ptr %21, ptr %23, align 8, !tbaa !17
  call void @cl_optimization_restore(ptr noundef nonnull %6) #22
  call void @llvm.lifetime.end.p0(i64 184, ptr nonnull %6) #22
  br label %24

24:                                               ; preds = %19, %11
  ret ptr null
}

declare ptr @build_variant_type_copy(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @warning(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare ptr @build_pointer_type(ptr noundef) local_unnamed_addr #3

declare ptr @build_qualified_type(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i32 @vector_type_mode(ptr noundef) local_unnamed_addr #3

declare ptr @build_duplicate_type(ptr noundef) local_unnamed_addr #3

declare ptr @decl_function_context(ptr noundef) local_unnamed_addr #3

declare void @decl_init_priority_insert(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

declare i32 @host_integerp(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i64 @tree_low_cst(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @error(ptr noundef, ...) local_unnamed_addr #3

declare void @decl_fini_priority_insert(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #11

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #10

declare i32 @vector_mode_valid_p(i32 noundef) local_unnamed_addr #3

declare ptr @build_pointer_type_for_mode(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @build_reference_type_for_mode(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @make_unsigned_type(i32 noundef) local_unnamed_addr #3

declare ptr @make_signed_type(i32 noundef) local_unnamed_addr #3

declare void @error_at(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare ptr @size_int_kind(i64 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @tree_log2(ptr noundef) local_unnamed_addr #3

declare void @declare_weak(ptr noundef) local_unnamed_addr #3

declare ptr @get_identifier(ptr noundef) local_unnamed_addr #3

declare ptr @lookup_attribute(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @tree_cons_stat(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @decl_attributes(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @fancy_abort(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_vector_type(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @lookup_name(ptr noundef) local_unnamed_addr #3

declare i32 @tree_int_cst_lt(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @type_num_arguments(ptr noundef) local_unnamed_addr #3

declare void @cl_optimization_save(ptr noundef) local_unnamed_addr #3

declare void @cl_optimization_restore(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @parse_optimize_options(ptr noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = alloca [20 x i8], align 16
  %4 = load ptr, ptr @optimize_args, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store i32 0, ptr %4, align 8, !tbaa !60
  %7 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %4, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !62
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2, %6
  %11 = tail call ptr @vec_gc_p_reserve(ptr noundef %4, i32 noundef 1) #22
  store ptr %11, ptr @optimize_args, align 8, !tbaa !6
  %12 = load i32, ptr %11, align 8, !tbaa !60
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi i32 [ 0, %6 ], [ %12, %10 ]
  %15 = phi ptr [ %4, %6 ], [ %11, %10 ]
  %16 = add i32 %14, 1
  store i32 %16, ptr %15, align 8, !tbaa !60
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %15, i64 0, i32 2, i64 %17
  store ptr null, ptr %18, align 8, !tbaa !6
  %19 = icmp eq ptr %0, null
  br i1 %19, label %129, label %20

20:                                               ; preds = %13
  %21 = icmp eq i8 %1, 0
  br label %22

22:                                               ; preds = %20, %124
  %23 = phi i8 [ 1, %20 ], [ %125, %124 ]
  %24 = phi ptr [ %0, %20 ], [ %127, %124 ]
  %25 = getelementptr inbounds %struct.tree_list, ptr %24, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = load i64, ptr %26, align 8
  %28 = trunc i64 %27 to i16
  switch i16 %28, label %124 [
    i16 23, label %29
    i16 28, label %50
  ]

29:                                               ; preds = %22
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #22
  %30 = getelementptr inbounds %struct.tree_int_cst, ptr %26, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !17
  %32 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.1158, i64 noundef %31)
  %33 = call ptr @ggc_alloc_string(ptr noundef nonnull %3, i32 noundef -1) #22
  %34 = load ptr, ptr @optimize_args, align 8, !tbaa !6
  %35 = icmp eq ptr %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %34, i64 0, i32 1
  %38 = load i32, ptr %37, align 4, !tbaa !62
  %39 = load i32, ptr %34, align 8, !tbaa !60
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %36, %29
  %42 = call ptr @vec_gc_p_reserve(ptr noundef %34, i32 noundef 1) #22
  store ptr %42, ptr @optimize_args, align 8, !tbaa !6
  %43 = load i32, ptr %42, align 8, !tbaa !60
  br label %44

44:                                               ; preds = %36, %41
  %45 = phi i32 [ %39, %36 ], [ %43, %41 ]
  %46 = phi ptr [ %34, %36 ], [ %42, %41 ]
  %47 = add i32 %45, 1
  store i32 %47, ptr %46, align 8, !tbaa !60
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %46, i64 0, i32 2, i64 %48
  store ptr %33, ptr %49, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #22
  br label %124

50:                                               ; preds = %22
  %51 = getelementptr inbounds %struct.tree_string, ptr %26, i64 0, i32 1
  %52 = load i32, ptr %51, align 8, !tbaa !17
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.tree_string, ptr %26, i64 0, i32 2
  store ptr %54, ptr @libiberty_optr, align 8, !tbaa !6
  %55 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %54)
  %56 = add i64 %55, 1
  store i64 %56, ptr @libiberty_len, align 8, !tbaa !63
  %57 = alloca i8, i64 %56, align 16
  store ptr %57, ptr @libiberty_nptr, align 8, !tbaa !6
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %57, ptr nonnull align 1 %54, i64 %56, i1 false)
  %58 = getelementptr inbounds i8, ptr %57, i64 %53
  %59 = ptrtoint ptr %58 to i64
  br label %60

60:                                               ; preds = %50, %121
  %61 = phi i8 [ %23, %50 ], [ %122, %121 ]
  %62 = phi ptr [ %57, %50 ], [ %74, %121 ]
  %63 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %62, i32 noundef 44)
  %64 = icmp eq ptr %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %60
  %66 = ptrtoint ptr %63 to i64
  %67 = ptrtoint ptr %62 to i64
  %68 = sub i64 %66, %67
  store i8 0, ptr %63, align 1, !tbaa !17
  %69 = getelementptr inbounds i8, ptr %63, i64 1
  br label %73

70:                                               ; preds = %60
  %71 = ptrtoint ptr %62 to i64
  %72 = sub i64 %59, %71
  br label %73

73:                                               ; preds = %70, %65
  %74 = phi ptr [ %69, %65 ], [ null, %70 ]
  %75 = phi i64 [ %68, %65 ], [ %72, %70 ]
  %76 = add i64 %75, 3
  %77 = call ptr @ggc_alloc_stat(i64 noundef %76) #22
  %78 = load i8, ptr %62, align 1, !tbaa !17
  %79 = icmp eq i8 %78, 45
  br i1 %79, label %80, label %88

80:                                               ; preds = %73
  %81 = getelementptr inbounds i8, ptr %62, i64 1
  %82 = load i8, ptr %81, align 1, !tbaa !17
  switch i8 %82, label %83 [
    i8 79, label %102
    i8 102, label %102
  ]

83:                                               ; preds = %80
  br i1 %21, label %86, label %84

84:                                               ; preds = %83
  %85 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.1159, ptr noundef nonnull %62) #22
  br label %121, !llvm.loop !64

86:                                               ; preds = %83
  %87 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 165, ptr noundef nonnull @.str.1160, ptr noundef nonnull %62) #22
  br label %121, !llvm.loop !64

88:                                               ; preds = %73
  %89 = getelementptr inbounds i8, ptr %77, i64 1
  store i8 45, ptr %77, align 1, !tbaa !17
  %90 = load i8, ptr %62, align 1, !tbaa !17
  %91 = add i8 %90, -48
  %92 = icmp ult i8 %91, 10
  br i1 %92, label %99, label %93

93:                                               ; preds = %88
  switch i8 %90, label %98 [
    i8 115, label %94
    i8 79, label %102
  ]

94:                                               ; preds = %93
  %95 = getelementptr inbounds i8, ptr %62, i64 1
  %96 = load i8, ptr %95, align 1, !tbaa !17
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %93, %94
  br label %99

99:                                               ; preds = %94, %88, %98
  %100 = phi i8 [ 102, %98 ], [ 79, %88 ], [ 79, %94 ]
  %101 = getelementptr inbounds i8, ptr %77, i64 2
  store i8 %100, ptr %89, align 1, !tbaa !17
  br label %102

102:                                              ; preds = %99, %93, %80, %80
  %103 = phi ptr [ %77, %80 ], [ %77, %80 ], [ %89, %93 ], [ %101, %99 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %103, ptr nonnull align 1 %62, i64 %75, i1 false)
  %104 = getelementptr inbounds i8, ptr %103, i64 %75
  store i8 0, ptr %104, align 1, !tbaa !17
  %105 = load ptr, ptr @optimize_args, align 8, !tbaa !6
  %106 = icmp eq ptr %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %105, i64 0, i32 1
  %109 = load i32, ptr %108, align 4, !tbaa !62
  %110 = load i32, ptr %105, align 8, !tbaa !60
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %107, %102
  %113 = call ptr @vec_gc_p_reserve(ptr noundef %105, i32 noundef 1) #22
  store ptr %113, ptr @optimize_args, align 8, !tbaa !6
  %114 = load i32, ptr %113, align 8, !tbaa !60
  br label %115

115:                                              ; preds = %107, %112
  %116 = phi i32 [ %110, %107 ], [ %114, %112 ]
  %117 = phi ptr [ %105, %107 ], [ %113, %112 ]
  %118 = add i32 %116, 1
  store i32 %118, ptr %117, align 8, !tbaa !60
  %119 = zext i32 %116 to i64
  %120 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %117, i64 0, i32 2, i64 %119
  store ptr %77, ptr %120, align 8, !tbaa !6
  br label %121

121:                                              ; preds = %84, %86, %115
  %122 = phi i8 [ %61, %115 ], [ 0, %86 ], [ 0, %84 ]
  %123 = icmp eq ptr %74, null
  br i1 %123, label %124, label %60

124:                                              ; preds = %121, %22, %44
  %125 = phi i8 [ %23, %44 ], [ %23, %22 ], [ %122, %121 ]
  %126 = getelementptr inbounds %struct.tree_common, ptr %24, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  %128 = icmp eq ptr %127, null
  br i1 %128, label %129, label %22, !llvm.loop !65

129:                                              ; preds = %124, %13
  %130 = phi i8 [ 1, %13 ], [ %125, %124 ]
  %131 = load ptr, ptr @optimize_args, align 8
  %132 = ptrtoint ptr %131 to i64
  %133 = icmp eq ptr %131, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  %135 = alloca [8 x i8], align 16
  br label %213

136:                                              ; preds = %129
  %137 = load i32, ptr %131, align 8, !tbaa !60
  %138 = add i32 %137, 1
  %139 = zext i32 %138 to i64
  %140 = shl nuw nsw i64 %139, 3
  %141 = alloca i8, i64 %140, align 16
  %142 = ptrtoint ptr %141 to i64
  %143 = icmp ugt i32 %137, 1
  br i1 %143, label %144, label %213

144:                                              ; preds = %136
  %145 = zext i32 %137 to i64
  %146 = add nsw i64 %145, -1
  %147 = icmp ult i32 %137, 17
  br i1 %147, label %175, label %148

148:                                              ; preds = %144
  %149 = or i64 %142, 8
  %150 = add i64 %132, 16
  %151 = sub i64 %149, %150
  %152 = icmp ult i64 %151, 128
  br i1 %152, label %175, label %153

153:                                              ; preds = %148
  %154 = and i64 %146, -16
  %155 = or i64 %154, 1
  br label %156

156:                                              ; preds = %156, %153
  %157 = phi i64 [ 0, %153 ], [ %171, %156 ]
  %158 = or i64 %157, 1
  %159 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %131, i64 0, i32 2, i64 %158
  %160 = load <4 x ptr>, ptr %159, align 8, !tbaa !6
  %161 = getelementptr inbounds ptr, ptr %159, i64 4
  %162 = load <4 x ptr>, ptr %161, align 8, !tbaa !6
  %163 = getelementptr inbounds ptr, ptr %159, i64 8
  %164 = load <4 x ptr>, ptr %163, align 8, !tbaa !6
  %165 = getelementptr inbounds ptr, ptr %159, i64 12
  %166 = load <4 x ptr>, ptr %165, align 8, !tbaa !6
  %167 = getelementptr inbounds ptr, ptr %141, i64 %158
  store <4 x ptr> %160, ptr %167, align 8, !tbaa !6
  %168 = getelementptr inbounds ptr, ptr %167, i64 4
  store <4 x ptr> %162, ptr %168, align 8, !tbaa !6
  %169 = getelementptr inbounds ptr, ptr %167, i64 8
  store <4 x ptr> %164, ptr %169, align 8, !tbaa !6
  %170 = getelementptr inbounds ptr, ptr %167, i64 12
  store <4 x ptr> %166, ptr %170, align 8, !tbaa !6
  %171 = add nuw i64 %157, 16
  %172 = icmp eq i64 %171, %154
  br i1 %172, label %173, label %156, !llvm.loop !66

173:                                              ; preds = %156
  %174 = icmp eq i64 %146, %154
  br i1 %174, label %213, label %175

175:                                              ; preds = %148, %144, %173
  %176 = phi i64 [ 1, %148 ], [ 1, %144 ], [ %155, %173 ]
  %177 = sub nsw i64 %145, %176
  %178 = xor i64 %176, -1
  %179 = add nsw i64 %178, %145
  %180 = and i64 %177, 3
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %191, label %182

182:                                              ; preds = %175, %182
  %183 = phi i64 [ %188, %182 ], [ %176, %175 ]
  %184 = phi i64 [ %189, %182 ], [ 0, %175 ]
  %185 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %131, i64 0, i32 2, i64 %183
  %186 = load ptr, ptr %185, align 8, !tbaa !6
  %187 = getelementptr inbounds ptr, ptr %141, i64 %183
  store ptr %186, ptr %187, align 8, !tbaa !6
  %188 = add nuw nsw i64 %183, 1
  %189 = add i64 %184, 1
  %190 = icmp eq i64 %189, %180
  br i1 %190, label %191, label %182, !llvm.loop !69

191:                                              ; preds = %182, %175
  %192 = phi i64 [ %176, %175 ], [ %188, %182 ]
  %193 = icmp ult i64 %179, 3
  br i1 %193, label %213, label %194

194:                                              ; preds = %191, %194
  %195 = phi i64 [ %211, %194 ], [ %192, %191 ]
  %196 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %131, i64 0, i32 2, i64 %195
  %197 = load ptr, ptr %196, align 8, !tbaa !6
  %198 = getelementptr inbounds ptr, ptr %141, i64 %195
  store ptr %197, ptr %198, align 8, !tbaa !6
  %199 = add nuw nsw i64 %195, 1
  %200 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %131, i64 0, i32 2, i64 %199
  %201 = load ptr, ptr %200, align 8, !tbaa !6
  %202 = getelementptr inbounds ptr, ptr %141, i64 %199
  store ptr %201, ptr %202, align 8, !tbaa !6
  %203 = add nuw nsw i64 %195, 2
  %204 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %131, i64 0, i32 2, i64 %203
  %205 = load ptr, ptr %204, align 8, !tbaa !6
  %206 = getelementptr inbounds ptr, ptr %141, i64 %203
  store ptr %205, ptr %206, align 8, !tbaa !6
  %207 = add nuw nsw i64 %195, 3
  %208 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %131, i64 0, i32 2, i64 %207
  %209 = load ptr, ptr %208, align 8, !tbaa !6
  %210 = getelementptr inbounds ptr, ptr %141, i64 %207
  store ptr %209, ptr %210, align 8, !tbaa !6
  %211 = add nuw nsw i64 %195, 4
  %212 = icmp eq i64 %211, %145
  br i1 %212, label %213, label %194, !llvm.loop !71

213:                                              ; preds = %191, %194, %173, %134, %136
  %214 = phi ptr [ %135, %134 ], [ %141, %136 ], [ %141, %173 ], [ %141, %194 ], [ %141, %191 ]
  %215 = phi i32 [ 0, %134 ], [ %137, %136 ], [ %137, %173 ], [ %137, %194 ], [ %137, %191 ]
  %216 = load i32, ptr @flag_strict_aliasing, align 4, !tbaa !21
  call void @decode_options(i32 noundef %215, ptr noundef nonnull %214) #22
  %217 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 4), align 8, !tbaa !72
  call void %217() #22
  store i32 %216, ptr @flag_strict_aliasing, align 4, !tbaa !21
  %218 = load ptr, ptr @optimize_args, align 8
  %219 = icmp eq ptr %218, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %213
  store i32 0, ptr %218, align 8, !tbaa !60
  br label %221

221:                                              ; preds = %213, %220
  ret i8 %130
}

declare ptr @build_optimization_node() local_unnamed_addr #3

declare ptr @handle_format_attribute(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #3

declare ptr @handle_format_arg_attribute(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_addr_space_name(i8 noundef zeroext %0) local_unnamed_addr #9 {
  %2 = zext i8 %0 to i32
  %3 = add nuw nsw i32 %2, 136
  br label %26

4:                                                ; preds = %26
  %5 = or i64 %27, 1
  %6 = getelementptr inbounds [151 x %struct.c_common_resword], ptr @c_common_reswords, i64 0, i64 %5, i32 1
  %7 = load i32, ptr %6, align 8
  %8 = and i32 %7, 65535
  %9 = icmp eq i32 %8, %3
  br i1 %9, label %32, label %10

10:                                               ; preds = %4
  %11 = or i64 %27, 2
  %12 = getelementptr inbounds [151 x %struct.c_common_resword], ptr @c_common_reswords, i64 0, i64 %11, i32 1
  %13 = load i32, ptr %12, align 8
  %14 = and i32 %13, 65535
  %15 = icmp eq i32 %14, %3
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = or i64 %27, 3
  %18 = icmp eq i64 %17, 151
  br i1 %18, label %36, label %19, !llvm.loop !73

19:                                               ; preds = %16
  %20 = getelementptr inbounds [151 x %struct.c_common_resword], ptr @c_common_reswords, i64 0, i64 %17, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = and i32 %21, 65535
  %23 = icmp eq i32 %22, %3
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = add nuw nsw i64 %27, 4
  br label %26

26:                                               ; preds = %24, %1
  %27 = phi i64 [ 0, %1 ], [ %25, %24 ]
  %28 = getelementptr inbounds [151 x %struct.c_common_resword], ptr @c_common_reswords, i64 0, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8
  %30 = and i32 %29, 65535
  %31 = icmp eq i32 %30, %3
  br i1 %31, label %32, label %4

32:                                               ; preds = %19, %10, %4, %26
  %33 = phi i64 [ %27, %26 ], [ %5, %4 ], [ %11, %10 ], [ %17, %19 ]
  %34 = getelementptr inbounds [151 x %struct.c_common_resword], ptr @c_common_reswords, i64 0, i64 %33
  %35 = load ptr, ptr %34, align 16, !tbaa !74
  br label %37

36:                                               ; preds = %16
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 858, ptr noundef nonnull @.str.238) #22
  br label %37

37:                                               ; preds = %36, %32
  %38 = phi ptr [ %35, %32 ], [ @.str.273, %36 ]
  ret ptr %38
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @start_fname_decls() local_unnamed_addr #9 {
  br label %1

1:                                                ; preds = %0, %11
  %2 = phi ptr [ %16, %11 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 51), %0 ]
  %3 = phi i64 [ %14, %11 ], [ 0, %0 ]
  %4 = phi i32 [ %13, %11 ], [ 0, %0 ]
  %5 = phi ptr [ %12, %11 ], [ null, %0 ]
  %6 = load ptr, ptr %2, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef %3) #22
  %10 = tail call ptr @tree_cons_stat(ptr noundef nonnull %6, ptr noundef %9, ptr noundef %5) #22
  store ptr null, ptr %2, align 8, !tbaa !6
  br label %11

11:                                               ; preds = %8, %1
  %12 = phi ptr [ %10, %8 ], [ %5, %1 ]
  %13 = add i32 %4, 1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [4 x %struct.fname_var_t], ptr @fname_vars, i64 0, i64 %14
  %16 = load ptr, ptr %15, align 16, !tbaa !76
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %1, !llvm.loop !78

18:                                               ; preds = %11
  %19 = icmp ne ptr %12, null
  %20 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 52), align 16
  %21 = icmp ne ptr %20, null
  %22 = select i1 %19, i1 true, i1 %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = tail call ptr @tree_cons_stat(ptr noundef %12, ptr noundef null, ptr noundef %20) #22
  store ptr %24, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 52), align 16, !tbaa !6
  br label %25

25:                                               ; preds = %18, %23
  ret void
}

declare ptr @build_int_cst(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @finish_fname_decls() local_unnamed_addr #9 {
  %1 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #22
  store ptr null, ptr %1, align 8, !tbaa !6
  %2 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 52), align 16, !tbaa !17
  %3 = icmp eq ptr %2, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %0, %9
  %5 = phi ptr [ %11, %9 ], [ %2, %0 ]
  %6 = getelementptr inbounds %struct.tree_list, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp ne ptr %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  call void @append_to_statement_list(ptr noundef nonnull %7, ptr noundef nonnull %1) #22
  %10 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %4, !llvm.loop !79

13:                                               ; preds = %4, %9
  %14 = phi ptr [ %5, %4 ], [ null, %9 ]
  %15 = load ptr, ptr %1, align 8, !tbaa !6
  %16 = icmp eq ptr %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !6
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 65535
  %23 = icmp eq i64 %22, 58
  %24 = getelementptr inbounds %struct.tree_exp, ptr %20, i64 1
  %25 = select i1 %23, ptr %24, ptr %19
  %26 = load ptr, ptr %25, align 8, !tbaa !6
  call void @append_to_statement_list_force(ptr noundef %26, ptr noundef nonnull %1) #22
  %27 = load ptr, ptr %1, align 8, !tbaa !6
  store ptr %27, ptr %25, align 8, !tbaa !6
  br label %28

28:                                               ; preds = %0, %13, %17
  %29 = phi i1 [ %8, %17 ], [ %8, %13 ], [ true, %0 ]
  %30 = phi ptr [ %14, %17 ], [ %14, %13 ], [ null, %0 ]
  br label %31

31:                                               ; preds = %28, %31
  %32 = phi ptr [ %37, %31 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 51), %28 ]
  %33 = phi i32 [ %34, %31 ], [ 0, %28 ]
  store ptr null, ptr %32, align 8, !tbaa !6
  %34 = add i32 %33, 1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [4 x %struct.fname_var_t], ptr @fname_vars, i64 0, i64 %35
  %37 = load ptr, ptr %36, align 16, !tbaa !76
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %31, !llvm.loop !80

39:                                               ; preds = %31
  br i1 %29, label %61, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct.tree_list, ptr %30, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = icmp eq ptr %42, null
  br i1 %43, label %58, label %44

44:                                               ; preds = %40, %44
  %45 = phi ptr [ %56, %44 ], [ %42, %40 ]
  %46 = getelementptr inbounds %struct.tree_list, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = getelementptr inbounds %struct.tree_list, ptr %45, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.tree_int_cst, ptr %49, i64 0, i32 1
  %51 = load i64, ptr %50, align 8, !tbaa !17
  %52 = and i64 %51, 4294967295
  %53 = getelementptr inbounds [4 x %struct.fname_var_t], ptr @fname_vars, i64 0, i64 %52
  %54 = load ptr, ptr %53, align 16, !tbaa !76
  store ptr %47, ptr %54, align 8, !tbaa !6
  %55 = getelementptr inbounds %struct.tree_common, ptr %45, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %44, !llvm.loop !81

58:                                               ; preds = %44, %40
  %59 = getelementptr inbounds %struct.tree_common, ptr %30, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  br label %61

61:                                               ; preds = %58, %39
  %62 = phi ptr [ %60, %58 ], [ null, %39 ]
  store ptr %62, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 52), align 16, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #22
  ret void
}

declare void @append_to_statement_list(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @append_to_statement_list_force(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @fname_as_string(i32 noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.cpp_string, align 8
  %3 = alloca %struct.cpp_string, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #22
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #22
  %4 = icmp eq i32 %0, 0
  %5 = select i1 %4, ptr @.str.273, ptr @.str.274
  %6 = load ptr, ptr @current_function_decl, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = select i1 %4, i32 0, i32 2
  %10 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 22), align 8, !tbaa !82
  %11 = tail call ptr %10(ptr noundef nonnull %6, i32 noundef %9) #22
  br label %12

12:                                               ; preds = %8, %1
  %13 = phi ptr [ %11, %8 ], [ %5, %1 ]
  %14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %13)
  %15 = trunc i64 %14 to i32
  %16 = shl i64 %14, 32
  %17 = add i64 %16, 12884901888
  %18 = ashr exact i64 %17, 32
  %19 = tail call ptr @xmalloc(i64 noundef %18) #22
  %20 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %19, i64 noundef %18, ptr noundef nonnull @.str.275, ptr noundef %13)
  %21 = getelementptr inbounds %struct.cpp_string, ptr %3, i64 0, i32 1
  store ptr %19, ptr %21, align 8, !tbaa !83
  %22 = add i32 %15, 2
  store i32 %22, ptr %3, align 8, !tbaa !85
  %23 = load ptr, ptr @parse_in, align 8, !tbaa !6
  %24 = call zeroext i8 @cpp_interpret_string(ptr noundef %23, ptr noundef nonnull %3, i64 noundef 1, ptr noundef nonnull %2, i32 noundef 61) #22
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %12
  call void @free(ptr noundef %19)
  %27 = getelementptr inbounds %struct.cpp_string, ptr %2, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !83
  br label %29

29:                                               ; preds = %12, %26
  %30 = phi ptr [ %28, %26 ], [ %19, %12 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #22
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #22
  ret ptr %30
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

declare ptr @xmalloc(i64 noundef) #3

; Function Attrs: nofree nounwind
declare noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i64 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

declare zeroext i8 @cpp_interpret_string(ptr noundef, ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) #13

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @fname_decl(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = icmp eq i32 %1, 68
  br i1 %4, label %16, label %9

5:                                                ; preds = %9
  %6 = getelementptr inbounds [4 x %struct.fname_var_t], ptr @fname_vars, i64 0, i64 %12, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !86
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %16, label %9, !llvm.loop !87

9:                                                ; preds = %3, %5
  %10 = phi i32 [ %11, %5 ], [ 0, %3 ]
  %11 = add i32 %10, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds [4 x %struct.fname_var_t], ptr @fname_vars, i64 0, i64 %12
  %14 = load ptr, ptr %13, align 16, !tbaa !76
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %5, !llvm.loop !87

16:                                               ; preds = %5, %9, %3
  %17 = phi i32 [ 0, %3 ], [ %11, %9 ], [ %11, %5 ]
  %18 = phi i64 [ 0, %3 ], [ %12, %9 ], [ %12, %5 ]
  %19 = phi ptr [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 51), %3 ], [ %14, %5 ], [ null, %9 ]
  %20 = load ptr, ptr %19, align 8, !tbaa !6
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %48

22:                                               ; preds = %16
  %23 = load i32, ptr @input_location, align 4, !tbaa !21
  store i32 0, ptr @input_location, align 4, !tbaa !21
  %24 = tail call ptr @push_stmt_list() #22
  %25 = load ptr, ptr @make_fname_decl, align 8, !tbaa !6
  %26 = getelementptr inbounds [4 x %struct.fname_var_t], ptr @fname_vars, i64 0, i64 %18, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !88
  %28 = tail call ptr %25(i32 noundef %0, ptr noundef %2, i32 noundef %27) #22
  %29 = tail call ptr @pop_stmt_list(ptr noundef %24) #22
  %30 = load i64, ptr %29, align 8
  %31 = and i64 %30, 65535
  %32 = icmp eq i64 %31, 116
  br i1 %32, label %33, label %44

33:                                               ; preds = %22
  %34 = getelementptr inbounds %struct.tree_common, ptr %29, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = load i64, ptr %35, align 8
  %37 = and i64 %36, 65535
  %38 = icmp eq i64 %37, 19
  br i1 %38, label %39, label %44

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.tree_exp, ptr %29, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = tail call i32 @integer_zerop(ptr noundef %41) #22
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39, %33, %22
  %45 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 52), align 16, !tbaa !6
  %46 = tail call ptr @tree_cons_stat(ptr noundef %28, ptr noundef nonnull %29, ptr noundef %45) #22
  store ptr %46, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 52), align 16, !tbaa !6
  br label %47

47:                                               ; preds = %44, %39
  store ptr %28, ptr %19, align 8, !tbaa !6
  store i32 %23, ptr @input_location, align 4, !tbaa !21
  br label %48

48:                                               ; preds = %47, %16
  %49 = phi ptr [ %20, %16 ], [ %28, %47 ]
  %50 = icmp ne i32 %17, 0
  %51 = load ptr, ptr @current_function_decl, align 8
  %52 = icmp ne ptr %51, null
  %53 = select i1 %50, i1 true, i1 %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 0, ptr noundef nonnull @.str.276, ptr noundef %49) #22
  br label %56

56:                                               ; preds = %54, %48
  ret ptr %49
}

declare ptr @push_stmt_list() local_unnamed_addr #3

declare ptr @pop_stmt_list(ptr noundef) local_unnamed_addr #3

declare i32 @integer_zerop(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @pedwarn(i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @fix_string_type(ptr noundef returned %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_string, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 38), align 16, !tbaa !6
  %7 = icmp eq ptr %5, %6
  %8 = icmp eq ptr %5, null
  %9 = or i1 %8, %7
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = load ptr, ptr @integer_types, align 16, !tbaa !6
  br label %39

12:                                               ; preds = %1
  %13 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 39), align 8, !tbaa !6
  %14 = icmp eq ptr %5, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %12
  %16 = load ptr, ptr @c_global_trees, align 16, !tbaa !6
  %17 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 6
  %18 = load i32, ptr %17, align 4
  %19 = lshr i32 %18, 3
  %20 = and i32 %19, 127
  %21 = sdiv i32 %3, %20
  br label %39

22:                                               ; preds = %12
  %23 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 40), align 16, !tbaa !6
  %24 = icmp eq ptr %5, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %22
  %26 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 1), align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.tree_type, ptr %26, i64 0, i32 6
  %28 = load i32, ptr %27, align 4
  %29 = lshr i32 %28, 3
  %30 = and i32 %29, 127
  %31 = sdiv i32 %3, %30
  br label %39

32:                                               ; preds = %22
  %33 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 2), align 16, !tbaa !6
  %34 = getelementptr inbounds %struct.tree_type, ptr %33, i64 0, i32 6
  %35 = load i32, ptr %34, align 4
  %36 = lshr i32 %35, 3
  %37 = and i32 %36, 127
  %38 = sdiv i32 %3, %37
  br label %39

39:                                               ; preds = %15, %32, %25, %10
  %40 = phi ptr [ %11, %10 ], [ %16, %15 ], [ %26, %25 ], [ %33, %32 ]
  %41 = phi i32 [ %3, %10 ], [ %21, %15 ], [ %31, %25 ], [ %38, %32 ]
  %42 = load i32, ptr @warn_overlength_strings, align 4, !tbaa !21
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = add nsw i32 %41, -1
  br label %56

46:                                               ; preds = %39
  %47 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, i32 509, i32 4095
  %50 = add nsw i32 %41, -1
  %51 = icmp sgt i32 %50, %49
  br i1 %51, label %52, label %56

52:                                               ; preds = %46
  %53 = select i1 %48, i32 90, i32 99
  %54 = load i32, ptr @input_location, align 4, !tbaa !21
  %55 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %54, i32 noundef 152, ptr noundef nonnull @.str.277, i32 noundef %50, i32 noundef %49, i32 noundef %53) #22
  br label %56

56:                                               ; preds = %44, %46, %52
  %57 = phi i32 [ %45, %44 ], [ %50, %46 ], [ %50, %52 ]
  %58 = sext i32 %57 to i64
  %59 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef %58) #22
  %60 = tail call ptr @build_index_type(ptr noundef %59) #22
  %61 = tail call ptr @build_array_type(ptr noundef %40, ptr noundef %60) #22
  %62 = load i32, ptr @c_language, align 4, !tbaa !17
  %63 = and i32 %62, 2
  %64 = icmp ne i32 %63, 0
  %65 = load i32, ptr @warn_write_strings, align 4
  %66 = icmp ne i32 %65, 0
  %67 = select i1 %64, i1 true, i1 %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %56
  %69 = tail call ptr @c_build_qualified_type(ptr noundef %61, i32 noundef 1) #22
  br label %70

70:                                               ; preds = %56, %68
  %71 = phi ptr [ %69, %68 ], [ %61, %56 ]
  store ptr %71, ptr %4, align 8, !tbaa !17
  %72 = load i64, ptr %0, align 8
  %73 = or i64 %72, 68288512
  store i64 %73, ptr %0, align 8
  ret ptr %0
}

declare ptr @build_index_type(ptr noundef) local_unnamed_addr #3

declare ptr @build_array_type(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @c_build_qualified_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_fully_fold(ptr noundef %0, i8 noundef zeroext %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #22
  store i8 1, ptr %4, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #22
  store i8 1, ptr %5, align 1, !tbaa !17
  %6 = load i64, ptr %0, align 8
  %7 = and i64 %6, 65535
  %8 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !17
  %10 = add i32 %9, -4
  %11 = icmp ult i32 %10, 7
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !17
  br label %15

15:                                               ; preds = %3, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %3 ]
  %17 = load i32, ptr @c_language, align 4, !tbaa !17
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 1121, ptr noundef nonnull @.str.238) #22
  %21 = load i64, ptr %0, align 8
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i64 [ %21, %20 ], [ %6, %15 ]
  %24 = icmp eq ptr %2, null
  %25 = select i1 %24, ptr %4, ptr %2
  %26 = and i64 %23, 65535
  %27 = icmp eq i64 %26, 190
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = call fastcc ptr @c_fully_fold_internal(ptr noundef nonnull %0, i8 noundef zeroext %1, ptr noundef nonnull %25, ptr noundef nonnull %5)
  br label %39

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = call fastcc ptr @c_fully_fold_internal(ptr noundef %34, i8 noundef zeroext %1, ptr noundef nonnull %25, ptr noundef nonnull %5)
  %36 = icmp eq ptr %32, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = call ptr @fold_convert_loc(i32 noundef %16, ptr noundef nonnull %32, ptr noundef %35) #22
  br label %39

39:                                               ; preds = %28, %37, %30
  %40 = phi ptr [ %38, %37 ], [ %35, %30 ], [ %29, %28 ]
  %41 = load i8, ptr %5, align 1, !tbaa !17
  %42 = load i8, ptr %25, align 1, !tbaa !17
  %43 = and i8 %42, %41
  store i8 %43, ptr %25, align 1, !tbaa !17
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #22
  ret ptr %40
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @c_fully_fold_internal(ptr noundef %0, i8 noundef zeroext %1, ptr noundef %2, ptr noundef %3) unnamed_addr #9 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 65535
  %14 = and i64 %11, 65535
  %15 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %14
  %16 = load i32, ptr %15, align 4, !tbaa !17
  %17 = add i32 %16, -4
  %18 = icmp ult i32 %17, 7
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %21 = load i32, ptr %20, align 8, !tbaa !17
  br label %22

22:                                               ; preds = %4, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %4 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #22
  store i8 1, ptr %5, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #22
  store i8 1, ptr %6, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #22
  store i8 1, ptr %7, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #22
  store i8 1, ptr %8, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #22
  store i8 1, ptr %9, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %10) #22
  store i8 1, ptr %10, align 1, !tbaa !17
  %24 = load i32, ptr @c_language, align 4, !tbaa !17
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 1165, ptr noundef nonnull @.str.238) #22
  br label %28

28:                                               ; preds = %27, %22
  %29 = add i32 %16, -11
  %30 = icmp ult i32 %29, -7
  %31 = icmp eq i32 %16, 8
  %32 = or i1 %31, %30
  %33 = icmp eq i32 %13, 120
  %34 = or i1 %33, %32
  br i1 %34, label %697, label %35

35:                                               ; preds = %28
  %36 = icmp eq i32 %16, 9
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  store i8 0, ptr %2, align 1, !tbaa !17
  %38 = tail call ptr @fold(ptr noundef nonnull %0) #22
  br label %653

39:                                               ; preds = %35
  %40 = icmp eq i32 %13, 189
  br i1 %40, label %41, label %64

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = load i64, ptr %0, align 8
  %47 = and i64 %46, 17179869184
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %41
  store i8 0, ptr %2, align 1, !tbaa !17
  %50 = load i64, ptr %0, align 8
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi i64 [ %50, %49 ], [ %46, %41 ]
  %53 = and i64 %52, 8589934592
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  store i8 0, ptr %3, align 1, !tbaa !17
  br label %56

56:                                               ; preds = %55, %51
  %57 = icmp eq ptr %43, null
  %58 = icmp ne i8 %1, 0
  %59 = or i1 %58, %57
  br i1 %59, label %653, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %62, ptr noundef nonnull %43, ptr noundef %45) #22
  br label %653

64:                                               ; preds = %39
  %65 = trunc i64 %11 to i16
  switch i16 %65, label %69 [
    i16 53, label %66
    i16 125, label %66
    i16 126, label %66
    i16 127, label %66
    i16 128, label %66
    i16 52, label %66
    i16 129, label %67
    i16 55, label %67
    i16 58, label %67
    i16 50, label %67
  ]

66:                                               ; preds = %64, %64, %64, %64, %64, %64
  store i8 0, ptr %2, align 1, !tbaa !17
  br label %69

67:                                               ; preds = %64, %64, %64, %64
  store i8 0, ptr %2, align 1, !tbaa !17
  %68 = tail call ptr @fold(ptr noundef nonnull %0) #22
  br label %653

69:                                               ; preds = %64, %66
  switch i16 %65, label %653 [
    i16 190, label %652
    i16 41, label %70
    i16 45, label %110
    i16 52, label %179
    i16 53, label %179
    i16 125, label %179
    i16 126, label %179
    i16 127, label %179
    i16 128, label %179
    i16 63, label %179
    i16 64, label %179
    i16 65, label %179
    i16 66, label %179
    i16 67, label %179
    i16 68, label %179
    i16 69, label %179
    i16 71, label %179
    i16 75, label %179
    i16 76, label %179
    i16 83, label %179
    i16 84, label %179
    i16 87, label %179
    i16 88, label %179
    i16 89, label %179
    i16 97, label %179
    i16 98, label %179
    i16 99, label %179
    i16 100, label %179
    i16 101, label %179
    i16 102, label %179
    i16 123, label %179
    i16 93, label %179
    i16 94, label %179
    i16 95, label %179
    i16 103, label %179
    i16 104, label %179
    i16 105, label %179
    i16 106, label %179
    i16 107, label %179
    i16 108, label %179
    i16 109, label %179
    i16 47, label %314
    i16 77, label %314
    i16 78, label %314
    i16 116, label %314
    i16 113, label %314
    i16 117, label %314
    i16 79, label %314
    i16 90, label %314
    i16 96, label %314
    i16 121, label %314
    i16 124, label %314
    i16 43, label %314
    i16 44, label %314
    i16 91, label %403
    i16 92, label %403
    i16 56, label %512
  ]

70:                                               ; preds = %69
  %71 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = tail call fastcc ptr @c_fully_fold_internal(ptr noundef %72, i8 noundef zeroext %1, ptr noundef %2, ptr noundef %3)
  %78 = load ptr, ptr @global_trees, align 16
  br label %79

79:                                               ; preds = %87, %70
  %80 = phi ptr [ %77, %70 ], [ %85, %87 ]
  %81 = load i64, ptr %80, align 8
  %82 = trunc i64 %81 to i16
  switch i16 %82, label %93 [
    i16 116, label %83
    i16 113, label %83
    i16 117, label %83
  ]

83:                                               ; preds = %79, %79, %79
  %84 = getelementptr inbounds %struct.tree_exp, ptr %80, i64 0, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = icmp eq ptr %85, %78
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.tree_common, ptr %80, i64 0, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !17
  %90 = getelementptr inbounds %struct.tree_common, ptr %85, i64 0, i32 2
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = icmp eq ptr %89, %91
  br i1 %92, label %79, label %93, !llvm.loop !89

93:                                               ; preds = %79, %83, %87
  %94 = icmp eq ptr %80, %72
  br i1 %94, label %653, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  %98 = tail call ptr @build3_stat(i32 noundef 41, ptr noundef %97, ptr noundef nonnull %80, ptr noundef %74, ptr noundef %76) #22
  %99 = icmp eq ptr %98, %0
  br i1 %99, label %653, label %100

100:                                              ; preds = %95
  %101 = load i64, ptr %0, align 8
  %102 = and i64 %101, 1048576
  %103 = load i64, ptr %98, align 8
  %104 = and i64 %103, -1048577
  %105 = or i64 %104, %102
  store i64 %105, ptr %98, align 8
  %106 = load i64, ptr %0, align 8
  %107 = and i64 %106, 524288
  %108 = and i64 %105, -524289
  %109 = or i64 %108, %107
  store i64 %109, ptr %98, align 8
  br label %653

110:                                              ; preds = %69
  %111 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %112 = load ptr, ptr %111, align 8, !tbaa !17
  %113 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  %115 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 2
  %118 = load ptr, ptr %117, align 8, !tbaa !17
  %119 = tail call fastcc ptr @c_fully_fold_internal(ptr noundef %112, i8 noundef zeroext %1, ptr noundef %2, ptr noundef %3)
  %120 = load ptr, ptr @global_trees, align 16
  br label %121

121:                                              ; preds = %129, %110
  %122 = phi ptr [ %119, %110 ], [ %127, %129 ]
  %123 = load i64, ptr %122, align 8
  %124 = trunc i64 %123 to i16
  switch i16 %124, label %135 [
    i16 116, label %125
    i16 113, label %125
    i16 117, label %125
  ]

125:                                              ; preds = %121, %121, %121
  %126 = getelementptr inbounds %struct.tree_exp, ptr %122, i64 0, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  %128 = icmp eq ptr %127, %120
  br i1 %128, label %135, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.tree_common, ptr %122, i64 0, i32 2
  %131 = load ptr, ptr %130, align 8, !tbaa !17
  %132 = getelementptr inbounds %struct.tree_common, ptr %127, i64 0, i32 2
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  %134 = icmp eq ptr %131, %133
  br i1 %134, label %121, label %135, !llvm.loop !90

135:                                              ; preds = %121, %125, %129
  %136 = tail call fastcc ptr @c_fully_fold_internal(ptr noundef %114, i8 noundef zeroext %1, ptr noundef %2, ptr noundef %3)
  %137 = load ptr, ptr @global_trees, align 16
  br label %138

138:                                              ; preds = %146, %135
  %139 = phi ptr [ %136, %135 ], [ %144, %146 ]
  %140 = load i64, ptr %139, align 8
  %141 = trunc i64 %140 to i16
  switch i16 %141, label %152 [
    i16 116, label %142
    i16 113, label %142
    i16 117, label %142
  ]

142:                                              ; preds = %138, %138, %138
  %143 = getelementptr inbounds %struct.tree_exp, ptr %139, i64 0, i32 3
  %144 = load ptr, ptr %143, align 8, !tbaa !17
  %145 = icmp eq ptr %144, %137
  br i1 %145, label %152, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.tree_common, ptr %139, i64 0, i32 2
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = getelementptr inbounds %struct.tree_common, ptr %144, i64 0, i32 2
  %150 = load ptr, ptr %149, align 8, !tbaa !17
  %151 = icmp eq ptr %148, %150
  br i1 %151, label %138, label %152, !llvm.loop !91

152:                                              ; preds = %138, %142, %146
  %153 = tail call ptr @decl_constant_value_for_optimization(ptr noundef nonnull %139)
  %154 = icmp eq ptr %122, %112
  %155 = icmp eq ptr %153, %114
  %156 = select i1 %154, i1 %155, i1 false
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %159 = load ptr, ptr %158, align 8, !tbaa !17
  %160 = tail call ptr @build4_stat(i32 noundef 45, ptr noundef %159, ptr noundef nonnull %122, ptr noundef %153, ptr noundef %116, ptr noundef %118) #22
  %161 = icmp eq ptr %160, %0
  br i1 %161, label %176, label %162

162:                                              ; preds = %157
  %163 = load i64, ptr %0, align 8
  %164 = and i64 %163, 1048576
  %165 = load i64, ptr %160, align 8
  %166 = and i64 %165, -1048577
  %167 = or i64 %166, %164
  store i64 %167, ptr %160, align 8
  %168 = load i64, ptr %0, align 8
  %169 = and i64 %168, 65536
  %170 = and i64 %167, -65537
  %171 = or i64 %170, %169
  store i64 %171, ptr %160, align 8
  %172 = load i64, ptr %0, align 8
  %173 = and i64 %172, 524288
  %174 = and i64 %171, -524289
  %175 = or i64 %174, %173
  store i64 %175, ptr %160, align 8
  br label %176

176:                                              ; preds = %152, %162, %157
  %177 = phi ptr [ %160, %162 ], [ %0, %157 ], [ %0, %152 ]
  %178 = tail call ptr @fold(ptr noundef %177) #22
  br label %653

179:                                              ; preds = %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69
  %180 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %181 = load ptr, ptr %180, align 8, !tbaa !17
  %182 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %183 = load ptr, ptr %182, align 8, !tbaa !17
  %184 = tail call fastcc ptr @c_fully_fold_internal(ptr noundef %181, i8 noundef zeroext %1, ptr noundef %2, ptr noundef %3)
  %185 = load ptr, ptr @global_trees, align 16
  br label %186

186:                                              ; preds = %194, %179
  %187 = phi ptr [ %184, %179 ], [ %192, %194 ]
  %188 = load i64, ptr %187, align 8
  %189 = trunc i64 %188 to i16
  switch i16 %189, label %200 [
    i16 116, label %190
    i16 113, label %190
    i16 117, label %190
  ]

190:                                              ; preds = %186, %186, %186
  %191 = getelementptr inbounds %struct.tree_exp, ptr %187, i64 0, i32 3
  %192 = load ptr, ptr %191, align 8, !tbaa !17
  %193 = icmp eq ptr %192, %185
  br i1 %193, label %200, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %struct.tree_common, ptr %187, i64 0, i32 2
  %196 = load ptr, ptr %195, align 8, !tbaa !17
  %197 = getelementptr inbounds %struct.tree_common, ptr %192, i64 0, i32 2
  %198 = load ptr, ptr %197, align 8, !tbaa !17
  %199 = icmp eq ptr %196, %198
  br i1 %199, label %186, label %200, !llvm.loop !92

200:                                              ; preds = %186, %190, %194
  %201 = icmp eq i32 %13, 53
  switch i16 %65, label %202 [
    i16 128, label %204
    i16 127, label %204
    i16 126, label %204
    i16 125, label %204
    i16 53, label %204
  ]

202:                                              ; preds = %200
  %203 = tail call ptr @decl_constant_value_for_optimization(ptr noundef nonnull %187)
  br label %204

204:                                              ; preds = %200, %200, %200, %200, %200, %202
  %205 = phi ptr [ %203, %202 ], [ %187, %200 ], [ %187, %200 ], [ %187, %200 ], [ %187, %200 ], [ %187, %200 ]
  br i1 %201, label %208, label %206

206:                                              ; preds = %204
  %207 = tail call fastcc ptr @c_fully_fold_internal(ptr noundef %183, i8 noundef zeroext %1, ptr noundef %2, ptr noundef %3)
  br label %208

208:                                              ; preds = %206, %204
  %209 = phi ptr [ %207, %206 ], [ %183, %204 ]
  %210 = load ptr, ptr @global_trees, align 16
  br label %211

211:                                              ; preds = %219, %208
  %212 = phi ptr [ %209, %208 ], [ %217, %219 ]
  %213 = load i64, ptr %212, align 8
  %214 = trunc i64 %213 to i16
  switch i16 %214, label %225 [
    i16 116, label %215
    i16 113, label %215
    i16 117, label %215
  ]

215:                                              ; preds = %211, %211, %211
  %216 = getelementptr inbounds %struct.tree_exp, ptr %212, i64 0, i32 3
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = icmp eq ptr %217, %210
  br i1 %218, label %225, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.tree_common, ptr %212, i64 0, i32 2
  %221 = load ptr, ptr %220, align 8, !tbaa !17
  %222 = getelementptr inbounds %struct.tree_common, ptr %217, i64 0, i32 2
  %223 = load ptr, ptr %222, align 8, !tbaa !17
  %224 = icmp eq ptr %221, %223
  br i1 %224, label %211, label %225, !llvm.loop !93

225:                                              ; preds = %211, %215, %219
  %226 = load i32, ptr @c_language, align 4, !tbaa !17
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %230, label %229

229:                                              ; preds = %225
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 1522, ptr noundef nonnull @.str.238) #22
  br label %230

230:                                              ; preds = %229, %225
  %231 = load i32, ptr @optimize, align 4, !tbaa !21
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %257, label %233

233:                                              ; preds = %230
  %234 = load i64, ptr %212, align 8
  %235 = and i64 %234, 65535
  %236 = icmp eq i64 %235, 32
  br i1 %236, label %237, label %257

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.tree_common, ptr %212, i64 0, i32 2
  %239 = load ptr, ptr %238, align 8, !tbaa !17
  %240 = load i64, ptr %239, align 8
  %241 = and i64 %240, 65535
  %242 = icmp eq i64 %241, 15
  br i1 %242, label %257, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %struct.tree_decl_common, ptr %212, i64 0, i32 2
  %245 = load i64, ptr %244, align 8
  %246 = and i64 %245, 255
  %247 = icmp eq i64 %246, 1
  br i1 %247, label %257, label %248

248:                                              ; preds = %243
  %249 = tail call ptr @decl_constant_value(ptr noundef nonnull %212) #22
  %250 = icmp eq ptr %249, %212
  br i1 %250, label %257, label %251

251:                                              ; preds = %248
  %252 = load i64, ptr %212, align 8
  %253 = and i64 %252, 67108864
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %257, label %255

255:                                              ; preds = %251
  %256 = tail call ptr @unshare_expr(ptr noundef %249) #22
  br label %257

257:                                              ; preds = %230, %233, %237, %243, %248, %251, %255
  %258 = phi ptr [ %212, %243 ], [ %212, %237 ], [ %212, %233 ], [ %212, %230 ], [ %256, %255 ], [ %249, %251 ], [ %212, %248 ]
  %259 = icmp eq ptr %205, %181
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = icmp ne ptr %258, %183
  %262 = icmp ne i8 %1, 0
  %263 = or i1 %262, %261
  br i1 %263, label %264, label %272

264:                                              ; preds = %260, %257
  %265 = icmp eq i8 %1, 0
  %266 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %267 = load ptr, ptr %266, align 8, !tbaa !17
  br i1 %265, label %270, label %268

268:                                              ; preds = %264
  %269 = tail call ptr @fold_build2_initializer_loc(i32 noundef %23, i32 noundef %13, ptr noundef %267, ptr noundef %205, ptr noundef %258) #22
  br label %274

270:                                              ; preds = %264
  %271 = tail call ptr @fold_build2_stat_loc(i32 noundef %23, i32 noundef %13, ptr noundef %267, ptr noundef %205, ptr noundef %258) #22
  br label %274

272:                                              ; preds = %260
  %273 = tail call ptr @fold(ptr noundef nonnull %0) #22
  br label %274

274:                                              ; preds = %268, %270, %272
  %275 = phi ptr [ %273, %272 ], [ %269, %268 ], [ %271, %270 ]
  %276 = load i64, ptr %275, align 8
  %277 = and i64 %276, 65535
  %278 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %277
  %279 = load i32, ptr %278, align 4, !tbaa !17
  %280 = icmp ne i32 %279, 1
  %281 = and i64 %276, 134217728
  %282 = icmp eq i64 %281, 0
  %283 = or i1 %280, %282
  br i1 %283, label %653, label %284

284:                                              ; preds = %274
  %285 = load i64, ptr %205, align 8
  %286 = and i64 %285, 65535
  %287 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !17
  %289 = icmp ne i32 %288, 1
  %290 = and i64 %285, 134217728
  %291 = icmp eq i64 %290, 0
  %292 = or i1 %289, %291
  br i1 %292, label %293, label %653

293:                                              ; preds = %284
  %294 = load i64, ptr %258, align 8
  %295 = and i64 %294, 65535
  %296 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %295
  %297 = load i32, ptr %296, align 4, !tbaa !17
  %298 = icmp ne i32 %297, 1
  %299 = and i64 %294, 134217728
  %300 = icmp eq i64 %299, 0
  %301 = or i1 %298, %300
  br i1 %301, label %302, label %653

302:                                              ; preds = %293
  %303 = load i64, ptr %0, align 8
  %304 = and i64 %303, 65535
  %305 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %304
  %306 = load i32, ptr %305, align 4, !tbaa !17
  %307 = add i32 %306, -4
  %308 = icmp ult i32 %307, 7
  br i1 %308, label %309, label %312

309:                                              ; preds = %302
  %310 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %311 = load i32, ptr %310, align 8, !tbaa !17
  br label %312

312:                                              ; preds = %302, %309
  %313 = phi i32 [ %311, %309 ], [ 0, %302 ]
  tail call void @overflow_warning(i32 noundef %313, ptr noundef nonnull %275)
  br label %653

314:                                              ; preds = %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69, %69
  %315 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %316 = load ptr, ptr %315, align 8, !tbaa !17
  %317 = tail call fastcc ptr @c_fully_fold_internal(ptr noundef %316, i8 noundef zeroext %1, ptr noundef %2, ptr noundef %3)
  %318 = load ptr, ptr @global_trees, align 16
  br label %319

319:                                              ; preds = %327, %314
  %320 = phi ptr [ %317, %314 ], [ %325, %327 ]
  %321 = load i64, ptr %320, align 8
  %322 = trunc i64 %321 to i16
  switch i16 %322, label %333 [
    i16 116, label %323
    i16 113, label %323
    i16 117, label %323
  ]

323:                                              ; preds = %319, %319, %319
  %324 = getelementptr inbounds %struct.tree_exp, ptr %320, i64 0, i32 3
  %325 = load ptr, ptr %324, align 8, !tbaa !17
  %326 = icmp eq ptr %325, %318
  br i1 %326, label %333, label %327

327:                                              ; preds = %323
  %328 = getelementptr inbounds %struct.tree_common, ptr %320, i64 0, i32 2
  %329 = load ptr, ptr %328, align 8, !tbaa !17
  %330 = getelementptr inbounds %struct.tree_common, ptr %325, i64 0, i32 2
  %331 = load ptr, ptr %330, align 8, !tbaa !17
  %332 = icmp eq ptr %329, %331
  br i1 %332, label %319, label %333, !llvm.loop !94

333:                                              ; preds = %319, %323, %327
  switch i16 %65, label %334 [
    i16 121, label %336
    i16 44, label %336
    i16 43, label %336
  ]

334:                                              ; preds = %333
  %335 = tail call ptr @decl_constant_value_for_optimization(ptr noundef nonnull %320)
  br label %336

336:                                              ; preds = %333, %333, %333, %334
  %337 = phi ptr [ %335, %334 ], [ %320, %333 ], [ %320, %333 ], [ %320, %333 ]
  %338 = icmp ne ptr %337, %316
  %339 = icmp ne i8 %1, 0
  %340 = or i1 %339, %338
  br i1 %340, label %341, label %348

341:                                              ; preds = %336
  %342 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %343 = load ptr, ptr %342, align 8, !tbaa !17
  br i1 %339, label %344, label %346

344:                                              ; preds = %341
  %345 = tail call ptr @fold_build1_initializer_loc(i32 noundef %23, i32 noundef %13, ptr noundef %343, ptr noundef %337) #22
  br label %350

346:                                              ; preds = %341
  %347 = tail call ptr @fold_build1_stat_loc(i32 noundef %23, i32 noundef %13, ptr noundef %343, ptr noundef %337) #22
  br label %350

348:                                              ; preds = %336
  %349 = tail call ptr @fold(ptr noundef nonnull %0) #22
  br label %350

350:                                              ; preds = %344, %346, %348
  %351 = phi ptr [ %349, %348 ], [ %345, %344 ], [ %347, %346 ]
  %352 = icmp ne i32 %13, 47
  %353 = icmp eq ptr %351, %0
  %354 = select i1 %352, i1 true, i1 %353
  br i1 %354, label %372, label %355

355:                                              ; preds = %350
  %356 = load i64, ptr %351, align 8
  %357 = and i64 %356, 65535
  %358 = icmp eq i64 %357, 47
  br i1 %358, label %359, label %372

359:                                              ; preds = %355
  %360 = load i64, ptr %0, align 8
  %361 = and i64 %360, 1048576
  %362 = and i64 %356, -1048577
  %363 = or i64 %361, %362
  store i64 %363, ptr %351, align 8
  %364 = load i64, ptr %0, align 8
  %365 = and i64 %364, 65536
  %366 = and i64 %363, -65537
  %367 = or i64 %366, %365
  store i64 %367, ptr %351, align 8
  %368 = load i64, ptr %0, align 8
  %369 = and i64 %368, 524288
  %370 = and i64 %367, -524289
  %371 = or i64 %370, %369
  store i64 %371, ptr %351, align 8
  br label %372

372:                                              ; preds = %359, %355, %350
  switch i16 %65, label %373 [
    i16 77, label %653
    i16 78, label %653
    i16 116, label %653
    i16 113, label %653
  ]

373:                                              ; preds = %372
  %374 = load i64, ptr %351, align 8
  %375 = and i64 %374, 65535
  %376 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %375
  %377 = load i32, ptr %376, align 4, !tbaa !17
  %378 = icmp ne i32 %377, 1
  %379 = and i64 %374, 134217728
  %380 = icmp eq i64 %379, 0
  %381 = or i1 %378, %380
  br i1 %381, label %653, label %382

382:                                              ; preds = %373
  %383 = load i64, ptr %337, align 8
  %384 = and i64 %383, 65535
  %385 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %384
  %386 = load i32, ptr %385, align 4, !tbaa !17
  %387 = icmp ne i32 %386, 1
  %388 = and i64 %383, 134217728
  %389 = icmp eq i64 %388, 0
  %390 = or i1 %387, %389
  br i1 %390, label %391, label %653

391:                                              ; preds = %382
  %392 = load i64, ptr %0, align 8
  %393 = and i64 %392, 65535
  %394 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %393
  %395 = load i32, ptr %394, align 4, !tbaa !17
  %396 = add i32 %395, -4
  %397 = icmp ult i32 %396, 7
  br i1 %397, label %398, label %401

398:                                              ; preds = %391
  %399 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %400 = load i32, ptr %399, align 8, !tbaa !17
  br label %401

401:                                              ; preds = %391, %398
  %402 = phi i32 [ %400, %398 ], [ 0, %391 ]
  tail call void @overflow_warning(i32 noundef %402, ptr noundef nonnull %351)
  br label %653

403:                                              ; preds = %69, %69
  %404 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %405 = load ptr, ptr %404, align 8, !tbaa !17
  %406 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %407 = load ptr, ptr %406, align 8, !tbaa !17
  %408 = call fastcc ptr @c_fully_fold_internal(ptr noundef %405, i8 noundef zeroext %1, ptr noundef nonnull %5, ptr noundef nonnull %8)
  %409 = load ptr, ptr @global_trees, align 16
  br label %410

410:                                              ; preds = %418, %403
  %411 = phi ptr [ %408, %403 ], [ %416, %418 ]
  %412 = load i64, ptr %411, align 8
  %413 = trunc i64 %412 to i16
  switch i16 %413, label %424 [
    i16 116, label %414
    i16 113, label %414
    i16 117, label %414
  ]

414:                                              ; preds = %410, %410, %410
  %415 = getelementptr inbounds %struct.tree_exp, ptr %411, i64 0, i32 3
  %416 = load ptr, ptr %415, align 8, !tbaa !17
  %417 = icmp eq ptr %416, %409
  br i1 %417, label %424, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %struct.tree_common, ptr %411, i64 0, i32 2
  %420 = load ptr, ptr %419, align 8, !tbaa !17
  %421 = getelementptr inbounds %struct.tree_common, ptr %416, i64 0, i32 2
  %422 = load ptr, ptr %421, align 8, !tbaa !17
  %423 = icmp eq ptr %420, %422
  br i1 %423, label %410, label %424, !llvm.loop !95

424:                                              ; preds = %410, %414, %418
  %425 = icmp eq i32 %13, 91
  %426 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %427 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %428 = select i1 %425, ptr %426, ptr %427
  %429 = icmp eq ptr %411, %428
  %430 = zext i1 %429 to i32
  %431 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %432 = add nsw i32 %431, %430
  store i32 %432, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %433 = call fastcc ptr @c_fully_fold_internal(ptr noundef %407, i8 noundef zeroext %1, ptr noundef nonnull %6, ptr noundef nonnull %9)
  %434 = load ptr, ptr @global_trees, align 16
  br label %435

435:                                              ; preds = %443, %424
  %436 = phi ptr [ %433, %424 ], [ %441, %443 ]
  %437 = load i64, ptr %436, align 8
  %438 = trunc i64 %437 to i16
  switch i16 %438, label %449 [
    i16 116, label %439
    i16 113, label %439
    i16 117, label %439
  ]

439:                                              ; preds = %435, %435, %435
  %440 = getelementptr inbounds %struct.tree_exp, ptr %436, i64 0, i32 3
  %441 = load ptr, ptr %440, align 8, !tbaa !17
  %442 = icmp eq ptr %441, %434
  br i1 %442, label %449, label %443

443:                                              ; preds = %439
  %444 = getelementptr inbounds %struct.tree_common, ptr %436, i64 0, i32 2
  %445 = load ptr, ptr %444, align 8, !tbaa !17
  %446 = getelementptr inbounds %struct.tree_common, ptr %441, i64 0, i32 2
  %447 = load ptr, ptr %446, align 8, !tbaa !17
  %448 = icmp eq ptr %445, %447
  br i1 %448, label %435, label %449, !llvm.loop !96

449:                                              ; preds = %435, %439, %443
  %450 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %451 = sub nsw i32 %450, %430
  store i32 %451, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %452 = icmp eq ptr %411, %405
  br i1 %452, label %453, label %457

453:                                              ; preds = %449
  %454 = icmp ne ptr %436, %407
  %455 = icmp ne i8 %1, 0
  %456 = or i1 %455, %454
  br i1 %456, label %457, label %465

457:                                              ; preds = %453, %449
  %458 = icmp eq i8 %1, 0
  %459 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %460 = load ptr, ptr %459, align 8, !tbaa !17
  br i1 %458, label %463, label %461

461:                                              ; preds = %457
  %462 = call ptr @fold_build2_initializer_loc(i32 noundef %23, i32 noundef %13, ptr noundef %460, ptr noundef nonnull %411, ptr noundef nonnull %436) #22
  br label %467

463:                                              ; preds = %457
  %464 = call ptr @fold_build2_stat_loc(i32 noundef %23, i32 noundef %13, ptr noundef %460, ptr noundef nonnull %411, ptr noundef nonnull %436) #22
  br label %467

465:                                              ; preds = %453
  %466 = call ptr @fold(ptr noundef nonnull %0) #22
  br label %467

467:                                              ; preds = %461, %463, %465
  %468 = phi ptr [ %466, %465 ], [ %462, %461 ], [ %464, %463 ]
  %469 = load i8, ptr %5, align 1
  %470 = load i8, ptr %2, align 1, !tbaa !17
  %471 = and i8 %470, %469
  store i8 %471, ptr %2, align 1, !tbaa !17
  %472 = load i8, ptr %8, align 1
  %473 = load i8, ptr %3, align 1, !tbaa !17
  %474 = and i8 %473, %472
  store i8 %474, ptr %3, align 1, !tbaa !17
  %475 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %476 = icmp ne i32 %475, 0
  %477 = icmp ne i8 %469, 0
  %478 = select i1 %476, i1 %477, i1 false
  %479 = icmp ne i8 %472, 0
  %480 = select i1 %478, i1 %479, i1 false
  br i1 %480, label %481, label %488

481:                                              ; preds = %467
  br i1 %425, label %482, label %485

482:                                              ; preds = %481
  %483 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8, !tbaa !6
  %484 = icmp eq ptr %411, %483
  br i1 %484, label %502, label %493

485:                                              ; preds = %481
  %486 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  %487 = icmp eq ptr %411, %486
  br i1 %487, label %505, label %497

488:                                              ; preds = %467
  %489 = load i8, ptr %6, align 1, !tbaa !17
  %490 = load i8, ptr %2, align 1, !tbaa !17
  %491 = and i8 %490, %489
  store i8 %491, ptr %2, align 1, !tbaa !17
  %492 = select i1 %477, i1 %479, i1 false
  br i1 %492, label %501, label %508

493:                                              ; preds = %482
  %494 = load i8, ptr %6, align 1, !tbaa !17
  %495 = load i8, ptr %2, align 1, !tbaa !17
  %496 = and i8 %495, %494
  store i8 %496, ptr %2, align 1, !tbaa !17
  br label %502

497:                                              ; preds = %485
  %498 = load i8, ptr %6, align 1, !tbaa !17
  %499 = load i8, ptr %2, align 1, !tbaa !17
  %500 = and i8 %499, %498
  store i8 %500, ptr %2, align 1, !tbaa !17
  br label %505

501:                                              ; preds = %488
  br i1 %425, label %502, label %505

502:                                              ; preds = %482, %493, %501
  %503 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8, !tbaa !6
  %504 = icmp eq ptr %411, %503
  br i1 %504, label %653, label %508

505:                                              ; preds = %485, %497, %501
  %506 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  %507 = icmp eq ptr %411, %506
  br i1 %507, label %653, label %508

508:                                              ; preds = %505, %502, %488
  %509 = load i8, ptr %9, align 1, !tbaa !17
  %510 = load i8, ptr %3, align 1, !tbaa !17
  %511 = and i8 %510, %509
  store i8 %511, ptr %3, align 1, !tbaa !17
  br label %653

512:                                              ; preds = %69
  %513 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %514 = load ptr, ptr %513, align 8, !tbaa !17
  %515 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1
  %516 = load ptr, ptr %515, align 8, !tbaa !17
  %517 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 1, i32 0, i32 1
  %518 = load ptr, ptr %517, align 8, !tbaa !17
  %519 = call fastcc ptr @c_fully_fold_internal(ptr noundef %514, i8 noundef zeroext %1, ptr noundef nonnull %5, ptr noundef nonnull %8)
  %520 = load ptr, ptr @global_trees, align 16
  br label %521

521:                                              ; preds = %529, %512
  %522 = phi ptr [ %519, %512 ], [ %527, %529 ]
  %523 = load i64, ptr %522, align 8
  %524 = trunc i64 %523 to i16
  switch i16 %524, label %535 [
    i16 116, label %525
    i16 113, label %525
    i16 117, label %525
  ]

525:                                              ; preds = %521, %521, %521
  %526 = getelementptr inbounds %struct.tree_exp, ptr %522, i64 0, i32 3
  %527 = load ptr, ptr %526, align 8, !tbaa !17
  %528 = icmp eq ptr %527, %520
  br i1 %528, label %535, label %529

529:                                              ; preds = %525
  %530 = getelementptr inbounds %struct.tree_common, ptr %522, i64 0, i32 2
  %531 = load ptr, ptr %530, align 8, !tbaa !17
  %532 = getelementptr inbounds %struct.tree_common, ptr %527, i64 0, i32 2
  %533 = load ptr, ptr %532, align 8, !tbaa !17
  %534 = icmp eq ptr %531, %533
  br i1 %534, label %521, label %535, !llvm.loop !97

535:                                              ; preds = %521, %525, %529
  %536 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8, !tbaa !6
  %537 = icmp eq ptr %522, %536
  %538 = zext i1 %537 to i32
  %539 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %540 = add nsw i32 %539, %538
  store i32 %540, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %541 = call fastcc ptr @c_fully_fold_internal(ptr noundef %516, i8 noundef zeroext %1, ptr noundef nonnull %6, ptr noundef nonnull %9)
  %542 = load ptr, ptr @global_trees, align 16
  br label %543

543:                                              ; preds = %551, %535
  %544 = phi ptr [ %541, %535 ], [ %549, %551 ]
  %545 = load i64, ptr %544, align 8
  %546 = trunc i64 %545 to i16
  switch i16 %546, label %557 [
    i16 116, label %547
    i16 113, label %547
    i16 117, label %547
  ]

547:                                              ; preds = %543, %543, %543
  %548 = getelementptr inbounds %struct.tree_exp, ptr %544, i64 0, i32 3
  %549 = load ptr, ptr %548, align 8, !tbaa !17
  %550 = icmp eq ptr %549, %542
  br i1 %550, label %557, label %551

551:                                              ; preds = %547
  %552 = getelementptr inbounds %struct.tree_common, ptr %544, i64 0, i32 2
  %553 = load ptr, ptr %552, align 8, !tbaa !17
  %554 = getelementptr inbounds %struct.tree_common, ptr %549, i64 0, i32 2
  %555 = load ptr, ptr %554, align 8, !tbaa !17
  %556 = icmp eq ptr %553, %555
  br i1 %556, label %543, label %557, !llvm.loop !98

557:                                              ; preds = %543, %547, %551
  %558 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8, !tbaa !6
  %559 = icmp eq ptr %522, %558
  %560 = sext i1 %559 to i32
  %561 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %562 = add i32 %561, %560
  %563 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  %564 = icmp eq ptr %522, %563
  %565 = zext i1 %564 to i32
  %566 = add nsw i32 %562, %565
  store i32 %566, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %567 = call fastcc ptr @c_fully_fold_internal(ptr noundef %518, i8 noundef zeroext %1, ptr noundef nonnull %7, ptr noundef nonnull %10)
  %568 = load ptr, ptr @global_trees, align 16
  br label %569

569:                                              ; preds = %577, %557
  %570 = phi ptr [ %567, %557 ], [ %575, %577 ]
  %571 = load i64, ptr %570, align 8
  %572 = trunc i64 %571 to i16
  switch i16 %572, label %583 [
    i16 116, label %573
    i16 113, label %573
    i16 117, label %573
  ]

573:                                              ; preds = %569, %569, %569
  %574 = getelementptr inbounds %struct.tree_exp, ptr %570, i64 0, i32 3
  %575 = load ptr, ptr %574, align 8, !tbaa !17
  %576 = icmp eq ptr %575, %568
  br i1 %576, label %583, label %577

577:                                              ; preds = %573
  %578 = getelementptr inbounds %struct.tree_common, ptr %570, i64 0, i32 2
  %579 = load ptr, ptr %578, align 8, !tbaa !17
  %580 = getelementptr inbounds %struct.tree_common, ptr %575, i64 0, i32 2
  %581 = load ptr, ptr %580, align 8, !tbaa !17
  %582 = icmp eq ptr %579, %581
  br i1 %582, label %569, label %583, !llvm.loop !99

583:                                              ; preds = %569, %573, %577
  %584 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  %585 = icmp eq ptr %522, %584
  %586 = sext i1 %585 to i32
  %587 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %588 = add i32 %587, %586
  store i32 %588, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %589 = icmp eq ptr %522, %514
  %590 = icmp eq ptr %544, %516
  %591 = select i1 %589, i1 %590, i1 false
  %592 = icmp eq ptr %570, %518
  %593 = select i1 %591, i1 %592, i1 false
  br i1 %593, label %598, label %594

594:                                              ; preds = %583
  %595 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %596 = load ptr, ptr %595, align 8, !tbaa !17
  %597 = call ptr @fold_build3_stat_loc(i32 noundef %23, i32 noundef %13, ptr noundef %596, ptr noundef nonnull %522, ptr noundef nonnull %544, ptr noundef nonnull %570) #22
  br label %600

598:                                              ; preds = %583
  %599 = call ptr @fold(ptr noundef nonnull %0) #22
  br label %600

600:                                              ; preds = %598, %594
  %601 = phi ptr [ %597, %594 ], [ %599, %598 ]
  %602 = load i8, ptr %5, align 1
  %603 = load i8, ptr %2, align 1, !tbaa !17
  %604 = and i8 %603, %602
  store i8 %604, ptr %2, align 1, !tbaa !17
  %605 = load i8, ptr %8, align 1
  %606 = load i8, ptr %3, align 1, !tbaa !17
  %607 = and i8 %606, %605
  store i8 %607, ptr %3, align 1, !tbaa !17
  %608 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %609 = icmp ne i32 %608, 0
  %610 = icmp ne i8 %602, 0
  %611 = select i1 %609, i1 %610, i1 false
  %612 = icmp ne i8 %605, 0
  %613 = select i1 %611, i1 %612, i1 false
  %614 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %615 = icmp eq ptr %522, %614
  %616 = select i1 %613, i1 %615, i1 false
  br i1 %616, label %622, label %617

617:                                              ; preds = %600
  %618 = load i8, ptr %6, align 1, !tbaa !17
  %619 = load i8, ptr %2, align 1, !tbaa !17
  %620 = and i8 %619, %618
  store i8 %620, ptr %2, align 1, !tbaa !17
  %621 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  br label %622

622:                                              ; preds = %600, %617
  %623 = phi ptr [ %522, %600 ], [ %621, %617 ]
  %624 = select i1 %610, i1 %612, i1 false
  %625 = icmp eq ptr %522, %623
  %626 = select i1 %624, i1 %625, i1 false
  br i1 %626, label %631, label %627

627:                                              ; preds = %622
  %628 = load i8, ptr %9, align 1, !tbaa !17
  %629 = load i8, ptr %3, align 1, !tbaa !17
  %630 = and i8 %629, %628
  store i8 %630, ptr %3, align 1, !tbaa !17
  br label %631

631:                                              ; preds = %622, %627
  %632 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %633 = icmp ne i32 %632, 0
  %634 = select i1 %633, i1 %610, i1 false
  %635 = select i1 %634, i1 %612, i1 false
  %636 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %637 = icmp eq ptr %522, %636
  %638 = select i1 %635, i1 %637, i1 false
  br i1 %638, label %644, label %639

639:                                              ; preds = %631
  %640 = load i8, ptr %7, align 1, !tbaa !17
  %641 = load i8, ptr %2, align 1, !tbaa !17
  %642 = and i8 %641, %640
  store i8 %642, ptr %2, align 1, !tbaa !17
  %643 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  br label %644

644:                                              ; preds = %631, %639
  %645 = phi ptr [ %522, %631 ], [ %643, %639 ]
  %646 = icmp eq ptr %522, %645
  %647 = select i1 %624, i1 %646, i1 false
  br i1 %647, label %653, label %648

648:                                              ; preds = %644
  %649 = load i8, ptr %10, align 1, !tbaa !17
  %650 = load i8, ptr %3, align 1, !tbaa !17
  %651 = and i8 %650, %649
  store i8 %651, ptr %3, align 1, !tbaa !17
  br label %653

652:                                              ; preds = %69
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 1485, ptr noundef nonnull @.str.238) #22
  br label %653

653:                                              ; preds = %93, %644, %382, %293, %284, %60, %56, %652, %69, %648, %502, %505, %508, %372, %372, %372, %372, %401, %373, %274, %312, %95, %100, %176, %67, %37
  %654 = phi ptr [ %38, %37 ], [ %0, %69 ], [ %601, %648 ], [ %468, %502 ], [ %468, %508 ], [ %468, %505 ], [ %351, %401 ], [ %351, %373 ], [ %351, %372 ], [ %351, %372 ], [ %351, %372 ], [ %351, %372 ], [ %275, %312 ], [ %275, %274 ], [ %178, %176 ], [ %98, %100 ], [ %0, %95 ], [ %0, %652 ], [ %68, %67 ], [ %63, %60 ], [ %45, %56 ], [ %275, %284 ], [ %275, %293 ], [ %351, %382 ], [ %601, %644 ], [ %0, %93 ]
  %655 = load i64, ptr %654, align 8
  %656 = or i64 %655, %11
  %657 = load ptr, ptr @global_trees, align 16
  br label %658

658:                                              ; preds = %666, %653
  %659 = phi ptr [ %654, %653 ], [ %664, %666 ]
  %660 = load i64, ptr %659, align 8
  %661 = trunc i64 %660 to i16
  switch i16 %661, label %672 [
    i16 116, label %662
    i16 113, label %662
    i16 117, label %662
  ]

662:                                              ; preds = %658, %658, %658
  %663 = getelementptr inbounds %struct.tree_exp, ptr %659, i64 0, i32 3
  %664 = load ptr, ptr %663, align 8, !tbaa !17
  %665 = icmp eq ptr %664, %657
  br i1 %665, label %672, label %666

666:                                              ; preds = %662
  %667 = getelementptr inbounds %struct.tree_common, ptr %659, i64 0, i32 2
  %668 = load ptr, ptr %667, align 8, !tbaa !17
  %669 = getelementptr inbounds %struct.tree_common, ptr %664, i64 0, i32 2
  %670 = load ptr, ptr %669, align 8, !tbaa !17
  %671 = icmp eq ptr %668, %670
  br i1 %671, label %658, label %672, !llvm.loop !100

672:                                              ; preds = %658, %662, %666
  %673 = and i64 %656, 8388608
  %674 = icmp ne i64 %673, 0
  %675 = and i64 %660, 8388608
  %676 = icmp eq i64 %675, 0
  %677 = and i1 %674, %676
  br i1 %677, label %678, label %693

678:                                              ; preds = %672
  %679 = and i64 %660, 65535
  %680 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %679
  %681 = load i32, ptr %680, align 4, !tbaa !17
  %682 = add i32 %681, -4
  %683 = icmp ult i32 %682, 7
  br i1 %683, label %689, label %684

684:                                              ; preds = %678
  %685 = getelementptr inbounds %struct.tree_common, ptr %659, i64 0, i32 2
  %686 = load ptr, ptr %685, align 8, !tbaa !17
  %687 = call ptr @build1_stat(i32 noundef 116, ptr noundef %686, ptr noundef nonnull %659) #22
  %688 = load i64, ptr %687, align 8
  br label %689

689:                                              ; preds = %678, %684
  %690 = phi i64 [ %688, %684 ], [ %660, %678 ]
  %691 = phi ptr [ %687, %684 ], [ %659, %678 ]
  %692 = or i64 %690, 8388608
  store i64 %692, ptr %691, align 8
  br label %693

693:                                              ; preds = %689, %672
  %694 = phi ptr [ %691, %689 ], [ %659, %672 ]
  %695 = icmp eq ptr %694, %0
  br i1 %695, label %697, label %696

696:                                              ; preds = %693
  call void @protected_set_expr_location(ptr noundef nonnull %694, i32 noundef %23) #22
  br label %697

697:                                              ; preds = %693, %696, %28
  %698 = phi ptr [ %0, %28 ], [ %694, %696 ], [ %0, %693 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #22
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #22
  ret ptr %698
}

declare ptr @fold_convert_loc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @fold(ptr noundef) local_unnamed_addr #3

declare ptr @build2_stat(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build3_stat(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @decl_constant_value_for_optimization(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i32, ptr @c_language, align 4, !tbaa !17
  %3 = and i32 %2, 2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 1522, ptr noundef nonnull @.str.238) #22
  br label %6

6:                                                ; preds = %5, %1
  %7 = load i32, ptr @optimize, align 4, !tbaa !21
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %33, label %9

9:                                                ; preds = %6
  %10 = load i64, ptr %0, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 32
  br i1 %12, label %13, label %33

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 65535
  %18 = icmp eq i64 %17, 15
  br i1 %18, label %33, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 255
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %33, label %24

24:                                               ; preds = %19
  %25 = tail call ptr @decl_constant_value(ptr noundef nonnull %0) #22
  %26 = icmp eq ptr %25, %0
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = load i64, ptr %0, align 8
  %29 = and i64 %28, 67108864
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = tail call ptr @unshare_expr(ptr noundef %25) #22
  br label %33

33:                                               ; preds = %24, %27, %31, %6, %9, %13, %19
  %34 = phi ptr [ %0, %19 ], [ %0, %13 ], [ %0, %9 ], [ %0, %6 ], [ %32, %31 ], [ %25, %27 ], [ %0, %24 ]
  ret ptr %34
}

declare ptr @build4_stat(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @fold_build2_initializer_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @fold_build2_stat_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @overflow_warning(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = load i64, ptr %1, align 8
  %7 = trunc i64 %6 to i16
  switch i16 %7, label %20 [
    i16 23, label %17
    i16 24, label %8
    i16 25, label %9
    i16 27, label %10
    i16 26, label %11
  ]

8:                                                ; preds = %5
  br label %17

9:                                                ; preds = %5
  br label %17

10:                                               ; preds = %5
  br label %17

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.tree_complex, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = load i64, ptr %13, align 8
  %15 = trunc i64 %14 to i16
  switch i16 %15, label %20 [
    i16 23, label %17
    i16 24, label %16
  ]

16:                                               ; preds = %11
  br label %17

17:                                               ; preds = %11, %5, %8, %9, %10, %16
  %18 = phi ptr [ @.str.284, %16 ], [ @.str.282, %10 ], [ @.str.281, %9 ], [ @.str.280, %8 ], [ @.str.279, %5 ], [ @.str.283, %11 ]
  %19 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 151, ptr noundef nonnull %18) #22
  br label %20

20:                                               ; preds = %17, %11, %5, %2
  ret void
}

declare ptr @fold_build1_initializer_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @fold_build1_stat_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @fold_build3_stat_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build1_stat(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @protected_set_expr_location(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @decl_constant_value(ptr noundef) local_unnamed_addr #3

declare ptr @unshare_expr(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @constant_expression_warning(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i32, ptr @warn_overflow, align 4, !tbaa !21
  %3 = icmp ne i32 %2, 0
  %4 = load i32, ptr @pedantic, align 4
  %5 = icmp ne i32 %4, 0
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = load i64, ptr %0, align 8
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 65535
  %11 = add nsw i32 %10, -28
  %12 = icmp ult i32 %11, -5
  %13 = and i64 %8, 134217728
  %14 = icmp eq i64 %13, 0
  %15 = or i1 %14, %12
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = load i32, ptr @input_location, align 4, !tbaa !21
  %18 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %17, i32 noundef 151, ptr noundef nonnull @.str.278) #22
  br label %19

19:                                               ; preds = %7, %16, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @constant_expression_error(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i32
  %4 = and i32 %3, 65535
  %5 = add nsw i32 %4, -28
  %6 = icmp ult i32 %5, -5
  %7 = and i64 %2, 134217728
  %8 = icmp eq i64 %7, 0
  %9 = or i1 %8, %6
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.278) #22
  br label %11

11:                                               ; preds = %1, %10
  ret void
}

declare zeroext i8 @warning_at(i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @warn_logical_operator(i32 noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, ptr noundef %6) local_unnamed_addr #9 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i8, align 1
  %18 = and i32 %1, -3
  %19 = icmp eq i32 %18, 92
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #22
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %17) #22
  store i8 0, ptr %17, align 1, !tbaa !17
  %20 = add i32 %1, -95
  %21 = icmp ult i32 %20, -4
  br i1 %21, label %180, label %22

22:                                               ; preds = %7
  %23 = sext i32 %3 to i64
  %24 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %23
  %25 = load i32, ptr %24, align 4, !tbaa !17
  %26 = freeze i32 %25
  %27 = icmp eq i32 %26, 5
  %28 = add i32 %3, -91
  %29 = icmp ult i32 %28, 6
  %30 = or i1 %29, %27
  br i1 %30, label %63, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = load i64, ptr %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = and i32 %35, 65535
  %37 = add nsw i32 %36, -6
  %38 = icmp ult i32 %37, 3
  br i1 %38, label %39, label %63

39:                                               ; preds = %31
  %40 = load i64, ptr %4, align 8
  %41 = and i64 %40, 65535
  %42 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !17
  %44 = icmp ne i32 %43, 1
  %45 = and i64 %40, 8388608
  %46 = icmp eq i64 %45, 0
  %47 = and i1 %44, %46
  br i1 %47, label %48, label %63

48:                                               ; preds = %39
  %49 = load i64, ptr %6, align 8
  %50 = and i64 %49, 65535
  %51 = icmp eq i64 %50, 23
  br i1 %51, label %52, label %63

52:                                               ; preds = %48
  %53 = tail call i32 @integer_zerop(ptr noundef nonnull %6) #22
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %63

55:                                               ; preds = %52
  %56 = tail call i32 @integer_onep(ptr noundef nonnull %6) #22
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %55
  %59 = select i1 %19, ptr @.str.285, ptr @.str.286
  %60 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 124, ptr noundef nonnull %59) #22
  %61 = load i64, ptr %4, align 8
  %62 = or i64 %61, 8388608
  store i64 %62, ptr %4, align 8
  br label %180

63:                                               ; preds = %22, %31, %55, %52, %48, %39
  %64 = load i64, ptr %4, align 8
  %65 = trunc i64 %64 to i32
  %66 = and i32 %65, 65535
  %67 = and i64 %64, 65535
  %68 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !17
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %180, label %71

71:                                               ; preds = %63
  %72 = load i64, ptr %6, align 8
  %73 = and i64 %72, 65535
  %74 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !17
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %180, label %77

77:                                               ; preds = %71
  %78 = icmp eq i32 %69, 5
  %79 = icmp eq i32 %66, 93
  %80 = or i1 %79, %78
  %81 = icmp eq i32 %66, 91
  %82 = or i1 %81, %80
  %83 = and i32 %65, 65533
  %84 = icmp eq i32 %83, 92
  %85 = or i1 %84, %82
  %86 = add nsw i32 %66, -95
  %87 = icmp ult i32 %86, 2
  %88 = or i1 %87, %85
  br i1 %88, label %97, label %89

89:                                               ; preds = %77
  %90 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = load i64, ptr %91, align 8
  %93 = trunc i64 %92 to i32
  %94 = and i32 %93, 65535
  %95 = add nsw i32 %94, -6
  %96 = icmp ult i32 %95, 3
  br i1 %96, label %97, label %180

97:                                               ; preds = %89, %77
  %98 = trunc i64 %72 to i32
  %99 = and i32 %98, 65535
  %100 = icmp eq i32 %75, 5
  %101 = icmp eq i32 %99, 93
  %102 = or i1 %101, %100
  %103 = icmp eq i32 %99, 91
  %104 = or i1 %103, %102
  %105 = and i32 %98, 65533
  %106 = icmp eq i32 %105, 92
  %107 = or i1 %106, %104
  %108 = add nsw i32 %99, -95
  %109 = icmp ult i32 %108, 2
  %110 = or i1 %109, %107
  br i1 %110, label %119, label %111

111:                                              ; preds = %97
  %112 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %113 = load ptr, ptr %112, align 8, !tbaa !17
  %114 = load i64, ptr %113, align 8
  %115 = trunc i64 %114 to i32
  %116 = and i32 %115, 65535
  %117 = add nsw i32 %116, -6
  %118 = icmp ult i32 %117, 3
  br i1 %118, label %119, label %180

119:                                              ; preds = %111, %97
  %120 = call ptr @make_range(ptr noundef nonnull %4, ptr noundef nonnull %8, ptr noundef nonnull %11, ptr noundef nonnull %14, ptr noundef nonnull %17) #22
  %121 = call ptr @make_range(ptr noundef nonnull %6, ptr noundef nonnull %9, ptr noundef nonnull %12, ptr noundef nonnull %15, ptr noundef nonnull %17) #22
  %122 = icmp eq ptr %120, null
  br i1 %122, label %130, label %123

123:                                              ; preds = %119
  %124 = load i64, ptr %120, align 8
  %125 = and i64 %124, 65535
  %126 = icmp eq i64 %125, 189
  br i1 %126, label %127, label %130

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.tree_exp, ptr %120, i64 1
  %129 = load ptr, ptr %128, align 8, !tbaa !17
  br label %130

130:                                              ; preds = %127, %123, %119
  %131 = phi ptr [ %129, %127 ], [ %120, %123 ], [ null, %119 ]
  %132 = icmp eq ptr %121, null
  br i1 %132, label %140, label %133

133:                                              ; preds = %130
  %134 = load i64, ptr %121, align 8
  %135 = and i64 %134, 65535
  %136 = icmp eq i64 %135, 189
  br i1 %136, label %137, label %140

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.tree_exp, ptr %121, i64 1
  %139 = load ptr, ptr %138, align 8, !tbaa !17
  br label %140

140:                                              ; preds = %137, %133, %130
  %141 = phi ptr [ %139, %137 ], [ %121, %133 ], [ null, %130 ]
  br i1 %19, label %142, label %149

142:                                              ; preds = %140
  %143 = load i32, ptr %8, align 4, !tbaa !21
  %144 = icmp eq i32 %143, 0
  %145 = zext i1 %144 to i32
  store i32 %145, ptr %8, align 4, !tbaa !21
  %146 = load i32, ptr %9, align 4, !tbaa !21
  %147 = icmp eq i32 %146, 0
  %148 = zext i1 %147 to i32
  store i32 %148, ptr %9, align 4, !tbaa !21
  br label %149

149:                                              ; preds = %142, %140
  %150 = icmp ne ptr %131, null
  %151 = icmp ne ptr %141, null
  %152 = select i1 %150, i1 %151, i1 false
  br i1 %152, label %153, label %180

153:                                              ; preds = %149
  %154 = call i32 @operand_equal_p(ptr noundef nonnull %131, ptr noundef nonnull %141, i32 noundef 0) #22
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %180, label %156

156:                                              ; preds = %153
  %157 = load i32, ptr %8, align 4, !tbaa !21
  %158 = load ptr, ptr %11, align 8, !tbaa !6
  %159 = load ptr, ptr %14, align 8, !tbaa !6
  %160 = load i32, ptr %9, align 4, !tbaa !21
  %161 = load ptr, ptr %12, align 8, !tbaa !6
  %162 = load ptr, ptr %15, align 8, !tbaa !6
  %163 = call zeroext i8 @merge_ranges(ptr noundef nonnull %10, ptr noundef nonnull %13, ptr noundef nonnull %16, i32 noundef %157, ptr noundef %158, ptr noundef %159, i32 noundef %160, ptr noundef %161, ptr noundef %162) #22
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %180, label %165

165:                                              ; preds = %156
  %166 = load i32, ptr %10, align 4, !tbaa !21
  %167 = load ptr, ptr %13, align 8, !tbaa !6
  %168 = load ptr, ptr %16, align 8, !tbaa !6
  %169 = call ptr @build_range_check(i32 noundef 0, ptr noundef %2, ptr noundef nonnull %131, i32 noundef %166, ptr noundef %167, ptr noundef %168) #22
  %170 = icmp eq ptr %169, null
  br i1 %170, label %180, label %171

171:                                              ; preds = %165
  %172 = load i64, ptr %169, align 8
  %173 = and i64 %172, 65535
  %174 = icmp eq i64 %173, 23
  br i1 %174, label %175, label %180

175:                                              ; preds = %171
  br i1 %19, label %176, label %178

176:                                              ; preds = %175
  %177 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 124, ptr noundef nonnull @.str.287) #22
  br label %180

178:                                              ; preds = %175
  %179 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 124, ptr noundef nonnull @.str.288) #22
  br label %180

180:                                              ; preds = %111, %89, %149, %153, %156, %165, %178, %176, %171, %63, %71, %7, %58
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #22
  ret void
}

declare i32 @integer_onep(ptr noundef) local_unnamed_addr #3

declare ptr @make_range(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @operand_equal_p(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @merge_ranges(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_range_check(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @strict_aliasing_warning(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = tail call ptr @tree_strip_nop_conversions(ptr noundef %2) #22
  %5 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = load i32, ptr @flag_strict_aliasing, align 4, !tbaa !21
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %89, label %9

9:                                                ; preds = %3
  %10 = load i64, ptr %1, align 8
  %11 = trunc i64 %10 to i16
  switch i16 %11, label %89 [
    i16 10, label %12
    i16 12, label %12
  ]

12:                                               ; preds = %9, %9
  %13 = load i64, ptr %6, align 8
  %14 = trunc i64 %13 to i16
  switch i16 %14, label %89 [
    i16 10, label %15
    i16 12, label %15
  ]

15:                                               ; preds = %12, %12
  %16 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 65535
  %20 = icmp ne i64 %19, 19
  %21 = and i64 %10, 67108864
  %22 = icmp eq i64 %21, 0
  %23 = and i1 %22, %20
  br i1 %23, label %24, label %89

24:                                               ; preds = %15
  %25 = load i32, ptr @warn_strict_aliasing, align 4
  %26 = icmp sgt i32 %25, 1
  br i1 %26, label %27, label %68

27:                                               ; preds = %24
  %28 = load i64, ptr %4, align 8
  %29 = and i64 %28, 65535
  %30 = icmp eq i64 %29, 121
  br i1 %30, label %31, label %89

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = load i64, ptr %33, align 8
  %35 = and i64 %34, 65535
  %36 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %35
  %37 = load i32, ptr %36, align 4, !tbaa !17
  %38 = icmp eq i32 %37, 3
  br i1 %38, label %42, label %39

39:                                               ; preds = %31
  %40 = tail call fastcc zeroext i8 @handled_component_p(i64 %34)
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %89, label %42

42:                                               ; preds = %39, %31
  %43 = getelementptr inbounds %struct.tree_type, ptr %17, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = icmp eq ptr %44, null
  %46 = icmp eq i32 %25, 2
  %47 = and i1 %46, %45
  br i1 %47, label %86, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.tree_common, ptr %33, i64 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = tail call i32 @get_alias_set(ptr noundef %50) #22
  %52 = load ptr, ptr %16, align 8, !tbaa !17
  %53 = tail call i32 @get_alias_set(ptr noundef %52) #22
  %54 = icmp ne i32 %51, %53
  %55 = icmp ne i32 %53, 0
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %48
  %58 = icmp eq i32 %51, 0
  br i1 %58, label %86, label %59

59:                                               ; preds = %57
  %60 = tail call i32 @alias_sets_conflict_p(i32 noundef %51, i32 noundef %53) #22
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %86, label %62

62:                                               ; preds = %59, %48
  %63 = load i32, ptr @warn_strict_aliasing, align 4, !tbaa !21
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %89

65:                                               ; preds = %62
  %66 = tail call i32 @alias_sets_must_conflict_p(i32 noundef %51, i32 noundef %53) #22
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %86, label %89

68:                                               ; preds = %24
  %69 = icmp eq i32 %25, 1
  br i1 %69, label %70, label %89

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = load i64, ptr %72, align 8
  %74 = and i64 %73, 65535
  %75 = icmp eq i64 %74, 19
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = tail call i32 @get_alias_set(ptr noundef nonnull %72) #22
  %78 = load ptr, ptr %16, align 8, !tbaa !17
  %79 = tail call i32 @get_alias_set(ptr noundef %78) #22
  %80 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = icmp eq ptr %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %76
  %84 = tail call i32 @alias_sets_must_conflict_p(i32 noundef %77, i32 noundef %79) #22
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %83, %76, %65, %57, %59, %42
  %87 = phi ptr [ @.str.289, %42 ], [ @.str.290, %59 ], [ @.str.290, %57 ], [ @.str.291, %65 ], [ @.str.291, %76 ], [ @.str.291, %83 ]
  %88 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 184, ptr noundef nonnull %87) #22
  br label %89

89:                                               ; preds = %86, %83, %27, %39, %65, %62, %70, %68, %3, %15, %9, %12
  %90 = phi i8 [ 0, %12 ], [ 0, %9 ], [ 0, %15 ], [ 0, %3 ], [ 0, %68 ], [ 0, %70 ], [ 0, %62 ], [ 0, %65 ], [ 0, %39 ], [ 0, %27 ], [ 0, %83 ], [ 1, %86 ]
  ret i8 %90
}

declare ptr @tree_strip_nop_conversions(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal fastcc zeroext i8 @handled_component_p(i64 %0) unnamed_addr #14 {
  %2 = trunc i64 %0 to i16
  switch i16 %2, label %3 [
    i16 42, label %4
    i16 41, label %4
    i16 45, label %4
    i16 46, label %4
    i16 118, label %4
    i16 43, label %4
    i16 44, label %4
  ]

3:                                                ; preds = %1
  br label %4

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %3
  %5 = phi i8 [ 0, %3 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ]
  ret i8 %5
}

declare i32 @get_alias_set(ptr noundef) local_unnamed_addr #3

declare i32 @alias_sets_conflict_p(i32 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @alias_sets_must_conflict_p(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @check_main_parameter_types(ptr noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = icmp eq ptr %5, null
  br i1 %6, label %76, label %7

7:                                                ; preds = %1, %62
  %8 = phi ptr [ %64, %62 ], [ %5, %1 ]
  %9 = phi i32 [ %18, %62 ], [ 0, %1 ]
  %10 = getelementptr inbounds %struct.tree_list, ptr %8, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %13 = icmp eq ptr %11, %12
  %14 = load ptr, ptr @global_trees, align 16
  %15 = icmp eq ptr %11, %14
  %16 = select i1 %13, i1 true, i1 %15
  br i1 %16, label %66, label %17

17:                                               ; preds = %7
  %18 = add nuw nsw i32 %9, 1
  switch i32 %9, label %62 [
    i32 0, label %19
    i32 1, label %24
    i32 2, label %41
  ]

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 16
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %23 = icmp eq ptr %21, %22
  br i1 %23, label %62, label %58

24:                                               ; preds = %17
  %25 = load i64, ptr %11, align 8
  %26 = and i64 %25, 65535
  %27 = icmp eq i64 %26, 10
  br i1 %27, label %28, label %58

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = load i64, ptr %30, align 8
  %32 = and i64 %31, 65535
  %33 = icmp eq i64 %32, 10
  br i1 %33, label %34, label %58

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.tree_common, ptr %30, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.tree_type, ptr %36, i64 0, i32 16
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %40 = icmp eq ptr %38, %39
  br i1 %40, label %62, label %58

41:                                               ; preds = %17
  %42 = load i64, ptr %11, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 10
  br i1 %44, label %45, label %58

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = load i64, ptr %47, align 8
  %49 = and i64 %48, 65535
  %50 = icmp eq i64 %49, 10
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.tree_common, ptr %47, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = getelementptr inbounds %struct.tree_type, ptr %53, i64 0, i32 16
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %57 = icmp eq ptr %55, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %41, %45, %51, %24, %28, %34, %19
  %59 = phi ptr [ @.str.292, %19 ], [ @.str.293, %34 ], [ @.str.293, %28 ], [ @.str.293, %24 ], [ @.str.294, %51 ], [ @.str.294, %45 ], [ @.str.294, %41 ]
  %60 = load i32, ptr @input_location, align 4, !tbaa !21
  %61 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %60, i32 noundef 126, ptr noundef nonnull %59, ptr noundef %0) #22
  br label %62

62:                                               ; preds = %58, %51, %34, %19, %17
  %63 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %68, label %7, !llvm.loop !101

66:                                               ; preds = %7
  %67 = icmp eq i32 %9, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %62, %66
  %69 = phi i32 [ %9, %66 ], [ %18, %62 ]
  %70 = icmp eq i32 %69, 1
  %71 = icmp ugt i32 %69, 3
  %72 = or i1 %70, %71
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = load i32, ptr @input_location, align 4, !tbaa !21
  %75 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %74, i32 noundef 126, ptr noundef nonnull @.str.295, ptr noundef %0) #22
  br label %76

76:                                               ; preds = %1, %68, %73, %66
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @vector_targets_convertible_p(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = icmp eq i64 %4, 14
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = load i64, ptr %1, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 14
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = or i64 %7, %3
  %12 = and i64 %11, 4294967296
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = tail call i32 @tree_int_cst_equal(ptr noundef %16, ptr noundef %18) #22
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %10, %14, %6, %2
  br label %22

22:                                               ; preds = %14, %21
  %23 = phi i8 [ 0, %21 ], [ 1, %14 ]
  ret i8 %23
}

declare i32 @tree_int_cst_equal(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @vector_types_convertible_p(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2) local_unnamed_addr #9 {
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 4294967296
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = load i64, ptr %1, align 8
  %9 = and i64 %8, 4294967296
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = tail call i32 @tree_int_cst_equal(ptr noundef %13, ptr noundef %15) #22
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %83

18:                                               ; preds = %11, %7
  %19 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = tail call i32 @tree_int_cst_equal(ptr noundef %20, ptr noundef %22) #22
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %83, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 65535
  %30 = icmp eq i64 %29, 9
  br i1 %30, label %31, label %39

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %35 = load i32, ptr %34, align 4
  %36 = xor i32 %35, %33
  %37 = and i32 %36, 1023
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %83

39:                                               ; preds = %25, %31
  %40 = trunc i64 %28 to i32
  %41 = and i32 %40, 65535
  %42 = and i32 %40, 65534
  %43 = icmp eq i32 %42, 6
  %44 = icmp eq i32 %41, 8
  %45 = or i1 %43, %44
  %46 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = load i64, ptr %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = and i32 %49, 65535
  %51 = and i32 %49, 65534
  %52 = icmp eq i32 %51, 6
  %53 = icmp eq i32 %50, 8
  %54 = or i1 %52, %53
  %55 = xor i1 %45, %54
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i8
  %58 = load i32, ptr @flag_lax_vector_conversions, align 4
  %59 = icmp ne i32 %58, 0
  %60 = select i1 %55, i1 true, i1 %59
  br i1 %60, label %83, label %61

61:                                               ; preds = %39
  %62 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %63 = load i32, ptr %62, align 4
  %64 = and i32 %63, 1023
  %65 = zext i32 %64 to i64
  %66 = shl nuw i64 1, %65
  %67 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %68 = load i32, ptr %67, align 4
  %69 = and i32 %68, 1023
  %70 = zext i32 %69 to i64
  %71 = shl nuw i64 1, %70
  %72 = icmp eq i64 %66, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %61
  %74 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 24), align 8, !tbaa !102
  %75 = tail call i32 %74(ptr noundef nonnull %27, ptr noundef nonnull %47) #22
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %73, %61
  %78 = icmp eq i8 %2, 0
  %79 = load i1, ptr @vector_types_convertible_p.emitted_lax_note, align 1
  %80 = select i1 %78, i1 true, i1 %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  store i1 true, ptr @vector_types_convertible_p.emitted_lax_note, align 1
  %82 = load i32, ptr @input_location, align 4, !tbaa !21
  tail call void (i32, ptr, ...) @inform(i32 noundef %82, ptr noundef nonnull @.str.296) #22
  br label %83

83:                                               ; preds = %18, %31, %77, %81, %73, %39, %11
  %84 = phi i8 [ 1, %11 ], [ %57, %39 ], [ 1, %73 ], [ 0, %81 ], [ 0, %77 ], [ 0, %31 ], [ 0, %18 ]
  ret i8 %84
}

declare void @inform(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @shorten_binary_op(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3) local_unnamed_addr #9 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #22
  %7 = tail call ptr @convert(ptr noundef %0, ptr noundef %1) #22
  %8 = tail call ptr @convert(ptr noundef %0, ptr noundef %2) #22
  %9 = call ptr @get_narrower(ptr noundef %7, ptr noundef nonnull %5) #22
  %10 = call ptr @get_narrower(ptr noundef %8, ptr noundef nonnull %6) #22
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i32
  %13 = lshr i32 %12, 21
  %14 = and i32 %13, 1
  %15 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 6
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 6
  %22 = load i32, ptr %21, align 4
  %23 = xor i32 %22, %18
  %24 = and i32 %23, 1023
  %25 = icmp ne i32 %24, 0
  %26 = icmp eq ptr %16, %0
  %27 = or i1 %26, %25
  br i1 %27, label %33, label %28

28:                                               ; preds = %4
  %29 = load i64, ptr %16, align 8
  %30 = trunc i64 %29 to i32
  %31 = lshr i32 %30, 21
  %32 = and i32 %31, 1
  store i32 %32, ptr %5, align 4, !tbaa !21
  br label %33

33:                                               ; preds = %28, %4
  %34 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = getelementptr inbounds %struct.tree_type, ptr %35, i64 0, i32 6
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = getelementptr inbounds %struct.tree_type, ptr %39, i64 0, i32 6
  %41 = load i32, ptr %40, align 4
  %42 = xor i32 %41, %37
  %43 = and i32 %42, 1023
  %44 = icmp ne i32 %43, 0
  %45 = icmp eq ptr %35, %0
  %46 = or i1 %45, %44
  br i1 %46, label %52, label %47

47:                                               ; preds = %33
  %48 = load i64, ptr %35, align 8
  %49 = trunc i64 %48 to i32
  %50 = lshr i32 %49, 21
  %51 = and i32 %50, 1
  store i32 %51, ptr %6, align 4, !tbaa !21
  br label %52

52:                                               ; preds = %47, %33
  %53 = icmp eq i8 %3, 0
  %54 = load i32, ptr %5, align 4
  %55 = select i1 %53, i32 %14, i32 %54
  %56 = and i32 %22, 1023
  %57 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %58 = load i32, ptr %57, align 4
  %59 = and i32 %58, 1023
  %60 = icmp ult i32 %56, %59
  br i1 %60, label %61, label %74

61:                                               ; preds = %52
  %62 = and i32 %41, 1023
  %63 = icmp eq i32 %62, %56
  %64 = load i32, ptr %6, align 4
  %65 = icmp eq i32 %54, %64
  %66 = select i1 %63, i1 %65, i1 false
  br i1 %66, label %67, label %74

67:                                               ; preds = %61
  %68 = icmp eq i32 %54, 0
  %69 = icmp ne i32 %55, 0
  %70 = select i1 %68, i1 %69, i1 false
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = call ptr @common_type(ptr noundef nonnull %20, ptr noundef nonnull %39) #22
  %73 = call ptr @c_common_signed_or_unsigned_type(i32 noundef %54, ptr noundef %72)
  br label %122

74:                                               ; preds = %67, %61, %52
  %75 = load i64, ptr %9, align 8
  %76 = and i64 %75, 65535
  %77 = icmp eq i64 %76, 23
  br i1 %77, label %78, label %95

78:                                               ; preds = %74
  %79 = load i32, ptr %6, align 4, !tbaa !21
  %80 = icmp ne i32 %79, 0
  %81 = icmp eq i32 %55, 0
  %82 = select i1 %80, i1 true, i1 %81
  %83 = and i32 %41, 1023
  %84 = icmp ult i32 %83, %59
  %85 = and i1 %82, %84
  br i1 %85, label %86, label %95

86:                                               ; preds = %78
  %87 = call ptr @c_common_signed_or_unsigned_type(i32 noundef %79, ptr noundef nonnull %39)
  %88 = icmp eq ptr %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %86
  %90 = load i64, ptr %87, align 8
  %91 = trunc i64 %90 to i16
  switch i16 %91, label %92 [
    i16 10, label %95
    i16 12, label %95
  ]

92:                                               ; preds = %89
  %93 = call i32 @int_fits_type_p(ptr noundef nonnull %9, ptr noundef nonnull %87) #22
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %122

95:                                               ; preds = %89, %89, %78, %92, %86, %74
  %96 = load i64, ptr %10, align 8
  %97 = and i64 %96, 65535
  %98 = icmp eq i64 %97, 23
  br i1 %98, label %99, label %121

99:                                               ; preds = %95
  %100 = load i32, ptr %5, align 4, !tbaa !21
  %101 = icmp eq i32 %100, 0
  %102 = icmp ne i32 %55, 0
  %103 = select i1 %101, i1 %102, i1 false
  br i1 %103, label %121, label %104

104:                                              ; preds = %99
  %105 = load ptr, ptr %19, align 8, !tbaa !17
  %106 = getelementptr inbounds %struct.tree_type, ptr %105, i64 0, i32 6
  %107 = load i32, ptr %106, align 4
  %108 = and i32 %107, 1023
  %109 = load i32, ptr %57, align 4
  %110 = and i32 %109, 1023
  %111 = icmp ult i32 %108, %110
  br i1 %111, label %112, label %121

112:                                              ; preds = %104
  %113 = call ptr @c_common_signed_or_unsigned_type(i32 noundef %100, ptr noundef nonnull %105)
  %114 = icmp eq ptr %113, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %112
  %116 = load i64, ptr %113, align 8
  %117 = trunc i64 %116 to i16
  switch i16 %117, label %118 [
    i16 10, label %121
    i16 12, label %121
  ]

118:                                              ; preds = %115
  %119 = call i32 @int_fits_type_p(ptr noundef nonnull %10, ptr noundef nonnull %113) #22
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %115, %115, %99, %118, %112, %104, %95
  br label %122

122:                                              ; preds = %118, %92, %121, %71
  %123 = phi ptr [ %0, %121 ], [ %73, %71 ], [ %87, %92 ], [ %113, %118 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #22
  ret ptr %123
}

declare ptr @convert(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @get_narrower(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_common_signed_or_unsigned_type(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 16
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  %6 = icmp eq ptr %4, %5
  %7 = load ptr, ptr @integer_types, align 16
  %8 = icmp eq ptr %4, %7
  %9 = select i1 %6, i1 true, i1 %8
  %10 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  %11 = icmp eq ptr %4, %10
  %12 = select i1 %9, i1 true, i1 %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = icmp eq i32 %0, 0
  %15 = select i1 %14, ptr %5, ptr %10
  br label %866

16:                                               ; preds = %2
  %17 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %18 = icmp eq ptr %4, %17
  %19 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  %20 = icmp eq ptr %4, %19
  %21 = select i1 %18, i1 true, i1 %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = icmp eq i32 %0, 0
  %24 = select i1 %23, ptr %17, ptr %19
  br label %866

25:                                               ; preds = %16
  %26 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  %27 = icmp eq ptr %4, %26
  %28 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  %29 = icmp eq ptr %4, %28
  %30 = select i1 %27, i1 true, i1 %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = icmp eq i32 %0, 0
  %33 = select i1 %32, ptr %26, ptr %28
  br label %866

34:                                               ; preds = %25
  %35 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8
  %36 = icmp eq ptr %4, %35
  %37 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16
  %38 = icmp eq ptr %4, %37
  %39 = select i1 %36, i1 true, i1 %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = icmp eq i32 %0, 0
  %42 = select i1 %41, ptr %35, ptr %37
  br label %866

43:                                               ; preds = %34
  %44 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  %45 = icmp eq ptr %4, %44
  %46 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  %47 = icmp eq ptr %4, %46
  %48 = select i1 %45, i1 true, i1 %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = icmp eq i32 %0, 0
  %51 = select i1 %50, ptr %44, ptr %46
  br label %866

52:                                               ; preds = %43
  %53 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 9), align 8
  %54 = icmp eq ptr %4, %53
  %55 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 10), align 16
  %56 = icmp eq ptr %4, %55
  %57 = select i1 %54, i1 true, i1 %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = icmp eq i32 %0, 0
  %60 = select i1 %59, ptr %53, ptr %55
  br label %866

61:                                               ; preds = %52
  %62 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 5), align 8
  %63 = icmp eq ptr %4, %62
  %64 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 10), align 16
  %65 = icmp eq ptr %4, %64
  %66 = select i1 %63, i1 true, i1 %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = icmp eq i32 %0, 0
  %69 = select i1 %68, ptr %62, ptr %64
  br label %866

70:                                               ; preds = %61
  %71 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 4), align 16
  %72 = icmp eq ptr %4, %71
  %73 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 9), align 8
  %74 = icmp eq ptr %4, %73
  %75 = select i1 %72, i1 true, i1 %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = icmp eq i32 %0, 0
  %78 = select i1 %77, ptr %71, ptr %73
  br label %866

79:                                               ; preds = %70
  %80 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 3), align 8
  %81 = icmp eq ptr %4, %80
  %82 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 8), align 16
  %83 = icmp eq ptr %4, %82
  %84 = select i1 %81, i1 true, i1 %83
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = icmp eq i32 %0, 0
  %87 = select i1 %86, ptr %80, ptr %82
  br label %866

88:                                               ; preds = %79
  %89 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 2), align 16
  %90 = icmp eq ptr %4, %89
  %91 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 7), align 8
  %92 = icmp eq ptr %4, %91
  %93 = select i1 %90, i1 true, i1 %92
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = icmp eq i32 %0, 0
  %96 = select i1 %95, ptr %89, ptr %91
  br label %866

97:                                               ; preds = %88
  %98 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 1), align 8
  %99 = icmp eq ptr %4, %98
  %100 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 6), align 16
  %101 = icmp eq ptr %4, %100
  %102 = select i1 %99, i1 true, i1 %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = icmp eq i32 %0, 0
  %105 = select i1 %104, ptr %98, ptr %100
  br label %866

106:                                              ; preds = %97
  %107 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  %108 = icmp eq ptr %4, %107
  %109 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  %110 = icmp eq ptr %4, %109
  %111 = select i1 %108, i1 true, i1 %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = icmp eq i32 %0, 0
  %114 = select i1 %113, ptr %107, ptr %109
  br label %866

115:                                              ; preds = %106
  %116 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  %117 = icmp eq ptr %4, %116
  %118 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  %119 = icmp eq ptr %4, %118
  %120 = select i1 %117, i1 true, i1 %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = icmp eq i32 %0, 0
  %123 = select i1 %122, ptr %116, ptr %118
  br label %866

124:                                              ; preds = %115
  %125 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  %126 = icmp eq ptr %4, %125
  %127 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  %128 = icmp eq ptr %4, %127
  %129 = select i1 %126, i1 true, i1 %128
  br i1 %129, label %130, label %133

130:                                              ; preds = %124
  %131 = icmp eq i32 %0, 0
  %132 = select i1 %131, ptr %125, ptr %127
  br label %866

133:                                              ; preds = %124
  %134 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  %135 = icmp eq ptr %4, %134
  %136 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  %137 = icmp eq ptr %4, %136
  %138 = select i1 %135, i1 true, i1 %137
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = icmp eq i32 %0, 0
  %141 = select i1 %140, ptr %134, ptr %136
  br label %866

142:                                              ; preds = %133
  %143 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  %144 = icmp eq ptr %4, %143
  %145 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  %146 = icmp eq ptr %4, %145
  %147 = select i1 %144, i1 true, i1 %146
  br i1 %147, label %148, label %151

148:                                              ; preds = %142
  %149 = icmp eq i32 %0, 0
  %150 = select i1 %149, ptr %143, ptr %145
  br label %866

151:                                              ; preds = %142
  %152 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  %153 = icmp eq ptr %4, %152
  %154 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  %155 = icmp eq ptr %4, %154
  %156 = select i1 %153, i1 true, i1 %155
  br i1 %156, label %157, label %160

157:                                              ; preds = %151
  %158 = icmp eq i32 %0, 0
  %159 = select i1 %158, ptr %152, ptr %154
  br label %866

160:                                              ; preds = %151
  %161 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  %162 = icmp eq ptr %4, %161
  %163 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  %164 = icmp eq ptr %4, %163
  %165 = select i1 %162, i1 true, i1 %164
  br i1 %165, label %166, label %169

166:                                              ; preds = %160
  %167 = icmp eq i32 %0, 0
  %168 = select i1 %167, ptr %161, ptr %163
  br label %866

169:                                              ; preds = %160
  %170 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  %171 = icmp eq ptr %4, %170
  %172 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  %173 = icmp eq ptr %4, %172
  %174 = select i1 %171, i1 true, i1 %173
  br i1 %174, label %175, label %178

175:                                              ; preds = %169
  %176 = icmp eq i32 %0, 0
  %177 = select i1 %176, ptr %170, ptr %172
  br label %866

178:                                              ; preds = %169
  %179 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8
  %180 = icmp eq ptr %4, %179
  %181 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8
  %182 = icmp eq ptr %4, %181
  %183 = select i1 %180, i1 true, i1 %182
  br i1 %183, label %184, label %187

184:                                              ; preds = %178
  %185 = icmp eq i32 %0, 0
  %186 = select i1 %185, ptr %179, ptr %181
  br label %866

187:                                              ; preds = %178
  %188 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16
  %189 = icmp eq ptr %4, %188
  %190 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16
  %191 = icmp eq ptr %4, %190
  %192 = select i1 %189, i1 true, i1 %191
  br i1 %192, label %193, label %196

193:                                              ; preds = %187
  %194 = icmp eq i32 %0, 0
  %195 = select i1 %194, ptr %188, ptr %190
  br label %866

196:                                              ; preds = %187
  %197 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8
  %198 = icmp eq ptr %4, %197
  %199 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8
  %200 = icmp eq ptr %4, %199
  %201 = select i1 %198, i1 true, i1 %200
  br i1 %201, label %202, label %205

202:                                              ; preds = %196
  %203 = icmp eq i32 %0, 0
  %204 = select i1 %203, ptr %197, ptr %199
  br label %866

205:                                              ; preds = %196
  %206 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16
  %207 = icmp eq ptr %4, %206
  %208 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16
  %209 = icmp eq ptr %4, %208
  %210 = select i1 %207, i1 true, i1 %209
  br i1 %210, label %211, label %214

211:                                              ; preds = %205
  %212 = icmp eq i32 %0, 0
  %213 = select i1 %212, ptr %206, ptr %208
  br label %866

214:                                              ; preds = %205
  %215 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8
  %216 = icmp eq ptr %4, %215
  %217 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8
  %218 = icmp eq ptr %4, %217
  %219 = select i1 %216, i1 true, i1 %218
  br i1 %219, label %220, label %223

220:                                              ; preds = %214
  %221 = icmp eq i32 %0, 0
  %222 = select i1 %221, ptr %215, ptr %217
  br label %866

223:                                              ; preds = %214
  %224 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16
  %225 = icmp eq ptr %4, %224
  %226 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16
  %227 = icmp eq ptr %4, %226
  %228 = select i1 %225, i1 true, i1 %227
  br i1 %228, label %229, label %232

229:                                              ; preds = %223
  %230 = icmp eq i32 %0, 0
  %231 = select i1 %230, ptr %224, ptr %226
  br label %866

232:                                              ; preds = %223
  %233 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8
  %234 = icmp eq ptr %4, %233
  %235 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8
  %236 = icmp eq ptr %4, %235
  %237 = select i1 %234, i1 true, i1 %236
  br i1 %237, label %238, label %241

238:                                              ; preds = %232
  %239 = icmp eq i32 %0, 0
  %240 = select i1 %239, ptr %233, ptr %235
  br label %866

241:                                              ; preds = %232
  %242 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16
  %243 = icmp eq ptr %4, %242
  %244 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16
  %245 = icmp eq ptr %4, %244
  %246 = select i1 %243, i1 true, i1 %245
  br i1 %246, label %247, label %250

247:                                              ; preds = %241
  %248 = icmp eq i32 %0, 0
  %249 = select i1 %248, ptr %242, ptr %244
  br label %866

250:                                              ; preds = %241
  %251 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 89), align 8
  %252 = icmp eq ptr %4, %251
  %253 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 94), align 16
  %254 = icmp eq ptr %4, %253
  %255 = select i1 %252, i1 true, i1 %254
  br i1 %255, label %256, label %259

256:                                              ; preds = %250
  %257 = icmp eq i32 %0, 0
  %258 = select i1 %257, ptr %251, ptr %253
  br label %866

259:                                              ; preds = %250
  %260 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 90), align 16
  %261 = icmp eq ptr %4, %260
  %262 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 95), align 8
  %263 = icmp eq ptr %4, %262
  %264 = select i1 %261, i1 true, i1 %263
  br i1 %264, label %265, label %268

265:                                              ; preds = %259
  %266 = icmp eq i32 %0, 0
  %267 = select i1 %266, ptr %260, ptr %262
  br label %866

268:                                              ; preds = %259
  %269 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 91), align 8
  %270 = icmp eq ptr %4, %269
  %271 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 96), align 16
  %272 = icmp eq ptr %4, %271
  %273 = select i1 %270, i1 true, i1 %272
  br i1 %273, label %274, label %277

274:                                              ; preds = %268
  %275 = icmp eq i32 %0, 0
  %276 = select i1 %275, ptr %269, ptr %271
  br label %866

277:                                              ; preds = %268
  %278 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 92), align 16
  %279 = icmp eq ptr %4, %278
  %280 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 97), align 8
  %281 = icmp eq ptr %4, %280
  %282 = select i1 %279, i1 true, i1 %281
  br i1 %282, label %283, label %286

283:                                              ; preds = %277
  %284 = icmp eq i32 %0, 0
  %285 = select i1 %284, ptr %278, ptr %280
  br label %866

286:                                              ; preds = %277
  %287 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 93), align 8
  %288 = icmp eq ptr %4, %287
  %289 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 98), align 16
  %290 = icmp eq ptr %4, %289
  %291 = select i1 %288, i1 true, i1 %290
  br i1 %291, label %292, label %295

292:                                              ; preds = %286
  %293 = icmp eq i32 %0, 0
  %294 = select i1 %293, ptr %287, ptr %289
  br label %866

295:                                              ; preds = %286
  %296 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 99), align 8
  %297 = icmp eq ptr %4, %296
  %298 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 104), align 16
  %299 = icmp eq ptr %4, %298
  %300 = select i1 %297, i1 true, i1 %299
  br i1 %300, label %301, label %304

301:                                              ; preds = %295
  %302 = icmp eq i32 %0, 0
  %303 = select i1 %302, ptr %296, ptr %298
  br label %866

304:                                              ; preds = %295
  %305 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 100), align 16
  %306 = icmp eq ptr %4, %305
  %307 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 105), align 8
  %308 = icmp eq ptr %4, %307
  %309 = select i1 %306, i1 true, i1 %308
  br i1 %309, label %310, label %313

310:                                              ; preds = %304
  %311 = icmp eq i32 %0, 0
  %312 = select i1 %311, ptr %305, ptr %307
  br label %866

313:                                              ; preds = %304
  %314 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 101), align 8
  %315 = icmp eq ptr %4, %314
  %316 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 106), align 16
  %317 = icmp eq ptr %4, %316
  %318 = select i1 %315, i1 true, i1 %317
  br i1 %318, label %319, label %322

319:                                              ; preds = %313
  %320 = icmp eq i32 %0, 0
  %321 = select i1 %320, ptr %314, ptr %316
  br label %866

322:                                              ; preds = %313
  %323 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 102), align 16
  %324 = icmp eq ptr %4, %323
  %325 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 107), align 8
  %326 = icmp eq ptr %4, %325
  %327 = select i1 %324, i1 true, i1 %326
  br i1 %327, label %328, label %331

328:                                              ; preds = %322
  %329 = icmp eq i32 %0, 0
  %330 = select i1 %329, ptr %323, ptr %325
  br label %866

331:                                              ; preds = %322
  %332 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 103), align 8
  %333 = icmp eq ptr %4, %332
  %334 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 108), align 16
  %335 = icmp eq ptr %4, %334
  %336 = select i1 %333, i1 true, i1 %335
  br i1 %336, label %337, label %340

337:                                              ; preds = %331
  %338 = icmp eq i32 %0, 0
  %339 = select i1 %338, ptr %332, ptr %334
  br label %866

340:                                              ; preds = %331
  %341 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 109), align 8
  %342 = icmp eq ptr %4, %341
  %343 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 113), align 8
  %344 = icmp eq ptr %4, %343
  %345 = select i1 %342, i1 true, i1 %344
  br i1 %345, label %346, label %349

346:                                              ; preds = %340
  %347 = icmp eq i32 %0, 0
  %348 = select i1 %347, ptr %341, ptr %343
  br label %866

349:                                              ; preds = %340
  %350 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 110), align 16
  %351 = icmp eq ptr %4, %350
  %352 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 114), align 16
  %353 = icmp eq ptr %4, %352
  %354 = select i1 %351, i1 true, i1 %353
  br i1 %354, label %355, label %358

355:                                              ; preds = %349
  %356 = icmp eq i32 %0, 0
  %357 = select i1 %356, ptr %350, ptr %352
  br label %866

358:                                              ; preds = %349
  %359 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 111), align 8
  %360 = icmp eq ptr %4, %359
  %361 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 115), align 8
  %362 = icmp eq ptr %4, %361
  %363 = select i1 %360, i1 true, i1 %362
  br i1 %363, label %364, label %367

364:                                              ; preds = %358
  %365 = icmp eq i32 %0, 0
  %366 = select i1 %365, ptr %359, ptr %361
  br label %866

367:                                              ; preds = %358
  %368 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 112), align 16
  %369 = icmp eq ptr %4, %368
  %370 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 116), align 16
  %371 = icmp eq ptr %4, %370
  %372 = select i1 %369, i1 true, i1 %371
  br i1 %372, label %373, label %376

373:                                              ; preds = %367
  %374 = icmp eq i32 %0, 0
  %375 = select i1 %374, ptr %368, ptr %370
  br label %866

376:                                              ; preds = %367
  %377 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 117), align 8
  %378 = icmp eq ptr %4, %377
  %379 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 121), align 8
  %380 = icmp eq ptr %4, %379
  %381 = select i1 %378, i1 true, i1 %380
  br i1 %381, label %382, label %385

382:                                              ; preds = %376
  %383 = icmp eq i32 %0, 0
  %384 = select i1 %383, ptr %377, ptr %379
  br label %866

385:                                              ; preds = %376
  %386 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 118), align 16
  %387 = icmp eq ptr %4, %386
  %388 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 122), align 16
  %389 = icmp eq ptr %4, %388
  %390 = select i1 %387, i1 true, i1 %389
  br i1 %390, label %391, label %394

391:                                              ; preds = %385
  %392 = icmp eq i32 %0, 0
  %393 = select i1 %392, ptr %386, ptr %388
  br label %866

394:                                              ; preds = %385
  %395 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 119), align 8
  %396 = icmp eq ptr %4, %395
  %397 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 123), align 8
  %398 = icmp eq ptr %4, %397
  %399 = select i1 %396, i1 true, i1 %398
  br i1 %399, label %400, label %403

400:                                              ; preds = %394
  %401 = icmp eq i32 %0, 0
  %402 = select i1 %401, ptr %395, ptr %397
  br label %866

403:                                              ; preds = %394
  %404 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 120), align 16
  %405 = icmp eq ptr %4, %404
  %406 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 124), align 16
  %407 = icmp eq ptr %4, %406
  %408 = select i1 %405, i1 true, i1 %407
  br i1 %408, label %409, label %412

409:                                              ; preds = %403
  %410 = icmp eq i32 %0, 0
  %411 = select i1 %410, ptr %404, ptr %406
  br label %866

412:                                              ; preds = %403
  %413 = load i64, ptr %1, align 8
  %414 = trunc i64 %413 to i32
  %415 = and i32 %414, 65535
  %416 = add nsw i32 %415, -6
  %417 = icmp ult i32 %416, 3
  br i1 %417, label %418, label %866

418:                                              ; preds = %412
  %419 = lshr i32 %414, 21
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, %0
  br i1 %421, label %866, label %422

422:                                              ; preds = %418
  %423 = and i64 %413, 65535
  %424 = icmp eq i64 %423, 14
  br i1 %424, label %425, label %428

425:                                              ; preds = %422
  %426 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  %427 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  br label %433

428:                                              ; preds = %422
  %429 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %430 = load i32, ptr %429, align 4
  %431 = lshr i32 %430, 16
  %432 = and i32 %431, 255
  br label %433

433:                                              ; preds = %428, %425
  %434 = phi ptr [ %427, %425 ], [ %5, %428 ]
  %435 = phi i32 [ %426, %425 ], [ %432, %428 ]
  %436 = load i64, ptr %434, align 8
  %437 = and i64 %436, 65535
  %438 = icmp eq i64 %437, 14
  br i1 %438, label %439, label %441

439:                                              ; preds = %433
  %440 = tail call i32 @vector_type_mode(ptr noundef nonnull %434) #22
  br label %446

441:                                              ; preds = %433
  %442 = getelementptr inbounds %struct.tree_type, ptr %434, i64 0, i32 6
  %443 = load i32, ptr %442, align 4
  %444 = lshr i32 %443, 16
  %445 = and i32 %444, 255
  br label %446

446:                                              ; preds = %441, %439
  %447 = phi i32 [ %440, %439 ], [ %445, %441 ]
  %448 = icmp eq i32 %435, %447
  br i1 %448, label %449, label %462

449:                                              ; preds = %446
  %450 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %451 = load i32, ptr %450, align 4
  %452 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  %453 = getelementptr inbounds %struct.tree_type, ptr %452, i64 0, i32 6
  %454 = load i32, ptr %453, align 4
  %455 = xor i32 %454, %451
  %456 = and i32 %455, 1023
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %462

458:                                              ; preds = %449
  %459 = icmp eq i32 %0, 0
  %460 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  %461 = select i1 %459, ptr %452, ptr %460
  br label %866

462:                                              ; preds = %449, %446
  %463 = load i64, ptr %1, align 8
  %464 = and i64 %463, 65535
  %465 = icmp eq i64 %464, 14
  br i1 %465, label %466, label %468

466:                                              ; preds = %462
  %467 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %473

468:                                              ; preds = %462
  %469 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %470 = load i32, ptr %469, align 4
  %471 = lshr i32 %470, 16
  %472 = and i32 %471, 255
  br label %473

473:                                              ; preds = %468, %466
  %474 = phi i32 [ %467, %466 ], [ %472, %468 ]
  %475 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %476 = load i64, ptr %475, align 8
  %477 = and i64 %476, 65535
  %478 = icmp eq i64 %477, 14
  br i1 %478, label %479, label %481

479:                                              ; preds = %473
  %480 = tail call i32 @vector_type_mode(ptr noundef nonnull %475) #22
  br label %486

481:                                              ; preds = %473
  %482 = getelementptr inbounds %struct.tree_type, ptr %475, i64 0, i32 6
  %483 = load i32, ptr %482, align 4
  %484 = lshr i32 %483, 16
  %485 = and i32 %484, 255
  br label %486

486:                                              ; preds = %481, %479
  %487 = phi i32 [ %480, %479 ], [ %485, %481 ]
  %488 = icmp eq i32 %474, %487
  br i1 %488, label %489, label %502

489:                                              ; preds = %486
  %490 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %491 = load i32, ptr %490, align 4
  %492 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %493 = getelementptr inbounds %struct.tree_type, ptr %492, i64 0, i32 6
  %494 = load i32, ptr %493, align 4
  %495 = xor i32 %494, %491
  %496 = and i32 %495, 1023
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %502

498:                                              ; preds = %489
  %499 = icmp eq i32 %0, 0
  %500 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  %501 = select i1 %499, ptr %492, ptr %500
  br label %866

502:                                              ; preds = %489, %486
  %503 = load i64, ptr %1, align 8
  %504 = and i64 %503, 65535
  %505 = icmp eq i64 %504, 14
  br i1 %505, label %506, label %508

506:                                              ; preds = %502
  %507 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %513

508:                                              ; preds = %502
  %509 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %510 = load i32, ptr %509, align 4
  %511 = lshr i32 %510, 16
  %512 = and i32 %511, 255
  br label %513

513:                                              ; preds = %508, %506
  %514 = phi i32 [ %507, %506 ], [ %512, %508 ]
  %515 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8, !tbaa !6
  %516 = load i64, ptr %515, align 8
  %517 = and i64 %516, 65535
  %518 = icmp eq i64 %517, 14
  br i1 %518, label %519, label %521

519:                                              ; preds = %513
  %520 = tail call i32 @vector_type_mode(ptr noundef nonnull %515) #22
  br label %526

521:                                              ; preds = %513
  %522 = getelementptr inbounds %struct.tree_type, ptr %515, i64 0, i32 6
  %523 = load i32, ptr %522, align 4
  %524 = lshr i32 %523, 16
  %525 = and i32 %524, 255
  br label %526

526:                                              ; preds = %521, %519
  %527 = phi i32 [ %520, %519 ], [ %525, %521 ]
  %528 = icmp eq i32 %514, %527
  br i1 %528, label %529, label %542

529:                                              ; preds = %526
  %530 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %531 = load i32, ptr %530, align 4
  %532 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  %533 = getelementptr inbounds %struct.tree_type, ptr %532, i64 0, i32 6
  %534 = load i32, ptr %533, align 4
  %535 = xor i32 %534, %531
  %536 = and i32 %535, 1023
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %542

538:                                              ; preds = %529
  %539 = icmp eq i32 %0, 0
  %540 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  %541 = select i1 %539, ptr %532, ptr %540
  br label %866

542:                                              ; preds = %529, %526
  %543 = load i64, ptr %1, align 8
  %544 = and i64 %543, 65535
  %545 = icmp eq i64 %544, 14
  br i1 %545, label %546, label %548

546:                                              ; preds = %542
  %547 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %553

548:                                              ; preds = %542
  %549 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %550 = load i32, ptr %549, align 4
  %551 = lshr i32 %550, 16
  %552 = and i32 %551, 255
  br label %553

553:                                              ; preds = %548, %546
  %554 = phi i32 [ %547, %546 ], [ %552, %548 ]
  %555 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  %556 = load i64, ptr %555, align 8
  %557 = and i64 %556, 65535
  %558 = icmp eq i64 %557, 14
  br i1 %558, label %559, label %561

559:                                              ; preds = %553
  %560 = tail call i32 @vector_type_mode(ptr noundef nonnull %555) #22
  br label %566

561:                                              ; preds = %553
  %562 = getelementptr inbounds %struct.tree_type, ptr %555, i64 0, i32 6
  %563 = load i32, ptr %562, align 4
  %564 = lshr i32 %563, 16
  %565 = and i32 %564, 255
  br label %566

566:                                              ; preds = %561, %559
  %567 = phi i32 [ %560, %559 ], [ %565, %561 ]
  %568 = icmp eq i32 %554, %567
  br i1 %568, label %569, label %582

569:                                              ; preds = %566
  %570 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %571 = load i32, ptr %570, align 4
  %572 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8
  %573 = getelementptr inbounds %struct.tree_type, ptr %572, i64 0, i32 6
  %574 = load i32, ptr %573, align 4
  %575 = xor i32 %574, %571
  %576 = and i32 %575, 1023
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %582

578:                                              ; preds = %569
  %579 = icmp eq i32 %0, 0
  %580 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16
  %581 = select i1 %579, ptr %572, ptr %580
  br label %866

582:                                              ; preds = %569, %566
  %583 = load i64, ptr %1, align 8
  %584 = and i64 %583, 65535
  %585 = icmp eq i64 %584, 14
  br i1 %585, label %586, label %588

586:                                              ; preds = %582
  %587 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %593

588:                                              ; preds = %582
  %589 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %590 = load i32, ptr %589, align 4
  %591 = lshr i32 %590, 16
  %592 = and i32 %591, 255
  br label %593

593:                                              ; preds = %588, %586
  %594 = phi i32 [ %587, %586 ], [ %592, %588 ]
  %595 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %596 = load i64, ptr %595, align 8
  %597 = and i64 %596, 65535
  %598 = icmp eq i64 %597, 14
  br i1 %598, label %599, label %601

599:                                              ; preds = %593
  %600 = tail call i32 @vector_type_mode(ptr noundef nonnull %595) #22
  br label %606

601:                                              ; preds = %593
  %602 = getelementptr inbounds %struct.tree_type, ptr %595, i64 0, i32 6
  %603 = load i32, ptr %602, align 4
  %604 = lshr i32 %603, 16
  %605 = and i32 %604, 255
  br label %606

606:                                              ; preds = %601, %599
  %607 = phi i32 [ %600, %599 ], [ %605, %601 ]
  %608 = icmp eq i32 %594, %607
  br i1 %608, label %609, label %622

609:                                              ; preds = %606
  %610 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %611 = load i32, ptr %610, align 4
  %612 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  %613 = getelementptr inbounds %struct.tree_type, ptr %612, i64 0, i32 6
  %614 = load i32, ptr %613, align 4
  %615 = xor i32 %614, %611
  %616 = and i32 %615, 1023
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %622

618:                                              ; preds = %609
  %619 = icmp eq i32 %0, 0
  %620 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  %621 = select i1 %619, ptr %612, ptr %620
  br label %866

622:                                              ; preds = %609, %606
  %623 = load i64, ptr %1, align 8
  %624 = and i64 %623, 65535
  %625 = icmp eq i64 %624, 14
  br i1 %625, label %626, label %628

626:                                              ; preds = %622
  %627 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %633

628:                                              ; preds = %622
  %629 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %630 = load i32, ptr %629, align 4
  %631 = lshr i32 %630, 16
  %632 = and i32 %631, 255
  br label %633

633:                                              ; preds = %628, %626
  %634 = phi i32 [ %627, %626 ], [ %632, %628 ]
  %635 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 9), align 8, !tbaa !6
  %636 = load i64, ptr %635, align 8
  %637 = and i64 %636, 65535
  %638 = icmp eq i64 %637, 14
  br i1 %638, label %639, label %641

639:                                              ; preds = %633
  %640 = tail call i32 @vector_type_mode(ptr noundef nonnull %635) #22
  br label %646

641:                                              ; preds = %633
  %642 = getelementptr inbounds %struct.tree_type, ptr %635, i64 0, i32 6
  %643 = load i32, ptr %642, align 4
  %644 = lshr i32 %643, 16
  %645 = and i32 %644, 255
  br label %646

646:                                              ; preds = %641, %639
  %647 = phi i32 [ %640, %639 ], [ %645, %641 ]
  %648 = icmp eq i32 %634, %647
  br i1 %648, label %649, label %662

649:                                              ; preds = %646
  %650 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %651 = load i32, ptr %650, align 4
  %652 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 9), align 8
  %653 = getelementptr inbounds %struct.tree_type, ptr %652, i64 0, i32 6
  %654 = load i32, ptr %653, align 4
  %655 = xor i32 %654, %651
  %656 = and i32 %655, 1023
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %662

658:                                              ; preds = %649
  %659 = icmp eq i32 %0, 0
  %660 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 10), align 16
  %661 = select i1 %659, ptr %652, ptr %660
  br label %866

662:                                              ; preds = %649, %646
  %663 = load i64, ptr %1, align 8
  %664 = and i64 %663, 65535
  %665 = icmp eq i64 %664, 14
  br i1 %665, label %666, label %668

666:                                              ; preds = %662
  %667 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %673

668:                                              ; preds = %662
  %669 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %670 = load i32, ptr %669, align 4
  %671 = lshr i32 %670, 16
  %672 = and i32 %671, 255
  br label %673

673:                                              ; preds = %668, %666
  %674 = phi i32 [ %667, %666 ], [ %672, %668 ]
  %675 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 5), align 8, !tbaa !6
  %676 = load i64, ptr %675, align 8
  %677 = and i64 %676, 65535
  %678 = icmp eq i64 %677, 14
  br i1 %678, label %679, label %681

679:                                              ; preds = %673
  %680 = tail call i32 @vector_type_mode(ptr noundef nonnull %675) #22
  br label %686

681:                                              ; preds = %673
  %682 = getelementptr inbounds %struct.tree_type, ptr %675, i64 0, i32 6
  %683 = load i32, ptr %682, align 4
  %684 = lshr i32 %683, 16
  %685 = and i32 %684, 255
  br label %686

686:                                              ; preds = %681, %679
  %687 = phi i32 [ %680, %679 ], [ %685, %681 ]
  %688 = icmp eq i32 %674, %687
  br i1 %688, label %689, label %702

689:                                              ; preds = %686
  %690 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %691 = load i32, ptr %690, align 4
  %692 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 5), align 8
  %693 = getelementptr inbounds %struct.tree_type, ptr %692, i64 0, i32 6
  %694 = load i32, ptr %693, align 4
  %695 = xor i32 %694, %691
  %696 = and i32 %695, 1023
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %702

698:                                              ; preds = %689
  %699 = icmp eq i32 %0, 0
  %700 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 10), align 16
  %701 = select i1 %699, ptr %692, ptr %700
  br label %866

702:                                              ; preds = %689, %686
  %703 = load i64, ptr %1, align 8
  %704 = and i64 %703, 65535
  %705 = icmp eq i64 %704, 14
  br i1 %705, label %706, label %708

706:                                              ; preds = %702
  %707 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %713

708:                                              ; preds = %702
  %709 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %710 = load i32, ptr %709, align 4
  %711 = lshr i32 %710, 16
  %712 = and i32 %711, 255
  br label %713

713:                                              ; preds = %708, %706
  %714 = phi i32 [ %707, %706 ], [ %712, %708 ]
  %715 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 4), align 16, !tbaa !6
  %716 = load i64, ptr %715, align 8
  %717 = and i64 %716, 65535
  %718 = icmp eq i64 %717, 14
  br i1 %718, label %719, label %721

719:                                              ; preds = %713
  %720 = tail call i32 @vector_type_mode(ptr noundef nonnull %715) #22
  br label %726

721:                                              ; preds = %713
  %722 = getelementptr inbounds %struct.tree_type, ptr %715, i64 0, i32 6
  %723 = load i32, ptr %722, align 4
  %724 = lshr i32 %723, 16
  %725 = and i32 %724, 255
  br label %726

726:                                              ; preds = %721, %719
  %727 = phi i32 [ %720, %719 ], [ %725, %721 ]
  %728 = icmp eq i32 %714, %727
  br i1 %728, label %729, label %742

729:                                              ; preds = %726
  %730 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %731 = load i32, ptr %730, align 4
  %732 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 4), align 16
  %733 = getelementptr inbounds %struct.tree_type, ptr %732, i64 0, i32 6
  %734 = load i32, ptr %733, align 4
  %735 = xor i32 %734, %731
  %736 = and i32 %735, 1023
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %742

738:                                              ; preds = %729
  %739 = icmp eq i32 %0, 0
  %740 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 9), align 8
  %741 = select i1 %739, ptr %732, ptr %740
  br label %866

742:                                              ; preds = %729, %726
  %743 = load i64, ptr %1, align 8
  %744 = and i64 %743, 65535
  %745 = icmp eq i64 %744, 14
  br i1 %745, label %746, label %748

746:                                              ; preds = %742
  %747 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %753

748:                                              ; preds = %742
  %749 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %750 = load i32, ptr %749, align 4
  %751 = lshr i32 %750, 16
  %752 = and i32 %751, 255
  br label %753

753:                                              ; preds = %748, %746
  %754 = phi i32 [ %747, %746 ], [ %752, %748 ]
  %755 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 3), align 8, !tbaa !6
  %756 = load i64, ptr %755, align 8
  %757 = and i64 %756, 65535
  %758 = icmp eq i64 %757, 14
  br i1 %758, label %759, label %761

759:                                              ; preds = %753
  %760 = tail call i32 @vector_type_mode(ptr noundef nonnull %755) #22
  br label %766

761:                                              ; preds = %753
  %762 = getelementptr inbounds %struct.tree_type, ptr %755, i64 0, i32 6
  %763 = load i32, ptr %762, align 4
  %764 = lshr i32 %763, 16
  %765 = and i32 %764, 255
  br label %766

766:                                              ; preds = %761, %759
  %767 = phi i32 [ %760, %759 ], [ %765, %761 ]
  %768 = icmp eq i32 %754, %767
  br i1 %768, label %769, label %782

769:                                              ; preds = %766
  %770 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %771 = load i32, ptr %770, align 4
  %772 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 3), align 8
  %773 = getelementptr inbounds %struct.tree_type, ptr %772, i64 0, i32 6
  %774 = load i32, ptr %773, align 4
  %775 = xor i32 %774, %771
  %776 = and i32 %775, 1023
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %778, label %782

778:                                              ; preds = %769
  %779 = icmp eq i32 %0, 0
  %780 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 8), align 16
  %781 = select i1 %779, ptr %772, ptr %780
  br label %866

782:                                              ; preds = %769, %766
  %783 = load i64, ptr %1, align 8
  %784 = and i64 %783, 65535
  %785 = icmp eq i64 %784, 14
  br i1 %785, label %786, label %788

786:                                              ; preds = %782
  %787 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %793

788:                                              ; preds = %782
  %789 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %790 = load i32, ptr %789, align 4
  %791 = lshr i32 %790, 16
  %792 = and i32 %791, 255
  br label %793

793:                                              ; preds = %788, %786
  %794 = phi i32 [ %787, %786 ], [ %792, %788 ]
  %795 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 2), align 16, !tbaa !6
  %796 = load i64, ptr %795, align 8
  %797 = and i64 %796, 65535
  %798 = icmp eq i64 %797, 14
  br i1 %798, label %799, label %801

799:                                              ; preds = %793
  %800 = tail call i32 @vector_type_mode(ptr noundef nonnull %795) #22
  br label %806

801:                                              ; preds = %793
  %802 = getelementptr inbounds %struct.tree_type, ptr %795, i64 0, i32 6
  %803 = load i32, ptr %802, align 4
  %804 = lshr i32 %803, 16
  %805 = and i32 %804, 255
  br label %806

806:                                              ; preds = %801, %799
  %807 = phi i32 [ %800, %799 ], [ %805, %801 ]
  %808 = icmp eq i32 %794, %807
  br i1 %808, label %809, label %822

809:                                              ; preds = %806
  %810 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %811 = load i32, ptr %810, align 4
  %812 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 2), align 16
  %813 = getelementptr inbounds %struct.tree_type, ptr %812, i64 0, i32 6
  %814 = load i32, ptr %813, align 4
  %815 = xor i32 %814, %811
  %816 = and i32 %815, 1023
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %822

818:                                              ; preds = %809
  %819 = icmp eq i32 %0, 0
  %820 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 7), align 8
  %821 = select i1 %819, ptr %812, ptr %820
  br label %866

822:                                              ; preds = %809, %806
  %823 = load i64, ptr %1, align 8
  %824 = and i64 %823, 65535
  %825 = icmp eq i64 %824, 14
  br i1 %825, label %826, label %828

826:                                              ; preds = %822
  %827 = tail call i32 @vector_type_mode(ptr noundef nonnull %1) #22
  br label %833

828:                                              ; preds = %822
  %829 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %830 = load i32, ptr %829, align 4
  %831 = lshr i32 %830, 16
  %832 = and i32 %831, 255
  br label %833

833:                                              ; preds = %828, %826
  %834 = phi i32 [ %827, %826 ], [ %832, %828 ]
  %835 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 1), align 8, !tbaa !6
  %836 = load i64, ptr %835, align 8
  %837 = and i64 %836, 65535
  %838 = icmp eq i64 %837, 14
  br i1 %838, label %839, label %841

839:                                              ; preds = %833
  %840 = tail call i32 @vector_type_mode(ptr noundef nonnull %835) #22
  br label %846

841:                                              ; preds = %833
  %842 = getelementptr inbounds %struct.tree_type, ptr %835, i64 0, i32 6
  %843 = load i32, ptr %842, align 4
  %844 = lshr i32 %843, 16
  %845 = and i32 %844, 255
  br label %846

846:                                              ; preds = %841, %839
  %847 = phi i32 [ %840, %839 ], [ %845, %841 ]
  %848 = icmp eq i32 %834, %847
  %849 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 6
  %850 = load i32, ptr %849, align 4
  br i1 %848, label %851, label %862

851:                                              ; preds = %846
  %852 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 1), align 8
  %853 = getelementptr inbounds %struct.tree_type, ptr %852, i64 0, i32 6
  %854 = load i32, ptr %853, align 4
  %855 = xor i32 %854, %850
  %856 = and i32 %855, 1023
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %858, label %862

858:                                              ; preds = %851
  %859 = icmp eq i32 %0, 0
  %860 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 6), align 16
  %861 = select i1 %859, ptr %852, ptr %860
  br label %866

862:                                              ; preds = %846, %851
  %863 = and i32 %850, 1023
  %864 = zext i32 %863 to i64
  %865 = tail call ptr @build_nonstandard_integer_type(i64 noundef %864, i32 noundef %0) #22
  br label %866

866:                                              ; preds = %412, %418, %862, %858, %818, %778, %738, %698, %658, %618, %578, %538, %498, %458, %409, %400, %391, %382, %373, %364, %355, %346, %337, %328, %319, %310, %301, %292, %283, %274, %265, %256, %247, %238, %229, %220, %211, %202, %193, %184, %175, %166, %157, %148, %139, %130, %121, %112, %103, %94, %85, %76, %67, %58, %49, %40, %31, %22, %13
  %867 = phi ptr [ %15, %13 ], [ %24, %22 ], [ %33, %31 ], [ %42, %40 ], [ %51, %49 ], [ %60, %58 ], [ %69, %67 ], [ %78, %76 ], [ %87, %85 ], [ %96, %94 ], [ %105, %103 ], [ %114, %112 ], [ %123, %121 ], [ %132, %130 ], [ %141, %139 ], [ %150, %148 ], [ %159, %157 ], [ %168, %166 ], [ %177, %175 ], [ %186, %184 ], [ %195, %193 ], [ %204, %202 ], [ %213, %211 ], [ %222, %220 ], [ %231, %229 ], [ %240, %238 ], [ %249, %247 ], [ %258, %256 ], [ %267, %265 ], [ %276, %274 ], [ %285, %283 ], [ %294, %292 ], [ %303, %301 ], [ %312, %310 ], [ %321, %319 ], [ %330, %328 ], [ %339, %337 ], [ %348, %346 ], [ %357, %355 ], [ %366, %364 ], [ %375, %373 ], [ %384, %382 ], [ %393, %391 ], [ %402, %400 ], [ %411, %409 ], [ %461, %458 ], [ %501, %498 ], [ %541, %538 ], [ %581, %578 ], [ %621, %618 ], [ %661, %658 ], [ %701, %698 ], [ %741, %738 ], [ %781, %778 ], [ %821, %818 ], [ %861, %858 ], [ %865, %862 ], [ %1, %412 ], [ %1, %418 ]
  ret ptr %867
}

declare ptr @common_type(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @int_fits_type_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @warnings_for_convert_and_check(ptr noundef %0, ptr noundef %1, ptr nocapture noundef %2) local_unnamed_addr #9 {
  %4 = load i64, ptr %1, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 23
  br i1 %6, label %7, label %59

7:                                                ; preds = %3
  %8 = load i64, ptr %0, align 8
  %9 = trunc i64 %8 to i16
  switch i16 %9, label %59 [
    i16 8, label %10
    i16 6, label %10
  ]

10:                                               ; preds = %7, %7
  %11 = tail call i32 @int_fits_type_p(ptr noundef nonnull %1, ptr noundef nonnull %0) #22
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %59

13:                                               ; preds = %10
  %14 = load i64, ptr %2, align 8
  %15 = and i64 %14, 134217728
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = load i64, ptr %1, align 8
  %19 = and i64 %18, 134217728
  %20 = and i64 %14, -134217729
  %21 = or i64 %19, %20
  store i64 %21, ptr %2, align 8
  br label %22

22:                                               ; preds = %17, %13
  %23 = load i64, ptr %0, align 8
  %24 = and i64 %23, 2097152
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef nonnull %0)
  %28 = tail call i32 @int_fits_type_p(ptr noundef nonnull %1, ptr noundef %27) #22
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 151, ptr noundef nonnull @.str.297) #22
  br label %68

32:                                               ; preds = %26
  tail call fastcc void @conversion_warning(ptr noundef nonnull %0, ptr noundef nonnull %1)
  br label %68

33:                                               ; preds = %22
  %34 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 1, ptr noundef nonnull %0)
  %35 = tail call i32 @int_fits_type_p(ptr noundef nonnull %1, ptr noundef %34) #22
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 151, ptr noundef nonnull @.str.298) #22
  br label %68

39:                                               ; preds = %33
  %40 = load i32, ptr @pedantic, align 4, !tbaa !21
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = load i64, ptr %44, align 8
  %46 = and i64 %45, 65535
  %47 = icmp eq i64 %46, 8
  br i1 %47, label %48, label %56

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.tree_type, ptr %44, i64 0, i32 6
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %52 = load i32, ptr %51, align 4
  %53 = xor i32 %52, %50
  %54 = and i32 %53, 1023
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %48, %42
  %57 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 151, ptr noundef nonnull @.str.298) #22
  br label %68

58:                                               ; preds = %48, %39
  tail call fastcc void @conversion_warning(ptr noundef nonnull %0, ptr noundef nonnull %1)
  br label %68

59:                                               ; preds = %7, %10, %3
  %60 = load i64, ptr %2, align 8
  %61 = trunc i64 %60 to i16
  switch i16 %61, label %67 [
    i16 23, label %62
    i16 25, label %62
  ]

62:                                               ; preds = %59, %59
  %63 = and i64 %60, 134217728
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 151, ptr noundef nonnull @.str.298) #22
  br label %68

67:                                               ; preds = %59, %62
  tail call fastcc void @conversion_warning(ptr noundef %0, ptr noundef nonnull %1)
  br label %68

68:                                               ; preds = %65, %67, %32, %30, %56, %58, %37
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_common_signed_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %0)
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @conversion_warning(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = alloca %struct.real_value, align 8
  %4 = alloca %struct.real_value, align 8
  %5 = alloca %struct.real_value, align 8
  %6 = alloca %struct.real_value, align 8
  br label %7

7:                                                ; preds = %168, %2
  %8 = phi ptr [ %1, %2 ], [ %162, %168 ]
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 65535
  %11 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !17
  %13 = icmp eq i32 %12, 9
  br i1 %13, label %14, label %20

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.tree_exp, ptr %8, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.tree_int_cst, ptr %16, i64 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !17
  %19 = trunc i64 %18 to i32
  br label %24

20:                                               ; preds = %7
  %21 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %10
  %22 = load i8, ptr %21, align 1, !tbaa !17
  %23 = zext i8 %22 to i32
  br label %24

24:                                               ; preds = %14, %20
  %25 = phi i32 [ %19, %14 ], [ %23, %20 ]
  %26 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = load i32, ptr @warn_conversion, align 4, !tbaa !21
  %29 = icmp ne i32 %28, 0
  %30 = load i32, ptr @warn_sign_conversion, align 4
  %31 = icmp ne i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31
  br i1 %32, label %33, label %324

33:                                               ; preds = %24
  %34 = icmp sgt i32 %25, 0
  br i1 %34, label %35, label %56

35:                                               ; preds = %33
  %36 = zext i32 %25 to i64
  br label %37

37:                                               ; preds = %35, %53
  %38 = phi i64 [ 0, %35 ], [ %54, %53 ]
  %39 = getelementptr inbounds %struct.tree_exp, ptr %8, i64 0, i32 3, i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = icmp eq ptr %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %37
  %43 = load i64, ptr %40, align 8
  %44 = and i64 %43, 65535
  %45 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %44
  %46 = load i32, ptr %45, align 4, !tbaa !17
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.tree_decl_common, ptr %40, i64 0, i32 2
  %50 = load i64, ptr %49, align 8
  %51 = and i64 %50, 4096
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %324

53:                                               ; preds = %48, %42, %37
  %54 = add nuw nsw i64 %38, 1
  %55 = icmp eq i64 %54, %36
  br i1 %55, label %56, label %37, !llvm.loop !103

56:                                               ; preds = %53, %33
  %57 = trunc i64 %9 to i16
  switch i16 %57, label %169 [
    i16 101, label %58
    i16 102, label %58
    i16 98, label %58
    i16 100, label %58
    i16 97, label %58
    i16 99, label %58
    i16 91, label %58
    i16 92, label %58
    i16 93, label %58
    i16 94, label %58
    i16 95, label %58
    i16 96, label %58
    i16 24, label %69
    i16 23, label %69
    i16 56, label %158
  ]

58:                                               ; preds = %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56
  %59 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %60 = load i32, ptr %59, align 4
  %61 = and i32 %60, 1023
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %324

63:                                               ; preds = %58
  %64 = load i64, ptr %0, align 8
  %65 = and i64 %64, 2097152
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %324

67:                                               ; preds = %63
  %68 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 61, ptr noundef nonnull @.str.299, ptr noundef nonnull %0) #22
  br label %324

69:                                               ; preds = %56, %56
  %70 = load i64, ptr %27, align 8
  %71 = trunc i64 %70 to i16
  switch i16 %71, label %72 [
    i16 9, label %74
    i16 8, label %87
  ]

72:                                               ; preds = %69
  %73 = load i64, ptr %0, align 8
  br label %119

74:                                               ; preds = %69
  %75 = load i64, ptr %0, align 8
  %76 = and i64 %75, 65535
  %77 = icmp eq i64 %76, 8
  br i1 %77, label %78, label %119

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.tree_real_cst, ptr %8, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  %81 = getelementptr inbounds %struct.tree_type, ptr %27, i64 0, i32 6
  %82 = load i32, ptr %81, align 4
  %83 = lshr i32 %82, 16
  %84 = and i32 %83, 255
  %85 = tail call zeroext i8 @real_isinteger(ptr noundef %80, i32 noundef %84) #22
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %156, label %324

87:                                               ; preds = %69
  %88 = load i64, ptr %0, align 8
  %89 = and i64 %88, 65535
  %90 = icmp eq i64 %89, 8
  br i1 %90, label %91, label %119

91:                                               ; preds = %87
  %92 = tail call i32 @int_fits_type_p(ptr noundef nonnull %8, ptr noundef nonnull %0) #22
  %93 = icmp eq i32 %92, 0
  %94 = load i64, ptr %0, align 8
  br i1 %93, label %95, label %119

95:                                               ; preds = %91
  %96 = and i64 %94, 2097152
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %95
  %99 = load i64, ptr %27, align 8
  %100 = and i64 %99, 2097152
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %98
  %103 = tail call i32 @tree_int_cst_sgn(ptr noundef nonnull %8) #22
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = load i64, ptr %0, align 8
  br label %109

107:                                              ; preds = %102
  %108 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 178, ptr noundef nonnull @.str.300) #22
  br label %324

109:                                              ; preds = %105, %98, %95
  %110 = phi i64 [ %106, %105 ], [ %94, %98 ], [ %94, %95 ]
  %111 = and i64 %110, 2097152
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %156

113:                                              ; preds = %109
  %114 = load i64, ptr %27, align 8
  %115 = and i64 %114, 2097152
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %156, label %117

117:                                              ; preds = %113
  %118 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 178, ptr noundef nonnull @.str.301) #22
  br label %324

119:                                              ; preds = %72, %74, %91, %87
  %120 = phi i64 [ %73, %72 ], [ %75, %74 ], [ %94, %91 ], [ %88, %87 ]
  %121 = and i64 %120, 65535
  %122 = icmp eq i64 %121, 9
  br i1 %122, label %123, label %324

123:                                              ; preds = %119
  %124 = load i64, ptr %27, align 8
  %125 = trunc i64 %124 to i16
  switch i16 %125, label %324 [
    i16 8, label %126
    i16 9, label %141
  ]

126:                                              ; preds = %123
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #22
  call void @real_value_from_int_cst(ptr nonnull sret(%struct.real_value) align 8 %3, ptr noundef null, ptr noundef nonnull %8) #22
  %127 = load i64, ptr %0, align 8
  %128 = and i64 %127, 65535
  %129 = icmp eq i64 %128, 14
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = call i32 @vector_type_mode(ptr noundef nonnull %0) #22
  br label %137

132:                                              ; preds = %126
  %133 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %134 = load i32, ptr %133, align 4
  %135 = lshr i32 %134, 16
  %136 = and i32 %135, 255
  br label %137

137:                                              ; preds = %132, %130
  %138 = phi i32 [ %131, %130 ], [ %136, %132 ]
  %139 = call zeroext i8 @exact_real_truncate(i32 noundef %138, ptr noundef nonnull %3) #22
  %140 = icmp eq i8 %139, 0
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #22
  br i1 %140, label %156, label %324

141:                                              ; preds = %123
  %142 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %143 = load i32, ptr %142, align 4
  %144 = and i32 %143, 1023
  %145 = getelementptr inbounds %struct.tree_type, ptr %27, i64 0, i32 6
  %146 = load i32, ptr %145, align 4
  %147 = and i32 %146, 1023
  %148 = icmp ult i32 %144, %147
  br i1 %148, label %149, label %324

149:                                              ; preds = %141
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #22
  %150 = getelementptr inbounds %struct.tree_real_cst, ptr %8, i64 0, i32 1
  %151 = load ptr, ptr %150, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(32) %151, i64 32, i1 false), !tbaa.struct !104
  %152 = lshr i32 %143, 16
  %153 = and i32 %152, 255
  %154 = call zeroext i8 @exact_real_truncate(i32 noundef %153, ptr noundef nonnull %4) #22
  %155 = icmp eq i8 %154, 0
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #22
  br i1 %155, label %156, label %324

156:                                              ; preds = %78, %149, %137, %113, %109
  %157 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 61, ptr noundef nonnull @.str.302, ptr noundef nonnull %0, ptr noundef nonnull %27) #22
  br label %324

158:                                              ; preds = %56
  %159 = getelementptr inbounds %struct.tree_exp, ptr %8, i64 1
  %160 = load ptr, ptr %159, align 8, !tbaa !17
  %161 = getelementptr inbounds %struct.tree_exp, ptr %8, i64 1, i32 0, i32 1
  %162 = load ptr, ptr %161, align 8, !tbaa !17
  %163 = load i64, ptr %160, align 8
  %164 = trunc i64 %163 to i16
  switch i16 %164, label %169 [
    i16 24, label %165
    i16 23, label %165
    i16 56, label %165
  ]

165:                                              ; preds = %158, %158, %158
  %166 = load i64, ptr %162, align 8
  %167 = trunc i64 %166 to i16
  switch i16 %167, label %169 [
    i16 24, label %168
    i16 23, label %168
    i16 56, label %168
  ]

168:                                              ; preds = %165, %165, %165
  tail call fastcc void @conversion_warning(ptr noundef %0, ptr noundef nonnull %160)
  br label %7

169:                                              ; preds = %165, %158, %56
  %170 = load i64, ptr %27, align 8
  %171 = trunc i64 %170 to i16
  switch i16 %171, label %324 [
    i16 9, label %172
    i16 8, label %175
  ]

172:                                              ; preds = %169
  %173 = load i64, ptr %0, align 8
  %174 = trunc i64 %173 to i16
  switch i16 %174, label %324 [
    i16 8, label %321
    i16 9, label %312
  ]

175:                                              ; preds = %169
  %176 = load i64, ptr %0, align 8
  %177 = trunc i64 %176 to i16
  switch i16 %177, label %324 [
    i16 8, label %178
    i16 9, label %274
  ]

178:                                              ; preds = %175
  %179 = tail call ptr @get_unwidened(ptr noundef nonnull %8, ptr noundef null) #22
  %180 = getelementptr inbounds %struct.tree_common, ptr %179, i64 0, i32 2
  %181 = load ptr, ptr %180, align 8, !tbaa !17
  %182 = load i64, ptr %179, align 8
  %183 = trunc i64 %182 to i32
  %184 = and i32 %183, 65535
  %185 = add nsw i32 %184, -87
  %186 = icmp ult i32 %185, 3
  br i1 %186, label %187, label %248

187:                                              ; preds = %178
  %188 = getelementptr inbounds %struct.tree_exp, ptr %179, i64 0, i32 3
  %189 = load ptr, ptr %188, align 8, !tbaa !17
  %190 = getelementptr inbounds %struct.tree_exp, ptr %179, i64 1
  %191 = load ptr, ptr %190, align 8, !tbaa !17
  %192 = tail call ptr @shorten_binary_op(ptr noundef %181, ptr noundef %189, ptr noundef %191, i8 noundef zeroext 1)
  %193 = load i64, ptr %179, align 8
  %194 = and i64 %193, 65535
  %195 = icmp eq i64 %194, 89
  br i1 %195, label %196, label %248

196:                                              ; preds = %187
  %197 = load ptr, ptr %188, align 8, !tbaa !17
  %198 = load ptr, ptr %190, align 8, !tbaa !17
  %199 = getelementptr inbounds %struct.tree_common, ptr %197, i64 0, i32 2
  %200 = load ptr, ptr %199, align 8, !tbaa !17
  %201 = load i64, ptr %200, align 8
  %202 = getelementptr inbounds %struct.tree_common, ptr %198, i64 0, i32 2
  %203 = load ptr, ptr %202, align 8, !tbaa !17
  %204 = load i64, ptr %203, align 8
  %205 = load i64, ptr %197, align 8
  %206 = and i64 %205, 65535
  %207 = icmp eq i64 %206, 23
  br i1 %207, label %208, label %216

208:                                              ; preds = %196
  %209 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef nonnull %0)
  %210 = tail call i32 @int_fits_type_p(ptr noundef nonnull %197, ptr noundef %209) #22
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %208
  %213 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 1, ptr noundef nonnull %0)
  %214 = tail call i32 @int_fits_type_p(ptr noundef nonnull %197, ptr noundef %213) #22
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %324

216:                                              ; preds = %212, %208, %196
  %217 = load i64, ptr %198, align 8
  %218 = and i64 %217, 65535
  %219 = icmp eq i64 %218, 23
  br i1 %219, label %220, label %228

220:                                              ; preds = %216
  %221 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef nonnull %0)
  %222 = tail call i32 @int_fits_type_p(ptr noundef nonnull %198, ptr noundef %221) #22
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %228, label %224

224:                                              ; preds = %220
  %225 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 1, ptr noundef nonnull %0)
  %226 = tail call i32 @int_fits_type_p(ptr noundef nonnull %198, ptr noundef %225) #22
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %324

228:                                              ; preds = %224, %220, %216
  %229 = load i64, ptr %197, align 8
  %230 = and i64 %229, 65535
  %231 = icmp eq i64 %230, 23
  %232 = and i64 %201, 2097152
  %233 = icmp ne i64 %232, 0
  %234 = select i1 %231, i1 %233, i1 false
  br i1 %234, label %235, label %238

235:                                              ; preds = %228
  %236 = tail call i32 @int_fits_type_p(ptr noundef nonnull %197, ptr noundef nonnull %0) #22
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %324

238:                                              ; preds = %235, %228
  %239 = load i64, ptr %198, align 8
  %240 = and i64 %239, 65535
  %241 = icmp eq i64 %240, 23
  %242 = and i64 %204, 2097152
  %243 = icmp ne i64 %242, 0
  %244 = select i1 %241, i1 %243, i1 false
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = tail call i32 @int_fits_type_p(ptr noundef nonnull %198, ptr noundef nonnull %0) #22
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %324

248:                                              ; preds = %245, %238, %178, %187
  %249 = phi ptr [ %192, %187 ], [ %181, %178 ], [ %192, %238 ], [ %192, %245 ]
  %250 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %251 = load i32, ptr %250, align 4
  %252 = and i32 %251, 1023
  %253 = getelementptr inbounds %struct.tree_type, ptr %249, i64 0, i32 6
  %254 = load i32, ptr %253, align 4
  %255 = and i32 %254, 1023
  %256 = icmp ult i32 %252, %255
  br i1 %256, label %321, label %257

257:                                              ; preds = %248
  %258 = icmp eq i32 %252, %255
  %259 = load i64, ptr %0, align 8
  br i1 %258, label %260, label %265

260:                                              ; preds = %257
  %261 = load i64, ptr %249, align 8
  %262 = xor i64 %259, %261
  %263 = and i64 %262, 2097152
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %265, label %272

265:                                              ; preds = %260, %257
  %266 = and i64 %259, 2097152
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %324, label %268

268:                                              ; preds = %265
  %269 = load i64, ptr %249, align 8
  %270 = and i64 %269, 2097152
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %324

272:                                              ; preds = %268, %260
  %273 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 178, ptr noundef nonnull @.str.303, ptr noundef nonnull %0, ptr noundef nonnull %249) #22
  br label %324

274:                                              ; preds = %175
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #22
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #22
  %275 = tail call ptr @get_unwidened(ptr noundef nonnull %8, ptr noundef null) #22
  %276 = getelementptr inbounds %struct.tree_common, ptr %275, i64 0, i32 2
  %277 = load ptr, ptr %276, align 8, !tbaa !17
  %278 = getelementptr inbounds %struct.tree_type, ptr %277, i64 0, i32 13
  %279 = load ptr, ptr %278, align 8, !tbaa !17
  %280 = getelementptr inbounds %struct.tree_type, ptr %277, i64 0, i32 14
  %281 = load ptr, ptr %280, align 8, !tbaa !17
  call void @real_value_from_int_cst(ptr nonnull sret(%struct.real_value) align 8 %5, ptr noundef null, ptr noundef %279) #22
  call void @real_value_from_int_cst(ptr nonnull sret(%struct.real_value) align 8 %6, ptr noundef null, ptr noundef %281) #22
  %282 = load i64, ptr %0, align 8
  %283 = and i64 %282, 65535
  %284 = icmp eq i64 %283, 14
  br i1 %284, label %285, label %287

285:                                              ; preds = %274
  %286 = call i32 @vector_type_mode(ptr noundef nonnull %0) #22
  br label %292

287:                                              ; preds = %274
  %288 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %289 = load i32, ptr %288, align 4
  %290 = lshr i32 %289, 16
  %291 = and i32 %290, 255
  br label %292

292:                                              ; preds = %287, %285
  %293 = phi i32 [ %286, %285 ], [ %291, %287 ]
  %294 = call zeroext i8 @exact_real_truncate(i32 noundef %293, ptr noundef nonnull %5) #22
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %320, label %296

296:                                              ; preds = %292
  %297 = load i64, ptr %0, align 8
  %298 = and i64 %297, 65535
  %299 = icmp eq i64 %298, 14
  br i1 %299, label %300, label %302

300:                                              ; preds = %296
  %301 = call i32 @vector_type_mode(ptr noundef nonnull %0) #22
  br label %307

302:                                              ; preds = %296
  %303 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %304 = load i32, ptr %303, align 4
  %305 = lshr i32 %304, 16
  %306 = and i32 %305, 255
  br label %307

307:                                              ; preds = %302, %300
  %308 = phi i32 [ %301, %300 ], [ %306, %302 ]
  %309 = call zeroext i8 @exact_real_truncate(i32 noundef %308, ptr noundef nonnull %6) #22
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %320, label %311

311:                                              ; preds = %307
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #22
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #22
  br label %324

312:                                              ; preds = %172
  %313 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %314 = load i32, ptr %313, align 4
  %315 = and i32 %314, 1023
  %316 = getelementptr inbounds %struct.tree_type, ptr %27, i64 0, i32 6
  %317 = load i32, ptr %316, align 4
  %318 = and i32 %317, 1023
  %319 = icmp ult i32 %315, %318
  br i1 %319, label %321, label %324

320:                                              ; preds = %292, %307
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #22
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #22
  br label %321

321:                                              ; preds = %172, %312, %248, %320
  %322 = phi ptr [ %277, %320 ], [ %249, %248 ], [ %27, %172 ], [ %27, %312 ]
  %323 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 61, ptr noundef nonnull @.str.304, ptr noundef nonnull %0, ptr noundef nonnull %322) #22
  br label %324

324:                                              ; preds = %24, %48, %172, %175, %169, %312, %265, %268, %272, %78, %123, %107, %117, %119, %141, %149, %137, %311, %321, %224, %212, %245, %235, %156, %58, %63, %67
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_common_unsigned_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 1, ptr noundef %0)
  ret ptr %2
}

declare zeroext i8 @real_isinteger(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i32 @tree_int_cst_sgn(ptr noundef) local_unnamed_addr #3

declare void @real_value_from_int_cst(ptr sret(%struct.real_value) align 8, ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @exact_real_truncate(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #15

declare ptr @get_unwidened(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @convert_and_check(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %1, align 8
  %4 = and i64 %3, 65535
  %5 = icmp eq i64 %4, 190
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = tail call ptr @convert(ptr noundef %8, ptr noundef %10) #22
  %12 = icmp eq ptr %8, %0
  br i1 %12, label %36, label %13

13:                                               ; preds = %2, %6
  %14 = phi ptr [ %10, %6 ], [ %1, %2 ]
  %15 = phi ptr [ %11, %6 ], [ %1, %2 ]
  %16 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %36, label %19

19:                                               ; preds = %13
  %20 = tail call ptr @convert(ptr noundef %0, ptr noundef nonnull %14) #22
  %21 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %19
  %24 = load i64, ptr %14, align 8
  %25 = and i64 %24, 65535
  %26 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !17
  %28 = icmp eq i32 %27, 1
  %29 = and i64 %24, 134217728
  %30 = icmp ne i64 %29, 0
  %31 = and i1 %28, %30
  %32 = load ptr, ptr @global_trees, align 16
  %33 = icmp eq ptr %20, %32
  %34 = select i1 %31, i1 true, i1 %33
  br i1 %34, label %36, label %35

35:                                               ; preds = %23
  tail call void @warnings_for_convert_and_check(ptr noundef %0, ptr noundef %15, ptr noundef %20)
  br label %36

36:                                               ; preds = %19, %35, %23, %13, %6
  %37 = phi ptr [ %11, %6 ], [ %14, %13 ], [ %20, %23 ], [ %20, %35 ], [ %20, %19 ]
  ret ptr %37
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @verify_sequence_points(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #22
  store ptr null, ptr %2, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #22
  store ptr null, ptr %3, align 8, !tbaa !6
  store ptr null, ptr @warned_ids, align 8, !tbaa !6
  store ptr null, ptr @save_expr_cache, align 8, !tbaa !6
  %4 = load ptr, ptr @tlist_firstobj, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %44

6:                                                ; preds = %1
  %7 = tail call i32 @_obstack_begin(ptr noundef nonnull @tlist_obstack, i32 noundef 0, i32 noundef 0, ptr noundef nonnull @xmalloc, ptr noundef nonnull @free) #22
  store i64 0, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %8 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %9 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %6
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 0) #22
  %15 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %16 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %17

17:                                               ; preds = %6, %14
  %18 = phi ptr [ %9, %6 ], [ %16, %14 ]
  %19 = phi i64 [ 0, %6 ], [ %15, %14 ]
  %20 = getelementptr inbounds i8, ptr %18, i64 %19
  %21 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %22 = icmp eq ptr %20, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %25 = or i8 %24, 2
  store i8 %25, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %26

26:                                               ; preds = %17, %23
  %27 = ptrtoint ptr %21 to i64
  store i64 %27, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %28 = ptrtoint ptr %20 to i64
  %29 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %30 = sext i32 %29 to i64
  %31 = add nsw i64 %30, %28
  %32 = xor i32 %29, -1
  %33 = sext i32 %32 to i64
  %34 = and i64 %31, %33
  %35 = inttoptr i64 %34 to ptr
  %36 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %37 = ptrtoint ptr %36 to i64
  %38 = sub i64 %34, %37
  %39 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %40 = ptrtoint ptr %39 to i64
  %41 = sub i64 %40, %37
  %42 = icmp sgt i64 %38, %41
  %43 = select i1 %42, ptr %39, ptr %35
  store ptr %43, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %43, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %21, ptr @tlist_firstobj, align 8, !tbaa !6
  br label %44

44:                                               ; preds = %26, %1
  call fastcc void @verify_tree(ptr noundef %0, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef null)
  %45 = load ptr, ptr %3, align 8, !tbaa !6
  %46 = icmp eq ptr %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %44, %55
  %48 = phi ptr [ %56, %55 ], [ %45, %44 ]
  %49 = getelementptr inbounds %struct.tlist, ptr %48, i64 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !112
  %51 = icmp eq ptr %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.tlist, ptr %48, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %54, ptr noundef nonnull %50, ptr noundef nonnull %45, i32 noundef 0)
  br label %55

55:                                               ; preds = %52, %47
  %56 = load ptr, ptr %48, align 8, !tbaa !115
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %47, !llvm.loop !116

58:                                               ; preds = %55, %44
  %59 = load ptr, ptr @tlist_firstobj, align 8, !tbaa !6
  %60 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %61 = ptrtoint ptr %59 to i64
  %62 = ptrtoint ptr %60 to i64
  %63 = sub i64 %61, %62
  store i64 %63, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %64 = icmp sgt i64 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %58
  %66 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %67 = ptrtoint ptr %66 to i64
  %68 = sub i64 %67, %62
  %69 = icmp slt i64 %63, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, ptr %60, i64 %63
  store ptr %71, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %71, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %74

72:                                               ; preds = %65, %58
  %73 = getelementptr inbounds i8, ptr %60, i64 %63
  call void @obstack_free(ptr noundef nonnull @tlist_obstack, ptr noundef %73) #22
  br label %74

74:                                               ; preds = %72, %70
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #22
  ret void
}

declare i32 @_obstack_begin(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @_obstack_newchunk(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @verify_tree(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #9 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #22
  %9 = icmp eq ptr %0, null
  br i1 %9, label %779, label %10

10:                                               ; preds = %4
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i16
  %13 = and i64 %11, 65535
  %14 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %13
  %15 = load i32, ptr %14, align 4, !tbaa !17
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %22

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, 4096
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %73

22:                                               ; preds = %17, %10
  %23 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = icmp eq ptr %24, null
  br i1 %25, label %73, label %26

26:                                               ; preds = %22
  %27 = load i64, ptr %24, align 8
  %28 = and i64 %27, 65535
  %29 = icmp eq i64 %28, 19
  br i1 %29, label %73, label %30

30:                                               ; preds = %26
  %31 = tail call zeroext i8 @lvalue_p(ptr noundef nonnull %0) #22
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %73, label %33

33:                                               ; preds = %30
  %34 = load ptr, ptr %2, align 8, !tbaa !6
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %35 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %36 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %37 = ptrtoint ptr %35 to i64
  %38 = ptrtoint ptr %36 to i64
  %39 = sub i64 %37, %38
  %40 = icmp slt i64 %39, 24
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %42 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %43 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %44

44:                                               ; preds = %41, %33
  %45 = phi ptr [ %36, %33 ], [ %43, %41 ]
  %46 = phi i64 [ 24, %33 ], [ %42, %41 ]
  %47 = getelementptr inbounds i8, ptr %45, i64 %46
  %48 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %49 = icmp eq ptr %47, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %52 = or i8 %51, 2
  store i8 %52, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %53

53:                                               ; preds = %50, %44
  %54 = ptrtoint ptr %48 to i64
  store i64 %54, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %55 = ptrtoint ptr %47 to i64
  %56 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %57 = sext i32 %56 to i64
  %58 = add nsw i64 %57, %55
  %59 = xor i32 %56, -1
  %60 = sext i32 %59 to i64
  %61 = and i64 %58, %60
  %62 = inttoptr i64 %61 to ptr
  %63 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %64 = ptrtoint ptr %63 to i64
  %65 = sub i64 %61, %64
  %66 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %67 = ptrtoint ptr %66 to i64
  %68 = sub i64 %67, %64
  %69 = icmp sgt i64 %65, %68
  %70 = select i1 %69, ptr %66, ptr %62
  store ptr %70, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %70, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %34, ptr %48, align 8, !tbaa !115
  %71 = getelementptr inbounds %struct.tlist, ptr %48, i64 0, i32 1
  store ptr %0, ptr %71, align 8, !tbaa !114
  %72 = getelementptr inbounds %struct.tlist, ptr %48, i64 0, i32 2
  store ptr %3, ptr %72, align 8, !tbaa !112
  store ptr %48, ptr %2, align 8, !tbaa !6
  br label %73

73:                                               ; preds = %53, %30, %26, %22, %17
  switch i16 %12, label %84 [
    i16 51, label %779
    i16 52, label %159
    i16 91, label %159
    i16 92, label %159
    i16 56, label %182
    i16 125, label %292
    i16 126, label %292
    i16 127, label %292
    i16 128, label %292
    i16 53, label %296
    i16 59, label %448
    i16 2, label %74
    i16 120, label %157
    i16 121, label %76
  ]

74:                                               ; preds = %156, %73
  %75 = phi ptr [ %0, %73 ], [ %93, %156 ]
  br label %520

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 3
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = load i64, ptr %78, align 8
  %80 = and i64 %79, 65535
  %81 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %80
  %82 = load i32, ptr %81, align 4, !tbaa !17
  %83 = icmp eq i32 %82, 3
  br i1 %83, label %779, label %90

84:                                               ; preds = %73
  %85 = icmp eq i32 %15, 6
  br i1 %85, label %86, label %736

86:                                               ; preds = %84, %734
  %87 = phi ptr [ %93, %734 ], [ %0, %84 ]
  %88 = getelementptr inbounds %struct.tree_exp, ptr %87, i64 0, i32 3
  %89 = load ptr, ptr %88, align 8, !tbaa !17
  br label %90

90:                                               ; preds = %76, %86
  %91 = phi ptr [ %89, %86 ], [ %78, %76 ]
  br label %92

92:                                               ; preds = %90, %726
  %93 = phi ptr [ %728, %726 ], [ %91, %90 ]
  %94 = load i64, ptr %93, align 8
  %95 = trunc i64 %94 to i16
  %96 = and i64 %94, 65535
  %97 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !17
  %99 = icmp eq i32 %98, 3
  br i1 %99, label %100, label %105

100:                                              ; preds = %92
  %101 = getelementptr inbounds %struct.tree_decl_common, ptr %93, i64 0, i32 2
  %102 = load i64, ptr %101, align 8
  %103 = and i64 %102, 4096
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %156

105:                                              ; preds = %100, %92
  %106 = getelementptr inbounds %struct.tree_common, ptr %93, i64 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  %108 = icmp eq ptr %107, null
  br i1 %108, label %156, label %109

109:                                              ; preds = %105
  %110 = load i64, ptr %107, align 8
  %111 = and i64 %110, 65535
  %112 = icmp eq i64 %111, 19
  br i1 %112, label %156, label %113

113:                                              ; preds = %109
  %114 = tail call zeroext i8 @lvalue_p(ptr noundef nonnull %93) #22
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %156, label %116

116:                                              ; preds = %113
  %117 = load ptr, ptr %2, align 8, !tbaa !6
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %118 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %119 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %120 = ptrtoint ptr %118 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = icmp slt i64 %122, 24
  br i1 %123, label %124, label %127

124:                                              ; preds = %116
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %125 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %126 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %127

127:                                              ; preds = %124, %116
  %128 = phi ptr [ %119, %116 ], [ %126, %124 ]
  %129 = phi i64 [ 24, %116 ], [ %125, %124 ]
  %130 = getelementptr inbounds i8, ptr %128, i64 %129
  %131 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %132 = icmp eq ptr %130, %131
  br i1 %132, label %133, label %136

133:                                              ; preds = %127
  %134 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %135 = or i8 %134, 2
  store i8 %135, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %136

136:                                              ; preds = %127, %133
  %137 = ptrtoint ptr %131 to i64
  store i64 %137, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %138 = ptrtoint ptr %130 to i64
  %139 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %140 = sext i32 %139 to i64
  %141 = add nsw i64 %140, %138
  %142 = xor i32 %139, -1
  %143 = sext i32 %142 to i64
  %144 = and i64 %141, %143
  %145 = inttoptr i64 %144 to ptr
  %146 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %147 = ptrtoint ptr %146 to i64
  %148 = sub i64 %144, %147
  %149 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %150 = ptrtoint ptr %149 to i64
  %151 = sub i64 %150, %147
  %152 = icmp sgt i64 %148, %151
  %153 = select i1 %152, ptr %149, ptr %145
  store ptr %153, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %153, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %117, ptr %131, align 8, !tbaa !115
  %154 = getelementptr inbounds %struct.tlist, ptr %131, i64 0, i32 1
  store ptr %93, ptr %154, align 8, !tbaa !114
  %155 = getelementptr inbounds %struct.tlist, ptr %131, i64 0, i32 2
  store ptr null, ptr %155, align 8, !tbaa !112
  store ptr %131, ptr %2, align 8, !tbaa !6
  br label %156

156:                                              ; preds = %100, %105, %109, %136, %113
  switch i16 %95, label %734 [
    i16 51, label %779
    i16 52, label %159
    i16 91, label %159
    i16 92, label %159
    i16 56, label %182
    i16 125, label %292
    i16 126, label %292
    i16 127, label %292
    i16 128, label %292
    i16 53, label %296
    i16 59, label %448
    i16 2, label %74
    i16 120, label %157
    i16 121, label %726
  ]

157:                                              ; preds = %156, %73
  %158 = phi ptr [ %0, %73 ], [ %93, %156 ]
  br label %538

159:                                              ; preds = %156, %156, %156, %73, %73, %73
  %160 = phi ptr [ %0, %73 ], [ %0, %73 ], [ %0, %73 ], [ %93, %156 ], [ %93, %156 ], [ %93, %156 ]
  store ptr null, ptr %8, align 8, !tbaa !6
  store ptr null, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %5, align 8, !tbaa !6
  %161 = getelementptr inbounds %struct.tree_exp, ptr %160, i64 0, i32 3
  %162 = load ptr, ptr %161, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %162, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef null)
  %163 = load ptr, ptr %6, align 8, !tbaa !6
  %164 = icmp eq ptr %163, null
  br i1 %164, label %176, label %165

165:                                              ; preds = %159, %173
  %166 = phi ptr [ %174, %173 ], [ %163, %159 ]
  %167 = getelementptr inbounds %struct.tlist, ptr %166, i64 0, i32 2
  %168 = load ptr, ptr %167, align 8, !tbaa !112
  %169 = icmp eq ptr %168, null
  br i1 %169, label %173, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %struct.tlist, ptr %166, i64 0, i32 1
  %172 = load ptr, ptr %171, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %172, ptr noundef nonnull %168, ptr noundef nonnull %163, i32 noundef 0)
  br label %173

173:                                              ; preds = %170, %165
  %174 = load ptr, ptr %166, align 8, !tbaa !115
  %175 = icmp eq ptr %174, null
  br i1 %175, label %176, label %165, !llvm.loop !116

176:                                              ; preds = %173, %159
  %177 = load ptr, ptr %5, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef %1, ptr noundef %177, i32 noundef 0)
  %178 = load ptr, ptr %6, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef %1, ptr noundef %178, i32 noundef 0)
  %179 = getelementptr inbounds %struct.tree_exp, ptr %160, i64 1
  %180 = load ptr, ptr %179, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %180, ptr noundef nonnull %8, ptr noundef %2, ptr noundef null)
  %181 = load ptr, ptr %8, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef %1, ptr noundef %181, i32 noundef 0)
  br label %779

182:                                              ; preds = %156, %73
  %183 = phi ptr [ %0, %73 ], [ %93, %156 ]
  store ptr null, ptr %7, align 8, !tbaa !6
  store ptr null, ptr %5, align 8, !tbaa !6
  %184 = getelementptr inbounds %struct.tree_exp, ptr %183, i64 0, i32 3
  %185 = load ptr, ptr %184, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %185, ptr noundef nonnull %5, ptr noundef nonnull %7, ptr noundef null)
  %186 = load ptr, ptr %7, align 8, !tbaa !6
  %187 = icmp eq ptr %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %182, %196
  %189 = phi ptr [ %197, %196 ], [ %186, %182 ]
  %190 = getelementptr inbounds %struct.tlist, ptr %189, i64 0, i32 2
  %191 = load ptr, ptr %190, align 8, !tbaa !112
  %192 = icmp eq ptr %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %struct.tlist, ptr %189, i64 0, i32 1
  %195 = load ptr, ptr %194, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %195, ptr noundef nonnull %191, ptr noundef nonnull %186, i32 noundef 0)
  br label %196

196:                                              ; preds = %193, %188
  %197 = load ptr, ptr %189, align 8, !tbaa !115
  %198 = icmp eq ptr %197, null
  br i1 %198, label %199, label %188, !llvm.loop !116

199:                                              ; preds = %196, %182
  %200 = load ptr, ptr %5, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef %1, ptr noundef %200, i32 noundef 0)
  %201 = load ptr, ptr %7, align 8, !tbaa !6
  br label %202

202:                                              ; preds = %202, %199
  %203 = phi ptr [ %1, %199 ], [ %204, %202 ]
  %204 = load ptr, ptr %203, align 8, !tbaa !6
  %205 = icmp eq ptr %204, null
  br i1 %205, label %206, label %202, !llvm.loop !117

206:                                              ; preds = %202
  %207 = icmp eq ptr %201, null
  br i1 %207, label %247, label %208

208:                                              ; preds = %206, %244
  %209 = phi ptr [ %211, %244 ], [ %201, %206 ]
  %210 = phi ptr [ %245, %244 ], [ %203, %206 ]
  %211 = load ptr, ptr %209, align 8, !tbaa !115
  %212 = load ptr, ptr %1, align 8, !tbaa !6
  %213 = icmp eq ptr %212, null
  br i1 %213, label %243, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %struct.tlist, ptr %209, i64 0, i32 1
  %216 = getelementptr inbounds %struct.tlist, ptr %209, i64 0, i32 2
  br label %217

217:                                              ; preds = %237, %214
  %218 = phi ptr [ %212, %214 ], [ %239, %237 ]
  %219 = phi i32 [ 0, %214 ], [ %238, %237 ]
  %220 = getelementptr inbounds %struct.tlist, ptr %218, i64 0, i32 1
  %221 = load ptr, ptr %220, align 8, !tbaa !114
  %222 = load ptr, ptr %215, align 8, !tbaa !114
  %223 = icmp eq ptr %221, %222
  br i1 %223, label %231, label %224

224:                                              ; preds = %217
  %225 = icmp ne ptr %221, null
  %226 = icmp ne ptr %222, null
  %227 = and i1 %225, %226
  br i1 %227, label %228, label %237

228:                                              ; preds = %224
  %229 = call i32 @operand_equal_p(ptr noundef nonnull %221, ptr noundef nonnull %222, i32 noundef 0) #22
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %237, label %231

231:                                              ; preds = %228, %217
  %232 = getelementptr inbounds %struct.tlist, ptr %218, i64 0, i32 2
  %233 = load ptr, ptr %232, align 8, !tbaa !112
  %234 = icmp eq ptr %233, null
  br i1 %234, label %235, label %237

235:                                              ; preds = %231
  %236 = load ptr, ptr %216, align 8, !tbaa !112
  store ptr %236, ptr %232, align 8, !tbaa !112
  br label %237

237:                                              ; preds = %235, %231, %228, %224
  %238 = phi i32 [ 1, %231 ], [ 1, %235 ], [ %219, %228 ], [ %219, %224 ]
  %239 = load ptr, ptr %218, align 8, !tbaa !6
  %240 = icmp eq ptr %239, null
  br i1 %240, label %241, label %217, !llvm.loop !118

241:                                              ; preds = %237
  %242 = icmp eq i32 %238, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %241, %208
  store ptr %209, ptr %210, align 8, !tbaa !6
  store ptr null, ptr %209, align 8, !tbaa !6
  br label %244

244:                                              ; preds = %243, %241
  %245 = phi ptr [ %210, %241 ], [ %209, %243 ]
  %246 = icmp eq ptr %211, null
  br i1 %246, label %247, label %208, !llvm.loop !119

247:                                              ; preds = %244, %206
  store ptr null, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %8, align 8, !tbaa !6
  %248 = getelementptr inbounds %struct.tree_exp, ptr %183, i64 1
  %249 = load ptr, ptr %248, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %249, ptr noundef nonnull %8, ptr noundef nonnull %6, ptr noundef null)
  %250 = load ptr, ptr %6, align 8, !tbaa !6
  %251 = icmp eq ptr %250, null
  br i1 %251, label %263, label %252

252:                                              ; preds = %247, %260
  %253 = phi ptr [ %261, %260 ], [ %250, %247 ]
  %254 = getelementptr inbounds %struct.tlist, ptr %253, i64 0, i32 2
  %255 = load ptr, ptr %254, align 8, !tbaa !112
  %256 = icmp eq ptr %255, null
  br i1 %256, label %260, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %struct.tlist, ptr %253, i64 0, i32 1
  %259 = load ptr, ptr %258, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %259, ptr noundef nonnull %255, ptr noundef nonnull %250, i32 noundef 0)
  br label %260

260:                                              ; preds = %257, %252
  %261 = load ptr, ptr %253, align 8, !tbaa !115
  %262 = icmp eq ptr %261, null
  br i1 %262, label %263, label %252, !llvm.loop !116

263:                                              ; preds = %260, %247
  %264 = load ptr, ptr %8, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef %1, ptr noundef %264, i32 noundef 0)
  store ptr null, ptr %7, align 8, !tbaa !6
  store ptr null, ptr %8, align 8, !tbaa !6
  %265 = getelementptr inbounds %struct.tree_exp, ptr %183, i64 1, i32 0, i32 1
  %266 = load ptr, ptr %265, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %266, ptr noundef nonnull %8, ptr noundef nonnull %7, ptr noundef null)
  %267 = load ptr, ptr %7, align 8, !tbaa !6
  %268 = icmp eq ptr %267, null
  br i1 %268, label %280, label %269

269:                                              ; preds = %263, %277
  %270 = phi ptr [ %278, %277 ], [ %267, %263 ]
  %271 = getelementptr inbounds %struct.tlist, ptr %270, i64 0, i32 2
  %272 = load ptr, ptr %271, align 8, !tbaa !112
  %273 = icmp eq ptr %272, null
  br i1 %273, label %277, label %274

274:                                              ; preds = %269
  %275 = getelementptr inbounds %struct.tlist, ptr %270, i64 0, i32 1
  %276 = load ptr, ptr %275, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %276, ptr noundef nonnull %272, ptr noundef nonnull %267, i32 noundef 0)
  br label %277

277:                                              ; preds = %274, %269
  %278 = load ptr, ptr %270, align 8, !tbaa !115
  %279 = icmp eq ptr %278, null
  br i1 %279, label %280, label %269, !llvm.loop !116

280:                                              ; preds = %277, %263
  %281 = load ptr, ptr %8, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef %1, ptr noundef %281, i32 noundef 0)
  %282 = load ptr, ptr %7, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef nonnull %6, ptr noundef %282, i32 noundef 0)
  %283 = load ptr, ptr %6, align 8, !tbaa !6
  %284 = icmp eq ptr %283, null
  br i1 %284, label %779, label %285

285:                                              ; preds = %280
  %286 = load ptr, ptr %2, align 8, !tbaa !6
  br label %287

287:                                              ; preds = %287, %285
  %288 = phi ptr [ %289, %287 ], [ %286, %285 ]
  %289 = phi ptr [ %290, %287 ], [ %283, %285 ]
  %290 = load ptr, ptr %289, align 8, !tbaa !115
  store ptr %288, ptr %289, align 8, !tbaa !115
  store ptr %289, ptr %2, align 8, !tbaa !6
  %291 = icmp eq ptr %290, null
  br i1 %291, label %779, label %287, !llvm.loop !120

292:                                              ; preds = %156, %156, %156, %156, %73, %73, %73, %73
  %293 = phi ptr [ %0, %73 ], [ %0, %73 ], [ %0, %73 ], [ %0, %73 ], [ %93, %156 ], [ %93, %156 ], [ %93, %156 ], [ %93, %156 ]
  %294 = getelementptr inbounds %struct.tree_exp, ptr %293, i64 0, i32 3
  %295 = load ptr, ptr %294, align 8, !tbaa !17
  tail call fastcc void @verify_tree(ptr noundef %295, ptr noundef %2, ptr noundef %2, ptr noundef nonnull %293)
  br label %779

296:                                              ; preds = %156, %73
  %297 = phi ptr [ %0, %73 ], [ %93, %156 ]
  store ptr null, ptr %8, align 8, !tbaa !6
  store ptr null, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %5, align 8, !tbaa !6
  %298 = getelementptr inbounds %struct.tree_exp, ptr %297, i64 0, i32 3
  %299 = getelementptr inbounds %struct.tree_exp, ptr %297, i64 1
  %300 = load ptr, ptr %299, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %300, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef null)
  %301 = load ptr, ptr %298, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %301, ptr noundef nonnull %8, ptr noundef nonnull %8, ptr noundef nonnull %297)
  %302 = load ptr, ptr %8, align 8, !tbaa !6
  call fastcc void @add_tlist(ptr noundef nonnull %5, ptr noundef %302, ptr noundef nonnull %297, i32 noundef 1)
  %303 = load ptr, ptr %5, align 8, !tbaa !6
  %304 = icmp eq ptr %303, null
  br i1 %304, label %316, label %305

305:                                              ; preds = %296, %313
  %306 = phi ptr [ %314, %313 ], [ %303, %296 ]
  %307 = getelementptr inbounds %struct.tlist, ptr %306, i64 0, i32 2
  %308 = load ptr, ptr %307, align 8, !tbaa !112
  %309 = icmp eq ptr %308, null
  br i1 %309, label %313, label %310

310:                                              ; preds = %305
  %311 = getelementptr inbounds %struct.tlist, ptr %306, i64 0, i32 1
  %312 = load ptr, ptr %311, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %312, ptr noundef nonnull %308, ptr noundef nonnull %303, i32 noundef 0)
  br label %313

313:                                              ; preds = %310, %305
  %314 = load ptr, ptr %306, align 8, !tbaa !115
  %315 = icmp eq ptr %314, null
  br i1 %315, label %316, label %305, !llvm.loop !116

316:                                              ; preds = %313, %296
  %317 = load ptr, ptr %8, align 8, !tbaa !6
  %318 = icmp eq ptr %317, null
  br i1 %318, label %334, label %319

319:                                              ; preds = %316, %332
  %320 = phi ptr [ %321, %332 ], [ %317, %316 ]
  %321 = load ptr, ptr %320, align 8, !tbaa !115
  %322 = load ptr, ptr %2, align 8, !tbaa !6
  store ptr %322, ptr %320, align 8, !tbaa !115
  %323 = getelementptr inbounds %struct.tlist, ptr %320, i64 0, i32 2
  %324 = load ptr, ptr %323, align 8, !tbaa !112
  %325 = icmp eq ptr %324, %297
  br i1 %325, label %332, label %326

326:                                              ; preds = %319
  %327 = icmp eq ptr %324, null
  br i1 %327, label %331, label %328

328:                                              ; preds = %326
  %329 = call i32 @operand_equal_p(ptr noundef nonnull %324, ptr noundef nonnull %297, i32 noundef 0) #22
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %332

331:                                              ; preds = %328, %326
  store ptr %320, ptr %2, align 8, !tbaa !6
  br label %332

332:                                              ; preds = %331, %328, %319
  %333 = icmp eq ptr %321, null
  br i1 %333, label %334, label %319, !llvm.loop !120

334:                                              ; preds = %332, %316
  %335 = load ptr, ptr %298, align 8, !tbaa !17
  %336 = load ptr, ptr %6, align 8, !tbaa !6
  call fastcc void @warn_for_collisions_1(ptr noundef %335, ptr noundef nonnull %297, ptr noundef %336, i32 noundef 1)
  call fastcc void @merge_tlist(ptr noundef %1, ptr noundef %303, i32 noundef 0)
  %337 = load ptr, ptr %298, align 8, !tbaa !17
  %338 = load i64, ptr %337, align 8
  %339 = and i64 %338, 65535
  %340 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %339
  %341 = load i32, ptr %340, align 4, !tbaa !17
  %342 = icmp eq i32 %341, 3
  br i1 %342, label %343, label %348

343:                                              ; preds = %334
  %344 = getelementptr inbounds %struct.tree_decl_common, ptr %337, i64 0, i32 2
  %345 = load i64, ptr %344, align 8
  %346 = and i64 %345, 4096
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %399

348:                                              ; preds = %343, %334
  %349 = getelementptr inbounds %struct.tree_common, ptr %337, i64 0, i32 2
  %350 = load ptr, ptr %349, align 8, !tbaa !17
  %351 = icmp eq ptr %350, null
  br i1 %351, label %399, label %352

352:                                              ; preds = %348
  %353 = load i64, ptr %350, align 8
  %354 = and i64 %353, 65535
  %355 = icmp eq i64 %354, 19
  br i1 %355, label %399, label %356

356:                                              ; preds = %352
  %357 = call zeroext i8 @lvalue_p(ptr noundef nonnull %337) #22
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %399, label %359

359:                                              ; preds = %356
  %360 = load ptr, ptr %298, align 8, !tbaa !17
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %361 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %362 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %363 = ptrtoint ptr %361 to i64
  %364 = ptrtoint ptr %362 to i64
  %365 = sub i64 %363, %364
  %366 = icmp slt i64 %365, 24
  br i1 %366, label %367, label %370

367:                                              ; preds = %359
  call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %368 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %369 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %370

370:                                              ; preds = %367, %359
  %371 = phi ptr [ %362, %359 ], [ %369, %367 ]
  %372 = phi i64 [ 24, %359 ], [ %368, %367 ]
  %373 = getelementptr inbounds i8, ptr %371, i64 %372
  %374 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %375 = icmp eq ptr %373, %374
  br i1 %375, label %376, label %379

376:                                              ; preds = %370
  %377 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %378 = or i8 %377, 2
  store i8 %378, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %379

379:                                              ; preds = %370, %376
  %380 = ptrtoint ptr %374 to i64
  store i64 %380, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %381 = ptrtoint ptr %373 to i64
  %382 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %383 = sext i32 %382 to i64
  %384 = add nsw i64 %383, %381
  %385 = xor i32 %382, -1
  %386 = sext i32 %385 to i64
  %387 = and i64 %384, %386
  %388 = inttoptr i64 %387 to ptr
  %389 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %390 = ptrtoint ptr %389 to i64
  %391 = sub i64 %387, %390
  %392 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %393 = ptrtoint ptr %392 to i64
  %394 = sub i64 %393, %390
  %395 = icmp sgt i64 %391, %394
  %396 = select i1 %395, ptr %392, ptr %388
  store ptr %396, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %396, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr null, ptr %374, align 8, !tbaa !115
  %397 = getelementptr inbounds %struct.tlist, ptr %374, i64 0, i32 1
  store ptr %360, ptr %397, align 8, !tbaa !114
  %398 = getelementptr inbounds %struct.tlist, ptr %374, i64 0, i32 2
  store ptr %297, ptr %398, align 8, !tbaa !112
  call fastcc void @merge_tlist(ptr noundef nonnull %6, ptr noundef nonnull %374, i32 noundef 0)
  br label %399

399:                                              ; preds = %343, %348, %352, %379, %356
  %400 = load ptr, ptr %6, align 8, !tbaa !6
  %401 = icmp eq ptr %400, null
  br i1 %401, label %779, label %402

402:                                              ; preds = %399
  %403 = load ptr, ptr %2, align 8, !tbaa !6
  br label %404

404:                                              ; preds = %428, %402
  %405 = phi ptr [ %423, %428 ], [ %403, %402 ]
  %406 = phi ptr [ %407, %428 ], [ %400, %402 ]
  %407 = load ptr, ptr %406, align 8, !tbaa !115
  %408 = getelementptr inbounds %struct.tlist, ptr %406, i64 0, i32 1
  %409 = load <2 x ptr>, ptr %408, align 8, !tbaa !6
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %410 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %411 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %412 = ptrtoint ptr %410 to i64
  %413 = ptrtoint ptr %411 to i64
  %414 = sub i64 %412, %413
  %415 = icmp slt i64 %414, 24
  br i1 %415, label %416, label %419

416:                                              ; preds = %404
  call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %417 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %418 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %419

419:                                              ; preds = %416, %404
  %420 = phi ptr [ %411, %404 ], [ %418, %416 ]
  %421 = phi i64 [ 24, %404 ], [ %417, %416 ]
  %422 = getelementptr inbounds i8, ptr %420, i64 %421
  %423 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %424 = icmp eq ptr %422, %423
  br i1 %424, label %425, label %428

425:                                              ; preds = %419
  %426 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %427 = or i8 %426, 2
  store i8 %427, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %428

428:                                              ; preds = %425, %419
  %429 = ptrtoint ptr %423 to i64
  store i64 %429, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %430 = ptrtoint ptr %422 to i64
  %431 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %432 = sext i32 %431 to i64
  %433 = add nsw i64 %432, %430
  %434 = xor i32 %431, -1
  %435 = sext i32 %434 to i64
  %436 = and i64 %433, %435
  %437 = inttoptr i64 %436 to ptr
  %438 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %439 = ptrtoint ptr %438 to i64
  %440 = sub i64 %436, %439
  %441 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %442 = ptrtoint ptr %441 to i64
  %443 = sub i64 %442, %439
  %444 = icmp sgt i64 %440, %443
  %445 = select i1 %444, ptr %441, ptr %437
  store ptr %445, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %445, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %405, ptr %423, align 8, !tbaa !115
  %446 = getelementptr inbounds %struct.tlist, ptr %423, i64 0, i32 1
  store <2 x ptr> %409, ptr %446, align 8, !tbaa !6
  store ptr %423, ptr %2, align 8, !tbaa !6
  %447 = icmp eq ptr %407, null
  br i1 %447, label %779, label %404, !llvm.loop !120

448:                                              ; preds = %156, %73
  %449 = phi ptr [ %0, %73 ], [ %93, %156 ]
  store ptr null, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %5, align 8, !tbaa !6
  %450 = getelementptr inbounds %struct.tree_exp, ptr %449, i64 1
  %451 = load ptr, ptr %450, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %451, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef null)
  %452 = getelementptr inbounds %struct.tree_exp, ptr %449, i64 0, i32 3
  %453 = load ptr, ptr %452, align 8, !tbaa !17
  %454 = getelementptr inbounds %struct.tree_int_cst, ptr %453, i64 0, i32 1
  %455 = load i64, ptr %454, align 8, !tbaa !17
  %456 = trunc i64 %455 to i32
  %457 = add nsw i32 %456, -3
  %458 = icmp sgt i32 %456, 3
  br i1 %458, label %459, label %488

459:                                              ; preds = %448
  %460 = getelementptr inbounds %struct.tree_exp, ptr %449, i64 0, i32 3, i64 3
  %461 = load ptr, ptr %460, align 8, !tbaa !17
  %462 = icmp eq ptr %461, null
  br i1 %462, label %488, label %463

463:                                              ; preds = %459
  %464 = load ptr, ptr %5, align 8, !tbaa !6
  br label %465

465:                                              ; preds = %463, %481
  %466 = phi ptr [ %479, %481 ], [ %464, %463 ]
  %467 = phi ptr [ %485, %481 ], [ %461, %463 ]
  %468 = phi i32 [ %486, %481 ], [ 1, %463 ]
  store ptr null, ptr %8, align 8, !tbaa !6
  store ptr null, ptr %7, align 8, !tbaa !6
  call fastcc void @verify_tree(ptr noundef nonnull %467, ptr noundef nonnull %7, ptr noundef nonnull %8, ptr noundef null)
  %469 = load ptr, ptr %7, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef nonnull %8, ptr noundef %469, i32 noundef 0)
  %470 = load ptr, ptr %8, align 8, !tbaa !6
  %471 = icmp eq ptr %470, null
  br i1 %471, label %478, label %472

472:                                              ; preds = %465, %472
  %473 = phi ptr [ %474, %472 ], [ %466, %465 ]
  %474 = phi ptr [ %475, %472 ], [ %470, %465 ]
  %475 = load ptr, ptr %474, align 8, !tbaa !115
  store ptr %473, ptr %474, align 8, !tbaa !115
  %476 = icmp eq ptr %475, null
  br i1 %476, label %477, label %472, !llvm.loop !120

477:                                              ; preds = %472
  store ptr %474, ptr %5, align 8, !tbaa !6
  br label %478

478:                                              ; preds = %477, %465
  %479 = phi ptr [ %474, %477 ], [ %466, %465 ]
  %480 = icmp slt i32 %468, %457
  br i1 %480, label %481, label %488

481:                                              ; preds = %478
  %482 = add nuw nsw i32 %468, 3
  %483 = zext i32 %482 to i64
  %484 = getelementptr inbounds %struct.tree_exp, ptr %449, i64 0, i32 3, i64 %483
  %485 = load ptr, ptr %484, align 8, !tbaa !17
  %486 = add nuw nsw i32 %468, 1
  %487 = icmp eq ptr %485, null
  br i1 %487, label %488, label %465, !llvm.loop !121

488:                                              ; preds = %478, %481, %448, %459
  %489 = load ptr, ptr %6, align 8, !tbaa !6
  %490 = icmp eq ptr %489, null
  %491 = load ptr, ptr %5, align 8, !tbaa !6
  br i1 %490, label %498, label %492

492:                                              ; preds = %488, %492
  %493 = phi ptr [ %494, %492 ], [ %491, %488 ]
  %494 = phi ptr [ %495, %492 ], [ %489, %488 ]
  %495 = load ptr, ptr %494, align 8, !tbaa !115
  store ptr %493, ptr %494, align 8, !tbaa !115
  %496 = icmp eq ptr %495, null
  br i1 %496, label %497, label %492, !llvm.loop !120

497:                                              ; preds = %492
  store ptr %494, ptr %5, align 8, !tbaa !6
  br label %500

498:                                              ; preds = %488
  %499 = icmp eq ptr %491, null
  br i1 %499, label %779, label %500

500:                                              ; preds = %497, %498
  %501 = phi ptr [ %494, %497 ], [ %491, %498 ]
  br label %502

502:                                              ; preds = %500, %510
  %503 = phi ptr [ %511, %510 ], [ %501, %500 ]
  %504 = getelementptr inbounds %struct.tlist, ptr %503, i64 0, i32 2
  %505 = load ptr, ptr %504, align 8, !tbaa !112
  %506 = icmp eq ptr %505, null
  br i1 %506, label %510, label %507

507:                                              ; preds = %502
  %508 = getelementptr inbounds %struct.tlist, ptr %503, i64 0, i32 1
  %509 = load ptr, ptr %508, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %509, ptr noundef nonnull %505, ptr noundef nonnull %501, i32 noundef 0)
  br label %510

510:                                              ; preds = %507, %502
  %511 = load ptr, ptr %503, align 8, !tbaa !115
  %512 = icmp eq ptr %511, null
  br i1 %512, label %513, label %502, !llvm.loop !116

513:                                              ; preds = %510
  %514 = load ptr, ptr %1, align 8, !tbaa !6
  br label %515

515:                                              ; preds = %515, %513
  %516 = phi ptr [ %517, %515 ], [ %514, %513 ]
  %517 = phi ptr [ %518, %515 ], [ %501, %513 ]
  %518 = load ptr, ptr %517, align 8, !tbaa !115
  store ptr %516, ptr %517, align 8, !tbaa !115
  store ptr %517, ptr %1, align 8, !tbaa !6
  %519 = icmp eq ptr %518, null
  br i1 %519, label %779, label %515, !llvm.loop !120

520:                                              ; preds = %74, %534
  %521 = phi ptr [ %536, %534 ], [ %75, %74 ]
  store ptr null, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %5, align 8, !tbaa !6
  %522 = getelementptr inbounds %struct.tree_list, ptr %521, i64 0, i32 2
  %523 = load ptr, ptr %522, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %523, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef null)
  %524 = load ptr, ptr %5, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef nonnull %6, ptr noundef %524, i32 noundef 0)
  %525 = load ptr, ptr %6, align 8, !tbaa !6
  %526 = icmp eq ptr %525, null
  br i1 %526, label %534, label %527

527:                                              ; preds = %520
  %528 = load ptr, ptr %2, align 8, !tbaa !6
  br label %529

529:                                              ; preds = %529, %527
  %530 = phi ptr [ %531, %529 ], [ %528, %527 ]
  %531 = phi ptr [ %532, %529 ], [ %525, %527 ]
  %532 = load ptr, ptr %531, align 8, !tbaa !115
  store ptr %530, ptr %531, align 8, !tbaa !115
  store ptr %531, ptr %2, align 8, !tbaa !6
  %533 = icmp eq ptr %532, null
  br i1 %533, label %534, label %529, !llvm.loop !120

534:                                              ; preds = %529, %520
  %535 = getelementptr inbounds %struct.tree_common, ptr %521, i64 0, i32 1
  %536 = load ptr, ptr %535, align 8, !tbaa !17
  %537 = icmp eq ptr %536, null
  br i1 %537, label %779, label %520, !llvm.loop !122

538:                                              ; preds = %157, %552
  %539 = phi ptr [ %540, %552 ], [ @save_expr_cache, %157 ]
  %540 = load ptr, ptr %539, align 8, !tbaa !6
  %541 = icmp eq ptr %540, null
  br i1 %541, label %555, label %542

542:                                              ; preds = %538
  %543 = getelementptr inbounds %struct.tlist_cache, ptr %540, i64 0, i32 3
  %544 = load ptr, ptr %543, align 8, !tbaa !123
  %545 = icmp eq ptr %544, %158
  br i1 %545, label %625, label %546

546:                                              ; preds = %542
  %547 = icmp eq ptr %544, null
  br i1 %547, label %552, label %548

548:                                              ; preds = %546
  %549 = tail call i32 @operand_equal_p(ptr noundef nonnull %544, ptr noundef nonnull %158, i32 noundef 0) #22
  %550 = icmp ne i32 %549, 0
  %551 = zext i1 %550 to i8
  br label %552

552:                                              ; preds = %546, %548
  %553 = phi i8 [ 0, %546 ], [ %551, %548 ]
  %554 = icmp eq i8 %553, 0
  br i1 %554, label %538, label %625, !llvm.loop !125

555:                                              ; preds = %538
  store i64 32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %556 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %557 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %558 = ptrtoint ptr %556 to i64
  %559 = ptrtoint ptr %557 to i64
  %560 = sub i64 %558, %559
  %561 = icmp slt i64 %560, 32
  br i1 %561, label %562, label %565

562:                                              ; preds = %555
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 32) #22
  %563 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %564 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %565

565:                                              ; preds = %555, %562
  %566 = phi ptr [ %557, %555 ], [ %564, %562 ]
  %567 = phi i64 [ 32, %555 ], [ %563, %562 ]
  %568 = getelementptr inbounds i8, ptr %566, i64 %567
  %569 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %570 = icmp eq ptr %568, %569
  br i1 %570, label %571, label %574

571:                                              ; preds = %565
  %572 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %573 = or i8 %572, 2
  store i8 %573, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %574

574:                                              ; preds = %565, %571
  %575 = ptrtoint ptr %569 to i64
  store i64 %575, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %576 = ptrtoint ptr %568 to i64
  %577 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %578 = sext i32 %577 to i64
  %579 = add nsw i64 %578, %576
  %580 = xor i32 %577, -1
  %581 = sext i32 %580 to i64
  %582 = and i64 %579, %581
  %583 = inttoptr i64 %582 to ptr
  %584 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %585 = ptrtoint ptr %584 to i64
  %586 = sub i64 %582, %585
  %587 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %588 = ptrtoint ptr %587 to i64
  %589 = sub i64 %588, %585
  %590 = icmp sgt i64 %586, %589
  %591 = select i1 %590, ptr %587, ptr %583
  store ptr %591, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %591, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %592 = load ptr, ptr @save_expr_cache, align 8, !tbaa !6
  store ptr %592, ptr %569, align 8, !tbaa !126
  %593 = getelementptr inbounds %struct.tlist_cache, ptr %569, i64 0, i32 3
  store ptr %158, ptr %593, align 8, !tbaa !123
  store ptr %569, ptr @save_expr_cache, align 8, !tbaa !6
  store ptr null, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %5, align 8, !tbaa !6
  %594 = getelementptr inbounds %struct.tree_exp, ptr %158, i64 0, i32 3
  %595 = load ptr, ptr %594, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %595, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef null)
  %596 = load ptr, ptr %6, align 8, !tbaa !6
  %597 = icmp eq ptr %596, null
  br i1 %597, label %598, label %599

598:                                              ; preds = %574
  store ptr null, ptr %8, align 8, !tbaa !6
  br label %620

599:                                              ; preds = %574, %607
  %600 = phi ptr [ %608, %607 ], [ %596, %574 ]
  %601 = getelementptr inbounds %struct.tlist, ptr %600, i64 0, i32 2
  %602 = load ptr, ptr %601, align 8, !tbaa !112
  %603 = icmp eq ptr %602, null
  br i1 %603, label %607, label %604

604:                                              ; preds = %599
  %605 = getelementptr inbounds %struct.tlist, ptr %600, i64 0, i32 1
  %606 = load ptr, ptr %605, align 8, !tbaa !114
  call fastcc void @warn_for_collisions_1(ptr noundef %606, ptr noundef nonnull %602, ptr noundef nonnull %596, i32 noundef 0)
  br label %607

607:                                              ; preds = %604, %599
  %608 = load ptr, ptr %600, align 8, !tbaa !115
  %609 = icmp eq ptr %608, null
  br i1 %609, label %610, label %599, !llvm.loop !116

610:                                              ; preds = %607
  %611 = load ptr, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %8, align 8, !tbaa !6
  %612 = icmp eq ptr %611, null
  br i1 %612, label %620, label %613

613:                                              ; preds = %610, %613
  %614 = phi ptr [ %616, %613 ], [ %611, %610 ]
  %615 = load ptr, ptr %614, align 8, !tbaa !115
  store ptr %615, ptr %6, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef nonnull %8, ptr noundef nonnull %614, i32 noundef 0)
  %616 = load ptr, ptr %6, align 8, !tbaa !6
  %617 = icmp eq ptr %616, null
  br i1 %617, label %618, label %613, !llvm.loop !127

618:                                              ; preds = %613
  %619 = load ptr, ptr %8, align 8, !tbaa !6
  br label %620

620:                                              ; preds = %598, %618, %610
  %621 = phi ptr [ %619, %618 ], [ null, %610 ], [ null, %598 ]
  %622 = load ptr, ptr %5, align 8, !tbaa !6
  %623 = getelementptr inbounds %struct.tlist_cache, ptr %569, i64 0, i32 1
  store ptr %622, ptr %623, align 8, !tbaa !128
  %624 = getelementptr inbounds %struct.tlist_cache, ptr %569, i64 0, i32 2
  store ptr %621, ptr %624, align 8, !tbaa !129
  br label %628

625:                                              ; preds = %552, %542
  %626 = getelementptr inbounds %struct.tlist_cache, ptr %540, i64 0, i32 1
  %627 = load ptr, ptr %626, align 8, !tbaa !128
  br label %628

628:                                              ; preds = %625, %620
  %629 = phi ptr [ %622, %620 ], [ %627, %625 ]
  %630 = phi ptr [ %569, %620 ], [ %540, %625 ]
  br label %631

631:                                              ; preds = %631, %628
  %632 = phi ptr [ %1, %628 ], [ %633, %631 ]
  %633 = load ptr, ptr %632, align 8, !tbaa !6
  %634 = icmp eq ptr %633, null
  br i1 %634, label %635, label %631, !llvm.loop !117

635:                                              ; preds = %631
  %636 = icmp eq ptr %629, null
  br i1 %636, label %676, label %637

637:                                              ; preds = %635, %673
  %638 = phi ptr [ %640, %673 ], [ %629, %635 ]
  %639 = phi ptr [ %674, %673 ], [ %632, %635 ]
  %640 = load ptr, ptr %638, align 8, !tbaa !115
  %641 = load ptr, ptr %1, align 8, !tbaa !6
  %642 = icmp eq ptr %641, null
  br i1 %642, label %672, label %643

643:                                              ; preds = %637
  %644 = getelementptr inbounds %struct.tlist, ptr %638, i64 0, i32 1
  %645 = getelementptr inbounds %struct.tlist, ptr %638, i64 0, i32 2
  br label %646

646:                                              ; preds = %666, %643
  %647 = phi ptr [ %641, %643 ], [ %668, %666 ]
  %648 = phi i32 [ 0, %643 ], [ %667, %666 ]
  %649 = getelementptr inbounds %struct.tlist, ptr %647, i64 0, i32 1
  %650 = load ptr, ptr %649, align 8, !tbaa !114
  %651 = load ptr, ptr %644, align 8, !tbaa !114
  %652 = icmp eq ptr %650, %651
  br i1 %652, label %660, label %653

653:                                              ; preds = %646
  %654 = icmp ne ptr %650, null
  %655 = icmp ne ptr %651, null
  %656 = and i1 %654, %655
  br i1 %656, label %657, label %666

657:                                              ; preds = %653
  %658 = call i32 @operand_equal_p(ptr noundef nonnull %650, ptr noundef nonnull %651, i32 noundef 0) #22
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %666, label %660

660:                                              ; preds = %657, %646
  %661 = getelementptr inbounds %struct.tlist, ptr %647, i64 0, i32 2
  %662 = load ptr, ptr %661, align 8, !tbaa !112
  %663 = icmp eq ptr %662, null
  br i1 %663, label %664, label %666

664:                                              ; preds = %660
  %665 = load ptr, ptr %645, align 8, !tbaa !112
  store ptr %665, ptr %661, align 8, !tbaa !112
  br label %666

666:                                              ; preds = %664, %660, %657, %653
  %667 = phi i32 [ 1, %660 ], [ 1, %664 ], [ %648, %657 ], [ %648, %653 ]
  %668 = load ptr, ptr %647, align 8, !tbaa !6
  %669 = icmp eq ptr %668, null
  br i1 %669, label %670, label %646, !llvm.loop !118

670:                                              ; preds = %666
  %671 = icmp eq i32 %667, 0
  br i1 %671, label %672, label %673

672:                                              ; preds = %670, %637
  store ptr %638, ptr %639, align 8, !tbaa !6
  store ptr null, ptr %638, align 8, !tbaa !6
  br label %673

673:                                              ; preds = %672, %670
  %674 = phi ptr [ %639, %670 ], [ %638, %672 ]
  %675 = icmp eq ptr %640, null
  br i1 %675, label %676, label %637, !llvm.loop !119

676:                                              ; preds = %673, %635
  %677 = getelementptr inbounds %struct.tlist_cache, ptr %630, i64 0, i32 2
  %678 = load ptr, ptr %677, align 8, !tbaa !129
  %679 = icmp eq ptr %678, null
  br i1 %679, label %779, label %680

680:                                              ; preds = %676
  %681 = load ptr, ptr %2, align 8, !tbaa !6
  br label %682

682:                                              ; preds = %706, %680
  %683 = phi ptr [ %701, %706 ], [ %681, %680 ]
  %684 = phi ptr [ %685, %706 ], [ %678, %680 ]
  %685 = load ptr, ptr %684, align 8, !tbaa !115
  %686 = getelementptr inbounds %struct.tlist, ptr %684, i64 0, i32 1
  %687 = load <2 x ptr>, ptr %686, align 8, !tbaa !6
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %688 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %689 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %690 = ptrtoint ptr %688 to i64
  %691 = ptrtoint ptr %689 to i64
  %692 = sub i64 %690, %691
  %693 = icmp slt i64 %692, 24
  br i1 %693, label %694, label %697

694:                                              ; preds = %682
  call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %695 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %696 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %697

697:                                              ; preds = %694, %682
  %698 = phi ptr [ %689, %682 ], [ %696, %694 ]
  %699 = phi i64 [ 24, %682 ], [ %695, %694 ]
  %700 = getelementptr inbounds i8, ptr %698, i64 %699
  %701 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %702 = icmp eq ptr %700, %701
  br i1 %702, label %703, label %706

703:                                              ; preds = %697
  %704 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %705 = or i8 %704, 2
  store i8 %705, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %706

706:                                              ; preds = %703, %697
  %707 = ptrtoint ptr %701 to i64
  store i64 %707, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %708 = ptrtoint ptr %700 to i64
  %709 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %710 = sext i32 %709 to i64
  %711 = add nsw i64 %710, %708
  %712 = xor i32 %709, -1
  %713 = sext i32 %712 to i64
  %714 = and i64 %711, %713
  %715 = inttoptr i64 %714 to ptr
  %716 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %717 = ptrtoint ptr %716 to i64
  %718 = sub i64 %714, %717
  %719 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %720 = ptrtoint ptr %719 to i64
  %721 = sub i64 %720, %717
  %722 = icmp sgt i64 %718, %721
  %723 = select i1 %722, ptr %719, ptr %715
  store ptr %723, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %723, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %683, ptr %701, align 8, !tbaa !115
  %724 = getelementptr inbounds %struct.tlist, ptr %701, i64 0, i32 1
  store <2 x ptr> %687, ptr %724, align 8, !tbaa !6
  store ptr %701, ptr %2, align 8, !tbaa !6
  %725 = icmp eq ptr %685, null
  br i1 %725, label %779, label %682, !llvm.loop !120

726:                                              ; preds = %156
  %727 = getelementptr inbounds %struct.tree_exp, ptr %93, i64 0, i32 3
  %728 = load ptr, ptr %727, align 8, !tbaa !17
  %729 = load i64, ptr %728, align 8
  %730 = and i64 %729, 65535
  %731 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !17
  %733 = icmp eq i32 %732, 3
  br i1 %733, label %779, label %92, !llvm.loop !130

734:                                              ; preds = %156
  %735 = icmp eq i32 %98, 6
  br i1 %735, label %86, label %736, !llvm.loop !130

736:                                              ; preds = %734, %84
  %737 = phi ptr [ %0, %84 ], [ %93, %734 ]
  %738 = phi i32 [ %15, %84 ], [ %98, %734 ]
  %739 = add i32 %738, -4
  %740 = icmp ult i32 %739, 7
  br i1 %740, label %741, label %779

741:                                              ; preds = %736
  %742 = load i64, ptr %737, align 8
  %743 = and i64 %742, 65535
  %744 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %743
  %745 = load i32, ptr %744, align 4, !tbaa !17
  %746 = icmp eq i32 %745, 9
  br i1 %746, label %747, label %753

747:                                              ; preds = %741
  %748 = getelementptr inbounds %struct.tree_exp, ptr %737, i64 0, i32 3
  %749 = load ptr, ptr %748, align 8, !tbaa !17
  %750 = getelementptr inbounds %struct.tree_int_cst, ptr %749, i64 0, i32 1
  %751 = load i64, ptr %750, align 8, !tbaa !17
  %752 = trunc i64 %751 to i32
  br label %757

753:                                              ; preds = %741
  %754 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %743
  %755 = load i8, ptr %754, align 1, !tbaa !17
  %756 = zext i8 %755 to i32
  br label %757

757:                                              ; preds = %747, %753
  %758 = phi i32 [ %752, %747 ], [ %756, %753 ]
  %759 = icmp sgt i32 %758, 0
  br i1 %759, label %760, label %779

760:                                              ; preds = %757
  %761 = zext i32 %758 to i64
  br label %762

762:                                              ; preds = %760, %776
  %763 = phi i64 [ 0, %760 ], [ %777, %776 ]
  store ptr null, ptr %6, align 8, !tbaa !6
  store ptr null, ptr %5, align 8, !tbaa !6
  %764 = getelementptr inbounds %struct.tree_exp, ptr %737, i64 0, i32 3, i64 %763
  %765 = load ptr, ptr %764, align 8, !tbaa !17
  call fastcc void @verify_tree(ptr noundef %765, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef null)
  %766 = load ptr, ptr %5, align 8, !tbaa !6
  call fastcc void @merge_tlist(ptr noundef nonnull %6, ptr noundef %766, i32 noundef 0)
  %767 = load ptr, ptr %6, align 8, !tbaa !6
  %768 = icmp eq ptr %767, null
  br i1 %768, label %776, label %769

769:                                              ; preds = %762
  %770 = load ptr, ptr %2, align 8, !tbaa !6
  br label %771

771:                                              ; preds = %771, %769
  %772 = phi ptr [ %773, %771 ], [ %770, %769 ]
  %773 = phi ptr [ %774, %771 ], [ %767, %769 ]
  %774 = load ptr, ptr %773, align 8, !tbaa !115
  store ptr %772, ptr %773, align 8, !tbaa !115
  store ptr %773, ptr %2, align 8, !tbaa !6
  %775 = icmp eq ptr %774, null
  br i1 %775, label %776, label %771, !llvm.loop !120

776:                                              ; preds = %771, %762
  %777 = add nuw nsw i64 %763, 1
  %778 = icmp eq i64 %777, %761
  br i1 %778, label %779, label %762, !llvm.loop !132

779:                                              ; preds = %726, %156, %706, %534, %515, %428, %287, %776, %73, %76, %757, %498, %676, %399, %280, %736, %4, %292, %176
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #22
  ret void
}

declare void @obstack_free(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @merge_tlist(ptr nocapture noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #9 {
  br label %4

4:                                                ; preds = %4, %3
  %5 = phi ptr [ %0, %3 ], [ %6, %4 ]
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %4, !llvm.loop !117

8:                                                ; preds = %4
  %9 = icmp eq ptr %1, null
  br i1 %9, label %129, label %10

10:                                               ; preds = %8
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %90

12:                                               ; preds = %10, %84
  %13 = phi ptr [ %15, %84 ], [ %1, %10 ]
  %14 = phi ptr [ %85, %84 ], [ %5, %10 ]
  %15 = load ptr, ptr %13, align 8, !tbaa !115
  %16 = load ptr, ptr %0, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %44, label %87

18:                                               ; preds = %87, %38
  %19 = phi ptr [ %16, %87 ], [ %40, %38 ]
  %20 = phi i32 [ 0, %87 ], [ %39, %38 ]
  %21 = getelementptr inbounds %struct.tlist, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !114
  %23 = load ptr, ptr %88, align 8, !tbaa !114
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = icmp ne ptr %22, null
  %27 = icmp ne ptr %23, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %38

29:                                               ; preds = %25
  %30 = tail call i32 @operand_equal_p(ptr noundef nonnull %22, ptr noundef nonnull %23, i32 noundef 0) #22
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29, %18
  %33 = getelementptr inbounds %struct.tlist, ptr %19, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !112
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = load ptr, ptr %89, align 8, !tbaa !112
  store ptr %37, ptr %33, align 8, !tbaa !112
  br label %38

38:                                               ; preds = %36, %32, %29, %25
  %39 = phi i32 [ 1, %32 ], [ 1, %36 ], [ %20, %29 ], [ %20, %25 ]
  %40 = load ptr, ptr %19, align 8, !tbaa !6
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %18, !llvm.loop !118

42:                                               ; preds = %38
  %43 = icmp eq i32 %39, 0
  br i1 %43, label %44, label %84

44:                                               ; preds = %12, %42
  %45 = getelementptr inbounds %struct.tlist, ptr %13, i64 0, i32 1
  %46 = load <2 x ptr>, ptr %45, align 8, !tbaa !6
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %47 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %48 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %49 = ptrtoint ptr %47 to i64
  %50 = ptrtoint ptr %48 to i64
  %51 = sub i64 %49, %50
  %52 = icmp slt i64 %51, 24
  br i1 %52, label %53, label %56

53:                                               ; preds = %44
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %54 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %55 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %56

56:                                               ; preds = %53, %44
  %57 = phi ptr [ %48, %44 ], [ %55, %53 ]
  %58 = phi i64 [ 24, %44 ], [ %54, %53 ]
  %59 = getelementptr inbounds i8, ptr %57, i64 %58
  %60 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %61 = icmp eq ptr %59, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %64 = or i8 %63, 2
  store i8 %64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %65

65:                                               ; preds = %62, %56
  %66 = ptrtoint ptr %60 to i64
  store i64 %66, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %67 = ptrtoint ptr %59 to i64
  %68 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %69 = sext i32 %68 to i64
  %70 = add nsw i64 %69, %67
  %71 = xor i32 %68, -1
  %72 = sext i32 %71 to i64
  %73 = and i64 %70, %72
  %74 = inttoptr i64 %73 to ptr
  %75 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %76 = ptrtoint ptr %75 to i64
  %77 = sub i64 %73, %76
  %78 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %79 = ptrtoint ptr %78 to i64
  %80 = sub i64 %79, %76
  %81 = icmp sgt i64 %77, %80
  %82 = select i1 %81, ptr %78, ptr %74
  store ptr %82, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %82, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %83 = getelementptr inbounds %struct.tlist, ptr %60, i64 0, i32 1
  store <2 x ptr> %46, ptr %83, align 8, !tbaa !6
  store ptr %60, ptr %14, align 8, !tbaa !6
  store ptr null, ptr %60, align 8, !tbaa !6
  br label %84

84:                                               ; preds = %65, %42
  %85 = phi ptr [ %14, %42 ], [ %60, %65 ]
  %86 = icmp eq ptr %15, null
  br i1 %86, label %129, label %12, !llvm.loop !119

87:                                               ; preds = %12
  %88 = getelementptr inbounds %struct.tlist, ptr %13, i64 0, i32 1
  %89 = getelementptr inbounds %struct.tlist, ptr %13, i64 0, i32 2
  br label %18

90:                                               ; preds = %10, %126
  %91 = phi ptr [ %93, %126 ], [ %1, %10 ]
  %92 = phi ptr [ %127, %126 ], [ %5, %10 ]
  %93 = load ptr, ptr %91, align 8, !tbaa !115
  %94 = load ptr, ptr %0, align 8, !tbaa !6
  %95 = icmp eq ptr %94, null
  br i1 %95, label %125, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %struct.tlist, ptr %91, i64 0, i32 1
  %98 = getelementptr inbounds %struct.tlist, ptr %91, i64 0, i32 2
  br label %99

99:                                               ; preds = %96, %119
  %100 = phi ptr [ %94, %96 ], [ %121, %119 ]
  %101 = phi i32 [ 0, %96 ], [ %120, %119 ]
  %102 = getelementptr inbounds %struct.tlist, ptr %100, i64 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !114
  %104 = load ptr, ptr %97, align 8, !tbaa !114
  %105 = icmp eq ptr %103, %104
  br i1 %105, label %113, label %106

106:                                              ; preds = %99
  %107 = icmp ne ptr %103, null
  %108 = icmp ne ptr %104, null
  %109 = and i1 %107, %108
  br i1 %109, label %110, label %119

110:                                              ; preds = %106
  %111 = tail call i32 @operand_equal_p(ptr noundef nonnull %103, ptr noundef nonnull %104, i32 noundef 0) #22
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %99, %110
  %114 = getelementptr inbounds %struct.tlist, ptr %100, i64 0, i32 2
  %115 = load ptr, ptr %114, align 8, !tbaa !112
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = load ptr, ptr %98, align 8, !tbaa !112
  store ptr %118, ptr %114, align 8, !tbaa !112
  br label %119

119:                                              ; preds = %106, %110, %117, %113
  %120 = phi i32 [ 1, %113 ], [ 1, %117 ], [ %101, %110 ], [ %101, %106 ]
  %121 = load ptr, ptr %100, align 8, !tbaa !6
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %99, !llvm.loop !118

123:                                              ; preds = %119
  %124 = icmp eq i32 %120, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %90, %123
  store ptr %91, ptr %92, align 8, !tbaa !6
  store ptr null, ptr %91, align 8, !tbaa !6
  br label %126

126:                                              ; preds = %125, %123
  %127 = phi ptr [ %92, %123 ], [ %91, %125 ]
  %128 = icmp eq ptr %93, null
  br i1 %128, label %129, label %90, !llvm.loop !119

129:                                              ; preds = %126, %84, %8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_tlist(ptr nocapture noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #9 {
  %5 = icmp eq ptr %1, null
  br i1 %5, label %137, label %6

6:                                                ; preds = %4
  %7 = icmp eq i32 %3, 0
  %8 = icmp eq ptr %2, null
  br i1 %7, label %9, label %32

9:                                                ; preds = %6
  br i1 %8, label %10, label %17

10:                                               ; preds = %9
  %11 = load ptr, ptr %0, align 8, !tbaa !6
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi ptr [ %14, %12 ], [ %11, %10 ]
  %14 = phi ptr [ %15, %12 ], [ %1, %10 ]
  %15 = load ptr, ptr %14, align 8, !tbaa !115
  store ptr %13, ptr %14, align 8, !tbaa !115
  store ptr %14, ptr %0, align 8, !tbaa !6
  %16 = icmp eq ptr %15, null
  br i1 %16, label %137, label %12, !llvm.loop !120

17:                                               ; preds = %9, %30
  %18 = phi ptr [ %19, %30 ], [ %1, %9 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !115
  %20 = load ptr, ptr %0, align 8, !tbaa !6
  store ptr %20, ptr %18, align 8, !tbaa !115
  %21 = getelementptr inbounds %struct.tlist, ptr %18, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !112
  %23 = icmp eq ptr %22, %2
  br i1 %23, label %30, label %24

24:                                               ; preds = %17
  %25 = icmp eq ptr %22, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %24
  %27 = tail call i32 @operand_equal_p(ptr noundef nonnull %22, ptr noundef nonnull %2, i32 noundef 0) #22
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %24
  store ptr %18, ptr %0, align 8, !tbaa !6
  br label %30

30:                                               ; preds = %29, %26, %17
  %31 = icmp eq ptr %19, null
  br i1 %31, label %137, label %17, !llvm.loop !120

32:                                               ; preds = %6
  br i1 %8, label %33, label %79

33:                                               ; preds = %32
  %34 = load ptr, ptr %0, align 8, !tbaa !6
  br label %35

35:                                               ; preds = %33, %59
  %36 = phi ptr [ %54, %59 ], [ %34, %33 ]
  %37 = phi ptr [ %38, %59 ], [ %1, %33 ]
  %38 = load ptr, ptr %37, align 8, !tbaa !115
  %39 = getelementptr inbounds %struct.tlist, ptr %37, i64 0, i32 1
  %40 = load <2 x ptr>, ptr %39, align 8, !tbaa !6
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %41 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %42 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %43 = ptrtoint ptr %41 to i64
  %44 = ptrtoint ptr %42 to i64
  %45 = sub i64 %43, %44
  %46 = icmp slt i64 %45, 24
  br i1 %46, label %47, label %50

47:                                               ; preds = %35
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %48 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %49 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %50

50:                                               ; preds = %47, %35
  %51 = phi ptr [ %42, %35 ], [ %49, %47 ]
  %52 = phi i64 [ 24, %35 ], [ %48, %47 ]
  %53 = getelementptr inbounds i8, ptr %51, i64 %52
  %54 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %55 = icmp eq ptr %53, %54
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %58 = or i8 %57, 2
  store i8 %58, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %59

59:                                               ; preds = %56, %50
  %60 = ptrtoint ptr %54 to i64
  store i64 %60, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %61 = ptrtoint ptr %53 to i64
  %62 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %63 = sext i32 %62 to i64
  %64 = add nsw i64 %63, %61
  %65 = xor i32 %62, -1
  %66 = sext i32 %65 to i64
  %67 = and i64 %64, %66
  %68 = inttoptr i64 %67 to ptr
  %69 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %70 = ptrtoint ptr %69 to i64
  %71 = sub i64 %67, %70
  %72 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %73 = ptrtoint ptr %72 to i64
  %74 = sub i64 %73, %70
  %75 = icmp sgt i64 %71, %74
  %76 = select i1 %75, ptr %72, ptr %68
  store ptr %76, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %76, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %36, ptr %54, align 8, !tbaa !115
  %77 = getelementptr inbounds %struct.tlist, ptr %54, i64 0, i32 1
  store <2 x ptr> %40, ptr %77, align 8, !tbaa !6
  store ptr %54, ptr %0, align 8, !tbaa !6
  %78 = icmp eq ptr %38, null
  br i1 %78, label %137, label %35, !llvm.loop !120

79:                                               ; preds = %32, %135
  %80 = phi ptr [ %81, %135 ], [ %1, %32 ]
  %81 = load ptr, ptr %80, align 8, !tbaa !115
  %82 = getelementptr inbounds %struct.tlist, ptr %80, i64 0, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !112
  %84 = icmp eq ptr %83, %2
  br i1 %84, label %135, label %85

85:                                               ; preds = %79
  %86 = icmp eq ptr %83, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = tail call i32 @operand_equal_p(ptr noundef nonnull %83, ptr noundef nonnull %2, i32 noundef 0) #22
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %135

90:                                               ; preds = %87
  %91 = load ptr, ptr %82, align 8, !tbaa !112
  br label %92

92:                                               ; preds = %90, %85
  %93 = phi ptr [ %91, %90 ], [ null, %85 ]
  %94 = load ptr, ptr %0, align 8, !tbaa !6
  %95 = getelementptr inbounds %struct.tlist, ptr %80, i64 0, i32 1
  %96 = load ptr, ptr %95, align 8, !tbaa !114
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %97 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %98 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %99 = ptrtoint ptr %97 to i64
  %100 = ptrtoint ptr %98 to i64
  %101 = sub i64 %99, %100
  %102 = icmp slt i64 %101, 24
  br i1 %102, label %103, label %106

103:                                              ; preds = %92
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %104 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %105 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %106

106:                                              ; preds = %103, %92
  %107 = phi ptr [ %98, %92 ], [ %105, %103 ]
  %108 = phi i64 [ 24, %92 ], [ %104, %103 ]
  %109 = getelementptr inbounds i8, ptr %107, i64 %108
  %110 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %111 = icmp eq ptr %109, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %114 = or i8 %113, 2
  store i8 %114, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %115

115:                                              ; preds = %106, %112
  %116 = ptrtoint ptr %110 to i64
  store i64 %116, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %117 = ptrtoint ptr %109 to i64
  %118 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %119 = sext i32 %118 to i64
  %120 = add nsw i64 %119, %117
  %121 = xor i32 %118, -1
  %122 = sext i32 %121 to i64
  %123 = and i64 %120, %122
  %124 = inttoptr i64 %123 to ptr
  %125 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %126 = ptrtoint ptr %125 to i64
  %127 = sub i64 %123, %126
  %128 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %129 = ptrtoint ptr %128 to i64
  %130 = sub i64 %129, %126
  %131 = icmp sgt i64 %127, %130
  %132 = select i1 %131, ptr %128, ptr %124
  store ptr %132, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %132, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %94, ptr %110, align 8, !tbaa !115
  %133 = getelementptr inbounds %struct.tlist, ptr %110, i64 0, i32 1
  store ptr %96, ptr %133, align 8, !tbaa !114
  %134 = getelementptr inbounds %struct.tlist, ptr %110, i64 0, i32 2
  store ptr %93, ptr %134, align 8, !tbaa !112
  store ptr %110, ptr %0, align 8, !tbaa !6
  br label %135

135:                                              ; preds = %79, %115, %87
  %136 = icmp eq ptr %81, null
  br i1 %136, label %137, label %79, !llvm.loop !120

137:                                              ; preds = %135, %59, %30, %12, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @warn_for_collisions_1(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2, i32 noundef %3) unnamed_addr #9 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %17

6:                                                ; preds = %4
  %7 = load ptr, ptr @warned_ids, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %21, label %12

9:                                                ; preds = %12
  %10 = load ptr, ptr %13, align 8, !tbaa !6
  %11 = icmp eq ptr %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %6, %9
  %13 = phi ptr [ %10, %9 ], [ %7, %6 ]
  %14 = getelementptr inbounds %struct.tlist, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !114
  %16 = icmp eq ptr %15, null
  br i1 %16, label %124, label %9

17:                                               ; preds = %4, %38
  %18 = phi ptr [ %19, %38 ], [ @warned_ids, %4 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !6
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %28

21:                                               ; preds = %17, %9, %6
  %22 = icmp eq ptr %2, null
  br i1 %22, label %124, label %23

23:                                               ; preds = %21
  %24 = icmp ne ptr %0, null
  %25 = icmp ne ptr %1, null
  %26 = icmp eq i32 %3, 0
  %27 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 0, i32 1
  br label %41

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.tlist, ptr %19, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !114
  %31 = icmp eq ptr %30, %0
  br i1 %31, label %124, label %32

32:                                               ; preds = %28
  %33 = icmp eq ptr %30, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %32
  %35 = tail call i32 @operand_equal_p(ptr noundef nonnull %30, ptr noundef nonnull %0, i32 noundef 0) #22
  %36 = icmp ne i32 %35, 0
  %37 = zext i1 %36 to i8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i8 [ 0, %32 ], [ %37, %34 ]
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %17, label %124, !llvm.loop !133

41:                                               ; preds = %23, %121
  %42 = phi ptr [ %2, %23 ], [ %122, %121 ]
  %43 = getelementptr inbounds %struct.tlist, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !114
  %45 = icmp eq ptr %44, %0
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = icmp ne ptr %44, null
  %48 = and i1 %24, %47
  br i1 %48, label %49, label %121

49:                                               ; preds = %46
  %50 = tail call i32 @operand_equal_p(ptr noundef nonnull %44, ptr noundef nonnull %0, i32 noundef 0) #22
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %121, label %52

52:                                               ; preds = %41, %49
  %53 = getelementptr inbounds %struct.tlist, ptr %42, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !112
  %55 = icmp eq ptr %54, %1
  br i1 %55, label %121, label %56

56:                                               ; preds = %52
  %57 = icmp ne ptr %54, null
  %58 = and i1 %25, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = tail call i32 @operand_equal_p(ptr noundef nonnull %54, ptr noundef nonnull %1, i32 noundef 0) #22
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %121

62:                                               ; preds = %56, %59
  br i1 %26, label %66, label %63

63:                                               ; preds = %62
  %64 = load ptr, ptr %53, align 8, !tbaa !112
  %65 = icmp eq ptr %64, null
  br i1 %65, label %121, label %66

66:                                               ; preds = %63, %62
  %67 = load ptr, ptr @warned_ids, align 8, !tbaa !6
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %68 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %69 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  %70 = ptrtoint ptr %68 to i64
  %71 = ptrtoint ptr %69 to i64
  %72 = sub i64 %70, %71
  %73 = icmp slt i64 %72, 24
  br i1 %73, label %74, label %77

74:                                               ; preds = %66
  tail call void @_obstack_newchunk(ptr noundef nonnull @tlist_obstack, i32 noundef 24) #22
  %75 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %76 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8, !tbaa !108
  br label %77

77:                                               ; preds = %74, %66
  %78 = phi ptr [ %69, %66 ], [ %76, %74 ]
  %79 = phi i64 [ 24, %66 ], [ %75, %74 ]
  %80 = getelementptr inbounds i8, ptr %78, i64 %79
  %81 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  %82 = icmp eq ptr %80, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  %85 = or i8 %84, 2
  store i8 %85, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 10), align 8
  br label %86

86:                                               ; preds = %77, %83
  %87 = ptrtoint ptr %81 to i64
  store i64 %87, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 5), align 8, !tbaa !105
  %88 = ptrtoint ptr %80 to i64
  %89 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 6), align 8, !tbaa !110
  %90 = sext i32 %89 to i64
  %91 = add nsw i64 %90, %88
  %92 = xor i32 %89, -1
  %93 = sext i32 %92 to i64
  %94 = and i64 %91, %93
  %95 = inttoptr i64 %94 to ptr
  %96 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 1), align 8, !tbaa !111
  %97 = ptrtoint ptr %96 to i64
  %98 = sub i64 %94, %97
  %99 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 4), align 8, !tbaa !107
  %100 = ptrtoint ptr %99 to i64
  %101 = sub i64 %100, %97
  %102 = icmp sgt i64 %98, %101
  %103 = select i1 %102, ptr %99, ptr %95
  store ptr %103, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 3), align 8
  store ptr %103, ptr getelementptr inbounds (%struct.obstack, ptr @tlist_obstack, i64 0, i32 2), align 8, !tbaa !109
  store ptr %67, ptr %81, align 8, !tbaa !115
  %104 = getelementptr inbounds %struct.tlist, ptr %81, i64 0, i32 1
  store ptr %0, ptr %104, align 8, !tbaa !114
  %105 = getelementptr inbounds %struct.tlist, ptr %81, i64 0, i32 2
  store ptr null, ptr %105, align 8, !tbaa !112
  store ptr %81, ptr @warned_ids, align 8, !tbaa !6
  %106 = load i64, ptr %1, align 8
  %107 = and i64 %106, 65535
  %108 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !17
  %110 = add i32 %109, -4
  %111 = icmp ult i32 %110, 7
  br i1 %111, label %112, label %116

112:                                              ; preds = %86
  %113 = load i32, ptr %27, align 8, !tbaa !17
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, ptr @input_location, ptr %27
  br label %116

116:                                              ; preds = %112, %86
  %117 = phi ptr [ @input_location, %86 ], [ %115, %112 ]
  %118 = load i32, ptr %117, align 4, !tbaa !17
  %119 = load ptr, ptr %43, align 8, !tbaa !114
  %120 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %118, i32 noundef 174, ptr noundef nonnull @.str.305, ptr noundef %119) #22
  br label %121

121:                                              ; preds = %52, %46, %116, %63, %59, %49
  %122 = load ptr, ptr %42, align 8, !tbaa !115
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %41, !llvm.loop !134

124:                                              ; preds = %38, %28, %12, %121, %21
  ret void
}

declare zeroext i8 @lvalue_p(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @c_common_type_for_size(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 {
  %3 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 6
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 1023
  %7 = icmp eq i32 %6, %0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = icmp eq i32 %1, 0
  %10 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  %11 = select i1 %9, ptr %3, ptr %10
  br label %102

12:                                               ; preds = %2
  %13 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  %14 = getelementptr inbounds %struct.tree_type, ptr %13, i64 0, i32 6
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 1023
  %17 = icmp eq i32 %16, %0
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = icmp eq i32 %1, 0
  %20 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  %21 = select i1 %19, ptr %13, ptr %20
  br label %102

22:                                               ; preds = %12
  %23 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  %24 = getelementptr inbounds %struct.tree_type, ptr %23, i64 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = and i32 %25, 1023
  %27 = icmp eq i32 %26, %0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = icmp eq i32 %1, 0
  %30 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  %31 = select i1 %29, ptr %23, ptr %30
  br label %102

32:                                               ; preds = %22
  %33 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8
  %34 = getelementptr inbounds %struct.tree_type, ptr %33, i64 0, i32 6
  %35 = load i32, ptr %34, align 4
  %36 = and i32 %35, 1023
  %37 = icmp eq i32 %36, %0
  br i1 %37, label %38, label %42

38:                                               ; preds = %32
  %39 = icmp eq i32 %1, 0
  %40 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16
  %41 = select i1 %39, ptr %33, ptr %40
  br label %102

42:                                               ; preds = %32
  %43 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  %44 = getelementptr inbounds %struct.tree_type, ptr %43, i64 0, i32 6
  %45 = load i32, ptr %44, align 4
  %46 = and i32 %45, 1023
  %47 = icmp eq i32 %46, %0
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = icmp eq i32 %1, 0
  %50 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  %51 = select i1 %49, ptr %43, ptr %50
  br label %102

52:                                               ; preds = %42
  %53 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 9), align 8
  %54 = getelementptr inbounds %struct.tree_type, ptr %53, i64 0, i32 6
  %55 = load i32, ptr %54, align 4
  %56 = and i32 %55, 1023
  %57 = icmp eq i32 %56, %0
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = icmp eq i32 %1, 0
  %60 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 10), align 16
  %61 = select i1 %59, ptr %53, ptr %60
  br label %102

62:                                               ; preds = %52
  %63 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 1), align 8
  %64 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 6
  %65 = load i32, ptr %64, align 4
  %66 = and i32 %65, 1023
  %67 = icmp ult i32 %66, %0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = icmp eq i32 %1, 0
  %70 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 6), align 16
  %71 = select i1 %69, ptr %63, ptr %70
  br label %102

72:                                               ; preds = %62
  %73 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 2), align 16
  %74 = getelementptr inbounds %struct.tree_type, ptr %73, i64 0, i32 6
  %75 = load i32, ptr %74, align 4
  %76 = and i32 %75, 1023
  %77 = icmp ult i32 %76, %0
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = icmp eq i32 %1, 0
  %80 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 7), align 8
  %81 = select i1 %79, ptr %73, ptr %80
  br label %102

82:                                               ; preds = %72
  %83 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 3), align 8
  %84 = getelementptr inbounds %struct.tree_type, ptr %83, i64 0, i32 6
  %85 = load i32, ptr %84, align 4
  %86 = and i32 %85, 1023
  %87 = icmp ult i32 %86, %0
  br i1 %87, label %92, label %88

88:                                               ; preds = %82
  %89 = icmp eq i32 %1, 0
  %90 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 8), align 16
  %91 = select i1 %89, ptr %83, ptr %90
  br label %102

92:                                               ; preds = %82
  %93 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 4), align 16
  %94 = getelementptr inbounds %struct.tree_type, ptr %93, i64 0, i32 6
  %95 = load i32, ptr %94, align 4
  %96 = and i32 %95, 1023
  %97 = icmp ult i32 %96, %0
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = icmp eq i32 %1, 0
  %100 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 9), align 8
  %101 = select i1 %99, ptr %93, ptr %100
  br label %102

102:                                              ; preds = %92, %98, %88, %78, %68, %58, %48, %38, %28, %18, %8
  %103 = phi ptr [ %11, %8 ], [ %21, %18 ], [ %31, %28 ], [ %41, %38 ], [ %51, %48 ], [ %61, %58 ], [ %71, %68 ], [ %81, %78 ], [ %91, %88 ], [ %101, %98 ], [ null, %92 ]
  ret ptr %103
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_common_fixed_point_type_for_size(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 {
  %5 = icmp eq i32 %0, 0
  %6 = icmp eq i32 %2, 0
  %7 = select i1 %6, i32 20, i32 25
  %8 = select i1 %6, i32 30, i32 34
  %9 = select i1 %5, i32 %7, i32 %8
  br label %10

10:                                               ; preds = %4, %22
  %11 = phi i32 [ %9, %4 ], [ %25, %22 ]
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds [87 x i8], ptr @mode_ibit, i64 0, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !17
  %15 = zext i8 %14 to i32
  %16 = icmp ult i32 %15, %0
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds [87 x i8], ptr @mode_fbit, i64 0, i64 %12
  %19 = load i8, ptr %18, align 1, !tbaa !17
  %20 = zext i8 %19 to i32
  %21 = icmp ult i32 %20, %1
  br i1 %21, label %22, label %27

22:                                               ; preds = %10, %17
  %23 = getelementptr inbounds [87 x i8], ptr @mode_wider, i64 0, i64 %12
  %24 = load i8, ptr %23, align 1, !tbaa !17
  %25 = zext i8 %24 to i32
  %26 = icmp eq i8 %24, 0
  br i1 %26, label %31, label %10, !llvm.loop !135

27:                                               ; preds = %17
  %28 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %29 = tail call zeroext i8 %28(i32 noundef %11) #22
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %22, %27
  tail call void (ptr, ...) @sorry(ptr noundef nonnull @.str.306) #22
  br label %34

32:                                               ; preds = %27
  %33 = tail call ptr @c_common_type_for_mode(i32 noundef %11, i32 noundef %3)
  br label %34

34:                                               ; preds = %32, %31
  %35 = phi ptr [ null, %31 ], [ %33, %32 ]
  ret ptr %35
}

declare void @sorry(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_common_type_for_mode(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %4 = load i64, ptr %3, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 14
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call i32 @vector_type_mode(ptr noundef nonnull %3) #22
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 16
  %13 = and i32 %12, 255
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi i32 [ %8, %7 ], [ %13, %9 ]
  %16 = icmp eq i32 %15, %0
  br i1 %16, label %17, label %22

17:                                               ; preds = %14
  %18 = icmp eq i32 %1, 0
  %19 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  %20 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %21 = select i1 %18, ptr %20, ptr %19
  br label %869

22:                                               ; preds = %14
  %23 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  %24 = load i64, ptr %23, align 8
  %25 = and i64 %24, 65535
  %26 = icmp eq i64 %25, 14
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = tail call i32 @vector_type_mode(ptr noundef nonnull %23) #22
  br label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.tree_type, ptr %23, i64 0, i32 6
  %31 = load i32, ptr %30, align 4
  %32 = lshr i32 %31, 16
  %33 = and i32 %32, 255
  br label %34

34:                                               ; preds = %29, %27
  %35 = phi i32 [ %28, %27 ], [ %33, %29 ]
  %36 = icmp eq i32 %35, %0
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = icmp eq i32 %1, 0
  %39 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  %40 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  %41 = select i1 %38, ptr %40, ptr %39
  br label %869

42:                                               ; preds = %34
  %43 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8, !tbaa !6
  %44 = load i64, ptr %43, align 8
  %45 = and i64 %44, 65535
  %46 = icmp eq i64 %45, 14
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = tail call i32 @vector_type_mode(ptr noundef nonnull %43) #22
  br label %54

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.tree_type, ptr %43, i64 0, i32 6
  %51 = load i32, ptr %50, align 4
  %52 = lshr i32 %51, 16
  %53 = and i32 %52, 255
  br label %54

54:                                               ; preds = %49, %47
  %55 = phi i32 [ %48, %47 ], [ %53, %49 ]
  %56 = icmp eq i32 %55, %0
  br i1 %56, label %57, label %62

57:                                               ; preds = %54
  %58 = icmp eq i32 %1, 0
  %59 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  %60 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  %61 = select i1 %58, ptr %60, ptr %59
  br label %869

62:                                               ; preds = %54
  %63 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  %64 = load i64, ptr %63, align 8
  %65 = and i64 %64, 65535
  %66 = icmp eq i64 %65, 14
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  %68 = tail call i32 @vector_type_mode(ptr noundef nonnull %63) #22
  br label %74

69:                                               ; preds = %62
  %70 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 6
  %71 = load i32, ptr %70, align 4
  %72 = lshr i32 %71, 16
  %73 = and i32 %72, 255
  br label %74

74:                                               ; preds = %69, %67
  %75 = phi i32 [ %68, %67 ], [ %73, %69 ]
  %76 = icmp eq i32 %75, %0
  br i1 %76, label %77, label %82

77:                                               ; preds = %74
  %78 = icmp eq i32 %1, 0
  %79 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16
  %80 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8
  %81 = select i1 %78, ptr %80, ptr %79
  br label %869

82:                                               ; preds = %74
  %83 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %84 = load i64, ptr %83, align 8
  %85 = and i64 %84, 65535
  %86 = icmp eq i64 %85, 14
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = tail call i32 @vector_type_mode(ptr noundef nonnull %83) #22
  br label %94

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.tree_type, ptr %83, i64 0, i32 6
  %91 = load i32, ptr %90, align 4
  %92 = lshr i32 %91, 16
  %93 = and i32 %92, 255
  br label %94

94:                                               ; preds = %89, %87
  %95 = phi i32 [ %88, %87 ], [ %93, %89 ]
  %96 = icmp eq i32 %95, %0
  br i1 %96, label %97, label %102

97:                                               ; preds = %94
  %98 = icmp eq i32 %1, 0
  %99 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  %100 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  %101 = select i1 %98, ptr %100, ptr %99
  br label %869

102:                                              ; preds = %94
  %103 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 9), align 8, !tbaa !6
  %104 = load i64, ptr %103, align 8
  %105 = and i64 %104, 65535
  %106 = icmp eq i64 %105, 14
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  %108 = tail call i32 @vector_type_mode(ptr noundef nonnull %103) #22
  br label %114

109:                                              ; preds = %102
  %110 = getelementptr inbounds %struct.tree_type, ptr %103, i64 0, i32 6
  %111 = load i32, ptr %110, align 4
  %112 = lshr i32 %111, 16
  %113 = and i32 %112, 255
  br label %114

114:                                              ; preds = %109, %107
  %115 = phi i32 [ %108, %107 ], [ %113, %109 ]
  %116 = icmp eq i32 %115, %0
  br i1 %116, label %117, label %122

117:                                              ; preds = %114
  %118 = icmp eq i32 %1, 0
  %119 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 10), align 16
  %120 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 9), align 8
  %121 = select i1 %118, ptr %120, ptr %119
  br label %869

122:                                              ; preds = %114
  switch i32 %0, label %143 [
    i32 14, label %123
    i32 15, label %128
    i32 16, label %133
    i32 17, label %138
  ]

123:                                              ; preds = %122
  %124 = icmp eq i32 %1, 0
  %125 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 6), align 16
  %126 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 1), align 8
  %127 = select i1 %124, ptr %126, ptr %125
  br label %869

128:                                              ; preds = %122
  %129 = icmp eq i32 %1, 0
  %130 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 7), align 8
  %131 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 2), align 16
  %132 = select i1 %129, ptr %131, ptr %130
  br label %869

133:                                              ; preds = %122
  %134 = icmp eq i32 %1, 0
  %135 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 8), align 16
  %136 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 3), align 8
  %137 = select i1 %134, ptr %136, ptr %135
  br label %869

138:                                              ; preds = %122
  %139 = icmp eq i32 %1, 0
  %140 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 9), align 8
  %141 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 4), align 16
  %142 = select i1 %139, ptr %141, ptr %140
  br label %869

143:                                              ; preds = %122
  %144 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 5), align 8, !tbaa !6
  %145 = load i64, ptr %144, align 8
  %146 = and i64 %145, 65535
  %147 = icmp eq i64 %146, 14
  br i1 %147, label %148, label %150

148:                                              ; preds = %143
  %149 = tail call i32 @vector_type_mode(ptr noundef nonnull %144) #22
  br label %155

150:                                              ; preds = %143
  %151 = getelementptr inbounds %struct.tree_type, ptr %144, i64 0, i32 6
  %152 = load i32, ptr %151, align 4
  %153 = lshr i32 %152, 16
  %154 = and i32 %153, 255
  br label %155

155:                                              ; preds = %150, %148
  %156 = phi i32 [ %149, %148 ], [ %154, %150 ]
  %157 = icmp eq i32 %156, %0
  br i1 %157, label %158, label %163

158:                                              ; preds = %155
  %159 = icmp eq i32 %1, 0
  %160 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 10), align 16
  %161 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 5), align 8
  %162 = select i1 %159, ptr %161, ptr %160
  br label %869

163:                                              ; preds = %155
  %164 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %165 = load i64, ptr %164, align 8
  %166 = and i64 %165, 65535
  %167 = icmp eq i64 %166, 14
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  %169 = tail call i32 @vector_type_mode(ptr noundef nonnull %164) #22
  br label %175

170:                                              ; preds = %163
  %171 = getelementptr inbounds %struct.tree_type, ptr %164, i64 0, i32 6
  %172 = load i32, ptr %171, align 4
  %173 = lshr i32 %172, 16
  %174 = and i32 %173, 255
  br label %175

175:                                              ; preds = %170, %168
  %176 = phi i32 [ %169, %168 ], [ %174, %170 ]
  %177 = icmp eq i32 %176, %0
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  br label %869

180:                                              ; preds = %175
  %181 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  %182 = load i64, ptr %181, align 8
  %183 = and i64 %182, 65535
  %184 = icmp eq i64 %183, 14
  br i1 %184, label %185, label %187

185:                                              ; preds = %180
  %186 = tail call i32 @vector_type_mode(ptr noundef nonnull %181) #22
  br label %192

187:                                              ; preds = %180
  %188 = getelementptr inbounds %struct.tree_type, ptr %181, i64 0, i32 6
  %189 = load i32, ptr %188, align 4
  %190 = lshr i32 %189, 16
  %191 = and i32 %190, 255
  br label %192

192:                                              ; preds = %187, %185
  %193 = phi i32 [ %186, %185 ], [ %191, %187 ]
  %194 = icmp eq i32 %193, %0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  br label %869

197:                                              ; preds = %192
  %198 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  %199 = load i64, ptr %198, align 8
  %200 = and i64 %199, 65535
  %201 = icmp eq i64 %200, 14
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = tail call i32 @vector_type_mode(ptr noundef nonnull %198) #22
  br label %209

204:                                              ; preds = %197
  %205 = getelementptr inbounds %struct.tree_type, ptr %198, i64 0, i32 6
  %206 = load i32, ptr %205, align 4
  %207 = lshr i32 %206, 16
  %208 = and i32 %207, 255
  br label %209

209:                                              ; preds = %204, %202
  %210 = phi i32 [ %203, %202 ], [ %208, %204 ]
  %211 = icmp eq i32 %210, %0
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  %213 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  br label %869

214:                                              ; preds = %209
  %215 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %216 = load i64, ptr %215, align 8
  %217 = and i64 %216, 65535
  %218 = icmp eq i64 %217, 14
  br i1 %218, label %219, label %221

219:                                              ; preds = %214
  %220 = tail call i32 @vector_type_mode(ptr noundef nonnull %215) #22
  br label %226

221:                                              ; preds = %214
  %222 = getelementptr inbounds %struct.tree_type, ptr %215, i64 0, i32 6
  %223 = load i32, ptr %222, align 4
  %224 = lshr i32 %223, 16
  %225 = and i32 %224, 255
  br label %226

226:                                              ; preds = %221, %219
  %227 = phi i32 [ %220, %219 ], [ %225, %221 ]
  %228 = icmp eq i32 %227, %0
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  br label %869

231:                                              ; preds = %226
  %232 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %233 = tail call ptr @build_pointer_type(ptr noundef %232) #22
  %234 = load i64, ptr %233, align 8
  %235 = and i64 %234, 65535
  %236 = icmp eq i64 %235, 14
  %237 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %238 = tail call ptr @build_pointer_type(ptr noundef %237) #22
  br i1 %236, label %239, label %241

239:                                              ; preds = %231
  %240 = tail call i32 @vector_type_mode(ptr noundef %238) #22
  br label %246

241:                                              ; preds = %231
  %242 = getelementptr inbounds %struct.tree_type, ptr %238, i64 0, i32 6
  %243 = load i32, ptr %242, align 4
  %244 = lshr i32 %243, 16
  %245 = and i32 %244, 255
  br label %246

246:                                              ; preds = %241, %239
  %247 = phi i32 [ %240, %239 ], [ %245, %241 ]
  %248 = icmp eq i32 %247, %0
  br i1 %248, label %249, label %259

249:                                              ; preds = %246
  %250 = icmp eq i32 %1, 0
  %251 = zext i32 %0 to i64
  %252 = getelementptr inbounds [87 x i16], ptr @mode_precision, i64 0, i64 %251
  %253 = load i16, ptr %252, align 2, !tbaa !136
  %254 = zext i16 %253 to i32
  br i1 %250, label %257, label %255

255:                                              ; preds = %249
  %256 = tail call ptr @make_unsigned_type(i32 noundef %254) #22
  br label %869

257:                                              ; preds = %249
  %258 = tail call ptr @make_signed_type(i32 noundef %254) #22
  br label %869

259:                                              ; preds = %246
  %260 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %261 = tail call ptr @build_pointer_type(ptr noundef %260) #22
  %262 = load i64, ptr %261, align 8
  %263 = and i64 %262, 65535
  %264 = icmp eq i64 %263, 14
  %265 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %266 = tail call ptr @build_pointer_type(ptr noundef %265) #22
  br i1 %264, label %267, label %269

267:                                              ; preds = %259
  %268 = tail call i32 @vector_type_mode(ptr noundef %266) #22
  br label %274

269:                                              ; preds = %259
  %270 = getelementptr inbounds %struct.tree_type, ptr %266, i64 0, i32 6
  %271 = load i32, ptr %270, align 4
  %272 = lshr i32 %271, 16
  %273 = and i32 %272, 255
  br label %274

274:                                              ; preds = %269, %267
  %275 = phi i32 [ %268, %267 ], [ %273, %269 ]
  %276 = icmp eq i32 %275, %0
  br i1 %276, label %277, label %287

277:                                              ; preds = %274
  %278 = icmp eq i32 %1, 0
  %279 = zext i32 %0 to i64
  %280 = getelementptr inbounds [87 x i16], ptr @mode_precision, i64 0, i64 %279
  %281 = load i16, ptr %280, align 2, !tbaa !136
  %282 = zext i16 %281 to i32
  br i1 %278, label %285, label %283

283:                                              ; preds = %277
  %284 = tail call ptr @make_unsigned_type(i32 noundef %282) #22
  br label %869

285:                                              ; preds = %277
  %286 = tail call ptr @make_signed_type(i32 noundef %282) #22
  br label %869

287:                                              ; preds = %274
  %288 = zext i32 %0 to i64
  %289 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !17
  switch i8 %290, label %377 [
    i8 10, label %291
    i8 11, label %291
    i8 12, label %369
    i8 17, label %369
    i8 13, label %369
    i8 14, label %369
    i8 15, label %369
    i8 16, label %369
  ]

291:                                              ; preds = %287, %287
  %292 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 28), align 16, !tbaa !6
  %293 = load i64, ptr %292, align 8
  %294 = and i64 %293, 65535
  %295 = icmp eq i64 %294, 14
  br i1 %295, label %296, label %298

296:                                              ; preds = %291
  %297 = tail call i32 @vector_type_mode(ptr noundef nonnull %292) #22
  br label %303

298:                                              ; preds = %291
  %299 = getelementptr inbounds %struct.tree_type, ptr %292, i64 0, i32 6
  %300 = load i32, ptr %299, align 4
  %301 = lshr i32 %300, 16
  %302 = and i32 %301, 255
  br label %303

303:                                              ; preds = %298, %296
  %304 = phi i32 [ %297, %296 ], [ %302, %298 ]
  %305 = icmp eq i32 %304, %0
  br i1 %305, label %306, label %308

306:                                              ; preds = %303
  %307 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 28), align 16, !tbaa !6
  br label %869

308:                                              ; preds = %303
  %309 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 29), align 8, !tbaa !6
  %310 = load i64, ptr %309, align 8
  %311 = and i64 %310, 65535
  %312 = icmp eq i64 %311, 14
  br i1 %312, label %313, label %315

313:                                              ; preds = %308
  %314 = tail call i32 @vector_type_mode(ptr noundef nonnull %309) #22
  br label %320

315:                                              ; preds = %308
  %316 = getelementptr inbounds %struct.tree_type, ptr %309, i64 0, i32 6
  %317 = load i32, ptr %316, align 4
  %318 = lshr i32 %317, 16
  %319 = and i32 %318, 255
  br label %320

320:                                              ; preds = %315, %313
  %321 = phi i32 [ %314, %313 ], [ %319, %315 ]
  %322 = icmp eq i32 %321, %0
  br i1 %322, label %323, label %325

323:                                              ; preds = %320
  %324 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 29), align 8, !tbaa !6
  br label %869

325:                                              ; preds = %320
  %326 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 30), align 16, !tbaa !6
  %327 = load i64, ptr %326, align 8
  %328 = and i64 %327, 65535
  %329 = icmp eq i64 %328, 14
  br i1 %329, label %330, label %332

330:                                              ; preds = %325
  %331 = tail call i32 @vector_type_mode(ptr noundef nonnull %326) #22
  br label %337

332:                                              ; preds = %325
  %333 = getelementptr inbounds %struct.tree_type, ptr %326, i64 0, i32 6
  %334 = load i32, ptr %333, align 4
  %335 = lshr i32 %334, 16
  %336 = and i32 %335, 255
  br label %337

337:                                              ; preds = %332, %330
  %338 = phi i32 [ %331, %330 ], [ %336, %332 ]
  %339 = icmp eq i32 %338, %0
  br i1 %339, label %340, label %342

340:                                              ; preds = %337
  %341 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 30), align 16, !tbaa !6
  br label %869

342:                                              ; preds = %337
  %343 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %344 = load i64, ptr %343, align 8
  %345 = and i64 %344, 65535
  %346 = icmp eq i64 %345, 14
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  %348 = tail call i32 @vector_type_mode(ptr noundef nonnull %343) #22
  br label %354

349:                                              ; preds = %342
  %350 = getelementptr inbounds %struct.tree_type, ptr %343, i64 0, i32 6
  %351 = load i32, ptr %350, align 4
  %352 = lshr i32 %351, 16
  %353 = and i32 %352, 255
  br label %354

354:                                              ; preds = %349, %347
  %355 = phi i32 [ %348, %347 ], [ %353, %349 ]
  %356 = icmp ne i32 %355, %0
  %357 = icmp ne i32 %1, 0
  %358 = or i1 %357, %356
  br i1 %358, label %361, label %359

359:                                              ; preds = %354
  %360 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 27), align 8, !tbaa !6
  br label %869

361:                                              ; preds = %354
  %362 = getelementptr inbounds [87 x i8], ptr @mode_inner, i64 0, i64 %288
  %363 = load i8, ptr %362, align 1, !tbaa !17
  %364 = zext i8 %363 to i32
  %365 = tail call ptr @c_common_type_for_mode(i32 noundef %364, i32 noundef %1)
  %366 = icmp eq ptr %365, null
  br i1 %366, label %377, label %367

367:                                              ; preds = %361
  %368 = tail call ptr @build_complex_type(ptr noundef nonnull %365) #22
  br label %869

369:                                              ; preds = %287, %287, %287, %287, %287, %287
  %370 = getelementptr inbounds [87 x i8], ptr @mode_inner, i64 0, i64 %288
  %371 = load i8, ptr %370, align 1, !tbaa !17
  %372 = zext i8 %371 to i32
  %373 = tail call ptr @c_common_type_for_mode(i32 noundef %372, i32 noundef %1)
  %374 = icmp eq ptr %373, null
  br i1 %374, label %377, label %375

375:                                              ; preds = %369
  %376 = tail call ptr @build_vector_type_for_mode(ptr noundef nonnull %373, i32 noundef %0) #22
  br label %869

377:                                              ; preds = %369, %361, %287
  %378 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  %379 = load i64, ptr %378, align 8
  %380 = and i64 %379, 65535
  %381 = icmp eq i64 %380, 14
  br i1 %381, label %382, label %384

382:                                              ; preds = %377
  %383 = tail call i32 @vector_type_mode(ptr noundef nonnull %378) #22
  br label %389

384:                                              ; preds = %377
  %385 = getelementptr inbounds %struct.tree_type, ptr %378, i64 0, i32 6
  %386 = load i32, ptr %385, align 4
  %387 = lshr i32 %386, 16
  %388 = and i32 %387, 255
  br label %389

389:                                              ; preds = %384, %382
  %390 = phi i32 [ %383, %382 ], [ %388, %384 ]
  %391 = icmp eq i32 %390, %0
  br i1 %391, label %392, label %394

392:                                              ; preds = %389
  %393 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  br label %869

394:                                              ; preds = %389
  %395 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !6
  %396 = load i64, ptr %395, align 8
  %397 = and i64 %396, 65535
  %398 = icmp eq i64 %397, 14
  br i1 %398, label %399, label %401

399:                                              ; preds = %394
  %400 = tail call i32 @vector_type_mode(ptr noundef nonnull %395) #22
  br label %406

401:                                              ; preds = %394
  %402 = getelementptr inbounds %struct.tree_type, ptr %395, i64 0, i32 6
  %403 = load i32, ptr %402, align 4
  %404 = lshr i32 %403, 16
  %405 = and i32 %404, 255
  br label %406

406:                                              ; preds = %401, %399
  %407 = phi i32 [ %400, %399 ], [ %405, %401 ]
  %408 = icmp eq i32 %407, %0
  br i1 %408, label %409, label %411

409:                                              ; preds = %406
  %410 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !6
  br label %869

411:                                              ; preds = %406
  %412 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  %413 = load i64, ptr %412, align 8
  %414 = and i64 %413, 65535
  %415 = icmp eq i64 %414, 14
  br i1 %415, label %416, label %418

416:                                              ; preds = %411
  %417 = tail call i32 @vector_type_mode(ptr noundef nonnull %412) #22
  br label %423

418:                                              ; preds = %411
  %419 = getelementptr inbounds %struct.tree_type, ptr %412, i64 0, i32 6
  %420 = load i32, ptr %419, align 4
  %421 = lshr i32 %420, 16
  %422 = and i32 %421, 255
  br label %423

423:                                              ; preds = %418, %416
  %424 = phi i32 [ %417, %416 ], [ %422, %418 ]
  %425 = icmp eq i32 %424, %0
  br i1 %425, label %426, label %428

426:                                              ; preds = %423
  %427 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  br label %869

428:                                              ; preds = %423
  %429 = and i8 %290, -4
  %430 = icmp eq i8 %429, 4
  br i1 %430, label %431, label %842

431:                                              ; preds = %428
  %432 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8, !tbaa !6
  %433 = load i64, ptr %432, align 8
  %434 = and i64 %433, 65535
  %435 = icmp eq i64 %434, 14
  br i1 %435, label %436, label %438

436:                                              ; preds = %431
  %437 = tail call i32 @vector_type_mode(ptr noundef nonnull %432) #22
  br label %443

438:                                              ; preds = %431
  %439 = getelementptr inbounds %struct.tree_type, ptr %432, i64 0, i32 6
  %440 = load i32, ptr %439, align 4
  %441 = lshr i32 %440, 16
  %442 = and i32 %441, 255
  br label %443

443:                                              ; preds = %438, %436
  %444 = phi i32 [ %437, %436 ], [ %442, %438 ]
  %445 = icmp eq i32 %444, %0
  br i1 %445, label %446, label %451

446:                                              ; preds = %443
  %447 = icmp eq i32 %1, 0
  %448 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  %449 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  %450 = select i1 %447, ptr %449, ptr %448
  br label %869

451:                                              ; preds = %443
  %452 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16, !tbaa !6
  %453 = load i64, ptr %452, align 8
  %454 = and i64 %453, 65535
  %455 = icmp eq i64 %454, 14
  br i1 %455, label %456, label %458

456:                                              ; preds = %451
  %457 = tail call i32 @vector_type_mode(ptr noundef nonnull %452) #22
  br label %463

458:                                              ; preds = %451
  %459 = getelementptr inbounds %struct.tree_type, ptr %452, i64 0, i32 6
  %460 = load i32, ptr %459, align 4
  %461 = lshr i32 %460, 16
  %462 = and i32 %461, 255
  br label %463

463:                                              ; preds = %458, %456
  %464 = phi i32 [ %457, %456 ], [ %462, %458 ]
  %465 = icmp eq i32 %464, %0
  br i1 %465, label %466, label %471

466:                                              ; preds = %463
  %467 = icmp eq i32 %1, 0
  %468 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  %469 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  %470 = select i1 %467, ptr %469, ptr %468
  br label %869

471:                                              ; preds = %463
  %472 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8, !tbaa !6
  %473 = load i64, ptr %472, align 8
  %474 = and i64 %473, 65535
  %475 = icmp eq i64 %474, 14
  br i1 %475, label %476, label %478

476:                                              ; preds = %471
  %477 = tail call i32 @vector_type_mode(ptr noundef nonnull %472) #22
  br label %483

478:                                              ; preds = %471
  %479 = getelementptr inbounds %struct.tree_type, ptr %472, i64 0, i32 6
  %480 = load i32, ptr %479, align 4
  %481 = lshr i32 %480, 16
  %482 = and i32 %481, 255
  br label %483

483:                                              ; preds = %478, %476
  %484 = phi i32 [ %477, %476 ], [ %482, %478 ]
  %485 = icmp eq i32 %484, %0
  br i1 %485, label %486, label %491

486:                                              ; preds = %483
  %487 = icmp eq i32 %1, 0
  %488 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  %489 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  %490 = select i1 %487, ptr %489, ptr %488
  br label %869

491:                                              ; preds = %483
  %492 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16, !tbaa !6
  %493 = load i64, ptr %492, align 8
  %494 = and i64 %493, 65535
  %495 = icmp eq i64 %494, 14
  br i1 %495, label %496, label %498

496:                                              ; preds = %491
  %497 = tail call i32 @vector_type_mode(ptr noundef nonnull %492) #22
  br label %503

498:                                              ; preds = %491
  %499 = getelementptr inbounds %struct.tree_type, ptr %492, i64 0, i32 6
  %500 = load i32, ptr %499, align 4
  %501 = lshr i32 %500, 16
  %502 = and i32 %501, 255
  br label %503

503:                                              ; preds = %498, %496
  %504 = phi i32 [ %497, %496 ], [ %502, %498 ]
  %505 = icmp eq i32 %504, %0
  br i1 %505, label %506, label %511

506:                                              ; preds = %503
  %507 = icmp eq i32 %1, 0
  %508 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  %509 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  %510 = select i1 %507, ptr %509, ptr %508
  br label %869

511:                                              ; preds = %503
  %512 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8, !tbaa !6
  %513 = load i64, ptr %512, align 8
  %514 = and i64 %513, 65535
  %515 = icmp eq i64 %514, 14
  br i1 %515, label %516, label %518

516:                                              ; preds = %511
  %517 = tail call i32 @vector_type_mode(ptr noundef nonnull %512) #22
  br label %523

518:                                              ; preds = %511
  %519 = getelementptr inbounds %struct.tree_type, ptr %512, i64 0, i32 6
  %520 = load i32, ptr %519, align 4
  %521 = lshr i32 %520, 16
  %522 = and i32 %521, 255
  br label %523

523:                                              ; preds = %518, %516
  %524 = phi i32 [ %517, %516 ], [ %522, %518 ]
  %525 = icmp eq i32 %524, %0
  br i1 %525, label %526, label %531

526:                                              ; preds = %523
  %527 = icmp eq i32 %1, 0
  %528 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  %529 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  %530 = select i1 %527, ptr %529, ptr %528
  br label %869

531:                                              ; preds = %523
  %532 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16, !tbaa !6
  %533 = load i64, ptr %532, align 8
  %534 = and i64 %533, 65535
  %535 = icmp eq i64 %534, 14
  br i1 %535, label %536, label %538

536:                                              ; preds = %531
  %537 = tail call i32 @vector_type_mode(ptr noundef nonnull %532) #22
  br label %543

538:                                              ; preds = %531
  %539 = getelementptr inbounds %struct.tree_type, ptr %532, i64 0, i32 6
  %540 = load i32, ptr %539, align 4
  %541 = lshr i32 %540, 16
  %542 = and i32 %541, 255
  br label %543

543:                                              ; preds = %538, %536
  %544 = phi i32 [ %537, %536 ], [ %542, %538 ]
  %545 = icmp eq i32 %544, %0
  br i1 %545, label %546, label %551

546:                                              ; preds = %543
  %547 = icmp eq i32 %1, 0
  %548 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  %549 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  %550 = select i1 %547, ptr %549, ptr %548
  br label %869

551:                                              ; preds = %543
  %552 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8, !tbaa !6
  %553 = load i64, ptr %552, align 8
  %554 = and i64 %553, 65535
  %555 = icmp eq i64 %554, 14
  br i1 %555, label %556, label %558

556:                                              ; preds = %551
  %557 = tail call i32 @vector_type_mode(ptr noundef nonnull %552) #22
  br label %563

558:                                              ; preds = %551
  %559 = getelementptr inbounds %struct.tree_type, ptr %552, i64 0, i32 6
  %560 = load i32, ptr %559, align 4
  %561 = lshr i32 %560, 16
  %562 = and i32 %561, 255
  br label %563

563:                                              ; preds = %558, %556
  %564 = phi i32 [ %557, %556 ], [ %562, %558 ]
  %565 = icmp eq i32 %564, %0
  br i1 %565, label %566, label %571

566:                                              ; preds = %563
  %567 = icmp eq i32 %1, 0
  %568 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  %569 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  %570 = select i1 %567, ptr %569, ptr %568
  br label %869

571:                                              ; preds = %563
  %572 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16, !tbaa !6
  %573 = load i64, ptr %572, align 8
  %574 = and i64 %573, 65535
  %575 = icmp eq i64 %574, 14
  br i1 %575, label %576, label %578

576:                                              ; preds = %571
  %577 = tail call i32 @vector_type_mode(ptr noundef nonnull %572) #22
  br label %583

578:                                              ; preds = %571
  %579 = getelementptr inbounds %struct.tree_type, ptr %572, i64 0, i32 6
  %580 = load i32, ptr %579, align 4
  %581 = lshr i32 %580, 16
  %582 = and i32 %581, 255
  br label %583

583:                                              ; preds = %578, %576
  %584 = phi i32 [ %577, %576 ], [ %582, %578 ]
  %585 = icmp eq i32 %584, %0
  br i1 %585, label %586, label %591

586:                                              ; preds = %583
  %587 = icmp eq i32 %1, 0
  %588 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  %589 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  %590 = select i1 %587, ptr %589, ptr %588
  br label %869

591:                                              ; preds = %583
  %592 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8, !tbaa !6
  %593 = load i64, ptr %592, align 8
  %594 = and i64 %593, 65535
  %595 = icmp eq i64 %594, 14
  br i1 %595, label %596, label %598

596:                                              ; preds = %591
  %597 = tail call i32 @vector_type_mode(ptr noundef nonnull %592) #22
  br label %603

598:                                              ; preds = %591
  %599 = getelementptr inbounds %struct.tree_type, ptr %592, i64 0, i32 6
  %600 = load i32, ptr %599, align 4
  %601 = lshr i32 %600, 16
  %602 = and i32 %601, 255
  br label %603

603:                                              ; preds = %598, %596
  %604 = phi i32 [ %597, %596 ], [ %602, %598 ]
  %605 = icmp eq i32 %604, %0
  br i1 %605, label %606, label %611

606:                                              ; preds = %603
  %607 = icmp eq i32 %1, 0
  %608 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8
  %609 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8
  %610 = select i1 %607, ptr %609, ptr %608
  br label %869

611:                                              ; preds = %603
  %612 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16, !tbaa !6
  %613 = load i64, ptr %612, align 8
  %614 = and i64 %613, 65535
  %615 = icmp eq i64 %614, 14
  br i1 %615, label %616, label %618

616:                                              ; preds = %611
  %617 = tail call i32 @vector_type_mode(ptr noundef nonnull %612) #22
  br label %623

618:                                              ; preds = %611
  %619 = getelementptr inbounds %struct.tree_type, ptr %612, i64 0, i32 6
  %620 = load i32, ptr %619, align 4
  %621 = lshr i32 %620, 16
  %622 = and i32 %621, 255
  br label %623

623:                                              ; preds = %618, %616
  %624 = phi i32 [ %617, %616 ], [ %622, %618 ]
  %625 = icmp eq i32 %624, %0
  br i1 %625, label %626, label %631

626:                                              ; preds = %623
  %627 = icmp eq i32 %1, 0
  %628 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16
  %629 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16
  %630 = select i1 %627, ptr %629, ptr %628
  br label %869

631:                                              ; preds = %623
  %632 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8, !tbaa !6
  %633 = load i64, ptr %632, align 8
  %634 = and i64 %633, 65535
  %635 = icmp eq i64 %634, 14
  br i1 %635, label %636, label %638

636:                                              ; preds = %631
  %637 = tail call i32 @vector_type_mode(ptr noundef nonnull %632) #22
  br label %643

638:                                              ; preds = %631
  %639 = getelementptr inbounds %struct.tree_type, ptr %632, i64 0, i32 6
  %640 = load i32, ptr %639, align 4
  %641 = lshr i32 %640, 16
  %642 = and i32 %641, 255
  br label %643

643:                                              ; preds = %638, %636
  %644 = phi i32 [ %637, %636 ], [ %642, %638 ]
  %645 = icmp eq i32 %644, %0
  br i1 %645, label %646, label %651

646:                                              ; preds = %643
  %647 = icmp eq i32 %1, 0
  %648 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8
  %649 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8
  %650 = select i1 %647, ptr %649, ptr %648
  br label %869

651:                                              ; preds = %643
  %652 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16, !tbaa !6
  %653 = load i64, ptr %652, align 8
  %654 = and i64 %653, 65535
  %655 = icmp eq i64 %654, 14
  br i1 %655, label %656, label %658

656:                                              ; preds = %651
  %657 = tail call i32 @vector_type_mode(ptr noundef nonnull %652) #22
  br label %663

658:                                              ; preds = %651
  %659 = getelementptr inbounds %struct.tree_type, ptr %652, i64 0, i32 6
  %660 = load i32, ptr %659, align 4
  %661 = lshr i32 %660, 16
  %662 = and i32 %661, 255
  br label %663

663:                                              ; preds = %658, %656
  %664 = phi i32 [ %657, %656 ], [ %662, %658 ]
  %665 = icmp eq i32 %664, %0
  br i1 %665, label %666, label %671

666:                                              ; preds = %663
  %667 = icmp eq i32 %1, 0
  %668 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16
  %669 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16
  %670 = select i1 %667, ptr %669, ptr %668
  br label %869

671:                                              ; preds = %663
  %672 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8, !tbaa !6
  %673 = load i64, ptr %672, align 8
  %674 = and i64 %673, 65535
  %675 = icmp eq i64 %674, 14
  br i1 %675, label %676, label %678

676:                                              ; preds = %671
  %677 = tail call i32 @vector_type_mode(ptr noundef nonnull %672) #22
  br label %683

678:                                              ; preds = %671
  %679 = getelementptr inbounds %struct.tree_type, ptr %672, i64 0, i32 6
  %680 = load i32, ptr %679, align 4
  %681 = lshr i32 %680, 16
  %682 = and i32 %681, 255
  br label %683

683:                                              ; preds = %678, %676
  %684 = phi i32 [ %677, %676 ], [ %682, %678 ]
  %685 = icmp eq i32 %684, %0
  br i1 %685, label %686, label %691

686:                                              ; preds = %683
  %687 = icmp eq i32 %1, 0
  %688 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8
  %689 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8
  %690 = select i1 %687, ptr %689, ptr %688
  br label %869

691:                                              ; preds = %683
  %692 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16, !tbaa !6
  %693 = load i64, ptr %692, align 8
  %694 = and i64 %693, 65535
  %695 = icmp eq i64 %694, 14
  br i1 %695, label %696, label %698

696:                                              ; preds = %691
  %697 = tail call i32 @vector_type_mode(ptr noundef nonnull %692) #22
  br label %703

698:                                              ; preds = %691
  %699 = getelementptr inbounds %struct.tree_type, ptr %692, i64 0, i32 6
  %700 = load i32, ptr %699, align 4
  %701 = lshr i32 %700, 16
  %702 = and i32 %701, 255
  br label %703

703:                                              ; preds = %698, %696
  %704 = phi i32 [ %697, %696 ], [ %702, %698 ]
  %705 = icmp eq i32 %704, %0
  br i1 %705, label %706, label %711

706:                                              ; preds = %703
  %707 = icmp eq i32 %1, 0
  %708 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16
  %709 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16
  %710 = select i1 %707, ptr %709, ptr %708
  br label %869

711:                                              ; preds = %703
  %712 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8, !tbaa !6
  %713 = load i64, ptr %712, align 8
  %714 = and i64 %713, 65535
  %715 = icmp eq i64 %714, 14
  br i1 %715, label %716, label %718

716:                                              ; preds = %711
  %717 = tail call i32 @vector_type_mode(ptr noundef nonnull %712) #22
  br label %723

718:                                              ; preds = %711
  %719 = getelementptr inbounds %struct.tree_type, ptr %712, i64 0, i32 6
  %720 = load i32, ptr %719, align 4
  %721 = lshr i32 %720, 16
  %722 = and i32 %721, 255
  br label %723

723:                                              ; preds = %718, %716
  %724 = phi i32 [ %717, %716 ], [ %722, %718 ]
  %725 = icmp eq i32 %724, %0
  br i1 %725, label %726, label %731

726:                                              ; preds = %723
  %727 = icmp eq i32 %1, 0
  %728 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8
  %729 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8
  %730 = select i1 %727, ptr %729, ptr %728
  br label %869

731:                                              ; preds = %723
  %732 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16, !tbaa !6
  %733 = load i64, ptr %732, align 8
  %734 = and i64 %733, 65535
  %735 = icmp eq i64 %734, 14
  br i1 %735, label %736, label %738

736:                                              ; preds = %731
  %737 = tail call i32 @vector_type_mode(ptr noundef nonnull %732) #22
  br label %743

738:                                              ; preds = %731
  %739 = getelementptr inbounds %struct.tree_type, ptr %732, i64 0, i32 6
  %740 = load i32, ptr %739, align 4
  %741 = lshr i32 %740, 16
  %742 = and i32 %741, 255
  br label %743

743:                                              ; preds = %738, %736
  %744 = phi i32 [ %737, %736 ], [ %742, %738 ]
  %745 = icmp eq i32 %744, %0
  br i1 %745, label %746, label %751

746:                                              ; preds = %743
  %747 = icmp eq i32 %1, 0
  %748 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16
  %749 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16
  %750 = select i1 %747, ptr %749, ptr %748
  br label %869

751:                                              ; preds = %743
  switch i32 %0, label %842 [
    i32 20, label %752
    i32 21, label %757
    i32 22, label %762
    i32 23, label %767
    i32 24, label %772
    i32 25, label %777
    i32 26, label %782
    i32 27, label %787
    i32 28, label %792
    i32 29, label %797
    i32 30, label %802
    i32 31, label %807
    i32 32, label %812
    i32 33, label %817
    i32 34, label %822
    i32 35, label %827
    i32 36, label %832
    i32 37, label %837
  ]

752:                                              ; preds = %751
  %753 = icmp eq i32 %1, 0
  %754 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 99), align 8
  %755 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 89), align 8
  %756 = select i1 %753, ptr %755, ptr %754
  br label %869

757:                                              ; preds = %751
  %758 = icmp eq i32 %1, 0
  %759 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 100), align 16
  %760 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 90), align 16
  %761 = select i1 %758, ptr %760, ptr %759
  br label %869

762:                                              ; preds = %751
  %763 = icmp eq i32 %1, 0
  %764 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 101), align 8
  %765 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 91), align 8
  %766 = select i1 %763, ptr %765, ptr %764
  br label %869

767:                                              ; preds = %751
  %768 = icmp eq i32 %1, 0
  %769 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 102), align 16
  %770 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 92), align 16
  %771 = select i1 %768, ptr %770, ptr %769
  br label %869

772:                                              ; preds = %751
  %773 = icmp eq i32 %1, 0
  %774 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 103), align 8
  %775 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 93), align 8
  %776 = select i1 %773, ptr %775, ptr %774
  br label %869

777:                                              ; preds = %751
  %778 = icmp eq i32 %1, 0
  %779 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 104), align 16
  %780 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 94), align 16
  %781 = select i1 %778, ptr %780, ptr %779
  br label %869

782:                                              ; preds = %751
  %783 = icmp eq i32 %1, 0
  %784 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 105), align 8
  %785 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 95), align 8
  %786 = select i1 %783, ptr %785, ptr %784
  br label %869

787:                                              ; preds = %751
  %788 = icmp eq i32 %1, 0
  %789 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 106), align 16
  %790 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 96), align 16
  %791 = select i1 %788, ptr %790, ptr %789
  br label %869

792:                                              ; preds = %751
  %793 = icmp eq i32 %1, 0
  %794 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 107), align 8
  %795 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 97), align 8
  %796 = select i1 %793, ptr %795, ptr %794
  br label %869

797:                                              ; preds = %751
  %798 = icmp eq i32 %1, 0
  %799 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 108), align 16
  %800 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 98), align 16
  %801 = select i1 %798, ptr %800, ptr %799
  br label %869

802:                                              ; preds = %751
  %803 = icmp eq i32 %1, 0
  %804 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 117), align 8
  %805 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 109), align 8
  %806 = select i1 %803, ptr %805, ptr %804
  br label %869

807:                                              ; preds = %751
  %808 = icmp eq i32 %1, 0
  %809 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 118), align 16
  %810 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 110), align 16
  %811 = select i1 %808, ptr %810, ptr %809
  br label %869

812:                                              ; preds = %751
  %813 = icmp eq i32 %1, 0
  %814 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 119), align 8
  %815 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 111), align 8
  %816 = select i1 %813, ptr %815, ptr %814
  br label %869

817:                                              ; preds = %751
  %818 = icmp eq i32 %1, 0
  %819 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 120), align 16
  %820 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 112), align 16
  %821 = select i1 %818, ptr %820, ptr %819
  br label %869

822:                                              ; preds = %751
  %823 = icmp eq i32 %1, 0
  %824 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 121), align 8
  %825 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 113), align 8
  %826 = select i1 %823, ptr %825, ptr %824
  br label %869

827:                                              ; preds = %751
  %828 = icmp eq i32 %1, 0
  %829 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 122), align 16
  %830 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 114), align 16
  %831 = select i1 %828, ptr %830, ptr %829
  br label %869

832:                                              ; preds = %751
  %833 = icmp eq i32 %1, 0
  %834 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 123), align 8
  %835 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 115), align 8
  %836 = select i1 %833, ptr %835, ptr %834
  br label %869

837:                                              ; preds = %751
  %838 = icmp eq i32 %1, 0
  %839 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 124), align 16
  %840 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 116), align 16
  %841 = select i1 %838, ptr %840, ptr %839
  br label %869

842:                                              ; preds = %428, %751
  %843 = load ptr, ptr @registered_builtin_types, align 8, !tbaa !17
  %844 = icmp eq ptr %843, null
  br i1 %844, label %869, label %845

845:                                              ; preds = %842, %865
  %846 = phi ptr [ %867, %865 ], [ %843, %842 ]
  %847 = getelementptr inbounds %struct.tree_list, ptr %846, i64 0, i32 2
  %848 = load ptr, ptr %847, align 8, !tbaa !17
  %849 = load i64, ptr %848, align 8
  %850 = and i64 %849, 65535
  %851 = icmp eq i64 %850, 14
  br i1 %851, label %852, label %854

852:                                              ; preds = %845
  %853 = tail call i32 @vector_type_mode(ptr noundef nonnull %848) #22
  br label %859

854:                                              ; preds = %845
  %855 = getelementptr inbounds %struct.tree_type, ptr %848, i64 0, i32 6
  %856 = load i32, ptr %855, align 4
  %857 = lshr i32 %856, 16
  %858 = and i32 %857, 255
  br label %859

859:                                              ; preds = %854, %852
  %860 = phi i32 [ %853, %852 ], [ %858, %854 ]
  %861 = icmp eq i32 %860, %0
  br i1 %861, label %862, label %865

862:                                              ; preds = %859
  %863 = getelementptr inbounds %struct.tree_list, ptr %846, i64 0, i32 2
  %864 = load ptr, ptr %863, align 8, !tbaa !17
  br label %869

865:                                              ; preds = %859
  %866 = getelementptr inbounds %struct.tree_common, ptr %846, i64 0, i32 1
  %867 = load ptr, ptr %866, align 8, !tbaa !17
  %868 = icmp eq ptr %867, null
  br i1 %868, label %869, label %845, !llvm.loop !137

869:                                              ; preds = %865, %842, %359, %367, %340, %323, %306, %375, %283, %285, %255, %257, %862, %837, %832, %827, %822, %817, %812, %807, %802, %797, %792, %787, %782, %777, %772, %767, %762, %757, %752, %746, %726, %706, %686, %666, %646, %626, %606, %586, %566, %546, %526, %506, %486, %466, %446, %426, %409, %392, %229, %212, %195, %178, %158, %138, %133, %128, %123, %117, %97, %77, %57, %37, %17
  %870 = phi ptr [ %21, %17 ], [ %41, %37 ], [ %61, %57 ], [ %81, %77 ], [ %101, %97 ], [ %121, %117 ], [ %127, %123 ], [ %132, %128 ], [ %137, %133 ], [ %142, %138 ], [ %162, %158 ], [ %179, %178 ], [ %196, %195 ], [ %213, %212 ], [ %230, %229 ], [ %393, %392 ], [ %410, %409 ], [ %427, %426 ], [ %450, %446 ], [ %470, %466 ], [ %490, %486 ], [ %510, %506 ], [ %530, %526 ], [ %550, %546 ], [ %570, %566 ], [ %590, %586 ], [ %610, %606 ], [ %630, %626 ], [ %650, %646 ], [ %670, %666 ], [ %690, %686 ], [ %710, %706 ], [ %730, %726 ], [ %750, %746 ], [ %756, %752 ], [ %761, %757 ], [ %766, %762 ], [ %771, %767 ], [ %776, %772 ], [ %781, %777 ], [ %786, %782 ], [ %791, %787 ], [ %796, %792 ], [ %801, %797 ], [ %806, %802 ], [ %811, %807 ], [ %816, %812 ], [ %821, %817 ], [ %826, %822 ], [ %831, %827 ], [ %836, %832 ], [ %841, %837 ], [ %864, %862 ], [ %376, %375 ], [ %256, %255 ], [ %258, %257 ], [ %284, %283 ], [ %286, %285 ], [ %360, %359 ], [ %368, %367 ], [ %341, %340 ], [ %324, %323 ], [ %307, %306 ], [ null, %842 ], [ null, %865 ]
  ret ptr %870
}

declare ptr @build_complex_type(ptr noundef) local_unnamed_addr #3

declare ptr @build_vector_type_for_mode(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @build_nonstandard_integer_type(i64 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_build_bitfield_integer_type(i64 noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 6
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 1023
  %7 = zext i32 %6 to i64
  %8 = icmp eq i64 %7, %0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0
  %11 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  %12 = select i1 %10, ptr %3, ptr %11
  br label %59

13:                                               ; preds = %2
  %14 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  %15 = getelementptr inbounds %struct.tree_type, ptr %14, i64 0, i32 6
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 1023
  %18 = zext i32 %17 to i64
  %19 = icmp eq i64 %18, %0
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = icmp eq i32 %1, 0
  %22 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  %23 = select i1 %21, ptr %14, ptr %22
  br label %59

24:                                               ; preds = %13
  %25 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8
  %26 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 6
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 1023
  %29 = zext i32 %28 to i64
  %30 = icmp eq i64 %29, %0
  br i1 %30, label %31, label %35

31:                                               ; preds = %24
  %32 = icmp eq i32 %1, 0
  %33 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  %34 = select i1 %32, ptr %25, ptr %33
  br label %59

35:                                               ; preds = %24
  %36 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8
  %37 = getelementptr inbounds %struct.tree_type, ptr %36, i64 0, i32 6
  %38 = load i32, ptr %37, align 4
  %39 = and i32 %38, 1023
  %40 = zext i32 %39 to i64
  %41 = icmp eq i64 %40, %0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = icmp eq i32 %1, 0
  %44 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16
  %45 = select i1 %43, ptr %36, ptr %44
  br label %59

46:                                               ; preds = %35
  %47 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8
  %48 = getelementptr inbounds %struct.tree_type, ptr %47, i64 0, i32 6
  %49 = load i32, ptr %48, align 4
  %50 = and i32 %49, 1023
  %51 = zext i32 %50 to i64
  %52 = icmp eq i64 %51, %0
  br i1 %52, label %53, label %57

53:                                               ; preds = %46
  %54 = icmp eq i32 %1, 0
  %55 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16
  %56 = select i1 %54, ptr %47, ptr %55
  br label %59

57:                                               ; preds = %46
  %58 = tail call ptr @build_nonstandard_integer_type(i64 noundef %0, i32 noundef %1) #22
  br label %59

59:                                               ; preds = %57, %53, %42, %31, %20, %9
  %60 = phi ptr [ %12, %9 ], [ %23, %20 ], [ %34, %31 ], [ %45, %42 ], [ %56, %53 ], [ %58, %57 ]
  ret ptr %60
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_register_builtin_type(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @get_identifier(ptr noundef %1) #22
  %4 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %3, ptr noundef %0) #22
  %5 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 2
  %6 = load i64, ptr %5, align 8
  %7 = or i64 %6, 4096
  store i64 %7, ptr %5, align 8
  %8 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 12
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store ptr %4, ptr %8, align 8, !tbaa !17
  br label %12

12:                                               ; preds = %11, %2
  %13 = tail call ptr @pushdecl(ptr noundef nonnull %4) #22
  %14 = load ptr, ptr @registered_builtin_types, align 8, !tbaa !6
  %15 = tail call ptr @tree_cons_stat(ptr noundef null, ptr noundef nonnull %0, ptr noundef %14) #22
  store ptr %15, ptr @registered_builtin_types, align 8, !tbaa !6
  ret void
}

declare ptr @build_decl_stat(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @pushdecl(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @binary_op_error(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = add i32 %1, -63
  %6 = icmp ult i32 %5, 40
  br i1 %6, label %8, label %7

7:                                                ; preds = %8, %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 3377, ptr noundef nonnull @.str.238) #22
  unreachable

8:                                                ; preds = %4
  %9 = zext i32 %5 to i64
  %10 = lshr i64 1083258045783, %9
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %7, label %13

13:                                               ; preds = %8
  %14 = sext i32 %5 to i64
  %15 = shl i64 %14, 2
  %16 = call ptr @llvm.load.relative.i64(ptr @reltable.binary_op_error, i64 %15)
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.327, ptr noundef nonnull %16, ptr noundef %2, ptr noundef %3) #22
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @shorten_compare(ptr nocapture noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr nocapture noundef %3) local_unnamed_addr #9 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.expanded_location, align 8
  %8 = alloca %struct.expanded_location, align 8
  %9 = load ptr, ptr %0, align 8, !tbaa !6
  %10 = load ptr, ptr %1, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #22
  %11 = load i32, ptr %3, align 4, !tbaa !17
  %12 = call ptr @get_narrower(ptr noundef %9, ptr noundef nonnull %5) #22
  %13 = call ptr @get_narrower(ptr noundef %10, ptr noundef nonnull %6) #22
  %14 = icmp eq ptr %9, %12
  br i1 %14, label %15, label %25

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = load ptr, ptr %2, align 8, !tbaa !6
  %19 = icmp eq ptr %17, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = load i64, ptr %17, align 8
  %22 = trunc i64 %21 to i32
  %23 = lshr i32 %22, 21
  %24 = and i32 %23, 1
  store i32 %24, ptr %5, align 4, !tbaa !21
  br label %25

25:                                               ; preds = %20, %15, %4
  %26 = icmp eq ptr %10, %13
  br i1 %26, label %27, label %37

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = load ptr, ptr %2, align 8, !tbaa !6
  %31 = icmp eq ptr %29, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = load i64, ptr %29, align 8
  %34 = trunc i64 %33 to i32
  %35 = lshr i32 %34, 21
  %36 = and i32 %35, 1
  store i32 %36, ptr %6, align 4, !tbaa !21
  br label %37

37:                                               ; preds = %32, %27, %25
  %38 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = load i64, ptr %39, align 8
  %41 = and i64 %40, 65535
  %42 = icmp eq i64 %41, 9
  %43 = zext i1 %42 to i32
  %44 = getelementptr inbounds %struct.tree_common, ptr %13, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = load i64, ptr %45, align 8
  %47 = and i64 %46, 65535
  %48 = icmp eq i64 %47, 9
  %49 = zext i1 %48 to i32
  %50 = load i64, ptr %12, align 8
  %51 = and i64 %50, 131072
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %73, label %53

53:                                               ; preds = %37
  %54 = call i32 @integer_zerop(ptr noundef nonnull %13) #22
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %73

56:                                               ; preds = %53
  %57 = call i32 @real_zerop(ptr noundef nonnull %13) #22
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %73

59:                                               ; preds = %56
  %60 = call i32 @fixed_zerop(ptr noundef nonnull %13) #22
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %73

62:                                               ; preds = %59
  %63 = load i32, ptr %5, align 4, !tbaa !21
  store ptr %10, ptr %0, align 8, !tbaa !6
  store ptr %9, ptr %1, align 8, !tbaa !6
  %64 = load i32, ptr %6, align 4, !tbaa !21
  store i32 %64, ptr %5, align 4, !tbaa !21
  store i32 %63, ptr %6, align 4, !tbaa !21
  %65 = add i32 %11, -97
  %66 = icmp ult i32 %65, 4
  br i1 %66, label %67, label %71

67:                                               ; preds = %62
  %68 = sext i32 %65 to i64
  %69 = getelementptr inbounds [4 x i32], ptr @switch.table.shorten_compare, i64 0, i64 %68
  %70 = load i32, ptr %69, align 4
  br label %71

71:                                               ; preds = %67, %62
  %72 = phi i32 [ %11, %62 ], [ %70, %67 ]
  store i32 %72, ptr %3, align 4, !tbaa !17
  br label %73

73:                                               ; preds = %71, %59, %56, %53, %37
  %74 = phi ptr [ %10, %53 ], [ %10, %56 ], [ %10, %59 ], [ %9, %71 ], [ %10, %37 ]
  %75 = phi i32 [ %43, %53 ], [ %43, %56 ], [ %43, %59 ], [ %49, %71 ], [ %43, %37 ]
  %76 = phi i32 [ %49, %53 ], [ %49, %56 ], [ %49, %59 ], [ %43, %71 ], [ %49, %37 ]
  %77 = phi ptr [ %12, %53 ], [ %12, %56 ], [ %12, %59 ], [ %13, %71 ], [ %12, %37 ]
  %78 = phi ptr [ %13, %53 ], [ %13, %56 ], [ %13, %59 ], [ %12, %71 ], [ %13, %37 ]
  %79 = phi i32 [ %11, %53 ], [ %11, %56 ], [ %11, %59 ], [ %72, %71 ], [ %11, %37 ]
  %80 = phi ptr [ %9, %53 ], [ %9, %56 ], [ %9, %59 ], [ %10, %71 ], [ %9, %37 ]
  %81 = icmp ne i32 %75, 0
  %82 = icmp ne i32 %76, 0
  %83 = select i1 %81, i1 true, i1 %82
  br i1 %83, label %311, label %84

84:                                               ; preds = %73
  %85 = getelementptr inbounds %struct.tree_common, ptr %77, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = load i64, ptr %86, align 8
  %88 = and i64 %87, 65535
  %89 = icmp eq i64 %88, 11
  br i1 %89, label %368, label %90

90:                                               ; preds = %84
  %91 = load i64, ptr %78, align 8
  %92 = and i64 %91, 65535
  %93 = icmp eq i64 %92, 23
  br i1 %93, label %94, label %368

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.tree_type, ptr %86, i64 0, i32 6
  %96 = load i32, ptr %95, align 4
  %97 = and i32 %96, 1023
  %98 = load ptr, ptr %2, align 8, !tbaa !6
  %99 = getelementptr inbounds %struct.tree_type, ptr %98, i64 0, i32 6
  %100 = load i32, ptr %99, align 4
  %101 = and i32 %100, 1023
  %102 = icmp ult i32 %97, %101
  br i1 %102, label %103, label %368

103:                                              ; preds = %94
  %104 = load i64, ptr %98, align 8
  %105 = trunc i64 %104 to i32
  %106 = lshr i32 %105, 21
  %107 = and i32 %106, 1
  %108 = load i32, ptr %5, align 4, !tbaa !21
  %109 = call ptr @c_common_signed_or_unsigned_type(i32 noundef %108, ptr noundef nonnull %86)
  %110 = getelementptr inbounds %struct.tree_type, ptr %109, i64 0, i32 14
  %111 = load ptr, ptr %110, align 8, !tbaa !17
  %112 = getelementptr inbounds %struct.tree_type, ptr %109, i64 0, i32 13
  %113 = load ptr, ptr %112, align 8, !tbaa !17
  %114 = icmp eq i32 %107, 0
  %115 = load i32, ptr %5, align 4
  %116 = icmp ne i32 %115, 0
  %117 = select i1 %114, i1 true, i1 %116
  %118 = load ptr, ptr %2, align 8, !tbaa !6
  br i1 %117, label %121, label %119

119:                                              ; preds = %103
  %120 = call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %118)
  store ptr %120, ptr %2, align 8, !tbaa !6
  br label %121

121:                                              ; preds = %119, %103
  %122 = phi ptr [ %120, %119 ], [ %118, %103 ]
  %123 = getelementptr inbounds %struct.tree_common, ptr %78, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !17
  %125 = icmp eq ptr %124, %122
  br i1 %125, label %138, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.tree_int_cst, ptr %78, i64 0, i32 1
  %128 = load i64, ptr %127, align 8, !tbaa !17
  %129 = getelementptr inbounds %struct.tree_int_cst, ptr %78, i64 0, i32 1, i32 1
  %130 = load i64, ptr %129, align 8, !tbaa !17
  %131 = load i64, ptr %78, align 8
  %132 = trunc i64 %131 to i32
  %133 = lshr i32 %132, 27
  %134 = trunc i32 %133 to i8
  %135 = and i8 %134, 1
  %136 = call ptr @force_fit_type_double(ptr noundef %122, i64 noundef %128, i64 noundef %130, i32 noundef 0, i8 noundef zeroext %135) #22
  %137 = load ptr, ptr %2, align 8, !tbaa !6
  br label %138

138:                                              ; preds = %126, %121
  %139 = phi ptr [ %137, %126 ], [ %122, %121 ]
  %140 = phi ptr [ %136, %126 ], [ %78, %121 ]
  %141 = icmp eq ptr %109, %139
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = call ptr @convert(ptr noundef %139, ptr noundef %113) #22
  %144 = load ptr, ptr %2, align 8, !tbaa !6
  %145 = call ptr @convert(ptr noundef %144, ptr noundef %111) #22
  br label %146

146:                                              ; preds = %142, %138
  %147 = phi ptr [ %145, %142 ], [ %111, %138 ]
  %148 = phi ptr [ %143, %142 ], [ %113, %138 ]
  %149 = icmp ne i32 %107, 0
  %150 = load i32, ptr %5, align 4
  %151 = icmp ne i32 %150, 0
  %152 = select i1 %149, i1 %151, i1 false
  %153 = getelementptr inbounds %struct.tree_int_cst, ptr %140, i64 0, i32 1
  %154 = getelementptr inbounds %struct.tree_int_cst, ptr %140, i64 0, i32 1, i32 1
  %155 = load i64, ptr %154, align 8, !tbaa !17
  %156 = getelementptr inbounds %struct.tree_int_cst, ptr %148, i64 0, i32 1
  %157 = getelementptr inbounds %struct.tree_int_cst, ptr %148, i64 0, i32 1, i32 1
  %158 = load i64, ptr %157, align 8, !tbaa !17
  br i1 %152, label %159, label %193

159:                                              ; preds = %146
  %160 = icmp ult i64 %155, %158
  br i1 %160, label %167, label %161

161:                                              ; preds = %159
  %162 = icmp eq i64 %155, %158
  br i1 %162, label %163, label %167

163:                                              ; preds = %161
  %164 = load i64, ptr %153, align 8, !tbaa !17
  %165 = load i64, ptr %156, align 8, !tbaa !17
  %166 = icmp ult i64 %164, %165
  br label %167

167:                                              ; preds = %161, %163, %159
  %168 = phi i1 [ true, %159 ], [ false, %161 ], [ %166, %163 ]
  %169 = getelementptr inbounds %struct.tree_int_cst, ptr %147, i64 0, i32 1
  %170 = getelementptr inbounds %struct.tree_int_cst, ptr %147, i64 0, i32 1, i32 1
  %171 = load i64, ptr %170, align 8, !tbaa !17
  %172 = icmp ult i64 %155, %171
  br i1 %172, label %179, label %173

173:                                              ; preds = %167
  %174 = icmp eq i64 %155, %171
  br i1 %174, label %175, label %179

175:                                              ; preds = %173
  %176 = load i64, ptr %153, align 8, !tbaa !17
  %177 = load i64, ptr %169, align 8, !tbaa !17
  %178 = icmp ult i64 %176, %177
  br label %179

179:                                              ; preds = %173, %175, %167
  %180 = phi i1 [ true, %167 ], [ false, %173 ], [ %178, %175 ]
  %181 = icmp ult i64 %158, %155
  br i1 %181, label %188, label %182

182:                                              ; preds = %179
  %183 = icmp eq i64 %158, %155
  br i1 %183, label %184, label %188

184:                                              ; preds = %182
  %185 = load i64, ptr %156, align 8, !tbaa !17
  %186 = load i64, ptr %153, align 8, !tbaa !17
  %187 = icmp ult i64 %185, %186
  br label %188

188:                                              ; preds = %182, %184, %179
  %189 = phi i1 [ true, %179 ], [ false, %182 ], [ %187, %184 ]
  %190 = icmp ult i64 %171, %155
  br i1 %190, label %235, label %191

191:                                              ; preds = %188
  %192 = icmp eq i64 %171, %155
  br i1 %192, label %227, label %235

193:                                              ; preds = %146
  %194 = icmp slt i64 %155, %158
  br i1 %194, label %201, label %195

195:                                              ; preds = %193
  %196 = icmp eq i64 %155, %158
  br i1 %196, label %197, label %201

197:                                              ; preds = %195
  %198 = load i64, ptr %153, align 8, !tbaa !17
  %199 = load i64, ptr %156, align 8, !tbaa !17
  %200 = icmp ult i64 %198, %199
  br label %201

201:                                              ; preds = %195, %197, %193
  %202 = phi i1 [ true, %193 ], [ false, %195 ], [ %200, %197 ]
  %203 = getelementptr inbounds %struct.tree_int_cst, ptr %147, i64 0, i32 1
  %204 = getelementptr inbounds %struct.tree_int_cst, ptr %147, i64 0, i32 1, i32 1
  %205 = load i64, ptr %204, align 8, !tbaa !17
  %206 = icmp slt i64 %155, %205
  br i1 %206, label %213, label %207

207:                                              ; preds = %201
  %208 = icmp eq i64 %155, %205
  br i1 %208, label %209, label %213

209:                                              ; preds = %207
  %210 = load i64, ptr %153, align 8, !tbaa !17
  %211 = load i64, ptr %203, align 8, !tbaa !17
  %212 = icmp ult i64 %210, %211
  br label %213

213:                                              ; preds = %207, %209, %201
  %214 = phi i1 [ true, %201 ], [ false, %207 ], [ %212, %209 ]
  %215 = icmp slt i64 %158, %155
  br i1 %215, label %222, label %216

216:                                              ; preds = %213
  %217 = icmp eq i64 %158, %155
  br i1 %217, label %218, label %222

218:                                              ; preds = %216
  %219 = load i64, ptr %156, align 8, !tbaa !17
  %220 = load i64, ptr %153, align 8, !tbaa !17
  %221 = icmp ult i64 %219, %220
  br label %222

222:                                              ; preds = %216, %218, %213
  %223 = phi i1 [ true, %213 ], [ false, %216 ], [ %221, %218 ]
  %224 = icmp slt i64 %205, %155
  br i1 %224, label %235, label %225

225:                                              ; preds = %222
  %226 = icmp eq i64 %205, %155
  br i1 %226, label %227, label %235

227:                                              ; preds = %225, %191
  %228 = phi ptr [ %169, %191 ], [ %203, %225 ]
  %229 = phi i1 [ %168, %191 ], [ %202, %225 ]
  %230 = phi i1 [ %180, %191 ], [ %214, %225 ]
  %231 = phi i1 [ %189, %191 ], [ %223, %225 ]
  %232 = load i64, ptr %228, align 8, !tbaa !17
  %233 = load i64, ptr %153, align 8, !tbaa !17
  %234 = icmp ult i64 %232, %233
  br label %235

235:                                              ; preds = %227, %222, %225, %188, %191
  %236 = phi i1 [ %168, %191 ], [ %168, %188 ], [ %202, %225 ], [ %202, %222 ], [ %229, %227 ]
  %237 = phi i1 [ %180, %191 ], [ %180, %188 ], [ %214, %225 ], [ %214, %222 ], [ %230, %227 ]
  %238 = phi i1 [ %189, %191 ], [ %189, %188 ], [ %223, %225 ], [ %223, %222 ], [ %231, %227 ]
  %239 = phi i1 [ false, %191 ], [ true, %188 ], [ false, %225 ], [ true, %222 ], [ %234, %227 ]
  switch i32 %79, label %271 [
    i32 102, label %240
    i32 101, label %244
    i32 97, label %248
    i32 99, label %253
    i32 98, label %258
    i32 100, label %263
  ]

240:                                              ; preds = %235
  %241 = select i1 %239, i1 true, i1 %236
  %242 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %243 = select i1 %241, ptr %242, ptr null
  br label %268

244:                                              ; preds = %235
  %245 = select i1 %239, i1 true, i1 %236
  %246 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %247 = select i1 %245, ptr %246, ptr null
  br label %268

248:                                              ; preds = %235
  %249 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %250 = select i1 %239, ptr %249, ptr null
  %251 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %252 = select i1 %238, ptr %250, ptr %251
  br label %268

253:                                              ; preds = %235
  %254 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %255 = select i1 %236, ptr %254, ptr null
  %256 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %257 = select i1 %237, ptr %255, ptr %256
  br label %268

258:                                              ; preds = %235
  %259 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %260 = select i1 %237, ptr null, ptr %259
  %261 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %262 = select i1 %236, ptr %261, ptr %260
  br label %268

263:                                              ; preds = %235
  %264 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %265 = select i1 %238, ptr null, ptr %264
  %266 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %267 = select i1 %239, ptr %266, ptr %265
  br label %268

268:                                              ; preds = %263, %258, %253, %248, %244, %240
  %269 = phi ptr [ %243, %240 ], [ %247, %244 ], [ %252, %248 ], [ %257, %253 ], [ %262, %258 ], [ %267, %263 ]
  %270 = select i1 %114, i1 true, i1 %151
  br i1 %270, label %284, label %273

271:                                              ; preds = %235
  %272 = select i1 %114, i1 true, i1 %151
  br i1 %272, label %284, label %280

273:                                              ; preds = %268
  %274 = icmp eq ptr %269, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %273
  switch i32 %79, label %280 [
    i32 97, label %277
    i32 100, label %277
    i32 98, label %276
    i32 99, label %276
  ]

276:                                              ; preds = %275, %275
  br label %277

277:                                              ; preds = %275, %275, %276
  %278 = phi ptr [ %110, %276 ], [ %112, %275 ], [ %112, %275 ]
  %279 = load ptr, ptr %278, align 8, !tbaa !17
  br label %280

280:                                              ; preds = %277, %271, %275, %273
  %281 = phi ptr [ %140, %275 ], [ %140, %273 ], [ %140, %271 ], [ %279, %277 ]
  %282 = phi ptr [ %269, %275 ], [ null, %273 ], [ null, %271 ], [ null, %277 ]
  %283 = call ptr @c_common_signed_or_unsigned_type(i32 noundef 1, ptr noundef nonnull %109)
  br label %284

284:                                              ; preds = %271, %280, %268
  %285 = phi ptr [ %140, %268 ], [ %281, %280 ], [ %140, %271 ]
  %286 = phi ptr [ %109, %268 ], [ %283, %280 ], [ %109, %271 ]
  %287 = phi ptr [ %269, %268 ], [ %282, %280 ], [ null, %271 ]
  %288 = load i64, ptr %77, align 8
  %289 = and i64 %288, 65535
  %290 = icmp eq i64 %289, 23
  br i1 %290, label %301, label %291

291:                                              ; preds = %284
  %292 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8, !tbaa !6
  %293 = icmp eq ptr %287, %292
  br i1 %293, label %294, label %296

294:                                              ; preds = %291
  %295 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 206, ptr noundef nonnull @.str.328) #22
  br label %296

296:                                              ; preds = %294, %291
  %297 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  %298 = icmp eq ptr %287, %297
  br i1 %298, label %299, label %301

299:                                              ; preds = %296
  %300 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 206, ptr noundef nonnull @.str.329) #22
  br label %301

301:                                              ; preds = %296, %299, %284
  %302 = icmp eq ptr %287, null
  br i1 %302, label %475, label %303

303:                                              ; preds = %301
  %304 = load i64, ptr %77, align 8
  %305 = and i64 %304, 65536
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %482, label %307

307:                                              ; preds = %303
  %308 = getelementptr inbounds %struct.tree_common, ptr %287, i64 0, i32 2
  %309 = load ptr, ptr %308, align 8, !tbaa !17
  %310 = call ptr @build2_stat(i32 noundef 52, ptr noundef %309, ptr noundef nonnull %77, ptr noundef nonnull %287) #22
  br label %482

311:                                              ; preds = %73
  %312 = select i1 %81, i1 %82, i1 false
  br i1 %312, label %313, label %368

313:                                              ; preds = %311
  %314 = getelementptr inbounds %struct.tree_common, ptr %77, i64 0, i32 2
  %315 = load ptr, ptr %314, align 8, !tbaa !17
  %316 = load i64, ptr %315, align 8
  %317 = and i64 %316, 65535
  %318 = icmp eq i64 %317, 14
  br i1 %318, label %319, label %321

319:                                              ; preds = %313
  %320 = call i32 @vector_type_mode(ptr noundef nonnull %315) #22
  br label %326

321:                                              ; preds = %313
  %322 = getelementptr inbounds %struct.tree_type, ptr %315, i64 0, i32 6
  %323 = load i32, ptr %322, align 4
  %324 = lshr i32 %323, 16
  %325 = and i32 %324, 255
  br label %326

326:                                              ; preds = %321, %319
  %327 = phi i32 [ %320, %319 ], [ %325, %321 ]
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !17
  %331 = icmp eq i8 %330, 9
  br i1 %331, label %332, label %334

332:                                              ; preds = %326
  %333 = load ptr, ptr %314, align 8, !tbaa !17
  br label %354

334:                                              ; preds = %326
  %335 = getelementptr inbounds %struct.tree_common, ptr %78, i64 0, i32 2
  %336 = load ptr, ptr %335, align 8, !tbaa !17
  %337 = load i64, ptr %336, align 8
  %338 = and i64 %337, 65535
  %339 = icmp eq i64 %338, 14
  br i1 %339, label %340, label %342

340:                                              ; preds = %334
  %341 = call i32 @vector_type_mode(ptr noundef nonnull %336) #22
  br label %347

342:                                              ; preds = %334
  %343 = getelementptr inbounds %struct.tree_type, ptr %336, i64 0, i32 6
  %344 = load i32, ptr %343, align 4
  %345 = lshr i32 %344, 16
  %346 = and i32 %345, 255
  br label %347

347:                                              ; preds = %342, %340
  %348 = phi i32 [ %341, %340 ], [ %346, %342 ]
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %349
  %351 = load i8, ptr %350, align 1, !tbaa !17
  %352 = icmp eq i8 %351, 9
  %353 = load ptr, ptr %314, align 8, !tbaa !17
  br i1 %352, label %354, label %359

354:                                              ; preds = %332, %347
  %355 = phi ptr [ %333, %332 ], [ %353, %347 ]
  %356 = getelementptr inbounds %struct.tree_common, ptr %78, i64 0, i32 2
  %357 = load ptr, ptr %356, align 8, !tbaa !17
  %358 = call ptr @common_type(ptr noundef %355, ptr noundef %357) #22
  br label %475

359:                                              ; preds = %347
  %360 = getelementptr inbounds %struct.tree_type, ptr %353, i64 0, i32 6
  %361 = load i32, ptr %360, align 4
  %362 = load ptr, ptr %335, align 8, !tbaa !17
  %363 = getelementptr inbounds %struct.tree_type, ptr %362, i64 0, i32 6
  %364 = load i32, ptr %363, align 4
  %365 = xor i32 %364, %361
  %366 = and i32 %365, 1023
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %475, label %368

368:                                              ; preds = %84, %90, %94, %311, %359
  %369 = load i32, ptr %5, align 4, !tbaa !21
  %370 = load i32, ptr %6, align 4, !tbaa !21
  %371 = icmp eq i32 %369, %370
  %372 = icmp eq i32 %75, %76
  %373 = select i1 %371, i1 %372, i1 false
  %374 = load ptr, ptr %2, align 8, !tbaa !6
  br i1 %373, label %375, label %413

375:                                              ; preds = %368
  %376 = getelementptr inbounds %struct.tree_common, ptr %77, i64 0, i32 2
  %377 = load ptr, ptr %376, align 8, !tbaa !17
  %378 = getelementptr inbounds %struct.tree_type, ptr %377, i64 0, i32 6
  %379 = load i32, ptr %378, align 4
  %380 = and i32 %379, 1023
  %381 = getelementptr inbounds %struct.tree_type, ptr %374, i64 0, i32 6
  %382 = load i32, ptr %381, align 4
  %383 = and i32 %382, 1023
  %384 = icmp ult i32 %380, %383
  br i1 %384, label %385, label %413

385:                                              ; preds = %375
  %386 = getelementptr inbounds %struct.tree_common, ptr %78, i64 0, i32 2
  %387 = load ptr, ptr %386, align 8, !tbaa !17
  %388 = getelementptr inbounds %struct.tree_type, ptr %387, i64 0, i32 6
  %389 = load i32, ptr %388, align 4
  %390 = and i32 %389, 1023
  %391 = icmp ult i32 %390, %383
  br i1 %391, label %392, label %413

392:                                              ; preds = %385
  %393 = call ptr @common_type(ptr noundef nonnull %377, ptr noundef nonnull %387) #22
  %394 = load i32, ptr %5, align 4, !tbaa !21
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %402

396:                                              ; preds = %392
  %397 = load ptr, ptr %2, align 8, !tbaa !6
  %398 = load i64, ptr %397, align 8
  %399 = trunc i64 %398 to i32
  %400 = lshr i32 %399, 21
  %401 = and i32 %400, 1
  br label %402

402:                                              ; preds = %396, %392
  %403 = phi i32 [ 1, %392 ], [ %401, %396 ]
  %404 = call ptr @c_common_signed_or_unsigned_type(i32 noundef %403, ptr noundef %393)
  %405 = load i32, ptr %5, align 4, !tbaa !21
  %406 = load ptr, ptr %376, align 8, !tbaa !17
  %407 = call ptr @c_common_signed_or_unsigned_type(i32 noundef %405, ptr noundef %406)
  %408 = call ptr @convert(ptr noundef %407, ptr noundef nonnull %77) #22
  %409 = load i32, ptr %6, align 4, !tbaa !21
  %410 = load ptr, ptr %386, align 8, !tbaa !17
  %411 = call ptr @c_common_signed_or_unsigned_type(i32 noundef %409, ptr noundef %410)
  %412 = call ptr @convert(ptr noundef %411, ptr noundef nonnull %78) #22
  br label %475

413:                                              ; preds = %385, %375, %368
  br i1 %83, label %475, label %414

414:                                              ; preds = %413
  %415 = call i32 @integer_zerop(ptr noundef %74) #22
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %475, label %417

417:                                              ; preds = %414
  %418 = load ptr, ptr %2, align 8, !tbaa !6
  %419 = load i64, ptr %418, align 8
  %420 = and i64 %419, 2097152
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %475, label %422

422:                                              ; preds = %417
  switch i32 %79, label %475 [
    i32 100, label %423
    i32 97, label %441
  ]

423:                                              ; preds = %422
  %424 = load i32, ptr @warn_type_limits, align 4, !tbaa !21
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %463, label %426

426:                                              ; preds = %423
  %427 = load i32, ptr @input_location, align 4, !tbaa !21
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %7, i32 noundef %427) #22
  %428 = getelementptr inbounds %struct.expanded_location, ptr %7, i64 0, i32 3
  %429 = load i8, ptr %428, align 8, !tbaa !138
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %431, label %463

431:                                              ; preds = %426
  %432 = load i64, ptr %80, align 8
  %433 = and i64 %432, 65535
  %434 = icmp eq i64 %433, 23
  br i1 %434, label %435, label %459

435:                                              ; preds = %431
  %436 = call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %374)
  %437 = call ptr @convert(ptr noundef %436, ptr noundef nonnull %80) #22
  %438 = load i64, ptr %437, align 8
  %439 = and i64 %438, 134217728
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %463, label %459

441:                                              ; preds = %422
  %442 = load i32, ptr @warn_type_limits, align 4, !tbaa !21
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %463, label %444

444:                                              ; preds = %441
  %445 = load i32, ptr @input_location, align 4, !tbaa !21
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %8, i32 noundef %445) #22
  %446 = getelementptr inbounds %struct.expanded_location, ptr %8, i64 0, i32 3
  %447 = load i8, ptr %446, align 8, !tbaa !138
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %463

449:                                              ; preds = %444
  %450 = load i64, ptr %80, align 8
  %451 = and i64 %450, 65535
  %452 = icmp eq i64 %451, 23
  br i1 %452, label %453, label %459

453:                                              ; preds = %449
  %454 = call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %374)
  %455 = call ptr @convert(ptr noundef %454, ptr noundef nonnull %80) #22
  %456 = load i64, ptr %455, align 8
  %457 = and i64 %456, 134217728
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %463, label %459

459:                                              ; preds = %449, %453, %431, %435
  %460 = phi ptr [ @.str.330, %435 ], [ @.str.330, %431 ], [ @.str.331, %453 ], [ @.str.331, %449 ]
  %461 = phi ptr [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), %435 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), %431 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), %453 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), %449 ]
  %462 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 206, ptr noundef nonnull %460) #22
  br label %463

463:                                              ; preds = %459, %441, %444, %453, %423, %426, %435
  %464 = phi ptr [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), %435 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), %426 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), %423 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), %453 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), %444 ], [ getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), %441 ], [ %461, %459 ]
  %465 = load ptr, ptr %464, align 8, !tbaa !6
  %466 = icmp eq ptr %465, null
  br i1 %466, label %475, label %467

467:                                              ; preds = %463
  %468 = load i64, ptr %80, align 8
  %469 = and i64 %468, 65536
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %482, label %471

471:                                              ; preds = %467
  %472 = getelementptr inbounds %struct.tree_common, ptr %465, i64 0, i32 2
  %473 = load ptr, ptr %472, align 8, !tbaa !17
  %474 = call ptr @build2_stat(i32 noundef 52, ptr noundef %473, ptr noundef nonnull %80, ptr noundef nonnull %465) #22
  br label %482

475:                                              ; preds = %422, %463, %301, %359, %354, %402, %417, %414, %413
  %476 = phi ptr [ %77, %354 ], [ %408, %402 ], [ %80, %413 ], [ %80, %417 ], [ %80, %414 ], [ %77, %359 ], [ %77, %301 ], [ %80, %463 ], [ %80, %422 ]
  %477 = phi ptr [ %78, %354 ], [ %412, %402 ], [ %74, %413 ], [ %74, %417 ], [ %74, %414 ], [ %78, %359 ], [ %285, %301 ], [ %74, %463 ], [ %74, %422 ]
  %478 = phi ptr [ %358, %354 ], [ %404, %402 ], [ %374, %413 ], [ %374, %417 ], [ %374, %414 ], [ %353, %359 ], [ %286, %301 ], [ %374, %463 ], [ %374, %422 ]
  %479 = call ptr @convert(ptr noundef %478, ptr noundef %476) #22
  store ptr %479, ptr %0, align 8, !tbaa !6
  %480 = call ptr @convert(ptr noundef %478, ptr noundef %477) #22
  store ptr %480, ptr %1, align 8, !tbaa !6
  %481 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !6
  store ptr %481, ptr %2, align 8, !tbaa !6
  br label %482

482:                                              ; preds = %307, %303, %471, %467, %475
  %483 = phi ptr [ null, %475 ], [ %474, %471 ], [ %465, %467 ], [ %287, %303 ], [ %310, %307 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #22
  ret ptr %483
}

declare i32 @real_zerop(ptr noundef) local_unnamed_addr #3

declare i32 @fixed_zerop(ptr noundef) local_unnamed_addr #3

declare ptr @force_fit_type_double(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @expand_location(ptr sret(%struct.expanded_location) align 8, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @pointer_int_sum(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = load i64, ptr %8, align 8
  %10 = trunc i64 %9 to i16
  switch i16 %10, label %29 [
    i16 19, label %11
    i16 20, label %17
    i16 21, label %23
  ]

11:                                               ; preds = %4
  %12 = load i32, ptr @pedantic, align 4, !tbaa !21
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 162, i32 834
  %15 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef %14, ptr noundef nonnull @.str.332) #22
  %16 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !6
  br label %31

17:                                               ; preds = %4
  %18 = load i32, ptr @pedantic, align 4, !tbaa !21
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i32 162, i32 834
  %21 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef %20, ptr noundef nonnull @.str.333) #22
  %22 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !6
  br label %31

23:                                               ; preds = %4
  %24 = load i32, ptr @pedantic, align 4, !tbaa !21
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i32 162, i32 834
  %27 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef %26, ptr noundef nonnull @.str.334) #22
  %28 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !6
  br label %31

29:                                               ; preds = %4
  %30 = tail call ptr @size_in_bytes(ptr noundef nonnull %8) #22
  br label %31

31:                                               ; preds = %17, %29, %23, %11
  %32 = phi ptr [ %16, %11 ], [ %22, %17 ], [ %28, %23 ], [ %30, %29 ]
  tail call void @fold_defer_overflow_warnings() #22
  %33 = load i64, ptr %3, align 8
  %34 = trunc i64 %33 to i32
  %35 = and i32 %34, 65535
  %36 = add nsw i32 %35, -63
  %37 = icmp ult i32 %36, 2
  %38 = and i64 %33, 131072
  %39 = icmp eq i64 %38, 0
  %40 = and i1 %39, %37
  br i1 %40, label %41, label %94

41:                                               ; preds = %31
  %42 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 0, i32 3
  %43 = getelementptr inbounds %struct.tree_exp, ptr %3, i64 1
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = load i64, ptr %44, align 8
  %46 = and i64 %45, 131072
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %94, label %48

48:                                               ; preds = %41
  %49 = load i64, ptr %32, align 8
  %50 = and i64 %49, 131072
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %94, label %52

52:                                               ; preds = %48
  %53 = load ptr, ptr %42, align 8, !tbaa !17
  %54 = getelementptr inbounds %struct.tree_common, ptr %53, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = load i64, ptr %55, align 8
  %57 = and i64 %56, 65535
  %58 = icmp eq i64 %57, 8
  br i1 %58, label %59, label %94

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = load i64, ptr %61, align 8
  %63 = and i64 %62, 2097152
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.tree_type, ptr %61, i64 0, i32 6
  %67 = load i32, ptr %66, align 4
  %68 = load ptr, ptr %5, align 8, !tbaa !17
  %69 = getelementptr inbounds %struct.tree_type, ptr %68, i64 0, i32 6
  %70 = load i32, ptr %69, align 4
  %71 = xor i32 %70, %67
  %72 = and i32 %71, 1023
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %94

74:                                               ; preds = %65, %59
  %75 = and i64 %33, 65535
  %76 = icmp eq i64 %75, 64
  %77 = icmp eq i32 %1, 63
  %78 = select i1 %77, i32 64, i32 63
  %79 = select i1 %76, i32 %78, i32 %1
  %80 = and i64 %45, 65535
  %81 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %80
  %82 = load i32, ptr %81, align 4, !tbaa !17
  %83 = add i32 %82, -4
  %84 = icmp ult i32 %83, 7
  br i1 %84, label %85, label %88

85:                                               ; preds = %74
  %86 = getelementptr inbounds %struct.tree_exp, ptr %44, i64 0, i32 1
  %87 = load i32, ptr %86, align 8, !tbaa !17
  br label %88

88:                                               ; preds = %74, %85
  %89 = phi i32 [ %87, %85 ], [ 0, %74 ]
  %90 = tail call ptr @convert(ptr noundef nonnull %61, ptr noundef nonnull %44) #22
  %91 = tail call ptr @build_binary_op(i32 noundef %89, i32 noundef %79, ptr noundef nonnull %2, ptr noundef %90, i32 noundef 1) #22
  %92 = load ptr, ptr %42, align 8, !tbaa !17
  %93 = tail call ptr @convert(ptr noundef nonnull %61, ptr noundef %92) #22
  br label %94

94:                                               ; preds = %31, %88, %65, %52, %48, %41
  %95 = phi ptr [ %93, %88 ], [ %3, %65 ], [ %3, %52 ], [ %3, %48 ], [ %3, %41 ], [ %3, %31 ]
  %96 = phi ptr [ %91, %88 ], [ %2, %65 ], [ %2, %52 ], [ %2, %48 ], [ %2, %41 ], [ %2, %31 ]
  %97 = getelementptr inbounds %struct.tree_common, ptr %95, i64 0, i32 2
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = getelementptr inbounds %struct.tree_type, ptr %98, i64 0, i32 6
  %100 = load i32, ptr %99, align 4
  %101 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %102 = getelementptr inbounds %struct.tree_type, ptr %101, i64 0, i32 6
  %103 = load i32, ptr %102, align 4
  %104 = xor i32 %103, %100
  %105 = and i32 %104, 1023
  %106 = icmp eq i32 %105, 0
  %107 = load i64, ptr %101, align 8
  br i1 %106, label %108, label %113

108:                                              ; preds = %94
  %109 = load i64, ptr %98, align 8
  %110 = xor i64 %107, %109
  %111 = and i64 %110, 2097152
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %108, %94
  %114 = and i32 %103, 1023
  %115 = trunc i64 %107 to i32
  %116 = lshr i32 %115, 21
  %117 = and i32 %116, 1
  %118 = tail call ptr @c_common_type_for_size(i32 noundef %114, i32 noundef %117)
  %119 = tail call ptr @convert(ptr noundef %118, ptr noundef nonnull %95) #22
  %120 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %121 = getelementptr inbounds %struct.tree_common, ptr %119, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !17
  br label %123

123:                                              ; preds = %113, %108
  %124 = phi ptr [ %122, %113 ], [ %98, %108 ]
  %125 = phi ptr [ %120, %113 ], [ %101, %108 ]
  %126 = phi ptr [ %119, %113 ], [ %95, %108 ]
  %127 = tail call ptr @convert(ptr noundef %124, ptr noundef %32) #22
  %128 = tail call ptr @build_binary_op(i32 noundef %0, i32 noundef 65, ptr noundef nonnull %126, ptr noundef %127, i32 noundef 1) #22
  %129 = tail call ptr @convert(ptr noundef %125, ptr noundef %128) #22
  %130 = icmp eq i32 %1, 64
  br i1 %130, label %131, label %134

131:                                              ; preds = %123
  %132 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %133 = tail call ptr @fold_build1_stat_loc(i32 noundef %0, i32 noundef 79, ptr noundef %132, ptr noundef %129) #22
  br label %134

134:                                              ; preds = %131, %123
  %135 = phi ptr [ %133, %131 ], [ %129, %123 ]
  %136 = tail call ptr @fold_build2_stat_loc(i32 noundef %0, i32 noundef 66, ptr noundef nonnull %6, ptr noundef %96, ptr noundef %135) #22
  tail call void @fold_undefer_and_ignore_overflow_warnings() #22
  ret ptr %136
}

declare ptr @size_in_bytes(ptr noundef) local_unnamed_addr #3

declare void @fold_defer_overflow_warnings() local_unnamed_addr #3

declare ptr @build_binary_op(i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @fold_undefer_and_ignore_overflow_warnings() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_wrap_maybe_const(ptr noundef %0, i8 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = and i64 %3, 65535
  %5 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %4
  %6 = load i32, ptr %5, align 4, !tbaa !17
  %7 = add i32 %6, -4
  %8 = icmp ult i32 %7, 7
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !17
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %2 ]
  %14 = load i32, ptr @c_language, align 4, !tbaa !17
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 3842, ptr noundef nonnull @.str.238) #22
  br label %18

18:                                               ; preds = %17, %12
  %19 = load ptr, ptr @global_trees, align 16
  br label %20

20:                                               ; preds = %28, %18
  %21 = phi ptr [ %0, %18 ], [ %26, %28 ]
  %22 = load i64, ptr %21, align 8
  %23 = trunc i64 %22 to i16
  switch i16 %23, label %34 [
    i16 116, label %24
    i16 113, label %24
    i16 117, label %24
  ]

24:                                               ; preds = %20, %20, %20
  %25 = getelementptr inbounds %struct.tree_exp, ptr %21, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = icmp eq ptr %26, %19
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.tree_common, ptr %21, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.tree_common, ptr %26, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %30, %32
  br i1 %33, label %20, label %34, !llvm.loop !140

34:                                               ; preds = %20, %24, %28
  %35 = getelementptr inbounds %struct.tree_common, ptr %21, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = tail call ptr @build2_stat(i32 noundef 189, ptr noundef %36, ptr noundef null, ptr noundef nonnull %21) #22
  %38 = load i64, ptr %37, align 8
  %39 = and i8 %1, 1
  %40 = zext i8 %39 to i64
  %41 = shl nuw nsw i64 %40, 34
  %42 = and i64 %38, -17179869185
  %43 = or i64 %42, %41
  %44 = and i64 %3, 8388608
  %45 = or i64 %43, %44
  store i64 %45, ptr %37, align 8
  tail call void @protected_set_expr_location(ptr noundef nonnull %37, i32 noundef %13) #22
  ret ptr %37
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_save_expr(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #22
  store i8 1, ptr %2, align 1, !tbaa !17
  %3 = load i32, ptr @c_language, align 4, !tbaa !17
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call ptr @save_expr(ptr noundef %0) #22
  br label %15

8:                                                ; preds = %1
  %9 = call ptr @c_fully_fold(ptr noundef %0, i8 noundef zeroext 0, ptr noundef nonnull %2)
  %10 = call ptr @save_expr(ptr noundef %9) #22
  %11 = load i8, ptr %2, align 1, !tbaa !17
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = call ptr @c_wrap_maybe_const(ptr noundef %10, i8 noundef zeroext 1)
  br label %15

15:                                               ; preds = %8, %13, %6
  %16 = phi ptr [ %7, %6 ], [ %10, %8 ], [ %14, %13 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #22
  ret ptr %16
}

declare ptr @save_expr(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local zeroext i8 @decl_with_nonnull_addr_p(ptr nocapture noundef readonly %0) local_unnamed_addr #17 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %3
  %5 = load i32, ptr %4, align 4, !tbaa !17
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = trunc i64 %2 to i16
  switch i16 %8, label %9 [
    i16 34, label %15
    i16 30, label %15
  ]

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %11 = load i32, ptr %10, align 8
  %12 = and i32 %11, 128
  %13 = icmp eq i32 %12, 0
  %14 = zext i1 %13 to i8
  br label %15

15:                                               ; preds = %7, %7, %9, %1
  %16 = phi i8 [ 0, %1 ], [ 1, %7 ], [ %14, %9 ], [ 1, %7 ]
  ret i8 %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca i8, align 1
  br label %4

4:                                                ; preds = %141, %2
  %5 = phi ptr [ %1, %2 ], [ %142, %141 ]
  %6 = load i64, ptr %5, align 8
  %7 = trunc i64 %6 to i16
  switch i16 %7, label %204 [
    i16 101, label %8
    i16 102, label %8
    i16 109, label %8
    i16 110, label %8
    i16 98, label %8
    i16 100, label %8
    i16 97, label %8
    i16 99, label %8
    i16 106, label %8
    i16 108, label %8
    i16 105, label %8
    i16 107, label %8
    i16 104, label %8
    i16 103, label %8
    i16 91, label %21
    i16 92, label %21
    i16 93, label %21
    i16 94, label %21
    i16 95, label %21
    i16 96, label %36
    i16 0, label %259
    i16 23, label %46
    i16 24, label %52
    i16 25, label %60
    i16 29, label %85
    i16 121, label %87
    i16 123, label %115
    i16 79, label %136
    i16 82, label %136
    i16 78, label %136
    i16 190, label %136
    i16 85, label %143
    i16 86, label %143
    i16 56, label %155
    i16 116, label %172
    i16 113, label %172
    i16 53, label %194
  ]

8:                                                ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %9 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !6
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %259, label %13

13:                                               ; preds = %8
  %14 = trunc i64 %6 to i32
  %15 = and i32 %14, 65535
  %16 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = tail call ptr @build2_stat(i32 noundef %15, ptr noundef %11, ptr noundef %17, ptr noundef %19) #22
  br label %257

21:                                               ; preds = %4, %4, %4, %4, %4
  %22 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !6
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %259, label %26

26:                                               ; preds = %21
  %27 = trunc i64 %6 to i32
  %28 = and i32 %27, 65535
  %29 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %30)
  %32 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %33)
  %35 = tail call ptr @build2_stat(i32 noundef %28, ptr noundef %24, ptr noundef %31, ptr noundef %34) #22
  br label %257

36:                                               ; preds = %4
  %37 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !6
  %40 = icmp eq ptr %38, %39
  br i1 %40, label %259, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %43)
  %45 = tail call ptr @build1_stat(i32 noundef 96, ptr noundef %39, ptr noundef %44) #22
  br label %257

46:                                               ; preds = %4
  %47 = tail call i32 @integer_zerop(ptr noundef nonnull %5) #22
  %48 = icmp eq i32 %47, 0
  %49 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %50 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %51 = select i1 %48, ptr %50, ptr %49
  br label %259

52:                                               ; preds = %4
  %53 = getelementptr inbounds %struct.tree_real_cst, ptr %5, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = tail call zeroext i8 @real_compare(i32 noundef 102, ptr noundef %54, ptr noundef nonnull @dconst0) #22
  %56 = icmp eq i8 %55, 0
  %57 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %58 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %59 = select i1 %56, ptr %58, ptr %57
  br label %259

60:                                               ; preds = %4
  %61 = getelementptr inbounds %struct.tree_fixed_cst, ptr %5, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = load i64, ptr %64, align 8
  %66 = and i64 %65, 65535
  %67 = icmp eq i64 %66, 14
  br i1 %67, label %68, label %70

68:                                               ; preds = %60
  %69 = tail call i32 @vector_type_mode(ptr noundef nonnull %64) #22
  br label %75

70:                                               ; preds = %60
  %71 = getelementptr inbounds %struct.tree_type, ptr %64, i64 0, i32 6
  %72 = load i32, ptr %71, align 4
  %73 = lshr i32 %72, 16
  %74 = and i32 %73, 255
  br label %75

75:                                               ; preds = %70, %68
  %76 = phi i32 [ %69, %68 ], [ %74, %70 ]
  %77 = add i32 %76, -20
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds [18 x %struct.fixed_value], ptr @fconst0, i64 0, i64 %78
  %80 = tail call zeroext i8 @fixed_compare(i32 noundef 102, ptr noundef %62, ptr noundef nonnull %79) #22
  %81 = icmp eq i8 %80, 0
  %82 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16
  %83 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 47), align 8
  %84 = select i1 %81, ptr %83, ptr %82
  br label %259

85:                                               ; preds = %4
  %86 = tail call ptr @build_unary_op(i32 noundef %0, i32 noundef 121, ptr noundef nonnull %5, i32 noundef 0) #22
  br label %87

87:                                               ; preds = %4, %85
  %88 = phi ptr [ %86, %85 ], [ %5, %4 ]
  %89 = getelementptr inbounds %struct.tree_exp, ptr %88, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !17
  %91 = load i64, ptr %90, align 8
  %92 = and i64 %91, 65535
  %93 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !17
  %95 = icmp eq i32 %94, 3
  br i1 %95, label %96, label %106

96:                                               ; preds = %87
  %97 = trunc i64 %91 to i16
  switch i16 %97, label %98 [
    i16 34, label %103
    i16 30, label %103
  ]

98:                                               ; preds = %96
  %99 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %90, i64 0, i32 4
  %100 = load i32, ptr %99, align 8
  %101 = and i32 %100, 128
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %204

103:                                              ; preds = %96, %96, %98
  %104 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 33, ptr noundef nonnull @.str.335, ptr noundef nonnull %90) #22
  %105 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  br label %259

106:                                              ; preds = %87
  %107 = and i64 %91, 65536
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  br label %259

111:                                              ; preds = %106
  %112 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !6
  %113 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !6
  %114 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %112, ptr noundef nonnull %90, ptr noundef %113) #22
  br label %257

115:                                              ; preds = %4
  %116 = load i32, ptr getelementptr ([0 x i32], ptr @tree_code_type, i64 0, i64 123), align 4, !tbaa !17
  %117 = add i32 %116, -4
  %118 = icmp ult i32 %117, 7
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 1
  %121 = load i32, ptr %120, align 8, !tbaa !17
  br label %122

122:                                              ; preds = %115, %119
  %123 = phi i32 [ %121, %119 ], [ 0, %115 ]
  %124 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %125 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %126 = load ptr, ptr %125, align 8, !tbaa !17
  %127 = load i64, ptr %126, align 8
  %128 = and i64 %127, 65536
  %129 = icmp eq i64 %128, 0
  %130 = select i1 %129, i32 92, i32 94
  %131 = load ptr, ptr %124, align 8, !tbaa !17
  %132 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %131)
  %133 = load ptr, ptr %125, align 8, !tbaa !17
  %134 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %133)
  %135 = tail call ptr @build_binary_op(i32 noundef %123, i32 noundef %130, ptr noundef %132, ptr noundef %134, i32 noundef 0) #22
  br label %257

136:                                              ; preds = %4, %4, %4, %4
  %137 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  br label %138

138:                                              ; preds = %143, %136
  %139 = phi ptr [ %137, %136 ], [ %144, %143 ]
  %140 = load ptr, ptr %139, align 8, !tbaa !17
  br label %141

141:                                              ; preds = %138, %186
  %142 = phi ptr [ %180, %186 ], [ %140, %138 ]
  br label %4

143:                                              ; preds = %4, %4
  %144 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %145 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %146 = load ptr, ptr %145, align 8, !tbaa !17
  %147 = load i64, ptr %146, align 8
  %148 = and i64 %147, 65536
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %138, label %150

150:                                              ; preds = %143
  %151 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !6
  %152 = load ptr, ptr %144, align 8, !tbaa !17
  %153 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %152)
  %154 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %151, ptr noundef nonnull %146, ptr noundef %153) #22
  br label %257

155:                                              ; preds = %4
  %156 = load i32, ptr @c_language, align 4, !tbaa !17
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !6
  %160 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %161 = load ptr, ptr %160, align 8, !tbaa !17
  %162 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %163 = load ptr, ptr %162, align 8, !tbaa !17
  %164 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %163)
  %165 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1, i32 0, i32 1
  %166 = load ptr, ptr %165, align 8, !tbaa !17
  %167 = tail call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %166)
  br i1 %158, label %170, label %168

168:                                              ; preds = %155
  %169 = tail call ptr @fold_build3_stat_loc(i32 noundef %0, i32 noundef 56, ptr noundef %159, ptr noundef %161, ptr noundef %164, ptr noundef %167) #22
  br label %257

170:                                              ; preds = %155
  %171 = tail call ptr @build3_stat(i32 noundef 56, ptr noundef %159, ptr noundef %161, ptr noundef %164, ptr noundef %167) #22
  br label %257

172:                                              ; preds = %4, %4
  %173 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %174 = load ptr, ptr %173, align 8, !tbaa !17
  %175 = load i64, ptr %174, align 8
  %176 = and i64 %175, 65535
  %177 = icmp eq i64 %176, 12
  br i1 %177, label %204, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %180 = load ptr, ptr %179, align 8, !tbaa !17
  %181 = getelementptr inbounds %struct.tree_common, ptr %180, i64 0, i32 2
  %182 = load ptr, ptr %181, align 8, !tbaa !17
  %183 = load i64, ptr %182, align 8
  %184 = and i64 %183, 65535
  %185 = icmp eq i64 %184, 12
  br i1 %185, label %204, label %186

186:                                              ; preds = %178
  %187 = getelementptr inbounds %struct.tree_type, ptr %174, i64 0, i32 6
  %188 = load i32, ptr %187, align 4
  %189 = and i32 %188, 1023
  %190 = getelementptr inbounds %struct.tree_type, ptr %182, i64 0, i32 6
  %191 = load i32, ptr %190, align 4
  %192 = and i32 %191, 1023
  %193 = icmp ult i32 %189, %192
  br i1 %193, label %204, label %141

194:                                              ; preds = %4
  %195 = and i64 %6, 8388608
  %196 = icmp eq i64 %195, 0
  %197 = load i32, ptr @warn_parentheses, align 4
  %198 = icmp ne i32 %197, 0
  %199 = select i1 %196, i1 %198, i1 false
  br i1 %199, label %200, label %204

200:                                              ; preds = %194
  %201 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 159, ptr noundef nonnull @.str.336) #22
  %202 = load i64, ptr %5, align 8
  %203 = or i64 %202, 8388608
  store i64 %203, ptr %5, align 8
  br label %204

204:                                              ; preds = %4, %186, %172, %178, %98, %194, %200
  %205 = phi ptr [ %5, %200 ], [ %5, %194 ], [ %88, %98 ], [ %5, %178 ], [ %5, %172 ], [ %5, %186 ], [ %5, %4 ]
  %206 = getelementptr inbounds %struct.tree_common, ptr %205, i64 0, i32 2
  %207 = load ptr, ptr %206, align 8, !tbaa !17
  %208 = load i64, ptr %207, align 8
  %209 = trunc i64 %208 to i16
  switch i16 %209, label %254 [
    i16 13, label %210
    i16 11, label %244
  ]

210:                                              ; preds = %204
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #22
  store i8 1, ptr %3, align 1, !tbaa !17
  %211 = load i32, ptr @c_language, align 4, !tbaa !17
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %210
  %215 = tail call ptr @save_expr(ptr noundef nonnull %205) #22
  br label %223

216:                                              ; preds = %210
  %217 = call ptr @c_fully_fold(ptr noundef nonnull %205, i8 noundef zeroext 0, ptr noundef nonnull %3)
  %218 = call ptr @save_expr(ptr noundef %217) #22
  %219 = load i8, ptr %3, align 1, !tbaa !17
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %216
  %222 = call ptr @c_wrap_maybe_const(ptr noundef %218, i8 noundef zeroext 1)
  br label %223

223:                                              ; preds = %214, %216, %221
  %224 = phi ptr [ %215, %214 ], [ %218, %216 ], [ %222, %221 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #22
  %225 = load i64, ptr %205, align 8
  %226 = and i64 %225, 65535
  %227 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %226
  %228 = load i32, ptr %227, align 4, !tbaa !17
  %229 = add i32 %228, -4
  %230 = icmp ult i32 %229, 7
  br i1 %230, label %231, label %234

231:                                              ; preds = %223
  %232 = getelementptr inbounds %struct.tree_exp, ptr %205, i64 0, i32 1
  %233 = load i32, ptr %232, align 8, !tbaa !17
  br label %234

234:                                              ; preds = %223, %231
  %235 = phi i32 [ %233, %231 ], [ 0, %223 ]
  %236 = and i64 %225, 65536
  %237 = icmp eq i64 %236, 0
  %238 = select i1 %237, i32 92, i32 94
  %239 = call ptr @build_unary_op(i32 noundef %0, i32 noundef 43, ptr noundef %224, i32 noundef 0) #22
  %240 = call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %239)
  %241 = call ptr @build_unary_op(i32 noundef %0, i32 noundef 44, ptr noundef %224, i32 noundef 0) #22
  %242 = call ptr @c_common_truthvalue_conversion(i32 noundef %0, ptr noundef %241)
  %243 = call ptr @build_binary_op(i32 noundef %235, i32 noundef %238, ptr noundef %240, ptr noundef %242, i32 noundef 0) #22
  br label %257

244:                                              ; preds = %204
  %245 = getelementptr inbounds %struct.tree_type, ptr %207, i64 0, i32 6
  %246 = load i32, ptr %245, align 4
  %247 = lshr i32 %246, 16
  %248 = and i32 %247, 255
  %249 = add nsw i32 %248, -20
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds [18 x %struct.fixed_value], ptr @fconst0, i64 0, i64 %250
  %252 = tail call ptr @build_fixed(ptr noundef nonnull %207, ptr noundef nonnull byval(%struct.fixed_value) align 8 %251) #22
  %253 = tail call ptr @build_binary_op(i32 noundef %0, i32 noundef 102, ptr noundef nonnull %205, ptr noundef %252, i32 noundef 1) #22
  br label %259

254:                                              ; preds = %204
  %255 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !6
  %256 = tail call ptr @build_binary_op(i32 noundef %0, i32 noundef 102, ptr noundef nonnull %205, ptr noundef %255, i32 noundef 1) #22
  br label %259

257:                                              ; preds = %111, %234, %170, %168, %150, %122, %41, %26, %13
  %258 = phi ptr [ %243, %234 ], [ %169, %168 ], [ %171, %170 ], [ %154, %150 ], [ %135, %122 ], [ %114, %111 ], [ %45, %41 ], [ %35, %26 ], [ %20, %13 ]
  call void @protected_set_expr_location(ptr noundef %258, i32 noundef %0) #22
  br label %259

259:                                              ; preds = %4, %109, %103, %36, %21, %8, %257, %254, %244, %75, %52, %46
  %260 = phi ptr [ %258, %257 ], [ %253, %244 ], [ %256, %254 ], [ %84, %75 ], [ %59, %52 ], [ %51, %46 ], [ %5, %8 ], [ %5, %21 ], [ %5, %36 ], [ %110, %109 ], [ %105, %103 ], [ %5, %4 ]
  ret ptr %260
}

declare zeroext i8 @real_compare(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @fixed_compare(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_unary_op(i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @build_fixed(ptr noundef, ptr noundef byval(%struct.fixed_value) align 8) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_apply_type_quals_to_decl(i32 noundef %0, ptr nocapture noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %54, label %7

7:                                                ; preds = %2
  %8 = and i32 %0, 1
  %9 = icmp eq i32 %8, 0
  %10 = icmp eq ptr %4, null
  br i1 %9, label %11, label %16

11:                                               ; preds = %7
  br i1 %10, label %25, label %12

12:                                               ; preds = %11
  %13 = load i64, ptr %4, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 12
  br i1 %15, label %17, label %25

16:                                               ; preds = %7
  br i1 %10, label %22, label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 6
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 2048
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17, %16
  %23 = load i64, ptr %1, align 8
  %24 = or i64 %23, 1048576
  store i64 %24, ptr %1, align 8
  br label %25

25:                                               ; preds = %22, %17, %12, %11
  %26 = and i32 %0, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = load i64, ptr %1, align 8
  %30 = or i64 %29, 589824
  store i64 %30, ptr %1, align 8
  br label %31

31:                                               ; preds = %28, %25
  %32 = and i32 %0, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %54, label %34

34:                                               ; preds = %31
  %35 = icmp eq ptr %4, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %34, %41
  %37 = phi ptr [ %43, %41 ], [ %4, %34 ]
  %38 = load i64, ptr %37, align 8
  %39 = and i64 %38, 65535
  %40 = icmp eq i64 %39, 15
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.tree_common, ptr %37, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = icmp eq ptr %43, null
  br i1 %44, label %53, label %36, !llvm.loop !141

45:                                               ; preds = %36
  %46 = trunc i64 %38 to i16
  switch i16 %46, label %53 [
    i16 10, label %47
    i16 12, label %47
  ]

47:                                               ; preds = %45, %45
  %48 = getelementptr inbounds %struct.tree_common, ptr %37, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = load i64, ptr %49, align 8
  %51 = and i64 %50, 65535
  %52 = icmp eq i64 %51, 20
  br i1 %52, label %53, label %54

53:                                               ; preds = %41, %34, %45, %47
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.337) #22
  br label %54

54:                                               ; preds = %31, %53, %47, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @c_common_get_alias_set(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %3
  %5 = load i32, ptr %4, align 4, !tbaa !17
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %8, label %7

7:                                                ; preds = %8, %1
  br label %18

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 19
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %7

12:                                               ; preds = %8
  %13 = icmp eq i64 %3, 15
  br i1 %13, label %14, label %108

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = tail call i32 @get_alias_set(ptr noundef %16) #22
  br label %108

18:                                               ; preds = %7, %33
  %19 = phi i64 [ %34, %33 ], [ %2, %7 ]
  %20 = phi ptr [ %26, %33 ], [ %0, %7 ]
  %21 = trunc i64 %19 to i16
  switch i16 %21, label %35 [
    i16 41, label %22
    i16 45, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = and i64 %19, 65535
  %24 = icmp eq i64 %23, 41
  %25 = getelementptr inbounds %struct.tree_exp, ptr %20, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  br i1 %24, label %27, label %33

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.tree_common, ptr %26, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = load i64, ptr %29, align 8
  %31 = and i64 %30, 65535
  %32 = icmp eq i64 %31, 17
  br i1 %32, label %108, label %33

33:                                               ; preds = %22, %27
  %34 = load i64, ptr %26, align 8
  br label %18, !llvm.loop !142

35:                                               ; preds = %18
  br i1 %6, label %36, label %108

36:                                               ; preds = %35
  %37 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %38 = icmp eq ptr %37, %0
  %39 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8
  %40 = icmp eq ptr %39, %0
  %41 = select i1 %38, i1 true, i1 %40
  %42 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16
  %43 = icmp eq ptr %42, %0
  %44 = select i1 %41, i1 true, i1 %43
  br i1 %44, label %108, label %45

45:                                               ; preds = %36
  %46 = and i64 %2, 2162687
  %47 = icmp eq i64 %46, 2097160
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef nonnull %0)
  %50 = icmp eq ptr %49, %0
  br i1 %50, label %60, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @get_alias_set(ptr noundef %49) #22
  br label %108

53:                                               ; preds = %45
  %54 = trunc i64 %2 to i16
  switch i16 %54, label %60 [
    i16 10, label %55
    i16 12, label %55
  ]

55:                                               ; preds = %53, %53
  %56 = tail call ptr @build_type_no_quals(ptr noundef nonnull %0) #22
  %57 = icmp eq ptr %56, %0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = tail call i32 @get_alias_set(ptr noundef %56) #22
  br label %108

60:                                               ; preds = %55, %48, %53
  %61 = load i32, ptr @c_language, align 4, !tbaa !17
  %62 = icmp ne i32 %61, 0
  %63 = load i32, ptr @flag_isoc99, align 4
  %64 = icmp ne i32 %63, 0
  %65 = select i1 %62, i1 true, i1 %64
  %66 = load i32, ptr @num_in_fnames, align 4
  %67 = icmp eq i32 %66, 1
  %68 = select i1 %65, i1 true, i1 %67
  br i1 %68, label %108, label %69

69:                                               ; preds = %60
  %70 = load i64, ptr %0, align 8
  %71 = and i64 %70, 65535
  %72 = icmp eq i64 %71, 10
  br i1 %72, label %73, label %83

73:                                               ; preds = %69, %73
  %74 = phi ptr [ %76, %73 ], [ %0, %69 ]
  %75 = getelementptr inbounds %struct.tree_common, ptr %74, i64 0, i32 2
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = load i64, ptr %76, align 8
  %78 = trunc i64 %77 to i16
  switch i16 %78, label %108 [
    i16 10, label %73
    i16 16, label %79
    i16 6, label %79
    i16 18, label %79
    i16 17, label %79
  ]

79:                                               ; preds = %73, %73, %73, %73
  %80 = getelementptr inbounds %struct.tree_type, ptr %76, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = icmp eq ptr %81, null
  br i1 %82, label %108, label %83

83:                                               ; preds = %79, %69
  %84 = trunc i64 %70 to i16
  switch i16 %84, label %108 [
    i16 16, label %85
    i16 6, label %85
    i16 18, label %85
    i16 17, label %85
    i16 10, label %85
  ]

85:                                               ; preds = %83, %83, %83, %83, %83
  %86 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 2
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = icmp eq ptr %87, null
  br i1 %88, label %108, label %89

89:                                               ; preds = %85
  %90 = load ptr, ptr @type_hash_table, align 8, !tbaa !6
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 24), align 8, !tbaa !102
  %94 = tail call ptr @htab_create_alloc(i64 noundef 1021, ptr noundef nonnull @c_type_hash, ptr noundef %93, ptr noundef null, ptr noundef nonnull @ggc_calloc, ptr noundef nonnull @ggc_free) #22
  store ptr %94, ptr @type_hash_table, align 8, !tbaa !6
  br label %95

95:                                               ; preds = %92, %89
  %96 = phi ptr [ %94, %92 ], [ %90, %89 ]
  %97 = tail call ptr @htab_find_slot(ptr noundef %96, ptr noundef nonnull %0, i32 noundef 1) #22
  %98 = load ptr, ptr %97, align 8, !tbaa !6
  %99 = icmp eq ptr %98, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.tree_type, ptr %98, i64 0, i32 8
  %102 = load i32, ptr %101, align 4, !tbaa !17
  %103 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 8
  store i32 %102, ptr %103, align 4, !tbaa !17
  %104 = load ptr, ptr %97, align 8, !tbaa !6
  %105 = getelementptr inbounds %struct.tree_type, ptr %104, i64 0, i32 8
  %106 = load i32, ptr %105, align 4, !tbaa !17
  br label %108

107:                                              ; preds = %95
  store ptr %0, ptr %97, align 8, !tbaa !6
  br label %108

108:                                              ; preds = %27, %73, %58, %51, %85, %83, %60, %36, %35, %12, %79, %107, %100, %14
  %109 = phi i32 [ %17, %14 ], [ %106, %100 ], [ -1, %107 ], [ -1, %79 ], [ %52, %51 ], [ %59, %58 ], [ -1, %12 ], [ -1, %35 ], [ 0, %36 ], [ -1, %60 ], [ -1, %83 ], [ -1, %85 ], [ -1, %73 ], [ 0, %27 ]
  ret i32 %109
}

declare ptr @build_type_no_quals(ptr noundef) local_unnamed_addr #3

declare ptr @htab_create_alloc(i64 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @c_type_hash(ptr nocapture noundef readonly %0) #9 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi i32 [ 0, %1 ], [ %10, %7 ]
  %4 = phi ptr [ %0, %1 ], [ %9, %7 ]
  %5 = load i64, ptr %4, align 8
  %6 = trunc i64 %5 to i16
  switch i16 %6, label %12 [
    i16 10, label %7
    i16 6, label %13
    i16 16, label %14
    i16 18, label %15
    i16 17, label %11
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = xor i32 %3, 50343939
  br label %2

11:                                               ; preds = %2
  br label %15

12:                                               ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 4189, ptr noundef nonnull @.str.238) #22
  br label %20

13:                                               ; preds = %2
  br label %15

14:                                               ; preds = %2
  br label %15

15:                                               ; preds = %2, %14, %13, %11
  %16 = phi i32 [ 2, %11 ], [ 3, %13 ], [ 0, %14 ], [ 1, %2 ]
  %17 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = icmp eq ptr %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %12, %15
  %21 = phi ptr [ undef, %12 ], [ %18, %15 ]
  %22 = phi i32 [ undef, %12 ], [ %16, %15 ]
  br label %23

23:                                               ; preds = %20, %23
  %24 = phi ptr [ %28, %23 ], [ %21, %20 ]
  %25 = phi i32 [ %26, %23 ], [ 0, %20 ]
  %26 = add nuw nsw i32 %25, 1
  %27 = getelementptr inbounds %struct.tree_common, ptr %24, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %23, !llvm.loop !143

30:                                               ; preds = %23, %15
  %31 = phi i32 [ %16, %15 ], [ %22, %23 ]
  %32 = phi i32 [ 0, %15 ], [ %26, %23 ]
  %33 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = load i64, ptr %34, align 8
  %36 = and i64 %35, 65535
  %37 = icmp eq i64 %36, 23
  br i1 %37, label %38, label %43

38:                                               ; preds = %30
  %39 = getelementptr inbounds %struct.tree_int_cst, ptr %34, i64 0, i32 1
  %40 = load i64, ptr %39, align 8, !tbaa !17
  %41 = trunc i64 %40 to i32
  %42 = shl i32 %41, 24
  br label %43

43:                                               ; preds = %30, %38
  %44 = phi i32 [ %42, %38 ], [ 0, %30 ]
  %45 = shl i32 %32, %31
  %46 = or i32 %44, %45
  %47 = xor i32 %46, %3
  ret i32 %47
}

declare ptr @ggc_calloc(i64 noundef, i64 noundef) #3

declare void @ggc_free(ptr noundef) #3

declare ptr @htab_find_slot(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_sizeof_or_alignof_type(i32 noundef %0, ptr noundef %1, i8 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #9 {
  %5 = load i64, ptr %1, align 8
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 65535
  %8 = icmp eq i8 %2, 0
  %9 = select i1 %8, ptr @.str.12, ptr @.str.112
  %10 = icmp eq i32 %7, 20
  br i1 %10, label %11, label %29

11:                                               ; preds = %4
  br i1 %8, label %27, label %12

12:                                               ; preds = %11
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = load i32, ptr @pedantic, align 4, !tbaa !21
  %16 = icmp ne i32 %15, 0
  %17 = load i32, ptr @warn_pointer_arith, align 4
  %18 = icmp ne i32 %17, 0
  %19 = select i1 %16, i1 true, i1 %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = select i1 %16, i32 834, i32 162
  %22 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef %21, ptr noundef nonnull @.str.338) #22
  br label %25

23:                                               ; preds = %12
  %24 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %87

25:                                               ; preds = %14, %20
  %26 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 18), align 16, !tbaa !6
  br label %76

27:                                               ; preds = %11
  %28 = tail call ptr @size_int_kind(i64 noundef 1, i32 noundef 0) #22
  br label %76

29:                                               ; preds = %4
  %30 = trunc i64 %5 to i16
  switch i16 %30, label %49 [
    i16 19, label %31
    i16 0, label %31
  ]

31:                                               ; preds = %29, %29
  %32 = icmp eq i32 %7, 19
  %33 = icmp ne i32 %3, 0
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %44

35:                                               ; preds = %31
  %36 = load i32, ptr @pedantic, align 4, !tbaa !21
  %37 = icmp ne i32 %36, 0
  %38 = load i32, ptr @warn_pointer_arith, align 4
  %39 = icmp ne i32 %38, 0
  %40 = select i1 %37, i1 true, i1 %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = select i1 %37, i32 834, i32 162
  %43 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef %42, ptr noundef nonnull @.str.339, ptr noundef nonnull %9) #22
  br label %47

44:                                               ; preds = %31
  br i1 %33, label %47, label %45

45:                                               ; preds = %44
  %46 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %87

47:                                               ; preds = %35, %44, %41
  %48 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 18), align 16, !tbaa !6
  br label %76

49:                                               ; preds = %29
  %50 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = icmp eq i32 %3, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %53
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.340, ptr noundef nonnull %9, ptr noundef nonnull %1) #22
  br label %56

56:                                               ; preds = %55, %53
  %57 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  br label %76

58:                                               ; preds = %49
  br i1 %8, label %70, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %63 = getelementptr inbounds %struct.tree_type, ptr %62, i64 0, i32 6
  %64 = load i32, ptr %63, align 4
  %65 = lshr i32 %64, 3
  %66 = and i32 %65, 127
  %67 = zext i32 %66 to i64
  %68 = tail call ptr @size_int_kind(i64 noundef %67, i32 noundef 0) #22
  %69 = tail call ptr @size_binop_loc(i32 noundef %0, i32 noundef 68, ptr noundef %61, ptr noundef %68) #22
  br label %76

70:                                               ; preds = %58
  %71 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 7
  %72 = load i32, ptr %71, align 8, !tbaa !17
  %73 = lshr i32 %72, 3
  %74 = zext i32 %73 to i64
  %75 = tail call ptr @size_int_kind(i64 noundef %74, i32 noundef 0) #22
  br label %76

76:                                               ; preds = %47, %59, %70, %56, %25, %27
  %77 = phi ptr [ %26, %25 ], [ %28, %27 ], [ %48, %47 ], [ %69, %59 ], [ %75, %70 ], [ %57, %56 ]
  %78 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %79 = tail call ptr @fold_convert_loc(i32 noundef %0, ptr noundef %78, ptr noundef %77) #22
  %80 = getelementptr inbounds %struct.tree_common, ptr %79, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.tree_type, ptr %81, i64 0, i32 6
  %83 = load i32, ptr %82, align 4
  %84 = and i32 %83, 1024
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %76
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 4414, ptr noundef nonnull @.str.238) #22
  br label %87

87:                                               ; preds = %86, %76, %45, %23
  %88 = phi ptr [ %24, %23 ], [ %46, %45 ], [ %79, %76 ], [ %79, %86 ]
  ret ptr %88
}

declare ptr @size_binop_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_alignof_expr(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %1, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %69 [
    i16 32, label %5
    i16 29, label %5
    i16 41, label %11
    i16 47, label %32
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 3
  %7 = load i32, ptr %6, align 8, !tbaa !17
  %8 = lshr i32 %7, 3
  %9 = zext i32 %8 to i64
  %10 = tail call ptr @size_int_kind(i64 noundef %9, i32 noundef 0) #22
  br label %73

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 1
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %13, i64 0, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 524288
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.341) #22
  %19 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 18), align 16, !tbaa !6
  br label %73

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = load i64, ptr %22, align 8
  %24 = and i64 %23, 65535
  %25 = icmp eq i64 %24, 31
  br i1 %25, label %26, label %69

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %22, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !17
  %29 = lshr i32 %28, 3
  %30 = zext i32 %29 to i64
  %31 = tail call ptr @size_int_kind(i64 noundef %30, i32 noundef 0) #22
  br label %73

32:                                               ; preds = %2
  %33 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.tree_common, ptr %34, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.tree_common, ptr %36, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = getelementptr inbounds %struct.tree_type, ptr %38, i64 0, i32 7
  %40 = load i32, ptr %39, align 8, !tbaa !17
  br label %41

41:                                               ; preds = %55, %32
  %42 = phi ptr [ %34, %32 ], [ %49, %55 ]
  %43 = phi ptr [ %34, %32 ], [ %61, %55 ]
  %44 = phi i32 [ %40, %32 ], [ %62, %55 ]
  %45 = load i64, ptr %42, align 8
  %46 = trunc i64 %45 to i16
  switch i16 %46, label %63 [
    i16 116, label %47
    i16 113, label %47
  ]

47:                                               ; preds = %41, %41
  %48 = getelementptr inbounds %struct.tree_exp, ptr %42, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.tree_common, ptr %49, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = load i64, ptr %51, align 8
  %53 = and i64 %52, 65535
  %54 = icmp eq i64 %53, 10
  br i1 %54, label %55, label %63

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.tree_common, ptr %51, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.tree_type, ptr %57, i64 0, i32 7
  %59 = load i32, ptr %58, align 8, !tbaa !17
  %60 = icmp sgt i32 %59, %44
  %61 = select i1 %60, ptr %49, ptr %43
  %62 = tail call i32 @llvm.smax.i32(i32 %59, i32 %44)
  br label %41, !llvm.loop !144

63:                                               ; preds = %41, %47
  %64 = getelementptr inbounds %struct.tree_common, ptr %43, i64 0, i32 2
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.tree_common, ptr %65, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = tail call ptr @c_sizeof_or_alignof_type(i32 noundef %0, ptr noundef %67, i8 noundef zeroext 0, i32 noundef 1)
  br label %77

69:                                               ; preds = %2, %20
  %70 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = tail call ptr @c_sizeof_or_alignof_type(i32 noundef %0, ptr noundef %71, i8 noundef zeroext 0, i32 noundef 1)
  br label %77

73:                                               ; preds = %18, %26, %5
  %74 = phi ptr [ %10, %5 ], [ %19, %18 ], [ %31, %26 ]
  %75 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %76 = tail call ptr @fold_convert_loc(i32 noundef %0, ptr noundef %75, ptr noundef %74) #22
  br label %77

77:                                               ; preds = %73, %69, %63
  %78 = phi ptr [ %76, %73 ], [ %68, %63 ], [ %72, %69 ]
  ret ptr %78
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_common_nodes_and_builtins() local_unnamed_addr #9 {
  %1 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 28, ptr noundef null, ptr noundef %1) #22
  %2 = load ptr, ptr @integer_types, align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 29, ptr noundef nonnull @.str.71, ptr noundef %2) #22
  %3 = load i32, ptr @c_language, align 4, !tbaa !17
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %0
  %7 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 10, ptr noundef null, ptr noundef %7) #22
  br label %8

8:                                                ; preds = %6, %0
  %9 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 2, ptr noundef nonnull @.str.342, ptr noundef %9) #22
  %10 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 1, ptr noundef nonnull @.str.343, ptr noundef %10) #22
  %11 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.344, ptr noundef %11) #22
  %12 = load i32, ptr @c_language, align 4, !tbaa !17
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.345, ptr noundef %16) #22
  br label %17

17:                                               ; preds = %15, %8
  %18 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.346, ptr noundef %18) #22
  %19 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.347, ptr noundef %19) #22
  %20 = load i32, ptr @c_language, align 4, !tbaa !17
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.348, ptr noundef %24) #22
  br label %25

25:                                               ; preds = %23, %17
  %26 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 7, ptr noundef nonnull @.str.349, ptr noundef %26) #22
  %27 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.350, ptr noundef %27) #22
  %28 = load i32, ptr @c_language, align 4, !tbaa !17
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.351, ptr noundef %32) #22
  br label %33

33:                                               ; preds = %31, %25
  %34 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.352, ptr noundef %34) #22
  %35 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.353, ptr noundef %35) #22
  %36 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %37 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 1), align 8, !tbaa !6
  %38 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %37) #22
  %39 = tail call ptr %36(ptr noundef %38) #22
  %40 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %41 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 2), align 16, !tbaa !6
  %42 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %41) #22
  %43 = tail call ptr %40(ptr noundef %42) #22
  %44 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %45 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 3), align 8, !tbaa !6
  %46 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %45) #22
  %47 = tail call ptr %44(ptr noundef %46) #22
  %48 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %49 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 4), align 16, !tbaa !6
  %50 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %49) #22
  %51 = tail call ptr %48(ptr noundef %50) #22
  %52 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %53 = tail call zeroext i8 %52(i32 noundef 18) #22
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %33
  %56 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %57 = tail call ptr @get_identifier(ptr noundef nonnull @.str.354) #22
  %58 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 5), align 8, !tbaa !6
  %59 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %57, ptr noundef %58) #22
  %60 = tail call ptr %56(ptr noundef %59) #22
  br label %61

61:                                               ; preds = %55, %33
  %62 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %63 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 6), align 16, !tbaa !6
  %64 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %63) #22
  %65 = tail call ptr %62(ptr noundef %64) #22
  %66 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %67 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 7), align 8, !tbaa !6
  %68 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %67) #22
  %69 = tail call ptr %66(ptr noundef %68) #22
  %70 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %71 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 8), align 16, !tbaa !6
  %72 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %71) #22
  %73 = tail call ptr %70(ptr noundef %72) #22
  %74 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %75 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 9), align 8, !tbaa !6
  %76 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %75) #22
  %77 = tail call ptr %74(ptr noundef %76) #22
  %78 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %79 = tail call zeroext i8 %78(i32 noundef 18) #22
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %61
  %82 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %83 = tail call ptr @get_identifier(ptr noundef nonnull @.str.355) #22
  %84 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 10), align 16, !tbaa !6
  %85 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %83, ptr noundef %84) #22
  %86 = tail call ptr %82(ptr noundef %85) #22
  br label %87

87:                                               ; preds = %81, %61
  %88 = tail call ptr @make_signed_type(i32 noundef 128) #22
  store ptr %88, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 9), align 8, !tbaa !6
  %89 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %90 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %88) #22
  %91 = tail call ptr %89(ptr noundef %90) #22
  %92 = tail call ptr @make_unsigned_type(i32 noundef 128) #22
  store ptr %92, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 10), align 16, !tbaa !6
  %93 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %94 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef null, ptr noundef %92) #22
  %95 = tail call ptr %93(ptr noundef %94) #22
  %96 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  %97 = tail call ptr @identifier_global_value(ptr noundef %96) #22
  %98 = getelementptr inbounds %struct.tree_common, ptr %97, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  store ptr %99, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %100 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %99)
  store ptr %100, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 5), align 8, !tbaa !6
  %101 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  tail call void @set_sizetype(ptr noundef %101) #22
  %102 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %103 = tail call ptr @identifier_global_value(ptr noundef %102) #22
  %104 = getelementptr inbounds %struct.tree_common, ptr %103, i64 0, i32 2
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  store ptr %105, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 42), align 16, !tbaa !6
  %106 = load i32, ptr @flag_short_double, align 4, !tbaa !21
  tail call void @build_common_tree_nodes_2(i32 noundef %106) #22
  %107 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 30, ptr noundef null, ptr noundef %107) #22
  %108 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 31, ptr noundef null, ptr noundef %108) #22
  %109 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.356, ptr noundef %109) #22
  %110 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %111 = tail call zeroext i8 %110(i32 noundef 42) #22
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %125, label %113

113:                                              ; preds = %87
  %114 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %115 = tail call zeroext i8 %114(i32 noundef 43) #22
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %113
  %118 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 58), align 8, !tbaa !39
  %119 = tail call zeroext i8 %118(i32 noundef 44) #22
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 60, ptr noundef null, ptr noundef %122) #22
  %123 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 61, ptr noundef null, ptr noundef %123) #22
  %124 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 62, ptr noundef null, ptr noundef %124) #22
  br label %125

125:                                              ; preds = %121, %117, %113, %87
  %126 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 20), align 8, !tbaa !146
  %127 = tail call zeroext i8 %126() #22
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %162, label %129

129:                                              ; preds = %125
  %130 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.357, ptr noundef %130) #22
  %131 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 63, ptr noundef null, ptr noundef %131) #22
  %132 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.358, ptr noundef %132) #22
  %133 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.359, ptr noundef %133) #22
  %134 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.360, ptr noundef %134) #22
  %135 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.361, ptr noundef %135) #22
  %136 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.362, ptr noundef %136) #22
  %137 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.363, ptr noundef %137) #22
  %138 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.364, ptr noundef %138) #22
  %139 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.365, ptr noundef %139) #22
  %140 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.366, ptr noundef %140) #22
  %141 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.367, ptr noundef %141) #22
  %142 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.368, ptr noundef %142) #22
  %143 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.369, ptr noundef %143) #22
  %144 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.370, ptr noundef %144) #22
  %145 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.371, ptr noundef %145) #22
  %146 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.372, ptr noundef %146) #22
  %147 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 64, ptr noundef null, ptr noundef %147) #22
  %148 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.373, ptr noundef %148) #22
  %149 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.374, ptr noundef %149) #22
  %150 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.375, ptr noundef %150) #22
  %151 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.376, ptr noundef %151) #22
  %152 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.377, ptr noundef %152) #22
  %153 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.378, ptr noundef %153) #22
  %154 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.379, ptr noundef %154) #22
  %155 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.380, ptr noundef %155) #22
  %156 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.381, ptr noundef %156) #22
  %157 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.382, ptr noundef %157) #22
  %158 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.383, ptr noundef %158) #22
  %159 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.384, ptr noundef %159) #22
  %160 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.385, ptr noundef %160) #22
  %161 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 152, ptr noundef nonnull @.str.386, ptr noundef %161) #22
  br label %162

162:                                              ; preds = %129, %125
  %163 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %164 = tail call ptr @get_identifier(ptr noundef nonnull @.str.387) #22
  %165 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %166 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %164, ptr noundef %165) #22
  %167 = tail call ptr %163(ptr noundef %166) #22
  %168 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %169 = tail call ptr @get_identifier(ptr noundef nonnull @.str.388) #22
  %170 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 28), align 16, !tbaa !6
  %171 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %169, ptr noundef %170) #22
  %172 = tail call ptr %168(ptr noundef %171) #22
  %173 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %174 = tail call ptr @get_identifier(ptr noundef nonnull @.str.389) #22
  %175 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 29), align 8, !tbaa !6
  %176 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %174, ptr noundef %175) #22
  %177 = tail call ptr %173(ptr noundef %176) #22
  %178 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %179 = tail call ptr @get_identifier(ptr noundef nonnull @.str.390) #22
  %180 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 30), align 16, !tbaa !6
  %181 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %179, ptr noundef %180) #22
  %182 = tail call ptr %178(ptr noundef %181) #22
  %183 = load i32, ptr @c_language, align 4, !tbaa !17
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %189, label %186

186:                                              ; preds = %162
  %187 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %188 = tail call ptr @build_variant_type_copy(ptr noundef %187) #22
  store ptr %188, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 48), align 16, !tbaa !6
  br label %189

189:                                              ; preds = %186, %162
  %190 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 32, ptr noundef null, ptr noundef %190) #22
  %191 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %192 = getelementptr inbounds %struct.tree_type, ptr %191, i64 0, i32 12
  %193 = load ptr, ptr %192, align 8, !tbaa !17
  store ptr null, ptr %192, align 8, !tbaa !17
  %194 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %195 = tail call ptr @build_qualified_type(ptr noundef %194, i32 noundef 1) #22
  %196 = getelementptr inbounds %struct.tree_type, ptr %195, i64 0, i32 12
  store ptr %193, ptr %196, align 8, !tbaa !17
  %197 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %198 = getelementptr inbounds %struct.tree_type, ptr %197, i64 0, i32 12
  store ptr %193, ptr %198, align 8, !tbaa !17
  %199 = tail call ptr @make_node_stat(i32 noundef 23) #22
  store ptr %199, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 53), align 8, !tbaa !6
  %200 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %201 = getelementptr inbounds %struct.tree_common, ptr %199, i64 0, i32 2
  store ptr %200, ptr %201, align 8, !tbaa !17
  %202 = tail call ptr @build_void_list_node() #22
  store ptr %202, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %203 = tail call ptr @size_int_kind(i64 noundef 200, i32 noundef 0) #22
  %204 = tail call ptr @build_index_type(ptr noundef %203) #22
  %205 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %206 = tail call ptr @build_array_type(ptr noundef %205, ptr noundef %204) #22
  store ptr %206, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 38), align 16, !tbaa !6
  %207 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %208 = tail call ptr @build_array_type(ptr noundef %207, ptr noundef %204) #22
  store ptr %208, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 42), align 16, !tbaa !6
  %209 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %210 = tail call ptr @build_pointer_type(ptr noundef %209) #22
  store ptr %210, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 43), align 8, !tbaa !6
  %211 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %212 = tail call ptr @build_qualified_type(ptr noundef %211, i32 noundef 1) #22
  %213 = tail call ptr @build_pointer_type(ptr noundef %212) #22
  store ptr %213, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 44), align 16, !tbaa !6
  %214 = load i32, ptr @flag_short_wchar, align 4, !tbaa !21
  %215 = icmp eq i32 %214, 0
  %216 = select i1 %215, ptr @.str.342, ptr @.str.350
  %217 = tail call ptr @get_identifier(ptr noundef nonnull %216) #22
  store ptr %217, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 2), align 16, !tbaa !6
  %218 = tail call ptr @identifier_global_value(ptr noundef %217) #22
  %219 = getelementptr inbounds %struct.tree_common, ptr %218, i64 0, i32 2
  %220 = load ptr, ptr %219, align 8, !tbaa !17
  store ptr %220, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 2), align 16, !tbaa !6
  %221 = getelementptr inbounds %struct.tree_type, ptr %220, i64 0, i32 6
  %222 = load i32, ptr %221, align 4
  %223 = and i32 %222, 1023
  store ptr %220, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 3), align 8, !tbaa !6
  %224 = load i32, ptr @c_language, align 4, !tbaa !17
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %238, label %227

227:                                              ; preds = %189
  %228 = load i64, ptr %220, align 8
  %229 = and i64 %228, 2097152
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %233, label %231

231:                                              ; preds = %227
  %232 = tail call ptr @make_unsigned_type(i32 noundef %223) #22
  br label %235

233:                                              ; preds = %227
  %234 = tail call ptr @make_signed_type(i32 noundef %223) #22
  br label %235

235:                                              ; preds = %233, %231
  %236 = phi ptr [ %234, %233 ], [ %232, %231 ]
  store ptr %236, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 2), align 16, !tbaa !6
  tail call void @record_builtin_type(i32 noundef 70, ptr noundef nonnull @.str.133, ptr noundef %236) #22
  %237 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 2), align 16, !tbaa !6
  br label %238

238:                                              ; preds = %235, %189
  %239 = phi ptr [ %237, %235 ], [ %220, %189 ]
  %240 = tail call ptr @build_array_type(ptr noundef %239, ptr noundef %204) #22
  store ptr %240, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 41), align 8, !tbaa !6
  %241 = tail call ptr @get_identifier(ptr noundef nonnull @.str.350) #22
  store ptr %241, ptr @c_global_trees, align 16, !tbaa !6
  %242 = tail call ptr @identifier_global_value(ptr noundef %241) #22
  %243 = getelementptr inbounds %struct.tree_common, ptr %242, i64 0, i32 2
  %244 = load ptr, ptr %243, align 8, !tbaa !17
  store ptr %244, ptr @c_global_trees, align 16, !tbaa !6
  %245 = load i32, ptr @c_language, align 4, !tbaa !17
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %257, label %248

248:                                              ; preds = %238
  %249 = getelementptr inbounds %struct.tree_type, ptr %244, i64 0, i32 6
  %250 = load i32, ptr %249, align 4
  %251 = and i32 %250, 1023
  %252 = tail call ptr @make_unsigned_type(i32 noundef %251) #22
  store ptr %252, ptr @c_global_trees, align 16, !tbaa !6
  %253 = load i32, ptr @cxx_dialect, align 4, !tbaa !17
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %255, label %257

255:                                              ; preds = %248
  tail call void @record_builtin_type(i32 noundef 91, ptr noundef nonnull @.str.72, ptr noundef %252) #22
  %256 = load ptr, ptr @c_global_trees, align 16, !tbaa !6
  br label %257

257:                                              ; preds = %248, %255, %238
  %258 = phi ptr [ %252, %248 ], [ %256, %255 ], [ %244, %238 ]
  %259 = tail call ptr @build_array_type(ptr noundef %258, ptr noundef %204) #22
  store ptr %259, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 39), align 8, !tbaa !6
  %260 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  store ptr %260, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 1), align 8, !tbaa !6
  %261 = tail call ptr @identifier_global_value(ptr noundef %260) #22
  %262 = getelementptr inbounds %struct.tree_common, ptr %261, i64 0, i32 2
  %263 = load ptr, ptr %262, align 8, !tbaa !17
  store ptr %263, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 1), align 8, !tbaa !6
  %264 = load i32, ptr @c_language, align 4, !tbaa !17
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %276, label %267

267:                                              ; preds = %257
  %268 = getelementptr inbounds %struct.tree_type, ptr %263, i64 0, i32 6
  %269 = load i32, ptr %268, align 4
  %270 = and i32 %269, 1023
  %271 = tail call ptr @make_unsigned_type(i32 noundef %270) #22
  store ptr %271, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 1), align 8, !tbaa !6
  %272 = load i32, ptr @cxx_dialect, align 4, !tbaa !17
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %274, label %276

274:                                              ; preds = %267
  tail call void @record_builtin_type(i32 noundef 92, ptr noundef nonnull @.str.73, ptr noundef %271) #22
  %275 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 1), align 8, !tbaa !6
  br label %276

276:                                              ; preds = %267, %274, %257
  %277 = phi ptr [ %271, %267 ], [ %275, %274 ], [ %263, %257 ]
  %278 = tail call ptr @build_array_type(ptr noundef %277, ptr noundef %204) #22
  store ptr %278, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 40), align 16, !tbaa !6
  %279 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  %280 = tail call ptr @identifier_global_value(ptr noundef %279) #22
  %281 = getelementptr inbounds %struct.tree_common, ptr %280, i64 0, i32 2
  %282 = load ptr, ptr %281, align 8, !tbaa !17
  store ptr %282, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 4), align 16, !tbaa !6
  %283 = tail call ptr @get_identifier(ptr noundef nonnull @.str.346) #22
  %284 = tail call ptr @identifier_global_value(ptr noundef %283) #22
  %285 = getelementptr inbounds %struct.tree_common, ptr %284, i64 0, i32 2
  %286 = load ptr, ptr %285, align 8, !tbaa !17
  store ptr %286, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 7), align 8, !tbaa !6
  %287 = tail call ptr @get_identifier(ptr noundef nonnull @.str.347) #22
  %288 = tail call ptr @identifier_global_value(ptr noundef %287) #22
  %289 = getelementptr inbounds %struct.tree_common, ptr %288, i64 0, i32 2
  %290 = load ptr, ptr %289, align 8, !tbaa !17
  store ptr %290, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 8), align 16, !tbaa !6
  %291 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %292 = tail call ptr @identifier_global_value(ptr noundef %291) #22
  %293 = getelementptr inbounds %struct.tree_common, ptr %292, i64 0, i32 2
  %294 = load ptr, ptr %293, align 8, !tbaa !17
  store ptr %294, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 11), align 8, !tbaa !6
  %295 = tail call ptr @get_identifier(ptr noundef nonnull @.str.352) #22
  %296 = tail call ptr @identifier_global_value(ptr noundef %295) #22
  %297 = getelementptr inbounds %struct.tree_common, ptr %296, i64 0, i32 2
  %298 = load ptr, ptr %297, align 8, !tbaa !17
  store ptr %298, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 12), align 16, !tbaa !6
  %299 = tail call ptr @get_identifier(ptr noundef nonnull @.str.349) #22
  %300 = tail call ptr @identifier_global_value(ptr noundef %299) #22
  %301 = getelementptr inbounds %struct.tree_common, ptr %300, i64 0, i32 2
  %302 = load ptr, ptr %301, align 8, !tbaa !17
  store ptr %302, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 13), align 8, !tbaa !6
  %303 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %304 = tail call ptr @identifier_global_value(ptr noundef %303) #22
  %305 = getelementptr inbounds %struct.tree_common, ptr %304, i64 0, i32 2
  %306 = load ptr, ptr %305, align 8, !tbaa !17
  store ptr %306, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 14), align 16, !tbaa !6
  %307 = tail call ptr @get_identifier(ptr noundef nonnull @.str.346) #22
  %308 = tail call ptr @identifier_global_value(ptr noundef %307) #22
  %309 = getelementptr inbounds %struct.tree_common, ptr %308, i64 0, i32 2
  %310 = load ptr, ptr %309, align 8, !tbaa !17
  store ptr %310, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 15), align 8, !tbaa !6
  %311 = tail call ptr @get_identifier(ptr noundef nonnull @.str.353) #22
  %312 = tail call ptr @identifier_global_value(ptr noundef %311) #22
  %313 = getelementptr inbounds %struct.tree_common, ptr %312, i64 0, i32 2
  %314 = load ptr, ptr %313, align 8, !tbaa !17
  store ptr %314, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 16), align 16, !tbaa !6
  %315 = tail call ptr @get_identifier(ptr noundef nonnull @.str.350) #22
  %316 = tail call ptr @identifier_global_value(ptr noundef %315) #22
  %317 = getelementptr inbounds %struct.tree_common, ptr %316, i64 0, i32 2
  %318 = load ptr, ptr %317, align 8, !tbaa !17
  store ptr %318, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 17), align 8, !tbaa !6
  %319 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  %320 = tail call ptr @identifier_global_value(ptr noundef %319) #22
  %321 = getelementptr inbounds %struct.tree_common, ptr %320, i64 0, i32 2
  %322 = load ptr, ptr %321, align 8, !tbaa !17
  store ptr %322, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 18), align 16, !tbaa !6
  %323 = tail call ptr @get_identifier(ptr noundef nonnull @.str.347) #22
  %324 = tail call ptr @identifier_global_value(ptr noundef %323) #22
  %325 = getelementptr inbounds %struct.tree_common, ptr %324, i64 0, i32 2
  %326 = load ptr, ptr %325, align 8, !tbaa !17
  store ptr %326, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 19), align 8, !tbaa !6
  %327 = tail call ptr @get_identifier(ptr noundef nonnull @.str.352) #22
  %328 = tail call ptr @identifier_global_value(ptr noundef %327) #22
  %329 = getelementptr inbounds %struct.tree_common, ptr %328, i64 0, i32 2
  %330 = load ptr, ptr %329, align 8, !tbaa !17
  store ptr %330, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 20), align 16, !tbaa !6
  %331 = tail call ptr @get_identifier(ptr noundef nonnull @.str.349) #22
  %332 = tail call ptr @identifier_global_value(ptr noundef %331) #22
  %333 = getelementptr inbounds %struct.tree_common, ptr %332, i64 0, i32 2
  %334 = load ptr, ptr %333, align 8, !tbaa !17
  store ptr %334, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 21), align 8, !tbaa !6
  %335 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %336 = tail call ptr @identifier_global_value(ptr noundef %335) #22
  %337 = getelementptr inbounds %struct.tree_common, ptr %336, i64 0, i32 2
  %338 = load ptr, ptr %337, align 8, !tbaa !17
  store ptr %338, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 22), align 16, !tbaa !6
  %339 = tail call ptr @get_identifier(ptr noundef nonnull @.str.346) #22
  %340 = tail call ptr @identifier_global_value(ptr noundef %339) #22
  %341 = getelementptr inbounds %struct.tree_common, ptr %340, i64 0, i32 2
  %342 = load ptr, ptr %341, align 8, !tbaa !17
  store ptr %342, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 23), align 8, !tbaa !6
  %343 = tail call ptr @get_identifier(ptr noundef nonnull @.str.353) #22
  %344 = tail call ptr @identifier_global_value(ptr noundef %343) #22
  %345 = getelementptr inbounds %struct.tree_common, ptr %344, i64 0, i32 2
  %346 = load ptr, ptr %345, align 8, !tbaa !17
  store ptr %346, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 24), align 16, !tbaa !6
  %347 = tail call ptr @get_identifier(ptr noundef nonnull @.str.350) #22
  %348 = tail call ptr @identifier_global_value(ptr noundef %347) #22
  %349 = getelementptr inbounds %struct.tree_common, ptr %348, i64 0, i32 2
  %350 = load ptr, ptr %349, align 8, !tbaa !17
  store ptr %350, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 25), align 8, !tbaa !6
  %351 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  %352 = tail call ptr @identifier_global_value(ptr noundef %351) #22
  %353 = getelementptr inbounds %struct.tree_common, ptr %352, i64 0, i32 2
  %354 = load ptr, ptr %353, align 8, !tbaa !17
  store ptr %354, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 26), align 16, !tbaa !6
  %355 = tail call ptr @get_identifier(ptr noundef nonnull @.str.347) #22
  %356 = tail call ptr @identifier_global_value(ptr noundef %355) #22
  %357 = getelementptr inbounds %struct.tree_common, ptr %356, i64 0, i32 2
  %358 = load ptr, ptr %357, align 8, !tbaa !17
  store ptr %358, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 27), align 8, !tbaa !6
  %359 = tail call ptr @get_identifier(ptr noundef nonnull @.str.352) #22
  %360 = tail call ptr @identifier_global_value(ptr noundef %359) #22
  %361 = getelementptr inbounds %struct.tree_common, ptr %360, i64 0, i32 2
  %362 = load ptr, ptr %361, align 8, !tbaa !17
  store ptr %362, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 28), align 16, !tbaa !6
  %363 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %364 = tail call ptr @identifier_global_value(ptr noundef %363) #22
  %365 = getelementptr inbounds %struct.tree_common, ptr %364, i64 0, i32 2
  %366 = load ptr, ptr %365, align 8, !tbaa !17
  store ptr %366, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 29), align 8, !tbaa !6
  %367 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %368 = tail call ptr @identifier_global_value(ptr noundef %367) #22
  %369 = getelementptr inbounds %struct.tree_common, ptr %368, i64 0, i32 2
  %370 = load ptr, ptr %369, align 8, !tbaa !17
  store ptr %370, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 30), align 16, !tbaa !6
  %371 = tail call ptr @get_identifier(ptr noundef nonnull @.str.346) #22
  %372 = tail call ptr @identifier_global_value(ptr noundef %371) #22
  %373 = getelementptr inbounds %struct.tree_common, ptr %372, i64 0, i32 2
  %374 = load ptr, ptr %373, align 8, !tbaa !17
  store ptr %374, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 31), align 8, !tbaa !6
  %375 = tail call ptr @get_identifier(ptr noundef nonnull @.str.353) #22
  %376 = tail call ptr @identifier_global_value(ptr noundef %375) #22
  %377 = getelementptr inbounds %struct.tree_common, ptr %376, i64 0, i32 2
  %378 = load ptr, ptr %377, align 8, !tbaa !17
  store ptr %378, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 32), align 16, !tbaa !6
  %379 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  %380 = tail call ptr @identifier_global_value(ptr noundef %379) #22
  %381 = getelementptr inbounds %struct.tree_common, ptr %380, i64 0, i32 2
  %382 = load ptr, ptr %381, align 8, !tbaa !17
  store ptr %382, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 33), align 8, !tbaa !6
  %383 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  %384 = tail call ptr @identifier_global_value(ptr noundef %383) #22
  %385 = getelementptr inbounds %struct.tree_common, ptr %384, i64 0, i32 2
  %386 = load ptr, ptr %385, align 8, !tbaa !17
  store ptr %386, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 34), align 16, !tbaa !6
  %387 = tail call ptr @get_identifier(ptr noundef nonnull @.str.347) #22
  %388 = tail call ptr @identifier_global_value(ptr noundef %387) #22
  %389 = getelementptr inbounds %struct.tree_common, ptr %388, i64 0, i32 2
  %390 = load ptr, ptr %389, align 8, !tbaa !17
  store ptr %390, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 35), align 8, !tbaa !6
  %391 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %392 = tail call ptr @identifier_global_value(ptr noundef %391) #22
  %393 = getelementptr inbounds %struct.tree_common, ptr %392, i64 0, i32 2
  %394 = load ptr, ptr %393, align 8, !tbaa !17
  store ptr %394, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 36), align 16, !tbaa !6
  %395 = tail call ptr @get_identifier(ptr noundef nonnull @.str.343) #22
  %396 = tail call ptr @identifier_global_value(ptr noundef %395) #22
  %397 = getelementptr inbounds %struct.tree_common, ptr %396, i64 0, i32 2
  %398 = load ptr, ptr %397, align 8, !tbaa !17
  store ptr %398, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 37), align 8, !tbaa !6
  %399 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %400 = tail call ptr @build_function_type(ptr noundef %399, ptr noundef null) #22
  store ptr %400, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 48), align 16, !tbaa !6
  %401 = tail call ptr @get_identifier(ptr noundef nonnull @.str.97) #22
  %402 = tail call ptr @identifier_global_value(ptr noundef %401) #22
  %403 = getelementptr inbounds %struct.tree_common, ptr %402, i64 0, i32 2
  %404 = load ptr, ptr %403, align 8, !tbaa !17
  store ptr %404, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 43), align 8, !tbaa !6
  %405 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 1, ptr noundef %404)
  store ptr %405, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 6), align 16, !tbaa !6
  %406 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 33, i32 1), align 8, !tbaa !145
  %407 = tail call ptr @get_identifier(ptr noundef nonnull @.str.391) #22
  %408 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 44), align 16, !tbaa !6
  %409 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %407, ptr noundef %408) #22
  %410 = tail call ptr %406(ptr noundef %409) #22
  %411 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 44), align 16, !tbaa !6
  %412 = load i64, ptr %411, align 8
  %413 = and i64 %412, 65535
  %414 = icmp eq i64 %413, 15
  br i1 %414, label %415, label %419

415:                                              ; preds = %276
  %416 = getelementptr inbounds %struct.tree_common, ptr %411, i64 0, i32 2
  %417 = load ptr, ptr %416, align 8, !tbaa !17
  %418 = tail call ptr @build_pointer_type(ptr noundef %417) #22
  br label %421

419:                                              ; preds = %276
  %420 = tail call ptr @build_reference_type(ptr noundef nonnull %411) #22
  br label %421

421:                                              ; preds = %419, %415
  %422 = phi ptr [ %418, %415 ], [ %411, %419 ]
  %423 = phi ptr [ %418, %415 ], [ %420, %419 ]
  %424 = load i32, ptr @flag_preprocess_only, align 4, !tbaa !21
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %421
  tail call fastcc void @c_define_builtins(ptr noundef %423, ptr noundef %422)
  br label %427

427:                                              ; preds = %426, %421
  %428 = tail call ptr @get_identifier(ptr noundef nonnull @.str.392) #22
  store ptr %428, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !6
  %429 = tail call ptr @make_node_stat(i32 noundef 23) #22
  store ptr %429, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 54), align 16, !tbaa !6
  %430 = tail call ptr @c_common_type_for_size(i32 noundef 32, i32 noundef 0)
  %431 = getelementptr inbounds %struct.tree_common, ptr %429, i64 0, i32 2
  store ptr %430, ptr %431, align 8, !tbaa !17
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(2016) @builtin_types, i8 0, i64 2016, i1 false)
  ret void
}

declare void @record_builtin_type(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @identifier_global_value(ptr noundef) local_unnamed_addr #3

declare void @set_sizetype(ptr noundef) local_unnamed_addr #3

declare void @build_common_tree_nodes_2(i32 noundef) local_unnamed_addr #3

declare ptr @make_node_stat(i32 noundef) local_unnamed_addr #3

declare ptr @build_void_list_node() local_unnamed_addr #3

declare ptr @build_function_type(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_reference_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @c_define_builtins(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %4 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %5 = load <2 x ptr>, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %6 = insertelement <4 x ptr> poison, ptr %3, i64 0
  %7 = insertelement <4 x ptr> %6, ptr %4, i64 1
  %8 = shufflevector <2 x ptr> %5, <2 x ptr> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %9 = shufflevector <4 x ptr> %7, <4 x ptr> %8, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  store <4 x ptr> %9, ptr @builtin_types, align 32, !tbaa !6
  %10 = load <4 x ptr>, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), align 8, !tbaa !6
  store <4 x ptr> %10, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 4), align 32, !tbaa !6
  %11 = load <2 x ptr>, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 7), align 8, !tbaa !6
  %12 = load <2 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 11), align 8, !tbaa !6
  %13 = shufflevector <2 x ptr> %11, <2 x ptr> %12, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  store <4 x ptr> %13, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 8), align 32, !tbaa !6
  %14 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 2), align 8, !tbaa !42
  %15 = load i32, ptr @word_mode, align 4, !tbaa !17
  %16 = tail call ptr %14(i32 noundef %15, i32 noundef 1) #22
  store ptr %16, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 12), align 32, !tbaa !6
  %17 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 2), align 8, !tbaa !42
  %18 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 10), align 8, !tbaa !37
  %19 = tail call i32 %18() #22
  %20 = tail call ptr %17(i32 noundef %19, i32 noundef 1) #22
  store ptr %20, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 13), align 8, !tbaa !6
  %21 = load <2 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %22 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8, !tbaa !6
  %23 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 28), align 16, !tbaa !6
  %24 = shufflevector <2 x ptr> %21, <2 x ptr> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %25 = insertelement <4 x ptr> %24, ptr %22, i64 2
  %26 = insertelement <4 x ptr> %25, ptr %23, i64 3
  store <4 x ptr> %26, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 14), align 16, !tbaa !6
  %27 = load <2 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 29), align 8, !tbaa !6
  %28 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %29 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 48), align 16, !tbaa !6
  %30 = shufflevector <2 x ptr> %27, <2 x ptr> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %31 = insertelement <4 x ptr> %30, ptr %28, i64 2
  %32 = insertelement <4 x ptr> %31, ptr %29, i64 3
  store <4 x ptr> %32, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 18), align 16, !tbaa !6
  %33 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 40), align 16, !tbaa !6
  store ptr %33, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 22), align 16, !tbaa !6
  %34 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !6
  %35 = tail call ptr @build_qualified_type(ptr noundef %34, i32 noundef 2) #22
  %36 = tail call ptr @build_pointer_type(ptr noundef %35) #22
  store ptr %36, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 23), align 8, !tbaa !6
  %37 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 2), align 8, !tbaa !42
  %38 = load i32, ptr @ptr_mode, align 4, !tbaa !17
  %39 = tail call ptr %37(i32 noundef %38, i32 noundef 0) #22
  store ptr %39, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 24), align 32, !tbaa !6
  %40 = load <4 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 34), align 16, !tbaa !6
  %41 = shufflevector <4 x ptr> %40, <4 x ptr> poison, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  store <4 x ptr> %41, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 25), align 8, !tbaa !6
  %42 = load <2 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %43 = load <2 x ptr>, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 4), align 16, !tbaa !6
  %44 = shufflevector <2 x ptr> %42, <2 x ptr> %43, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  store <4 x ptr> %44, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 29), align 8, !tbaa !6
  %45 = load <2 x ptr>, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 43), align 8, !tbaa !6
  %46 = load <2 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !6
  %47 = shufflevector <2 x ptr> %45, <2 x ptr> %46, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  store <4 x ptr> %47, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 33), align 8, !tbaa !6
  %48 = load <4 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !6
  store <4 x ptr> %48, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 37), align 8, !tbaa !6
  store ptr %0, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 41), align 8, !tbaa !6
  store ptr %1, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 42), align 16, !tbaa !6
  %49 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !147
  %50 = tail call ptr %49(i32 noundef 8, i32 noundef 1) #22
  %51 = icmp eq ptr %50, null
  %52 = load ptr, ptr @global_trees, align 16
  %53 = select i1 %51, ptr %52, ptr %50
  store ptr %53, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 43), align 8, !tbaa !6
  %54 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !147
  %55 = tail call ptr %54(i32 noundef 16, i32 noundef 1) #22
  %56 = icmp eq ptr %55, null
  %57 = load ptr, ptr @global_trees, align 16
  %58 = select i1 %56, ptr %57, ptr %55
  store ptr %58, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 44), align 32, !tbaa !6
  %59 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !147
  %60 = tail call ptr %59(i32 noundef 32, i32 noundef 1) #22
  %61 = icmp eq ptr %60, null
  %62 = load ptr, ptr @global_trees, align 16
  %63 = select i1 %61, ptr %62, ptr %60
  store ptr %63, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 45), align 8, !tbaa !6
  %64 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !147
  %65 = tail call ptr %64(i32 noundef 64, i32 noundef 1) #22
  %66 = icmp eq ptr %65, null
  %67 = load ptr, ptr @global_trees, align 16
  %68 = select i1 %66, ptr %67, ptr %65
  store ptr %68, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 46), align 16, !tbaa !6
  %69 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !147
  %70 = tail call ptr %69(i32 noundef 128, i32 noundef 1) #22
  %71 = icmp eq ptr %70, null
  %72 = load ptr, ptr @global_trees, align 16
  %73 = select i1 %71, ptr %72, ptr %70
  store ptr %73, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 47), align 8, !tbaa !6
  %74 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 34), align 16, !tbaa !6
  %75 = tail call ptr @build_pointer_type(ptr noundef %74) #22
  store ptr %75, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 48), align 32, !tbaa !6
  %76 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 4), align 32, !tbaa !6
  %77 = tail call ptr @build_pointer_type(ptr noundef %76) #22
  store ptr %77, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 49), align 8, !tbaa !6
  %78 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 7), align 8, !tbaa !6
  %79 = tail call ptr @build_pointer_type(ptr noundef %78) #22
  store ptr %79, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 50), align 16, !tbaa !6
  %80 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 20), align 32, !tbaa !6
  %81 = tail call ptr @build_pointer_type(ptr noundef %80) #22
  store ptr %81, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 51), align 8, !tbaa !6
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 52, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 53, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 54, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 55, i32 noundef 29, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 56, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 57, i32 noundef 3, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 58, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 59, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 60, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 61, i32 noundef 35, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 62, i32 noundef 36, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 63, i32 noundef 37, i8 noundef zeroext 0, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 64, i32 noundef 4, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 65, i32 noundef 6, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 6)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 66, i32 noundef 8, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 8)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 67, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 68, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 69, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 70, i32 noundef 17, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 17)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 71, i32 noundef 18, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 18)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 72, i32 noundef 19, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 19)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 73, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 17)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 74, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 18)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 75, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 19)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 76, i32 noundef 17, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 77, i32 noundef 18, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 78, i32 noundef 19, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 79, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 3)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 80, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 81, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 82, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 3)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 83, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 84, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 5)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 85, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 6)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 86, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 7)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 87, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 8)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 88, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 9)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 89, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 90, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 91, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 92, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 93, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 35)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 94, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 36)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 95, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 37)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 96, i32 noundef 4, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 97, i32 noundef 4, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 98, i32 noundef 4, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 99, i32 noundef 6, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 100, i32 noundef 6, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 101, i32 noundef 6, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 102, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 103, i32 noundef 30, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 104, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 105, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 106, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 41)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 107, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 108, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 109, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 110, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 111, i32 noundef 35, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 112, i32 noundef 36, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 113, i32 noundef 37, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 114, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 115, i32 noundef 13, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 116, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 32)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 117, i32 noundef 32, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 32)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 118, i32 noundef 35, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 35)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 119, i32 noundef 36, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 36)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 120, i32 noundef 37, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 37)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 121, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 23)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 122, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 51)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 123, i32 noundef 3, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 3)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 124, i32 noundef 5, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 5)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 125, i32 noundef 7, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 7)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 126, i32 noundef 10, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 10)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 127, i32 noundef 11, i8 noundef zeroext 0, i32 noundef 1, i32 noundef 11)
  %82 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 102), align 16, !tbaa !6
  %83 = tail call ptr @build_pointer_type(ptr noundef %82) #22
  store ptr %83, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 128), align 32, !tbaa !6
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 129, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 20, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 130, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 33, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 131, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 132, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 133, i32 noundef 30, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 134, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 135, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 136, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 21)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 137, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 2, i32 noundef 21)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 138, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 24, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 139, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 41, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 140, i32 noundef 4, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 4, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 141, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 20, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 142, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 20, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 143, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 14, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 144, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 15, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 145, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 16, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 146, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 14, i32 noundef 26)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 147, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 15, i32 noundef 27)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 148, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 16, i32 noundef 28)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 149, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 14, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 150, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 15, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 151, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 14, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 152, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 15, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 153, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 16, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 154, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 14, i32 noundef 25)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 155, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 15, i32 noundef 25)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 156, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 16, i32 noundef 25)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 157, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 2, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 158, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 2, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 159, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 2, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 160, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 14, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 161, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 15, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 162, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 16, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 163, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 164, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 30, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 165, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 20, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 166, i32 noundef 17, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 17, i32 noundef 17)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 167, i32 noundef 18, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 18, i32 noundef 18)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 168, i32 noundef 19, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 19, i32 noundef 19)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 169, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 20, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 170, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 34, i32 noundef 48)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 171, i32 noundef 30, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 22, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 172, i32 noundef 43, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 23, i32 noundef 43)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 173, i32 noundef 44, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 23, i32 noundef 44)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 174, i32 noundef 45, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 23, i32 noundef 45)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 175, i32 noundef 46, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 23, i32 noundef 46)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 176, i32 noundef 47, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 23, i32 noundef 47)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 177, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 49, i32 noundef 49)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 178, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 2, i32 noundef 50, i32 noundef 50)
  %84 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 169), align 8, !tbaa !6
  %85 = tail call ptr @build_pointer_type(ptr noundef %84) #22
  store ptr %85, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 179), align 8, !tbaa !6
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 180, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 33, i32 noundef 34, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 181, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 34, i32 noundef 34, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 182, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 20, i32 noundef 22, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 183, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 22, i32 noundef 22, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 184, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 20, i32 noundef 2, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 185, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 20, i32 noundef 2, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 186, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 22, i32 noundef 20, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 187, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 33, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 188, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 34, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 189, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 21, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 190, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 34, i32 noundef 34, i32 noundef 2)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 191, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 14, i32 noundef 14, i32 noundef 14)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 192, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 15, i32 noundef 15, i32 noundef 15)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 193, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 16, i32 noundef 16, i32 noundef 16)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 194, i32 noundef 14, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 14, i32 noundef 14, i32 noundef 25)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 195, i32 noundef 15, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 15, i32 noundef 15, i32 noundef 25)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 196, i32 noundef 16, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 16, i32 noundef 16, i32 noundef 25)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 197, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 14, i32 noundef 26, i32 noundef 26)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 198, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 15, i32 noundef 27, i32 noundef 27)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 199, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 16, i32 noundef 28, i32 noundef 28)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 200, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 20, i32 noundef 20, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 201, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 34, i32 noundef 48, i32 noundef 48)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 202, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 2, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 203, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 43, i32 noundef 43)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 204, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 44, i32 noundef 44)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 205, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 45, i32 noundef 45)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 206, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 46, i32 noundef 46)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 207, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 47, i32 noundef 47)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 208, i32 noundef 43, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 43, i32 noundef 43)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 209, i32 noundef 44, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 44, i32 noundef 44)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 210, i32 noundef 45, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 45, i32 noundef 45)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 211, i32 noundef 46, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 46, i32 noundef 46)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 212, i32 noundef 47, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 23, i32 noundef 47, i32 noundef 47)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 213, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 128, i32 noundef 20, i32 noundef 3)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 214, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 22, i32 noundef 2, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 215, i32 noundef 30, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 22, i32 noundef 30, i32 noundef 30, i32 noundef 21)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 216, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 33, i32 noundef 30, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 217, i32 noundef 30, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 33, i32 noundef 30, i32 noundef 34, i32 noundef 22)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 218, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 20, i32 noundef 22, i32 noundef 30, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 219, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 20, i32 noundef 2, i32 noundef 30, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 220, i32 noundef 33, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 33, i32 noundef 34, i32 noundef 30, i32 noundef 30)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 221, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 21, i32 noundef 2, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 222, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 128, i32 noundef 20, i32 noundef 3, i32 noundef 3)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 223, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 4, i32 noundef 20, i32 noundef 12, i32 noundef 12, i32 noundef 20)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 224, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 5, i32 noundef 33, i32 noundef 2, i32 noundef 30, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 225, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 5, i32 noundef 4, i32 noundef 4, i32 noundef 4, i32 noundef 49, i32 noundef 49)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 226, i32 noundef 2, i8 noundef zeroext 0, i32 noundef 6, i32 noundef 33, i32 noundef 30, i32 noundef 2, i32 noundef 30, i32 noundef 34, i32 noundef 42)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 227, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 6, i32 noundef 4, i32 noundef 4, i32 noundef 4, i32 noundef 4, i32 noundef 49, i32 noundef 49)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 228, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 6, i32 noundef 128, i32 noundef 20, i32 noundef 3, i32 noundef 4, i32 noundef 4, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 229, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 6, i32 noundef 1, i32 noundef 7, i32 noundef 7, i32 noundef 7, i32 noundef 50, i32 noundef 50)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 230, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 7, i32 noundef 128, i32 noundef 20, i32 noundef 3, i32 noundef 4, i32 noundef 4, i32 noundef 4, i32 noundef 4)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 231, i32 noundef 0, i8 noundef zeroext 0, i32 noundef 7, i32 noundef 128, i32 noundef 20, i32 noundef 179, i32 noundef 4, i32 noundef 4, i32 noundef 1, i32 noundef 3)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 232, i32 noundef 1, i8 noundef zeroext 0, i32 noundef 7, i32 noundef 1, i32 noundef 7, i32 noundef 7, i32 noundef 7, i32 noundef 7, i32 noundef 50, i32 noundef 50)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 233, i32 noundef 0, i8 noundef zeroext 1, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 234, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 235, i32 noundef 20, i8 noundef zeroext 1, i32 noundef 0)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 236, i32 noundef 0, i8 noundef zeroext 1, i32 noundef 1, i32 noundef 41)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 237, i32 noundef 0, i8 noundef zeroext 1, i32 noundef 1, i32 noundef 22)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 238, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 1, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 239, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 2, i32 noundef 21, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 240, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 2, i32 noundef 33, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 241, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 2, i32 noundef 34, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 242, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 2, i32 noundef 2, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 243, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 3, i32 noundef 33, i32 noundef 30, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 244, i32 noundef 31, i8 noundef zeroext 1, i32 noundef 3, i32 noundef 33, i32 noundef 30, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 245, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 3, i32 noundef 21, i32 noundef 2, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 246, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 4, i32 noundef 33, i32 noundef 2, i32 noundef 30, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 247, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 5, i32 noundef 33, i32 noundef 30, i32 noundef 2, i32 noundef 30, i32 noundef 34)
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 248, i32 noundef 2, i8 noundef zeroext 1, i32 noundef 5, i32 noundef 2, i32 noundef 2, i32 noundef 2, i32 noundef 2, i32 noundef 2)
  %86 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %87 = tail call ptr @build_pointer_type(ptr noundef %86) #22
  store ptr %87, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 249), align 8, !tbaa !6
  tail call void (i32, i32, i8, i32, ...) @def_fn_type(i32 noundef 250, i32 noundef 20, i8 noundef zeroext 0, i32 noundef 3, i32 noundef 249, i32 noundef 20, i32 noundef 30)
  store ptr null, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 251), align 8, !tbaa !6
  store ptr null, ptr @built_in_attributes, align 16, !tbaa !6
  %88 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef 0) #22
  store ptr %88, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 1), align 8, !tbaa !6
  %89 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %90 = tail call ptr @tree_cons_stat(ptr noundef %89, ptr noundef %88, ptr noundef %89) #22
  store ptr %90, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 2), align 16, !tbaa !6
  %91 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef 1) #22
  store ptr %91, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 3), align 8, !tbaa !6
  %92 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %93 = tail call ptr @tree_cons_stat(ptr noundef %92, ptr noundef %91, ptr noundef %92) #22
  store ptr %93, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 4), align 16, !tbaa !6
  %94 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef 2) #22
  store ptr %94, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 5), align 8, !tbaa !6
  %95 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %96 = tail call ptr @tree_cons_stat(ptr noundef %95, ptr noundef %94, ptr noundef %95) #22
  store ptr %96, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 6), align 16, !tbaa !6
  %97 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef 3) #22
  store ptr %97, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 7), align 8, !tbaa !6
  %98 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %99 = tail call ptr @tree_cons_stat(ptr noundef %98, ptr noundef %97, ptr noundef %98) #22
  store ptr %99, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 8), align 16, !tbaa !6
  %100 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef 4) #22
  store ptr %100, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 9), align 8, !tbaa !6
  %101 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %102 = tail call ptr @tree_cons_stat(ptr noundef %101, ptr noundef %100, ptr noundef %101) #22
  store ptr %102, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 10), align 16, !tbaa !6
  %103 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef 5) #22
  store ptr %103, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 11), align 8, !tbaa !6
  %104 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %105 = tail call ptr @tree_cons_stat(ptr noundef %104, ptr noundef %103, ptr noundef %104) #22
  store ptr %105, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 12), align 16, !tbaa !6
  %106 = tail call ptr @build_int_cst(ptr noundef null, i64 noundef 6) #22
  store ptr %106, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 13), align 8, !tbaa !6
  %107 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %108 = tail call ptr @tree_cons_stat(ptr noundef %107, ptr noundef %106, ptr noundef %107) #22
  store ptr %108, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 14), align 16, !tbaa !6
  %109 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %110 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 3), align 8, !tbaa !6
  %111 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 2), align 16, !tbaa !6
  %112 = tail call ptr @tree_cons_stat(ptr noundef %109, ptr noundef %110, ptr noundef %111) #22
  store ptr %112, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 15), align 8, !tbaa !6
  %113 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %114 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 3), align 8, !tbaa !6
  %115 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 6), align 16, !tbaa !6
  %116 = tail call ptr @tree_cons_stat(ptr noundef %113, ptr noundef %114, ptr noundef %115) #22
  store ptr %116, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 16), align 16, !tbaa !6
  %117 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %118 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 5), align 8, !tbaa !6
  %119 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 2), align 16, !tbaa !6
  %120 = tail call ptr @tree_cons_stat(ptr noundef %117, ptr noundef %118, ptr noundef %119) #22
  store ptr %120, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 17), align 8, !tbaa !6
  %121 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %122 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 5), align 8, !tbaa !6
  %123 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 8), align 16, !tbaa !6
  %124 = tail call ptr @tree_cons_stat(ptr noundef %121, ptr noundef %122, ptr noundef %123) #22
  store ptr %124, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 18), align 16, !tbaa !6
  %125 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %126 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 7), align 8, !tbaa !6
  %127 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 2), align 16, !tbaa !6
  %128 = tail call ptr @tree_cons_stat(ptr noundef %125, ptr noundef %126, ptr noundef %127) #22
  store ptr %128, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 19), align 8, !tbaa !6
  %129 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %130 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 7), align 8, !tbaa !6
  %131 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 10), align 16, !tbaa !6
  %132 = tail call ptr @tree_cons_stat(ptr noundef %129, ptr noundef %130, ptr noundef %131) #22
  store ptr %132, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 20), align 16, !tbaa !6
  %133 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %134 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 9), align 8, !tbaa !6
  %135 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 2), align 16, !tbaa !6
  %136 = tail call ptr @tree_cons_stat(ptr noundef %133, ptr noundef %134, ptr noundef %135) #22
  store ptr %136, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 21), align 8, !tbaa !6
  %137 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %138 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 9), align 8, !tbaa !6
  %139 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 12), align 16, !tbaa !6
  %140 = tail call ptr @tree_cons_stat(ptr noundef %137, ptr noundef %138, ptr noundef %139) #22
  store ptr %140, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 22), align 16, !tbaa !6
  %141 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %142 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 11), align 8, !tbaa !6
  %143 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 2), align 16, !tbaa !6
  %144 = tail call ptr @tree_cons_stat(ptr noundef %141, ptr noundef %142, ptr noundef %143) #22
  store ptr %144, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 23), align 8, !tbaa !6
  %145 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %146 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 11), align 8, !tbaa !6
  %147 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 14), align 16, !tbaa !6
  %148 = tail call ptr @tree_cons_stat(ptr noundef %145, ptr noundef %146, ptr noundef %147) #22
  store ptr %148, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 24), align 16, !tbaa !6
  %149 = tail call ptr @get_identifier(ptr noundef nonnull @.str.75) #22
  store ptr %149, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 25), align 8, !tbaa !6
  %150 = tail call ptr @get_identifier(ptr noundef nonnull @.str.271) #22
  store ptr %150, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %151 = tail call ptr @get_identifier(ptr noundef nonnull @.str.272) #22
  store ptr %151, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 27), align 8, !tbaa !6
  %152 = tail call ptr @get_identifier(ptr noundef nonnull @.str.175) #22
  store ptr %152, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 28), align 16, !tbaa !6
  %153 = tail call ptr @get_identifier(ptr noundef nonnull @.str.184) #22
  store ptr %153, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %154 = tail call ptr @get_identifier(ptr noundef nonnull @.str.155) #22
  store ptr %154, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 30), align 16, !tbaa !6
  %155 = tail call ptr @get_identifier(ptr noundef nonnull @.str.185) #22
  store ptr %155, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 31), align 8, !tbaa !6
  %156 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1089) #22
  store ptr %156, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %157 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1090) #22
  store ptr %157, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 33), align 8, !tbaa !6
  %158 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1091) #22
  store ptr %158, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 34), align 16, !tbaa !6
  %159 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1092) #22
  store ptr %159, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 35), align 8, !tbaa !6
  %160 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1093) #22
  store ptr %160, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 36), align 16, !tbaa !6
  %161 = tail call ptr @get_identifier(ptr noundef nonnull @.str.178) #22
  store ptr %161, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 37), align 8, !tbaa !6
  %162 = tail call ptr @get_identifier(ptr noundef nonnull @.str.179) #22
  store ptr %162, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 38), align 16, !tbaa !6
  %163 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1094) #22
  store ptr %163, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 39), align 8, !tbaa !6
  %164 = tail call ptr @get_identifier(ptr noundef nonnull @.str.189) #22
  store ptr %164, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 40), align 16, !tbaa !6
  %165 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1095) #22
  store ptr %165, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 41), align 8, !tbaa !6
  %166 = tail call ptr @get_identifier(ptr noundef nonnull @.str.1096) #22
  store ptr %166, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 42), align 16, !tbaa !6
  %167 = tail call ptr @get_identifier(ptr noundef nonnull @.str.190) #22
  store ptr %167, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 43), align 8, !tbaa !6
  %168 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 38), align 16, !tbaa !6
  %169 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %170 = tail call ptr @tree_cons_stat(ptr noundef %168, ptr noundef %169, ptr noundef %169) #22
  store ptr %170, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 44), align 16, !tbaa !6
  %171 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 31), align 8, !tbaa !6
  %172 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %173 = tail call ptr @tree_cons_stat(ptr noundef %171, ptr noundef %172, ptr noundef %172) #22
  store ptr %173, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %174 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 25), align 8, !tbaa !6
  %175 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %176 = tail call ptr @tree_cons_stat(ptr noundef %174, ptr noundef %175, ptr noundef %173) #22
  store ptr %176, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %177 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 37), align 8, !tbaa !6
  %178 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %179 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %180 = tail call ptr @tree_cons_stat(ptr noundef %177, ptr noundef %178, ptr noundef %179) #22
  store ptr %180, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %181 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 38), align 16, !tbaa !6
  %182 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %183 = tail call ptr @tree_cons_stat(ptr noundef %181, ptr noundef %182, ptr noundef %180) #22
  store ptr %183, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 48), align 16, !tbaa !6
  %184 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 30), align 16, !tbaa !6
  %185 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %186 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %187 = tail call ptr @tree_cons_stat(ptr noundef %184, ptr noundef %185, ptr noundef %186) #22
  store ptr %187, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  %188 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 28), align 16, !tbaa !6
  %189 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %190 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %191 = tail call ptr @tree_cons_stat(ptr noundef %188, ptr noundef %189, ptr noundef %190) #22
  store ptr %191, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 50), align 16, !tbaa !6
  %192 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 40), align 16, !tbaa !6
  %193 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %194 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %195 = tail call ptr @tree_cons_stat(ptr noundef %192, ptr noundef %193, ptr noundef %194) #22
  store ptr %195, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 51), align 8, !tbaa !6
  %196 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %197 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %198 = tail call ptr @tree_cons_stat(ptr noundef %196, ptr noundef %197, ptr noundef %197) #22
  store ptr %198, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  %199 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %200 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 4), align 16, !tbaa !6
  %201 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %202 = tail call ptr @tree_cons_stat(ptr noundef %199, ptr noundef %200, ptr noundef %201) #22
  store ptr %202, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 53), align 8, !tbaa !6
  %203 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %204 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 6), align 16, !tbaa !6
  %205 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %206 = tail call ptr @tree_cons_stat(ptr noundef %203, ptr noundef %204, ptr noundef %205) #22
  store ptr %206, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 54), align 16, !tbaa !6
  %207 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %208 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 8), align 16, !tbaa !6
  %209 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %210 = tail call ptr @tree_cons_stat(ptr noundef %207, ptr noundef %208, ptr noundef %209) #22
  store ptr %210, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 55), align 8, !tbaa !6
  %211 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 40), align 16, !tbaa !6
  %212 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 4), align 16, !tbaa !6
  %213 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %214 = tail call ptr @tree_cons_stat(ptr noundef %211, ptr noundef %212, ptr noundef %213) #22
  store ptr %214, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 56), align 16, !tbaa !6
  %215 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %216 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %217 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %218 = tail call ptr @tree_cons_stat(ptr noundef %215, ptr noundef %216, ptr noundef %217) #22
  store ptr %218, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  %219 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %220 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 4), align 16, !tbaa !6
  %221 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %222 = tail call ptr @tree_cons_stat(ptr noundef %219, ptr noundef %220, ptr noundef %221) #22
  store ptr %222, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 58), align 16, !tbaa !6
  %223 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %224 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 6), align 16, !tbaa !6
  %225 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %226 = tail call ptr @tree_cons_stat(ptr noundef %223, ptr noundef %224, ptr noundef %225) #22
  store ptr %226, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 59), align 8, !tbaa !6
  %227 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %228 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 8), align 16, !tbaa !6
  %229 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %230 = tail call ptr @tree_cons_stat(ptr noundef %227, ptr noundef %228, ptr noundef %229) #22
  store ptr %230, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 60), align 16, !tbaa !6
  %231 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %232 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 10), align 16, !tbaa !6
  %233 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %234 = tail call ptr @tree_cons_stat(ptr noundef %231, ptr noundef %232, ptr noundef %233) #22
  store ptr %234, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 61), align 8, !tbaa !6
  %235 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 29), align 8, !tbaa !6
  %236 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 12), align 16, !tbaa !6
  %237 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %238 = tail call ptr @tree_cons_stat(ptr noundef %235, ptr noundef %236, ptr noundef %237) #22
  store ptr %238, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 62), align 16, !tbaa !6
  %239 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 25), align 8, !tbaa !6
  %240 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %241 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  %242 = tail call ptr @tree_cons_stat(ptr noundef %239, ptr noundef %240, ptr noundef %241) #22
  store ptr %242, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %243 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 43), align 8, !tbaa !6
  %244 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %245 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %246 = tail call ptr @tree_cons_stat(ptr noundef %243, ptr noundef %244, ptr noundef %245) #22
  store ptr %246, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %247 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 37), align 8, !tbaa !6
  %248 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %249 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  %250 = tail call ptr @tree_cons_stat(ptr noundef %247, ptr noundef %248, ptr noundef %249) #22
  store ptr %250, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  %251 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 28), align 16, !tbaa !6
  %252 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %253 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  %254 = tail call ptr @tree_cons_stat(ptr noundef %251, ptr noundef %252, ptr noundef %253) #22
  store ptr %254, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 66), align 16, !tbaa !6
  %255 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %256 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %257 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 15), align 8, !tbaa !6
  %258 = tail call ptr @tree_cons_stat(ptr noundef %255, ptr noundef %256, ptr noundef %257) #22
  store ptr %258, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 67), align 8, !tbaa !6
  %259 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %260 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 53), align 8, !tbaa !6
  %261 = tail call ptr @tree_cons_stat(ptr noundef %259, ptr noundef %258, ptr noundef %260) #22
  store ptr %261, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 68), align 16, !tbaa !6
  %262 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %263 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %264 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 16), align 16, !tbaa !6
  %265 = tail call ptr @tree_cons_stat(ptr noundef %262, ptr noundef %263, ptr noundef %264) #22
  store ptr %265, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 69), align 8, !tbaa !6
  %266 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %267 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 53), align 8, !tbaa !6
  %268 = tail call ptr @tree_cons_stat(ptr noundef %266, ptr noundef %265, ptr noundef %267) #22
  store ptr %268, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 70), align 16, !tbaa !6
  %269 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %270 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %271 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 17), align 8, !tbaa !6
  %272 = tail call ptr @tree_cons_stat(ptr noundef %269, ptr noundef %270, ptr noundef %271) #22
  store ptr %272, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 71), align 8, !tbaa !6
  %273 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %274 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 54), align 16, !tbaa !6
  %275 = tail call ptr @tree_cons_stat(ptr noundef %273, ptr noundef %272, ptr noundef %274) #22
  store ptr %275, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 72), align 16, !tbaa !6
  %276 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %277 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 71), align 8, !tbaa !6
  %278 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 59), align 8, !tbaa !6
  %279 = tail call ptr @tree_cons_stat(ptr noundef %276, ptr noundef %277, ptr noundef %278) #22
  store ptr %279, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 73), align 8, !tbaa !6
  %280 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %281 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %282 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 18), align 16, !tbaa !6
  %283 = tail call ptr @tree_cons_stat(ptr noundef %280, ptr noundef %281, ptr noundef %282) #22
  store ptr %283, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 74), align 16, !tbaa !6
  %284 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %285 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 54), align 16, !tbaa !6
  %286 = tail call ptr @tree_cons_stat(ptr noundef %284, ptr noundef %283, ptr noundef %285) #22
  store ptr %286, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 75), align 8, !tbaa !6
  %287 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %288 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 74), align 16, !tbaa !6
  %289 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 59), align 8, !tbaa !6
  %290 = tail call ptr @tree_cons_stat(ptr noundef %287, ptr noundef %288, ptr noundef %289) #22
  store ptr %290, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 76), align 16, !tbaa !6
  %291 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %292 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %293 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 19), align 8, !tbaa !6
  %294 = tail call ptr @tree_cons_stat(ptr noundef %291, ptr noundef %292, ptr noundef %293) #22
  store ptr %294, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 77), align 8, !tbaa !6
  %295 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %296 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 55), align 8, !tbaa !6
  %297 = tail call ptr @tree_cons_stat(ptr noundef %295, ptr noundef %294, ptr noundef %296) #22
  store ptr %297, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 78), align 16, !tbaa !6
  %298 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %299 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 77), align 8, !tbaa !6
  %300 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 60), align 16, !tbaa !6
  %301 = tail call ptr @tree_cons_stat(ptr noundef %298, ptr noundef %299, ptr noundef %300) #22
  store ptr %301, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 79), align 8, !tbaa !6
  %302 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %303 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %304 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 20), align 16, !tbaa !6
  %305 = tail call ptr @tree_cons_stat(ptr noundef %302, ptr noundef %303, ptr noundef %304) #22
  store ptr %305, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 80), align 16, !tbaa !6
  %306 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %307 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 55), align 8, !tbaa !6
  %308 = tail call ptr @tree_cons_stat(ptr noundef %306, ptr noundef %305, ptr noundef %307) #22
  store ptr %308, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 81), align 8, !tbaa !6
  %309 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %310 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 80), align 16, !tbaa !6
  %311 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 60), align 16, !tbaa !6
  %312 = tail call ptr @tree_cons_stat(ptr noundef %309, ptr noundef %310, ptr noundef %311) #22
  store ptr %312, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 82), align 16, !tbaa !6
  %313 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %314 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %315 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 21), align 8, !tbaa !6
  %316 = tail call ptr @tree_cons_stat(ptr noundef %313, ptr noundef %314, ptr noundef %315) #22
  store ptr %316, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 83), align 8, !tbaa !6
  %317 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %318 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 61), align 8, !tbaa !6
  %319 = tail call ptr @tree_cons_stat(ptr noundef %317, ptr noundef %316, ptr noundef %318) #22
  store ptr %319, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 84), align 16, !tbaa !6
  %320 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %321 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %322 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 22), align 16, !tbaa !6
  %323 = tail call ptr @tree_cons_stat(ptr noundef %320, ptr noundef %321, ptr noundef %322) #22
  store ptr %323, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 85), align 8, !tbaa !6
  %324 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %325 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 61), align 8, !tbaa !6
  %326 = tail call ptr @tree_cons_stat(ptr noundef %324, ptr noundef %323, ptr noundef %325) #22
  store ptr %326, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 86), align 16, !tbaa !6
  %327 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %328 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %329 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 23), align 8, !tbaa !6
  %330 = tail call ptr @tree_cons_stat(ptr noundef %327, ptr noundef %328, ptr noundef %329) #22
  store ptr %330, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 87), align 8, !tbaa !6
  %331 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %332 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 62), align 16, !tbaa !6
  %333 = tail call ptr @tree_cons_stat(ptr noundef %331, ptr noundef %330, ptr noundef %332) #22
  store ptr %333, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 88), align 16, !tbaa !6
  %334 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %335 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 32), align 16, !tbaa !6
  %336 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 24), align 16, !tbaa !6
  %337 = tail call ptr @tree_cons_stat(ptr noundef %334, ptr noundef %335, ptr noundef %336) #22
  store ptr %337, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 89), align 8, !tbaa !6
  %338 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %339 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 62), align 16, !tbaa !6
  %340 = tail call ptr @tree_cons_stat(ptr noundef %338, ptr noundef %337, ptr noundef %339) #22
  store ptr %340, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 90), align 16, !tbaa !6
  %341 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %342 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 39), align 8, !tbaa !6
  %343 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 15), align 8, !tbaa !6
  %344 = tail call ptr @tree_cons_stat(ptr noundef %341, ptr noundef %342, ptr noundef %343) #22
  store ptr %344, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 91), align 8, !tbaa !6
  %345 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %346 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 53), align 8, !tbaa !6
  %347 = tail call ptr @tree_cons_stat(ptr noundef %345, ptr noundef %344, ptr noundef %346) #22
  store ptr %347, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 92), align 16, !tbaa !6
  %348 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %349 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 39), align 8, !tbaa !6
  %350 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 16), align 16, !tbaa !6
  %351 = tail call ptr @tree_cons_stat(ptr noundef %348, ptr noundef %349, ptr noundef %350) #22
  store ptr %351, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 93), align 8, !tbaa !6
  %352 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %353 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 53), align 8, !tbaa !6
  %354 = tail call ptr @tree_cons_stat(ptr noundef %352, ptr noundef %351, ptr noundef %353) #22
  store ptr %354, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 94), align 16, !tbaa !6
  %355 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %356 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 39), align 8, !tbaa !6
  %357 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 17), align 8, !tbaa !6
  %358 = tail call ptr @tree_cons_stat(ptr noundef %355, ptr noundef %356, ptr noundef %357) #22
  store ptr %358, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 95), align 8, !tbaa !6
  %359 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %360 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 54), align 16, !tbaa !6
  %361 = tail call ptr @tree_cons_stat(ptr noundef %359, ptr noundef %358, ptr noundef %360) #22
  store ptr %361, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 96), align 16, !tbaa !6
  %362 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %363 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 95), align 8, !tbaa !6
  %364 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 59), align 8, !tbaa !6
  %365 = tail call ptr @tree_cons_stat(ptr noundef %362, ptr noundef %363, ptr noundef %364) #22
  store ptr %365, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 97), align 8, !tbaa !6
  %366 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %367 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 39), align 8, !tbaa !6
  %368 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 18), align 16, !tbaa !6
  %369 = tail call ptr @tree_cons_stat(ptr noundef %366, ptr noundef %367, ptr noundef %368) #22
  store ptr %369, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 98), align 16, !tbaa !6
  %370 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %371 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 54), align 16, !tbaa !6
  %372 = tail call ptr @tree_cons_stat(ptr noundef %370, ptr noundef %369, ptr noundef %371) #22
  store ptr %372, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 99), align 8, !tbaa !6
  %373 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %374 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 98), align 16, !tbaa !6
  %375 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 59), align 8, !tbaa !6
  %376 = tail call ptr @tree_cons_stat(ptr noundef %373, ptr noundef %374, ptr noundef %375) #22
  store ptr %376, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 100), align 16, !tbaa !6
  %377 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %378 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 42), align 16, !tbaa !6
  %379 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 19), align 8, !tbaa !6
  %380 = tail call ptr @tree_cons_stat(ptr noundef %377, ptr noundef %378, ptr noundef %379) #22
  store ptr %380, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 101), align 8, !tbaa !6
  %381 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %382 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 60), align 16, !tbaa !6
  %383 = tail call ptr @tree_cons_stat(ptr noundef %381, ptr noundef %380, ptr noundef %382) #22
  store ptr %383, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 102), align 16, !tbaa !6
  %384 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %385 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 41), align 8, !tbaa !6
  %386 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 20), align 16, !tbaa !6
  %387 = tail call ptr @tree_cons_stat(ptr noundef %384, ptr noundef %385, ptr noundef %386) #22
  store ptr %387, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 103), align 8, !tbaa !6
  %388 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 26), align 16, !tbaa !6
  %389 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 60), align 16, !tbaa !6
  %390 = tail call ptr @tree_cons_stat(ptr noundef %388, ptr noundef %387, ptr noundef %389) #22
  store ptr %390, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 104), align 16, !tbaa !6
  %391 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 27), align 8, !tbaa !6
  %392 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 4), align 16, !tbaa !6
  %393 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 58), align 16, !tbaa !6
  %394 = tail call ptr @tree_cons_stat(ptr noundef %391, ptr noundef %392, ptr noundef %393) #22
  store ptr %394, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 105), align 8, !tbaa !6
  %395 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 27), align 8, !tbaa !6
  %396 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 6), align 16, !tbaa !6
  %397 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 59), align 8, !tbaa !6
  %398 = tail call ptr @tree_cons_stat(ptr noundef %395, ptr noundef %396, ptr noundef %397) #22
  store ptr %398, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 106), align 16, !tbaa !6
  %399 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %400 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %401 = icmp eq i32 %400, 0
  %402 = load i32, ptr @flag_rounding_math, align 4
  %403 = icmp eq i32 %402, 0
  %404 = select i1 %403, i64 46, i64 48
  %405 = select i1 %401, i64 %404, i64 45
  %406 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %405
  %407 = load ptr, ptr %406, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 0, ptr noundef nonnull @.str.393, ptr noundef %399, ptr noundef %399, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %407, i8 noundef zeroext 1)
  %408 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %409 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %410 = icmp eq i32 %409, 0
  %411 = zext i1 %410 to i8
  %412 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %413 = icmp eq i32 %412, 0
  %414 = load i32, ptr @flag_rounding_math, align 4
  %415 = icmp eq i32 %414, 0
  %416 = select i1 %415, i64 46, i64 48
  %417 = select i1 %413, i64 %416, i64 45
  %418 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %417
  %419 = load ptr, ptr %418, align 8, !tbaa !6
  %420 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = zext i1 %422 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 1, ptr noundef nonnull @.str.394, ptr noundef %408, ptr noundef %408, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %411, ptr noundef %419, i8 noundef zeroext %423)
  %424 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %425 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %426 = icmp eq i32 %425, 0
  %427 = zext i1 %426 to i8
  %428 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %429 = icmp eq i32 %428, 0
  %430 = load i32, ptr @flag_rounding_math, align 4
  %431 = icmp eq i32 %430, 0
  %432 = select i1 %431, i64 46, i64 48
  %433 = select i1 %429, i64 %432, i64 45
  %434 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %433
  %435 = load ptr, ptr %434, align 8, !tbaa !6
  %436 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %437 = and i32 %436, 1
  %438 = icmp eq i32 %437, 0
  %439 = zext i1 %438 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 2, ptr noundef nonnull @.str.395, ptr noundef %424, ptr noundef %424, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %427, ptr noundef %435, i8 noundef zeroext %439)
  %440 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %441 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %442 = icmp eq i32 %441, 0
  %443 = zext i1 %442 to i8
  %444 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %445 = icmp eq i32 %444, 0
  %446 = load i32, ptr @flag_rounding_math, align 4
  %447 = icmp eq i32 %446, 0
  %448 = select i1 %447, i64 46, i64 48
  %449 = select i1 %445, i64 %448, i64 45
  %450 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %449
  %451 = load ptr, ptr %450, align 8, !tbaa !6
  %452 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %453 = and i32 %452, 1
  %454 = icmp eq i32 %453, 0
  %455 = zext i1 %454 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 3, ptr noundef nonnull @.str.396, ptr noundef %440, ptr noundef %440, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %443, ptr noundef %451, i8 noundef zeroext %455)
  %456 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %457 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %458 = icmp eq i32 %457, 0
  %459 = zext i1 %458 to i8
  %460 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %461 = icmp eq i32 %460, 0
  %462 = load i32, ptr @flag_rounding_math, align 4
  %463 = icmp eq i32 %462, 0
  %464 = select i1 %463, i64 46, i64 48
  %465 = select i1 %461, i64 %464, i64 45
  %466 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %465
  %467 = load ptr, ptr %466, align 8, !tbaa !6
  %468 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %469 = and i32 %468, 1
  %470 = icmp eq i32 %469, 0
  %471 = zext i1 %470 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 4, ptr noundef nonnull @.str.397, ptr noundef %456, ptr noundef %456, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %459, ptr noundef %467, i8 noundef zeroext %471)
  %472 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %473 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %474 = icmp eq i32 %473, 0
  %475 = zext i1 %474 to i8
  %476 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %477 = icmp eq i32 %476, 0
  %478 = load i32, ptr @flag_rounding_math, align 4
  %479 = icmp eq i32 %478, 0
  %480 = select i1 %479, i64 46, i64 48
  %481 = select i1 %477, i64 %480, i64 45
  %482 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %481
  %483 = load ptr, ptr %482, align 8, !tbaa !6
  %484 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %485 = and i32 %484, 1
  %486 = icmp eq i32 %485, 0
  %487 = zext i1 %486 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 5, ptr noundef nonnull @.str.398, ptr noundef %472, ptr noundef %472, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %475, ptr noundef %483, i8 noundef zeroext %487)
  %488 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %489 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %490 = icmp eq i32 %489, 0
  %491 = load i32, ptr @flag_rounding_math, align 4
  %492 = icmp eq i32 %491, 0
  %493 = select i1 %492, i64 46, i64 48
  %494 = select i1 %490, i64 %493, i64 45
  %495 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %494
  %496 = load ptr, ptr %495, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 6, ptr noundef nonnull @.str.399, ptr noundef %488, ptr noundef %488, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %496, i8 noundef zeroext 1)
  %497 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %498 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %499 = icmp eq i32 %498, 0
  %500 = zext i1 %499 to i8
  %501 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %502 = icmp eq i32 %501, 0
  %503 = load i32, ptr @flag_rounding_math, align 4
  %504 = icmp eq i32 %503, 0
  %505 = select i1 %504, i64 46, i64 48
  %506 = select i1 %502, i64 %505, i64 45
  %507 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %506
  %508 = load ptr, ptr %507, align 8, !tbaa !6
  %509 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %510 = and i32 %509, 1
  %511 = icmp eq i32 %510, 0
  %512 = zext i1 %511 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 7, ptr noundef nonnull @.str.400, ptr noundef %497, ptr noundef %497, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %500, ptr noundef %508, i8 noundef zeroext %512)
  %513 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %514 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %515 = icmp eq i32 %514, 0
  %516 = zext i1 %515 to i8
  %517 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %518 = icmp eq i32 %517, 0
  %519 = select i1 %518, i64 46, i64 48
  %520 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %519
  %521 = load ptr, ptr %520, align 16, !tbaa !6
  %522 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %523 = and i32 %522, 1
  %524 = icmp eq i32 %523, 0
  %525 = zext i1 %524 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 8, ptr noundef nonnull @.str.401, ptr noundef %513, ptr noundef %513, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %516, ptr noundef %521, i8 noundef zeroext %525)
  %526 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %527 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %528 = icmp eq i32 %527, 0
  %529 = zext i1 %528 to i8
  %530 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %531 = icmp eq i32 %530, 0
  %532 = select i1 %531, i64 46, i64 48
  %533 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %532
  %534 = load ptr, ptr %533, align 16, !tbaa !6
  %535 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %536 = and i32 %535, 1
  %537 = icmp eq i32 %536, 0
  %538 = zext i1 %537 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 9, ptr noundef nonnull @.str.402, ptr noundef %526, ptr noundef %526, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %529, ptr noundef %534, i8 noundef zeroext %538)
  %539 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %540 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %541 = icmp eq i32 %540, 0
  %542 = zext i1 %541 to i8
  %543 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %544 = icmp eq i32 %543, 0
  %545 = select i1 %544, i64 46, i64 48
  %546 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %545
  %547 = load ptr, ptr %546, align 16, !tbaa !6
  %548 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %549 = and i32 %548, 1
  %550 = icmp eq i32 %549, 0
  %551 = zext i1 %550 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 10, ptr noundef nonnull @.str.403, ptr noundef %539, ptr noundef %539, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %542, ptr noundef %547, i8 noundef zeroext %551)
  %552 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %553 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %554 = icmp eq i32 %553, 0
  %555 = zext i1 %554 to i8
  %556 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %557 = icmp eq i32 %556, 0
  %558 = load i32, ptr @flag_rounding_math, align 4
  %559 = icmp eq i32 %558, 0
  %560 = select i1 %559, i64 46, i64 48
  %561 = select i1 %557, i64 %560, i64 45
  %562 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %561
  %563 = load ptr, ptr %562, align 8, !tbaa !6
  %564 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %565 = and i32 %564, 1
  %566 = icmp eq i32 %565, 0
  %567 = zext i1 %566 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 11, ptr noundef nonnull @.str.404, ptr noundef %552, ptr noundef %552, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %555, ptr noundef %563, i8 noundef zeroext %567)
  %568 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %569 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %570 = icmp eq i32 %569, 0
  %571 = select i1 %570, i64 46, i64 48
  %572 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %571
  %573 = load ptr, ptr %572, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 12, ptr noundef nonnull @.str.405, ptr noundef %568, ptr noundef %568, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %573, i8 noundef zeroext 1)
  %574 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %575 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %576 = icmp eq i32 %575, 0
  %577 = load i32, ptr @flag_rounding_math, align 4
  %578 = icmp eq i32 %577, 0
  %579 = select i1 %578, i64 46, i64 48
  %580 = select i1 %576, i64 %579, i64 45
  %581 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %580
  %582 = load ptr, ptr %581, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 13, ptr noundef nonnull @.str.406, ptr noundef %574, ptr noundef %574, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %582, i8 noundef zeroext 1)
  %583 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %584 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %585 = icmp eq i32 %584, 0
  %586 = zext i1 %585 to i8
  %587 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %588 = icmp eq i32 %587, 0
  %589 = load i32, ptr @flag_rounding_math, align 4
  %590 = icmp eq i32 %589, 0
  %591 = select i1 %590, i64 46, i64 48
  %592 = select i1 %588, i64 %591, i64 45
  %593 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %592
  %594 = load ptr, ptr %593, align 8, !tbaa !6
  %595 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %596 = and i32 %595, 1
  %597 = icmp eq i32 %596, 0
  %598 = zext i1 %597 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 14, ptr noundef nonnull @.str.407, ptr noundef %583, ptr noundef %583, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %586, ptr noundef %594, i8 noundef zeroext %598)
  %599 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %600 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %601 = icmp eq i32 %600, 0
  %602 = zext i1 %601 to i8
  %603 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %604 = icmp eq i32 %603, 0
  %605 = load i32, ptr @flag_rounding_math, align 4
  %606 = icmp eq i32 %605, 0
  %607 = select i1 %606, i64 46, i64 48
  %608 = select i1 %604, i64 %607, i64 45
  %609 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %608
  %610 = load ptr, ptr %609, align 8, !tbaa !6
  %611 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %612 = and i32 %611, 1
  %613 = icmp eq i32 %612, 0
  %614 = zext i1 %613 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 15, ptr noundef nonnull @.str.408, ptr noundef %599, ptr noundef %599, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %602, ptr noundef %610, i8 noundef zeroext %614)
  %615 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %616 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %617 = icmp eq i32 %616, 0
  %618 = zext i1 %617 to i8
  %619 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %620 = icmp eq i32 %619, 0
  %621 = select i1 %620, i64 46, i64 48
  %622 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %621
  %623 = load ptr, ptr %622, align 16, !tbaa !6
  %624 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %625 = and i32 %624, 1
  %626 = icmp eq i32 %625, 0
  %627 = zext i1 %626 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 16, ptr noundef nonnull @.str.409, ptr noundef %615, ptr noundef %615, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %618, ptr noundef %623, i8 noundef zeroext %627)
  %628 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %629 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %630 = icmp eq i32 %629, 0
  %631 = zext i1 %630 to i8
  %632 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %633 = icmp eq i32 %632, 0
  %634 = load i32, ptr @flag_rounding_math, align 4
  %635 = icmp eq i32 %634, 0
  %636 = select i1 %635, i64 46, i64 48
  %637 = select i1 %633, i64 %636, i64 45
  %638 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %637
  %639 = load ptr, ptr %638, align 8, !tbaa !6
  %640 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %641 = and i32 %640, 1
  %642 = icmp eq i32 %641, 0
  %643 = zext i1 %642 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 17, ptr noundef nonnull @.str.410, ptr noundef %628, ptr noundef %628, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %631, ptr noundef %639, i8 noundef zeroext %643)
  %644 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %645 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %646 = icmp eq i32 %645, 0
  %647 = zext i1 %646 to i8
  %648 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %649 = icmp eq i32 %648, 0
  %650 = load i32, ptr @flag_rounding_math, align 4
  %651 = icmp eq i32 %650, 0
  %652 = select i1 %651, i64 46, i64 48
  %653 = select i1 %649, i64 %652, i64 45
  %654 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %653
  %655 = load ptr, ptr %654, align 8, !tbaa !6
  %656 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %657 = and i32 %656, 1
  %658 = icmp eq i32 %657, 0
  %659 = zext i1 %658 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 18, ptr noundef nonnull @.str.411, ptr noundef %644, ptr noundef %644, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %647, ptr noundef %655, i8 noundef zeroext %659)
  %660 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %661 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %662 = icmp eq i32 %661, 0
  %663 = zext i1 %662 to i8
  %664 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %665 = icmp eq i32 %664, 0
  %666 = load i32, ptr @flag_rounding_math, align 4
  %667 = icmp eq i32 %666, 0
  %668 = select i1 %667, i64 46, i64 48
  %669 = select i1 %665, i64 %668, i64 45
  %670 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %669
  %671 = load ptr, ptr %670, align 8, !tbaa !6
  %672 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %673 = and i32 %672, 1
  %674 = icmp eq i32 %673, 0
  %675 = zext i1 %674 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 19, ptr noundef nonnull @.str.412, ptr noundef %660, ptr noundef %660, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %663, ptr noundef %671, i8 noundef zeroext %675)
  %676 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %677 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %678 = icmp eq i32 %677, 0
  %679 = zext i1 %678 to i8
  %680 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %681 = icmp eq i32 %680, 0
  %682 = select i1 %681, i64 46, i64 48
  %683 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %682
  %684 = load ptr, ptr %683, align 16, !tbaa !6
  %685 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %686 = and i32 %685, 1
  %687 = icmp eq i32 %686, 0
  %688 = zext i1 %687 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 20, ptr noundef nonnull @.str.413, ptr noundef %676, ptr noundef %676, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %679, ptr noundef %684, i8 noundef zeroext %688)
  %689 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %690 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %691 = icmp eq i32 %690, 0
  %692 = zext i1 %691 to i8
  %693 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %694 = icmp eq i32 %693, 0
  %695 = select i1 %694, i64 46, i64 48
  %696 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %695
  %697 = load ptr, ptr %696, align 16, !tbaa !6
  %698 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %699 = and i32 %698, 1
  %700 = icmp eq i32 %699, 0
  %701 = zext i1 %700 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 21, ptr noundef nonnull @.str.414, ptr noundef %689, ptr noundef %689, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %692, ptr noundef %697, i8 noundef zeroext %701)
  %702 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %703 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %704 = icmp eq i32 %703, 0
  %705 = zext i1 %704 to i8
  %706 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %707 = icmp eq i32 %706, 0
  %708 = select i1 %707, i64 46, i64 48
  %709 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %708
  %710 = load ptr, ptr %709, align 16, !tbaa !6
  %711 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %712 = and i32 %711, 1
  %713 = icmp eq i32 %712, 0
  %714 = zext i1 %713 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 22, ptr noundef nonnull @.str.415, ptr noundef %702, ptr noundef %702, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %705, ptr noundef %710, i8 noundef zeroext %714)
  %715 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %716 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %717 = icmp eq i32 %716, 0
  %718 = zext i1 %717 to i8
  %719 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %720 = icmp eq i32 %719, 0
  %721 = select i1 %720, i64 46, i64 48
  %722 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %721
  %723 = load ptr, ptr %722, align 16, !tbaa !6
  %724 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %725 = and i32 %724, 1
  %726 = icmp eq i32 %725, 0
  %727 = zext i1 %726 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 23, ptr noundef nonnull @.str.416, ptr noundef %715, ptr noundef %715, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %718, ptr noundef %723, i8 noundef zeroext %727)
  %728 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %729 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 24, ptr noundef nonnull @.str.417, ptr noundef %728, ptr noundef %728, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %729, i8 noundef zeroext 1)
  %730 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %731 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %732 = icmp eq i32 %731, 0
  %733 = zext i1 %732 to i8
  %734 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %735 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %736 = and i32 %735, 1
  %737 = icmp eq i32 %736, 0
  %738 = zext i1 %737 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 25, ptr noundef nonnull @.str.418, ptr noundef %730, ptr noundef %730, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %733, ptr noundef %734, i8 noundef zeroext %738)
  %739 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %740 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %741 = icmp eq i32 %740, 0
  %742 = zext i1 %741 to i8
  %743 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %744 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %745 = and i32 %744, 1
  %746 = icmp eq i32 %745, 0
  %747 = zext i1 %746 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 26, ptr noundef nonnull @.str.419, ptr noundef %739, ptr noundef %739, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %742, ptr noundef %743, i8 noundef zeroext %747)
  %748 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %749 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %750 = icmp eq i32 %749, 0
  %751 = zext i1 %750 to i8
  %752 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %753 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %754 = and i32 %753, 1
  %755 = icmp eq i32 %754, 0
  %756 = zext i1 %755 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 27, ptr noundef nonnull @.str.420, ptr noundef %748, ptr noundef %748, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %751, ptr noundef %752, i8 noundef zeroext %756)
  %757 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %758 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %759 = icmp eq i32 %758, 0
  %760 = zext i1 %759 to i8
  %761 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %762 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %763 = and i32 %762, 1
  %764 = icmp eq i32 %763, 0
  %765 = zext i1 %764 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 28, ptr noundef nonnull @.str.421, ptr noundef %757, ptr noundef %757, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %760, ptr noundef %761, i8 noundef zeroext %765)
  %766 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %767 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %768 = icmp eq i32 %767, 0
  %769 = zext i1 %768 to i8
  %770 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %771 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %772 = and i32 %771, 1
  %773 = icmp eq i32 %772, 0
  %774 = zext i1 %773 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 29, ptr noundef nonnull @.str.422, ptr noundef %766, ptr noundef %766, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %769, ptr noundef %770, i8 noundef zeroext %774)
  %775 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %776 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %777 = icmp eq i32 %776, 0
  %778 = select i1 %777, i64 46, i64 48
  %779 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %778
  %780 = load ptr, ptr %779, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 30, ptr noundef nonnull @.str.423, ptr noundef %775, ptr noundef %775, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %780, i8 noundef zeroext 1)
  %781 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %782 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %783 = icmp eq i32 %782, 0
  %784 = zext i1 %783 to i8
  %785 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %786 = icmp eq i32 %785, 0
  %787 = select i1 %786, i64 46, i64 48
  %788 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %787
  %789 = load ptr, ptr %788, align 16, !tbaa !6
  %790 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %791 = and i32 %790, 1
  %792 = icmp eq i32 %791, 0
  %793 = zext i1 %792 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 31, ptr noundef nonnull @.str.424, ptr noundef %781, ptr noundef %781, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %784, ptr noundef %789, i8 noundef zeroext %793)
  %794 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %795 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %796 = icmp eq i32 %795, 0
  %797 = load i32, ptr @flag_rounding_math, align 4
  %798 = icmp eq i32 %797, 0
  %799 = select i1 %798, i64 46, i64 48
  %800 = select i1 %796, i64 %799, i64 45
  %801 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %800
  %802 = load ptr, ptr %801, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 32, ptr noundef nonnull @.str.425, ptr noundef %794, ptr noundef %794, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %802, i8 noundef zeroext 1)
  %803 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %804 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %805 = icmp eq i32 %804, 0
  %806 = zext i1 %805 to i8
  %807 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %808 = icmp eq i32 %807, 0
  %809 = load i32, ptr @flag_rounding_math, align 4
  %810 = icmp eq i32 %809, 0
  %811 = select i1 %810, i64 46, i64 48
  %812 = select i1 %808, i64 %811, i64 45
  %813 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %812
  %814 = load ptr, ptr %813, align 8, !tbaa !6
  %815 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %816 = and i32 %815, 1
  %817 = icmp eq i32 %816, 0
  %818 = zext i1 %817 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 33, ptr noundef nonnull @.str.426, ptr noundef %803, ptr noundef %803, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %806, ptr noundef %814, i8 noundef zeroext %818)
  %819 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %820 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %821 = icmp eq i32 %820, 0
  %822 = zext i1 %821 to i8
  %823 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %824 = icmp eq i32 %823, 0
  %825 = load i32, ptr @flag_rounding_math, align 4
  %826 = icmp eq i32 %825, 0
  %827 = select i1 %826, i64 46, i64 48
  %828 = select i1 %824, i64 %827, i64 45
  %829 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %828
  %830 = load ptr, ptr %829, align 8, !tbaa !6
  %831 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %832 = and i32 %831, 1
  %833 = icmp eq i32 %832, 0
  %834 = zext i1 %833 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 34, ptr noundef nonnull @.str.427, ptr noundef %819, ptr noundef %819, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %822, ptr noundef %830, i8 noundef zeroext %834)
  %835 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %836 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %837 = icmp eq i32 %836, 0
  %838 = zext i1 %837 to i8
  %839 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %840 = icmp eq i32 %839, 0
  %841 = select i1 %840, i64 46, i64 48
  %842 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %841
  %843 = load ptr, ptr %842, align 16, !tbaa !6
  %844 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %845 = and i32 %844, 1
  %846 = icmp eq i32 %845, 0
  %847 = zext i1 %846 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 35, ptr noundef nonnull @.str.428, ptr noundef %835, ptr noundef %835, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %838, ptr noundef %843, i8 noundef zeroext %847)
  %848 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %849 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %850 = icmp eq i32 %849, 0
  %851 = load i32, ptr @flag_rounding_math, align 4
  %852 = icmp eq i32 %851, 0
  %853 = select i1 %852, i64 46, i64 48
  %854 = select i1 %850, i64 %853, i64 45
  %855 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %854
  %856 = load ptr, ptr %855, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 36, ptr noundef nonnull @.str.429, ptr noundef %848, ptr noundef %848, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %856, i8 noundef zeroext 0)
  %857 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %858 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %859 = icmp eq i32 %858, 0
  %860 = load i32, ptr @flag_rounding_math, align 4
  %861 = icmp eq i32 %860, 0
  %862 = select i1 %861, i64 46, i64 48
  %863 = select i1 %859, i64 %862, i64 45
  %864 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %863
  %865 = load ptr, ptr %864, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 37, ptr noundef nonnull @.str.430, ptr noundef %857, ptr noundef %857, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %865, i8 noundef zeroext 0)
  %866 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %867 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %868 = icmp eq i32 %867, 0
  %869 = load i32, ptr @flag_rounding_math, align 4
  %870 = icmp eq i32 %869, 0
  %871 = select i1 %870, i64 46, i64 48
  %872 = select i1 %868, i64 %871, i64 45
  %873 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %872
  %874 = load ptr, ptr %873, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 38, ptr noundef nonnull @.str.431, ptr noundef %866, ptr noundef %866, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %874, i8 noundef zeroext 0)
  %875 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %876 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %877 = icmp eq i32 %876, 0
  %878 = zext i1 %877 to i8
  %879 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %880 = icmp eq i32 %879, 0
  %881 = select i1 %880, i64 46, i64 48
  %882 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %881
  %883 = load ptr, ptr %882, align 16, !tbaa !6
  %884 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %885 = and i32 %884, 1
  %886 = icmp eq i32 %885, 0
  %887 = zext i1 %886 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 39, ptr noundef nonnull @.str.432, ptr noundef %875, ptr noundef %875, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %878, ptr noundef %883, i8 noundef zeroext %887)
  %888 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %889 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %890 = icmp eq i32 %889, 0
  %891 = zext i1 %890 to i8
  %892 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %893 = icmp eq i32 %892, 0
  %894 = load i32, ptr @flag_rounding_math, align 4
  %895 = icmp eq i32 %894, 0
  %896 = select i1 %895, i64 46, i64 48
  %897 = select i1 %893, i64 %896, i64 45
  %898 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %897
  %899 = load ptr, ptr %898, align 8, !tbaa !6
  %900 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %901 = and i32 %900, 1
  %902 = icmp eq i32 %901, 0
  %903 = zext i1 %902 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 40, ptr noundef nonnull @.str.433, ptr noundef %888, ptr noundef %888, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %891, ptr noundef %899, i8 noundef zeroext %903)
  %904 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %905 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %906 = icmp eq i32 %905, 0
  %907 = zext i1 %906 to i8
  %908 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %909 = icmp eq i32 %908, 0
  %910 = load i32, ptr @flag_rounding_math, align 4
  %911 = icmp eq i32 %910, 0
  %912 = select i1 %911, i64 46, i64 48
  %913 = select i1 %909, i64 %912, i64 45
  %914 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %913
  %915 = load ptr, ptr %914, align 8, !tbaa !6
  %916 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %917 = and i32 %916, 1
  %918 = icmp eq i32 %917, 0
  %919 = zext i1 %918 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 41, ptr noundef nonnull @.str.434, ptr noundef %904, ptr noundef %904, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %907, ptr noundef %915, i8 noundef zeroext %919)
  %920 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %921 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %922 = icmp eq i32 %921, 0
  %923 = zext i1 %922 to i8
  %924 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %925 = icmp eq i32 %924, 0
  %926 = load i32, ptr @flag_rounding_math, align 4
  %927 = icmp eq i32 %926, 0
  %928 = select i1 %927, i64 46, i64 48
  %929 = select i1 %925, i64 %928, i64 45
  %930 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %929
  %931 = load ptr, ptr %930, align 8, !tbaa !6
  %932 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %933 = and i32 %932, 1
  %934 = icmp eq i32 %933, 0
  %935 = zext i1 %934 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 42, ptr noundef nonnull @.str.435, ptr noundef %920, ptr noundef %920, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %923, ptr noundef %931, i8 noundef zeroext %935)
  %936 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %937 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %938 = icmp eq i32 %937, 0
  %939 = zext i1 %938 to i8
  %940 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %941 = icmp eq i32 %940, 0
  %942 = select i1 %941, i64 46, i64 48
  %943 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %942
  %944 = load ptr, ptr %943, align 16, !tbaa !6
  %945 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %946 = and i32 %945, 1
  %947 = icmp eq i32 %946, 0
  %948 = zext i1 %947 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 43, ptr noundef nonnull @.str.436, ptr noundef %936, ptr noundef %936, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %939, ptr noundef %944, i8 noundef zeroext %948)
  %949 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %950 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %951 = icmp eq i32 %950, 0
  %952 = zext i1 %951 to i8
  %953 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %954 = icmp eq i32 %953, 0
  %955 = select i1 %954, i64 46, i64 48
  %956 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %955
  %957 = load ptr, ptr %956, align 16, !tbaa !6
  %958 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %959 = and i32 %958, 1
  %960 = icmp eq i32 %959, 0
  %961 = zext i1 %960 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 44, ptr noundef nonnull @.str.437, ptr noundef %949, ptr noundef %949, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %952, ptr noundef %957, i8 noundef zeroext %961)
  %962 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %963 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %964 = icmp eq i32 %963, 0
  %965 = load i32, ptr @flag_rounding_math, align 4
  %966 = icmp eq i32 %965, 0
  %967 = select i1 %966, i64 46, i64 48
  %968 = select i1 %964, i64 %967, i64 45
  %969 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %968
  %970 = load ptr, ptr %969, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 45, ptr noundef nonnull @.str.438, ptr noundef %962, ptr noundef %962, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %970, i8 noundef zeroext 1)
  %971 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %972 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %973 = icmp eq i32 %972, 0
  %974 = load i32, ptr @flag_rounding_math, align 4
  %975 = icmp eq i32 %974, 0
  %976 = select i1 %975, i64 46, i64 48
  %977 = select i1 %973, i64 %976, i64 45
  %978 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %977
  %979 = load ptr, ptr %978, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 46, ptr noundef nonnull @.str.439, ptr noundef %971, ptr noundef %971, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %979, i8 noundef zeroext 0)
  %980 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %981 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %982 = icmp eq i32 %981, 0
  %983 = load i32, ptr @flag_rounding_math, align 4
  %984 = icmp eq i32 %983, 0
  %985 = select i1 %984, i64 46, i64 48
  %986 = select i1 %982, i64 %985, i64 45
  %987 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %986
  %988 = load ptr, ptr %987, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 47, ptr noundef nonnull @.str.440, ptr noundef %980, ptr noundef %980, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %988, i8 noundef zeroext 0)
  %989 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %990 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %991 = icmp eq i32 %990, 0
  %992 = load i32, ptr @flag_rounding_math, align 4
  %993 = icmp eq i32 %992, 0
  %994 = select i1 %993, i64 46, i64 48
  %995 = select i1 %991, i64 %994, i64 45
  %996 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %995
  %997 = load ptr, ptr %996, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 48, ptr noundef nonnull @.str.441, ptr noundef %989, ptr noundef %989, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %997, i8 noundef zeroext 0)
  %998 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %999 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1000 = icmp eq i32 %999, 0
  %1001 = zext i1 %1000 to i8
  %1002 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1003 = icmp eq i32 %1002, 0
  %1004 = load i32, ptr @flag_rounding_math, align 4
  %1005 = icmp eq i32 %1004, 0
  %1006 = select i1 %1005, i64 46, i64 48
  %1007 = select i1 %1003, i64 %1006, i64 45
  %1008 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1007
  %1009 = load ptr, ptr %1008, align 8, !tbaa !6
  %1010 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1011 = and i32 %1010, 1
  %1012 = icmp eq i32 %1011, 0
  %1013 = zext i1 %1012 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 49, ptr noundef nonnull @.str.442, ptr noundef %998, ptr noundef %998, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1001, ptr noundef %1009, i8 noundef zeroext %1013)
  %1014 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1015 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1016 = icmp eq i32 %1015, 0
  %1017 = zext i1 %1016 to i8
  %1018 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1019 = icmp eq i32 %1018, 0
  %1020 = load i32, ptr @flag_rounding_math, align 4
  %1021 = icmp eq i32 %1020, 0
  %1022 = select i1 %1021, i64 46, i64 48
  %1023 = select i1 %1019, i64 %1022, i64 45
  %1024 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1023
  %1025 = load ptr, ptr %1024, align 8, !tbaa !6
  %1026 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1027 = and i32 %1026, 1
  %1028 = icmp eq i32 %1027, 0
  %1029 = zext i1 %1028 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 50, ptr noundef nonnull @.str.443, ptr noundef %1014, ptr noundef %1014, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1017, ptr noundef %1025, i8 noundef zeroext %1029)
  %1030 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1031 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1032 = icmp eq i32 %1031, 0
  %1033 = zext i1 %1032 to i8
  %1034 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1035 = icmp eq i32 %1034, 0
  %1036 = load i32, ptr @flag_rounding_math, align 4
  %1037 = icmp eq i32 %1036, 0
  %1038 = select i1 %1037, i64 46, i64 48
  %1039 = select i1 %1035, i64 %1038, i64 45
  %1040 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1039
  %1041 = load ptr, ptr %1040, align 8, !tbaa !6
  %1042 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1043 = and i32 %1042, 1
  %1044 = icmp eq i32 %1043, 0
  %1045 = zext i1 %1044 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 51, ptr noundef nonnull @.str.444, ptr noundef %1030, ptr noundef %1030, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1033, ptr noundef %1041, i8 noundef zeroext %1045)
  %1046 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1047 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1048 = icmp eq i32 %1047, 0
  %1049 = zext i1 %1048 to i8
  %1050 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1051 = icmp eq i32 %1050, 0
  %1052 = load i32, ptr @flag_rounding_math, align 4
  %1053 = icmp eq i32 %1052, 0
  %1054 = select i1 %1053, i64 46, i64 48
  %1055 = select i1 %1051, i64 %1054, i64 45
  %1056 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1055
  %1057 = load ptr, ptr %1056, align 8, !tbaa !6
  %1058 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1059 = and i32 %1058, 1
  %1060 = icmp eq i32 %1059, 0
  %1061 = zext i1 %1060 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 52, ptr noundef nonnull @.str.445, ptr noundef %1046, ptr noundef %1046, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1049, ptr noundef %1057, i8 noundef zeroext %1061)
  %1062 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1063 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1064 = icmp eq i32 %1063, 0
  %1065 = zext i1 %1064 to i8
  %1066 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1067 = icmp eq i32 %1066, 0
  %1068 = load i32, ptr @flag_rounding_math, align 4
  %1069 = icmp eq i32 %1068, 0
  %1070 = select i1 %1069, i64 46, i64 48
  %1071 = select i1 %1067, i64 %1070, i64 45
  %1072 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1071
  %1073 = load ptr, ptr %1072, align 8, !tbaa !6
  %1074 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1075 = and i32 %1074, 1
  %1076 = icmp eq i32 %1075, 0
  %1077 = zext i1 %1076 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 53, ptr noundef nonnull @.str.446, ptr noundef %1062, ptr noundef %1062, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1065, ptr noundef %1073, i8 noundef zeroext %1077)
  %1078 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1079 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1080 = icmp eq i32 %1079, 0
  %1081 = zext i1 %1080 to i8
  %1082 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1083 = icmp eq i32 %1082, 0
  %1084 = load i32, ptr @flag_rounding_math, align 4
  %1085 = icmp eq i32 %1084, 0
  %1086 = select i1 %1085, i64 46, i64 48
  %1087 = select i1 %1083, i64 %1086, i64 45
  %1088 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1087
  %1089 = load ptr, ptr %1088, align 8, !tbaa !6
  %1090 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1091 = and i32 %1090, 1
  %1092 = icmp eq i32 %1091, 0
  %1093 = zext i1 %1092 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 54, ptr noundef nonnull @.str.447, ptr noundef %1078, ptr noundef %1078, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1081, ptr noundef %1089, i8 noundef zeroext %1093)
  %1094 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1095 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1096 = icmp eq i32 %1095, 0
  %1097 = zext i1 %1096 to i8
  %1098 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1099 = icmp eq i32 %1098, 0
  %1100 = load i32, ptr @flag_rounding_math, align 4
  %1101 = icmp eq i32 %1100, 0
  %1102 = select i1 %1101, i64 46, i64 48
  %1103 = select i1 %1099, i64 %1102, i64 45
  %1104 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1103
  %1105 = load ptr, ptr %1104, align 8, !tbaa !6
  %1106 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1107 = and i32 %1106, 1
  %1108 = icmp eq i32 %1107, 0
  %1109 = zext i1 %1108 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 55, ptr noundef nonnull @.str.448, ptr noundef %1094, ptr noundef %1094, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1097, ptr noundef %1105, i8 noundef zeroext %1109)
  %1110 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1111 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1112 = icmp eq i32 %1111, 0
  %1113 = zext i1 %1112 to i8
  %1114 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1115 = icmp eq i32 %1114, 0
  %1116 = load i32, ptr @flag_rounding_math, align 4
  %1117 = icmp eq i32 %1116, 0
  %1118 = select i1 %1117, i64 46, i64 48
  %1119 = select i1 %1115, i64 %1118, i64 45
  %1120 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1119
  %1121 = load ptr, ptr %1120, align 8, !tbaa !6
  %1122 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1123 = and i32 %1122, 1
  %1124 = icmp eq i32 %1123, 0
  %1125 = zext i1 %1124 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 56, ptr noundef nonnull @.str.449, ptr noundef %1110, ptr noundef %1110, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1113, ptr noundef %1121, i8 noundef zeroext %1125)
  %1126 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1127 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 57, ptr noundef nonnull @.str.450, ptr noundef %1126, ptr noundef %1126, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %1127, i8 noundef zeroext 1)
  %1128 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1129 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1130 = icmp eq i32 %1129, 0
  %1131 = zext i1 %1130 to i8
  %1132 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1133 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1134 = and i32 %1133, 1
  %1135 = icmp eq i32 %1134, 0
  %1136 = zext i1 %1135 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 58, ptr noundef nonnull @.str.451, ptr noundef %1128, ptr noundef %1128, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1131, ptr noundef %1132, i8 noundef zeroext %1136)
  %1137 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1138 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1139 = icmp eq i32 %1138, 0
  %1140 = zext i1 %1139 to i8
  %1141 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1142 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1143 = and i32 %1142, 1
  %1144 = icmp eq i32 %1143, 0
  %1145 = zext i1 %1144 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 59, ptr noundef nonnull @.str.452, ptr noundef %1137, ptr noundef %1137, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1140, ptr noundef %1141, i8 noundef zeroext %1145)
  %1146 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %1147 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1148 = icmp eq i32 %1147, 0
  %1149 = zext i1 %1148 to i8
  %1150 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1151 = icmp eq i32 %1150, 0
  %1152 = load i32, ptr @flag_rounding_math, align 4
  %1153 = icmp eq i32 %1152, 0
  %1154 = select i1 %1153, i64 46, i64 48
  %1155 = select i1 %1151, i64 %1154, i64 45
  %1156 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1155
  %1157 = load ptr, ptr %1156, align 8, !tbaa !6
  %1158 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1159 = and i32 %1158, 1
  %1160 = icmp eq i32 %1159, 0
  %1161 = zext i1 %1160 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 60, ptr noundef nonnull @.str.453, ptr noundef %1146, ptr noundef %1146, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1149, ptr noundef %1157, i8 noundef zeroext %1161)
  %1162 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %1163 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1164 = icmp eq i32 %1163, 0
  %1165 = zext i1 %1164 to i8
  %1166 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1167 = icmp eq i32 %1166, 0
  %1168 = load i32, ptr @flag_rounding_math, align 4
  %1169 = icmp eq i32 %1168, 0
  %1170 = select i1 %1169, i64 46, i64 48
  %1171 = select i1 %1167, i64 %1170, i64 45
  %1172 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1171
  %1173 = load ptr, ptr %1172, align 8, !tbaa !6
  %1174 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1175 = and i32 %1174, 1
  %1176 = icmp eq i32 %1175, 0
  %1177 = zext i1 %1176 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 61, ptr noundef nonnull @.str.454, ptr noundef %1162, ptr noundef %1162, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1165, ptr noundef %1173, i8 noundef zeroext %1177)
  %1178 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %1179 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1180 = icmp eq i32 %1179, 0
  %1181 = zext i1 %1180 to i8
  %1182 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1183 = icmp eq i32 %1182, 0
  %1184 = load i32, ptr @flag_rounding_math, align 4
  %1185 = icmp eq i32 %1184, 0
  %1186 = select i1 %1185, i64 46, i64 48
  %1187 = select i1 %1183, i64 %1186, i64 45
  %1188 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1187
  %1189 = load ptr, ptr %1188, align 8, !tbaa !6
  %1190 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1191 = and i32 %1190, 1
  %1192 = icmp eq i32 %1191, 0
  %1193 = zext i1 %1192 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 62, ptr noundef nonnull @.str.455, ptr noundef %1178, ptr noundef %1178, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1181, ptr noundef %1189, i8 noundef zeroext %1193)
  %1194 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1195 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 63, ptr noundef nonnull @.str.456, ptr noundef %1194, ptr noundef %1194, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %1195, i8 noundef zeroext 1)
  %1196 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1197 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1198 = icmp eq i32 %1197, 0
  %1199 = zext i1 %1198 to i8
  %1200 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1201 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1202 = and i32 %1201, 1
  %1203 = icmp eq i32 %1202, 0
  %1204 = zext i1 %1203 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 64, ptr noundef nonnull @.str.457, ptr noundef %1196, ptr noundef %1196, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1199, ptr noundef %1200, i8 noundef zeroext %1204)
  %1205 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1206 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1207 = icmp eq i32 %1206, 0
  %1208 = zext i1 %1207 to i8
  %1209 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1210 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1211 = and i32 %1210, 1
  %1212 = icmp eq i32 %1211, 0
  %1213 = zext i1 %1212 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 65, ptr noundef nonnull @.str.458, ptr noundef %1205, ptr noundef %1205, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1208, ptr noundef %1209, i8 noundef zeroext %1213)
  %1214 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 192), align 32, !tbaa !6
  %1215 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1216 = icmp eq i32 %1215, 0
  %1217 = zext i1 %1216 to i8
  %1218 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %1219 = icmp eq i32 %1218, 0
  %1220 = select i1 %1219, i64 46, i64 48
  %1221 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1220
  %1222 = load ptr, ptr %1221, align 16, !tbaa !6
  %1223 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1224 = and i32 %1223, 1
  %1225 = icmp eq i32 %1224, 0
  %1226 = zext i1 %1225 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 66, ptr noundef nonnull @.str.459, ptr noundef %1214, ptr noundef %1214, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1217, ptr noundef %1222, i8 noundef zeroext %1226)
  %1227 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 191), align 8, !tbaa !6
  %1228 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1229 = icmp eq i32 %1228, 0
  %1230 = zext i1 %1229 to i8
  %1231 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %1232 = icmp eq i32 %1231, 0
  %1233 = select i1 %1232, i64 46, i64 48
  %1234 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1233
  %1235 = load ptr, ptr %1234, align 16, !tbaa !6
  %1236 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1237 = and i32 %1236, 1
  %1238 = icmp eq i32 %1237, 0
  %1239 = zext i1 %1238 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 67, ptr noundef nonnull @.str.460, ptr noundef %1227, ptr noundef %1227, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1230, ptr noundef %1235, i8 noundef zeroext %1239)
  %1240 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 193), align 8, !tbaa !6
  %1241 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1242 = icmp eq i32 %1241, 0
  %1243 = zext i1 %1242 to i8
  %1244 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %1245 = icmp eq i32 %1244, 0
  %1246 = select i1 %1245, i64 46, i64 48
  %1247 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1246
  %1248 = load ptr, ptr %1247, align 16, !tbaa !6
  %1249 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1250 = and i32 %1249, 1
  %1251 = icmp eq i32 %1250, 0
  %1252 = zext i1 %1251 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 68, ptr noundef nonnull @.str.461, ptr noundef %1240, ptr noundef %1240, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1243, ptr noundef %1248, i8 noundef zeroext %1252)
  %1253 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %1254 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1255 = icmp eq i32 %1254, 0
  %1256 = zext i1 %1255 to i8
  %1257 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1258 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1259 = and i32 %1258, 1
  %1260 = icmp eq i32 %1259, 0
  %1261 = zext i1 %1260 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 69, ptr noundef nonnull @.str.462, ptr noundef %1253, ptr noundef %1253, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1256, ptr noundef %1257, i8 noundef zeroext %1261)
  %1262 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %1263 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1264 = icmp eq i32 %1263, 0
  %1265 = zext i1 %1264 to i8
  %1266 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1267 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1268 = and i32 %1267, 1
  %1269 = icmp eq i32 %1268, 0
  %1270 = zext i1 %1269 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 70, ptr noundef nonnull @.str.463, ptr noundef %1262, ptr noundef %1262, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1265, ptr noundef %1266, i8 noundef zeroext %1270)
  %1271 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %1272 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1273 = icmp eq i32 %1272, 0
  %1274 = zext i1 %1273 to i8
  %1275 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1276 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1277 = and i32 %1276, 1
  %1278 = icmp eq i32 %1277, 0
  %1279 = zext i1 %1278 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 71, ptr noundef nonnull @.str.464, ptr noundef %1271, ptr noundef %1271, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1274, ptr noundef %1275, i8 noundef zeroext %1279)
  %1280 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %1281 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1282 = icmp eq i32 %1281, 0
  %1283 = zext i1 %1282 to i8
  %1284 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1285 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1286 = and i32 %1285, 1
  %1287 = icmp eq i32 %1286, 0
  %1288 = zext i1 %1287 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 72, ptr noundef nonnull @.str.465, ptr noundef %1280, ptr noundef %1280, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1283, ptr noundef %1284, i8 noundef zeroext %1288)
  %1289 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %1290 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1291 = icmp eq i32 %1290, 0
  %1292 = zext i1 %1291 to i8
  %1293 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1294 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1295 = and i32 %1294, 1
  %1296 = icmp eq i32 %1295, 0
  %1297 = zext i1 %1296 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 73, ptr noundef nonnull @.str.466, ptr noundef %1289, ptr noundef %1289, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1292, ptr noundef %1293, i8 noundef zeroext %1297)
  %1298 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %1299 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1300 = icmp eq i32 %1299, 0
  %1301 = zext i1 %1300 to i8
  %1302 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1303 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1304 = and i32 %1303, 1
  %1305 = icmp eq i32 %1304, 0
  %1306 = zext i1 %1305 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 74, ptr noundef nonnull @.str.467, ptr noundef %1298, ptr noundef %1298, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1301, ptr noundef %1302, i8 noundef zeroext %1306)
  %1307 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %1308 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1309 = icmp eq i32 %1308, 0
  %1310 = load i32, ptr @flag_rounding_math, align 4
  %1311 = icmp eq i32 %1310, 0
  %1312 = select i1 %1311, i64 46, i64 48
  %1313 = select i1 %1309, i64 %1312, i64 45
  %1314 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1313
  %1315 = load ptr, ptr %1314, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 75, ptr noundef nonnull @.str.468, ptr noundef %1307, ptr noundef %1307, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %1315, i8 noundef zeroext 1)
  %1316 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %1317 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1318 = icmp eq i32 %1317, 0
  %1319 = zext i1 %1318 to i8
  %1320 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1321 = icmp eq i32 %1320, 0
  %1322 = load i32, ptr @flag_rounding_math, align 4
  %1323 = icmp eq i32 %1322, 0
  %1324 = select i1 %1323, i64 46, i64 48
  %1325 = select i1 %1321, i64 %1324, i64 45
  %1326 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1325
  %1327 = load ptr, ptr %1326, align 8, !tbaa !6
  %1328 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1329 = and i32 %1328, 1
  %1330 = icmp eq i32 %1329, 0
  %1331 = zext i1 %1330 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 76, ptr noundef nonnull @.str.469, ptr noundef %1316, ptr noundef %1316, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1319, ptr noundef %1327, i8 noundef zeroext %1331)
  %1332 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %1333 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1334 = icmp eq i32 %1333, 0
  %1335 = zext i1 %1334 to i8
  %1336 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1337 = icmp eq i32 %1336, 0
  %1338 = load i32, ptr @flag_rounding_math, align 4
  %1339 = icmp eq i32 %1338, 0
  %1340 = select i1 %1339, i64 46, i64 48
  %1341 = select i1 %1337, i64 %1340, i64 45
  %1342 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1341
  %1343 = load ptr, ptr %1342, align 8, !tbaa !6
  %1344 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1345 = and i32 %1344, 1
  %1346 = icmp eq i32 %1345, 0
  %1347 = zext i1 %1346 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 77, ptr noundef nonnull @.str.470, ptr noundef %1332, ptr noundef %1332, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1335, ptr noundef %1343, i8 noundef zeroext %1347)
  %1348 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 155), align 8, !tbaa !6
  %1349 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 78, ptr noundef nonnull @.str.471, ptr noundef %1348, ptr noundef %1348, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %1349, i8 noundef zeroext 1)
  %1350 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 154), align 16, !tbaa !6
  %1351 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1352 = icmp eq i32 %1351, 0
  %1353 = zext i1 %1352 to i8
  %1354 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %1355 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1356 = and i32 %1355, 1
  %1357 = icmp eq i32 %1356, 0
  %1358 = zext i1 %1357 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 79, ptr noundef nonnull @.str.472, ptr noundef %1350, ptr noundef %1350, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1353, ptr noundef %1354, i8 noundef zeroext %1358)
  %1359 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 156), align 32, !tbaa !6
  %1360 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1361 = icmp eq i32 %1360, 0
  %1362 = zext i1 %1361 to i8
  %1363 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %1364 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1365 = and i32 %1364, 1
  %1366 = icmp eq i32 %1365, 0
  %1367 = zext i1 %1366 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 80, ptr noundef nonnull @.str.473, ptr noundef %1359, ptr noundef %1359, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1362, ptr noundef %1363, i8 noundef zeroext %1367)
  %1368 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1369 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 81, ptr noundef nonnull @.str.474, ptr noundef %1368, ptr noundef %1368, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1369, i8 noundef zeroext 0)
  %1370 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1371 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 82, ptr noundef nonnull @.str.475, ptr noundef %1370, ptr noundef %1370, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1371, i8 noundef zeroext 0)
  %1372 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1373 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 83, ptr noundef nonnull @.str.476, ptr noundef %1372, ptr noundef %1372, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1373, i8 noundef zeroext 0)
  %1374 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 155), align 8, !tbaa !6
  %1375 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 84, ptr noundef nonnull @.str.477, ptr noundef %1374, ptr noundef %1374, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1375, i8 noundef zeroext 0)
  %1376 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 154), align 16, !tbaa !6
  %1377 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 85, ptr noundef nonnull @.str.478, ptr noundef %1376, ptr noundef %1376, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1377, i8 noundef zeroext 0)
  %1378 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 156), align 32, !tbaa !6
  %1379 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 86, ptr noundef nonnull @.str.479, ptr noundef %1378, ptr noundef %1378, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1379, i8 noundef zeroext 0)
  %1380 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 59), align 8, !tbaa !6
  %1381 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %1382 = icmp eq ptr %1381, %1380
  br i1 %1382, label %1387, label %1383

1383:                                             ; preds = %2
  %1384 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1385 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.480, ptr noundef %1380, i32 noundef 87, i32 noundef 3, ptr noundef null, ptr noundef %1384) #22
  store ptr %1385, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 87), align 8, !tbaa !6
  store ptr %1385, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 87), align 8, !tbaa !6
  %1386 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1387

1387:                                             ; preds = %2, %1383
  %1388 = phi ptr [ %1380, %2 ], [ %1386, %1383 ]
  %1389 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 58), align 16, !tbaa !6
  %1390 = icmp eq ptr %1388, %1389
  br i1 %1390, label %1395, label %1391

1391:                                             ; preds = %1387
  %1392 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1393 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.481, ptr noundef %1389, i32 noundef 88, i32 noundef 3, ptr noundef null, ptr noundef %1392) #22
  store ptr %1393, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 88), align 16, !tbaa !6
  store ptr %1393, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 88), align 16, !tbaa !6
  %1394 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1395

1395:                                             ; preds = %1387, %1391
  %1396 = phi ptr [ %1388, %1387 ], [ %1394, %1391 ]
  %1397 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 60), align 32, !tbaa !6
  %1398 = icmp eq ptr %1396, %1397
  br i1 %1398, label %1402, label %1399

1399:                                             ; preds = %1395
  %1400 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1401 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.482, ptr noundef %1397, i32 noundef 89, i32 noundef 3, ptr noundef null, ptr noundef %1400) #22
  store ptr %1401, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 89), align 8, !tbaa !6
  store ptr %1401, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 89), align 8, !tbaa !6
  br label %1402

1402:                                             ; preds = %1395, %1399
  %1403 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %1404 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1405 = icmp eq i32 %1404, 0
  %1406 = zext i1 %1405 to i8
  %1407 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1408 = icmp eq i32 %1407, 0
  %1409 = load i32, ptr @flag_rounding_math, align 4
  %1410 = icmp eq i32 %1409, 0
  %1411 = select i1 %1410, i64 46, i64 48
  %1412 = select i1 %1408, i64 %1411, i64 45
  %1413 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1412
  %1414 = load ptr, ptr %1413, align 8, !tbaa !6
  %1415 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1416 = and i32 %1415, 1
  %1417 = icmp eq i32 %1416, 0
  %1418 = zext i1 %1417 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 90, ptr noundef nonnull @.str.483, ptr noundef %1403, ptr noundef %1403, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1406, ptr noundef %1414, i8 noundef zeroext %1418)
  %1419 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %1420 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1421 = icmp eq i32 %1420, 0
  %1422 = zext i1 %1421 to i8
  %1423 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1424 = icmp eq i32 %1423, 0
  %1425 = load i32, ptr @flag_rounding_math, align 4
  %1426 = icmp eq i32 %1425, 0
  %1427 = select i1 %1426, i64 46, i64 48
  %1428 = select i1 %1424, i64 %1427, i64 45
  %1429 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1428
  %1430 = load ptr, ptr %1429, align 8, !tbaa !6
  %1431 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1432 = and i32 %1431, 1
  %1433 = icmp eq i32 %1432, 0
  %1434 = zext i1 %1433 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 91, ptr noundef nonnull @.str.484, ptr noundef %1419, ptr noundef %1419, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1422, ptr noundef %1430, i8 noundef zeroext %1434)
  %1435 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %1436 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1437 = icmp eq i32 %1436, 0
  %1438 = zext i1 %1437 to i8
  %1439 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1440 = icmp eq i32 %1439, 0
  %1441 = load i32, ptr @flag_rounding_math, align 4
  %1442 = icmp eq i32 %1441, 0
  %1443 = select i1 %1442, i64 46, i64 48
  %1444 = select i1 %1440, i64 %1443, i64 45
  %1445 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1444
  %1446 = load ptr, ptr %1445, align 8, !tbaa !6
  %1447 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1448 = and i32 %1447, 1
  %1449 = icmp eq i32 %1448, 0
  %1450 = zext i1 %1449 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 92, ptr noundef nonnull @.str.485, ptr noundef %1435, ptr noundef %1435, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1438, ptr noundef %1446, i8 noundef zeroext %1450)
  %1451 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 91), align 8, !tbaa !6
  %1452 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1453 = icmp eq i32 %1452, 0
  %1454 = zext i1 %1453 to i8
  %1455 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1456 = icmp eq i32 %1455, 0
  %1457 = load i32, ptr @flag_rounding_math, align 4
  %1458 = icmp eq i32 %1457, 0
  %1459 = select i1 %1458, i64 46, i64 48
  %1460 = select i1 %1456, i64 %1459, i64 45
  %1461 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1460
  %1462 = load ptr, ptr %1461, align 8, !tbaa !6
  %1463 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1464 = and i32 %1463, 1
  %1465 = icmp eq i32 %1464, 0
  %1466 = zext i1 %1465 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 93, ptr noundef nonnull @.str.486, ptr noundef %1451, ptr noundef %1451, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1454, ptr noundef %1462, i8 noundef zeroext %1466)
  %1467 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 90), align 16, !tbaa !6
  %1468 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1469 = icmp eq i32 %1468, 0
  %1470 = zext i1 %1469 to i8
  %1471 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1472 = icmp eq i32 %1471, 0
  %1473 = load i32, ptr @flag_rounding_math, align 4
  %1474 = icmp eq i32 %1473, 0
  %1475 = select i1 %1474, i64 46, i64 48
  %1476 = select i1 %1472, i64 %1475, i64 45
  %1477 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1476
  %1478 = load ptr, ptr %1477, align 8, !tbaa !6
  %1479 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1480 = and i32 %1479, 1
  %1481 = icmp eq i32 %1480, 0
  %1482 = zext i1 %1481 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 94, ptr noundef nonnull @.str.487, ptr noundef %1467, ptr noundef %1467, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1470, ptr noundef %1478, i8 noundef zeroext %1482)
  %1483 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 92), align 32, !tbaa !6
  %1484 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1485 = icmp eq i32 %1484, 0
  %1486 = zext i1 %1485 to i8
  %1487 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1488 = icmp eq i32 %1487, 0
  %1489 = load i32, ptr @flag_rounding_math, align 4
  %1490 = icmp eq i32 %1489, 0
  %1491 = select i1 %1490, i64 46, i64 48
  %1492 = select i1 %1488, i64 %1491, i64 45
  %1493 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1492
  %1494 = load ptr, ptr %1493, align 8, !tbaa !6
  %1495 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1496 = and i32 %1495, 1
  %1497 = icmp eq i32 %1496, 0
  %1498 = zext i1 %1497 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 95, ptr noundef nonnull @.str.488, ptr noundef %1483, ptr noundef %1483, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1486, ptr noundef %1494, i8 noundef zeroext %1498)
  %1499 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 59), align 8, !tbaa !6
  %1500 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %1501 = icmp eq ptr %1500, %1499
  br i1 %1501, label %1506, label %1502

1502:                                             ; preds = %1402
  %1503 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1504 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.489, ptr noundef %1499, i32 noundef 96, i32 noundef 3, ptr noundef null, ptr noundef %1503) #22
  store ptr %1504, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 96), align 16, !tbaa !6
  store ptr %1504, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 96), align 16, !tbaa !6
  %1505 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1506

1506:                                             ; preds = %1402, %1502
  %1507 = phi ptr [ %1499, %1402 ], [ %1505, %1502 ]
  %1508 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 58), align 16, !tbaa !6
  %1509 = icmp eq ptr %1507, %1508
  br i1 %1509, label %1514, label %1510

1510:                                             ; preds = %1506
  %1511 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1512 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.490, ptr noundef %1508, i32 noundef 97, i32 noundef 3, ptr noundef null, ptr noundef %1511) #22
  store ptr %1512, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 97), align 8, !tbaa !6
  store ptr %1512, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 97), align 8, !tbaa !6
  %1513 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1514

1514:                                             ; preds = %1506, %1510
  %1515 = phi ptr [ %1507, %1506 ], [ %1513, %1510 ]
  %1516 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 60), align 32, !tbaa !6
  %1517 = icmp eq ptr %1515, %1516
  br i1 %1517, label %1522, label %1518

1518:                                             ; preds = %1514
  %1519 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1520 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.491, ptr noundef %1516, i32 noundef 98, i32 noundef 3, ptr noundef null, ptr noundef %1519) #22
  store ptr %1520, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 98), align 16, !tbaa !6
  store ptr %1520, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 98), align 16, !tbaa !6
  %1521 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1522

1522:                                             ; preds = %1514, %1518
  %1523 = phi ptr [ %1515, %1514 ], [ %1521, %1518 ]
  %1524 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 61), align 8, !tbaa !6
  %1525 = icmp eq ptr %1523, %1524
  br i1 %1525, label %1530, label %1526

1526:                                             ; preds = %1522
  %1527 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1528 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.492, ptr noundef %1524, i32 noundef 99, i32 noundef 3, ptr noundef null, ptr noundef %1527) #22
  store ptr %1528, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 99), align 8, !tbaa !6
  store ptr %1528, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 99), align 8, !tbaa !6
  %1529 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1530

1530:                                             ; preds = %1522, %1526
  %1531 = phi ptr [ %1523, %1522 ], [ %1529, %1526 ]
  %1532 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 62), align 16, !tbaa !6
  %1533 = icmp eq ptr %1531, %1532
  br i1 %1533, label %1538, label %1534

1534:                                             ; preds = %1530
  %1535 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1536 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.493, ptr noundef %1532, i32 noundef 100, i32 noundef 3, ptr noundef null, ptr noundef %1535) #22
  store ptr %1536, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 100), align 16, !tbaa !6
  store ptr %1536, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 100), align 16, !tbaa !6
  %1537 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1538

1538:                                             ; preds = %1530, %1534
  %1539 = phi ptr [ %1531, %1530 ], [ %1537, %1534 ]
  %1540 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 63), align 8, !tbaa !6
  %1541 = icmp eq ptr %1539, %1540
  br i1 %1541, label %1545, label %1542

1542:                                             ; preds = %1538
  %1543 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1544 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.494, ptr noundef %1540, i32 noundef 101, i32 noundef 3, ptr noundef null, ptr noundef %1543) #22
  store ptr %1544, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 101), align 8, !tbaa !6
  store ptr %1544, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 101), align 8, !tbaa !6
  br label %1545

1545:                                             ; preds = %1538, %1542
  %1546 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1547 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1548 = icmp eq i32 %1547, 0
  %1549 = load i32, ptr @flag_rounding_math, align 4
  %1550 = icmp eq i32 %1549, 0
  %1551 = select i1 %1550, i64 46, i64 48
  %1552 = select i1 %1548, i64 %1551, i64 45
  %1553 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1552
  %1554 = load ptr, ptr %1553, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 102, ptr noundef nonnull @.str.495, ptr noundef %1546, ptr noundef %1546, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1554, i8 noundef zeroext 0)
  %1555 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1556 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1557 = icmp eq i32 %1556, 0
  %1558 = load i32, ptr @flag_rounding_math, align 4
  %1559 = icmp eq i32 %1558, 0
  %1560 = select i1 %1559, i64 46, i64 48
  %1561 = select i1 %1557, i64 %1560, i64 45
  %1562 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1561
  %1563 = load ptr, ptr %1562, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 103, ptr noundef nonnull @.str.496, ptr noundef %1555, ptr noundef %1555, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1563, i8 noundef zeroext 0)
  %1564 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1565 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1566 = icmp eq i32 %1565, 0
  %1567 = load i32, ptr @flag_rounding_math, align 4
  %1568 = icmp eq i32 %1567, 0
  %1569 = select i1 %1568, i64 46, i64 48
  %1570 = select i1 %1566, i64 %1569, i64 45
  %1571 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1570
  %1572 = load ptr, ptr %1571, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 104, ptr noundef nonnull @.str.497, ptr noundef %1564, ptr noundef %1564, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1572, i8 noundef zeroext 0)
  %1573 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1574 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1575 = icmp eq i32 %1574, 0
  %1576 = load i32, ptr @flag_rounding_math, align 4
  %1577 = icmp eq i32 %1576, 0
  %1578 = select i1 %1577, i64 46, i64 48
  %1579 = select i1 %1575, i64 %1578, i64 45
  %1580 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1579
  %1581 = load ptr, ptr %1580, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 105, ptr noundef nonnull @.str.498, ptr noundef %1573, ptr noundef %1573, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1581, i8 noundef zeroext 0)
  %1582 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1583 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1584 = icmp eq i32 %1583, 0
  %1585 = load i32, ptr @flag_rounding_math, align 4
  %1586 = icmp eq i32 %1585, 0
  %1587 = select i1 %1586, i64 46, i64 48
  %1588 = select i1 %1584, i64 %1587, i64 45
  %1589 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1588
  %1590 = load ptr, ptr %1589, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 106, ptr noundef nonnull @.str.499, ptr noundef %1582, ptr noundef %1582, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1590, i8 noundef zeroext 0)
  %1591 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1592 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1593 = icmp eq i32 %1592, 0
  %1594 = load i32, ptr @flag_rounding_math, align 4
  %1595 = icmp eq i32 %1594, 0
  %1596 = select i1 %1595, i64 46, i64 48
  %1597 = select i1 %1593, i64 %1596, i64 45
  %1598 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1597
  %1599 = load ptr, ptr %1598, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 107, ptr noundef nonnull @.str.500, ptr noundef %1591, ptr noundef %1591, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1599, i8 noundef zeroext 0)
  %1600 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 158), align 16, !tbaa !6
  %1601 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1602 = icmp eq i32 %1601, 0
  %1603 = load i32, ptr @flag_rounding_math, align 4
  %1604 = icmp eq i32 %1603, 0
  %1605 = select i1 %1604, i64 46, i64 48
  %1606 = select i1 %1602, i64 %1605, i64 45
  %1607 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1606
  %1608 = load ptr, ptr %1607, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 108, ptr noundef nonnull @.str.501, ptr noundef %1600, ptr noundef %1600, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1608, i8 noundef zeroext 0)
  %1609 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 157), align 8, !tbaa !6
  %1610 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1611 = icmp eq i32 %1610, 0
  %1612 = load i32, ptr @flag_rounding_math, align 4
  %1613 = icmp eq i32 %1612, 0
  %1614 = select i1 %1613, i64 46, i64 48
  %1615 = select i1 %1611, i64 %1614, i64 45
  %1616 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1615
  %1617 = load ptr, ptr %1616, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 109, ptr noundef nonnull @.str.502, ptr noundef %1609, ptr noundef %1609, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1617, i8 noundef zeroext 0)
  %1618 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 159), align 8, !tbaa !6
  %1619 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1620 = icmp eq i32 %1619, 0
  %1621 = load i32, ptr @flag_rounding_math, align 4
  %1622 = icmp eq i32 %1621, 0
  %1623 = select i1 %1622, i64 46, i64 48
  %1624 = select i1 %1620, i64 %1623, i64 45
  %1625 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1624
  %1626 = load ptr, ptr %1625, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 110, ptr noundef nonnull @.str.503, ptr noundef %1618, ptr noundef %1618, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1626, i8 noundef zeroext 0)
  %1627 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 97), align 8, !tbaa !6
  %1628 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %1629 = icmp eq ptr %1628, %1627
  br i1 %1629, label %1634, label %1630

1630:                                             ; preds = %1545
  %1631 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1632 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.504, ptr noundef %1627, i32 noundef 111, i32 noundef 3, ptr noundef null, ptr noundef %1631) #22
  store ptr %1632, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 111), align 8, !tbaa !6
  store ptr %1632, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 111), align 8, !tbaa !6
  %1633 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1634

1634:                                             ; preds = %1545, %1630
  %1635 = phi ptr [ %1627, %1545 ], [ %1633, %1630 ]
  %1636 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 96), align 32, !tbaa !6
  %1637 = icmp eq ptr %1635, %1636
  br i1 %1637, label %1642, label %1638

1638:                                             ; preds = %1634
  %1639 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1640 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.505, ptr noundef %1636, i32 noundef 112, i32 noundef 3, ptr noundef null, ptr noundef %1639) #22
  store ptr %1640, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 112), align 16, !tbaa !6
  store ptr %1640, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 112), align 16, !tbaa !6
  %1641 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1642

1642:                                             ; preds = %1634, %1638
  %1643 = phi ptr [ %1635, %1634 ], [ %1641, %1638 ]
  %1644 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 98), align 16, !tbaa !6
  %1645 = icmp eq ptr %1643, %1644
  br i1 %1645, label %1649, label %1646

1646:                                             ; preds = %1642
  %1647 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1648 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.506, ptr noundef %1644, i32 noundef 113, i32 noundef 3, ptr noundef null, ptr noundef %1647) #22
  store ptr %1648, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 113), align 8, !tbaa !6
  store ptr %1648, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 113), align 8, !tbaa !6
  br label %1649

1649:                                             ; preds = %1642, %1646
  %1650 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 152), align 32, !tbaa !6
  %1651 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1652 = icmp eq i32 %1651, 0
  %1653 = load i32, ptr @flag_rounding_math, align 4
  %1654 = icmp eq i32 %1653, 0
  %1655 = select i1 %1654, i64 46, i64 48
  %1656 = select i1 %1652, i64 %1655, i64 45
  %1657 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1656
  %1658 = load ptr, ptr %1657, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 114, ptr noundef nonnull @.str.507, ptr noundef %1650, ptr noundef %1650, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %1658, i8 noundef zeroext 1)
  %1659 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 151), align 8, !tbaa !6
  %1660 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1661 = icmp eq i32 %1660, 0
  %1662 = zext i1 %1661 to i8
  %1663 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1664 = icmp eq i32 %1663, 0
  %1665 = load i32, ptr @flag_rounding_math, align 4
  %1666 = icmp eq i32 %1665, 0
  %1667 = select i1 %1666, i64 46, i64 48
  %1668 = select i1 %1664, i64 %1667, i64 45
  %1669 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1668
  %1670 = load ptr, ptr %1669, align 8, !tbaa !6
  %1671 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1672 = and i32 %1671, 1
  %1673 = icmp eq i32 %1672, 0
  %1674 = zext i1 %1673 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 115, ptr noundef nonnull @.str.508, ptr noundef %1659, ptr noundef %1659, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1662, ptr noundef %1670, i8 noundef zeroext %1674)
  %1675 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 153), align 8, !tbaa !6
  %1676 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1677 = icmp eq i32 %1676, 0
  %1678 = zext i1 %1677 to i8
  %1679 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1680 = icmp eq i32 %1679, 0
  %1681 = load i32, ptr @flag_rounding_math, align 4
  %1682 = icmp eq i32 %1681, 0
  %1683 = select i1 %1682, i64 46, i64 48
  %1684 = select i1 %1680, i64 %1683, i64 45
  %1685 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1684
  %1686 = load ptr, ptr %1685, align 8, !tbaa !6
  %1687 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1688 = and i32 %1687, 1
  %1689 = icmp eq i32 %1688, 0
  %1690 = zext i1 %1689 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 116, ptr noundef nonnull @.str.509, ptr noundef %1675, ptr noundef %1675, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1678, ptr noundef %1686, i8 noundef zeroext %1690)
  %1691 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 97), align 8, !tbaa !6
  %1692 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %1693 = icmp eq ptr %1692, %1691
  br i1 %1693, label %1698, label %1694

1694:                                             ; preds = %1649
  %1695 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1696 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.510, ptr noundef %1691, i32 noundef 117, i32 noundef 3, ptr noundef null, ptr noundef %1695) #22
  store ptr %1696, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 117), align 8, !tbaa !6
  store ptr %1696, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 117), align 8, !tbaa !6
  %1697 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1698

1698:                                             ; preds = %1649, %1694
  %1699 = phi ptr [ %1691, %1649 ], [ %1697, %1694 ]
  %1700 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 96), align 32, !tbaa !6
  %1701 = icmp eq ptr %1699, %1700
  br i1 %1701, label %1706, label %1702

1702:                                             ; preds = %1698
  %1703 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1704 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.511, ptr noundef %1700, i32 noundef 118, i32 noundef 3, ptr noundef null, ptr noundef %1703) #22
  store ptr %1704, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 118), align 16, !tbaa !6
  store ptr %1704, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 118), align 16, !tbaa !6
  %1705 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1706

1706:                                             ; preds = %1698, %1702
  %1707 = phi ptr [ %1699, %1698 ], [ %1705, %1702 ]
  %1708 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 98), align 16, !tbaa !6
  %1709 = icmp eq ptr %1707, %1708
  br i1 %1709, label %1713, label %1710

1710:                                             ; preds = %1706
  %1711 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1712 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.512, ptr noundef %1708, i32 noundef 119, i32 noundef 3, ptr noundef null, ptr noundef %1711) #22
  store ptr %1712, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 119), align 8, !tbaa !6
  store ptr %1712, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 119), align 8, !tbaa !6
  br label %1713

1713:                                             ; preds = %1706, %1710
  %1714 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1715 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1716 = icmp eq i32 %1715, 0
  %1717 = zext i1 %1716 to i8
  %1718 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %1719 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1720 = and i32 %1719, 1
  %1721 = icmp eq i32 %1720, 0
  %1722 = zext i1 %1721 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 120, ptr noundef nonnull @.str.513, ptr noundef %1714, ptr noundef %1714, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1717, ptr noundef %1718, i8 noundef zeroext %1722)
  %1723 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1724 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1725 = icmp eq i32 %1724, 0
  %1726 = zext i1 %1725 to i8
  %1727 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %1728 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1729 = and i32 %1728, 1
  %1730 = icmp eq i32 %1729, 0
  %1731 = zext i1 %1730 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 121, ptr noundef nonnull @.str.514, ptr noundef %1723, ptr noundef %1723, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1726, ptr noundef %1727, i8 noundef zeroext %1731)
  %1732 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1733 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1734 = icmp eq i32 %1733, 0
  %1735 = zext i1 %1734 to i8
  %1736 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %1737 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1738 = and i32 %1737, 1
  %1739 = icmp eq i32 %1738, 0
  %1740 = zext i1 %1739 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 122, ptr noundef nonnull @.str.515, ptr noundef %1732, ptr noundef %1732, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1735, ptr noundef %1736, i8 noundef zeroext %1740)
  %1741 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 155), align 8, !tbaa !6
  %1742 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 123, ptr noundef nonnull @.str.516, ptr noundef %1741, ptr noundef %1741, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1742, i8 noundef zeroext 0)
  %1743 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 154), align 16, !tbaa !6
  %1744 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 124, ptr noundef nonnull @.str.517, ptr noundef %1743, ptr noundef %1743, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1744, i8 noundef zeroext 0)
  %1745 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 156), align 32, !tbaa !6
  %1746 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 125, ptr noundef nonnull @.str.518, ptr noundef %1745, ptr noundef %1745, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %1746, i8 noundef zeroext 0)
  %1747 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 100), align 32, !tbaa !6
  %1748 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %1749 = icmp eq ptr %1748, %1747
  br i1 %1749, label %1754, label %1750

1750:                                             ; preds = %1713
  %1751 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1752 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.519, ptr noundef %1747, i32 noundef 126, i32 noundef 3, ptr noundef null, ptr noundef %1751) #22
  store ptr %1752, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 126), align 16, !tbaa !6
  store ptr %1752, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 126), align 16, !tbaa !6
  %1753 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1754

1754:                                             ; preds = %1713, %1750
  %1755 = phi ptr [ %1747, %1713 ], [ %1753, %1750 ]
  %1756 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 99), align 8, !tbaa !6
  %1757 = icmp eq ptr %1755, %1756
  br i1 %1757, label %1762, label %1758

1758:                                             ; preds = %1754
  %1759 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1760 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.520, ptr noundef %1756, i32 noundef 127, i32 noundef 3, ptr noundef null, ptr noundef %1759) #22
  store ptr %1760, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 127), align 8, !tbaa !6
  store ptr %1760, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 127), align 8, !tbaa !6
  %1761 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1762

1762:                                             ; preds = %1754, %1758
  %1763 = phi ptr [ %1755, %1754 ], [ %1761, %1758 ]
  %1764 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 101), align 8, !tbaa !6
  %1765 = icmp eq ptr %1763, %1764
  br i1 %1765, label %1770, label %1766

1766:                                             ; preds = %1762
  %1767 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1768 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.521, ptr noundef %1764, i32 noundef 128, i32 noundef 3, ptr noundef null, ptr noundef %1767) #22
  store ptr %1768, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 128), align 16, !tbaa !6
  store ptr %1768, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 128), align 16, !tbaa !6
  %1769 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1770

1770:                                             ; preds = %1762, %1766
  %1771 = phi ptr [ %1763, %1762 ], [ %1769, %1766 ]
  %1772 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 100), align 32, !tbaa !6
  %1773 = icmp eq ptr %1771, %1772
  br i1 %1773, label %1778, label %1774

1774:                                             ; preds = %1770
  %1775 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1776 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.522, ptr noundef %1772, i32 noundef 129, i32 noundef 3, ptr noundef null, ptr noundef %1775) #22
  store ptr %1776, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 129), align 8, !tbaa !6
  store ptr %1776, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 129), align 8, !tbaa !6
  %1777 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1778

1778:                                             ; preds = %1770, %1774
  %1779 = phi ptr [ %1771, %1770 ], [ %1777, %1774 ]
  %1780 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 99), align 8, !tbaa !6
  %1781 = icmp eq ptr %1779, %1780
  br i1 %1781, label %1786, label %1782

1782:                                             ; preds = %1778
  %1783 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1784 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.523, ptr noundef %1780, i32 noundef 130, i32 noundef 3, ptr noundef null, ptr noundef %1783) #22
  store ptr %1784, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 130), align 16, !tbaa !6
  store ptr %1784, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 130), align 16, !tbaa !6
  %1785 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %1786

1786:                                             ; preds = %1778, %1782
  %1787 = phi ptr [ %1779, %1778 ], [ %1785, %1782 ]
  %1788 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 101), align 8, !tbaa !6
  %1789 = icmp eq ptr %1787, %1788
  br i1 %1789, label %1793, label %1790

1790:                                             ; preds = %1786
  %1791 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %1792 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.524, ptr noundef %1788, i32 noundef 131, i32 noundef 3, ptr noundef null, ptr noundef %1791) #22
  store ptr %1792, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 131), align 8, !tbaa !6
  store ptr %1792, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 131), align 8, !tbaa !6
  br label %1793

1793:                                             ; preds = %1786, %1790
  %1794 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 100), align 32, !tbaa !6
  %1795 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1796 = icmp eq i32 %1795, 0
  %1797 = zext i1 %1796 to i8
  %1798 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1799 = icmp eq i32 %1798, 0
  %1800 = load i32, ptr @flag_rounding_math, align 4
  %1801 = icmp eq i32 %1800, 0
  %1802 = select i1 %1801, i64 46, i64 48
  %1803 = select i1 %1799, i64 %1802, i64 45
  %1804 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1803
  %1805 = load ptr, ptr %1804, align 8, !tbaa !6
  %1806 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1807 = and i32 %1806, 1
  %1808 = icmp eq i32 %1807, 0
  %1809 = zext i1 %1808 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 132, ptr noundef nonnull @.str.525, ptr noundef %1794, ptr noundef %1794, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1797, ptr noundef %1805, i8 noundef zeroext %1809)
  %1810 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 99), align 8, !tbaa !6
  %1811 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1812 = icmp eq i32 %1811, 0
  %1813 = zext i1 %1812 to i8
  %1814 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1815 = icmp eq i32 %1814, 0
  %1816 = load i32, ptr @flag_rounding_math, align 4
  %1817 = icmp eq i32 %1816, 0
  %1818 = select i1 %1817, i64 46, i64 48
  %1819 = select i1 %1815, i64 %1818, i64 45
  %1820 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1819
  %1821 = load ptr, ptr %1820, align 8, !tbaa !6
  %1822 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1823 = and i32 %1822, 1
  %1824 = icmp eq i32 %1823, 0
  %1825 = zext i1 %1824 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 133, ptr noundef nonnull @.str.526, ptr noundef %1810, ptr noundef %1810, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1813, ptr noundef %1821, i8 noundef zeroext %1825)
  %1826 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 101), align 8, !tbaa !6
  %1827 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1828 = icmp eq i32 %1827, 0
  %1829 = zext i1 %1828 to i8
  %1830 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1831 = icmp eq i32 %1830, 0
  %1832 = load i32, ptr @flag_rounding_math, align 4
  %1833 = icmp eq i32 %1832, 0
  %1834 = select i1 %1833, i64 46, i64 48
  %1835 = select i1 %1831, i64 %1834, i64 45
  %1836 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1835
  %1837 = load ptr, ptr %1836, align 8, !tbaa !6
  %1838 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1839 = and i32 %1838, 1
  %1840 = icmp eq i32 %1839, 0
  %1841 = zext i1 %1840 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 134, ptr noundef nonnull @.str.527, ptr noundef %1826, ptr noundef %1826, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1829, ptr noundef %1837, i8 noundef zeroext %1841)
  %1842 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 100), align 32, !tbaa !6
  %1843 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1844 = icmp eq i32 %1843, 0
  %1845 = zext i1 %1844 to i8
  %1846 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1847 = icmp eq i32 %1846, 0
  %1848 = select i1 %1847, i64 46, i64 45
  %1849 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1848
  %1850 = load ptr, ptr %1849, align 8, !tbaa !6
  %1851 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1852 = and i32 %1851, 1
  %1853 = icmp eq i32 %1852, 0
  %1854 = zext i1 %1853 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 135, ptr noundef nonnull @.str.528, ptr noundef %1842, ptr noundef %1842, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1845, ptr noundef %1850, i8 noundef zeroext %1854)
  %1855 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 99), align 8, !tbaa !6
  %1856 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1857 = icmp eq i32 %1856, 0
  %1858 = zext i1 %1857 to i8
  %1859 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1860 = icmp eq i32 %1859, 0
  %1861 = select i1 %1860, i64 46, i64 45
  %1862 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1861
  %1863 = load ptr, ptr %1862, align 8, !tbaa !6
  %1864 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1865 = and i32 %1864, 1
  %1866 = icmp eq i32 %1865, 0
  %1867 = zext i1 %1866 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 136, ptr noundef nonnull @.str.529, ptr noundef %1855, ptr noundef %1855, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1858, ptr noundef %1863, i8 noundef zeroext %1867)
  %1868 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 101), align 8, !tbaa !6
  %1869 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1870 = icmp eq i32 %1869, 0
  %1871 = zext i1 %1870 to i8
  %1872 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1873 = icmp eq i32 %1872, 0
  %1874 = select i1 %1873, i64 46, i64 45
  %1875 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1874
  %1876 = load ptr, ptr %1875, align 8, !tbaa !6
  %1877 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1878 = and i32 %1877, 1
  %1879 = icmp eq i32 %1878, 0
  %1880 = zext i1 %1879 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 137, ptr noundef nonnull @.str.530, ptr noundef %1868, ptr noundef %1868, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1871, ptr noundef %1876, i8 noundef zeroext %1880)
  %1881 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1882 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1883 = icmp eq i32 %1882, 0
  %1884 = load i32, ptr @flag_rounding_math, align 4
  %1885 = icmp eq i32 %1884, 0
  %1886 = select i1 %1885, i64 46, i64 48
  %1887 = select i1 %1883, i64 %1886, i64 45
  %1888 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1887
  %1889 = load ptr, ptr %1888, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 138, ptr noundef nonnull @.str.531, ptr noundef %1881, ptr noundef %1881, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %1889, i8 noundef zeroext 1)
  %1890 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1891 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1892 = icmp eq i32 %1891, 0
  %1893 = load i32, ptr @flag_rounding_math, align 4
  %1894 = icmp eq i32 %1893, 0
  %1895 = select i1 %1894, i64 46, i64 48
  %1896 = select i1 %1892, i64 %1895, i64 45
  %1897 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1896
  %1898 = load ptr, ptr %1897, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 139, ptr noundef nonnull @.str.532, ptr noundef %1890, ptr noundef %1890, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %1898, i8 noundef zeroext 1)
  %1899 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1900 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1901 = icmp eq i32 %1900, 0
  %1902 = zext i1 %1901 to i8
  %1903 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1904 = icmp eq i32 %1903, 0
  %1905 = load i32, ptr @flag_rounding_math, align 4
  %1906 = icmp eq i32 %1905, 0
  %1907 = select i1 %1906, i64 46, i64 48
  %1908 = select i1 %1904, i64 %1907, i64 45
  %1909 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1908
  %1910 = load ptr, ptr %1909, align 8, !tbaa !6
  %1911 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1912 = and i32 %1911, 1
  %1913 = icmp eq i32 %1912, 0
  %1914 = zext i1 %1913 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 140, ptr noundef nonnull @.str.533, ptr noundef %1899, ptr noundef %1899, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1902, ptr noundef %1910, i8 noundef zeroext %1914)
  %1915 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1916 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1917 = icmp eq i32 %1916, 0
  %1918 = zext i1 %1917 to i8
  %1919 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1920 = icmp eq i32 %1919, 0
  %1921 = load i32, ptr @flag_rounding_math, align 4
  %1922 = icmp eq i32 %1921, 0
  %1923 = select i1 %1922, i64 46, i64 48
  %1924 = select i1 %1920, i64 %1923, i64 45
  %1925 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1924
  %1926 = load ptr, ptr %1925, align 8, !tbaa !6
  %1927 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1928 = and i32 %1927, 1
  %1929 = icmp eq i32 %1928, 0
  %1930 = zext i1 %1929 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 141, ptr noundef nonnull @.str.534, ptr noundef %1915, ptr noundef %1915, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1918, ptr noundef %1926, i8 noundef zeroext %1930)
  %1931 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1932 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1933 = icmp eq i32 %1932, 0
  %1934 = zext i1 %1933 to i8
  %1935 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1936 = icmp eq i32 %1935, 0
  %1937 = load i32, ptr @flag_rounding_math, align 4
  %1938 = icmp eq i32 %1937, 0
  %1939 = select i1 %1938, i64 46, i64 48
  %1940 = select i1 %1936, i64 %1939, i64 45
  %1941 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1940
  %1942 = load ptr, ptr %1941, align 8, !tbaa !6
  %1943 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1944 = and i32 %1943, 1
  %1945 = icmp eq i32 %1944, 0
  %1946 = zext i1 %1945 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 142, ptr noundef nonnull @.str.535, ptr noundef %1931, ptr noundef %1931, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1934, ptr noundef %1942, i8 noundef zeroext %1946)
  %1947 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1948 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1949 = icmp eq i32 %1948, 0
  %1950 = zext i1 %1949 to i8
  %1951 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1952 = icmp eq i32 %1951, 0
  %1953 = load i32, ptr @flag_rounding_math, align 4
  %1954 = icmp eq i32 %1953, 0
  %1955 = select i1 %1954, i64 46, i64 48
  %1956 = select i1 %1952, i64 %1955, i64 45
  %1957 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1956
  %1958 = load ptr, ptr %1957, align 8, !tbaa !6
  %1959 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1960 = and i32 %1959, 1
  %1961 = icmp eq i32 %1960, 0
  %1962 = zext i1 %1961 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 143, ptr noundef nonnull @.str.536, ptr noundef %1947, ptr noundef %1947, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1950, ptr noundef %1958, i8 noundef zeroext %1962)
  %1963 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %1964 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1965 = icmp eq i32 %1964, 0
  %1966 = zext i1 %1965 to i8
  %1967 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1968 = icmp eq i32 %1967, 0
  %1969 = load i32, ptr @flag_rounding_math, align 4
  %1970 = icmp eq i32 %1969, 0
  %1971 = select i1 %1970, i64 46, i64 48
  %1972 = select i1 %1968, i64 %1971, i64 45
  %1973 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1972
  %1974 = load ptr, ptr %1973, align 8, !tbaa !6
  %1975 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1976 = and i32 %1975, 1
  %1977 = icmp eq i32 %1976, 0
  %1978 = zext i1 %1977 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 144, ptr noundef nonnull @.str.537, ptr noundef %1963, ptr noundef %1963, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1966, ptr noundef %1974, i8 noundef zeroext %1978)
  %1979 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %1980 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1981 = icmp eq i32 %1980, 0
  %1982 = zext i1 %1981 to i8
  %1983 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %1984 = icmp eq i32 %1983, 0
  %1985 = load i32, ptr @flag_rounding_math, align 4
  %1986 = icmp eq i32 %1985, 0
  %1987 = select i1 %1986, i64 46, i64 48
  %1988 = select i1 %1984, i64 %1987, i64 45
  %1989 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %1988
  %1990 = load ptr, ptr %1989, align 8, !tbaa !6
  %1991 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %1992 = and i32 %1991, 1
  %1993 = icmp eq i32 %1992, 0
  %1994 = zext i1 %1993 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 145, ptr noundef nonnull @.str.538, ptr noundef %1979, ptr noundef %1979, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1982, ptr noundef %1990, i8 noundef zeroext %1994)
  %1995 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %1996 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %1997 = icmp eq i32 %1996, 0
  %1998 = zext i1 %1997 to i8
  %1999 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2000 = icmp eq i32 %1999, 0
  %2001 = load i32, ptr @flag_rounding_math, align 4
  %2002 = icmp eq i32 %2001, 0
  %2003 = select i1 %2002, i64 46, i64 48
  %2004 = select i1 %2000, i64 %2003, i64 45
  %2005 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2004
  %2006 = load ptr, ptr %2005, align 8, !tbaa !6
  %2007 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2008 = and i32 %2007, 1
  %2009 = icmp eq i32 %2008, 0
  %2010 = zext i1 %2009 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 146, ptr noundef nonnull @.str.539, ptr noundef %1995, ptr noundef %1995, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %1998, ptr noundef %2006, i8 noundef zeroext %2010)
  %2011 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2012 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2013 = icmp eq i32 %2012, 0
  %2014 = zext i1 %2013 to i8
  %2015 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2016 = icmp eq i32 %2015, 0
  %2017 = load i32, ptr @flag_rounding_math, align 4
  %2018 = icmp eq i32 %2017, 0
  %2019 = select i1 %2018, i64 46, i64 48
  %2020 = select i1 %2016, i64 %2019, i64 45
  %2021 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2020
  %2022 = load ptr, ptr %2021, align 8, !tbaa !6
  %2023 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2024 = and i32 %2023, 1
  %2025 = icmp eq i32 %2024, 0
  %2026 = zext i1 %2025 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 147, ptr noundef nonnull @.str.540, ptr noundef %2011, ptr noundef %2011, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2014, ptr noundef %2022, i8 noundef zeroext %2026)
  %2027 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2028 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2029 = icmp eq i32 %2028, 0
  %2030 = zext i1 %2029 to i8
  %2031 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2032 = icmp eq i32 %2031, 0
  %2033 = load i32, ptr @flag_rounding_math, align 4
  %2034 = icmp eq i32 %2033, 0
  %2035 = select i1 %2034, i64 46, i64 48
  %2036 = select i1 %2032, i64 %2035, i64 45
  %2037 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2036
  %2038 = load ptr, ptr %2037, align 8, !tbaa !6
  %2039 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2040 = and i32 %2039, 1
  %2041 = icmp eq i32 %2040, 0
  %2042 = zext i1 %2041 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 148, ptr noundef nonnull @.str.541, ptr noundef %2027, ptr noundef %2027, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2030, ptr noundef %2038, i8 noundef zeroext %2042)
  %2043 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2044 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2045 = icmp eq i32 %2044, 0
  %2046 = zext i1 %2045 to i8
  %2047 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2048 = icmp eq i32 %2047, 0
  %2049 = load i32, ptr @flag_rounding_math, align 4
  %2050 = icmp eq i32 %2049, 0
  %2051 = select i1 %2050, i64 46, i64 48
  %2052 = select i1 %2048, i64 %2051, i64 45
  %2053 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2052
  %2054 = load ptr, ptr %2053, align 8, !tbaa !6
  %2055 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2056 = and i32 %2055, 1
  %2057 = icmp eq i32 %2056, 0
  %2058 = zext i1 %2057 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 149, ptr noundef nonnull @.str.542, ptr noundef %2043, ptr noundef %2043, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2046, ptr noundef %2054, i8 noundef zeroext %2058)
  %2059 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2060 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2061 = icmp eq i32 %2060, 0
  %2062 = zext i1 %2061 to i8
  %2063 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2064 = icmp eq i32 %2063, 0
  %2065 = load i32, ptr @flag_rounding_math, align 4
  %2066 = icmp eq i32 %2065, 0
  %2067 = select i1 %2066, i64 46, i64 48
  %2068 = select i1 %2064, i64 %2067, i64 45
  %2069 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2068
  %2070 = load ptr, ptr %2069, align 8, !tbaa !6
  %2071 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2072 = and i32 %2071, 1
  %2073 = icmp eq i32 %2072, 0
  %2074 = zext i1 %2073 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 150, ptr noundef nonnull @.str.543, ptr noundef %2059, ptr noundef %2059, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2062, ptr noundef %2070, i8 noundef zeroext %2074)
  %2075 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2076 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2077 = icmp eq i32 %2076, 0
  %2078 = zext i1 %2077 to i8
  %2079 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2080 = icmp eq i32 %2079, 0
  %2081 = load i32, ptr @flag_rounding_math, align 4
  %2082 = icmp eq i32 %2081, 0
  %2083 = select i1 %2082, i64 46, i64 48
  %2084 = select i1 %2080, i64 %2083, i64 45
  %2085 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2084
  %2086 = load ptr, ptr %2085, align 8, !tbaa !6
  %2087 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2088 = and i32 %2087, 1
  %2089 = icmp eq i32 %2088, 0
  %2090 = zext i1 %2089 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 151, ptr noundef nonnull @.str.544, ptr noundef %2075, ptr noundef %2075, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2078, ptr noundef %2086, i8 noundef zeroext %2090)
  %2091 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2092 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2093 = icmp eq i32 %2092, 0
  %2094 = zext i1 %2093 to i8
  %2095 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2096 = icmp eq i32 %2095, 0
  %2097 = load i32, ptr @flag_rounding_math, align 4
  %2098 = icmp eq i32 %2097, 0
  %2099 = select i1 %2098, i64 46, i64 48
  %2100 = select i1 %2096, i64 %2099, i64 45
  %2101 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2100
  %2102 = load ptr, ptr %2101, align 8, !tbaa !6
  %2103 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2104 = and i32 %2103, 1
  %2105 = icmp eq i32 %2104, 0
  %2106 = zext i1 %2105 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 152, ptr noundef nonnull @.str.545, ptr noundef %2091, ptr noundef %2091, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2094, ptr noundef %2102, i8 noundef zeroext %2106)
  %2107 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 97), align 8, !tbaa !6
  %2108 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2109 = icmp eq i32 %2108, 0
  %2110 = zext i1 %2109 to i8
  %2111 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2112 = icmp eq i32 %2111, 0
  %2113 = load i32, ptr @flag_rounding_math, align 4
  %2114 = icmp eq i32 %2113, 0
  %2115 = select i1 %2114, i64 46, i64 48
  %2116 = select i1 %2112, i64 %2115, i64 45
  %2117 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2116
  %2118 = load ptr, ptr %2117, align 8, !tbaa !6
  %2119 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2120 = and i32 %2119, 1
  %2121 = icmp eq i32 %2120, 0
  %2122 = zext i1 %2121 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 153, ptr noundef nonnull @.str.546, ptr noundef %2107, ptr noundef %2107, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2110, ptr noundef %2118, i8 noundef zeroext %2122)
  %2123 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 96), align 32, !tbaa !6
  %2124 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2125 = icmp eq i32 %2124, 0
  %2126 = zext i1 %2125 to i8
  %2127 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2128 = icmp eq i32 %2127, 0
  %2129 = load i32, ptr @flag_rounding_math, align 4
  %2130 = icmp eq i32 %2129, 0
  %2131 = select i1 %2130, i64 46, i64 48
  %2132 = select i1 %2128, i64 %2131, i64 45
  %2133 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2132
  %2134 = load ptr, ptr %2133, align 8, !tbaa !6
  %2135 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2136 = and i32 %2135, 1
  %2137 = icmp eq i32 %2136, 0
  %2138 = zext i1 %2137 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 154, ptr noundef nonnull @.str.547, ptr noundef %2123, ptr noundef %2123, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2126, ptr noundef %2134, i8 noundef zeroext %2138)
  %2139 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 98), align 16, !tbaa !6
  %2140 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2141 = icmp eq i32 %2140, 0
  %2142 = zext i1 %2141 to i8
  %2143 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2144 = icmp eq i32 %2143, 0
  %2145 = load i32, ptr @flag_rounding_math, align 4
  %2146 = icmp eq i32 %2145, 0
  %2147 = select i1 %2146, i64 46, i64 48
  %2148 = select i1 %2144, i64 %2147, i64 45
  %2149 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2148
  %2150 = load ptr, ptr %2149, align 8, !tbaa !6
  %2151 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2152 = and i32 %2151, 1
  %2153 = icmp eq i32 %2152, 0
  %2154 = zext i1 %2153 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 155, ptr noundef nonnull @.str.548, ptr noundef %2139, ptr noundef %2139, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2142, ptr noundef %2150, i8 noundef zeroext %2154)
  %2155 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 97), align 8, !tbaa !6
  %2156 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2157 = icmp eq i32 %2156, 0
  %2158 = zext i1 %2157 to i8
  %2159 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2160 = icmp eq i32 %2159, 0
  %2161 = select i1 %2160, i64 46, i64 45
  %2162 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2161
  %2163 = load ptr, ptr %2162, align 8, !tbaa !6
  %2164 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2165 = and i32 %2164, 1
  %2166 = icmp eq i32 %2165, 0
  %2167 = zext i1 %2166 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 156, ptr noundef nonnull @.str.549, ptr noundef %2155, ptr noundef %2155, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2158, ptr noundef %2163, i8 noundef zeroext %2167)
  %2168 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 96), align 32, !tbaa !6
  %2169 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2170 = icmp eq i32 %2169, 0
  %2171 = zext i1 %2170 to i8
  %2172 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2173 = icmp eq i32 %2172, 0
  %2174 = select i1 %2173, i64 46, i64 45
  %2175 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2174
  %2176 = load ptr, ptr %2175, align 8, !tbaa !6
  %2177 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2178 = and i32 %2177, 1
  %2179 = icmp eq i32 %2178, 0
  %2180 = zext i1 %2179 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 157, ptr noundef nonnull @.str.550, ptr noundef %2168, ptr noundef %2168, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2171, ptr noundef %2176, i8 noundef zeroext %2180)
  %2181 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 98), align 16, !tbaa !6
  %2182 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2183 = icmp eq i32 %2182, 0
  %2184 = zext i1 %2183 to i8
  %2185 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2186 = icmp eq i32 %2185, 0
  %2187 = select i1 %2186, i64 46, i64 45
  %2188 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2187
  %2189 = load ptr, ptr %2188, align 8, !tbaa !6
  %2190 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2191 = and i32 %2190, 1
  %2192 = icmp eq i32 %2191, 0
  %2193 = zext i1 %2192 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 158, ptr noundef nonnull @.str.551, ptr noundef %2181, ptr noundef %2181, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2184, ptr noundef %2189, i8 noundef zeroext %2193)
  %2194 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 147), align 8, !tbaa !6
  %2195 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 159, ptr noundef nonnull @.str.552, ptr noundef %2194, ptr noundef %2194, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %2195, i8 noundef zeroext 1)
  %2196 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 146), align 16, !tbaa !6
  %2197 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2198 = icmp eq i32 %2197, 0
  %2199 = zext i1 %2198 to i8
  %2200 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %2201 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2202 = and i32 %2201, 1
  %2203 = icmp eq i32 %2202, 0
  %2204 = zext i1 %2203 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 160, ptr noundef nonnull @.str.553, ptr noundef %2196, ptr noundef %2196, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2199, ptr noundef %2200, i8 noundef zeroext %2204)
  %2205 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 148), align 32, !tbaa !6
  %2206 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2207 = icmp eq i32 %2206, 0
  %2208 = zext i1 %2207 to i8
  %2209 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %2210 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2211 = and i32 %2210, 1
  %2212 = icmp eq i32 %2211, 0
  %2213 = zext i1 %2212 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 161, ptr noundef nonnull @.str.554, ptr noundef %2205, ptr noundef %2205, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2208, ptr noundef %2209, i8 noundef zeroext %2213)
  %2214 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 109), align 8, !tbaa !6
  %2215 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2216 = icmp eq i32 %2215, 0
  %2217 = zext i1 %2216 to i8
  %2218 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2219 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2220 = and i32 %2219, 1
  %2221 = icmp eq i32 %2220, 0
  %2222 = zext i1 %2221 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 162, ptr noundef nonnull @.str.555, ptr noundef %2214, ptr noundef %2214, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2217, ptr noundef %2218, i8 noundef zeroext %2222)
  %2223 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 108), align 32, !tbaa !6
  %2224 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2225 = icmp eq i32 %2224, 0
  %2226 = zext i1 %2225 to i8
  %2227 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2228 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2229 = and i32 %2228, 1
  %2230 = icmp eq i32 %2229, 0
  %2231 = zext i1 %2230 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 163, ptr noundef nonnull @.str.556, ptr noundef %2223, ptr noundef %2223, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2226, ptr noundef %2227, i8 noundef zeroext %2231)
  %2232 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 110), align 16, !tbaa !6
  %2233 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2234 = icmp eq i32 %2233, 0
  %2235 = zext i1 %2234 to i8
  %2236 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2237 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2238 = and i32 %2237, 1
  %2239 = icmp eq i32 %2238, 0
  %2240 = zext i1 %2239 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 164, ptr noundef nonnull @.str.557, ptr noundef %2232, ptr noundef %2232, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2235, ptr noundef %2236, i8 noundef zeroext %2240)
  %2241 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 111), align 8, !tbaa !6
  %2242 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %2243 = icmp eq ptr %2242, %2241
  br i1 %2243, label %2248, label %2244

2244:                                             ; preds = %1793
  %2245 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2246 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.558, ptr noundef %2241, i32 noundef 165, i32 noundef 3, ptr noundef null, ptr noundef %2245) #22
  store ptr %2246, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 165), align 8, !tbaa !6
  store ptr %2246, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 165), align 8, !tbaa !6
  %2247 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %2248

2248:                                             ; preds = %1793, %2244
  %2249 = phi ptr [ %2241, %1793 ], [ %2247, %2244 ]
  %2250 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 112), align 32, !tbaa !6
  %2251 = icmp eq ptr %2249, %2250
  br i1 %2251, label %2256, label %2252

2252:                                             ; preds = %2248
  %2253 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2254 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.559, ptr noundef %2250, i32 noundef 166, i32 noundef 3, ptr noundef null, ptr noundef %2253) #22
  store ptr %2254, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 166), align 16, !tbaa !6
  store ptr %2254, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 166), align 16, !tbaa !6
  %2255 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %2256

2256:                                             ; preds = %2248, %2252
  %2257 = phi ptr [ %2249, %2248 ], [ %2255, %2252 ]
  %2258 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 113), align 8, !tbaa !6
  %2259 = icmp eq ptr %2257, %2258
  br i1 %2259, label %2264, label %2260

2260:                                             ; preds = %2256
  %2261 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2262 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.560, ptr noundef %2258, i32 noundef 167, i32 noundef 3, ptr noundef null, ptr noundef %2261) #22
  store ptr %2262, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 167), align 8, !tbaa !6
  store ptr %2262, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 167), align 8, !tbaa !6
  %2263 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %2264

2264:                                             ; preds = %2256, %2260
  %2265 = phi ptr [ %2257, %2256 ], [ %2263, %2260 ]
  %2266 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 109), align 8, !tbaa !6
  %2267 = icmp eq ptr %2265, %2266
  br i1 %2267, label %2272, label %2268

2268:                                             ; preds = %2264
  %2269 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2270 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.561, ptr noundef %2266, i32 noundef 168, i32 noundef 3, ptr noundef null, ptr noundef %2269) #22
  store ptr %2270, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 168), align 16, !tbaa !6
  store ptr %2270, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 168), align 16, !tbaa !6
  %2271 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %2272

2272:                                             ; preds = %2264, %2268
  %2273 = phi ptr [ %2265, %2264 ], [ %2271, %2268 ]
  %2274 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 108), align 32, !tbaa !6
  %2275 = icmp eq ptr %2273, %2274
  br i1 %2275, label %2280, label %2276

2276:                                             ; preds = %2272
  %2277 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2278 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.562, ptr noundef %2274, i32 noundef 169, i32 noundef 3, ptr noundef null, ptr noundef %2277) #22
  store ptr %2278, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 169), align 8, !tbaa !6
  store ptr %2278, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 169), align 8, !tbaa !6
  %2279 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %2280

2280:                                             ; preds = %2272, %2276
  %2281 = phi ptr [ %2273, %2272 ], [ %2279, %2276 ]
  %2282 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 110), align 16, !tbaa !6
  %2283 = icmp eq ptr %2281, %2282
  br i1 %2283, label %2287, label %2284

2284:                                             ; preds = %2280
  %2285 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  %2286 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.563, ptr noundef %2282, i32 noundef 170, i32 noundef 3, ptr noundef null, ptr noundef %2285) #22
  store ptr %2286, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 170), align 16, !tbaa !6
  store ptr %2286, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 170), align 16, !tbaa !6
  br label %2287

2287:                                             ; preds = %2280, %2284
  %2288 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2289 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2290 = icmp eq i32 %2289, 0
  %2291 = zext i1 %2290 to i8
  %2292 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %2293 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2294 = and i32 %2293, 1
  %2295 = icmp eq i32 %2294, 0
  %2296 = zext i1 %2295 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 171, ptr noundef nonnull @.str.564, ptr noundef %2288, ptr noundef %2288, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2291, ptr noundef %2292, i8 noundef zeroext %2296)
  %2297 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2298 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2299 = icmp eq i32 %2298, 0
  %2300 = zext i1 %2299 to i8
  %2301 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %2302 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2303 = and i32 %2302, 1
  %2304 = icmp eq i32 %2303, 0
  %2305 = zext i1 %2304 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 172, ptr noundef nonnull @.str.565, ptr noundef %2297, ptr noundef %2297, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2300, ptr noundef %2301, i8 noundef zeroext %2305)
  %2306 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2307 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2308 = icmp eq i32 %2307, 0
  %2309 = zext i1 %2308 to i8
  %2310 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %2311 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2312 = and i32 %2311, 1
  %2313 = icmp eq i32 %2312, 0
  %2314 = zext i1 %2313 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 173, ptr noundef nonnull @.str.566, ptr noundef %2306, ptr noundef %2306, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2309, ptr noundef %2310, i8 noundef zeroext %2314)
  %2315 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %2316 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2317 = icmp eq i32 %2316, 0
  %2318 = zext i1 %2317 to i8
  %2319 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2320 = icmp eq i32 %2319, 0
  %2321 = load i32, ptr @flag_rounding_math, align 4
  %2322 = icmp eq i32 %2321, 0
  %2323 = select i1 %2322, i64 46, i64 48
  %2324 = select i1 %2320, i64 %2323, i64 45
  %2325 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2324
  %2326 = load ptr, ptr %2325, align 8, !tbaa !6
  %2327 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2328 = and i32 %2327, 1
  %2329 = icmp eq i32 %2328, 0
  %2330 = zext i1 %2329 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 174, ptr noundef nonnull @.str.567, ptr noundef %2315, ptr noundef %2315, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2318, ptr noundef %2326, i8 noundef zeroext %2330)
  %2331 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %2332 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2333 = icmp eq i32 %2332, 0
  %2334 = zext i1 %2333 to i8
  %2335 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2336 = icmp eq i32 %2335, 0
  %2337 = load i32, ptr @flag_rounding_math, align 4
  %2338 = icmp eq i32 %2337, 0
  %2339 = select i1 %2338, i64 46, i64 48
  %2340 = select i1 %2336, i64 %2339, i64 45
  %2341 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2340
  %2342 = load ptr, ptr %2341, align 8, !tbaa !6
  %2343 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2344 = and i32 %2343, 1
  %2345 = icmp eq i32 %2344, 0
  %2346 = zext i1 %2345 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 175, ptr noundef nonnull @.str.568, ptr noundef %2331, ptr noundef %2331, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2334, ptr noundef %2342, i8 noundef zeroext %2346)
  %2347 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %2348 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2349 = icmp eq i32 %2348, 0
  %2350 = zext i1 %2349 to i8
  %2351 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2352 = icmp eq i32 %2351, 0
  %2353 = load i32, ptr @flag_rounding_math, align 4
  %2354 = icmp eq i32 %2353, 0
  %2355 = select i1 %2354, i64 46, i64 48
  %2356 = select i1 %2352, i64 %2355, i64 45
  %2357 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2356
  %2358 = load ptr, ptr %2357, align 8, !tbaa !6
  %2359 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2360 = and i32 %2359, 1
  %2361 = icmp eq i32 %2360, 0
  %2362 = zext i1 %2361 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 176, ptr noundef nonnull @.str.569, ptr noundef %2347, ptr noundef %2347, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2350, ptr noundef %2358, i8 noundef zeroext %2362)
  %2363 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 150), align 16, !tbaa !6
  %2364 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2365 = icmp eq i32 %2364, 0
  %2366 = zext i1 %2365 to i8
  %2367 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2368 = icmp eq i32 %2367, 0
  %2369 = load i32, ptr @flag_rounding_math, align 4
  %2370 = icmp eq i32 %2369, 0
  %2371 = select i1 %2370, i64 46, i64 48
  %2372 = select i1 %2368, i64 %2371, i64 45
  %2373 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2372
  %2374 = load ptr, ptr %2373, align 8, !tbaa !6
  %2375 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2376 = and i32 %2375, 1
  %2377 = icmp eq i32 %2376, 0
  %2378 = zext i1 %2377 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 177, ptr noundef nonnull @.str.570, ptr noundef %2363, ptr noundef %2363, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2366, ptr noundef %2374, i8 noundef zeroext %2378)
  %2379 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 149), align 8, !tbaa !6
  %2380 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2381 = icmp eq i32 %2380, 0
  %2382 = zext i1 %2381 to i8
  %2383 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2384 = icmp eq i32 %2383, 0
  %2385 = load i32, ptr @flag_rounding_math, align 4
  %2386 = icmp eq i32 %2385, 0
  %2387 = select i1 %2386, i64 46, i64 48
  %2388 = select i1 %2384, i64 %2387, i64 45
  %2389 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2388
  %2390 = load ptr, ptr %2389, align 8, !tbaa !6
  %2391 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2392 = and i32 %2391, 1
  %2393 = icmp eq i32 %2392, 0
  %2394 = zext i1 %2393 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 178, ptr noundef nonnull @.str.571, ptr noundef %2379, ptr noundef %2379, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2382, ptr noundef %2390, i8 noundef zeroext %2394)
  %2395 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %2396 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2397 = icmp eq i32 %2396, 0
  %2398 = zext i1 %2397 to i8
  %2399 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2400 = icmp eq i32 %2399, 0
  %2401 = load i32, ptr @flag_rounding_math, align 4
  %2402 = icmp eq i32 %2401, 0
  %2403 = select i1 %2402, i64 46, i64 48
  %2404 = select i1 %2400, i64 %2403, i64 45
  %2405 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2404
  %2406 = load ptr, ptr %2405, align 8, !tbaa !6
  %2407 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2408 = and i32 %2407, 1
  %2409 = icmp eq i32 %2408, 0
  %2410 = zext i1 %2409 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 179, ptr noundef nonnull @.str.572, ptr noundef %2395, ptr noundef %2395, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2398, ptr noundef %2406, i8 noundef zeroext %2410)
  %2411 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %2412 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2413 = icmp eq i32 %2412, 0
  %2414 = load i32, ptr @flag_rounding_math, align 4
  %2415 = icmp eq i32 %2414, 0
  %2416 = select i1 %2415, i64 46, i64 48
  %2417 = select i1 %2413, i64 %2416, i64 45
  %2418 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2417
  %2419 = load ptr, ptr %2418, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 180, ptr noundef nonnull @.str.573, ptr noundef %2411, ptr noundef %2411, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %2419, i8 noundef zeroext 1)
  %2420 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2421 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2422 = icmp eq i32 %2421, 0
  %2423 = load i32, ptr @flag_rounding_math, align 4
  %2424 = icmp eq i32 %2423, 0
  %2425 = select i1 %2424, i64 46, i64 48
  %2426 = select i1 %2422, i64 %2425, i64 45
  %2427 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2426
  %2428 = load ptr, ptr %2427, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 181, ptr noundef nonnull @.str.574, ptr noundef %2420, ptr noundef %2420, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2428, i8 noundef zeroext 0)
  %2429 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2430 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2431 = icmp eq i32 %2430, 0
  %2432 = load i32, ptr @flag_rounding_math, align 4
  %2433 = icmp eq i32 %2432, 0
  %2434 = select i1 %2433, i64 46, i64 48
  %2435 = select i1 %2431, i64 %2434, i64 45
  %2436 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2435
  %2437 = load ptr, ptr %2436, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 182, ptr noundef nonnull @.str.575, ptr noundef %2429, ptr noundef %2429, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2437, i8 noundef zeroext 0)
  %2438 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2439 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2440 = icmp eq i32 %2439, 0
  %2441 = load i32, ptr @flag_rounding_math, align 4
  %2442 = icmp eq i32 %2441, 0
  %2443 = select i1 %2442, i64 46, i64 48
  %2444 = select i1 %2440, i64 %2443, i64 45
  %2445 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2444
  %2446 = load ptr, ptr %2445, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 183, ptr noundef nonnull @.str.576, ptr noundef %2438, ptr noundef %2438, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2446, i8 noundef zeroext 0)
  %2447 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %2448 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2449 = icmp eq i32 %2448, 0
  %2450 = zext i1 %2449 to i8
  %2451 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2452 = icmp eq i32 %2451, 0
  %2453 = load i32, ptr @flag_rounding_math, align 4
  %2454 = icmp eq i32 %2453, 0
  %2455 = select i1 %2454, i64 46, i64 48
  %2456 = select i1 %2452, i64 %2455, i64 45
  %2457 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2456
  %2458 = load ptr, ptr %2457, align 8, !tbaa !6
  %2459 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2460 = and i32 %2459, 1
  %2461 = icmp eq i32 %2460, 0
  %2462 = zext i1 %2461 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 184, ptr noundef nonnull @.str.577, ptr noundef %2447, ptr noundef %2447, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2450, ptr noundef %2458, i8 noundef zeroext %2462)
  %2463 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 152), align 32, !tbaa !6
  %2464 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %2465 = icmp eq ptr %2464, %2463
  br i1 %2465, label %2474, label %2466

2466:                                             ; preds = %2287
  %2467 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2468 = icmp eq i32 %2467, 0
  %2469 = select i1 %2468, i64 46, i64 48
  %2470 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2469
  %2471 = load ptr, ptr %2470, align 16, !tbaa !6
  %2472 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.578, ptr noundef %2463, i32 noundef 185, i32 noundef 3, ptr noundef null, ptr noundef %2471) #22
  store ptr %2472, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 185), align 8, !tbaa !6
  store ptr %2472, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 185), align 8, !tbaa !6
  %2473 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %2474

2474:                                             ; preds = %2287, %2466
  %2475 = phi ptr [ %2463, %2287 ], [ %2473, %2466 ]
  %2476 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 151), align 8, !tbaa !6
  %2477 = icmp eq ptr %2475, %2476
  br i1 %2477, label %2486, label %2478

2478:                                             ; preds = %2474
  %2479 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2480 = icmp eq i32 %2479, 0
  %2481 = select i1 %2480, i64 46, i64 48
  %2482 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2481
  %2483 = load ptr, ptr %2482, align 16, !tbaa !6
  %2484 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.579, ptr noundef %2476, i32 noundef 186, i32 noundef 3, ptr noundef null, ptr noundef %2483) #22
  store ptr %2484, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 186), align 16, !tbaa !6
  store ptr %2484, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 186), align 16, !tbaa !6
  %2485 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %2486

2486:                                             ; preds = %2474, %2478
  %2487 = phi ptr [ %2475, %2474 ], [ %2485, %2478 ]
  %2488 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 153), align 8, !tbaa !6
  %2489 = icmp eq ptr %2487, %2488
  br i1 %2489, label %2497, label %2490

2490:                                             ; preds = %2486
  %2491 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2492 = icmp eq i32 %2491, 0
  %2493 = select i1 %2492, i64 46, i64 48
  %2494 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2493
  %2495 = load ptr, ptr %2494, align 16, !tbaa !6
  %2496 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.580, ptr noundef %2488, i32 noundef 187, i32 noundef 3, ptr noundef null, ptr noundef %2495) #22
  store ptr %2496, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 187), align 8, !tbaa !6
  store ptr %2496, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 187), align 8, !tbaa !6
  br label %2497

2497:                                             ; preds = %2486, %2490
  %2498 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %2499 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2500 = icmp eq i32 %2499, 0
  %2501 = zext i1 %2500 to i8
  %2502 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2503 = icmp eq i32 %2502, 0
  %2504 = load i32, ptr @flag_rounding_math, align 4
  %2505 = icmp eq i32 %2504, 0
  %2506 = select i1 %2505, i64 46, i64 48
  %2507 = select i1 %2503, i64 %2506, i64 45
  %2508 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2507
  %2509 = load ptr, ptr %2508, align 8, !tbaa !6
  %2510 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2511 = and i32 %2510, 1
  %2512 = icmp eq i32 %2511, 0
  %2513 = zext i1 %2512 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 188, ptr noundef nonnull @.str.581, ptr noundef %2498, ptr noundef %2498, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2501, ptr noundef %2509, i8 noundef zeroext %2513)
  %2514 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %2515 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2516 = icmp eq i32 %2515, 0
  %2517 = zext i1 %2516 to i8
  %2518 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2519 = icmp eq i32 %2518, 0
  %2520 = load i32, ptr @flag_rounding_math, align 4
  %2521 = icmp eq i32 %2520, 0
  %2522 = select i1 %2521, i64 46, i64 48
  %2523 = select i1 %2519, i64 %2522, i64 45
  %2524 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2523
  %2525 = load ptr, ptr %2524, align 8, !tbaa !6
  %2526 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2527 = and i32 %2526, 1
  %2528 = icmp eq i32 %2527, 0
  %2529 = zext i1 %2528 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 189, ptr noundef nonnull @.str.582, ptr noundef %2514, ptr noundef %2514, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2517, ptr noundef %2525, i8 noundef zeroext %2529)
  %2530 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %2531 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2532 = icmp eq i32 %2531, 0
  %2533 = zext i1 %2532 to i8
  %2534 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2535 = icmp eq i32 %2534, 0
  %2536 = load i32, ptr @flag_rounding_math, align 4
  %2537 = icmp eq i32 %2536, 0
  %2538 = select i1 %2537, i64 46, i64 48
  %2539 = select i1 %2535, i64 %2538, i64 45
  %2540 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2539
  %2541 = load ptr, ptr %2540, align 8, !tbaa !6
  %2542 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2543 = and i32 %2542, 1
  %2544 = icmp eq i32 %2543, 0
  %2545 = zext i1 %2544 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 190, ptr noundef nonnull @.str.583, ptr noundef %2530, ptr noundef %2530, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2533, ptr noundef %2541, i8 noundef zeroext %2545)
  %2546 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %2547 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2548 = icmp eq i32 %2547, 0
  %2549 = zext i1 %2548 to i8
  %2550 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2551 = icmp eq i32 %2550, 0
  %2552 = load i32, ptr @flag_rounding_math, align 4
  %2553 = icmp eq i32 %2552, 0
  %2554 = select i1 %2553, i64 46, i64 48
  %2555 = select i1 %2551, i64 %2554, i64 45
  %2556 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2555
  %2557 = load ptr, ptr %2556, align 8, !tbaa !6
  %2558 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2559 = and i32 %2558, 1
  %2560 = icmp eq i32 %2559, 0
  %2561 = zext i1 %2560 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 191, ptr noundef nonnull @.str.584, ptr noundef %2546, ptr noundef %2546, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2549, ptr noundef %2557, i8 noundef zeroext %2561)
  %2562 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 195), align 8, !tbaa !6
  %2563 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2564 = icmp eq i32 %2563, 0
  %2565 = zext i1 %2564 to i8
  %2566 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %2567 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2568 = and i32 %2567, 1
  %2569 = icmp eq i32 %2568, 0
  %2570 = zext i1 %2569 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 192, ptr noundef nonnull @.str.585, ptr noundef %2562, ptr noundef %2562, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2565, ptr noundef %2566, i8 noundef zeroext %2570)
  %2571 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 194), align 16, !tbaa !6
  %2572 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2573 = icmp eq i32 %2572, 0
  %2574 = zext i1 %2573 to i8
  %2575 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %2576 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2577 = and i32 %2576, 1
  %2578 = icmp eq i32 %2577, 0
  %2579 = zext i1 %2578 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 193, ptr noundef nonnull @.str.586, ptr noundef %2571, ptr noundef %2571, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2574, ptr noundef %2575, i8 noundef zeroext %2579)
  %2580 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 196), align 32, !tbaa !6
  %2581 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2582 = icmp eq i32 %2581, 0
  %2583 = zext i1 %2582 to i8
  %2584 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %2585 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2586 = and i32 %2585, 1
  %2587 = icmp eq i32 %2586, 0
  %2588 = zext i1 %2587 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 194, ptr noundef nonnull @.str.587, ptr noundef %2580, ptr noundef %2580, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2583, ptr noundef %2584, i8 noundef zeroext %2588)
  %2589 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2590 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2591 = icmp eq i32 %2590, 0
  %2592 = zext i1 %2591 to i8
  %2593 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2594 = icmp eq i32 %2593, 0
  %2595 = load i32, ptr @flag_rounding_math, align 4
  %2596 = icmp eq i32 %2595, 0
  %2597 = select i1 %2596, i64 46, i64 48
  %2598 = select i1 %2594, i64 %2597, i64 45
  %2599 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2598
  %2600 = load ptr, ptr %2599, align 8, !tbaa !6
  %2601 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2602 = and i32 %2601, 1
  %2603 = icmp eq i32 %2602, 0
  %2604 = zext i1 %2603 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 195, ptr noundef nonnull @.str.588, ptr noundef %2589, ptr noundef %2589, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2592, ptr noundef %2600, i8 noundef zeroext %2604)
  %2605 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2606 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2607 = icmp eq i32 %2606, 0
  %2608 = zext i1 %2607 to i8
  %2609 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2610 = icmp eq i32 %2609, 0
  %2611 = load i32, ptr @flag_rounding_math, align 4
  %2612 = icmp eq i32 %2611, 0
  %2613 = select i1 %2612, i64 46, i64 48
  %2614 = select i1 %2610, i64 %2613, i64 45
  %2615 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2614
  %2616 = load ptr, ptr %2615, align 8, !tbaa !6
  %2617 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2618 = and i32 %2617, 1
  %2619 = icmp eq i32 %2618, 0
  %2620 = zext i1 %2619 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 196, ptr noundef nonnull @.str.589, ptr noundef %2605, ptr noundef %2605, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2608, ptr noundef %2616, i8 noundef zeroext %2620)
  %2621 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2622 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2623 = icmp eq i32 %2622, 0
  %2624 = zext i1 %2623 to i8
  %2625 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2626 = icmp eq i32 %2625, 0
  %2627 = load i32, ptr @flag_rounding_math, align 4
  %2628 = icmp eq i32 %2627, 0
  %2629 = select i1 %2628, i64 46, i64 48
  %2630 = select i1 %2626, i64 %2629, i64 45
  %2631 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2630
  %2632 = load ptr, ptr %2631, align 8, !tbaa !6
  %2633 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2634 = and i32 %2633, 1
  %2635 = icmp eq i32 %2634, 0
  %2636 = zext i1 %2635 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 197, ptr noundef nonnull @.str.590, ptr noundef %2621, ptr noundef %2621, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2624, ptr noundef %2632, i8 noundef zeroext %2636)
  %2637 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2638 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2639 = icmp eq i32 %2638, 0
  %2640 = zext i1 %2639 to i8
  %2641 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %2642 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2643 = and i32 %2642, 1
  %2644 = icmp eq i32 %2643, 0
  %2645 = zext i1 %2644 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 198, ptr noundef nonnull @.str.591, ptr noundef %2637, ptr noundef %2637, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2640, ptr noundef %2641, i8 noundef zeroext %2645)
  %2646 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2647 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2648 = icmp eq i32 %2647, 0
  %2649 = zext i1 %2648 to i8
  %2650 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %2651 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2652 = and i32 %2651, 1
  %2653 = icmp eq i32 %2652, 0
  %2654 = zext i1 %2653 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 199, ptr noundef nonnull @.str.592, ptr noundef %2646, ptr noundef %2646, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2649, ptr noundef %2650, i8 noundef zeroext %2654)
  %2655 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2656 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2657 = icmp eq i32 %2656, 0
  %2658 = zext i1 %2657 to i8
  %2659 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %2660 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2661 = and i32 %2660, 1
  %2662 = icmp eq i32 %2661, 0
  %2663 = zext i1 %2662 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 200, ptr noundef nonnull @.str.593, ptr noundef %2655, ptr noundef %2655, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2658, ptr noundef %2659, i8 noundef zeroext %2663)
  %2664 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 144), align 32, !tbaa !6
  %2665 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2666 = icmp eq i32 %2665, 0
  %2667 = load i32, ptr @flag_rounding_math, align 4
  %2668 = icmp eq i32 %2667, 0
  %2669 = select i1 %2668, i64 46, i64 48
  %2670 = select i1 %2666, i64 %2669, i64 45
  %2671 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2670
  %2672 = load ptr, ptr %2671, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 201, ptr noundef nonnull @.str.594, ptr noundef %2664, ptr noundef %2664, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2672, i8 noundef zeroext 0)
  %2673 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 143), align 8, !tbaa !6
  %2674 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2675 = icmp eq i32 %2674, 0
  %2676 = load i32, ptr @flag_rounding_math, align 4
  %2677 = icmp eq i32 %2676, 0
  %2678 = select i1 %2677, i64 46, i64 48
  %2679 = select i1 %2675, i64 %2678, i64 45
  %2680 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2679
  %2681 = load ptr, ptr %2680, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 202, ptr noundef nonnull @.str.595, ptr noundef %2673, ptr noundef %2673, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2681, i8 noundef zeroext 0)
  %2682 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 145), align 8, !tbaa !6
  %2683 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2684 = icmp eq i32 %2683, 0
  %2685 = load i32, ptr @flag_rounding_math, align 4
  %2686 = icmp eq i32 %2685, 0
  %2687 = select i1 %2686, i64 46, i64 48
  %2688 = select i1 %2684, i64 %2687, i64 45
  %2689 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2688
  %2690 = load ptr, ptr %2689, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 203, ptr noundef nonnull @.str.596, ptr noundef %2682, ptr noundef %2682, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2690, i8 noundef zeroext 0)
  %2691 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 161), align 8, !tbaa !6
  %2692 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2693 = icmp eq i32 %2692, 0
  %2694 = zext i1 %2693 to i8
  %2695 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2696 = icmp eq i32 %2695, 0
  %2697 = load i32, ptr @flag_rounding_math, align 4
  %2698 = icmp eq i32 %2697, 0
  %2699 = select i1 %2698, i64 46, i64 48
  %2700 = select i1 %2696, i64 %2699, i64 45
  %2701 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2700
  %2702 = load ptr, ptr %2701, align 8, !tbaa !6
  %2703 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2704 = and i32 %2703, 1
  %2705 = icmp eq i32 %2704, 0
  %2706 = zext i1 %2705 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 204, ptr noundef nonnull @.str.597, ptr noundef %2691, ptr noundef %2691, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2694, ptr noundef %2702, i8 noundef zeroext %2706)
  %2707 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 160), align 32, !tbaa !6
  %2708 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2709 = icmp eq i32 %2708, 0
  %2710 = zext i1 %2709 to i8
  %2711 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2712 = icmp eq i32 %2711, 0
  %2713 = load i32, ptr @flag_rounding_math, align 4
  %2714 = icmp eq i32 %2713, 0
  %2715 = select i1 %2714, i64 46, i64 48
  %2716 = select i1 %2712, i64 %2715, i64 45
  %2717 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2716
  %2718 = load ptr, ptr %2717, align 8, !tbaa !6
  %2719 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2720 = and i32 %2719, 1
  %2721 = icmp eq i32 %2720, 0
  %2722 = zext i1 %2721 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 205, ptr noundef nonnull @.str.598, ptr noundef %2707, ptr noundef %2707, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2710, ptr noundef %2718, i8 noundef zeroext %2722)
  %2723 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 162), align 16, !tbaa !6
  %2724 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2725 = icmp eq i32 %2724, 0
  %2726 = zext i1 %2725 to i8
  %2727 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2728 = icmp eq i32 %2727, 0
  %2729 = load i32, ptr @flag_rounding_math, align 4
  %2730 = icmp eq i32 %2729, 0
  %2731 = select i1 %2730, i64 46, i64 48
  %2732 = select i1 %2728, i64 %2731, i64 45
  %2733 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2732
  %2734 = load ptr, ptr %2733, align 8, !tbaa !6
  %2735 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2736 = and i32 %2735, 1
  %2737 = icmp eq i32 %2736, 0
  %2738 = zext i1 %2737 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 206, ptr noundef nonnull @.str.599, ptr noundef %2723, ptr noundef %2723, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2726, ptr noundef %2734, i8 noundef zeroext %2738)
  %2739 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 152), align 32, !tbaa !6
  %2740 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2741 = icmp eq i32 %2740, 0
  %2742 = zext i1 %2741 to i8
  %2743 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2744 = icmp eq i32 %2743, 0
  %2745 = load i32, ptr @flag_rounding_math, align 4
  %2746 = icmp eq i32 %2745, 0
  %2747 = select i1 %2746, i64 46, i64 48
  %2748 = select i1 %2744, i64 %2747, i64 45
  %2749 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2748
  %2750 = load ptr, ptr %2749, align 8, !tbaa !6
  %2751 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2752 = and i32 %2751, 1
  %2753 = icmp eq i32 %2752, 0
  %2754 = zext i1 %2753 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 207, ptr noundef nonnull @.str.600, ptr noundef %2739, ptr noundef %2739, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2742, ptr noundef %2750, i8 noundef zeroext %2754)
  %2755 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 151), align 8, !tbaa !6
  %2756 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2757 = icmp eq i32 %2756, 0
  %2758 = zext i1 %2757 to i8
  %2759 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2760 = icmp eq i32 %2759, 0
  %2761 = load i32, ptr @flag_rounding_math, align 4
  %2762 = icmp eq i32 %2761, 0
  %2763 = select i1 %2762, i64 46, i64 48
  %2764 = select i1 %2760, i64 %2763, i64 45
  %2765 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2764
  %2766 = load ptr, ptr %2765, align 8, !tbaa !6
  %2767 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2768 = and i32 %2767, 1
  %2769 = icmp eq i32 %2768, 0
  %2770 = zext i1 %2769 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 208, ptr noundef nonnull @.str.601, ptr noundef %2755, ptr noundef %2755, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2758, ptr noundef %2766, i8 noundef zeroext %2770)
  %2771 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 153), align 8, !tbaa !6
  %2772 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2773 = icmp eq i32 %2772, 0
  %2774 = zext i1 %2773 to i8
  %2775 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2776 = icmp eq i32 %2775, 0
  %2777 = load i32, ptr @flag_rounding_math, align 4
  %2778 = icmp eq i32 %2777, 0
  %2779 = select i1 %2778, i64 46, i64 48
  %2780 = select i1 %2776, i64 %2779, i64 45
  %2781 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2780
  %2782 = load ptr, ptr %2781, align 8, !tbaa !6
  %2783 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2784 = and i32 %2783, 1
  %2785 = icmp eq i32 %2784, 0
  %2786 = zext i1 %2785 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 209, ptr noundef nonnull @.str.602, ptr noundef %2771, ptr noundef %2771, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2774, ptr noundef %2782, i8 noundef zeroext %2786)
  %2787 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 91), align 8, !tbaa !6
  %2788 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 210, ptr noundef nonnull @.str.603, ptr noundef %2787, ptr noundef %2787, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2788, i8 noundef zeroext 0)
  %2789 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 90), align 16, !tbaa !6
  %2790 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 211, ptr noundef nonnull @.str.604, ptr noundef %2789, ptr noundef %2789, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2790, i8 noundef zeroext 0)
  %2791 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 92), align 32, !tbaa !6
  %2792 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 212, ptr noundef nonnull @.str.605, ptr noundef %2791, ptr noundef %2791, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2792, i8 noundef zeroext 0)
  %2793 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 93), align 8, !tbaa !6
  %2794 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 213, ptr noundef nonnull @.str.606, ptr noundef %2793, ptr noundef %2793, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2794, i8 noundef zeroext 0)
  %2795 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 94), align 16, !tbaa !6
  %2796 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 214, ptr noundef nonnull @.str.607, ptr noundef %2795, ptr noundef %2795, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2796, i8 noundef zeroext 0)
  %2797 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 95), align 8, !tbaa !6
  %2798 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 215, ptr noundef nonnull @.str.608, ptr noundef %2797, ptr noundef %2797, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2798, i8 noundef zeroext 0)
  %2799 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2800 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2801 = icmp eq i32 %2800, 0
  %2802 = load i32, ptr @flag_rounding_math, align 4
  %2803 = icmp eq i32 %2802, 0
  %2804 = select i1 %2803, i64 46, i64 48
  %2805 = select i1 %2801, i64 %2804, i64 45
  %2806 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2805
  %2807 = load ptr, ptr %2806, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 216, ptr noundef nonnull @.str.609, ptr noundef %2799, ptr noundef %2799, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2807, i8 noundef zeroext 0)
  %2808 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2809 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2810 = icmp eq i32 %2809, 0
  %2811 = load i32, ptr @flag_rounding_math, align 4
  %2812 = icmp eq i32 %2811, 0
  %2813 = select i1 %2812, i64 46, i64 48
  %2814 = select i1 %2810, i64 %2813, i64 45
  %2815 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2814
  %2816 = load ptr, ptr %2815, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 217, ptr noundef nonnull @.str.610, ptr noundef %2808, ptr noundef %2808, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2816, i8 noundef zeroext 0)
  %2817 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2818 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2819 = icmp eq i32 %2818, 0
  %2820 = load i32, ptr @flag_rounding_math, align 4
  %2821 = icmp eq i32 %2820, 0
  %2822 = select i1 %2821, i64 46, i64 48
  %2823 = select i1 %2819, i64 %2822, i64 45
  %2824 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2823
  %2825 = load ptr, ptr %2824, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 218, ptr noundef nonnull @.str.611, ptr noundef %2817, ptr noundef %2817, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2825, i8 noundef zeroext 0)
  %2826 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2827 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2828 = icmp eq i32 %2827, 0
  %2829 = select i1 %2828, i64 46, i64 48
  %2830 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2829
  %2831 = load ptr, ptr %2830, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 219, ptr noundef nonnull @.str.612, ptr noundef %2826, ptr noundef %2826, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %2831, i8 noundef zeroext 1)
  %2832 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 198), align 16, !tbaa !6
  %2833 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 220, ptr noundef nonnull @.str.613, ptr noundef %2832, ptr noundef %2832, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2833, i8 noundef zeroext 0)
  %2834 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 197), align 8, !tbaa !6
  %2835 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 221, ptr noundef nonnull @.str.614, ptr noundef %2834, ptr noundef %2834, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2835, i8 noundef zeroext 0)
  %2836 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 199), align 8, !tbaa !6
  %2837 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 222, ptr noundef nonnull @.str.615, ptr noundef %2836, ptr noundef %2836, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %2837, i8 noundef zeroext 0)
  %2838 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2839 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2840 = icmp eq i32 %2839, 0
  %2841 = zext i1 %2840 to i8
  %2842 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2843 = icmp eq i32 %2842, 0
  %2844 = select i1 %2843, i64 46, i64 48
  %2845 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2844
  %2846 = load ptr, ptr %2845, align 16, !tbaa !6
  %2847 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2848 = and i32 %2847, 1
  %2849 = icmp eq i32 %2848, 0
  %2850 = zext i1 %2849 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 223, ptr noundef nonnull @.str.616, ptr noundef %2838, ptr noundef %2838, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2841, ptr noundef %2846, i8 noundef zeroext %2850)
  %2851 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2852 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2853 = icmp eq i32 %2852, 0
  %2854 = load i32, ptr @flag_rounding_math, align 4
  %2855 = icmp eq i32 %2854, 0
  %2856 = select i1 %2855, i64 46, i64 48
  %2857 = select i1 %2853, i64 %2856, i64 45
  %2858 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2857
  %2859 = load ptr, ptr %2858, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 224, ptr noundef nonnull @.str.617, ptr noundef %2851, ptr noundef %2851, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %2859, i8 noundef zeroext 1)
  %2860 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2861 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2862 = icmp eq i32 %2861, 0
  %2863 = zext i1 %2862 to i8
  %2864 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2865 = icmp eq i32 %2864, 0
  %2866 = load i32, ptr @flag_rounding_math, align 4
  %2867 = icmp eq i32 %2866, 0
  %2868 = select i1 %2867, i64 46, i64 48
  %2869 = select i1 %2865, i64 %2868, i64 45
  %2870 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2869
  %2871 = load ptr, ptr %2870, align 8, !tbaa !6
  %2872 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2873 = and i32 %2872, 1
  %2874 = icmp eq i32 %2873, 0
  %2875 = zext i1 %2874 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 225, ptr noundef nonnull @.str.618, ptr noundef %2860, ptr noundef %2860, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2863, ptr noundef %2871, i8 noundef zeroext %2875)
  %2876 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2877 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2878 = icmp eq i32 %2877, 0
  %2879 = zext i1 %2878 to i8
  %2880 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2881 = icmp eq i32 %2880, 0
  %2882 = load i32, ptr @flag_rounding_math, align 4
  %2883 = icmp eq i32 %2882, 0
  %2884 = select i1 %2883, i64 46, i64 48
  %2885 = select i1 %2881, i64 %2884, i64 45
  %2886 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2885
  %2887 = load ptr, ptr %2886, align 8, !tbaa !6
  %2888 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2889 = and i32 %2888, 1
  %2890 = icmp eq i32 %2889, 0
  %2891 = zext i1 %2890 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 226, ptr noundef nonnull @.str.619, ptr noundef %2876, ptr noundef %2876, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2879, ptr noundef %2887, i8 noundef zeroext %2891)
  %2892 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2893 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2894 = icmp eq i32 %2893, 0
  %2895 = zext i1 %2894 to i8
  %2896 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2897 = icmp eq i32 %2896, 0
  %2898 = select i1 %2897, i64 46, i64 48
  %2899 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2898
  %2900 = load ptr, ptr %2899, align 16, !tbaa !6
  %2901 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2902 = and i32 %2901, 1
  %2903 = icmp eq i32 %2902, 0
  %2904 = zext i1 %2903 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 227, ptr noundef nonnull @.str.620, ptr noundef %2892, ptr noundef %2892, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2895, ptr noundef %2900, i8 noundef zeroext %2904)
  %2905 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2906 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2907 = icmp eq i32 %2906, 0
  %2908 = load i32, ptr @flag_rounding_math, align 4
  %2909 = icmp eq i32 %2908, 0
  %2910 = select i1 %2909, i64 46, i64 48
  %2911 = select i1 %2907, i64 %2910, i64 45
  %2912 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2911
  %2913 = load ptr, ptr %2912, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 228, ptr noundef nonnull @.str.621, ptr noundef %2905, ptr noundef %2905, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %2913, i8 noundef zeroext 1)
  %2914 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2915 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2916 = icmp eq i32 %2915, 0
  %2917 = zext i1 %2916 to i8
  %2918 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2919 = icmp eq i32 %2918, 0
  %2920 = load i32, ptr @flag_rounding_math, align 4
  %2921 = icmp eq i32 %2920, 0
  %2922 = select i1 %2921, i64 46, i64 48
  %2923 = select i1 %2919, i64 %2922, i64 45
  %2924 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2923
  %2925 = load ptr, ptr %2924, align 8, !tbaa !6
  %2926 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2927 = and i32 %2926, 1
  %2928 = icmp eq i32 %2927, 0
  %2929 = zext i1 %2928 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 229, ptr noundef nonnull @.str.622, ptr noundef %2914, ptr noundef %2914, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2917, ptr noundef %2925, i8 noundef zeroext %2929)
  %2930 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2931 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2932 = icmp eq i32 %2931, 0
  %2933 = zext i1 %2932 to i8
  %2934 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %2935 = icmp eq i32 %2934, 0
  %2936 = load i32, ptr @flag_rounding_math, align 4
  %2937 = icmp eq i32 %2936, 0
  %2938 = select i1 %2937, i64 46, i64 48
  %2939 = select i1 %2935, i64 %2938, i64 45
  %2940 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2939
  %2941 = load ptr, ptr %2940, align 8, !tbaa !6
  %2942 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2943 = and i32 %2942, 1
  %2944 = icmp eq i32 %2943, 0
  %2945 = zext i1 %2944 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 230, ptr noundef nonnull @.str.623, ptr noundef %2930, ptr noundef %2930, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2933, ptr noundef %2941, i8 noundef zeroext %2945)
  %2946 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2947 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2948 = icmp eq i32 %2947, 0
  %2949 = select i1 %2948, i64 46, i64 48
  %2950 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2949
  %2951 = load ptr, ptr %2950, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 231, ptr noundef nonnull @.str.624, ptr noundef %2946, ptr noundef %2946, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %2951, i8 noundef zeroext 1)
  %2952 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2953 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2954 = icmp eq i32 %2953, 0
  %2955 = zext i1 %2954 to i8
  %2956 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2957 = icmp eq i32 %2956, 0
  %2958 = select i1 %2957, i64 46, i64 48
  %2959 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2958
  %2960 = load ptr, ptr %2959, align 16, !tbaa !6
  %2961 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2962 = and i32 %2961, 1
  %2963 = icmp eq i32 %2962, 0
  %2964 = zext i1 %2963 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 232, ptr noundef nonnull @.str.625, ptr noundef %2952, ptr noundef %2952, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2955, ptr noundef %2960, i8 noundef zeroext %2964)
  %2965 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %2966 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2967 = icmp eq i32 %2966, 0
  %2968 = select i1 %2967, i64 46, i64 48
  %2969 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2968
  %2970 = load ptr, ptr %2969, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 233, ptr noundef nonnull @.str.626, ptr noundef %2965, ptr noundef %2965, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %2970, i8 noundef zeroext 1)
  %2971 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %2972 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2973 = icmp eq i32 %2972, 0
  %2974 = zext i1 %2973 to i8
  %2975 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2976 = icmp eq i32 %2975, 0
  %2977 = select i1 %2976, i64 46, i64 48
  %2978 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2977
  %2979 = load ptr, ptr %2978, align 16, !tbaa !6
  %2980 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2981 = and i32 %2980, 1
  %2982 = icmp eq i32 %2981, 0
  %2983 = zext i1 %2982 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 234, ptr noundef nonnull @.str.627, ptr noundef %2971, ptr noundef %2971, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2974, ptr noundef %2979, i8 noundef zeroext %2983)
  %2984 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2985 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2986 = icmp eq i32 %2985, 0
  %2987 = zext i1 %2986 to i8
  %2988 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %2989 = icmp eq i32 %2988, 0
  %2990 = select i1 %2989, i64 46, i64 48
  %2991 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %2990
  %2992 = load ptr, ptr %2991, align 16, !tbaa !6
  %2993 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %2994 = and i32 %2993, 1
  %2995 = icmp eq i32 %2994, 0
  %2996 = zext i1 %2995 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 235, ptr noundef nonnull @.str.628, ptr noundef %2984, ptr noundef %2984, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2987, ptr noundef %2992, i8 noundef zeroext %2996)
  %2997 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %2998 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %2999 = icmp eq i32 %2998, 0
  %3000 = zext i1 %2999 to i8
  %3001 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3002 = icmp eq i32 %3001, 0
  %3003 = select i1 %3002, i64 46, i64 48
  %3004 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3003
  %3005 = load ptr, ptr %3004, align 16, !tbaa !6
  %3006 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3007 = and i32 %3006, 1
  %3008 = icmp eq i32 %3007, 0
  %3009 = zext i1 %3008 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 236, ptr noundef nonnull @.str.629, ptr noundef %2997, ptr noundef %2997, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3000, ptr noundef %3005, i8 noundef zeroext %3009)
  %3010 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %3011 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3012 = icmp eq i32 %3011, 0
  %3013 = zext i1 %3012 to i8
  %3014 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3015 = icmp eq i32 %3014, 0
  %3016 = load i32, ptr @flag_rounding_math, align 4
  %3017 = icmp eq i32 %3016, 0
  %3018 = select i1 %3017, i64 46, i64 48
  %3019 = select i1 %3015, i64 %3018, i64 45
  %3020 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3019
  %3021 = load ptr, ptr %3020, align 8, !tbaa !6
  %3022 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3023 = and i32 %3022, 1
  %3024 = icmp eq i32 %3023, 0
  %3025 = zext i1 %3024 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 237, ptr noundef nonnull @.str.630, ptr noundef %3010, ptr noundef %3010, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3013, ptr noundef %3021, i8 noundef zeroext %3025)
  %3026 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %3027 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3028 = icmp eq i32 %3027, 0
  %3029 = zext i1 %3028 to i8
  %3030 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3031 = icmp eq i32 %3030, 0
  %3032 = load i32, ptr @flag_rounding_math, align 4
  %3033 = icmp eq i32 %3032, 0
  %3034 = select i1 %3033, i64 46, i64 48
  %3035 = select i1 %3031, i64 %3034, i64 45
  %3036 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3035
  %3037 = load ptr, ptr %3036, align 8, !tbaa !6
  %3038 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3039 = and i32 %3038, 1
  %3040 = icmp eq i32 %3039, 0
  %3041 = zext i1 %3040 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 238, ptr noundef nonnull @.str.631, ptr noundef %3026, ptr noundef %3026, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3029, ptr noundef %3037, i8 noundef zeroext %3041)
  %3042 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %3043 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3044 = icmp eq i32 %3043, 0
  %3045 = zext i1 %3044 to i8
  %3046 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3047 = icmp eq i32 %3046, 0
  %3048 = load i32, ptr @flag_rounding_math, align 4
  %3049 = icmp eq i32 %3048, 0
  %3050 = select i1 %3049, i64 46, i64 48
  %3051 = select i1 %3047, i64 %3050, i64 45
  %3052 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3051
  %3053 = load ptr, ptr %3052, align 8, !tbaa !6
  %3054 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3055 = and i32 %3054, 1
  %3056 = icmp eq i32 %3055, 0
  %3057 = zext i1 %3056 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 239, ptr noundef nonnull @.str.632, ptr noundef %3042, ptr noundef %3042, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3045, ptr noundef %3053, i8 noundef zeroext %3057)
  %3058 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %3059 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3060 = icmp eq i32 %3059, 0
  %3061 = zext i1 %3060 to i8
  %3062 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3063 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3064 = and i32 %3063, 1
  %3065 = icmp eq i32 %3064, 0
  %3066 = zext i1 %3065 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 240, ptr noundef nonnull @.str.633, ptr noundef %3058, ptr noundef %3058, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3061, ptr noundef %3062, i8 noundef zeroext %3066)
  %3067 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %3068 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3069 = icmp eq i32 %3068, 0
  %3070 = zext i1 %3069 to i8
  %3071 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3072 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3073 = and i32 %3072, 1
  %3074 = icmp eq i32 %3073, 0
  %3075 = zext i1 %3074 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 241, ptr noundef nonnull @.str.634, ptr noundef %3067, ptr noundef %3067, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3070, ptr noundef %3071, i8 noundef zeroext %3075)
  %3076 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %3077 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3078 = icmp eq i32 %3077, 0
  %3079 = zext i1 %3078 to i8
  %3080 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3081 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3082 = and i32 %3081, 1
  %3083 = icmp eq i32 %3082, 0
  %3084 = zext i1 %3083 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 242, ptr noundef nonnull @.str.635, ptr noundef %3076, ptr noundef %3076, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3079, ptr noundef %3080, i8 noundef zeroext %3084)
  %3085 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %3086 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3087 = icmp eq i32 %3086, 0
  %3088 = load i32, ptr @flag_rounding_math, align 4
  %3089 = icmp eq i32 %3088, 0
  %3090 = select i1 %3089, i64 46, i64 48
  %3091 = select i1 %3087, i64 %3090, i64 45
  %3092 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3091
  %3093 = load ptr, ptr %3092, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 243, ptr noundef nonnull @.str.636, ptr noundef %3085, ptr noundef %3085, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3093, i8 noundef zeroext 0)
  %3094 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %3095 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3096 = icmp eq i32 %3095, 0
  %3097 = load i32, ptr @flag_rounding_math, align 4
  %3098 = icmp eq i32 %3097, 0
  %3099 = select i1 %3098, i64 46, i64 48
  %3100 = select i1 %3096, i64 %3099, i64 45
  %3101 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3100
  %3102 = load ptr, ptr %3101, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 244, ptr noundef nonnull @.str.637, ptr noundef %3094, ptr noundef %3094, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3102, i8 noundef zeroext 0)
  %3103 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %3104 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3105 = icmp eq i32 %3104, 0
  %3106 = load i32, ptr @flag_rounding_math, align 4
  %3107 = icmp eq i32 %3106, 0
  %3108 = select i1 %3107, i64 46, i64 48
  %3109 = select i1 %3105, i64 %3108, i64 45
  %3110 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3109
  %3111 = load ptr, ptr %3110, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 245, ptr noundef nonnull @.str.638, ptr noundef %3103, ptr noundef %3103, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3111, i8 noundef zeroext 0)
  %3112 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 68), align 32, !tbaa !6
  %3113 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3114 = icmp eq i32 %3113, 0
  %3115 = load i32, ptr @flag_rounding_math, align 4
  %3116 = icmp eq i32 %3115, 0
  %3117 = select i1 %3116, i64 46, i64 48
  %3118 = select i1 %3114, i64 %3117, i64 45
  %3119 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3118
  %3120 = load ptr, ptr %3119, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 246, ptr noundef nonnull @.str.639, ptr noundef %3112, ptr noundef %3112, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3120, i8 noundef zeroext 0)
  %3121 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 67), align 8, !tbaa !6
  %3122 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3123 = icmp eq i32 %3122, 0
  %3124 = load i32, ptr @flag_rounding_math, align 4
  %3125 = icmp eq i32 %3124, 0
  %3126 = select i1 %3125, i64 46, i64 48
  %3127 = select i1 %3123, i64 %3126, i64 45
  %3128 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3127
  %3129 = load ptr, ptr %3128, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 247, ptr noundef nonnull @.str.640, ptr noundef %3121, ptr noundef %3121, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3129, i8 noundef zeroext 0)
  %3130 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 69), align 8, !tbaa !6
  %3131 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3132 = icmp eq i32 %3131, 0
  %3133 = load i32, ptr @flag_rounding_math, align 4
  %3134 = icmp eq i32 %3133, 0
  %3135 = select i1 %3134, i64 46, i64 48
  %3136 = select i1 %3132, i64 %3135, i64 45
  %3137 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3136
  %3138 = load ptr, ptr %3137, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 248, ptr noundef nonnull @.str.641, ptr noundef %3130, ptr noundef %3130, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3138, i8 noundef zeroext 0)
  %3139 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 158), align 16, !tbaa !6
  %3140 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3141 = icmp eq i32 %3140, 0
  %3142 = load i32, ptr @flag_rounding_math, align 4
  %3143 = icmp eq i32 %3142, 0
  %3144 = select i1 %3143, i64 46, i64 48
  %3145 = select i1 %3141, i64 %3144, i64 45
  %3146 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3145
  %3147 = load ptr, ptr %3146, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 249, ptr noundef nonnull @.str.642, ptr noundef %3139, ptr noundef %3139, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3147, i8 noundef zeroext 0)
  %3148 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 157), align 8, !tbaa !6
  %3149 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3150 = icmp eq i32 %3149, 0
  %3151 = load i32, ptr @flag_rounding_math, align 4
  %3152 = icmp eq i32 %3151, 0
  %3153 = select i1 %3152, i64 46, i64 48
  %3154 = select i1 %3150, i64 %3153, i64 45
  %3155 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3154
  %3156 = load ptr, ptr %3155, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 250, ptr noundef nonnull @.str.643, ptr noundef %3148, ptr noundef %3148, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3156, i8 noundef zeroext 0)
  %3157 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 159), align 8, !tbaa !6
  %3158 = load i32, ptr @flag_errno_math, align 4, !tbaa !21
  %3159 = icmp eq i32 %3158, 0
  %3160 = load i32, ptr @flag_rounding_math, align 4
  %3161 = icmp eq i32 %3160, 0
  %3162 = select i1 %3161, i64 46, i64 48
  %3163 = select i1 %3159, i64 %3162, i64 45
  %3164 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3163
  %3165 = load ptr, ptr %3164, align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 251, ptr noundef nonnull @.str.644, ptr noundef %3157, ptr noundef %3157, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3165, i8 noundef zeroext 0)
  %3166 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 74), align 16, !tbaa !6
  %3167 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3168 = icmp eq i32 %3167, 0
  %3169 = zext i1 %3168 to i8
  %3170 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3171 = icmp eq i32 %3170, 0
  %3172 = select i1 %3171, i64 46, i64 48
  %3173 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3172
  %3174 = load ptr, ptr %3173, align 16, !tbaa !6
  %3175 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3176 = and i32 %3175, 1
  %3177 = icmp eq i32 %3176, 0
  %3178 = zext i1 %3177 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 252, ptr noundef nonnull @.str.645, ptr noundef %3166, ptr noundef %3166, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3169, ptr noundef %3174, i8 noundef zeroext %3178)
  %3179 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 73), align 8, !tbaa !6
  %3180 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3181 = icmp eq i32 %3180, 0
  %3182 = zext i1 %3181 to i8
  %3183 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3184 = icmp eq i32 %3183, 0
  %3185 = select i1 %3184, i64 46, i64 48
  %3186 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3185
  %3187 = load ptr, ptr %3186, align 16, !tbaa !6
  %3188 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3189 = and i32 %3188, 1
  %3190 = icmp eq i32 %3189, 0
  %3191 = zext i1 %3190 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 253, ptr noundef nonnull @.str.646, ptr noundef %3179, ptr noundef %3179, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3182, ptr noundef %3187, i8 noundef zeroext %3191)
  %3192 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 75), align 8, !tbaa !6
  %3193 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3194 = icmp eq i32 %3193, 0
  %3195 = zext i1 %3194 to i8
  %3196 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3197 = icmp eq i32 %3196, 0
  %3198 = select i1 %3197, i64 46, i64 48
  %3199 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3198
  %3200 = load ptr, ptr %3199, align 16, !tbaa !6
  %3201 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3202 = and i32 %3201, 1
  %3203 = icmp eq i32 %3202, 0
  %3204 = zext i1 %3203 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 254, ptr noundef nonnull @.str.647, ptr noundef %3192, ptr noundef %3192, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3195, ptr noundef %3200, i8 noundef zeroext %3204)
  %3205 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3206 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3207 = icmp eq i32 %3206, 0
  %3208 = zext i1 %3207 to i8
  %3209 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3210 = icmp eq i32 %3209, 0
  %3211 = select i1 %3210, i64 46, i64 48
  %3212 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3211
  %3213 = load ptr, ptr %3212, align 16, !tbaa !6
  %3214 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3215 = and i32 %3214, 1
  %3216 = icmp eq i32 %3215, 0
  %3217 = zext i1 %3216 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 255, ptr noundef nonnull @.str.648, ptr noundef %3205, ptr noundef %3205, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3208, ptr noundef %3213, i8 noundef zeroext %3217)
  %3218 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3219 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3220 = icmp eq i32 %3219, 0
  %3221 = zext i1 %3220 to i8
  %3222 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3223 = icmp eq i32 %3222, 0
  %3224 = select i1 %3223, i64 46, i64 48
  %3225 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3224
  %3226 = load ptr, ptr %3225, align 16, !tbaa !6
  %3227 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3228 = and i32 %3227, 1
  %3229 = icmp eq i32 %3228, 0
  %3230 = zext i1 %3229 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 256, ptr noundef nonnull @.str.649, ptr noundef %3218, ptr noundef %3218, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3221, ptr noundef %3226, i8 noundef zeroext %3230)
  %3231 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3232 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3233 = icmp eq i32 %3232, 0
  %3234 = zext i1 %3233 to i8
  %3235 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3236 = icmp eq i32 %3235, 0
  %3237 = select i1 %3236, i64 46, i64 48
  %3238 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3237
  %3239 = load ptr, ptr %3238, align 16, !tbaa !6
  %3240 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3241 = and i32 %3240, 1
  %3242 = icmp eq i32 %3241, 0
  %3243 = zext i1 %3242 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 257, ptr noundef nonnull @.str.650, ptr noundef %3231, ptr noundef %3231, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3234, ptr noundef %3239, i8 noundef zeroext %3243)
  %3244 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3245 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3246 = icmp eq i32 %3245, 0
  %3247 = zext i1 %3246 to i8
  %3248 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3249 = icmp eq i32 %3248, 0
  %3250 = select i1 %3249, i64 46, i64 48
  %3251 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3250
  %3252 = load ptr, ptr %3251, align 16, !tbaa !6
  %3253 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3254 = and i32 %3253, 1
  %3255 = icmp eq i32 %3254, 0
  %3256 = zext i1 %3255 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 258, ptr noundef nonnull @.str.651, ptr noundef %3244, ptr noundef %3244, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3247, ptr noundef %3252, i8 noundef zeroext %3256)
  %3257 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3258 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3259 = icmp eq i32 %3258, 0
  %3260 = zext i1 %3259 to i8
  %3261 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3262 = icmp eq i32 %3261, 0
  %3263 = select i1 %3262, i64 46, i64 48
  %3264 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3263
  %3265 = load ptr, ptr %3264, align 16, !tbaa !6
  %3266 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3267 = and i32 %3266, 1
  %3268 = icmp eq i32 %3267, 0
  %3269 = zext i1 %3268 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 259, ptr noundef nonnull @.str.652, ptr noundef %3257, ptr noundef %3257, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3260, ptr noundef %3265, i8 noundef zeroext %3269)
  %3270 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3271 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3272 = icmp eq i32 %3271, 0
  %3273 = zext i1 %3272 to i8
  %3274 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3275 = icmp eq i32 %3274, 0
  %3276 = select i1 %3275, i64 46, i64 48
  %3277 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3276
  %3278 = load ptr, ptr %3277, align 16, !tbaa !6
  %3279 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3280 = and i32 %3279, 1
  %3281 = icmp eq i32 %3280, 0
  %3282 = zext i1 %3281 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 260, ptr noundef nonnull @.str.653, ptr noundef %3270, ptr noundef %3270, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3273, ptr noundef %3278, i8 noundef zeroext %3282)
  %3283 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 74), align 16, !tbaa !6
  %3284 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3285 = icmp eq i32 %3284, 0
  %3286 = zext i1 %3285 to i8
  %3287 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3288 = icmp eq i32 %3287, 0
  %3289 = select i1 %3288, i64 46, i64 48
  %3290 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3289
  %3291 = load ptr, ptr %3290, align 16, !tbaa !6
  %3292 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3293 = and i32 %3292, 1
  %3294 = icmp eq i32 %3293, 0
  %3295 = zext i1 %3294 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 261, ptr noundef nonnull @.str.654, ptr noundef %3283, ptr noundef %3283, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3286, ptr noundef %3291, i8 noundef zeroext %3295)
  %3296 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 73), align 8, !tbaa !6
  %3297 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3298 = icmp eq i32 %3297, 0
  %3299 = zext i1 %3298 to i8
  %3300 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3301 = icmp eq i32 %3300, 0
  %3302 = select i1 %3301, i64 46, i64 48
  %3303 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3302
  %3304 = load ptr, ptr %3303, align 16, !tbaa !6
  %3305 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3306 = and i32 %3305, 1
  %3307 = icmp eq i32 %3306, 0
  %3308 = zext i1 %3307 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 262, ptr noundef nonnull @.str.655, ptr noundef %3296, ptr noundef %3296, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3299, ptr noundef %3304, i8 noundef zeroext %3308)
  %3309 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 75), align 8, !tbaa !6
  %3310 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3311 = icmp eq i32 %3310, 0
  %3312 = zext i1 %3311 to i8
  %3313 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3314 = icmp eq i32 %3313, 0
  %3315 = select i1 %3314, i64 46, i64 48
  %3316 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3315
  %3317 = load ptr, ptr %3316, align 16, !tbaa !6
  %3318 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3319 = and i32 %3318, 1
  %3320 = icmp eq i32 %3319, 0
  %3321 = zext i1 %3320 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 263, ptr noundef nonnull @.str.656, ptr noundef %3309, ptr noundef %3309, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3312, ptr noundef %3317, i8 noundef zeroext %3321)
  %3322 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3323 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3324 = icmp eq i32 %3323, 0
  %3325 = zext i1 %3324 to i8
  %3326 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3327 = icmp eq i32 %3326, 0
  %3328 = select i1 %3327, i64 46, i64 48
  %3329 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3328
  %3330 = load ptr, ptr %3329, align 16, !tbaa !6
  %3331 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3332 = and i32 %3331, 1
  %3333 = icmp eq i32 %3332, 0
  %3334 = zext i1 %3333 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 264, ptr noundef nonnull @.str.657, ptr noundef %3322, ptr noundef %3322, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3325, ptr noundef %3330, i8 noundef zeroext %3334)
  %3335 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3336 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3337 = icmp eq i32 %3336, 0
  %3338 = zext i1 %3337 to i8
  %3339 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3340 = icmp eq i32 %3339, 0
  %3341 = select i1 %3340, i64 46, i64 48
  %3342 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3341
  %3343 = load ptr, ptr %3342, align 16, !tbaa !6
  %3344 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3345 = and i32 %3344, 1
  %3346 = icmp eq i32 %3345, 0
  %3347 = zext i1 %3346 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 265, ptr noundef nonnull @.str.658, ptr noundef %3335, ptr noundef %3335, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3338, ptr noundef %3343, i8 noundef zeroext %3347)
  %3348 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3349 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3350 = icmp eq i32 %3349, 0
  %3351 = zext i1 %3350 to i8
  %3352 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3353 = icmp eq i32 %3352, 0
  %3354 = select i1 %3353, i64 46, i64 48
  %3355 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3354
  %3356 = load ptr, ptr %3355, align 16, !tbaa !6
  %3357 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3358 = and i32 %3357, 1
  %3359 = icmp eq i32 %3358, 0
  %3360 = zext i1 %3359 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 266, ptr noundef nonnull @.str.659, ptr noundef %3348, ptr noundef %3348, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3351, ptr noundef %3356, i8 noundef zeroext %3360)
  %3361 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3362 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3363 = icmp eq i32 %3362, 0
  %3364 = zext i1 %3363 to i8
  %3365 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3366 = icmp eq i32 %3365, 0
  %3367 = select i1 %3366, i64 46, i64 48
  %3368 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3367
  %3369 = load ptr, ptr %3368, align 16, !tbaa !6
  %3370 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3371 = and i32 %3370, 1
  %3372 = icmp eq i32 %3371, 0
  %3373 = zext i1 %3372 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 267, ptr noundef nonnull @.str.660, ptr noundef %3361, ptr noundef %3361, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3364, ptr noundef %3369, i8 noundef zeroext %3373)
  %3374 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3375 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3376 = icmp eq i32 %3375, 0
  %3377 = zext i1 %3376 to i8
  %3378 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3379 = icmp eq i32 %3378, 0
  %3380 = select i1 %3379, i64 46, i64 48
  %3381 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3380
  %3382 = load ptr, ptr %3381, align 16, !tbaa !6
  %3383 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3384 = and i32 %3383, 1
  %3385 = icmp eq i32 %3384, 0
  %3386 = zext i1 %3385 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 268, ptr noundef nonnull @.str.661, ptr noundef %3374, ptr noundef %3374, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3377, ptr noundef %3382, i8 noundef zeroext %3386)
  %3387 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3388 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3389 = icmp eq i32 %3388, 0
  %3390 = zext i1 %3389 to i8
  %3391 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3392 = icmp eq i32 %3391, 0
  %3393 = select i1 %3392, i64 46, i64 48
  %3394 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3393
  %3395 = load ptr, ptr %3394, align 16, !tbaa !6
  %3396 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3397 = and i32 %3396, 1
  %3398 = icmp eq i32 %3397, 0
  %3399 = zext i1 %3398 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 269, ptr noundef nonnull @.str.662, ptr noundef %3387, ptr noundef %3387, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3390, ptr noundef %3395, i8 noundef zeroext %3399)
  %3400 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3401 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3402 = icmp eq i32 %3401, 0
  %3403 = zext i1 %3402 to i8
  %3404 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3405 = icmp eq i32 %3404, 0
  %3406 = select i1 %3405, i64 46, i64 48
  %3407 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3406
  %3408 = load ptr, ptr %3407, align 16, !tbaa !6
  %3409 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3410 = and i32 %3409, 1
  %3411 = icmp eq i32 %3410, 0
  %3412 = zext i1 %3411 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 270, ptr noundef nonnull @.str.663, ptr noundef %3400, ptr noundef %3400, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3403, ptr noundef %3408, i8 noundef zeroext %3412)
  %3413 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3414 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3415 = icmp eq i32 %3414, 0
  %3416 = zext i1 %3415 to i8
  %3417 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3418 = icmp eq i32 %3417, 0
  %3419 = select i1 %3418, i64 46, i64 48
  %3420 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3419
  %3421 = load ptr, ptr %3420, align 16, !tbaa !6
  %3422 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3423 = and i32 %3422, 1
  %3424 = icmp eq i32 %3423, 0
  %3425 = zext i1 %3424 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 271, ptr noundef nonnull @.str.664, ptr noundef %3413, ptr noundef %3413, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3416, ptr noundef %3421, i8 noundef zeroext %3425)
  %3426 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3427 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3428 = icmp eq i32 %3427, 0
  %3429 = zext i1 %3428 to i8
  %3430 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3431 = icmp eq i32 %3430, 0
  %3432 = select i1 %3431, i64 46, i64 48
  %3433 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3432
  %3434 = load ptr, ptr %3433, align 16, !tbaa !6
  %3435 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3436 = and i32 %3435, 1
  %3437 = icmp eq i32 %3436, 0
  %3438 = zext i1 %3437 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 272, ptr noundef nonnull @.str.665, ptr noundef %3426, ptr noundef %3426, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3429, ptr noundef %3434, i8 noundef zeroext %3438)
  %3439 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3440 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3441 = icmp eq i32 %3440, 0
  %3442 = zext i1 %3441 to i8
  %3443 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3444 = icmp eq i32 %3443, 0
  %3445 = select i1 %3444, i64 46, i64 48
  %3446 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3445
  %3447 = load ptr, ptr %3446, align 16, !tbaa !6
  %3448 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3449 = and i32 %3448, 1
  %3450 = icmp eq i32 %3449, 0
  %3451 = zext i1 %3450 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 273, ptr noundef nonnull @.str.666, ptr noundef %3439, ptr noundef %3439, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3442, ptr noundef %3447, i8 noundef zeroext %3451)
  %3452 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3453 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3454 = icmp eq i32 %3453, 0
  %3455 = zext i1 %3454 to i8
  %3456 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3457 = icmp eq i32 %3456, 0
  %3458 = select i1 %3457, i64 46, i64 48
  %3459 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3458
  %3460 = load ptr, ptr %3459, align 16, !tbaa !6
  %3461 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3462 = and i32 %3461, 1
  %3463 = icmp eq i32 %3462, 0
  %3464 = zext i1 %3463 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 274, ptr noundef nonnull @.str.667, ptr noundef %3452, ptr noundef %3452, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3455, ptr noundef %3460, i8 noundef zeroext %3464)
  %3465 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3466 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3467 = icmp eq i32 %3466, 0
  %3468 = zext i1 %3467 to i8
  %3469 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3470 = icmp eq i32 %3469, 0
  %3471 = select i1 %3470, i64 46, i64 48
  %3472 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3471
  %3473 = load ptr, ptr %3472, align 16, !tbaa !6
  %3474 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3475 = and i32 %3474, 1
  %3476 = icmp eq i32 %3475, 0
  %3477 = zext i1 %3476 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 275, ptr noundef nonnull @.str.668, ptr noundef %3465, ptr noundef %3465, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3468, ptr noundef %3473, i8 noundef zeroext %3477)
  %3478 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3479 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3480 = icmp eq i32 %3479, 0
  %3481 = zext i1 %3480 to i8
  %3482 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3483 = icmp eq i32 %3482, 0
  %3484 = select i1 %3483, i64 46, i64 48
  %3485 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3484
  %3486 = load ptr, ptr %3485, align 16, !tbaa !6
  %3487 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3488 = and i32 %3487, 1
  %3489 = icmp eq i32 %3488, 0
  %3490 = zext i1 %3489 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 276, ptr noundef nonnull @.str.669, ptr noundef %3478, ptr noundef %3478, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3481, ptr noundef %3486, i8 noundef zeroext %3490)
  %3491 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3492 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3493 = icmp eq i32 %3492, 0
  %3494 = zext i1 %3493 to i8
  %3495 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3496 = icmp eq i32 %3495, 0
  %3497 = select i1 %3496, i64 46, i64 48
  %3498 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3497
  %3499 = load ptr, ptr %3498, align 16, !tbaa !6
  %3500 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3501 = and i32 %3500, 1
  %3502 = icmp eq i32 %3501, 0
  %3503 = zext i1 %3502 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 277, ptr noundef nonnull @.str.670, ptr noundef %3491, ptr noundef %3491, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3494, ptr noundef %3499, i8 noundef zeroext %3503)
  %3504 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3505 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3506 = icmp eq i32 %3505, 0
  %3507 = zext i1 %3506 to i8
  %3508 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3509 = icmp eq i32 %3508, 0
  %3510 = select i1 %3509, i64 46, i64 48
  %3511 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3510
  %3512 = load ptr, ptr %3511, align 16, !tbaa !6
  %3513 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3514 = and i32 %3513, 1
  %3515 = icmp eq i32 %3514, 0
  %3516 = zext i1 %3515 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 278, ptr noundef nonnull @.str.671, ptr noundef %3504, ptr noundef %3504, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3507, ptr noundef %3512, i8 noundef zeroext %3516)
  %3517 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3518 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3519 = icmp eq i32 %3518, 0
  %3520 = zext i1 %3519 to i8
  %3521 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3522 = icmp eq i32 %3521, 0
  %3523 = select i1 %3522, i64 46, i64 48
  %3524 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3523
  %3525 = load ptr, ptr %3524, align 16, !tbaa !6
  %3526 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3527 = and i32 %3526, 1
  %3528 = icmp eq i32 %3527, 0
  %3529 = zext i1 %3528 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 279, ptr noundef nonnull @.str.672, ptr noundef %3517, ptr noundef %3517, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3520, ptr noundef %3525, i8 noundef zeroext %3529)
  %3530 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3531 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3532 = icmp eq i32 %3531, 0
  %3533 = zext i1 %3532 to i8
  %3534 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3535 = icmp eq i32 %3534, 0
  %3536 = select i1 %3535, i64 46, i64 48
  %3537 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3536
  %3538 = load ptr, ptr %3537, align 16, !tbaa !6
  %3539 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3540 = and i32 %3539, 1
  %3541 = icmp eq i32 %3540, 0
  %3542 = zext i1 %3541 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 280, ptr noundef nonnull @.str.673, ptr noundef %3530, ptr noundef %3530, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3533, ptr noundef %3538, i8 noundef zeroext %3542)
  %3543 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3544 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3545 = icmp eq i32 %3544, 0
  %3546 = zext i1 %3545 to i8
  %3547 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3548 = icmp eq i32 %3547, 0
  %3549 = select i1 %3548, i64 46, i64 48
  %3550 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3549
  %3551 = load ptr, ptr %3550, align 16, !tbaa !6
  %3552 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3553 = and i32 %3552, 1
  %3554 = icmp eq i32 %3553, 0
  %3555 = zext i1 %3554 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 281, ptr noundef nonnull @.str.674, ptr noundef %3543, ptr noundef %3543, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3546, ptr noundef %3551, i8 noundef zeroext %3555)
  %3556 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3557 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3558 = icmp eq i32 %3557, 0
  %3559 = zext i1 %3558 to i8
  %3560 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3561 = icmp eq i32 %3560, 0
  %3562 = select i1 %3561, i64 46, i64 48
  %3563 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3562
  %3564 = load ptr, ptr %3563, align 16, !tbaa !6
  %3565 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3566 = and i32 %3565, 1
  %3567 = icmp eq i32 %3566, 0
  %3568 = zext i1 %3567 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 282, ptr noundef nonnull @.str.675, ptr noundef %3556, ptr noundef %3556, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3559, ptr noundef %3564, i8 noundef zeroext %3568)
  %3569 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3570 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3571 = icmp eq i32 %3570, 0
  %3572 = zext i1 %3571 to i8
  %3573 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3574 = icmp eq i32 %3573, 0
  %3575 = select i1 %3574, i64 46, i64 48
  %3576 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3575
  %3577 = load ptr, ptr %3576, align 16, !tbaa !6
  %3578 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3579 = and i32 %3578, 1
  %3580 = icmp eq i32 %3579, 0
  %3581 = zext i1 %3580 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 283, ptr noundef nonnull @.str.676, ptr noundef %3569, ptr noundef %3569, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3572, ptr noundef %3577, i8 noundef zeroext %3581)
  %3582 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3583 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3584 = icmp eq i32 %3583, 0
  %3585 = zext i1 %3584 to i8
  %3586 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3587 = icmp eq i32 %3586, 0
  %3588 = select i1 %3587, i64 46, i64 48
  %3589 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3588
  %3590 = load ptr, ptr %3589, align 16, !tbaa !6
  %3591 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3592 = and i32 %3591, 1
  %3593 = icmp eq i32 %3592, 0
  %3594 = zext i1 %3593 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 284, ptr noundef nonnull @.str.677, ptr noundef %3582, ptr noundef %3582, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3585, ptr noundef %3590, i8 noundef zeroext %3594)
  %3595 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 77), align 8, !tbaa !6
  %3596 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %3597 = icmp eq ptr %3596, %3595
  br i1 %3597, label %3606, label %3598

3598:                                             ; preds = %2497
  %3599 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3600 = icmp eq i32 %3599, 0
  %3601 = select i1 %3600, i64 46, i64 48
  %3602 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3601
  %3603 = load ptr, ptr %3602, align 16, !tbaa !6
  %3604 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.678, ptr noundef %3595, i32 noundef 285, i32 noundef 3, ptr noundef null, ptr noundef %3603) #22
  store ptr %3604, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 285), align 8, !tbaa !6
  store ptr %3604, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 285), align 8, !tbaa !6
  %3605 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %3606

3606:                                             ; preds = %2497, %3598
  %3607 = phi ptr [ %3595, %2497 ], [ %3605, %3598 ]
  %3608 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 76), align 32, !tbaa !6
  %3609 = icmp eq ptr %3607, %3608
  br i1 %3609, label %3618, label %3610

3610:                                             ; preds = %3606
  %3611 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3612 = icmp eq i32 %3611, 0
  %3613 = select i1 %3612, i64 46, i64 48
  %3614 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3613
  %3615 = load ptr, ptr %3614, align 16, !tbaa !6
  %3616 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.679, ptr noundef %3608, i32 noundef 286, i32 noundef 3, ptr noundef null, ptr noundef %3615) #22
  store ptr %3616, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 286), align 16, !tbaa !6
  store ptr %3616, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 286), align 16, !tbaa !6
  %3617 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %3618

3618:                                             ; preds = %3606, %3610
  %3619 = phi ptr [ %3607, %3606 ], [ %3617, %3610 ]
  %3620 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 78), align 16, !tbaa !6
  %3621 = icmp eq ptr %3619, %3620
  br i1 %3621, label %3629, label %3622

3622:                                             ; preds = %3618
  %3623 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3624 = icmp eq i32 %3623, 0
  %3625 = select i1 %3624, i64 46, i64 48
  %3626 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3625
  %3627 = load ptr, ptr %3626, align 16, !tbaa !6
  %3628 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.680, ptr noundef %3620, i32 noundef 287, i32 noundef 3, ptr noundef null, ptr noundef %3627) #22
  store ptr %3628, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 287), align 8, !tbaa !6
  store ptr %3628, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 287), align 8, !tbaa !6
  br label %3629

3629:                                             ; preds = %3618, %3622
  %3630 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 74), align 16, !tbaa !6
  %3631 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3632 = icmp eq i32 %3631, 0
  %3633 = zext i1 %3632 to i8
  %3634 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3635 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3636 = and i32 %3635, 1
  %3637 = icmp eq i32 %3636, 0
  %3638 = zext i1 %3637 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 288, ptr noundef nonnull @.str.681, ptr noundef %3630, ptr noundef %3630, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3633, ptr noundef %3634, i8 noundef zeroext %3638)
  %3639 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 73), align 8, !tbaa !6
  %3640 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3641 = icmp eq i32 %3640, 0
  %3642 = zext i1 %3641 to i8
  %3643 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3644 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3645 = and i32 %3644, 1
  %3646 = icmp eq i32 %3645, 0
  %3647 = zext i1 %3646 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 289, ptr noundef nonnull @.str.682, ptr noundef %3639, ptr noundef %3639, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3642, ptr noundef %3643, i8 noundef zeroext %3647)
  %3648 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 75), align 8, !tbaa !6
  %3649 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3650 = icmp eq i32 %3649, 0
  %3651 = zext i1 %3650 to i8
  %3652 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3653 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3654 = and i32 %3653, 1
  %3655 = icmp eq i32 %3654, 0
  %3656 = zext i1 %3655 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 290, ptr noundef nonnull @.str.683, ptr noundef %3648, ptr noundef %3648, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3651, ptr noundef %3652, i8 noundef zeroext %3656)
  %3657 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3658 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3659 = icmp eq i32 %3658, 0
  %3660 = zext i1 %3659 to i8
  %3661 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3662 = icmp eq i32 %3661, 0
  %3663 = select i1 %3662, i64 46, i64 48
  %3664 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3663
  %3665 = load ptr, ptr %3664, align 16, !tbaa !6
  %3666 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3667 = and i32 %3666, 1
  %3668 = icmp eq i32 %3667, 0
  %3669 = zext i1 %3668 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 291, ptr noundef nonnull @.str.684, ptr noundef %3657, ptr noundef %3657, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3660, ptr noundef %3665, i8 noundef zeroext %3669)
  %3670 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3671 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3672 = icmp eq i32 %3671, 0
  %3673 = zext i1 %3672 to i8
  %3674 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3675 = icmp eq i32 %3674, 0
  %3676 = select i1 %3675, i64 46, i64 48
  %3677 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3676
  %3678 = load ptr, ptr %3677, align 16, !tbaa !6
  %3679 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3680 = and i32 %3679, 1
  %3681 = icmp eq i32 %3680, 0
  %3682 = zext i1 %3681 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 292, ptr noundef nonnull @.str.685, ptr noundef %3670, ptr noundef %3670, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3673, ptr noundef %3678, i8 noundef zeroext %3682)
  %3683 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3684 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3685 = icmp eq i32 %3684, 0
  %3686 = zext i1 %3685 to i8
  %3687 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3688 = icmp eq i32 %3687, 0
  %3689 = select i1 %3688, i64 46, i64 48
  %3690 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3689
  %3691 = load ptr, ptr %3690, align 16, !tbaa !6
  %3692 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3693 = and i32 %3692, 1
  %3694 = icmp eq i32 %3693, 0
  %3695 = zext i1 %3694 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 293, ptr noundef nonnull @.str.686, ptr noundef %3683, ptr noundef %3683, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3686, ptr noundef %3691, i8 noundef zeroext %3695)
  %3696 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3697 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3698 = icmp eq i32 %3697, 0
  %3699 = select i1 %3698, i64 46, i64 48
  %3700 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3699
  %3701 = load ptr, ptr %3700, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 294, ptr noundef nonnull @.str.687, ptr noundef %3696, ptr noundef %3696, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3701, i8 noundef zeroext 0)
  %3702 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3703 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3704 = icmp eq i32 %3703, 0
  %3705 = select i1 %3704, i64 46, i64 48
  %3706 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3705
  %3707 = load ptr, ptr %3706, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 295, ptr noundef nonnull @.str.688, ptr noundef %3702, ptr noundef %3702, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3707, i8 noundef zeroext 0)
  %3708 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3709 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3710 = icmp eq i32 %3709, 0
  %3711 = select i1 %3710, i64 46, i64 48
  %3712 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3711
  %3713 = load ptr, ptr %3712, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 296, ptr noundef nonnull @.str.689, ptr noundef %3708, ptr noundef %3708, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %3713, i8 noundef zeroext 0)
  %3714 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3715 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3716 = icmp eq i32 %3715, 0
  %3717 = zext i1 %3716 to i8
  %3718 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3719 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3720 = and i32 %3719, 1
  %3721 = icmp eq i32 %3720, 0
  %3722 = zext i1 %3721 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 297, ptr noundef nonnull @.str.690, ptr noundef %3714, ptr noundef %3714, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3717, ptr noundef %3718, i8 noundef zeroext %3722)
  %3723 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3724 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3725 = icmp eq i32 %3724, 0
  %3726 = zext i1 %3725 to i8
  %3727 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3728 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3729 = and i32 %3728, 1
  %3730 = icmp eq i32 %3729, 0
  %3731 = zext i1 %3730 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 298, ptr noundef nonnull @.str.691, ptr noundef %3723, ptr noundef %3723, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3726, ptr noundef %3727, i8 noundef zeroext %3731)
  %3732 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3733 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3734 = icmp eq i32 %3733, 0
  %3735 = zext i1 %3734 to i8
  %3736 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3737 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3738 = and i32 %3737, 1
  %3739 = icmp eq i32 %3738, 0
  %3740 = zext i1 %3739 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 299, ptr noundef nonnull @.str.692, ptr noundef %3732, ptr noundef %3732, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3735, ptr noundef %3736, i8 noundef zeroext %3740)
  %3741 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 167), align 8, !tbaa !6
  %3742 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3743 = icmp eq i32 %3742, 0
  %3744 = zext i1 %3743 to i8
  %3745 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3746 = icmp eq i32 %3745, 0
  %3747 = select i1 %3746, i64 46, i64 48
  %3748 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3747
  %3749 = load ptr, ptr %3748, align 16, !tbaa !6
  %3750 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3751 = and i32 %3750, 1
  %3752 = icmp eq i32 %3751, 0
  %3753 = zext i1 %3752 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 300, ptr noundef nonnull @.str.693, ptr noundef %3741, ptr noundef %3741, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3744, ptr noundef %3749, i8 noundef zeroext %3753)
  %3754 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 166), align 16, !tbaa !6
  %3755 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3756 = icmp eq i32 %3755, 0
  %3757 = zext i1 %3756 to i8
  %3758 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3759 = icmp eq i32 %3758, 0
  %3760 = select i1 %3759, i64 46, i64 48
  %3761 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3760
  %3762 = load ptr, ptr %3761, align 16, !tbaa !6
  %3763 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3764 = and i32 %3763, 1
  %3765 = icmp eq i32 %3764, 0
  %3766 = zext i1 %3765 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 301, ptr noundef nonnull @.str.694, ptr noundef %3754, ptr noundef %3754, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3757, ptr noundef %3762, i8 noundef zeroext %3766)
  %3767 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 168), align 32, !tbaa !6
  %3768 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3769 = icmp eq i32 %3768, 0
  %3770 = zext i1 %3769 to i8
  %3771 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3772 = icmp eq i32 %3771, 0
  %3773 = select i1 %3772, i64 46, i64 48
  %3774 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3773
  %3775 = load ptr, ptr %3774, align 16, !tbaa !6
  %3776 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3777 = and i32 %3776, 1
  %3778 = icmp eq i32 %3777, 0
  %3779 = zext i1 %3778 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 302, ptr noundef nonnull @.str.695, ptr noundef %3767, ptr noundef %3767, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3770, ptr noundef %3775, i8 noundef zeroext %3779)
  %3780 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3781 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3782 = icmp eq i32 %3781, 0
  %3783 = zext i1 %3782 to i8
  %3784 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3785 = icmp eq i32 %3784, 0
  %3786 = select i1 %3785, i64 46, i64 48
  %3787 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3786
  %3788 = load ptr, ptr %3787, align 16, !tbaa !6
  %3789 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3790 = and i32 %3789, 1
  %3791 = icmp eq i32 %3790, 0
  %3792 = zext i1 %3791 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 303, ptr noundef nonnull @.str.696, ptr noundef %3780, ptr noundef %3780, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3783, ptr noundef %3788, i8 noundef zeroext %3792)
  %3793 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3794 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3795 = icmp eq i32 %3794, 0
  %3796 = zext i1 %3795 to i8
  %3797 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3798 = icmp eq i32 %3797, 0
  %3799 = select i1 %3798, i64 46, i64 48
  %3800 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3799
  %3801 = load ptr, ptr %3800, align 16, !tbaa !6
  %3802 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3803 = and i32 %3802, 1
  %3804 = icmp eq i32 %3803, 0
  %3805 = zext i1 %3804 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 304, ptr noundef nonnull @.str.697, ptr noundef %3793, ptr noundef %3793, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3796, ptr noundef %3801, i8 noundef zeroext %3805)
  %3806 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3807 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3808 = icmp eq i32 %3807, 0
  %3809 = zext i1 %3808 to i8
  %3810 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3811 = icmp eq i32 %3810, 0
  %3812 = select i1 %3811, i64 46, i64 48
  %3813 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3812
  %3814 = load ptr, ptr %3813, align 16, !tbaa !6
  %3815 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3816 = and i32 %3815, 1
  %3817 = icmp eq i32 %3816, 0
  %3818 = zext i1 %3817 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 305, ptr noundef nonnull @.str.698, ptr noundef %3806, ptr noundef %3806, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3809, ptr noundef %3814, i8 noundef zeroext %3818)
  %3819 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 74), align 16, !tbaa !6
  %3820 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3821 = icmp eq i32 %3820, 0
  %3822 = zext i1 %3821 to i8
  %3823 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3824 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3825 = and i32 %3824, 1
  %3826 = icmp eq i32 %3825, 0
  %3827 = zext i1 %3826 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 306, ptr noundef nonnull @.str.699, ptr noundef %3819, ptr noundef %3819, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3822, ptr noundef %3823, i8 noundef zeroext %3827)
  %3828 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 73), align 8, !tbaa !6
  %3829 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3830 = icmp eq i32 %3829, 0
  %3831 = zext i1 %3830 to i8
  %3832 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3833 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3834 = and i32 %3833, 1
  %3835 = icmp eq i32 %3834, 0
  %3836 = zext i1 %3835 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 307, ptr noundef nonnull @.str.700, ptr noundef %3828, ptr noundef %3828, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3831, ptr noundef %3832, i8 noundef zeroext %3836)
  %3837 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 75), align 8, !tbaa !6
  %3838 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3839 = icmp eq i32 %3838, 0
  %3840 = zext i1 %3839 to i8
  %3841 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %3842 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3843 = and i32 %3842, 1
  %3844 = icmp eq i32 %3843, 0
  %3845 = zext i1 %3844 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 308, ptr noundef nonnull @.str.701, ptr noundef %3837, ptr noundef %3837, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3840, ptr noundef %3841, i8 noundef zeroext %3845)
  %3846 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3847 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3848 = icmp eq i32 %3847, 0
  %3849 = zext i1 %3848 to i8
  %3850 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3851 = icmp eq i32 %3850, 0
  %3852 = select i1 %3851, i64 46, i64 48
  %3853 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3852
  %3854 = load ptr, ptr %3853, align 16, !tbaa !6
  %3855 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3856 = and i32 %3855, 1
  %3857 = icmp eq i32 %3856, 0
  %3858 = zext i1 %3857 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 309, ptr noundef nonnull @.str.702, ptr noundef %3846, ptr noundef %3846, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3849, ptr noundef %3854, i8 noundef zeroext %3858)
  %3859 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3860 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3861 = icmp eq i32 %3860, 0
  %3862 = zext i1 %3861 to i8
  %3863 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3864 = icmp eq i32 %3863, 0
  %3865 = select i1 %3864, i64 46, i64 48
  %3866 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3865
  %3867 = load ptr, ptr %3866, align 16, !tbaa !6
  %3868 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3869 = and i32 %3868, 1
  %3870 = icmp eq i32 %3869, 0
  %3871 = zext i1 %3870 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 310, ptr noundef nonnull @.str.703, ptr noundef %3859, ptr noundef %3859, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3862, ptr noundef %3867, i8 noundef zeroext %3871)
  %3872 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3873 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3874 = icmp eq i32 %3873, 0
  %3875 = zext i1 %3874 to i8
  %3876 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3877 = icmp eq i32 %3876, 0
  %3878 = select i1 %3877, i64 46, i64 48
  %3879 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3878
  %3880 = load ptr, ptr %3879, align 16, !tbaa !6
  %3881 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3882 = and i32 %3881, 1
  %3883 = icmp eq i32 %3882, 0
  %3884 = zext i1 %3883 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 311, ptr noundef nonnull @.str.704, ptr noundef %3872, ptr noundef %3872, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3875, ptr noundef %3880, i8 noundef zeroext %3884)
  %3885 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3886 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3887 = icmp eq i32 %3886, 0
  %3888 = zext i1 %3887 to i8
  %3889 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3890 = icmp eq i32 %3889, 0
  %3891 = select i1 %3890, i64 46, i64 48
  %3892 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3891
  %3893 = load ptr, ptr %3892, align 16, !tbaa !6
  %3894 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3895 = and i32 %3894, 1
  %3896 = icmp eq i32 %3895, 0
  %3897 = zext i1 %3896 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 312, ptr noundef nonnull @.str.705, ptr noundef %3885, ptr noundef %3885, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3888, ptr noundef %3893, i8 noundef zeroext %3897)
  %3898 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3899 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3900 = icmp eq i32 %3899, 0
  %3901 = zext i1 %3900 to i8
  %3902 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3903 = icmp eq i32 %3902, 0
  %3904 = select i1 %3903, i64 46, i64 48
  %3905 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3904
  %3906 = load ptr, ptr %3905, align 16, !tbaa !6
  %3907 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3908 = and i32 %3907, 1
  %3909 = icmp eq i32 %3908, 0
  %3910 = zext i1 %3909 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 313, ptr noundef nonnull @.str.706, ptr noundef %3898, ptr noundef %3898, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3901, ptr noundef %3906, i8 noundef zeroext %3910)
  %3911 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3912 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3913 = icmp eq i32 %3912, 0
  %3914 = zext i1 %3913 to i8
  %3915 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3916 = icmp eq i32 %3915, 0
  %3917 = select i1 %3916, i64 46, i64 48
  %3918 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3917
  %3919 = load ptr, ptr %3918, align 16, !tbaa !6
  %3920 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3921 = and i32 %3920, 1
  %3922 = icmp eq i32 %3921, 0
  %3923 = zext i1 %3922 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 314, ptr noundef nonnull @.str.707, ptr noundef %3911, ptr noundef %3911, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3914, ptr noundef %3919, i8 noundef zeroext %3923)
  %3924 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3925 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3926 = icmp eq i32 %3925, 0
  %3927 = zext i1 %3926 to i8
  %3928 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3929 = icmp eq i32 %3928, 0
  %3930 = select i1 %3929, i64 46, i64 48
  %3931 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3930
  %3932 = load ptr, ptr %3931, align 16, !tbaa !6
  %3933 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3934 = and i32 %3933, 1
  %3935 = icmp eq i32 %3934, 0
  %3936 = zext i1 %3935 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 315, ptr noundef nonnull @.str.708, ptr noundef %3924, ptr noundef %3924, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3927, ptr noundef %3932, i8 noundef zeroext %3936)
  %3937 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3938 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3939 = icmp eq i32 %3938, 0
  %3940 = zext i1 %3939 to i8
  %3941 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3942 = icmp eq i32 %3941, 0
  %3943 = select i1 %3942, i64 46, i64 48
  %3944 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3943
  %3945 = load ptr, ptr %3944, align 16, !tbaa !6
  %3946 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3947 = and i32 %3946, 1
  %3948 = icmp eq i32 %3947, 0
  %3949 = zext i1 %3948 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 316, ptr noundef nonnull @.str.709, ptr noundef %3937, ptr noundef %3937, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3940, ptr noundef %3945, i8 noundef zeroext %3949)
  %3950 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %3951 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3952 = icmp eq i32 %3951, 0
  %3953 = zext i1 %3952 to i8
  %3954 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3955 = icmp eq i32 %3954, 0
  %3956 = select i1 %3955, i64 46, i64 48
  %3957 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3956
  %3958 = load ptr, ptr %3957, align 16, !tbaa !6
  %3959 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3960 = and i32 %3959, 1
  %3961 = icmp eq i32 %3960, 0
  %3962 = zext i1 %3961 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 317, ptr noundef nonnull @.str.710, ptr noundef %3950, ptr noundef %3950, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3953, ptr noundef %3958, i8 noundef zeroext %3962)
  %3963 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3964 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3965 = icmp eq i32 %3964, 0
  %3966 = zext i1 %3965 to i8
  %3967 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3968 = icmp eq i32 %3967, 0
  %3969 = select i1 %3968, i64 46, i64 48
  %3970 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3969
  %3971 = load ptr, ptr %3970, align 16, !tbaa !6
  %3972 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3973 = and i32 %3972, 1
  %3974 = icmp eq i32 %3973, 0
  %3975 = zext i1 %3974 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 318, ptr noundef nonnull @.str.711, ptr noundef %3963, ptr noundef %3963, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3966, ptr noundef %3971, i8 noundef zeroext %3975)
  %3976 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %3977 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3978 = icmp eq i32 %3977, 0
  %3979 = zext i1 %3978 to i8
  %3980 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3981 = icmp eq i32 %3980, 0
  %3982 = select i1 %3981, i64 46, i64 48
  %3983 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3982
  %3984 = load ptr, ptr %3983, align 16, !tbaa !6
  %3985 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3986 = and i32 %3985, 1
  %3987 = icmp eq i32 %3986, 0
  %3988 = zext i1 %3987 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 319, ptr noundef nonnull @.str.712, ptr noundef %3976, ptr noundef %3976, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3979, ptr noundef %3984, i8 noundef zeroext %3988)
  %3989 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 71), align 8, !tbaa !6
  %3990 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %3991 = icmp eq i32 %3990, 0
  %3992 = zext i1 %3991 to i8
  %3993 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %3994 = icmp eq i32 %3993, 0
  %3995 = select i1 %3994, i64 46, i64 48
  %3996 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %3995
  %3997 = load ptr, ptr %3996, align 16, !tbaa !6
  %3998 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %3999 = and i32 %3998, 1
  %4000 = icmp eq i32 %3999, 0
  %4001 = zext i1 %4000 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 320, ptr noundef nonnull @.str.713, ptr noundef %3989, ptr noundef %3989, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %3992, ptr noundef %3997, i8 noundef zeroext %4001)
  %4002 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 70), align 16, !tbaa !6
  %4003 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4004 = icmp eq i32 %4003, 0
  %4005 = zext i1 %4004 to i8
  %4006 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %4007 = icmp eq i32 %4006, 0
  %4008 = select i1 %4007, i64 46, i64 48
  %4009 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %4008
  %4010 = load ptr, ptr %4009, align 16, !tbaa !6
  %4011 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4012 = and i32 %4011, 1
  %4013 = icmp eq i32 %4012, 0
  %4014 = zext i1 %4013 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 321, ptr noundef nonnull @.str.714, ptr noundef %4002, ptr noundef %4002, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4005, ptr noundef %4010, i8 noundef zeroext %4014)
  %4015 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %4016 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4017 = icmp eq i32 %4016, 0
  %4018 = zext i1 %4017 to i8
  %4019 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %4020 = icmp eq i32 %4019, 0
  %4021 = select i1 %4020, i64 46, i64 48
  %4022 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %4021
  %4023 = load ptr, ptr %4022, align 16, !tbaa !6
  %4024 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4025 = and i32 %4024, 1
  %4026 = icmp eq i32 %4025, 0
  %4027 = zext i1 %4026 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 322, ptr noundef nonnull @.str.715, ptr noundef %4015, ptr noundef %4015, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4018, ptr noundef %4023, i8 noundef zeroext %4027)
  %4028 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 72), align 32, !tbaa !6
  %4029 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4030 = icmp eq i32 %4029, 0
  %4031 = zext i1 %4030 to i8
  %4032 = load i32, ptr @flag_rounding_math, align 4, !tbaa !21
  %4033 = icmp eq i32 %4032, 0
  %4034 = select i1 %4033, i64 46, i64 48
  %4035 = getelementptr inbounds [107 x ptr], ptr @built_in_attributes, i64 0, i64 %4034
  %4036 = load ptr, ptr %4035, align 16, !tbaa !6
  %4037 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4038 = and i32 %4037, 1
  %4039 = icmp eq i32 %4038, 0
  %4040 = zext i1 %4039 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 323, ptr noundef nonnull @.str.716, ptr noundef %4028, ptr noundef %4028, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4031, ptr noundef %4036, i8 noundef zeroext %4040)
  %4041 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 183), align 8, !tbaa !6
  %4042 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 324, ptr noundef nonnull @.str.717, ptr noundef %4041, ptr noundef %4041, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4042, i8 noundef zeroext 0)
  %4043 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 186), align 16, !tbaa !6
  %4044 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 325, ptr noundef nonnull @.str.718, ptr noundef %4043, ptr noundef %4043, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4044, i8 noundef zeroext 0)
  %4045 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 142), align 16, !tbaa !6
  %4046 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 326, ptr noundef nonnull @.str.719, ptr noundef %4045, ptr noundef %4045, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4046, i8 noundef zeroext 0)
  %4047 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 134), align 16, !tbaa !6
  %4048 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 327, ptr noundef nonnull @.str.720, ptr noundef %4047, ptr noundef %4047, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4048, i8 noundef zeroext 0)
  %4049 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 214), align 16, !tbaa !6
  %4050 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 328, ptr noundef nonnull @.str.721, ptr noundef %4049, ptr noundef %4049, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4050, i8 noundef zeroext 1)
  %4051 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 183), align 8, !tbaa !6
  %4052 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 329, ptr noundef nonnull @.str.722, ptr noundef %4051, ptr noundef %4051, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4052, i8 noundef zeroext 1)
  %4053 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 182), align 16, !tbaa !6
  %4054 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 330, ptr noundef nonnull @.str.723, ptr noundef %4053, ptr noundef %4053, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4054, i8 noundef zeroext 1)
  %4055 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 182), align 16, !tbaa !6
  %4056 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 331, ptr noundef nonnull @.str.724, ptr noundef %4055, ptr noundef %4055, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4056, i8 noundef zeroext 1)
  %4057 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 182), align 16, !tbaa !6
  %4058 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 332, ptr noundef nonnull @.str.725, ptr noundef %4057, ptr noundef %4057, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4058, i8 noundef zeroext 0)
  %4059 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 184), align 32, !tbaa !6
  %4060 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 333, ptr noundef nonnull @.str.726, ptr noundef %4059, ptr noundef %4059, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4060, i8 noundef zeroext 1)
  %4061 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 134), align 16, !tbaa !6
  %4062 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 334, ptr noundef nonnull @.str.727, ptr noundef %4061, ptr noundef %4061, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4062, i8 noundef zeroext 0)
  %4063 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 130), align 16, !tbaa !6
  %4064 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 335, ptr noundef nonnull @.str.728, ptr noundef %4063, ptr noundef %4063, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4064, i8 noundef zeroext 0)
  %4065 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 180), align 32, !tbaa !6
  %4066 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 336, ptr noundef nonnull @.str.729, ptr noundef %4065, ptr noundef %4065, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4066, i8 noundef zeroext 0)
  %4067 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 131), align 8, !tbaa !6
  %4068 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 337, ptr noundef nonnull @.str.730, ptr noundef %4067, ptr noundef %4067, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4068, i8 noundef zeroext 0)
  %4069 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 130), align 16, !tbaa !6
  %4070 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 338, ptr noundef nonnull @.str.731, ptr noundef %4069, ptr noundef %4069, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4070, i8 noundef zeroext 1)
  %4071 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 134), align 16, !tbaa !6
  %4072 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 339, ptr noundef nonnull @.str.732, ptr noundef %4071, ptr noundef %4071, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4072, i8 noundef zeroext 1)
  %4073 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 131), align 8, !tbaa !6
  %4074 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 340, ptr noundef nonnull @.str.733, ptr noundef %4073, ptr noundef %4073, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4074, i8 noundef zeroext 1)
  %4075 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 130), align 16, !tbaa !6
  %4076 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 341, ptr noundef nonnull @.str.734, ptr noundef %4075, ptr noundef %4075, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4076, i8 noundef zeroext 1)
  %4077 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 133), align 8, !tbaa !6
  %4078 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 342, ptr noundef nonnull @.str.735, ptr noundef %4077, ptr noundef %4077, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4078, i8 noundef zeroext 1)
  %4079 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 114), align 16, !tbaa !6
  %4080 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 66), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 343, ptr noundef nonnull @.str.736, ptr noundef %4079, ptr noundef %4079, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4080, i8 noundef zeroext 0)
  %4081 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 135), align 8, !tbaa !6
  %4082 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 66), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 344, ptr noundef nonnull @.str.737, ptr noundef %4081, ptr noundef %4081, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4082, i8 noundef zeroext 0)
  %4083 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 103), align 8, !tbaa !6
  %4084 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 345, ptr noundef nonnull @.str.738, ptr noundef %4083, ptr noundef %4083, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4084, i8 noundef zeroext 1)
  %4085 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 181), align 8, !tbaa !6
  %4086 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 346, ptr noundef nonnull @.str.739, ptr noundef %4085, ptr noundef %4085, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4086, i8 noundef zeroext 0)
  %4087 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 180), align 32, !tbaa !6
  %4088 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 347, ptr noundef nonnull @.str.740, ptr noundef %4087, ptr noundef %4087, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4088, i8 noundef zeroext 1)
  %4089 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 181), align 8, !tbaa !6
  %4090 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 348, ptr noundef nonnull @.str.741, ptr noundef %4089, ptr noundef %4089, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4090, i8 noundef zeroext 1)
  %4091 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 180), align 32, !tbaa !6
  %4092 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 349, ptr noundef nonnull @.str.742, ptr noundef %4091, ptr noundef %4091, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4092, i8 noundef zeroext 1)
  %4093 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 132), align 32, !tbaa !6
  %4094 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 350, ptr noundef nonnull @.str.743, ptr noundef %4093, ptr noundef %4093, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4094, i8 noundef zeroext 1)
  %4095 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 134), align 16, !tbaa !6
  %4096 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 351, ptr noundef nonnull @.str.744, ptr noundef %4095, ptr noundef %4095, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4096, i8 noundef zeroext 1)
  %4097 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 133), align 8, !tbaa !6
  %4098 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 352, ptr noundef nonnull @.str.745, ptr noundef %4097, ptr noundef %4097, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4098, i8 noundef zeroext 1)
  %4099 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 132), align 32, !tbaa !6
  %4100 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 65), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 353, ptr noundef nonnull @.str.746, ptr noundef %4099, ptr noundef %4099, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4100, i8 noundef zeroext 1)
  %4101 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 239), align 8, !tbaa !6
  %4102 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 75), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 354, ptr noundef nonnull @.str.747, ptr noundef %4101, ptr noundef %4101, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4102, i8 noundef zeroext 1)
  %4103 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 239), align 8, !tbaa !6
  %4104 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 75), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 355, ptr noundef nonnull @.str.748, ptr noundef %4103, ptr noundef %4103, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4104, i8 noundef zeroext 0)
  %4105 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 137), align 8, !tbaa !6
  %4106 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 356, ptr noundef nonnull @.str.749, ptr noundef %4105, ptr noundef %4105, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4106, i8 noundef zeroext 1)
  %4107 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 137), align 8, !tbaa !6
  %4108 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 357, ptr noundef nonnull @.str.750, ptr noundef %4107, ptr noundef %4107, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4108, i8 noundef zeroext 0)
  %4109 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 137), align 8, !tbaa !6
  %4110 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 358, ptr noundef nonnull @.str.751, ptr noundef %4109, ptr noundef %4109, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4110, i8 noundef zeroext 1)
  %4111 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 137), align 8, !tbaa !6
  %4112 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 359, ptr noundef nonnull @.str.752, ptr noundef %4111, ptr noundef %4111, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4112, i8 noundef zeroext 0)
  %4113 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 136), align 32, !tbaa !6
  %4114 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 360, ptr noundef nonnull @.str.753, ptr noundef %4113, ptr noundef %4113, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4114, i8 noundef zeroext 1)
  %4115 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 136), align 32, !tbaa !6
  %4116 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 361, ptr noundef nonnull @.str.754, ptr noundef %4115, ptr noundef %4115, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4116, i8 noundef zeroext 0)
  %4117 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 239), align 8, !tbaa !6
  %4118 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 99), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 362, ptr noundef nonnull @.str.755, ptr noundef %4117, ptr noundef %4117, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4118, i8 noundef zeroext 1)
  %4119 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 215), align 8, !tbaa !6
  %4120 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 363, ptr noundef nonnull @.str.756, ptr noundef %4119, ptr noundef %4119, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4120, i8 noundef zeroext 1)
  %4121 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 215), align 8, !tbaa !6
  %4122 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 364, ptr noundef nonnull @.str.757, ptr noundef %4121, ptr noundef %4121, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4122, i8 noundef zeroext 0)
  %4123 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 238), align 16, !tbaa !6
  %4124 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 70), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 365, ptr noundef nonnull @.str.758, ptr noundef %4123, ptr noundef %4123, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4124, i8 noundef zeroext 1)
  %4125 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 238), align 16, !tbaa !6
  %4126 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 70), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 366, ptr noundef nonnull @.str.759, ptr noundef %4125, ptr noundef %4125, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4126, i8 noundef zeroext 0)
  %4127 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4128 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 367, ptr noundef nonnull @.str.760, ptr noundef %4127, ptr noundef %4127, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4128, i8 noundef zeroext 1)
  %4129 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4130 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 368, ptr noundef nonnull @.str.761, ptr noundef %4129, ptr noundef %4129, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4130, i8 noundef zeroext 0)
  %4131 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 104), align 32, !tbaa !6
  %4132 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 369, ptr noundef nonnull @.str.762, ptr noundef %4131, ptr noundef %4131, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4132, i8 noundef zeroext 1)
  %4133 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 104), align 32, !tbaa !6
  %4134 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 52), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 370, ptr noundef nonnull @.str.763, ptr noundef %4133, ptr noundef %4133, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4134, i8 noundef zeroext 0)
  %4135 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 238), align 16, !tbaa !6
  %4136 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 94), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 371, ptr noundef nonnull @.str.764, ptr noundef %4135, ptr noundef %4135, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4136, i8 noundef zeroext 1)
  %4137 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 243), align 8, !tbaa !6
  %4138 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4139 = icmp eq i32 %4138, 0
  %4140 = zext i1 %4139 to i8
  %4141 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 82), align 16, !tbaa !6
  %4142 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4143 = and i32 %4142, 1
  %4144 = icmp eq i32 %4143, 0
  %4145 = zext i1 %4144 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 372, ptr noundef nonnull @.str.765, ptr noundef %4137, ptr noundef %4137, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4140, ptr noundef %4141, i8 noundef zeroext %4145)
  %4146 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 240), align 32, !tbaa !6
  %4147 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 76), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 373, ptr noundef nonnull @.str.766, ptr noundef %4146, ptr noundef %4146, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4147, i8 noundef zeroext 1)
  %4148 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 241), align 8, !tbaa !6
  %4149 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 100), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 374, ptr noundef nonnull @.str.767, ptr noundef %4148, ptr noundef %4148, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4149, i8 noundef zeroext 1)
  %4150 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 189), align 8, !tbaa !6
  %4151 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 72), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 375, ptr noundef nonnull @.str.768, ptr noundef %4150, ptr noundef %4150, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4151, i8 noundef zeroext 1)
  %4152 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 189), align 8, !tbaa !6
  %4153 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4154 = icmp eq i32 %4153, 0
  %4155 = zext i1 %4154 to i8
  %4156 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 96), align 16, !tbaa !6
  %4157 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4158 = and i32 %4157, 1
  %4159 = icmp eq i32 %4158, 0
  %4160 = zext i1 %4159 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 376, ptr noundef nonnull @.str.769, ptr noundef %4152, ptr noundef %4152, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4155, ptr noundef %4156, i8 noundef zeroext %4160)
  %4161 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 163), align 8, !tbaa !6
  %4162 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 68), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 377, ptr noundef nonnull @.str.770, ptr noundef %4161, ptr noundef %4161, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4162, i8 noundef zeroext 1)
  %4163 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 163), align 8, !tbaa !6
  %4164 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4165 = icmp eq i32 %4164, 0
  %4166 = zext i1 %4165 to i8
  %4167 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 92), align 16, !tbaa !6
  %4168 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4169 = and i32 %4168, 1
  %4170 = icmp eq i32 %4169, 0
  %4171 = zext i1 %4170 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 378, ptr noundef nonnull @.str.771, ptr noundef %4163, ptr noundef %4163, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4166, ptr noundef %4167, i8 noundef zeroext %4171)
  %4172 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 216), align 32, !tbaa !6
  %4173 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4174 = icmp eq i32 %4173, 0
  %4175 = zext i1 %4174 to i8
  %4176 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 79), align 8, !tbaa !6
  %4177 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4178 = and i32 %4177, 1
  %4179 = icmp eq i32 %4178, 0
  %4180 = zext i1 %4179 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 379, ptr noundef nonnull @.str.772, ptr noundef %4172, ptr noundef %4172, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4175, ptr noundef %4176, i8 noundef zeroext %4180)
  %4181 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 187), align 8, !tbaa !6
  %4182 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 73), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 380, ptr noundef nonnull @.str.773, ptr noundef %4181, ptr noundef %4181, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4182, i8 noundef zeroext 1)
  %4183 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 188), align 32, !tbaa !6
  %4184 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4185 = icmp eq i32 %4184, 0
  %4186 = zext i1 %4185 to i8
  %4187 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 97), align 8, !tbaa !6
  %4188 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4189 = and i32 %4188, 1
  %4190 = icmp eq i32 %4189, 0
  %4191 = zext i1 %4190 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 381, ptr noundef nonnull @.str.774, ptr noundef %4183, ptr noundef %4183, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4186, ptr noundef %4187, i8 noundef zeroext %4191)
  %4192 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4193 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 382, ptr noundef nonnull @.str.775, ptr noundef %4192, ptr noundef %4192, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4193, i8 noundef zeroext 1)
  %4194 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4195 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 383, ptr noundef nonnull @.str.776, ptr noundef %4194, ptr noundef %4194, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4195, i8 noundef zeroext 1)
  %4196 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4197 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 384, ptr noundef nonnull @.str.777, ptr noundef %4196, ptr noundef %4196, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4197, i8 noundef zeroext 0)
  %4198 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4199 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4200 = icmp eq i32 %4199, 0
  %4201 = zext i1 %4200 to i8
  %4202 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4203 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4204 = and i32 %4203, 1
  %4205 = icmp eq i32 %4204, 0
  %4206 = zext i1 %4205 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 385, ptr noundef nonnull @.str.778, ptr noundef %4198, ptr noundef %4198, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4201, ptr noundef %4202, i8 noundef zeroext %4206)
  %4207 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4208 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 386, ptr noundef nonnull @.str.779, ptr noundef %4207, ptr noundef %4207, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4208, i8 noundef zeroext 1)
  %4209 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4210 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 387, ptr noundef nonnull @.str.780, ptr noundef %4209, ptr noundef %4209, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4210, i8 noundef zeroext 1)
  %4211 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4212 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 388, ptr noundef nonnull @.str.781, ptr noundef %4211, ptr noundef %4211, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4212, i8 noundef zeroext 1)
  %4213 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4214 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 389, ptr noundef nonnull @.str.782, ptr noundef %4213, ptr noundef %4213, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4214, i8 noundef zeroext 1)
  %4215 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4216 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 390, ptr noundef nonnull @.str.783, ptr noundef %4215, ptr noundef %4215, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4216, i8 noundef zeroext 1)
  %4217 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4218 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 391, ptr noundef nonnull @.str.784, ptr noundef %4217, ptr noundef %4217, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4218, i8 noundef zeroext 1)
  %4219 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4220 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 392, ptr noundef nonnull @.str.785, ptr noundef %4219, ptr noundef %4219, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4220, i8 noundef zeroext 1)
  %4221 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4222 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 393, ptr noundef nonnull @.str.786, ptr noundef %4221, ptr noundef %4221, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4222, i8 noundef zeroext 1)
  %4223 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4224 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 394, ptr noundef nonnull @.str.787, ptr noundef %4223, ptr noundef %4223, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4224, i8 noundef zeroext 1)
  %4225 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4226 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 395, ptr noundef nonnull @.str.788, ptr noundef %4225, ptr noundef %4225, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4226, i8 noundef zeroext 0)
  %4227 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4228 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 396, ptr noundef nonnull @.str.789, ptr noundef %4227, ptr noundef %4227, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4228, i8 noundef zeroext 1)
  %4229 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4230 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 397, ptr noundef nonnull @.str.790, ptr noundef %4229, ptr noundef %4229, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4230, i8 noundef zeroext 1)
  %4231 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4232 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4233 = icmp eq i32 %4232, 0
  %4234 = zext i1 %4233 to i8
  %4235 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4236 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4237 = and i32 %4236, 1
  %4238 = icmp eq i32 %4237, 0
  %4239 = zext i1 %4238 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 398, ptr noundef nonnull @.str.791, ptr noundef %4231, ptr noundef %4231, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4234, ptr noundef %4235, i8 noundef zeroext %4239)
  %4240 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4241 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4242 = icmp eq i32 %4241, 0
  %4243 = zext i1 %4242 to i8
  %4244 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4245 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4246 = and i32 %4245, 1
  %4247 = icmp eq i32 %4246, 0
  %4248 = zext i1 %4247 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 399, ptr noundef nonnull @.str.792, ptr noundef %4240, ptr noundef %4240, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4243, ptr noundef %4244, i8 noundef zeroext %4248)
  %4249 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4250 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4251 = icmp eq i32 %4250, 0
  %4252 = zext i1 %4251 to i8
  %4253 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4254 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4255 = and i32 %4254, 1
  %4256 = icmp eq i32 %4255, 0
  %4257 = zext i1 %4256 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 400, ptr noundef nonnull @.str.793, ptr noundef %4249, ptr noundef %4249, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4252, ptr noundef %4253, i8 noundef zeroext %4257)
  %4258 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4259 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4260 = icmp eq i32 %4259, 0
  %4261 = zext i1 %4260 to i8
  %4262 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4263 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4264 = and i32 %4263, 1
  %4265 = icmp eq i32 %4264, 0
  %4266 = zext i1 %4265 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 401, ptr noundef nonnull @.str.794, ptr noundef %4258, ptr noundef %4258, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4261, ptr noundef %4262, i8 noundef zeroext %4266)
  %4267 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4268 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4269 = icmp eq i32 %4268, 0
  %4270 = zext i1 %4269 to i8
  %4271 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4272 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4273 = and i32 %4272, 1
  %4274 = icmp eq i32 %4273, 0
  %4275 = zext i1 %4274 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 402, ptr noundef nonnull @.str.795, ptr noundef %4267, ptr noundef %4267, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4270, ptr noundef %4271, i8 noundef zeroext %4275)
  %4276 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4277 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4278 = icmp eq i32 %4277, 0
  %4279 = zext i1 %4278 to i8
  %4280 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4281 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4282 = and i32 %4281, 1
  %4283 = icmp eq i32 %4282, 0
  %4284 = zext i1 %4283 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 403, ptr noundef nonnull @.str.796, ptr noundef %4276, ptr noundef %4276, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4279, ptr noundef %4280, i8 noundef zeroext %4284)
  %4285 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4286 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4287 = icmp eq i32 %4286, 0
  %4288 = zext i1 %4287 to i8
  %4289 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4290 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4291 = and i32 %4290, 1
  %4292 = icmp eq i32 %4291, 0
  %4293 = zext i1 %4292 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 404, ptr noundef nonnull @.str.797, ptr noundef %4285, ptr noundef %4285, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4288, ptr noundef %4289, i8 noundef zeroext %4293)
  %4294 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4295 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4296 = icmp eq i32 %4295, 0
  %4297 = zext i1 %4296 to i8
  %4298 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4299 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4300 = and i32 %4299, 1
  %4301 = icmp eq i32 %4300, 0
  %4302 = zext i1 %4301 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 405, ptr noundef nonnull @.str.798, ptr noundef %4294, ptr noundef %4294, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4297, ptr noundef %4298, i8 noundef zeroext %4302)
  %4303 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4304 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4305 = icmp eq i32 %4304, 0
  %4306 = zext i1 %4305 to i8
  %4307 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4308 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4309 = and i32 %4308, 1
  %4310 = icmp eq i32 %4309, 0
  %4311 = zext i1 %4310 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 406, ptr noundef nonnull @.str.799, ptr noundef %4303, ptr noundef %4303, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4306, ptr noundef %4307, i8 noundef zeroext %4311)
  %4312 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4313 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4314 = icmp eq i32 %4313, 0
  %4315 = zext i1 %4314 to i8
  %4316 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4317 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4318 = and i32 %4317, 1
  %4319 = icmp eq i32 %4318, 0
  %4320 = zext i1 %4319 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 407, ptr noundef nonnull @.str.800, ptr noundef %4312, ptr noundef %4312, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4315, ptr noundef %4316, i8 noundef zeroext %4320)
  %4321 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4322 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4323 = icmp eq i32 %4322, 0
  %4324 = zext i1 %4323 to i8
  %4325 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4326 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4327 = and i32 %4326, 1
  %4328 = icmp eq i32 %4327, 0
  %4329 = zext i1 %4328 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 408, ptr noundef nonnull @.str.801, ptr noundef %4321, ptr noundef %4321, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4324, ptr noundef %4325, i8 noundef zeroext %4329)
  %4330 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 116), align 32, !tbaa !6
  %4331 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4332 = icmp eq i32 %4331, 0
  %4333 = zext i1 %4332 to i8
  %4334 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4335 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4336 = and i32 %4335, 1
  %4337 = icmp eq i32 %4336, 0
  %4338 = zext i1 %4337 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 409, ptr noundef nonnull @.str.802, ptr noundef %4330, ptr noundef %4330, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4333, ptr noundef %4334, i8 noundef zeroext %4338)
  %4339 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 117), align 8, !tbaa !6
  %4340 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4341 = icmp eq i32 %4340, 0
  %4342 = zext i1 %4341 to i8
  %4343 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4344 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4345 = and i32 %4344, 1
  %4346 = icmp eq i32 %4345, 0
  %4347 = zext i1 %4346 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 410, ptr noundef nonnull @.str.803, ptr noundef %4339, ptr noundef %4339, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4342, ptr noundef %4343, i8 noundef zeroext %4347)
  %4348 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 117), align 8, !tbaa !6
  %4349 = load i32, ptr @flag_isoc94, align 4, !tbaa !21
  %4350 = icmp eq i32 %4349, 0
  %4351 = zext i1 %4350 to i8
  %4352 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4353 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4354 = and i32 %4353, 1
  %4355 = icmp eq i32 %4354, 0
  %4356 = zext i1 %4355 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 411, ptr noundef nonnull @.str.804, ptr noundef %4348, ptr noundef %4348, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4351, ptr noundef %4352, i8 noundef zeroext %4356)
  %4357 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %4358 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 412, ptr noundef nonnull @.str.805, ptr noundef %4357, ptr noundef %4357, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4358, i8 noundef zeroext 1)
  %4359 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4360 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 413, ptr noundef nonnull @.str.806, ptr noundef %4359, ptr noundef %4359, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4360, i8 noundef zeroext 1)
  %4361 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 235), align 8, !tbaa !6
  %4362 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4363 = icmp eq ptr %4362, %4361
  br i1 %4363, label %4367, label %4364

4364:                                             ; preds = %3629
  %4365 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4366 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.807, ptr noundef %4361, i32 noundef 414, i32 noundef 3, ptr noundef null, ptr noundef %4365) #22
  store ptr %4366, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 414), align 16, !tbaa !6
  store ptr %4366, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 414), align 16, !tbaa !6
  br label %4367

4367:                                             ; preds = %3629, %4364
  %4368 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 80), align 32, !tbaa !6
  %4369 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 50), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 415, ptr noundef nonnull @.str.808, ptr noundef %4368, ptr noundef %4368, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4369, i8 noundef zeroext 0)
  %4370 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 250), align 16, !tbaa !6
  %4371 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4372 = icmp eq ptr %4371, %4370
  br i1 %4372, label %4377, label %4373

4373:                                             ; preds = %4367
  %4374 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4375 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.809, ptr noundef %4370, i32 noundef 416, i32 noundef 3, ptr noundef null, ptr noundef %4374) #22
  store ptr %4375, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 416), align 16, !tbaa !6
  store ptr %4375, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 416), align 16, !tbaa !6
  %4376 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4377

4377:                                             ; preds = %4367, %4373
  %4378 = phi ptr [ %4370, %4367 ], [ %4376, %4373 ]
  %4379 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 235), align 8, !tbaa !6
  %4380 = icmp eq ptr %4378, %4379
  br i1 %4380, label %4385, label %4381

4381:                                             ; preds = %4377
  %4382 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4383 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.810, ptr noundef %4379, i32 noundef 417, i32 noundef 3, ptr noundef null, ptr noundef %4382) #22
  store ptr %4383, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 417), align 8, !tbaa !6
  store ptr %4383, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 417), align 8, !tbaa !6
  %4384 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4385

4385:                                             ; preds = %4377, %4381
  %4386 = phi ptr [ %4378, %4377 ], [ %4384, %4381 ]
  %4387 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4388 = icmp eq ptr %4386, %4387
  br i1 %4388, label %4393, label %4389

4389:                                             ; preds = %4385
  %4390 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4391 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.811, ptr noundef %4387, i32 noundef 418, i32 noundef 3, ptr noundef null, ptr noundef %4390) #22
  store ptr %4391, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 418), align 16, !tbaa !6
  store ptr %4391, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 418), align 16, !tbaa !6
  %4392 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4393

4393:                                             ; preds = %4385, %4389
  %4394 = phi ptr [ %4386, %4385 ], [ %4392, %4389 ]
  %4395 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 126), align 16, !tbaa !6
  %4396 = icmp eq ptr %4394, %4395
  br i1 %4396, label %4401, label %4397

4397:                                             ; preds = %4393
  %4398 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4399 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.812, ptr noundef %4395, i32 noundef 419, i32 noundef 3, ptr noundef null, ptr noundef %4398) #22
  store ptr %4399, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 419), align 8, !tbaa !6
  store ptr %4399, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 419), align 8, !tbaa !6
  %4400 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4401

4401:                                             ; preds = %4393, %4397
  %4402 = phi ptr [ %4394, %4393 ], [ %4400, %4397 ]
  %4403 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 127), align 8, !tbaa !6
  %4404 = icmp eq ptr %4402, %4403
  br i1 %4404, label %4408, label %4405

4405:                                             ; preds = %4401
  %4406 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4407 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.813, ptr noundef %4403, i32 noundef 420, i32 noundef 3, ptr noundef null, ptr noundef %4406) #22
  store ptr %4407, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 420), align 16, !tbaa !6
  store ptr %4407, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 420), align 16, !tbaa !6
  br label %4408

4408:                                             ; preds = %4401, %4405
  %4409 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 169), align 8, !tbaa !6
  %4410 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 421, ptr noundef nonnull @.str.814, ptr noundef %4409, ptr noundef %4409, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4410, i8 noundef zeroext 0)
  %4411 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 164), align 32, !tbaa !6
  %4412 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 50), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 422, ptr noundef nonnull @.str.815, ptr noundef %4411, ptr noundef %4411, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4412, i8 noundef zeroext 1)
  %4413 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4414 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4415 = icmp eq ptr %4414, %4413
  br i1 %4415, label %4420, label %4416

4416:                                             ; preds = %4408
  %4417 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4418 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.816, ptr noundef %4413, i32 noundef 423, i32 noundef 3, ptr noundef null, ptr noundef %4417) #22
  store ptr %4418, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 423), align 8, !tbaa !6
  store ptr %4418, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 423), align 8, !tbaa !6
  %4419 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4420

4420:                                             ; preds = %4408, %4416
  %4421 = phi ptr [ %4413, %4408 ], [ %4419, %4416 ]
  %4422 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 82), align 16, !tbaa !6
  %4423 = icmp eq ptr %4421, %4422
  br i1 %4423, label %4428, label %4424

4424:                                             ; preds = %4420
  %4425 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4426 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.817, ptr noundef %4422, i32 noundef 424, i32 noundef 3, ptr noundef null, ptr noundef %4425) #22
  store ptr %4426, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 424), align 16, !tbaa !6
  store ptr %4426, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 424), align 16, !tbaa !6
  %4427 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4428

4428:                                             ; preds = %4420, %4424
  %4429 = phi ptr [ %4421, %4420 ], [ %4427, %4424 ]
  %4430 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 88), align 32, !tbaa !6
  %4431 = icmp eq ptr %4429, %4430
  br i1 %4431, label %4436, label %4432

4432:                                             ; preds = %4428
  %4433 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4434 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.818, ptr noundef %4430, i32 noundef 425, i32 noundef 3, ptr noundef null, ptr noundef %4433) #22
  store ptr %4434, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 425), align 8, !tbaa !6
  store ptr %4434, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 425), align 8, !tbaa !6
  %4435 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4436

4436:                                             ; preds = %4428, %4432
  %4437 = phi ptr [ %4429, %4428 ], [ %4435, %4432 ]
  %4438 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 84), align 32, !tbaa !6
  %4439 = icmp eq ptr %4437, %4438
  br i1 %4439, label %4444, label %4440

4440:                                             ; preds = %4436
  %4441 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4442 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.819, ptr noundef %4438, i32 noundef 426, i32 noundef 3, ptr noundef null, ptr noundef %4441) #22
  store ptr %4442, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 426), align 16, !tbaa !6
  store ptr %4442, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 426), align 16, !tbaa !6
  %4443 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4444

4444:                                             ; preds = %4436, %4440
  %4445 = phi ptr [ %4437, %4436 ], [ %4443, %4440 ]
  %4446 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 86), align 16, !tbaa !6
  %4447 = icmp eq ptr %4445, %4446
  br i1 %4447, label %4452, label %4448

4448:                                             ; preds = %4444
  %4449 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4450 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.820, ptr noundef %4446, i32 noundef 427, i32 noundef 3, ptr noundef null, ptr noundef %4449) #22
  store ptr %4450, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 427), align 8, !tbaa !6
  store ptr %4450, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 427), align 8, !tbaa !6
  %4451 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4452

4452:                                             ; preds = %4444, %4448
  %4453 = phi ptr [ %4445, %4444 ], [ %4451, %4448 ]
  %4454 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4455 = icmp eq ptr %4453, %4454
  br i1 %4455, label %4460, label %4456

4456:                                             ; preds = %4452
  %4457 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4458 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.821, ptr noundef %4454, i32 noundef 428, i32 noundef 3, ptr noundef null, ptr noundef %4457) #22
  store ptr %4458, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 428), align 16, !tbaa !6
  store ptr %4458, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 428), align 16, !tbaa !6
  %4459 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4460

4460:                                             ; preds = %4452, %4456
  %4461 = phi ptr [ %4453, %4452 ], [ %4459, %4456 ]
  %4462 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 82), align 16, !tbaa !6
  %4463 = icmp eq ptr %4461, %4462
  br i1 %4463, label %4468, label %4464

4464:                                             ; preds = %4460
  %4465 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4466 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.822, ptr noundef %4462, i32 noundef 429, i32 noundef 3, ptr noundef null, ptr noundef %4465) #22
  store ptr %4466, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 429), align 8, !tbaa !6
  store ptr %4466, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 429), align 8, !tbaa !6
  %4467 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4468

4468:                                             ; preds = %4460, %4464
  %4469 = phi ptr [ %4461, %4460 ], [ %4467, %4464 ]
  %4470 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 88), align 32, !tbaa !6
  %4471 = icmp eq ptr %4469, %4470
  br i1 %4471, label %4476, label %4472

4472:                                             ; preds = %4468
  %4473 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4474 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.823, ptr noundef %4470, i32 noundef 430, i32 noundef 3, ptr noundef null, ptr noundef %4473) #22
  store ptr %4474, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 430), align 16, !tbaa !6
  store ptr %4474, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 430), align 16, !tbaa !6
  %4475 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4476

4476:                                             ; preds = %4468, %4472
  %4477 = phi ptr [ %4469, %4468 ], [ %4475, %4472 ]
  %4478 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 84), align 32, !tbaa !6
  %4479 = icmp eq ptr %4477, %4478
  br i1 %4479, label %4484, label %4480

4480:                                             ; preds = %4476
  %4481 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4482 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.824, ptr noundef %4478, i32 noundef 431, i32 noundef 3, ptr noundef null, ptr noundef %4481) #22
  store ptr %4482, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 431), align 8, !tbaa !6
  store ptr %4482, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 431), align 8, !tbaa !6
  %4483 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4484

4484:                                             ; preds = %4476, %4480
  %4485 = phi ptr [ %4477, %4476 ], [ %4483, %4480 ]
  %4486 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 86), align 16, !tbaa !6
  %4487 = icmp eq ptr %4485, %4486
  br i1 %4487, label %4491, label %4488

4488:                                             ; preds = %4484
  %4489 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4490 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.825, ptr noundef %4486, i32 noundef 432, i32 noundef 3, ptr noundef null, ptr noundef %4489) #22
  store ptr %4490, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 432), align 16, !tbaa !6
  store ptr %4490, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 432), align 16, !tbaa !6
  br label %4491

4491:                                             ; preds = %4484, %4488
  %4492 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 190), align 16, !tbaa !6
  %4493 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 106), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 433, ptr noundef nonnull @.str.826, ptr noundef %4492, ptr noundef %4492, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4493, i8 noundef zeroext 0)
  %4494 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 132), align 32, !tbaa !6
  %4495 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 106), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 434, ptr noundef nonnull @.str.827, ptr noundef %4494, ptr noundef %4494, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4495, i8 noundef zeroext 0)
  %4496 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 54), align 16, !tbaa !6
  %4497 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4498 = icmp eq ptr %4497, %4496
  br i1 %4498, label %4503, label %4499

4499:                                             ; preds = %4491
  %4500 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4501 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.828, ptr noundef %4496, i32 noundef 435, i32 noundef 3, ptr noundef null, ptr noundef %4500) #22
  store ptr %4501, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 435), align 8, !tbaa !6
  store ptr %4501, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 435), align 8, !tbaa !6
  %4502 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4503

4503:                                             ; preds = %4491, %4499
  %4504 = phi ptr [ %4496, %4491 ], [ %4502, %4499 ]
  %4505 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 57), align 8, !tbaa !6
  %4506 = icmp eq ptr %4504, %4505
  br i1 %4506, label %4511, label %4507

4507:                                             ; preds = %4503
  %4508 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4509 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.829, ptr noundef %4505, i32 noundef 436, i32 noundef 3, ptr noundef null, ptr noundef %4508) #22
  store ptr %4509, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 436), align 16, !tbaa !6
  store ptr %4509, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 436), align 16, !tbaa !6
  %4510 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4511

4511:                                             ; preds = %4503, %4507
  %4512 = phi ptr [ %4504, %4503 ], [ %4510, %4507 ]
  %4513 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 138), align 16, !tbaa !6
  %4514 = icmp eq ptr %4512, %4513
  br i1 %4514, label %4519, label %4515

4515:                                             ; preds = %4511
  %4516 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  %4517 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.830, ptr noundef %4513, i32 noundef 437, i32 noundef 3, ptr noundef null, ptr noundef %4516) #22
  store ptr %4517, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 437), align 8, !tbaa !6
  store ptr %4517, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 437), align 8, !tbaa !6
  %4518 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4519

4519:                                             ; preds = %4511, %4515
  %4520 = phi ptr [ %4512, %4511 ], [ %4518, %4515 ]
  %4521 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4522 = icmp eq ptr %4520, %4521
  br i1 %4522, label %4526, label %4523

4523:                                             ; preds = %4519
  %4524 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4525 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.831, ptr noundef %4521, i32 noundef 438, i32 noundef 3, ptr noundef null, ptr noundef %4524) #22
  store ptr %4525, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 438), align 16, !tbaa !6
  store ptr %4525, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 438), align 16, !tbaa !6
  br label %4526

4526:                                             ; preds = %4519, %4523
  %4527 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 241), align 8, !tbaa !6
  %4528 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 51), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 439, ptr noundef nonnull @.str.832, ptr noundef %4527, ptr noundef %4527, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4528, i8 noundef zeroext 0)
  %4529 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 241), align 8, !tbaa !6
  %4530 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 51), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 440, ptr noundef nonnull @.str.833, ptr noundef %4529, ptr noundef %4529, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4530, i8 noundef zeroext 0)
  %4531 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 241), align 8, !tbaa !6
  %4532 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 56), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 441, ptr noundef nonnull @.str.834, ptr noundef %4531, ptr noundef %4531, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4532, i8 noundef zeroext 0)
  %4533 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 170), align 16, !tbaa !6
  %4534 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 442, ptr noundef nonnull @.str.835, ptr noundef %4533, ptr noundef %4533, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4534, i8 noundef zeroext 0)
  %4535 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 170), align 16, !tbaa !6
  %4536 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 443, ptr noundef nonnull @.str.836, ptr noundef %4535, ptr noundef %4535, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4536, i8 noundef zeroext 0)
  %4537 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 201), align 8, !tbaa !6
  %4538 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 444, ptr noundef nonnull @.str.837, ptr noundef %4537, ptr noundef %4537, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4538, i8 noundef zeroext 0)
  %4539 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 107), align 8, !tbaa !6
  %4540 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 445, ptr noundef nonnull @.str.838, ptr noundef %4539, ptr noundef %4539, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4540, i8 noundef zeroext 1)
  %4541 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 140), align 32, !tbaa !6
  %4542 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4543 = icmp eq ptr %4542, %4541
  br i1 %4543, label %4548, label %4544

4544:                                             ; preds = %4526
  %4545 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4546 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.839, ptr noundef %4541, i32 noundef 446, i32 noundef 3, ptr noundef null, ptr noundef %4545) #22
  store ptr %4546, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 446), align 16, !tbaa !6
  store ptr %4546, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 446), align 16, !tbaa !6
  %4547 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4548

4548:                                             ; preds = %4526, %4544
  %4549 = phi ptr [ %4541, %4526 ], [ %4547, %4544 ]
  %4550 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 115), align 8, !tbaa !6
  %4551 = icmp eq ptr %4549, %4550
  br i1 %4551, label %4556, label %4552

4552:                                             ; preds = %4548
  %4553 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4554 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.840, ptr noundef %4550, i32 noundef 447, i32 noundef 3, ptr noundef null, ptr noundef %4553) #22
  store ptr %4554, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 447), align 8, !tbaa !6
  store ptr %4554, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 447), align 8, !tbaa !6
  %4555 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4556

4556:                                             ; preds = %4548, %4552
  %4557 = phi ptr [ %4549, %4548 ], [ %4555, %4552 ]
  %4558 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 105), align 8, !tbaa !6
  %4559 = icmp eq ptr %4557, %4558
  br i1 %4559, label %4563, label %4560

4560:                                             ; preds = %4556
  %4561 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4562 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.841, ptr noundef %4558, i32 noundef 448, i32 noundef 3, ptr noundef null, ptr noundef %4561) #22
  store ptr %4562, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 448), align 16, !tbaa !6
  store ptr %4562, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 448), align 16, !tbaa !6
  br label %4563

4563:                                             ; preds = %4556, %4560
  %4564 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 81), align 8, !tbaa !6
  %4565 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 449, ptr noundef nonnull @.str.842, ptr noundef %4564, ptr noundef %4564, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4565, i8 noundef zeroext 0)
  %4566 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 87), align 8, !tbaa !6
  %4567 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 450, ptr noundef nonnull @.str.843, ptr noundef %4566, ptr noundef %4566, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4567, i8 noundef zeroext 0)
  %4568 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 83), align 8, !tbaa !6
  %4569 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 451, ptr noundef nonnull @.str.844, ptr noundef %4568, ptr noundef %4568, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4569, i8 noundef zeroext 0)
  %4570 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 85), align 8, !tbaa !6
  %4571 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 452, ptr noundef nonnull @.str.845, ptr noundef %4570, ptr noundef %4570, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4571, i8 noundef zeroext 0)
  %4572 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 55), align 8, !tbaa !6
  %4573 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 453, ptr noundef nonnull @.str.846, ptr noundef %4572, ptr noundef %4572, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4573, i8 noundef zeroext 0)
  %4574 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 79), align 8, !tbaa !6
  %4575 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4576 = icmp eq ptr %4575, %4574
  br i1 %4576, label %4580, label %4577

4577:                                             ; preds = %4563
  %4578 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4579 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.847, ptr noundef %4574, i32 noundef 454, i32 noundef 3, ptr noundef null, ptr noundef %4578) #22
  store ptr %4579, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 454), align 16, !tbaa !6
  store ptr %4579, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 454), align 16, !tbaa !6
  br label %4580

4580:                                             ; preds = %4563, %4577
  %4581 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 102), align 16, !tbaa !6
  %4582 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 455, ptr noundef nonnull @.str.848, ptr noundef %4581, ptr noundef %4581, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4582, i8 noundef zeroext 1)
  %4583 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 105), align 8, !tbaa !6
  %4584 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4585 = icmp eq ptr %4584, %4583
  br i1 %4585, label %4589, label %4586

4586:                                             ; preds = %4580
  %4587 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4588 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.849, ptr noundef %4583, i32 noundef 456, i32 noundef 3, ptr noundef null, ptr noundef %4587) #22
  store ptr %4588, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 456), align 16, !tbaa !6
  store ptr %4588, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 456), align 16, !tbaa !6
  br label %4589

4589:                                             ; preds = %4580, %4586
  %4590 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 114), align 16, !tbaa !6
  %4591 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 105), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 457, ptr noundef nonnull @.str.850, ptr noundef %4590, ptr noundef %4590, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4591, i8 noundef zeroext 0)
  %4592 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 66), align 16, !tbaa !6
  %4593 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4594 = icmp eq i32 %4593, 0
  %4595 = zext i1 %4594 to i8
  %4596 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4597 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4598 = and i32 %4597, 1
  %4599 = icmp eq i32 %4598, 0
  %4600 = zext i1 %4599 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 458, ptr noundef nonnull @.str.851, ptr noundef %4592, ptr noundef %4592, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4595, ptr noundef %4596, i8 noundef zeroext %4600)
  %4601 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 102), align 16, !tbaa !6
  %4602 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4603 = icmp eq ptr %4602, %4601
  br i1 %4603, label %4607, label %4604

4604:                                             ; preds = %4589
  %4605 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4606 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.852, ptr noundef %4601, i32 noundef 459, i32 noundef 3, ptr noundef null, ptr noundef %4605) #22
  store ptr %4606, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 459), align 8, !tbaa !6
  store ptr %4606, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 459), align 8, !tbaa !6
  br label %4607

4607:                                             ; preds = %4589, %4604
  %4608 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 91), align 8, !tbaa !6
  %4609 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 460, ptr noundef nonnull @.str.853, ptr noundef %4608, ptr noundef %4608, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4609, i8 noundef zeroext 0)
  %4610 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 90), align 16, !tbaa !6
  %4611 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 461, ptr noundef nonnull @.str.854, ptr noundef %4610, ptr noundef %4610, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4611, i8 noundef zeroext 0)
  %4612 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 92), align 32, !tbaa !6
  %4613 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 462, ptr noundef nonnull @.str.855, ptr noundef %4612, ptr noundef %4612, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4613, i8 noundef zeroext 0)
  %4614 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 93), align 8, !tbaa !6
  %4615 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 463, ptr noundef nonnull @.str.856, ptr noundef %4614, ptr noundef %4614, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4615, i8 noundef zeroext 0)
  %4616 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 94), align 16, !tbaa !6
  %4617 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 464, ptr noundef nonnull @.str.857, ptr noundef %4616, ptr noundef %4616, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4617, i8 noundef zeroext 0)
  %4618 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 95), align 8, !tbaa !6
  %4619 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 465, ptr noundef nonnull @.str.858, ptr noundef %4618, ptr noundef %4618, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4619, i8 noundef zeroext 0)
  %4620 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 248), align 32, !tbaa !6
  %4621 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4622 = icmp eq ptr %4621, %4620
  br i1 %4622, label %4627, label %4623

4623:                                             ; preds = %4607
  %4624 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4625 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.859, ptr noundef %4620, i32 noundef 466, i32 noundef 3, ptr noundef null, ptr noundef %4624) #22
  store ptr %4625, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 466), align 16, !tbaa !6
  store ptr %4625, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 466), align 16, !tbaa !6
  %4626 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4627

4627:                                             ; preds = %4607, %4623
  %4628 = phi ptr [ %4620, %4607 ], [ %4626, %4623 ]
  %4629 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4630 = icmp eq ptr %4628, %4629
  br i1 %4630, label %4641, label %4631

4631:                                             ; preds = %4627
  %4632 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4633 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.860, ptr noundef %4629, i32 noundef 467, i32 noundef 3, ptr noundef null, ptr noundef %4632) #22
  store ptr %4633, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 467), align 8, !tbaa !6
  store ptr %4633, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 467), align 8, !tbaa !6
  %4634 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4635 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4636 = icmp eq ptr %4635, %4634
  br i1 %4636, label %4641, label %4637

4637:                                             ; preds = %4631
  %4638 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4639 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.861, ptr noundef %4634, i32 noundef 468, i32 noundef 3, ptr noundef null, ptr noundef %4638) #22
  store ptr %4639, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 468), align 16, !tbaa !6
  store ptr %4639, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 468), align 16, !tbaa !6
  %4640 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  br label %4641

4641:                                             ; preds = %4627, %4631, %4637
  %4642 = phi ptr [ %4635, %4631 ], [ %4640, %4637 ], [ %4628, %4627 ]
  %4643 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4644 = icmp eq i32 %4643, 0
  %4645 = zext i1 %4644 to i8
  %4646 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4647 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4648 = and i32 %4647, 1
  %4649 = icmp eq i32 %4648, 0
  %4650 = zext i1 %4649 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 469, ptr noundef nonnull @.str.862, ptr noundef %4642, ptr noundef %4642, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4645, ptr noundef %4646, i8 noundef zeroext %4650)
  %4651 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 90), align 16, !tbaa !6
  %4652 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 470, ptr noundef nonnull @.str.863, ptr noundef %4651, ptr noundef %4651, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4652, i8 noundef zeroext 0)
  %4653 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 92), align 32, !tbaa !6
  %4654 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 471, ptr noundef nonnull @.str.864, ptr noundef %4653, ptr noundef %4653, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4654, i8 noundef zeroext 0)
  %4655 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 93), align 8, !tbaa !6
  %4656 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 472, ptr noundef nonnull @.str.865, ptr noundef %4655, ptr noundef %4655, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4656, i8 noundef zeroext 0)
  %4657 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 94), align 16, !tbaa !6
  %4658 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 473, ptr noundef nonnull @.str.866, ptr noundef %4657, ptr noundef %4657, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4658, i8 noundef zeroext 0)
  %4659 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 95), align 8, !tbaa !6
  %4660 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 474, ptr noundef nonnull @.str.867, ptr noundef %4659, ptr noundef %4659, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4660, i8 noundef zeroext 0)
  %4661 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4662 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4663 = icmp eq i32 %4662, 0
  %4664 = zext i1 %4663 to i8
  %4665 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4666 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4667 = and i32 %4666, 1
  %4668 = icmp eq i32 %4667, 0
  %4669 = zext i1 %4668 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 475, ptr noundef nonnull @.str.868, ptr noundef %4661, ptr noundef %4661, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4664, ptr noundef %4665, i8 noundef zeroext %4669)
  %4670 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 90), align 16, !tbaa !6
  %4671 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 476, ptr noundef nonnull @.str.869, ptr noundef %4670, ptr noundef %4670, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4671, i8 noundef zeroext 0)
  %4672 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 92), align 32, !tbaa !6
  %4673 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 477, ptr noundef nonnull @.str.870, ptr noundef %4672, ptr noundef %4672, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4673, i8 noundef zeroext 0)
  %4674 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 93), align 8, !tbaa !6
  %4675 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 478, ptr noundef nonnull @.str.871, ptr noundef %4674, ptr noundef %4674, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4675, i8 noundef zeroext 0)
  %4676 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 94), align 16, !tbaa !6
  %4677 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 479, ptr noundef nonnull @.str.872, ptr noundef %4676, ptr noundef %4676, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4677, i8 noundef zeroext 0)
  %4678 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 95), align 8, !tbaa !6
  %4679 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 480, ptr noundef nonnull @.str.873, ptr noundef %4678, ptr noundef %4678, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4679, i8 noundef zeroext 0)
  %4680 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4681 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4682 = icmp eq ptr %4681, %4680
  br i1 %4682, label %4722, label %4683

4683:                                             ; preds = %4641
  %4684 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4685 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.874, ptr noundef %4680, i32 noundef 481, i32 noundef 3, ptr noundef null, ptr noundef %4684) #22
  store ptr %4685, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 481), align 8, !tbaa !6
  store ptr %4685, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 481), align 8, !tbaa !6
  %4686 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4687 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4688 = icmp eq ptr %4687, %4686
  br i1 %4688, label %4722, label %4689

4689:                                             ; preds = %4683
  %4690 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4691 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.875, ptr noundef %4686, i32 noundef 482, i32 noundef 3, ptr noundef null, ptr noundef %4690) #22
  store ptr %4691, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 482), align 16, !tbaa !6
  store ptr %4691, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 482), align 16, !tbaa !6
  %4692 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4693 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4694 = icmp eq ptr %4693, %4692
  br i1 %4694, label %4722, label %4695

4695:                                             ; preds = %4689
  %4696 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4697 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.876, ptr noundef %4692, i32 noundef 483, i32 noundef 3, ptr noundef null, ptr noundef %4696) #22
  store ptr %4697, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 483), align 8, !tbaa !6
  store ptr %4697, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 483), align 8, !tbaa !6
  %4698 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4699 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4700 = icmp eq ptr %4699, %4698
  br i1 %4700, label %4722, label %4701

4701:                                             ; preds = %4695
  %4702 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4703 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.877, ptr noundef %4698, i32 noundef 484, i32 noundef 3, ptr noundef null, ptr noundef %4702) #22
  store ptr %4703, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 484), align 16, !tbaa !6
  store ptr %4703, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 484), align 16, !tbaa !6
  %4704 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4705 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4706 = icmp eq ptr %4705, %4704
  br i1 %4706, label %4722, label %4707

4707:                                             ; preds = %4701
  %4708 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4709 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.878, ptr noundef %4704, i32 noundef 485, i32 noundef 3, ptr noundef null, ptr noundef %4708) #22
  store ptr %4709, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 485), align 8, !tbaa !6
  store ptr %4709, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 485), align 8, !tbaa !6
  %4710 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4711 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4712 = icmp eq ptr %4711, %4710
  br i1 %4712, label %4722, label %4713

4713:                                             ; preds = %4707
  %4714 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4715 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.879, ptr noundef %4710, i32 noundef 486, i32 noundef 3, ptr noundef null, ptr noundef %4714) #22
  store ptr %4715, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 486), align 16, !tbaa !6
  store ptr %4715, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 486), align 16, !tbaa !6
  %4716 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 234), align 16, !tbaa !6
  %4717 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4718 = icmp eq ptr %4717, %4716
  br i1 %4718, label %4722, label %4719

4719:                                             ; preds = %4713
  %4720 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 64), align 16, !tbaa !6
  %4721 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.880, ptr noundef %4716, i32 noundef 487, i32 noundef 3, ptr noundef null, ptr noundef %4720) #22
  store ptr %4721, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 487), align 8, !tbaa !6
  store ptr %4721, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 487), align 8, !tbaa !6
  br label %4722

4722:                                             ; preds = %4641, %4683, %4689, %4695, %4701, %4707, %4713, %4719
  %4723 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 64), align 32, !tbaa !6
  %4724 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 488, ptr noundef nonnull @.str.881, ptr noundef %4723, ptr noundef %4723, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4724, i8 noundef zeroext 1)
  %4725 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 65), align 8, !tbaa !6
  %4726 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4727 = icmp eq i32 %4726, 0
  %4728 = zext i1 %4727 to i8
  %4729 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4730 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4731 = and i32 %4730, 1
  %4732 = icmp eq i32 %4731, 0
  %4733 = zext i1 %4732 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 489, ptr noundef nonnull @.str.882, ptr noundef %4725, ptr noundef %4725, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4728, ptr noundef %4729, i8 noundef zeroext %4733)
  %4734 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 129), align 8, !tbaa !6
  %4735 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4736 = icmp eq ptr %4735, %4734
  br i1 %4736, label %4740, label %4737

4737:                                             ; preds = %4722
  %4738 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  %4739 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.883, ptr noundef %4734, i32 noundef 490, i32 noundef 3, ptr noundef null, ptr noundef %4738) #22
  store ptr %4739, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 490), align 16, !tbaa !6
  store ptr %4739, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 490), align 16, !tbaa !6
  br label %4740

4740:                                             ; preds = %4722, %4737
  %4741 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 80), align 32, !tbaa !6
  %4742 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 50), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 491, ptr noundef nonnull @.str.884, ptr noundef %4741, ptr noundef %4741, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4742, i8 noundef zeroext 1)
  %4743 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 235), align 8, !tbaa !6
  %4744 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4745 = icmp eq ptr %4744, %4743
  br i1 %4745, label %4750, label %4746

4746:                                             ; preds = %4740
  %4747 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4748 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.885, ptr noundef %4743, i32 noundef 492, i32 noundef 3, ptr noundef null, ptr noundef %4747) #22
  store ptr %4748, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 492), align 16, !tbaa !6
  store ptr %4748, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 492), align 16, !tbaa !6
  %4749 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4750

4750:                                             ; preds = %4740, %4746
  %4751 = phi ptr [ %4743, %4740 ], [ %4749, %4746 ]
  %4752 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 82), align 16, !tbaa !6
  %4753 = icmp eq ptr %4751, %4752
  br i1 %4753, label %4758, label %4754

4754:                                             ; preds = %4750
  %4755 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4756 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.886, ptr noundef %4752, i32 noundef 493, i32 noundef 3, ptr noundef null, ptr noundef %4755) #22
  store ptr %4756, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 493), align 8, !tbaa !6
  store ptr %4756, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 493), align 8, !tbaa !6
  %4757 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4758

4758:                                             ; preds = %4750, %4754
  %4759 = phi ptr [ %4751, %4750 ], [ %4757, %4754 ]
  %4760 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 88), align 32, !tbaa !6
  %4761 = icmp eq ptr %4759, %4760
  br i1 %4761, label %4766, label %4762

4762:                                             ; preds = %4758
  %4763 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4764 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.887, ptr noundef %4760, i32 noundef 494, i32 noundef 3, ptr noundef null, ptr noundef %4763) #22
  store ptr %4764, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 494), align 16, !tbaa !6
  store ptr %4764, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 494), align 16, !tbaa !6
  %4765 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4766

4766:                                             ; preds = %4758, %4762
  %4767 = phi ptr [ %4759, %4758 ], [ %4765, %4762 ]
  %4768 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 84), align 32, !tbaa !6
  %4769 = icmp eq ptr %4767, %4768
  br i1 %4769, label %4774, label %4770

4770:                                             ; preds = %4766
  %4771 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4772 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.888, ptr noundef %4768, i32 noundef 495, i32 noundef 3, ptr noundef null, ptr noundef %4771) #22
  store ptr %4772, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 495), align 8, !tbaa !6
  store ptr %4772, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 495), align 8, !tbaa !6
  %4773 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4774

4774:                                             ; preds = %4766, %4770
  %4775 = phi ptr [ %4767, %4766 ], [ %4773, %4770 ]
  %4776 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 86), align 16, !tbaa !6
  %4777 = icmp eq ptr %4775, %4776
  br i1 %4777, label %4782, label %4778

4778:                                             ; preds = %4774
  %4779 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4780 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.889, ptr noundef %4776, i32 noundef 496, i32 noundef 3, ptr noundef null, ptr noundef %4779) #22
  store ptr %4780, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 496), align 16, !tbaa !6
  store ptr %4780, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 496), align 16, !tbaa !6
  %4781 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4782

4782:                                             ; preds = %4774, %4778
  %4783 = phi ptr [ %4775, %4774 ], [ %4781, %4778 ]
  %4784 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 82), align 16, !tbaa !6
  %4785 = icmp eq ptr %4783, %4784
  br i1 %4785, label %4790, label %4786

4786:                                             ; preds = %4782
  %4787 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4788 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.890, ptr noundef %4784, i32 noundef 497, i32 noundef 3, ptr noundef null, ptr noundef %4787) #22
  store ptr %4788, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 497), align 8, !tbaa !6
  store ptr %4788, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 497), align 8, !tbaa !6
  %4789 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4790

4790:                                             ; preds = %4782, %4786
  %4791 = phi ptr [ %4783, %4782 ], [ %4789, %4786 ]
  %4792 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 88), align 32, !tbaa !6
  %4793 = icmp eq ptr %4791, %4792
  br i1 %4793, label %4798, label %4794

4794:                                             ; preds = %4790
  %4795 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4796 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.891, ptr noundef %4792, i32 noundef 498, i32 noundef 3, ptr noundef null, ptr noundef %4795) #22
  store ptr %4796, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 498), align 16, !tbaa !6
  store ptr %4796, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 498), align 16, !tbaa !6
  %4797 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4798

4798:                                             ; preds = %4790, %4794
  %4799 = phi ptr [ %4791, %4790 ], [ %4797, %4794 ]
  %4800 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 84), align 32, !tbaa !6
  %4801 = icmp eq ptr %4799, %4800
  br i1 %4801, label %4806, label %4802

4802:                                             ; preds = %4798
  %4803 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4804 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.892, ptr noundef %4800, i32 noundef 499, i32 noundef 3, ptr noundef null, ptr noundef %4803) #22
  store ptr %4804, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 499), align 8, !tbaa !6
  store ptr %4804, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 499), align 8, !tbaa !6
  %4805 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4806

4806:                                             ; preds = %4798, %4802
  %4807 = phi ptr [ %4799, %4798 ], [ %4805, %4802 ]
  %4808 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 86), align 16, !tbaa !6
  %4809 = icmp eq ptr %4807, %4808
  br i1 %4809, label %4814, label %4810

4810:                                             ; preds = %4806
  %4811 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %4812 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.893, ptr noundef %4808, i32 noundef 500, i32 noundef 3, ptr noundef null, ptr noundef %4811) #22
  store ptr %4812, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 500), align 16, !tbaa !6
  store ptr %4812, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 500), align 16, !tbaa !6
  %4813 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4814

4814:                                             ; preds = %4806, %4810
  %4815 = phi ptr [ %4807, %4806 ], [ %4813, %4810 ]
  %4816 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 237), align 8, !tbaa !6
  %4817 = icmp eq ptr %4815, %4816
  br i1 %4817, label %4821, label %4818

4818:                                             ; preds = %4814
  %4819 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 44), align 16, !tbaa !6
  %4820 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.894, ptr noundef %4816, i32 noundef 501, i32 noundef 3, ptr noundef null, ptr noundef %4819) #22
  store ptr %4820, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 501), align 8, !tbaa !6
  store ptr %4820, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 501), align 8, !tbaa !6
  br label %4821

4821:                                             ; preds = %4814, %4818
  %4822 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 165), align 8, !tbaa !6
  %4823 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 502, ptr noundef nonnull @.str.895, ptr noundef %4822, ptr noundef %4822, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4823, i8 noundef zeroext 1)
  %4824 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 102), align 16, !tbaa !6
  %4825 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4826 = icmp eq ptr %4825, %4824
  br i1 %4826, label %4831, label %4827

4827:                                             ; preds = %4821
  %4828 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  %4829 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.896, ptr noundef %4824, i32 noundef 503, i32 noundef 3, ptr noundef null, ptr noundef %4828) #22
  store ptr %4829, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 503), align 8, !tbaa !6
  store ptr %4829, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 503), align 8, !tbaa !6
  %4830 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4831

4831:                                             ; preds = %4821, %4827
  %4832 = phi ptr [ %4824, %4821 ], [ %4830, %4827 ]
  %4833 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 79), align 8, !tbaa !6
  %4834 = icmp eq ptr %4832, %4833
  br i1 %4834, label %4839, label %4835

4835:                                             ; preds = %4831
  %4836 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4837 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.897, ptr noundef %4833, i32 noundef 504, i32 noundef 3, ptr noundef null, ptr noundef %4836) #22
  store ptr %4837, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 504), align 16, !tbaa !6
  store ptr %4837, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 504), align 16, !tbaa !6
  %4838 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4839

4839:                                             ; preds = %4831, %4835
  %4840 = phi ptr [ %4832, %4831 ], [ %4838, %4835 ]
  %4841 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 235), align 8, !tbaa !6
  %4842 = icmp eq ptr %4840, %4841
  br i1 %4842, label %4847, label %4843

4843:                                             ; preds = %4839
  %4844 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4845 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.898, ptr noundef %4841, i32 noundef 505, i32 noundef 3, ptr noundef null, ptr noundef %4844) #22
  store ptr %4845, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 505), align 8, !tbaa !6
  store ptr %4845, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 505), align 8, !tbaa !6
  %4846 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4847

4847:                                             ; preds = %4839, %4843
  %4848 = phi ptr [ %4840, %4839 ], [ %4846, %4843 ]
  %4849 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 89), align 8, !tbaa !6
  %4850 = icmp eq ptr %4848, %4849
  br i1 %4850, label %4854, label %4851

4851:                                             ; preds = %4847
  %4852 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4853 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.899, ptr noundef %4849, i32 noundef 506, i32 noundef 3, ptr noundef null, ptr noundef %4852) #22
  store ptr %4853, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 506), align 16, !tbaa !6
  store ptr %4853, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 506), align 16, !tbaa !6
  br label %4854

4854:                                             ; preds = %4847, %4851
  %4855 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 244), align 32, !tbaa !6
  %4856 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 104), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 507, ptr noundef nonnull @.str.900, ptr noundef %4855, ptr noundef %4855, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4856, i8 noundef zeroext 0)
  %4857 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 217), align 8, !tbaa !6
  %4858 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 102), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 508, ptr noundef nonnull @.str.901, ptr noundef %4857, ptr noundef %4857, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %4858, i8 noundef zeroext 1)
  %4859 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %4860 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4861 = icmp eq ptr %4860, %4859
  br i1 %4861, label %4878, label %4862

4862:                                             ; preds = %4854
  %4863 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  %4864 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.902, ptr noundef %4859, i32 noundef 509, i32 noundef 3, ptr noundef null, ptr noundef %4863) #22
  store ptr %4864, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 509), align 8, !tbaa !6
  store ptr %4864, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 509), align 8, !tbaa !6
  %4865 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %4866 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4867 = icmp eq ptr %4866, %4865
  br i1 %4867, label %4878, label %4868

4868:                                             ; preds = %4862
  %4869 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  %4870 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.903, ptr noundef %4865, i32 noundef 510, i32 noundef 3, ptr noundef null, ptr noundef %4869) #22
  store ptr %4870, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 510), align 16, !tbaa !6
  store ptr %4870, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 510), align 16, !tbaa !6
  %4871 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %4872 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4873 = icmp eq ptr %4872, %4871
  br i1 %4873, label %4878, label %4874

4874:                                             ; preds = %4868
  %4875 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4876 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.904, ptr noundef %4871, i32 noundef 511, i32 noundef 3, ptr noundef null, ptr noundef %4875) #22
  store ptr %4876, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 511), align 8, !tbaa !6
  store ptr %4876, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 511), align 8, !tbaa !6
  %4877 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4878

4878:                                             ; preds = %4854, %4862, %4868, %4874
  %4879 = phi ptr [ %4872, %4868 ], [ %4877, %4874 ], [ %4866, %4862 ], [ %4859, %4854 ]
  %4880 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 129), align 8, !tbaa !6
  %4881 = icmp eq ptr %4879, %4880
  br i1 %4881, label %4886, label %4882

4882:                                             ; preds = %4878
  %4883 = load ptr, ptr @built_in_attributes, align 16, !tbaa !6
  %4884 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.905, ptr noundef %4880, i32 noundef 512, i32 noundef 3, ptr noundef null, ptr noundef %4883) #22
  store ptr %4884, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 512), align 16, !tbaa !6
  store ptr %4884, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 512), align 16, !tbaa !6
  %4885 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4886

4886:                                             ; preds = %4878, %4882
  %4887 = phi ptr [ %4879, %4878 ], [ %4885, %4882 ]
  %4888 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 139), align 8, !tbaa !6
  %4889 = icmp eq ptr %4887, %4888
  br i1 %4889, label %4894, label %4890

4890:                                             ; preds = %4886
  %4891 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %4892 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.906, ptr noundef %4888, i32 noundef 513, i32 noundef 3, ptr noundef null, ptr noundef %4891) #22
  store ptr %4892, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 513), align 8, !tbaa !6
  store ptr %4892, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 513), align 8, !tbaa !6
  %4893 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4894

4894:                                             ; preds = %4886, %4890
  %4895 = phi ptr [ %4887, %4886 ], [ %4893, %4890 ]
  %4896 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 106), align 16, !tbaa !6
  %4897 = icmp eq ptr %4895, %4896
  br i1 %4897, label %4902, label %4898

4898:                                             ; preds = %4894
  %4899 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %4900 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.907, ptr noundef %4896, i32 noundef 514, i32 noundef 3, ptr noundef null, ptr noundef %4899) #22
  store ptr %4900, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 514), align 16, !tbaa !6
  store ptr %4900, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 514), align 16, !tbaa !6
  %4901 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4902

4902:                                             ; preds = %4894, %4898
  %4903 = phi ptr [ %4895, %4894 ], [ %4901, %4898 ]
  %4904 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 236), align 32, !tbaa !6
  %4905 = icmp eq ptr %4903, %4904
  br i1 %4905, label %4910, label %4906

4906:                                             ; preds = %4902
  %4907 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %4908 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.908, ptr noundef %4904, i32 noundef 515, i32 noundef 3, ptr noundef null, ptr noundef %4907) #22
  store ptr %4908, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 515), align 8, !tbaa !6
  store ptr %4908, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 515), align 8, !tbaa !6
  %4909 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %4910

4910:                                             ; preds = %4902, %4906
  %4911 = phi ptr [ %4903, %4902 ], [ %4909, %4906 ]
  %4912 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 56), align 32, !tbaa !6
  %4913 = icmp eq ptr %4911, %4912
  br i1 %4913, label %4923, label %4914

4914:                                             ; preds = %4910
  %4915 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4916 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.909, ptr noundef %4912, i32 noundef 516, i32 noundef 3, ptr noundef null, ptr noundef %4915) #22
  store ptr %4916, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 516), align 16, !tbaa !6
  store ptr %4916, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 516), align 16, !tbaa !6
  %4917 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 56), align 32, !tbaa !6
  %4918 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4919 = icmp eq ptr %4918, %4917
  br i1 %4919, label %4923, label %4920

4920:                                             ; preds = %4914
  %4921 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4922 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.910, ptr noundef %4917, i32 noundef 517, i32 noundef 3, ptr noundef null, ptr noundef %4921) #22
  store ptr %4922, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 517), align 8, !tbaa !6
  store ptr %4922, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 517), align 8, !tbaa !6
  br label %4923

4923:                                             ; preds = %4910, %4914, %4920
  %4924 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 107), align 8, !tbaa !6
  %4925 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 518, ptr noundef nonnull @.str.911, ptr noundef %4924, ptr noundef %4924, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4925, i8 noundef zeroext 0)
  %4926 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 107), align 8, !tbaa !6
  %4927 = load i32, ptr @flag_isoc99, align 4, !tbaa !21
  %4928 = icmp eq i32 %4927, 0
  %4929 = zext i1 %4928 to i8
  %4930 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 49), align 8, !tbaa !6
  %4931 = load i32, ptr @linux_uclibc, align 4, !tbaa !21
  %4932 = and i32 %4931, 1
  %4933 = icmp eq i32 %4932, 0
  %4934 = zext i1 %4933 to i8
  tail call fastcc void @def_builtin_1(i32 noundef 519, ptr noundef nonnull @.str.912, ptr noundef %4926, ptr noundef %4926, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %4929, ptr noundef %4930, i8 noundef zeroext %4934)
  %4935 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 171), align 8, !tbaa !6
  %4936 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4937 = icmp eq ptr %4936, %4935
  br i1 %4937, label %4941, label %4938

4938:                                             ; preds = %4923
  %4939 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 47), align 8, !tbaa !6
  %4940 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.913, ptr noundef %4935, i32 noundef 528, i32 noundef 3, ptr noundef null, ptr noundef %4939) #22
  store ptr %4940, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 528), align 16, !tbaa !6
  store ptr %4940, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 528), align 16, !tbaa !6
  br label %4941

4941:                                             ; preds = %4923, %4938
  %4942 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 218), align 16, !tbaa !6
  %4943 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 529, ptr noundef nonnull @.str.914, ptr noundef %4942, ptr noundef %4942, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4943, i8 noundef zeroext 0)
  %4944 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 218), align 16, !tbaa !6
  %4945 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 530, ptr noundef nonnull @.str.915, ptr noundef %4944, ptr noundef %4944, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4945, i8 noundef zeroext 0)
  %4946 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 218), align 16, !tbaa !6
  %4947 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 531, ptr noundef nonnull @.str.916, ptr noundef %4946, ptr noundef %4946, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4947, i8 noundef zeroext 0)
  %4948 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 219), align 8, !tbaa !6
  %4949 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 532, ptr noundef nonnull @.str.917, ptr noundef %4948, ptr noundef %4948, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4949, i8 noundef zeroext 0)
  %4950 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 180), align 32, !tbaa !6
  %4951 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 533, ptr noundef nonnull @.str.918, ptr noundef %4950, ptr noundef %4950, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4951, i8 noundef zeroext 0)
  %4952 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 180), align 32, !tbaa !6
  %4953 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 534, ptr noundef nonnull @.str.919, ptr noundef %4952, ptr noundef %4952, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4953, i8 noundef zeroext 0)
  %4954 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 180), align 32, !tbaa !6
  %4955 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 535, ptr noundef nonnull @.str.920, ptr noundef %4954, ptr noundef %4954, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4955, i8 noundef zeroext 0)
  %4956 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 220), align 32, !tbaa !6
  %4957 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 536, ptr noundef nonnull @.str.921, ptr noundef %4956, ptr noundef %4956, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4957, i8 noundef zeroext 0)
  %4958 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 220), align 32, !tbaa !6
  %4959 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 57), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 537, ptr noundef nonnull @.str.922, ptr noundef %4958, ptr noundef %4958, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4959, i8 noundef zeroext 0)
  %4960 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 247), align 8, !tbaa !6
  %4961 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 90), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 538, ptr noundef nonnull @.str.923, ptr noundef %4960, ptr noundef %4960, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4961, i8 noundef zeroext 0)
  %4962 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 246), align 16, !tbaa !6
  %4963 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 86), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 539, ptr noundef nonnull @.str.924, ptr noundef %4962, ptr noundef %4962, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4963, i8 noundef zeroext 0)
  %4964 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 226), align 16, !tbaa !6
  %4965 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 88), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 540, ptr noundef nonnull @.str.925, ptr noundef %4964, ptr noundef %4964, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4965, i8 noundef zeroext 0)
  %4966 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 224), align 32, !tbaa !6
  %4967 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 84), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 541, ptr noundef nonnull @.str.926, ptr noundef %4966, ptr noundef %4966, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4967, i8 noundef zeroext 0)
  %4968 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 245), align 8, !tbaa !6
  %4969 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 81), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 542, ptr noundef nonnull @.str.927, ptr noundef %4968, ptr noundef %4968, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4969, i8 noundef zeroext 0)
  %4970 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 242), align 16, !tbaa !6
  %4971 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 75), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 543, ptr noundef nonnull @.str.928, ptr noundef %4970, ptr noundef %4970, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4971, i8 noundef zeroext 0)
  %4972 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 221), align 8, !tbaa !6
  %4973 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 78), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 544, ptr noundef nonnull @.str.929, ptr noundef %4972, ptr noundef %4972, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4973, i8 noundef zeroext 0)
  %4974 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 202), align 16, !tbaa !6
  %4975 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 72), align 16, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 545, ptr noundef nonnull @.str.930, ptr noundef %4974, ptr noundef %4974, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4975, i8 noundef zeroext 0)
  %4976 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 106), align 8, !tbaa !148
  %4977 = icmp eq ptr %4976, null
  %4978 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 113), align 4
  %4979 = icmp ne i8 %4978, 0
  %4980 = select i1 %4977, i1 true, i1 %4979
  br i1 %4980, label %4985, label %4981

4981:                                             ; preds = %4941
  %4982 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 105), align 8, !tbaa !6
  %4983 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 63), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 548, ptr noundef nonnull %4976, ptr noundef %4982, ptr noundef %4982, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4983, i8 noundef zeroext 0)
  %4984 = load i8, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 113), align 4
  br label %4985

4985:                                             ; preds = %4981, %4941
  %4986 = phi i8 [ %4984, %4981 ], [ %4978, %4941 ]
  %4987 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 106, i32 1), align 8, !tbaa !149
  %4988 = icmp eq ptr %4987, null
  %4989 = icmp ne i8 %4986, 0
  %4990 = select i1 %4988, i1 true, i1 %4989
  br i1 %4990, label %4994, label %4991

4991:                                             ; preds = %4985
  %4992 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 223), align 8, !tbaa !6
  %4993 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  tail call fastcc void @def_builtin_1(i32 noundef 549, ptr noundef nonnull %4987, ptr noundef %4992, ptr noundef %4992, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef %4993, i8 noundef zeroext 0)
  br label %4994

4994:                                             ; preds = %4991, %4985
  %4995 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %4996 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %4997 = icmp eq ptr %4996, %4995
  br i1 %4997, label %5002, label %4998

4998:                                             ; preds = %4994
  %4999 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5000 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.931, ptr noundef %4995, i32 noundef 555, i32 noundef 3, ptr noundef null, ptr noundef %4999) #22
  store ptr %5000, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 555), align 8, !tbaa !6
  store ptr %5000, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 555), align 8, !tbaa !6
  %5001 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5002

5002:                                             ; preds = %4994, %4998
  %5003 = phi ptr [ %4995, %4994 ], [ %5001, %4998 ]
  %5004 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5005 = icmp eq ptr %5003, %5004
  br i1 %5005, label %5010, label %5006

5006:                                             ; preds = %5002
  %5007 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5008 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.932, ptr noundef %5004, i32 noundef 556, i32 noundef 3, ptr noundef null, ptr noundef %5007) #22
  store ptr %5008, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 556), align 16, !tbaa !6
  store ptr %5008, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 556), align 16, !tbaa !6
  %5009 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5010

5010:                                             ; preds = %5002, %5006
  %5011 = phi ptr [ %5003, %5002 ], [ %5009, %5006 ]
  %5012 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5013 = icmp eq ptr %5011, %5012
  br i1 %5013, label %5018, label %5014

5014:                                             ; preds = %5010
  %5015 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5016 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.933, ptr noundef %5012, i32 noundef 557, i32 noundef 3, ptr noundef null, ptr noundef %5015) #22
  store ptr %5016, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 557), align 8, !tbaa !6
  store ptr %5016, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 557), align 8, !tbaa !6
  %5017 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5018

5018:                                             ; preds = %5010, %5014
  %5019 = phi ptr [ %5011, %5010 ], [ %5017, %5014 ]
  %5020 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5021 = icmp eq ptr %5019, %5020
  br i1 %5021, label %5026, label %5022

5022:                                             ; preds = %5018
  %5023 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5024 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.934, ptr noundef %5020, i32 noundef 558, i32 noundef 3, ptr noundef null, ptr noundef %5023) #22
  store ptr %5024, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 558), align 16, !tbaa !6
  store ptr %5024, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 558), align 16, !tbaa !6
  %5025 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5026

5026:                                             ; preds = %5018, %5022
  %5027 = phi ptr [ %5019, %5018 ], [ %5025, %5022 ]
  %5028 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5029 = icmp eq ptr %5027, %5028
  br i1 %5029, label %5034, label %5030

5030:                                             ; preds = %5026
  %5031 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5032 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.935, ptr noundef %5028, i32 noundef 559, i32 noundef 3, ptr noundef null, ptr noundef %5031) #22
  store ptr %5032, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 559), align 8, !tbaa !6
  store ptr %5032, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 559), align 8, !tbaa !6
  %5033 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5034

5034:                                             ; preds = %5026, %5030
  %5035 = phi ptr [ %5027, %5026 ], [ %5033, %5030 ]
  %5036 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5037 = icmp eq ptr %5035, %5036
  br i1 %5037, label %5042, label %5038

5038:                                             ; preds = %5034
  %5039 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5040 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.936, ptr noundef %5036, i32 noundef 560, i32 noundef 3, ptr noundef null, ptr noundef %5039) #22
  store ptr %5040, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 560), align 16, !tbaa !6
  store ptr %5040, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 560), align 16, !tbaa !6
  %5041 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5042

5042:                                             ; preds = %5034, %5038
  %5043 = phi ptr [ %5035, %5034 ], [ %5041, %5038 ]
  %5044 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5045 = icmp eq ptr %5043, %5044
  br i1 %5045, label %5050, label %5046

5046:                                             ; preds = %5042
  %5047 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5048 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.937, ptr noundef %5044, i32 noundef 561, i32 noundef 3, ptr noundef null, ptr noundef %5047) #22
  store ptr %5048, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 561), align 8, !tbaa !6
  store ptr %5048, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 561), align 8, !tbaa !6
  %5049 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5050

5050:                                             ; preds = %5042, %5046
  %5051 = phi ptr [ %5043, %5042 ], [ %5049, %5046 ]
  %5052 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5053 = icmp eq ptr %5051, %5052
  br i1 %5053, label %5058, label %5054

5054:                                             ; preds = %5050
  %5055 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5056 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.938, ptr noundef %5052, i32 noundef 562, i32 noundef 3, ptr noundef null, ptr noundef %5055) #22
  store ptr %5056, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 562), align 16, !tbaa !6
  store ptr %5056, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 562), align 16, !tbaa !6
  %5057 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5058

5058:                                             ; preds = %5050, %5054
  %5059 = phi ptr [ %5051, %5050 ], [ %5057, %5054 ]
  %5060 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5061 = icmp eq ptr %5059, %5060
  br i1 %5061, label %5066, label %5062

5062:                                             ; preds = %5058
  %5063 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5064 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.939, ptr noundef %5060, i32 noundef 563, i32 noundef 3, ptr noundef null, ptr noundef %5063) #22
  store ptr %5064, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 563), align 8, !tbaa !6
  store ptr %5064, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 563), align 8, !tbaa !6
  %5065 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5066

5066:                                             ; preds = %5058, %5062
  %5067 = phi ptr [ %5059, %5058 ], [ %5065, %5062 ]
  %5068 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5069 = icmp eq ptr %5067, %5068
  br i1 %5069, label %5074, label %5070

5070:                                             ; preds = %5066
  %5071 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5072 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.940, ptr noundef %5068, i32 noundef 564, i32 noundef 3, ptr noundef null, ptr noundef %5071) #22
  store ptr %5072, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 564), align 16, !tbaa !6
  store ptr %5072, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 564), align 16, !tbaa !6
  %5073 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5074

5074:                                             ; preds = %5066, %5070
  %5075 = phi ptr [ %5067, %5066 ], [ %5073, %5070 ]
  %5076 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5077 = icmp eq ptr %5075, %5076
  br i1 %5077, label %5082, label %5078

5078:                                             ; preds = %5074
  %5079 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5080 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.941, ptr noundef %5076, i32 noundef 565, i32 noundef 3, ptr noundef null, ptr noundef %5079) #22
  store ptr %5080, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 565), align 8, !tbaa !6
  store ptr %5080, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 565), align 8, !tbaa !6
  %5081 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5082

5082:                                             ; preds = %5074, %5078
  %5083 = phi ptr [ %5075, %5074 ], [ %5081, %5078 ]
  %5084 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5085 = icmp eq ptr %5083, %5084
  br i1 %5085, label %5090, label %5086

5086:                                             ; preds = %5082
  %5087 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5088 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.942, ptr noundef %5084, i32 noundef 566, i32 noundef 3, ptr noundef null, ptr noundef %5087) #22
  store ptr %5088, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 566), align 16, !tbaa !6
  store ptr %5088, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 566), align 16, !tbaa !6
  %5089 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5090

5090:                                             ; preds = %5082, %5086
  %5091 = phi ptr [ %5083, %5082 ], [ %5089, %5086 ]
  %5092 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5093 = icmp eq ptr %5091, %5092
  br i1 %5093, label %5098, label %5094

5094:                                             ; preds = %5090
  %5095 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5096 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.943, ptr noundef %5092, i32 noundef 567, i32 noundef 3, ptr noundef null, ptr noundef %5095) #22
  store ptr %5096, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 567), align 8, !tbaa !6
  store ptr %5096, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 567), align 8, !tbaa !6
  %5097 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5098

5098:                                             ; preds = %5090, %5094
  %5099 = phi ptr [ %5091, %5090 ], [ %5097, %5094 ]
  %5100 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5101 = icmp eq ptr %5099, %5100
  br i1 %5101, label %5106, label %5102

5102:                                             ; preds = %5098
  %5103 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5104 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.944, ptr noundef %5100, i32 noundef 568, i32 noundef 3, ptr noundef null, ptr noundef %5103) #22
  store ptr %5104, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 568), align 16, !tbaa !6
  store ptr %5104, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 568), align 16, !tbaa !6
  %5105 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5106

5106:                                             ; preds = %5098, %5102
  %5107 = phi ptr [ %5099, %5098 ], [ %5105, %5102 ]
  %5108 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5109 = icmp eq ptr %5107, %5108
  br i1 %5109, label %5114, label %5110

5110:                                             ; preds = %5106
  %5111 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5112 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.945, ptr noundef %5108, i32 noundef 569, i32 noundef 3, ptr noundef null, ptr noundef %5111) #22
  store ptr %5112, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 569), align 8, !tbaa !6
  store ptr %5112, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 569), align 8, !tbaa !6
  %5113 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5114

5114:                                             ; preds = %5106, %5110
  %5115 = phi ptr [ %5107, %5106 ], [ %5113, %5110 ]
  %5116 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5117 = icmp eq ptr %5115, %5116
  br i1 %5117, label %5122, label %5118

5118:                                             ; preds = %5114
  %5119 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5120 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.946, ptr noundef %5116, i32 noundef 570, i32 noundef 3, ptr noundef null, ptr noundef %5119) #22
  store ptr %5120, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 570), align 16, !tbaa !6
  store ptr %5120, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 570), align 16, !tbaa !6
  %5121 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5122

5122:                                             ; preds = %5114, %5118
  %5123 = phi ptr [ %5115, %5114 ], [ %5121, %5118 ]
  %5124 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5125 = icmp eq ptr %5123, %5124
  br i1 %5125, label %5130, label %5126

5126:                                             ; preds = %5122
  %5127 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5128 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.947, ptr noundef %5124, i32 noundef 571, i32 noundef 3, ptr noundef null, ptr noundef %5127) #22
  store ptr %5128, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 571), align 8, !tbaa !6
  store ptr %5128, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 571), align 8, !tbaa !6
  %5129 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5130

5130:                                             ; preds = %5122, %5126
  %5131 = phi ptr [ %5123, %5122 ], [ %5129, %5126 ]
  %5132 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5133 = icmp eq ptr %5131, %5132
  br i1 %5133, label %5138, label %5134

5134:                                             ; preds = %5130
  %5135 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5136 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.948, ptr noundef %5132, i32 noundef 572, i32 noundef 3, ptr noundef null, ptr noundef %5135) #22
  store ptr %5136, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 572), align 16, !tbaa !6
  store ptr %5136, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 572), align 16, !tbaa !6
  %5137 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5138

5138:                                             ; preds = %5130, %5134
  %5139 = phi ptr [ %5131, %5130 ], [ %5137, %5134 ]
  %5140 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5141 = icmp eq ptr %5139, %5140
  br i1 %5141, label %5146, label %5142

5142:                                             ; preds = %5138
  %5143 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5144 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.949, ptr noundef %5140, i32 noundef 573, i32 noundef 3, ptr noundef null, ptr noundef %5143) #22
  store ptr %5144, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 573), align 8, !tbaa !6
  store ptr %5144, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 573), align 8, !tbaa !6
  %5145 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5146

5146:                                             ; preds = %5138, %5142
  %5147 = phi ptr [ %5139, %5138 ], [ %5145, %5142 ]
  %5148 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5149 = icmp eq ptr %5147, %5148
  br i1 %5149, label %5154, label %5150

5150:                                             ; preds = %5146
  %5151 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5152 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.950, ptr noundef %5148, i32 noundef 574, i32 noundef 3, ptr noundef null, ptr noundef %5151) #22
  store ptr %5152, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 574), align 16, !tbaa !6
  store ptr %5152, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 574), align 16, !tbaa !6
  %5153 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5154

5154:                                             ; preds = %5146, %5150
  %5155 = phi ptr [ %5147, %5146 ], [ %5153, %5150 ]
  %5156 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5157 = icmp eq ptr %5155, %5156
  br i1 %5157, label %5162, label %5158

5158:                                             ; preds = %5154
  %5159 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5160 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.951, ptr noundef %5156, i32 noundef 575, i32 noundef 3, ptr noundef null, ptr noundef %5159) #22
  store ptr %5160, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 575), align 8, !tbaa !6
  store ptr %5160, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 575), align 8, !tbaa !6
  %5161 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5162

5162:                                             ; preds = %5154, %5158
  %5163 = phi ptr [ %5155, %5154 ], [ %5161, %5158 ]
  %5164 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5165 = icmp eq ptr %5163, %5164
  br i1 %5165, label %5170, label %5166

5166:                                             ; preds = %5162
  %5167 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5168 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.952, ptr noundef %5164, i32 noundef 576, i32 noundef 3, ptr noundef null, ptr noundef %5167) #22
  store ptr %5168, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 576), align 16, !tbaa !6
  store ptr %5168, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 576), align 16, !tbaa !6
  %5169 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5170

5170:                                             ; preds = %5162, %5166
  %5171 = phi ptr [ %5163, %5162 ], [ %5169, %5166 ]
  %5172 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5173 = icmp eq ptr %5171, %5172
  br i1 %5173, label %5178, label %5174

5174:                                             ; preds = %5170
  %5175 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5176 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.953, ptr noundef %5172, i32 noundef 577, i32 noundef 3, ptr noundef null, ptr noundef %5175) #22
  store ptr %5176, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 577), align 8, !tbaa !6
  store ptr %5176, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 577), align 8, !tbaa !6
  %5177 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5178

5178:                                             ; preds = %5170, %5174
  %5179 = phi ptr [ %5171, %5170 ], [ %5177, %5174 ]
  %5180 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5181 = icmp eq ptr %5179, %5180
  br i1 %5181, label %5186, label %5182

5182:                                             ; preds = %5178
  %5183 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5184 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.954, ptr noundef %5180, i32 noundef 578, i32 noundef 3, ptr noundef null, ptr noundef %5183) #22
  store ptr %5184, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 578), align 16, !tbaa !6
  store ptr %5184, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 578), align 16, !tbaa !6
  %5185 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5186

5186:                                             ; preds = %5178, %5182
  %5187 = phi ptr [ %5179, %5178 ], [ %5185, %5182 ]
  %5188 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5189 = icmp eq ptr %5187, %5188
  br i1 %5189, label %5194, label %5190

5190:                                             ; preds = %5186
  %5191 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5192 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.955, ptr noundef %5188, i32 noundef 579, i32 noundef 3, ptr noundef null, ptr noundef %5191) #22
  store ptr %5192, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 579), align 8, !tbaa !6
  store ptr %5192, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 579), align 8, !tbaa !6
  %5193 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5194

5194:                                             ; preds = %5186, %5190
  %5195 = phi ptr [ %5187, %5186 ], [ %5193, %5190 ]
  %5196 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5197 = icmp eq ptr %5195, %5196
  br i1 %5197, label %5202, label %5198

5198:                                             ; preds = %5194
  %5199 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5200 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.956, ptr noundef %5196, i32 noundef 580, i32 noundef 3, ptr noundef null, ptr noundef %5199) #22
  store ptr %5200, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 580), align 16, !tbaa !6
  store ptr %5200, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 580), align 16, !tbaa !6
  %5201 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5202

5202:                                             ; preds = %5194, %5198
  %5203 = phi ptr [ %5195, %5194 ], [ %5201, %5198 ]
  %5204 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5205 = icmp eq ptr %5203, %5204
  br i1 %5205, label %5210, label %5206

5206:                                             ; preds = %5202
  %5207 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5208 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.957, ptr noundef %5204, i32 noundef 581, i32 noundef 3, ptr noundef null, ptr noundef %5207) #22
  store ptr %5208, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 581), align 8, !tbaa !6
  store ptr %5208, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 581), align 8, !tbaa !6
  %5209 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5210

5210:                                             ; preds = %5202, %5206
  %5211 = phi ptr [ %5203, %5202 ], [ %5209, %5206 ]
  %5212 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5213 = icmp eq ptr %5211, %5212
  br i1 %5213, label %5218, label %5214

5214:                                             ; preds = %5210
  %5215 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5216 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.958, ptr noundef %5212, i32 noundef 582, i32 noundef 3, ptr noundef null, ptr noundef %5215) #22
  store ptr %5216, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 582), align 16, !tbaa !6
  store ptr %5216, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 582), align 16, !tbaa !6
  %5217 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5218

5218:                                             ; preds = %5210, %5214
  %5219 = phi ptr [ %5211, %5210 ], [ %5217, %5214 ]
  %5220 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5221 = icmp eq ptr %5219, %5220
  br i1 %5221, label %5226, label %5222

5222:                                             ; preds = %5218
  %5223 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5224 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.959, ptr noundef %5220, i32 noundef 583, i32 noundef 3, ptr noundef null, ptr noundef %5223) #22
  store ptr %5224, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 583), align 8, !tbaa !6
  store ptr %5224, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 583), align 8, !tbaa !6
  %5225 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5226

5226:                                             ; preds = %5218, %5222
  %5227 = phi ptr [ %5219, %5218 ], [ %5225, %5222 ]
  %5228 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5229 = icmp eq ptr %5227, %5228
  br i1 %5229, label %5234, label %5230

5230:                                             ; preds = %5226
  %5231 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5232 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.960, ptr noundef %5228, i32 noundef 584, i32 noundef 3, ptr noundef null, ptr noundef %5231) #22
  store ptr %5232, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 584), align 16, !tbaa !6
  store ptr %5232, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 584), align 16, !tbaa !6
  %5233 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5234

5234:                                             ; preds = %5226, %5230
  %5235 = phi ptr [ %5227, %5226 ], [ %5233, %5230 ]
  %5236 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5237 = icmp eq ptr %5235, %5236
  br i1 %5237, label %5242, label %5238

5238:                                             ; preds = %5234
  %5239 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5240 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.961, ptr noundef %5236, i32 noundef 585, i32 noundef 3, ptr noundef null, ptr noundef %5239) #22
  store ptr %5240, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 585), align 8, !tbaa !6
  store ptr %5240, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 585), align 8, !tbaa !6
  %5241 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5242

5242:                                             ; preds = %5234, %5238
  %5243 = phi ptr [ %5235, %5234 ], [ %5241, %5238 ]
  %5244 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5245 = icmp eq ptr %5243, %5244
  br i1 %5245, label %5250, label %5246

5246:                                             ; preds = %5242
  %5247 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5248 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.962, ptr noundef %5244, i32 noundef 586, i32 noundef 3, ptr noundef null, ptr noundef %5247) #22
  store ptr %5248, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 586), align 16, !tbaa !6
  store ptr %5248, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 586), align 16, !tbaa !6
  %5249 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5250

5250:                                             ; preds = %5242, %5246
  %5251 = phi ptr [ %5243, %5242 ], [ %5249, %5246 ]
  %5252 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5253 = icmp eq ptr %5251, %5252
  br i1 %5253, label %5258, label %5254

5254:                                             ; preds = %5250
  %5255 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5256 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.963, ptr noundef %5252, i32 noundef 587, i32 noundef 3, ptr noundef null, ptr noundef %5255) #22
  store ptr %5256, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 587), align 8, !tbaa !6
  store ptr %5256, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 587), align 8, !tbaa !6
  %5257 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5258

5258:                                             ; preds = %5250, %5254
  %5259 = phi ptr [ %5251, %5250 ], [ %5257, %5254 ]
  %5260 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5261 = icmp eq ptr %5259, %5260
  br i1 %5261, label %5266, label %5262

5262:                                             ; preds = %5258
  %5263 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5264 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.964, ptr noundef %5260, i32 noundef 588, i32 noundef 3, ptr noundef null, ptr noundef %5263) #22
  store ptr %5264, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 588), align 16, !tbaa !6
  store ptr %5264, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 588), align 16, !tbaa !6
  %5265 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5266

5266:                                             ; preds = %5258, %5262
  %5267 = phi ptr [ %5259, %5258 ], [ %5265, %5262 ]
  %5268 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5269 = icmp eq ptr %5267, %5268
  br i1 %5269, label %5274, label %5270

5270:                                             ; preds = %5266
  %5271 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5272 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.965, ptr noundef %5268, i32 noundef 589, i32 noundef 3, ptr noundef null, ptr noundef %5271) #22
  store ptr %5272, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 589), align 8, !tbaa !6
  store ptr %5272, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 589), align 8, !tbaa !6
  %5273 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5274

5274:                                             ; preds = %5266, %5270
  %5275 = phi ptr [ %5267, %5266 ], [ %5273, %5270 ]
  %5276 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5277 = icmp eq ptr %5275, %5276
  br i1 %5277, label %5282, label %5278

5278:                                             ; preds = %5274
  %5279 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5280 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.966, ptr noundef %5276, i32 noundef 590, i32 noundef 3, ptr noundef null, ptr noundef %5279) #22
  store ptr %5280, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 590), align 16, !tbaa !6
  store ptr %5280, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 590), align 16, !tbaa !6
  %5281 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5282

5282:                                             ; preds = %5274, %5278
  %5283 = phi ptr [ %5275, %5274 ], [ %5281, %5278 ]
  %5284 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5285 = icmp eq ptr %5283, %5284
  br i1 %5285, label %5290, label %5286

5286:                                             ; preds = %5282
  %5287 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5288 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.967, ptr noundef %5284, i32 noundef 591, i32 noundef 3, ptr noundef null, ptr noundef %5287) #22
  store ptr %5288, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 591), align 8, !tbaa !6
  store ptr %5288, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 591), align 8, !tbaa !6
  %5289 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5290

5290:                                             ; preds = %5282, %5286
  %5291 = phi ptr [ %5283, %5282 ], [ %5289, %5286 ]
  %5292 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5293 = icmp eq ptr %5291, %5292
  br i1 %5293, label %5298, label %5294

5294:                                             ; preds = %5290
  %5295 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5296 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.968, ptr noundef %5292, i32 noundef 592, i32 noundef 3, ptr noundef null, ptr noundef %5295) #22
  store ptr %5296, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 592), align 16, !tbaa !6
  store ptr %5296, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 592), align 16, !tbaa !6
  %5297 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5298

5298:                                             ; preds = %5290, %5294
  %5299 = phi ptr [ %5291, %5290 ], [ %5297, %5294 ]
  %5300 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5301 = icmp eq ptr %5299, %5300
  br i1 %5301, label %5306, label %5302

5302:                                             ; preds = %5298
  %5303 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5304 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.969, ptr noundef %5300, i32 noundef 593, i32 noundef 3, ptr noundef null, ptr noundef %5303) #22
  store ptr %5304, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 593), align 8, !tbaa !6
  store ptr %5304, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 593), align 8, !tbaa !6
  %5305 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5306

5306:                                             ; preds = %5298, %5302
  %5307 = phi ptr [ %5299, %5298 ], [ %5305, %5302 ]
  %5308 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5309 = icmp eq ptr %5307, %5308
  br i1 %5309, label %5314, label %5310

5310:                                             ; preds = %5306
  %5311 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5312 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.970, ptr noundef %5308, i32 noundef 594, i32 noundef 3, ptr noundef null, ptr noundef %5311) #22
  store ptr %5312, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 594), align 16, !tbaa !6
  store ptr %5312, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 594), align 16, !tbaa !6
  %5313 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5314

5314:                                             ; preds = %5306, %5310
  %5315 = phi ptr [ %5307, %5306 ], [ %5313, %5310 ]
  %5316 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5317 = icmp eq ptr %5315, %5316
  br i1 %5317, label %5322, label %5318

5318:                                             ; preds = %5314
  %5319 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5320 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.971, ptr noundef %5316, i32 noundef 595, i32 noundef 3, ptr noundef null, ptr noundef %5319) #22
  store ptr %5320, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 595), align 8, !tbaa !6
  store ptr %5320, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 595), align 8, !tbaa !6
  %5321 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5322

5322:                                             ; preds = %5314, %5318
  %5323 = phi ptr [ %5315, %5314 ], [ %5321, %5318 ]
  %5324 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5325 = icmp eq ptr %5323, %5324
  br i1 %5325, label %5330, label %5326

5326:                                             ; preds = %5322
  %5327 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5328 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.972, ptr noundef %5324, i32 noundef 596, i32 noundef 3, ptr noundef null, ptr noundef %5327) #22
  store ptr %5328, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 596), align 16, !tbaa !6
  store ptr %5328, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 596), align 16, !tbaa !6
  %5329 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5330

5330:                                             ; preds = %5322, %5326
  %5331 = phi ptr [ %5323, %5322 ], [ %5329, %5326 ]
  %5332 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5333 = icmp eq ptr %5331, %5332
  br i1 %5333, label %5338, label %5334

5334:                                             ; preds = %5330
  %5335 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5336 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.973, ptr noundef %5332, i32 noundef 597, i32 noundef 3, ptr noundef null, ptr noundef %5335) #22
  store ptr %5336, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 597), align 8, !tbaa !6
  store ptr %5336, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 597), align 8, !tbaa !6
  %5337 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5338

5338:                                             ; preds = %5330, %5334
  %5339 = phi ptr [ %5331, %5330 ], [ %5337, %5334 ]
  %5340 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5341 = icmp eq ptr %5339, %5340
  br i1 %5341, label %5346, label %5342

5342:                                             ; preds = %5338
  %5343 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5344 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.974, ptr noundef %5340, i32 noundef 598, i32 noundef 3, ptr noundef null, ptr noundef %5343) #22
  store ptr %5344, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 598), align 16, !tbaa !6
  store ptr %5344, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 598), align 16, !tbaa !6
  %5345 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5346

5346:                                             ; preds = %5338, %5342
  %5347 = phi ptr [ %5339, %5338 ], [ %5345, %5342 ]
  %5348 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5349 = icmp eq ptr %5347, %5348
  br i1 %5349, label %5354, label %5350

5350:                                             ; preds = %5346
  %5351 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5352 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.975, ptr noundef %5348, i32 noundef 599, i32 noundef 3, ptr noundef null, ptr noundef %5351) #22
  store ptr %5352, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 599), align 8, !tbaa !6
  store ptr %5352, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 599), align 8, !tbaa !6
  %5353 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5354

5354:                                             ; preds = %5346, %5350
  %5355 = phi ptr [ %5347, %5346 ], [ %5353, %5350 ]
  %5356 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5357 = icmp eq ptr %5355, %5356
  br i1 %5357, label %5362, label %5358

5358:                                             ; preds = %5354
  %5359 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5360 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.976, ptr noundef %5356, i32 noundef 600, i32 noundef 3, ptr noundef null, ptr noundef %5359) #22
  store ptr %5360, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 600), align 16, !tbaa !6
  store ptr %5360, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 600), align 16, !tbaa !6
  %5361 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5362

5362:                                             ; preds = %5354, %5358
  %5363 = phi ptr [ %5355, %5354 ], [ %5361, %5358 ]
  %5364 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5365 = icmp eq ptr %5363, %5364
  br i1 %5365, label %5370, label %5366

5366:                                             ; preds = %5362
  %5367 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5368 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.977, ptr noundef %5364, i32 noundef 601, i32 noundef 3, ptr noundef null, ptr noundef %5367) #22
  store ptr %5368, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 601), align 8, !tbaa !6
  store ptr %5368, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 601), align 8, !tbaa !6
  %5369 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5370

5370:                                             ; preds = %5362, %5366
  %5371 = phi ptr [ %5363, %5362 ], [ %5369, %5366 ]
  %5372 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5373 = icmp eq ptr %5371, %5372
  br i1 %5373, label %5378, label %5374

5374:                                             ; preds = %5370
  %5375 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5376 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.978, ptr noundef %5372, i32 noundef 602, i32 noundef 3, ptr noundef null, ptr noundef %5375) #22
  store ptr %5376, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 602), align 16, !tbaa !6
  store ptr %5376, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 602), align 16, !tbaa !6
  %5377 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5378

5378:                                             ; preds = %5370, %5374
  %5379 = phi ptr [ %5371, %5370 ], [ %5377, %5374 ]
  %5380 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5381 = icmp eq ptr %5379, %5380
  br i1 %5381, label %5386, label %5382

5382:                                             ; preds = %5378
  %5383 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5384 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.979, ptr noundef %5380, i32 noundef 603, i32 noundef 3, ptr noundef null, ptr noundef %5383) #22
  store ptr %5384, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 603), align 8, !tbaa !6
  store ptr %5384, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 603), align 8, !tbaa !6
  %5385 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5386

5386:                                             ; preds = %5378, %5382
  %5387 = phi ptr [ %5379, %5378 ], [ %5385, %5382 ]
  %5388 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5389 = icmp eq ptr %5387, %5388
  br i1 %5389, label %5394, label %5390

5390:                                             ; preds = %5386
  %5391 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5392 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.980, ptr noundef %5388, i32 noundef 604, i32 noundef 3, ptr noundef null, ptr noundef %5391) #22
  store ptr %5392, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 604), align 16, !tbaa !6
  store ptr %5392, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 604), align 16, !tbaa !6
  %5393 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5394

5394:                                             ; preds = %5386, %5390
  %5395 = phi ptr [ %5387, %5386 ], [ %5393, %5390 ]
  %5396 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5397 = icmp eq ptr %5395, %5396
  br i1 %5397, label %5402, label %5398

5398:                                             ; preds = %5394
  %5399 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5400 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.981, ptr noundef %5396, i32 noundef 605, i32 noundef 3, ptr noundef null, ptr noundef %5399) #22
  store ptr %5400, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 605), align 8, !tbaa !6
  store ptr %5400, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 605), align 8, !tbaa !6
  %5401 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5402

5402:                                             ; preds = %5394, %5398
  %5403 = phi ptr [ %5395, %5394 ], [ %5401, %5398 ]
  %5404 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5405 = icmp eq ptr %5403, %5404
  br i1 %5405, label %5410, label %5406

5406:                                             ; preds = %5402
  %5407 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5408 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.982, ptr noundef %5404, i32 noundef 606, i32 noundef 3, ptr noundef null, ptr noundef %5407) #22
  store ptr %5408, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 606), align 16, !tbaa !6
  store ptr %5408, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 606), align 16, !tbaa !6
  %5409 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5410

5410:                                             ; preds = %5402, %5406
  %5411 = phi ptr [ %5403, %5402 ], [ %5409, %5406 ]
  %5412 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5413 = icmp eq ptr %5411, %5412
  br i1 %5413, label %5418, label %5414

5414:                                             ; preds = %5410
  %5415 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5416 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.983, ptr noundef %5412, i32 noundef 607, i32 noundef 3, ptr noundef null, ptr noundef %5415) #22
  store ptr %5416, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 607), align 8, !tbaa !6
  store ptr %5416, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 607), align 8, !tbaa !6
  %5417 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5418

5418:                                             ; preds = %5410, %5414
  %5419 = phi ptr [ %5411, %5410 ], [ %5417, %5414 ]
  %5420 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5421 = icmp eq ptr %5419, %5420
  br i1 %5421, label %5426, label %5422

5422:                                             ; preds = %5418
  %5423 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5424 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.984, ptr noundef %5420, i32 noundef 608, i32 noundef 3, ptr noundef null, ptr noundef %5423) #22
  store ptr %5424, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 608), align 16, !tbaa !6
  store ptr %5424, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 608), align 16, !tbaa !6
  %5425 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5426

5426:                                             ; preds = %5418, %5422
  %5427 = phi ptr [ %5419, %5418 ], [ %5425, %5422 ]
  %5428 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5429 = icmp eq ptr %5427, %5428
  br i1 %5429, label %5434, label %5430

5430:                                             ; preds = %5426
  %5431 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5432 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.985, ptr noundef %5428, i32 noundef 609, i32 noundef 3, ptr noundef null, ptr noundef %5431) #22
  store ptr %5432, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 609), align 8, !tbaa !6
  store ptr %5432, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 609), align 8, !tbaa !6
  %5433 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5434

5434:                                             ; preds = %5426, %5430
  %5435 = phi ptr [ %5427, %5426 ], [ %5433, %5430 ]
  %5436 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5437 = icmp eq ptr %5435, %5436
  br i1 %5437, label %5442, label %5438

5438:                                             ; preds = %5434
  %5439 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5440 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.986, ptr noundef %5436, i32 noundef 610, i32 noundef 3, ptr noundef null, ptr noundef %5439) #22
  store ptr %5440, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 610), align 16, !tbaa !6
  store ptr %5440, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 610), align 16, !tbaa !6
  %5441 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5442

5442:                                             ; preds = %5434, %5438
  %5443 = phi ptr [ %5435, %5434 ], [ %5441, %5438 ]
  %5444 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5445 = icmp eq ptr %5443, %5444
  br i1 %5445, label %5450, label %5446

5446:                                             ; preds = %5442
  %5447 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5448 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.987, ptr noundef %5444, i32 noundef 611, i32 noundef 3, ptr noundef null, ptr noundef %5447) #22
  store ptr %5448, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 611), align 8, !tbaa !6
  store ptr %5448, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 611), align 8, !tbaa !6
  %5449 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5450

5450:                                             ; preds = %5442, %5446
  %5451 = phi ptr [ %5443, %5442 ], [ %5449, %5446 ]
  %5452 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5453 = icmp eq ptr %5451, %5452
  br i1 %5453, label %5458, label %5454

5454:                                             ; preds = %5450
  %5455 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5456 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.988, ptr noundef %5452, i32 noundef 612, i32 noundef 3, ptr noundef null, ptr noundef %5455) #22
  store ptr %5456, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 612), align 16, !tbaa !6
  store ptr %5456, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 612), align 16, !tbaa !6
  %5457 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5458

5458:                                             ; preds = %5450, %5454
  %5459 = phi ptr [ %5451, %5450 ], [ %5457, %5454 ]
  %5460 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5461 = icmp eq ptr %5459, %5460
  br i1 %5461, label %5466, label %5462

5462:                                             ; preds = %5458
  %5463 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5464 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.989, ptr noundef %5460, i32 noundef 613, i32 noundef 3, ptr noundef null, ptr noundef %5463) #22
  store ptr %5464, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 613), align 8, !tbaa !6
  store ptr %5464, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 613), align 8, !tbaa !6
  %5465 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5466

5466:                                             ; preds = %5458, %5462
  %5467 = phi ptr [ %5459, %5458 ], [ %5465, %5462 ]
  %5468 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5469 = icmp eq ptr %5467, %5468
  br i1 %5469, label %5474, label %5470

5470:                                             ; preds = %5466
  %5471 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5472 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.990, ptr noundef %5468, i32 noundef 614, i32 noundef 3, ptr noundef null, ptr noundef %5471) #22
  store ptr %5472, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 614), align 16, !tbaa !6
  store ptr %5472, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 614), align 16, !tbaa !6
  %5473 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5474

5474:                                             ; preds = %5466, %5470
  %5475 = phi ptr [ %5467, %5466 ], [ %5473, %5470 ]
  %5476 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5477 = icmp eq ptr %5475, %5476
  br i1 %5477, label %5482, label %5478

5478:                                             ; preds = %5474
  %5479 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5480 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.991, ptr noundef %5476, i32 noundef 615, i32 noundef 3, ptr noundef null, ptr noundef %5479) #22
  store ptr %5480, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 615), align 8, !tbaa !6
  store ptr %5480, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 615), align 8, !tbaa !6
  %5481 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5482

5482:                                             ; preds = %5474, %5478
  %5483 = phi ptr [ %5475, %5474 ], [ %5481, %5478 ]
  %5484 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5485 = icmp eq ptr %5483, %5484
  br i1 %5485, label %5490, label %5486

5486:                                             ; preds = %5482
  %5487 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5488 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.992, ptr noundef %5484, i32 noundef 616, i32 noundef 3, ptr noundef null, ptr noundef %5487) #22
  store ptr %5488, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 616), align 16, !tbaa !6
  store ptr %5488, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 616), align 16, !tbaa !6
  %5489 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5490

5490:                                             ; preds = %5482, %5486
  %5491 = phi ptr [ %5483, %5482 ], [ %5489, %5486 ]
  %5492 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5493 = icmp eq ptr %5491, %5492
  br i1 %5493, label %5498, label %5494

5494:                                             ; preds = %5490
  %5495 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5496 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.993, ptr noundef %5492, i32 noundef 617, i32 noundef 3, ptr noundef null, ptr noundef %5495) #22
  store ptr %5496, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 617), align 8, !tbaa !6
  store ptr %5496, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 617), align 8, !tbaa !6
  %5497 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5498

5498:                                             ; preds = %5490, %5494
  %5499 = phi ptr [ %5491, %5490 ], [ %5497, %5494 ]
  %5500 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5501 = icmp eq ptr %5499, %5500
  br i1 %5501, label %5506, label %5502

5502:                                             ; preds = %5498
  %5503 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5504 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.994, ptr noundef %5500, i32 noundef 618, i32 noundef 3, ptr noundef null, ptr noundef %5503) #22
  store ptr %5504, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 618), align 16, !tbaa !6
  store ptr %5504, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 618), align 16, !tbaa !6
  %5505 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5506

5506:                                             ; preds = %5498, %5502
  %5507 = phi ptr [ %5499, %5498 ], [ %5505, %5502 ]
  %5508 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5509 = icmp eq ptr %5507, %5508
  br i1 %5509, label %5514, label %5510

5510:                                             ; preds = %5506
  %5511 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5512 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.995, ptr noundef %5508, i32 noundef 619, i32 noundef 3, ptr noundef null, ptr noundef %5511) #22
  store ptr %5512, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 619), align 8, !tbaa !6
  store ptr %5512, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 619), align 8, !tbaa !6
  %5513 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5514

5514:                                             ; preds = %5506, %5510
  %5515 = phi ptr [ %5507, %5506 ], [ %5513, %5510 ]
  %5516 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5517 = icmp eq ptr %5515, %5516
  br i1 %5517, label %5522, label %5518

5518:                                             ; preds = %5514
  %5519 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5520 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.996, ptr noundef %5516, i32 noundef 620, i32 noundef 3, ptr noundef null, ptr noundef %5519) #22
  store ptr %5520, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 620), align 16, !tbaa !6
  store ptr %5520, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 620), align 16, !tbaa !6
  %5521 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5522

5522:                                             ; preds = %5514, %5518
  %5523 = phi ptr [ %5515, %5514 ], [ %5521, %5518 ]
  %5524 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5525 = icmp eq ptr %5523, %5524
  br i1 %5525, label %5530, label %5526

5526:                                             ; preds = %5522
  %5527 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5528 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.997, ptr noundef %5524, i32 noundef 621, i32 noundef 3, ptr noundef null, ptr noundef %5527) #22
  store ptr %5528, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 621), align 8, !tbaa !6
  store ptr %5528, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 621), align 8, !tbaa !6
  %5529 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5530

5530:                                             ; preds = %5522, %5526
  %5531 = phi ptr [ %5523, %5522 ], [ %5529, %5526 ]
  %5532 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5533 = icmp eq ptr %5531, %5532
  br i1 %5533, label %5538, label %5534

5534:                                             ; preds = %5530
  %5535 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5536 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.998, ptr noundef %5532, i32 noundef 622, i32 noundef 3, ptr noundef null, ptr noundef %5535) #22
  store ptr %5536, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 622), align 16, !tbaa !6
  store ptr %5536, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 622), align 16, !tbaa !6
  %5537 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5538

5538:                                             ; preds = %5530, %5534
  %5539 = phi ptr [ %5531, %5530 ], [ %5537, %5534 ]
  %5540 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5541 = icmp eq ptr %5539, %5540
  br i1 %5541, label %5546, label %5542

5542:                                             ; preds = %5538
  %5543 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5544 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.999, ptr noundef %5540, i32 noundef 623, i32 noundef 3, ptr noundef null, ptr noundef %5543) #22
  store ptr %5544, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 623), align 8, !tbaa !6
  store ptr %5544, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 623), align 8, !tbaa !6
  %5545 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5546

5546:                                             ; preds = %5538, %5542
  %5547 = phi ptr [ %5539, %5538 ], [ %5545, %5542 ]
  %5548 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5549 = icmp eq ptr %5547, %5548
  br i1 %5549, label %5554, label %5550

5550:                                             ; preds = %5546
  %5551 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5552 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1000, ptr noundef %5548, i32 noundef 624, i32 noundef 3, ptr noundef null, ptr noundef %5551) #22
  store ptr %5552, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 624), align 16, !tbaa !6
  store ptr %5552, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 624), align 16, !tbaa !6
  %5553 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5554

5554:                                             ; preds = %5546, %5550
  %5555 = phi ptr [ %5547, %5546 ], [ %5553, %5550 ]
  %5556 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5557 = icmp eq ptr %5555, %5556
  br i1 %5557, label %5562, label %5558

5558:                                             ; preds = %5554
  %5559 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5560 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1001, ptr noundef %5556, i32 noundef 625, i32 noundef 3, ptr noundef null, ptr noundef %5559) #22
  store ptr %5560, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 625), align 8, !tbaa !6
  store ptr %5560, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 625), align 8, !tbaa !6
  %5561 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5562

5562:                                             ; preds = %5554, %5558
  %5563 = phi ptr [ %5555, %5554 ], [ %5561, %5558 ]
  %5564 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5565 = icmp eq ptr %5563, %5564
  br i1 %5565, label %5570, label %5566

5566:                                             ; preds = %5562
  %5567 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5568 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1002, ptr noundef %5564, i32 noundef 626, i32 noundef 3, ptr noundef null, ptr noundef %5567) #22
  store ptr %5568, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 626), align 16, !tbaa !6
  store ptr %5568, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 626), align 16, !tbaa !6
  %5569 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5570

5570:                                             ; preds = %5562, %5566
  %5571 = phi ptr [ %5563, %5562 ], [ %5569, %5566 ]
  %5572 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5573 = icmp eq ptr %5571, %5572
  br i1 %5573, label %5578, label %5574

5574:                                             ; preds = %5570
  %5575 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5576 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1003, ptr noundef %5572, i32 noundef 627, i32 noundef 3, ptr noundef null, ptr noundef %5575) #22
  store ptr %5576, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 627), align 8, !tbaa !6
  store ptr %5576, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 627), align 8, !tbaa !6
  %5577 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5578

5578:                                             ; preds = %5570, %5574
  %5579 = phi ptr [ %5571, %5570 ], [ %5577, %5574 ]
  %5580 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 203), align 8, !tbaa !6
  %5581 = icmp eq ptr %5579, %5580
  br i1 %5581, label %5586, label %5582

5582:                                             ; preds = %5578
  %5583 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5584 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1004, ptr noundef %5580, i32 noundef 628, i32 noundef 3, ptr noundef null, ptr noundef %5583) #22
  store ptr %5584, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 628), align 16, !tbaa !6
  store ptr %5584, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 628), align 16, !tbaa !6
  %5585 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5586

5586:                                             ; preds = %5578, %5582
  %5587 = phi ptr [ %5579, %5578 ], [ %5585, %5582 ]
  %5588 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 204), align 32, !tbaa !6
  %5589 = icmp eq ptr %5587, %5588
  br i1 %5589, label %5594, label %5590

5590:                                             ; preds = %5586
  %5591 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5592 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1005, ptr noundef %5588, i32 noundef 629, i32 noundef 3, ptr noundef null, ptr noundef %5591) #22
  store ptr %5592, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 629), align 8, !tbaa !6
  store ptr %5592, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 629), align 8, !tbaa !6
  %5593 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5594

5594:                                             ; preds = %5586, %5590
  %5595 = phi ptr [ %5587, %5586 ], [ %5593, %5590 ]
  %5596 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 205), align 8, !tbaa !6
  %5597 = icmp eq ptr %5595, %5596
  br i1 %5597, label %5602, label %5598

5598:                                             ; preds = %5594
  %5599 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5600 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1006, ptr noundef %5596, i32 noundef 630, i32 noundef 3, ptr noundef null, ptr noundef %5599) #22
  store ptr %5600, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 630), align 16, !tbaa !6
  store ptr %5600, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 630), align 16, !tbaa !6
  %5601 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5602

5602:                                             ; preds = %5594, %5598
  %5603 = phi ptr [ %5595, %5594 ], [ %5601, %5598 ]
  %5604 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 206), align 16, !tbaa !6
  %5605 = icmp eq ptr %5603, %5604
  br i1 %5605, label %5610, label %5606

5606:                                             ; preds = %5602
  %5607 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5608 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1007, ptr noundef %5604, i32 noundef 631, i32 noundef 3, ptr noundef null, ptr noundef %5607) #22
  store ptr %5608, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 631), align 8, !tbaa !6
  store ptr %5608, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 631), align 8, !tbaa !6
  %5609 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5610

5610:                                             ; preds = %5602, %5606
  %5611 = phi ptr [ %5603, %5602 ], [ %5609, %5606 ]
  %5612 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 207), align 8, !tbaa !6
  %5613 = icmp eq ptr %5611, %5612
  br i1 %5613, label %5618, label %5614

5614:                                             ; preds = %5610
  %5615 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5616 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1008, ptr noundef %5612, i32 noundef 632, i32 noundef 3, ptr noundef null, ptr noundef %5615) #22
  store ptr %5616, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 632), align 16, !tbaa !6
  store ptr %5616, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 632), align 16, !tbaa !6
  %5617 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5618

5618:                                             ; preds = %5610, %5614
  %5619 = phi ptr [ %5611, %5610 ], [ %5617, %5614 ]
  %5620 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5621 = icmp eq ptr %5619, %5620
  br i1 %5621, label %5626, label %5622

5622:                                             ; preds = %5618
  %5623 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5624 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1009, ptr noundef %5620, i32 noundef 633, i32 noundef 3, ptr noundef null, ptr noundef %5623) #22
  store ptr %5624, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 633), align 8, !tbaa !6
  store ptr %5624, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 633), align 8, !tbaa !6
  %5625 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5626

5626:                                             ; preds = %5618, %5622
  %5627 = phi ptr [ %5619, %5618 ], [ %5625, %5622 ]
  %5628 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 208), align 32, !tbaa !6
  %5629 = icmp eq ptr %5627, %5628
  br i1 %5629, label %5634, label %5630

5630:                                             ; preds = %5626
  %5631 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5632 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1010, ptr noundef %5628, i32 noundef 634, i32 noundef 3, ptr noundef null, ptr noundef %5631) #22
  store ptr %5632, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 634), align 16, !tbaa !6
  store ptr %5632, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 634), align 16, !tbaa !6
  %5633 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5634

5634:                                             ; preds = %5626, %5630
  %5635 = phi ptr [ %5627, %5626 ], [ %5633, %5630 ]
  %5636 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 209), align 8, !tbaa !6
  %5637 = icmp eq ptr %5635, %5636
  br i1 %5637, label %5642, label %5638

5638:                                             ; preds = %5634
  %5639 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5640 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1011, ptr noundef %5636, i32 noundef 635, i32 noundef 3, ptr noundef null, ptr noundef %5639) #22
  store ptr %5640, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 635), align 8, !tbaa !6
  store ptr %5640, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 635), align 8, !tbaa !6
  %5641 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5642

5642:                                             ; preds = %5634, %5638
  %5643 = phi ptr [ %5635, %5634 ], [ %5641, %5638 ]
  %5644 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 210), align 16, !tbaa !6
  %5645 = icmp eq ptr %5643, %5644
  br i1 %5645, label %5650, label %5646

5646:                                             ; preds = %5642
  %5647 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5648 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1012, ptr noundef %5644, i32 noundef 636, i32 noundef 3, ptr noundef null, ptr noundef %5647) #22
  store ptr %5648, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 636), align 16, !tbaa !6
  store ptr %5648, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 636), align 16, !tbaa !6
  %5649 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5650

5650:                                             ; preds = %5642, %5646
  %5651 = phi ptr [ %5643, %5642 ], [ %5649, %5646 ]
  %5652 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 211), align 8, !tbaa !6
  %5653 = icmp eq ptr %5651, %5652
  br i1 %5653, label %5658, label %5654

5654:                                             ; preds = %5650
  %5655 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5656 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1013, ptr noundef %5652, i32 noundef 637, i32 noundef 3, ptr noundef null, ptr noundef %5655) #22
  store ptr %5656, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 637), align 8, !tbaa !6
  store ptr %5656, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 637), align 8, !tbaa !6
  %5657 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5658

5658:                                             ; preds = %5650, %5654
  %5659 = phi ptr [ %5651, %5650 ], [ %5657, %5654 ]
  %5660 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 212), align 32, !tbaa !6
  %5661 = icmp eq ptr %5659, %5660
  br i1 %5661, label %5666, label %5662

5662:                                             ; preds = %5658
  %5663 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5664 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1014, ptr noundef %5660, i32 noundef 638, i32 noundef 3, ptr noundef null, ptr noundef %5663) #22
  store ptr %5664, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 638), align 16, !tbaa !6
  store ptr %5664, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 638), align 16, !tbaa !6
  %5665 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5666

5666:                                             ; preds = %5658, %5662
  %5667 = phi ptr [ %5659, %5658 ], [ %5665, %5662 ]
  %5668 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5669 = icmp eq ptr %5667, %5668
  br i1 %5669, label %5674, label %5670

5670:                                             ; preds = %5666
  %5671 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5672 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1015, ptr noundef %5668, i32 noundef 639, i32 noundef 3, ptr noundef null, ptr noundef %5671) #22
  store ptr %5672, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 639), align 8, !tbaa !6
  store ptr %5672, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 639), align 8, !tbaa !6
  %5673 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5674

5674:                                             ; preds = %5666, %5670
  %5675 = phi ptr [ %5667, %5666 ], [ %5673, %5670 ]
  %5676 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 172), align 32, !tbaa !6
  %5677 = icmp eq ptr %5675, %5676
  br i1 %5677, label %5682, label %5678

5678:                                             ; preds = %5674
  %5679 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5680 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1016, ptr noundef %5676, i32 noundef 640, i32 noundef 3, ptr noundef null, ptr noundef %5679) #22
  store ptr %5680, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 640), align 16, !tbaa !6
  store ptr %5680, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 640), align 16, !tbaa !6
  %5681 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5682

5682:                                             ; preds = %5674, %5678
  %5683 = phi ptr [ %5675, %5674 ], [ %5681, %5678 ]
  %5684 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 173), align 8, !tbaa !6
  %5685 = icmp eq ptr %5683, %5684
  br i1 %5685, label %5690, label %5686

5686:                                             ; preds = %5682
  %5687 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5688 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1017, ptr noundef %5684, i32 noundef 641, i32 noundef 3, ptr noundef null, ptr noundef %5687) #22
  store ptr %5688, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 641), align 8, !tbaa !6
  store ptr %5688, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 641), align 8, !tbaa !6
  %5689 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5690

5690:                                             ; preds = %5682, %5686
  %5691 = phi ptr [ %5683, %5682 ], [ %5689, %5686 ]
  %5692 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 174), align 16, !tbaa !6
  %5693 = icmp eq ptr %5691, %5692
  br i1 %5693, label %5698, label %5694

5694:                                             ; preds = %5690
  %5695 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5696 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1018, ptr noundef %5692, i32 noundef 642, i32 noundef 3, ptr noundef null, ptr noundef %5695) #22
  store ptr %5696, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 642), align 16, !tbaa !6
  store ptr %5696, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 642), align 16, !tbaa !6
  %5697 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5698

5698:                                             ; preds = %5690, %5694
  %5699 = phi ptr [ %5691, %5690 ], [ %5697, %5694 ]
  %5700 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 175), align 8, !tbaa !6
  %5701 = icmp eq ptr %5699, %5700
  br i1 %5701, label %5706, label %5702

5702:                                             ; preds = %5698
  %5703 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5704 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1019, ptr noundef %5700, i32 noundef 643, i32 noundef 3, ptr noundef null, ptr noundef %5703) #22
  store ptr %5704, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 643), align 8, !tbaa !6
  store ptr %5704, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 643), align 8, !tbaa !6
  %5705 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5706

5706:                                             ; preds = %5698, %5702
  %5707 = phi ptr [ %5699, %5698 ], [ %5705, %5702 ]
  %5708 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 176), align 32, !tbaa !6
  %5709 = icmp eq ptr %5707, %5708
  br i1 %5709, label %5714, label %5710

5710:                                             ; preds = %5706
  %5711 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5712 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1020, ptr noundef %5708, i32 noundef 644, i32 noundef 3, ptr noundef null, ptr noundef %5711) #22
  store ptr %5712, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 644), align 16, !tbaa !6
  store ptr %5712, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 644), align 16, !tbaa !6
  %5713 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5714

5714:                                             ; preds = %5706, %5710
  %5715 = phi ptr [ %5707, %5706 ], [ %5713, %5710 ]
  %5716 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 233), align 8, !tbaa !6
  %5717 = icmp eq ptr %5715, %5716
  br i1 %5717, label %5722, label %5718

5718:                                             ; preds = %5714
  %5719 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5720 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1021, ptr noundef %5716, i32 noundef 645, i32 noundef 3, ptr noundef null, ptr noundef %5719) #22
  store ptr %5720, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 645), align 8, !tbaa !6
  store ptr %5720, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 645), align 8, !tbaa !6
  %5721 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5722

5722:                                             ; preds = %5714, %5718
  %5723 = phi ptr [ %5715, %5714 ], [ %5721, %5718 ]
  %5724 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 121), align 8, !tbaa !6
  %5725 = icmp eq ptr %5723, %5724
  br i1 %5725, label %5754, label %5726

5726:                                             ; preds = %5722
  %5727 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5728 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1022, ptr noundef %5724, i32 noundef 646, i32 noundef 3, ptr noundef null, ptr noundef %5727) #22
  store ptr %5728, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 646), align 16, !tbaa !6
  store ptr %5728, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 646), align 16, !tbaa !6
  %5729 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 121), align 8, !tbaa !6
  %5730 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5731 = icmp eq ptr %5730, %5729
  br i1 %5731, label %5754, label %5732

5732:                                             ; preds = %5726
  %5733 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5734 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1023, ptr noundef %5729, i32 noundef 647, i32 noundef 3, ptr noundef null, ptr noundef %5733) #22
  store ptr %5734, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 647), align 8, !tbaa !6
  store ptr %5734, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 647), align 8, !tbaa !6
  %5735 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 121), align 8, !tbaa !6
  %5736 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5737 = icmp eq ptr %5736, %5735
  br i1 %5737, label %5754, label %5738

5738:                                             ; preds = %5732
  %5739 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5740 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1024, ptr noundef %5735, i32 noundef 648, i32 noundef 3, ptr noundef null, ptr noundef %5739) #22
  store ptr %5740, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 648), align 16, !tbaa !6
  store ptr %5740, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 648), align 16, !tbaa !6
  %5741 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 121), align 8, !tbaa !6
  %5742 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5743 = icmp eq ptr %5742, %5741
  br i1 %5743, label %5754, label %5744

5744:                                             ; preds = %5738
  %5745 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5746 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1025, ptr noundef %5741, i32 noundef 649, i32 noundef 3, ptr noundef null, ptr noundef %5745) #22
  store ptr %5746, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 649), align 8, !tbaa !6
  store ptr %5746, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 649), align 8, !tbaa !6
  %5747 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 121), align 8, !tbaa !6
  %5748 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5749 = icmp eq ptr %5748, %5747
  br i1 %5749, label %5754, label %5750

5750:                                             ; preds = %5744
  %5751 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5752 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1026, ptr noundef %5747, i32 noundef 650, i32 noundef 3, ptr noundef null, ptr noundef %5751) #22
  store ptr %5752, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 650), align 16, !tbaa !6
  store ptr %5752, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 650), align 16, !tbaa !6
  %5753 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %5754

5754:                                             ; preds = %5722, %5726, %5732, %5738, %5744, %5750
  %5755 = phi ptr [ %5748, %5744 ], [ %5753, %5750 ], [ %5742, %5738 ], [ %5736, %5732 ], [ %5730, %5726 ], [ %5723, %5722 ]
  %5756 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %5757 = icmp eq ptr %5755, %5756
  br i1 %5757, label %5761, label %5758

5758:                                             ; preds = %5754
  %5759 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5760 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1027, ptr noundef %5756, i32 noundef 651, i32 noundef 3, ptr noundef null, ptr noundef %5759) #22
  store ptr %5760, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 651), align 8, !tbaa !6
  store ptr %5760, ptr getelementptr inbounds ([721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 651), align 8, !tbaa !6
  br label %5761

5761:                                             ; preds = %5754, %5758
  %5762 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5763 = icmp ne i32 %5762, 0
  %5764 = load i32, ptr @flag_tree_parallelize_loops, align 4
  %5765 = icmp ne i32 %5764, 0
  %5766 = select i1 %5763, i1 true, i1 %5765
  br i1 %5766, label %5767, label %5776

5767:                                             ; preds = %5761
  %5768 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 56), align 32, !tbaa !6
  %5769 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5770 = icmp eq ptr %5769, %5768
  br i1 %5770, label %5776, label %5771

5771:                                             ; preds = %5767
  %5772 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %5773 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1028, ptr noundef %5768, i32 noundef 652, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([29 x i8], ptr @.str.1028, i64 0, i64 10), ptr noundef %5772) #22
  store ptr %5773, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 652), align 16, !tbaa !6
  %5774 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5775 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5776

5776:                                             ; preds = %5771, %5767, %5761
  %5777 = phi i32 [ %5775, %5771 ], [ %5764, %5767 ], [ 0, %5761 ]
  %5778 = phi i32 [ %5774, %5771 ], [ %5762, %5767 ], [ 0, %5761 ]
  %5779 = icmp ne i32 %5778, 0
  %5780 = icmp ne i32 %5777, 0
  %5781 = select i1 %5779, i1 true, i1 %5780
  br i1 %5781, label %5782, label %5791

5782:                                             ; preds = %5776
  %5783 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 56), align 32, !tbaa !6
  %5784 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5785 = icmp eq ptr %5784, %5783
  br i1 %5785, label %5791, label %5786

5786:                                             ; preds = %5782
  %5787 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 46), align 16, !tbaa !6
  %5788 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1029, ptr noundef %5783, i32 noundef 653, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([30 x i8], ptr @.str.1029, i64 0, i64 10), ptr noundef %5787) #22
  store ptr %5788, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 653), align 8, !tbaa !6
  %5789 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5790 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5791

5791:                                             ; preds = %5786, %5782, %5776
  %5792 = phi i32 [ %5790, %5786 ], [ %5777, %5782 ], [ 0, %5776 ]
  %5793 = phi i32 [ %5789, %5786 ], [ %5778, %5782 ], [ 0, %5776 ]
  %5794 = icmp ne i32 %5793, 0
  %5795 = icmp ne i32 %5792, 0
  %5796 = select i1 %5794, i1 true, i1 %5795
  br i1 %5796, label %5797, label %5806

5797:                                             ; preds = %5791
  %5798 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %5799 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5800 = icmp eq ptr %5799, %5798
  br i1 %5800, label %5806, label %5801

5801:                                             ; preds = %5797
  %5802 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5803 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1030, ptr noundef %5798, i32 noundef 654, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([28 x i8], ptr @.str.1030, i64 0, i64 10), ptr noundef %5802) #22
  store ptr %5803, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 654), align 16, !tbaa !6
  %5804 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5805 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5806

5806:                                             ; preds = %5801, %5797, %5791
  %5807 = phi i32 [ %5805, %5801 ], [ %5792, %5797 ], [ 0, %5791 ]
  %5808 = phi i32 [ %5804, %5801 ], [ %5793, %5797 ], [ 0, %5791 ]
  %5809 = icmp ne i32 %5808, 0
  %5810 = icmp ne i32 %5807, 0
  %5811 = select i1 %5809, i1 true, i1 %5810
  br i1 %5811, label %5812, label %5821

5812:                                             ; preds = %5806
  %5813 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %5814 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5815 = icmp eq ptr %5814, %5813
  br i1 %5815, label %5821, label %5816

5816:                                             ; preds = %5812
  %5817 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5818 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1031, ptr noundef %5813, i32 noundef 655, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([26 x i8], ptr @.str.1031, i64 0, i64 10), ptr noundef %5817) #22
  store ptr %5818, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 655), align 8, !tbaa !6
  %5819 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5820 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5821

5821:                                             ; preds = %5816, %5812, %5806
  %5822 = phi i32 [ %5820, %5816 ], [ %5807, %5812 ], [ 0, %5806 ]
  %5823 = phi i32 [ %5819, %5816 ], [ %5808, %5812 ], [ 0, %5806 ]
  %5824 = icmp ne i32 %5823, 0
  %5825 = icmp ne i32 %5822, 0
  %5826 = select i1 %5824, i1 true, i1 %5825
  br i1 %5826, label %5827, label %5836

5827:                                             ; preds = %5821
  %5828 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %5829 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5830 = icmp eq ptr %5829, %5828
  br i1 %5830, label %5836, label %5831

5831:                                             ; preds = %5827
  %5832 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5833 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1032, ptr noundef %5828, i32 noundef 656, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([23 x i8], ptr @.str.1032, i64 0, i64 10), ptr noundef %5832) #22
  store ptr %5833, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 656), align 16, !tbaa !6
  %5834 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5835 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5836

5836:                                             ; preds = %5831, %5827, %5821
  %5837 = phi i32 [ %5835, %5831 ], [ %5822, %5827 ], [ 0, %5821 ]
  %5838 = phi i32 [ %5834, %5831 ], [ %5823, %5827 ], [ 0, %5821 ]
  %5839 = icmp ne i32 %5838, 0
  %5840 = icmp ne i32 %5837, 0
  %5841 = select i1 %5839, i1 true, i1 %5840
  br i1 %5841, label %5842, label %5851

5842:                                             ; preds = %5836
  %5843 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %5844 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5845 = icmp eq ptr %5844, %5843
  br i1 %5845, label %5851, label %5846

5846:                                             ; preds = %5842
  %5847 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5848 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1033, ptr noundef %5843, i32 noundef 657, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([24 x i8], ptr @.str.1033, i64 0, i64 10), ptr noundef %5847) #22
  store ptr %5848, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 657), align 8, !tbaa !6
  %5849 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5850 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5851

5851:                                             ; preds = %5846, %5842, %5836
  %5852 = phi i32 [ %5850, %5846 ], [ %5837, %5842 ], [ 0, %5836 ]
  %5853 = phi i32 [ %5849, %5846 ], [ %5838, %5842 ], [ 0, %5836 ]
  %5854 = icmp ne i32 %5853, 0
  %5855 = icmp ne i32 %5852, 0
  %5856 = select i1 %5854, i1 true, i1 %5855
  br i1 %5856, label %5857, label %5866

5857:                                             ; preds = %5851
  %5858 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %5859 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5860 = icmp eq ptr %5859, %5858
  br i1 %5860, label %5866, label %5861

5861:                                             ; preds = %5857
  %5862 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5863 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1034, ptr noundef %5858, i32 noundef 658, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([30 x i8], ptr @.str.1034, i64 0, i64 10), ptr noundef %5862) #22
  store ptr %5863, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 658), align 16, !tbaa !6
  %5864 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5865 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5866

5866:                                             ; preds = %5861, %5857, %5851
  %5867 = phi i32 [ %5865, %5861 ], [ %5852, %5857 ], [ 0, %5851 ]
  %5868 = phi i32 [ %5864, %5861 ], [ %5853, %5857 ], [ 0, %5851 ]
  %5869 = icmp ne i32 %5868, 0
  %5870 = icmp ne i32 %5867, 0
  %5871 = select i1 %5869, i1 true, i1 %5870
  br i1 %5871, label %5872, label %5881

5872:                                             ; preds = %5866
  %5873 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %5874 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5875 = icmp eq ptr %5874, %5873
  br i1 %5875, label %5881, label %5876

5876:                                             ; preds = %5872
  %5877 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5878 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1035, ptr noundef %5873, i32 noundef 659, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([28 x i8], ptr @.str.1035, i64 0, i64 10), ptr noundef %5877) #22
  store ptr %5878, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 659), align 8, !tbaa !6
  %5879 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5880 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5881

5881:                                             ; preds = %5876, %5872, %5866
  %5882 = phi i32 [ %5880, %5876 ], [ %5867, %5872 ], [ 0, %5866 ]
  %5883 = phi i32 [ %5879, %5876 ], [ %5868, %5872 ], [ 0, %5866 ]
  %5884 = icmp ne i32 %5883, 0
  %5885 = icmp ne i32 %5882, 0
  %5886 = select i1 %5884, i1 true, i1 %5885
  br i1 %5886, label %5887, label %5896

5887:                                             ; preds = %5881
  %5888 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 122), align 16, !tbaa !6
  %5889 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5890 = icmp eq ptr %5889, %5888
  br i1 %5890, label %5896, label %5891

5891:                                             ; preds = %5887
  %5892 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5893 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1036, ptr noundef %5888, i32 noundef 660, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([35 x i8], ptr @.str.1036, i64 0, i64 10), ptr noundef %5892) #22
  store ptr %5893, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 660), align 16, !tbaa !6
  %5894 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5895 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5896

5896:                                             ; preds = %5891, %5887, %5881
  %5897 = phi i32 [ %5895, %5891 ], [ %5882, %5887 ], [ 0, %5881 ]
  %5898 = phi i32 [ %5894, %5891 ], [ %5883, %5887 ], [ 0, %5881 ]
  %5899 = icmp ne i32 %5898, 0
  %5900 = icmp ne i32 %5897, 0
  %5901 = select i1 %5899, i1 true, i1 %5900
  br i1 %5901, label %5902, label %5911

5902:                                             ; preds = %5896
  %5903 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 122), align 16, !tbaa !6
  %5904 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5905 = icmp eq ptr %5904, %5903
  br i1 %5905, label %5911, label %5906

5906:                                             ; preds = %5902
  %5907 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5908 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1037, ptr noundef %5903, i32 noundef 661, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([33 x i8], ptr @.str.1037, i64 0, i64 10), ptr noundef %5907) #22
  store ptr %5908, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 661), align 8, !tbaa !6
  %5909 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5910 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5911

5911:                                             ; preds = %5906, %5902, %5896
  %5912 = phi i32 [ %5910, %5906 ], [ %5897, %5902 ], [ 0, %5896 ]
  %5913 = phi i32 [ %5909, %5906 ], [ %5898, %5902 ], [ 0, %5896 ]
  %5914 = icmp ne i32 %5913, 0
  %5915 = icmp ne i32 %5912, 0
  %5916 = select i1 %5914, i1 true, i1 %5915
  br i1 %5916, label %5917, label %5926

5917:                                             ; preds = %5911
  %5918 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 227), align 8, !tbaa !6
  %5919 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5920 = icmp eq ptr %5919, %5918
  br i1 %5920, label %5926, label %5921

5921:                                             ; preds = %5917
  %5922 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5923 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1038, ptr noundef %5918, i32 noundef 662, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([33 x i8], ptr @.str.1038, i64 0, i64 10), ptr noundef %5922) #22
  store ptr %5923, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 662), align 16, !tbaa !6
  %5924 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5925 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5926

5926:                                             ; preds = %5921, %5917, %5911
  %5927 = phi i32 [ %5925, %5921 ], [ %5912, %5917 ], [ 0, %5911 ]
  %5928 = phi i32 [ %5924, %5921 ], [ %5913, %5917 ], [ 0, %5911 ]
  %5929 = icmp ne i32 %5928, 0
  %5930 = icmp ne i32 %5927, 0
  %5931 = select i1 %5929, i1 true, i1 %5930
  br i1 %5931, label %5932, label %5941

5932:                                             ; preds = %5926
  %5933 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 227), align 8, !tbaa !6
  %5934 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5935 = icmp eq ptr %5934, %5933
  br i1 %5935, label %5941, label %5936

5936:                                             ; preds = %5932
  %5937 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5938 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1039, ptr noundef %5933, i32 noundef 663, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([34 x i8], ptr @.str.1039, i64 0, i64 10), ptr noundef %5937) #22
  store ptr %5938, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 663), align 8, !tbaa !6
  %5939 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5940 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5941

5941:                                             ; preds = %5936, %5932, %5926
  %5942 = phi i32 [ %5940, %5936 ], [ %5927, %5932 ], [ 0, %5926 ]
  %5943 = phi i32 [ %5939, %5936 ], [ %5928, %5932 ], [ 0, %5926 ]
  %5944 = icmp ne i32 %5943, 0
  %5945 = icmp ne i32 %5942, 0
  %5946 = select i1 %5944, i1 true, i1 %5945
  br i1 %5946, label %5947, label %5956

5947:                                             ; preds = %5941
  %5948 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 227), align 8, !tbaa !6
  %5949 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5950 = icmp eq ptr %5949, %5948
  br i1 %5950, label %5956, label %5951

5951:                                             ; preds = %5947
  %5952 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5953 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1040, ptr noundef %5948, i32 noundef 664, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([33 x i8], ptr @.str.1040, i64 0, i64 10), ptr noundef %5952) #22
  store ptr %5953, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 664), align 16, !tbaa !6
  %5954 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5955 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5956

5956:                                             ; preds = %5951, %5947, %5941
  %5957 = phi i32 [ %5955, %5951 ], [ %5942, %5947 ], [ 0, %5941 ]
  %5958 = phi i32 [ %5954, %5951 ], [ %5943, %5947 ], [ 0, %5941 ]
  %5959 = icmp ne i32 %5958, 0
  %5960 = icmp ne i32 %5957, 0
  %5961 = select i1 %5959, i1 true, i1 %5960
  br i1 %5961, label %5962, label %5971

5962:                                             ; preds = %5956
  %5963 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 225), align 8, !tbaa !6
  %5964 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5965 = icmp eq ptr %5964, %5963
  br i1 %5965, label %5971, label %5966

5966:                                             ; preds = %5962
  %5967 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5968 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1041, ptr noundef %5963, i32 noundef 665, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([34 x i8], ptr @.str.1041, i64 0, i64 10), ptr noundef %5967) #22
  store ptr %5968, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 665), align 8, !tbaa !6
  %5969 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5970 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5971

5971:                                             ; preds = %5966, %5962, %5956
  %5972 = phi i32 [ %5970, %5966 ], [ %5957, %5962 ], [ 0, %5956 ]
  %5973 = phi i32 [ %5969, %5966 ], [ %5958, %5962 ], [ 0, %5956 ]
  %5974 = icmp ne i32 %5973, 0
  %5975 = icmp ne i32 %5972, 0
  %5976 = select i1 %5974, i1 true, i1 %5975
  br i1 %5976, label %5977, label %5986

5977:                                             ; preds = %5971
  %5978 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 227), align 8, !tbaa !6
  %5979 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5980 = icmp eq ptr %5979, %5978
  br i1 %5980, label %5986, label %5981

5981:                                             ; preds = %5977
  %5982 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5983 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1042, ptr noundef %5978, i32 noundef 666, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([41 x i8], ptr @.str.1042, i64 0, i64 10), ptr noundef %5982) #22
  store ptr %5983, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 666), align 16, !tbaa !6
  %5984 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %5985 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %5986

5986:                                             ; preds = %5981, %5977, %5971
  %5987 = phi i32 [ %5985, %5981 ], [ %5972, %5977 ], [ 0, %5971 ]
  %5988 = phi i32 [ %5984, %5981 ], [ %5973, %5977 ], [ 0, %5971 ]
  %5989 = icmp ne i32 %5988, 0
  %5990 = icmp ne i32 %5987, 0
  %5991 = select i1 %5989, i1 true, i1 %5990
  br i1 %5991, label %5992, label %6001

5992:                                             ; preds = %5986
  %5993 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 227), align 8, !tbaa !6
  %5994 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5995 = icmp eq ptr %5994, %5993
  br i1 %5995, label %6001, label %5996

5996:                                             ; preds = %5992
  %5997 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %5998 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1043, ptr noundef %5993, i32 noundef 667, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([42 x i8], ptr @.str.1043, i64 0, i64 10), ptr noundef %5997) #22
  store ptr %5998, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 667), align 8, !tbaa !6
  %5999 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6000 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6001

6001:                                             ; preds = %5996, %5992, %5986
  %6002 = phi i32 [ %6000, %5996 ], [ %5987, %5992 ], [ 0, %5986 ]
  %6003 = phi i32 [ %5999, %5996 ], [ %5988, %5992 ], [ 0, %5986 ]
  %6004 = icmp ne i32 %6003, 0
  %6005 = icmp ne i32 %6002, 0
  %6006 = select i1 %6004, i1 true, i1 %6005
  br i1 %6006, label %6007, label %6016

6007:                                             ; preds = %6001
  %6008 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 227), align 8, !tbaa !6
  %6009 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6010 = icmp eq ptr %6009, %6008
  br i1 %6010, label %6016, label %6011

6011:                                             ; preds = %6007
  %6012 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6013 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1044, ptr noundef %6008, i32 noundef 668, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([41 x i8], ptr @.str.1044, i64 0, i64 10), ptr noundef %6012) #22
  store ptr %6013, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 668), align 16, !tbaa !6
  %6014 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6015 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6016

6016:                                             ; preds = %6011, %6007, %6001
  %6017 = phi i32 [ %6015, %6011 ], [ %6002, %6007 ], [ 0, %6001 ]
  %6018 = phi i32 [ %6014, %6011 ], [ %6003, %6007 ], [ 0, %6001 ]
  %6019 = icmp ne i32 %6018, 0
  %6020 = icmp ne i32 %6017, 0
  %6021 = select i1 %6019, i1 true, i1 %6020
  br i1 %6021, label %6022, label %6031

6022:                                             ; preds = %6016
  %6023 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 225), align 8, !tbaa !6
  %6024 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6025 = icmp eq ptr %6024, %6023
  br i1 %6025, label %6031, label %6026

6026:                                             ; preds = %6022
  %6027 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6028 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1045, ptr noundef %6023, i32 noundef 669, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([42 x i8], ptr @.str.1045, i64 0, i64 10), ptr noundef %6027) #22
  store ptr %6028, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 669), align 8, !tbaa !6
  %6029 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6030 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6031

6031:                                             ; preds = %6026, %6022, %6016
  %6032 = phi i32 [ %6030, %6026 ], [ %6017, %6022 ], [ 0, %6016 ]
  %6033 = phi i32 [ %6029, %6026 ], [ %6018, %6022 ], [ 0, %6016 ]
  %6034 = icmp ne i32 %6033, 0
  %6035 = icmp ne i32 %6032, 0
  %6036 = select i1 %6034, i1 true, i1 %6035
  br i1 %6036, label %6037, label %6046

6037:                                             ; preds = %6031
  %6038 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6039 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6040 = icmp eq ptr %6039, %6038
  br i1 %6040, label %6046, label %6041

6041:                                             ; preds = %6037
  %6042 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6043 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1046, ptr noundef %6038, i32 noundef 670, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([32 x i8], ptr @.str.1046, i64 0, i64 10), ptr noundef %6042) #22
  store ptr %6043, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 670), align 16, !tbaa !6
  %6044 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6045 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6046

6046:                                             ; preds = %6041, %6037, %6031
  %6047 = phi i32 [ %6045, %6041 ], [ %6032, %6037 ], [ 0, %6031 ]
  %6048 = phi i32 [ %6044, %6041 ], [ %6033, %6037 ], [ 0, %6031 ]
  %6049 = icmp ne i32 %6048, 0
  %6050 = icmp ne i32 %6047, 0
  %6051 = select i1 %6049, i1 true, i1 %6050
  br i1 %6051, label %6052, label %6061

6052:                                             ; preds = %6046
  %6053 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6054 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6055 = icmp eq ptr %6054, %6053
  br i1 %6055, label %6061, label %6056

6056:                                             ; preds = %6052
  %6057 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6058 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1047, ptr noundef %6053, i32 noundef 671, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([33 x i8], ptr @.str.1047, i64 0, i64 10), ptr noundef %6057) #22
  store ptr %6058, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 671), align 8, !tbaa !6
  %6059 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6060 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6061

6061:                                             ; preds = %6056, %6052, %6046
  %6062 = phi i32 [ %6060, %6056 ], [ %6047, %6052 ], [ 0, %6046 ]
  %6063 = phi i32 [ %6059, %6056 ], [ %6048, %6052 ], [ 0, %6046 ]
  %6064 = icmp ne i32 %6063, 0
  %6065 = icmp ne i32 %6062, 0
  %6066 = select i1 %6064, i1 true, i1 %6065
  br i1 %6066, label %6067, label %6076

6067:                                             ; preds = %6061
  %6068 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6069 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6070 = icmp eq ptr %6069, %6068
  br i1 %6070, label %6076, label %6071

6071:                                             ; preds = %6067
  %6072 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6073 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1048, ptr noundef %6068, i32 noundef 672, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([32 x i8], ptr @.str.1048, i64 0, i64 10), ptr noundef %6072) #22
  store ptr %6073, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 672), align 16, !tbaa !6
  %6074 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6075 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6076

6076:                                             ; preds = %6071, %6067, %6061
  %6077 = phi i32 [ %6075, %6071 ], [ %6062, %6067 ], [ 0, %6061 ]
  %6078 = phi i32 [ %6074, %6071 ], [ %6063, %6067 ], [ 0, %6061 ]
  %6079 = icmp ne i32 %6078, 0
  %6080 = icmp ne i32 %6077, 0
  %6081 = select i1 %6079, i1 true, i1 %6080
  br i1 %6081, label %6082, label %6091

6082:                                             ; preds = %6076
  %6083 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6084 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6085 = icmp eq ptr %6084, %6083
  br i1 %6085, label %6091, label %6086

6086:                                             ; preds = %6082
  %6087 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6088 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1049, ptr noundef %6083, i32 noundef 673, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([33 x i8], ptr @.str.1049, i64 0, i64 10), ptr noundef %6087) #22
  store ptr %6088, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 673), align 8, !tbaa !6
  %6089 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6090 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6091

6091:                                             ; preds = %6086, %6082, %6076
  %6092 = phi i32 [ %6090, %6086 ], [ %6077, %6082 ], [ 0, %6076 ]
  %6093 = phi i32 [ %6089, %6086 ], [ %6078, %6082 ], [ 0, %6076 ]
  %6094 = icmp ne i32 %6093, 0
  %6095 = icmp ne i32 %6092, 0
  %6096 = select i1 %6094, i1 true, i1 %6095
  br i1 %6096, label %6097, label %6106

6097:                                             ; preds = %6091
  %6098 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6099 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6100 = icmp eq ptr %6099, %6098
  br i1 %6100, label %6106, label %6101

6101:                                             ; preds = %6097
  %6102 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6103 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1050, ptr noundef %6098, i32 noundef 674, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([40 x i8], ptr @.str.1050, i64 0, i64 10), ptr noundef %6102) #22
  store ptr %6103, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 674), align 16, !tbaa !6
  %6104 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6105 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6106

6106:                                             ; preds = %6101, %6097, %6091
  %6107 = phi i32 [ %6105, %6101 ], [ %6092, %6097 ], [ 0, %6091 ]
  %6108 = phi i32 [ %6104, %6101 ], [ %6093, %6097 ], [ 0, %6091 ]
  %6109 = icmp ne i32 %6108, 0
  %6110 = icmp ne i32 %6107, 0
  %6111 = select i1 %6109, i1 true, i1 %6110
  br i1 %6111, label %6112, label %6121

6112:                                             ; preds = %6106
  %6113 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6114 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6115 = icmp eq ptr %6114, %6113
  br i1 %6115, label %6121, label %6116

6116:                                             ; preds = %6112
  %6117 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6118 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1051, ptr noundef %6113, i32 noundef 675, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([41 x i8], ptr @.str.1051, i64 0, i64 10), ptr noundef %6117) #22
  store ptr %6118, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 675), align 8, !tbaa !6
  %6119 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6120 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6121

6121:                                             ; preds = %6116, %6112, %6106
  %6122 = phi i32 [ %6120, %6116 ], [ %6107, %6112 ], [ 0, %6106 ]
  %6123 = phi i32 [ %6119, %6116 ], [ %6108, %6112 ], [ 0, %6106 ]
  %6124 = icmp ne i32 %6123, 0
  %6125 = icmp ne i32 %6122, 0
  %6126 = select i1 %6124, i1 true, i1 %6125
  br i1 %6126, label %6127, label %6136

6127:                                             ; preds = %6121
  %6128 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6129 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6130 = icmp eq ptr %6129, %6128
  br i1 %6130, label %6136, label %6131

6131:                                             ; preds = %6127
  %6132 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6133 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1052, ptr noundef %6128, i32 noundef 676, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([40 x i8], ptr @.str.1052, i64 0, i64 10), ptr noundef %6132) #22
  store ptr %6133, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 676), align 16, !tbaa !6
  %6134 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6135 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6136

6136:                                             ; preds = %6131, %6127, %6121
  %6137 = phi i32 [ %6135, %6131 ], [ %6122, %6127 ], [ 0, %6121 ]
  %6138 = phi i32 [ %6134, %6131 ], [ %6123, %6127 ], [ 0, %6121 ]
  %6139 = icmp ne i32 %6138, 0
  %6140 = icmp ne i32 %6137, 0
  %6141 = select i1 %6139, i1 true, i1 %6140
  br i1 %6141, label %6142, label %6151

6142:                                             ; preds = %6136
  %6143 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 177), align 8, !tbaa !6
  %6144 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6145 = icmp eq ptr %6144, %6143
  br i1 %6145, label %6151, label %6146

6146:                                             ; preds = %6142
  %6147 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6148 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1053, ptr noundef %6143, i32 noundef 677, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([41 x i8], ptr @.str.1053, i64 0, i64 10), ptr noundef %6147) #22
  store ptr %6148, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 677), align 8, !tbaa !6
  %6149 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6150 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6151

6151:                                             ; preds = %6146, %6142, %6136
  %6152 = phi i32 [ %6150, %6146 ], [ %6137, %6142 ], [ 0, %6136 ]
  %6153 = phi i32 [ %6149, %6146 ], [ %6138, %6142 ], [ 0, %6136 ]
  %6154 = icmp ne i32 %6153, 0
  %6155 = icmp ne i32 %6152, 0
  %6156 = select i1 %6154, i1 true, i1 %6155
  br i1 %6156, label %6157, label %6166

6157:                                             ; preds = %6151
  %6158 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 232), align 32, !tbaa !6
  %6159 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6160 = icmp eq ptr %6159, %6158
  br i1 %6160, label %6166, label %6161

6161:                                             ; preds = %6157
  %6162 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6163 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1054, ptr noundef %6158, i32 noundef 678, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([37 x i8], ptr @.str.1054, i64 0, i64 10), ptr noundef %6162) #22
  store ptr %6163, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 678), align 16, !tbaa !6
  %6164 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6165 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6166

6166:                                             ; preds = %6161, %6157, %6151
  %6167 = phi i32 [ %6165, %6161 ], [ %6152, %6157 ], [ 0, %6151 ]
  %6168 = phi i32 [ %6164, %6161 ], [ %6153, %6157 ], [ 0, %6151 ]
  %6169 = icmp ne i32 %6168, 0
  %6170 = icmp ne i32 %6167, 0
  %6171 = select i1 %6169, i1 true, i1 %6170
  br i1 %6171, label %6172, label %6181

6172:                                             ; preds = %6166
  %6173 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 232), align 32, !tbaa !6
  %6174 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6175 = icmp eq ptr %6174, %6173
  br i1 %6175, label %6181, label %6176

6176:                                             ; preds = %6172
  %6177 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6178 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1055, ptr noundef %6173, i32 noundef 679, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([38 x i8], ptr @.str.1055, i64 0, i64 10), ptr noundef %6177) #22
  store ptr %6178, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 679), align 8, !tbaa !6
  %6179 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6180 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6181

6181:                                             ; preds = %6176, %6172, %6166
  %6182 = phi i32 [ %6180, %6176 ], [ %6167, %6172 ], [ 0, %6166 ]
  %6183 = phi i32 [ %6179, %6176 ], [ %6168, %6172 ], [ 0, %6166 ]
  %6184 = icmp ne i32 %6183, 0
  %6185 = icmp ne i32 %6182, 0
  %6186 = select i1 %6184, i1 true, i1 %6185
  br i1 %6186, label %6187, label %6196

6187:                                             ; preds = %6181
  %6188 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 232), align 32, !tbaa !6
  %6189 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6190 = icmp eq ptr %6189, %6188
  br i1 %6190, label %6196, label %6191

6191:                                             ; preds = %6187
  %6192 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6193 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1056, ptr noundef %6188, i32 noundef 680, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([37 x i8], ptr @.str.1056, i64 0, i64 10), ptr noundef %6192) #22
  store ptr %6193, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 680), align 16, !tbaa !6
  %6194 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6195 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6196

6196:                                             ; preds = %6191, %6187, %6181
  %6197 = phi i32 [ %6195, %6191 ], [ %6182, %6187 ], [ 0, %6181 ]
  %6198 = phi i32 [ %6194, %6191 ], [ %6183, %6187 ], [ 0, %6181 ]
  %6199 = icmp ne i32 %6198, 0
  %6200 = icmp ne i32 %6197, 0
  %6201 = select i1 %6199, i1 true, i1 %6200
  br i1 %6201, label %6202, label %6211

6202:                                             ; preds = %6196
  %6203 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 229), align 8, !tbaa !6
  %6204 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6205 = icmp eq ptr %6204, %6203
  br i1 %6205, label %6211, label %6206

6206:                                             ; preds = %6202
  %6207 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6208 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1057, ptr noundef %6203, i32 noundef 681, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([38 x i8], ptr @.str.1057, i64 0, i64 10), ptr noundef %6207) #22
  store ptr %6208, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 681), align 8, !tbaa !6
  %6209 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6210 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6211

6211:                                             ; preds = %6206, %6202, %6196
  %6212 = phi i32 [ %6210, %6206 ], [ %6197, %6202 ], [ 0, %6196 ]
  %6213 = phi i32 [ %6209, %6206 ], [ %6198, %6202 ], [ 0, %6196 ]
  %6214 = icmp ne i32 %6213, 0
  %6215 = icmp ne i32 %6212, 0
  %6216 = select i1 %6214, i1 true, i1 %6215
  br i1 %6216, label %6217, label %6226

6217:                                             ; preds = %6211
  %6218 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 232), align 32, !tbaa !6
  %6219 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6220 = icmp eq ptr %6219, %6218
  br i1 %6220, label %6226, label %6221

6221:                                             ; preds = %6217
  %6222 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6223 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1058, ptr noundef %6218, i32 noundef 682, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([45 x i8], ptr @.str.1058, i64 0, i64 10), ptr noundef %6222) #22
  store ptr %6223, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 682), align 16, !tbaa !6
  %6224 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6225 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6226

6226:                                             ; preds = %6221, %6217, %6211
  %6227 = phi i32 [ %6225, %6221 ], [ %6212, %6217 ], [ 0, %6211 ]
  %6228 = phi i32 [ %6224, %6221 ], [ %6213, %6217 ], [ 0, %6211 ]
  %6229 = icmp ne i32 %6228, 0
  %6230 = icmp ne i32 %6227, 0
  %6231 = select i1 %6229, i1 true, i1 %6230
  br i1 %6231, label %6232, label %6241

6232:                                             ; preds = %6226
  %6233 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 232), align 32, !tbaa !6
  %6234 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6235 = icmp eq ptr %6234, %6233
  br i1 %6235, label %6241, label %6236

6236:                                             ; preds = %6232
  %6237 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6238 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1059, ptr noundef %6233, i32 noundef 683, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([46 x i8], ptr @.str.1059, i64 0, i64 10), ptr noundef %6237) #22
  store ptr %6238, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 683), align 8, !tbaa !6
  %6239 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6240 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6241

6241:                                             ; preds = %6236, %6232, %6226
  %6242 = phi i32 [ %6240, %6236 ], [ %6227, %6232 ], [ 0, %6226 ]
  %6243 = phi i32 [ %6239, %6236 ], [ %6228, %6232 ], [ 0, %6226 ]
  %6244 = icmp ne i32 %6243, 0
  %6245 = icmp ne i32 %6242, 0
  %6246 = select i1 %6244, i1 true, i1 %6245
  br i1 %6246, label %6247, label %6256

6247:                                             ; preds = %6241
  %6248 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 232), align 32, !tbaa !6
  %6249 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6250 = icmp eq ptr %6249, %6248
  br i1 %6250, label %6256, label %6251

6251:                                             ; preds = %6247
  %6252 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6253 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1060, ptr noundef %6248, i32 noundef 684, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([45 x i8], ptr @.str.1060, i64 0, i64 10), ptr noundef %6252) #22
  store ptr %6253, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 684), align 16, !tbaa !6
  %6254 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6255 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6256

6256:                                             ; preds = %6251, %6247, %6241
  %6257 = phi i32 [ %6255, %6251 ], [ %6242, %6247 ], [ 0, %6241 ]
  %6258 = phi i32 [ %6254, %6251 ], [ %6243, %6247 ], [ 0, %6241 ]
  %6259 = icmp ne i32 %6258, 0
  %6260 = icmp ne i32 %6257, 0
  %6261 = select i1 %6259, i1 true, i1 %6260
  br i1 %6261, label %6262, label %6271

6262:                                             ; preds = %6256
  %6263 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 229), align 8, !tbaa !6
  %6264 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6265 = icmp eq ptr %6264, %6263
  br i1 %6265, label %6271, label %6266

6266:                                             ; preds = %6262
  %6267 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6268 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1061, ptr noundef %6263, i32 noundef 685, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([46 x i8], ptr @.str.1061, i64 0, i64 10), ptr noundef %6267) #22
  store ptr %6268, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 685), align 8, !tbaa !6
  %6269 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6270 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6271

6271:                                             ; preds = %6266, %6262, %6256
  %6272 = phi i32 [ %6270, %6266 ], [ %6257, %6262 ], [ 0, %6256 ]
  %6273 = phi i32 [ %6269, %6266 ], [ %6258, %6262 ], [ 0, %6256 ]
  %6274 = icmp ne i32 %6273, 0
  %6275 = icmp ne i32 %6272, 0
  %6276 = select i1 %6274, i1 true, i1 %6275
  br i1 %6276, label %6277, label %6286

6277:                                             ; preds = %6271
  %6278 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6279 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6280 = icmp eq ptr %6279, %6278
  br i1 %6280, label %6286, label %6281

6281:                                             ; preds = %6277
  %6282 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6283 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1062, ptr noundef %6278, i32 noundef 686, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([36 x i8], ptr @.str.1062, i64 0, i64 10), ptr noundef %6282) #22
  store ptr %6283, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 686), align 16, !tbaa !6
  %6284 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6285 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6286

6286:                                             ; preds = %6281, %6277, %6271
  %6287 = phi i32 [ %6285, %6281 ], [ %6272, %6277 ], [ 0, %6271 ]
  %6288 = phi i32 [ %6284, %6281 ], [ %6273, %6277 ], [ 0, %6271 ]
  %6289 = icmp ne i32 %6288, 0
  %6290 = icmp ne i32 %6287, 0
  %6291 = select i1 %6289, i1 true, i1 %6290
  br i1 %6291, label %6292, label %6301

6292:                                             ; preds = %6286
  %6293 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6294 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6295 = icmp eq ptr %6294, %6293
  br i1 %6295, label %6301, label %6296

6296:                                             ; preds = %6292
  %6297 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6298 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1063, ptr noundef %6293, i32 noundef 687, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([37 x i8], ptr @.str.1063, i64 0, i64 10), ptr noundef %6297) #22
  store ptr %6298, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 687), align 8, !tbaa !6
  %6299 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6300 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6301

6301:                                             ; preds = %6296, %6292, %6286
  %6302 = phi i32 [ %6300, %6296 ], [ %6287, %6292 ], [ 0, %6286 ]
  %6303 = phi i32 [ %6299, %6296 ], [ %6288, %6292 ], [ 0, %6286 ]
  %6304 = icmp ne i32 %6303, 0
  %6305 = icmp ne i32 %6302, 0
  %6306 = select i1 %6304, i1 true, i1 %6305
  br i1 %6306, label %6307, label %6316

6307:                                             ; preds = %6301
  %6308 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6309 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6310 = icmp eq ptr %6309, %6308
  br i1 %6310, label %6316, label %6311

6311:                                             ; preds = %6307
  %6312 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6313 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1064, ptr noundef %6308, i32 noundef 688, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([36 x i8], ptr @.str.1064, i64 0, i64 10), ptr noundef %6312) #22
  store ptr %6313, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 688), align 16, !tbaa !6
  %6314 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6315 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6316

6316:                                             ; preds = %6311, %6307, %6301
  %6317 = phi i32 [ %6315, %6311 ], [ %6302, %6307 ], [ 0, %6301 ]
  %6318 = phi i32 [ %6314, %6311 ], [ %6303, %6307 ], [ 0, %6301 ]
  %6319 = icmp ne i32 %6318, 0
  %6320 = icmp ne i32 %6317, 0
  %6321 = select i1 %6319, i1 true, i1 %6320
  br i1 %6321, label %6322, label %6331

6322:                                             ; preds = %6316
  %6323 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6324 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6325 = icmp eq ptr %6324, %6323
  br i1 %6325, label %6331, label %6326

6326:                                             ; preds = %6322
  %6327 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6328 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1065, ptr noundef %6323, i32 noundef 689, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([37 x i8], ptr @.str.1065, i64 0, i64 10), ptr noundef %6327) #22
  store ptr %6328, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 689), align 8, !tbaa !6
  %6329 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6330 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6331

6331:                                             ; preds = %6326, %6322, %6316
  %6332 = phi i32 [ %6330, %6326 ], [ %6317, %6322 ], [ 0, %6316 ]
  %6333 = phi i32 [ %6329, %6326 ], [ %6318, %6322 ], [ 0, %6316 ]
  %6334 = icmp ne i32 %6333, 0
  %6335 = icmp ne i32 %6332, 0
  %6336 = select i1 %6334, i1 true, i1 %6335
  br i1 %6336, label %6337, label %6346

6337:                                             ; preds = %6331
  %6338 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6339 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6340 = icmp eq ptr %6339, %6338
  br i1 %6340, label %6346, label %6341

6341:                                             ; preds = %6337
  %6342 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6343 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1066, ptr noundef %6338, i32 noundef 690, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([44 x i8], ptr @.str.1066, i64 0, i64 10), ptr noundef %6342) #22
  store ptr %6343, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 690), align 16, !tbaa !6
  %6344 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6345 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6346

6346:                                             ; preds = %6341, %6337, %6331
  %6347 = phi i32 [ %6345, %6341 ], [ %6332, %6337 ], [ 0, %6331 ]
  %6348 = phi i32 [ %6344, %6341 ], [ %6333, %6337 ], [ 0, %6331 ]
  %6349 = icmp ne i32 %6348, 0
  %6350 = icmp ne i32 %6347, 0
  %6351 = select i1 %6349, i1 true, i1 %6350
  br i1 %6351, label %6352, label %6361

6352:                                             ; preds = %6346
  %6353 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6354 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6355 = icmp eq ptr %6354, %6353
  br i1 %6355, label %6361, label %6356

6356:                                             ; preds = %6352
  %6357 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6358 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1067, ptr noundef %6353, i32 noundef 691, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([45 x i8], ptr @.str.1067, i64 0, i64 10), ptr noundef %6357) #22
  store ptr %6358, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 691), align 8, !tbaa !6
  %6359 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6360 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6361

6361:                                             ; preds = %6356, %6352, %6346
  %6362 = phi i32 [ %6360, %6356 ], [ %6347, %6352 ], [ 0, %6346 ]
  %6363 = phi i32 [ %6359, %6356 ], [ %6348, %6352 ], [ 0, %6346 ]
  %6364 = icmp ne i32 %6363, 0
  %6365 = icmp ne i32 %6362, 0
  %6366 = select i1 %6364, i1 true, i1 %6365
  br i1 %6366, label %6367, label %6376

6367:                                             ; preds = %6361
  %6368 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6369 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6370 = icmp eq ptr %6369, %6368
  br i1 %6370, label %6376, label %6371

6371:                                             ; preds = %6367
  %6372 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6373 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1068, ptr noundef %6368, i32 noundef 692, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([44 x i8], ptr @.str.1068, i64 0, i64 10), ptr noundef %6372) #22
  store ptr %6373, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 692), align 16, !tbaa !6
  %6374 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6375 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6376

6376:                                             ; preds = %6371, %6367, %6361
  %6377 = phi i32 [ %6375, %6371 ], [ %6362, %6367 ], [ 0, %6361 ]
  %6378 = phi i32 [ %6374, %6371 ], [ %6363, %6367 ], [ 0, %6361 ]
  %6379 = icmp ne i32 %6378, 0
  %6380 = icmp ne i32 %6377, 0
  %6381 = select i1 %6379, i1 true, i1 %6380
  br i1 %6381, label %6382, label %6391

6382:                                             ; preds = %6376
  %6383 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 178), align 16, !tbaa !6
  %6384 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6385 = icmp eq ptr %6384, %6383
  br i1 %6385, label %6391, label %6386

6386:                                             ; preds = %6382
  %6387 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6388 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1069, ptr noundef %6383, i32 noundef 693, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([45 x i8], ptr @.str.1069, i64 0, i64 10), ptr noundef %6387) #22
  store ptr %6388, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 693), align 8, !tbaa !6
  %6389 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6390 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6391

6391:                                             ; preds = %6386, %6382, %6376
  %6392 = phi i32 [ %6390, %6386 ], [ %6377, %6382 ], [ 0, %6376 ]
  %6393 = phi i32 [ %6389, %6386 ], [ %6378, %6382 ], [ 0, %6376 ]
  %6394 = icmp ne i32 %6393, 0
  %6395 = icmp ne i32 %6392, 0
  %6396 = select i1 %6394, i1 true, i1 %6395
  br i1 %6396, label %6397, label %6406

6397:                                             ; preds = %6391
  %6398 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 230), align 16, !tbaa !6
  %6399 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6400 = icmp eq ptr %6399, %6398
  br i1 %6400, label %6406, label %6401

6401:                                             ; preds = %6397
  %6402 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6403 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1070, ptr noundef %6398, i32 noundef 694, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([42 x i8], ptr @.str.1070, i64 0, i64 10), ptr noundef %6402) #22
  store ptr %6403, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 694), align 16, !tbaa !6
  %6404 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6405 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6406

6406:                                             ; preds = %6401, %6397, %6391
  %6407 = phi i32 [ %6405, %6401 ], [ %6392, %6397 ], [ 0, %6391 ]
  %6408 = phi i32 [ %6404, %6401 ], [ %6393, %6397 ], [ 0, %6391 ]
  %6409 = icmp ne i32 %6408, 0
  %6410 = icmp ne i32 %6407, 0
  %6411 = select i1 %6409, i1 true, i1 %6410
  br i1 %6411, label %6412, label %6421

6412:                                             ; preds = %6406
  %6413 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 230), align 16, !tbaa !6
  %6414 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6415 = icmp eq ptr %6414, %6413
  br i1 %6415, label %6421, label %6416

6416:                                             ; preds = %6412
  %6417 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6418 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1071, ptr noundef %6413, i32 noundef 695, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([43 x i8], ptr @.str.1071, i64 0, i64 10), ptr noundef %6417) #22
  store ptr %6418, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 695), align 8, !tbaa !6
  %6419 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6420 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6421

6421:                                             ; preds = %6416, %6412, %6406
  %6422 = phi i32 [ %6420, %6416 ], [ %6407, %6412 ], [ 0, %6406 ]
  %6423 = phi i32 [ %6419, %6416 ], [ %6408, %6412 ], [ 0, %6406 ]
  %6424 = icmp ne i32 %6423, 0
  %6425 = icmp ne i32 %6422, 0
  %6426 = select i1 %6424, i1 true, i1 %6425
  br i1 %6426, label %6427, label %6436

6427:                                             ; preds = %6421
  %6428 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 230), align 16, !tbaa !6
  %6429 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6430 = icmp eq ptr %6429, %6428
  br i1 %6430, label %6436, label %6431

6431:                                             ; preds = %6427
  %6432 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6433 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1072, ptr noundef %6428, i32 noundef 696, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([42 x i8], ptr @.str.1072, i64 0, i64 10), ptr noundef %6432) #22
  store ptr %6433, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 696), align 16, !tbaa !6
  %6434 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6435 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6436

6436:                                             ; preds = %6431, %6427, %6421
  %6437 = phi i32 [ %6435, %6431 ], [ %6422, %6427 ], [ 0, %6421 ]
  %6438 = phi i32 [ %6434, %6431 ], [ %6423, %6427 ], [ 0, %6421 ]
  %6439 = icmp ne i32 %6438, 0
  %6440 = icmp ne i32 %6437, 0
  %6441 = select i1 %6439, i1 true, i1 %6440
  br i1 %6441, label %6442, label %6451

6442:                                             ; preds = %6436
  %6443 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 228), align 32, !tbaa !6
  %6444 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6445 = icmp eq ptr %6444, %6443
  br i1 %6445, label %6451, label %6446

6446:                                             ; preds = %6442
  %6447 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6448 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1073, ptr noundef %6443, i32 noundef 697, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([43 x i8], ptr @.str.1073, i64 0, i64 10), ptr noundef %6447) #22
  store ptr %6448, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 697), align 8, !tbaa !6
  %6449 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6450 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6451

6451:                                             ; preds = %6446, %6442, %6436
  %6452 = phi i32 [ %6450, %6446 ], [ %6437, %6442 ], [ 0, %6436 ]
  %6453 = phi i32 [ %6449, %6446 ], [ %6438, %6442 ], [ 0, %6436 ]
  %6454 = icmp ne i32 %6453, 0
  %6455 = icmp ne i32 %6452, 0
  %6456 = select i1 %6454, i1 true, i1 %6455
  br i1 %6456, label %6457, label %6466

6457:                                             ; preds = %6451
  %6458 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %6459 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6460 = icmp eq ptr %6459, %6458
  br i1 %6460, label %6466, label %6461

6461:                                             ; preds = %6457
  %6462 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6463 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1074, ptr noundef %6458, i32 noundef 698, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([24 x i8], ptr @.str.1074, i64 0, i64 10), ptr noundef %6462) #22
  store ptr %6463, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 698), align 16, !tbaa !6
  %6464 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6465 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6466

6466:                                             ; preds = %6461, %6457, %6451
  %6467 = phi i32 [ %6465, %6461 ], [ %6452, %6457 ], [ 0, %6451 ]
  %6468 = phi i32 [ %6464, %6461 ], [ %6453, %6457 ], [ 0, %6451 ]
  %6469 = icmp ne i32 %6468, 0
  %6470 = icmp ne i32 %6467, 0
  %6471 = select i1 %6469, i1 true, i1 %6470
  br i1 %6471, label %6472, label %6481

6472:                                             ; preds = %6466
  %6473 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %6474 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6475 = icmp eq ptr %6474, %6473
  br i1 %6475, label %6481, label %6476

6476:                                             ; preds = %6472
  %6477 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6478 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1075, ptr noundef %6473, i32 noundef 699, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([31 x i8], ptr @.str.1075, i64 0, i64 10), ptr noundef %6477) #22
  store ptr %6478, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 699), align 8, !tbaa !6
  %6479 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6480 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6481

6481:                                             ; preds = %6476, %6472, %6466
  %6482 = phi i32 [ %6480, %6476 ], [ %6467, %6472 ], [ 0, %6466 ]
  %6483 = phi i32 [ %6479, %6476 ], [ %6468, %6472 ], [ 0, %6466 ]
  %6484 = icmp ne i32 %6483, 0
  %6485 = icmp ne i32 %6482, 0
  %6486 = select i1 %6484, i1 true, i1 %6485
  br i1 %6486, label %6487, label %6496

6487:                                             ; preds = %6481
  %6488 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %6489 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6490 = icmp eq ptr %6489, %6488
  br i1 %6490, label %6496, label %6491

6491:                                             ; preds = %6487
  %6492 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6493 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1076, ptr noundef %6488, i32 noundef 700, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([29 x i8], ptr @.str.1076, i64 0, i64 10), ptr noundef %6492) #22
  store ptr %6493, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 700), align 16, !tbaa !6
  %6494 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6495 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6496

6496:                                             ; preds = %6491, %6487, %6481
  %6497 = phi i32 [ %6495, %6491 ], [ %6482, %6487 ], [ 0, %6481 ]
  %6498 = phi i32 [ %6494, %6491 ], [ %6483, %6487 ], [ 0, %6481 ]
  %6499 = icmp ne i32 %6498, 0
  %6500 = icmp ne i32 %6497, 0
  %6501 = select i1 %6499, i1 true, i1 %6500
  br i1 %6501, label %6502, label %6511

6502:                                             ; preds = %6496
  %6503 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %6504 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6505 = icmp eq ptr %6504, %6503
  br i1 %6505, label %6511, label %6506

6506:                                             ; preds = %6502
  %6507 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6508 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1077, ptr noundef %6503, i32 noundef 701, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([27 x i8], ptr @.str.1077, i64 0, i64 10), ptr noundef %6507) #22
  store ptr %6508, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 701), align 8, !tbaa !6
  %6509 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6510 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6511

6511:                                             ; preds = %6506, %6502, %6496
  %6512 = phi i32 [ %6510, %6506 ], [ %6497, %6502 ], [ 0, %6496 ]
  %6513 = phi i32 [ %6509, %6506 ], [ %6498, %6502 ], [ 0, %6496 ]
  %6514 = icmp ne i32 %6513, 0
  %6515 = icmp ne i32 %6512, 0
  %6516 = select i1 %6514, i1 true, i1 %6515
  br i1 %6516, label %6517, label %6526

6517:                                             ; preds = %6511
  %6518 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 213), align 8, !tbaa !6
  %6519 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6520 = icmp eq ptr %6519, %6518
  br i1 %6520, label %6526, label %6521

6521:                                             ; preds = %6517
  %6522 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6523 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1078, ptr noundef %6518, i32 noundef 702, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([30 x i8], ptr @.str.1078, i64 0, i64 10), ptr noundef %6522) #22
  store ptr %6523, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 702), align 16, !tbaa !6
  %6524 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6525 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6526

6526:                                             ; preds = %6521, %6517, %6511
  %6527 = phi i32 [ %6525, %6521 ], [ %6512, %6517 ], [ 0, %6511 ]
  %6528 = phi i32 [ %6524, %6521 ], [ %6513, %6517 ], [ 0, %6511 ]
  %6529 = icmp ne i32 %6528, 0
  %6530 = icmp ne i32 %6527, 0
  %6531 = select i1 %6529, i1 true, i1 %6530
  br i1 %6531, label %6532, label %6541

6532:                                             ; preds = %6526
  %6533 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %6534 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6535 = icmp eq ptr %6534, %6533
  br i1 %6535, label %6541, label %6536

6536:                                             ; preds = %6532
  %6537 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6538 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1079, ptr noundef %6533, i32 noundef 703, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([28 x i8], ptr @.str.1079, i64 0, i64 10), ptr noundef %6537) #22
  store ptr %6538, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 703), align 8, !tbaa !6
  %6539 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6540 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6541

6541:                                             ; preds = %6536, %6532, %6526
  %6542 = phi i32 [ %6540, %6536 ], [ %6527, %6532 ], [ 0, %6526 ]
  %6543 = phi i32 [ %6539, %6536 ], [ %6528, %6532 ], [ 0, %6526 ]
  %6544 = icmp ne i32 %6543, 0
  %6545 = icmp ne i32 %6542, 0
  %6546 = select i1 %6544, i1 true, i1 %6545
  br i1 %6546, label %6547, label %6556

6547:                                             ; preds = %6541
  %6548 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 231), align 8, !tbaa !6
  %6549 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6550 = icmp eq ptr %6549, %6548
  br i1 %6550, label %6556, label %6551

6551:                                             ; preds = %6547
  %6552 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6553 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1080, ptr noundef %6548, i32 noundef 704, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([20 x i8], ptr @.str.1080, i64 0, i64 10), ptr noundef %6552) #22
  store ptr %6553, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 704), align 16, !tbaa !6
  %6554 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6555 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6556

6556:                                             ; preds = %6551, %6547, %6541
  %6557 = phi i32 [ %6555, %6551 ], [ %6542, %6547 ], [ 0, %6541 ]
  %6558 = phi i32 [ %6554, %6551 ], [ %6543, %6547 ], [ 0, %6541 ]
  %6559 = icmp ne i32 %6558, 0
  %6560 = icmp ne i32 %6557, 0
  %6561 = select i1 %6559, i1 true, i1 %6560
  br i1 %6561, label %6562, label %6571

6562:                                             ; preds = %6556
  %6563 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 123), align 8, !tbaa !6
  %6564 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6565 = icmp eq ptr %6564, %6563
  br i1 %6565, label %6571, label %6566

6566:                                             ; preds = %6562
  %6567 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6568 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1081, ptr noundef %6563, i32 noundef 705, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([30 x i8], ptr @.str.1081, i64 0, i64 10), ptr noundef %6567) #22
  store ptr %6568, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 705), align 8, !tbaa !6
  %6569 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6570 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6571

6571:                                             ; preds = %6566, %6562, %6556
  %6572 = phi i32 [ %6570, %6566 ], [ %6557, %6562 ], [ 0, %6556 ]
  %6573 = phi i32 [ %6569, %6566 ], [ %6558, %6562 ], [ 0, %6556 ]
  %6574 = icmp ne i32 %6573, 0
  %6575 = icmp ne i32 %6572, 0
  %6576 = select i1 %6574, i1 true, i1 %6575
  br i1 %6576, label %6577, label %6586

6577:                                             ; preds = %6571
  %6578 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 57), align 8, !tbaa !6
  %6579 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6580 = icmp eq ptr %6579, %6578
  br i1 %6580, label %6586, label %6581

6581:                                             ; preds = %6577
  %6582 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6583 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1082, ptr noundef %6578, i32 noundef 706, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([29 x i8], ptr @.str.1082, i64 0, i64 10), ptr noundef %6582) #22
  store ptr %6583, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 706), align 16, !tbaa !6
  %6584 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6585 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6586

6586:                                             ; preds = %6581, %6577, %6571
  %6587 = phi i32 [ %6585, %6581 ], [ %6572, %6577 ], [ 0, %6571 ]
  %6588 = phi i32 [ %6584, %6581 ], [ %6573, %6577 ], [ 0, %6571 ]
  %6589 = icmp ne i32 %6588, 0
  %6590 = icmp ne i32 %6587, 0
  %6591 = select i1 %6589, i1 true, i1 %6590
  br i1 %6591, label %6592, label %6601

6592:                                             ; preds = %6586
  %6593 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 222), align 16, !tbaa !6
  %6594 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6595 = icmp eq ptr %6594, %6593
  br i1 %6595, label %6601, label %6596

6596:                                             ; preds = %6592
  %6597 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6598 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1083, ptr noundef %6593, i32 noundef 707, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([39 x i8], ptr @.str.1083, i64 0, i64 10), ptr noundef %6597) #22
  store ptr %6598, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 707), align 8, !tbaa !6
  %6599 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6600 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6601

6601:                                             ; preds = %6596, %6592, %6586
  %6602 = phi i32 [ %6600, %6596 ], [ %6587, %6592 ], [ 0, %6586 ]
  %6603 = phi i32 [ %6599, %6596 ], [ %6588, %6592 ], [ 0, %6586 ]
  %6604 = icmp ne i32 %6603, 0
  %6605 = icmp ne i32 %6602, 0
  %6606 = select i1 %6604, i1 true, i1 %6605
  br i1 %6606, label %6607, label %6616

6607:                                             ; preds = %6601
  %6608 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %6609 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6610 = icmp eq ptr %6609, %6608
  br i1 %6610, label %6616, label %6611

6611:                                             ; preds = %6607
  %6612 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6613 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1084, ptr noundef %6608, i32 noundef 708, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([28 x i8], ptr @.str.1084, i64 0, i64 10), ptr noundef %6612) #22
  store ptr %6613, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 708), align 16, !tbaa !6
  %6614 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6615 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6616

6616:                                             ; preds = %6611, %6607, %6601
  %6617 = phi i32 [ %6615, %6611 ], [ %6602, %6607 ], [ 0, %6601 ]
  %6618 = phi i32 [ %6614, %6611 ], [ %6603, %6607 ], [ 0, %6601 ]
  %6619 = icmp ne i32 %6618, 0
  %6620 = icmp ne i32 %6617, 0
  %6621 = select i1 %6619, i1 true, i1 %6620
  br i1 %6621, label %6622, label %6631

6622:                                             ; preds = %6616
  %6623 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 52), align 32, !tbaa !6
  %6624 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6625 = icmp eq ptr %6624, %6623
  br i1 %6625, label %6631, label %6626

6626:                                             ; preds = %6622
  %6627 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6628 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1085, ptr noundef %6623, i32 noundef 709, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([35 x i8], ptr @.str.1085, i64 0, i64 10), ptr noundef %6627) #22
  store ptr %6628, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 709), align 8, !tbaa !6
  %6629 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6630 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6631

6631:                                             ; preds = %6626, %6622, %6616
  %6632 = phi i32 [ %6630, %6626 ], [ %6617, %6622 ], [ 0, %6616 ]
  %6633 = phi i32 [ %6629, %6626 ], [ %6618, %6622 ], [ 0, %6616 ]
  %6634 = icmp ne i32 %6633, 0
  %6635 = icmp ne i32 %6632, 0
  %6636 = select i1 %6634, i1 true, i1 %6635
  br i1 %6636, label %6637, label %6646

6637:                                             ; preds = %6631
  %6638 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 53), align 8, !tbaa !6
  %6639 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6640 = icmp eq ptr %6639, %6638
  br i1 %6640, label %6646, label %6641

6641:                                             ; preds = %6637
  %6642 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6643 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1086, ptr noundef %6638, i32 noundef 710, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([28 x i8], ptr @.str.1086, i64 0, i64 10), ptr noundef %6642) #22
  store ptr %6643, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 710), align 16, !tbaa !6
  %6644 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6645 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6646

6646:                                             ; preds = %6641, %6637, %6631
  %6647 = phi i32 [ %6645, %6641 ], [ %6632, %6637 ], [ 0, %6631 ]
  %6648 = phi i32 [ %6644, %6641 ], [ %6633, %6637 ], [ 0, %6631 ]
  %6649 = icmp ne i32 %6648, 0
  %6650 = icmp ne i32 %6647, 0
  %6651 = select i1 %6649, i1 true, i1 %6650
  br i1 %6651, label %6652, label %6661

6652:                                             ; preds = %6646
  %6653 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 54), align 16, !tbaa !6
  %6654 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6655 = icmp eq ptr %6654, %6653
  br i1 %6655, label %6661, label %6656

6656:                                             ; preds = %6652
  %6657 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6658 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1087, ptr noundef %6653, i32 noundef 711, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([33 x i8], ptr @.str.1087, i64 0, i64 10), ptr noundef %6657) #22
  store ptr %6658, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 711), align 8, !tbaa !6
  %6659 = load i32, ptr @flag_openmp, align 4, !tbaa !21
  %6660 = load i32, ptr @flag_tree_parallelize_loops, align 4
  br label %6661

6661:                                             ; preds = %6656, %6652, %6646
  %6662 = phi i32 [ %6660, %6656 ], [ %6647, %6652 ], [ 0, %6646 ]
  %6663 = phi i32 [ %6659, %6656 ], [ %6648, %6652 ], [ 0, %6646 ]
  %6664 = icmp ne i32 %6663, 0
  %6665 = icmp ne i32 %6662, 0
  %6666 = select i1 %6664, i1 true, i1 %6665
  br i1 %6666, label %6667, label %6674

6667:                                             ; preds = %6661
  %6668 = load ptr, ptr getelementptr inbounds ([252 x ptr], ptr @builtin_types, i64 0, i64 102), align 16, !tbaa !6
  %6669 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6670 = icmp eq ptr %6669, %6668
  br i1 %6670, label %6674, label %6671

6671:                                             ; preds = %6667
  %6672 = load ptr, ptr getelementptr inbounds ([107 x ptr], ptr @built_in_attributes, i64 0, i64 45), align 8, !tbaa !6
  %6673 = tail call ptr @add_builtin_function(ptr noundef nonnull @.str.1088, ptr noundef %6668, i32 noundef 712, i32 noundef 3, ptr noundef nonnull getelementptr inbounds ([31 x i8], ptr @.str.1088, i64 0, i64 10), ptr noundef %6672) #22
  store ptr %6673, ptr getelementptr inbounds ([721 x ptr], ptr @built_in_decls, i64 0, i64 712), align 16, !tbaa !6
  br label %6674

6674:                                             ; preds = %6671, %6667, %6661
  %6675 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 23), align 8, !tbaa !150
  tail call void %6675() #22
  tail call void @build_common_builtin_nodes() #22
  %6676 = load i32, ptr @flag_mudflap, align 4, !tbaa !21
  %6677 = icmp eq i32 %6676, 0
  br i1 %6677, label %6679, label %6678

6678:                                             ; preds = %6674
  tail call void @mudflap_init() #22
  br label %6679

6679:                                             ; preds = %6678, %6674
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @builtin_type_for_size(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = load ptr, ptr getelementptr inbounds (%struct.lang_hooks, ptr @lang_hooks, i64 0, i32 34, i32 3), align 8, !tbaa !147
  %4 = zext i8 %1 to i32
  %5 = tail call ptr %3(i32 noundef %0, i32 noundef %4) #22
  %6 = icmp eq ptr %5, null
  %7 = load ptr, ptr @global_trees, align 16
  %8 = select i1 %6, ptr %7, ptr %5
  ret ptr %8
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @def_fn_type(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, i32 noundef %3, ...) unnamed_addr #9 {
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #22
  call void @llvm.va_start(ptr nonnull %5)
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %35

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.__va_list_tag, ptr %5, i64 0, i32 2
  %9 = getelementptr inbounds %struct.__va_list_tag, ptr %5, i64 0, i32 3
  br label %10

10:                                               ; preds = %7, %31
  %11 = phi ptr [ null, %7 ], [ %32, %31 ]
  %12 = phi i32 [ 0, %7 ], [ %33, %31 ]
  %13 = load i32, ptr %5, align 16
  %14 = icmp ult i32 %13, 41
  br i1 %14, label %15, label %20

15:                                               ; preds = %10
  %16 = load ptr, ptr %9, align 16
  %17 = zext i32 %13 to i64
  %18 = getelementptr i8, ptr %16, i64 %17
  %19 = add nuw nsw i32 %13, 8
  store i32 %19, ptr %5, align 16
  br label %23

20:                                               ; preds = %10
  %21 = load ptr, ptr %8, align 8
  %22 = getelementptr i8, ptr %21, i64 8
  store ptr %22, ptr %8, align 8
  br label %23

23:                                               ; preds = %20, %15
  %24 = phi ptr [ %18, %15 ], [ %21, %20 ]
  %25 = load i32, ptr %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [252 x ptr], ptr @builtin_types, i64 0, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !6
  %29 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %30 = icmp eq ptr %28, %29
  br i1 %30, label %51, label %31

31:                                               ; preds = %23
  %32 = call ptr @tree_cons_stat(ptr noundef null, ptr noundef %28, ptr noundef %11) #22
  %33 = add nuw nsw i32 %12, 1
  %34 = icmp eq i32 %33, %3
  br i1 %34, label %35, label %10, !llvm.loop !151

35:                                               ; preds = %31, %4
  %36 = phi ptr [ null, %4 ], [ %32, %31 ]
  call void @llvm.va_end(ptr nonnull %5)
  %37 = call ptr @nreverse(ptr noundef %36) #22
  %38 = icmp eq i8 %2, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %35
  %40 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %41 = call ptr @chainon(ptr noundef %37, ptr noundef %40) #22
  br label %42

42:                                               ; preds = %39, %35
  %43 = phi ptr [ %37, %35 ], [ %41, %39 ]
  %44 = zext i32 %1 to i64
  %45 = getelementptr inbounds [252 x ptr], ptr @builtin_types, i64 0, i64 %44
  %46 = load ptr, ptr %45, align 8, !tbaa !6
  %47 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %48 = icmp eq ptr %46, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %42
  %50 = call ptr @build_function_type(ptr noundef %46, ptr noundef %43) #22
  br label %51

51:                                               ; preds = %23, %42, %49
  %52 = phi ptr [ %46, %42 ], [ %50, %49 ], [ %28, %23 ]
  %53 = zext i32 %0 to i64
  %54 = getelementptr inbounds [252 x ptr], ptr @builtin_types, i64 0, i64 %53
  store ptr %52, ptr %54, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #22
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @def_builtin_1(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i8 noundef zeroext %4, i8 noundef zeroext %5, i8 noundef zeroext %6, ptr noundef %7, i8 noundef zeroext %8) unnamed_addr #9 {
  %10 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %11 = icmp eq ptr %10, %2
  br i1 %11, label %53, label %12

12:                                               ; preds = %9
  %13 = or i8 %5, %4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(11) @.str.1097, i64 noundef 10)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 5193, ptr noundef nonnull @.str.238) #22
  br label %19

19:                                               ; preds = %15, %12, %18
  %20 = getelementptr inbounds i8, ptr %1, i64 10
  %21 = icmp eq i8 %5, 0
  %22 = select i1 %21, ptr null, ptr %20
  %23 = tail call ptr @add_builtin_function(ptr noundef %1, ptr noundef %2, i32 noundef %0, i32 noundef 3, ptr noundef %22, ptr noundef %7) #22
  %24 = icmp eq i8 %4, 0
  %25 = load i32, ptr @flag_no_builtin, align 4
  %26 = icmp ne i32 %25, 0
  %27 = select i1 %24, i1 true, i1 %26
  br i1 %27, label %47, label %28

28:                                               ; preds = %19
  %29 = load ptr, ptr @disabled_builtins, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %40, label %35

31:                                               ; preds = %35
  %32 = getelementptr inbounds %struct.disabled_builtin, ptr %36, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !6
  %34 = icmp eq ptr %33, null
  br i1 %34, label %40, label %35, !llvm.loop !152

35:                                               ; preds = %28, %31
  %36 = phi ptr [ %33, %31 ], [ %29, %28 ]
  %37 = load ptr, ptr %36, align 8, !tbaa !153
  %38 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %20, ptr noundef nonnull dereferenceable(1) %37)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %47, label %31

40:                                               ; preds = %31, %28
  %41 = icmp ne i8 %6, 0
  %42 = load i32, ptr @flag_no_nonansi_builtin, align 4
  %43 = icmp ne i32 %42, 0
  %44 = select i1 %41, i1 %43, i1 false
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = tail call ptr @add_builtin_function(ptr noundef nonnull %20, ptr noundef %3, i32 noundef %0, i32 noundef 3, ptr noundef null, ptr noundef %7) #22
  br label %47

47:                                               ; preds = %35, %40, %45, %19
  %48 = sext i32 %0 to i64
  %49 = getelementptr inbounds [721 x ptr], ptr @built_in_decls, i64 0, i64 %48
  store ptr %23, ptr %49, align 8, !tbaa !6
  %50 = icmp eq i8 %8, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds [721 x ptr], ptr @implicit_built_in_decls, i64 0, i64 %48
  store ptr %23, ptr %52, align 8, !tbaa !6
  br label %53

53:                                               ; preds = %47, %51, %9
  ret void
}

declare void @build_common_builtin_nodes() local_unnamed_addr #3

declare void @mudflap_init() local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #18

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #18

declare ptr @nreverse(ptr noundef) local_unnamed_addr #3

declare ptr @chainon(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #10

declare ptr @add_builtin_function(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @set_compound_literal_name(ptr nocapture noundef writeonly %0) local_unnamed_addr #9 {
  %2 = alloca [50 x i8], align 16
  %3 = load i32, ptr @compound_literal_number, align 4, !tbaa !21
  %4 = sext i32 %3 to i64
  %5 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) @.str.1099, ptr noundef nonnull @.str.1098, i64 noundef %4)
  %6 = load i32, ptr @compound_literal_number, align 4, !tbaa !21
  %7 = add nsw i32 %6, 1
  store i32 %7, ptr @compound_literal_number, align 4, !tbaa !21
  %8 = call ptr @get_identifier(ptr noundef nonnull %2) #22
  %9 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  store ptr %8, ptr %9, align 8, !tbaa !17
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_va_arg(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = tail call ptr @build1_stat(i32 noundef 129, ptr noundef %2, ptr noundef %1) #22
  %5 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 1
  store i32 %0, ptr %5, align 8, !tbaa !17
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @disable_builtin_function(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %0, ptr noundef nonnull dereferenceable(11) @.str.1097, i64 noundef 10)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1100, ptr noundef %0) #22
  br label %9

5:                                                ; preds = %1
  %6 = tail call ptr @xmalloc(i64 noundef 16) #22
  store ptr %0, ptr %6, align 8, !tbaa !153
  %7 = load ptr, ptr @disabled_builtins, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.disabled_builtin, ptr %6, i64 0, i32 1
  store ptr %7, ptr %8, align 8, !tbaa !155
  store ptr %6, ptr @disabled_builtins, align 8, !tbaa !6
  br label %9

9:                                                ; preds = %5, %4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local zeroext i8 @c_promoting_integer_type_p(ptr nocapture noundef readonly %0) local_unnamed_addr #16 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %35 [
    i16 8, label %4
    i16 6, label %26
    i16 7, label %36
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 16
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = load <4 x ptr>, ptr @integer_types, align 16
  %8 = insertelement <4 x ptr> poison, ptr %6, i64 0
  %9 = shufflevector <4 x ptr> %8, <4 x ptr> poison, <4 x i32> zeroinitializer
  %10 = icmp eq <4 x ptr> %9, %7
  %11 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  %12 = icmp eq ptr %6, %11
  %13 = freeze <4 x i1> %10
  %14 = bitcast <4 x i1> %13 to i4
  %15 = icmp ne i4 %14, 0
  %16 = select i1 %15, i1 true, i1 %12
  br i1 %16, label %36, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 1023
  %21 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.tree_type, ptr %21, i64 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 1023
  %25 = icmp ult i32 %20, %24
  br label %36

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 6
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, 1023
  %30 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.tree_type, ptr %30, i64 0, i32 6
  %32 = load i32, ptr %31, align 4
  %33 = and i32 %32, 1023
  %34 = icmp ult i32 %29, %33
  br label %36

35:                                               ; preds = %1
  br label %36

36:                                               ; preds = %1, %4, %17, %35, %26
  %37 = phi i1 [ false, %35 ], [ %34, %26 ], [ true, %4 ], [ %25, %17 ], [ true, %1 ]
  %38 = zext i1 %37 to i8
  ret i8 %38
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @self_promoting_args_p(ptr noundef readonly %0) local_unnamed_addr #19 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %56, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %5 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16
  %6 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8
  %7 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %8 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 6
  %9 = load <4 x ptr>, ptr @integer_types, align 16
  %10 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4), align 16
  br label %11

11:                                               ; preds = %3, %54
  %12 = phi ptr [ %0, %3 ], [ %17, %54 ]
  %13 = getelementptr inbounds %struct.tree_list, ptr %12, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, %4
  %16 = getelementptr inbounds %struct.tree_common, ptr %12, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  br i1 %15, label %54, label %18

18:                                               ; preds = %11
  %19 = icmp eq ptr %17, null
  %20 = icmp ne ptr %14, %5
  %21 = select i1 %19, i1 %20, i1 false
  %22 = icmp eq ptr %14, null
  %23 = or i1 %22, %21
  br i1 %23, label %56, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.tree_type, ptr %14, i64 0, i32 16
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = icmp eq ptr %26, %6
  br i1 %27, label %56, label %28

28:                                               ; preds = %24
  %29 = load i64, ptr %14, align 8
  %30 = trunc i64 %29 to i16
  switch i16 %30, label %54 [
    i16 8, label %31
    i16 6, label %40
    i16 7, label %56
  ]

31:                                               ; preds = %28
  %32 = insertelement <4 x ptr> poison, ptr %26, i64 0
  %33 = shufflevector <4 x ptr> %32, <4 x ptr> poison, <4 x i32> zeroinitializer
  %34 = icmp eq <4 x ptr> %33, %9
  %35 = icmp eq ptr %26, %10
  %36 = freeze <4 x i1> %34
  %37 = bitcast <4 x i1> %36 to i4
  %38 = icmp ne i4 %37, 0
  %39 = select i1 %38, i1 true, i1 %35
  br i1 %39, label %56, label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %struct.tree_type, ptr %14, i64 0, i32 6
  %42 = load i32, ptr %41, align 4
  %43 = and i32 %42, 1023
  %44 = load i32, ptr %8, align 4
  %45 = and i32 %44, 1023
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %56, label %54

47:                                               ; preds = %31
  %48 = getelementptr inbounds %struct.tree_type, ptr %14, i64 0, i32 6
  %49 = load i32, ptr %48, align 4
  %50 = and i32 %49, 1023
  %51 = load i32, ptr %8, align 4
  %52 = and i32 %51, 1023
  %53 = icmp ult i32 %50, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %11, %40, %28, %47
  %55 = icmp eq ptr %17, null
  br i1 %55, label %56, label %11, !llvm.loop !156

56:                                               ; preds = %54, %18, %24, %47, %31, %28, %40, %1
  %57 = phi i32 [ 1, %1 ], [ 0, %40 ], [ 0, %28 ], [ 0, %31 ], [ 0, %47 ], [ 0, %24 ], [ 0, %18 ], [ 1, %54 ]
  ret i32 %57
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @strip_pointer_operator(ptr noundef readonly %0) local_unnamed_addr #19 {
  br label %2

2:                                                ; preds = %6, %1
  %3 = phi ptr [ %0, %1 ], [ %8, %6 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %9 [
    i16 10, label %6
    i16 12, label %6
  ]

6:                                                ; preds = %2, %2
  %7 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  br label %2, !llvm.loop !157

9:                                                ; preds = %2
  ret ptr %3
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @strip_pointer_or_array_types(ptr noundef readonly %0) local_unnamed_addr #19 {
  br label %2

2:                                                ; preds = %6, %1
  %3 = phi ptr [ %0, %1 ], [ %8, %6 ]
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i16
  switch i16 %5, label %9 [
    i16 15, label %6
    i16 10, label %6
    i16 12, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  br label %2, !llvm.loop !158

9:                                                ; preds = %2
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @case_compare(i64 noundef %0, i64 noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq i64 %0, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = icmp ne i64 %1, 0
  %6 = sext i1 %5 to i32
  br label %13

7:                                                ; preds = %2
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %7
  %10 = inttoptr i64 %0 to ptr
  %11 = inttoptr i64 %1 to ptr
  %12 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %10, ptr noundef nonnull %11) #22
  br label %13

13:                                               ; preds = %7, %9, %4
  %14 = phi i32 [ %12, %9 ], [ %6, %4 ], [ 1, %7 ]
  ret i32 %14
}

declare i32 @tree_int_cst_compare(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_add_case_label(i32 noundef %0, ptr noundef %1, ptr noundef readonly %2, ptr noundef readonly %3, ptr noundef %4, ptr noundef %5) local_unnamed_addr #9 {
  %7 = tail call ptr @create_artificial_label(i32 noundef %0) #22
  %8 = icmp eq ptr %2, null
  %9 = load ptr, ptr @global_trees, align 16
  %10 = icmp eq ptr %9, %2
  %11 = select i1 %8, i1 true, i1 %10
  br i1 %11, label %260, label %12

12:                                               ; preds = %6
  %13 = icmp eq ptr %4, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = load i64, ptr %16, align 8
  %20 = trunc i64 %19 to i16
  switch i16 %20, label %21 [
    i16 10, label %32
    i16 12, label %32
  ]

21:                                               ; preds = %18, %14
  %22 = icmp eq ptr %5, null
  br i1 %22, label %33, label %25

23:                                               ; preds = %12
  %24 = icmp eq ptr %5, null
  br i1 %24, label %198, label %25

25:                                               ; preds = %23, %21
  %26 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = icmp eq ptr %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = load i64, ptr %27, align 8
  %31 = trunc i64 %30 to i16
  switch i16 %31, label %36 [
    i16 10, label %32
    i16 12, label %32
  ]

32:                                               ; preds = %29, %29, %18, %18
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.1101) #22
  br label %260

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  br i1 %13, label %198, label %40

36:                                               ; preds = %25, %29
  %37 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.1102) #22
  %38 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  br i1 %13, label %82, label %40

40:                                               ; preds = %36, %33
  %41 = phi i1 [ false, %36 ], [ true, %33 ]
  %42 = phi ptr [ %39, %36 ], [ %35, %33 ]
  %43 = tail call fastcc ptr @check_case_value(ptr noundef nonnull %4)
  %44 = load i64, ptr %43, align 8
  %45 = and i64 %44, 65535
  %46 = icmp eq i64 %45, 190
  br i1 %46, label %47, label %54

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.tree_common, ptr %43, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.tree_exp, ptr %43, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = tail call ptr @convert(ptr noundef %49, ptr noundef %51) #22
  %53 = icmp eq ptr %49, %42
  br i1 %53, label %77, label %54

54:                                               ; preds = %47, %40
  %55 = phi ptr [ %51, %47 ], [ %43, %40 ]
  %56 = phi ptr [ %52, %47 ], [ %43, %40 ]
  %57 = getelementptr inbounds %struct.tree_common, ptr %55, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = icmp eq ptr %58, %42
  br i1 %59, label %77, label %60

60:                                               ; preds = %54
  %61 = tail call ptr @convert(ptr noundef %42, ptr noundef nonnull %55) #22
  %62 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %77

64:                                               ; preds = %60
  %65 = load i64, ptr %55, align 8
  %66 = and i64 %65, 65535
  %67 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %66
  %68 = load i32, ptr %67, align 4, !tbaa !17
  %69 = icmp eq i32 %68, 1
  %70 = and i64 %65, 134217728
  %71 = icmp ne i64 %70, 0
  %72 = and i1 %69, %71
  %73 = load ptr, ptr @global_trees, align 16
  %74 = icmp eq ptr %61, %73
  %75 = select i1 %72, i1 true, i1 %74
  br i1 %75, label %77, label %76

76:                                               ; preds = %64
  tail call void @warnings_for_convert_and_check(ptr noundef %42, ptr noundef %56, ptr noundef %61)
  br label %77

77:                                               ; preds = %47, %54, %60, %64, %76
  %78 = phi ptr [ %52, %47 ], [ %55, %54 ], [ %61, %64 ], [ %61, %76 ], [ %61, %60 ]
  %79 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %80 = icmp eq ptr %78, %79
  br i1 %80, label %260, label %81

81:                                               ; preds = %77
  br i1 %41, label %137, label %82

82:                                               ; preds = %36, %81
  %83 = phi ptr [ %42, %81 ], [ %39, %36 ]
  %84 = phi ptr [ %78, %81 ], [ null, %36 ]
  %85 = tail call fastcc ptr @check_case_value(ptr noundef nonnull %5)
  %86 = load i64, ptr %85, align 8
  %87 = and i64 %86, 65535
  %88 = icmp eq i64 %87, 190
  br i1 %88, label %89, label %96

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.tree_common, ptr %85, i64 0, i32 2
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = getelementptr inbounds %struct.tree_exp, ptr %85, i64 0, i32 3
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  %94 = tail call ptr @convert(ptr noundef %91, ptr noundef %93) #22
  %95 = icmp eq ptr %91, %83
  br i1 %95, label %119, label %96

96:                                               ; preds = %89, %82
  %97 = phi ptr [ %93, %89 ], [ %85, %82 ]
  %98 = phi ptr [ %94, %89 ], [ %85, %82 ]
  %99 = getelementptr inbounds %struct.tree_common, ptr %97, i64 0, i32 2
  %100 = load ptr, ptr %99, align 8, !tbaa !17
  %101 = icmp eq ptr %100, %83
  br i1 %101, label %119, label %102

102:                                              ; preds = %96
  %103 = tail call ptr @convert(ptr noundef %83, ptr noundef nonnull %97) #22
  %104 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %119

106:                                              ; preds = %102
  %107 = load i64, ptr %97, align 8
  %108 = and i64 %107, 65535
  %109 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !17
  %111 = icmp eq i32 %110, 1
  %112 = and i64 %107, 134217728
  %113 = icmp ne i64 %112, 0
  %114 = and i1 %111, %113
  %115 = load ptr, ptr @global_trees, align 16
  %116 = icmp eq ptr %103, %115
  %117 = select i1 %114, i1 true, i1 %116
  br i1 %117, label %119, label %118

118:                                              ; preds = %106
  tail call void @warnings_for_convert_and_check(ptr noundef %83, ptr noundef %98, ptr noundef %103)
  br label %119

119:                                              ; preds = %89, %96, %102, %106, %118
  %120 = phi ptr [ %94, %89 ], [ %97, %96 ], [ %103, %106 ], [ %103, %118 ], [ %103, %102 ]
  %121 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %122 = icmp eq ptr %120, %121
  br i1 %122, label %260, label %123

123:                                              ; preds = %119
  %124 = icmp ne ptr %84, null
  %125 = icmp ne ptr %120, null
  %126 = and i1 %124, %125
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  %128 = tail call i32 @tree_int_cst_equal(ptr noundef nonnull %84, ptr noundef nonnull %120) #22
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = tail call i32 @tree_int_cst_lt(ptr noundef nonnull %84, ptr noundef nonnull %120) #22
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %141

133:                                              ; preds = %130
  %134 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 0, ptr noundef nonnull @.str.1103) #22
  br label %141

135:                                              ; preds = %123
  %136 = icmp eq ptr %84, null
  br i1 %136, label %198, label %139

137:                                              ; preds = %81
  %138 = icmp eq ptr %78, null
  br i1 %138, label %198, label %142

139:                                              ; preds = %135
  %140 = icmp eq ptr %120, null
  br i1 %140, label %142, label %141

141:                                              ; preds = %133, %130, %139
  br label %142

142:                                              ; preds = %137, %127, %141, %139
  %143 = phi ptr [ %83, %141 ], [ %83, %139 ], [ %83, %127 ], [ %42, %137 ]
  %144 = phi ptr [ %84, %141 ], [ %84, %139 ], [ %84, %127 ], [ %78, %137 ]
  %145 = phi i1 [ false, %141 ], [ true, %139 ], [ true, %127 ], [ true, %137 ]
  %146 = phi ptr [ %120, %141 ], [ null, %139 ], [ null, %127 ], [ null, %137 ]
  %147 = phi ptr [ %120, %141 ], [ %84, %139 ], [ %84, %127 ], [ %78, %137 ]
  %148 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %149 = icmp eq ptr %148, %3
  br i1 %149, label %198, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 13
  %152 = load ptr, ptr %151, align 8, !tbaa !17
  %153 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 14
  %154 = load ptr, ptr %153, align 8, !tbaa !17
  %155 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %144, ptr noundef %152) #22
  %156 = icmp slt i32 %155, 0
  br i1 %156, label %157, label %162

157:                                              ; preds = %150
  %158 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %147, ptr noundef %152) #22
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.1111) #22
  br label %269

162:                                              ; preds = %157, %150
  %163 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %144, ptr noundef %154) #22
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %170

165:                                              ; preds = %162
  %166 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %147, ptr noundef %154) #22
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.1112) #22
  br label %269

170:                                              ; preds = %165, %162
  %171 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %147, ptr noundef %152) #22
  %172 = icmp sgt i32 %171, -1
  br i1 %172, label %173, label %178

173:                                              ; preds = %170
  %174 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %144, ptr noundef %152) #22
  %175 = icmp slt i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.1113) #22
  br label %178

178:                                              ; preds = %176, %173, %170
  %179 = phi ptr [ %152, %176 ], [ %144, %173 ], [ %144, %170 ]
  %180 = tail call i32 @tree_int_cst_compare(ptr noundef %179, ptr noundef %154) #22
  %181 = icmp slt i32 %180, 1
  br i1 %181, label %182, label %187

182:                                              ; preds = %178
  %183 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %147, ptr noundef %154) #22
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %182
  %186 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.1114) #22
  br label %187

187:                                              ; preds = %185, %182, %178
  %188 = phi ptr [ %154, %185 ], [ %147, %182 ], [ %147, %178 ]
  %189 = icmp eq ptr %144, %179
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = tail call ptr @convert(ptr noundef %143, ptr noundef %179) #22
  br label %192

192:                                              ; preds = %190, %187
  %193 = phi ptr [ %144, %187 ], [ %191, %190 ]
  %194 = icmp eq ptr %146, %188
  %195 = select i1 %145, i1 true, i1 %194
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = tail call ptr @convert(ptr noundef %143, ptr noundef %188) #22
  br label %198

198:                                              ; preds = %23, %33, %137, %192, %196, %142, %135
  %199 = phi ptr [ null, %135 ], [ %193, %196 ], [ %193, %192 ], [ %144, %142 ], [ null, %137 ], [ null, %33 ], [ null, %23 ]
  %200 = phi ptr [ %120, %135 ], [ %197, %196 ], [ %146, %192 ], [ %146, %142 ], [ null, %137 ], [ null, %33 ], [ null, %23 ]
  %201 = ptrtoint ptr %199 to i64
  %202 = tail call ptr @splay_tree_lookup(ptr noundef %1, i64 noundef %201) #22
  %203 = icmp eq ptr %202, null
  br i1 %203, label %204, label %236

204:                                              ; preds = %198
  %205 = icmp ne ptr %199, null
  %206 = icmp ne ptr %200, null
  %207 = select i1 %205, i1 true, i1 %206
  br i1 %207, label %208, label %255

208:                                              ; preds = %204
  %209 = tail call ptr @splay_tree_predecessor(ptr noundef %1, i64 noundef %201) #22
  %210 = tail call ptr @splay_tree_successor(ptr noundef %1, i64 noundef %201) #22
  %211 = icmp eq ptr %209, null
  br i1 %211, label %222, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.splay_tree_node_s, ptr %209, i64 0, i32 1
  %214 = load i64, ptr %213, align 8, !tbaa !159
  %215 = inttoptr i64 %214 to ptr
  %216 = getelementptr inbounds %struct.tree_exp, ptr %215, i64 1
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = icmp eq ptr %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %212
  %220 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %217, ptr noundef %199) #22
  %221 = icmp sgt i32 %220, -1
  br i1 %221, label %236, label %222

222:                                              ; preds = %219, %212, %208
  %223 = icmp ne ptr %210, null
  %224 = select i1 %223, i1 %206, i1 false
  br i1 %224, label %225, label %255

225:                                              ; preds = %222
  %226 = load i64, ptr %210, align 8, !tbaa !161
  %227 = inttoptr i64 %226 to ptr
  %228 = tail call i32 @tree_int_cst_compare(ptr noundef %227, ptr noundef nonnull %200) #22
  %229 = icmp slt i32 %228, 1
  br i1 %229, label %230, label %255

230:                                              ; preds = %225
  %231 = getelementptr inbounds %struct.splay_tree_node_s, ptr %210, i64 0, i32 1
  %232 = load i64, ptr %231, align 8, !tbaa !159
  %233 = inttoptr i64 %232 to ptr
  %234 = getelementptr inbounds %struct.tree_exp, ptr %233, i64 1, i32 0, i32 1
  %235 = load ptr, ptr %234, align 8, !tbaa !17
  br label %244

236:                                              ; preds = %198, %219
  %237 = phi ptr [ %202, %198 ], [ %209, %219 ]
  %238 = getelementptr inbounds %struct.splay_tree_node_s, ptr %237, i64 0, i32 1
  %239 = load i64, ptr %238, align 8, !tbaa !159
  %240 = inttoptr i64 %239 to ptr
  %241 = getelementptr inbounds %struct.tree_exp, ptr %240, i64 1, i32 0, i32 1
  %242 = load ptr, ptr %241, align 8, !tbaa !17
  %243 = icmp eq ptr %200, null
  br i1 %243, label %248, label %244

244:                                              ; preds = %230, %236
  %245 = phi ptr [ %235, %230 ], [ %242, %236 ]
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.1104) #22
  %246 = getelementptr inbounds %struct.tree_decl_minimal, ptr %245, i64 0, i32 1
  %247 = load i32, ptr %246, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %247, ptr noundef nonnull @.str.1105) #22
  br label %260

248:                                              ; preds = %236
  %249 = icmp eq ptr %199, null
  %250 = getelementptr inbounds %struct.tree_decl_minimal, ptr %242, i64 0, i32 1
  br i1 %249, label %253, label %251

251:                                              ; preds = %248
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.1106) #22
  %252 = load i32, ptr %250, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %252, ptr noundef nonnull @.str.1107) #22
  br label %260

253:                                              ; preds = %248
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.1108) #22
  %254 = load i32, ptr %250, align 8, !tbaa !17
  tail call void (i32, ptr, ...) @error_at(i32 noundef %254, ptr noundef nonnull @.str.1109) #22
  br label %260

255:                                              ; preds = %204, %222, %225
  %256 = tail call ptr @build_case_label(i32 noundef %0, ptr noundef %199, ptr noundef %200, ptr noundef %7) #22
  %257 = tail call ptr @add_stmt(ptr noundef %256) #22
  %258 = ptrtoint ptr %257 to i64
  %259 = tail call ptr @splay_tree_insert(ptr noundef %1, i64 noundef %201, i64 noundef %258) #22
  br label %269

260:                                              ; preds = %244, %253, %251, %119, %77, %6, %32
  %261 = load ptr, ptr %1, align 8, !tbaa !162
  %262 = icmp eq ptr %261, null
  br i1 %262, label %263, label %267

263:                                              ; preds = %260
  %264 = tail call ptr @create_artificial_label(i32 noundef %0) #22
  %265 = tail call ptr (i32, i32, ...) @build_stmt(i32 noundef %0, i32 noundef 133, ptr noundef %264) #22
  %266 = tail call ptr @add_stmt(ptr noundef %265) #22
  br label %267

267:                                              ; preds = %263, %260
  %268 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %269

269:                                              ; preds = %168, %160, %267, %255
  %270 = phi ptr [ %268, %267 ], [ %257, %255 ], [ null, %160 ], [ null, %168 ]
  ret ptr %270
}

declare ptr @create_artificial_label(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @check_case_value(ptr noundef %0) unnamed_addr #9 {
  %2 = load ptr, ptr @global_trees, align 16
  br label %3

3:                                                ; preds = %11, %1
  %4 = phi ptr [ %0, %1 ], [ %9, %11 ]
  %5 = load i64, ptr %4, align 8
  %6 = trunc i64 %5 to i16
  switch i16 %6, label %17 [
    i16 116, label %7
    i16 113, label %7
    i16 117, label %7
  ]

7:                                                ; preds = %3, %3, %3
  %8 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, %2
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = icmp eq ptr %13, %15
  br i1 %16, label %3, label %17, !llvm.loop !164

17:                                               ; preds = %3, %7, %11
  %18 = load i32, ptr @c_language, align 4, !tbaa !17
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %41, label %21

21:                                               ; preds = %17
  %22 = tail call ptr @decl_constant_value(ptr noundef nonnull %4) #22
  %23 = load ptr, ptr @global_trees, align 16
  br label %24

24:                                               ; preds = %32, %21
  %25 = phi ptr [ %22, %21 ], [ %30, %32 ]
  %26 = load i64, ptr %25, align 8
  %27 = trunc i64 %26 to i16
  switch i16 %27, label %38 [
    i16 116, label %28
    i16 113, label %28
    i16 117, label %28
  ]

28:                                               ; preds = %24, %24, %24
  %29 = getelementptr inbounds %struct.tree_exp, ptr %25, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = icmp eq ptr %30, %23
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.tree_common, ptr %30, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = icmp eq ptr %34, %36
  br i1 %37, label %24, label %38, !llvm.loop !165

38:                                               ; preds = %24, %28, %32
  %39 = tail call ptr @fold(ptr noundef nonnull %25) #22
  %40 = load i64, ptr %39, align 8
  br label %41

41:                                               ; preds = %38, %17
  %42 = phi i64 [ %40, %38 ], [ %5, %17 ]
  %43 = phi ptr [ %39, %38 ], [ %4, %17 ]
  %44 = and i64 %42, 65535
  %45 = icmp eq i64 %44, 23
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = tail call ptr @perform_integral_promotions(ptr noundef nonnull %43) #22
  br label %53

48:                                               ; preds = %41
  %49 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %50 = icmp eq ptr %43, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1110) #22
  %52 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %53

53:                                               ; preds = %48, %51, %46
  %54 = phi ptr [ %47, %46 ], [ %52, %51 ], [ %43, %48 ]
  %55 = load i32, ptr @warn_overflow, align 4, !tbaa !21
  %56 = icmp ne i32 %55, 0
  %57 = load i32, ptr @pedantic, align 4
  %58 = icmp ne i32 %57, 0
  %59 = select i1 %56, i1 %58, i1 false
  br i1 %59, label %60, label %72

60:                                               ; preds = %53
  %61 = load i64, ptr %54, align 8
  %62 = trunc i64 %61 to i32
  %63 = and i32 %62, 65535
  %64 = add nsw i32 %63, -28
  %65 = icmp ult i32 %64, -5
  %66 = and i64 %61, 134217728
  %67 = icmp eq i64 %66, 0
  %68 = or i1 %67, %65
  br i1 %68, label %72, label %69

69:                                               ; preds = %60
  %70 = load i32, ptr @input_location, align 4, !tbaa !21
  %71 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %70, i32 noundef 151, ptr noundef nonnull @.str.278) #22
  br label %72

72:                                               ; preds = %53, %60, %69
  ret ptr %54
}

declare ptr @splay_tree_lookup(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @splay_tree_predecessor(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @splay_tree_successor(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @add_stmt(ptr noundef) local_unnamed_addr #3

declare ptr @build_case_label(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @splay_tree_insert(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare ptr @build_stmt(i32 noundef, i32 noundef, ...) local_unnamed_addr #3

declare ptr @perform_integral_promotions(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_do_switch_warnings(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = load i32, ptr @warn_switch, align 4, !tbaa !21
  %6 = icmp ne i32 %5, 0
  %7 = load i32, ptr @warn_switch_enum, align 4
  %8 = icmp ne i32 %7, 0
  %9 = select i1 %6, i1 true, i1 %8
  %10 = load i32, ptr @warn_switch_default, align 4
  %11 = icmp ne i32 %10, 0
  %12 = select i1 %9, i1 true, i1 %11
  br i1 %12, label %13, label %94

13:                                               ; preds = %4
  %14 = tail call ptr @splay_tree_lookup(ptr noundef %0, i64 noundef 0) #22
  %15 = icmp ne ptr %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %1, i32 noundef 194, ptr noundef nonnull @.str.1115) #22
  br label %18

18:                                               ; preds = %16, %13
  %19 = icmp eq ptr %2, null
  br i1 %19, label %94, label %20

20:                                               ; preds = %18
  %21 = load i64, ptr %2, align 8
  %22 = and i64 %21, 65535
  %23 = icmp eq i64 %22, 6
  br i1 %23, label %24, label %94

24:                                               ; preds = %20
  %25 = load i32, ptr @warn_switch_enum, align 4, !tbaa !21
  %26 = icmp ne i32 %25, 0
  %27 = load i32, ptr @warn_switch, align 4
  %28 = icmp ne i32 %27, 0
  %29 = select i1 %26, i1 true, i1 %28
  br i1 %29, label %30, label %94

30:                                               ; preds = %24
  %31 = load i64, ptr %3, align 8
  %32 = and i64 %31, 65535
  %33 = icmp eq i64 %32, 23
  %34 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %92, label %37

37:                                               ; preds = %30, %88
  %38 = phi ptr [ %90, %88 ], [ %35, %30 ]
  %39 = getelementptr inbounds %struct.tree_list, ptr %38, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = load i64, ptr %40, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 33
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.tree_decl_common, ptr %40, i64 0, i32 5
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  br label %47

47:                                               ; preds = %44, %37
  %48 = phi ptr [ %46, %44 ], [ %40, %37 ]
  %49 = ptrtoint ptr %48 to i64
  %50 = tail call ptr @splay_tree_lookup(ptr noundef %0, i64 noundef %49) #22
  %51 = icmp eq ptr %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.splay_tree_node_s, ptr %50, i64 0, i32 1
  %54 = load i64, ptr %53, align 8, !tbaa !159
  %55 = inttoptr i64 %54 to ptr
  %56 = load i64, ptr %55, align 8
  %57 = or i64 %56, 262144
  store i64 %57, ptr %55, align 8
  br label %88

58:                                               ; preds = %47
  %59 = tail call ptr @splay_tree_predecessor(ptr noundef %0, i64 noundef %49) #22
  %60 = icmp eq ptr %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.splay_tree_node_s, ptr %59, i64 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !159
  %64 = inttoptr i64 %63 to ptr
  %65 = getelementptr inbounds %struct.tree_exp, ptr %64, i64 1
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = icmp eq ptr %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %61
  %69 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %66, ptr noundef %48) #22
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %73, label %88

73:                                               ; preds = %71
  %74 = load i64, ptr %64, align 8
  %75 = or i64 %74, 67108864
  store i64 %75, ptr %64, align 8
  br label %88

76:                                               ; preds = %68, %61, %58
  br i1 %33, label %77, label %80

77:                                               ; preds = %76
  %78 = tail call i32 @tree_int_cst_compare(ptr noundef nonnull %3, ptr noundef %48) #22
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %77, %76
  %81 = load i32, ptr @warn_switch, align 4
  %82 = icmp eq i32 %81, 0
  %83 = select i1 %15, i1 true, i1 %82
  %84 = select i1 %83, i32 195, i32 193
  %85 = getelementptr inbounds %struct.tree_list, ptr %38, i64 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %1, i32 noundef %84, ptr noundef nonnull @.str.1116, ptr noundef %86) #22
  br label %88

88:                                               ; preds = %73, %71, %77, %80, %52
  %89 = getelementptr inbounds %struct.tree_common, ptr %38, i64 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !17
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %37, !llvm.loop !166

92:                                               ; preds = %88, %30
  %93 = tail call i32 @splay_tree_foreach(ptr noundef %0, ptr noundef nonnull @match_case_to_enum, ptr noundef nonnull %2) #22
  br label %94

94:                                               ; preds = %24, %18, %20, %4, %92
  ret void
}

declare i32 @splay_tree_foreach(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @match_case_to_enum(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = getelementptr inbounds %struct.splay_tree_node_s, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %3, align 8, !tbaa !159
  %5 = inttoptr i64 %4 to ptr
  %6 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = load i64, ptr %5, align 8
  %11 = and i64 %10, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call fastcc void @match_case_to_enum_1(ptr noundef nonnull %7, ptr noundef %1, ptr noundef nonnull %5)
  br label %16

14:                                               ; preds = %9
  %15 = and i64 %10, -262145
  store i64 %15, ptr %5, align 8
  br label %16

16:                                               ; preds = %14, %13
  %17 = getelementptr inbounds %struct.tree_exp, ptr %5, i64 1
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = icmp eq ptr %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = load i64, ptr %5, align 8
  %22 = and i64 %21, 67108864
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call fastcc void @match_case_to_enum_1(ptr noundef nonnull %18, ptr noundef %1, ptr noundef nonnull %5)
  br label %27

25:                                               ; preds = %20
  %26 = and i64 %21, -67108865
  store i64 %26, ptr %5, align 8
  br label %27

27:                                               ; preds = %16, %25, %24, %2
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @match_case_to_enum_1(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #9 {
  %4 = alloca [35 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 35, ptr nonnull %4) #22
  %5 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %struct.tree_int_cst, ptr %0, i64 0, i32 1, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !17
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = load i64, ptr %5, align 8, !tbaa !17
  %11 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) %4, i64 noundef 35, ptr noundef nonnull @.str.1117, i64 noundef %10)
  br label %26

12:                                               ; preds = %3
  %13 = load i64, ptr %1, align 8
  %14 = and i64 %13, 2097152
  %15 = icmp ne i64 %14, 0
  %16 = icmp ne i64 %7, -1
  %17 = or i1 %16, %15
  %18 = load i64, ptr %5, align 8, !tbaa !17
  %19 = icmp eq i64 %18, 0
  %20 = select i1 %17, i1 true, i1 %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = sub i64 0, %18
  %23 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) %4, i64 noundef 35, ptr noundef nonnull @.str.1118, i64 noundef %22)
  br label %26

24:                                               ; preds = %12
  %25 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) %4, i64 noundef 35, ptr noundef nonnull @.str.1119, i64 noundef %7, i64 noundef %18)
  br label %26

26:                                               ; preds = %21, %24, %9
  %27 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 12
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = icmp eq ptr %28, null
  %30 = getelementptr inbounds %struct.tree_exp, ptr %2, i64 1, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.tree_decl_minimal, ptr %31, i64 0, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !17
  %34 = load i32, ptr @warn_switch, align 4, !tbaa !21
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i32 195, i32 193
  br i1 %29, label %37, label %39

37:                                               ; preds = %26
  %38 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %33, i32 noundef %36, ptr noundef nonnull @.str.1120, ptr noundef nonnull %4) #22
  br label %41

39:                                               ; preds = %26
  %40 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %33, i32 noundef %36, ptr noundef nonnull @.str.1121, ptr noundef nonnull %4, ptr noundef nonnull %1) #22
  br label %41

41:                                               ; preds = %39, %37
  call void @llvm.lifetime.end.p0(i64 35, ptr nonnull %4) #22
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @finish_label_address_expr(ptr noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = load i32, ptr @input_location, align 4, !tbaa !21
  %4 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %3, i32 noundef 834, ptr noundef nonnull @.str.1122) #22
  %5 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %6 = icmp eq ptr %5, %0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = tail call ptr @lookup_label(ptr noundef %0) #22
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 16), align 16, !tbaa !6
  br label %17

12:                                               ; preds = %7
  %13 = load i64, ptr %8, align 8
  %14 = or i64 %13, 16777216
  store i64 %14, ptr %8, align 8
  %15 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 39), align 8, !tbaa !6
  %16 = tail call ptr @build1_stat(i32 noundef 121, ptr noundef %15, ptr noundef nonnull %8) #22
  tail call void @protected_set_expr_location(ptr noundef %16, i32 noundef %1) #22
  br label %17

17:                                               ; preds = %10, %12, %2
  %18 = phi ptr [ %0, %2 ], [ %11, %10 ], [ %16, %12 ]
  ret ptr %18
}

declare ptr @lookup_label(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @boolean_increment(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = tail call ptr @build_int_cst(ptr noundef %4, i64 noundef 1) #22
  %6 = tail call ptr @stabilize_reference(ptr noundef %1) #22
  switch i32 %0, label %39 [
    i32 126, label %7
    i32 128, label %11
    i32 125, label %21
    i32 127, label %27
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = tail call ptr @build2_stat(i32 noundef 53, ptr noundef %9, ptr noundef %6, ptr noundef %5) #22
  br label %40

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = tail call ptr @build2_stat(i32 noundef 53, ptr noundef %13, ptr noundef %6, ptr noundef %5) #22
  %15 = tail call ptr @save_expr(ptr noundef %6) #22
  %16 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %17, ptr noundef %14, ptr noundef %15) #22
  %19 = load ptr, ptr %16, align 8, !tbaa !17
  %20 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %19, ptr noundef %15, ptr noundef %18) #22
  br label %40

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = load i32, ptr @input_location, align 4, !tbaa !21
  %25 = tail call ptr @invert_truthvalue_loc(i32 noundef %24, ptr noundef %6) #22
  %26 = tail call ptr @build2_stat(i32 noundef 53, ptr noundef %23, ptr noundef %6, ptr noundef %25) #22
  br label %40

27:                                               ; preds = %2
  %28 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = load i32, ptr @input_location, align 4, !tbaa !21
  %31 = tail call ptr @invert_truthvalue_loc(i32 noundef %30, ptr noundef %6) #22
  %32 = tail call ptr @build2_stat(i32 noundef 53, ptr noundef %29, ptr noundef %6, ptr noundef %31) #22
  %33 = tail call ptr @save_expr(ptr noundef %6) #22
  %34 = getelementptr inbounds %struct.tree_common, ptr %33, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %35, ptr noundef %32, ptr noundef %33) #22
  %37 = load ptr, ptr %34, align 8, !tbaa !17
  %38 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %37, ptr noundef %33, ptr noundef %36) #22
  br label %40

39:                                               ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 5712, ptr noundef nonnull @.str.238) #22
  br label %40

40:                                               ; preds = %39, %27, %21, %11, %7
  %41 = phi ptr [ undef, %39 ], [ %38, %27 ], [ %26, %21 ], [ %20, %11 ], [ %10, %7 ]
  %42 = load i64, ptr %41, align 8
  %43 = or i64 %42, 65536
  store i64 %43, ptr %41, align 8
  ret ptr %41
}

declare ptr @stabilize_reference(ptr noundef) local_unnamed_addr #3

declare ptr @invert_truthvalue_loc(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_stddef_cpp_builtins() local_unnamed_addr #9 {
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1123, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1124, ptr noundef nonnull @.str.97, i32 noundef 0) #22
  %1 = load i32, ptr @flag_short_wchar, align 4, !tbaa !21
  %2 = icmp eq i32 %1, 0
  %3 = select i1 %2, ptr @.str.342, ptr @.str.350
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1125, ptr noundef nonnull %3, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1126, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1127, ptr noundef nonnull @.str.346, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1128, ptr noundef nonnull @.str.347, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1129, ptr noundef nonnull @.str.350, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1130, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1131, ptr noundef nonnull @.str.97, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1132, ptr noundef nonnull @.str.352, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1133, ptr noundef nonnull @.str.349, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1134, ptr noundef nonnull @.str.97, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1135, ptr noundef nonnull @.str.346, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1136, ptr noundef nonnull @.str.353, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1137, ptr noundef nonnull @.str.350, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1138, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1139, ptr noundef nonnull @.str.347, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1140, ptr noundef nonnull @.str.352, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1141, ptr noundef nonnull @.str.349, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1142, ptr noundef nonnull @.str.97, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1143, ptr noundef nonnull @.str.346, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1144, ptr noundef nonnull @.str.353, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1145, ptr noundef nonnull @.str.350, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1146, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1147, ptr noundef nonnull @.str.347, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1148, ptr noundef nonnull @.str.352, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1149, ptr noundef nonnull @.str.97, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1150, ptr noundef nonnull @.str.97, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1151, ptr noundef nonnull @.str.346, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1152, ptr noundef nonnull @.str.353, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1153, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1154, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1155, ptr noundef nonnull @.str.347, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1156, ptr noundef nonnull @.str.97, i32 noundef 0) #22
  tail call void @builtin_define_with_value(ptr noundef nonnull @.str.1157, ptr noundef nonnull @.str.343, i32 noundef 0) #22
  ret void
}

declare void @builtin_define_with_value(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @c_determine_visibility(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %4 [
    i16 32, label %5
    i16 29, label %5
  ]

4:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 6964, ptr noundef nonnull @.str.238) #22
  br label %5

5:                                                ; preds = %1, %1, %4
  %6 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.182, ptr noundef %7) #22
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %47

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, 4096
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %47

15:                                               ; preds = %10
  %16 = load i8, ptr @visibility_options, align 4
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  %19 = load i32, ptr @default_visibility, align 4, !tbaa !17
  br i1 %18, label %20, label %24

20:                                               ; preds = %15
  %21 = lshr i32 %12, 10
  %22 = and i32 %21, 3
  %23 = icmp eq i32 %22, %19
  br i1 %23, label %47, label %24

24:                                               ; preds = %20, %15
  %25 = shl i32 %19, 10
  %26 = and i32 %25, 3072
  %27 = and i32 %12, -7169
  %28 = or i32 %27, %26
  %29 = zext i8 %17 to i32
  %30 = shl nuw nsw i32 %29, 12
  %31 = or i32 %28, %30
  store i32 %31, ptr %11, align 8
  %32 = load i64, ptr %0, align 8
  %33 = and i64 %32, 65535
  %34 = and i64 %32, 67174399
  %35 = icmp eq i64 %34, 67108896
  %36 = icmp eq i64 %33, 29
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %47

38:                                               ; preds = %24
  %39 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %33, i64 11
  %40 = load i8, ptr %39, align 1, !tbaa !17
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %0, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = icmp eq ptr %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @make_decl_rtl(ptr noundef nonnull %0) #22
  br label %47

47:                                               ; preds = %24, %10, %38, %42, %46, %20, %5
  %48 = phi i8 [ 1, %5 ], [ 0, %20 ], [ 0, %46 ], [ 0, %42 ], [ 0, %38 ], [ 0, %10 ], [ 0, %24 ]
  ret i8 %48
}

declare void @make_decl_rtl(ptr noundef) local_unnamed_addr #3

declare ptr @ggc_alloc_string(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #10

declare ptr @ggc_alloc_stat(i64 noundef) local_unnamed_addr #3

declare void @decode_options(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @vec_gc_p_reserve(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @check_function_arguments(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef readonly %3) local_unnamed_addr #9 {
  %5 = load i32, ptr @warn_nonnull, align 4, !tbaa !21
  %6 = icmp eq i32 %5, 0
  %7 = icmp eq ptr %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %72, label %9

9:                                                ; preds = %4
  %10 = icmp sgt i32 %1, 0
  br i1 %10, label %11, label %64

11:                                               ; preds = %9
  %12 = zext i32 %1 to i64
  br label %13

13:                                               ; preds = %51, %11
  %14 = phi ptr [ %53, %51 ], [ %0, %11 ]
  %15 = getelementptr inbounds %struct.tree_list, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = tail call i32 @is_attribute_p(ptr noundef nonnull @.str.184, ptr noundef %16) #22
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %51, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tree_list, ptr %14, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  br i1 %22, label %58, label %23

23:                                               ; preds = %19, %49
  %24 = phi i64 [ %25, %49 ], [ 0, %19 ]
  %25 = add nuw nsw i64 %24, 1
  br label %26

26:                                               ; preds = %45, %23
  %27 = phi ptr [ %47, %45 ], [ %21, %23 ]
  %28 = phi i64 [ %43, %45 ], [ 0, %23 ]
  %29 = getelementptr inbounds %struct.tree_list, ptr %27, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = load i64, ptr %30, align 8
  %32 = and i64 %31, 65535
  %33 = icmp eq i64 %32, 23
  br i1 %33, label %34, label %38

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.tree_int_cst, ptr %30, i64 0, i32 1, i32 1
  %36 = load i64, ptr %35, align 8, !tbaa !17
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %34, %26
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 7507, ptr noundef nonnull @.str.238) #22
  br label %42

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.tree_int_cst, ptr %30, i64 0, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !17
  br label %42

42:                                               ; preds = %39, %38
  %43 = phi i64 [ %41, %39 ], [ %28, %38 ]
  %44 = icmp eq i64 %43, %25
  br i1 %44, label %55, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.tree_common, ptr %27, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %26, !llvm.loop !167

49:                                               ; preds = %45, %55
  %50 = icmp eq i64 %25, %12
  br i1 %50, label %51, label %23, !llvm.loop !168

51:                                               ; preds = %49, %58, %13
  %52 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = icmp eq ptr %53, null
  br i1 %54, label %72, label %13, !llvm.loop !169

55:                                               ; preds = %42
  %56 = getelementptr inbounds ptr, ptr %2, i64 %24
  %57 = load ptr, ptr %56, align 8, !tbaa !6
  tail call fastcc void @check_function_arguments_recurse.1220(ptr noundef %57, i64 noundef %25)
  br label %49

58:                                               ; preds = %19, %58
  %59 = phi i64 [ %62, %58 ], [ 0, %19 ]
  %60 = getelementptr inbounds ptr, ptr %2, i64 %59
  %61 = load ptr, ptr %60, align 8, !tbaa !6
  %62 = add nuw nsw i64 %59, 1
  tail call fastcc void @check_function_arguments_recurse.1220(ptr noundef %61, i64 noundef %62)
  %63 = icmp eq i64 %62, %12
  br i1 %63, label %51, label %58, !llvm.loop !168

64:                                               ; preds = %9, %64
  %65 = phi ptr [ %70, %64 ], [ %0, %9 ]
  %66 = getelementptr inbounds %struct.tree_list, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = tail call i32 @is_attribute_p(ptr noundef nonnull @.str.184, ptr noundef %67) #22
  %69 = getelementptr inbounds %struct.tree_common, ptr %65, i64 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %64, !llvm.loop !169

72:                                               ; preds = %64, %51, %4
  %73 = load i32, ptr @warn_format, align 4, !tbaa !21
  %74 = icmp ne i32 %73, 0
  %75 = load i32, ptr @warn_missing_format_attribute, align 4
  %76 = icmp ne i32 %75, 0
  %77 = select i1 %74, i1 true, i1 %76
  br i1 %77, label %78, label %133

78:                                               ; preds = %72
  tail call void @check_function_format(ptr noundef %0, i32 noundef %1, ptr noundef %2) #22
  %79 = load i32, ptr @warn_format, align 4, !tbaa !21
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %133, label %81

81:                                               ; preds = %78
  %82 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.189, ptr noundef %0) #22
  %83 = icmp eq ptr %82, null
  br i1 %83, label %133, label %84

84:                                               ; preds = %81
  %85 = icmp ne ptr %3, null
  %86 = icmp sgt i32 %1, 0
  %87 = and i1 %86, %85
  br i1 %87, label %88, label %97

88:                                               ; preds = %84, %88
  %89 = phi ptr [ %92, %88 ], [ %3, %84 ]
  %90 = phi i32 [ %93, %88 ], [ 0, %84 ]
  %91 = getelementptr inbounds %struct.tree_common, ptr %89, i64 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = add nuw nsw i32 %90, 1
  %94 = icmp ne ptr %92, null
  %95 = icmp slt i32 %93, %1
  %96 = select i1 %94, i1 %95, i1 false
  br i1 %96, label %88, label %97, !llvm.loop !170

97:                                               ; preds = %88, %84
  %98 = phi i32 [ 0, %84 ], [ %93, %88 ]
  %99 = getelementptr inbounds %struct.tree_list, ptr %82, i64 0, i32 2
  %100 = load ptr, ptr %99, align 8, !tbaa !17
  %101 = icmp eq ptr %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.tree_list, ptr %100, i64 0, i32 2
  %104 = load ptr, ptr %103, align 8, !tbaa !17
  %105 = getelementptr inbounds %struct.tree_int_cst, ptr %104, i64 0, i32 1
  %106 = load i64, ptr %105, align 8, !tbaa !17
  %107 = trunc i64 %106 to i32
  %108 = xor i32 %107, -1
  br label %109

109:                                              ; preds = %102, %97
  %110 = phi i32 [ %108, %102 ], [ -1, %97 ]
  %111 = add i32 %110, %1
  %112 = icmp slt i32 %111, %98
  br i1 %112, label %130, label %113

113:                                              ; preds = %109
  %114 = sext i32 %111 to i64
  %115 = getelementptr inbounds ptr, ptr %2, i64 %114
  %116 = load ptr, ptr %115, align 8, !tbaa !6
  %117 = getelementptr inbounds %struct.tree_common, ptr %116, i64 0, i32 2
  %118 = load ptr, ptr %117, align 8, !tbaa !17
  %119 = load i64, ptr %118, align 8
  %120 = trunc i64 %119 to i16
  switch i16 %120, label %124 [
    i16 10, label %121
    i16 12, label %121
  ]

121:                                              ; preds = %113, %113
  %122 = tail call i32 @integer_zerop(ptr noundef nonnull %116) #22
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %133

124:                                              ; preds = %121, %113
  %125 = load i32, ptr @warn_strict_null_sentinel, align 4, !tbaa !21
  %126 = icmp eq i32 %125, 0
  %127 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 54), align 16
  %128 = icmp eq ptr %127, %116
  %129 = select i1 %126, i1 %128, i1 false
  br i1 %129, label %133, label %130

130:                                              ; preds = %124, %109
  %131 = phi ptr [ @.str.1162, %109 ], [ @.str.1163, %124 ]
  %132 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 91, ptr noundef nonnull %131) #22
  br label %133

133:                                              ; preds = %72, %130, %124, %121, %81, %78
  ret void
}

declare void @check_function_format(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare i32 @is_attribute_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @check_function_arguments_recurse(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #9 {
  br label %5

5:                                                ; preds = %108, %4
  %6 = phi ptr [ %2, %4 ], [ %109, %108 ]
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %23 [
    i16 116, label %9
    i16 113, label %9
  ]

9:                                                ; preds = %5, %5
  %10 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.tree_type, ptr %11, i64 0, i32 6
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.tree_type, ptr %17, i64 0, i32 6
  %19 = load i32, ptr %18, align 4
  %20 = xor i32 %19, %13
  %21 = and i32 %20, 1023
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %108, label %23

23:                                               ; preds = %5, %9
  %24 = and i64 %7, 65535
  %25 = icmp eq i64 %24, 59
  br i1 %25, label %26, label %99

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_common, ptr %28, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.tree_common, ptr %30, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = getelementptr inbounds %struct.tree_type, ptr %32, i64 0, i32 4
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = icmp eq ptr %34, null
  br i1 %35, label %97, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3
  %38 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3, i64 3
  br label %39

39:                                               ; preds = %36, %90
  %40 = phi ptr [ %34, %36 ], [ %93, %90 ]
  %41 = phi i8 [ 0, %36 ], [ %91, %90 ]
  %42 = getelementptr inbounds %struct.tree_list, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = tail call i32 @is_attribute_p(ptr noundef nonnull @.str.272, ptr noundef %43) #22
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %90, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.tree_list, ptr %40, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.tree_list, ptr %48, i64 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = load i64, ptr %50, align 8
  %52 = and i64 %51, 65535
  %53 = icmp eq i64 %52, 23
  br i1 %53, label %54, label %58

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.tree_int_cst, ptr %50, i64 0, i32 1, i32 1
  %56 = load i64, ptr %55, align 8, !tbaa !17
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %54, %46
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 7950, ptr noundef nonnull @.str.238) #22
  br label %59

59:                                               ; preds = %54, %58
  %60 = getelementptr inbounds %struct.tree_int_cst, ptr %50, i64 0, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !17
  %62 = trunc i64 %61 to i32
  %63 = load ptr, ptr %37, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.tree_int_cst, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %64, align 8, !tbaa !17
  %66 = trunc i64 %65 to i32
  %67 = add nsw i32 %66, -3
  %68 = icmp sgt i32 %66, 3
  br i1 %68, label %69, label %90

69:                                               ; preds = %59
  %70 = load ptr, ptr %38, align 8, !tbaa !17
  %71 = icmp eq ptr %70, null
  br i1 %71, label %90, label %72

72:                                               ; preds = %69
  %73 = icmp eq i32 %62, 1
  br i1 %73, label %78, label %80

74:                                               ; preds = %84
  %75 = add nuw nsw i32 %81, 1
  %76 = add nuw nsw i32 %82, 1
  %77 = icmp eq i32 %76, %62
  br i1 %77, label %78, label %80, !llvm.loop !171

78:                                               ; preds = %74, %72
  %79 = phi ptr [ %70, %72 ], [ %88, %74 ]
  tail call void @check_function_arguments_recurse(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %79, i64 noundef %3)
  br label %90

80:                                               ; preds = %72, %74
  %81 = phi i32 [ %75, %74 ], [ 1, %72 ]
  %82 = phi i32 [ %76, %74 ], [ 1, %72 ]
  %83 = icmp slt i32 %81, %67
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = add nuw nsw i32 %81, 3
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 0, i32 3, i64 %86
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %74, !llvm.loop !171

90:                                               ; preds = %80, %84, %59, %69, %78, %39
  %91 = phi i8 [ %41, %39 ], [ 1, %78 ], [ %41, %69 ], [ %41, %59 ], [ %41, %84 ], [ %41, %80 ]
  %92 = getelementptr inbounds %struct.tree_common, ptr %40, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  %94 = icmp eq ptr %93, null
  br i1 %94, label %95, label %39, !llvm.loop !172

95:                                               ; preds = %90
  %96 = icmp eq i8 %91, 0
  br i1 %96, label %97, label %111

97:                                               ; preds = %26, %95
  %98 = load i64, ptr %6, align 8
  br label %99

99:                                               ; preds = %97, %23
  %100 = phi i64 [ %98, %97 ], [ %7, %23 ]
  %101 = and i64 %100, 65535
  %102 = icmp eq i64 %101, 56
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 1
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  tail call void @check_function_arguments_recurse(ptr noundef %0, ptr noundef %1, ptr noundef %105, i64 noundef %3)
  %106 = getelementptr inbounds %struct.tree_exp, ptr %6, i64 1, i32 0, i32 1
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  br label %108

108:                                              ; preds = %103, %9
  %109 = phi ptr [ %107, %103 ], [ %15, %9 ]
  br label %5

110:                                              ; preds = %99
  tail call void %0(ptr noundef %1, ptr noundef nonnull %6, i64 noundef %3) #22
  br label %111

111:                                              ; preds = %95, %110
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @check_builtin_function_arguments(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %5 = load i32, ptr %4, align 8
  %6 = and i32 %5, 6144
  %7 = icmp eq i32 %6, 6144
  br i1 %7, label %8, label %109

8:                                                ; preds = %3
  %9 = and i32 %5, 2047
  switch i32 %9, label %109 [
    i32 428, label %10
    i32 467, label %17
    i32 469, label %17
    i32 468, label %17
    i32 475, label %17
    i32 481, label %17
    i32 482, label %32
    i32 483, label %32
    i32 484, label %32
    i32 485, label %32
    i32 486, label %32
    i32 487, label %32
    i32 466, label %62
  ]

10:                                               ; preds = %8
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  %13 = icmp eq i32 %1, 1
  br i1 %13, label %109, label %14

14:                                               ; preds = %12, %10
  %15 = phi ptr [ @.str.1167, %10 ], [ @.str.1168, %12 ]
  %16 = load i32, ptr @input_location, align 4, !tbaa !21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %16, ptr noundef nonnull %15, ptr noundef nonnull %0) #22
  br label %109

17:                                               ; preds = %8, %8, %8, %8, %8
  %18 = icmp slt i32 %1, 1
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = icmp eq i32 %1, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %17, %19
  %22 = phi ptr [ @.str.1167, %17 ], [ @.str.1168, %19 ]
  %23 = load i32, ptr @input_location, align 4, !tbaa !21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %23, ptr noundef nonnull %22, ptr noundef nonnull %0) #22
  br label %109

24:                                               ; preds = %19
  %25 = load ptr, ptr %2, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 65535
  %30 = icmp eq i64 %29, 9
  br i1 %30, label %109, label %31

31:                                               ; preds = %24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1164, ptr noundef nonnull %0) #22
  br label %109

32:                                               ; preds = %8, %8, %8, %8, %8, %8
  %33 = icmp slt i32 %1, 2
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = icmp eq i32 %1, 2
  br i1 %35, label %39, label %36

36:                                               ; preds = %32, %34
  %37 = phi ptr [ @.str.1167, %32 ], [ @.str.1168, %34 ]
  %38 = load i32, ptr @input_location, align 4, !tbaa !21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %38, ptr noundef nonnull %37, ptr noundef nonnull %0) #22
  br label %109

39:                                               ; preds = %34
  %40 = load ptr, ptr %2, align 8, !tbaa !6
  %41 = getelementptr inbounds %struct.tree_common, ptr %40, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = load i64, ptr %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = and i32 %44, 65535
  %46 = getelementptr inbounds ptr, ptr %2, i64 1
  %47 = load ptr, ptr %46, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.tree_common, ptr %47, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = load i64, ptr %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = and i32 %51, 65535
  %53 = icmp eq i32 %45, 9
  %54 = icmp eq i32 %52, 9
  %55 = and i32 %51, 65534
  %56 = icmp eq i32 %55, 8
  %57 = select i1 %53, i1 %56, i1 false
  %58 = icmp eq i32 %45, 8
  %59 = select i1 %58, i1 %54, i1 false
  %60 = select i1 %57, i1 true, i1 %59
  br i1 %60, label %109, label %61

61:                                               ; preds = %39
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1165, ptr noundef nonnull %0) #22
  br label %109

62:                                               ; preds = %8
  %63 = icmp slt i32 %1, 6
  br i1 %63, label %71, label %64

64:                                               ; preds = %62
  %65 = icmp eq i32 %1, 6
  br i1 %65, label %66, label %71

66:                                               ; preds = %64
  %67 = load ptr, ptr %2, align 8, !tbaa !6
  %68 = load i64, ptr %67, align 8
  %69 = and i64 %68, 65535
  %70 = icmp eq i64 %69, 23
  br i1 %70, label %76, label %74

71:                                               ; preds = %62, %64
  %72 = phi ptr [ @.str.1167, %62 ], [ @.str.1168, %64 ]
  %73 = load i32, ptr @input_location, align 4, !tbaa !21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %73, ptr noundef nonnull %72, ptr noundef nonnull %0) #22
  br label %109

74:                                               ; preds = %94, %88, %82, %76, %66
  %75 = phi i32 [ 1, %66 ], [ 2, %76 ], [ 3, %82 ], [ 4, %88 ], [ 5, %94 ]
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1166, i32 noundef %75, ptr noundef nonnull %0) #22
  br label %109

76:                                               ; preds = %66
  %77 = getelementptr inbounds ptr, ptr %2, i64 1
  %78 = load ptr, ptr %77, align 8, !tbaa !6
  %79 = load i64, ptr %78, align 8
  %80 = and i64 %79, 65535
  %81 = icmp eq i64 %80, 23
  br i1 %81, label %82, label %74

82:                                               ; preds = %76
  %83 = getelementptr inbounds ptr, ptr %2, i64 2
  %84 = load ptr, ptr %83, align 8, !tbaa !6
  %85 = load i64, ptr %84, align 8
  %86 = and i64 %85, 65535
  %87 = icmp eq i64 %86, 23
  br i1 %87, label %88, label %74

88:                                               ; preds = %82
  %89 = getelementptr inbounds ptr, ptr %2, i64 3
  %90 = load ptr, ptr %89, align 8, !tbaa !6
  %91 = load i64, ptr %90, align 8
  %92 = and i64 %91, 65535
  %93 = icmp eq i64 %92, 23
  br i1 %93, label %94, label %74

94:                                               ; preds = %88
  %95 = getelementptr inbounds ptr, ptr %2, i64 4
  %96 = load ptr, ptr %95, align 8, !tbaa !6
  %97 = load i64, ptr %96, align 8
  %98 = and i64 %97, 65535
  %99 = icmp eq i64 %98, 23
  br i1 %99, label %100, label %74

100:                                              ; preds = %94
  %101 = getelementptr inbounds ptr, ptr %2, i64 5
  %102 = load ptr, ptr %101, align 8, !tbaa !6
  %103 = getelementptr inbounds %struct.tree_common, ptr %102, i64 0, i32 2
  %104 = load ptr, ptr %103, align 8, !tbaa !17
  %105 = load i64, ptr %104, align 8
  %106 = and i64 %105, 65535
  %107 = icmp eq i64 %106, 9
  br i1 %107, label %109, label %108

108:                                              ; preds = %100
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1164, ptr noundef nonnull %0) #22
  br label %109

109:                                              ; preds = %71, %36, %21, %14, %12, %3, %8, %74, %108, %100, %61, %39, %24, %31
  %110 = phi i8 [ 0, %31 ], [ 1, %3 ], [ 1, %24 ], [ 0, %61 ], [ 1, %39 ], [ 0, %74 ], [ 0, %108 ], [ 1, %100 ], [ 1, %8 ], [ 1, %12 ], [ 0, %14 ], [ 0, %21 ], [ 0, %36 ], [ 0, %71 ]
  ret i8 %110
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @field_decl_cmp(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #16 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = load ptr, ptr %1, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %5, %8
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = load i64, ptr %6, align 8
  %12 = and i64 %11, 65535
  %13 = icmp eq i64 %12, 35
  %14 = zext i1 %13 to i32
  %15 = load i64, ptr %3, align 8
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, 35
  %18 = sext i1 %17 to i32
  %19 = add nsw i32 %18, %14
  br label %27

20:                                               ; preds = %2
  %21 = icmp eq ptr %5, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = icmp eq ptr %8, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = icmp ult ptr %5, %8
  %26 = select i1 %25, i32 -1, i32 1
  br label %27

27:                                               ; preds = %24, %22, %20, %10
  %28 = phi i32 [ %19, %10 ], [ -1, %20 ], [ 1, %22 ], [ %26, %24 ]
  ret i32 %28
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @resort_sorted_fields(ptr noundef %0, ptr nocapture noundef readnone %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  store ptr %2, ptr @resort_data.0, align 8, !tbaa !173
  store ptr %3, ptr @resort_data.1, align 8, !tbaa !175
  %5 = getelementptr inbounds %struct.sorted_fields_type, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %0, align 8, !tbaa !176
  %7 = sext i32 %6 to i64
  tail call void @spec_qsort(ptr noundef nonnull %5, i64 noundef %7, i64 noundef 8, ptr noundef nonnull @resort_field_decl_cmp) #22
  ret void
}

declare void @spec_qsort(ptr noundef, i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @resort_field_decl_cmp(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #9 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = load ptr, ptr %0, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = load ptr, ptr %1, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.tree_decl_minimal, ptr %8, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = icmp eq ptr %7, %10
  br i1 %11, label %12, label %22

12:                                               ; preds = %2
  %13 = load i64, ptr %8, align 8
  %14 = and i64 %13, 65535
  %15 = icmp eq i64 %14, 35
  %16 = zext i1 %15 to i32
  %17 = load i64, ptr %5, align 8
  %18 = and i64 %17, 65535
  %19 = icmp eq i64 %18, 35
  %20 = sext i1 %19 to i32
  %21 = add nsw i32 %20, %16
  br label %35

22:                                               ; preds = %2
  %23 = icmp eq ptr %7, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %22
  %25 = icmp eq ptr %10, null
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #22
  store ptr %7, ptr %3, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #22
  store ptr %10, ptr %4, align 8, !tbaa !6
  %27 = load ptr, ptr @resort_data.0, align 8, !tbaa !173
  %28 = load ptr, ptr @resort_data.1, align 8, !tbaa !175
  call void %27(ptr noundef nonnull %3, ptr noundef %28) #22
  %29 = load ptr, ptr @resort_data.0, align 8, !tbaa !173
  %30 = load ptr, ptr @resort_data.1, align 8, !tbaa !175
  call void %29(ptr noundef nonnull %4, ptr noundef %30) #22
  %31 = load ptr, ptr %3, align 8, !tbaa !6
  %32 = load ptr, ptr %4, align 8, !tbaa !6
  %33 = icmp ult ptr %31, %32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #22
  %34 = select i1 %33, i32 -1, i32 1
  br label %35

35:                                               ; preds = %26, %24, %22, %12
  %36 = phi i32 [ %21, %12 ], [ -1, %22 ], [ 1, %24 ], [ %34, %26 ]
  ret i32 %36
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_parse_error(ptr noundef %0, i32 noundef %1, ptr noundef %2, i8 noundef zeroext %3) local_unnamed_addr #9 {
  switch i32 %1, label %53 [
    i32 22, label %5
    i32 59, label %14
    i32 58, label %14
    i32 57, label %14
    i32 56, label %14
  ]

5:                                                ; preds = %4
  %6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %7 = shl i64 %6, 32
  %8 = add i64 %7, 73014444032
  %9 = ashr exact i64 %8, 32
  %10 = tail call ptr @xmalloc(i64 noundef %9) #22
  %11 = ashr exact i64 %7, 32
  %12 = tail call ptr @strncpy(ptr noundef %10, ptr noundef %0, i64 noundef %11)
  %13 = getelementptr inbounds i8, ptr %10, i64 %11
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %13, ptr noundef nonnull align 1 dereferenceable(17) @.str.1169, i64 noundef 17, i1 false)
  br label %83

14:                                               ; preds = %4, %4, %4, %4
  %15 = getelementptr inbounds %struct.tree_int_cst, ptr %2, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !17
  %17 = trunc i64 %16 to i32
  %18 = add i32 %1, -57
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  %21 = sext i32 %18 to i64
  %22 = shl i64 %21, 2
  %23 = call ptr @llvm.load.relative.i64(ptr @reltable.c_parse_error, i64 %22)
  br label %24

24:                                               ; preds = %20, %14
  %25 = phi ptr [ @.str.273, %14 ], [ %23, %20 ]
  %26 = icmp ult i32 %17, 256
  br i1 %26, label %27, label %42

27:                                               ; preds = %24
  %28 = and i64 %16, 255
  %29 = getelementptr inbounds [256 x i16], ptr @_sch_istable, i64 0, i64 %28
  %30 = load i16, ptr %29, align 2, !tbaa !136
  %31 = and i16 %30, 172
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %27
  %34 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %35 = shl i64 %34, 32
  %36 = add i64 %35, 64424509440
  %37 = ashr exact i64 %36, 32
  %38 = tail call ptr @xmalloc(i64 noundef %37) #22
  %39 = ashr exact i64 %35, 32
  %40 = tail call ptr @strncpy(ptr noundef %38, ptr noundef %0, i64 noundef %39)
  %41 = getelementptr inbounds i8, ptr %38, i64 %39
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(15) %41, ptr noundef nonnull align 1 dereferenceable(15) @.str.1173, i64 noundef 15, i1 false)
  br label %51

42:                                               ; preds = %27, %24
  %43 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %44 = shl i64 %43, 32
  %45 = add i64 %44, 73014444032
  %46 = ashr exact i64 %45, 32
  %47 = tail call ptr @xmalloc(i64 noundef %46) #22
  %48 = ashr exact i64 %44, 32
  %49 = tail call ptr @strncpy(ptr noundef %47, ptr noundef %0, i64 noundef %48)
  %50 = getelementptr inbounds i8, ptr %47, i64 %48
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(17) %50, ptr noundef nonnull align 1 dereferenceable(17) @.str.1174, i64 noundef 17, i1 false)
  br label %51

51:                                               ; preds = %42, %33
  %52 = phi ptr [ %38, %33 ], [ %47, %42 ]
  tail call void (ptr, ...) @error(ptr noundef nonnull %52, ptr noundef nonnull %25, i32 noundef %17) #22
  tail call void @free(ptr noundef nonnull %52)
  br label %85

53:                                               ; preds = %4
  %54 = add i32 %1, -61
  %55 = icmp ult i32 %54, 5
  br i1 %55, label %56, label %65

56:                                               ; preds = %53
  %57 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %58 = shl i64 %57, 32
  %59 = add i64 %58, 103079215104
  %60 = ashr exact i64 %59, 32
  %61 = tail call ptr @xmalloc(i64 noundef %60) #22
  %62 = ashr exact i64 %58, 32
  %63 = tail call ptr @strncpy(ptr noundef %61, ptr noundef %0, i64 noundef %62)
  %64 = getelementptr inbounds i8, ptr %61, i64 %62
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(24) %64, ptr noundef nonnull align 1 dereferenceable(24) @.str.1175, i64 noundef 24, i1 false)
  br label %83

65:                                               ; preds = %53
  switch i32 %1, label %74 [
    i32 55, label %66
    i32 53, label %68
    i32 70, label %70
    i32 71, label %72
  ]

66:                                               ; preds = %65
  %67 = tail call fastcc ptr @catenate_strings(ptr noundef %0, ptr noundef nonnull @.str.1176, i32 noundef 25)
  br label %80

68:                                               ; preds = %65
  %69 = tail call fastcc ptr @catenate_strings(ptr noundef %0, ptr noundef nonnull @.str.1177, i32 noundef 12)
  tail call void (ptr, ...) @error(ptr noundef %69, ptr noundef %2) #22
  tail call void @free(ptr noundef %69)
  br label %85

70:                                               ; preds = %65
  %71 = tail call fastcc ptr @catenate_strings(ptr noundef %0, ptr noundef nonnull @.str.1178, i32 noundef 20)
  br label %80

72:                                               ; preds = %65
  %73 = tail call fastcc ptr @catenate_strings(ptr noundef %0, ptr noundef nonnull @.str.1179, i32 noundef 20)
  br label %80

74:                                               ; preds = %65
  %75 = icmp ult i32 %1, 73
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = tail call fastcc ptr @catenate_strings(ptr noundef %0, ptr noundef nonnull @.str.1180, i32 noundef 18)
  %78 = tail call ptr @cpp_type2name(i32 noundef %1, i8 noundef zeroext %3) #22
  tail call void (ptr, ...) @error(ptr noundef %77, ptr noundef %78) #22
  tail call void @free(ptr noundef %77)
  br label %85

79:                                               ; preds = %74
  tail call void (ptr, ...) @error(ptr noundef %0) #22
  br label %85

80:                                               ; preds = %66, %70, %72
  %81 = phi ptr [ %67, %66 ], [ %71, %70 ], [ %73, %72 ]
  %82 = icmp eq ptr %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %56, %5, %80
  %84 = phi ptr [ %81, %80 ], [ %61, %56 ], [ %10, %5 ]
  tail call void (ptr, ...) @error(ptr noundef nonnull %84) #22
  tail call void @free(ptr noundef nonnull %84)
  br label %85

85:                                               ; preds = %79, %76, %68, %51, %83, %80
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @catenate_strings(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #9 {
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0)
  %5 = trunc i64 %4 to i32
  %6 = add nsw i32 %5, %2
  %7 = sext i32 %6 to i64
  %8 = tail call ptr @xmalloc(i64 noundef %7) #22
  %9 = shl i64 %4, 32
  %10 = ashr exact i64 %9, 32
  %11 = tail call ptr @strncpy(ptr noundef %8, ptr noundef %0, i64 noundef %10)
  %12 = getelementptr inbounds i8, ptr %8, i64 %10
  %13 = zext i32 %2 to i64
  %14 = tail call ptr @strncpy(ptr noundef %12, ptr noundef %1, i64 noundef %13)
  ret ptr %8
}

declare ptr @cpp_type2name(i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i64 noundef) local_unnamed_addr #11

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @c_cpp_error(ptr nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) local_unnamed_addr #9 {
  %7 = alloca %struct.diagnostic_info, align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #22
  %8 = load i32, ptr @warn_system_headers, align 4, !tbaa !21
  switch i32 %1, label %25 [
    i32 1, label %9
    i32 0, label %13
    i32 2, label %16
    i32 3, label %26
    i32 4, label %22
    i32 5, label %23
    i32 6, label %24
  ]

9:                                                ; preds = %6
  %10 = load i8, ptr @flag_no_output, align 1, !tbaa !17
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %40

12:                                               ; preds = %9
  store i32 1, ptr @warn_system_headers, align 4, !tbaa !21
  br label %26

13:                                               ; preds = %6
  %14 = load i8, ptr @flag_no_output, align 1, !tbaa !17
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %26, label %40

16:                                               ; preds = %6
  %17 = load i8, ptr @flag_no_output, align 1, !tbaa !17
  %18 = icmp eq i8 %17, 0
  %19 = load i32, ptr @flag_pedantic_errors, align 4
  %20 = icmp ne i32 %19, 0
  %21 = select i1 %18, i1 true, i1 %20
  br i1 %21, label %26, label %40

22:                                               ; preds = %6
  br label %26

23:                                               ; preds = %6
  br label %26

24:                                               ; preds = %6
  br label %26

25:                                               ; preds = %6
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 8312, ptr noundef nonnull @.str.238) #22
  unreachable

26:                                               ; preds = %12, %6, %16, %13, %24, %23, %22
  %27 = phi i32 [ 2, %24 ], [ 8, %23 ], [ 3, %22 ], [ 6, %13 ], [ 10, %16 ], [ 4, %6 ], [ 6, %12 ]
  %28 = load i8, ptr @done_lexing, align 1, !tbaa !17
  %29 = icmp eq i8 %28, 0
  %30 = load i32, ptr @input_location, align 4
  %31 = select i1 %29, i32 %2, i32 %30
  call void @diagnostic_set_info_translated(ptr noundef nonnull %7, ptr noundef %4, ptr noundef %5, i32 noundef %31, i32 noundef %27) #22
  %32 = icmp eq i32 %3, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.diagnostic_info, ptr %7, i64 0, i32 2
  store i32 %3, ptr %34, align 4, !tbaa !178
  br label %35

35:                                               ; preds = %33, %26
  %36 = load ptr, ptr @global_dc, align 8, !tbaa !6
  %37 = call zeroext i8 @diagnostic_report_diagnostic(ptr noundef %36, ptr noundef nonnull %7) #22
  %38 = icmp eq i32 %1, 1
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 %8, ptr @warn_system_headers, align 4, !tbaa !21
  br label %40

40:                                               ; preds = %35, %39, %16, %13, %9
  %41 = phi i8 [ 0, %9 ], [ 0, %13 ], [ 0, %16 ], [ %37, %39 ], [ %37, %35 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #22
  ret i8 %41
}

declare void @diagnostic_set_info_translated(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @diagnostic_report_diagnostic(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @c_common_to_target_charset(i64 noundef %0) local_unnamed_addr #9 {
  %2 = trunc i64 %0 to i32
  %3 = and i32 %2, 255
  %4 = load ptr, ptr @parse_in, align 8, !tbaa !6
  %5 = tail call i32 @cpp_host_to_exec_charset(ptr noundef %4, i32 noundef %3) #22
  %6 = load i32, ptr @flag_signed_char, align 4, !tbaa !21
  %7 = icmp eq i32 %6, 0
  %8 = zext i32 %5 to i64
  %9 = shl i64 %8, 56
  %10 = ashr exact i64 %9, 56
  %11 = select i1 %7, i64 %8, i64 %10
  ret i64 %11
}

declare i32 @cpp_host_to_exec_charset(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @fold_offsetof(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %4 = tail call fastcc ptr @fold_offsetof_1(ptr noundef %0, ptr noundef %1)
  %5 = tail call ptr @convert(ptr noundef %3, ptr noundef %4) #22
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @fold_offsetof_1(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  br label %3

3:                                                ; preds = %151, %2
  %4 = phi ptr [ %0, %2 ], [ %147, %151 ]
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %12

6:                                                ; preds = %3
  %7 = load i64, ptr %1, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  br label %159

12:                                               ; preds = %6, %3
  %13 = load i64, ptr %4, align 8
  %14 = trunc i64 %13 to i16
  switch i16 %14, label %153 [
    i16 0, label %159
    i16 32, label %15
    i16 59, label %17
    i16 55, label %17
    i16 116, label %19
    i16 47, label %19
    i16 41, label %28
    i16 45, label %53
    i16 52, label %145
  ]

15:                                               ; preds = %12
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1181, ptr noundef nonnull %4) #22
  %16 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %159

17:                                               ; preds = %12, %12
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1182) #22
  %18 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %159

19:                                               ; preds = %12, %12
  %20 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = tail call i32 @integer_zerop(ptr noundef %21) #22
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1183) #22
  %25 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %159

26:                                               ; preds = %19
  %27 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  br label %159

28:                                               ; preds = %12
  %29 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = tail call fastcc ptr @fold_offsetof_1(ptr noundef %30, ptr noundef %1)
  %32 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %33 = icmp eq ptr %31, %32
  br i1 %33, label %159, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.tree_decl_common, ptr %36, i64 0, i32 2
  %38 = load i64, ptr %37, align 8
  %39 = and i64 %38, 524288
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1184, ptr noundef nonnull %36) #22
  %42 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %159

43:                                               ; preds = %34
  %44 = load i32, ptr @input_location, align 4, !tbaa !21
  %45 = getelementptr inbounds %struct.tree_field_decl, ptr %36, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  %47 = getelementptr inbounds %struct.tree_field_decl, ptr %36, i64 0, i32 4
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = tail call i64 @tree_low_cst(ptr noundef %48, i32 noundef 1) #22
  %50 = sdiv i64 %49, 8
  %51 = tail call ptr @size_int_kind(i64 noundef %50, i32 noundef 0) #22
  %52 = tail call ptr @size_binop_loc(i32 noundef %44, i32 noundef 63, ptr noundef %46, ptr noundef %51) #22
  br label %154

53:                                               ; preds = %12
  %54 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = tail call fastcc ptr @fold_offsetof_1(ptr noundef %55, ptr noundef %1)
  %57 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %58 = icmp eq ptr %56, %57
  br i1 %58, label %159, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 1
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = load i64, ptr %61, align 8
  %63 = and i64 %62, 65535
  %64 = icmp eq i64 %63, 23
  br i1 %64, label %65, label %73

65:                                               ; preds = %59
  %66 = tail call i32 @tree_int_cst_sgn(ptr noundef nonnull %61) #22
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %65
  %69 = load i32, ptr @input_location, align 4, !tbaa !21
  %70 = getelementptr inbounds %struct.tree_common, ptr %61, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = tail call ptr @fold_build1_stat_loc(i32 noundef %69, i32 noundef 79, ptr noundef %71, ptr noundef nonnull %61) #22
  br label %73

73:                                               ; preds = %68, %65, %59
  %74 = phi i1 [ false, %68 ], [ true, %65 ], [ true, %59 ]
  %75 = phi ptr [ %72, %68 ], [ %61, %65 ], [ %61, %59 ]
  %76 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %77 = tail call ptr @convert(ptr noundef %76, ptr noundef %75) #22
  %78 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = getelementptr inbounds %struct.tree_type, ptr %79, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = tail call ptr @size_binop_loc(i32 noundef 0, i32 noundef 65, ptr noundef %81, ptr noundef %77) #22
  br i1 %74, label %83, label %154

83:                                               ; preds = %73
  %84 = load i64, ptr %77, align 8
  %85 = and i64 %84, 65535
  %86 = icmp eq i64 %85, 23
  br i1 %86, label %87, label %154

87:                                               ; preds = %83
  %88 = tail call ptr @array_ref_up_bound(ptr noundef nonnull %4) #22
  %89 = icmp eq ptr %88, null
  br i1 %89, label %154, label %90

90:                                               ; preds = %87
  %91 = load i64, ptr %88, align 8
  %92 = and i64 %91, 65535
  %93 = icmp eq i64 %92, 23
  br i1 %93, label %94, label %154

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.tree_common, ptr %88, i64 0, i32 2
  %96 = load ptr, ptr %95, align 8, !tbaa !17
  %97 = getelementptr inbounds %struct.tree_type, ptr %96, i64 0, i32 14
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = tail call i32 @tree_int_cst_equal(ptr noundef nonnull %88, ptr noundef %98) #22
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %154

101:                                              ; preds = %94
  %102 = load ptr, ptr %95, align 8, !tbaa !17
  %103 = tail call ptr @build_int_cst(ptr noundef %102, i64 noundef 1) #22
  %104 = tail call ptr @size_binop_loc(i32 noundef 0, i32 noundef 63, ptr noundef nonnull %88, ptr noundef %103) #22
  %105 = tail call i32 @tree_int_cst_lt(ptr noundef %104, ptr noundef nonnull %77) #22
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %154, label %107

107:                                              ; preds = %101
  %108 = load ptr, ptr %54, align 8, !tbaa !17
  %109 = load i64, ptr %108, align 8
  %110 = and i64 %109, 65535
  %111 = icmp eq i64 %110, 41
  br i1 %111, label %112, label %138

112:                                              ; preds = %107, %134
  %113 = phi i64 [ %135, %134 ], [ %109, %107 ]
  %114 = phi ptr [ %116, %134 ], [ %108, %107 ]
  %115 = getelementptr inbounds %struct.tree_exp, ptr %114, i64 0, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = getelementptr inbounds %struct.tree_common, ptr %116, i64 0, i32 2
  %118 = load ptr, ptr %117, align 8, !tbaa !17
  %119 = load i64, ptr %118, align 8
  %120 = and i64 %119, 65535
  %121 = icmp eq i64 %120, 16
  br i1 %121, label %122, label %134

122:                                              ; preds = %112
  %123 = getelementptr inbounds %struct.tree_exp, ptr %114, i64 1
  %124 = load ptr, ptr %123, align 8, !tbaa !17
  br label %125

125:                                              ; preds = %130, %122
  %126 = phi ptr [ %124, %122 ], [ %128, %130 ]
  %127 = getelementptr inbounds %struct.tree_common, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !17
  %129 = icmp eq ptr %128, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %125
  %131 = load i64, ptr %128, align 8
  %132 = and i64 %131, 65535
  %133 = icmp eq i64 %132, 31
  br i1 %133, label %138, label %125, !llvm.loop !181

134:                                              ; preds = %125, %112
  %135 = load i64, ptr %116, align 8
  %136 = and i64 %135, 65535
  %137 = icmp eq i64 %136, 41
  br i1 %137, label %112, label %138, !llvm.loop !182

138:                                              ; preds = %134, %130, %107
  %139 = phi i64 [ %109, %107 ], [ %113, %130 ], [ %135, %134 ]
  %140 = trunc i64 %139 to i16
  switch i16 %140, label %154 [
    i16 45, label %141
    i16 41, label %141
  ]

141:                                              ; preds = %138, %138
  %142 = getelementptr inbounds %struct.tree_common, ptr %108, i64 0, i32 2
  %143 = load ptr, ptr %142, align 8, !tbaa !17
  %144 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 41, ptr noundef nonnull @.str.1185, ptr noundef nonnull %77, ptr noundef %143) #22
  br label %154

145:                                              ; preds = %12
  %146 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 1
  %147 = load ptr, ptr %146, align 8, !tbaa !17
  %148 = load i64, ptr %147, align 8
  %149 = and i64 %148, 65535
  %150 = icmp eq i64 %149, 32
  br i1 %150, label %151, label %152

151:                                              ; preds = %145, %152
  br label %3

152:                                              ; preds = %145
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 8462, ptr noundef nonnull @.str.238) #22
  br label %151

153:                                              ; preds = %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 8466, ptr noundef nonnull @.str.238) #22
  unreachable

154:                                              ; preds = %87, %90, %94, %101, %138, %141, %73, %83, %43
  %155 = phi i32 [ 63, %83 ], [ 64, %73 ], [ 63, %43 ], [ 63, %141 ], [ 63, %138 ], [ 63, %101 ], [ 63, %94 ], [ 63, %90 ], [ 63, %87 ]
  %156 = phi ptr [ %56, %83 ], [ %56, %73 ], [ %31, %43 ], [ %56, %141 ], [ %56, %138 ], [ %56, %101 ], [ %56, %94 ], [ %56, %90 ], [ %56, %87 ]
  %157 = phi ptr [ %82, %83 ], [ %82, %73 ], [ %52, %43 ], [ %82, %141 ], [ %82, %138 ], [ %82, %101 ], [ %82, %94 ], [ %82, %90 ], [ %82, %87 ]
  %158 = tail call ptr @size_binop_loc(i32 noundef 0, i32 noundef %155, ptr noundef %156, ptr noundef %157) #22
  br label %159

159:                                              ; preds = %12, %53, %28, %154, %41, %26, %24, %17, %15, %10
  %160 = phi ptr [ %11, %10 ], [ %158, %154 ], [ %42, %41 ], [ %27, %26 ], [ %25, %24 ], [ %18, %17 ], [ %16, %15 ], [ %31, %28 ], [ %56, %53 ], [ %4, %12 ]
  ret ptr %160
}

declare ptr @array_ref_up_bound(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @lvalue_error(i32 noundef %0) local_unnamed_addr #9 {
  switch i32 %0, label %7 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
  ]

2:                                                ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1186) #22
  br label %8

3:                                                ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1187) #22
  br label %8

4:                                                ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1188) #22
  br label %8

5:                                                ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1189) #22
  br label %8

6:                                                ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1190) #22
  br label %8

7:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 8503, ptr noundef nonnull @.str.238) #22
  br label %8

8:                                                ; preds = %7, %6, %5, %4, %3, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @complete_array_type(ptr nocapture noundef %0, ptr noundef readonly %1, i8 noundef zeroext %2) local_unnamed_addr #9 {
  %4 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !6
  %5 = icmp eq ptr %1, null
  br i1 %5, label %85, label %6

6:                                                ; preds = %3
  %7 = load i64, ptr %1, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %81 [
    i16 28, label %9
    i16 51, label %22
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.tree_common, ptr %11, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = tail call i64 @int_size_in_bytes(ptr noundef %13) #22
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %struct.tree_string, ptr %1, i64 0, i32 1
  %17 = load i32, ptr %16, align 8, !tbaa !17
  %18 = sdiv i32 %17, %15
  %19 = add nsw i32 %18, -1
  %20 = sext i32 %19 to i64
  %21 = tail call ptr @size_int_kind(i64 noundef %20, i32 noundef 0) #22
  br label %87

22:                                               ; preds = %6
  %23 = getelementptr inbounds %struct.tree_constructor, ptr %1, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = icmp eq ptr %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = load i32, ptr %24, align 8, !tbaa !183
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %22, %26
  %30 = load i32, ptr @pedantic, align 4, !tbaa !21
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 0, i32 3
  %33 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 15), align 8, !tbaa !6
  br label %87

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %24, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !185
  %37 = icmp eq ptr %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = load i32, ptr @input_location, align 4, !tbaa !21
  %40 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %41 = tail call ptr @fold_convert_loc(i32 noundef %39, ptr noundef %40, ptr noundef nonnull %36) #22
  %42 = load i32, ptr %24, align 8, !tbaa !183
  br label %43

43:                                               ; preds = %38, %34
  %44 = phi i32 [ %42, %38 ], [ %27, %34 ]
  %45 = phi ptr [ %41, %38 ], [ %4, %34 ]
  %46 = icmp ugt i32 %44, 1
  br i1 %46, label %47, label %87

47:                                               ; preds = %43, %65
  %48 = phi i8 [ %71, %65 ], [ 0, %43 ]
  %49 = phi i64 [ %72, %65 ], [ 1, %43 ]
  %50 = phi ptr [ %66, %65 ], [ %45, %43 ]
  %51 = phi ptr [ %70, %65 ], [ %45, %43 ]
  %52 = and i64 %49, 4294967295
  %53 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %24, i64 0, i32 2, i64 %52
  %54 = load ptr, ptr %53, align 8, !tbaa !185
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %65

56:                                               ; preds = %47
  %57 = icmp eq i8 %48, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %56
  %59 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %60 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef %59, ptr noundef %50) #22
  br label %61

61:                                               ; preds = %58, %56
  %62 = phi ptr [ %60, %58 ], [ %50, %56 ]
  %63 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 18), align 16, !tbaa !6
  %64 = tail call ptr @size_binop_loc(i32 noundef 0, i32 noundef 63, ptr noundef %62, ptr noundef %63) #22
  br label %65

65:                                               ; preds = %47, %61
  %66 = phi ptr [ %64, %61 ], [ %54, %47 ]
  %67 = phi i8 [ 0, %61 ], [ 1, %47 ]
  %68 = tail call i32 @tree_int_cst_lt(ptr noundef %51, ptr noundef %66) #22
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, ptr %51, ptr %66
  %71 = select i1 %69, i8 %48, i8 %67
  %72 = add i64 %49, 1
  %73 = trunc i64 %72 to i32
  %74 = load i32, ptr %24, align 8, !tbaa !183
  %75 = icmp ugt i32 %74, %73
  br i1 %75, label %47, label %76, !llvm.loop !187

76:                                               ; preds = %65
  %77 = icmp eq i8 %71, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = load ptr, ptr @sizetype_tab, align 16, !tbaa !6
  %80 = tail call ptr @fold_convert_loc(i32 noundef 0, ptr noundef %79, ptr noundef %70) #22
  br label %87

81:                                               ; preds = %6
  %82 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %83 = icmp ne ptr %82, %1
  %84 = zext i1 %83 to i32
  br label %87

85:                                               ; preds = %3
  %86 = icmp eq i8 %2, 0
  br i1 %86, label %170, label %87

87:                                               ; preds = %43, %76, %78, %81, %29, %85, %9
  %88 = phi i32 [ 0, %9 ], [ 2, %85 ], [ %32, %29 ], [ %84, %81 ], [ 0, %78 ], [ 0, %76 ], [ 0, %43 ]
  %89 = phi ptr [ %21, %9 ], [ %4, %85 ], [ %33, %29 ], [ %4, %81 ], [ %80, %78 ], [ %70, %76 ], [ %45, %43 ]
  %90 = load ptr, ptr %0, align 8, !tbaa !6
  %91 = getelementptr inbounds %struct.tree_common, ptr %90, i64 0, i32 2
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  %93 = tail call ptr @strip_array_types(ptr noundef %92) #22
  %94 = load i64, ptr %93, align 8
  %95 = trunc i64 %94 to i32
  %96 = lshr i32 %95, 20
  %97 = and i32 %96, 1
  %98 = tail call ptr @strip_array_types(ptr noundef %92) #22
  %99 = load i64, ptr %98, align 8
  %100 = trunc i64 %99 to i32
  %101 = lshr i32 %100, 18
  %102 = and i32 %101, 2
  %103 = or i32 %102, %97
  %104 = tail call ptr @strip_array_types(ptr noundef %92) #22
  %105 = getelementptr inbounds %struct.tree_type, ptr %104, i64 0, i32 6
  %106 = load i32, ptr %105, align 4
  %107 = lshr i32 %106, 11
  %108 = and i32 %107, 4
  %109 = or i32 %103, %108
  %110 = tail call ptr @strip_array_types(ptr noundef %92) #22
  %111 = load i64, ptr %110, align 8
  %112 = lshr i64 %111, 48
  %113 = trunc i64 %112 to i32
  %114 = and i32 %113, 65280
  %115 = or i32 %109, %114
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %87
  %118 = tail call ptr @c_build_qualified_type(ptr noundef %92, i32 noundef %114) #22
  br label %119

119:                                              ; preds = %87, %117
  %120 = phi ptr [ %118, %117 ], [ %92, %87 ]
  %121 = getelementptr inbounds %struct.tree_type, ptr %90, i64 0, i32 16
  %122 = load ptr, ptr %121, align 8, !tbaa !17
  %123 = tail call ptr @build_distinct_type_copy(ptr noundef %122) #22
  %124 = getelementptr inbounds %struct.tree_common, ptr %123, i64 0, i32 2
  store ptr %120, ptr %124, align 8, !tbaa !17
  %125 = tail call ptr @build_index_type(ptr noundef %89) #22
  %126 = getelementptr inbounds %struct.tree_type, ptr %123, i64 0, i32 1
  store ptr %125, ptr %126, align 8, !tbaa !17
  tail call void @layout_type(ptr noundef %123) #22
  %127 = getelementptr inbounds %struct.tree_type, ptr %120, i64 0, i32 5
  %128 = tail call i32 @iterative_hash(ptr noundef nonnull %127, i64 noundef 4, i32 noundef 0) #22
  %129 = load ptr, ptr %126, align 8, !tbaa !17
  %130 = getelementptr inbounds %struct.tree_type, ptr %129, i64 0, i32 5
  %131 = tail call i32 @iterative_hash(ptr noundef nonnull %130, i64 noundef 4, i32 noundef %128) #22
  %132 = tail call ptr @type_hash_canon(i32 noundef %131, ptr noundef %123) #22
  %133 = getelementptr inbounds %struct.tree_common, ptr %132, i64 0, i32 2
  %134 = load ptr, ptr %133, align 8, !tbaa !17
  %135 = getelementptr inbounds %struct.tree_type, ptr %134, i64 0, i32 19
  %136 = load ptr, ptr %135, align 8, !tbaa !17
  %137 = icmp eq ptr %136, null
  br i1 %137, label %150, label %138

138:                                              ; preds = %119
  %139 = getelementptr inbounds %struct.tree_type, ptr %132, i64 0, i32 1
  %140 = load ptr, ptr %139, align 8, !tbaa !17
  %141 = getelementptr inbounds %struct.tree_type, ptr %140, i64 0, i32 19
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  %143 = icmp eq ptr %142, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %138
  %145 = icmp eq ptr %136, %134
  %146 = icmp eq ptr %142, %140
  %147 = and i1 %145, %146
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = tail call ptr @build_array_type(ptr noundef nonnull %136, ptr noundef nonnull %142) #22
  br label %150

150:                                              ; preds = %144, %119, %138, %148
  %151 = phi ptr [ %149, %148 ], [ null, %138 ], [ null, %119 ], [ %132, %144 ]
  %152 = getelementptr inbounds %struct.tree_type, ptr %132, i64 0, i32 19
  store ptr %151, ptr %152, align 8, !tbaa !17
  br i1 %116, label %155, label %153

153:                                              ; preds = %150
  %154 = tail call ptr @c_build_qualified_type(ptr noundef nonnull %132, i32 noundef %115) #22
  br label %155

155:                                              ; preds = %150, %153
  %156 = phi ptr [ %154, %153 ], [ %132, %150 ]
  %157 = getelementptr inbounds %struct.tree_type, ptr %156, i64 0, i32 2
  %158 = load ptr, ptr %157, align 8, !tbaa !17
  %159 = icmp eq ptr %158, null
  br i1 %159, label %168, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.tree_type, ptr %156, i64 0, i32 3
  %162 = load ptr, ptr %161, align 8, !tbaa !17
  %163 = load i64, ptr %162, align 8
  %164 = and i64 %163, 134283263
  %165 = icmp eq i64 %164, 134217751
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1191) #22
  %167 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %168

168:                                              ; preds = %166, %160, %155
  %169 = phi ptr [ %167, %166 ], [ %156, %160 ], [ %156, %155 ]
  store ptr %169, ptr %0, align 8, !tbaa !6
  br label %170

170:                                              ; preds = %85, %168
  %171 = phi i32 [ %88, %168 ], [ 2, %85 ]
  ret i32 %171
}

declare i64 @int_size_in_bytes(ptr noundef) local_unnamed_addr #3

declare ptr @strip_array_types(ptr noundef) local_unnamed_addr #3

declare ptr @build_distinct_type_copy(ptr noundef) local_unnamed_addr #3

declare void @layout_type(ptr noundef) local_unnamed_addr #3

declare i32 @iterative_hash(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @type_hash_canon(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @resolve_overloaded_builtin(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %5 = load i32, ptr %4, align 8
  %6 = and i32 %5, 2047
  %7 = lshr i32 %5, 11
  %8 = and i32 %7, 3
  switch i32 %8, label %99 [
    i32 3, label %14
    i32 2, label %9
  ]

9:                                                ; preds = %3
  %10 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 26), align 8, !tbaa !188
  %11 = icmp eq ptr %10, null
  br i1 %11, label %99, label %12

12:                                               ; preds = %9
  %13 = tail call ptr %10(i32 noundef %0, ptr noundef nonnull %1, ptr noundef %2) #22
  br label %99

14:                                               ; preds = %3
  switch i32 %6, label %99 [
    i32 555, label %15
    i32 561, label %15
    i32 567, label %15
    i32 573, label %15
    i32 579, label %15
    i32 585, label %15
    i32 591, label %15
    i32 597, label %15
    i32 603, label %15
    i32 609, label %15
    i32 615, label %15
    i32 621, label %15
    i32 627, label %15
    i32 633, label %15
    i32 639, label %15
    i32 645, label %15
  ]

15:                                               ; preds = %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14, %14
  %16 = icmp eq ptr %2, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = load i32, ptr %2, align 8, !tbaa !189
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17, %15
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1192, ptr noundef nonnull %1) #22
  br label %40

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.VEC_tree_base, ptr %2, i64 0, i32 2, i64 0
  %23 = load ptr, ptr %22, align 8, !tbaa !6
  %24 = getelementptr inbounds %struct.tree_common, ptr %23, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = load i64, ptr %25, align 8
  %27 = and i64 %26, 65535
  %28 = icmp eq i64 %27, 10
  br i1 %28, label %29, label %39

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = load i64, ptr %31, align 8
  %33 = trunc i64 %32 to i16
  switch i16 %33, label %39 [
    i16 6, label %34
    i16 7, label %34
    i16 8, label %34
    i16 10, label %34
    i16 12, label %34
  ]

34:                                               ; preds = %29, %29, %29, %29, %29
  %35 = getelementptr inbounds %struct.tree_type, ptr %31, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = tail call i64 @tree_low_cst(ptr noundef %36, i32 noundef 1) #22
  %38 = trunc i64 %37 to i32
  switch i32 %38, label %39 [
    i32 16, label %42
    i32 8, label %42
    i32 4, label %42
    i32 2, label %42
    i32 1, label %42
  ]

39:                                               ; preds = %34, %29, %21
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1193, i32 noundef 1, ptr noundef nonnull %1) #22
  br label %40

40:                                               ; preds = %20, %39
  %41 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %99

42:                                               ; preds = %34, %34, %34, %34, %34
  %43 = and i64 %37, 4294967295
  %44 = tail call i32 @exact_log2(i64 noundef %43) #22
  %45 = add nuw nsw i32 %6, 1
  %46 = add i32 %45, %44
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [721 x ptr], ptr @built_in_decls, i64 0, i64 %47
  %49 = load ptr, ptr %48, align 8, !tbaa !6
  %50 = getelementptr i8, ptr %49, i64 16
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = getelementptr i8, ptr %51, i64 24
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = getelementptr i8, ptr %53, i64 8
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = load ptr, ptr %22, align 8, !tbaa !6
  %57 = getelementptr inbounds %struct.tree_common, ptr %56, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = getelementptr inbounds %struct.tree_common, ptr %58, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %62 = icmp eq ptr %61, %55
  br i1 %62, label %87, label %63

63:                                               ; preds = %42, %70
  %64 = phi i64 [ %66, %70 ], [ 0, %42 ]
  %65 = phi ptr [ %78, %70 ], [ %55, %42 ]
  %66 = add nuw nsw i64 %64, 1
  %67 = load i32, ptr %2, align 8, !tbaa !189
  %68 = zext i32 %67 to i64
  %69 = icmp ult i64 %66, %68
  br i1 %69, label %70, label %85

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.VEC_tree_base, ptr %2, i64 0, i32 2, i64 %66
  %72 = load ptr, ptr %71, align 8, !tbaa !6
  %73 = tail call ptr @convert(ptr noundef %60, ptr noundef %72) #22
  %74 = getelementptr inbounds %struct.tree_list, ptr %65, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = tail call ptr @convert(ptr noundef %75, ptr noundef %73) #22
  store ptr %76, ptr %71, align 8, !tbaa !6
  %77 = getelementptr inbounds %struct.tree_common, ptr %65, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !6
  %80 = icmp eq ptr %78, %79
  br i1 %80, label %81, label %63

81:                                               ; preds = %70
  %82 = trunc i64 %64 to i32
  %83 = add nuw i32 %82, 2
  %84 = load ptr, ptr %22, align 8, !tbaa !6
  br label %87

85:                                               ; preds = %63
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.1192, ptr noundef %1) #22
  %86 = load ptr, ptr @global_trees, align 16, !tbaa !6
  br label %99

87:                                               ; preds = %81, %42
  %88 = phi ptr [ %56, %42 ], [ %84, %81 ]
  %89 = phi i32 [ 1, %42 ], [ %83, %81 ]
  store i32 %89, ptr %2, align 8, !tbaa !189
  %90 = tail call ptr @build_function_call_vec(i32 noundef %0, ptr noundef %49, ptr noundef nonnull %2, ptr noundef null) #22
  switch i32 %6, label %91 [
    i32 645, label %99
    i32 627, label %99
  ]

91:                                               ; preds = %87
  %92 = getelementptr i8, ptr %88, i64 16
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  %94 = getelementptr i8, ptr %93, i64 16
  %95 = load ptr, ptr %94, align 8, !tbaa !17
  %96 = getelementptr i8, ptr %95, i64 128
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  %98 = tail call ptr @convert(ptr noundef %97, ptr noundef %90) #22
  br label %99

99:                                               ; preds = %14, %40, %85, %87, %87, %91, %3, %9, %12
  %100 = phi ptr [ %13, %12 ], [ null, %9 ], [ null, %3 ], [ %41, %40 ], [ %86, %85 ], [ %98, %91 ], [ %90, %87 ], [ %90, %87 ], [ null, %14 ]
  ret ptr %100
}

declare i32 @exact_log2(i64 noundef) local_unnamed_addr #3

declare ptr @build_function_call_vec(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @same_scalar_type_ignoring_signedness(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i32
  %5 = and i32 %4, 65535
  %6 = and i32 %4, 65534
  %7 = icmp eq i32 %6, 8
  %8 = icmp eq i32 %5, 11
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = load i64, ptr %1, align 8
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 65535
  %14 = and i32 %12, 65534
  %15 = icmp eq i32 %14, 8
  %16 = icmp eq i32 %13, 11
  %17 = or i1 %15, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %10, %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 8834, ptr noundef nonnull @.str.238) #22
  br label %19

19:                                               ; preds = %10, %18
  %20 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef nonnull %0)
  %21 = tail call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %1)
  %22 = icmp eq ptr %20, %21
  %23 = zext i1 %22 to i8
  ret i8 %23
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @check_missing_format_attribute(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %36, label %14

10:                                               ; preds = %14
  %11 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %36, label %14, !llvm.loop !191

14:                                               ; preds = %2, %10
  %15 = phi ptr [ %12, %10 ], [ %8, %2 ]
  %16 = getelementptr inbounds %struct.tree_list, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = tail call i32 @is_attribute_p(ptr noundef nonnull @.str.271, ptr noundef %17) #22
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %10, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tree_type, ptr %6, i64 0, i32 4
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  %23 = icmp eq ptr %22, null
  br i1 %23, label %36, label %28

24:                                               ; preds = %28
  %25 = getelementptr inbounds %struct.tree_common, ptr %29, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = icmp eq ptr %26, null
  br i1 %27, label %34, label %28, !llvm.loop !192

28:                                               ; preds = %20, %24
  %29 = phi ptr [ %26, %24 ], [ %22, %20 ]
  %30 = getelementptr inbounds %struct.tree_list, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = tail call i32 @is_attribute_p(ptr noundef nonnull @.str.271, ptr noundef %31) #22
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %24, label %34

34:                                               ; preds = %28, %24
  %35 = zext i1 %33 to i8
  br label %36

36:                                               ; preds = %10, %20, %34, %2
  %37 = phi i8 [ 0, %2 ], [ 1, %20 ], [ %35, %34 ], [ 0, %10 ]
  ret i8 %37
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @warn_array_subscript_with_type_char(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 16
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = load ptr, ptr @integer_types, align 16, !tbaa !6
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load i64, ptr %0, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 23
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 54, ptr noundef nonnull @.str.1194) #22
  br label %14

14:                                               ; preds = %12, %8, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @warn_about_parentheses(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr noundef %4) local_unnamed_addr #9 {
  %6 = load i32, ptr @warn_parentheses, align 4, !tbaa !21
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %217, label %8

8:                                                ; preds = %5
  switch i32 %0, label %177 [
    i32 83, label %9
    i32 84, label %17
    i32 92, label %25
    i32 87, label %29
    i32 88, label %85
    i32 89, label %105
    i32 101, label %157
    i32 102, label %167
  ]

9:                                                ; preds = %8
  %10 = icmp eq i32 %1, 63
  %11 = icmp eq i32 %3, 63
  %12 = or i1 %10, %11
  br i1 %12, label %214, label %13

13:                                               ; preds = %9
  %14 = icmp eq i32 %1, 64
  %15 = icmp eq i32 %3, 64
  %16 = or i1 %14, %15
  br i1 %16, label %214, label %217

17:                                               ; preds = %8
  %18 = icmp eq i32 %1, 63
  %19 = icmp eq i32 %3, 63
  %20 = or i1 %18, %19
  br i1 %20, label %214, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %1, 64
  %23 = icmp eq i32 %3, 64
  %24 = or i1 %22, %23
  br i1 %24, label %214, label %217

25:                                               ; preds = %8
  %26 = icmp eq i32 %1, 91
  %27 = icmp eq i32 %3, 91
  %28 = or i1 %26, %27
  br i1 %28, label %214, label %217

29:                                               ; preds = %8
  %30 = and i32 %1, -2
  %31 = icmp eq i32 %30, 88
  %32 = add i32 %1, -63
  %33 = icmp ult i32 %32, 2
  %34 = or i1 %31, %33
  %35 = and i32 %3, -2
  %36 = icmp eq i32 %35, 88
  %37 = or i1 %34, %36
  %38 = add i32 %3, -63
  %39 = icmp ult i32 %38, 2
  %40 = or i1 %39, %37
  br i1 %40, label %214, label %41

41:                                               ; preds = %29
  %42 = sext i32 %1 to i64
  %43 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !17
  %45 = icmp eq i32 %44, 5
  br i1 %45, label %214, label %46

46:                                               ; preds = %41
  %47 = sext i32 %3 to i64
  %48 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !17
  %50 = icmp eq i32 %49, 5
  br i1 %50, label %214, label %51

51:                                               ; preds = %46
  %52 = icmp eq i32 %1, 96
  br i1 %52, label %53, label %217

53:                                               ; preds = %51
  %54 = load i64, ptr %4, align 8
  %55 = trunc i64 %54 to i32
  %56 = and i32 %55, 65535
  %57 = and i64 %54, 65535
  %58 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %57
  %59 = load i32, ptr %58, align 4, !tbaa !17
  %60 = icmp eq i32 %59, 5
  %61 = icmp eq i32 %56, 93
  %62 = or i1 %60, %61
  %63 = icmp eq i32 %56, 91
  %64 = or i1 %63, %62
  %65 = and i32 %55, 65533
  %66 = icmp eq i32 %65, 92
  %67 = or i1 %66, %64
  %68 = add nsw i32 %56, -95
  %69 = icmp ult i32 %68, 2
  %70 = or i1 %69, %67
  br i1 %70, label %217, label %71

71:                                               ; preds = %53
  %72 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = load i64, ptr %73, align 8
  %75 = and i64 %74, 65535
  %76 = icmp eq i64 %75, 7
  br i1 %76, label %217, label %77

77:                                               ; preds = %71
  %78 = icmp eq i32 %3, 23
  br i1 %78, label %214, label %79

79:                                               ; preds = %77
  %80 = tail call i32 @integer_onep(ptr noundef nonnull %4) #22
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %217

82:                                               ; preds = %79
  %83 = tail call i32 @integer_zerop(ptr noundef nonnull %4) #22
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %214, label %217

85:                                               ; preds = %8
  %86 = icmp eq i32 %1, 89
  %87 = add i32 %1, -63
  %88 = icmp ult i32 %87, 2
  %89 = or i1 %86, %88
  %90 = icmp eq i32 %3, 89
  %91 = or i1 %89, %90
  %92 = add i32 %3, -63
  %93 = icmp ult i32 %92, 2
  %94 = or i1 %91, %93
  br i1 %94, label %214, label %95

95:                                               ; preds = %85
  %96 = sext i32 %1 to i64
  %97 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !17
  %99 = icmp eq i32 %98, 5
  br i1 %99, label %214, label %100

100:                                              ; preds = %95
  %101 = sext i32 %3 to i64
  %102 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !17
  %104 = icmp eq i32 %103, 5
  br i1 %104, label %214, label %217

105:                                              ; preds = %8
  %106 = icmp eq i32 %1, 63
  %107 = icmp eq i32 %3, 63
  %108 = or i1 %106, %107
  br i1 %108, label %214, label %109

109:                                              ; preds = %105
  %110 = icmp eq i32 %1, 64
  %111 = icmp eq i32 %3, 64
  %112 = or i1 %110, %111
  br i1 %112, label %214, label %113

113:                                              ; preds = %109
  %114 = sext i32 %1 to i64
  %115 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %114
  %116 = load i32, ptr %115, align 4, !tbaa !17
  %117 = icmp eq i32 %116, 5
  br i1 %117, label %214, label %118

118:                                              ; preds = %113
  %119 = sext i32 %3 to i64
  %120 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !17
  %122 = icmp eq i32 %121, 5
  br i1 %122, label %214, label %123

123:                                              ; preds = %118
  %124 = icmp eq i32 %1, 96
  br i1 %124, label %125, label %217

125:                                              ; preds = %123
  %126 = load i64, ptr %4, align 8
  %127 = trunc i64 %126 to i32
  %128 = and i32 %127, 65535
  %129 = and i64 %126, 65535
  %130 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !17
  %132 = icmp eq i32 %131, 5
  %133 = icmp eq i32 %128, 93
  %134 = or i1 %132, %133
  %135 = icmp eq i32 %128, 91
  %136 = or i1 %135, %134
  %137 = and i32 %127, 65533
  %138 = icmp eq i32 %137, 92
  %139 = or i1 %138, %136
  %140 = add nsw i32 %128, -95
  %141 = icmp ult i32 %140, 2
  %142 = or i1 %141, %139
  br i1 %142, label %217, label %143

143:                                              ; preds = %125
  %144 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %145 = load ptr, ptr %144, align 8, !tbaa !17
  %146 = load i64, ptr %145, align 8
  %147 = and i64 %146, 65535
  %148 = icmp eq i64 %147, 7
  br i1 %148, label %217, label %149

149:                                              ; preds = %143
  %150 = icmp eq i32 %3, 23
  br i1 %150, label %214, label %151

151:                                              ; preds = %149
  %152 = tail call i32 @integer_onep(ptr noundef nonnull %4) #22
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %217

154:                                              ; preds = %151
  %155 = tail call i32 @integer_zerop(ptr noundef nonnull %4) #22
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %214, label %217

157:                                              ; preds = %8
  %158 = sext i32 %1 to i64
  %159 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !17
  %161 = icmp eq i32 %160, 5
  br i1 %161, label %214, label %162

162:                                              ; preds = %157
  %163 = sext i32 %3 to i64
  %164 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %163
  %165 = load i32, ptr %164, align 4, !tbaa !17
  %166 = icmp eq i32 %165, 5
  br i1 %166, label %214, label %217

167:                                              ; preds = %8
  %168 = sext i32 %1 to i64
  %169 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %168
  %170 = load i32, ptr %169, align 4, !tbaa !17
  %171 = icmp eq i32 %170, 5
  br i1 %171, label %214, label %172

172:                                              ; preds = %167
  %173 = sext i32 %3 to i64
  %174 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %173
  %175 = load i32, ptr %174, align 4, !tbaa !17
  %176 = icmp eq i32 %175, 5
  br i1 %176, label %214, label %217

177:                                              ; preds = %8
  %178 = sext i32 %0 to i64
  %179 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !17
  %181 = icmp eq i32 %180, 5
  br i1 %181, label %182, label %217

182:                                              ; preds = %177
  %183 = sext i32 %1 to i64
  %184 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %183
  %185 = load i32, ptr %184, align 4, !tbaa !17
  %186 = icmp eq i32 %185, 5
  %187 = add i32 %1, -103
  %188 = icmp ult i32 %187, -2
  %189 = and i1 %188, %186
  br i1 %189, label %190, label %198

190:                                              ; preds = %182
  %191 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %192 = load ptr, ptr %191, align 8, !tbaa !17
  %193 = load i64, ptr %192, align 8
  %194 = trunc i64 %193 to i32
  %195 = and i32 %194, 65535
  %196 = add nsw i32 %195, -6
  %197 = icmp ult i32 %196, 3
  br i1 %197, label %214, label %198

198:                                              ; preds = %190, %182
  %199 = sext i32 %3 to i64
  %200 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %199
  %201 = load i32, ptr %200, align 4, !tbaa !17
  %202 = icmp eq i32 %201, 5
  %203 = add i32 %3, -103
  %204 = icmp ult i32 %203, -2
  %205 = and i1 %204, %202
  br i1 %205, label %206, label %217

206:                                              ; preds = %198
  %207 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %208 = load ptr, ptr %207, align 8, !tbaa !17
  %209 = load i64, ptr %208, align 8
  %210 = trunc i64 %209 to i32
  %211 = and i32 %210, 65535
  %212 = add nsw i32 %211, -6
  %213 = icmp ult i32 %212, 3
  br i1 %213, label %214, label %217

214:                                              ; preds = %190, %206, %167, %172, %157, %162, %149, %154, %113, %118, %109, %105, %95, %100, %85, %77, %82, %41, %46, %29, %25, %21, %17, %13, %9
  %215 = phi ptr [ @.str.1195, %9 ], [ @.str.1196, %13 ], [ @.str.1197, %17 ], [ @.str.1198, %21 ], [ @.str.1199, %25 ], [ @.str.1200, %29 ], [ @.str.1201, %46 ], [ @.str.1201, %41 ], [ @.str.1202, %82 ], [ @.str.1202, %77 ], [ @.str.1203, %85 ], [ @.str.1204, %100 ], [ @.str.1204, %95 ], [ @.str.1205, %105 ], [ @.str.1206, %109 ], [ @.str.1207, %118 ], [ @.str.1207, %113 ], [ @.str.1208, %154 ], [ @.str.1208, %149 ], [ @.str.1209, %162 ], [ @.str.1209, %157 ], [ @.str.1210, %172 ], [ @.str.1210, %167 ], [ @.str.1211, %206 ], [ @.str.1211, %190 ]
  %216 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 159, ptr noundef nonnull %215) #22
  br label %217

217:                                              ; preds = %214, %206, %177, %198, %172, %162, %154, %151, %143, %125, %123, %100, %51, %53, %71, %79, %82, %25, %21, %13, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @warn_for_unused_label(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 16777216
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  %9 = select i1 %8, ptr @.str.1213, ptr @.str.1212
  %10 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 222, ptr noundef nonnull %9, ptr noundef nonnull %0) #22
  br label %11

11:                                               ; preds = %5, %1
  ret void
}

declare zeroext i8 @default_handle_c_option(i64 noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @warn_for_div_by_zero(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load i32, ptr @c_inhibit_evaluation_warnings, align 4, !tbaa !21
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = tail call i32 @integer_zerop(ptr noundef %1) #22
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = tail call i32 @fixed_zerop(ptr noundef %1) #22
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %8, %5
  %12 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 71, ptr noundef nonnull @.str.1214) #22
  br label %13

13:                                               ; preds = %11, %8, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @warn_for_sign_compare(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6) local_unnamed_addr #9 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = load i64, ptr %12, align 8
  %14 = and i64 %13, 2097152
  %15 = icmp eq i64 %14, 0
  %16 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 2097152
  %20 = icmp ne i64 %19, 0
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #22
  %21 = load i32, ptr @c_language, align 4, !tbaa !17
  %22 = and i32 %21, 2
  %23 = icmp ne i32 %22, 0
  %24 = and i64 %13, 65535
  %25 = icmp eq i64 %24, 6
  %26 = select i1 %23, i1 %25, i1 false
  %27 = and i64 %18, 65535
  %28 = icmp eq i64 %27, 6
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %30, label %38

30:                                               ; preds = %7
  %31 = getelementptr inbounds %struct.tree_type, ptr %12, i64 0, i32 16
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = getelementptr inbounds %struct.tree_type, ptr %17, i64 0, i32 16
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = icmp eq ptr %32, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 177, ptr noundef nonnull @.str.1215, ptr noundef nonnull %12, ptr noundef nonnull %17) #22
  br label %38

38:                                               ; preds = %36, %30, %7
  %39 = load i64, ptr %5, align 8
  %40 = and i64 %39, 2097152
  %41 = icmp eq i64 %40, 0
  %42 = xor i1 %15, %20
  %43 = select i1 %41, i1 true, i1 %42
  br i1 %43, label %121, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %10) #22
  %45 = select i1 %15, ptr %2, ptr %1
  %46 = select i1 %15, ptr %1, ptr %2
  %47 = load ptr, ptr @global_trees, align 16
  br label %48

48:                                               ; preds = %56, %44
  %49 = phi ptr [ %46, %44 ], [ %54, %56 ]
  %50 = load i64, ptr %49, align 8
  %51 = trunc i64 %50 to i16
  switch i16 %51, label %62 [
    i16 116, label %52
    i16 113, label %52
    i16 117, label %52
  ]

52:                                               ; preds = %48, %48, %48
  %53 = getelementptr inbounds %struct.tree_exp, ptr %49, i64 0, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = icmp eq ptr %54, %47
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.tree_common, ptr %49, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  %59 = getelementptr inbounds %struct.tree_common, ptr %54, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = icmp eq ptr %58, %60
  br i1 %61, label %48, label %62, !llvm.loop !193

62:                                               ; preds = %48, %52, %56
  br label %63

63:                                               ; preds = %62, %71
  %64 = phi ptr [ %69, %71 ], [ %45, %62 ]
  %65 = load i64, ptr %64, align 8
  %66 = trunc i64 %65 to i16
  switch i16 %66, label %77 [
    i16 116, label %67
    i16 113, label %67
    i16 117, label %67
  ]

67:                                               ; preds = %63, %63, %63
  %68 = getelementptr inbounds %struct.tree_exp, ptr %64, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = icmp eq ptr %69, %47
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.tree_common, ptr %64, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = getelementptr inbounds %struct.tree_common, ptr %69, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = icmp eq ptr %73, %75
  br i1 %76, label %63, label %77, !llvm.loop !194

77:                                               ; preds = %63, %67, %71
  %78 = and i64 %39, 65535
  %79 = icmp eq i64 %78, 13
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.tree_common, ptr %5, i64 0, i32 2
  %82 = load ptr, ptr %81, align 8, !tbaa !17
  br label %83

83:                                               ; preds = %77, %80
  %84 = phi ptr [ %82, %80 ], [ %5, %77 ]
  %85 = call zeroext i8 @tree_expr_nonnegative_warnv_p(ptr noundef nonnull %49, ptr noundef nonnull %10) #22
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %120

87:                                               ; preds = %83
  %88 = load i64, ptr %64, align 8
  %89 = and i64 %88, 65535
  %90 = icmp eq i64 %89, 23
  %91 = add i32 %6, -101
  %92 = icmp ult i32 %91, 2
  %93 = and i1 %92, %90
  br i1 %93, label %94, label %98

94:                                               ; preds = %87
  %95 = call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %84)
  %96 = call i32 @int_fits_type_p(ptr noundef nonnull %64, ptr noundef %95) #22
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %120

98:                                               ; preds = %94, %87
  %99 = load i32, ptr @c_language, align 4, !tbaa !17
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %118

102:                                              ; preds = %98
  %103 = load i64, ptr %64, align 8
  %104 = and i64 %103, 65535
  %105 = icmp eq i64 %104, 23
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.tree_common, ptr %64, i64 0, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !17
  %109 = load i64, ptr %108, align 8
  %110 = and i64 %109, 65535
  %111 = icmp eq i64 %110, 6
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %struct.tree_type, ptr %108, i64 0, i32 14
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  %115 = call ptr @c_common_signed_or_unsigned_type(i32 noundef 0, ptr noundef %84)
  %116 = call i32 @int_fits_type_p(ptr noundef %114, ptr noundef %115) #22
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %112, %106, %102, %98
  %119 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 177, ptr noundef nonnull @.str.1216) #22
  br label %120

120:                                              ; preds = %94, %112, %118, %83
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10) #22
  br label %121

121:                                              ; preds = %120, %38
  %122 = call ptr @get_narrower(ptr noundef %3, ptr noundef nonnull %8) #22
  %123 = call ptr @get_narrower(ptr noundef %4, ptr noundef nonnull %9) #22
  %124 = load i64, ptr %122, align 8
  %125 = and i64 %124, 65535
  %126 = icmp eq i64 %125, 90
  %127 = load i64, ptr %123, align 8
  %128 = and i64 %127, 65535
  %129 = icmp eq i64 %128, 90
  %130 = xor i1 %126, %129
  br i1 %130, label %131, label %211

131:                                              ; preds = %121
  br i1 %126, label %132, label %137

132:                                              ; preds = %131
  %133 = getelementptr inbounds %struct.tree_exp, ptr %122, i64 0, i32 3
  %134 = load ptr, ptr %133, align 8, !tbaa !17
  %135 = call ptr @get_narrower(ptr noundef %134, ptr noundef nonnull %8) #22
  %136 = load i64, ptr %123, align 8
  br label %137

137:                                              ; preds = %132, %131
  %138 = phi i64 [ %136, %132 ], [ %127, %131 ]
  %139 = phi ptr [ %135, %132 ], [ %122, %131 ]
  %140 = and i64 %138, 65535
  %141 = icmp eq i64 %140, 90
  br i1 %141, label %142, label %146

142:                                              ; preds = %137
  %143 = getelementptr inbounds %struct.tree_exp, ptr %123, i64 0, i32 3
  %144 = load ptr, ptr %143, align 8, !tbaa !17
  %145 = call ptr @get_narrower(ptr noundef %144, ptr noundef nonnull %9) #22
  br label %146

146:                                              ; preds = %142, %137
  %147 = phi ptr [ %145, %142 ], [ %123, %137 ]
  %148 = call i32 @host_integerp(ptr noundef %139, i32 noundef 0) #22
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %146
  %151 = call i32 @host_integerp(ptr noundef %147, i32 noundef 0) #22
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %186, label %153

153:                                              ; preds = %150, %146
  %154 = call i32 @host_integerp(ptr noundef %139, i32 noundef 0) #22
  %155 = icmp eq i32 %154, 0
  %156 = load i32, ptr %8, align 4
  %157 = load i32, ptr %9, align 4
  %158 = select i1 %155, ptr %147, ptr %139
  %159 = select i1 %155, ptr %139, ptr %147
  %160 = select i1 %155, i32 %156, i32 %157
  %161 = call i64 @tree_low_cst(ptr noundef %158, i32 noundef 0) #22
  %162 = getelementptr inbounds %struct.tree_common, ptr %159, i64 0, i32 2
  %163 = load ptr, ptr %162, align 8, !tbaa !17
  %164 = getelementptr inbounds %struct.tree_type, ptr %163, i64 0, i32 6
  %165 = load i32, ptr %164, align 4
  %166 = and i32 %165, 1023
  %167 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 6
  %168 = load i32, ptr %167, align 4
  %169 = and i32 %168, 1023
  %170 = icmp ult i32 %166, %169
  %171 = icmp ult i32 %166, 64
  %172 = and i1 %171, %170
  %173 = icmp ne i32 %160, 0
  %174 = select i1 %172, i1 %173, i1 false
  br i1 %174, label %175, label %211

175:                                              ; preds = %153
  %176 = zext i32 %166 to i64
  %177 = shl nsw i64 -1, %176
  %178 = and i64 %177, %161
  %179 = icmp eq i64 %178, %177
  br i1 %179, label %211, label %180

180:                                              ; preds = %175
  %181 = icmp eq i64 %161, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %180
  %183 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 177, ptr noundef nonnull @.str.1217) #22
  br label %211

184:                                              ; preds = %180
  %185 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 177, ptr noundef nonnull @.str.1218) #22
  br label %211

186:                                              ; preds = %150
  %187 = load i32, ptr %8, align 4, !tbaa !21
  %188 = icmp ne i32 %187, 0
  %189 = load i32, ptr %9, align 4
  %190 = icmp ne i32 %189, 0
  %191 = select i1 %188, i1 %190, i1 false
  br i1 %191, label %192, label %211

192:                                              ; preds = %186
  %193 = getelementptr inbounds %struct.tree_common, ptr %139, i64 0, i32 2
  %194 = load ptr, ptr %193, align 8, !tbaa !17
  %195 = getelementptr inbounds %struct.tree_type, ptr %194, i64 0, i32 6
  %196 = load i32, ptr %195, align 4
  %197 = and i32 %196, 1023
  %198 = getelementptr inbounds %struct.tree_type, ptr %5, i64 0, i32 6
  %199 = load i32, ptr %198, align 4
  %200 = and i32 %199, 1023
  %201 = icmp ult i32 %197, %200
  br i1 %201, label %202, label %211

202:                                              ; preds = %192
  %203 = getelementptr inbounds %struct.tree_common, ptr %147, i64 0, i32 2
  %204 = load ptr, ptr %203, align 8, !tbaa !17
  %205 = getelementptr inbounds %struct.tree_type, ptr %204, i64 0, i32 6
  %206 = load i32, ptr %205, align 4
  %207 = and i32 %206, 1023
  %208 = icmp ult i32 %207, %200
  br i1 %208, label %209, label %211

209:                                              ; preds = %202
  %210 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 177, ptr noundef nonnull @.str.1219) #22
  br label %211

211:                                              ; preds = %153, %182, %184, %175, %209, %202, %192, %186, %121
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #22
  ret void
}

declare zeroext i8 @tree_expr_nonnegative_warnv_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @set_underlying_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @global_trees, align 16, !tbaa !6
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %33, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !17
  %7 = icmp ult i32 %6, 2
  %8 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  br i1 %7, label %10, label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.tree_type, ptr %9, i64 0, i32 12
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %33

14:                                               ; preds = %10
  store ptr %0, ptr %11, align 8, !tbaa !17
  br label %33

15:                                               ; preds = %4
  %16 = icmp eq ptr %9, %2
  br i1 %16, label %33, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  store ptr %9, ptr %18, align 8, !tbaa !17
  %22 = tail call ptr @build_variant_type_copy(ptr noundef %9) #22
  %23 = load ptr, ptr %18, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.tree_common, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.tree_type, ptr %22, i64 0, i32 12
  store ptr %0, ptr %27, align 8, !tbaa !17
  %28 = load i64, ptr %0, align 8
  %29 = and i64 %28, 16777216
  %30 = load i64, ptr %22, align 8
  %31 = and i64 %30, -16777217
  %32 = or i64 %31, %29
  store i64 %32, ptr %22, align 8
  store ptr %22, ptr %8, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %15, %17, %21, %10, %14, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local zeroext i8 @is_typedef_decl(ptr noundef readonly %0) local_unnamed_addr #17 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 35
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp ne ptr %9, null
  %11 = zext i1 %10 to i8
  br label %12

12:                                               ; preds = %7, %3, %1
  %13 = phi i8 [ 0, %3 ], [ 0, %1 ], [ %11, %7 ]
  ret i8 %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @record_types_used_by_current_var_decl(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %5
  %7 = load i32, ptr %6, align 4, !tbaa !17
  %8 = icmp ne i32 %7, 3
  %9 = and i64 %4, 67108864
  %10 = icmp eq i64 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %3, %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 9278, ptr noundef nonnull @.str.238) #22
  br label %13

13:                                               ; preds = %3, %12
  %14 = load ptr, ptr @types_used_by_cur_var_decl, align 8, !tbaa !6
  %15 = icmp eq ptr %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %13, %16
  %17 = phi ptr [ %21, %16 ], [ %14, %13 ]
  %18 = getelementptr inbounds %struct.tree_list, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  tail call void @types_used_by_var_decl_insert(ptr noundef %19, ptr noundef %0) #22
  %20 = getelementptr inbounds %struct.tree_common, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %16, !llvm.loop !195

23:                                               ; preds = %16
  store ptr null, ptr @types_used_by_cur_var_decl, align 8, !tbaa !6
  br label %24

24:                                               ; preds = %23, %13
  ret void
}

declare void @types_used_by_var_decl_insert(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @make_tree_vector() local_unnamed_addr #9 {
  %1 = load ptr, ptr @tree_vector_cache, align 8
  %2 = icmp eq ptr %1, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %0
  %4 = load i32, ptr %1, align 8, !tbaa !196
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = add i32 %4, -1
  store i32 %7, ptr %1, align 8, !tbaa !196
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %1, i64 0, i32 2, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !6
  br label %13

11:                                               ; preds = %0, %3
  %12 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 4) #22
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi ptr [ %12, %11 ], [ %10, %6 ]
  ret ptr %14
}

declare ptr @vec_gc_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @release_tree_vector(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  store i32 0, ptr %0, align 8, !tbaa !189
  %4 = load ptr, ptr @tree_vector_cache, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %4, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !198
  %9 = load i32, ptr %4, align 8, !tbaa !196
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6, %3
  %12 = tail call ptr @vec_gc_p_reserve(ptr noundef %4, i32 noundef 1) #22
  store ptr %12, ptr @tree_vector_cache, align 8, !tbaa !6
  %13 = load i32, ptr %12, align 8, !tbaa !196
  br label %14

14:                                               ; preds = %6, %11
  %15 = phi i32 [ %9, %6 ], [ %13, %11 ]
  %16 = phi ptr [ %4, %6 ], [ %12, %11 ]
  %17 = add i32 %15, 1
  store i32 %17, ptr %16, align 8, !tbaa !196
  %18 = zext i32 %15 to i64
  %19 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %16, i64 0, i32 2, i64 %18
  store ptr %0, ptr %19, align 8, !tbaa !6
  br label %20

20:                                               ; preds = %14, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @make_tree_vector_single(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @tree_vector_cache, align 8
  %3 = icmp eq ptr %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %2, align 8, !tbaa !196
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = add i32 %5, -1
  store i32 %8, ptr %2, align 8, !tbaa !196
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %2, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  br label %14

12:                                               ; preds = %4, %1
  %13 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 4) #22
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi ptr [ %13, %12 ], [ %11, %7 ]
  %16 = load i32, ptr %15, align 8, !tbaa !189
  %17 = add i32 %16, 1
  store i32 %17, ptr %15, align 8, !tbaa !189
  %18 = zext i32 %16 to i64
  %19 = getelementptr inbounds %struct.VEC_tree_base, ptr %15, i64 0, i32 2, i64 %18
  store ptr %0, ptr %19, align 8, !tbaa !6
  ret ptr %15
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @make_tree_vector_copy(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @tree_vector_cache, align 8
  %3 = icmp eq ptr %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %2, align 8, !tbaa !196
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = add i32 %5, -1
  store i32 %8, ptr %2, align 8, !tbaa !196
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %2, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  br label %14

12:                                               ; preds = %4, %1
  %13 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 4) #22
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi ptr [ %13, %12 ], [ %11, %7 ]
  %16 = icmp eq ptr %0, null
  br i1 %16, label %48, label %17

17:                                               ; preds = %14
  %18 = load i32, ptr %0, align 8, !tbaa !189
  %19 = icmp eq ptr %15, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.VEC_tree_base, ptr %15, i64 0, i32 1
  %22 = load i32, ptr %21, align 4, !tbaa !199
  %23 = load i32, ptr %15, align 8, !tbaa !189
  %24 = sub i32 %22, %23
  %25 = icmp ult i32 %24, %18
  br i1 %25, label %28, label %30

26:                                               ; preds = %17
  %27 = icmp eq i32 %18, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %26, %20
  %29 = tail call ptr @vec_gc_p_reserve(ptr noundef %15, i32 noundef %18) #22
  br label %30

30:                                               ; preds = %20, %28
  %31 = phi ptr [ %29, %28 ], [ %15, %20 ]
  %32 = load i32, ptr %0, align 8, !tbaa !189
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %30
  %35 = load i32, ptr %31, align 8, !tbaa !189
  br label %36

36:                                               ; preds = %34, %36
  %37 = phi i32 [ %35, %34 ], [ %41, %36 ]
  %38 = phi i64 [ 0, %34 ], [ %44, %36 ]
  %39 = getelementptr inbounds %struct.VEC_tree_base, ptr %0, i64 0, i32 2, i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !6
  %41 = add i32 %37, 1
  store i32 %41, ptr %31, align 8, !tbaa !189
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %struct.VEC_tree_base, ptr %31, i64 0, i32 2, i64 %42
  store ptr %40, ptr %43, align 8, !tbaa !6
  %44 = add nuw nsw i64 %38, 1
  %45 = load i32, ptr %0, align 8, !tbaa !189
  %46 = zext i32 %45 to i64
  %47 = icmp ult i64 %44, %46
  br i1 %47, label %36, label %48

48:                                               ; preds = %36, %26, %14, %30
  %49 = phi ptr [ %31, %30 ], [ %15, %14 ], [ null, %26 ], [ %31, %36 ]
  ret ptr %49
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_tree_gc_vec_gc(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #22
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !200
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %6, %16
  %11 = phi i64 [ %17, %16 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %0, i64 0, i32 2, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !6
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @gt_ggc_mx_VEC_tree_gc(ptr noundef nonnull %13) #22
  br label %16

16:                                               ; preds = %10, %15
  %17 = add nuw nsw i64 %11, 1
  %18 = icmp eq i64 %17, %8
  br i1 %18, label %19, label %10, !llvm.loop !202

19:                                               ; preds = %16, %6, %1, %3
  ret void
}

declare i32 @ggc_set_mark(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_VEC_tree_gc(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_const_char_p_gc(ptr noundef %0) #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #22
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !203
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi i64 [ %14, %10 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %0, i64 0, i32 2, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !6
  tail call void @gt_ggc_m_S(ptr noundef %13) #22
  %14 = add nuw nsw i64 %11, 1
  %15 = icmp eq i64 %14, %8
  br i1 %15, label %16, label %10, !llvm.loop !205

16:                                               ; preds = %10, %6, %1, %3
  ret void
}

declare void @gt_ggc_m_S(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_sorted_fields_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #22
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !176
  %8 = sext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %6, %16
  %11 = phi i64 [ %17, %16 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.sorted_fields_type, ptr %0, i64 0, i32 1, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !6
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %13) #22
  br label %16

16:                                               ; preds = %10, %15
  %17 = add i64 %11, 1
  %18 = icmp eq i64 %17, %8
  br i1 %18, label %19, label %10, !llvm.loop !206

19:                                               ; preds = %16, %6, %1, %3
  ret void
}

declare void @gt_ggc_mx_lang_tree_node(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_tree_gc_vec_gc(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_18VEC_tree_gc_vec_gc, i32 noundef 21) #22
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %17, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !200
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %4, %14
  %9 = phi i64 [ %15, %14 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %0, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @gt_pch_nx_VEC_tree_gc(ptr noundef nonnull %11) #22
  br label %14

14:                                               ; preds = %8, %13
  %15 = add nuw nsw i64 %9, 1
  %16 = icmp eq i64 %15, %6
  br i1 %16, label %17, label %8, !llvm.loop !207

17:                                               ; preds = %14, %4, %1
  ret void
}

declare i32 @gt_pch_note_object(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_18VEC_tree_gc_vec_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = load i32, ptr %1, align 8, !tbaa !200
  %6 = zext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.VEC_tree_gc_vec_base, ptr %1, i64 0, i32 2, i64 %11
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #22
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %15, label %10, !llvm.loop !208

15:                                               ; preds = %10, %4
  ret void
}

declare void @gt_pch_nx_VEC_tree_gc(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_const_char_p_gc(ptr noundef %0) #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_19VEC_const_char_p_gc, i32 noundef 22) #22
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !203
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %4, %8
  %9 = phi i64 [ %12, %8 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %0, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  tail call void @gt_pch_n_S(ptr noundef %11) #22
  %12 = add nuw nsw i64 %9, 1
  %13 = icmp eq i64 %12, %6
  br i1 %13, label %14, label %8, !llvm.loop !209

14:                                               ; preds = %8, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_19VEC_const_char_p_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = load i32, ptr %1, align 8, !tbaa !203
  %6 = zext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.VEC_const_char_p_base, ptr %1, i64 0, i32 2, i64 %11
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #22
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %15, label %10, !llvm.loop !210

15:                                               ; preds = %10, %4
  ret void
}

declare void @gt_pch_n_S(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_sorted_fields_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_18sorted_fields_type, i32 noundef 34) #22
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %17, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !176
  %6 = sext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %4, %14
  %9 = phi i64 [ %15, %14 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.sorted_fields_type, ptr %0, i64 0, i32 1, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %11) #22
  br label %14

14:                                               ; preds = %8, %13
  %15 = add i64 %9, 1
  %16 = icmp eq i64 %15, %6
  br i1 %16, label %17, label %8, !llvm.loop !211

17:                                               ; preds = %14, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_18sorted_fields_type(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = load i32, ptr %1, align 8, !tbaa !176
  %6 = sext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.sorted_fields_type, ptr %1, i64 0, i32 1, i64 %11
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #22
  %13 = add i64 %11, 1
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %15, label %10, !llvm.loop !212

15:                                               ; preds = %10, %4
  ret void
}

declare void @gt_pch_nx_lang_tree_node(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_ggc_ma_ridpointers(ptr nocapture readnone %0) #9 {
  %2 = load ptr, ptr @ridpointers, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1, %12
  %5 = phi ptr [ %13, %12 ], [ %2, %1 ]
  %6 = phi i64 [ %14, %12 ], [ 0, %1 ]
  %7 = getelementptr inbounds ptr, ptr %5, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %8) #22
  %11 = load ptr, ptr @ridpointers, align 8, !tbaa !6
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi ptr [ %5, %4 ], [ %11, %10 ]
  %14 = add nuw nsw i64 %6, 1
  %15 = icmp eq i64 %14, 152
  br i1 %15, label %16, label %4, !llvm.loop !213

16:                                               ; preds = %12
  %17 = icmp ult ptr %13, inttoptr (i64 2 to ptr)
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = tail call i32 @ggc_set_mark(ptr noundef nonnull %13) #22
  br label %20

20:                                               ; preds = %16, %18, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_na_ridpointers(ptr nocapture readnone %0) #9 {
  %2 = load ptr, ptr @ridpointers, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %1, %12
  %5 = phi ptr [ %13, %12 ], [ %2, %1 ]
  %6 = phi i64 [ %14, %12 ], [ 0, %1 ]
  %7 = getelementptr inbounds ptr, ptr %5, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %8) #22
  %11 = load ptr, ptr @ridpointers, align 8, !tbaa !6
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi ptr [ %5, %4 ], [ %11, %10 ]
  %14 = add nuw nsw i64 %6, 1
  %15 = icmp eq i64 %14, 152
  br i1 %15, label %16, label %4, !llvm.loop !214

16:                                               ; preds = %12
  %17 = tail call i32 @gt_pch_note_object(ptr noundef %13, ptr noundef nonnull @ridpointers, ptr noundef nonnull @gt_pch_pa_ridpointers, i32 noundef 217) #22
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

declare void @gt_ggc_m_P9tree_node4htab(ptr noundef) #3

declare void @gt_pch_n_P9tree_node4htab(ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @gt_pch_pa_ridpointers(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = load ptr, ptr @ridpointers, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %4
  %8 = icmp eq ptr %5, %0
  br i1 %8, label %9, label %20

9:                                                ; preds = %7, %16
  %10 = phi ptr [ %17, %16 ], [ %0, %7 ]
  %11 = phi i64 [ %18, %16 ], [ 0, %7 ]
  %12 = icmp eq ptr %10, %0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds ptr, ptr %0, i64 %11
  tail call void %2(ptr noundef %14, ptr noundef %3) #22
  %15 = load ptr, ptr @ridpointers, align 8, !tbaa !6
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi ptr [ %10, %9 ], [ %15, %13 ]
  %18 = add nuw nsw i64 %11, 1
  %19 = icmp eq i64 %18, 152
  br i1 %19, label %20, label %9, !llvm.loop !215

20:                                               ; preds = %16, %7
  %21 = icmp eq ptr %0, @ridpointers
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void %2(ptr noundef nonnull @ridpointers, ptr noundef %3) #22
  br label %23

23:                                               ; preds = %20, %22, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @check_function_arguments_recurse.1220(ptr noundef %0, i64 noundef %1) unnamed_addr #9 {
  br label %3

3:                                                ; preds = %106, %2
  %4 = phi ptr [ %0, %2 ], [ %107, %106 ]
  %5 = load i64, ptr %4, align 8
  %6 = trunc i64 %5 to i16
  switch i16 %6, label %21 [
    i16 116, label %7
    i16 113, label %7
  ]

7:                                                ; preds = %3, %3
  %8 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.tree_type, ptr %9, i64 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.tree_common, ptr %13, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %17 = load i32, ptr %16, align 4
  %18 = xor i32 %17, %11
  %19 = and i32 %18, 1023
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %106, label %21

21:                                               ; preds = %3, %7
  %22 = and i64 %5, 65535
  %23 = icmp eq i64 %22, 59
  br i1 %23, label %24, label %97

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.tree_common, ptr %26, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.tree_common, ptr %28, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.tree_type, ptr %30, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %95, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3
  %36 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3, i64 3
  br label %37

37:                                               ; preds = %34, %88
  %38 = phi ptr [ %32, %34 ], [ %91, %88 ]
  %39 = phi i8 [ 0, %34 ], [ %89, %88 ]
  %40 = getelementptr inbounds %struct.tree_list, ptr %38, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = tail call i32 @is_attribute_p(ptr noundef nonnull @.str.272, ptr noundef %41) #22
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %88, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.tree_list, ptr %38, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  %47 = getelementptr inbounds %struct.tree_list, ptr %46, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = load i64, ptr %48, align 8
  %50 = and i64 %49, 65535
  %51 = icmp eq i64 %50, 23
  br i1 %51, label %52, label %56

52:                                               ; preds = %44
  %53 = getelementptr inbounds %struct.tree_int_cst, ptr %48, i64 0, i32 1, i32 1
  %54 = load i64, ptr %53, align 8, !tbaa !17
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %52, %44
  tail call void @fancy_abort(ptr noundef nonnull @.str.237, i32 noundef 7950, ptr noundef nonnull @.str.238) #22
  br label %57

57:                                               ; preds = %56, %52
  %58 = getelementptr inbounds %struct.tree_int_cst, ptr %48, i64 0, i32 1
  %59 = load i64, ptr %58, align 8, !tbaa !17
  %60 = trunc i64 %59 to i32
  %61 = load ptr, ptr %35, align 8, !tbaa !17
  %62 = getelementptr inbounds %struct.tree_int_cst, ptr %61, i64 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !17
  %64 = trunc i64 %63 to i32
  %65 = add nsw i32 %64, -3
  %66 = icmp sgt i32 %64, 3
  br i1 %66, label %67, label %88

67:                                               ; preds = %57
  %68 = load ptr, ptr %36, align 8, !tbaa !17
  %69 = icmp eq ptr %68, null
  br i1 %69, label %88, label %70

70:                                               ; preds = %67
  %71 = icmp eq i32 %60, 1
  br i1 %71, label %76, label %78

72:                                               ; preds = %82
  %73 = add nuw nsw i32 %79, 1
  %74 = add nuw nsw i32 %80, 1
  %75 = icmp eq i32 %74, %60
  br i1 %75, label %76, label %78, !llvm.loop !171

76:                                               ; preds = %72, %70
  %77 = phi ptr [ %68, %70 ], [ %86, %72 ]
  tail call fastcc void @check_function_arguments_recurse.1220(ptr noundef nonnull %77, i64 noundef %1)
  br label %88

78:                                               ; preds = %70, %72
  %79 = phi i32 [ %73, %72 ], [ 1, %70 ]
  %80 = phi i32 [ %74, %72 ], [ 1, %70 ]
  %81 = icmp slt i32 %79, %65
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = add nuw nsw i32 %79, 3
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 0, i32 3, i64 %84
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %72, !llvm.loop !171

88:                                               ; preds = %78, %82, %57, %67, %76, %37
  %89 = phi i8 [ %39, %37 ], [ 1, %76 ], [ %39, %67 ], [ %39, %57 ], [ %39, %82 ], [ %39, %78 ]
  %90 = getelementptr inbounds %struct.tree_common, ptr %38, i64 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = icmp eq ptr %91, null
  br i1 %92, label %93, label %37, !llvm.loop !172

93:                                               ; preds = %88
  %94 = icmp eq i8 %89, 0
  br i1 %94, label %95, label %119

95:                                               ; preds = %24, %93
  %96 = load i64, ptr %4, align 8
  br label %97

97:                                               ; preds = %95, %21
  %98 = phi i64 [ %96, %95 ], [ %5, %21 ]
  %99 = and i64 %98, 65535
  %100 = icmp eq i64 %99, 56
  br i1 %100, label %101, label %108

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 1
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  tail call fastcc void @check_function_arguments_recurse.1220(ptr noundef %103, i64 noundef %1)
  %104 = getelementptr inbounds %struct.tree_exp, ptr %4, i64 1, i32 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  br label %106

106:                                              ; preds = %101, %7
  %107 = phi ptr [ %105, %101 ], [ %13, %7 ]
  br label %3

108:                                              ; preds = %97
  %109 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 2
  %110 = load ptr, ptr %109, align 8, !tbaa !17
  %111 = load i64, ptr %110, align 8
  %112 = and i64 %111, 65535
  %113 = icmp eq i64 %112, 10
  br i1 %113, label %114, label %119

114:                                              ; preds = %108
  %115 = tail call i32 @integer_zerop(ptr noundef nonnull %4) #22
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 143, ptr noundef nonnull @.str.1161, i64 noundef %1) #22
  br label %119

119:                                              ; preds = %93, %117, %114, %108
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.load.relative.i64(ptr, i64) #21

attributes #0 = { inlinehint nofree nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { inlinehint nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nounwind willreturn "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #16 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #18 = { mustprogress nocallback nofree nosync nounwind willreturn }
attributes #19 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #20 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #21 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #22 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !7, i64 8}
!11 = !{!"_IO_FILE", !12, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !12, i64 112, !12, i64 116, !13, i64 120, !14, i64 128, !8, i64 130, !8, i64 131, !7, i64 136, !13, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !13, i64 184, !12, i64 192, !8, i64 196}
!12 = !{!"int", !8, i64 0}
!13 = !{!"long", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!11, !7, i64 16}
!16 = !{!"branch_weights", i32 2000, i32 1}
!17 = !{!8, !8, i64 0}
!18 = !{!11, !7, i64 40}
!19 = !{!11, !7, i64 48}
!20 = !{!11, !12, i64 0}
!21 = !{!12, !12, i64 0}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.mustprogress"}
!24 = !{!25, !7, i64 784}
!25 = !{!"gcc_target", !26, i64 0, !28, i64 368, !29, i64 664, !12, i64 744, !7, i64 752, !7, i64 760, !7, i64 768, !7, i64 776, !7, i64 784, !7, i64 792, !7, i64 800, !7, i64 808, !7, i64 816, !7, i64 824, !7, i64 832, !7, i64 840, !7, i64 848, !7, i64 856, !7, i64 864, !7, i64 872, !7, i64 880, !7, i64 888, !7, i64 896, !7, i64 904, !7, i64 912, !7, i64 920, !7, i64 928, !7, i64 936, !7, i64 944, !7, i64 952, !7, i64 960, !7, i64 968, !7, i64 976, !7, i64 984, !7, i64 992, !7, i64 1000, !7, i64 1008, !7, i64 1016, !7, i64 1024, !7, i64 1032, !7, i64 1040, !7, i64 1048, !7, i64 1056, !13, i64 1064, !13, i64 1072, !7, i64 1080, !7, i64 1088, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !7, i64 1136, !7, i64 1144, !7, i64 1152, !7, i64 1160, !7, i64 1168, !30, i64 1176, !7, i64 1232, !7, i64 1240, !7, i64 1248, !7, i64 1256, !7, i64 1264, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !7, i64 1304, !7, i64 1312, !7, i64 1320, !7, i64 1328, !7, i64 1336, !7, i64 1344, !7, i64 1352, !7, i64 1360, !7, i64 1368, !7, i64 1376, !7, i64 1384, !7, i64 1392, !7, i64 1400, !7, i64 1408, !7, i64 1416, !7, i64 1424, !7, i64 1432, !7, i64 1440, !7, i64 1448, !7, i64 1456, !13, i64 1464, !31, i64 1472, !7, i64 1664, !7, i64 1672, !7, i64 1680, !7, i64 1688, !7, i64 1696, !7, i64 1704, !7, i64 1712, !7, i64 1720, !7, i64 1728, !7, i64 1736, !7, i64 1744, !7, i64 1752, !7, i64 1760, !7, i64 1768, !7, i64 1776, !32, i64 1784, !33, i64 1792, !34, i64 1896, !35, i64 1968, !7, i64 2016, !8, i64 2024, !8, i64 2025, !8, i64 2026, !8, i64 2027, !8, i64 2028, !8, i64 2029, !8, i64 2030, !8, i64 2031, !8, i64 2032, !8, i64 2033, !8, i64 2034, !8, i64 2035}
!26 = !{!"asm_out", !7, i64 0, !7, i64 8, !7, i64 16, !27, i64 24, !27, i64 56, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288, !7, i64 296, !7, i64 304, !7, i64 312, !7, i64 320, !7, i64 328, !7, i64 336, !7, i64 344, !7, i64 352, !7, i64 360}
!27 = !{!"asm_int_op", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!28 = !{!"sched", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288}
!29 = !{!"vectorize", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72}
!30 = !{!"addr_space", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48}
!31 = !{!"calls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184}
!32 = !{!"c", !7, i64 0}
!33 = !{!"cxx", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96}
!34 = !{!"emutls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !8, i64 64, !8, i64 65}
!35 = !{!"target_option_hooks", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!36 = !{!25, !7, i64 792}
!37 = !{!25, !7, i64 800}
!38 = distinct !{!38, !23}
!39 = !{!25, !7, i64 1232}
!40 = !{!25, !7, i64 1192}
!41 = !{ptr @build_pointer_type_for_mode, ptr @build_reference_type_for_mode}
!42 = !{!43, !7, i64 448}
!43 = !{!"lang_hooks", !7, i64 0, !13, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !44, i64 240, !45, i64 248, !46, i64 256, !47, i64 272, !48, i64 432, !49, i64 560, !7, i64 584, !7, i64 592, !7, i64 600, !7, i64 608, !7, i64 616, !7, i64 624, !7, i64 632, !7, i64 640, !7, i64 648, !7, i64 656, !7, i64 664, !8, i64 672}
!44 = !{!"lang_hooks_for_tree_inlining", !7, i64 0}
!45 = !{!"lang_hooks_for_callgraph", !7, i64 0}
!46 = !{!"lang_hooks_for_tree_dump", !7, i64 0, !7, i64 8}
!47 = !{!"lang_hooks_for_decls", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152}
!48 = !{!"lang_hooks_for_types", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !8, i64 120}
!49 = !{!"lang_hooks_for_lto", !7, i64 0, !7, i64 8, !7, i64 16}
!50 = !{!25, !8, i64 2025}
!51 = distinct !{!51, !23}
!52 = !{i64 0, i64 65}
!53 = !{!43, !7, i64 544}
!54 = distinct !{!54, !23}
!55 = distinct !{!55, !23}
!56 = distinct !{!56, !23}
!57 = distinct !{!57, !23}
!58 = !{!25, !7, i64 1968}
!59 = !{i8 0, i8 2}
!60 = !{!61, !12, i64 0}
!61 = !{!"VEC_const_char_p_base", !12, i64 0, !12, i64 4, !8, i64 8}
!62 = !{!61, !12, i64 4}
!63 = !{!13, !13, i64 0}
!64 = distinct !{!64, !23}
!65 = distinct !{!65, !23}
!66 = distinct !{!66, !23, !67, !68}
!67 = !{!"llvm.loop.isvectorized", i32 1}
!68 = !{!"llvm.loop.unroll.runtime.disable"}
!69 = distinct !{!69, !70}
!70 = !{!"llvm.loop.unroll.disable"}
!71 = distinct !{!71, !23, !67}
!72 = !{!25, !7, i64 752}
!73 = distinct !{!73, !23}
!74 = !{!75, !7, i64 0}
!75 = !{!"c_common_resword", !7, i64 0, !12, i64 8, !12, i64 10}
!76 = !{!77, !7, i64 0}
!77 = !{!"fname_var_t", !7, i64 0, !12, i64 8, !12, i64 12}
!78 = distinct !{!78, !23}
!79 = distinct !{!79, !23}
!80 = distinct !{!80, !23}
!81 = distinct !{!81, !23}
!82 = !{!43, !7, i64 176}
!83 = !{!84, !7, i64 8}
!84 = !{!"cpp_string", !12, i64 0, !7, i64 8}
!85 = !{!84, !12, i64 0}
!86 = !{!77, !12, i64 8}
!87 = distinct !{!87, !23}
!88 = !{!77, !12, i64 12}
!89 = distinct !{!89, !23}
!90 = distinct !{!90, !23}
!91 = distinct !{!91, !23}
!92 = distinct !{!92, !23}
!93 = distinct !{!93, !23}
!94 = distinct !{!94, !23}
!95 = distinct !{!95, !23}
!96 = distinct !{!96, !23}
!97 = distinct !{!97, !23}
!98 = distinct !{!98, !23}
!99 = distinct !{!99, !23}
!100 = distinct !{!100, !23}
!101 = distinct !{!101, !23}
!102 = !{!43, !7, i64 192}
!103 = distinct !{!103, !23}
!104 = !{i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 0, i64 4, !21, i64 8, i64 24, !17}
!105 = !{!106, !13, i64 40}
!106 = !{!"obstack", !13, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !13, i64 40, !12, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !12, i64 80, !12, i64 80, !12, i64 80}
!107 = !{!106, !7, i64 32}
!108 = !{!106, !7, i64 24}
!109 = !{!106, !7, i64 16}
!110 = !{!106, !12, i64 48}
!111 = !{!106, !7, i64 8}
!112 = !{!113, !7, i64 16}
!113 = !{!"tlist", !7, i64 0, !7, i64 8, !7, i64 16}
!114 = !{!113, !7, i64 8}
!115 = !{!113, !7, i64 0}
!116 = distinct !{!116, !23}
!117 = distinct !{!117, !23}
!118 = distinct !{!118, !23}
!119 = distinct !{!119, !23}
!120 = distinct !{!120, !23}
!121 = distinct !{!121, !23}
!122 = distinct !{!122, !23}
!123 = !{!124, !7, i64 24}
!124 = !{!"tlist_cache", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!125 = distinct !{!125, !23}
!126 = !{!124, !7, i64 0}
!127 = distinct !{!127, !23}
!128 = !{!124, !7, i64 8}
!129 = !{!124, !7, i64 16}
!130 = distinct !{!130, !131}
!131 = !{!"llvm.loop.peeled.count", i32 1}
!132 = distinct !{!132, !23}
!133 = distinct !{!133, !23}
!134 = distinct !{!134, !23}
!135 = distinct !{!135, !23}
!136 = !{!14, !14, i64 0}
!137 = distinct !{!137, !23}
!138 = !{!139, !8, i64 16}
!139 = !{!"", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!140 = distinct !{!140, !23}
!141 = distinct !{!141, !23}
!142 = distinct !{!142, !23}
!143 = distinct !{!143, !23}
!144 = distinct !{!144, !23}
!145 = !{!43, !7, i64 280}
!146 = !{!25, !7, i64 880}
!147 = !{!43, !7, i64 456}
!148 = !{!25, !7, i64 1896}
!149 = !{!25, !7, i64 1904}
!150 = !{!25, !7, i64 904}
!151 = distinct !{!151, !23}
!152 = distinct !{!152, !23}
!153 = !{!154, !7, i64 0}
!154 = !{!"disabled_builtin", !7, i64 0, !7, i64 8}
!155 = !{!154, !7, i64 8}
!156 = distinct !{!156, !23}
!157 = distinct !{!157, !23}
!158 = distinct !{!158, !23}
!159 = !{!160, !13, i64 8}
!160 = !{!"splay_tree_node_s", !13, i64 0, !13, i64 8, !7, i64 16, !7, i64 24}
!161 = !{!160, !13, i64 0}
!162 = !{!163, !7, i64 0}
!163 = !{!"splay_tree_s", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48}
!164 = distinct !{!164, !23}
!165 = distinct !{!165, !23}
!166 = distinct !{!166, !23}
!167 = distinct !{!167, !23}
!168 = distinct !{!168, !23}
!169 = distinct !{!169, !23}
!170 = distinct !{!170, !23}
!171 = distinct !{!171, !23}
!172 = distinct !{!172, !23}
!173 = !{!174, !7, i64 0}
!174 = !{!"", !7, i64 0, !7, i64 8}
!175 = !{!174, !7, i64 8}
!176 = !{!177, !12, i64 0}
!177 = !{!"sorted_fields_type", !12, i64 0, !8, i64 8}
!178 = !{!179, !12, i64 44}
!179 = !{!"diagnostic_info", !180, i64 0, !12, i64 40, !12, i64 44, !7, i64 48, !8, i64 56, !12, i64 60}
!180 = !{!"", !7, i64 0, !7, i64 8, !12, i64 16, !7, i64 24, !7, i64 32}
!181 = distinct !{!181, !23}
!182 = distinct !{!182, !23}
!183 = !{!184, !12, i64 0}
!184 = !{!"VEC_constructor_elt_base", !12, i64 0, !12, i64 4, !8, i64 8}
!185 = !{!186, !7, i64 0}
!186 = !{!"constructor_elt_d", !7, i64 0, !7, i64 8}
!187 = distinct !{!187, !23}
!188 = !{!25, !7, i64 928}
!189 = !{!190, !12, i64 0}
!190 = !{!"VEC_tree_base", !12, i64 0, !12, i64 4, !8, i64 8}
!191 = distinct !{!191, !23}
!192 = distinct !{!192, !23}
!193 = distinct !{!193, !23}
!194 = distinct !{!194, !23}
!195 = distinct !{!195, !23}
!196 = !{!197, !12, i64 0}
!197 = !{!"VEC_tree_gc_vec_base", !12, i64 0, !12, i64 4, !8, i64 8}
!198 = !{!197, !12, i64 4}
!199 = !{!190, !12, i64 4}
!200 = !{!201, !12, i64 0}
!201 = !{!"VEC_tree_gc_vec_gc", !197, i64 0}
!202 = distinct !{!202, !23}
!203 = !{!204, !12, i64 0}
!204 = !{!"VEC_const_char_p_gc", !61, i64 0}
!205 = distinct !{!205, !23}
!206 = distinct !{!206, !23}
!207 = distinct !{!207, !23}
!208 = distinct !{!208, !23}
!209 = distinct !{!209, !23}
!210 = distinct !{!210, !23}
!211 = distinct !{!211, !23}
!212 = distinct !{!212, !23}
!213 = distinct !{!213, !23}
!214 = distinct !{!214, !23}
!215 = distinct !{!215, !23, !216}
!216 = !{!"llvm.loop.unswitch.partial.disable"}
