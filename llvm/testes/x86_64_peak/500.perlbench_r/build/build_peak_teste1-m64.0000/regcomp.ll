; ModuleID = 'regcomp.c'
source_filename = "regcomp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.regexp_engine = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cop = type { ptr, ptr, ptr, i64, i16, i8, i8, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.sv = type { ptr, i32, i32, %union.anon.0 }
%union.anon.0 = type { ptr }
%struct.p5rx = type { ptr, i32, i32, %union.anon.5 }
%union.anon.5 = type { ptr }
%struct.regexp = type { ptr, %union._xmgu, i64, %union.anon.6, ptr, ptr, ptr, i32, i64, i64, i64, ptr, i32, i32, ptr, i32, i32, ptr, ptr, ptr, i64, i64, i64, i64, i16, ptr }
%union._xmgu = type { ptr }
%union.anon.6 = type { i64 }
%struct.reg_substr_data = type { i8, [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i64, i64, ptr, ptr, i64 }
%struct.regexp_internal = type { i32, %union.anon.7, ptr, ptr, ptr, i32, [1 x %struct.regnode] }
%union.anon.7 = type { ptr }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_code_block = type { i64, i64, ptr, ptr }
%struct.reg_data = type { i32, ptr, [1 x ptr] }
%struct._reg_ac_data = type { i32, i32, ptr, ptr }
%struct._reg_trie_data = type { i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, i16, i32, i64, i64, i32, i32, i32 }
%struct.pmop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, i32, %union.anon.9, %union.anon.10, ptr }
%union.anon.9 = type { ptr }
%union.anon.10 = type { ptr }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.xpvmg = type { ptr, %union._xmgu, i64, %union.anon.4, %union._xivu, %union._xnvu }
%union.anon.4 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%struct.scan_data_t = type { i64, i64, ptr, i64, i64, i64, ptr, ptr, i64, ptr, i32, ptr, i64, i64, ptr, i64, i32, i32, ptr, ptr }
%struct.RExC_state_t = type { i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, %struct.regnode_ssc, i32, i32, i32, i64, i32, i32, i32, i32, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i64, ptr, ptr, i32, i32, ptr }
%struct.regnode_ssc = type { i8, i8, i16, i32, [32 x i8], i32, ptr }
%struct.xpv = type { ptr, %union._xmgu, i64, %union.anon.2 }
%union.anon.2 = type { i64 }
%struct.xpvinvlist = type { ptr, %union._xmgu, i64, %union.anon.15, i64, i64, i8 }
%union.anon.15 = type { i64 }
%struct.op = type { ptr, ptr, ptr, i64, i16, i8, i8 }
%struct.listop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.svop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.hv = type { ptr, i32, i32, %union.anon.3 }
%union.anon.3 = type { ptr }
%struct.stackinfo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.xpvav = type { ptr, %union._xmgu, i64, i64, ptr }
%struct.av = type { ptr, i32, i32, %union.anon.11 }
%union.anon.11 = type { ptr }
%struct.gv = type { ptr, i32, i32, %union.anon }
%union.anon = type { ptr }
%struct.xpviv = type { ptr, %union._xmgu, i64, %union.anon.1, %union._xivu }
%union.anon.1 = type { i64 }
%struct.xpvnv = type { ptr, %union._xmgu, i64, %union.anon.13, %union._xivu, %union._xnvu }
%union.anon.13 = type { i64 }
%struct.regnode_1 = type { i8, i8, i16, i32 }
%struct.regnode_charclass_class = type { i8, i8, i16, i32, [32 x i8], i32 }
%struct.regnode_2 = type { i8, i8, i16, i16, i16 }
%struct._reg_trie_state = type { i16, %union.anon.14 }
%union.anon.14 = type { ptr }
%struct._reg_trie_trans = type { i32, i32 }
%struct.regnode_2L = type { i8, i8, i16, i32, i32 }
%struct.gp = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, ptr }
%struct.he = type { ptr, ptr, %union.anon.8 }
%union.anon.8 = type { ptr }
%struct.regnode_string = type { i8, i8, i16, [1 x i8] }
%struct.scan_frame = type { ptr, ptr, i32, i32, i32, ptr, ptr, ptr }
%struct.magic = type { ptr, ptr, i16, i8, i8, i64, ptr, ptr }
%struct.xpvuv = type { ptr, %union._xmgu, i64, %union.anon.12, %union._xivu }
%union.anon.12 = type { i64 }
%struct.xpvhv = type { ptr, %union._xmgu, i64, i64 }
%struct.regnode_charclass = type { i8, i8, i16, i32, [32 x i8] }
%struct._reg_trie_trans_list_elem = type { i16, i32 }
%struct.reg_trie_wordinfo = type { i16, i32, i32 }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.xpvhv_aux = type { %union._xhvnameu, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32 }
%union._xhvnameu = type { ptr }
%struct.hek = type { i32, i32, [1 x i8] }

@PL_regkind = dso_local local_unnamed_addr constant [134 x i8] c"\00\00\02\02\04\04\04\07\08\08\08\08\0C\0C\0C\0C\10\10\10\13\13\15\15\15\15\19\19\19\19\1D\1E\1F\1F\1F\1F\1F\1F\1F\1F\1F((*+,,,,0123333333333=>>>>>CDEF>HHHHLMNOPQQQTTTTTTZ[(]HHDD//0000000000\1E\1E....??,,,,,,XXVVWWYYZZ", align 16
@.str = private unnamed_addr constant [4 x i8] c"END\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"SUCCEED\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"SBOL\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"MBOL\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"SEOL\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"MEOL\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"EOS\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"GPOS\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"BOUND\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"BOUNDL\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"BOUNDU\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"BOUNDA\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"NBOUND\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"NBOUNDL\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"NBOUNDU\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"NBOUNDA\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"REG_ANY\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"SANY\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"CANY\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"ANYOF\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"ANYOFL\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"POSIXD\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"POSIXL\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"POSIXU\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"POSIXA\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"NPOSIXD\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"NPOSIXL\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"NPOSIXU\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"NPOSIXA\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"CLUMP\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"BRANCH\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"EXACT\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"EXACTL\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"EXACTF\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"EXACTFL\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"EXACTFU\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"EXACTFA\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"EXACTFU_SS\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"EXACTFLU8\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"EXACTFA_NO_TRIE\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"NOTHING\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"TAIL\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"STAR\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"PLUS\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"CURLY\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"CURLYN\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"CURLYM\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"CURLYX\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"WHILEM\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"OPEN\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"CLOSE\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"REF\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"REFF\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"REFFL\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"REFFU\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"REFFA\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"NREF\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"NREFF\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"NREFFL\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"NREFFU\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"NREFFA\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"LONGJMP\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"BRANCHJ\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"IFMATCH\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"UNLESSM\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"SUSPEND\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"IFTHEN\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"GROUPP\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"EVAL\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"MINMOD\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"LOGICAL\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"RENUM\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"TRIE\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"TRIEC\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"AHOCORASICK\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"AHOCORASICKC\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"GOSUB\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"GOSTART\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"NGROUPP\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"INSUBP\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"DEFINEP\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"ENDLIKE\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"OPFAIL\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"ACCEPT\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"VERB\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"PRUNE\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c"MARKPOINT\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"COMMIT\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"CUTGROUP\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"KEEPS\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"LNBREAK\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"OPTIMIZED\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"PSEUDO\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"TRIE_next\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"TRIE_next_fail\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"EVAL_AB\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"EVAL_AB_fail\00", align 1
@.str.98 = private unnamed_addr constant [11 x i8] c"CURLYX_end\00", align 1
@.str.99 = private unnamed_addr constant [16 x i8] c"CURLYX_end_fail\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"WHILEM_A_pre\00", align 1
@.str.101 = private unnamed_addr constant [18 x i8] c"WHILEM_A_pre_fail\00", align 1
@.str.102 = private unnamed_addr constant [13 x i8] c"WHILEM_A_min\00", align 1
@.str.103 = private unnamed_addr constant [18 x i8] c"WHILEM_A_min_fail\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"WHILEM_A_max\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"WHILEM_A_max_fail\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"WHILEM_B_min\00", align 1
@.str.107 = private unnamed_addr constant [18 x i8] c"WHILEM_B_min_fail\00", align 1
@.str.108 = private unnamed_addr constant [13 x i8] c"WHILEM_B_max\00", align 1
@.str.109 = private unnamed_addr constant [18 x i8] c"WHILEM_B_max_fail\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"BRANCH_next\00", align 1
@.str.111 = private unnamed_addr constant [17 x i8] c"BRANCH_next_fail\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"CURLYM_A\00", align 1
@.str.113 = private unnamed_addr constant [14 x i8] c"CURLYM_A_fail\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"CURLYM_B\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"CURLYM_B_fail\00", align 1
@.str.116 = private unnamed_addr constant [10 x i8] c"IFMATCH_A\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"IFMATCH_A_fail\00", align 1
@.str.118 = private unnamed_addr constant [18 x i8] c"CURLY_B_min_known\00", align 1
@.str.119 = private unnamed_addr constant [23 x i8] c"CURLY_B_min_known_fail\00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c"CURLY_B_min\00", align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"CURLY_B_min_fail\00", align 1
@.str.122 = private unnamed_addr constant [12 x i8] c"CURLY_B_max\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"CURLY_B_max_fail\00", align 1
@.str.124 = private unnamed_addr constant [12 x i8] c"COMMIT_next\00", align 1
@.str.125 = private unnamed_addr constant [17 x i8] c"COMMIT_next_fail\00", align 1
@.str.126 = private unnamed_addr constant [15 x i8] c"MARKPOINT_next\00", align 1
@.str.127 = private unnamed_addr constant [20 x i8] c"MARKPOINT_next_fail\00", align 1
@.str.128 = private unnamed_addr constant [10 x i8] c"SKIP_next\00", align 1
@.str.129 = private unnamed_addr constant [15 x i8] c"SKIP_next_fail\00", align 1
@.str.130 = private unnamed_addr constant [14 x i8] c"CUTGROUP_next\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"CUTGROUP_next_fail\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"KEEPS_next\00", align 1
@.str.133 = private unnamed_addr constant [16 x i8] c"KEEPS_next_fail\00", align 1
@PL_reg_name = dso_local local_unnamed_addr constant [134 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133], align 16
@.str.134 = private unnamed_addr constant [10 x i8] c"MULTILINE\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"SINGLELINE\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c"FOLD\00", align 1
@.str.137 = private unnamed_addr constant [9 x i8] c"EXTENDED\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"EXTENDED_MORE\00", align 1
@.str.139 = private unnamed_addr constant [10 x i8] c"NOCAPTURE\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"KEEPCOPY\00", align 1
@.str.141 = private unnamed_addr constant [9 x i8] c"CHARSET0\00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"CHARSET1\00", align 1
@.str.143 = private unnamed_addr constant [9 x i8] c"CHARSET2\00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"STRICT\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"SPLIT\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"UNUSED_BIT_12\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"UNUSED_BIT_13\00", align 1
@.str.148 = private unnamed_addr constant [14 x i8] c"UNUSED_BIT_14\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"UNUSED_BIT_15\00", align 1
@.str.150 = private unnamed_addr constant [17 x i8] c"NO_INPLACE_SUBST\00", align 1
@.str.151 = private unnamed_addr constant [10 x i8] c"EVAL_SEEN\00", align 1
@.str.152 = private unnamed_addr constant [26 x i8] c"UNBOUNDED_QUANTIFIER_SEEN\00", align 1
@.str.153 = private unnamed_addr constant [10 x i8] c"CHECK_ALL\00", align 1
@.str.154 = private unnamed_addr constant [11 x i8] c"MATCH_UTF8\00", align 1
@.str.155 = private unnamed_addr constant [16 x i8] c"USE_INTUIT_NOML\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"USE_INTUIT_ML\00", align 1
@.str.157 = private unnamed_addr constant [12 x i8] c"INTUIT_TAIL\00", align 1
@.str.158 = private unnamed_addr constant [12 x i8] c"IS_ANCHORED\00", align 1
@.str.159 = private unnamed_addr constant [10 x i8] c"COPY_DONE\00", align 1
@.str.160 = private unnamed_addr constant [13 x i8] c"TAINTED_SEEN\00", align 1
@.str.161 = private unnamed_addr constant [8 x i8] c"TAINTED\00", align 1
@.str.162 = private unnamed_addr constant [11 x i8] c"START_ONLY\00", align 1
@.str.163 = private unnamed_addr constant [10 x i8] c"SKIPWHITE\00", align 1
@.str.164 = private unnamed_addr constant [6 x i8] c"WHITE\00", align 1
@.str.165 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@PL_reg_extflags_name = dso_local local_unnamed_addr constant [32 x ptr] [ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165], align 16
@.str.166 = private unnamed_addr constant [9 x i8] c"IMPLICIT\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"NAUGHTY\00", align 1
@.str.168 = private unnamed_addr constant [13 x i8] c"VERBARG_SEEN\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"CUTGROUP_SEEN\00", align 1
@.str.170 = private unnamed_addr constant [12 x i8] c"USE_RE_EVAL\00", align 1
@.str.171 = private unnamed_addr constant [7 x i8] c"NOSCAN\00", align 1
@.str.172 = private unnamed_addr constant [10 x i8] c"CANY_SEEN\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c"GPOS_SEEN\00", align 1
@.str.174 = private unnamed_addr constant [11 x i8] c"GPOS_FLOAT\00", align 1
@.str.175 = private unnamed_addr constant [10 x i8] c"ANCH_MBOL\00", align 1
@.str.176 = private unnamed_addr constant [10 x i8] c"ANCH_SBOL\00", align 1
@.str.177 = private unnamed_addr constant [10 x i8] c"ANCH_GPOS\00", align 1
@PL_reg_intflags_name = dso_local local_unnamed_addr constant [13 x ptr] [ptr @.str.87, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177], align 16
@PL_varies = dso_local local_unnamed_addr constant [23 x i8] c"\1D\1E*+,-./03456789:;<>AB\00", align 16
@PL_varies_bitmask = dso_local local_unnamed_addr constant [12 x i8] c"\00\00\00`\00\FC\F9_\06\00\00\00", align 1
@PL_simple = dso_local local_unnamed_addr constant [14 x i8] c"\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\00", align 1
@PL_simple_bitmask = dso_local local_unnamed_addr constant <{ i8, i8, i8, i8, [8 x i8] }> <{ i8 0, i8 0, i8 -1, i8 31, [8 x i8] zeroinitializer }>, align 1
@PL_core_reg_engine = dso_local constant %struct.regexp_engine { ptr @Perl_re_compile, ptr @Perl_regexec_flags, ptr @Perl_re_intuit_start, ptr @Perl_re_intuit_string, ptr @Perl_regfree_internal, ptr @Perl_reg_numbered_buff_fetch, ptr @Perl_reg_numbered_buff_store, ptr @Perl_reg_numbered_buff_length, ptr @Perl_reg_named_buff, ptr @Perl_reg_named_buff_iter, ptr @Perl_reg_qr_package, ptr @Perl_re_op_compile }, align 8
@.str.178 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_colors = external local_unnamed_addr global [6 x ptr], align 16
@PL_colorset = external local_unnamed_addr global i8, align 1
@PL_curcop = external local_unnamed_addr global ptr, align 8
@PL_compiling = external global %struct.cop, align 8
@PL_hintgv = external local_unnamed_addr global ptr, align 8
@.str.179 = private unnamed_addr constant [8 x i8] c"regcomp\00", align 1
@PL_AboveLatin1 = external local_unnamed_addr global ptr, align 8
@AboveLatin1_invlist = internal constant [5 x i64] [i64 2, i64 148565664, i64 1, i64 0, i64 256], align 16
@Latin1_invlist = internal constant [5 x i64] [i64 2, i64 148565664, i64 0, i64 0, i64 256], align 16
@PL_Latin1 = external local_unnamed_addr global ptr, align 8
@UpperLatin1_invlist = internal constant [6 x i64] [i64 3, i64 148565664, i64 1, i64 0, i64 128, i64 256], align 16
@PL_UpperLatin1 = external local_unnamed_addr global ptr, align 8
@_Perl_Any_Folds_invlist = internal constant [238 x i64] [i64 235, i64 148565664, i64 1, i64 0, i64 65, i64 91, i64 97, i64 123, i64 181, i64 182, i64 192, i64 215, i64 216, i64 247, i64 248, i64 305, i64 306, i64 312, i64 313, i64 397, i64 398, i64 411, i64 412, i64 426, i64 428, i64 442, i64 444, i64 446, i64 447, i64 448, i64 452, i64 545, i64 546, i64 564, i64 570, i64 597, i64 598, i64 600, i64 601, i64 602, i64 603, i64 605, i64 608, i64 610, i64 611, i64 612, i64 613, i64 615, i64 616, i64 618, i64 619, i64 621, i64 623, i64 624, i64 625, i64 627, i64 629, i64 630, i64 637, i64 638, i64 640, i64 641, i64 643, i64 644, i64 647, i64 653, i64 658, i64 659, i64 670, i64 671, i64 700, i64 701, i64 702, i64 703, i64 768, i64 770, i64 775, i64 777, i64 778, i64 779, i64 780, i64 781, i64 787, i64 788, i64 817, i64 818, i64 834, i64 835, i64 837, i64 838, i64 880, i64 884, i64 886, i64 888, i64 891, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 978, i64 981, i64 1014, i64 1015, i64 1020, i64 1021, i64 1154, i64 1162, i64 1328, i64 1329, i64 1367, i64 1377, i64 1416, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 7545, i64 7546, i64 7549, i64 7550, i64 7680, i64 7836, i64 7838, i64 7839, i64 7840, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8141, i64 8144, i64 8148, i64 8150, i64 8156, i64 8160, i64 8173, i64 8178, i64 8181, i64 8182, i64 8189, i64 8486, i64 8487, i64 8490, i64 8492, i64 8498, i64 8499, i64 8526, i64 8527, i64 8544, i64 8576, i64 8579, i64 8581, i64 9398, i64 9450, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11377, i64 11378, i64 11380, i64 11381, i64 11383, i64 11390, i64 11492, i64 11499, i64 11503, i64 11506, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 42560, i64 42606, i64 42624, i64 42652, i64 42786, i64 42800, i64 42802, i64 42864, i64 42873, i64 42888, i64 42891, i64 42894, i64 42896, i64 42900, i64 42902, i64 42926, i64 42928, i64 42930, i64 64256, i64 64263, i64 64275, i64 64280, i64 65313, i64 65339, i64 65345, i64 65371, i64 66560, i64 66640, i64 71840, i64 71904], align 16
@PL_utf8_foldable = external local_unnamed_addr global ptr, align 8
@_Perl_Folds_To_Multi_Char_invlist = internal constant [62 x i64] [i64 59, i64 148565664, i64 1, i64 0, i64 223, i64 224, i64 304, i64 305, i64 329, i64 330, i64 496, i64 497, i64 912, i64 913, i64 944, i64 945, i64 1415, i64 1416, i64 7830, i64 7835, i64 7838, i64 7839, i64 8016, i64 8017, i64 8018, i64 8019, i64 8020, i64 8021, i64 8022, i64 8023, i64 8064, i64 8112, i64 8114, i64 8117, i64 8118, i64 8120, i64 8124, i64 8125, i64 8130, i64 8133, i64 8134, i64 8136, i64 8140, i64 8141, i64 8146, i64 8148, i64 8150, i64 8152, i64 8162, i64 8165, i64 8166, i64 8168, i64 8178, i64 8181, i64 8182, i64 8184, i64 8188, i64 8189, i64 64256, i64 64263, i64 64275, i64 64280], align 16
@PL_HasMultiCharFold = external local_unnamed_addr global ptr, align 8
@PL_InBitmap = external local_unnamed_addr global ptr, align 8
@PL_tainting = external local_unnamed_addr global i8, align 1
@PL_tainted = external local_unnamed_addr global i8, align 1
@.str.180 = private unnamed_addr constant [42 x i8] c"Eval-group in insecure regular expression\00", align 1
@.str.181 = private unnamed_addr constant [70 x i8] c"panic: reg returned NULL to re_op_compile for sizing pass, flags=%#lx\00", align 1
@.str.182 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.183 = private unnamed_addr constant [26 x i8] c"%s in regex m/%d%lu%4p%s/\00", align 1
@.str.184 = private unnamed_addr constant [20 x i8] c"Regexp out of space\00", align 1
@.str.186 = private unnamed_addr constant [74 x i8] c"panic: reg returned NULL to re_op_compile for generation pass, flags=%#lx\00", align 1
@regarglen = internal unnamed_addr constant [94 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\02\00\00\01\01\09\01\09\02\00\01\01\01\00\00\01\01\01\01\01\01\01\00\00\00\00", align 16
@PL_sv_yes = external global %struct.sv, align 8
@PL_sv_no = external global %struct.sv, align 8
@.str.188 = private unnamed_addr constant [38 x i8] c"panic: Unknown flags %d in named_buff\00", align 1
@.str.189 = private unnamed_addr constant [43 x i8] c"panic: Unknown flags %d in named_buff_iter\00", align 1
@PL_sv_undef = external global %struct.sv, align 8
@.str.190 = private unnamed_addr constant [45 x i8] c"panic: Unknown flags %d in named_buff_scalar\00", align 1
@PL_curpm = external local_unnamed_addr global ptr, align 8
@PL_localizing = external local_unnamed_addr global i8, align 1
@.str.191 = private unnamed_addr constant [7 x i8] c"Regexp\00", align 1
@.str.192 = private unnamed_addr constant [65 x i8] c"panic: Incorrect version for previously generated inversion list\00", align 1
@.str.193 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.194 = private unnamed_addr constant [16 x i8] c"%04lX\09INFINITY\0A\00", align 1
@.str.195 = private unnamed_addr constant [13 x i8] c"%04lX\09%04lX\0A\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"%04lX\0A\00", align 1
@.str.197 = private unnamed_addr constant [63 x i8] c"%sCan't dump inversion list because is in middle of iterating\0A\00", align 1
@.str.198 = private unnamed_addr constant [29 x i8] c"%s[%lu] 0x%04lX .. INFINITY\0A\00", align 1
@.str.199 = private unnamed_addr constant [28 x i8] c"%s[%lu] 0x%04lX .. 0x%04lX\0A\00", align 1
@.str.200 = private unnamed_addr constant [17 x i8] c"%s[%lu] 0x%04lX\0A\00", align 1
@PL_utf8_tofold = external local_unnamed_addr global ptr, align 8
@.str.201 = private unnamed_addr constant [4 x i8] c"\E2\80\90\00", align 1
@PL_utf8_foldclosures = external local_unnamed_addr global ptr, align 8
@.str.202 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.203 = private unnamed_addr constant [30 x i8] c"panic: regfree data code '%c'\00", align 1
@.str.204 = private unnamed_addr constant [32 x i8] c"Corrupted regexp opcode %d > %d\00", align 1
@.str.205 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@PL_defstash = external local_unnamed_addr global ptr, align 8
@.str.206 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.207 = private unnamed_addr constant [38 x i8] c"Overloaded qr did not return a REGEXP\00", align 1
@PL_stack_sp = external local_unnamed_addr global ptr, align 8
@PL_tmps_floor = external global i64, align 8
@PL_tmps_ix = external local_unnamed_addr global i64, align 8
@PL_curstackinfo = external local_unnamed_addr global ptr, align 8
@PL_stack_base = external local_unnamed_addr global ptr, align 8
@PL_curstack = external local_unnamed_addr global ptr, align 8
@PL_stack_max = external local_unnamed_addr global ptr, align 8
@PL_errgv = external local_unnamed_addr global ptr, align 8
@.str.208 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@.str.209 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.210 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.211 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.212 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.213 = private unnamed_addr constant [3 x i8] c"aa\00", align 1
@.str.214 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.216 = private unnamed_addr constant [15 x i8] c"\12E_TRIE_MAXBUF\00", align 1
@.str.217 = private unnamed_addr constant [69 x i8] c"Quantifier unexpected on zero-length expression in regex m/%d%lu%4p/\00", align 1
@PL_XPosix_ptrs = external local_unnamed_addr global [16 x ptr], align 16
@.str.218 = private unnamed_addr constant [43 x i8] c"Variable length lookbehind not implemented\00", align 1
@.str.219 = private unnamed_addr constant [66 x i8] c"Lookbehind longer than %lu not implemented in regex m/%d%lu%4p%s/\00", align 1
@PL_utf8skip = external local_unnamed_addr constant [0 x i8], align 1
@PL_charclass = external local_unnamed_addr constant [0 x i32], align 4
@PL_fold_latin1 = external constant [0 x i8], align 1
@PL_fold = external constant [0 x i8], align 1
@.str.221 = private unnamed_addr constant [53 x i8] c"panic! In trie construction, unknown node type %u %s\00", align 1
@PL_latin1_lc = external local_unnamed_addr constant [0 x i8], align 1
@.str.222 = private unnamed_addr constant [52 x i8] c"error creating/fetching widecharmap entry for 0x%lX\00", align 1
@.str.223 = private unnamed_addr constant [53 x i8] c"panic! In trie construction, no char mapping for %ld\00", align 1
@.str.224 = private unnamed_addr constant [154 x i8] c"Perl folding rules are not up-to-date for 0x%02X; please use the perlbug utility to report; in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.226 = private unnamed_addr constant [116 x i8] c"panic: attempting to append to an inversion list, but wasn't at the end of the list, final=%lu, start=%lu, match=%c\00", align 1
@.str.227 = private unnamed_addr constant [65 x i8] c"%s in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.228 = private unnamed_addr constant [50 x i8] c"In '(*VERB...)', the '(' and '*' must be adjacent\00", align 1
@.str.229 = private unnamed_addr constant [35 x i8] c"Unterminated verb pattern argument\00", align 1
@.str.230 = private unnamed_addr constant [26 x i8] c"Unterminated verb pattern\00", align 1
@.str.231 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"MARK\00", align 1
@.str.233 = private unnamed_addr constant [5 x i8] c"THEN\00", align 1
@.str.234 = private unnamed_addr constant [32 x i8] c"Unknown verb pattern '%d%lu%4p'\00", align 1
@.str.235 = private unnamed_addr constant [63 x i8] c" in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.236 = private unnamed_addr constant [45 x i8] c"Verb pattern '%.*s' may not have an argument\00", align 1
@.str.237 = private unnamed_addr constant [45 x i8] c"Verb pattern '%.*s' has a mandatory argument\00", align 1
@.str.238 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.239 = private unnamed_addr constant [46 x i8] c"In '(?...)', the '(' and '?' must be adjacent\00", align 1
@.str.240 = private unnamed_addr constant [32 x i8] c"Sequence %.3s... not terminated\00", align 1
@.str.241 = private unnamed_addr constant [34 x i8] c"Sequence (%.*s...) not recognized\00", align 1
@.str.242 = private unnamed_addr constant [32 x i8] c"Sequence (?%c... not terminated\00", align 1
@.str.243 = private unnamed_addr constant [35 x i8] c"panic: reg_scan_name returned NULL\00", align 1
@.str.244 = private unnamed_addr constant [49 x i8] c"panic: paren_name hash element allocation failed\00", align 1
@.str.245 = private unnamed_addr constant [34 x i8] c"Sequence (?%c...) not implemented\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"Sequence (?R) not terminated\00", align 1
@.str.247 = private unnamed_addr constant [31 x i8] c"Sequence (?&... not terminated\00", align 1
@.str.248 = private unnamed_addr constant [16 x i8] c"Illegal pattern\00", align 1
@.str.249 = private unnamed_addr constant [24 x i8] c"Expecting close bracket\00", align 1
@.str.250 = private unnamed_addr constant [31 x i8] c"Reference to nonexistent group\00", align 1
@.str.251 = private unnamed_addr constant [38 x i8] c"Sequence (%d%lu%4p...) not recognized\00", align 1
@.str.252 = private unnamed_addr constant [47 x i8] c"panic: Sequence (?{...}): no code block found\0A\00", align 1
@.str.253 = private unnamed_addr constant [49 x i8] c"Eval-group not allowed at runtime, use re 'eval'\00", align 1
@.str.254 = private unnamed_addr constant [3 x i8] c"rl\00", align 1
@.str.255 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.256 = private unnamed_addr constant [33 x i8] c"Sequence (?(%c... not terminated\00", align 1
@.str.257 = private unnamed_addr constant [7 x i8] c"DEFINE\00", align 1
@.str.258 = private unnamed_addr constant [32 x i8] c"Switch condition not recognized\00", align 1
@.str.259 = private unnamed_addr constant [66 x i8] c"panic: regbranch returned NULL, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.260 = private unnamed_addr constant [40 x i8] c"(?(DEFINE)....) does not allow branches\00", align 1
@.str.261 = private unnamed_addr constant [39 x i8] c"Switch (?(condition)... not terminated\00", align 1
@.str.262 = private unnamed_addr constant [51 x i8] c"Switch (?(condition)... contains too many branches\00", align 1
@.str.263 = private unnamed_addr constant [34 x i8] c"Unknown switch condition (?(...))\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"Sequence (? incomplete\00", align 1
@S_reg.parens = internal constant [6 x i8] c"=!<,>\00", align 1
@.str.265 = private unnamed_addr constant [12 x i8] c"Unmatched (\00", align 1
@.str.266 = private unnamed_addr constant [12 x i8] c"Unmatched )\00", align 1
@.str.267 = private unnamed_addr constant [22 x i8] c"Junk on end of regexp\00", align 1
@.str.268 = private unnamed_addr constant [9 x i8] c"%d%lu%4p\00", align 1
@.str.270 = private unnamed_addr constant [50 x i8] c"panic: reg_node overrun trying to emit %d, %p>=%p\00", align 1
@.str.272 = private unnamed_addr constant [31 x i8] c"Sequence (?#... not terminated\00", align 1
@.str.273 = private unnamed_addr constant [54 x i8] c"Group name must start with a non-digit word character\00", align 1
@.str.274 = private unnamed_addr constant [34 x i8] c"panic: no svname in reg_scan_name\00", align 1
@.str.275 = private unnamed_addr constant [37 x i8] c"Reference to nonexistent named group\00", align 1
@.str.278 = private unnamed_addr constant [65 x i8] c"panic: regpiece returned NULL, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.279 = private unnamed_addr constant [64 x i8] c"panic: regatom returned NULL, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.280 = private unnamed_addr constant [26 x i8] c"Invalid quantifier in {,}\00", align 1
@.str.281 = private unnamed_addr constant [33 x i8] c"Quantifier in {,} bigger than %d\00", align 1
@.str.282 = private unnamed_addr constant [102 x i8] c"Quantifier {n,m} with n > m can't match in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.283 = private unnamed_addr constant [102 x i8] c"Useless use of greediness modifier '%c' in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.284 = private unnamed_addr constant [102 x i8] c"%d%lu%4p matches null string many times in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.285 = private unnamed_addr constant [19 x i8] c"Nested quantifiers\00", align 1
@.str.286 = private unnamed_addr constant [12 x i8] c"Unmatched [\00", align 1
@.str.287 = private unnamed_addr constant [76 x i8] c"panic: regclass returned NULL to regatom, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.288 = private unnamed_addr constant [71 x i8] c"panic: reg returned NULL to regatom, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.289 = private unnamed_addr constant [13 x i8] c"Internal urp\00", align 1
@.str.290 = private unnamed_addr constant [27 x i8] c"Quantifier follows nothing\00", align 1
@.str.291 = private unnamed_addr constant [79 x i8] c"\\C is deprecated in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.292 = private unnamed_addr constant [29 x i8] c"Missing right brace on \\%c{}\00", align 1
@.str.293 = private unnamed_addr constant [12 x i8] c"Empty \\%c{}\00", align 1
@.str.294 = private unnamed_addr constant [3 x i8] c"cb\00", align 1
@.str.295 = private unnamed_addr constant [36 x i8] c"'%d%lu%4p' is an unknown bound type\00", align 1
@.str.296 = private unnamed_addr constant [97 x i8] c"Using /u for '%.*s' instead of /%s in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.297 = private unnamed_addr constant [32 x i8] c"Sequence %.2s... not terminated\00", align 1
@.str.298 = private unnamed_addr constant [29 x i8] c"Reference to invalid group 0\00", align 1
@.str.299 = private unnamed_addr constant [27 x i8] c"Unterminated \\g... pattern\00", align 1
@.str.300 = private unnamed_addr constant [43 x i8] c"Reference to nonexistent or unclosed group\00", align 1
@.str.301 = private unnamed_addr constant [29 x i8] c"Unterminated \\g{...} pattern\00", align 1
@.str.302 = private unnamed_addr constant [11 x i8] c"Trailing \\\00", align 1
@.str.303 = private unnamed_addr constant [38 x i8] c"panic: grok_bslash_N set RESTART_UTF8\00", align 1
@PL_encoding = external local_unnamed_addr global ptr, align 8
@PL_lex_encoding = external local_unnamed_addr global ptr, align 8
@.str.304 = private unnamed_addr constant [103 x i8] c"Invalid escape in the specified encoding in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.305 = private unnamed_addr constant [103 x i8] c"Unrecognized escape \\%.*s passed through in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.306 = private unnamed_addr constant [122 x i8] c"Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@PL_NonL1NonFinalFold = external local_unnamed_addr global ptr, align 8
@NonL1_Perl_Non_Final_Folds_invlist = internal constant [48 x i64] [i64 45, i64 148565664, i64 1, i64 0, i64 700, i64 701, i64 776, i64 777, i64 787, i64 788, i64 834, i64 835, i64 940, i64 941, i64 942, i64 943, i64 945, i64 946, i64 951, i64 952, i64 953, i64 954, i64 961, i64 962, i64 965, i64 966, i64 969, i64 970, i64 974, i64 975, i64 1381, i64 1382, i64 1396, i64 1397, i64 1406, i64 1407, i64 7936, i64 7944, i64 7968, i64 7976, i64 8032, i64 8040, i64 8048, i64 8049, i64 8052, i64 8053, i64 8060, i64 8061], align 16
@.str.307 = private unnamed_addr constant [18 x i8] c"Internal disaster\00", align 1
@.str.308 = private unnamed_addr constant [11 x i8] c"# comment\0A\00", align 1
@.str.309 = private unnamed_addr constant [116 x i8] c"POSIX syntax [%c %c] belongs inside character classes in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.310 = private unnamed_addr constant [59 x i8] c"\\N in a character class must be a named character: \\N{...}\00", align 1
@.str.311 = private unnamed_addr constant [17 x i8] c"Zero length \\N{}\00", align 1
@.str.312 = private unnamed_addr constant [107 x i8] c"Ignoring zero length \\N{} in character class in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.313 = private unnamed_addr constant [88 x i8] c"\\N{} in inverted character class or as a range end-point is restricted to one character\00", align 1
@.str.314 = private unnamed_addr constant [129 x i8] c"Using just the first character returned by \\N{} in character class in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.315 = private unnamed_addr constant [10 x i8] c"%s%.*s%s\0A\00", align 1
@.str.316 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@.str.317 = private unnamed_addr constant [3 x i8] c"_i\00", align 1
@PL_curstash = external local_unnamed_addr global ptr, align 8
@.str.318 = private unnamed_addr constant [31 x i8] c"Property '%d%lu%4p' is unknown\00", align 1
@.str.319 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.320 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.321 = private unnamed_addr constant [7 x i8] c"%s::%s\00", align 1
@.str.322 = private unnamed_addr constant [18 x i8] c"%cutf8::%d%lu%4p\0A\00", align 1
@.str.323 = private unnamed_addr constant [28 x i8] c"Need exactly 3 octal digits\00", align 1
@.str.324 = private unnamed_addr constant [41 x i8] c"Invalid escape in the specified encoding\00", align 1
@.str.325 = private unnamed_addr constant [43 x i8] c"Unrecognized escape \\%c in character class\00", align 1
@.str.326 = private unnamed_addr constant [120 x i8] c"Unrecognized escape \\%c in character class passed through in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.327 = private unnamed_addr constant [26 x i8] c"False [] range \22%d%lu%4p\22\00", align 1
@.str.328 = private unnamed_addr constant [88 x i8] c"False [] range \22%d%lu%4p\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.329 = private unnamed_addr constant [28 x i8] c"Invalid [] range \22%d%lu%4p\22\00", align 1
@.str.330 = private unnamed_addr constant [23 x i8] c"False [] range \22%*.*s\22\00", align 1
@.str.331 = private unnamed_addr constant [85 x i8] c"False [] range \22%*.*s\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.332 = private unnamed_addr constant [8 x i8] c"\\x{%lX}\00", align 1
@.str.333 = private unnamed_addr constant [107 x i8] c"Both or neither range ends should be Unicode in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.334 = private unnamed_addr constant [137 x i8] c"Ranges of ASCII printables should be some subset of \220-9\22, \22A-Z\22, or \22a-z\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.335 = private unnamed_addr constant [115 x i8] c"Ranges of digits should be from the same group of 10 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.336 = private unnamed_addr constant [108 x i8] c"\22%.*s\22 is more clearly written simply as \22%s\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.337 = private unnamed_addr constant [3 x i8] c"?:\00", align 1
@.str.338 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.339 = private unnamed_addr constant [3 x i8] c"|[\00", align 1
@.str.340 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.341 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.342 = private unnamed_addr constant [30 x i8] c"Unmatched '%c' in POSIX class\00", align 1
@.str.343 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.344 = private unnamed_addr constant [5 x i8] c"alph\00", align 1
@.str.345 = private unnamed_addr constant [5 x i8] c"spac\00", align 1
@.str.346 = private unnamed_addr constant [5 x i8] c"grap\00", align 1
@.str.347 = private unnamed_addr constant [5 x i8] c"asci\00", align 1
@.str.348 = private unnamed_addr constant [5 x i8] c"blan\00", align 1
@.str.349 = private unnamed_addr constant [5 x i8] c"cntr\00", align 1
@.str.350 = private unnamed_addr constant [5 x i8] c"alnu\00", align 1
@.str.351 = private unnamed_addr constant [5 x i8] c"lowe\00", align 1
@.str.352 = private unnamed_addr constant [5 x i8] c"uppe\00", align 1
@.str.353 = private unnamed_addr constant [5 x i8] c"digi\00", align 1
@.str.354 = private unnamed_addr constant [5 x i8] c"prin\00", align 1
@.str.355 = private unnamed_addr constant [5 x i8] c"punc\00", align 1
@.str.356 = private unnamed_addr constant [7 x i8] c"xdigit\00", align 1
@.str.357 = private unnamed_addr constant [33 x i8] c"POSIX class [:%d%lu%4p:] unknown\00", align 1
@.str.358 = private unnamed_addr constant [55 x i8] c"POSIX syntax [%c %c] is reserved for future extensions\00", align 1
@.str.359 = private unnamed_addr constant [29 x i8] c"Unmatched '[' in POSIX class\00", align 1
@.str.360 = private unnamed_addr constant [3 x i8] c"\\a\00", align 1
@.str.361 = private unnamed_addr constant [3 x i8] c"\\b\00", align 1
@.str.362 = private unnamed_addr constant [3 x i8] c"\\e\00", align 1
@.str.363 = private unnamed_addr constant [3 x i8] c"\\f\00", align 1
@.str.364 = private unnamed_addr constant [3 x i8] c"\\n\00", align 1
@.str.365 = private unnamed_addr constant [3 x i8] c"\\r\00", align 1
@.str.366 = private unnamed_addr constant [3 x i8] c"\\t\00", align 1
@.str.367 = private unnamed_addr constant [23 x i8] c"Missing braces on \\N{}\00", align 1
@.str.368 = private unnamed_addr constant [3 x i8] c"U+\00", align 1
@.str.369 = private unnamed_addr constant [39 x i8] c"\\N{NAME} must be resolved by the lexer\00", align 1
@.str.370 = private unnamed_addr constant [3 x i8] c".}\00", align 1
@.str.371 = private unnamed_addr constant [40 x i8] c"Invalid hexadecimal number in \\N{U+...}\00", align 1
@.str.372 = private unnamed_addr constant [4 x i8] c"\\x{\00", align 1
@.str.373 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.374 = private unnamed_addr constant [77 x i8] c"panic: reg returned NULL to grok_bslash_N, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.375 = private unnamed_addr constant [23 x i8] c"Missing braces on \\o{}\00", align 1
@.str.376 = private unnamed_addr constant [27 x i8] c"Missing right brace on \\o{\00", align 1
@.str.377 = private unnamed_addr constant [22 x i8] c"Number with no digits\00", align 1
@.str.378 = private unnamed_addr constant [20 x i8] c"Non-octal character\00", align 1
@.str.379 = private unnamed_addr constant [50 x i8] c"Non-octal character '%c'.  Resolved as \22\\o{%.*s}\22\00", align 1
@.str.380 = private unnamed_addr constant [18 x i8] c"Non-hex character\00", align 1
@.str.381 = private unnamed_addr constant [45 x i8] c"Use \\x{...} for more than two hex characters\00", align 1
@.str.382 = private unnamed_addr constant [28 x i8] c"Missing right brace on \\x{}\00", align 1
@.str.383 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.384 = private unnamed_addr constant [49 x i8] c"Character following \22\\c\22 must be printable ASCII\00", align 1
@.str.385 = private unnamed_addr constant [26 x i8] c"Use \22%c\22 instead of \22\\c{\22\00", align 1
@.str.386 = private unnamed_addr constant [23 x i8] c"Sequence \22\\c{\22 invalid\00", align 1
@.str.387 = private unnamed_addr constant [46 x i8] c"\22\\c%c\22 is more clearly written simply as \22%s\22\00", align 1
@.str.388 = private unnamed_addr constant [32 x i8] c"'%.*s' resolved to '\\o{%.*s}%c'\00", align 1
@.str.389 = private unnamed_addr constant [29 x i8] c"(?[...]) not valid in locale\00", align 1
@.str.390 = private unnamed_addr constant [80 x i8] c"panic: regclass returned NULL to handle_sets, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.391 = private unnamed_addr constant [25 x i8] c"Syntax error in (?[...])\00", align 1
@.str.392 = private unnamed_addr constant [101 x i8] c"The regex_sets feature is experimental in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.393 = private unnamed_addr constant [33 x i8] c"panic: Read past end of '(?[ ])'\00", align 1
@.str.394 = private unnamed_addr constant [27 x i8] c"Expecting '(?flags:(?[...'\00", align 1
@.str.395 = private unnamed_addr constant [42 x i8] c"Unexpected '(' with no preceding operator\00", align 1
@.str.396 = private unnamed_addr constant [15 x i8] c"Unexpected ')'\00", align 1
@.str.397 = private unnamed_addr constant [58 x i8] c"Unexpected binary operator '%c' with no preceding operand\00", align 1
@.str.398 = private unnamed_addr constant [21 x i8] c"Unexpected character\00", align 1
@.str.399 = private unnamed_addr constant [35 x i8] c"Operand with no preceding operator\00", align 1
@.str.400 = private unnamed_addr constant [38 x i8] c"Incomplete expression within '(?[ ])'\00", align 1
@.str.401 = private unnamed_addr constant [16 x i8] c"\\x{%lX}-\\x{%lX}\00", align 1
@.str.402 = private unnamed_addr constant [51 x i8] c"Regexp modifier \22%c\22 may appear a maximum of twice\00", align 1
@.str.403 = private unnamed_addr constant [42 x i8] c"Regexp modifier \22%c\22 may not appear twice\00", align 1
@.str.404 = private unnamed_addr constant [54 x i8] c"Regexp modifiers \22%c\22 and \22%c\22 are mutually exclusive\00", align 1
@.str.405 = private unnamed_addr constant [50 x i8] c"Regexp modifier \22%c\22 may not appear after the \22-\22\00", align 1
@.str.406 = private unnamed_addr constant [98 x i8] c"Useless (%s%c) - %suse /%c modifier in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.407 = private unnamed_addr constant [3 x i8] c"?-\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"don't \00", align 1
@.str.409 = private unnamed_addr constant [97 x i8] c"Useless (%sc) - %suse /gc modifier in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.410 = private unnamed_addr constant [83 x i8] c"Useless use of (?-p) in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.411 = private unnamed_addr constant [55 x i8] c"Having more than one /%c regexp modifier is deprecated\00", align 1
@.str.412 = private unnamed_addr constant [30 x i8] c"Sequence (?... not terminated\00", align 1
@reg_off_by_arg = internal unnamed_addr constant <{ [72 x i8], [22 x i8] }> <{ [72 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\02\02\01\01\00\00\00\00\01", [22 x i8] zeroinitializer }>, align 16
@switch.table.Perl_re_op_compile = private unnamed_addr constant [5 x i64] [i64 1, i64 1, i64 1, i64 1, i64 2], align 8
@reltable.Perl_re_op_compile = private unnamed_addr constant [5 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.209 to i64), i64 ptrtoint (ptr @reltable.Perl_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.210 to i64), i64 ptrtoint (ptr @reltable.Perl_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.211 to i64), i64 ptrtoint (ptr @reltable.Perl_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.212 to i64), i64 ptrtoint (ptr @reltable.Perl_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.213 to i64), i64 ptrtoint (ptr @reltable.Perl_re_op_compile to i64)) to i32)], align 4
@switch.table.S_study_chunk = private unnamed_addr constant [9 x i8] c"\96\97\98\99\9A\9E\9E\9E\9E", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_re_compile(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  store ptr %0, ptr %3, align 8, !tbaa !5
  %4 = call ptr @Perl_re_op_compile(ptr noundef nonnull %3, i32 noundef 1, ptr noundef null, ptr noundef nonnull @PL_core_reg_engine, ptr noundef null, ptr noundef null, i32 noundef %1, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #21
  ret ptr %4
}

declare i32 @Perl_regexec_flags(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, i32 noundef) #1

declare ptr @Perl_re_intuit_start(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_re_intuit_string(ptr nocapture noundef readonly %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !10
  %6 = and i32 %5, 536870912
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 11
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.reg_substr_data, ptr %9, i64 0, i32 1, i64 2, i32 3
  %11 = getelementptr inbounds %struct.reg_substr_data, ptr %9, i64 0, i32 1, i64 2, i32 2
  %12 = select i1 %7, ptr %11, ptr %10
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  ret ptr %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_regfree_internal(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 14
  %5 = load ptr, ptr %4, align 8, !tbaa !16
  %6 = getelementptr inbounds %struct.regexp_internal, ptr %5, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.regexp_internal, ptr %5, i64 0, i32 5
  %11 = load i32, ptr %10, align 8, !tbaa !19
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %9, %28
  %14 = phi i32 [ %29, %28 ], [ %11, %9 ]
  %15 = phi i64 [ %30, %28 ], [ 0, %9 ]
  %16 = load ptr, ptr %6, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.reg_code_block, ptr %16, i64 %15, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !20
  %19 = icmp eq ptr %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 1
  %22 = load i32, ptr %21, align 8, !tbaa !22
  %23 = icmp ugt i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = add i32 %22, -1
  store i32 %25, ptr %21, align 8, !tbaa !22
  br label %28

26:                                               ; preds = %20
  tail call void @Perl_sv_free2(ptr noundef nonnull %18, i32 noundef %22) #21
  %27 = load i32, ptr %10, align 8, !tbaa !19
  br label %28

28:                                               ; preds = %13, %24, %26
  %29 = phi i32 [ %14, %13 ], [ %14, %24 ], [ %27, %26 ]
  %30 = add nuw nsw i64 %15, 1
  %31 = sext i32 %29 to i64
  %32 = icmp slt i64 %30, %31
  br i1 %32, label %13, label %33, !llvm.loop !24

33:                                               ; preds = %28
  %34 = load ptr, ptr %6, align 8, !tbaa !17
  br label %35

35:                                               ; preds = %33, %9
  %36 = phi ptr [ %34, %33 ], [ %7, %9 ]
  tail call void @Perl_safesysfree(ptr noundef %36) #21
  br label %37

37:                                               ; preds = %35, %1
  %38 = getelementptr inbounds %struct.regexp_internal, ptr %5, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !26
  %40 = icmp eq ptr %39, null
  br i1 %40, label %126, label %41

41:                                               ; preds = %37
  %42 = load i32, ptr %39, align 8, !tbaa !27
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %121

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.regexp_internal, ptr %5, i64 0, i32 2
  %46 = zext i32 %42 to i64
  br label %47

47:                                               ; preds = %44, %117
  %48 = phi i64 [ %46, %44 ], [ %49, %117 ]
  %49 = add nsw i64 %48, -1
  %50 = load ptr, ptr %38, align 8, !tbaa !26
  %51 = getelementptr inbounds %struct.reg_data, ptr %50, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !29
  %53 = and i64 %49, 4294967295
  %54 = getelementptr inbounds i8, ptr %52, i64 %53
  %55 = load i8, ptr %54, align 1, !tbaa !9
  switch i8 %55, label %115 [
    i8 97, label %56
    i8 114, label %56
    i8 115, label %56
    i8 83, label %56
    i8 117, label %56
    i8 102, label %67
    i8 108, label %117
    i8 76, label %117
    i8 84, label %70
    i8 116, label %87
  ]

56:                                               ; preds = %47, %47, %47, %47, %47
  %57 = getelementptr inbounds %struct.reg_data, ptr %50, i64 0, i32 2, i64 %53
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  %59 = icmp eq ptr %58, null
  br i1 %59, label %117, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 1
  %62 = load i32, ptr %61, align 8, !tbaa !22
  %63 = icmp ugt i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = add i32 %62, -1
  store i32 %65, ptr %61, align 8, !tbaa !22
  br label %117

66:                                               ; preds = %60
  tail call void @Perl_sv_free2(ptr noundef nonnull %58, i32 noundef %62) #21
  br label %117

67:                                               ; preds = %47
  %68 = getelementptr inbounds %struct.reg_data, ptr %50, i64 0, i32 2, i64 %53
  %69 = load ptr, ptr %68, align 8, !tbaa !5
  tail call void @Perl_safesysfree(ptr noundef %69) #21
  br label %117

70:                                               ; preds = %47
  %71 = getelementptr inbounds %struct.reg_data, ptr %50, i64 0, i32 2, i64 %53
  %72 = load ptr, ptr %71, align 8, !tbaa !5
  %73 = load i32, ptr %72, align 8, !tbaa !30
  %74 = add i32 %73, -1
  store i32 %74, ptr %72, align 8, !tbaa !30
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %117

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct._reg_ac_data, ptr %72, i64 0, i32 3
  %78 = load ptr, ptr %77, align 8, !tbaa !32
  tail call void @free(ptr noundef %78) #21
  %79 = getelementptr inbounds %struct._reg_ac_data, ptr %72, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !33
  tail call void @free(ptr noundef %80) #21
  %81 = load ptr, ptr %38, align 8, !tbaa !26
  %82 = getelementptr inbounds %struct.reg_data, ptr %81, i64 0, i32 2, i64 %53
  %83 = load ptr, ptr %82, align 8, !tbaa !5
  tail call void @free(ptr noundef %83) #21
  %84 = load ptr, ptr %45, align 8, !tbaa !34
  %85 = icmp eq ptr %84, null
  br i1 %85, label %117, label %86

86:                                               ; preds = %76
  tail call void @free(ptr noundef nonnull %84) #21
  store ptr null, ptr %45, align 8, !tbaa !34
  br label %117

87:                                               ; preds = %47
  %88 = getelementptr inbounds %struct.reg_data, ptr %50, i64 0, i32 2, i64 %53
  %89 = load ptr, ptr %88, align 8, !tbaa !5
  %90 = load i32, ptr %89, align 8, !tbaa !35
  %91 = add i32 %90, -1
  store i32 %91, ptr %89, align 8, !tbaa !35
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %117

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct._reg_trie_data, ptr %89, i64 0, i32 2
  %95 = load ptr, ptr %94, align 8, !tbaa !38
  tail call void @free(ptr noundef %95) #21
  %96 = getelementptr inbounds %struct._reg_trie_data, ptr %89, i64 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !39
  tail call void @free(ptr noundef %97) #21
  %98 = getelementptr inbounds %struct._reg_trie_data, ptr %89, i64 0, i32 4
  %99 = load ptr, ptr %98, align 8, !tbaa !40
  tail call void @free(ptr noundef %99) #21
  %100 = getelementptr inbounds %struct._reg_trie_data, ptr %89, i64 0, i32 5
  %101 = load ptr, ptr %100, align 8, !tbaa !41
  %102 = icmp eq ptr %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %93
  tail call void @free(ptr noundef nonnull %101) #21
  br label %104

104:                                              ; preds = %103, %93
  %105 = getelementptr inbounds %struct._reg_trie_data, ptr %89, i64 0, i32 6
  %106 = load ptr, ptr %105, align 8, !tbaa !42
  %107 = icmp eq ptr %106, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  tail call void @free(ptr noundef nonnull %106) #21
  br label %109

109:                                              ; preds = %108, %104
  %110 = getelementptr inbounds %struct._reg_trie_data, ptr %89, i64 0, i32 7
  %111 = load ptr, ptr %110, align 8, !tbaa !43
  tail call void @free(ptr noundef %111) #21
  %112 = load ptr, ptr %38, align 8, !tbaa !26
  %113 = getelementptr inbounds %struct.reg_data, ptr %112, i64 0, i32 2, i64 %53
  %114 = load ptr, ptr %113, align 8, !tbaa !5
  tail call void @free(ptr noundef %114) #21
  br label %117

115:                                              ; preds = %47
  %116 = zext i8 %55 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.203, i32 noundef %116) #21
  br label %117

117:                                              ; preds = %66, %64, %56, %87, %109, %70, %86, %76, %47, %47, %115, %67
  %118 = icmp ugt i64 %48, 1
  br i1 %118, label %47, label %119, !llvm.loop !44

119:                                              ; preds = %117
  %120 = load ptr, ptr %38, align 8, !tbaa !26
  br label %121

121:                                              ; preds = %119, %41
  %122 = phi ptr [ %120, %119 ], [ %39, %41 ]
  %123 = getelementptr inbounds %struct.reg_data, ptr %122, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !29
  tail call void @Perl_safesysfree(ptr noundef %124) #21
  %125 = load ptr, ptr %38, align 8, !tbaa !26
  tail call void @Perl_safesysfree(ptr noundef %125) #21
  br label %126

126:                                              ; preds = %121, %37
  tail call void @Perl_safesysfree(ptr noundef nonnull %5) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_reg_numbered_buff_fetch(ptr noundef readonly %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr i8, ptr %0, i64 16
  %5 = load ptr, ptr %4, align 8, !tbaa !9
  %6 = icmp eq i32 %1, -3
  %7 = add i32 %1, 5
  %8 = icmp ult i32 %7, 3
  br i1 %8, label %9, label %32

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 7
  %11 = load i32, ptr %10, align 8, !tbaa !45
  %12 = and i32 %11, 64
  %13 = icmp eq i32 %12, 0
  %14 = lshr exact i32 %12, 6
  %15 = trunc i32 %14 to i8
  %16 = load ptr, ptr @PL_curpm, align 8
  %17 = icmp ne ptr %16, null
  %18 = select i1 %13, i1 %17, i1 false
  br i1 %18, label %19, label %29

19:                                               ; preds = %9
  %20 = getelementptr inbounds %struct.pmop, ptr %16, i64 0, i32 9
  %21 = load ptr, ptr %20, align 8, !tbaa !46
  %22 = icmp eq ptr %21, %0
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.pmop, ptr %16, i64 0, i32 10
  %25 = load i32, ptr %24, align 8, !tbaa !48
  %26 = trunc i32 %25 to i8
  %27 = lshr i8 %26, 6
  %28 = and i8 %27, 1
  br label %29

29:                                               ; preds = %19, %23, %9
  %30 = phi i8 [ %28, %23 ], [ %15, %19 ], [ %15, %9 ]
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %137, label %32

32:                                               ; preds = %29, %3
  %33 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 18
  %34 = load ptr, ptr %33, align 8, !tbaa !49
  %35 = icmp eq ptr %34, null
  br i1 %35, label %137, label %36

36:                                               ; preds = %32
  %37 = select i1 %6, i32 0, i32 %1
  switch i32 %37, label %61 [
    i32 -2, label %38
    i32 -5, label %38
    i32 -1, label %45
    i32 -4, label %45
  ]

38:                                               ; preds = %36, %36
  %39 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 17
  %40 = load ptr, ptr %39, align 8, !tbaa !50
  %41 = load i64, ptr %40, align 8, !tbaa !51
  %42 = icmp eq i64 %41, -1
  br i1 %42, label %43, label %85

43:                                               ; preds = %38
  %44 = icmp eq i32 %37, -4
  br i1 %44, label %45, label %137

45:                                               ; preds = %43, %36, %36
  %46 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 17
  %47 = load ptr, ptr %46, align 8, !tbaa !50
  %48 = getelementptr inbounds %struct.regexp_paren_pair, ptr %47, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !53
  %50 = icmp eq i64 %49, -1
  br i1 %50, label %137, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 21
  %53 = load i64, ptr %52, align 8, !tbaa !54
  %54 = sub i64 0, %53
  %55 = getelementptr inbounds i8, ptr %34, i64 %54
  %56 = getelementptr inbounds i8, ptr %55, i64 %49
  %57 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 20
  %58 = load i64, ptr %57, align 8, !tbaa !55
  %59 = sub i64 %53, %49
  %60 = add i64 %59, %58
  br label %85

61:                                               ; preds = %36
  %62 = icmp sgt i32 %37, -1
  br i1 %62, label %63, label %137

63:                                               ; preds = %61
  %64 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 12
  %65 = load i32, ptr %64, align 8, !tbaa !56
  %66 = icmp sgt i32 %37, %65
  br i1 %66, label %137, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 17
  %69 = load ptr, ptr %68, align 8, !tbaa !50
  %70 = zext i32 %37 to i64
  %71 = getelementptr inbounds %struct.regexp_paren_pair, ptr %69, i64 %70
  %72 = load i64, ptr %71, align 8, !tbaa !51
  %73 = icmp eq i64 %72, -1
  br i1 %73, label %137, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.regexp_paren_pair, ptr %69, i64 %70, i32 1
  %76 = load i64, ptr %75, align 8, !tbaa !53
  %77 = icmp eq i64 %76, -1
  br i1 %77, label %137, label %78

78:                                               ; preds = %74
  %79 = sub nsw i64 %76, %72
  %80 = getelementptr inbounds i8, ptr %34, i64 %72
  %81 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 21
  %82 = load i64, ptr %81, align 8, !tbaa !54
  %83 = sub i64 0, %82
  %84 = getelementptr inbounds i8, ptr %80, i64 %83
  br label %85

85:                                               ; preds = %38, %51, %78
  %86 = phi i64 [ %60, %51 ], [ %79, %78 ], [ %41, %38 ]
  %87 = phi ptr [ %56, %51 ], [ %84, %78 ], [ %34, %38 ]
  %88 = icmp sgt i64 %86, -1
  br i1 %88, label %89, label %137

89:                                               ; preds = %85
  %90 = load i8, ptr @PL_tainted, align 1, !tbaa !57, !range !59, !noundef !60
  store i8 0, ptr @PL_tainted, align 1, !tbaa !57
  tail call void @Perl_sv_setpvn(ptr noundef %2, ptr noundef %87, i64 noundef %86) #21
  store i8 %90, ptr @PL_tainted, align 1, !tbaa !57
  %91 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 13
  %92 = load i32, ptr %91, align 4, !tbaa !61
  %93 = and i32 %92, 128
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 7
  %96 = load i32, ptr %95, align 8, !tbaa !45
  %97 = and i32 %96, 1048576
  %98 = icmp eq i32 %97, 0
  br i1 %94, label %104, label %99

99:                                               ; preds = %89
  br i1 %98, label %109, label %100

100:                                              ; preds = %99
  %101 = icmp eq i64 %86, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %100
  %103 = tail call zeroext i1 @Perl_is_utf8_string(ptr noundef %87, i64 noundef %86) #21
  br i1 %103, label %105, label %109

104:                                              ; preds = %89
  br i1 %98, label %109, label %105

105:                                              ; preds = %100, %104, %102
  %106 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %107 = load i32, ptr %106, align 4, !tbaa !62
  %108 = or i32 %107, 536870912
  store i32 %108, ptr %106, align 4, !tbaa !62
  br label %113

109:                                              ; preds = %99, %104, %102
  %110 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %111 = load i32, ptr %110, align 4, !tbaa !62
  %112 = and i32 %111, -536870913
  store i32 %112, ptr %110, align 4, !tbaa !62
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i32 [ %112, %109 ], [ %108, %105 ]
  %115 = load i8, ptr @PL_tainting, align 1, !tbaa !57, !range !59, !noundef !60
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %138, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 7
  %119 = load i32, ptr %118, align 8, !tbaa !45
  %120 = and i32 %119, 67108864
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %136, label %122

122:                                              ; preds = %117
  %123 = and i32 %114, 255
  %124 = icmp ugt i32 %123, 6
  br i1 %124, label %125, label %135

125:                                              ; preds = %122
  %126 = load ptr, ptr %2, align 8, !tbaa !63
  %127 = getelementptr inbounds %struct.xpvmg, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !9
  store i8 1, ptr @PL_tainted, align 1, !tbaa !57
  %129 = load ptr, ptr %128, align 8, !tbaa !64
  store ptr %129, ptr %127, align 8, !tbaa !9
  tail call void @Perl_sv_magic(ptr noundef nonnull %2, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #21
  %130 = load ptr, ptr %2, align 8, !tbaa !63
  %131 = getelementptr inbounds %struct.xpvmg, ptr %130, i64 0, i32 1
  %132 = load ptr, ptr %131, align 8, !tbaa !9
  %133 = icmp eq ptr %132, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %125
  store ptr %132, ptr %128, align 8, !tbaa !64
  store ptr %128, ptr %131, align 8, !tbaa !9
  br label %138

135:                                              ; preds = %122
  store i8 1, ptr @PL_tainted, align 1, !tbaa !57
  tail call void @Perl_sv_magic(ptr noundef nonnull %2, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #21
  br label %138

136:                                              ; preds = %117
  tail call void @Perl_sv_untaint(ptr noundef nonnull %2) #21
  br label %138

137:                                              ; preds = %43, %45, %29, %85, %61, %63, %67, %74, %32
  tail call void @Perl_sv_setsv_flags(ptr noundef %2, ptr noundef nonnull @PL_sv_undef, i32 noundef 1538) #21
  br label %138

138:                                              ; preds = %113, %136, %135, %134, %125, %137
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_reg_numbered_buff_store(ptr nocapture readnone %0, i32 %1, ptr nocapture readnone %2) #0 {
  %4 = load i8, ptr @PL_localizing, align 1, !tbaa !9
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @Perl_croak_no_modify() #21
  br label %7

7:                                                ; preds = %6, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_reg_numbered_buff_length(ptr noundef readonly %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr i8, ptr %0, i64 16
  %7 = load ptr, ptr %6, align 8, !tbaa !9
  %8 = add i32 %2, 5
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %33

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 7
  %12 = load i32, ptr %11, align 8, !tbaa !45
  %13 = and i32 %12, 64
  %14 = icmp eq i32 %13, 0
  %15 = lshr exact i32 %13, 6
  %16 = trunc i32 %15 to i8
  %17 = load ptr, ptr @PL_curpm, align 8
  %18 = icmp ne ptr %17, null
  %19 = select i1 %14, i1 %18, i1 false
  br i1 %19, label %20, label %30

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.pmop, ptr %17, i64 0, i32 9
  %22 = load ptr, ptr %21, align 8, !tbaa !46
  %23 = icmp eq ptr %22, %0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.pmop, ptr %17, i64 0, i32 10
  %26 = load i32, ptr %25, align 8, !tbaa !48
  %27 = trunc i32 %26 to i8
  %28 = lshr i8 %27, 6
  %29 = and i8 %28, 1
  br label %30

30:                                               ; preds = %20, %24, %10
  %31 = phi i8 [ %29, %24 ], [ %16, %20 ], [ %16, %10 ]
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %74, label %33

33:                                               ; preds = %30, %3
  switch i32 %2, label %57 [
    i32 -5, label %34
    i32 -2, label %34
    i32 -4, label %42
    i32 -1, label %42
  ]

34:                                               ; preds = %33, %33
  %35 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 17
  %36 = load ptr, ptr %35, align 8, !tbaa !50
  %37 = load i64, ptr %36, align 8, !tbaa !51
  %38 = icmp ne i64 %37, -1
  %39 = trunc i64 %37 to i32
  %40 = icmp sgt i32 %39, 0
  %41 = and i1 %38, %40
  br i1 %41, label %80, label %103

42:                                               ; preds = %33, %33
  %43 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 17
  %44 = load ptr, ptr %43, align 8, !tbaa !50
  %45 = getelementptr inbounds %struct.regexp_paren_pair, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %45, align 8, !tbaa !53
  %47 = icmp eq i64 %46, -1
  br i1 %47, label %103, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 20
  %50 = load i64, ptr %49, align 8, !tbaa !55
  %51 = sub nsw i64 %50, %46
  %52 = trunc i64 %51 to i32
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %103

54:                                               ; preds = %48
  %55 = trunc i64 %46 to i32
  %56 = trunc i64 %50 to i32
  br label %80

57:                                               ; preds = %33
  %58 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 12
  %59 = load i32, ptr %58, align 8, !tbaa !56
  %60 = icmp slt i32 %59, %2
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 17
  %63 = load ptr, ptr %62, align 8, !tbaa !50
  %64 = sext i32 %2 to i64
  %65 = getelementptr inbounds %struct.regexp_paren_pair, ptr %63, i64 %64
  %66 = load i64, ptr %65, align 8, !tbaa !51
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %74, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %struct.regexp_paren_pair, ptr %63, i64 %64, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !53
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %74, label %77

74:                                               ; preds = %30, %57, %61, %69
  %75 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #21
  br i1 %75, label %76, label %103

76:                                               ; preds = %74
  tail call void @Perl_report_uninit(ptr noundef %1) #21
  br label %103

77:                                               ; preds = %69
  %78 = sub nsw i32 %72, %67
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %103

80:                                               ; preds = %34, %54, %77
  %81 = phi i32 [ %72, %77 ], [ %39, %34 ], [ %56, %54 ]
  %82 = phi i32 [ %67, %77 ], [ 0, %34 ], [ %55, %54 ]
  %83 = phi i32 [ %78, %77 ], [ %39, %34 ], [ %52, %54 ]
  %84 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 7
  %85 = load i32, ptr %84, align 8, !tbaa !45
  %86 = and i32 %85, 1048576
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %103, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 18
  %90 = load ptr, ptr %89, align 8, !tbaa !49
  %91 = getelementptr inbounds %struct.regexp, ptr %7, i64 0, i32 21
  %92 = load i64, ptr %91, align 8, !tbaa !54
  %93 = sub i64 0, %92
  %94 = getelementptr inbounds i8, ptr %90, i64 %93
  %95 = sext i32 %82 to i64
  %96 = getelementptr inbounds i8, ptr %94, i64 %95
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  %97 = sub nsw i32 %81, %82
  %98 = sext i32 %97 to i64
  %99 = call zeroext i1 @Perl_is_utf8_string_loclen(ptr noundef %96, i64 noundef %98, ptr noundef nonnull %4, ptr noundef nonnull %5) #21
  %100 = load i64, ptr %5, align 8
  %101 = trunc i64 %100 to i32
  %102 = select i1 %99, i32 %101, i32 %97
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #21
  br label %103

103:                                              ; preds = %77, %80, %88, %74, %76, %42, %48, %34
  %104 = phi i32 [ 0, %34 ], [ 0, %48 ], [ 0, %42 ], [ 0, %76 ], [ 0, %74 ], [ %102, %88 ], [ %83, %80 ], [ %78, %77 ]
  ret i32 %104
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_named_buff(ptr noundef %0, ptr noundef %1, ptr nocapture readnone %2, i32 noundef %3) #0 {
  %5 = and i32 %3, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = tail call ptr @Perl_reg_named_buff_fetch(ptr noundef %0, ptr noundef %1, i32 noundef %3)
  br label %58

9:                                                ; preds = %4
  %10 = and i32 %3, 14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call void @Perl_croak_no_modify() #21
  br label %58

13:                                               ; preds = %9
  %14 = and i32 %3, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %47, label %16

16:                                               ; preds = %13
  %17 = getelementptr i8, ptr %0, i64 16
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = icmp eq ptr %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.regexp, ptr %18, i64 0, i32 6
  %22 = load ptr, ptr %21, align 8, !tbaa !66
  %23 = icmp eq ptr %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %20
  %25 = and i32 %3, 512
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.regexp, ptr %18, i64 0, i32 4
  %29 = load ptr, ptr %28, align 8, !tbaa !67
  %30 = getelementptr inbounds %struct.regexp_engine, ptr %29, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !68
  %32 = or i32 %3, 1
  %33 = tail call ptr %31(ptr noundef nonnull %0, ptr noundef %1, ptr noundef null, i32 noundef %32) #21
  %34 = icmp eq ptr %33, null
  br i1 %34, label %58, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.sv, ptr %33, i64 0, i32 1
  %37 = load i32, ptr %36, align 8, !tbaa !22
  %38 = icmp ugt i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = add i32 %37, -1
  store i32 %40, ptr %36, align 8, !tbaa !22
  br label %46

41:                                               ; preds = %35
  tail call void @Perl_sv_free2(ptr noundef nonnull %33, i32 noundef %37) #21
  br label %46

42:                                               ; preds = %24
  %43 = tail call ptr @Perl_hv_common(ptr noundef nonnull %22, ptr noundef %1, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #21
  %44 = freeze ptr %43
  %45 = icmp eq ptr %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %41, %39, %42
  br label %58

47:                                               ; preds = %13
  %48 = and i32 %3, 2048
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = tail call ptr @Perl_reg_named_buff_all(ptr noundef %0, i32 noundef %3)
  br label %58

52:                                               ; preds = %47
  %53 = and i32 %3, 4128
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = tail call ptr @Perl_reg_named_buff_scalar(ptr noundef %0, i32 noundef %3)
  br label %58

57:                                               ; preds = %52
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.188, i32 noundef %3) #21
  br label %58

58:                                               ; preds = %16, %20, %27, %46, %42, %57, %55, %50, %12, %7
  %59 = phi ptr [ %8, %7 ], [ null, %12 ], [ %51, %50 ], [ %56, %55 ], [ null, %57 ], [ @PL_sv_yes, %46 ], [ @PL_sv_no, %42 ], [ @PL_sv_no, %27 ], [ @PL_sv_no, %20 ], [ @PL_sv_no, %16 ]
  ret ptr %59
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_named_buff_iter(ptr noundef %0, ptr nocapture readnone %1, i32 noundef %2) #0 {
  %4 = and i32 %2, 64
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %3
  %7 = getelementptr i8, ptr %0, i64 16
  %8 = load ptr, ptr %7, align 8, !tbaa !9
  %9 = icmp eq ptr %8, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.regexp, ptr %8, i64 0, i32 6
  %12 = load ptr, ptr %11, align 8, !tbaa !66
  %13 = icmp eq ptr %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %10
  %15 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %12) #21
  %16 = load ptr, ptr %7, align 8, !tbaa !9
  %17 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 4
  %18 = load ptr, ptr %17, align 8, !tbaa !67
  %19 = getelementptr inbounds %struct.regexp_engine, ptr %18, i64 0, i32 9
  %20 = load ptr, ptr %19, align 8, !tbaa !70
  %21 = and i32 %2, -193
  %22 = or i32 %21, 128
  %23 = tail call ptr %20(ptr noundef nonnull %0, ptr noundef null, i32 noundef %22) #21
  br label %30

24:                                               ; preds = %3
  %25 = and i32 %2, 128
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = tail call ptr @Perl_reg_named_buff_nextkey(ptr noundef %0, i32 noundef %2)
  br label %30

29:                                               ; preds = %24
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.189, i32 noundef %2) #21
  br label %30

30:                                               ; preds = %14, %10, %6, %29, %27
  %31 = phi ptr [ %28, %27 ], [ null, %29 ], [ %23, %14 ], [ null, %10 ], [ null, %6 ]
  ret ptr %31
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_qr_package(ptr nocapture readnone %0) #0 {
  %2 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.191, i64 noundef 6) #21
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_re_op_compile(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef readonly %4, ptr noundef writeonly %5, i32 noundef %6, i32 noundef %7) #0 {
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca %struct.scan_data_t, align 8
  %15 = alloca %struct.RExC_state_t, align 8
  %16 = alloca %struct.RExC_state_t, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.regnode_ssc, align 8
  %19 = alloca i64, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i64, align 8
  %22 = alloca %struct.regnode_ssc, align 8
  %23 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #21
  store i64 0, ptr %12, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #21
  store i8 0, ptr %13, align 1, !tbaa !57
  call void @llvm.lifetime.start.p0(i64 152, ptr nonnull %14) #21
  call void @llvm.lifetime.start.p0(i64 344, ptr nonnull %15) #21
  call void @llvm.lifetime.start.p0(i64 344, ptr nonnull %16)
  %24 = load ptr, ptr @PL_AboveLatin1, align 8, !tbaa !5
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %106

26:                                               ; preds = %8
  %27 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %28 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 3
  store ptr getelementptr inbounds ([5 x i64], ptr @AboveLatin1_invlist, i64 0, i64 3), ptr %28, align 8, !tbaa !9
  %29 = load ptr, ptr %27, align 8, !tbaa !63
  %30 = getelementptr inbounds %struct.xpv, ptr %29, i64 0, i32 3
  store i64 0, ptr %30, align 8, !tbaa !9
  %31 = load ptr, ptr %27, align 8, !tbaa !63
  %32 = getelementptr inbounds %struct.xpvinvlist, ptr %31, i64 0, i32 6
  store i8 1, ptr %32, align 1, !tbaa !57
  %33 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 2
  store i64 16, ptr %33, align 8, !tbaa !72
  %34 = getelementptr inbounds %struct.xpvinvlist, ptr %31, i64 0, i32 4
  store i64 0, ptr %34, align 8, !tbaa !71
  %35 = getelementptr inbounds %struct.xpvinvlist, ptr %31, i64 0, i32 5
  store i64 -1, ptr %35, align 8, !tbaa !71
  %36 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !62
  %38 = or i32 %37, 134283264
  store i32 %38, ptr %36, align 4, !tbaa !62
  store ptr %27, ptr @PL_AboveLatin1, align 8, !tbaa !5
  %39 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %40 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 3
  store ptr getelementptr inbounds ([5 x i64], ptr @Latin1_invlist, i64 0, i64 3), ptr %40, align 8, !tbaa !9
  %41 = load ptr, ptr %39, align 8, !tbaa !63
  %42 = getelementptr inbounds %struct.xpv, ptr %41, i64 0, i32 3
  store i64 0, ptr %42, align 8, !tbaa !9
  %43 = load ptr, ptr %39, align 8, !tbaa !63
  %44 = getelementptr inbounds %struct.xpvinvlist, ptr %43, i64 0, i32 6
  store i8 0, ptr %44, align 1, !tbaa !57
  %45 = getelementptr inbounds %struct.xpv, ptr %43, i64 0, i32 2
  store i64 16, ptr %45, align 8, !tbaa !72
  %46 = getelementptr inbounds %struct.xpvinvlist, ptr %43, i64 0, i32 4
  store i64 0, ptr %46, align 8, !tbaa !71
  %47 = getelementptr inbounds %struct.xpvinvlist, ptr %43, i64 0, i32 5
  store i64 -1, ptr %47, align 8, !tbaa !71
  %48 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !62
  %50 = or i32 %49, 134283264
  store i32 %50, ptr %48, align 4, !tbaa !62
  store ptr %39, ptr @PL_Latin1, align 8, !tbaa !5
  %51 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %52 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 3
  store ptr getelementptr inbounds ([6 x i64], ptr @UpperLatin1_invlist, i64 0, i64 3), ptr %52, align 8, !tbaa !9
  %53 = load ptr, ptr %51, align 8, !tbaa !63
  %54 = getelementptr inbounds %struct.xpv, ptr %53, i64 0, i32 3
  store i64 0, ptr %54, align 8, !tbaa !9
  %55 = load ptr, ptr %51, align 8, !tbaa !63
  %56 = getelementptr inbounds %struct.xpvinvlist, ptr %55, i64 0, i32 6
  store i8 1, ptr %56, align 1, !tbaa !57
  %57 = getelementptr inbounds %struct.xpv, ptr %55, i64 0, i32 2
  store i64 24, ptr %57, align 8, !tbaa !72
  %58 = getelementptr inbounds %struct.xpvinvlist, ptr %55, i64 0, i32 4
  store i64 0, ptr %58, align 8, !tbaa !71
  %59 = getelementptr inbounds %struct.xpvinvlist, ptr %55, i64 0, i32 5
  store i64 -1, ptr %59, align 8, !tbaa !71
  %60 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 2
  %61 = load i32, ptr %60, align 4, !tbaa !62
  %62 = or i32 %61, 134283264
  store i32 %62, ptr %60, align 4, !tbaa !62
  store ptr %51, ptr @PL_UpperLatin1, align 8, !tbaa !5
  %63 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %64 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 3
  store ptr getelementptr inbounds ([238 x i64], ptr @_Perl_Any_Folds_invlist, i64 0, i64 3), ptr %64, align 8, !tbaa !9
  %65 = load ptr, ptr %63, align 8, !tbaa !63
  %66 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 3
  store i64 0, ptr %66, align 8, !tbaa !9
  %67 = load ptr, ptr %63, align 8, !tbaa !63
  %68 = getelementptr inbounds %struct.xpvinvlist, ptr %67, i64 0, i32 6
  store i8 1, ptr %68, align 1, !tbaa !57
  %69 = getelementptr inbounds %struct.xpv, ptr %67, i64 0, i32 2
  store i64 1880, ptr %69, align 8, !tbaa !72
  %70 = getelementptr inbounds %struct.xpvinvlist, ptr %67, i64 0, i32 4
  store i64 0, ptr %70, align 8, !tbaa !71
  %71 = getelementptr inbounds %struct.xpvinvlist, ptr %67, i64 0, i32 5
  store i64 -1, ptr %71, align 8, !tbaa !71
  %72 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 2
  %73 = load i32, ptr %72, align 4, !tbaa !62
  %74 = or i32 %73, 134283264
  store i32 %74, ptr %72, align 4, !tbaa !62
  store ptr %63, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %75 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %76 = getelementptr inbounds %struct.sv, ptr %75, i64 0, i32 3
  store ptr getelementptr inbounds ([62 x i64], ptr @_Perl_Folds_To_Multi_Char_invlist, i64 0, i64 3), ptr %76, align 8, !tbaa !9
  %77 = load ptr, ptr %75, align 8, !tbaa !63
  %78 = getelementptr inbounds %struct.xpv, ptr %77, i64 0, i32 3
  store i64 0, ptr %78, align 8, !tbaa !9
  %79 = load ptr, ptr %75, align 8, !tbaa !63
  %80 = getelementptr inbounds %struct.xpvinvlist, ptr %79, i64 0, i32 6
  store i8 1, ptr %80, align 1, !tbaa !57
  %81 = getelementptr inbounds %struct.xpv, ptr %79, i64 0, i32 2
  store i64 472, ptr %81, align 8, !tbaa !72
  %82 = getelementptr inbounds %struct.xpvinvlist, ptr %79, i64 0, i32 4
  store i64 0, ptr %82, align 8, !tbaa !71
  %83 = getelementptr inbounds %struct.xpvinvlist, ptr %79, i64 0, i32 5
  store i64 -1, ptr %83, align 8, !tbaa !71
  %84 = getelementptr inbounds %struct.sv, ptr %75, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !62
  %86 = or i32 %85, 134283264
  store i32 %86, ptr %84, align 4, !tbaa !62
  store ptr %75, ptr @PL_HasMultiCharFold, align 8, !tbaa !5
  %87 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %88 = getelementptr inbounds %struct.sv, ptr %87, i64 0, i32 2
  %89 = load i32, ptr %88, align 4, !tbaa !62
  %90 = and i32 %89, 268435456
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %26
  %93 = load ptr, ptr %87, align 8, !tbaa !63
  %94 = getelementptr inbounds %struct.xpv, ptr %93, i64 0, i32 3
  %95 = load i64, ptr %94, align 8, !tbaa !9
  %96 = icmp ult i64 %95, 25
  br i1 %96, label %97, label %100

97:                                               ; preds = %26, %92
  %98 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %87, i64 noundef 25) #21
  %99 = load ptr, ptr %87, align 8, !tbaa !63
  br label %100

100:                                              ; preds = %92, %97
  %101 = phi ptr [ %93, %92 ], [ %99, %97 ]
  %102 = getelementptr inbounds %struct.xpv, ptr %101, i64 0, i32 2
  store i64 0, ptr %102, align 8, !tbaa !72
  %103 = getelementptr inbounds %struct.xpvinvlist, ptr %101, i64 0, i32 5
  store i64 -1, ptr %103, align 8, !tbaa !71
  %104 = getelementptr inbounds %struct.xpvinvlist, ptr %101, i64 0, i32 4
  store i64 0, ptr %104, align 8, !tbaa !71
  store ptr %87, ptr @PL_InBitmap, align 8, !tbaa !5
  %105 = tail call ptr @Perl__add_range_to_invlist(ptr noundef nonnull %87, i64 noundef 0, i64 noundef 255)
  store ptr %105, ptr @PL_InBitmap, align 8, !tbaa !5
  br label %106

106:                                              ; preds = %100, %8
  %107 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 38
  store ptr null, ptr %107, align 8, !tbaa !74
  %108 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 39
  store i32 0, ptr %108, align 8, !tbaa !77
  %109 = icmp eq ptr %5, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  store i8 0, ptr %5, align 1, !tbaa !57
  br label %111

111:                                              ; preds = %110, %106
  %112 = icmp eq ptr %2, null
  br i1 %112, label %149, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %115 = load i16, ptr %114, align 8
  %116 = and i16 %115, 511
  switch i16 %116, label %149 [
    i16 158, label %121
    i16 0, label %117
  ]

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %119 = load i64, ptr %118, align 8, !tbaa !78
  %120 = icmp eq i64 %119, 158
  br i1 %120, label %121, label %149

121:                                              ; preds = %113, %117
  %122 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %123 = load ptr, ptr %122, align 8, !tbaa !5
  %124 = icmp eq ptr %123, null
  br i1 %124, label %149, label %125

125:                                              ; preds = %121, %138
  %126 = phi ptr [ %141, %138 ], [ %123, %121 ]
  %127 = phi i32 [ %139, %138 ], [ 0, %121 ]
  %128 = getelementptr inbounds %struct.op, ptr %126, i64 0, i32 4
  %129 = load i16, ptr %128, align 8
  %130 = and i16 %129, 511
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %132, label %138

132:                                              ; preds = %125
  %133 = getelementptr inbounds %struct.op, ptr %126, i64 0, i32 5
  %134 = load i8, ptr %133, align 2, !tbaa !80
  %135 = lshr i8 %134, 7
  %136 = zext i8 %135 to i32
  %137 = add nsw i32 %127, %136
  br label %138

138:                                              ; preds = %132, %125
  %139 = phi i32 [ %127, %125 ], [ %137, %132 ]
  %140 = getelementptr inbounds %struct.op, ptr %126, i64 0, i32 1
  %141 = load ptr, ptr %140, align 8, !tbaa !5
  %142 = icmp eq ptr %141, null
  br i1 %142, label %143, label %125, !llvm.loop !81

143:                                              ; preds = %138
  %144 = icmp eq i32 %139, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %143
  store i32 %139, ptr %108, align 8, !tbaa !77
  %146 = sext i32 %139 to i64
  %147 = shl nsw i64 %146, 5
  %148 = tail call ptr @Perl_safesysmalloc(i64 noundef %147) #21
  store ptr %148, ptr %107, align 8, !tbaa !74
  br label %149

149:                                              ; preds = %121, %143, %145, %113, %117, %111
  %150 = phi i1 [ true, %143 ], [ false, %145 ], [ true, %113 ], [ true, %117 ], [ true, %111 ], [ true, %121 ]
  %151 = icmp eq i32 %1, 0
  br i1 %151, label %152, label %206

152:                                              ; preds = %149
  %153 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %154 = load i16, ptr %153, align 8
  %155 = and i16 %154, 511
  %156 = icmp eq i16 %155, 5
  br i1 %156, label %173, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %159 = load ptr, ptr %158, align 8, !tbaa !5
  %160 = icmp eq ptr %159, null
  br i1 %160, label %173, label %161

161:                                              ; preds = %157, %161
  %162 = phi ptr [ %171, %161 ], [ %159, %157 ]
  %163 = phi i32 [ %169, %161 ], [ 0, %157 ]
  %164 = getelementptr inbounds %struct.op, ptr %162, i64 0, i32 4
  %165 = load i16, ptr %164, align 8
  %166 = and i16 %165, 511
  %167 = icmp eq i16 %166, 5
  %168 = zext i1 %167 to i32
  %169 = add nuw nsw i32 %163, %168
  %170 = getelementptr inbounds %struct.op, ptr %162, i64 0, i32 1
  %171 = load ptr, ptr %170, align 8, !tbaa !5
  %172 = icmp eq ptr %171, null
  br i1 %172, label %173, label %161, !llvm.loop !82

173:                                              ; preds = %161, %157, %152
  %174 = phi i32 [ 1, %152 ], [ 0, %157 ], [ %169, %161 ]
  %175 = sext i32 %174 to i64
  %176 = shl nsw i64 %175, 3
  %177 = tail call ptr @Perl_safesysmalloc(i64 noundef %176) #21
  tail call void @Perl_save_pushptr(ptr noundef %177, i32 noundef 10) #21
  %178 = load i16, ptr %153, align 8
  %179 = and i16 %178, 511
  %180 = icmp eq i16 %179, 5
  br i1 %180, label %181, label %184

181:                                              ; preds = %173
  %182 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 7
  %183 = load ptr, ptr %182, align 8, !tbaa !83
  store ptr %183, ptr %177, align 8, !tbaa !5
  br label %206

184:                                              ; preds = %173
  %185 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %186 = load ptr, ptr %185, align 8, !tbaa !5
  %187 = icmp eq ptr %186, null
  br i1 %187, label %206, label %188

188:                                              ; preds = %184, %201
  %189 = phi ptr [ %204, %201 ], [ %186, %184 ]
  %190 = phi i32 [ %202, %201 ], [ 0, %184 ]
  %191 = getelementptr inbounds %struct.op, ptr %189, i64 0, i32 4
  %192 = load i16, ptr %191, align 8
  %193 = and i16 %192, 511
  %194 = icmp eq i16 %193, 5
  br i1 %194, label %195, label %201

195:                                              ; preds = %188
  %196 = getelementptr inbounds %struct.svop, ptr %189, i64 0, i32 7
  %197 = load ptr, ptr %196, align 8, !tbaa !83
  %198 = add nsw i32 %190, 1
  %199 = sext i32 %190 to i64
  %200 = getelementptr inbounds ptr, ptr %177, i64 %199
  store ptr %197, ptr %200, align 8, !tbaa !5
  br label %201

201:                                              ; preds = %188, %195
  %202 = phi i32 [ %198, %195 ], [ %190, %188 ]
  %203 = getelementptr inbounds %struct.op, ptr %189, i64 0, i32 1
  %204 = load ptr, ptr %203, align 8, !tbaa !5
  %205 = icmp eq ptr %204, null
  br i1 %205, label %206, label %188, !llvm.loop !85

206:                                              ; preds = %201, %184, %181, %149
  %207 = phi ptr [ %0, %149 ], [ %177, %181 ], [ %177, %184 ], [ %177, %201 ]
  %208 = phi i32 [ %1, %149 ], [ %174, %181 ], [ %174, %184 ], [ %174, %201 ]
  br i1 %150, label %219, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %211 = load i16, ptr %210, align 8
  %212 = and i16 %211, 511
  %213 = icmp eq i16 %212, 5
  br i1 %213, label %219, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %216 = load ptr, ptr %215, align 8, !tbaa !86
  %217 = getelementptr inbounds %struct.op, ptr %216, i64 0, i32 1
  %218 = load ptr, ptr %217, align 8, !tbaa !88
  br label %219

219:                                              ; preds = %214, %209, %206
  %220 = phi ptr [ %218, %214 ], [ %2, %209 ], [ %2, %206 ]
  %221 = call fastcc ptr @S_concat_pat(ptr noundef nonnull %15, ptr noundef null, ptr noundef %207, i32 noundef %208, ptr noundef %220, ptr noundef nonnull %13, ptr noundef null)
  %222 = getelementptr inbounds %struct.sv, ptr %221, i64 0, i32 2
  %223 = load i32, ptr %222, align 4, !tbaa !62
  %224 = and i32 %223, 2048
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %219
  %227 = getelementptr inbounds %struct.sv, ptr %221, i64 0, i32 3
  %228 = load ptr, ptr %227, align 8, !tbaa !9
  %229 = getelementptr inbounds %struct.sv, ptr %228, i64 0, i32 2
  %230 = load i32, ptr %229, align 4, !tbaa !62
  br label %231

231:                                              ; preds = %226, %219
  %232 = phi i32 [ %230, %226 ], [ %223, %219 ]
  %233 = phi ptr [ %228, %226 ], [ %221, %219 ]
  %234 = and i32 %232, 255
  %235 = icmp eq i32 %234, 8
  br i1 %235, label %236, label %243

236:                                              ; preds = %231
  br i1 %109, label %238, label %237

237:                                              ; preds = %236
  store i8 1, ptr %5, align 1, !tbaa !57
  br label %238

238:                                              ; preds = %237, %236
  %239 = getelementptr inbounds %struct.sv, ptr %233, i64 0, i32 1
  %240 = load i32, ptr %239, align 8, !tbaa !22
  %241 = add i32 %240, 1
  store i32 %241, ptr %239, align 8, !tbaa !22
  %242 = load ptr, ptr %107, align 8, !tbaa !74
  tail call void @Perl_safesysfree(ptr noundef %242) #21
  br label %2498

243:                                              ; preds = %231
  %244 = and i32 %223, 2098176
  %245 = icmp eq i32 %244, 1024
  br i1 %245, label %246, label %252

246:                                              ; preds = %243
  %247 = load ptr, ptr %221, align 8, !tbaa !63
  %248 = getelementptr inbounds %struct.xpv, ptr %247, i64 0, i32 2
  %249 = load i64, ptr %248, align 8, !tbaa !72
  store i64 %249, ptr %9, align 8, !tbaa !71
  %250 = getelementptr inbounds %struct.sv, ptr %221, i64 0, i32 3
  %251 = load ptr, ptr %250, align 8, !tbaa !9
  br label %254

252:                                              ; preds = %243
  %253 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %221, ptr noundef nonnull %9, i32 noundef 0) #21
  br label %254

254:                                              ; preds = %252, %246
  %255 = phi ptr [ %251, %246 ], [ %253, %252 ]
  %256 = getelementptr inbounds %struct.regexp_engine, ptr %3, i64 0, i32 11
  %257 = load ptr, ptr %256, align 8, !tbaa !89
  %258 = icmp eq ptr %257, null
  br i1 %258, label %259, label %306

259:                                              ; preds = %254
  %260 = load i32, ptr %222, align 4, !tbaa !62
  %261 = and i32 %260, 536870912
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %259
  %264 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %265 = getelementptr inbounds %struct.cop, ptr %264, i64 0, i32 10
  %266 = load i32, ptr %265, align 8, !tbaa !90
  %267 = and i32 %266, 8
  %268 = and i32 %260, 2097152
  %269 = or i32 %267, %268
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %274, label %291

271:                                              ; preds = %259
  %272 = and i32 %260, 2097152
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %291

274:                                              ; preds = %263, %271
  %275 = and i32 %260, 2048
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %301, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %struct.sv, ptr %221, i64 0, i32 3
  %279 = load ptr, ptr %278, align 8, !tbaa !9
  %280 = getelementptr inbounds %struct.sv, ptr %279, i64 0, i32 2
  %281 = load i32, ptr %280, align 4, !tbaa !62
  %282 = and i32 %281, 1048576
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %301, label %284

284:                                              ; preds = %277
  %285 = load ptr, ptr %279, align 8, !tbaa !63
  %286 = load ptr, ptr %285, align 8, !tbaa !92
  %287 = getelementptr inbounds %struct.hv, ptr %286, i64 0, i32 2
  %288 = load i32, ptr %287, align 4, !tbaa !94
  %289 = and i32 %288, 268435456
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %301, label %291

291:                                              ; preds = %284, %271, %263
  %292 = load i64, ptr %9, align 8, !tbaa !71
  %293 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %294 = getelementptr inbounds %struct.cop, ptr %293, i64 0, i32 10
  %295 = load i32, ptr %294, align 8, !tbaa !90
  %296 = and i32 %295, 8
  %297 = icmp eq i32 %296, 0
  %298 = or i32 %261, 524288
  %299 = select i1 %297, i32 %298, i32 524288
  %300 = call ptr @Perl_newSVpvn_flags(ptr noundef %255, i64 noundef %292, i32 noundef %299) #21
  br label %301

301:                                              ; preds = %291, %284, %277, %274
  %302 = phi ptr [ %300, %291 ], [ %221, %284 ], [ %221, %277 ], [ %221, %274 ]
  %303 = load ptr, ptr %107, align 8, !tbaa !74
  call void @Perl_safesysfree(ptr noundef %303) #21
  %304 = load ptr, ptr %3, align 8, !tbaa !96
  %305 = call ptr %304(ptr noundef %302, i32 noundef %6) #21
  br label %2498

306:                                              ; preds = %254
  %307 = load i64, ptr %9, align 8, !tbaa !71
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %318, label %309

309:                                              ; preds = %306
  %310 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %311 = getelementptr inbounds %struct.cop, ptr %310, i64 0, i32 10
  %312 = load i32, ptr %311, align 8, !tbaa !90
  %313 = and i32 %312, 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %309
  %316 = load i32, ptr %222, align 4, !tbaa !62
  %317 = and i32 %316, 536870912
  br label %318

318:                                              ; preds = %306, %309, %315
  %319 = phi i32 [ %317, %315 ], [ 0, %309 ], [ 0, %306 ]
  %320 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 26
  store i32 %319, ptr %320, align 4, !tbaa !97
  %321 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 25
  store i32 %319, ptr %321, align 8, !tbaa !98
  %322 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 27
  store i32 0, ptr %322, align 8, !tbaa !99
  %323 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 34
  store i32 0, ptr %323, align 8, !tbaa !100
  %324 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 35
  store i32 0, ptr %324, align 4, !tbaa !101
  %325 = lshr i32 %7, 10
  %326 = and i32 %325, 1
  %327 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 45
  store i32 %326, ptr %327, align 4, !tbaa !102
  %328 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 46
  store ptr null, ptr %328, align 8, !tbaa !103
  %329 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 42
  %330 = icmp sgt i32 %7, -1
  %331 = icmp ne ptr %4, null
  %332 = getelementptr inbounds %struct.p5rx, ptr %4, i64 0, i32 2
  %333 = getelementptr i8, ptr %4, i64 16
  %334 = and i32 %6, 4095
  %335 = and i32 %6, 4
  %336 = icmp eq i32 %335, 0
  %337 = and i32 %6, 896
  %338 = icmp eq i32 %337, 0
  %339 = and i32 %6, -897
  %340 = or i32 %339, 256
  %341 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 2
  %342 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 1
  %343 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 15
  %344 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 16
  %345 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 41
  %346 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 33
  %347 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 21
  %348 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 20
  %349 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 36
  %350 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 37
  %351 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 8
  %352 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 6
  %353 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 7
  %354 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 14
  %355 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 18
  %356 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 19
  %357 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 17
  %358 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 13
  %359 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 12
  %360 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 9
  %361 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 22
  %362 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 23
  %363 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 28
  %364 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 29
  %365 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 31
  %366 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 32
  %367 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 30
  %368 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 40
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %329, i8 0, i64 20, i1 false)
  br label %369

369:                                              ; preds = %1029, %318
  %370 = phi i32 [ 1, %1029 ], [ %319, %318 ]
  %371 = phi ptr [ %974, %1029 ], [ %255, %318 ]
  %372 = phi i8 [ %429, %1029 ], [ 0, %318 ]
  %373 = phi ptr [ %962, %1029 ], [ null, %318 ]
  br label %374

374:                                              ; preds = %369, %941
  %375 = phi i32 [ 1, %941 ], [ %370, %369 ]
  %376 = phi ptr [ %886, %941 ], [ %371, %369 ]
  %377 = phi i8 [ %429, %941 ], [ %372, %369 ]
  br i1 %330, label %378, label %385

378:                                              ; preds = %374
  %379 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %380 = icmp eq ptr %379, @PL_compiling
  br i1 %380, label %381, label %428

381:                                              ; preds = %378
  %382 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !90
  %383 = and i32 %382, 2097152
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %428, label %385

385:                                              ; preds = %381, %374
  %386 = load i64, ptr %9, align 8, !tbaa !71
  %387 = load ptr, ptr %107, align 8
  %388 = load i32, ptr %108, align 8
  %389 = icmp eq i64 %386, 0
  br i1 %389, label %428, label %390

390:                                              ; preds = %385, %423
  %391 = phi i64 [ %426, %423 ], [ 0, %385 ]
  %392 = phi i32 [ %424, %423 ], [ 0, %385 ]
  %393 = icmp slt i32 %392, %388
  br i1 %393, label %394, label %403

394:                                              ; preds = %390
  %395 = sext i32 %392 to i64
  %396 = getelementptr inbounds %struct.reg_code_block, ptr %387, i64 %395
  %397 = load i64, ptr %396, align 8, !tbaa !104
  %398 = icmp eq i64 %391, %397
  br i1 %398, label %399, label %403

399:                                              ; preds = %394
  %400 = getelementptr inbounds %struct.reg_code_block, ptr %387, i64 %395, i32 1
  %401 = load i64, ptr %400, align 8, !tbaa !105
  %402 = add nsw i32 %392, 1
  br label %423

403:                                              ; preds = %394, %390
  %404 = getelementptr inbounds i8, ptr %376, i64 %391
  %405 = load i8, ptr %404, align 1, !tbaa !9
  %406 = icmp eq i8 %405, 40
  br i1 %406, label %407, label %423

407:                                              ; preds = %403
  %408 = add i64 %391, 2
  %409 = icmp ugt i64 %408, %386
  br i1 %409, label %423, label %410

410:                                              ; preds = %407
  %411 = add nuw i64 %391, 1
  %412 = getelementptr inbounds i8, ptr %376, i64 %411
  %413 = load i8, ptr %412, align 1, !tbaa !9
  %414 = icmp eq i8 %413, 63
  br i1 %414, label %415, label %423

415:                                              ; preds = %410
  %416 = getelementptr inbounds i8, ptr %376, i64 %408
  %417 = load i8, ptr %416, align 1, !tbaa !9
  switch i8 %417, label %423 [
    i8 123, label %428
    i8 63, label %418
  ]

418:                                              ; preds = %415
  %419 = add i64 %391, 3
  %420 = getelementptr inbounds i8, ptr %376, i64 %419
  %421 = load i8, ptr %420, align 1, !tbaa !9
  %422 = icmp eq i8 %421, 123
  br i1 %422, label %428, label %423

423:                                              ; preds = %418, %415, %410, %407, %403, %399
  %424 = phi i32 [ %402, %399 ], [ %392, %418 ], [ %392, %410 ], [ %392, %407 ], [ %392, %403 ], [ %392, %415 ]
  %425 = phi i64 [ %401, %399 ], [ %391, %418 ], [ %391, %410 ], [ %391, %407 ], [ %391, %403 ], [ %391, %415 ]
  %426 = add i64 %425, 1
  %427 = icmp ult i64 %426, %386
  br i1 %427, label %390, label %428, !llvm.loop !106

428:                                              ; preds = %423, %418, %415, %385, %381, %378
  %429 = phi i8 [ %377, %381 ], [ %377, %378 ], [ 0, %385 ], [ 1, %415 ], [ 1, %418 ], [ 0, %423 ]
  %430 = load i8, ptr %13, align 1, !range !59
  %431 = icmp eq i8 %430, 0
  %432 = select i1 %331, i1 %431, i1 false
  br i1 %432, label %433, label %470

433:                                              ; preds = %428
  %434 = load i32, ptr %332, align 4, !tbaa !10
  %435 = icmp eq i32 %375, 0
  %436 = and i32 %434, 536870912
  %437 = icmp ne i32 %436, 0
  %438 = xor i1 %435, %437
  br i1 %438, label %439, label %470

439:                                              ; preds = %433
  %440 = load ptr, ptr %333, align 8, !tbaa !9
  %441 = getelementptr inbounds %struct.regexp, ptr %440, i64 0, i32 24
  %442 = load i16, ptr %441, align 8
  %443 = lshr i16 %442, 4
  %444 = and i16 %443, 511
  %445 = zext i16 %444 to i32
  %446 = icmp eq i32 %334, %445
  br i1 %446, label %447, label %470

447:                                              ; preds = %439
  %448 = getelementptr inbounds %struct.regexp, ptr %440, i64 0, i32 3
  %449 = load ptr, ptr %448, align 8, !tbaa !9
  %450 = icmp eq ptr %449, null
  br i1 %450, label %470, label %451

451:                                              ; preds = %447
  %452 = load ptr, ptr %4, align 8, !tbaa !107
  %453 = getelementptr inbounds %struct.xpv, ptr %452, i64 0, i32 2
  %454 = load i64, ptr %453, align 8, !tbaa !72
  %455 = and i16 %442, 15
  %456 = zext i16 %455 to i64
  %457 = xor i64 %456, -1
  %458 = add i64 %454, %457
  %459 = load i64, ptr %9, align 8, !tbaa !71
  %460 = icmp eq i64 %458, %459
  br i1 %460, label %461, label %470

461:                                              ; preds = %451
  %462 = getelementptr inbounds i8, ptr %449, i64 %456
  %463 = call i32 @bcmp(ptr nonnull %462, ptr %376, i64 %458)
  %464 = icmp eq i32 %463, 0
  %465 = and i8 %429, 1
  %466 = icmp eq i8 %465, 0
  %467 = select i1 %464, i1 %466, i1 false
  br i1 %467, label %468, label %470

468:                                              ; preds = %461
  %469 = load ptr, ptr %107, align 8, !tbaa !74
  call void @Perl_safesysfree(ptr noundef %469) #21
  br label %2498

470:                                              ; preds = %461, %451, %447, %439, %433, %428
  br i1 %336, label %472, label %471

471:                                              ; preds = %470
  store i32 1, ptr %324, align 4, !tbaa !101
  br label %472

472:                                              ; preds = %471, %470
  %473 = icmp ne i32 %375, 0
  %474 = and i1 %338, %473
  %475 = select i1 %474, i32 %340, i32 %6
  store ptr %376, ptr %341, align 8, !tbaa !108
  store i32 %475, ptr %15, align 8, !tbaa !109
  store i32 %7, ptr %342, align 4, !tbaa !110
  %476 = and i8 %429, 1
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %945, label %478

478:                                              ; preds = %472
  %479 = load i8, ptr @PL_tainting, align 1, !tbaa !57, !range !59, !noundef !60
  %480 = icmp eq i8 %479, 0
  %481 = load i8, ptr @PL_tainted, align 1, !range !59
  %482 = icmp eq i8 %481, 0
  %483 = select i1 %480, i1 true, i1 %482
  br i1 %483, label %485, label %484

484:                                              ; preds = %478
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.180) #21
  br label %485

485:                                              ; preds = %484, %478
  %486 = load i64, ptr %9, align 8, !tbaa !71
  %487 = load ptr, ptr %328, align 8, !tbaa !103
  %488 = icmp eq ptr %487, null
  br i1 %488, label %490, label %489

489:                                              ; preds = %485
  store ptr null, ptr %328, align 8, !tbaa !103
  br label %783

490:                                              ; preds = %485
  %491 = trunc i64 %486 to i32
  %492 = add i32 %491, 6
  %493 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %494 = icmp eq i64 %486, 0
  br i1 %494, label %552, label %495

495:                                              ; preds = %490
  %496 = and i64 %486, 3
  %497 = icmp ult i64 %486, 4
  br i1 %497, label %534, label %498

498:                                              ; preds = %495
  %499 = and i64 %486, -4
  br label %500

500:                                              ; preds = %529, %498
  %501 = phi i64 [ 0, %498 ], [ %531, %529 ]
  %502 = phi i32 [ %492, %498 ], [ %530, %529 ]
  %503 = phi i64 [ 0, %498 ], [ %532, %529 ]
  %504 = getelementptr inbounds i8, ptr %376, i64 %501
  %505 = load i8, ptr %504, align 1, !tbaa !9
  switch i8 %505, label %508 [
    i8 39, label %506
    i8 92, label %506
  ]

506:                                              ; preds = %500, %500
  %507 = add nsw i32 %502, 1
  br label %508

508:                                              ; preds = %506, %500
  %509 = phi i32 [ %507, %506 ], [ %502, %500 ]
  %510 = or i64 %501, 1
  %511 = getelementptr inbounds i8, ptr %376, i64 %510
  %512 = load i8, ptr %511, align 1, !tbaa !9
  switch i8 %512, label %515 [
    i8 39, label %513
    i8 92, label %513
  ]

513:                                              ; preds = %508, %508
  %514 = add nsw i32 %509, 1
  br label %515

515:                                              ; preds = %513, %508
  %516 = phi i32 [ %514, %513 ], [ %509, %508 ]
  %517 = or i64 %501, 2
  %518 = getelementptr inbounds i8, ptr %376, i64 %517
  %519 = load i8, ptr %518, align 1, !tbaa !9
  switch i8 %519, label %522 [
    i8 39, label %520
    i8 92, label %520
  ]

520:                                              ; preds = %515, %515
  %521 = add nsw i32 %516, 1
  br label %522

522:                                              ; preds = %520, %515
  %523 = phi i32 [ %521, %520 ], [ %516, %515 ]
  %524 = or i64 %501, 3
  %525 = getelementptr inbounds i8, ptr %376, i64 %524
  %526 = load i8, ptr %525, align 1, !tbaa !9
  switch i8 %526, label %529 [
    i8 39, label %527
    i8 92, label %527
  ]

527:                                              ; preds = %522, %522
  %528 = add nsw i32 %523, 1
  br label %529

529:                                              ; preds = %527, %522
  %530 = phi i32 [ %528, %527 ], [ %523, %522 ]
  %531 = add nuw i64 %501, 4
  %532 = add i64 %503, 4
  %533 = icmp eq i64 %532, %499
  br i1 %533, label %534, label %500, !llvm.loop !111

534:                                              ; preds = %529, %495
  %535 = phi i32 [ undef, %495 ], [ %530, %529 ]
  %536 = phi i64 [ 0, %495 ], [ %531, %529 ]
  %537 = phi i32 [ %492, %495 ], [ %530, %529 ]
  %538 = icmp eq i64 %496, 0
  br i1 %538, label %552, label %539

539:                                              ; preds = %534, %547
  %540 = phi i64 [ %549, %547 ], [ %536, %534 ]
  %541 = phi i32 [ %548, %547 ], [ %537, %534 ]
  %542 = phi i64 [ %550, %547 ], [ 0, %534 ]
  %543 = getelementptr inbounds i8, ptr %376, i64 %540
  %544 = load i8, ptr %543, align 1, !tbaa !9
  switch i8 %544, label %547 [
    i8 39, label %545
    i8 92, label %545
  ]

545:                                              ; preds = %539, %539
  %546 = add nsw i32 %541, 1
  br label %547

547:                                              ; preds = %545, %539
  %548 = phi i32 [ %546, %545 ], [ %541, %539 ]
  %549 = add nuw i64 %540, 1
  %550 = add i64 %542, 1
  %551 = icmp eq i64 %550, %496
  br i1 %551, label %552, label %539, !llvm.loop !112

552:                                              ; preds = %534, %547, %490
  %553 = phi i32 [ %492, %490 ], [ %535, %534 ], [ %548, %547 ]
  %554 = sext i32 %553 to i64
  %555 = call ptr @Perl_safesysmalloc(i64 noundef %554) #21
  %556 = getelementptr inbounds i8, ptr %555, i64 1
  store i8 113, ptr %555, align 1, !tbaa !9
  %557 = getelementptr inbounds i8, ptr %555, i64 2
  store i8 114, ptr %556, align 1, !tbaa !9
  %558 = getelementptr inbounds i8, ptr %555, i64 3
  store i8 39, ptr %557, align 1, !tbaa !9
  br i1 %494, label %605, label %559

559:                                              ; preds = %552, %599
  %560 = phi i32 [ %602, %599 ], [ 0, %552 ]
  %561 = phi i64 [ %603, %599 ], [ 0, %552 ]
  %562 = phi ptr [ %600, %599 ], [ %558, %552 ]
  %563 = load i32, ptr %108, align 8, !tbaa !77
  %564 = icmp slt i32 %560, %563
  br i1 %564, label %565, label %589

565:                                              ; preds = %559
  %566 = load ptr, ptr %107, align 8, !tbaa !74
  %567 = sext i32 %560 to i64
  %568 = getelementptr inbounds %struct.reg_code_block, ptr %566, i64 %567
  %569 = load i64, ptr %568, align 8, !tbaa !104
  %570 = icmp eq i64 %561, %569
  br i1 %570, label %571, label %589

571:                                              ; preds = %565
  %572 = getelementptr inbounds %struct.reg_code_block, ptr %566, i64 %567, i32 1
  %573 = load i64, ptr %572, align 8, !tbaa !105
  %574 = icmp ugt i64 %561, %573
  br i1 %574, label %584, label %575

575:                                              ; preds = %571, %575
  %576 = phi i64 [ %579, %575 ], [ %561, %571 ]
  %577 = phi ptr [ %578, %575 ], [ %562, %571 ]
  %578 = getelementptr inbounds i8, ptr %577, i64 1
  store i8 95, ptr %577, align 1, !tbaa !9
  %579 = add i64 %576, 1
  %580 = load ptr, ptr %107, align 8, !tbaa !74
  %581 = getelementptr inbounds %struct.reg_code_block, ptr %580, i64 %567, i32 1
  %582 = load i64, ptr %581, align 8, !tbaa !105
  %583 = icmp ugt i64 %579, %582
  br i1 %583, label %584, label %575, !llvm.loop !114

584:                                              ; preds = %575, %571
  %585 = phi ptr [ %562, %571 ], [ %578, %575 ]
  %586 = phi i64 [ %561, %571 ], [ %579, %575 ]
  %587 = add i64 %586, -1
  %588 = add nsw i32 %560, 1
  br label %599

589:                                              ; preds = %565, %559
  %590 = getelementptr inbounds i8, ptr %376, i64 %561
  %591 = load i8, ptr %590, align 1, !tbaa !9
  switch i8 %591, label %595 [
    i8 39, label %592
    i8 92, label %592
  ]

592:                                              ; preds = %589, %589
  %593 = getelementptr inbounds i8, ptr %562, i64 1
  store i8 92, ptr %562, align 1, !tbaa !9
  %594 = load i8, ptr %590, align 1, !tbaa !9
  br label %595

595:                                              ; preds = %592, %589
  %596 = phi i8 [ %594, %592 ], [ %591, %589 ]
  %597 = phi ptr [ %593, %592 ], [ %562, %589 ]
  %598 = getelementptr inbounds i8, ptr %597, i64 1
  store i8 %596, ptr %597, align 1, !tbaa !9
  br label %599

599:                                              ; preds = %595, %584
  %600 = phi ptr [ %585, %584 ], [ %598, %595 ]
  %601 = phi i64 [ %587, %584 ], [ %561, %595 ]
  %602 = phi i32 [ %588, %584 ], [ %560, %595 ]
  %603 = add nuw i64 %601, 1
  %604 = icmp ult i64 %603, %486
  br i1 %604, label %559, label %605, !llvm.loop !115

605:                                              ; preds = %599, %552
  %606 = phi ptr [ %558, %552 ], [ %600, %599 ]
  %607 = getelementptr inbounds i8, ptr %606, i64 1
  store i8 39, ptr %606, align 1, !tbaa !9
  %608 = load i32, ptr %342, align 4, !tbaa !110
  %609 = and i32 %608, 8
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %613, label %611

611:                                              ; preds = %605
  %612 = getelementptr inbounds i8, ptr %606, i64 2
  store i8 120, ptr %607, align 1, !tbaa !9
  br label %613

613:                                              ; preds = %611, %605
  %614 = phi ptr [ %612, %611 ], [ %607, %605 ]
  %615 = getelementptr inbounds i8, ptr %614, i64 1
  store i8 0, ptr %614, align 1, !tbaa !9
  %616 = ptrtoint ptr %615 to i64
  %617 = ptrtoint ptr %555 to i64
  %618 = xor i64 %617, -1
  %619 = add i64 %616, %618
  %620 = load i32, ptr %321, align 8, !tbaa !98
  %621 = icmp eq i32 %620, 0
  %622 = select i1 %621, i32 0, i32 536870912
  %623 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %555, i64 noundef %619, i32 noundef %622) #21
  call void @Perl_safesysfree(ptr noundef nonnull %555) #21
  call void @Perl_push_scope() #21
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #21
  %624 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !71
  store i64 %624, ptr @PL_tmps_floor, align 8, !tbaa !71
  call void @Perl_save_re_context()
  %625 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %626 = getelementptr inbounds %struct.stackinfo, ptr %625, i64 0, i32 3
  %627 = load ptr, ptr %626, align 8, !tbaa !116
  %628 = icmp eq ptr %627, null
  br i1 %628, label %629, label %634

629:                                              ; preds = %613
  %630 = call ptr @Perl_new_stackinfo(i32 noundef 32, i32 noundef 22) #21
  %631 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %632 = getelementptr inbounds %struct.stackinfo, ptr %630, i64 0, i32 2
  store ptr %631, ptr %632, align 8, !tbaa !118
  %633 = getelementptr inbounds %struct.stackinfo, ptr %631, i64 0, i32 3
  store ptr %630, ptr %633, align 8, !tbaa !116
  br label %634

634:                                              ; preds = %629, %613
  %635 = phi ptr [ %627, %613 ], [ %630, %629 ]
  %636 = getelementptr inbounds %struct.stackinfo, ptr %635, i64 0, i32 6
  store i32 9, ptr %636, align 8, !tbaa !119
  %637 = getelementptr inbounds %struct.stackinfo, ptr %635, i64 0, i32 4
  store i32 -1, ptr %637, align 8, !tbaa !120
  %638 = load ptr, ptr %635, align 8, !tbaa !121
  %639 = load ptr, ptr %638, align 8, !tbaa !122
  %640 = getelementptr inbounds %struct.xpvav, ptr %639, i64 0, i32 2
  store i64 0, ptr %640, align 8, !tbaa !124
  %641 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %642 = ptrtoint ptr %493 to i64
  %643 = ptrtoint ptr %641 to i64
  %644 = sub i64 %642, %643
  %645 = ashr exact i64 %644, 3
  %646 = load ptr, ptr @PL_curstack, align 8, !tbaa !5
  %647 = load ptr, ptr %646, align 8, !tbaa !122
  %648 = getelementptr inbounds %struct.xpvav, ptr %647, i64 0, i32 2
  store i64 %645, ptr %648, align 8, !tbaa !124
  %649 = getelementptr inbounds %struct.av, ptr %638, i64 0, i32 3
  %650 = load ptr, ptr %649, align 8, !tbaa !9
  store ptr %650, ptr @PL_stack_base, align 8, !tbaa !5
  %651 = load ptr, ptr %635, align 8, !tbaa !121
  %652 = load ptr, ptr %651, align 8, !tbaa !122
  %653 = getelementptr inbounds %struct.xpvav, ptr %652, i64 0, i32 3
  %654 = load i64, ptr %653, align 8, !tbaa !126
  %655 = getelementptr inbounds ptr, ptr %650, i64 %654
  store ptr %655, ptr @PL_stack_max, align 8, !tbaa !5
  %656 = load ptr, ptr %635, align 8, !tbaa !121
  %657 = load ptr, ptr %656, align 8, !tbaa !122
  %658 = getelementptr inbounds %struct.xpvav, ptr %657, i64 0, i32 2
  %659 = load i64, ptr %658, align 8, !tbaa !124
  %660 = getelementptr inbounds ptr, ptr %650, i64 %659
  store ptr %660, ptr @PL_stack_sp, align 8, !tbaa !5
  %661 = load ptr, ptr %635, align 8, !tbaa !121
  store ptr %661, ptr @PL_curstack, align 8, !tbaa !5
  store ptr %635, ptr @PL_curstackinfo, align 8, !tbaa !5
  %662 = call i32 @Perl_eval_sv(ptr noundef %623, i32 noundef 2050) #21
  %663 = getelementptr inbounds %struct.sv, ptr %623, i64 0, i32 1
  %664 = load i32, ptr %663, align 8, !tbaa !22
  %665 = icmp ugt i32 %664, 1
  br i1 %665, label %666, label %668

666:                                              ; preds = %634
  %667 = add i32 %664, -1
  store i32 %667, ptr %663, align 8, !tbaa !22
  br label %669

668:                                              ; preds = %634
  call void @Perl_sv_free2(ptr noundef nonnull %623, i32 noundef %664) #21
  br label %669

669:                                              ; preds = %668, %666
  %670 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %671 = getelementptr inbounds ptr, ptr %670, i64 -1
  %672 = load ptr, ptr %670, align 8, !tbaa !5
  store ptr %671, ptr @PL_stack_sp, align 8, !tbaa !5
  %673 = load ptr, ptr @PL_errgv, align 8, !tbaa !5
  %674 = getelementptr inbounds %struct.gv, ptr %673, i64 0, i32 3
  %675 = load ptr, ptr %674, align 8, !tbaa !9
  %676 = load ptr, ptr %675, align 8, !tbaa !5
  %677 = icmp eq ptr %676, null
  br i1 %677, label %678, label %683

678:                                              ; preds = %669
  %679 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %673, i32 noundef 0) #21
  %680 = getelementptr inbounds %struct.gv, ptr %679, i64 0, i32 3
  %681 = load ptr, ptr %680, align 8, !tbaa !9
  %682 = load ptr, ptr %681, align 8, !tbaa !5
  br label %683

683:                                              ; preds = %678, %669
  %684 = phi ptr [ %682, %678 ], [ %676, %669 ]
  %685 = getelementptr inbounds %struct.sv, ptr %684, i64 0, i32 2
  %686 = load i32, ptr %685, align 4, !tbaa !62
  %687 = and i32 %686, 2097152
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %691, label %689

689:                                              ; preds = %683
  %690 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %684, i32 noundef 2) #21
  br i1 %690, label %738, label %740

691:                                              ; preds = %683
  %692 = and i32 %686, 65280
  %693 = icmp ne i32 %692, 0
  %694 = and i32 %686, 255
  %695 = icmp eq i32 %694, 8
  %696 = or i1 %693, %695
  %697 = and i32 %686, 16826623
  %698 = icmp eq i32 %697, 16777226
  %699 = or i1 %698, %696
  br i1 %699, label %700, label %740

700:                                              ; preds = %691
  %701 = and i32 %686, 1024
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %717, label %703

703:                                              ; preds = %700
  %704 = load ptr, ptr %684, align 8, !tbaa !63
  %705 = icmp eq ptr %704, null
  br i1 %705, label %740, label %706

706:                                              ; preds = %703
  %707 = getelementptr inbounds %struct.xpv, ptr %704, i64 0, i32 2
  %708 = load i64, ptr %707, align 8, !tbaa !72
  %709 = icmp ugt i64 %708, 1
  br i1 %709, label %738, label %710

710:                                              ; preds = %706
  %711 = icmp eq i64 %708, 0
  br i1 %711, label %740, label %712

712:                                              ; preds = %710
  %713 = getelementptr inbounds %struct.sv, ptr %684, i64 0, i32 3
  %714 = load ptr, ptr %713, align 8, !tbaa !9
  %715 = load i8, ptr %714, align 1, !tbaa !9
  %716 = icmp eq i8 %715, 48
  br i1 %716, label %740, label %738

717:                                              ; preds = %700
  %718 = and i32 %686, 768
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %736, label %720

720:                                              ; preds = %717
  %721 = and i32 %686, 256
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %728, label %723

723:                                              ; preds = %720
  %724 = load ptr, ptr %684, align 8, !tbaa !63
  %725 = getelementptr inbounds %struct.xpviv, ptr %724, i64 0, i32 4
  %726 = load i64, ptr %725, align 8, !tbaa !9
  %727 = icmp eq i64 %726, 0
  br i1 %727, label %728, label %738

728:                                              ; preds = %723, %720
  %729 = and i32 %686, 512
  %730 = icmp eq i32 %729, 0
  br i1 %730, label %740, label %731

731:                                              ; preds = %728
  %732 = load ptr, ptr %684, align 8, !tbaa !63
  %733 = getelementptr inbounds %struct.xpvnv, ptr %732, i64 0, i32 5
  %734 = load double, ptr %733, align 8, !tbaa !9
  %735 = fcmp une double %734, 0.000000e+00
  br i1 %735, label %738, label %740

736:                                              ; preds = %717
  %737 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %684, i32 noundef 0) #21
  br i1 %737, label %738, label %740

738:                                              ; preds = %736, %731, %723, %712, %706, %689
  %739 = load ptr, ptr %107, align 8, !tbaa !74
  call void @Perl_safesysfree(ptr noundef %739) #21
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.208, ptr noundef nonnull %684) #21
  br label %740

740:                                              ; preds = %738, %736, %731, %728, %712, %710, %703, %691, %689
  %741 = getelementptr inbounds %struct.sv, ptr %672, i64 0, i32 3
  %742 = load ptr, ptr %741, align 8, !tbaa !9
  %743 = icmp eq ptr %742, null
  br i1 %743, label %748, label %744

744:                                              ; preds = %740
  %745 = getelementptr inbounds %struct.sv, ptr %742, i64 0, i32 1
  %746 = load i32, ptr %745, align 8, !tbaa !22
  %747 = add i32 %746, 1
  store i32 %747, ptr %745, align 8, !tbaa !22
  br label %748

748:                                              ; preds = %744, %740
  %749 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %750 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %751 = getelementptr inbounds %struct.stackinfo, ptr %750, i64 0, i32 2
  %752 = load ptr, ptr %751, align 8, !tbaa !118
  %753 = icmp eq ptr %752, null
  br i1 %753, label %754, label %755

754:                                              ; preds = %748
  call void @Perl_croak_popstack() #21
  br label %755

755:                                              ; preds = %754, %748
  %756 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %757 = ptrtoint ptr %749 to i64
  %758 = ptrtoint ptr %756 to i64
  %759 = sub i64 %757, %758
  %760 = ashr exact i64 %759, 3
  %761 = load ptr, ptr @PL_curstack, align 8, !tbaa !5
  %762 = load ptr, ptr %761, align 8, !tbaa !122
  %763 = getelementptr inbounds %struct.xpvav, ptr %762, i64 0, i32 2
  store i64 %760, ptr %763, align 8, !tbaa !124
  %764 = load ptr, ptr %752, align 8, !tbaa !121
  %765 = getelementptr inbounds %struct.av, ptr %764, i64 0, i32 3
  %766 = load ptr, ptr %765, align 8, !tbaa !9
  store ptr %766, ptr @PL_stack_base, align 8, !tbaa !5
  %767 = load ptr, ptr %752, align 8, !tbaa !121
  %768 = load ptr, ptr %767, align 8, !tbaa !122
  %769 = getelementptr inbounds %struct.xpvav, ptr %768, i64 0, i32 3
  %770 = load i64, ptr %769, align 8, !tbaa !126
  %771 = getelementptr inbounds ptr, ptr %766, i64 %770
  store ptr %771, ptr @PL_stack_max, align 8, !tbaa !5
  %772 = load ptr, ptr %752, align 8, !tbaa !121
  %773 = load ptr, ptr %772, align 8, !tbaa !122
  %774 = getelementptr inbounds %struct.xpvav, ptr %773, i64 0, i32 2
  %775 = load i64, ptr %774, align 8, !tbaa !124
  %776 = getelementptr inbounds ptr, ptr %766, i64 %775
  store ptr %776, ptr @PL_stack_sp, align 8, !tbaa !5
  %777 = load ptr, ptr %752, align 8, !tbaa !121
  store ptr %777, ptr @PL_curstack, align 8, !tbaa !5
  store ptr %752, ptr @PL_curstackinfo, align 8, !tbaa !5
  %778 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !71
  %779 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !71
  %780 = icmp sgt i64 %778, %779
  br i1 %780, label %781, label %782

781:                                              ; preds = %755
  call void @Perl_free_tmps() #21
  br label %782

782:                                              ; preds = %781, %755
  call void @Perl_pop_scope() #21
  br label %783

783:                                              ; preds = %782, %489
  %784 = phi ptr [ %487, %489 ], [ %742, %782 ]
  %785 = freeze ptr %784
  %786 = load i32, ptr %321, align 8, !tbaa !98
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %788, label %793

788:                                              ; preds = %783
  %789 = getelementptr inbounds %struct.sv, ptr %785, i64 0, i32 2
  %790 = load i32, ptr %789, align 4, !tbaa !62
  %791 = and i32 %790, 536870912
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %793, label %881

793:                                              ; preds = %788, %783
  %794 = getelementptr i8, ptr %785, i64 16
  %795 = load ptr, ptr %794, align 8, !tbaa !9
  %796 = getelementptr inbounds %struct.regexp, ptr %795, i64 0, i32 14
  %797 = load ptr, ptr %796, align 8, !tbaa !16
  %798 = getelementptr inbounds %struct.regexp_internal, ptr %797, i64 0, i32 5
  %799 = load i32, ptr %798, align 8, !tbaa !19
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %801, label %808

801:                                              ; preds = %793
  %802 = getelementptr inbounds %struct.sv, ptr %785, i64 0, i32 1
  %803 = load i32, ptr %802, align 8, !tbaa !22
  %804 = icmp ugt i32 %803, 1
  br i1 %804, label %805, label %807

805:                                              ; preds = %801
  %806 = add i32 %803, -1
  store i32 %806, ptr %802, align 8, !tbaa !22
  br label %945

807:                                              ; preds = %801
  call void @Perl_sv_free2(ptr noundef nonnull %785, i32 noundef %803) #21
  br label %945

808:                                              ; preds = %793
  %809 = load i32, ptr %108, align 8, !tbaa !77
  %810 = add nsw i32 %809, %799
  %811 = sext i32 %810 to i64
  %812 = shl nsw i64 %811, 5
  %813 = call ptr @Perl_safesysmalloc(i64 noundef %812) #21
  %814 = load i32, ptr %108, align 8, !tbaa !77
  %815 = getelementptr inbounds %struct.regexp_internal, ptr %797, i64 0, i32 4
  %816 = getelementptr inbounds %struct.sv, ptr %785, i64 0, i32 1
  %817 = load ptr, ptr %107, align 8
  br label %818

818:                                              ; preds = %867, %808
  %819 = phi ptr [ %872, %867 ], [ %813, %808 ]
  %820 = phi i32 [ %869, %867 ], [ 0, %808 ]
  %821 = phi i32 [ %868, %867 ], [ 0, %808 ]
  %822 = icmp slt i32 %820, %814
  br i1 %822, label %826, label %823

823:                                              ; preds = %818
  %824 = load i32, ptr %798, align 8, !tbaa !19
  %825 = icmp slt i32 %821, %824
  br i1 %825, label %826, label %873

826:                                              ; preds = %823, %818
  %827 = icmp eq i32 %820, %814
  br i1 %827, label %828, label %833

828:                                              ; preds = %826
  %829 = load ptr, ptr %815, align 8, !tbaa !17
  %830 = sext i32 %821 to i64
  %831 = getelementptr inbounds %struct.reg_code_block, ptr %829, i64 %830
  %832 = load i64, ptr %831, align 8, !tbaa !104
  br label %845

833:                                              ; preds = %826
  %834 = load i32, ptr %798, align 8, !tbaa !19
  %835 = icmp eq i32 %821, %834
  %836 = sext i32 %820 to i64
  %837 = getelementptr inbounds %struct.reg_code_block, ptr %817, i64 %836
  %838 = load i64, ptr %837, align 8, !tbaa !104
  br i1 %835, label %857, label %839

839:                                              ; preds = %833
  %840 = load ptr, ptr %815, align 8, !tbaa !17
  %841 = sext i32 %821 to i64
  %842 = getelementptr inbounds %struct.reg_code_block, ptr %840, i64 %841
  %843 = load i64, ptr %842, align 8, !tbaa !104
  %844 = icmp ult i64 %838, %843
  br i1 %844, label %857, label %845

845:                                              ; preds = %839, %828
  %846 = phi i64 [ %832, %828 ], [ %843, %839 ]
  %847 = phi ptr [ %831, %828 ], [ %842, %839 ]
  %848 = add nsw i32 %821, 1
  store i64 %846, ptr %819, align 8, !tbaa !104
  %849 = getelementptr inbounds %struct.reg_code_block, ptr %847, i64 0, i32 1
  %850 = load i64, ptr %849, align 8, !tbaa !105
  %851 = getelementptr inbounds %struct.reg_code_block, ptr %819, i64 0, i32 1
  store i64 %850, ptr %851, align 8, !tbaa !105
  %852 = getelementptr inbounds %struct.reg_code_block, ptr %847, i64 0, i32 2
  %853 = load ptr, ptr %852, align 8, !tbaa !127
  %854 = getelementptr inbounds %struct.reg_code_block, ptr %819, i64 0, i32 2
  store ptr %853, ptr %854, align 8, !tbaa !127
  %855 = load i32, ptr %816, align 8, !tbaa !22
  %856 = add i32 %855, 1
  store i32 %856, ptr %816, align 8, !tbaa !22
  br label %867

857:                                              ; preds = %839, %833
  %858 = add nsw i32 %820, 1
  store i64 %838, ptr %819, align 8, !tbaa !104
  %859 = getelementptr inbounds %struct.reg_code_block, ptr %817, i64 %836, i32 1
  %860 = load i64, ptr %859, align 8, !tbaa !105
  %861 = getelementptr inbounds %struct.reg_code_block, ptr %819, i64 0, i32 1
  store i64 %860, ptr %861, align 8, !tbaa !105
  %862 = getelementptr inbounds %struct.reg_code_block, ptr %817, i64 %836, i32 2
  %863 = load ptr, ptr %862, align 8, !tbaa !127
  %864 = getelementptr inbounds %struct.reg_code_block, ptr %819, i64 0, i32 2
  store ptr %863, ptr %864, align 8, !tbaa !127
  %865 = getelementptr inbounds %struct.reg_code_block, ptr %817, i64 %836, i32 3
  %866 = load ptr, ptr %865, align 8, !tbaa !20
  br label %867

867:                                              ; preds = %857, %845
  %868 = phi i32 [ %821, %857 ], [ %848, %845 ]
  %869 = phi i32 [ %858, %857 ], [ %820, %845 ]
  %870 = phi ptr [ %866, %857 ], [ %785, %845 ]
  %871 = getelementptr inbounds %struct.reg_code_block, ptr %819, i64 0, i32 3
  store ptr %870, ptr %871, align 8, !tbaa !20
  %872 = getelementptr inbounds %struct.reg_code_block, ptr %819, i64 1
  br label %818, !llvm.loop !128

873:                                              ; preds = %823
  %874 = add nsw i32 %824, %814
  store i32 %874, ptr %108, align 8, !tbaa !77
  %875 = load ptr, ptr %107, align 8, !tbaa !74
  call void @Perl_safesysfree(ptr noundef %875) #21
  store ptr %813, ptr %107, align 8, !tbaa !74
  %876 = load i32, ptr %816, align 8, !tbaa !22
  %877 = icmp ugt i32 %876, 1
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = add i32 %876, -1
  store i32 %879, ptr %816, align 8, !tbaa !22
  br label %945

880:                                              ; preds = %873
  call void @Perl_sv_free2(ptr noundef nonnull %785, i32 noundef %876) #21
  br label %945

881:                                              ; preds = %788
  store ptr %785, ptr %328, align 8, !tbaa !103
  %882 = load i32, ptr %108, align 8, !tbaa !77
  %883 = load i64, ptr %9, align 8, !tbaa !71
  %884 = shl i64 %883, 1
  %885 = or i64 %884, 1
  %886 = call ptr @Perl_safesysmalloc(i64 noundef %885) #21
  %887 = load i64, ptr %9, align 8, !tbaa !71
  %888 = icmp eq i64 %887, 0
  %889 = ptrtoint ptr %886 to i64
  br i1 %888, label %941, label %890

890:                                              ; preds = %881
  %891 = xor i64 %889, -1
  br label %892

892:                                              ; preds = %933, %890
  %893 = phi i8 [ 0, %890 ], [ %935, %933 ]
  %894 = phi i64 [ 0, %890 ], [ %936, %933 ]
  %895 = phi i32 [ 0, %890 ], [ %934, %933 ]
  %896 = phi ptr [ %886, %890 ], [ %911, %933 ]
  %897 = getelementptr inbounds i8, ptr %376, i64 %894
  %898 = load i8, ptr %897, align 1, !tbaa !9
  %899 = icmp sgt i8 %898, -1
  br i1 %899, label %900, label %902

900:                                              ; preds = %892
  %901 = getelementptr inbounds i8, ptr %896, i64 1
  br label %909

902:                                              ; preds = %892
  %903 = lshr i8 %898, 6
  %904 = or i8 %903, -64
  %905 = getelementptr inbounds i8, ptr %896, i64 1
  %906 = and i8 %898, 63
  %907 = or i8 %906, -128
  %908 = getelementptr inbounds i8, ptr %896, i64 2
  store i8 %907, ptr %905, align 1, !tbaa !9
  br label %909

909:                                              ; preds = %902, %900
  %910 = phi i8 [ %898, %900 ], [ %904, %902 ]
  %911 = phi ptr [ %901, %900 ], [ %908, %902 ]
  store i8 %910, ptr %896, align 1
  %912 = icmp slt i32 %895, %882
  br i1 %912, label %913, label %933

913:                                              ; preds = %909
  %914 = and i8 %893, 1
  %915 = icmp eq i8 %914, 0
  %916 = load ptr, ptr %107, align 8, !tbaa !74
  %917 = sext i32 %895 to i64
  br i1 %915, label %918, label %925

918:                                              ; preds = %913
  %919 = getelementptr inbounds %struct.reg_code_block, ptr %916, i64 %917
  %920 = load i64, ptr %919, align 8, !tbaa !104
  %921 = icmp eq i64 %920, %894
  br i1 %921, label %922, label %933

922:                                              ; preds = %918
  %923 = ptrtoint ptr %911 to i64
  %924 = add i64 %923, %891
  store i64 %924, ptr %919, align 8, !tbaa !104
  br label %933

925:                                              ; preds = %913
  %926 = getelementptr inbounds %struct.reg_code_block, ptr %916, i64 %917, i32 1
  %927 = load i64, ptr %926, align 8, !tbaa !105
  %928 = icmp eq i64 %927, %894
  br i1 %928, label %929, label %933

929:                                              ; preds = %925
  %930 = ptrtoint ptr %911 to i64
  %931 = add i64 %930, %891
  store i64 %931, ptr %926, align 8, !tbaa !105
  %932 = add nsw i32 %895, 1
  br label %933

933:                                              ; preds = %929, %925, %922, %918, %909
  %934 = phi i32 [ %932, %929 ], [ %895, %925 ], [ %895, %922 ], [ %895, %909 ], [ %895, %918 ]
  %935 = phi i8 [ 0, %929 ], [ %893, %925 ], [ 1, %922 ], [ %893, %909 ], [ %893, %918 ]
  %936 = add nuw i64 %894, 1
  %937 = load i64, ptr %9, align 8, !tbaa !71
  %938 = icmp ult i64 %936, %937
  br i1 %938, label %892, label %939, !llvm.loop !129

939:                                              ; preds = %933
  %940 = ptrtoint ptr %911 to i64
  br label %941

941:                                              ; preds = %881, %939
  %942 = phi i64 [ %940, %939 ], [ %889, %881 ]
  %943 = phi ptr [ %911, %939 ], [ %886, %881 ]
  store i8 0, ptr %943, align 1, !tbaa !9
  %944 = sub i64 %942, %889
  store i64 %944, ptr %9, align 8, !tbaa !71
  call void @Perl_save_pushptr(ptr noundef %886, i32 noundef 10) #21
  store i32 1, ptr %321, align 8, !tbaa !98
  store i32 1, ptr %320, align 4, !tbaa !97
  br label %374

945:                                              ; preds = %472, %805, %807, %880, %878
  store i32 0, ptr %343, align 4, !tbaa !130
  store i32 0, ptr %344, align 8, !tbaa !131
  store i64 0, ptr %345, align 8, !tbaa !132
  store i32 0, ptr %346, align 4, !tbaa !133
  %946 = load i8, ptr %376, align 1, !tbaa !9
  %947 = icmp eq i8 %946, 94
  %948 = sext i1 %947 to i32
  store i32 %948, ptr %347, align 4, !tbaa !134
  store i32 0, ptr %348, align 8, !tbaa !135
  store i32 0, ptr %349, align 8, !tbaa !136
  store i32 0, ptr %350, align 4, !tbaa !137
  store ptr %376, ptr %351, align 8, !tbaa !138
  store ptr %376, ptr %352, align 8, !tbaa !139
  %949 = load i64, ptr %9, align 8, !tbaa !71
  %950 = getelementptr inbounds i8, ptr %376, i64 %949
  store ptr %950, ptr %353, align 8, !tbaa !140
  store i32 0, ptr %354, align 8, !tbaa !141
  store i32 1, ptr %355, align 8, !tbaa !142
  store i32 0, ptr %356, align 4, !tbaa !143
  store i64 0, ptr %357, align 8, !tbaa !144
  store ptr %358, ptr %359, align 8, !tbaa !145
  store i64 0, ptr %360, align 8, !tbaa !146
  store ptr null, ptr %365, align 8, !tbaa !147
  store i32 0, ptr %366, align 8, !tbaa !148
  store i32 0, ptr %368, align 4, !tbaa !149
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %361, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %363, i8 0, i64 20, i1 false)
  %951 = load ptr, ptr %107, align 8, !tbaa !74
  %952 = icmp eq ptr %951, null
  %953 = icmp ne ptr %373, null
  %954 = select i1 %952, i1 true, i1 %953
  br i1 %954, label %961, label %955

955:                                              ; preds = %945
  %956 = call ptr @Perl_newSV_type(i32 noundef 3) #21
  call void @Perl_save_pushptr(ptr noundef %956, i32 noundef 11) #21
  %957 = load ptr, ptr %107, align 8, !tbaa !74
  %958 = getelementptr inbounds %struct.sv, ptr %956, i64 0, i32 3
  store ptr %957, ptr %958, align 8, !tbaa !9
  %959 = load ptr, ptr %956, align 8, !tbaa !63
  %960 = getelementptr inbounds %struct.xpv, ptr %959, i64 0, i32 3
  store i64 1, ptr %960, align 8, !tbaa !9
  br label %961

961:                                              ; preds = %955, %945
  %962 = phi ptr [ %373, %945 ], [ %956, %955 ]
  %963 = call fastcc ptr @S_reg(ptr noundef nonnull %15, i32 noundef 0, ptr noundef nonnull %11, i32 noundef 1)
  %964 = icmp eq ptr %963, null
  br i1 %964, label %965, label %1035

965:                                              ; preds = %961
  %966 = load i32, ptr %11, align 4, !tbaa !150
  %967 = and i32 %966, 32
  %968 = icmp eq i32 %967, 0
  br i1 %968, label %1033, label %969

969:                                              ; preds = %965
  %970 = load i32, ptr %108, align 8, !tbaa !77
  %971 = load i64, ptr %9, align 8, !tbaa !71
  %972 = shl i64 %971, 1
  %973 = or i64 %972, 1
  %974 = call ptr @Perl_safesysmalloc(i64 noundef %973) #21
  %975 = load i64, ptr %9, align 8, !tbaa !71
  %976 = icmp eq i64 %975, 0
  %977 = ptrtoint ptr %974 to i64
  br i1 %976, label %1029, label %978

978:                                              ; preds = %969
  %979 = xor i64 %977, -1
  br label %980

980:                                              ; preds = %1021, %978
  %981 = phi i8 [ 0, %978 ], [ %1023, %1021 ]
  %982 = phi i64 [ 0, %978 ], [ %1024, %1021 ]
  %983 = phi i32 [ 0, %978 ], [ %1022, %1021 ]
  %984 = phi ptr [ %974, %978 ], [ %999, %1021 ]
  %985 = getelementptr inbounds i8, ptr %376, i64 %982
  %986 = load i8, ptr %985, align 1, !tbaa !9
  %987 = icmp sgt i8 %986, -1
  br i1 %987, label %988, label %990

988:                                              ; preds = %980
  %989 = getelementptr inbounds i8, ptr %984, i64 1
  br label %997

990:                                              ; preds = %980
  %991 = lshr i8 %986, 6
  %992 = or i8 %991, -64
  %993 = getelementptr inbounds i8, ptr %984, i64 1
  %994 = and i8 %986, 63
  %995 = or i8 %994, -128
  %996 = getelementptr inbounds i8, ptr %984, i64 2
  store i8 %995, ptr %993, align 1, !tbaa !9
  br label %997

997:                                              ; preds = %990, %988
  %998 = phi i8 [ %986, %988 ], [ %992, %990 ]
  %999 = phi ptr [ %989, %988 ], [ %996, %990 ]
  store i8 %998, ptr %984, align 1
  %1000 = icmp slt i32 %983, %970
  br i1 %1000, label %1001, label %1021

1001:                                             ; preds = %997
  %1002 = and i8 %981, 1
  %1003 = icmp eq i8 %1002, 0
  %1004 = load ptr, ptr %107, align 8, !tbaa !74
  %1005 = sext i32 %983 to i64
  br i1 %1003, label %1006, label %1013

1006:                                             ; preds = %1001
  %1007 = getelementptr inbounds %struct.reg_code_block, ptr %1004, i64 %1005
  %1008 = load i64, ptr %1007, align 8, !tbaa !104
  %1009 = icmp eq i64 %1008, %982
  br i1 %1009, label %1010, label %1021

1010:                                             ; preds = %1006
  %1011 = ptrtoint ptr %999 to i64
  %1012 = add i64 %1011, %979
  store i64 %1012, ptr %1007, align 8, !tbaa !104
  br label %1021

1013:                                             ; preds = %1001
  %1014 = getelementptr inbounds %struct.reg_code_block, ptr %1004, i64 %1005, i32 1
  %1015 = load i64, ptr %1014, align 8, !tbaa !105
  %1016 = icmp eq i64 %1015, %982
  br i1 %1016, label %1017, label %1021

1017:                                             ; preds = %1013
  %1018 = ptrtoint ptr %999 to i64
  %1019 = add i64 %1018, %979
  store i64 %1019, ptr %1014, align 8, !tbaa !105
  %1020 = add nsw i32 %983, 1
  br label %1021

1021:                                             ; preds = %1017, %1013, %1010, %1006, %997
  %1022 = phi i32 [ %1020, %1017 ], [ %983, %1013 ], [ %983, %1010 ], [ %983, %997 ], [ %983, %1006 ]
  %1023 = phi i8 [ 0, %1017 ], [ %981, %1013 ], [ 1, %1010 ], [ %981, %997 ], [ %981, %1006 ]
  %1024 = add nuw i64 %982, 1
  %1025 = load i64, ptr %9, align 8, !tbaa !71
  %1026 = icmp ult i64 %1024, %1025
  br i1 %1026, label %980, label %1027, !llvm.loop !129

1027:                                             ; preds = %1021
  %1028 = ptrtoint ptr %999 to i64
  br label %1029

1029:                                             ; preds = %969, %1027
  %1030 = phi i64 [ %1028, %1027 ], [ %977, %969 ]
  %1031 = phi ptr [ %999, %1027 ], [ %974, %969 ]
  store i8 0, ptr %1031, align 1, !tbaa !9
  %1032 = sub i64 %1030, %977
  store i64 %1032, ptr %9, align 8, !tbaa !71
  call void @Perl_save_pushptr(ptr noundef %974, i32 noundef 10) #21
  store i32 1, ptr %321, align 8, !tbaa !98
  store i32 1, ptr %320, align 4, !tbaa !97
  br label %369

1033:                                             ; preds = %965
  %1034 = sext i32 %966 to i64
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.181, i64 noundef %1034) #21
  br label %1035

1035:                                             ; preds = %961, %1033
  %1036 = icmp eq ptr %962, null
  br i1 %1036, label %1040, label %1037

1037:                                             ; preds = %1035
  %1038 = load ptr, ptr %962, align 8, !tbaa !63
  %1039 = getelementptr inbounds %struct.xpv, ptr %1038, i64 0, i32 3
  store i64 0, ptr %1039, align 8, !tbaa !9
  br label %1040

1040:                                             ; preds = %1037, %1035
  %1041 = load i32, ptr %321, align 8, !tbaa !98
  %1042 = icmp ne i32 %1041, 0
  %1043 = load i32, ptr %322, align 8
  %1044 = icmp ne i32 %1043, 0
  %1045 = select i1 %1042, i1 true, i1 %1044
  %1046 = and i32 %475, 896
  %1047 = icmp eq i32 %1046, 0
  %1048 = select i1 %1045, i1 %1047, i1 false
  %1049 = select i1 %1048, i32 %340, i32 %475
  %1050 = load i64, ptr %357, align 8, !tbaa !144
  %1051 = icmp sgt i64 %1050, 65535
  br i1 %1051, label %1052, label %1058

1052:                                             ; preds = %1040
  %1053 = load i32, ptr %348, align 8, !tbaa !135
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1058, label %1055

1055:                                             ; preds = %1052
  %1056 = sext i32 %1053 to i64
  %1057 = add nsw i64 %1050, %1056
  store i64 %1057, ptr %357, align 8, !tbaa !144
  br label %1059

1058:                                             ; preds = %1052, %1040
  store i32 0, ptr %348, align 8, !tbaa !135
  br label %1059

1059:                                             ; preds = %1058, %1055
  %1060 = load i64, ptr %360, align 8, !tbaa !146
  %1061 = icmp sgt i64 %1060, 15
  br i1 %1061, label %1062, label %1063

1062:                                             ; preds = %1059
  store i64 15, ptr %360, align 8, !tbaa !146
  br label %1063

1063:                                             ; preds = %1062, %1059
  %1064 = call ptr @Perl_newSV_type(i32 noundef 8) #21
  %1065 = getelementptr i8, ptr %1064, i64 16
  %1066 = load ptr, ptr %1065, align 8, !tbaa !9
  %1067 = load i64, ptr %357, align 8, !tbaa !144
  %1068 = shl i64 %1067, 2
  %1069 = and i64 %1068, 17179869180
  %1070 = add nuw nsw i64 %1069, 48
  %1071 = call ptr @Perl_safesysmalloc(i64 noundef %1070) #21
  %1072 = icmp eq ptr %1066, null
  %1073 = icmp eq ptr %1071, null
  %1074 = select i1 %1072, i1 true, i1 %1073
  br i1 %1074, label %1075, label %1095

1075:                                             ; preds = %1063
  %1076 = load ptr, ptr %353, align 8, !tbaa !140
  %1077 = load ptr, ptr %341, align 8, !tbaa !108
  %1078 = ptrtoint ptr %1076 to i64
  %1079 = ptrtoint ptr %1077 to i64
  %1080 = sub i64 %1078, %1079
  %1081 = load ptr, ptr %359, align 8, !tbaa !145
  %1082 = icmp eq ptr %1081, %358
  br i1 %1082, label %1087, label %1083

1083:                                             ; preds = %1075
  %1084 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 3
  %1085 = load ptr, ptr %1084, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1085, i32 noundef 11) #21
  %1086 = load ptr, ptr %341, align 8, !tbaa !108
  br label %1087

1087:                                             ; preds = %1083, %1075
  %1088 = phi ptr [ %1086, %1083 ], [ %1077, %1075 ]
  %1089 = icmp sgt i64 %1080, 127
  %1090 = select i1 %1089, ptr @.str.182, ptr @.str.178
  %1091 = select i1 %1089, i64 117, i64 %1080
  %1092 = load i32, ptr %321, align 8, !tbaa !98
  %1093 = icmp ne i32 %1092, 0
  %1094 = zext i1 %1093 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.184, i32 noundef %1094, i64 noundef %1091, ptr noundef %1088, ptr noundef nonnull %1090) #21
  br label %1095

1095:                                             ; preds = %1063, %1087
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(48) %1071, i8 0, i64 48, i1 false)
  %1096 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 14
  store ptr %1071, ptr %1096, align 8, !tbaa !16
  %1097 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 4
  store ptr %3, ptr %1097, align 8, !tbaa !67
  %1098 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 7
  store i32 %1049, ptr %1098, align 8, !tbaa !45
  %1099 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 24
  %1100 = trunc i32 %6 to i16
  %1101 = load i16, ptr %1099, align 8
  %1102 = shl i16 %1100, 4
  %1103 = and i16 %1102, 8176
  %1104 = and i16 %1101, -8177
  %1105 = or i16 %1104, %1103
  store i16 %1105, ptr %1099, align 8
  %1106 = and i32 %7, 1073741824
  %1107 = icmp eq i32 %1106, 0
  br i1 %1107, label %1108, label %1111

1108:                                             ; preds = %1095
  %1109 = load i32, ptr %108, align 8, !tbaa !77
  %1110 = icmp sgt i32 %1109, 0
  br i1 %1110, label %1116, label %1130

1111:                                             ; preds = %1095
  %1112 = load ptr, ptr %107, align 8, !tbaa !74
  %1113 = getelementptr inbounds %struct.regexp_internal, ptr %1071, i64 0, i32 4
  store ptr %1112, ptr %1113, align 8, !tbaa !17
  %1114 = load i32, ptr %108, align 8, !tbaa !77
  %1115 = getelementptr inbounds %struct.regexp_internal, ptr %1071, i64 0, i32 5
  store i32 %1114, ptr %1115, align 8, !tbaa !19
  br label %1133

1116:                                             ; preds = %1108, %1125
  %1117 = phi i32 [ %1126, %1125 ], [ %1109, %1108 ]
  %1118 = phi i64 [ %1127, %1125 ], [ 0, %1108 ]
  %1119 = load ptr, ptr %107, align 8, !tbaa !74
  %1120 = getelementptr inbounds %struct.reg_code_block, ptr %1119, i64 %1118, i32 3
  %1121 = load ptr, ptr %1120, align 8, !tbaa !20
  %1122 = icmp eq ptr %1121, null
  br i1 %1122, label %1125, label %1123

1123:                                             ; preds = %1116
  call void @Perl_save_pushptr(ptr noundef nonnull %1121, i32 noundef 11) #21
  %1124 = load i32, ptr %108, align 8, !tbaa !77
  br label %1125

1125:                                             ; preds = %1116, %1123
  %1126 = phi i32 [ %1117, %1116 ], [ %1124, %1123 ]
  %1127 = add nuw nsw i64 %1118, 1
  %1128 = sext i32 %1126 to i64
  %1129 = icmp slt i64 %1127, %1128
  br i1 %1129, label %1116, label %1130, !llvm.loop !152

1130:                                             ; preds = %1125, %1108
  %1131 = load ptr, ptr %107, align 8, !tbaa !74
  call void @Perl_save_pushptr(ptr noundef %1131, i32 noundef 10) #21
  %1132 = load i32, ptr %1098, align 8, !tbaa !45
  br label %1133

1133:                                             ; preds = %1130, %1111
  %1134 = phi i32 [ %1132, %1130 ], [ %1049, %1111 ]
  %1135 = and i32 %1134, 64
  %1136 = icmp eq i32 %1135, 0
  %1137 = and i32 %1134, 896
  %1138 = icmp eq i32 %1137, 0
  %1139 = and i32 %1134, 47
  %1140 = icmp ne i32 %1139, 47
  %1141 = or i1 %1140, %1138
  %1142 = load i32, ptr %344, align 8, !tbaa !131
  %1143 = and i32 %1142, 512
  %1144 = icmp eq i32 %1143, 0
  %1145 = load i64, ptr %9, align 8, !tbaa !71
  %1146 = lshr exact i32 %1135, 6
  %1147 = zext i32 %1146 to i64
  %1148 = lshr exact i32 %1143, 9
  %1149 = zext i32 %1148 to i64
  %1150 = zext i1 %1141 to i64
  %1151 = select i1 %1138, i64 0, i64 2
  %1152 = add i64 %1145, 11
  %1153 = add i64 %1152, %1147
  %1154 = add i64 %1153, %1151
  %1155 = add i64 %1154, %1149
  %1156 = add i64 %1155, %1150
  %1157 = call ptr @Perl_safesysmalloc(i64 noundef %1156) #21
  %1158 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 3
  store ptr %1157, ptr %1158, align 8, !tbaa !9
  %1159 = load i32, ptr %321, align 8, !tbaa !98
  %1160 = icmp eq i32 %1159, 0
  br i1 %1160, label %1165, label %1161

1161:                                             ; preds = %1133
  %1162 = getelementptr inbounds %struct.p5rx, ptr %1064, i64 0, i32 2
  %1163 = load i32, ptr %1162, align 4, !tbaa !10
  %1164 = or i32 %1163, 536870912
  store i32 %1164, ptr %1162, align 4, !tbaa !10
  br label %1165

1165:                                             ; preds = %1161, %1133
  %1166 = getelementptr inbounds i8, ptr %1157, i64 1
  store i8 40, ptr %1157, align 1, !tbaa !9
  %1167 = getelementptr inbounds i8, ptr %1157, i64 2
  store i8 63, ptr %1166, align 1, !tbaa !9
  br i1 %1141, label %1168, label %1170

1168:                                             ; preds = %1165
  %1169 = getelementptr inbounds i8, ptr %1157, i64 3
  store i8 94, ptr %1167, align 1, !tbaa !9
  br i1 %1138, label %1187, label %1170

1170:                                             ; preds = %1165, %1168
  %1171 = phi ptr [ %1169, %1168 ], [ %1167, %1165 ]
  %1172 = load i32, ptr %1098, align 8, !tbaa !45
  %1173 = lshr i32 %1172, 7
  %1174 = and i32 %1173, 7
  %1175 = icmp ult i32 %1174, 5
  br i1 %1175, label %1176, label %1183

1176:                                             ; preds = %1170
  %1177 = zext i32 %1174 to i64
  %1178 = getelementptr inbounds [5 x i64], ptr @switch.table.Perl_re_op_compile, i64 0, i64 %1177
  %1179 = load i64, ptr %1178, align 8
  %1180 = zext i32 %1174 to i64
  %1181 = shl i64 %1180, 2
  %1182 = call ptr @llvm.load.relative.i64(ptr @reltable.Perl_re_op_compile, i64 %1181)
  br label %1183

1183:                                             ; preds = %1170, %1176
  %1184 = phi i64 [ %1179, %1176 ], [ 1, %1170 ]
  %1185 = phi ptr [ %1182, %1176 ], [ @.str.214, %1170 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %1171, ptr noundef nonnull align 1 dereferenceable(1) %1185, i64 %1184, i1 false)
  %1186 = getelementptr inbounds i8, ptr %1171, i64 %1184
  br label %1187

1187:                                             ; preds = %1183, %1168
  %1188 = phi ptr [ %1186, %1183 ], [ %1169, %1168 ]
  br i1 %1136, label %1191, label %1189

1189:                                             ; preds = %1187
  %1190 = getelementptr inbounds i8, ptr %1188, i64 1
  store i8 112, ptr %1188, align 1, !tbaa !9
  br label %1191

1191:                                             ; preds = %1189, %1187
  %1192 = phi ptr [ %1190, %1189 ], [ %1188, %1187 ]
  %1193 = and i32 %1134, 1
  %1194 = icmp eq i32 %1193, 0
  br i1 %1194, label %1197, label %1195

1195:                                             ; preds = %1191
  %1196 = getelementptr inbounds i8, ptr %1192, i64 1
  store i8 109, ptr %1192, align 1, !tbaa !9
  br label %1197

1197:                                             ; preds = %1195, %1191
  %1198 = phi ptr [ %1196, %1195 ], [ %1192, %1191 ]
  %1199 = and i32 %1134, 2
  %1200 = icmp eq i32 %1199, 0
  br i1 %1200, label %1203, label %1201

1201:                                             ; preds = %1197
  %1202 = getelementptr inbounds i8, ptr %1198, i64 1
  store i8 115, ptr %1198, align 1, !tbaa !9
  br label %1203

1203:                                             ; preds = %1201, %1197
  %1204 = phi ptr [ %1202, %1201 ], [ %1198, %1197 ]
  %1205 = and i32 %1134, 4
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1209, label %1207

1207:                                             ; preds = %1203
  %1208 = getelementptr inbounds i8, ptr %1204, i64 1
  store i8 105, ptr %1204, align 1, !tbaa !9
  br label %1209

1209:                                             ; preds = %1207, %1203
  %1210 = phi ptr [ %1208, %1207 ], [ %1204, %1203 ]
  %1211 = and i32 %1134, 8
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1209
  %1214 = getelementptr inbounds i8, ptr %1210, i64 1
  store i8 120, ptr %1210, align 1, !tbaa !9
  br label %1215

1215:                                             ; preds = %1209, %1213
  %1216 = phi ptr [ %1214, %1213 ], [ %1210, %1209 ]
  %1217 = and i32 %1134, 32
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1221, label %1219

1219:                                             ; preds = %1215
  %1220 = getelementptr inbounds i8, ptr %1216, i64 1
  store i8 110, ptr %1216, align 1, !tbaa !9
  br label %1221

1221:                                             ; preds = %1219, %1215
  %1222 = phi ptr [ %1220, %1219 ], [ %1216, %1215 ]
  %1223 = getelementptr inbounds i8, ptr %1222, i64 1
  store i8 58, ptr %1222, align 1, !tbaa !9
  %1224 = load ptr, ptr %341, align 8, !tbaa !108
  %1225 = load i64, ptr %9, align 8, !tbaa !71
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1223, ptr align 1 %1224, i64 %1225, i1 false)
  %1226 = load ptr, ptr %1065, align 8, !tbaa !9
  %1227 = getelementptr inbounds %struct.regexp, ptr %1226, i64 0, i32 3
  %1228 = load ptr, ptr %1227, align 8, !tbaa !9
  %1229 = ptrtoint ptr %1223 to i64
  %1230 = ptrtoint ptr %1228 to i64
  %1231 = sub i64 %1229, %1230
  %1232 = trunc i64 %1231 to i16
  %1233 = load i16, ptr %1099, align 8
  %1234 = and i16 %1232, 15
  %1235 = and i16 %1233, -16
  %1236 = or i16 %1234, %1235
  store i16 %1236, ptr %1099, align 8
  %1237 = load i64, ptr %9, align 8, !tbaa !71
  %1238 = getelementptr inbounds i8, ptr %1223, i64 %1237
  br i1 %1144, label %1241, label %1239

1239:                                             ; preds = %1221
  %1240 = getelementptr inbounds i8, ptr %1238, i64 1
  store i8 10, ptr %1238, align 1, !tbaa !9
  br label %1241

1241:                                             ; preds = %1239, %1221
  %1242 = phi ptr [ %1240, %1239 ], [ %1238, %1221 ]
  %1243 = getelementptr inbounds i8, ptr %1242, i64 1
  store i8 41, ptr %1242, align 1, !tbaa !9
  store i8 0, ptr %1243, align 1, !tbaa !9
  %1244 = load ptr, ptr %1065, align 8, !tbaa !9
  %1245 = getelementptr inbounds %struct.regexp, ptr %1244, i64 0, i32 3
  %1246 = load ptr, ptr %1245, align 8, !tbaa !9
  %1247 = ptrtoint ptr %1243 to i64
  %1248 = ptrtoint ptr %1246 to i64
  %1249 = sub i64 %1247, %1248
  %1250 = load ptr, ptr %1064, align 8, !tbaa !107
  %1251 = getelementptr inbounds %struct.xpv, ptr %1250, i64 0, i32 2
  store i64 %1249, ptr %1251, align 8, !tbaa !72
  %1252 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 13
  store i32 0, ptr %1252, align 4, !tbaa !61
  %1253 = load i32, ptr %355, align 8, !tbaa !142
  %1254 = add nsw i32 %1253, -1
  %1255 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 12
  store i32 %1254, ptr %1255, align 8, !tbaa !56
  %1256 = load i32, ptr %344, align 8, !tbaa !131
  %1257 = and i32 %1256, 32
  %1258 = icmp eq i32 %1257, 0
  br i1 %1258, label %1266, label %1259

1259:                                             ; preds = %1241
  %1260 = sext i32 %1253 to i64
  %1261 = call ptr @Perl_safesyscalloc(i64 noundef %1260, i64 noundef 8) #21
  store ptr %1261, ptr %361, align 8, !tbaa !153
  call void @Perl_save_pushptr(ptr noundef %1261, i32 noundef 10) #21
  %1262 = load i32, ptr %355, align 8, !tbaa !142
  %1263 = sext i32 %1262 to i64
  %1264 = call ptr @Perl_safesyscalloc(i64 noundef %1263, i64 noundef 8) #21
  store ptr %1264, ptr %362, align 8, !tbaa !154
  call void @Perl_save_pushptr(ptr noundef %1264, i32 noundef 10) #21
  %1265 = load i32, ptr %344, align 8, !tbaa !131
  br label %1266

1266:                                             ; preds = %1259, %1241
  %1267 = phi i32 [ %1265, %1259 ], [ %1256, %1241 ]
  %1268 = and i32 %1267, 2080
  %1269 = icmp eq i32 %1268, 0
  br i1 %1269, label %1280, label %1270

1270:                                             ; preds = %1266
  %1271 = load i32, ptr %355, align 8, !tbaa !142
  %1272 = ashr i32 %1271, 3
  %1273 = and i32 %1271, 7
  %1274 = icmp ne i32 %1273, 0
  %1275 = zext i1 %1274 to i32
  %1276 = add nsw i32 %1272, %1275
  store i32 %1276, ptr %366, align 8, !tbaa !148
  %1277 = mul i32 %1276, %1271
  %1278 = zext i32 %1277 to i64
  %1279 = call ptr @Perl_safesysmalloc(i64 noundef %1278) #21
  store ptr %1279, ptr %365, align 8, !tbaa !147
  call void @Perl_save_pushptr(ptr noundef %1279, i32 noundef 10) #21
  br label %1280

1280:                                             ; preds = %1270, %1266
  %1281 = load i64, ptr %357, align 8, !tbaa !144
  %1282 = trunc i64 %1281 to i32
  %1283 = getelementptr inbounds %struct.regexp_internal, ptr %1071, i64 0, i32 1
  store i32 %1282, ptr %1283, align 8, !tbaa !9
  %1284 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 3
  store ptr %1064, ptr %1284, align 8, !tbaa !151
  %1285 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 4
  store ptr %1066, ptr %1285, align 8, !tbaa !155
  %1286 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 5
  store ptr %1071, ptr %1286, align 8, !tbaa !156
  store i32 %1049, ptr %15, align 8, !tbaa !109
  store i32 %7, ptr %342, align 4, !tbaa !110
  store ptr %376, ptr %351, align 8, !tbaa !138
  %1287 = load i64, ptr %9, align 8, !tbaa !71
  %1288 = getelementptr inbounds i8, ptr %376, i64 %1287
  store ptr %1288, ptr %353, align 8, !tbaa !140
  store i32 0, ptr %354, align 8, !tbaa !141
  store i32 1, ptr %355, align 8, !tbaa !142
  %1289 = getelementptr inbounds %struct.regexp_internal, ptr %1071, i64 0, i32 6
  %1290 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 10
  store ptr %1289, ptr %1290, align 8, !tbaa !157
  %1291 = load i64, ptr %357, align 8, !tbaa !144
  %1292 = getelementptr inbounds %struct.regnode, ptr %1289, i64 %1291
  %1293 = getelementptr inbounds %struct.regnode, ptr %1292, i64 1
  %1294 = getelementptr inbounds %struct.RExC_state_t, ptr %15, i64 0, i32 11
  store ptr %1293, ptr %1294, align 8, !tbaa !158
  store i32 0, ptr %368, align 4, !tbaa !149
  %1295 = getelementptr inbounds %struct.regexp_internal, ptr %1071, i64 1
  store ptr %1295, ptr %359, align 8, !tbaa !145
  store i8 -100, ptr %1289, align 1, !tbaa !9
  %1296 = call fastcc ptr @S_reg(ptr noundef nonnull %15, i32 noundef 0, ptr noundef nonnull %11, i32 noundef 1)
  %1297 = icmp eq ptr %1296, null
  br i1 %1297, label %1298, label %1308

1298:                                             ; preds = %1280
  %1299 = getelementptr inbounds %struct.sv, ptr %1064, i64 0, i32 1
  %1300 = load i32, ptr %1299, align 8, !tbaa !22
  %1301 = icmp ugt i32 %1300, 1
  br i1 %1301, label %1302, label %1304

1302:                                             ; preds = %1298
  %1303 = add i32 %1300, -1
  store i32 %1303, ptr %1299, align 8, !tbaa !22
  br label %1305

1304:                                             ; preds = %1298
  call void @Perl_sv_free2(ptr noundef nonnull %1064, i32 noundef %1300) #21
  br label %1305

1305:                                             ; preds = %1302, %1304
  %1306 = load i32, ptr %11, align 4, !tbaa !150
  %1307 = sext i32 %1306 to i64
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.186, i64 noundef %1307) #21
  br label %1308

1308:                                             ; preds = %1305, %1280
  %1309 = call ptr @Perl_safesysmalloc(i64 noundef 128) #21
  %1310 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 11
  store ptr %1309, ptr %1310, align 8, !tbaa !13
  %1311 = load i32, ptr %367, align 8, !tbaa !159
  %1312 = icmp eq i32 %1311, 0
  br i1 %1312, label %1316, label %1313

1313:                                             ; preds = %1308
  %1314 = sext i32 %1311 to i64
  %1315 = call ptr @Perl_safesyscalloc(i64 noundef %1314, i64 noundef 8) #21
  store ptr %1315, ptr %364, align 8, !tbaa !160
  call void @Perl_save_pushptr(ptr noundef %1315, i32 noundef 10) #21
  br label %1316

1316:                                             ; preds = %1313, %1308
  %1317 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 8
  %1318 = getelementptr inbounds %struct.regexp_internal, ptr %1071, i64 0, i32 2
  %1319 = getelementptr inbounds %struct.p5rx, ptr %1064, i64 0, i32 2
  %1320 = getelementptr inbounds %struct.regnode_ssc, ptr %22, i64 0, i32 1
  %1321 = getelementptr inbounds %struct.regnode_ssc, ptr %22, i64 0, i32 2
  %1322 = getelementptr inbounds %struct.regnode_1, ptr %22, i64 0, i32 3
  %1323 = getelementptr inbounds %struct.regnode_ssc, ptr %22, i64 0, i32 6
  %1324 = getelementptr inbounds %struct.regnode_charclass_class, ptr %22, i64 0, i32 5
  %1325 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 19
  %1326 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 18
  %1327 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 16
  %1328 = getelementptr inbounds i8, ptr %1071, i64 49
  %1329 = getelementptr inbounds i8, ptr %1071, i64 52
  %1330 = getelementptr inbounds i8, ptr %1071, i64 50
  %1331 = getelementptr inbounds %struct.regexp_internal, ptr %1071, i64 0, i32 3
  %1332 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 7
  %1333 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 11
  %1334 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 2
  %1335 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 6
  %1336 = getelementptr inbounds %struct.regnode_ssc, ptr %18, i64 0, i32 1
  %1337 = getelementptr inbounds %struct.regnode_ssc, ptr %18, i64 0, i32 2
  %1338 = getelementptr inbounds %struct.regnode_1, ptr %18, i64 0, i32 3
  %1339 = getelementptr inbounds %struct.regnode_ssc, ptr %18, i64 0, i32 6
  %1340 = getelementptr inbounds %struct.regnode_charclass_class, ptr %18, i64 0, i32 5
  br label %1341

1341:                                             ; preds = %2181, %1316
  %1342 = phi i1 [ true, %1316 ], [ false, %2181 ]
  store i64 0, ptr %12, align 8, !tbaa !71
  store i64 0, ptr %1317, align 8, !tbaa !161
  %1343 = load ptr, ptr %1310, align 8, !tbaa !13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(128) %1343, i8 0, i64 128, i1 false)
  %1344 = load ptr, ptr %365, align 8, !tbaa !147
  %1345 = icmp eq ptr %1344, null
  br i1 %1345, label %1351, label %1346

1346:                                             ; preds = %1341
  %1347 = load i32, ptr %366, align 8, !tbaa !148
  %1348 = load i32, ptr %355, align 8, !tbaa !142
  %1349 = mul i32 %1348, %1347
  %1350 = zext i32 %1349 to i64
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %1344, i8 0, i64 %1350, i1 false)
  br label %1351

1351:                                             ; preds = %1346, %1341
  br i1 %1342, label %1352, label %1353

1352:                                             ; preds = %1351
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %14, i8 0, i64 152, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(344) %16, ptr noundef nonnull align 8 dereferenceable(344) %15, i64 344, i1 false), !tbaa.struct !162
  br label %1359

1353:                                             ; preds = %1351
  %1354 = load i32, ptr %344, align 8, !tbaa !131
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(344) %15, ptr noundef nonnull align 8 dereferenceable(344) %16, i64 344, i1 false), !tbaa.struct !162
  %1355 = and i32 %1354, 64
  %1356 = load i32, ptr %344, align 8
  %1357 = and i32 %1356, -65
  %1358 = or i32 %1357, %1355
  store i32 %1358, ptr %344, align 8, !tbaa !131
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %14, i8 0, i64 152, i1 false)
  br label %1359

1359:                                             ; preds = %1353, %1352
  %1360 = load i32, ptr %15, align 8, !tbaa !109
  store i32 %1360, ptr %1098, align 8, !tbaa !45
  %1361 = load i32, ptr %321, align 8, !tbaa !98
  %1362 = icmp eq i32 %1361, 0
  br i1 %1362, label %1366, label %1363

1363:                                             ; preds = %1359
  %1364 = load i32, ptr %1319, align 4, !tbaa !10
  %1365 = or i32 %1364, 536870912
  store i32 %1365, ptr %1319, align 4, !tbaa !10
  br label %1366

1366:                                             ; preds = %1359, %1363
  store ptr null, ptr %1318, align 8, !tbaa !34
  %1367 = load i32, ptr %354, align 8, !tbaa !141
  %1368 = icmp sgt i32 %1367, 9
  br i1 %1368, label %1369, label %1372

1369:                                             ; preds = %1366
  %1370 = load i32, ptr %1252, align 4, !tbaa !61
  %1371 = or i32 %1370, 4
  store i32 %1371, ptr %1252, align 4, !tbaa !61
  br label %1372

1372:                                             ; preds = %1369, %1366
  store ptr %1295, ptr %10, align 8, !tbaa !5
  %1373 = load i32, ptr %344, align 8, !tbaa !131
  %1374 = and i32 %1373, 64
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %2182

1376:                                             ; preds = %1372
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #21
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %18) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #21
  store i64 0, ptr %19, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #21
  %1377 = load i8, ptr %1328, align 1, !tbaa !164
  %1378 = icmp ugt i8 %1377, 93
  br i1 %1378, label %1379, label %1382

1379:                                             ; preds = %1376
  %1380 = zext i8 %1377 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1380, i32 noundef 93) #21
  %1381 = load i8, ptr %1328, align 1, !tbaa !164
  br label %1382

1382:                                             ; preds = %1379, %1376
  %1383 = phi i8 [ %1381, %1379 ], [ %1377, %1376 ]
  %1384 = zext i8 %1383 to i64
  %1385 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1384
  %1386 = load i8, ptr %1385, align 1, !tbaa !9
  %1387 = icmp eq i8 %1386, 0
  br i1 %1387, label %1390, label %1388

1388:                                             ; preds = %1382
  %1389 = load i32, ptr %1329, align 4, !tbaa !166
  br label %1393

1390:                                             ; preds = %1382
  %1391 = load i16, ptr %1330, align 2, !tbaa !168
  %1392 = zext i16 %1391 to i32
  br label %1393

1393:                                             ; preds = %1390, %1388
  %1394 = phi i32 [ %1392, %1390 ], [ %1389, %1388 ]
  br label %1395

1395:                                             ; preds = %1468, %1393
  %1396 = phi i32 [ %1394, %1393 ], [ %1469, %1468 ]
  %1397 = phi ptr [ %1295, %1393 ], [ %1448, %1468 ]
  %1398 = phi i32 [ 0, %1393 ], [ %1446, %1468 ]
  %1399 = phi i32 [ 0, %1393 ], [ %1445, %1468 ]
  %1400 = phi i32 [ 0, %1393 ], [ %1447, %1468 ]
  %1401 = phi i32 [ 0, %1393 ], [ %1444, %1468 ]
  %1402 = icmp eq i32 %1396, 0
  %1403 = sext i32 %1396 to i64
  %1404 = getelementptr inbounds %struct.regnode, ptr %1397, i64 %1403
  %1405 = select i1 %1402, ptr null, ptr %1404
  %1406 = getelementptr inbounds %struct.regnode, ptr %1397, i64 0, i32 1
  %1407 = load i8, ptr %1406, align 1, !tbaa !164
  switch i8 %1407, label %1415 [
    i8 49, label %1433
    i8 30, label %1408
    i8 63, label %1412
    i8 43, label %1442
    i8 69, label %1432
  ]

1408:                                             ; preds = %1395
  %1409 = getelementptr inbounds %struct.regnode, ptr %1405, i64 0, i32 1
  %1410 = load i8, ptr %1409, align 1, !tbaa !164
  %1411 = icmp eq i8 %1410, 30
  br i1 %1411, label %1415, label %1433

1412:                                             ; preds = %1395
  %1413 = load i8, ptr %1397, align 2, !tbaa !169
  %1414 = icmp eq i8 %1413, 0
  br i1 %1414, label %1433, label %1415

1415:                                             ; preds = %1395, %1408, %1412
  %1416 = zext i8 %1407 to i64
  %1417 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %1416
  %1418 = load i8, ptr %1417, align 1, !tbaa !9
  %1419 = icmp eq i8 %1418, 44
  br i1 %1419, label %1420, label %1424

1420:                                             ; preds = %1415
  %1421 = getelementptr inbounds %struct.regnode_2, ptr %1397, i64 0, i32 3
  %1422 = load i16, ptr %1421, align 2, !tbaa !170
  %1423 = icmp eq i16 %1422, 0
  br i1 %1423, label %1424, label %1430

1424:                                             ; preds = %1420, %1415
  %1425 = icmp eq i8 %1407, 40
  br i1 %1425, label %1426, label %1470

1426:                                             ; preds = %1424
  %1427 = getelementptr inbounds %struct.regnode, ptr %1405, i64 0, i32 1
  %1428 = load i8, ptr %1427, align 1, !tbaa !164
  %1429 = icmp ult i8 %1428, 2
  br i1 %1429, label %1473, label %1433

1430:                                             ; preds = %1420
  %1431 = icmp eq i8 %1407, 43
  br i1 %1431, label %1442, label %1433

1432:                                             ; preds = %1395
  br label %1433

1433:                                             ; preds = %1430, %1395, %1426, %1408, %1412, %1432
  %1434 = phi i32 [ %1401, %1432 ], [ 1, %1412 ], [ %1401, %1395 ], [ %1401, %1426 ], [ %1401, %1408 ], [ %1401, %1430 ]
  %1435 = phi i32 [ %1399, %1432 ], [ %1399, %1412 ], [ 1, %1395 ], [ %1399, %1426 ], [ %1399, %1408 ], [ %1399, %1430 ]
  %1436 = phi i32 [ 1, %1432 ], [ %1398, %1412 ], [ %1398, %1395 ], [ %1398, %1426 ], [ %1398, %1408 ], [ %1398, %1430 ]
  %1437 = zext i8 %1407 to i64
  %1438 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %1437
  %1439 = load i8, ptr %1438, align 1, !tbaa !9
  %1440 = zext i8 %1439 to i64
  %1441 = getelementptr inbounds %struct.regnode, ptr %1397, i64 %1440
  br label %1442

1442:                                             ; preds = %1430, %1395, %1433
  %1443 = phi ptr [ %1441, %1433 ], [ %1397, %1430 ], [ %1397, %1395 ]
  %1444 = phi i32 [ %1434, %1433 ], [ %1401, %1430 ], [ %1401, %1395 ]
  %1445 = phi i32 [ %1435, %1433 ], [ %1399, %1430 ], [ %1399, %1395 ]
  %1446 = phi i32 [ %1436, %1433 ], [ %1398, %1430 ], [ %1398, %1395 ]
  %1447 = phi i32 [ %1400, %1433 ], [ 1, %1430 ], [ 1, %1395 ]
  %1448 = getelementptr inbounds %struct.regnode, ptr %1443, i64 1
  %1449 = getelementptr inbounds %struct.regnode, ptr %1443, i64 1, i32 1
  %1450 = load i8, ptr %1449, align 1, !tbaa !164
  %1451 = icmp ugt i8 %1450, 93
  br i1 %1451, label %1452, label %1455

1452:                                             ; preds = %1442
  %1453 = zext i8 %1450 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1453, i32 noundef 93) #21
  %1454 = load i8, ptr %1449, align 1, !tbaa !164
  br label %1455

1455:                                             ; preds = %1452, %1442
  %1456 = phi i8 [ %1454, %1452 ], [ %1450, %1442 ]
  %1457 = zext i8 %1456 to i64
  %1458 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1457
  %1459 = load i8, ptr %1458, align 1, !tbaa !9
  %1460 = icmp eq i8 %1459, 0
  br i1 %1460, label %1464, label %1461

1461:                                             ; preds = %1455
  %1462 = getelementptr inbounds %struct.regnode, ptr %1443, i64 2
  %1463 = load i32, ptr %1462, align 4, !tbaa !166
  br label %1468

1464:                                             ; preds = %1455
  %1465 = getelementptr inbounds %struct.regnode, ptr %1443, i64 1, i32 2
  %1466 = load i16, ptr %1465, align 2, !tbaa !168
  %1467 = zext i16 %1466 to i32
  br label %1468

1468:                                             ; preds = %1464, %1461
  %1469 = phi i32 [ %1463, %1461 ], [ %1467, %1464 ]
  br label %1395, !llvm.loop !172

1470:                                             ; preds = %1424
  %1471 = add nsw i64 %1416, -31
  %1472 = icmp ult i64 %1471, 9
  br i1 %1472, label %1479, label %1473

1473:                                             ; preds = %1426, %1470
  %1474 = icmp eq i32 %1399, 0
  %1475 = icmp eq i32 %1401, 0
  %1476 = load i32, ptr %343, align 4
  %1477 = icmp eq i32 %1476, 0
  %1478 = select i1 %1477, i1 %1475, i1 false
  br label %1484

1479:                                             ; preds = %1730, %1470
  %1480 = phi ptr [ %1397, %1470 ], [ %1732, %1730 ]
  %1481 = phi i8 [ %1407, %1470 ], [ %1734, %1730 ]
  store ptr %1480, ptr %20, align 8, !tbaa !5
  %1482 = add i8 %1481, -31
  %1483 = icmp ult i8 %1482, 2
  br i1 %1483, label %1769, label %1767

1484:                                             ; preds = %1473, %1730
  %1485 = phi i64 [ %1416, %1473 ], [ %1735, %1730 ]
  %1486 = phi i8 [ %1407, %1473 ], [ %1734, %1730 ]
  %1487 = phi ptr [ %1397, %1473 ], [ %1732, %1730 ]
  %1488 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %1485
  %1489 = load i8, ptr %1488, align 1, !tbaa !9
  %1490 = icmp eq i8 %1489, 72
  br i1 %1490, label %1491, label %1709

1491:                                             ; preds = %1484
  %1492 = load ptr, ptr %1331, align 8, !tbaa !26
  %1493 = getelementptr inbounds %struct.regnode_1, ptr %1487, i64 0, i32 3
  %1494 = load i32, ptr %1493, align 4, !tbaa !166
  %1495 = zext i32 %1494 to i64
  %1496 = getelementptr inbounds %struct.reg_data, ptr %1492, i64 0, i32 2, i64 %1495
  %1497 = load ptr, ptr %1496, align 8, !tbaa !5
  %1498 = getelementptr inbounds %struct._reg_trie_data, ptr %1497, i64 0, i32 10
  %1499 = load i64, ptr %1498, align 8, !tbaa !173
  %1500 = icmp eq i64 %1499, 0
  br i1 %1500, label %1709, label %1501

1501:                                             ; preds = %1491
  store ptr %1487, ptr %20, align 8, !tbaa !5
  %1502 = getelementptr inbounds %struct.regnode, ptr %1487, i64 0, i32 1
  %1503 = load ptr, ptr %1286, align 8, !tbaa !156
  %1504 = getelementptr inbounds %struct.regexp_internal, ptr %1503, i64 0, i32 3
  %1505 = load ptr, ptr %1504, align 8, !tbaa !26
  %1506 = getelementptr inbounds %struct.reg_data, ptr %1505, i64 0, i32 2, i64 %1495
  %1507 = load ptr, ptr %1506, align 8, !tbaa !5
  %1508 = getelementptr inbounds %struct._reg_trie_data, ptr %1507, i64 0, i32 8
  %1509 = load i16, ptr %1508, align 8, !tbaa !174
  %1510 = zext i16 %1509 to i32
  %1511 = getelementptr inbounds %struct._reg_trie_data, ptr %1507, i64 0, i32 13
  %1512 = load i32, ptr %1511, align 4, !tbaa !175
  %1513 = getelementptr inbounds %struct._reg_trie_data, ptr %1507, i64 0, i32 1
  %1514 = load i32, ptr %1513, align 4, !tbaa !176
  %1515 = add i32 %1514, %1510
  %1516 = getelementptr inbounds %struct._reg_trie_data, ptr %1507, i64 0, i32 3
  %1517 = load ptr, ptr %1516, align 8, !tbaa !39
  %1518 = getelementptr inbounds %struct._reg_trie_state, ptr %1517, i64 1, i32 1
  %1519 = load i32, ptr %1518, align 8, !tbaa !9
  %1520 = load i32, ptr %1505, align 8, !tbaa !27
  %1521 = add i32 %1520, 1
  %1522 = zext i32 %1520 to i64
  %1523 = shl nuw nsw i64 %1522, 3
  %1524 = add nuw nsw i64 %1523, 24
  %1525 = call ptr @Perl_safesysrealloc(ptr noundef nonnull %1505, i64 noundef %1524) #21
  %1526 = load ptr, ptr %1286, align 8, !tbaa !156
  %1527 = getelementptr inbounds %struct.regexp_internal, ptr %1526, i64 0, i32 3
  store ptr %1525, ptr %1527, align 8, !tbaa !26
  %1528 = icmp eq i32 %1520, 0
  br i1 %1528, label %1534, label %1529

1529:                                             ; preds = %1501
  %1530 = getelementptr inbounds %struct.reg_data, ptr %1525, i64 0, i32 1
  %1531 = load ptr, ptr %1530, align 8, !tbaa !29
  %1532 = zext i32 %1521 to i64
  %1533 = call ptr @Perl_safesysrealloc(ptr noundef %1531, i64 noundef %1532) #21
  br label %1536

1534:                                             ; preds = %1501
  %1535 = call ptr @Perl_safesysmalloc(i64 noundef 1) #21
  br label %1536

1536:                                             ; preds = %1534, %1529
  %1537 = phi ptr [ %1533, %1529 ], [ %1535, %1534 ]
  %1538 = load ptr, ptr %1286, align 8, !tbaa !156
  %1539 = getelementptr inbounds %struct.regexp_internal, ptr %1538, i64 0, i32 3
  %1540 = load ptr, ptr %1539, align 8, !tbaa !26
  %1541 = getelementptr inbounds %struct.reg_data, ptr %1540, i64 0, i32 1
  store ptr %1537, ptr %1541, align 8, !tbaa !29
  store i32 %1521, ptr %1540, align 8, !tbaa !27
  %1542 = getelementptr inbounds i8, ptr %1537, i64 %1522
  store i8 84, ptr %1542, align 1
  %1543 = load i8, ptr %1502, align 1, !tbaa !164
  %1544 = icmp eq i8 %1543, 72
  br i1 %1544, label %1545, label %1548

1545:                                             ; preds = %1536
  %1546 = call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 1, i64 noundef 8) #22
  %1547 = load i64, ptr %1487, align 4
  store i64 %1547, ptr %1546, align 4
  br label %1550

1548:                                             ; preds = %1536
  %1549 = call noalias dereferenceable_or_null(40) ptr @calloc(i64 noundef 1, i64 noundef 40) #22
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(40) %1549, ptr noundef nonnull align 4 dereferenceable(40) %1487, i64 40, i1 false), !tbaa.struct !177
  br label %1550

1550:                                             ; preds = %1548, %1545
  %1551 = phi ptr [ %1546, %1545 ], [ %1549, %1548 ]
  %1552 = getelementptr inbounds %struct.regnode, ptr %1551, i64 0, i32 1
  %1553 = load i8, ptr %1552, align 1, !tbaa !164
  %1554 = add i8 %1553, 2
  store i8 %1554, ptr %1552, align 1, !tbaa !164
  %1555 = getelementptr inbounds %struct.regnode_1, ptr %1551, i64 0, i32 3
  store i32 %1520, ptr %1555, align 4, !tbaa !166
  %1556 = call noalias dereferenceable_or_null(24) ptr @calloc(i64 noundef 1, i64 noundef 24) #22
  %1557 = load ptr, ptr %1286, align 8, !tbaa !156
  %1558 = getelementptr inbounds %struct.regexp_internal, ptr %1557, i64 0, i32 3
  %1559 = load ptr, ptr %1558, align 8, !tbaa !26
  %1560 = getelementptr inbounds %struct.reg_data, ptr %1559, i64 0, i32 2, i64 %1522
  store ptr %1556, ptr %1560, align 8, !tbaa !5
  %1561 = getelementptr inbounds %struct._reg_ac_data, ptr %1556, i64 0, i32 1
  store i32 %1494, ptr %1561, align 4, !tbaa !178
  %1562 = zext i32 %1512 to i64
  %1563 = shl nuw nsw i64 %1562, 4
  %1564 = call noalias ptr @malloc(i64 noundef %1563) #23
  %1565 = getelementptr inbounds %struct._reg_ac_data, ptr %1556, i64 0, i32 3
  store ptr %1564, ptr %1565, align 8, !tbaa !32
  %1566 = load ptr, ptr %1516, align 8, !tbaa !39
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1564, ptr align 1 %1566, i64 %1563, i1 false)
  %1567 = call ptr @Perl_safesyscalloc(i64 noundef %1562, i64 noundef 4) #21
  %1568 = call noalias ptr @calloc(i64 noundef %1562, i64 noundef 4) #22
  %1569 = getelementptr inbounds %struct._reg_ac_data, ptr %1556, i64 0, i32 2
  store ptr %1568, ptr %1569, align 8, !tbaa !33
  store i32 1, ptr %1556, align 8, !tbaa !30
  %1570 = getelementptr inbounds i32, ptr %1568, i64 1
  store i32 1, ptr %1570, align 4, !tbaa !150
  store i32 1, ptr %1568, align 4, !tbaa !150
  %1571 = icmp eq i16 %1509, 0
  br i1 %1571, label %1708, label %1572

1572:                                             ; preds = %1550
  %1573 = getelementptr inbounds %struct._reg_trie_data, ptr %1507, i64 0, i32 4
  %1574 = sub i32 %1519, %1510
  %1575 = zext i16 %1509 to i64
  br label %1679

1576:                                             ; preds = %1704
  %1577 = icmp eq i32 %1705, 0
  br i1 %1577, label %1708, label %1578

1578:                                             ; preds = %1576
  %1579 = load ptr, ptr %1516, align 8, !tbaa !39
  br label %1580

1580:                                             ; preds = %1676, %1578
  %1581 = phi i32 [ %1677, %1676 ], [ 0, %1578 ]
  %1582 = phi i32 [ %1669, %1676 ], [ %1705, %1578 ]
  %1583 = urem i32 %1581, %1512
  %1584 = zext i32 %1583 to i64
  %1585 = getelementptr inbounds i32, ptr %1567, i64 %1584
  %1586 = load i32, ptr %1585, align 4, !tbaa !150
  %1587 = zext i32 %1586 to i64
  %1588 = getelementptr inbounds %struct._reg_trie_state, ptr %1579, i64 %1587, i32 1
  %1589 = load i32, ptr %1588, align 8, !tbaa !9
  %1590 = sub i32 %1589, %1510
  %1591 = icmp eq i32 %1586, 1
  %1592 = zext i1 %1591 to i32
  br label %1593

1593:                                             ; preds = %1668, %1580
  %1594 = phi i64 [ 0, %1580 ], [ %1670, %1668 ]
  %1595 = phi i32 [ %1582, %1580 ], [ %1669, %1668 ]
  %1596 = trunc i64 %1594 to i32
  %1597 = add i32 %1589, %1596
  %1598 = icmp uge i32 %1597, %1510
  %1599 = icmp ult i32 %1597, %1515
  %1600 = select i1 %1598, i1 %1599, i1 false
  br i1 %1600, label %1601, label %1614

1601:                                             ; preds = %1593
  %1602 = load ptr, ptr %1573, align 8, !tbaa !40
  %1603 = add i32 %1590, %1596
  %1604 = zext i32 %1603 to i64
  %1605 = getelementptr inbounds %struct._reg_trie_trans, ptr %1602, i64 %1604, i32 1
  %1606 = load i32, ptr %1605, align 4, !tbaa !179
  %1607 = icmp eq i32 %1586, %1606
  br i1 %1607, label %1608, label %1614

1608:                                             ; preds = %1601
  %1609 = getelementptr inbounds %struct._reg_trie_trans, ptr %1602, i64 %1604
  %1610 = load i32, ptr %1609, align 4, !tbaa !181
  %1611 = icmp ne i32 %1610, 0
  %1612 = or i1 %1591, %1611
  %1613 = select i1 %1611, i32 %1610, i32 %1592
  br i1 %1612, label %1672, label %1668

1614:                                             ; preds = %1601, %1593
  br i1 %1591, label %1672, label %1668

1615:                                             ; preds = %1644, %1672
  %1616 = phi i32 [ %1586, %1672 ], [ %1619, %1644 ]
  %1617 = zext i32 %1616 to i64
  %1618 = getelementptr inbounds i32, ptr %1568, i64 %1617
  %1619 = load i32, ptr %1618, align 4, !tbaa !150
  %1620 = zext i32 %1619 to i64
  %1621 = getelementptr inbounds %struct._reg_trie_state, ptr %1674, i64 %1620, i32 1
  %1622 = load i32, ptr %1621, align 8, !tbaa !9
  %1623 = add i32 %1622, %1596
  %1624 = icmp uge i32 %1623, %1510
  %1625 = icmp ult i32 %1623, %1515
  %1626 = select i1 %1624, i1 %1625, i1 false
  br i1 %1626, label %1629, label %1627

1627:                                             ; preds = %1615
  %1628 = icmp eq i32 %1619, 1
  br i1 %1628, label %1647, label %1644

1629:                                             ; preds = %1615
  %1630 = load ptr, ptr %1573, align 8, !tbaa !40
  %1631 = add i32 %1675, %1622
  %1632 = zext i32 %1631 to i64
  %1633 = getelementptr inbounds %struct._reg_trie_trans, ptr %1630, i64 %1632, i32 1
  %1634 = load i32, ptr %1633, align 4, !tbaa !179
  %1635 = icmp eq i32 %1619, %1634
  br i1 %1635, label %1636, label %1642

1636:                                             ; preds = %1629
  %1637 = getelementptr inbounds %struct._reg_trie_trans, ptr %1630, i64 %1632
  %1638 = load i32, ptr %1637, align 4, !tbaa !181
  %1639 = icmp ne i32 %1638, 0
  %1640 = icmp eq i32 %1619, 1
  %1641 = or i1 %1640, %1639
  br i1 %1641, label %1645, label %1644

1642:                                             ; preds = %1629
  %1643 = icmp eq i32 %1619, 1
  br i1 %1643, label %1647, label %1644

1644:                                             ; preds = %1642, %1636, %1627
  br label %1615, !llvm.loop !182

1645:                                             ; preds = %1636
  %1646 = icmp eq i32 %1638, 0
  br i1 %1646, label %1647, label %1650

1647:                                             ; preds = %1642, %1627, %1645
  %1648 = icmp eq i32 %1619, 1
  %1649 = zext i1 %1648 to i32
  br label %1650

1650:                                             ; preds = %1647, %1645
  %1651 = phi i32 [ %1649, %1647 ], [ %1638, %1645 ]
  %1652 = zext i32 %1673 to i64
  %1653 = getelementptr inbounds i32, ptr %1568, i64 %1652
  store i32 %1651, ptr %1653, align 4, !tbaa !150
  %1654 = getelementptr inbounds %struct._reg_trie_state, ptr %1674, i64 %1652
  %1655 = load i16, ptr %1654, align 8, !tbaa !183
  %1656 = icmp eq i16 %1655, 0
  br i1 %1656, label %1657, label %1663

1657:                                             ; preds = %1650
  %1658 = zext i32 %1651 to i64
  %1659 = getelementptr inbounds %struct._reg_trie_state, ptr %1674, i64 %1658
  %1660 = load i16, ptr %1659, align 8, !tbaa !183
  %1661 = icmp eq i16 %1660, 0
  br i1 %1661, label %1663, label %1662

1662:                                             ; preds = %1657
  store i16 %1660, ptr %1654, align 8, !tbaa !183
  br label %1663

1663:                                             ; preds = %1662, %1657, %1650
  %1664 = add i32 %1595, 1
  %1665 = urem i32 %1595, %1512
  %1666 = zext i32 %1665 to i64
  %1667 = getelementptr inbounds i32, ptr %1567, i64 %1666
  store i32 %1673, ptr %1667, align 4, !tbaa !150
  br label %1668

1668:                                             ; preds = %1663, %1614, %1608
  %1669 = phi i32 [ %1664, %1663 ], [ %1595, %1614 ], [ %1595, %1608 ]
  %1670 = add nuw nsw i64 %1594, 1
  %1671 = icmp eq i64 %1670, %1575
  br i1 %1671, label %1676, label %1593, !llvm.loop !185

1672:                                             ; preds = %1614, %1608
  %1673 = phi i32 [ 1, %1614 ], [ %1613, %1608 ]
  %1674 = load ptr, ptr %1565, align 8, !tbaa !32
  %1675 = sub i32 %1596, %1510
  br label %1615

1676:                                             ; preds = %1668
  %1677 = add nuw i32 %1581, 1
  %1678 = icmp ult i32 %1677, %1669
  br i1 %1678, label %1580, label %1708, !llvm.loop !186

1679:                                             ; preds = %1704, %1572
  %1680 = phi i64 [ 0, %1572 ], [ %1706, %1704 ]
  %1681 = phi i32 [ 0, %1572 ], [ %1705, %1704 ]
  %1682 = trunc i64 %1680 to i32
  %1683 = add i32 %1519, %1682
  %1684 = icmp uge i32 %1683, %1510
  %1685 = icmp ult i32 %1683, %1515
  %1686 = select i1 %1684, i1 %1685, i1 false
  br i1 %1686, label %1687, label %1704

1687:                                             ; preds = %1679
  %1688 = load ptr, ptr %1573, align 8, !tbaa !40
  %1689 = add i32 %1574, %1682
  %1690 = zext i32 %1689 to i64
  %1691 = getelementptr inbounds %struct._reg_trie_trans, ptr %1688, i64 %1690, i32 1
  %1692 = load i32, ptr %1691, align 4, !tbaa !179
  %1693 = icmp eq i32 %1692, 1
  br i1 %1693, label %1694, label %1704

1694:                                             ; preds = %1687
  %1695 = getelementptr inbounds %struct._reg_trie_trans, ptr %1688, i64 %1690
  %1696 = load i32, ptr %1695, align 4, !tbaa !181
  %1697 = icmp eq i32 %1696, 0
  br i1 %1697, label %1704, label %1698

1698:                                             ; preds = %1694
  %1699 = zext i32 %1681 to i64
  %1700 = getelementptr inbounds i32, ptr %1567, i64 %1699
  store i32 %1696, ptr %1700, align 4, !tbaa !150
  %1701 = add i32 %1681, 1
  %1702 = zext i32 %1696 to i64
  %1703 = getelementptr inbounds i32, ptr %1568, i64 %1702
  store i32 1, ptr %1703, align 4, !tbaa !150
  br label %1704

1704:                                             ; preds = %1698, %1694, %1687, %1679
  %1705 = phi i32 [ %1701, %1698 ], [ %1681, %1694 ], [ %1681, %1687 ], [ %1681, %1679 ]
  %1706 = add nuw nsw i64 %1680, 1
  %1707 = icmp eq i64 %1706, %1575
  br i1 %1707, label %1576, label %1679, !llvm.loop !187

1708:                                             ; preds = %1676, %1550, %1576
  store i32 0, ptr %1570, align 4, !tbaa !150
  store i32 0, ptr %1568, align 4, !tbaa !150
  call void @Perl_safesysfree(ptr noundef %1567) #21
  br label %1767

1709:                                             ; preds = %1491, %1484
  %1710 = zext i8 %1486 to i32
  %1711 = lshr i32 %1710, 3
  %1712 = zext i32 %1711 to i64
  %1713 = getelementptr inbounds [12 x i8], ptr @PL_simple_bitmask, i64 0, i64 %1712
  %1714 = load i8, ptr %1713, align 1, !tbaa !9
  %1715 = zext i8 %1714 to i32
  %1716 = and i32 %1710, 7
  %1717 = shl nuw nsw i32 1, %1716
  %1718 = and i32 %1717, %1715
  %1719 = icmp eq i32 %1718, 0
  br i1 %1719, label %1720, label %1767

1720:                                             ; preds = %1709
  %1721 = and i8 %1486, -4
  switch i8 %1721, label %1722 [
    i8 12, label %1767
    i8 8, label %1767
  ]

1722:                                             ; preds = %1720
  %1723 = and i8 %1486, -2
  %1724 = icmp eq i8 %1723, 2
  br i1 %1724, label %1725, label %1738

1725:                                             ; preds = %1722
  %1726 = icmp eq i8 %1486, 3
  %1727 = select i1 %1726, i32 1024, i32 2048
  %1728 = load i32, ptr %1252, align 4, !tbaa !61
  %1729 = or i32 %1728, %1727
  br label %1730

1730:                                             ; preds = %1725, %1740, %1763
  %1731 = phi i32 [ %1729, %1725 ], [ %1742, %1740 ], [ %1766, %1763 ]
  store i32 %1731, ptr %1252, align 4, !tbaa !61
  %1732 = getelementptr inbounds %struct.regnode, ptr %1487, i64 1
  %1733 = getelementptr inbounds %struct.regnode, ptr %1487, i64 1, i32 1
  %1734 = load i8, ptr %1733, align 1, !tbaa !164
  %1735 = zext i8 %1734 to i64
  %1736 = add nsw i64 %1735, -31
  %1737 = icmp ult i64 %1736, 9
  br i1 %1737, label %1479, label %1484

1738:                                             ; preds = %1722
  %1739 = icmp eq i8 %1486, 7
  br i1 %1739, label %1740, label %1743

1740:                                             ; preds = %1738
  %1741 = load i32, ptr %1252, align 4, !tbaa !61
  %1742 = or i32 %1741, 4096
  br label %1730

1743:                                             ; preds = %1738
  br i1 %1474, label %1747, label %1744

1744:                                             ; preds = %1743
  %1745 = icmp eq i8 %1486, 42
  %1746 = and i1 %1745, %1478
  br i1 %1746, label %1750, label %1769

1747:                                             ; preds = %1743
  br i1 %1475, label %1748, label %1787

1748:                                             ; preds = %1747
  %1749 = icmp eq i8 %1486, 42
  br i1 %1749, label %1750, label %1769

1750:                                             ; preds = %1744, %1748
  %1751 = getelementptr inbounds %struct.regnode, ptr %1487, i64 1, i32 1
  %1752 = load i8, ptr %1751, align 1, !tbaa !164
  %1753 = zext i8 %1752 to i64
  %1754 = add nsw i64 %1753, -16
  %1755 = icmp ult i64 %1754, 3
  br i1 %1755, label %1756, label %1769

1756:                                             ; preds = %1750
  %1757 = load i32, ptr %1252, align 4, !tbaa !61
  %1758 = and i32 %1757, 7168
  %1759 = icmp eq i32 %1758, 0
  %1760 = load i32, ptr %108, align 8
  %1761 = icmp eq i32 %1760, 0
  %1762 = select i1 %1759, i1 %1761, i1 false
  br i1 %1762, label %1763, label %1769

1763:                                             ; preds = %1756
  %1764 = icmp eq i8 %1752, 16
  %1765 = select i1 %1764, i32 1026, i32 2050
  %1766 = or i32 %1757, %1765
  br label %1730

1767:                                             ; preds = %1720, %1720, %1709, %1479, %1708
  %1768 = phi ptr [ %1551, %1708 ], [ %1480, %1479 ], [ %1487, %1709 ], [ %1487, %1720 ], [ %1487, %1720 ]
  store ptr %1768, ptr %1318, align 8, !tbaa !34
  br label %1769

1769:                                             ; preds = %1756, %1750, %1748, %1744, %1767, %1479
  %1770 = phi i32 [ %1399, %1479 ], [ %1399, %1767 ], [ 1, %1744 ], [ %1399, %1748 ], [ %1399, %1750 ], [ %1399, %1756 ]
  %1771 = icmp eq i32 %1400, 0
  %1772 = icmp ne i32 %1398, 0
  %1773 = select i1 %1771, i1 true, i1 %1772
  %1774 = icmp ne i32 %1401, 0
  %1775 = select i1 %1773, i1 true, i1 %1774
  br i1 %1775, label %1787, label %1776

1776:                                             ; preds = %1769
  %1777 = icmp eq i32 %1770, 0
  %1778 = load i32, ptr %343, align 4
  %1779 = icmp eq i32 %1778, 0
  %1780 = select i1 %1777, i1 true, i1 %1779
  %1781 = load i32, ptr %108, align 8
  %1782 = icmp eq i32 %1781, 0
  %1783 = select i1 %1780, i1 %1782, i1 false
  br i1 %1783, label %1784, label %1787

1784:                                             ; preds = %1776
  %1785 = load i32, ptr %1252, align 4, !tbaa !61
  %1786 = or i32 %1785, 1
  store i32 %1786, ptr %1252, align 4, !tbaa !61
  br label %1787

1787:                                             ; preds = %1747, %1776, %1784, %1769
  %1788 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  store ptr %1788, ptr %1332, align 8, !tbaa !188
  %1789 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  store ptr %1789, ptr %1333, align 8, !tbaa !190
  %1790 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  store ptr %1790, ptr %1334, align 8, !tbaa !191
  store ptr %1332, ptr %1335, align 8, !tbaa !192
  call void @Perl_push_scope() #21
  %1791 = load ptr, ptr %1332, align 8, !tbaa !188
  call void @Perl_save_pushptr(ptr noundef %1791, i32 noundef 11) #21
  %1792 = load ptr, ptr %1333, align 8, !tbaa !190
  call void @Perl_save_pushptr(ptr noundef %1792, i32 noundef 11) #21
  %1793 = load ptr, ptr %1334, align 8, !tbaa !191
  call void @Perl_save_pushptr(ptr noundef %1793, i32 noundef 11) #21
  store ptr %1295, ptr %20, align 8, !tbaa !5
  %1794 = load ptr, ptr %1318, align 8, !tbaa !34
  %1795 = icmp eq ptr %1794, null
  br i1 %1795, label %1796, label %1821

1796:                                             ; preds = %1787
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %18, i8 0, i64 56, i1 false)
  store i8 19, ptr %1336, align 1, !tbaa !193
  store i16 1, ptr %1337, align 2, !tbaa !194
  store i32 -1, ptr %1338, align 4, !tbaa !166
  %1797 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %1798 = getelementptr inbounds %struct.sv, ptr %1797, i64 0, i32 2
  %1799 = load i32, ptr %1798, align 4, !tbaa !62
  %1800 = and i32 %1799, 268435456
  %1801 = icmp eq i32 %1800, 0
  br i1 %1801, label %1802, label %1807

1802:                                             ; preds = %1796
  %1803 = load ptr, ptr %1797, align 8, !tbaa !63
  %1804 = getelementptr inbounds %struct.xpv, ptr %1803, i64 0, i32 3
  %1805 = load i64, ptr %1804, align 8, !tbaa !9
  %1806 = icmp ult i64 %1805, 25
  br i1 %1806, label %1807, label %1810

1807:                                             ; preds = %1802, %1796
  %1808 = call ptr @Perl_sv_grow(ptr noundef nonnull %1797, i64 noundef 25) #21
  %1809 = load ptr, ptr %1797, align 8, !tbaa !63
  br label %1810

1810:                                             ; preds = %1802, %1807
  %1811 = phi ptr [ %1803, %1802 ], [ %1809, %1807 ]
  %1812 = getelementptr inbounds %struct.xpv, ptr %1811, i64 0, i32 2
  store i64 0, ptr %1812, align 8, !tbaa !72
  %1813 = getelementptr inbounds %struct.xpvinvlist, ptr %1811, i64 0, i32 5
  store i64 -1, ptr %1813, align 8, !tbaa !71
  %1814 = getelementptr inbounds %struct.xpvinvlist, ptr %1811, i64 0, i32 4
  store i64 0, ptr %1814, align 8, !tbaa !71
  %1815 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %1797) #21
  store ptr %1815, ptr %1339, align 8, !tbaa !195
  call fastcc void @S__append_range_to_invlist(ptr noundef %1815, i64 noundef 0, i64 noundef -1)
  %1816 = load i8, ptr %18, align 8, !tbaa !196
  %1817 = or i8 %1816, 1
  store i8 %1817, ptr %18, align 8, !tbaa !196
  %1818 = load i32, ptr %323, align 8, !tbaa !100
  %1819 = icmp eq i32 %1818, 0
  %1820 = select i1 %1819, i32 0, i32 536870911
  store i32 %1820, ptr %1340, align 8
  store ptr %18, ptr %1325, align 8, !tbaa !197
  br label %1821

1821:                                             ; preds = %1787, %1810
  %1822 = phi i32 [ 2048, %1810 ], [ 0, %1787 ]
  store ptr %19, ptr %1326, align 8, !tbaa !198
  %1823 = load i64, ptr %357, align 8, !tbaa !144
  %1824 = getelementptr inbounds %struct.regnode, ptr %1295, i64 %1823
  %1825 = select i1 %1342, i32 9216, i32 74752
  %1826 = or i32 %1825, %1822
  %1827 = call fastcc i64 @S_study_chunk(ptr noundef nonnull %15, ptr noundef nonnull %20, ptr noundef nonnull %12, ptr noundef nonnull %17, ptr noundef nonnull %1824, ptr noundef nonnull %14, i32 noundef -1, i32 noundef 0, i32 noundef %1826, i32 noundef 0)
  store i64 %1827, ptr %12, align 8, !tbaa !71
  %1828 = load i32, ptr %1327, align 8, !tbaa !199
  %1829 = and i32 %1828, 16384
  %1830 = icmp ne i32 %1829, 0
  %1831 = and i1 %1830, %1342
  br i1 %1831, label %2180, label %1832

1832:                                             ; preds = %1821
  %1833 = load i32, ptr %355, align 8, !tbaa !142
  %1834 = icmp eq i32 %1833, 1
  %1835 = load ptr, ptr %1335, align 8
  %1836 = icmp eq ptr %1835, %1332
  %1837 = select i1 %1834, i1 %1836, i1 false
  %1838 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 4
  %1839 = load i64, ptr %1838, align 8
  %1840 = icmp eq i64 %1839, 0
  %1841 = select i1 %1837, i1 %1840, i1 false
  %1842 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 3
  %1843 = load i64, ptr %1842, align 8
  %1844 = icmp sgt i64 %1843, 0
  %1845 = select i1 %1841, i1 %1844, i1 false
  %1846 = load i32, ptr %347, align 4
  %1847 = icmp eq i32 %1846, 0
  %1848 = select i1 %1845, i1 %1847, i1 false
  br i1 %1848, label %1849, label %1856

1849:                                             ; preds = %1832
  %1850 = load i32, ptr %344, align 8, !tbaa !131
  %1851 = and i32 %1850, 132
  %1852 = icmp eq i32 %1851, 0
  br i1 %1852, label %1853, label %1856

1853:                                             ; preds = %1849
  %1854 = load i32, ptr %1098, align 8, !tbaa !45
  %1855 = or i32 %1854, 524288
  store i32 %1855, ptr %1098, align 8, !tbaa !45
  br label %1856

1856:                                             ; preds = %1853, %1849, %1832
  call fastcc void @S_scan_commit(ptr noundef nonnull %15, ptr noundef nonnull %14, ptr noundef nonnull %12, i32 noundef 0)
  %1857 = load i32, ptr %321, align 8, !tbaa !98
  %1858 = icmp eq i32 %1857, 0
  %1859 = load ptr, ptr %1333, align 8, !tbaa !190
  br i1 %1858, label %1862, label %1860

1860:                                             ; preds = %1856
  %1861 = call i64 @Perl_sv_len_utf8(ptr noundef %1859) #21
  br label %1866

1862:                                             ; preds = %1856
  %1863 = load ptr, ptr %1859, align 8, !tbaa !63
  %1864 = getelementptr inbounds %struct.xpv, ptr %1863, i64 0, i32 2
  %1865 = load i64, ptr %1864, align 8, !tbaa !72
  br label %1866

1866:                                             ; preds = %1862, %1860
  %1867 = phi i64 [ %1861, %1860 ], [ %1865, %1862 ]
  %1868 = load ptr, ptr %1332, align 8, !tbaa !188
  %1869 = load ptr, ptr %1868, align 8, !tbaa !63
  %1870 = getelementptr inbounds %struct.xpv, ptr %1869, i64 0, i32 2
  %1871 = load i64, ptr %1870, align 8, !tbaa !72
  %1872 = icmp eq i64 %1871, 0
  br i1 %1872, label %1873, label %1877

1873:                                             ; preds = %1866
  %1874 = load ptr, ptr %1333, align 8, !tbaa !190
  %1875 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 12
  %1876 = load i64, ptr %1875, align 8, !tbaa !200
  br label %1891

1877:                                             ; preds = %1866
  %1878 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 8
  %1879 = load i64, ptr %1878, align 8, !tbaa !201
  %1880 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 12
  %1881 = load i64, ptr %1880, align 8, !tbaa !200
  %1882 = icmp eq i64 %1879, %1881
  %1883 = load ptr, ptr %1333, align 8, !tbaa !190
  br i1 %1882, label %1884, label %1891

1884:                                             ; preds = %1877
  %1885 = load ptr, ptr %1883, align 8, !tbaa !63
  %1886 = getelementptr inbounds %struct.xpv, ptr %1885, i64 0, i32 2
  %1887 = load i64, ptr %1886, align 8, !tbaa !72
  %1888 = icmp eq i64 %1871, %1887
  br i1 %1888, label %1889, label %1891

1889:                                             ; preds = %1884
  %1890 = load ptr, ptr %1310, align 8, !tbaa !13
  br label %1961

1891:                                             ; preds = %1873, %1884, %1877
  %1892 = phi i64 [ %1876, %1873 ], [ %1879, %1884 ], [ %1881, %1877 ]
  %1893 = phi ptr [ %1874, %1873 ], [ %1883, %1884 ], [ %1883, %1877 ]
  %1894 = load ptr, ptr %1310, align 8, !tbaa !13
  %1895 = getelementptr inbounds %struct.reg_substr_data, ptr %1894, i64 0, i32 1, i64 1, i32 3
  %1896 = getelementptr inbounds %struct.reg_substr_data, ptr %1894, i64 0, i32 1, i64 1, i32 2
  %1897 = getelementptr inbounds %struct.reg_substr_data, ptr %1894, i64 0, i32 1, i64 1, i32 4
  %1898 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 15
  %1899 = load i64, ptr %1898, align 8, !tbaa !202
  %1900 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 12
  %1901 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 14
  %1902 = load ptr, ptr %1901, align 8, !tbaa !203
  %1903 = load i32, ptr %1327, align 8, !tbaa !199
  %1904 = and i32 %1903, 48
  %1905 = icmp eq i32 %1904, 0
  %1906 = and i32 %1903, 32
  %1907 = icmp ne i32 %1906, 0
  %1908 = load i32, ptr %15, align 8
  %1909 = load i32, ptr %344, align 8
  %1910 = icmp eq i64 %1867, 0
  br i1 %1910, label %1911, label %1920

1911:                                             ; preds = %1891
  br i1 %1905, label %1961, label %1912

1912:                                             ; preds = %1911
  %1913 = and i32 %1908, 1
  %1914 = icmp ne i32 %1913, 0
  %1915 = xor i1 %1907, true
  %1916 = select i1 %1915, i1 true, i1 %1914
  %1917 = and i32 %1909, 1024
  %1918 = icmp eq i32 %1917, 0
  %1919 = select i1 %1916, i1 %1918, i1 false
  br i1 %1919, label %1923, label %1961

1920:                                             ; preds = %1891
  %1921 = and i32 %1909, 1024
  %1922 = icmp eq i32 %1921, 0
  br i1 %1922, label %1923, label %1961

1923:                                             ; preds = %1920, %1912
  %1924 = getelementptr inbounds %struct.sv, ptr %1893, i64 0, i32 2
  %1925 = load i32, ptr %1924, align 4, !tbaa !62
  %1926 = and i32 %1925, 536870912
  %1927 = icmp eq i32 %1926, 0
  %1928 = select i1 %1927, ptr %1896, ptr %1895
  %1929 = select i1 %1927, ptr %1895, ptr %1896
  store ptr %1893, ptr %1928, align 8, !tbaa !5
  store ptr null, ptr %1929, align 8, !tbaa !5
  %1930 = icmp eq ptr %1902, null
  br i1 %1930, label %1933, label %1931

1931:                                             ; preds = %1923
  %1932 = load i64, ptr %1902, align 8, !tbaa !71
  br label %1933

1933:                                             ; preds = %1931, %1923
  %1934 = phi i64 [ %1932, %1931 ], [ %1867, %1923 ]
  %1935 = icmp ugt i32 %1925, -1073741825
  %1936 = zext i1 %1935 to i64
  %1937 = add i64 %1867, %1892
  %1938 = sub i64 %1899, %1937
  %1939 = add i64 %1938, %1936
  %1940 = add i64 %1939, %1934
  store i64 %1940, ptr %1897, align 8, !tbaa !71
  %1941 = and i32 %1908, 1
  %1942 = icmp eq i32 %1941, 0
  %1943 = select i1 %1907, i1 %1942, i1 false
  %1944 = select i1 %1905, i1 true, i1 %1943
  %1945 = select i1 %1944, i32 0, i32 15
  call void @Perl_fbm_compile(ptr noundef nonnull %1893, i32 noundef %1945) #21
  %1946 = load i64, ptr %1900, align 8, !tbaa !200
  %1947 = load i64, ptr %1898, align 8, !tbaa !202
  %1948 = sub nsw i64 %1946, %1947
  %1949 = load ptr, ptr %1310, align 8, !tbaa !13
  %1950 = getelementptr inbounds %struct.reg_substr_data, ptr %1949, i64 0, i32 1, i64 1
  store i64 %1948, ptr %1950, align 8, !tbaa !204
  %1951 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 13
  %1952 = load i64, ptr %1951, align 8, !tbaa !206
  %1953 = getelementptr inbounds %struct.reg_substr_data, ptr %1949, i64 0, i32 1, i64 1, i32 1
  %1954 = icmp eq i64 %1952, 9223372036854775807
  %1955 = sub nsw i64 %1952, %1947
  %1956 = select i1 %1954, i64 9223372036854775807, i64 %1955
  store i64 %1956, ptr %1953, align 8, !tbaa !207
  %1957 = load ptr, ptr %1333, align 8, !tbaa !190
  %1958 = getelementptr inbounds %struct.sv, ptr %1957, i64 0, i32 1
  %1959 = load i32, ptr %1958, align 8, !tbaa !22
  %1960 = add i32 %1959, 1
  store i32 %1960, ptr %1958, align 8, !tbaa !22
  br label %1964

1961:                                             ; preds = %1889, %1912, %1911, %1920
  %1962 = phi ptr [ %1890, %1889 ], [ %1894, %1912 ], [ %1894, %1911 ], [ %1894, %1920 ]
  %1963 = getelementptr inbounds %struct.reg_substr_data, ptr %1962, i64 0, i32 1, i64 1, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1963, i8 0, i64 16, i1 false)
  br label %1964

1964:                                             ; preds = %1961, %1933
  %1965 = phi ptr [ %1962, %1961 ], [ %1949, %1933 ]
  %1966 = phi i64 [ 0, %1961 ], [ %1867, %1933 ]
  %1967 = load i32, ptr %321, align 8, !tbaa !98
  %1968 = icmp eq i32 %1967, 0
  %1969 = load ptr, ptr %1332, align 8, !tbaa !188
  br i1 %1968, label %1974, label %1970

1970:                                             ; preds = %1964
  %1971 = call i64 @Perl_sv_len_utf8(ptr noundef %1969) #21
  %1972 = load ptr, ptr %1332, align 8, !tbaa !188
  %1973 = load ptr, ptr %1310, align 8, !tbaa !13
  br label %1978

1974:                                             ; preds = %1964
  %1975 = load ptr, ptr %1969, align 8, !tbaa !63
  %1976 = getelementptr inbounds %struct.xpv, ptr %1975, i64 0, i32 2
  %1977 = load i64, ptr %1976, align 8, !tbaa !72
  br label %1978

1978:                                             ; preds = %1974, %1970
  %1979 = phi ptr [ %1973, %1970 ], [ %1965, %1974 ]
  %1980 = phi ptr [ %1972, %1970 ], [ %1969, %1974 ]
  %1981 = phi i64 [ %1971, %1970 ], [ %1977, %1974 ]
  %1982 = getelementptr inbounds %struct.reg_substr_data, ptr %1979, i64 0, i32 1, i64 0, i32 3
  %1983 = getelementptr inbounds %struct.reg_substr_data, ptr %1979, i64 0, i32 1, i64 0, i32 2
  %1984 = getelementptr inbounds %struct.reg_substr_data, ptr %1979, i64 0, i32 1, i64 0, i32 4
  %1985 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 10
  %1986 = load i32, ptr %1985, align 8, !tbaa !208
  %1987 = sext i32 %1986 to i64
  %1988 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 8
  %1989 = load i64, ptr %1988, align 8, !tbaa !201
  %1990 = getelementptr inbounds %struct.scan_data_t, ptr %14, i64 0, i32 9
  %1991 = load ptr, ptr %1990, align 8, !tbaa !209
  %1992 = load i32, ptr %1327, align 8, !tbaa !199
  %1993 = and i32 %1992, 12
  %1994 = icmp eq i32 %1993, 0
  %1995 = and i32 %1992, 8
  %1996 = icmp ne i32 %1995, 0
  %1997 = load i32, ptr %15, align 8
  %1998 = load i32, ptr %344, align 8
  %1999 = icmp eq i64 %1981, 0
  br i1 %1999, label %2000, label %2009

2000:                                             ; preds = %1978
  br i1 %1994, label %2045, label %2001

2001:                                             ; preds = %2000
  %2002 = and i32 %1997, 1
  %2003 = icmp ne i32 %2002, 0
  %2004 = xor i1 %1996, true
  %2005 = select i1 %2004, i1 true, i1 %2003
  %2006 = and i32 %1998, 1024
  %2007 = icmp eq i32 %2006, 0
  %2008 = select i1 %2005, i1 %2007, i1 false
  br i1 %2008, label %2012, label %2045

2009:                                             ; preds = %1978
  %2010 = and i32 %1998, 1024
  %2011 = icmp eq i32 %2010, 0
  br i1 %2011, label %2012, label %2045

2012:                                             ; preds = %2009, %2001
  %2013 = getelementptr inbounds %struct.sv, ptr %1980, i64 0, i32 2
  %2014 = load i32, ptr %2013, align 4, !tbaa !62
  %2015 = and i32 %2014, 536870912
  %2016 = icmp eq i32 %2015, 0
  %2017 = select i1 %2016, ptr %1983, ptr %1982
  %2018 = select i1 %2016, ptr %1982, ptr %1983
  store ptr %1980, ptr %2017, align 8, !tbaa !5
  store ptr null, ptr %2018, align 8, !tbaa !5
  %2019 = icmp eq ptr %1991, null
  br i1 %2019, label %2022, label %2020

2020:                                             ; preds = %2012
  %2021 = load i64, ptr %1991, align 8, !tbaa !71
  br label %2022

2022:                                             ; preds = %2020, %2012
  %2023 = phi i64 [ %2021, %2020 ], [ %1981, %2012 ]
  %2024 = icmp ugt i32 %2014, -1073741825
  %2025 = zext i1 %2024 to i64
  %2026 = add i64 %1989, %1981
  %2027 = sub i64 %1987, %2026
  %2028 = add i64 %2027, %2025
  %2029 = add i64 %2028, %2023
  store i64 %2029, ptr %1984, align 8, !tbaa !71
  %2030 = and i32 %1997, 1
  %2031 = icmp eq i32 %2030, 0
  %2032 = select i1 %1996, i1 %2031, i1 false
  %2033 = select i1 %1994, i1 true, i1 %2032
  %2034 = select i1 %2033, i32 0, i32 15
  call void @Perl_fbm_compile(ptr noundef nonnull %1980, i32 noundef %2034) #21
  %2035 = load i64, ptr %1988, align 8, !tbaa !201
  %2036 = load i32, ptr %1985, align 8, !tbaa !208
  %2037 = sext i32 %2036 to i64
  %2038 = sub nsw i64 %2035, %2037
  %2039 = load ptr, ptr %1310, align 8, !tbaa !13
  %2040 = getelementptr inbounds %struct.reg_substr_data, ptr %2039, i64 0, i32 1
  store i64 %2038, ptr %2040, align 8, !tbaa !204
  %2041 = load ptr, ptr %1332, align 8, !tbaa !188
  %2042 = getelementptr inbounds %struct.sv, ptr %2041, i64 0, i32 1
  %2043 = load i32, ptr %2042, align 8, !tbaa !22
  %2044 = add i32 %2043, 1
  store i32 %2044, ptr %2042, align 8, !tbaa !22
  br label %2046

2045:                                             ; preds = %2009, %2000, %2001
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1983, i8 0, i64 16, i1 false)
  br label %2046

2046:                                             ; preds = %2045, %2022
  %2047 = phi i64 [ %1981, %2022 ], [ 0, %2045 ]
  call void @Perl_pop_scope() #21
  %2048 = load ptr, ptr %1318, align 8, !tbaa !34
  %2049 = icmp eq ptr %2048, null
  br i1 %2049, label %2056, label %2050

2050:                                             ; preds = %2046
  %2051 = getelementptr inbounds %struct.regnode, ptr %2048, i64 0, i32 1
  %2052 = load i8, ptr %2051, align 1, !tbaa !164
  %2053 = and i8 %2052, -2
  %2054 = icmp eq i8 %2053, 16
  br i1 %2054, label %2055, label %2056

2055:                                             ; preds = %2050
  store ptr null, ptr %1318, align 8, !tbaa !34
  br label %2056

2056:                                             ; preds = %2050, %2055, %2046
  %2057 = load ptr, ptr %1310, align 8, !tbaa !13
  %2058 = getelementptr inbounds %struct.reg_substr_data, ptr %2057, i64 0, i32 1, i64 0, i32 2
  %2059 = load ptr, ptr %2058, align 8, !tbaa !210
  %2060 = icmp eq ptr %2059, null
  br i1 %2060, label %2061, label %2065

2061:                                             ; preds = %2056
  %2062 = getelementptr inbounds %struct.reg_substr_data, ptr %2057, i64 0, i32 1, i64 0, i32 3
  %2063 = load ptr, ptr %2062, align 8, !tbaa !211
  %2064 = icmp eq ptr %2063, null
  br i1 %2064, label %2070, label %2065

2065:                                             ; preds = %2061, %2056
  %2066 = getelementptr inbounds %struct.reg_substr_data, ptr %2057, i64 0, i32 1
  %2067 = load i64, ptr %2066, align 8, !tbaa !204
  %2068 = icmp ne i64 %2067, 0
  %2069 = and i1 %1795, %2068
  br i1 %2069, label %2071, label %2129

2070:                                             ; preds = %2061
  br i1 %1795, label %2071, label %2129

2071:                                             ; preds = %2065, %2070
  %2072 = load ptr, ptr %1325, align 8, !tbaa !197
  %2073 = load i8, ptr %2072, align 8, !tbaa !196
  %2074 = and i8 %2073, 1
  %2075 = icmp eq i8 %2074, 0
  br i1 %2075, label %2076, label %2129

2076:                                             ; preds = %2071
  %2077 = load i32, ptr %15, align 8, !tbaa !109
  %2078 = call fastcc zeroext i1 @S_is_ssc_worth_it(i32 %2077, ptr noundef nonnull %2072)
  br i1 %2078, label %2079, label %2129

2079:                                             ; preds = %2076
  %2080 = load ptr, ptr %1286, align 8, !tbaa !156
  %2081 = getelementptr inbounds %struct.regexp_internal, ptr %2080, i64 0, i32 3
  %2082 = load ptr, ptr %2081, align 8, !tbaa !26
  %2083 = icmp eq ptr %2082, null
  br i1 %2083, label %2086, label %2084

2084:                                             ; preds = %2079
  %2085 = load i32, ptr %2082, align 8, !tbaa !27
  br label %2086

2086:                                             ; preds = %2084, %2079
  %2087 = phi i32 [ %2085, %2084 ], [ 0, %2079 ]
  %2088 = add i32 %2087, 1
  %2089 = zext i32 %2087 to i64
  %2090 = shl nuw nsw i64 %2089, 3
  %2091 = add nuw nsw i64 %2090, 24
  %2092 = call ptr @Perl_safesysrealloc(ptr noundef %2082, i64 noundef %2091) #21
  %2093 = load ptr, ptr %1286, align 8, !tbaa !156
  %2094 = getelementptr inbounds %struct.regexp_internal, ptr %2093, i64 0, i32 3
  store ptr %2092, ptr %2094, align 8, !tbaa !26
  %2095 = icmp eq i32 %2087, 0
  br i1 %2095, label %2101, label %2096

2096:                                             ; preds = %2086
  %2097 = getelementptr inbounds %struct.reg_data, ptr %2092, i64 0, i32 1
  %2098 = load ptr, ptr %2097, align 8, !tbaa !29
  %2099 = zext i32 %2088 to i64
  %2100 = call ptr @Perl_safesysrealloc(ptr noundef %2098, i64 noundef %2099) #21
  br label %2103

2101:                                             ; preds = %2086
  %2102 = call ptr @Perl_safesysmalloc(i64 noundef 1) #21
  br label %2103

2103:                                             ; preds = %2096, %2101
  %2104 = phi ptr [ %2100, %2096 ], [ %2102, %2101 ]
  %2105 = load ptr, ptr %1286, align 8, !tbaa !156
  %2106 = getelementptr inbounds %struct.regexp_internal, ptr %2105, i64 0, i32 3
  %2107 = load ptr, ptr %2106, align 8, !tbaa !26
  %2108 = getelementptr inbounds %struct.reg_data, ptr %2107, i64 0, i32 1
  store ptr %2104, ptr %2108, align 8, !tbaa !29
  store i32 %2088, ptr %2107, align 8, !tbaa !27
  %2109 = getelementptr inbounds i8, ptr %2104, i64 %2089
  store i8 102, ptr %2109, align 1
  %2110 = load ptr, ptr %1325, align 8, !tbaa !197
  call fastcc void @S_ssc_finalize(ptr noundef nonnull %15, ptr noundef %2110)
  %2111 = call ptr @Perl_safesysmalloc(i64 noundef 56) #21
  %2112 = load ptr, ptr %1286, align 8, !tbaa !156
  %2113 = getelementptr inbounds %struct.regexp_internal, ptr %2112, i64 0, i32 3
  %2114 = load ptr, ptr %2113, align 8, !tbaa !26
  %2115 = getelementptr inbounds %struct.reg_data, ptr %2114, i64 0, i32 2, i64 %2089
  store ptr %2111, ptr %2115, align 8, !tbaa !5
  %2116 = load ptr, ptr %1286, align 8, !tbaa !156
  %2117 = getelementptr inbounds %struct.regexp_internal, ptr %2116, i64 0, i32 3
  %2118 = load ptr, ptr %2117, align 8, !tbaa !26
  %2119 = getelementptr inbounds %struct.reg_data, ptr %2118, i64 0, i32 2, i64 %2089
  %2120 = load ptr, ptr %2119, align 8, !tbaa !5
  %2121 = load ptr, ptr %1325, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2120, ptr noundef nonnull align 8 dereferenceable(56) %2121, i64 56, i1 false), !tbaa.struct !212
  %2122 = load ptr, ptr %1286, align 8, !tbaa !156
  %2123 = getelementptr inbounds %struct.regexp_internal, ptr %2122, i64 0, i32 3
  %2124 = load ptr, ptr %2123, align 8, !tbaa !26
  %2125 = getelementptr inbounds %struct.reg_data, ptr %2124, i64 0, i32 2, i64 %2089
  %2126 = load ptr, ptr %2125, align 8, !tbaa !5
  store ptr %2126, ptr %1318, align 8, !tbaa !34
  %2127 = load i32, ptr %1252, align 4, !tbaa !61
  %2128 = and i32 %2127, -2
  store i32 %2128, ptr %1252, align 4, !tbaa !61
  store ptr null, ptr %1325, align 8, !tbaa !197
  br label %2129

2129:                                             ; preds = %2103, %2076, %2071, %2070, %2065
  %2130 = icmp ugt i64 %2047, %1966
  %2131 = load ptr, ptr %1310, align 8, !tbaa !13
  %2132 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 2, i32 4
  %2133 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 2, i32 2
  %2134 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 2, i32 3
  br i1 %2130, label %2135, label %2151

2135:                                             ; preds = %2129
  store i8 0, ptr %2131, align 8, !tbaa !213
  %2136 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 0, i32 4
  %2137 = load i64, ptr %2136, align 8, !tbaa !215
  store i64 %2137, ptr %2132, align 8, !tbaa !215
  %2138 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 0, i32 2
  %2139 = load ptr, ptr %2138, align 8, !tbaa !210
  store ptr %2139, ptr %2133, align 8, !tbaa !210
  %2140 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 0, i32 3
  %2141 = load ptr, ptr %2140, align 8, !tbaa !211
  store ptr %2141, ptr %2134, align 8, !tbaa !211
  %2142 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1
  %2143 = load i64, ptr %2142, align 8, !tbaa !204
  %2144 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 2, i32 1
  store i64 %2143, ptr %2144, align 8, !tbaa !207
  %2145 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 2
  store i64 %2143, ptr %2145, align 8, !tbaa !204
  %2146 = load i32, ptr %1252, align 4, !tbaa !61
  %2147 = and i32 %2146, 6144
  %2148 = icmp eq i32 %2147, 0
  br i1 %2148, label %2161, label %2149

2149:                                             ; preds = %2135
  %2150 = or i32 %2146, 64
  store i32 %2150, ptr %1252, align 4, !tbaa !61
  br label %2161

2151:                                             ; preds = %2129
  store i8 1, ptr %2131, align 8, !tbaa !213
  %2152 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 1, i32 4
  %2153 = load i64, ptr %2152, align 8, !tbaa !215
  store i64 %2153, ptr %2132, align 8, !tbaa !215
  %2154 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 1, i32 2
  %2155 = load ptr, ptr %2154, align 8, !tbaa !210
  store ptr %2155, ptr %2133, align 8, !tbaa !210
  %2156 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 1, i32 3
  %2157 = load ptr, ptr %2156, align 8, !tbaa !211
  store ptr %2157, ptr %2134, align 8, !tbaa !211
  %2158 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 1
  %2159 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 2
  %2160 = load <2 x i64>, ptr %2158, align 8, !tbaa !71
  store <2 x i64> %2160, ptr %2159, align 8, !tbaa !71
  br label %2161

2161:                                             ; preds = %2135, %2149, %2151
  %2162 = phi ptr [ %2141, %2135 ], [ %2141, %2149 ], [ %2157, %2151 ]
  %2163 = phi ptr [ %2139, %2135 ], [ %2139, %2149 ], [ %2155, %2151 ]
  %2164 = icmp eq ptr %2163, null
  br i1 %2164, label %2165, label %2167

2165:                                             ; preds = %2161
  %2166 = icmp eq ptr %2162, null
  br i1 %2166, label %2176, label %2167

2167:                                             ; preds = %2165, %2161
  %2168 = phi ptr [ %2163, %2161 ], [ %2162, %2165 ]
  %2169 = load i32, ptr %1098, align 8, !tbaa !45
  %2170 = or i32 %2169, 6291456
  store i32 %2170, ptr %1098, align 8, !tbaa !45
  %2171 = getelementptr inbounds %struct.sv, ptr %2168, i64 0, i32 2
  %2172 = load i32, ptr %2171, align 4, !tbaa !62
  %2173 = icmp ugt i32 %2172, -1073741825
  br i1 %2173, label %2174, label %2176

2174:                                             ; preds = %2167
  %2175 = or i32 %2169, 14680064
  store i32 %2175, ptr %1098, align 8, !tbaa !45
  br label %2176

2176:                                             ; preds = %2165, %2174, %2167
  %2177 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1
  %2178 = load i64, ptr %2177, align 8, !tbaa !204
  %2179 = getelementptr inbounds %struct.reg_substr_data, ptr %2131, i64 0, i32 1, i64 0, i32 1
  store i64 %2178, ptr %2179, align 8, !tbaa !207
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #21
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %18) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #21
  br label %2279

2180:                                             ; preds = %1821
  call void @Perl_pop_scope() #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #21
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %18) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #21
  br label %2181

2181:                                             ; preds = %2180, %2278
  br label %1341

2182:                                             ; preds = %1372
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #21
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %22) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #21
  store i64 0, ptr %23, align 8, !tbaa !71
  store ptr %1295, ptr %10, align 8, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %22, i8 0, i64 56, i1 false)
  store i8 19, ptr %1320, align 1, !tbaa !193
  store i16 1, ptr %1321, align 2, !tbaa !194
  store i32 -1, ptr %1322, align 4, !tbaa !166
  %2183 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %2184 = getelementptr inbounds %struct.sv, ptr %2183, i64 0, i32 2
  %2185 = load i32, ptr %2184, align 4, !tbaa !62
  %2186 = and i32 %2185, 268435456
  %2187 = icmp eq i32 %2186, 0
  br i1 %2187, label %2188, label %2193

2188:                                             ; preds = %2182
  %2189 = load ptr, ptr %2183, align 8, !tbaa !63
  %2190 = getelementptr inbounds %struct.xpv, ptr %2189, i64 0, i32 3
  %2191 = load i64, ptr %2190, align 8, !tbaa !9
  %2192 = icmp ult i64 %2191, 25
  br i1 %2192, label %2193, label %2196

2193:                                             ; preds = %2188, %2182
  %2194 = call ptr @Perl_sv_grow(ptr noundef nonnull %2183, i64 noundef 25) #21
  %2195 = load ptr, ptr %2183, align 8, !tbaa !63
  br label %2196

2196:                                             ; preds = %2188, %2193
  %2197 = phi ptr [ %2189, %2188 ], [ %2195, %2193 ]
  %2198 = getelementptr inbounds %struct.xpv, ptr %2197, i64 0, i32 2
  store i64 0, ptr %2198, align 8, !tbaa !72
  %2199 = getelementptr inbounds %struct.xpvinvlist, ptr %2197, i64 0, i32 5
  store i64 -1, ptr %2199, align 8, !tbaa !71
  %2200 = getelementptr inbounds %struct.xpvinvlist, ptr %2197, i64 0, i32 4
  store i64 0, ptr %2200, align 8, !tbaa !71
  %2201 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %2183) #21
  store ptr %2201, ptr %1323, align 8, !tbaa !195
  call fastcc void @S__append_range_to_invlist(ptr noundef %2201, i64 noundef 0, i64 noundef -1)
  %2202 = load i8, ptr %22, align 8, !tbaa !196
  %2203 = or i8 %2202, 1
  store i8 %2203, ptr %22, align 8, !tbaa !196
  %2204 = load i32, ptr %323, align 8, !tbaa !100
  %2205 = icmp eq i32 %2204, 0
  %2206 = select i1 %2205, i32 0, i32 536870911
  store i32 %2206, ptr %1324, align 8
  store ptr %22, ptr %1325, align 8, !tbaa !197
  store ptr %23, ptr %1326, align 8, !tbaa !198
  %2207 = load i64, ptr %357, align 8, !tbaa !144
  %2208 = getelementptr inbounds %struct.regnode, ptr %1295, i64 %2207
  %2209 = select i1 %1342, i32 10240, i32 75776
  %2210 = call fastcc i64 @S_study_chunk(ptr noundef nonnull %15, ptr noundef nonnull %10, ptr noundef nonnull %12, ptr noundef nonnull %21, ptr noundef nonnull %2208, ptr noundef nonnull %14, i32 noundef -1, i32 noundef 0, i32 noundef %2209, i32 noundef 0)
  store i64 %2210, ptr %12, align 8, !tbaa !71
  %2211 = load i32, ptr %1327, align 8, !tbaa !199
  %2212 = and i32 %2211, 16384
  %2213 = icmp ne i32 %2212, 0
  %2214 = and i1 %2213, %1342
  br i1 %2214, label %2278, label %2215

2215:                                             ; preds = %2196
  %2216 = load ptr, ptr %1310, align 8, !tbaa !13
  %2217 = getelementptr inbounds %struct.reg_substr_data, ptr %2216, i64 0, i32 1, i64 1, i32 2
  %2218 = getelementptr inbounds %struct.reg_substr_data, ptr %2216, i64 0, i32 1, i64 0, i32 2
  %2219 = getelementptr inbounds %struct.reg_substr_data, ptr %2216, i64 0, i32 1, i64 2, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2218, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2217, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2219, i8 0, i64 16, i1 false)
  %2220 = load ptr, ptr %1325, align 8, !tbaa !197
  %2221 = load i8, ptr %2220, align 8, !tbaa !196
  %2222 = and i8 %2221, 1
  %2223 = icmp eq i8 %2222, 0
  br i1 %2223, label %2224, label %2277

2224:                                             ; preds = %2215
  %2225 = load i32, ptr %15, align 8, !tbaa !109
  %2226 = call fastcc zeroext i1 @S_is_ssc_worth_it(i32 %2225, ptr noundef nonnull %2220)
  br i1 %2226, label %2227, label %2277

2227:                                             ; preds = %2224
  %2228 = load ptr, ptr %1286, align 8, !tbaa !156
  %2229 = getelementptr inbounds %struct.regexp_internal, ptr %2228, i64 0, i32 3
  %2230 = load ptr, ptr %2229, align 8, !tbaa !26
  %2231 = icmp eq ptr %2230, null
  br i1 %2231, label %2234, label %2232

2232:                                             ; preds = %2227
  %2233 = load i32, ptr %2230, align 8, !tbaa !27
  br label %2234

2234:                                             ; preds = %2232, %2227
  %2235 = phi i32 [ %2233, %2232 ], [ 0, %2227 ]
  %2236 = add i32 %2235, 1
  %2237 = zext i32 %2235 to i64
  %2238 = shl nuw nsw i64 %2237, 3
  %2239 = add nuw nsw i64 %2238, 24
  %2240 = call ptr @Perl_safesysrealloc(ptr noundef %2230, i64 noundef %2239) #21
  %2241 = load ptr, ptr %1286, align 8, !tbaa !156
  %2242 = getelementptr inbounds %struct.regexp_internal, ptr %2241, i64 0, i32 3
  store ptr %2240, ptr %2242, align 8, !tbaa !26
  %2243 = icmp eq i32 %2235, 0
  br i1 %2243, label %2249, label %2244

2244:                                             ; preds = %2234
  %2245 = getelementptr inbounds %struct.reg_data, ptr %2240, i64 0, i32 1
  %2246 = load ptr, ptr %2245, align 8, !tbaa !29
  %2247 = zext i32 %2236 to i64
  %2248 = call ptr @Perl_safesysrealloc(ptr noundef %2246, i64 noundef %2247) #21
  br label %2251

2249:                                             ; preds = %2234
  %2250 = call ptr @Perl_safesysmalloc(i64 noundef 1) #21
  br label %2251

2251:                                             ; preds = %2244, %2249
  %2252 = phi ptr [ %2248, %2244 ], [ %2250, %2249 ]
  %2253 = load ptr, ptr %1286, align 8, !tbaa !156
  %2254 = getelementptr inbounds %struct.regexp_internal, ptr %2253, i64 0, i32 3
  %2255 = load ptr, ptr %2254, align 8, !tbaa !26
  %2256 = getelementptr inbounds %struct.reg_data, ptr %2255, i64 0, i32 1
  store ptr %2252, ptr %2256, align 8, !tbaa !29
  store i32 %2236, ptr %2255, align 8, !tbaa !27
  %2257 = getelementptr inbounds i8, ptr %2252, i64 %2237
  store i8 102, ptr %2257, align 1
  %2258 = load ptr, ptr %1325, align 8, !tbaa !197
  call fastcc void @S_ssc_finalize(ptr noundef nonnull %15, ptr noundef %2258)
  %2259 = call ptr @Perl_safesysmalloc(i64 noundef 56) #21
  %2260 = load ptr, ptr %1286, align 8, !tbaa !156
  %2261 = getelementptr inbounds %struct.regexp_internal, ptr %2260, i64 0, i32 3
  %2262 = load ptr, ptr %2261, align 8, !tbaa !26
  %2263 = getelementptr inbounds %struct.reg_data, ptr %2262, i64 0, i32 2, i64 %2237
  store ptr %2259, ptr %2263, align 8, !tbaa !5
  %2264 = load ptr, ptr %1286, align 8, !tbaa !156
  %2265 = getelementptr inbounds %struct.regexp_internal, ptr %2264, i64 0, i32 3
  %2266 = load ptr, ptr %2265, align 8, !tbaa !26
  %2267 = getelementptr inbounds %struct.reg_data, ptr %2266, i64 0, i32 2, i64 %2237
  %2268 = load ptr, ptr %2267, align 8, !tbaa !5
  %2269 = load ptr, ptr %1325, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2268, ptr noundef nonnull align 8 dereferenceable(56) %2269, i64 56, i1 false), !tbaa.struct !212
  %2270 = load ptr, ptr %1286, align 8, !tbaa !156
  %2271 = getelementptr inbounds %struct.regexp_internal, ptr %2270, i64 0, i32 3
  %2272 = load ptr, ptr %2271, align 8, !tbaa !26
  %2273 = getelementptr inbounds %struct.reg_data, ptr %2272, i64 0, i32 2, i64 %2237
  %2274 = load ptr, ptr %2273, align 8, !tbaa !5
  store ptr %2274, ptr %1318, align 8, !tbaa !34
  %2275 = load i32, ptr %1252, align 4, !tbaa !61
  %2276 = and i32 %2275, -2
  store i32 %2276, ptr %1252, align 4, !tbaa !61
  store ptr null, ptr %1325, align 8, !tbaa !197
  br label %2277

2277:                                             ; preds = %2251, %2224, %2215
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #21
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %22) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #21
  br label %2279

2278:                                             ; preds = %2196
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #21
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %22) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #21
  br label %2181

2279:                                             ; preds = %2277, %2176
  %2280 = load i32, ptr %344, align 8, !tbaa !131
  %2281 = and i32 %2280, 4096
  %2282 = icmp eq i32 %2281, 0
  br i1 %2282, label %2286, label %2283

2283:                                             ; preds = %2279
  %2284 = load i32, ptr %1098, align 8, !tbaa !45
  %2285 = or i32 %2284, 262144
  store i32 %2285, ptr %1098, align 8, !tbaa !45
  br label %2288

2286:                                             ; preds = %2279
  %2287 = load i64, ptr %345, align 8, !tbaa !132
  br label %2288

2288:                                             ; preds = %2286, %2283
  %2289 = phi i64 [ %2287, %2286 ], [ 32767, %2283 ]
  %2290 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 23
  store i64 %2289, ptr %2290, align 8
  %2291 = load i64, ptr %12, align 8, !tbaa !71
  %2292 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 9
  store i64 %2291, ptr %2292, align 8, !tbaa !216
  %2293 = load i64, ptr %1317, align 8, !tbaa !161
  %2294 = icmp slt i64 %2293, %2291
  br i1 %2294, label %2295, label %2296

2295:                                             ; preds = %2288
  store i64 %2291, ptr %1317, align 8, !tbaa !161
  br label %2296

2296:                                             ; preds = %2295, %2288
  %2297 = and i32 %2280, 4
  %2298 = icmp eq i32 %2297, 0
  br i1 %2298, label %2302, label %2299

2299:                                             ; preds = %2296
  %2300 = load i32, ptr %1252, align 4, !tbaa !61
  %2301 = or i32 %2300, 256
  store i32 %2301, ptr %1252, align 4, !tbaa !61
  br label %2302

2302:                                             ; preds = %2299, %2296
  %2303 = and i32 %2280, 2
  %2304 = icmp eq i32 %2303, 0
  br i1 %2304, label %2308, label %2305

2305:                                             ; preds = %2302
  %2306 = load i32, ptr %1098, align 8, !tbaa !45
  %2307 = or i32 %2306, 65536
  store i32 %2307, ptr %1098, align 8, !tbaa !45
  br label %2308

2308:                                             ; preds = %2305, %2302
  %2309 = load i32, ptr %108, align 8, !tbaa !77
  %2310 = icmp eq i32 %2309, 0
  br i1 %2310, label %2314, label %2311

2311:                                             ; preds = %2308
  %2312 = load i32, ptr %1098, align 8, !tbaa !45
  %2313 = or i32 %2312, 131072
  store i32 %2313, ptr %1098, align 8, !tbaa !45
  br label %2314

2314:                                             ; preds = %2311, %2308
  %2315 = and i32 %2280, 16
  %2316 = icmp eq i32 %2315, 0
  br i1 %2316, label %2320, label %2317

2317:                                             ; preds = %2314
  %2318 = load i32, ptr %1252, align 4, !tbaa !61
  %2319 = or i32 %2318, 128
  store i32 %2319, ptr %1252, align 4, !tbaa !61
  br label %2320

2320:                                             ; preds = %2317, %2314
  %2321 = and i32 %2280, 128
  %2322 = icmp eq i32 %2321, 0
  br i1 %2322, label %2328, label %2323

2323:                                             ; preds = %2320
  %2324 = load i32, ptr %1252, align 4, !tbaa !61
  %2325 = or i32 %2324, 8
  store i32 %2325, ptr %1252, align 4, !tbaa !61
  %2326 = load i32, ptr %1098, align 8, !tbaa !45
  %2327 = or i32 %2326, 65536
  store i32 %2327, ptr %1098, align 8, !tbaa !45
  br label %2328

2328:                                             ; preds = %2323, %2320
  %2329 = and i32 %2280, 256
  %2330 = icmp eq i32 %2329, 0
  br i1 %2330, label %2334, label %2331

2331:                                             ; preds = %2328
  %2332 = load i32, ptr %1252, align 4, !tbaa !61
  %2333 = or i32 %2332, 16
  store i32 %2333, ptr %1252, align 4, !tbaa !61
  br label %2334

2334:                                             ; preds = %2331, %2328
  br i1 %330, label %2338, label %2335

2335:                                             ; preds = %2334
  %2336 = load i32, ptr %1252, align 4, !tbaa !61
  %2337 = or i32 %2336, 32
  store i32 %2337, ptr %1252, align 4, !tbaa !61
  br label %2338

2338:                                             ; preds = %2335, %2334
  %2339 = load ptr, ptr %363, align 8, !tbaa !217
  %2340 = icmp eq ptr %2339, null
  br i1 %2340, label %2345, label %2341

2341:                                             ; preds = %2338
  %2342 = getelementptr inbounds %struct.sv, ptr %2339, i64 0, i32 1
  %2343 = load i32, ptr %2342, align 8, !tbaa !22
  %2344 = add i32 %2343, 1
  store i32 %2344, ptr %2342, align 8, !tbaa !22
  br label %2345

2345:                                             ; preds = %2338, %2341
  %2346 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 6
  store ptr %2339, ptr %2346, align 8
  %2347 = load i32, ptr %1252, align 4, !tbaa !61
  %2348 = and i32 %2347, 7168
  %2349 = icmp eq i32 %2348, 0
  br i1 %2349, label %2353, label %2350

2350:                                             ; preds = %2345
  %2351 = load i32, ptr %1098, align 8, !tbaa !45
  %2352 = or i32 %2351, 16777216
  store i32 %2352, ptr %1098, align 8, !tbaa !45
  br label %2353

2353:                                             ; preds = %2350, %2345
  %2354 = load i8, ptr %1328, align 1, !tbaa !164
  %2355 = icmp ugt i8 %2354, 93
  br i1 %2355, label %2356, label %2359

2356:                                             ; preds = %2353
  %2357 = zext i8 %2354 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2357, i32 noundef 93) #21
  %2358 = load i8, ptr %1328, align 1, !tbaa !164
  br label %2359

2359:                                             ; preds = %2356, %2353
  %2360 = phi i8 [ %2358, %2356 ], [ %2354, %2353 ]
  %2361 = zext i8 %2360 to i64
  %2362 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2361
  %2363 = load i8, ptr %2362, align 1, !tbaa !9
  %2364 = icmp eq i8 %2363, 0
  br i1 %2364, label %2367, label %2365

2365:                                             ; preds = %2359
  %2366 = load i32, ptr %1329, align 4, !tbaa !166
  br label %2370

2367:                                             ; preds = %2359
  %2368 = load i16, ptr %1330, align 2, !tbaa !168
  %2369 = zext i16 %2368 to i32
  br label %2370

2370:                                             ; preds = %2367, %2365
  %2371 = phi i32 [ %2366, %2365 ], [ %2369, %2367 ]
  %2372 = icmp ne i32 %2371, 0
  call void @llvm.assume(i1 %2372)
  %2373 = sext i32 %2371 to i64
  %2374 = getelementptr inbounds %struct.regnode, ptr %1295, i64 %2373
  %2375 = getelementptr inbounds %struct.regnode, ptr %1295, i64 %2373, i32 1
  %2376 = load i8, ptr %2375, align 1, !tbaa !164
  %2377 = zext i8 %2354 to i64
  %2378 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %2377
  %2379 = load i8, ptr %2378, align 1, !tbaa !9
  %2380 = icmp eq i8 %2379, 40
  %2381 = icmp eq i8 %2376, 0
  %2382 = select i1 %2380, i1 %2381, i1 false
  br i1 %2382, label %2383, label %2386

2383:                                             ; preds = %2370
  %2384 = load i32, ptr %1098, align 8, !tbaa !45
  %2385 = or i32 %2384, -2147483648
  br label %2422

2386:                                             ; preds = %2370
  switch i8 %2354, label %2406 [
    i8 3, label %2391
    i8 2, label %2387
    i8 43, label %2395
  ]

2387:                                             ; preds = %2386
  %2388 = load i8, ptr %1295, align 2, !tbaa !169
  %2389 = icmp eq i8 %2388, 0
  %2390 = select i1 %2389, i1 %2381, i1 false
  br i1 %2390, label %2392, label %2424

2391:                                             ; preds = %2386
  br i1 %2381, label %2392, label %2424

2392:                                             ; preds = %2387, %2391
  %2393 = load i32, ptr %1098, align 8, !tbaa !45
  %2394 = or i32 %2393, 268435456
  br label %2422

2395:                                             ; preds = %2386
  %2396 = zext i8 %2376 to i64
  %2397 = add nsw i64 %2396, -21
  %2398 = icmp ult i64 %2397, 4
  br i1 %2398, label %2399, label %2424

2399:                                             ; preds = %2395
  %2400 = load i8, ptr %2374, align 2, !tbaa !169
  %2401 = icmp eq i8 %2400, 10
  %2402 = select i1 %2401, i1 %2381, i1 false
  br i1 %2402, label %2403, label %2424

2403:                                             ; preds = %2399
  %2404 = load i32, ptr %1098, align 8, !tbaa !45
  %2405 = or i32 %2404, 1073741824
  br label %2422

2406:                                             ; preds = %2386
  %2407 = load i32, ptr %1098, align 8, !tbaa !45
  %2408 = and i32 %2407, 2048
  %2409 = icmp ne i32 %2408, 0
  %2410 = add i8 %2354, -31
  %2411 = icmp ult i8 %2410, 2
  %2412 = and i1 %2411, %2409
  br i1 %2412, label %2413, label %2424

2413:                                             ; preds = %2406
  %2414 = load i8, ptr %1295, align 2, !tbaa !218
  %2415 = icmp eq i8 %2414, 1
  br i1 %2415, label %2416, label %2424

2416:                                             ; preds = %2413
  %2417 = load i8, ptr %1329, align 2, !tbaa !9
  %2418 = icmp eq i8 %2417, 32
  %2419 = select i1 %2418, i1 %2381, i1 false
  br i1 %2419, label %2420, label %2424

2420:                                             ; preds = %2416
  %2421 = or i32 %2407, 1610612736
  br label %2422

2422:                                             ; preds = %2383, %2403, %2420, %2392
  %2423 = phi i32 [ %2394, %2392 ], [ %2421, %2420 ], [ %2405, %2403 ], [ %2385, %2383 ]
  store i32 %2423, ptr %1098, align 8, !tbaa !45
  br label %2424

2424:                                             ; preds = %2422, %2387, %2391, %2395, %2399, %2406, %2413, %2416
  %2425 = load i32, ptr %323, align 8, !tbaa !100
  %2426 = icmp eq i32 %2425, 0
  br i1 %2426, label %2430, label %2427

2427:                                             ; preds = %2424
  %2428 = load i32, ptr %1098, align 8, !tbaa !45
  %2429 = or i32 %2428, 134217728
  store i32 %2429, ptr %1098, align 8, !tbaa !45
  br label %2430

2430:                                             ; preds = %2427, %2424
  store i32 0, ptr %1071, align 8, !tbaa !220
  %2431 = load i32, ptr %367, align 8, !tbaa !159
  %2432 = icmp eq i32 %2431, 0
  br i1 %2432, label %2493, label %2433

2433:                                             ; preds = %2430
  %2434 = load ptr, ptr %364, align 8, !tbaa !160
  %2435 = load ptr, ptr %361, align 8, !tbaa !153
  %2436 = sext i32 %2431 to i64
  %2437 = and i32 %2431, 1
  %2438 = icmp eq i32 %2437, 0
  br i1 %2438, label %2455, label %2439

2439:                                             ; preds = %2433
  %2440 = add nsw i64 %2436, -1
  %2441 = getelementptr inbounds ptr, ptr %2434, i64 %2440
  %2442 = load ptr, ptr %2441, align 8, !tbaa !5
  %2443 = getelementptr inbounds %struct.regnode_1, ptr %2442, i64 0, i32 3
  %2444 = load i32, ptr %2443, align 4, !tbaa !166
  %2445 = add i32 %2444, -1
  %2446 = zext i32 %2445 to i64
  %2447 = getelementptr inbounds ptr, ptr %2435, i64 %2446
  %2448 = load ptr, ptr %2447, align 8, !tbaa !5
  %2449 = ptrtoint ptr %2448 to i64
  %2450 = ptrtoint ptr %2442 to i64
  %2451 = sub i64 %2449, %2450
  %2452 = lshr exact i64 %2451, 2
  %2453 = trunc i64 %2452 to i32
  %2454 = getelementptr inbounds %struct.regnode_2L, ptr %2442, i64 0, i32 4
  store i32 %2453, ptr %2454, align 4, !tbaa !221
  br label %2455

2455:                                             ; preds = %2439, %2433
  %2456 = phi i64 [ %2436, %2433 ], [ %2440, %2439 ]
  %2457 = icmp eq i32 %2431, 1
  br i1 %2457, label %2492, label %2458

2458:                                             ; preds = %2455, %2458
  %2459 = phi i64 [ %2475, %2458 ], [ %2456, %2455 ]
  %2460 = add nsw i64 %2459, -1
  %2461 = getelementptr inbounds ptr, ptr %2434, i64 %2460
  %2462 = load ptr, ptr %2461, align 8, !tbaa !5
  %2463 = getelementptr inbounds %struct.regnode_1, ptr %2462, i64 0, i32 3
  %2464 = load i32, ptr %2463, align 4, !tbaa !166
  %2465 = add i32 %2464, -1
  %2466 = zext i32 %2465 to i64
  %2467 = getelementptr inbounds ptr, ptr %2435, i64 %2466
  %2468 = load ptr, ptr %2467, align 8, !tbaa !5
  %2469 = ptrtoint ptr %2468 to i64
  %2470 = ptrtoint ptr %2462 to i64
  %2471 = sub i64 %2469, %2470
  %2472 = lshr exact i64 %2471, 2
  %2473 = trunc i64 %2472 to i32
  %2474 = getelementptr inbounds %struct.regnode_2L, ptr %2462, i64 0, i32 4
  store i32 %2473, ptr %2474, align 4, !tbaa !221
  %2475 = add nsw i64 %2459, -2
  %2476 = getelementptr inbounds ptr, ptr %2434, i64 %2475
  %2477 = load ptr, ptr %2476, align 8, !tbaa !5
  %2478 = getelementptr inbounds %struct.regnode_1, ptr %2477, i64 0, i32 3
  %2479 = load i32, ptr %2478, align 4, !tbaa !166
  %2480 = add i32 %2479, -1
  %2481 = zext i32 %2480 to i64
  %2482 = getelementptr inbounds ptr, ptr %2435, i64 %2481
  %2483 = load ptr, ptr %2482, align 8, !tbaa !5
  %2484 = ptrtoint ptr %2483 to i64
  %2485 = ptrtoint ptr %2477 to i64
  %2486 = sub i64 %2484, %2485
  %2487 = lshr exact i64 %2486, 2
  %2488 = trunc i64 %2487 to i32
  %2489 = getelementptr inbounds %struct.regnode_2L, ptr %2477, i64 0, i32 4
  store i32 %2488, ptr %2489, align 4, !tbaa !221
  %2490 = and i64 %2475, 4294967295
  %2491 = icmp eq i64 %2490, 0
  br i1 %2491, label %2492, label %2458, !llvm.loop !223

2492:                                             ; preds = %2458, %2455
  store i32 0, ptr %367, align 8, !tbaa !159
  br label %2493

2493:                                             ; preds = %2492, %2430
  %2494 = load i32, ptr %355, align 8, !tbaa !142
  %2495 = sext i32 %2494 to i64
  %2496 = call ptr @Perl_safesyscalloc(i64 noundef %2495, i64 noundef 24) #21
  %2497 = getelementptr inbounds %struct.regexp, ptr %1066, i64 0, i32 17
  store ptr %2496, ptr %2497, align 8, !tbaa !50
  br label %2498

2498:                                             ; preds = %238, %2493, %468, %301
  %2499 = phi ptr [ %1064, %2493 ], [ %4, %468 ], [ %305, %301 ], [ %233, %238 ]
  call void @llvm.lifetime.end.p0(i64 344, ptr nonnull %16)
  call void @llvm.lifetime.end.p0(i64 344, ptr nonnull %15) #21
  call void @llvm.lifetime.end.p0(i64 152, ptr nonnull %14) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #21
  ret ptr %2499
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @Perl_reginitcolors() local_unnamed_addr #3 {
  store ptr @.str.178, ptr @PL_colors, align 16, !tbaa !5
  store ptr @.str.178, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  store ptr @.str.178, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 2), align 16, !tbaa !5
  store ptr @.str.178, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 3), align 8, !tbaa !5
  store ptr @.str.178, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 4), align 16, !tbaa !5
  store ptr @.str.178, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 5), align 8, !tbaa !5
  store i8 1, ptr @PL_colorset, align 1, !tbaa !57
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_current_re_engine() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %2 = icmp eq ptr %1, @PL_compiling
  br i1 %2, label %3, label %52

3:                                                ; preds = %0
  %4 = load ptr, ptr @PL_hintgv, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.gv, ptr %4, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.gp, ptr %6, i64 0, i32 5
  %8 = load ptr, ptr %7, align 8, !tbaa !224
  %9 = icmp eq ptr %8, null
  br i1 %9, label %90, label %10

10:                                               ; preds = %3
  %11 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !90
  %12 = and i32 %11, 131072
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %90, label %14

14:                                               ; preds = %10
  %15 = tail call ptr @Perl_hv_common(ptr noundef nonnull %8, ptr noundef null, ptr noundef nonnull @.str.179, i64 noundef 7, i32 noundef 0, i32 noundef 32, ptr noundef null, i32 noundef 0) #21
  %16 = icmp eq ptr %15, null
  br i1 %16, label %90, label %17

17:                                               ; preds = %14
  %18 = load ptr, ptr %15, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !62
  %21 = and i32 %20, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %90, label %23

23:                                               ; preds = %17
  %24 = and i32 %20, 2097408
  %25 = icmp eq i32 %24, 256
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = load ptr, ptr %18, align 8, !tbaa !63
  %28 = getelementptr inbounds %struct.xpviv, ptr %27, i64 0, i32 4
  %29 = load i64, ptr %28, align 8, !tbaa !9
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %90, label %38

31:                                               ; preds = %23
  %32 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %18, i32 noundef 2) #21
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %90, label %34

34:                                               ; preds = %31
  %35 = load ptr, ptr %15, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !62
  br label %38

38:                                               ; preds = %34, %26
  %39 = phi i32 [ %37, %34 ], [ %20, %26 ]
  %40 = phi ptr [ %35, %34 ], [ %18, %26 ]
  %41 = and i32 %39, 2097408
  %42 = icmp eq i32 %41, 256
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = load ptr, ptr %40, align 8, !tbaa !63
  %45 = getelementptr inbounds %struct.xpviv, ptr %44, i64 0, i32 4
  %46 = load i64, ptr %45, align 8, !tbaa !9
  br label %49

47:                                               ; preds = %38
  %48 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %40, i32 noundef 2) #21
  br label %49

49:                                               ; preds = %47, %43
  %50 = phi i64 [ %46, %43 ], [ %48, %47 ]
  %51 = inttoptr i64 %50 to ptr
  br label %90

52:                                               ; preds = %0
  %53 = getelementptr inbounds %struct.cop, ptr %1, i64 0, i32 13
  %54 = load ptr, ptr %53, align 8, !tbaa !226
  %55 = icmp eq ptr %54, null
  br i1 %55, label %90, label %56

56:                                               ; preds = %52
  %57 = tail call ptr @Perl_refcounted_he_fetch_pvn(ptr noundef nonnull %54, ptr noundef nonnull @.str.179, i64 noundef 7, i32 noundef 0, i32 noundef 0) #21
  %58 = icmp eq ptr %57, null
  br i1 %58, label %90, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.sv, ptr %57, i64 0, i32 2
  %61 = load i32, ptr %60, align 4, !tbaa !62
  %62 = and i32 %61, 256
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %90, label %64

64:                                               ; preds = %59
  %65 = and i32 %61, 2097408
  %66 = icmp eq i32 %65, 256
  br i1 %66, label %67, label %72

67:                                               ; preds = %64
  %68 = load ptr, ptr %57, align 8, !tbaa !63
  %69 = getelementptr inbounds %struct.xpviv, ptr %68, i64 0, i32 4
  %70 = load i64, ptr %69, align 8, !tbaa !9
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %90, label %77

72:                                               ; preds = %64
  %73 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %57, i32 noundef 2) #21
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i32, ptr %60, align 4, !tbaa !62
  br label %77

77:                                               ; preds = %75, %67
  %78 = phi i32 [ %76, %75 ], [ %61, %67 ]
  %79 = and i32 %78, 2097408
  %80 = icmp eq i32 %79, 256
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = load ptr, ptr %57, align 8, !tbaa !63
  %83 = getelementptr inbounds %struct.xpviv, ptr %82, i64 0, i32 4
  %84 = load i64, ptr %83, align 8, !tbaa !9
  br label %87

85:                                               ; preds = %77
  %86 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %57, i32 noundef 2) #21
  br label %87

87:                                               ; preds = %85, %81
  %88 = phi i64 [ %84, %81 ], [ %86, %85 ]
  %89 = inttoptr i64 %88 to ptr
  br label %90

90:                                               ; preds = %87, %52, %72, %67, %59, %56, %49, %10, %3, %31, %26, %17, %14
  %91 = phi ptr [ %51, %49 ], [ @PL_core_reg_engine, %10 ], [ @PL_core_reg_engine, %3 ], [ @PL_core_reg_engine, %31 ], [ @PL_core_reg_engine, %26 ], [ @PL_core_reg_engine, %17 ], [ @PL_core_reg_engine, %14 ], [ %89, %87 ], [ @PL_core_reg_engine, %52 ], [ @PL_core_reg_engine, %72 ], [ @PL_core_reg_engine, %67 ], [ @PL_core_reg_engine, %59 ], [ @PL_core_reg_engine, %56 ]
  ret ptr %91
}

declare ptr @Perl_hv_common(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare i64 @Perl_sv_2iv_flags(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_refcounted_he_fetch_pvn(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pregcomp(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = tail call ptr @Perl_current_re_engine()
  %4 = load ptr, ptr %3, align 8, !tbaa !96
  %5 = tail call ptr %4(ptr noundef %0, i32 noundef %1) #21
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl__new_invlist_C_array(ptr noundef %0) local_unnamed_addr #0 {
  %2 = load i64, ptr %0, align 8, !tbaa !71
  %3 = getelementptr inbounds i64, ptr %0, i64 1
  %4 = load i64, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds i64, ptr %0, i64 2
  %6 = load i64, ptr %5, align 8, !tbaa !71
  %7 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %8 = icmp eq i64 %4, 148565664
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.192) #21
  br label %10

10:                                               ; preds = %1, %9
  %11 = icmp ne i64 %6, 0
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds i64, ptr %0, i64 3
  %14 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 3
  store ptr %13, ptr %14, align 8, !tbaa !9
  %15 = load ptr, ptr %7, align 8, !tbaa !63
  %16 = getelementptr inbounds %struct.xpv, ptr %15, i64 0, i32 3
  store i64 0, ptr %16, align 8, !tbaa !9
  %17 = load ptr, ptr %7, align 8, !tbaa !63
  %18 = getelementptr inbounds %struct.xpvinvlist, ptr %17, i64 0, i32 6
  store i8 %12, ptr %18, align 1, !tbaa !57
  %19 = sext i1 %11 to i64
  %20 = add i64 %2, %19
  %21 = icmp eq i64 %20, 0
  %22 = zext i1 %11 to i64
  %23 = add i64 %20, %22
  %24 = shl i64 %23, 3
  %25 = select i1 %21, i64 0, i64 %24
  %26 = getelementptr inbounds %struct.xpv, ptr %17, i64 0, i32 2
  store i64 %25, ptr %26, align 8, !tbaa !72
  %27 = getelementptr inbounds %struct.xpvinvlist, ptr %17, i64 0, i32 4
  store i64 0, ptr %27, align 8, !tbaa !71
  %28 = getelementptr inbounds %struct.xpvinvlist, ptr %17, i64 0, i32 5
  store i64 -1, ptr %28, align 8, !tbaa !71
  %29 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !62
  %31 = or i32 %30, 134283264
  store i32 %31, ptr %29, align 4, !tbaa !62
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl__new_invlist(i64 noundef %0) local_unnamed_addr #0 {
  %2 = icmp slt i64 %0, 0
  %3 = select i1 %2, i64 10, i64 %0
  %4 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %5 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !62
  %7 = and i32 %6, 268435456
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = shl i64 %3, 3
  %11 = add i64 %10, 9
  br label %19

12:                                               ; preds = %1
  %13 = load ptr, ptr %4, align 8, !tbaa !63
  %14 = getelementptr inbounds %struct.xpv, ptr %13, i64 0, i32 3
  %15 = load i64, ptr %14, align 8, !tbaa !9
  %16 = shl i64 %3, 3
  %17 = add i64 %16, 9
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %9, %12
  %20 = phi i64 [ %11, %9 ], [ %17, %12 ]
  %21 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %4, i64 noundef %20) #21
  %22 = load ptr, ptr %4, align 8, !tbaa !63
  br label %23

23:                                               ; preds = %12, %19
  %24 = phi ptr [ %13, %12 ], [ %22, %19 ]
  %25 = getelementptr inbounds %struct.xpv, ptr %24, i64 0, i32 2
  store i64 0, ptr %25, align 8, !tbaa !72
  %26 = getelementptr inbounds %struct.xpvinvlist, ptr %24, i64 0, i32 5
  store i64 -1, ptr %26, align 8, !tbaa !71
  %27 = getelementptr inbounds %struct.xpvinvlist, ptr %24, i64 0, i32 4
  store i64 0, ptr %27, align 8, !tbaa !71
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl__add_range_to_invlist(ptr noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #0 {
  %4 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8, !tbaa !5
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %25

6:                                                ; preds = %3
  %7 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %8 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !62
  %10 = and i32 %9, 268435456
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = load ptr, ptr %7, align 8, !tbaa !63
  %14 = getelementptr inbounds %struct.xpv, ptr %13, i64 0, i32 3
  %15 = load i64, ptr %14, align 8, !tbaa !9
  %16 = icmp ult i64 %15, 25
  br i1 %16, label %17, label %20

17:                                               ; preds = %6, %12
  %18 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %7, i64 noundef 25) #21
  %19 = load ptr, ptr %7, align 8, !tbaa !63
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi ptr [ %13, %12 ], [ %19, %17 ]
  %22 = getelementptr inbounds %struct.xpv, ptr %21, i64 0, i32 2
  store i64 0, ptr %22, align 8, !tbaa !72
  %23 = getelementptr inbounds %struct.xpvinvlist, ptr %21, i64 0, i32 5
  store i64 -1, ptr %23, align 8, !tbaa !71
  %24 = getelementptr inbounds %struct.xpvinvlist, ptr %21, i64 0, i32 4
  store i64 0, ptr %24, align 8, !tbaa !71
  store ptr %7, ptr %4, align 8, !tbaa !5
  br label %48

25:                                               ; preds = %3
  %26 = load ptr, ptr %0, align 8, !tbaa !63
  %27 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 2
  %28 = load i64, ptr %27, align 8, !tbaa !72
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %25
  %31 = lshr i64 %28, 3
  %32 = getelementptr %struct.xpvinvlist, ptr %26, i64 0, i32 6
  %33 = load i8, ptr %32, align 1, !tbaa !57, !range !59, !noundef !60
  %34 = zext i8 %33 to i64
  %35 = icmp eq i64 %31, %34
  br i1 %35, label %48, label %36

36:                                               ; preds = %30
  %37 = xor i64 %34, -1
  %38 = add nsw i64 %31, %37
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %36
  %42 = getelementptr i8, ptr %0, i64 16
  %43 = load ptr, ptr %42, align 8, !tbaa !9
  %44 = getelementptr inbounds i64, ptr %43, i64 %34
  %45 = getelementptr inbounds i64, ptr %44, i64 %38
  %46 = load i64, ptr %45, align 8, !tbaa !71
  %47 = icmp ugt i64 %46, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %25, %20, %41, %30
  %49 = phi ptr [ %0, %25 ], [ %7, %20 ], [ %0, %41 ], [ %0, %30 ]
  tail call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %49, i64 noundef %1, i64 noundef %2)
  br label %75

50:                                               ; preds = %41, %36
  %51 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %52 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !62
  %54 = and i32 %53, 268435456
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %50
  %57 = load ptr, ptr %51, align 8, !tbaa !63
  %58 = getelementptr inbounds %struct.xpv, ptr %57, i64 0, i32 3
  %59 = load i64, ptr %58, align 8, !tbaa !9
  %60 = icmp ult i64 %59, 25
  br i1 %60, label %61, label %64

61:                                               ; preds = %50, %56
  %62 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %51, i64 noundef 25) #21
  %63 = load ptr, ptr %51, align 8, !tbaa !63
  br label %64

64:                                               ; preds = %56, %61
  %65 = phi ptr [ %57, %56 ], [ %63, %61 ]
  %66 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 2
  store i64 0, ptr %66, align 8, !tbaa !72
  %67 = getelementptr inbounds %struct.xpvinvlist, ptr %65, i64 0, i32 5
  store i64 -1, ptr %67, align 8, !tbaa !71
  %68 = getelementptr inbounds %struct.xpvinvlist, ptr %65, i64 0, i32 4
  store i64 0, ptr %68, align 8, !tbaa !71
  tail call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %51, i64 noundef %1, i64 noundef %2)
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %0, ptr noundef nonnull %51, i1 noundef zeroext false, ptr noundef nonnull %4)
  %69 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 1
  %70 = load i32, ptr %69, align 8, !tbaa !22
  %71 = icmp ugt i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %64
  %73 = add i32 %70, -1
  store i32 %73, ptr %69, align 8, !tbaa !22
  br label %75

74:                                               ; preds = %64
  tail call void @Perl_sv_free2(ptr noundef nonnull %51, i32 noundef %70) #21
  br label %75

75:                                               ; preds = %74, %72, %48
  %76 = load ptr, ptr %4, align 8, !tbaa !5
  ret ptr %76
}

declare ptr @Perl_safesysmalloc(i64 noundef) local_unnamed_addr #1

declare void @Perl_save_pushptr(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_concat_pat(ptr nocapture noundef %0, ptr noundef %1, ptr noundef readonly %2, i32 noundef %3, ptr noundef %4, ptr nocapture noundef writeonly %5, ptr noundef %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = icmp eq ptr %1, null
  %10 = icmp ne i32 %3, 1
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  tail call void @Perl_save_pushptr(ptr noundef %13, i32 noundef 11) #21
  br label %14

14:                                               ; preds = %12, %7
  %15 = phi ptr [ %13, %12 ], [ %1, %7 ]
  %16 = sext i32 %3 to i64
  %17 = getelementptr inbounds ptr, ptr %2, i64 %16
  %18 = icmp sgt i32 %3, 0
  br i1 %18, label %19, label %466

19:                                               ; preds = %14
  %20 = icmp eq ptr %6, null
  %21 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 38
  %22 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 39
  %23 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %24 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 26
  br label %25

25:                                               ; preds = %19, %460
  %26 = phi ptr [ %15, %19 ], [ %463, %460 ]
  %27 = phi ptr [ %4, %19 ], [ %462, %460 ]
  %28 = phi ptr [ %2, %19 ], [ %464, %460 ]
  %29 = phi i32 [ 0, %19 ], [ %461, %460 ]
  %30 = phi i8 [ 0, %19 ], [ %40, %460 ]
  %31 = and i8 %30, 1
  %32 = icmp ne i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %25
  %34 = load ptr, ptr %28, align 8, !tbaa !5
  br label %35

35:                                               ; preds = %25, %33
  %36 = phi ptr [ %34, %33 ], [ %6, %25 ]
  %37 = icmp eq ptr %36, null
  %38 = select i1 %37, ptr @PL_sv_undef, ptr %36
  %39 = select i1 %20, i8 %30, i8 1
  %40 = select i1 %32, i8 0, i8 %39
  %41 = sext i1 %32 to i64
  %42 = getelementptr inbounds ptr, ptr %28, i64 %41
  %43 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 2
  %44 = load i32, ptr %43, align 4, !tbaa !62
  %45 = and i32 %44, 255
  %46 = icmp eq i32 %45, 11
  br i1 %46, label %47, label %95

47:                                               ; preds = %35
  %48 = and i32 %44, 8388608
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = call i32 @Perl_mg_size(ptr noundef nonnull %38) #21
  %52 = sext i32 %51 to i64
  br label %57

53:                                               ; preds = %47
  %54 = load ptr, ptr %38, align 8, !tbaa !122
  %55 = getelementptr inbounds %struct.xpvav, ptr %54, i64 0, i32 2
  %56 = load i64, ptr %55, align 8, !tbaa !124
  br label %57

57:                                               ; preds = %53, %50
  %58 = phi i64 [ %52, %50 ], [ %56, %53 ]
  %59 = add i64 %58, 1
  %60 = icmp eq ptr %27, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !88
  br label %64

64:                                               ; preds = %61, %57
  %65 = phi ptr [ %63, %61 ], [ null, %57 ]
  %66 = load i32, ptr %43, align 4, !tbaa !227
  %67 = and i32 %66, 8388608
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %64
  %70 = shl i64 %59, 3
  %71 = call ptr @Perl_safesysmalloc(i64 noundef %70) #21
  call void @Perl_save_pushptr(ptr noundef %71, i32 noundef 10) #21
  %72 = icmp slt i64 %58, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %69, %79
  %74 = phi i64 [ %82, %79 ], [ 0, %69 ]
  %75 = call ptr @Perl_av_fetch(ptr noundef nonnull %38, i64 noundef %74, i32 noundef 0) #21
  %76 = icmp eq ptr %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr %75, align 8, !tbaa !5
  br label %79

79:                                               ; preds = %73, %77
  %80 = phi ptr [ %78, %77 ], [ @PL_sv_undef, %73 ]
  %81 = getelementptr inbounds ptr, ptr %71, i64 %74
  store ptr %80, ptr %81, align 8, !tbaa !5
  %82 = add nuw i64 %74, 1
  %83 = icmp eq i64 %74, %58
  br i1 %83, label %87, label %73, !llvm.loop !228

84:                                               ; preds = %64
  %85 = getelementptr inbounds %struct.av, ptr %38, i64 0, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !9
  br label %87

87:                                               ; preds = %79, %69, %84
  %88 = phi ptr [ %86, %84 ], [ %71, %69 ], [ %71, %79 ]
  %89 = trunc i64 %59 to i32
  %90 = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.206, i64 noundef 1, i32 noundef 2, i32 noundef 3) #21
  %91 = getelementptr inbounds %struct.gv, ptr %90, i64 0, i32 3
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  %93 = load ptr, ptr %92, align 8, !tbaa !229
  %94 = call fastcc ptr @S_concat_pat(ptr noundef %0, ptr noundef %26, ptr noundef %88, i32 noundef %89, ptr noundef null, ptr noundef %5, ptr noundef %93)
  br label %460

95:                                               ; preds = %35
  %96 = icmp eq ptr %27, null
  br i1 %96, label %128, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 4
  %99 = load i16, ptr %98, align 8
  %100 = and i16 %99, 511
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %102, label %122

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 5
  %104 = load i8, ptr %103, align 2, !tbaa !80
  %105 = icmp sgt i8 %104, -1
  br i1 %105, label %122, label %106

106:                                              ; preds = %102
  %107 = icmp eq ptr %26, null
  br i1 %107, label %112, label %108

108:                                              ; preds = %106
  %109 = load ptr, ptr %26, align 8, !tbaa !63
  %110 = getelementptr inbounds %struct.xpv, ptr %109, i64 0, i32 2
  %111 = load i64, ptr %110, align 8, !tbaa !72
  br label %112

112:                                              ; preds = %106, %108
  %113 = phi i64 [ %111, %108 ], [ 0, %106 ]
  %114 = load ptr, ptr %21, align 8, !tbaa !74
  %115 = sext i32 %29 to i64
  %116 = getelementptr inbounds %struct.reg_code_block, ptr %114, i64 %115
  store i64 %113, ptr %116, align 8, !tbaa !104
  %117 = getelementptr inbounds %struct.reg_code_block, ptr %114, i64 %115, i32 2
  store ptr %27, ptr %117, align 8, !tbaa !127
  %118 = getelementptr inbounds %struct.reg_code_block, ptr %114, i64 %115, i32 3
  store ptr null, ptr %118, align 8, !tbaa !20
  %119 = add nsw i32 %29, 1
  %120 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !88
  br label %122

122:                                              ; preds = %112, %102, %97
  %123 = phi i1 [ true, %112 ], [ false, %102 ], [ false, %97 ]
  %124 = phi i32 [ %119, %112 ], [ %29, %102 ], [ %29, %97 ]
  %125 = phi ptr [ %121, %112 ], [ %27, %102 ], [ %27, %97 ]
  %126 = getelementptr inbounds %struct.op, ptr %125, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !88
  br label %128

128:                                              ; preds = %122, %95
  %129 = phi i1 [ %123, %122 ], [ false, %95 ]
  %130 = phi i32 [ %124, %122 ], [ %29, %95 ]
  %131 = phi ptr [ %127, %122 ], [ null, %95 ]
  %132 = and i32 %44, 2097152
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %128
  %135 = call i32 @Perl_mg_get(ptr noundef nonnull %38) #21
  %136 = load i32, ptr %43, align 4, !tbaa !62
  br label %137

137:                                              ; preds = %128, %134
  %138 = phi i32 [ %44, %128 ], [ %136, %134 ]
  %139 = and i32 %138, 2048
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %174, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 3
  %143 = load ptr, ptr %142, align 8, !tbaa !9
  %144 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 2
  %145 = load i32, ptr %144, align 4, !tbaa !62
  %146 = and i32 %145, 1048576
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %174, label %148

148:                                              ; preds = %141
  %149 = load ptr, ptr %143, align 8, !tbaa !63
  %150 = load ptr, ptr %149, align 8, !tbaa !92
  %151 = getelementptr inbounds %struct.hv, ptr %150, i64 0, i32 2
  %152 = load i32, ptr %151, align 4, !tbaa !94
  %153 = and i32 %152, 268435456
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %174, label %155

155:                                              ; preds = %148
  %156 = call ptr @Perl_amagic_call(ptr noundef nonnull %38, ptr noundef nonnull @PL_sv_undef, i32 noundef 74, i32 noundef 9) #21
  %157 = icmp eq ptr %156, null
  br i1 %157, label %174, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %struct.sv, ptr %156, i64 0, i32 2
  %160 = load i32, ptr %159, align 4, !tbaa !62
  %161 = and i32 %160, 2048
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %168, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %struct.sv, ptr %156, i64 0, i32 3
  %165 = load ptr, ptr %164, align 8, !tbaa !9
  %166 = getelementptr inbounds %struct.sv, ptr %165, i64 0, i32 2
  %167 = load i32, ptr %166, align 4, !tbaa !62
  br label %168

168:                                              ; preds = %163, %158
  %169 = phi i32 [ %167, %163 ], [ %160, %158 ]
  %170 = phi ptr [ %165, %163 ], [ %156, %158 ]
  %171 = and i32 %169, 255
  %172 = icmp eq i32 %171, 8
  br i1 %172, label %174, label %173

173:                                              ; preds = %168
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.207) #21
  br label %174

174:                                              ; preds = %155, %173, %168, %148, %141, %137
  %175 = phi ptr [ %38, %148 ], [ %38, %141 ], [ %38, %137 ], [ %38, %155 ], [ %170, %173 ], [ %170, %168 ]
  %176 = icmp eq ptr %26, null
  br i1 %176, label %221, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 2
  %179 = load i32, ptr %178, align 4, !tbaa !62
  %180 = and i32 %179, 2048
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %196, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 3
  %184 = load ptr, ptr %183, align 8, !tbaa !9
  %185 = getelementptr inbounds %struct.sv, ptr %184, i64 0, i32 2
  %186 = load i32, ptr %185, align 4, !tbaa !62
  %187 = and i32 %186, 1048576
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %196, label %189

189:                                              ; preds = %182
  %190 = load ptr, ptr %184, align 8, !tbaa !63
  %191 = load ptr, ptr %190, align 8, !tbaa !92
  %192 = getelementptr inbounds %struct.hv, ptr %191, i64 0, i32 2
  %193 = load i32, ptr %192, align 4, !tbaa !94
  %194 = and i32 %193, 268435456
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %215

196:                                              ; preds = %189, %182, %177
  %197 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 2
  %198 = load i32, ptr %197, align 4, !tbaa !62
  %199 = and i32 %198, 2048
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %221, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 3
  %203 = load ptr, ptr %202, align 8, !tbaa !9
  %204 = getelementptr inbounds %struct.sv, ptr %203, i64 0, i32 2
  %205 = load i32, ptr %204, align 4, !tbaa !62
  %206 = and i32 %205, 1048576
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %221, label %208

208:                                              ; preds = %201
  %209 = load ptr, ptr %203, align 8, !tbaa !63
  %210 = load ptr, ptr %209, align 8, !tbaa !92
  %211 = getelementptr inbounds %struct.hv, ptr %210, i64 0, i32 2
  %212 = load i32, ptr %211, align 4, !tbaa !94
  %213 = and i32 %212, 268435456
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %221, label %215

215:                                              ; preds = %208, %189
  %216 = call ptr @Perl_amagic_call(ptr noundef nonnull %26, ptr noundef nonnull %175, i32 noundef 70, i32 noundef 4) #21
  %217 = icmp eq ptr %216, null
  br i1 %217, label %221, label %218

218:                                              ; preds = %215
  call void @Perl_sv_setsv_flags(ptr noundef nonnull %26, ptr noundef nonnull %216, i32 noundef 1538) #21
  %219 = load i32, ptr %22, align 8, !tbaa !77
  %220 = sub nsw i32 %219, %130
  store i32 %220, ptr %22, align 8, !tbaa !77
  br label %460

221:                                              ; preds = %215, %208, %201, %196, %174
  %222 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 2
  %223 = load i32, ptr %222, align 4, !tbaa !62
  %224 = and i32 %223, 2048
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %286, label %226

226:                                              ; preds = %221, %268
  %227 = phi ptr [ %262, %268 ], [ %222, %221 ]
  %228 = phi ptr [ %243, %268 ], [ %175, %221 ]
  %229 = getelementptr inbounds %struct.sv, ptr %228, i64 0, i32 3
  %230 = load ptr, ptr %229, align 8, !tbaa !9
  %231 = getelementptr inbounds %struct.sv, ptr %230, i64 0, i32 2
  %232 = load i32, ptr %231, align 4, !tbaa !62
  %233 = and i32 %232, 1048576
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %272, label %235

235:                                              ; preds = %226
  %236 = load ptr, ptr %230, align 8, !tbaa !63
  %237 = load ptr, ptr %236, align 8, !tbaa !92
  %238 = getelementptr inbounds %struct.hv, ptr %237, i64 0, i32 2
  %239 = load i32, ptr %238, align 4, !tbaa !94
  %240 = and i32 %239, 268435456
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %272, label %242

242:                                              ; preds = %235
  %243 = call ptr @Perl_amagic_call(ptr noundef nonnull %228, ptr noundef nonnull @PL_sv_undef, i32 noundef 10, i32 noundef 9) #21
  %244 = icmp eq ptr %243, null
  %245 = icmp eq ptr %243, %228
  %246 = or i1 %244, %245
  br i1 %246, label %272, label %247

247:                                              ; preds = %242
  %248 = load i32, ptr %227, align 4, !tbaa !62
  %249 = and i32 %248, 2048
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %struct.sv, ptr %243, i64 0, i32 2
  %252 = load i32, ptr %251, align 4, !tbaa !62
  %253 = and i32 %252, 2048
  %254 = icmp eq i32 %253, 0
  %255 = select i1 %250, i1 true, i1 %254
  br i1 %255, label %261, label %256

256:                                              ; preds = %247
  %257 = load ptr, ptr %229, align 8, !tbaa !9
  %258 = getelementptr inbounds %struct.sv, ptr %243, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8, !tbaa !9
  %260 = icmp eq ptr %257, %259
  br i1 %260, label %272, label %261

261:                                              ; preds = %247, %256
  %262 = getelementptr inbounds %struct.sv, ptr %243, i64 0, i32 2
  %263 = and i32 %252, 2097152
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %261
  %266 = call i32 @Perl_mg_get(ptr noundef nonnull %243) #21
  %267 = load i32, ptr %262, align 4, !tbaa !62
  br label %268

268:                                              ; preds = %261, %265
  %269 = phi i32 [ %252, %261 ], [ %267, %265 ]
  %270 = and i32 %269, 2048
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %226, !llvm.loop !230

272:                                              ; preds = %256, %268, %226, %235, %242
  %273 = phi ptr [ %228, %256 ], [ %243, %268 ], [ %228, %226 ], [ %228, %235 ], [ %228, %242 ]
  %274 = phi ptr [ %227, %256 ], [ %262, %268 ], [ %227, %226 ], [ %227, %235 ], [ %227, %242 ]
  %275 = load i32, ptr %274, align 4, !tbaa !62
  %276 = and i32 %275, 2048
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %286, label %278

278:                                              ; preds = %272
  %279 = getelementptr inbounds %struct.sv, ptr %273, i64 0, i32 3
  %280 = load ptr, ptr %279, align 8, !tbaa !9
  %281 = getelementptr inbounds %struct.sv, ptr %280, i64 0, i32 2
  %282 = load i32, ptr %281, align 4, !tbaa !62
  %283 = and i32 %282, 255
  %284 = icmp eq i32 %283, 8
  %285 = select i1 %284, ptr %280, ptr %273
  br label %286

286:                                              ; preds = %221, %278, %272
  %287 = phi ptr [ %273, %272 ], [ %285, %278 ], [ %175, %221 ]
  br i1 %176, label %379, label %288

288:                                              ; preds = %286
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  %289 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 2
  %290 = load i32, ptr %289, align 4, !tbaa !62
  %291 = and i32 %290, 430018304
  %292 = icmp eq i32 %291, 1024
  br i1 %292, label %293, label %299

293:                                              ; preds = %288
  %294 = load ptr, ptr %26, align 8, !tbaa !63
  %295 = getelementptr inbounds %struct.xpv, ptr %294, i64 0, i32 2
  %296 = load i64, ptr %295, align 8, !tbaa !72
  store i64 %296, ptr %8, align 8, !tbaa !71
  %297 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 3
  %298 = load ptr, ptr %297, align 8, !tbaa !9
  br label %302

299:                                              ; preds = %288
  %300 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %26, ptr noundef nonnull %8, i32 noundef 0) #21
  %301 = load i64, ptr %8, align 8, !tbaa !71
  br label %302

302:                                              ; preds = %299, %293
  %303 = phi i64 [ %296, %293 ], [ %301, %299 ]
  %304 = phi ptr [ %298, %293 ], [ %300, %299 ]
  %305 = getelementptr inbounds %struct.sv, ptr %287, i64 0, i32 2
  %306 = load i32, ptr %305, align 4, !tbaa !62
  %307 = and i32 %306, 536870912
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %378, label %309

309:                                              ; preds = %302
  %310 = load i32, ptr %289, align 4, !tbaa !62
  %311 = and i32 %310, 536870912
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %378

313:                                              ; preds = %309
  %314 = shl i64 %303, 1
  %315 = or i64 %314, 1
  %316 = call ptr @Perl_safesysmalloc(i64 noundef %315) #21
  %317 = load i64, ptr %8, align 8, !tbaa !71
  %318 = icmp eq i64 %317, 0
  %319 = ptrtoint ptr %316 to i64
  br i1 %318, label %371, label %320

320:                                              ; preds = %313
  %321 = xor i64 %319, -1
  br label %322

322:                                              ; preds = %363, %320
  %323 = phi i8 [ 0, %320 ], [ %365, %363 ]
  %324 = phi i64 [ 0, %320 ], [ %366, %363 ]
  %325 = phi i32 [ 0, %320 ], [ %364, %363 ]
  %326 = phi ptr [ %316, %320 ], [ %341, %363 ]
  %327 = getelementptr inbounds i8, ptr %304, i64 %324
  %328 = load i8, ptr %327, align 1, !tbaa !9
  %329 = icmp sgt i8 %328, -1
  br i1 %329, label %330, label %332

330:                                              ; preds = %322
  %331 = getelementptr inbounds i8, ptr %326, i64 1
  br label %339

332:                                              ; preds = %322
  %333 = lshr i8 %328, 6
  %334 = or i8 %333, -64
  %335 = getelementptr inbounds i8, ptr %326, i64 1
  %336 = and i8 %328, 63
  %337 = or i8 %336, -128
  %338 = getelementptr inbounds i8, ptr %326, i64 2
  store i8 %337, ptr %335, align 1, !tbaa !9
  br label %339

339:                                              ; preds = %332, %330
  %340 = phi i8 [ %328, %330 ], [ %334, %332 ]
  %341 = phi ptr [ %331, %330 ], [ %338, %332 ]
  store i8 %340, ptr %326, align 1
  %342 = icmp slt i32 %325, %130
  br i1 %342, label %343, label %363

343:                                              ; preds = %339
  %344 = and i8 %323, 1
  %345 = icmp eq i8 %344, 0
  %346 = load ptr, ptr %21, align 8, !tbaa !74
  %347 = sext i32 %325 to i64
  br i1 %345, label %348, label %355

348:                                              ; preds = %343
  %349 = getelementptr inbounds %struct.reg_code_block, ptr %346, i64 %347
  %350 = load i64, ptr %349, align 8, !tbaa !104
  %351 = icmp eq i64 %350, %324
  br i1 %351, label %352, label %363

352:                                              ; preds = %348
  %353 = ptrtoint ptr %341 to i64
  %354 = add i64 %353, %321
  store i64 %354, ptr %349, align 8, !tbaa !104
  br label %363

355:                                              ; preds = %343
  %356 = getelementptr inbounds %struct.reg_code_block, ptr %346, i64 %347, i32 1
  %357 = load i64, ptr %356, align 8, !tbaa !105
  %358 = icmp eq i64 %357, %324
  br i1 %358, label %359, label %363

359:                                              ; preds = %355
  %360 = ptrtoint ptr %341 to i64
  %361 = add i64 %360, %321
  store i64 %361, ptr %356, align 8, !tbaa !105
  %362 = add nsw i32 %325, 1
  br label %363

363:                                              ; preds = %359, %355, %352, %348, %339
  %364 = phi i32 [ %362, %359 ], [ %325, %355 ], [ %325, %352 ], [ %325, %339 ], [ %325, %348 ]
  %365 = phi i8 [ 0, %359 ], [ %323, %355 ], [ 1, %352 ], [ %323, %339 ], [ %323, %348 ]
  %366 = add nuw i64 %324, 1
  %367 = load i64, ptr %8, align 8, !tbaa !71
  %368 = icmp ult i64 %366, %367
  br i1 %368, label %322, label %369, !llvm.loop !129

369:                                              ; preds = %363
  %370 = ptrtoint ptr %341 to i64
  br label %371

371:                                              ; preds = %313, %369
  %372 = phi i64 [ %370, %369 ], [ %319, %313 ]
  %373 = phi ptr [ %341, %369 ], [ %316, %313 ]
  store i8 0, ptr %373, align 1, !tbaa !9
  %374 = sub i64 %372, %319
  store i64 %374, ptr %8, align 8, !tbaa !71
  call void @Perl_save_pushptr(ptr noundef %316, i32 noundef 10) #21
  store i32 1, ptr %23, align 8, !tbaa !98
  store i32 1, ptr %24, align 4, !tbaa !97
  %375 = load i64, ptr %8, align 8, !tbaa !71
  call void @Perl_sv_setpvn(ptr noundef nonnull %26, ptr noundef %316, i64 noundef %375) #21
  %376 = load i32, ptr %289, align 4, !tbaa !62
  %377 = or i32 %376, 536870912
  store i32 %377, ptr %289, align 4, !tbaa !62
  br label %378

378:                                              ; preds = %371, %309, %302
  call void @Perl_sv_catsv_flags(ptr noundef nonnull %26, ptr noundef %287, i32 noundef 0) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  br label %379

379:                                              ; preds = %286, %378
  %380 = phi ptr [ %287, %378 ], [ null, %286 ]
  %381 = phi i64 [ %303, %378 ], [ 0, %286 ]
  %382 = phi ptr [ %26, %378 ], [ %287, %286 ]
  br i1 %129, label %383, label %392

383:                                              ; preds = %379
  %384 = load ptr, ptr %382, align 8, !tbaa !63
  %385 = getelementptr inbounds %struct.xpv, ptr %384, i64 0, i32 2
  %386 = load i64, ptr %385, align 8, !tbaa !72
  %387 = add i64 %386, -1
  %388 = load ptr, ptr %21, align 8, !tbaa !74
  %389 = add nsw i32 %130, -1
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds %struct.reg_code_block, ptr %388, i64 %390, i32 1
  store i64 %387, ptr %391, align 8, !tbaa !105
  br label %392

392:                                              ; preds = %379, %383
  %393 = icmp eq ptr %380, null
  br i1 %393, label %460, label %394

394:                                              ; preds = %392
  %395 = getelementptr inbounds %struct.sv, ptr %380, i64 0, i32 2
  %396 = load i32, ptr %395, align 4, !tbaa !62
  %397 = and i32 %396, 255
  %398 = icmp eq i32 %397, 8
  br i1 %398, label %399, label %460

399:                                              ; preds = %394
  %400 = getelementptr i8, ptr %380, i64 16
  %401 = load ptr, ptr %400, align 8, !tbaa !9
  %402 = getelementptr inbounds %struct.regexp, ptr %401, i64 0, i32 4
  %403 = load ptr, ptr %402, align 8, !tbaa !67
  %404 = getelementptr inbounds %struct.regexp_engine, ptr %403, i64 0, i32 11
  %405 = load ptr, ptr %404, align 8, !tbaa !89
  %406 = icmp eq ptr %405, null
  br i1 %406, label %460, label %407

407:                                              ; preds = %399
  %408 = getelementptr inbounds %struct.regexp, ptr %401, i64 0, i32 14
  %409 = load ptr, ptr %408, align 8, !tbaa !16
  %410 = getelementptr inbounds %struct.regexp_internal, ptr %409, i64 0, i32 5
  %411 = load i32, ptr %410, align 8, !tbaa !19
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %460, label %413

413:                                              ; preds = %407
  store i8 1, ptr %5, align 1, !tbaa !57
  %414 = load ptr, ptr %21, align 8, !tbaa !74
  %415 = load i32, ptr %22, align 8, !tbaa !77
  %416 = add nsw i32 %415, %411
  %417 = sext i32 %416 to i64
  %418 = shl nsw i64 %417, 5
  %419 = call ptr @Perl_safesysrealloc(ptr noundef %414, i64 noundef %418) #21
  store ptr %419, ptr %21, align 8, !tbaa !74
  %420 = load i32, ptr %410, align 8, !tbaa !19
  %421 = load i32, ptr %22, align 8, !tbaa !77
  %422 = add nsw i32 %421, %420
  store i32 %422, ptr %22, align 8, !tbaa !77
  %423 = icmp sgt i32 %420, 0
  br i1 %423, label %424, label %460

424:                                              ; preds = %413
  %425 = getelementptr inbounds %struct.regexp_internal, ptr %409, i64 0, i32 4
  %426 = load ptr, ptr %425, align 8, !tbaa !17
  %427 = sext i32 %130 to i64
  %428 = zext i32 %420 to i64
  br label %429

429:                                              ; preds = %424, %429
  %430 = phi i64 [ %427, %424 ], [ %455, %429 ]
  %431 = phi i64 [ 0, %424 ], [ %456, %429 ]
  %432 = load ptr, ptr %400, align 8, !tbaa !9
  %433 = getelementptr inbounds %struct.regexp, ptr %432, i64 0, i32 24
  %434 = load i16, ptr %433, align 8
  %435 = and i16 %434, 15
  %436 = zext i16 %435 to i64
  %437 = add i64 %381, %436
  %438 = getelementptr inbounds %struct.reg_code_block, ptr %426, i64 %431
  %439 = getelementptr inbounds %struct.reg_code_block, ptr %419, i64 %430
  %440 = load <2 x i64>, ptr %438, align 8, !tbaa !71
  %441 = insertelement <2 x i64> poison, i64 %437, i64 0
  %442 = shufflevector <2 x i64> %441, <2 x i64> poison, <2 x i32> zeroinitializer
  %443 = add <2 x i64> %442, %440
  store <2 x i64> %443, ptr %439, align 8, !tbaa !71
  %444 = getelementptr inbounds %struct.reg_code_block, ptr %426, i64 %431, i32 2
  %445 = load ptr, ptr %444, align 8, !tbaa !127
  %446 = getelementptr inbounds %struct.reg_code_block, ptr %419, i64 %430, i32 2
  store ptr %445, ptr %446, align 8, !tbaa !127
  %447 = getelementptr inbounds %struct.reg_code_block, ptr %426, i64 %431, i32 3
  %448 = load ptr, ptr %447, align 8, !tbaa !20
  %449 = icmp eq ptr %448, null
  %450 = select i1 %449, ptr %380, ptr %448
  %451 = getelementptr inbounds %struct.sv, ptr %450, i64 0, i32 1
  %452 = load i32, ptr %451, align 8, !tbaa !22
  %453 = add i32 %452, 1
  store i32 %453, ptr %451, align 8, !tbaa !22
  %454 = getelementptr inbounds %struct.reg_code_block, ptr %419, i64 %430, i32 3
  store ptr %450, ptr %454, align 8, !tbaa !20
  %455 = add nsw i64 %430, 1
  %456 = add nuw nsw i64 %431, 1
  %457 = icmp eq i64 %456, %428
  br i1 %457, label %458, label %429, !llvm.loop !231

458:                                              ; preds = %429
  %459 = trunc i64 %455 to i32
  br label %460

460:                                              ; preds = %458, %413, %218, %392, %394, %399, %407, %87
  %461 = phi i32 [ %29, %87 ], [ %130, %399 ], [ %130, %394 ], [ %130, %392 ], [ %130, %407 ], [ 0, %218 ], [ %130, %413 ], [ %459, %458 ]
  %462 = phi ptr [ %65, %87 ], [ %131, %399 ], [ %131, %394 ], [ %131, %392 ], [ %131, %407 ], [ %131, %218 ], [ %131, %413 ], [ %131, %458 ]
  %463 = phi ptr [ %94, %87 ], [ %382, %399 ], [ %382, %394 ], [ %382, %392 ], [ %382, %407 ], [ %26, %218 ], [ %382, %413 ], [ %382, %458 ]
  %464 = getelementptr inbounds ptr, ptr %42, i64 1
  %465 = icmp ult ptr %464, %17
  br i1 %465, label %25, label %466, !llvm.loop !232

466:                                              ; preds = %460, %14
  %467 = phi ptr [ %15, %14 ], [ %463, %460 ]
  br i1 %11, label %468, label %475

468:                                              ; preds = %466
  %469 = getelementptr inbounds %struct.sv, ptr %467, i64 0, i32 2
  %470 = load i32, ptr %469, align 4, !tbaa !62
  %471 = and i32 %470, 4194304
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %475, label %473

473:                                              ; preds = %468
  %474 = call i32 @Perl_mg_set(ptr noundef nonnull %467) #21
  br label %475

475:                                              ; preds = %473, %468, %466
  ret ptr %467
}

declare void @Perl_safesysfree(ptr noundef) local_unnamed_addr #1

declare ptr @Perl_sv_2pv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_newSVpvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1

declare void @Perl_croak(ptr noundef, ...) local_unnamed_addr #1

declare ptr @Perl_newSV_type(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  %11 = load i32, ptr %0, align 8, !tbaa !109
  %12 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !138
  store i32 0, ptr %2, align 4, !tbaa !150
  switch i32 %1, label %18 [
    i32 0, label %1768
    i32 2, label %14
  ]

14:                                               ; preds = %4
  %15 = getelementptr inbounds i8, ptr %13, i64 -1
  %16 = load i8, ptr %15, align 1, !tbaa !9
  %17 = icmp ne i8 %16, 40
  br label %18

18:                                               ; preds = %4, %14
  %19 = phi i1 [ %17, %14 ], [ false, %4 ]
  %20 = load i8, ptr %13, align 1, !tbaa !9
  switch i8 %20, label %1713 [
    i8 42, label %21
    i8 63, label %413
  ]

21:                                               ; preds = %18
  br i1 %19, label %22, label %51

22:                                               ; preds = %21
  %23 = getelementptr inbounds i8, ptr %13, i64 1
  store ptr %23, ptr %12, align 8, !tbaa !138
  %24 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %25 = load ptr, ptr %24, align 8, !tbaa !145
  %26 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %30, i32 noundef 11) #21
  %31 = load ptr, ptr %12, align 8, !tbaa !138
  br label %32

32:                                               ; preds = %22, %28
  %33 = phi ptr [ %23, %22 ], [ %31, %28 ]
  %34 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !140
  %36 = icmp ugt ptr %33, %35
  %37 = select i1 %36, ptr %35, ptr %33
  %38 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !108
  %40 = ptrtoint ptr %37 to i64
  %41 = ptrtoint ptr %39 to i64
  %42 = sub i64 %40, %41
  %43 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %44 = load i32, ptr %43, align 8, !tbaa !98
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i32
  %47 = ptrtoint ptr %35 to i64
  %48 = sub i64 %47, %40
  %49 = getelementptr inbounds i8, ptr %39, i64 %42
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.228, i32 noundef %46, i64 noundef %42, ptr noundef %39, i32 noundef %46, i64 noundef %48, ptr noundef %49) #21
  %50 = load ptr, ptr %12, align 8, !tbaa !138
  br label %51

51:                                               ; preds = %32, %21
  %52 = phi ptr [ %13, %21 ], [ %50, %32 ]
  br label %53

53:                                               ; preds = %51, %56
  %54 = phi ptr [ %57, %56 ], [ %52, %51 ]
  %55 = load i8, ptr %54, align 1, !tbaa !9
  switch i8 %55, label %56 [
    i8 0, label %100
    i8 41, label %100
    i8 58, label %58
  ]

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, ptr %54, i64 1
  store ptr %57, ptr %12, align 8, !tbaa !138
  br label %53, !llvm.loop !233

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, ptr %54, i64 1
  %60 = getelementptr inbounds i8, ptr %13, i64 1
  %61 = ptrtoint ptr %54 to i64
  %62 = ptrtoint ptr %60 to i64
  %63 = sub i64 %61, %62
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi ptr [ %54, %58 ], [ %66, %64 ]
  %66 = getelementptr inbounds i8, ptr %65, i64 1
  store ptr %66, ptr %12, align 8, !tbaa !138
  %67 = load i8, ptr %66, align 1, !tbaa !9
  switch i8 %67, label %64 [
    i8 41, label %96
    i8 0, label %68
  ]

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %70 = load ptr, ptr %69, align 8, !tbaa !145
  %71 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %72 = icmp eq ptr %70, %71
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %75 = load ptr, ptr %74, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %75, i32 noundef 11) #21
  %76 = load ptr, ptr %12, align 8, !tbaa !138
  br label %77

77:                                               ; preds = %68, %73
  %78 = phi ptr [ %66, %68 ], [ %76, %73 ]
  %79 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %80 = load ptr, ptr %79, align 8, !tbaa !140
  %81 = icmp ugt ptr %78, %80
  %82 = select i1 %81, ptr %80, ptr %78
  %83 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !108
  %85 = ptrtoint ptr %82 to i64
  %86 = ptrtoint ptr %84 to i64
  %87 = sub i64 %85, %86
  %88 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %89 = load i32, ptr %88, align 8, !tbaa !98
  %90 = icmp ne i32 %89, 0
  %91 = zext i1 %90 to i32
  %92 = ptrtoint ptr %80 to i64
  %93 = sub i64 %92, %85
  %94 = getelementptr inbounds i8, ptr %84, i64 %87
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.229, i32 noundef %91, i64 noundef %87, ptr noundef %84, i32 noundef %91, i64 noundef %93, ptr noundef %94) #21
  %95 = load ptr, ptr %12, align 8, !tbaa !138
  br label %96

96:                                               ; preds = %64, %77
  %97 = phi ptr [ %95, %77 ], [ %66, %64 ]
  %98 = icmp eq ptr %97, %59
  %99 = select i1 %98, ptr null, ptr %59
  br label %133

100:                                              ; preds = %53, %53
  %101 = getelementptr inbounds i8, ptr %13, i64 1
  %102 = ptrtoint ptr %54 to i64
  %103 = ptrtoint ptr %101 to i64
  %104 = sub i64 %102, %103
  %105 = icmp eq i8 %55, 41
  br i1 %105, label %133, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %108 = load ptr, ptr %107, align 8, !tbaa !145
  %109 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %110 = icmp eq ptr %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %113 = load ptr, ptr %112, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %113, i32 noundef 11) #21
  %114 = load ptr, ptr %12, align 8, !tbaa !138
  br label %115

115:                                              ; preds = %106, %111
  %116 = phi ptr [ %54, %106 ], [ %114, %111 ]
  %117 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %118 = load ptr, ptr %117, align 8, !tbaa !140
  %119 = icmp ugt ptr %116, %118
  %120 = select i1 %119, ptr %118, ptr %116
  %121 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !108
  %123 = ptrtoint ptr %120 to i64
  %124 = ptrtoint ptr %122 to i64
  %125 = sub i64 %123, %124
  %126 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %127 = load i32, ptr %126, align 8, !tbaa !98
  %128 = icmp ne i32 %127, 0
  %129 = zext i1 %128 to i32
  %130 = ptrtoint ptr %118 to i64
  %131 = sub i64 %130, %123
  %132 = getelementptr inbounds i8, ptr %122, i64 %125
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.230, i32 noundef %129, i64 noundef %125, ptr noundef %122, i32 noundef %129, i64 noundef %131, ptr noundef %132) #21
  br label %133

133:                                              ; preds = %100, %115, %96
  %134 = phi i64 [ %63, %96 ], [ %104, %115 ], [ %104, %100 ]
  %135 = phi ptr [ %60, %96 ], [ %101, %115 ], [ %101, %100 ]
  %136 = phi ptr [ %99, %96 ], [ null, %115 ], [ null, %100 ]
  %137 = load i8, ptr %135, align 1, !tbaa !9
  %138 = sext i8 %137 to i32
  switch i32 %138, label %180 [
    i32 65, label %139
    i32 67, label %144
    i32 70, label %149
    i32 58, label %153
    i32 77, label %153
    i32 80, label %160
    i32 83, label %165
    i32 84, label %167
  ]

139:                                              ; preds = %133
  %140 = icmp eq i64 %134, 6
  br i1 %140, label %141, label %180

141:                                              ; preds = %139
  %142 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %135, ptr noundef nonnull dereferenceable(6) @.str.83, i64 6)
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %224, label %180

144:                                              ; preds = %133
  %145 = icmp eq i64 %134, 6
  br i1 %145, label %146, label %180

146:                                              ; preds = %144
  %147 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %135, ptr noundef nonnull dereferenceable(6) @.str.88, i64 6)
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %221, label %180

149:                                              ; preds = %133
  switch i64 %134, label %180 [
    i64 1, label %366
    i64 4, label %150
  ]

150:                                              ; preds = %149
  %151 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %135, ptr noundef nonnull dereferenceable(4) @.str.231, i64 4)
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %366, label %180

153:                                              ; preds = %133, %133
  %154 = icmp eq ptr %54, %135
  br i1 %154, label %238, label %155

155:                                              ; preds = %153
  %156 = icmp eq i64 %134, 4
  br i1 %156, label %157, label %180

157:                                              ; preds = %155
  %158 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %135, ptr noundef nonnull dereferenceable(4) @.str.232, i64 4)
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %238, label %180

160:                                              ; preds = %133
  %161 = icmp eq i64 %134, 5
  br i1 %161, label %162, label %180

162:                                              ; preds = %160
  %163 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(5) %135, ptr noundef nonnull dereferenceable(5) @.str.85, i64 5)
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %221, label %180

165:                                              ; preds = %133
  %166 = icmp eq i64 %134, 4
  br i1 %166, label %177, label %180

167:                                              ; preds = %133
  %168 = icmp eq i64 %134, 4
  br i1 %168, label %169, label %180

169:                                              ; preds = %167
  %170 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %135, ptr noundef nonnull dereferenceable(4) @.str.233, i64 4)
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %180

172:                                              ; preds = %169
  %173 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %174 = load i32, ptr %173, align 8, !tbaa !131
  %175 = or i32 %174, 256
  store i32 %175, ptr %173, align 8, !tbaa !131
  %176 = icmp ne ptr %136, null
  br label %264

177:                                              ; preds = %165
  %178 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %135, ptr noundef nonnull dereferenceable(4) @.str.87, i64 4)
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %221, label %180

180:                                              ; preds = %149, %139, %141, %144, %150, %155, %157, %160, %165, %167, %169, %133, %162, %146, %177
  %181 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %182 = load i32, ptr %181, align 8, !tbaa !98
  %183 = icmp eq i32 %182, 0
  %184 = load ptr, ptr %12, align 8, !tbaa !138
  br i1 %183, label %191, label %185

185:                                              ; preds = %180
  %186 = load i8, ptr %184, align 1, !tbaa !9
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %187
  %189 = load i8, ptr %188, align 1, !tbaa !9
  %190 = zext i8 %189 to i64
  br label %191

191:                                              ; preds = %180, %185
  %192 = phi i64 [ %190, %185 ], [ 1, %180 ]
  %193 = getelementptr inbounds i8, ptr %184, i64 %192
  store ptr %193, ptr %12, align 8, !tbaa !138
  %194 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %195 = load ptr, ptr %194, align 8, !tbaa !108
  %196 = ptrtoint ptr %193 to i64
  %197 = ptrtoint ptr %195 to i64
  %198 = sub i64 %196, %197
  %199 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %200 = load ptr, ptr %199, align 8, !tbaa !145
  %201 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %202 = icmp eq ptr %200, %201
  br i1 %202, label %209, label %203

203:                                              ; preds = %191
  %204 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %205 = load ptr, ptr %204, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %205, i32 noundef 11) #21
  %206 = load i32, ptr %181, align 8, !tbaa !98
  %207 = load ptr, ptr %194, align 8, !tbaa !108
  %208 = ptrtoint ptr %207 to i64
  br label %209

209:                                              ; preds = %203, %191
  %210 = phi i64 [ %208, %203 ], [ %197, %191 ]
  %211 = phi ptr [ %207, %203 ], [ %195, %191 ]
  %212 = phi i32 [ %206, %203 ], [ %182, %191 ]
  %213 = icmp ne i32 %212, 0
  %214 = zext i1 %213 to i32
  %215 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %216 = load ptr, ptr %215, align 8, !tbaa !140
  %217 = ptrtoint ptr %216 to i64
  %218 = add i64 %210, %198
  %219 = sub i64 %217, %218
  %220 = getelementptr inbounds i8, ptr %211, i64 %198
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %213, ptr noundef nonnull @.str.234, ptr nonnull poison, i32 noundef %214, i64 noundef %134, ptr noundef nonnull %135, i32 noundef %214, i64 noundef %198, ptr noundef %211, i32 noundef %214, i64 noundef %219, ptr noundef %220)
  br label %221

221:                                              ; preds = %162, %146, %177, %209
  %222 = phi i8 [ 85, %162 ], [ 88, %146 ], [ 87, %177 ], [ 0, %209 ]
  %223 = icmp ne ptr %136, null
  br label %264

224:                                              ; preds = %141
  %225 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 19
  %226 = load i32, ptr %225, align 4, !tbaa !143
  %227 = icmp ne ptr %136, null
  %228 = icmp ne i32 %226, 0
  %229 = select i1 %227, i1 %228, i1 false
  br i1 %229, label %230, label %264

230:                                              ; preds = %224
  %231 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %232 = load ptr, ptr %231, align 8, !tbaa !145
  %233 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %234 = icmp eq ptr %232, %233
  br i1 %234, label %345, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %237 = load ptr, ptr %236, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %237, i32 noundef 11) #21
  br label %345

238:                                              ; preds = %153, %157
  %239 = icmp eq ptr %136, null
  br i1 %239, label %240, label %264

240:                                              ; preds = %238
  %241 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %242 = load ptr, ptr %241, align 8, !tbaa !145
  %243 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %244 = icmp eq ptr %242, %243
  br i1 %244, label %248, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %247 = load ptr, ptr %246, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %247, i32 noundef 11) #21
  br label %248

248:                                              ; preds = %240, %245
  %249 = load ptr, ptr %12, align 8, !tbaa !138
  %250 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %251 = load ptr, ptr %250, align 8, !tbaa !108
  %252 = ptrtoint ptr %249 to i64
  %253 = ptrtoint ptr %251 to i64
  %254 = sub i64 %252, %253
  %255 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %256 = load i32, ptr %255, align 8, !tbaa !98
  %257 = icmp ne i32 %256, 0
  %258 = zext i1 %257 to i32
  %259 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %260 = load ptr, ptr %259, align 8, !tbaa !140
  %261 = ptrtoint ptr %260 to i64
  %262 = sub i64 %261, %252
  %263 = getelementptr inbounds i8, ptr %251, i64 %254
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %257, ptr noundef nonnull @.str.237, ptr nonnull poison, i64 noundef %134, ptr noundef nonnull %135, i32 noundef %258, i64 noundef %254, ptr noundef %251, i32 noundef %258, i64 noundef %262, ptr noundef %263)
  br label %361

264:                                              ; preds = %224, %221, %172, %238
  %265 = phi i32 [ 0, %238 ], [ 0, %172 ], [ %226, %224 ], [ 0, %221 ]
  %266 = phi i8 [ 86, %238 ], [ 89, %172 ], [ 83, %224 ], [ %222, %221 ]
  %267 = phi i1 [ true, %238 ], [ %176, %172 ], [ %227, %224 ], [ %223, %221 ]
  %268 = phi i1 [ false, %238 ], [ false, %172 ], [ %228, %224 ], [ false, %221 ]
  %269 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %270 = load ptr, ptr %269, align 8, !tbaa !145
  %271 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %272 = icmp eq ptr %270, %271
  br i1 %272, label %273, label %282

273:                                              ; preds = %264
  %274 = zext i8 %266 to i64
  %275 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !9
  %277 = zext i8 %276 to i64
  %278 = add nuw nsw i64 %277, 1
  %279 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %280 = load i64, ptr %279, align 8, !tbaa !144
  %281 = add i64 %278, %280
  store i64 %281, ptr %279, align 8, !tbaa !144
  br label %297

282:                                              ; preds = %264
  %283 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %284 = load ptr, ptr %283, align 8, !tbaa !158
  %285 = icmp ult ptr %270, %284
  br i1 %285, label %289, label %286

286:                                              ; preds = %282
  %287 = zext i8 %266 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef %287, ptr noundef %270, ptr noundef %284) #21
  %288 = load ptr, ptr %269, align 8, !tbaa !145
  br label %289

289:                                              ; preds = %282, %286
  %290 = phi ptr [ %288, %286 ], [ %270, %282 ]
  store i8 0, ptr %270, align 2, !tbaa !169
  %291 = icmp eq ptr %290, %271
  br i1 %291, label %297, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %struct.regnode_1, ptr %270, i64 0, i32 3
  store i32 %265, ptr %293, align 4, !tbaa !166
  %294 = getelementptr inbounds %struct.regnode, ptr %270, i64 0, i32 1
  store i8 %266, ptr %294, align 1, !tbaa !164
  %295 = getelementptr inbounds %struct.regnode, ptr %270, i64 0, i32 2
  store i16 0, ptr %295, align 2, !tbaa !168
  %296 = getelementptr inbounds %struct.regnode, ptr %270, i64 2
  store ptr %296, ptr %269, align 8, !tbaa !145
  br label %297

297:                                              ; preds = %273, %289, %292
  %298 = phi ptr [ %271, %289 ], [ %296, %292 ], [ %271, %273 ]
  br i1 %268, label %410, label %299

299:                                              ; preds = %297
  %300 = icmp eq ptr %298, %271
  br i1 %300, label %361, label %301

301:                                              ; preds = %299
  br i1 %267, label %302, label %344

302:                                              ; preds = %301
  %303 = load ptr, ptr %12, align 8, !tbaa !138
  %304 = ptrtoint ptr %303 to i64
  %305 = ptrtoint ptr %136 to i64
  %306 = sub i64 %304, %305
  %307 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull %136, i64 noundef %306) #21
  %308 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %309 = load ptr, ptr %308, align 8, !tbaa !156
  %310 = getelementptr inbounds %struct.regexp_internal, ptr %309, i64 0, i32 3
  %311 = load ptr, ptr %310, align 8, !tbaa !26
  %312 = icmp eq ptr %311, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %302
  %314 = load i32, ptr %311, align 8, !tbaa !27
  br label %315

315:                                              ; preds = %313, %302
  %316 = phi i32 [ %314, %313 ], [ 0, %302 ]
  %317 = add i32 %316, 1
  %318 = zext i32 %316 to i64
  %319 = shl nuw nsw i64 %318, 3
  %320 = add nuw nsw i64 %319, 24
  %321 = tail call ptr @Perl_safesysrealloc(ptr noundef %311, i64 noundef %320) #21
  %322 = load ptr, ptr %308, align 8, !tbaa !156
  %323 = getelementptr inbounds %struct.regexp_internal, ptr %322, i64 0, i32 3
  store ptr %321, ptr %323, align 8, !tbaa !26
  %324 = icmp eq i32 %316, 0
  br i1 %324, label %330, label %325

325:                                              ; preds = %315
  %326 = getelementptr inbounds %struct.reg_data, ptr %321, i64 0, i32 1
  %327 = load ptr, ptr %326, align 8, !tbaa !29
  %328 = zext i32 %317 to i64
  %329 = tail call ptr @Perl_safesysrealloc(ptr noundef %327, i64 noundef %328) #21
  br label %332

330:                                              ; preds = %315
  %331 = tail call ptr @Perl_safesysmalloc(i64 noundef 1) #21
  br label %332

332:                                              ; preds = %325, %330
  %333 = phi ptr [ %329, %325 ], [ %331, %330 ]
  %334 = load ptr, ptr %308, align 8, !tbaa !156
  %335 = getelementptr inbounds %struct.regexp_internal, ptr %334, i64 0, i32 3
  %336 = load ptr, ptr %335, align 8, !tbaa !26
  %337 = getelementptr inbounds %struct.reg_data, ptr %336, i64 0, i32 1
  store ptr %333, ptr %337, align 8, !tbaa !29
  store i32 %317, ptr %336, align 8, !tbaa !27
  %338 = getelementptr inbounds i8, ptr %333, i64 %318
  store i8 83, ptr %338, align 1
  %339 = getelementptr inbounds %struct.regnode_1, ptr %270, i64 0, i32 3
  store i32 %316, ptr %339, align 4, !tbaa !166
  %340 = load ptr, ptr %308, align 8, !tbaa !156
  %341 = getelementptr inbounds %struct.regexp_internal, ptr %340, i64 0, i32 3
  %342 = load ptr, ptr %341, align 8, !tbaa !26
  %343 = getelementptr inbounds %struct.reg_data, ptr %342, i64 0, i32 2, i64 %318
  store ptr %307, ptr %343, align 8, !tbaa !5
  store i8 0, ptr %270, align 2, !tbaa !169
  br label %361

344:                                              ; preds = %301
  store i8 1, ptr %270, align 2, !tbaa !169
  br label %361

345:                                              ; preds = %235, %230
  %346 = load ptr, ptr %12, align 8, !tbaa !138
  %347 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %348 = load ptr, ptr %347, align 8, !tbaa !108
  %349 = ptrtoint ptr %346 to i64
  %350 = ptrtoint ptr %348 to i64
  %351 = sub i64 %349, %350
  %352 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %353 = load i32, ptr %352, align 8, !tbaa !98
  %354 = icmp ne i32 %353, 0
  %355 = zext i1 %354 to i32
  %356 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %357 = load ptr, ptr %356, align 8, !tbaa !140
  %358 = ptrtoint ptr %357 to i64
  %359 = sub i64 %358, %349
  %360 = getelementptr inbounds i8, ptr %348, i64 %351
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %354, ptr noundef nonnull @.str.236, ptr nonnull poison, i64 noundef 6, ptr noundef nonnull %135, i32 noundef %355, i64 noundef %351, ptr noundef %348, i32 noundef %355, i64 noundef %359, ptr noundef %360)
  br label %410

361:                                              ; preds = %299, %332, %344, %248
  %362 = phi ptr [ undef, %248 ], [ %270, %344 ], [ %270, %332 ], [ %270, %299 ]
  %363 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %364 = load i32, ptr %363, align 8, !tbaa !131
  %365 = or i32 %364, 128
  store i32 %365, ptr %363, align 8, !tbaa !131
  br label %410

366:                                              ; preds = %149, %150
  %367 = icmp eq ptr %136, null
  %368 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %369 = load ptr, ptr %368, align 8, !tbaa !145
  %370 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %371 = icmp eq ptr %369, %370
  br i1 %367, label %392, label %372

372:                                              ; preds = %366
  br i1 %371, label %376, label %373

373:                                              ; preds = %372
  %374 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %375 = load ptr, ptr %374, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %375, i32 noundef 11) #21
  br label %376

376:                                              ; preds = %372, %373
  %377 = load ptr, ptr %12, align 8, !tbaa !138
  %378 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %379 = load ptr, ptr %378, align 8, !tbaa !108
  %380 = ptrtoint ptr %377 to i64
  %381 = ptrtoint ptr %379 to i64
  %382 = sub i64 %380, %381
  %383 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %384 = load i32, ptr %383, align 8, !tbaa !98
  %385 = icmp ne i32 %384, 0
  %386 = zext i1 %385 to i32
  %387 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %388 = load ptr, ptr %387, align 8, !tbaa !140
  %389 = ptrtoint ptr %388 to i64
  %390 = sub i64 %389, %380
  %391 = getelementptr inbounds i8, ptr %379, i64 %382
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %385, ptr noundef nonnull @.str.236, ptr nonnull poison, i64 noundef %134, ptr noundef nonnull %135, i32 noundef %386, i64 noundef %382, ptr noundef %379, i32 noundef %386, i64 noundef %390, ptr noundef %391)
  br label %410

392:                                              ; preds = %366
  br i1 %371, label %393, label %397

393:                                              ; preds = %392
  %394 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %395 = load i64, ptr %394, align 8, !tbaa !144
  %396 = add i64 %395, 1
  store i64 %396, ptr %394, align 8, !tbaa !144
  br label %410

397:                                              ; preds = %392
  %398 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %399 = load ptr, ptr %398, align 8, !tbaa !158
  %400 = icmp ult ptr %369, %399
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 82, ptr noundef %369, ptr noundef %399) #21
  %402 = load ptr, ptr %368, align 8, !tbaa !145
  br label %403

403:                                              ; preds = %397, %401
  %404 = phi ptr [ %402, %401 ], [ %369, %397 ]
  store i8 0, ptr %369, align 2, !tbaa !169
  %405 = icmp eq ptr %404, %370
  br i1 %405, label %410, label %406

406:                                              ; preds = %403
  %407 = getelementptr inbounds %struct.regnode, ptr %369, i64 0, i32 1
  store i8 82, ptr %407, align 1, !tbaa !164
  %408 = getelementptr inbounds %struct.regnode, ptr %369, i64 0, i32 2
  store i16 0, ptr %408, align 2, !tbaa !168
  %409 = getelementptr inbounds %struct.regnode, ptr %369, i64 1
  store ptr %409, ptr %368, align 8, !tbaa !145
  br label %410

410:                                              ; preds = %393, %361, %376, %345, %403, %406, %297
  %411 = phi ptr [ undef, %345 ], [ %362, %361 ], [ undef, %376 ], [ %369, %403 ], [ %369, %406 ], [ %270, %297 ], [ %370, %393 ]
  %412 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2811

413:                                              ; preds = %18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #21
  br i1 %19, label %414, label %443

414:                                              ; preds = %413
  %415 = getelementptr inbounds i8, ptr %13, i64 1
  store ptr %415, ptr %12, align 8, !tbaa !138
  %416 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %417 = load ptr, ptr %416, align 8, !tbaa !145
  %418 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %419 = icmp eq ptr %417, %418
  br i1 %419, label %424, label %420

420:                                              ; preds = %414
  %421 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %422 = load ptr, ptr %421, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %422, i32 noundef 11) #21
  %423 = load ptr, ptr %12, align 8, !tbaa !138
  br label %424

424:                                              ; preds = %414, %420
  %425 = phi ptr [ %415, %414 ], [ %423, %420 ]
  %426 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %427 = load ptr, ptr %426, align 8, !tbaa !140
  %428 = icmp ugt ptr %425, %427
  %429 = select i1 %428, ptr %427, ptr %425
  %430 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %431 = load ptr, ptr %430, align 8, !tbaa !108
  %432 = ptrtoint ptr %429 to i64
  %433 = ptrtoint ptr %431 to i64
  %434 = sub i64 %432, %433
  %435 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %436 = load i32, ptr %435, align 8, !tbaa !98
  %437 = icmp ne i32 %436, 0
  %438 = zext i1 %437 to i32
  %439 = ptrtoint ptr %427 to i64
  %440 = sub i64 %439, %432
  %441 = getelementptr inbounds i8, ptr %431, i64 %434
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.239, i32 noundef %438, i64 noundef %434, ptr noundef %431, i32 noundef %438, i64 noundef %440, ptr noundef %441) #21
  %442 = load ptr, ptr %12, align 8, !tbaa !138
  br label %443

443:                                              ; preds = %424, %413
  %444 = phi ptr [ %442, %424 ], [ %13, %413 ]
  %445 = getelementptr inbounds i8, ptr %444, i64 1
  %446 = getelementptr inbounds i8, ptr %444, i64 2
  store ptr %446, ptr %12, align 8, !tbaa !138
  %447 = load i8, ptr %445, align 1, !tbaa !9
  %448 = sext i8 %447 to i32
  switch i32 %448, label %1702 [
    i32 80, label %449
    i32 60, label %567
    i32 39, label %571
    i32 61, label %719
    i32 33, label %724
    i32 124, label %735
    i32 58, label %1708
    i32 62, label %1708
    i32 36, label %738
    i32 64, label %738
    i32 48, label %763
    i32 82, label %763
    i32 38, label %799
    i32 43, label %846
    i32 45, label %879
    i32 49, label %883
    i32 50, label %883
    i32 51, label %883
    i32 52, label %883
    i32 53, label %883
    i32 54, label %883
    i32 55, label %883
    i32 56, label %883
    i32 57, label %883
    i32 63, label %1043
    i32 123, label %1095
    i32 40, label %1253
    i32 91, label %1673
    i32 0, label %1675
  ]

449:                                              ; preds = %443
  %450 = getelementptr inbounds i8, ptr %444, i64 3
  store ptr %450, ptr %12, align 8, !tbaa !138
  %451 = load i8, ptr %446, align 1, !tbaa !9
  %452 = sext i8 %451 to i32
  switch i8 %451, label %525 [
    i8 60, label %571
    i8 62, label %799
    i8 61, label %453
  ]

453:                                              ; preds = %449
  %454 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %455 = load ptr, ptr %454, align 8, !tbaa !145
  %456 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %457 = icmp eq ptr %455, %456
  %458 = select i1 %457, i32 0, i32 2
  %459 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %458)
  %460 = load ptr, ptr %12, align 8, !tbaa !138
  %461 = icmp eq ptr %460, %450
  br i1 %461, label %465, label %462

462:                                              ; preds = %453
  %463 = load i8, ptr %460, align 1, !tbaa !9
  %464 = icmp eq i8 %463, 41
  br i1 %464, label %488, label %465

465:                                              ; preds = %453, %462
  %466 = load ptr, ptr %454, align 8, !tbaa !145
  %467 = icmp eq ptr %466, %456
  br i1 %467, label %472, label %468

468:                                              ; preds = %465
  %469 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %470 = load ptr, ptr %469, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %470, i32 noundef 11) #21
  %471 = load ptr, ptr %12, align 8, !tbaa !138
  br label %472

472:                                              ; preds = %465, %468
  %473 = phi ptr [ %460, %465 ], [ %471, %468 ]
  %474 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %475 = load ptr, ptr %474, align 8, !tbaa !108
  %476 = ptrtoint ptr %473 to i64
  %477 = ptrtoint ptr %475 to i64
  %478 = sub i64 %476, %477
  %479 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %480 = load i32, ptr %479, align 8, !tbaa !98
  %481 = icmp ne i32 %480, 0
  %482 = zext i1 %481 to i32
  %483 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %484 = load ptr, ptr %483, align 8, !tbaa !140
  %485 = ptrtoint ptr %484 to i64
  %486 = sub i64 %485, %476
  %487 = getelementptr inbounds i8, ptr %475, i64 %478
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %481, ptr noundef nonnull @.str.240, ptr nonnull poison, ptr noundef nonnull %13, i32 noundef %482, i64 noundef %478, ptr noundef %475, i32 noundef %482, i64 noundef %486, ptr noundef %487)
  br label %488

488:                                              ; preds = %472, %462
  %489 = load ptr, ptr %454, align 8, !tbaa !145
  %490 = icmp eq ptr %489, %456
  br i1 %490, label %504, label %491

491:                                              ; preds = %488
  %492 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.238, i32 noundef 1)
  %493 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %494 = load ptr, ptr %493, align 8, !tbaa !156
  %495 = getelementptr inbounds %struct.regexp_internal, ptr %494, i64 0, i32 3
  %496 = load ptr, ptr %495, align 8, !tbaa !26
  %497 = zext i32 %492 to i64
  %498 = getelementptr inbounds %struct.reg_data, ptr %496, i64 0, i32 2, i64 %497
  store ptr %459, ptr %498, align 8, !tbaa !5
  %499 = icmp eq ptr %459, null
  br i1 %499, label %504, label %500

500:                                              ; preds = %491
  %501 = getelementptr inbounds %struct.sv, ptr %459, i64 0, i32 1
  %502 = load i32, ptr %501, align 8, !tbaa !22
  %503 = add i32 %502, 1
  store i32 %503, ptr %501, align 8, !tbaa !22
  br label %504

504:                                              ; preds = %491, %500, %488
  %505 = phi i32 [ 0, %488 ], [ %492, %500 ], [ %492, %491 ]
  %506 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 15
  store i32 1, ptr %506, align 4, !tbaa !130
  %507 = load i32, ptr %0, align 8, !tbaa !109
  %508 = and i32 %507, 4
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %519, label %510

510:                                              ; preds = %504
  %511 = lshr i32 %507, 7
  %512 = and i32 %511, 7
  %513 = icmp eq i32 %512, 4
  br i1 %513, label %519, label %514

514:                                              ; preds = %510
  %515 = icmp ugt i32 %512, 1
  br i1 %515, label %519, label %516

516:                                              ; preds = %514
  %517 = icmp eq i32 %512, 1
  %518 = select i1 %517, i8 58, i8 57
  br label %519

519:                                              ; preds = %510, %514, %516, %504
  %520 = phi i8 [ 56, %504 ], [ 60, %510 ], [ %518, %516 ], [ 59, %514 ]
  %521 = tail call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext %520, i32 noundef %505)
  %522 = load i32, ptr %2, align 4, !tbaa !150
  %523 = or i32 %522, 1
  store i32 %523, ptr %2, align 4, !tbaa !150
  %524 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %1764

525:                                              ; preds = %449
  store ptr %446, ptr %12, align 8, !tbaa !138
  %526 = load i8, ptr %446, align 1, !tbaa !9
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %537, label %528

528:                                              ; preds = %525
  %529 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %530 = load i32, ptr %529, align 8, !tbaa !98
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %537, label %532

532:                                              ; preds = %528
  %533 = zext i8 %526 to i64
  %534 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %533
  %535 = load i8, ptr %534, align 1, !tbaa !9
  %536 = zext i8 %535 to i64
  br label %537

537:                                              ; preds = %532, %528, %525
  %538 = phi i64 [ 0, %525 ], [ %536, %532 ], [ 1, %528 ]
  %539 = getelementptr inbounds i8, ptr %446, i64 %538
  store ptr %539, ptr %12, align 8, !tbaa !138
  %540 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %541 = load ptr, ptr %540, align 8, !tbaa !145
  %542 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %543 = icmp eq ptr %541, %542
  br i1 %543, label %548, label %544

544:                                              ; preds = %537
  %545 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %546 = load ptr, ptr %545, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %546, i32 noundef 11) #21
  %547 = load ptr, ptr %12, align 8, !tbaa !138
  br label %548

548:                                              ; preds = %537, %544
  %549 = phi ptr [ %539, %537 ], [ %547, %544 ]
  %550 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %551 = load ptr, ptr %550, align 8, !tbaa !108
  %552 = ptrtoint ptr %549 to i64
  %553 = ptrtoint ptr %551 to i64
  %554 = sub i64 %552, %553
  %555 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %556 = load i32, ptr %555, align 8, !tbaa !98
  %557 = icmp ne i32 %556, 0
  %558 = zext i1 %557 to i32
  %559 = ptrtoint ptr %13 to i64
  %560 = sub i64 %552, %559
  %561 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %562 = load ptr, ptr %561, align 8, !tbaa !140
  %563 = ptrtoint ptr %562 to i64
  %564 = sub i64 %563, %552
  %565 = getelementptr inbounds i8, ptr %551, i64 %554
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %557, ptr noundef nonnull @.str.241, ptr nonnull poison, i64 noundef %560, ptr noundef nonnull %13, i32 noundef %558, i64 noundef %554, ptr noundef %551, i32 noundef %558, i64 noundef %564, ptr noundef %565)
  %566 = load ptr, ptr %12, align 8, !tbaa !138
  br label %567

567:                                              ; preds = %443, %548
  %568 = phi ptr [ %446, %443 ], [ %566, %548 ]
  %569 = phi i32 [ %448, %443 ], [ %452, %548 ]
  %570 = load i8, ptr %568, align 1, !tbaa !9
  switch i8 %570, label %571 [
    i8 33, label %710
    i8 61, label %709
  ]

571:                                              ; preds = %449, %567, %443
  %572 = phi ptr [ %446, %443 ], [ %568, %567 ], [ %450, %449 ]
  %573 = phi i32 [ %448, %443 ], [ 60, %567 ], [ 60, %449 ]
  %574 = phi i32 [ %448, %443 ], [ 62, %567 ], [ 62, %449 ]
  %575 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %576 = load ptr, ptr %575, align 8, !tbaa !145
  %577 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %578 = icmp eq ptr %576, %577
  %579 = zext i1 %578 to i32
  %580 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %579)
  %581 = load ptr, ptr %12, align 8, !tbaa !138
  %582 = icmp eq ptr %581, %572
  br i1 %582, label %587, label %583

583:                                              ; preds = %571
  %584 = load i8, ptr %581, align 1, !tbaa !9
  %585 = sext i8 %584 to i32
  %586 = icmp eq i32 %574, %585
  br i1 %586, label %610, label %587

587:                                              ; preds = %571, %583
  %588 = load ptr, ptr %575, align 8, !tbaa !145
  %589 = icmp eq ptr %588, %577
  br i1 %589, label %594, label %590

590:                                              ; preds = %587
  %591 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %592 = load ptr, ptr %591, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %592, i32 noundef 11) #21
  %593 = load ptr, ptr %12, align 8, !tbaa !138
  br label %594

594:                                              ; preds = %587, %590
  %595 = phi ptr [ %581, %587 ], [ %593, %590 ]
  %596 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %597 = load ptr, ptr %596, align 8, !tbaa !108
  %598 = ptrtoint ptr %595 to i64
  %599 = ptrtoint ptr %597 to i64
  %600 = sub i64 %598, %599
  %601 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %602 = load i32, ptr %601, align 8, !tbaa !98
  %603 = icmp ne i32 %602, 0
  %604 = zext i1 %603 to i32
  %605 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %606 = load ptr, ptr %605, align 8, !tbaa !140
  %607 = ptrtoint ptr %606 to i64
  %608 = sub i64 %607, %598
  %609 = getelementptr inbounds i8, ptr %597, i64 %600
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %603, ptr noundef nonnull @.str.242, ptr nonnull poison, i32 noundef %573, i32 noundef %604, i64 noundef %600, ptr noundef %597, i32 noundef %604, i64 noundef %608, ptr noundef %609)
  br label %610

610:                                              ; preds = %594, %583
  %611 = load ptr, ptr %575, align 8, !tbaa !145
  %612 = icmp eq ptr %611, %577
  br i1 %612, label %613, label %1711

613:                                              ; preds = %610
  %614 = icmp eq ptr %580, null
  br i1 %614, label %615, label %616

615:                                              ; preds = %613
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.243) #21
  br label %616

616:                                              ; preds = %615, %613
  %617 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 28
  %618 = load ptr, ptr %617, align 8, !tbaa !217
  %619 = icmp eq ptr %618, null
  br i1 %619, label %620, label %624

620:                                              ; preds = %616
  %621 = tail call ptr @Perl_newSV_type(i32 noundef 12) #21
  store ptr %621, ptr %617, align 8, !tbaa !217
  %622 = tail call ptr @Perl_sv_2mortal(ptr noundef %621) #21
  %623 = load ptr, ptr %617, align 8, !tbaa !217
  br label %624

624:                                              ; preds = %620, %616
  %625 = phi ptr [ %623, %620 ], [ %618, %616 ]
  %626 = tail call ptr @Perl_hv_common(ptr noundef %625, ptr noundef %580, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 16, ptr noundef null, i32 noundef 0) #21
  %627 = icmp eq ptr %626, null
  br i1 %627, label %632, label %628

628:                                              ; preds = %624
  %629 = getelementptr inbounds %struct.he, ptr %626, i64 0, i32 2
  %630 = load ptr, ptr %629, align 8, !tbaa !9
  %631 = icmp eq ptr %630, null
  br i1 %631, label %632, label %633

632:                                              ; preds = %624, %628
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.244) #21
  br label %1711

633:                                              ; preds = %628
  %634 = getelementptr inbounds %struct.sv, ptr %630, i64 0, i32 2
  %635 = load i32, ptr %634, align 4, !tbaa !62
  %636 = and i32 %635, 1024
  %637 = icmp eq i32 %636, 0
  br i1 %637, label %699, label %638

638:                                              ; preds = %633
  %639 = and i32 %635, 2097408
  %640 = icmp eq i32 %639, 256
  br i1 %640, label %641, label %645

641:                                              ; preds = %638
  %642 = load ptr, ptr %630, align 8, !tbaa !63
  %643 = getelementptr inbounds %struct.xpviv, ptr %642, i64 0, i32 4
  %644 = load i64, ptr %643, align 8, !tbaa !9
  br label %647

645:                                              ; preds = %638
  %646 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %630, i32 noundef 2) #21
  br label %647

647:                                              ; preds = %645, %641
  %648 = phi i64 [ %644, %641 ], [ %646, %645 ]
  %649 = getelementptr inbounds %struct.sv, ptr %630, i64 0, i32 3
  %650 = load ptr, ptr %649, align 8, !tbaa !9
  %651 = icmp sgt i64 %648, 0
  br i1 %651, label %652, label %663

652:                                              ; preds = %647
  %653 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %654 = load i32, ptr %653, align 8, !tbaa !142
  br label %658

655:                                              ; preds = %658
  %656 = add nuw nsw i64 %659, 1
  %657 = icmp eq i64 %656, %648
  br i1 %657, label %663, label %658, !llvm.loop !234

658:                                              ; preds = %652, %655
  %659 = phi i64 [ 0, %652 ], [ %656, %655 ]
  %660 = getelementptr inbounds i32, ptr %650, i64 %659
  %661 = load i32, ptr %660, align 4, !tbaa !150
  %662 = icmp eq i32 %661, %654
  br i1 %662, label %1711, label %655

663:                                              ; preds = %655, %647
  %664 = icmp eq i64 %648, 0
  br i1 %664, label %1711, label %665

665:                                              ; preds = %663
  %666 = load i32, ptr %634, align 4, !tbaa !62
  %667 = and i32 %666, 268435456
  %668 = icmp eq i32 %667, 0
  %669 = load ptr, ptr %630, align 8, !tbaa !63
  br i1 %668, label %674, label %670

670:                                              ; preds = %665
  %671 = getelementptr inbounds %struct.xpv, ptr %669, i64 0, i32 2
  %672 = load i64, ptr %671, align 8, !tbaa !72
  %673 = add i64 %672, 5
  br label %681

674:                                              ; preds = %665
  %675 = getelementptr inbounds %struct.xpv, ptr %669, i64 0, i32 3
  %676 = load i64, ptr %675, align 8, !tbaa !9
  %677 = getelementptr inbounds %struct.xpv, ptr %669, i64 0, i32 2
  %678 = load i64, ptr %677, align 8, !tbaa !72
  %679 = add i64 %678, 5
  %680 = icmp ult i64 %676, %679
  br i1 %680, label %681, label %687

681:                                              ; preds = %670, %674
  %682 = phi i64 [ %673, %670 ], [ %679, %674 ]
  %683 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %630, i64 noundef %682) #21
  %684 = load ptr, ptr %630, align 8, !tbaa !63
  %685 = getelementptr inbounds %struct.xpv, ptr %684, i64 0, i32 2
  %686 = load i64, ptr %685, align 8, !tbaa !72
  br label %687

687:                                              ; preds = %674, %681
  %688 = phi i64 [ %686, %681 ], [ %678, %674 ]
  %689 = phi ptr [ %684, %681 ], [ %669, %674 ]
  %690 = phi ptr [ %683, %681 ], [ %650, %674 ]
  %691 = getelementptr inbounds %struct.xpv, ptr %689, i64 0, i32 2
  %692 = add i64 %688, 4
  store i64 %692, ptr %691, align 8, !tbaa !72
  %693 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %694 = load i32, ptr %693, align 8, !tbaa !142
  %695 = getelementptr inbounds i32, ptr %690, i64 %648
  store i32 %694, ptr %695, align 4, !tbaa !150
  %696 = getelementptr inbounds %struct.xpviv, ptr %689, i64 0, i32 4
  %697 = load i64, ptr %696, align 8, !tbaa !9
  %698 = add nsw i64 %697, 1
  store i64 %698, ptr %696, align 8, !tbaa !9
  br label %1711

699:                                              ; preds = %633
  %700 = and i32 %635, 254
  %701 = icmp ugt i32 %700, 5
  br i1 %701, label %703, label %702

702:                                              ; preds = %699
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %630, i32 noundef 6) #21
  br label %703

703:                                              ; preds = %702, %699
  %704 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %630, ptr noundef nonnull %704, i64 noundef 4) #21
  %705 = load i32, ptr %634, align 4, !tbaa !62
  %706 = or i32 %705, 4352
  store i32 %706, ptr %634, align 4, !tbaa !62
  %707 = load ptr, ptr %630, align 8, !tbaa !63
  %708 = getelementptr inbounds %struct.xpviv, ptr %707, i64 0, i32 4
  store i64 1, ptr %708, align 8, !tbaa !9
  br label %1711

709:                                              ; preds = %567
  br label %710

710:                                              ; preds = %567, %709
  %711 = phi i32 [ 44, %567 ], [ %569, %709 ]
  %712 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %713 = load i32, ptr %712, align 8, !tbaa !131
  %714 = or i32 %713, 2
  store i32 %714, ptr %712, align 8, !tbaa !131
  %715 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 33
  %716 = load i32, ptr %715, align 4, !tbaa !133
  %717 = add nsw i32 %716, 1
  store i32 %717, ptr %715, align 4, !tbaa !133
  %718 = getelementptr inbounds i8, ptr %568, i64 1
  store ptr %718, ptr %12, align 8, !tbaa !138
  br label %719

719:                                              ; preds = %443, %710
  %720 = phi i32 [ %448, %443 ], [ %711, %710 ]
  %721 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %722 = load i32, ptr %721, align 4, !tbaa !134
  %723 = add nsw i32 %722, 1
  store i32 %723, ptr %721, align 4, !tbaa !134
  br label %1708

724:                                              ; preds = %443
  %725 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %726 = load i32, ptr %725, align 4, !tbaa !134
  %727 = add nsw i32 %726, 1
  store i32 %727, ptr %725, align 4, !tbaa !134
  store ptr %445, ptr %12, align 8, !tbaa !138
  %728 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %729 = load ptr, ptr %12, align 8, !tbaa !138
  %730 = load i8, ptr %729, align 1, !tbaa !9
  %731 = icmp eq i8 %730, 41
  br i1 %731, label %732, label %1708

732:                                              ; preds = %724
  %733 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 82)
  %734 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %1764

735:                                              ; preds = %443
  %736 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %737 = load i32, ptr %736, align 8, !tbaa !142
  br label %1708

738:                                              ; preds = %443, %443
  %739 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %740 = load ptr, ptr %739, align 8, !tbaa !145
  %741 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %742 = icmp eq ptr %740, %741
  br i1 %742, label %747, label %743

743:                                              ; preds = %738
  %744 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %745 = load ptr, ptr %744, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %745, i32 noundef 11) #21
  %746 = load ptr, ptr %12, align 8, !tbaa !138
  br label %747

747:                                              ; preds = %738, %743
  %748 = phi ptr [ %446, %738 ], [ %746, %743 ]
  %749 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %750 = load ptr, ptr %749, align 8, !tbaa !108
  %751 = ptrtoint ptr %748 to i64
  %752 = ptrtoint ptr %750 to i64
  %753 = sub i64 %751, %752
  %754 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %755 = load i32, ptr %754, align 8, !tbaa !98
  %756 = icmp ne i32 %755, 0
  %757 = zext i1 %756 to i32
  %758 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %759 = load ptr, ptr %758, align 8, !tbaa !140
  %760 = ptrtoint ptr %759 to i64
  %761 = sub i64 %760, %751
  %762 = getelementptr inbounds i8, ptr %750, i64 %753
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %756, ptr noundef nonnull @.str.245, ptr nonnull poison, i32 noundef %448, i32 noundef %757, i64 noundef %753, ptr noundef %750, i32 noundef %757, i64 noundef %761, ptr noundef %762)
  br label %1708

763:                                              ; preds = %443, %443
  %764 = load i8, ptr %446, align 1, !tbaa !9
  %765 = icmp eq i8 %764, 41
  br i1 %765, label %791, label %766

766:                                              ; preds = %763
  %767 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %768 = load ptr, ptr %767, align 8, !tbaa !140
  %769 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %770 = load ptr, ptr %769, align 8, !tbaa !108
  %771 = ptrtoint ptr %768 to i64
  %772 = ptrtoint ptr %770 to i64
  %773 = sub i64 %771, %772
  %774 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %775 = load ptr, ptr %774, align 8, !tbaa !145
  %776 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %777 = icmp eq ptr %775, %776
  br i1 %777, label %782, label %778

778:                                              ; preds = %766
  %779 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %780 = load ptr, ptr %779, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %780, i32 noundef 11) #21
  %781 = load ptr, ptr %769, align 8, !tbaa !108
  br label %782

782:                                              ; preds = %778, %766
  %783 = phi ptr [ %781, %778 ], [ %770, %766 ]
  %784 = icmp sgt i64 %773, 127
  %785 = select i1 %784, i64 117, i64 %773
  %786 = select i1 %784, ptr @.str.182, ptr @.str.178
  %787 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %788 = load i32, ptr %787, align 8, !tbaa !98
  %789 = icmp ne i32 %788, 0
  %790 = zext i1 %789 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.246, i32 noundef %790, i64 noundef %785, ptr noundef %783, ptr noundef nonnull %786) #21
  br label %791

791:                                              ; preds = %782, %763
  %792 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 77)
  %793 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %794 = load i32, ptr %793, align 8, !tbaa !131
  %795 = or i32 %794, 2048
  store i32 %795, ptr %793, align 8, !tbaa !131
  %796 = load i32, ptr %2, align 4, !tbaa !150
  %797 = or i32 %796, 8
  store i32 %797, ptr %2, align 4, !tbaa !150
  %798 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %1764

799:                                              ; preds = %443, %449
  %800 = phi i32 [ 62, %449 ], [ %448, %443 ]
  %801 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %802 = load ptr, ptr %801, align 8, !tbaa !145
  %803 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %804 = icmp eq ptr %802, %803
  %805 = select i1 %804, i32 0, i32 2
  %806 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %805)
  %807 = icmp eq ptr %806, null
  br i1 %807, label %812, label %808

808:                                              ; preds = %799
  %809 = getelementptr inbounds %struct.sv, ptr %806, i64 0, i32 3
  %810 = load ptr, ptr %809, align 8, !tbaa !9
  %811 = load i32, ptr %810, align 4, !tbaa !150
  br label %812

812:                                              ; preds = %799, %808
  %813 = phi i32 [ %811, %808 ], [ 0, %799 ]
  %814 = load ptr, ptr %12, align 8, !tbaa !138
  %815 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %816 = load ptr, ptr %815, align 8, !tbaa !140
  %817 = icmp eq ptr %814, %816
  br i1 %817, label %821, label %818

818:                                              ; preds = %812
  %819 = load i8, ptr %814, align 1, !tbaa !9
  %820 = icmp eq i8 %819, 41
  br i1 %820, label %935, label %821

821:                                              ; preds = %812, %818
  %822 = load ptr, ptr %801, align 8, !tbaa !145
  %823 = icmp eq ptr %822, %803
  br i1 %823, label %829, label %824

824:                                              ; preds = %821
  %825 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %826 = load ptr, ptr %825, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %826, i32 noundef 11) #21
  %827 = load ptr, ptr %12, align 8, !tbaa !138
  %828 = load ptr, ptr %815, align 8, !tbaa !140
  br label %829

829:                                              ; preds = %821, %824
  %830 = phi ptr [ %816, %821 ], [ %828, %824 ]
  %831 = phi ptr [ %814, %821 ], [ %827, %824 ]
  %832 = icmp ugt ptr %831, %830
  %833 = select i1 %832, ptr %830, ptr %831
  %834 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %835 = load ptr, ptr %834, align 8, !tbaa !108
  %836 = ptrtoint ptr %833 to i64
  %837 = ptrtoint ptr %835 to i64
  %838 = sub i64 %836, %837
  %839 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %840 = load i32, ptr %839, align 8, !tbaa !98
  %841 = icmp ne i32 %840, 0
  %842 = zext i1 %841 to i32
  %843 = ptrtoint ptr %830 to i64
  %844 = sub i64 %843, %836
  %845 = getelementptr inbounds i8, ptr %835, i64 %838
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.247, i32 noundef %842, i64 noundef %838, ptr noundef %835, i32 noundef %842, i64 noundef %844, ptr noundef %845) #21
  br label %935

846:                                              ; preds = %443
  %847 = load i8, ptr %446, align 1, !tbaa !9
  %848 = add i8 %847, -49
  %849 = icmp ult i8 %848, 9
  br i1 %849, label %884, label %850

850:                                              ; preds = %846
  %851 = getelementptr inbounds i8, ptr %444, i64 3
  store ptr %851, ptr %12, align 8, !tbaa !138
  %852 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %853 = load ptr, ptr %852, align 8, !tbaa !145
  %854 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %855 = icmp eq ptr %853, %854
  br i1 %855, label %860, label %856

856:                                              ; preds = %850
  %857 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %858 = load ptr, ptr %857, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %858, i32 noundef 11) #21
  %859 = load ptr, ptr %12, align 8, !tbaa !138
  br label %860

860:                                              ; preds = %850, %856
  %861 = phi ptr [ %851, %850 ], [ %859, %856 ]
  %862 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %863 = load ptr, ptr %862, align 8, !tbaa !140
  %864 = icmp ugt ptr %861, %863
  %865 = select i1 %864, ptr %863, ptr %861
  %866 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %867 = load ptr, ptr %866, align 8, !tbaa !108
  %868 = ptrtoint ptr %865 to i64
  %869 = ptrtoint ptr %867 to i64
  %870 = sub i64 %868, %869
  %871 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %872 = load i32, ptr %871, align 8, !tbaa !98
  %873 = icmp ne i32 %872, 0
  %874 = zext i1 %873 to i32
  %875 = ptrtoint ptr %863 to i64
  %876 = sub i64 %875, %868
  %877 = getelementptr inbounds i8, ptr %867, i64 %870
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.248, i32 noundef %874, i64 noundef %870, ptr noundef %867, i32 noundef %874, i64 noundef %876, ptr noundef %877) #21
  %878 = load ptr, ptr %12, align 8, !tbaa !138
  br label %884

879:                                              ; preds = %443
  %880 = load i8, ptr %446, align 1, !tbaa !9
  %881 = add i8 %880, -49
  %882 = icmp ult i8 %881, 9
  br i1 %882, label %883, label %1702

883:                                              ; preds = %879, %443, %443, %443, %443, %443, %443, %443, %443, %443
  store ptr %445, ptr %12, align 8, !tbaa !138
  br label %884

884:                                              ; preds = %846, %860, %883
  %885 = phi ptr [ %446, %846 ], [ %878, %860 ], [ %445, %883 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #21
  %886 = load i8, ptr %885, align 1, !tbaa !9
  %887 = icmp eq i8 %886, 45
  br i1 %887, label %888, label %890

888:                                              ; preds = %884
  %889 = getelementptr inbounds i8, ptr %885, i64 1
  store ptr %889, ptr %12, align 8, !tbaa !138
  br label %890

890:                                              ; preds = %888, %884
  %891 = phi ptr [ %889, %888 ], [ %885, %884 ]
  %892 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %891, ptr noundef nonnull %7, ptr noundef nonnull %6) #21
  %893 = load i64, ptr %7, align 8
  %894 = icmp ult i64 %893, 2147483648
  %895 = select i1 %892, i1 %894, i1 false
  br i1 %895, label %898, label %896

896:                                              ; preds = %890
  %897 = load ptr, ptr %12, align 8, !tbaa !138
  br label %901

898:                                              ; preds = %890
  %899 = trunc i64 %893 to i32
  %900 = load ptr, ptr %6, align 8, !tbaa !5
  store ptr %900, ptr %12, align 8, !tbaa !138
  br label %901

901:                                              ; preds = %896, %898
  %902 = phi ptr [ %900, %898 ], [ %897, %896 ]
  %903 = phi i32 [ %899, %898 ], [ 2147483647, %896 ]
  %904 = sub nsw i32 0, %903
  %905 = select i1 %887, i32 %904, i32 %903
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  %906 = load i8, ptr %902, align 1, !tbaa !9
  %907 = icmp eq i8 %906, 41
  br i1 %907, label %935, label %908

908:                                              ; preds = %901
  %909 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %910 = load ptr, ptr %909, align 8, !tbaa !145
  %911 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %912 = icmp eq ptr %910, %911
  br i1 %912, label %917, label %913

913:                                              ; preds = %908
  %914 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %915 = load ptr, ptr %914, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %915, i32 noundef 11) #21
  %916 = load ptr, ptr %12, align 8, !tbaa !138
  br label %917

917:                                              ; preds = %908, %913
  %918 = phi ptr [ %902, %908 ], [ %916, %913 ]
  %919 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %920 = load ptr, ptr %919, align 8, !tbaa !140
  %921 = icmp ugt ptr %918, %920
  %922 = select i1 %921, ptr %920, ptr %918
  %923 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %924 = load ptr, ptr %923, align 8, !tbaa !108
  %925 = ptrtoint ptr %922 to i64
  %926 = ptrtoint ptr %924 to i64
  %927 = sub i64 %925, %926
  %928 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %929 = load i32, ptr %928, align 8, !tbaa !98
  %930 = icmp ne i32 %929, 0
  %931 = zext i1 %930 to i32
  %932 = ptrtoint ptr %920 to i64
  %933 = sub i64 %932, %925
  %934 = getelementptr inbounds i8, ptr %924, i64 %927
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.249, i32 noundef %931, i64 noundef %927, ptr noundef %924, i32 noundef %931, i64 noundef %933, ptr noundef %934) #21
  br label %935

935:                                              ; preds = %901, %917, %818, %829
  %936 = phi i32 [ %905, %917 ], [ %905, %901 ], [ %813, %829 ], [ %813, %818 ]
  %937 = phi i32 [ %448, %917 ], [ %448, %901 ], [ %800, %829 ], [ %800, %818 ]
  switch i32 %937, label %977 [
    i32 45, label %938
    i32 43, label %972
  ]

938:                                              ; preds = %935
  %939 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %940 = load i32, ptr %939, align 8, !tbaa !142
  %941 = add nsw i32 %940, %936
  %942 = icmp slt i32 %941, 1
  br i1 %942, label %943, label %977

943:                                              ; preds = %938
  %944 = load ptr, ptr %12, align 8, !tbaa !138
  %945 = getelementptr inbounds i8, ptr %944, i64 1
  store ptr %945, ptr %12, align 8, !tbaa !138
  %946 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %947 = load ptr, ptr %946, align 8, !tbaa !145
  %948 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %949 = icmp eq ptr %947, %948
  br i1 %949, label %954, label %950

950:                                              ; preds = %943
  %951 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %952 = load ptr, ptr %951, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %952, i32 noundef 11) #21
  %953 = load ptr, ptr %12, align 8, !tbaa !138
  br label %954

954:                                              ; preds = %943, %950
  %955 = phi ptr [ %945, %943 ], [ %953, %950 ]
  %956 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %957 = load ptr, ptr %956, align 8, !tbaa !140
  %958 = icmp ugt ptr %955, %957
  %959 = select i1 %958, ptr %957, ptr %955
  %960 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %961 = load ptr, ptr %960, align 8, !tbaa !108
  %962 = ptrtoint ptr %959 to i64
  %963 = ptrtoint ptr %961 to i64
  %964 = sub i64 %962, %963
  %965 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %966 = load i32, ptr %965, align 8, !tbaa !98
  %967 = icmp ne i32 %966, 0
  %968 = zext i1 %967 to i32
  %969 = ptrtoint ptr %957 to i64
  %970 = sub i64 %969, %962
  %971 = getelementptr inbounds i8, ptr %961, i64 %964
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.250, i32 noundef %968, i64 noundef %964, ptr noundef %961, i32 noundef %968, i64 noundef %970, ptr noundef %971) #21
  br label %977

972:                                              ; preds = %935
  %973 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %974 = load i32, ptr %973, align 8, !tbaa !142
  %975 = add i32 %936, -1
  %976 = add i32 %975, %974
  br label %977

977:                                              ; preds = %935, %972, %938, %954
  %978 = phi i32 [ %941, %954 ], [ %941, %938 ], [ %976, %972 ], [ %936, %935 ]
  %979 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 30
  %980 = load i32, ptr %979, align 8, !tbaa !159
  %981 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %982 = load ptr, ptr %981, align 8, !tbaa !145
  %983 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %984 = icmp eq ptr %982, %983
  br i1 %984, label %985, label %989

985:                                              ; preds = %977
  %986 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %987 = load i64, ptr %986, align 8, !tbaa !144
  %988 = add i64 %987, 3
  store i64 %988, ptr %986, align 8, !tbaa !144
  br label %1036

989:                                              ; preds = %977
  %990 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %991 = load ptr, ptr %990, align 8, !tbaa !158
  %992 = icmp ult ptr %982, %991
  br i1 %992, label %995, label %993

993:                                              ; preds = %989
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 76, ptr noundef %982, ptr noundef %991) #21
  %994 = load ptr, ptr %981, align 8, !tbaa !145
  br label %995

995:                                              ; preds = %989, %993
  %996 = phi ptr [ %994, %993 ], [ %982, %989 ]
  store i8 0, ptr %982, align 2, !tbaa !169
  %997 = icmp eq ptr %996, %983
  br i1 %997, label %1036, label %998

998:                                              ; preds = %995
  %999 = getelementptr inbounds %struct.regnode_1, ptr %982, i64 0, i32 3
  store i32 %978, ptr %999, align 4, !tbaa !166
  %1000 = getelementptr inbounds %struct.regnode_2L, ptr %982, i64 0, i32 4
  store i32 %980, ptr %1000, align 4, !tbaa !221
  %1001 = getelementptr inbounds %struct.regnode, ptr %982, i64 0, i32 1
  store i8 76, ptr %1001, align 1, !tbaa !164
  %1002 = getelementptr inbounds %struct.regnode, ptr %982, i64 0, i32 2
  store i16 0, ptr %1002, align 2, !tbaa !168
  %1003 = getelementptr inbounds %struct.regnode, ptr %982, i64 3
  store ptr %1003, ptr %981, align 8, !tbaa !145
  %1004 = icmp eq ptr %1003, %983
  br i1 %1004, label %1036, label %1005

1005:                                             ; preds = %998
  %1006 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %1007 = load ptr, ptr %1006, align 8, !tbaa !155
  %1008 = getelementptr inbounds %struct.regexp, ptr %1007, i64 0, i32 12
  %1009 = load i32, ptr %1008, align 8, !tbaa !56
  %1010 = icmp sgt i32 %978, %1009
  br i1 %1010, label %1011, label %1033

1011:                                             ; preds = %1005
  %1012 = load ptr, ptr %12, align 8, !tbaa !138
  %1013 = getelementptr inbounds i8, ptr %1012, i64 1
  store ptr %1013, ptr %12, align 8, !tbaa !138
  %1014 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1015 = load ptr, ptr %1014, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1015, i32 noundef 11) #21
  %1016 = load ptr, ptr %12, align 8, !tbaa !138
  %1017 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1018 = load ptr, ptr %1017, align 8, !tbaa !140
  %1019 = icmp ugt ptr %1016, %1018
  %1020 = select i1 %1019, ptr %1018, ptr %1016
  %1021 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1022 = load ptr, ptr %1021, align 8, !tbaa !108
  %1023 = ptrtoint ptr %1020 to i64
  %1024 = ptrtoint ptr %1022 to i64
  %1025 = sub i64 %1023, %1024
  %1026 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1027 = load i32, ptr %1026, align 8, !tbaa !98
  %1028 = icmp ne i32 %1027, 0
  %1029 = zext i1 %1028 to i32
  %1030 = ptrtoint ptr %1018 to i64
  %1031 = sub i64 %1030, %1023
  %1032 = getelementptr inbounds i8, ptr %1022, i64 %1025
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.250, i32 noundef %1029, i64 noundef %1025, ptr noundef %1022, i32 noundef %1029, i64 noundef %1031, ptr noundef %1032) #21
  br label %1033

1033:                                             ; preds = %1011, %1005
  %1034 = load i32, ptr %979, align 8, !tbaa !159
  %1035 = add nsw i32 %1034, 1
  store i32 %1035, ptr %979, align 8, !tbaa !159
  br label %1036

1036:                                             ; preds = %985, %995, %1033, %998
  %1037 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %1038 = load i32, ptr %1037, align 8, !tbaa !131
  %1039 = or i32 %1038, 32
  store i32 %1039, ptr %1037, align 8, !tbaa !131
  %1040 = load i32, ptr %2, align 4, !tbaa !150
  %1041 = or i32 %1040, 8
  store i32 %1041, ptr %2, align 4, !tbaa !150
  %1042 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %1764

1043:                                             ; preds = %443
  %1044 = load i8, ptr %446, align 1, !tbaa !9
  switch i8 %1044, label %1045 [
    i8 123, label %1090
    i8 0, label %1054
  ]

1045:                                             ; preds = %1043
  %1046 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1047 = load i32, ptr %1046, align 8, !tbaa !98
  %1048 = icmp eq i32 %1047, 0
  br i1 %1048, label %1054, label %1049

1049:                                             ; preds = %1045
  %1050 = zext i8 %1044 to i64
  %1051 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1050
  %1052 = load i8, ptr %1051, align 1, !tbaa !9
  %1053 = zext i8 %1052 to i64
  br label %1054

1054:                                             ; preds = %1043, %1049, %1045
  %1055 = phi i64 [ %1053, %1049 ], [ 1, %1045 ], [ 0, %1043 ]
  %1056 = getelementptr inbounds i8, ptr %446, i64 %1055
  store ptr %1056, ptr %12, align 8, !tbaa !138
  %1057 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1058 = load ptr, ptr %1057, align 8, !tbaa !108
  %1059 = ptrtoint ptr %1056 to i64
  %1060 = ptrtoint ptr %1058 to i64
  %1061 = sub i64 %1059, %1060
  %1062 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1063 = load ptr, ptr %1062, align 8, !tbaa !145
  %1064 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1065 = icmp eq ptr %1063, %1064
  br i1 %1065, label %1073, label %1066

1066:                                             ; preds = %1054
  %1067 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1068 = load ptr, ptr %1067, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %1068, i32 noundef 11) #21
  %1069 = load ptr, ptr %12, align 8, !tbaa !138
  %1070 = load ptr, ptr %1057, align 8, !tbaa !108
  %1071 = ptrtoint ptr %1069 to i64
  %1072 = ptrtoint ptr %1070 to i64
  br label %1073

1073:                                             ; preds = %1066, %1054
  %1074 = phi i64 [ %1072, %1066 ], [ %1060, %1054 ]
  %1075 = phi i64 [ %1071, %1066 ], [ %1059, %1054 ]
  %1076 = phi ptr [ %1070, %1066 ], [ %1058, %1054 ]
  %1077 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1078 = load i32, ptr %1077, align 8, !tbaa !98
  %1079 = icmp ne i32 %1078, 0
  %1080 = zext i1 %1079 to i32
  %1081 = ptrtoint ptr %13 to i64
  %1082 = sub i64 %1075, %1081
  %1083 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1084 = load ptr, ptr %1083, align 8, !tbaa !140
  %1085 = ptrtoint ptr %1084 to i64
  %1086 = add i64 %1074, %1061
  %1087 = sub i64 %1085, %1086
  %1088 = getelementptr inbounds i8, ptr %1076, i64 %1061
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1079, ptr noundef nonnull @.str.251, ptr nonnull poison, i32 noundef %1080, i64 noundef %1082, ptr noundef nonnull %13, i32 noundef %1080, i64 noundef %1061, ptr noundef %1076, i32 noundef %1080, i64 noundef %1087, ptr noundef %1088)
  %1089 = load ptr, ptr %12, align 8, !tbaa !138
  br label %1090

1090:                                             ; preds = %1043, %1073
  %1091 = phi ptr [ %446, %1043 ], [ %1089, %1073 ]
  %1092 = load i32, ptr %2, align 4, !tbaa !150
  %1093 = or i32 %1092, 8
  store i32 %1093, ptr %2, align 4, !tbaa !150
  %1094 = getelementptr inbounds i8, ptr %1091, i64 1
  store ptr %1094, ptr %12, align 8, !tbaa !138
  br label %1095

1095:                                             ; preds = %443, %1090
  %1096 = phi ptr [ %446, %443 ], [ %1094, %1090 ]
  %1097 = phi i1 [ false, %443 ], [ true, %1090 ]
  %1098 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %1099 = load i32, ptr %1098, align 4, !tbaa !134
  %1100 = add nsw i32 %1099, 1
  store i32 %1100, ptr %1098, align 4, !tbaa !134
  %1101 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 39
  %1102 = load i32, ptr %1101, align 8, !tbaa !77
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1123, label %1104

1104:                                             ; preds = %1095
  %1105 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 40
  %1106 = load i32, ptr %1105, align 4, !tbaa !149
  %1107 = icmp slt i32 %1106, %1102
  br i1 %1107, label %1108, label %1123

1108:                                             ; preds = %1104
  %1109 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 38
  %1110 = load ptr, ptr %1109, align 8, !tbaa !74
  %1111 = sext i32 %1106 to i64
  %1112 = getelementptr inbounds %struct.reg_code_block, ptr %1110, i64 %1111
  %1113 = load i64, ptr %1112, align 8, !tbaa !104
  %1114 = getelementptr inbounds i8, ptr %1096, i64 -3
  %1115 = sext i1 %1097 to i64
  %1116 = getelementptr inbounds i8, ptr %1114, i64 %1115
  %1117 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1118 = load ptr, ptr %1117, align 8, !tbaa !139
  %1119 = ptrtoint ptr %1116 to i64
  %1120 = ptrtoint ptr %1118 to i64
  %1121 = sub i64 %1119, %1120
  %1122 = icmp eq i64 %1113, %1121
  br i1 %1122, label %1184, label %1123

1123:                                             ; preds = %1108, %1104, %1095
  %1124 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 1
  %1125 = load i32, ptr %1124, align 4, !tbaa !110
  %1126 = icmp sgt i32 %1125, -1
  br i1 %1126, label %1152, label %1127

1127:                                             ; preds = %1123
  %1128 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1129 = load ptr, ptr %1128, align 8, !tbaa !140
  %1130 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1131 = load ptr, ptr %1130, align 8, !tbaa !108
  %1132 = ptrtoint ptr %1129 to i64
  %1133 = ptrtoint ptr %1131 to i64
  %1134 = sub i64 %1132, %1133
  %1135 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1136 = load ptr, ptr %1135, align 8, !tbaa !145
  %1137 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1138 = icmp eq ptr %1136, %1137
  br i1 %1138, label %1143, label %1139

1139:                                             ; preds = %1127
  %1140 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1141 = load ptr, ptr %1140, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %1141, i32 noundef 11) #21
  %1142 = load ptr, ptr %1130, align 8, !tbaa !108
  br label %1143

1143:                                             ; preds = %1139, %1127
  %1144 = phi ptr [ %1142, %1139 ], [ %1131, %1127 ]
  %1145 = icmp sgt i64 %1134, 127
  %1146 = select i1 %1145, ptr @.str.182, ptr @.str.178
  %1147 = select i1 %1145, i64 117, i64 %1134
  %1148 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1149 = load i32, ptr %1148, align 8, !tbaa !98
  %1150 = icmp ne i32 %1149, 0
  %1151 = zext i1 %1150 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.252, i32 noundef %1151, i64 noundef %1147, ptr noundef %1144, ptr noundef nonnull %1146) #21
  br label %1152

1152:                                             ; preds = %1123, %1143
  %1153 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1154 = load ptr, ptr %1153, align 8, !tbaa !140
  %1155 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1156 = load ptr, ptr %1155, align 8, !tbaa !108
  %1157 = ptrtoint ptr %1154 to i64
  %1158 = ptrtoint ptr %1156 to i64
  %1159 = sub i64 %1157, %1158
  %1160 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1161 = load ptr, ptr %1160, align 8, !tbaa !145
  %1162 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1163 = icmp eq ptr %1161, %1162
  br i1 %1163, label %1168, label %1164

1164:                                             ; preds = %1152
  %1165 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1166 = load ptr, ptr %1165, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %1166, i32 noundef 11) #21
  %1167 = load ptr, ptr %1155, align 8, !tbaa !108
  br label %1168

1168:                                             ; preds = %1164, %1152
  %1169 = phi ptr [ %1167, %1164 ], [ %1156, %1152 ]
  %1170 = icmp sgt i64 %1159, 127
  %1171 = select i1 %1170, ptr @.str.182, ptr @.str.178
  %1172 = select i1 %1170, i64 117, i64 %1159
  %1173 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1174 = load i32, ptr %1173, align 8, !tbaa !98
  %1175 = icmp ne i32 %1174, 0
  %1176 = zext i1 %1175 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.253, i32 noundef %1176, i64 noundef %1172, ptr noundef %1169, ptr noundef nonnull %1171) #21
  %1177 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 38
  %1178 = load ptr, ptr %1177, align 8, !tbaa !74
  %1179 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 40
  %1180 = load i32, ptr %1179, align 4, !tbaa !149
  %1181 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1182 = load ptr, ptr %1181, align 8, !tbaa !139
  %1183 = sext i32 %1180 to i64
  br label %1184

1184:                                             ; preds = %1168, %1108
  %1185 = phi i32 [ %1180, %1168 ], [ %1106, %1108 ]
  %1186 = phi i64 [ %1183, %1168 ], [ %1111, %1108 ]
  %1187 = phi ptr [ %1182, %1168 ], [ %1118, %1108 ]
  %1188 = phi ptr [ %1178, %1168 ], [ %1110, %1108 ]
  %1189 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 40
  %1190 = getelementptr inbounds %struct.reg_code_block, ptr %1188, i64 %1186, i32 1
  %1191 = load i64, ptr %1190, align 8, !tbaa !105
  %1192 = getelementptr inbounds i8, ptr %1187, i64 %1191
  store ptr %1192, ptr %12, align 8, !tbaa !138
  %1193 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1194 = load ptr, ptr %1193, align 8, !tbaa !145
  %1195 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1196 = icmp eq ptr %1194, %1195
  br i1 %1196, label %1237, label %1197

1197:                                             ; preds = %1184
  %1198 = getelementptr inbounds %struct.reg_code_block, ptr %1188, i64 %1186, i32 2
  %1199 = load ptr, ptr %1198, align 8, !tbaa !127
  %1200 = getelementptr inbounds %struct.reg_code_block, ptr %1188, i64 %1186, i32 3
  %1201 = load ptr, ptr %1200, align 8, !tbaa !20
  %1202 = icmp eq ptr %1201, null
  br i1 %1202, label %1219, label %1203

1203:                                             ; preds = %1197
  %1204 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.254, i32 noundef 2)
  %1205 = load ptr, ptr %1200, align 8, !tbaa !20
  %1206 = icmp eq ptr %1205, null
  br i1 %1206, label %1211, label %1207

1207:                                             ; preds = %1203
  %1208 = getelementptr inbounds %struct.sv, ptr %1205, i64 0, i32 1
  %1209 = load i32, ptr %1208, align 8, !tbaa !22
  %1210 = add i32 %1209, 1
  store i32 %1210, ptr %1208, align 8, !tbaa !22
  br label %1211

1211:                                             ; preds = %1203, %1207
  %1212 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1213 = load ptr, ptr %1212, align 8, !tbaa !156
  %1214 = getelementptr inbounds %struct.regexp_internal, ptr %1213, i64 0, i32 3
  %1215 = load ptr, ptr %1214, align 8, !tbaa !26
  %1216 = zext i32 %1204 to i64
  %1217 = getelementptr inbounds %struct.reg_data, ptr %1215, i64 0, i32 2, i64 %1216
  store ptr %1205, ptr %1217, align 8, !tbaa !5
  %1218 = add i32 %1204, 1
  br label %1227

1219:                                             ; preds = %1197
  %1220 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 1
  %1221 = load i32, ptr %1220, align 4, !tbaa !110
  %1222 = and i32 %1221, 268435456
  %1223 = icmp eq i32 %1222, 0
  %1224 = select i1 %1223, ptr @.str.210, ptr @.str.255
  %1225 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull %1224, i32 noundef 1)
  %1226 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  br label %1227

1227:                                             ; preds = %1219, %1211
  %1228 = phi i32 [ %1218, %1211 ], [ %1225, %1219 ]
  %1229 = phi ptr [ %1212, %1211 ], [ %1226, %1219 ]
  %1230 = phi i32 [ %1204, %1211 ], [ %1225, %1219 ]
  %1231 = load ptr, ptr %1229, align 8, !tbaa !156
  %1232 = getelementptr inbounds %struct.regexp_internal, ptr %1231, i64 0, i32 3
  %1233 = load ptr, ptr %1232, align 8, !tbaa !26
  %1234 = zext i32 %1228 to i64
  %1235 = getelementptr inbounds %struct.reg_data, ptr %1233, i64 0, i32 2, i64 %1234
  store ptr %1199, ptr %1235, align 8, !tbaa !5
  %1236 = load i32, ptr %1189, align 4, !tbaa !149
  br label %1237

1237:                                             ; preds = %1227, %1184
  %1238 = phi i32 [ %1185, %1184 ], [ %1236, %1227 ]
  %1239 = phi i32 [ 0, %1184 ], [ %1230, %1227 ]
  %1240 = add nsw i32 %1238, 1
  store i32 %1240, ptr %1189, align 4, !tbaa !149
  %1241 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br i1 %1097, label %1242, label %1251

1242:                                             ; preds = %1237
  %1243 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 70)
  %1244 = load i32, ptr %0, align 8, !tbaa !109
  %1245 = and i32 %1244, 2047
  %1246 = tail call fastcc ptr @S_reg2Lanode(ptr noundef nonnull %0, i8 noundef zeroext 68, i32 noundef %1239, i32 noundef %1245)
  %1247 = load ptr, ptr %1193, align 8, !tbaa !145
  %1248 = icmp eq ptr %1247, %1195
  br i1 %1248, label %1250, label %1249

1249:                                             ; preds = %1242
  store i8 2, ptr %1243, align 2, !tbaa !169
  br label %1250

1250:                                             ; preds = %1249, %1242
  tail call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1243, ptr noundef %1246)
  br label %1764

1251:                                             ; preds = %1237
  %1252 = tail call fastcc ptr @S_reg2Lanode(ptr noundef nonnull %0, i8 noundef zeroext 68, i32 noundef %1239, i32 noundef 0)
  br label %1764

1253:                                             ; preds = %443
  %1254 = load i8, ptr %446, align 1, !tbaa !9
  switch i8 %1254, label %1334 [
    i8 63, label %1255
    i8 60, label %1273
    i8 39, label %1273
  ]

1255:                                             ; preds = %1253
  %1256 = getelementptr inbounds i8, ptr %444, i64 3
  %1257 = load i8, ptr %1256, align 1, !tbaa !9
  switch i8 %1257, label %1635 [
    i8 61, label %1258
    i8 33, label %1258
    i8 60, label %1258
    i8 123, label %1258
  ]

1258:                                             ; preds = %1255, %1255, %1255, %1255
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #21
  %1259 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 70)
  %1260 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1261 = load ptr, ptr %1260, align 8, !tbaa !145
  %1262 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1263 = icmp eq ptr %1261, %1262
  br i1 %1263, label %1265, label %1264

1264:                                             ; preds = %1258
  store i8 1, ptr %1259, align 2, !tbaa !169
  br label %1265

1265:                                             ; preds = %1264, %1258
  %1266 = add i32 %3, 1
  %1267 = call fastcc ptr @S_reg(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull %8, i32 noundef %1266)
  %1268 = load i32, ptr %8, align 4, !tbaa !150
  %1269 = and i32 %1268, 32
  %1270 = icmp eq i32 %1269, 0
  br i1 %1270, label %1271, label %1272

1271:                                             ; preds = %1265
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1259, ptr noundef %1267)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  br label %1442

1272:                                             ; preds = %1265
  store i32 32, ptr %2, align 4, !tbaa !150
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  br label %1764

1273:                                             ; preds = %1253, %1253
  %1274 = icmp eq i8 %1254, 60
  %1275 = getelementptr inbounds i8, ptr %444, i64 3
  store ptr %1275, ptr %12, align 8, !tbaa !138
  %1276 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1277 = load ptr, ptr %1276, align 8, !tbaa !145
  %1278 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1279 = icmp eq ptr %1277, %1278
  %1280 = select i1 %1279, i32 0, i32 2
  %1281 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %1280)
  %1282 = load ptr, ptr %12, align 8, !tbaa !138
  %1283 = icmp eq ptr %1282, %446
  br i1 %1283, label %1288, label %1284

1284:                                             ; preds = %1273
  %1285 = select i1 %1274, i8 62, i8 39
  %1286 = load i8, ptr %1282, align 1, !tbaa !9
  %1287 = icmp eq i8 %1286, %1285
  br i1 %1287, label %1313, label %1288

1288:                                             ; preds = %1273, %1284
  %1289 = load ptr, ptr %1276, align 8, !tbaa !145
  %1290 = icmp eq ptr %1289, %1278
  br i1 %1290, label %1295, label %1291

1291:                                             ; preds = %1288
  %1292 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1293 = load ptr, ptr %1292, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %1293, i32 noundef 11) #21
  %1294 = load ptr, ptr %12, align 8, !tbaa !138
  br label %1295

1295:                                             ; preds = %1288, %1291
  %1296 = phi ptr [ %1282, %1288 ], [ %1294, %1291 ]
  %1297 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1298 = load ptr, ptr %1297, align 8, !tbaa !108
  %1299 = ptrtoint ptr %1296 to i64
  %1300 = ptrtoint ptr %1298 to i64
  %1301 = sub i64 %1299, %1300
  %1302 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1303 = load i32, ptr %1302, align 8, !tbaa !98
  %1304 = icmp ne i32 %1303, 0
  %1305 = zext i1 %1304 to i32
  %1306 = select i1 %1274, i32 60, i32 39
  %1307 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1308 = load ptr, ptr %1307, align 8, !tbaa !140
  %1309 = ptrtoint ptr %1308 to i64
  %1310 = sub i64 %1309, %1299
  %1311 = getelementptr inbounds i8, ptr %1298, i64 %1301
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1304, ptr noundef nonnull @.str.256, ptr nonnull poison, i32 noundef %1306, i32 noundef %1305, i64 noundef %1301, ptr noundef %1298, i32 noundef %1305, i64 noundef %1310, ptr noundef %1311)
  %1312 = load ptr, ptr %12, align 8, !tbaa !138
  br label %1313

1313:                                             ; preds = %1295, %1284
  %1314 = phi ptr [ %1312, %1295 ], [ %1282, %1284 ]
  %1315 = getelementptr inbounds i8, ptr %1314, i64 1
  store ptr %1315, ptr %12, align 8, !tbaa !138
  %1316 = load ptr, ptr %1276, align 8, !tbaa !145
  %1317 = icmp eq ptr %1316, %1278
  br i1 %1317, label %1331, label %1318

1318:                                             ; preds = %1313
  %1319 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.238, i32 noundef 1)
  %1320 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1321 = load ptr, ptr %1320, align 8, !tbaa !156
  %1322 = getelementptr inbounds %struct.regexp_internal, ptr %1321, i64 0, i32 3
  %1323 = load ptr, ptr %1322, align 8, !tbaa !26
  %1324 = zext i32 %1319 to i64
  %1325 = getelementptr inbounds %struct.reg_data, ptr %1323, i64 0, i32 2, i64 %1324
  store ptr %1281, ptr %1325, align 8, !tbaa !5
  %1326 = icmp eq ptr %1281, null
  br i1 %1326, label %1331, label %1327

1327:                                             ; preds = %1318
  %1328 = getelementptr inbounds %struct.sv, ptr %1281, i64 0, i32 1
  %1329 = load i32, ptr %1328, align 8, !tbaa !22
  %1330 = add i32 %1329, 1
  store i32 %1330, ptr %1328, align 8, !tbaa !22
  br label %1331

1331:                                             ; preds = %1318, %1327, %1313
  %1332 = phi i32 [ 0, %1313 ], [ %1319, %1327 ], [ %1319, %1318 ]
  %1333 = tail call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 78, i32 noundef %1332)
  br label %1397

1334:                                             ; preds = %1253
  %1335 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1336 = load ptr, ptr %1335, align 8, !tbaa !140
  %1337 = ptrtoint ptr %1336 to i64
  %1338 = ptrtoint ptr %446 to i64
  %1339 = sub i64 %1337, %1338
  %1340 = icmp sgt i64 %1339, 5
  br i1 %1340, label %1341, label %1348

1341:                                             ; preds = %1334
  %1342 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %446, ptr noundef nonnull dereferenceable(7) @.str.257, i64 noundef 6) #24
  %1343 = icmp eq i32 %1342, 0
  br i1 %1343, label %1344, label %1348

1344:                                             ; preds = %1341
  %1345 = tail call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 80, i32 noundef 0)
  %1346 = load ptr, ptr %12, align 8, !tbaa !138
  %1347 = getelementptr inbounds i8, ptr %1346, i64 6
  store ptr %1347, ptr %12, align 8, !tbaa !138
  br label %1397

1348:                                             ; preds = %1341, %1334
  %1349 = icmp eq i8 %1254, 82
  br i1 %1349, label %1350, label %1383

1350:                                             ; preds = %1348
  %1351 = getelementptr inbounds i8, ptr %444, i64 3
  store ptr %1351, ptr %12, align 8, !tbaa !138
  %1352 = load i8, ptr %1351, align 1, !tbaa !9
  %1353 = add i8 %1352, -49
  %1354 = icmp ult i8 %1353, 9
  br i1 %1354, label %1355, label %1365

1355:                                             ; preds = %1350
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #21
  %1356 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %1351, ptr noundef nonnull %9, ptr noundef nonnull %6) #21
  %1357 = load i64, ptr %9, align 8
  %1358 = icmp ult i64 %1357, 2147483648
  %1359 = select i1 %1356, i1 %1358, i1 false
  br i1 %1359, label %1360, label %1363

1360:                                             ; preds = %1355
  %1361 = trunc i64 %1357 to i32
  %1362 = load ptr, ptr %6, align 8, !tbaa !5
  store ptr %1362, ptr %12, align 8, !tbaa !138
  br label %1363

1363:                                             ; preds = %1360, %1355
  %1364 = phi i32 [ %1361, %1360 ], [ 0, %1355 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #21
  br label %1380

1365:                                             ; preds = %1350
  %1366 = icmp eq i8 %1352, 38
  br i1 %1366, label %1367, label %1380

1367:                                             ; preds = %1365
  %1368 = getelementptr inbounds i8, ptr %444, i64 4
  store ptr %1368, ptr %12, align 8, !tbaa !138
  %1369 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1370 = load ptr, ptr %1369, align 8, !tbaa !145
  %1371 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1372 = icmp eq ptr %1370, %1371
  %1373 = select i1 %1372, i32 0, i32 2
  %1374 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %1373)
  %1375 = icmp eq ptr %1374, null
  br i1 %1375, label %1380, label %1376

1376:                                             ; preds = %1367
  %1377 = getelementptr inbounds %struct.sv, ptr %1374, i64 0, i32 3
  %1378 = load ptr, ptr %1377, align 8, !tbaa !9
  %1379 = load i32, ptr %1378, align 4, !tbaa !150
  br label %1380

1380:                                             ; preds = %1376, %1367, %1365, %1363
  %1381 = phi i32 [ %1364, %1363 ], [ 0, %1365 ], [ %1379, %1376 ], [ 0, %1367 ]
  %1382 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 79, i32 noundef %1381)
  br label %1397

1383:                                             ; preds = %1348
  %1384 = add i8 %1254, -49
  %1385 = icmp ult i8 %1384, 9
  br i1 %1385, label %1386, label %1635

1386:                                             ; preds = %1383
  %1387 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %446, ptr noundef nonnull %10, ptr noundef nonnull %6) #21
  %1388 = load i64, ptr %10, align 8
  %1389 = icmp ult i64 %1388, 2147483648
  %1390 = select i1 %1387, i1 %1389, i1 false
  br i1 %1390, label %1391, label %1394

1391:                                             ; preds = %1386
  %1392 = trunc i64 %1388 to i32
  %1393 = load ptr, ptr %6, align 8, !tbaa !5
  store ptr %1393, ptr %12, align 8, !tbaa !138
  br label %1394

1394:                                             ; preds = %1391, %1386
  %1395 = phi i32 [ %1392, %1391 ], [ 0, %1386 ]
  %1396 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 67, i32 noundef %1395)
  br label %1397

1397:                                             ; preds = %1331, %1394, %1380, %1344
  %1398 = phi i32 [ 0, %1331 ], [ 0, %1380 ], [ 0, %1394 ], [ 1, %1344 ]
  %1399 = phi ptr [ %1333, %1331 ], [ %1382, %1380 ], [ %1396, %1394 ], [ %1345, %1344 ]
  %1400 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %1401 = load i8, ptr %1400, align 1, !tbaa !9
  %1402 = icmp eq i8 %1401, 41
  br i1 %1402, label %1442, label %1403

1403:                                             ; preds = %1397
  store ptr %1400, ptr %12, align 8, !tbaa !138
  %1404 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1405 = load i32, ptr %1404, align 8, !tbaa !98
  %1406 = icmp eq i32 %1405, 0
  br i1 %1406, label %1413, label %1407

1407:                                             ; preds = %1403
  %1408 = load i8, ptr %1400, align 1, !tbaa !9
  %1409 = zext i8 %1408 to i64
  %1410 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1409
  %1411 = load i8, ptr %1410, align 1, !tbaa !9
  %1412 = zext i8 %1411 to i64
  br label %1413

1413:                                             ; preds = %1403, %1407
  %1414 = phi i64 [ %1412, %1407 ], [ 1, %1403 ]
  %1415 = getelementptr inbounds i8, ptr %1400, i64 %1414
  store ptr %1415, ptr %12, align 8, !tbaa !138
  %1416 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1417 = load ptr, ptr %1416, align 8, !tbaa !145
  %1418 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1419 = icmp eq ptr %1417, %1418
  br i1 %1419, label %1425, label %1420

1420:                                             ; preds = %1413
  %1421 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1422 = load ptr, ptr %1421, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1422, i32 noundef 11) #21
  %1423 = load ptr, ptr %12, align 8, !tbaa !138
  %1424 = load i32, ptr %1404, align 8, !tbaa !98
  br label %1425

1425:                                             ; preds = %1413, %1420
  %1426 = phi i32 [ %1405, %1413 ], [ %1424, %1420 ]
  %1427 = phi ptr [ %1415, %1413 ], [ %1423, %1420 ]
  %1428 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1429 = load ptr, ptr %1428, align 8, !tbaa !140
  %1430 = icmp ugt ptr %1427, %1429
  %1431 = select i1 %1430, ptr %1429, ptr %1427
  %1432 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1433 = load ptr, ptr %1432, align 8, !tbaa !108
  %1434 = ptrtoint ptr %1431 to i64
  %1435 = ptrtoint ptr %1433 to i64
  %1436 = sub i64 %1434, %1435
  %1437 = icmp ne i32 %1426, 0
  %1438 = zext i1 %1437 to i32
  %1439 = ptrtoint ptr %1429 to i64
  %1440 = sub i64 %1439, %1434
  %1441 = getelementptr inbounds i8, ptr %1433, i64 %1436
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.258, i32 noundef %1438, i64 noundef %1436, ptr noundef %1433, i32 noundef %1438, i64 noundef %1440, ptr noundef %1441) #21
  br label %1442

1442:                                             ; preds = %1271, %1397, %1425
  %1443 = phi i32 [ %1398, %1425 ], [ %1398, %1397 ], [ 0, %1271 ]
  %1444 = phi ptr [ %1399, %1425 ], [ %1399, %1397 ], [ %1259, %1271 ]
  %1445 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 66, i32 noundef 0)
  %1446 = add i32 %3, 1
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1444, ptr noundef %1445)
  %1447 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 1, i32 noundef %1446)
  %1448 = icmp eq ptr %1447, null
  br i1 %1448, label %1449, label %1480

1449:                                             ; preds = %1442
  %1450 = load i32, ptr %5, align 4, !tbaa !150
  %1451 = and i32 %1450, 32
  %1452 = icmp eq i32 %1451, 0
  br i1 %1452, label %1454, label %1453

1453:                                             ; preds = %1449
  store i32 32, ptr %2, align 4, !tbaa !150
  br label %1764

1454:                                             ; preds = %1449
  %1455 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1456 = load ptr, ptr %1455, align 8, !tbaa !140
  %1457 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1458 = load ptr, ptr %1457, align 8, !tbaa !108
  %1459 = ptrtoint ptr %1456 to i64
  %1460 = ptrtoint ptr %1458 to i64
  %1461 = sub i64 %1459, %1460
  %1462 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1463 = load ptr, ptr %1462, align 8, !tbaa !145
  %1464 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1465 = icmp eq ptr %1463, %1464
  br i1 %1465, label %1470, label %1466

1466:                                             ; preds = %1454
  %1467 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1468 = load ptr, ptr %1467, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1468, i32 noundef 11) #21
  %1469 = load ptr, ptr %1457, align 8, !tbaa !108
  br label %1470

1470:                                             ; preds = %1466, %1454
  %1471 = phi ptr [ %1469, %1466 ], [ %1458, %1454 ]
  %1472 = icmp sgt i64 %1461, 127
  %1473 = select i1 %1472, ptr @.str.182, ptr @.str.178
  %1474 = select i1 %1472, i64 117, i64 %1461
  %1475 = sext i32 %1450 to i64
  %1476 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1477 = load i32, ptr %1476, align 8, !tbaa !98
  %1478 = icmp ne i32 %1477, 0
  %1479 = zext i1 %1478 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.259, i64 noundef %1475, i32 noundef %1479, i64 noundef %1474, ptr noundef %1471, ptr noundef nonnull %1473) #21
  br label %1483

1480:                                             ; preds = %1442
  %1481 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 61, i32 noundef 0)
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %1447, ptr noundef %1481)
  %1482 = load i32, ptr %5, align 4, !tbaa !150
  br label %1483

1483:                                             ; preds = %1480, %1470
  %1484 = phi i32 [ %1482, %1480 ], [ %1450, %1470 ]
  %1485 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %1486 = load i8, ptr %1485, align 1, !tbaa !9
  %1487 = and i32 %1484, 1
  %1488 = icmp eq i32 %1487, 0
  br i1 %1488, label %1492, label %1489

1489:                                             ; preds = %1483
  %1490 = load i32, ptr %2, align 4, !tbaa !150
  %1491 = or i32 %1490, 1
  store i32 %1491, ptr %2, align 4, !tbaa !150
  br label %1492

1492:                                             ; preds = %1489, %1483
  %1493 = icmp eq i8 %1486, 124
  br i1 %1493, label %1494, label %1566

1494:                                             ; preds = %1492
  %1495 = icmp eq i32 %1443, 0
  br i1 %1495, label %1522, label %1496

1496:                                             ; preds = %1494
  %1497 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1498 = load ptr, ptr %1497, align 8, !tbaa !145
  %1499 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1500 = icmp eq ptr %1498, %1499
  br i1 %1500, label %1504, label %1501

1501:                                             ; preds = %1496
  %1502 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1503 = load ptr, ptr %1502, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1503, i32 noundef 11) #21
  br label %1504

1504:                                             ; preds = %1496, %1501
  %1505 = load ptr, ptr %12, align 8, !tbaa !138
  %1506 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1507 = load ptr, ptr %1506, align 8, !tbaa !140
  %1508 = icmp ugt ptr %1505, %1507
  %1509 = select i1 %1508, ptr %1507, ptr %1505
  %1510 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1511 = load ptr, ptr %1510, align 8, !tbaa !108
  %1512 = ptrtoint ptr %1509 to i64
  %1513 = ptrtoint ptr %1511 to i64
  %1514 = sub i64 %1512, %1513
  %1515 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1516 = load i32, ptr %1515, align 8, !tbaa !98
  %1517 = icmp ne i32 %1516, 0
  %1518 = zext i1 %1517 to i32
  %1519 = ptrtoint ptr %1507 to i64
  %1520 = sub i64 %1519, %1512
  %1521 = getelementptr inbounds i8, ptr %1511, i64 %1514
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.260, i32 noundef %1518, i64 noundef %1514, ptr noundef %1511, i32 noundef %1518, i64 noundef %1520, ptr noundef %1521) #21
  br label %1522

1522:                                             ; preds = %1504, %1494
  %1523 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 66, i32 noundef 0)
  %1524 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 1, i32 noundef %1446)
  %1525 = icmp eq ptr %1524, null
  %1526 = load i32, ptr %5, align 4, !tbaa !150
  br i1 %1525, label %1527, label %1557

1527:                                             ; preds = %1522
  %1528 = and i32 %1526, 32
  %1529 = icmp eq i32 %1528, 0
  br i1 %1529, label %1531, label %1530

1530:                                             ; preds = %1527
  store i32 32, ptr %2, align 4, !tbaa !150
  br label %1764

1531:                                             ; preds = %1527
  %1532 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1533 = load ptr, ptr %1532, align 8, !tbaa !140
  %1534 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1535 = load ptr, ptr %1534, align 8, !tbaa !108
  %1536 = ptrtoint ptr %1533 to i64
  %1537 = ptrtoint ptr %1535 to i64
  %1538 = sub i64 %1536, %1537
  %1539 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1540 = load ptr, ptr %1539, align 8, !tbaa !145
  %1541 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1542 = icmp eq ptr %1540, %1541
  br i1 %1542, label %1547, label %1543

1543:                                             ; preds = %1531
  %1544 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1545 = load ptr, ptr %1544, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1545, i32 noundef 11) #21
  %1546 = load ptr, ptr %1534, align 8, !tbaa !108
  br label %1547

1547:                                             ; preds = %1543, %1531
  %1548 = phi ptr [ %1546, %1543 ], [ %1535, %1531 ]
  %1549 = icmp sgt i64 %1538, 127
  %1550 = select i1 %1549, ptr @.str.182, ptr @.str.178
  %1551 = select i1 %1549, i64 117, i64 %1538
  %1552 = sext i32 %1526 to i64
  %1553 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1554 = load i32, ptr %1553, align 8, !tbaa !98
  %1555 = icmp ne i32 %1554, 0
  %1556 = zext i1 %1555 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.259, i64 noundef %1552, i32 noundef %1556, i64 noundef %1551, ptr noundef %1548, ptr noundef nonnull %1550) #21
  br label %1557

1557:                                             ; preds = %1547, %1522
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1444, ptr noundef %1523)
  %1558 = and i32 %1526, 1
  %1559 = icmp eq i32 %1558, 0
  br i1 %1559, label %1563, label %1560

1560:                                             ; preds = %1557
  %1561 = load i32, ptr %2, align 4, !tbaa !150
  %1562 = or i32 %1561, 1
  store i32 %1562, ptr %2, align 4, !tbaa !150
  br label %1563

1563:                                             ; preds = %1560, %1557
  %1564 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %1565 = load i8, ptr %1564, align 1, !tbaa !9
  br label %1566

1566:                                             ; preds = %1492, %1563
  %1567 = phi i8 [ %1565, %1563 ], [ %1486, %1492 ]
  %1568 = phi ptr [ %1523, %1563 ], [ null, %1492 ]
  %1569 = icmp eq i8 %1567, 41
  br i1 %1569, label %1625, label %1570

1570:                                             ; preds = %1566
  %1571 = load ptr, ptr %12, align 8, !tbaa !138
  %1572 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1573 = load ptr, ptr %1572, align 8, !tbaa !140
  %1574 = icmp ugt ptr %1571, %1573
  %1575 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1576 = load ptr, ptr %1575, align 8, !tbaa !145
  %1577 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1578 = icmp eq ptr %1576, %1577
  br i1 %1574, label %1579, label %1602

1579:                                             ; preds = %1570
  br i1 %1578, label %1585, label %1580

1580:                                             ; preds = %1579
  %1581 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1582 = load ptr, ptr %1581, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1582, i32 noundef 11) #21
  %1583 = load ptr, ptr %12, align 8, !tbaa !138
  %1584 = load ptr, ptr %1572, align 8, !tbaa !140
  br label %1585

1585:                                             ; preds = %1579, %1580
  %1586 = phi ptr [ %1573, %1579 ], [ %1584, %1580 ]
  %1587 = phi ptr [ %1571, %1579 ], [ %1583, %1580 ]
  %1588 = icmp ugt ptr %1587, %1586
  %1589 = select i1 %1588, ptr %1586, ptr %1587
  %1590 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1591 = load ptr, ptr %1590, align 8, !tbaa !108
  %1592 = ptrtoint ptr %1589 to i64
  %1593 = ptrtoint ptr %1591 to i64
  %1594 = sub i64 %1592, %1593
  %1595 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1596 = load i32, ptr %1595, align 8, !tbaa !98
  %1597 = icmp ne i32 %1596, 0
  %1598 = zext i1 %1597 to i32
  %1599 = ptrtoint ptr %1586 to i64
  %1600 = sub i64 %1599, %1592
  %1601 = getelementptr inbounds i8, ptr %1591, i64 %1594
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.261, i32 noundef %1598, i64 noundef %1594, ptr noundef %1591, i32 noundef %1598, i64 noundef %1600, ptr noundef %1601) #21
  br label %1625

1602:                                             ; preds = %1570
  br i1 %1578, label %1608, label %1603

1603:                                             ; preds = %1602
  %1604 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1605 = load ptr, ptr %1604, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1605, i32 noundef 11) #21
  %1606 = load ptr, ptr %12, align 8, !tbaa !138
  %1607 = load ptr, ptr %1572, align 8, !tbaa !140
  br label %1608

1608:                                             ; preds = %1602, %1603
  %1609 = phi ptr [ %1573, %1602 ], [ %1607, %1603 ]
  %1610 = phi ptr [ %1571, %1602 ], [ %1606, %1603 ]
  %1611 = icmp ugt ptr %1610, %1609
  %1612 = select i1 %1611, ptr %1609, ptr %1610
  %1613 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1614 = load ptr, ptr %1613, align 8, !tbaa !108
  %1615 = ptrtoint ptr %1612 to i64
  %1616 = ptrtoint ptr %1614 to i64
  %1617 = sub i64 %1615, %1616
  %1618 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1619 = load i32, ptr %1618, align 8, !tbaa !98
  %1620 = icmp ne i32 %1619, 0
  %1621 = zext i1 %1620 to i32
  %1622 = ptrtoint ptr %1609 to i64
  %1623 = sub i64 %1622, %1615
  %1624 = getelementptr inbounds i8, ptr %1614, i64 %1617
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.262, i32 noundef %1621, i64 noundef %1617, ptr noundef %1614, i32 noundef %1621, i64 noundef %1623, ptr noundef %1624) #21
  br label %1625

1625:                                             ; preds = %1585, %1608, %1566
  %1626 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 41)
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1447, ptr noundef %1626)
  %1627 = icmp eq ptr %1568, null
  br i1 %1627, label %1630, label %1628

1628:                                             ; preds = %1625
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %1568, ptr noundef %1626)
  %1629 = getelementptr inbounds %struct.regnode, ptr %1568, i64 2
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %1629, ptr noundef %1626)
  br label %1631

1630:                                             ; preds = %1625
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1444, ptr noundef %1626)
  br label %1631

1631:                                             ; preds = %1630, %1628
  %1632 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %1633 = load i64, ptr %1632, align 8, !tbaa !144
  %1634 = add nsw i64 %1633, 1
  store i64 %1634, ptr %1632, align 8, !tbaa !144
  br label %1764

1635:                                             ; preds = %1255, %1383
  %1636 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1637 = load i32, ptr %1636, align 8, !tbaa !98
  %1638 = icmp eq i32 %1637, 0
  br i1 %1638, label %1644, label %1639

1639:                                             ; preds = %1635
  %1640 = zext i8 %1254 to i64
  %1641 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1640
  %1642 = load i8, ptr %1641, align 1, !tbaa !9
  %1643 = zext i8 %1642 to i64
  br label %1644

1644:                                             ; preds = %1635, %1639
  %1645 = phi i64 [ %1643, %1639 ], [ 1, %1635 ]
  %1646 = getelementptr inbounds i8, ptr %446, i64 %1645
  store ptr %1646, ptr %12, align 8, !tbaa !138
  %1647 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1648 = load ptr, ptr %1647, align 8, !tbaa !145
  %1649 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1650 = icmp eq ptr %1648, %1649
  br i1 %1650, label %1656, label %1651

1651:                                             ; preds = %1644
  %1652 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1653 = load ptr, ptr %1652, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %1653, i32 noundef 11) #21
  %1654 = load ptr, ptr %12, align 8, !tbaa !138
  %1655 = load i32, ptr %1636, align 8, !tbaa !98
  br label %1656

1656:                                             ; preds = %1651, %1644
  %1657 = phi i32 [ %1655, %1651 ], [ %1637, %1644 ]
  %1658 = phi ptr [ %1654, %1651 ], [ %1646, %1644 ]
  %1659 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1660 = load ptr, ptr %1659, align 8, !tbaa !140
  %1661 = icmp ugt ptr %1658, %1660
  %1662 = select i1 %1661, ptr %1660, ptr %1658
  %1663 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1664 = load ptr, ptr %1663, align 8, !tbaa !108
  %1665 = ptrtoint ptr %1662 to i64
  %1666 = ptrtoint ptr %1664 to i64
  %1667 = sub i64 %1665, %1666
  %1668 = icmp ne i32 %1657, 0
  %1669 = zext i1 %1668 to i32
  %1670 = ptrtoint ptr %1660 to i64
  %1671 = sub i64 %1670, %1665
  %1672 = getelementptr inbounds i8, ptr %1664, i64 %1667
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.263, i32 noundef %1669, i64 noundef %1667, ptr noundef %1664, i32 noundef %1669, i64 noundef %1671, ptr noundef %1672) #21
  br label %1673

1673:                                             ; preds = %1656, %443
  %1674 = tail call fastcc ptr @S_handle_regex_sets(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %2, i32 noundef %3)
  br label %1764

1675:                                             ; preds = %443
  store ptr %445, ptr %12, align 8, !tbaa !138
  %1676 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1677 = load ptr, ptr %1676, align 8, !tbaa !145
  %1678 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1679 = icmp eq ptr %1677, %1678
  br i1 %1679, label %1684, label %1680

1680:                                             ; preds = %1675
  %1681 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1682 = load ptr, ptr %1681, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %1682, i32 noundef 11) #21
  %1683 = load ptr, ptr %12, align 8, !tbaa !138
  br label %1684

1684:                                             ; preds = %1675, %1680
  %1685 = phi ptr [ %445, %1675 ], [ %1683, %1680 ]
  %1686 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1687 = load ptr, ptr %1686, align 8, !tbaa !140
  %1688 = icmp ugt ptr %1685, %1687
  %1689 = select i1 %1688, ptr %1687, ptr %1685
  %1690 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1691 = load ptr, ptr %1690, align 8, !tbaa !108
  %1692 = ptrtoint ptr %1689 to i64
  %1693 = ptrtoint ptr %1691 to i64
  %1694 = sub i64 %1692, %1693
  %1695 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1696 = load i32, ptr %1695, align 8, !tbaa !98
  %1697 = icmp ne i32 %1696, 0
  %1698 = zext i1 %1697 to i32
  %1699 = ptrtoint ptr %1687 to i64
  %1700 = sub i64 %1699, %1692
  %1701 = getelementptr inbounds i8, ptr %1691, i64 %1694
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.264, i32 noundef %1698, i64 noundef %1694, ptr noundef %1691, i32 noundef %1698, i64 noundef %1700, ptr noundef %1701) #21
  br label %1708

1702:                                             ; preds = %879, %443
  store ptr %445, ptr %12, align 8, !tbaa !138
  tail call fastcc void @S_parse_lparen_question_flags(ptr noundef nonnull %0)
  %1703 = load ptr, ptr %12, align 8, !tbaa !138
  %1704 = load i8, ptr %1703, align 1, !tbaa !9
  switch i8 %1704, label %1705 [
    i8 58, label %1766
    i8 0, label %1707
  ]

1705:                                             ; preds = %1702
  %1706 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %1707

1707:                                             ; preds = %1702, %1705
  store i32 16, ptr %2, align 4, !tbaa !150
  br label %1764

1708:                                             ; preds = %443, %443, %724, %1684, %747, %735, %719
  %1709 = phi i32 [ 0, %719 ], [ 0, %724 ], [ %737, %735 ], [ 0, %443 ], [ 0, %443 ], [ 0, %747 ], [ 0, %1684 ]
  %1710 = phi i32 [ %720, %719 ], [ 33, %724 ], [ 58, %735 ], [ %448, %443 ], [ %448, %443 ], [ %448, %747 ], [ 0, %1684 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  br label %1768

1711:                                             ; preds = %658, %610, %663, %687, %703, %632
  %1712 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  br label %1717

1713:                                             ; preds = %18
  %1714 = load i32, ptr %0, align 8, !tbaa !109
  %1715 = and i32 %1714, 32
  %1716 = icmp eq i32 %1715, 0
  br i1 %1716, label %1717, label %1768

1717:                                             ; preds = %1711, %1713
  %1718 = phi i32 [ 1, %1711 ], [ %1, %1713 ]
  %1719 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1720 = load i32, ptr %1719, align 8, !tbaa !142
  %1721 = add nsw i32 %1720, 1
  store i32 %1721, ptr %1719, align 8, !tbaa !142
  %1722 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1723 = load ptr, ptr %1722, align 8, !tbaa !145
  %1724 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1725 = icmp eq ptr %1723, %1724
  br i1 %1725, label %1726, label %1730

1726:                                             ; preds = %1717
  %1727 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %1728 = load i64, ptr %1727, align 8, !tbaa !144
  %1729 = add i64 %1728, 2
  store i64 %1729, ptr %1727, align 8, !tbaa !144
  br label %1768

1730:                                             ; preds = %1717
  %1731 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %1732 = load ptr, ptr %1731, align 8, !tbaa !158
  %1733 = icmp ult ptr %1723, %1732
  br i1 %1733, label %1736, label %1734

1734:                                             ; preds = %1730
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 49, ptr noundef %1723, ptr noundef %1732) #21
  %1735 = load ptr, ptr %1722, align 8, !tbaa !145
  br label %1736

1736:                                             ; preds = %1730, %1734
  %1737 = phi ptr [ %1735, %1734 ], [ %1723, %1730 ]
  store i8 0, ptr %1723, align 2, !tbaa !169
  %1738 = icmp eq ptr %1737, %1724
  br i1 %1738, label %1768, label %1739

1739:                                             ; preds = %1736
  %1740 = getelementptr inbounds %struct.regnode_1, ptr %1723, i64 0, i32 3
  store i32 %1720, ptr %1740, align 4, !tbaa !166
  %1741 = getelementptr inbounds %struct.regnode, ptr %1723, i64 0, i32 1
  store i8 49, ptr %1741, align 1, !tbaa !164
  %1742 = getelementptr inbounds %struct.regnode, ptr %1723, i64 0, i32 2
  store i16 0, ptr %1742, align 2, !tbaa !168
  %1743 = getelementptr inbounds %struct.regnode, ptr %1723, i64 2
  store ptr %1743, ptr %1722, align 8, !tbaa !145
  %1744 = icmp eq ptr %1743, %1724
  br i1 %1744, label %1768, label %1745

1745:                                             ; preds = %1739
  %1746 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 19
  %1747 = load i32, ptr %1746, align 4, !tbaa !143
  %1748 = icmp eq i32 %1747, 0
  br i1 %1748, label %1749, label %1750

1749:                                             ; preds = %1745
  store i32 %1720, ptr %1746, align 4, !tbaa !143
  br label %1750

1750:                                             ; preds = %1749, %1745
  %1751 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %1752 = load i32, ptr %1751, align 8, !tbaa !131
  %1753 = and i32 %1752, 32
  %1754 = icmp eq i32 %1753, 0
  br i1 %1754, label %1768, label %1755

1755:                                             ; preds = %1750
  %1756 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  %1757 = load ptr, ptr %1756, align 8, !tbaa !153
  %1758 = add nsw i32 %1720, -1
  %1759 = sext i32 %1758 to i64
  %1760 = getelementptr inbounds ptr, ptr %1757, i64 %1759
  %1761 = load ptr, ptr %1760, align 8, !tbaa !5
  %1762 = icmp eq ptr %1761, null
  br i1 %1762, label %1763, label %1768

1763:                                             ; preds = %1755
  store ptr %1723, ptr %1760, align 8, !tbaa !5
  br label %1768

1764:                                             ; preds = %1250, %1251, %519, %732, %791, %1036, %1673, %1707, %1453, %1631, %1530, %1272
  %1765 = phi ptr [ null, %1707 ], [ %1674, %1673 ], [ %982, %1036 ], [ %792, %791 ], [ %733, %732 ], [ %521, %519 ], [ %1243, %1250 ], [ %1252, %1251 ], [ null, %1272 ], [ null, %1530 ], [ %1444, %1631 ], [ null, %1453 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  br label %2811

1766:                                             ; preds = %1702
  %1767 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  br label %1768

1768:                                             ; preds = %1726, %1736, %1750, %1755, %1763, %1739, %1713, %1708, %1766, %4
  %1769 = phi i32 [ 0, %1766 ], [ %1, %4 ], [ %1709, %1708 ], [ 0, %1713 ], [ 0, %1739 ], [ 0, %1763 ], [ 0, %1755 ], [ 0, %1750 ], [ 0, %1736 ], [ 0, %1726 ]
  %1770 = phi i1 [ true, %1766 ], [ true, %4 ], [ true, %1708 ], [ true, %1713 ], [ false, %1739 ], [ false, %1763 ], [ false, %1755 ], [ false, %1750 ], [ false, %1736 ], [ false, %1726 ]
  %1771 = phi i32 [ 0, %1766 ], [ %1, %4 ], [ 0, %1708 ], [ 0, %1713 ], [ %1720, %1739 ], [ %1720, %1763 ], [ %1720, %1755 ], [ %1720, %1750 ], [ %1720, %1736 ], [ %1720, %1726 ]
  %1772 = phi ptr [ null, %1766 ], [ null, %4 ], [ null, %1708 ], [ null, %1713 ], [ %1723, %1739 ], [ %1723, %1763 ], [ %1723, %1755 ], [ %1723, %1750 ], [ %1723, %1736 ], [ %1724, %1726 ]
  %1773 = phi i32 [ 58, %1766 ], [ %1, %4 ], [ %1710, %1708 ], [ 58, %1713 ], [ %1718, %1739 ], [ %1718, %1763 ], [ %1718, %1755 ], [ %1718, %1750 ], [ %1718, %1736 ], [ %1718, %1726 ]
  %1774 = add i32 %3, 1
  %1775 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 1, i32 noundef %1774)
  %1776 = icmp eq ptr %1775, null
  br i1 %1776, label %1777, label %1808

1777:                                             ; preds = %1768
  %1778 = load i32, ptr %5, align 4, !tbaa !150
  %1779 = and i32 %1778, 32
  %1780 = icmp eq i32 %1779, 0
  br i1 %1780, label %1782, label %1781

1781:                                             ; preds = %1777
  store i32 32, ptr %2, align 4, !tbaa !150
  br label %2811

1782:                                             ; preds = %1777
  %1783 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1784 = load ptr, ptr %1783, align 8, !tbaa !140
  %1785 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1786 = load ptr, ptr %1785, align 8, !tbaa !108
  %1787 = ptrtoint ptr %1784 to i64
  %1788 = ptrtoint ptr %1786 to i64
  %1789 = sub i64 %1787, %1788
  %1790 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1791 = load ptr, ptr %1790, align 8, !tbaa !145
  %1792 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1793 = icmp eq ptr %1791, %1792
  br i1 %1793, label %1798, label %1794

1794:                                             ; preds = %1782
  %1795 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1796 = load ptr, ptr %1795, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %1796, i32 noundef 11) #21
  %1797 = load ptr, ptr %1785, align 8, !tbaa !108
  br label %1798

1798:                                             ; preds = %1794, %1782
  %1799 = phi ptr [ %1797, %1794 ], [ %1786, %1782 ]
  %1800 = icmp sgt i64 %1789, 127
  %1801 = select i1 %1800, ptr @.str.182, ptr @.str.178
  %1802 = select i1 %1800, i64 117, i64 %1789
  %1803 = sext i32 %1778 to i64
  %1804 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1805 = load i32, ptr %1804, align 8, !tbaa !98
  %1806 = icmp ne i32 %1805, 0
  %1807 = zext i1 %1806 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.259, i64 noundef %1803, i32 noundef %1807, i64 noundef %1802, ptr noundef %1799, ptr noundef nonnull %1801) #21
  br label %1808

1808:                                             ; preds = %1798, %1768
  %1809 = load ptr, ptr %12, align 8, !tbaa !138
  %1810 = load i8, ptr %1809, align 1, !tbaa !9
  %1811 = icmp eq i8 %1810, 124
  br i1 %1811, label %1812, label %1916

1812:                                             ; preds = %1808
  %1813 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1814 = load ptr, ptr %1813, align 8, !tbaa !145
  %1815 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1816 = icmp eq ptr %1814, %1815
  br i1 %1816, label %1864, label %1817

1817:                                             ; preds = %1812
  %1818 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %1819 = load i32, ptr %1818, align 8, !tbaa !135
  %1820 = icmp eq i32 %1819, 0
  %1821 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  br i1 %1820, label %1868, label %1822

1822:                                             ; preds = %1817
  %1823 = getelementptr inbounds %struct.regnode, ptr %1814, i64 2
  store ptr %1823, ptr %1813, align 8, !tbaa !145
  %1824 = load ptr, ptr %1821, align 8, !tbaa !153
  %1825 = icmp eq ptr %1824, null
  br i1 %1825, label %1851, label %1826

1826:                                             ; preds = %1822
  %1827 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1828 = load i32, ptr %1827, align 8, !tbaa !142
  %1829 = icmp sgt i32 %1828, 0
  br i1 %1829, label %1830, label %1851

1830:                                             ; preds = %1826
  %1831 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %1832 = zext i32 %1828 to i64
  br label %1833

1833:                                             ; preds = %1848, %1830
  %1834 = phi i64 [ 0, %1830 ], [ %1849, %1848 ]
  %1835 = load ptr, ptr %1821, align 8, !tbaa !153
  %1836 = getelementptr inbounds ptr, ptr %1835, i64 %1834
  %1837 = load ptr, ptr %1836, align 8, !tbaa !5
  %1838 = icmp ult ptr %1837, %1775
  br i1 %1838, label %1841, label %1839

1839:                                             ; preds = %1833
  %1840 = getelementptr inbounds %struct.regnode, ptr %1837, i64 2
  store ptr %1840, ptr %1836, align 8, !tbaa !5
  br label %1841

1841:                                             ; preds = %1839, %1833
  %1842 = load ptr, ptr %1831, align 8, !tbaa !154
  %1843 = getelementptr inbounds ptr, ptr %1842, i64 %1834
  %1844 = load ptr, ptr %1843, align 8, !tbaa !5
  %1845 = icmp ult ptr %1844, %1775
  br i1 %1845, label %1848, label %1846

1846:                                             ; preds = %1841
  %1847 = getelementptr inbounds %struct.regnode, ptr %1844, i64 2
  store ptr %1847, ptr %1843, align 8, !tbaa !5
  br label %1848

1848:                                             ; preds = %1846, %1841
  %1849 = add nuw nsw i64 %1834, 1
  %1850 = icmp eq i64 %1849, %1832
  br i1 %1850, label %1851, label %1833, !llvm.loop !235

1851:                                             ; preds = %1848, %1826, %1822
  %1852 = icmp ugt ptr %1814, %1775
  br i1 %1852, label %1853, label %1860

1853:                                             ; preds = %1851, %1853
  %1854 = phi ptr [ %1857, %1853 ], [ %1814, %1851 ]
  %1855 = phi ptr [ %1856, %1853 ], [ %1823, %1851 ]
  %1856 = getelementptr inbounds %struct.regnode, ptr %1855, i64 -1
  %1857 = getelementptr inbounds %struct.regnode, ptr %1854, i64 -1
  %1858 = load i32, ptr %1857, align 2
  store i32 %1858, ptr %1856, align 2
  %1859 = icmp ugt ptr %1857, %1775
  br i1 %1859, label %1853, label %1860, !llvm.loop !236

1860:                                             ; preds = %1853, %1851
  %1861 = getelementptr inbounds %struct.regnode, ptr %1775, i64 1
  %1862 = getelementptr inbounds %struct.regnode, ptr %1775, i64 0, i32 1
  store i8 62, ptr %1862, align 1, !tbaa !164
  %1863 = getelementptr inbounds %struct.regnode, ptr %1775, i64 0, i32 2
  store i16 0, ptr %1863, align 2, !tbaa !168
  store i32 0, ptr %1861, align 1
  br label %1909

1864:                                             ; preds = %1812
  %1865 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %1866 = load i64, ptr %1865, align 8, !tbaa !144
  %1867 = add nsw i64 %1866, 1
  store i64 %1867, ptr %1865, align 8, !tbaa !144
  br label %1909

1868:                                             ; preds = %1817
  %1869 = getelementptr inbounds %struct.regnode, ptr %1814, i64 1
  store ptr %1869, ptr %1813, align 8, !tbaa !145
  %1870 = load ptr, ptr %1821, align 8, !tbaa !153
  %1871 = icmp eq ptr %1870, null
  br i1 %1871, label %1897, label %1872

1872:                                             ; preds = %1868
  %1873 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1874 = load i32, ptr %1873, align 8, !tbaa !142
  %1875 = icmp sgt i32 %1874, 0
  br i1 %1875, label %1876, label %1897

1876:                                             ; preds = %1872
  %1877 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %1878 = zext i32 %1874 to i64
  br label %1879

1879:                                             ; preds = %1894, %1876
  %1880 = phi i64 [ 0, %1876 ], [ %1895, %1894 ]
  %1881 = load ptr, ptr %1821, align 8, !tbaa !153
  %1882 = getelementptr inbounds ptr, ptr %1881, i64 %1880
  %1883 = load ptr, ptr %1882, align 8, !tbaa !5
  %1884 = icmp ult ptr %1883, %1775
  br i1 %1884, label %1887, label %1885

1885:                                             ; preds = %1879
  %1886 = getelementptr inbounds %struct.regnode, ptr %1883, i64 1
  store ptr %1886, ptr %1882, align 8, !tbaa !5
  br label %1887

1887:                                             ; preds = %1885, %1879
  %1888 = load ptr, ptr %1877, align 8, !tbaa !154
  %1889 = getelementptr inbounds ptr, ptr %1888, i64 %1880
  %1890 = load ptr, ptr %1889, align 8, !tbaa !5
  %1891 = icmp ult ptr %1890, %1775
  br i1 %1891, label %1894, label %1892

1892:                                             ; preds = %1887
  %1893 = getelementptr inbounds %struct.regnode, ptr %1890, i64 1
  store ptr %1893, ptr %1889, align 8, !tbaa !5
  br label %1894

1894:                                             ; preds = %1892, %1887
  %1895 = add nuw nsw i64 %1880, 1
  %1896 = icmp eq i64 %1895, %1878
  br i1 %1896, label %1897, label %1879, !llvm.loop !235

1897:                                             ; preds = %1894, %1872, %1868
  %1898 = icmp ugt ptr %1814, %1775
  br i1 %1898, label %1899, label %1906

1899:                                             ; preds = %1897, %1899
  %1900 = phi ptr [ %1903, %1899 ], [ %1814, %1897 ]
  %1901 = phi ptr [ %1902, %1899 ], [ %1869, %1897 ]
  %1902 = getelementptr inbounds %struct.regnode, ptr %1901, i64 -1
  %1903 = getelementptr inbounds %struct.regnode, ptr %1900, i64 -1
  %1904 = load i32, ptr %1903, align 2
  store i32 %1904, ptr %1902, align 2
  %1905 = icmp ugt ptr %1903, %1775
  br i1 %1905, label %1899, label %1906, !llvm.loop !236

1906:                                             ; preds = %1899, %1897
  %1907 = getelementptr inbounds %struct.regnode, ptr %1775, i64 0, i32 1
  store i8 30, ptr %1907, align 1, !tbaa !164
  %1908 = getelementptr inbounds %struct.regnode, ptr %1775, i64 0, i32 2
  store i16 0, ptr %1908, align 2, !tbaa !168
  br label %1909

1909:                                             ; preds = %1906, %1864, %1860
  %1910 = load ptr, ptr %1813, align 8, !tbaa !145
  %1911 = icmp eq ptr %1910, %1815
  br i1 %1911, label %1912, label %1923

1912:                                             ; preds = %1909
  %1913 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %1914 = load i32, ptr %1913, align 8, !tbaa !135
  %1915 = add nsw i32 %1914, 1
  store i32 %1915, ptr %1913, align 8, !tbaa !135
  br label %1923

1916:                                             ; preds = %1808
  %1917 = icmp eq i32 %1773, 58
  br i1 %1917, label %1918, label %1923

1918:                                             ; preds = %1916
  %1919 = load i32, ptr %5, align 4, !tbaa !150
  %1920 = and i32 %1919, 2
  %1921 = load i32, ptr %2, align 4, !tbaa !150
  %1922 = or i32 %1921, %1920
  store i32 %1922, ptr %2, align 4, !tbaa !150
  br label %1923

1923:                                             ; preds = %1916, %1918, %1909, %1912
  br i1 %1770, label %1971, label %1924

1924:                                             ; preds = %1923
  %1925 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1926 = load ptr, ptr %1925, align 8, !tbaa !145
  %1927 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1928 = icmp eq ptr %1926, %1927
  br i1 %1928, label %1974, label %1929

1929:                                             ; preds = %1924, %1953
  %1930 = phi ptr [ %1956, %1953 ], [ %1772, %1924 ]
  %1931 = icmp ne ptr %1930, null
  tail call void @llvm.assume(i1 %1931)
  %1932 = getelementptr inbounds %struct.regnode, ptr %1930, i64 0, i32 1
  %1933 = load i8, ptr %1932, align 1, !tbaa !164
  %1934 = icmp ugt i8 %1933, 93
  br i1 %1934, label %1935, label %1938

1935:                                             ; preds = %1929
  %1936 = zext i8 %1933 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1936, i32 noundef 93) #21
  %1937 = load i8, ptr %1932, align 1, !tbaa !164
  br label %1938

1938:                                             ; preds = %1935, %1929
  %1939 = phi i8 [ %1937, %1935 ], [ %1933, %1929 ]
  %1940 = zext i8 %1939 to i64
  %1941 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1940
  %1942 = load i8, ptr %1941, align 1, !tbaa !9
  %1943 = icmp eq i8 %1942, 0
  br i1 %1943, label %1944, label %1949

1944:                                             ; preds = %1938
  %1945 = getelementptr inbounds %struct.regnode, ptr %1930, i64 0, i32 2
  %1946 = load i16, ptr %1945, align 2, !tbaa !168
  %1947 = zext i16 %1946 to i32
  %1948 = icmp eq i16 %1946, 0
  br i1 %1948, label %1964, label %1953

1949:                                             ; preds = %1938
  %1950 = getelementptr inbounds %struct.regnode_1, ptr %1930, i64 0, i32 3
  %1951 = load i32, ptr %1950, align 4, !tbaa !166
  %1952 = icmp eq i32 %1951, 0
  br i1 %1952, label %1957, label %1953

1953:                                             ; preds = %1949, %1944
  %1954 = phi i32 [ %1951, %1949 ], [ %1947, %1944 ]
  %1955 = sext i32 %1954 to i64
  %1956 = getelementptr inbounds %struct.regnode, ptr %1930, i64 %1955
  br label %1929

1957:                                             ; preds = %1949
  %1958 = getelementptr inbounds %struct.regnode_1, ptr %1930, i64 0, i32 3
  %1959 = ptrtoint ptr %1775 to i64
  %1960 = ptrtoint ptr %1930 to i64
  %1961 = sub i64 %1959, %1960
  %1962 = lshr exact i64 %1961, 2
  %1963 = trunc i64 %1962 to i32
  store i32 %1963, ptr %1958, align 4, !tbaa !166
  br label %1974

1964:                                             ; preds = %1944
  %1965 = getelementptr inbounds %struct.regnode, ptr %1930, i64 0, i32 2
  %1966 = ptrtoint ptr %1775 to i64
  %1967 = ptrtoint ptr %1930 to i64
  %1968 = sub i64 %1966, %1967
  %1969 = lshr exact i64 %1968, 2
  %1970 = trunc i64 %1969 to i16
  store i16 %1970, ptr %1965, align 2, !tbaa !168
  br label %1974

1971:                                             ; preds = %1923
  %1972 = icmp eq i32 %1773, 63
  %1973 = select i1 %1972, ptr %1772, ptr %1775
  br label %1974

1974:                                             ; preds = %1964, %1957, %1924, %1971
  %1975 = phi ptr [ %1973, %1971 ], [ %1772, %1924 ], [ %1772, %1957 ], [ %1772, %1964 ]
  %1976 = load i32, ptr %5, align 4, !tbaa !150
  %1977 = and i32 %1976, 13
  %1978 = load i32, ptr %2, align 4, !tbaa !150
  %1979 = or i32 %1978, %1977
  store i32 %1979, ptr %2, align 4, !tbaa !150
  %1980 = load ptr, ptr %12, align 8, !tbaa !138
  %1981 = load i8, ptr %1980, align 1, !tbaa !9
  %1982 = icmp eq i8 %1981, 124
  br i1 %1982, label %1983, label %2196

1983:                                             ; preds = %1974
  %1984 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1985 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1986 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %1987 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %1988 = icmp eq i32 %1769, 0
  %1989 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1990 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1991 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1992 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1993 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  br label %1994

1994:                                             ; preds = %1983, %2188
  %1995 = phi ptr [ %1775, %1983 ], [ %2074, %2188 ]
  %1996 = phi ptr [ null, %1983 ], [ %2061, %2188 ]
  %1997 = phi i32 [ %1769, %1983 ], [ %2073, %2188 ]
  %1998 = load ptr, ptr %1984, align 8, !tbaa !145
  %1999 = icmp eq ptr %1998, %1985
  br i1 %1999, label %2060, label %2000

2000:                                             ; preds = %1994
  %2001 = load i32, ptr %1986, align 8, !tbaa !135
  %2002 = icmp eq i32 %2001, 0
  br i1 %2002, label %2060, label %2003

2003:                                             ; preds = %2000
  %2004 = load ptr, ptr %1987, align 8, !tbaa !158
  %2005 = icmp ult ptr %1998, %2004
  br i1 %2005, label %2008, label %2006

2006:                                             ; preds = %2003
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 61, ptr noundef %1998, ptr noundef %2004) #21
  %2007 = load ptr, ptr %1984, align 8, !tbaa !145
  br label %2008

2008:                                             ; preds = %2003, %2006
  %2009 = phi ptr [ %2007, %2006 ], [ %1998, %2003 ]
  store i8 0, ptr %1998, align 2, !tbaa !169
  %2010 = icmp eq ptr %2009, %1985
  br i1 %2010, label %2060, label %2011

2011:                                             ; preds = %2008
  %2012 = getelementptr inbounds %struct.regnode_1, ptr %1998, i64 0, i32 3
  store i32 0, ptr %2012, align 4, !tbaa !166
  %2013 = getelementptr inbounds %struct.regnode, ptr %1998, i64 0, i32 1
  store i8 61, ptr %2013, align 1, !tbaa !164
  %2014 = getelementptr inbounds %struct.regnode, ptr %1998, i64 0, i32 2
  store i16 0, ptr %2014, align 2, !tbaa !168
  %2015 = getelementptr inbounds %struct.regnode, ptr %1998, i64 2
  store ptr %2015, ptr %1984, align 8, !tbaa !145
  %2016 = icmp eq ptr %2015, %1985
  br i1 %2016, label %2060, label %2017

2017:                                             ; preds = %2011
  %2018 = getelementptr inbounds %struct.regnode, ptr %1995, i64 2
  br label %2019

2019:                                             ; preds = %2017, %2042
  %2020 = phi ptr [ %2045, %2042 ], [ %2018, %2017 ]
  %2021 = getelementptr inbounds %struct.regnode, ptr %2020, i64 0, i32 1
  %2022 = load i8, ptr %2021, align 1, !tbaa !164
  %2023 = icmp ugt i8 %2022, 93
  br i1 %2023, label %2024, label %2027

2024:                                             ; preds = %2019
  %2025 = zext i8 %2022 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2025, i32 noundef 93) #21
  %2026 = load i8, ptr %2021, align 1, !tbaa !164
  br label %2027

2027:                                             ; preds = %2024, %2019
  %2028 = phi i8 [ %2026, %2024 ], [ %2022, %2019 ]
  %2029 = zext i8 %2028 to i64
  %2030 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2029
  %2031 = load i8, ptr %2030, align 1, !tbaa !9
  %2032 = icmp eq i8 %2031, 0
  br i1 %2032, label %2033, label %2038

2033:                                             ; preds = %2027
  %2034 = getelementptr inbounds %struct.regnode, ptr %2020, i64 0, i32 2
  %2035 = load i16, ptr %2034, align 2, !tbaa !168
  %2036 = zext i16 %2035 to i32
  %2037 = icmp eq i16 %2035, 0
  br i1 %2037, label %2053, label %2042

2038:                                             ; preds = %2027
  %2039 = getelementptr inbounds %struct.regnode_1, ptr %2020, i64 0, i32 3
  %2040 = load i32, ptr %2039, align 4, !tbaa !166
  %2041 = icmp eq i32 %2040, 0
  br i1 %2041, label %2046, label %2042

2042:                                             ; preds = %2038, %2033
  %2043 = phi i32 [ %2040, %2038 ], [ %2036, %2033 ]
  %2044 = sext i32 %2043 to i64
  %2045 = getelementptr inbounds %struct.regnode, ptr %2020, i64 %2044
  br label %2019

2046:                                             ; preds = %2038
  %2047 = getelementptr inbounds %struct.regnode_1, ptr %2020, i64 0, i32 3
  %2048 = ptrtoint ptr %1998 to i64
  %2049 = ptrtoint ptr %2020 to i64
  %2050 = sub i64 %2048, %2049
  %2051 = lshr exact i64 %2050, 2
  %2052 = trunc i64 %2051 to i32
  store i32 %2052, ptr %2047, align 4, !tbaa !166
  br label %2060

2053:                                             ; preds = %2033
  %2054 = getelementptr inbounds %struct.regnode, ptr %2020, i64 0, i32 2
  %2055 = ptrtoint ptr %1998 to i64
  %2056 = ptrtoint ptr %2020 to i64
  %2057 = sub i64 %2055, %2056
  %2058 = lshr exact i64 %2057, 2
  %2059 = trunc i64 %2058 to i16
  store i16 %2059, ptr %2054, align 2, !tbaa !168
  br label %2060

2060:                                             ; preds = %2008, %2053, %2046, %2011, %2000, %1994
  %2061 = phi ptr [ %1996, %1994 ], [ %1996, %2000 ], [ %1998, %2011 ], [ %1998, %2046 ], [ %1998, %2053 ], [ %1998, %2008 ]
  %2062 = load ptr, ptr %1984, align 8, !tbaa !145
  %2063 = icmp eq ptr %2062, %1985
  br i1 %2063, label %2064, label %2067

2064:                                             ; preds = %2060
  %2065 = load i32, ptr %1986, align 8, !tbaa !135
  %2066 = add nsw i32 %2065, 2
  store i32 %2066, ptr %1986, align 8, !tbaa !135
  br label %2067

2067:                                             ; preds = %2064, %2060
  %2068 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br i1 %1988, label %2072, label %2069

2069:                                             ; preds = %2067
  %2070 = load i32, ptr %1989, align 8, !tbaa !142
  %2071 = tail call i32 @llvm.smax.i32(i32 %2070, i32 %1997)
  store i32 %1769, ptr %1989, align 8, !tbaa !142
  br label %2072

2072:                                             ; preds = %2069, %2067
  %2073 = phi i32 [ %2071, %2069 ], [ %1997, %2067 ]
  %2074 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 0, i32 noundef %1774)
  %2075 = icmp eq ptr %2074, null
  br i1 %2075, label %2121, label %2076

2076:                                             ; preds = %2072
  %2077 = load ptr, ptr %1984, align 8, !tbaa !145
  %2078 = icmp eq ptr %2077, %1985
  br i1 %2078, label %2188, label %2079

2079:                                             ; preds = %2076, %2103
  %2080 = phi ptr [ %2106, %2103 ], [ %1995, %2076 ]
  %2081 = icmp ne ptr %2080, null
  tail call void @llvm.assume(i1 %2081)
  %2082 = getelementptr inbounds %struct.regnode, ptr %2080, i64 0, i32 1
  %2083 = load i8, ptr %2082, align 1, !tbaa !164
  %2084 = icmp ugt i8 %2083, 93
  br i1 %2084, label %2085, label %2088

2085:                                             ; preds = %2079
  %2086 = zext i8 %2083 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2086, i32 noundef 93) #21
  %2087 = load i8, ptr %2082, align 1, !tbaa !164
  br label %2088

2088:                                             ; preds = %2085, %2079
  %2089 = phi i8 [ %2087, %2085 ], [ %2083, %2079 ]
  %2090 = zext i8 %2089 to i64
  %2091 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2090
  %2092 = load i8, ptr %2091, align 1, !tbaa !9
  %2093 = icmp eq i8 %2092, 0
  br i1 %2093, label %2094, label %2099

2094:                                             ; preds = %2088
  %2095 = getelementptr inbounds %struct.regnode, ptr %2080, i64 0, i32 2
  %2096 = load i16, ptr %2095, align 2, !tbaa !168
  %2097 = zext i16 %2096 to i32
  %2098 = icmp eq i16 %2096, 0
  br i1 %2098, label %2114, label %2103

2099:                                             ; preds = %2088
  %2100 = getelementptr inbounds %struct.regnode_1, ptr %2080, i64 0, i32 3
  %2101 = load i32, ptr %2100, align 4, !tbaa !166
  %2102 = icmp eq i32 %2101, 0
  br i1 %2102, label %2107, label %2103

2103:                                             ; preds = %2099, %2094
  %2104 = phi i32 [ %2101, %2099 ], [ %2097, %2094 ]
  %2105 = sext i32 %2104 to i64
  %2106 = getelementptr inbounds %struct.regnode, ptr %2080, i64 %2105
  br label %2079

2107:                                             ; preds = %2099
  %2108 = getelementptr inbounds %struct.regnode_1, ptr %2080, i64 0, i32 3
  %2109 = ptrtoint ptr %2074 to i64
  %2110 = ptrtoint ptr %2080 to i64
  %2111 = sub i64 %2109, %2110
  %2112 = lshr exact i64 %2111, 2
  %2113 = trunc i64 %2112 to i32
  store i32 %2113, ptr %2108, align 4, !tbaa !166
  br label %2188

2114:                                             ; preds = %2094
  %2115 = getelementptr inbounds %struct.regnode, ptr %2080, i64 0, i32 2
  %2116 = ptrtoint ptr %2074 to i64
  %2117 = ptrtoint ptr %2080 to i64
  %2118 = sub i64 %2116, %2117
  %2119 = lshr exact i64 %2118, 2
  %2120 = trunc i64 %2119 to i16
  store i16 %2120, ptr %2115, align 2, !tbaa !168
  br label %2188

2121:                                             ; preds = %2072
  %2122 = load i32, ptr %5, align 4, !tbaa !150
  %2123 = and i32 %2122, 32
  %2124 = icmp eq i32 %2123, 0
  br i1 %2124, label %2126, label %2125

2125:                                             ; preds = %2121
  store i32 32, ptr %2, align 4, !tbaa !150
  br label %2811

2126:                                             ; preds = %2121
  %2127 = load ptr, ptr %1990, align 8, !tbaa !140
  %2128 = load ptr, ptr %1991, align 8, !tbaa !108
  %2129 = ptrtoint ptr %2127 to i64
  %2130 = ptrtoint ptr %2128 to i64
  %2131 = sub i64 %2129, %2130
  %2132 = load ptr, ptr %1984, align 8, !tbaa !145
  %2133 = icmp eq ptr %2132, %1985
  br i1 %2133, label %2137, label %2134

2134:                                             ; preds = %2126
  %2135 = load ptr, ptr %1992, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %2135, i32 noundef 11) #21
  %2136 = load ptr, ptr %1991, align 8, !tbaa !108
  br label %2137

2137:                                             ; preds = %2134, %2126
  %2138 = phi ptr [ %2136, %2134 ], [ %2128, %2126 ]
  %2139 = icmp sgt i64 %2131, 127
  %2140 = select i1 %2139, ptr @.str.182, ptr @.str.178
  %2141 = select i1 %2139, i64 117, i64 %2131
  %2142 = sext i32 %2122 to i64
  %2143 = load i32, ptr %1993, align 8, !tbaa !98
  %2144 = icmp ne i32 %2143, 0
  %2145 = zext i1 %2144 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.259, i64 noundef %2142, i32 noundef %2145, i64 noundef %2141, ptr noundef %2138, ptr noundef nonnull %2140) #21
  %2146 = load ptr, ptr %1984, align 8, !tbaa !145
  %2147 = icmp eq ptr %2146, %1985
  br i1 %2147, label %2188, label %2148

2148:                                             ; preds = %2137, %2172
  %2149 = phi ptr [ %2175, %2172 ], [ %1995, %2137 ]
  %2150 = icmp ne ptr %2149, null
  tail call void @llvm.assume(i1 %2150)
  %2151 = getelementptr inbounds %struct.regnode, ptr %2149, i64 0, i32 1
  %2152 = load i8, ptr %2151, align 1, !tbaa !164
  %2153 = icmp ugt i8 %2152, 93
  br i1 %2153, label %2154, label %2157

2154:                                             ; preds = %2148
  %2155 = zext i8 %2152 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2155, i32 noundef 93) #21
  %2156 = load i8, ptr %2151, align 1, !tbaa !164
  br label %2157

2157:                                             ; preds = %2154, %2148
  %2158 = phi i8 [ %2156, %2154 ], [ %2152, %2148 ]
  %2159 = zext i8 %2158 to i64
  %2160 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2159
  %2161 = load i8, ptr %2160, align 1, !tbaa !9
  %2162 = icmp eq i8 %2161, 0
  br i1 %2162, label %2163, label %2168

2163:                                             ; preds = %2157
  %2164 = getelementptr inbounds %struct.regnode, ptr %2149, i64 0, i32 2
  %2165 = load i16, ptr %2164, align 2, !tbaa !168
  %2166 = zext i16 %2165 to i32
  %2167 = icmp eq i16 %2165, 0
  br i1 %2167, label %2182, label %2172

2168:                                             ; preds = %2157
  %2169 = getelementptr inbounds %struct.regnode_1, ptr %2149, i64 0, i32 3
  %2170 = load i32, ptr %2169, align 4, !tbaa !166
  %2171 = icmp eq i32 %2170, 0
  br i1 %2171, label %2176, label %2172

2172:                                             ; preds = %2168, %2163
  %2173 = phi i32 [ %2170, %2168 ], [ %2166, %2163 ]
  %2174 = sext i32 %2173 to i64
  %2175 = getelementptr inbounds %struct.regnode, ptr %2149, i64 %2174
  br label %2148

2176:                                             ; preds = %2168
  %2177 = getelementptr inbounds %struct.regnode_1, ptr %2149, i64 0, i32 3
  %2178 = ptrtoint ptr %2149 to i64
  %2179 = sub i64 0, %2178
  %2180 = lshr exact i64 %2179, 2
  %2181 = trunc i64 %2180 to i32
  store i32 %2181, ptr %2177, align 4, !tbaa !166
  br label %2188

2182:                                             ; preds = %2163
  %2183 = getelementptr inbounds %struct.regnode, ptr %2149, i64 0, i32 2
  %2184 = ptrtoint ptr %2149 to i64
  %2185 = sub i64 0, %2184
  %2186 = lshr exact i64 %2185, 2
  %2187 = trunc i64 %2186 to i16
  store i16 %2187, ptr %2183, align 2, !tbaa !168
  br label %2188

2188:                                             ; preds = %2182, %2176, %2137, %2114, %2107, %2076
  %2189 = load i32, ptr %5, align 4, !tbaa !150
  %2190 = and i32 %2189, 13
  %2191 = load i32, ptr %2, align 4, !tbaa !150
  %2192 = or i32 %2191, %2190
  store i32 %2192, ptr %2, align 4, !tbaa !150
  %2193 = load ptr, ptr %12, align 8, !tbaa !138
  %2194 = load i8, ptr %2193, align 1, !tbaa !9
  %2195 = icmp eq i8 %2194, 124
  br i1 %2195, label %1994, label %2196, !llvm.loop !237

2196:                                             ; preds = %2188, %1974
  %2197 = phi i32 [ %1979, %1974 ], [ %2192, %2188 ]
  %2198 = phi i32 [ %1769, %1974 ], [ %2073, %2188 ]
  %2199 = phi ptr [ null, %1974 ], [ %2061, %2188 ]
  %2200 = phi ptr [ %1775, %1974 ], [ %2074, %2188 ]
  %2201 = icmp ne i32 %1773, 58
  %2202 = or i1 %2201, %1811
  br i1 %2202, label %2203, label %2572

2203:                                             ; preds = %2196
  switch i32 %1773, label %2314 [
    i32 58, label %2204
    i32 1, label %2226
    i32 2, label %2226
    i32 60, label %2265
    i32 44, label %2265
    i32 61, label %2265
    i32 33, label %2265
    i32 62, label %2267
    i32 0, label %2289
  ]

2204:                                             ; preds = %2203
  %2205 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2206 = load ptr, ptr %2205, align 8, !tbaa !145
  %2207 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2208 = icmp eq ptr %2206, %2207
  br i1 %2208, label %2209, label %2213

2209:                                             ; preds = %2204
  %2210 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2211 = load i64, ptr %2210, align 8, !tbaa !144
  %2212 = add i64 %2211, 1
  store i64 %2212, ptr %2210, align 8, !tbaa !144
  br label %2314

2213:                                             ; preds = %2204
  %2214 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %2215 = load ptr, ptr %2214, align 8, !tbaa !158
  %2216 = icmp ult ptr %2206, %2215
  br i1 %2216, label %2219, label %2217

2217:                                             ; preds = %2213
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 41, ptr noundef %2206, ptr noundef %2215) #21
  %2218 = load ptr, ptr %2205, align 8, !tbaa !145
  br label %2219

2219:                                             ; preds = %2213, %2217
  %2220 = phi ptr [ %2218, %2217 ], [ %2206, %2213 ]
  store i8 0, ptr %2206, align 2, !tbaa !169
  %2221 = icmp eq ptr %2220, %2207
  br i1 %2221, label %2314, label %2222

2222:                                             ; preds = %2219
  %2223 = getelementptr inbounds %struct.regnode, ptr %2206, i64 0, i32 1
  store i8 41, ptr %2223, align 1, !tbaa !164
  %2224 = getelementptr inbounds %struct.regnode, ptr %2206, i64 0, i32 2
  store i16 0, ptr %2224, align 2, !tbaa !168
  %2225 = getelementptr inbounds %struct.regnode, ptr %2206, i64 1
  store ptr %2225, ptr %2205, align 8, !tbaa !145
  br label %2314

2226:                                             ; preds = %2203, %2203
  %2227 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2228 = load ptr, ptr %2227, align 8, !tbaa !145
  %2229 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2230 = icmp eq ptr %2228, %2229
  br i1 %2230, label %2231, label %2235

2231:                                             ; preds = %2226
  %2232 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2233 = load i64, ptr %2232, align 8, !tbaa !144
  %2234 = add i64 %2233, 2
  store i64 %2234, ptr %2232, align 8, !tbaa !144
  br label %2314

2235:                                             ; preds = %2226
  %2236 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %2237 = load ptr, ptr %2236, align 8, !tbaa !158
  %2238 = icmp ult ptr %2228, %2237
  br i1 %2238, label %2241, label %2239

2239:                                             ; preds = %2235
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 50, ptr noundef %2228, ptr noundef %2237) #21
  %2240 = load ptr, ptr %2227, align 8, !tbaa !145
  br label %2241

2241:                                             ; preds = %2235, %2239
  %2242 = phi ptr [ %2240, %2239 ], [ %2228, %2235 ]
  store i8 0, ptr %2228, align 2, !tbaa !169
  %2243 = icmp eq ptr %2242, %2229
  br i1 %2243, label %2314, label %2244

2244:                                             ; preds = %2241
  %2245 = getelementptr inbounds %struct.regnode_1, ptr %2228, i64 0, i32 3
  store i32 %1771, ptr %2245, align 4, !tbaa !166
  %2246 = getelementptr inbounds %struct.regnode, ptr %2228, i64 0, i32 1
  store i8 50, ptr %2246, align 1, !tbaa !164
  %2247 = getelementptr inbounds %struct.regnode, ptr %2228, i64 0, i32 2
  store i16 0, ptr %2247, align 2, !tbaa !168
  %2248 = getelementptr inbounds %struct.regnode, ptr %2228, i64 2
  store ptr %2248, ptr %2227, align 8, !tbaa !145
  %2249 = icmp eq ptr %2248, %2229
  br i1 %2249, label %2314, label %2250

2250:                                             ; preds = %2244
  %2251 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %2252 = load i32, ptr %2251, align 8, !tbaa !131
  %2253 = and i32 %2252, 32
  %2254 = icmp eq i32 %2253, 0
  br i1 %2254, label %2314, label %2255

2255:                                             ; preds = %2250
  %2256 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %2257 = load ptr, ptr %2256, align 8, !tbaa !154
  %2258 = add nsw i32 %1771, -1
  %2259 = sext i32 %2258 to i64
  %2260 = getelementptr inbounds ptr, ptr %2257, i64 %2259
  store ptr %2228, ptr %2260, align 8, !tbaa !5
  %2261 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 19
  %2262 = load i32, ptr %2261, align 4, !tbaa !143
  %2263 = icmp eq i32 %2262, %1771
  br i1 %2263, label %2264, label %2314

2264:                                             ; preds = %2255
  store i32 0, ptr %2261, align 4, !tbaa !143
  br label %2314

2265:                                             ; preds = %2203, %2203, %2203, %2203
  %2266 = and i32 %2197, -2
  store i32 %2266, ptr %2, align 4, !tbaa !150
  br label %2267

2267:                                             ; preds = %2203, %2265
  %2268 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2269 = load ptr, ptr %2268, align 8, !tbaa !145
  %2270 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2271 = icmp eq ptr %2269, %2270
  br i1 %2271, label %2272, label %2276

2272:                                             ; preds = %2267
  %2273 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2274 = load i64, ptr %2273, align 8, !tbaa !144
  %2275 = add i64 %2274, 1
  store i64 %2275, ptr %2273, align 8, !tbaa !144
  br label %2314

2276:                                             ; preds = %2267
  %2277 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %2278 = load ptr, ptr %2277, align 8, !tbaa !158
  %2279 = icmp ult ptr %2269, %2278
  br i1 %2279, label %2282, label %2280

2280:                                             ; preds = %2276
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 1, ptr noundef %2269, ptr noundef %2278) #21
  %2281 = load ptr, ptr %2268, align 8, !tbaa !145
  br label %2282

2282:                                             ; preds = %2276, %2280
  %2283 = phi ptr [ %2281, %2280 ], [ %2269, %2276 ]
  store i8 0, ptr %2269, align 2, !tbaa !169
  %2284 = icmp eq ptr %2283, %2270
  br i1 %2284, label %2314, label %2285

2285:                                             ; preds = %2282
  %2286 = getelementptr inbounds %struct.regnode, ptr %2269, i64 0, i32 1
  store i8 1, ptr %2286, align 1, !tbaa !164
  %2287 = getelementptr inbounds %struct.regnode, ptr %2269, i64 0, i32 2
  store i16 0, ptr %2287, align 2, !tbaa !168
  %2288 = getelementptr inbounds %struct.regnode, ptr %2269, i64 1
  store ptr %2288, ptr %2268, align 8, !tbaa !145
  br label %2314

2289:                                             ; preds = %2203
  %2290 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2291 = load ptr, ptr %2290, align 8, !tbaa !145
  %2292 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2293 = icmp eq ptr %2291, %2292
  br i1 %2293, label %2294, label %2298

2294:                                             ; preds = %2289
  %2295 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2296 = load i64, ptr %2295, align 8, !tbaa !144
  %2297 = add i64 %2296, 1
  store i64 %2297, ptr %2295, align 8, !tbaa !144
  br label %2314

2298:                                             ; preds = %2289
  %2299 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %2300 = load ptr, ptr %2299, align 8, !tbaa !158
  %2301 = icmp ult ptr %2291, %2300
  br i1 %2301, label %2304, label %2302

2302:                                             ; preds = %2298
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 0, ptr noundef %2291, ptr noundef %2300) #21
  %2303 = load ptr, ptr %2290, align 8, !tbaa !145
  br label %2304

2304:                                             ; preds = %2298, %2302
  %2305 = phi ptr [ %2303, %2302 ], [ %2291, %2298 ]
  store i8 0, ptr %2291, align 2, !tbaa !169
  %2306 = icmp eq ptr %2305, %2292
  br i1 %2306, label %2314, label %2307

2307:                                             ; preds = %2304
  %2308 = getelementptr inbounds %struct.regnode, ptr %2291, i64 0, i32 1
  store i8 0, ptr %2308, align 1, !tbaa !164
  %2309 = getelementptr inbounds %struct.regnode, ptr %2291, i64 0, i32 2
  store i16 0, ptr %2309, align 2, !tbaa !168
  %2310 = getelementptr inbounds %struct.regnode, ptr %2291, i64 1
  store ptr %2310, ptr %2290, align 8, !tbaa !145
  %2311 = icmp eq ptr %2310, %2292
  br i1 %2311, label %2314, label %2312

2312:                                             ; preds = %2307
  %2313 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 24
  store ptr %2291, ptr %2313, align 8, !tbaa !238
  br label %2314

2314:                                             ; preds = %2294, %2304, %2231, %2241, %2272, %2209, %2285, %2282, %2222, %2219, %2307, %2312, %2244, %2250, %2264, %2255, %2203
  %2315 = phi ptr [ %2199, %2203 ], [ %2291, %2307 ], [ %2291, %2312 ], [ %2228, %2244 ], [ %2228, %2264 ], [ %2228, %2255 ], [ %2228, %2250 ], [ %2206, %2219 ], [ %2206, %2222 ], [ %2269, %2282 ], [ %2269, %2285 ], [ %2207, %2209 ], [ %2270, %2272 ], [ %2228, %2241 ], [ %2229, %2231 ], [ %2291, %2304 ], [ %2292, %2294 ]
  %2316 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2317 = load ptr, ptr %2316, align 8, !tbaa !145
  %2318 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2319 = icmp eq ptr %2317, %2318
  br i1 %2319, label %2362, label %2320

2320:                                             ; preds = %2314, %2344
  %2321 = phi ptr [ %2347, %2344 ], [ %2200, %2314 ]
  %2322 = icmp ne ptr %2321, null
  tail call void @llvm.assume(i1 %2322)
  %2323 = getelementptr inbounds %struct.regnode, ptr %2321, i64 0, i32 1
  %2324 = load i8, ptr %2323, align 1, !tbaa !164
  %2325 = icmp ugt i8 %2324, 93
  br i1 %2325, label %2326, label %2329

2326:                                             ; preds = %2320
  %2327 = zext i8 %2324 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2327, i32 noundef 93) #21
  %2328 = load i8, ptr %2323, align 1, !tbaa !164
  br label %2329

2329:                                             ; preds = %2326, %2320
  %2330 = phi i8 [ %2328, %2326 ], [ %2324, %2320 ]
  %2331 = zext i8 %2330 to i64
  %2332 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2331
  %2333 = load i8, ptr %2332, align 1, !tbaa !9
  %2334 = icmp eq i8 %2333, 0
  br i1 %2334, label %2335, label %2340

2335:                                             ; preds = %2329
  %2336 = getelementptr inbounds %struct.regnode, ptr %2321, i64 0, i32 2
  %2337 = load i16, ptr %2336, align 2, !tbaa !168
  %2338 = zext i16 %2337 to i32
  %2339 = icmp eq i16 %2337, 0
  br i1 %2339, label %2355, label %2344

2340:                                             ; preds = %2329
  %2341 = getelementptr inbounds %struct.regnode_1, ptr %2321, i64 0, i32 3
  %2342 = load i32, ptr %2341, align 4, !tbaa !166
  %2343 = icmp eq i32 %2342, 0
  br i1 %2343, label %2348, label %2344

2344:                                             ; preds = %2340, %2335
  %2345 = phi i32 [ %2342, %2340 ], [ %2338, %2335 ]
  %2346 = sext i32 %2345 to i64
  %2347 = getelementptr inbounds %struct.regnode, ptr %2321, i64 %2346
  br label %2320

2348:                                             ; preds = %2340
  %2349 = getelementptr inbounds %struct.regnode_1, ptr %2321, i64 0, i32 3
  %2350 = ptrtoint ptr %2315 to i64
  %2351 = ptrtoint ptr %2321 to i64
  %2352 = sub i64 %2350, %2351
  %2353 = lshr exact i64 %2352, 2
  %2354 = trunc i64 %2353 to i32
  store i32 %2354, ptr %2349, align 4, !tbaa !166
  br label %2362

2355:                                             ; preds = %2335
  %2356 = getelementptr inbounds %struct.regnode, ptr %2321, i64 0, i32 2
  %2357 = ptrtoint ptr %2315 to i64
  %2358 = ptrtoint ptr %2321 to i64
  %2359 = sub i64 %2357, %2358
  %2360 = lshr exact i64 %2359, 2
  %2361 = trunc i64 %2360 to i16
  store i16 %2361, ptr %2356, align 2, !tbaa !168
  br label %2362

2362:                                             ; preds = %2314, %2348, %2355
  br i1 %1811, label %2363, label %2570

2363:                                             ; preds = %2362
  %2364 = load ptr, ptr %2316, align 8, !tbaa !145
  %2365 = icmp eq ptr %2364, %2318
  br i1 %2365, label %2570, label %2366

2366:                                             ; preds = %2363
  %2367 = icmp eq i32 %3, 1
  br i1 %2367, label %2368, label %2372

2368:                                             ; preds = %2366
  %2369 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %2370 = load i32, ptr %2369, align 8, !tbaa !131
  %2371 = or i32 %2370, 64
  store i32 %2371, ptr %2369, align 8, !tbaa !131
  br label %2372

2372:                                             ; preds = %2368, %2366
  %2373 = icmp eq ptr %1975, null
  br i1 %2373, label %2514, label %2374

2374:                                             ; preds = %2372
  %2375 = ptrtoint ptr %2315 to i64
  br label %2376

2376:                                             ; preds = %2374, %2507
  %2377 = phi ptr [ %1975, %2374 ], [ %2511, %2507 ]
  %2378 = phi i8 [ 1, %2374 ], [ %2489, %2507 ]
  %2379 = getelementptr inbounds %struct.regnode, ptr %2377, i64 0, i32 1
  %2380 = load i8, ptr %2379, align 1, !tbaa !164
  %2381 = zext i8 %2380 to i64
  %2382 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %2381
  %2383 = load i8, ptr %2382, align 1, !tbaa !9
  switch i8 %2383, label %2487 [
    i8 30, label %2384
    i8 62, label %2440
  ]

2384:                                             ; preds = %2376
  %2385 = getelementptr inbounds %struct.regnode, ptr %2377, i64 1
  %2386 = load ptr, ptr %2316, align 8, !tbaa !145
  %2387 = icmp eq ptr %2386, %2318
  br i1 %2387, label %2427, label %2388

2388:                                             ; preds = %2384, %2411
  %2389 = phi ptr [ %2414, %2411 ], [ %2385, %2384 ]
  %2390 = getelementptr inbounds %struct.regnode, ptr %2389, i64 0, i32 1
  %2391 = load i8, ptr %2390, align 1, !tbaa !164
  %2392 = icmp ugt i8 %2391, 93
  br i1 %2392, label %2393, label %2396

2393:                                             ; preds = %2388
  %2394 = zext i8 %2391 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2394, i32 noundef 93) #21
  %2395 = load i8, ptr %2390, align 1, !tbaa !164
  br label %2396

2396:                                             ; preds = %2393, %2388
  %2397 = phi i8 [ %2395, %2393 ], [ %2391, %2388 ]
  %2398 = zext i8 %2397 to i64
  %2399 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2398
  %2400 = load i8, ptr %2399, align 1, !tbaa !9
  %2401 = icmp eq i8 %2400, 0
  br i1 %2401, label %2402, label %2407

2402:                                             ; preds = %2396
  %2403 = getelementptr inbounds %struct.regnode, ptr %2389, i64 0, i32 2
  %2404 = load i16, ptr %2403, align 2, !tbaa !168
  %2405 = zext i16 %2404 to i32
  %2406 = icmp eq i16 %2404, 0
  br i1 %2406, label %2421, label %2411

2407:                                             ; preds = %2396
  %2408 = getelementptr inbounds %struct.regnode_1, ptr %2389, i64 0, i32 3
  %2409 = load i32, ptr %2408, align 4, !tbaa !166
  %2410 = icmp eq i32 %2409, 0
  br i1 %2410, label %2415, label %2411

2411:                                             ; preds = %2407, %2402
  %2412 = phi i32 [ %2409, %2407 ], [ %2405, %2402 ]
  %2413 = sext i32 %2412 to i64
  %2414 = getelementptr inbounds %struct.regnode, ptr %2389, i64 %2413
  br label %2388

2415:                                             ; preds = %2407
  %2416 = getelementptr inbounds %struct.regnode_1, ptr %2389, i64 0, i32 3
  %2417 = ptrtoint ptr %2389 to i64
  %2418 = sub i64 %2375, %2417
  %2419 = lshr exact i64 %2418, 2
  %2420 = trunc i64 %2419 to i32
  store i32 %2420, ptr %2416, align 4, !tbaa !166
  br label %2427

2421:                                             ; preds = %2402
  %2422 = getelementptr inbounds %struct.regnode, ptr %2389, i64 0, i32 2
  %2423 = ptrtoint ptr %2389 to i64
  %2424 = sub i64 %2375, %2423
  %2425 = lshr exact i64 %2424, 2
  %2426 = trunc i64 %2425 to i16
  store i16 %2426, ptr %2422, align 2, !tbaa !168
  br label %2427

2427:                                             ; preds = %2384, %2415, %2421
  %2428 = getelementptr inbounds %struct.regnode, ptr %2377, i64 1, i32 1
  %2429 = load i8, ptr %2428, align 1, !tbaa !164
  %2430 = icmp eq i8 %2429, 40
  br i1 %2430, label %2431, label %2439

2431:                                             ; preds = %2427
  %2432 = getelementptr inbounds %struct.regnode, ptr %2377, i64 1, i32 2
  %2433 = load i16, ptr %2432, align 2, !tbaa !168
  %2434 = icmp eq i16 %2433, 0
  %2435 = zext i16 %2433 to i64
  %2436 = getelementptr inbounds %struct.regnode, ptr %2385, i64 %2435
  %2437 = select i1 %2434, ptr null, ptr %2436
  %2438 = icmp eq ptr %2437, %2315
  br i1 %2438, label %2484, label %2439

2439:                                             ; preds = %2431, %2427
  br label %2484

2440:                                             ; preds = %2376
  %2441 = load ptr, ptr %2316, align 8, !tbaa !145
  %2442 = icmp eq ptr %2441, %2318
  br i1 %2442, label %2484, label %2443

2443:                                             ; preds = %2440
  %2444 = getelementptr inbounds %struct.regnode, ptr %2377, i64 2
  br label %2445

2445:                                             ; preds = %2443, %2468
  %2446 = phi ptr [ %2471, %2468 ], [ %2444, %2443 ]
  %2447 = getelementptr inbounds %struct.regnode, ptr %2446, i64 0, i32 1
  %2448 = load i8, ptr %2447, align 1, !tbaa !164
  %2449 = icmp ugt i8 %2448, 93
  br i1 %2449, label %2450, label %2453

2450:                                             ; preds = %2445
  %2451 = zext i8 %2448 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2451, i32 noundef 93) #21
  %2452 = load i8, ptr %2447, align 1, !tbaa !164
  br label %2453

2453:                                             ; preds = %2450, %2445
  %2454 = phi i8 [ %2452, %2450 ], [ %2448, %2445 ]
  %2455 = zext i8 %2454 to i64
  %2456 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2455
  %2457 = load i8, ptr %2456, align 1, !tbaa !9
  %2458 = icmp eq i8 %2457, 0
  br i1 %2458, label %2459, label %2464

2459:                                             ; preds = %2453
  %2460 = getelementptr inbounds %struct.regnode, ptr %2446, i64 0, i32 2
  %2461 = load i16, ptr %2460, align 2, !tbaa !168
  %2462 = zext i16 %2461 to i32
  %2463 = icmp eq i16 %2461, 0
  br i1 %2463, label %2478, label %2468

2464:                                             ; preds = %2453
  %2465 = getelementptr inbounds %struct.regnode_1, ptr %2446, i64 0, i32 3
  %2466 = load i32, ptr %2465, align 4, !tbaa !166
  %2467 = icmp eq i32 %2466, 0
  br i1 %2467, label %2472, label %2468

2468:                                             ; preds = %2464, %2459
  %2469 = phi i32 [ %2466, %2464 ], [ %2462, %2459 ]
  %2470 = sext i32 %2469 to i64
  %2471 = getelementptr inbounds %struct.regnode, ptr %2446, i64 %2470
  br label %2445

2472:                                             ; preds = %2464
  %2473 = getelementptr inbounds %struct.regnode_1, ptr %2446, i64 0, i32 3
  %2474 = ptrtoint ptr %2446 to i64
  %2475 = sub i64 %2375, %2474
  %2476 = lshr exact i64 %2475, 2
  %2477 = trunc i64 %2476 to i32
  store i32 %2477, ptr %2473, align 4, !tbaa !166
  br label %2484

2478:                                             ; preds = %2459
  %2479 = getelementptr inbounds %struct.regnode, ptr %2446, i64 0, i32 2
  %2480 = ptrtoint ptr %2446 to i64
  %2481 = sub i64 %2375, %2480
  %2482 = lshr exact i64 %2481, 2
  %2483 = trunc i64 %2482 to i16
  store i16 %2483, ptr %2479, align 2, !tbaa !168
  br label %2484

2484:                                             ; preds = %2478, %2472, %2440, %2431, %2439
  %2485 = phi i8 [ 0, %2478 ], [ 0, %2472 ], [ 0, %2440 ], [ %2378, %2431 ], [ 0, %2439 ]
  %2486 = load i8, ptr %2379, align 1, !tbaa !164
  br label %2487

2487:                                             ; preds = %2484, %2376
  %2488 = phi i8 [ %2486, %2484 ], [ %2380, %2376 ]
  %2489 = phi i8 [ %2485, %2484 ], [ %2378, %2376 ]
  %2490 = icmp ugt i8 %2488, 93
  br i1 %2490, label %2491, label %2494

2491:                                             ; preds = %2487
  %2492 = zext i8 %2488 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2492, i32 noundef 93) #21
  %2493 = load i8, ptr %2379, align 1, !tbaa !164
  br label %2494

2494:                                             ; preds = %2491, %2487
  %2495 = phi i8 [ %2493, %2491 ], [ %2488, %2487 ]
  %2496 = zext i8 %2495 to i64
  %2497 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2496
  %2498 = load i8, ptr %2497, align 1, !tbaa !9
  %2499 = icmp eq i8 %2498, 0
  br i1 %2499, label %2503, label %2500

2500:                                             ; preds = %2494
  %2501 = getelementptr inbounds %struct.regnode_1, ptr %2377, i64 0, i32 3
  %2502 = load i32, ptr %2501, align 4, !tbaa !166
  br label %2507

2503:                                             ; preds = %2494
  %2504 = getelementptr inbounds %struct.regnode, ptr %2377, i64 0, i32 2
  %2505 = load i16, ptr %2504, align 2, !tbaa !168
  %2506 = zext i16 %2505 to i32
  br label %2507

2507:                                             ; preds = %2503, %2500
  %2508 = phi i32 [ %2502, %2500 ], [ %2506, %2503 ]
  %2509 = icmp eq i32 %2508, 0
  %2510 = sext i32 %2508 to i64
  %2511 = getelementptr inbounds %struct.regnode, ptr %2377, i64 %2510
  br i1 %2509, label %2512, label %2376, !llvm.loop !239

2512:                                             ; preds = %2507
  %2513 = icmp eq i8 %2489, 0
  br i1 %2513, label %2570, label %2514

2514:                                             ; preds = %2372, %2512
  %2515 = getelementptr inbounds %struct.regnode, ptr %1975, i64 0, i32 1
  %2516 = load i8, ptr %2515, align 1, !tbaa !164
  %2517 = zext i8 %2516 to i64
  %2518 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %2517
  %2519 = load i8, ptr %2518, align 1, !tbaa !9
  %2520 = icmp eq i8 %2519, 30
  br i1 %2520, label %2545, label %2521

2521:                                             ; preds = %2514
  %2522 = icmp ugt i8 %2516, 93
  br i1 %2522, label %2523, label %2527

2523:                                             ; preds = %2521
  %2524 = zext i8 %2516 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2524, i32 noundef 93) #21
  %2525 = load i8, ptr %2515, align 1, !tbaa !164
  %2526 = zext i8 %2525 to i64
  br label %2527

2527:                                             ; preds = %2523, %2521
  %2528 = phi i64 [ %2526, %2523 ], [ %2517, %2521 ]
  %2529 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2528
  %2530 = load i8, ptr %2529, align 1, !tbaa !9
  %2531 = icmp eq i8 %2530, 0
  br i1 %2531, label %2535, label %2532

2532:                                             ; preds = %2527
  %2533 = getelementptr inbounds %struct.regnode_1, ptr %1975, i64 0, i32 3
  %2534 = load i32, ptr %2533, align 4, !tbaa !166
  br label %2539

2535:                                             ; preds = %2527
  %2536 = getelementptr inbounds %struct.regnode, ptr %1975, i64 0, i32 2
  %2537 = load i16, ptr %2536, align 2, !tbaa !168
  %2538 = zext i16 %2537 to i32
  br label %2539

2539:                                             ; preds = %2535, %2532
  %2540 = phi i32 [ %2534, %2532 ], [ %2538, %2535 ]
  %2541 = icmp eq i32 %2540, 0
  br i1 %2541, label %2545, label %2542

2542:                                             ; preds = %2539
  %2543 = sext i32 %2540 to i64
  %2544 = getelementptr inbounds %struct.regnode, ptr %1975, i64 %2543
  br label %2545

2545:                                             ; preds = %2542, %2539, %2514
  %2546 = phi ptr [ %1975, %2514 ], [ %2544, %2542 ], [ null, %2539 ]
  %2547 = getelementptr inbounds %struct.regnode, ptr %2546, i64 0, i32 1
  store i8 40, ptr %2547, align 1, !tbaa !164
  %2548 = getelementptr inbounds %struct.regnode, ptr %2315, i64 0, i32 1
  %2549 = load i8, ptr %2548, align 1, !tbaa !164
  %2550 = icmp eq i8 %2549, 41
  br i1 %2550, label %2554, label %2551

2551:                                             ; preds = %2545
  %2552 = getelementptr inbounds %struct.regnode, ptr %2546, i64 1
  %2553 = icmp ult ptr %2552, %2315
  br i1 %2553, label %2557, label %2563

2554:                                             ; preds = %2545
  %2555 = getelementptr inbounds %struct.regnode, ptr %2546, i64 0, i32 2
  store i16 0, ptr %2555, align 2, !tbaa !168
  %2556 = getelementptr inbounds %struct.regnode, ptr %2546, i64 1
  store ptr %2556, ptr %2316, align 8, !tbaa !145
  br label %2570

2557:                                             ; preds = %2551, %2557
  %2558 = phi ptr [ %2561, %2557 ], [ %2552, %2551 ]
  %2559 = phi ptr [ %2558, %2557 ], [ %2546, %2551 ]
  %2560 = getelementptr inbounds %struct.regnode, ptr %2559, i64 1, i32 1
  store i8 92, ptr %2560, align 1, !tbaa !164
  %2561 = getelementptr inbounds %struct.regnode, ptr %2558, i64 1
  %2562 = icmp ult ptr %2561, %2315
  br i1 %2562, label %2557, label %2563, !llvm.loop !240

2563:                                             ; preds = %2557, %2551
  %2564 = ptrtoint ptr %2315 to i64
  %2565 = ptrtoint ptr %2546 to i64
  %2566 = sub i64 %2564, %2565
  %2567 = lshr exact i64 %2566, 2
  %2568 = trunc i64 %2567 to i16
  %2569 = getelementptr inbounds %struct.regnode, ptr %2546, i64 0, i32 2
  store i16 %2568, ptr %2569, align 2, !tbaa !168
  br label %2570

2570:                                             ; preds = %2512, %2563, %2554, %2362, %2363
  %2571 = icmp eq i32 %1773, 0
  br i1 %2571, label %2745, label %2572

2572:                                             ; preds = %2196, %2570
  %2573 = tail call ptr @memchr(ptr nonnull dereferenceable(1) @S_reg.parens, i32 %1773, i64 6)
  %2574 = icmp eq ptr %2573, null
  br i1 %2574, label %2707, label %2575

2575:                                             ; preds = %2572
  %2576 = ptrtoint ptr %2573 to i64
  %2577 = sub i64 %2576, ptrtoint (ptr @S_reg.parens to i64)
  %2578 = and i64 %2577, 1
  %2579 = icmp eq i64 %2578, 0
  %2580 = select i1 %2579, i8 63, i8 64
  %2581 = icmp sgt i64 %2577, 1
  %2582 = icmp ne i32 %1773, 62
  %2583 = select i1 %2582, i8 %2580, i8 65
  %2584 = and i1 %2582, %2581
  %2585 = zext i1 %2584 to i8
  %2586 = zext i8 %2583 to i64
  %2587 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %2586
  %2588 = load i8, ptr %2587, align 1, !tbaa !9
  %2589 = zext i8 %2588 to i64
  %2590 = add nuw nsw i64 %2589, 1
  %2591 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2592 = load ptr, ptr %2591, align 8, !tbaa !145
  %2593 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2594 = icmp eq ptr %2592, %2593
  br i1 %2594, label %2595, label %2599

2595:                                             ; preds = %2575
  %2596 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2597 = load i64, ptr %2596, align 8, !tbaa !144
  %2598 = add nsw i64 %2597, %2590
  store i8 %2585, ptr %1975, align 2, !tbaa !169
  br label %2648

2599:                                             ; preds = %2575
  %2600 = getelementptr inbounds %struct.regnode, ptr %2592, i64 %2590
  store ptr %2600, ptr %2591, align 8, !tbaa !145
  %2601 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  %2602 = load ptr, ptr %2601, align 8, !tbaa !153
  %2603 = icmp eq ptr %2602, null
  br i1 %2603, label %2629, label %2604

2604:                                             ; preds = %2599
  %2605 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %2606 = load i32, ptr %2605, align 8, !tbaa !142
  %2607 = icmp sgt i32 %2606, 0
  br i1 %2607, label %2608, label %2629

2608:                                             ; preds = %2604
  %2609 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %2610 = zext i32 %2606 to i64
  br label %2611

2611:                                             ; preds = %2626, %2608
  %2612 = phi i64 [ 0, %2608 ], [ %2627, %2626 ]
  %2613 = load ptr, ptr %2601, align 8, !tbaa !153
  %2614 = getelementptr inbounds ptr, ptr %2613, i64 %2612
  %2615 = load ptr, ptr %2614, align 8, !tbaa !5
  %2616 = icmp ult ptr %2615, %1975
  br i1 %2616, label %2619, label %2617

2617:                                             ; preds = %2611
  %2618 = getelementptr inbounds %struct.regnode, ptr %2615, i64 %2590
  store ptr %2618, ptr %2614, align 8, !tbaa !5
  br label %2619

2619:                                             ; preds = %2617, %2611
  %2620 = load ptr, ptr %2609, align 8, !tbaa !154
  %2621 = getelementptr inbounds ptr, ptr %2620, i64 %2612
  %2622 = load ptr, ptr %2621, align 8, !tbaa !5
  %2623 = icmp ult ptr %2622, %1975
  br i1 %2623, label %2626, label %2624

2624:                                             ; preds = %2619
  %2625 = getelementptr inbounds %struct.regnode, ptr %2622, i64 %2590
  store ptr %2625, ptr %2621, align 8, !tbaa !5
  br label %2626

2626:                                             ; preds = %2624, %2619
  %2627 = add nuw nsw i64 %2612, 1
  %2628 = icmp eq i64 %2627, %2610
  br i1 %2628, label %2629, label %2611, !llvm.loop !235

2629:                                             ; preds = %2626, %2604, %2599
  %2630 = icmp ugt ptr %2592, %1975
  br i1 %2630, label %2631, label %2638

2631:                                             ; preds = %2629, %2631
  %2632 = phi ptr [ %2635, %2631 ], [ %2592, %2629 ]
  %2633 = phi ptr [ %2634, %2631 ], [ %2600, %2629 ]
  %2634 = getelementptr inbounds %struct.regnode, ptr %2633, i64 -1
  %2635 = getelementptr inbounds %struct.regnode, ptr %2632, i64 -1
  %2636 = load i32, ptr %2635, align 2
  store i32 %2636, ptr %2634, align 2
  %2637 = icmp ugt ptr %2635, %1975
  br i1 %2637, label %2631, label %2638, !llvm.loop !236

2638:                                             ; preds = %2631, %2629
  %2639 = getelementptr inbounds %struct.regnode, ptr %1975, i64 1
  %2640 = getelementptr inbounds %struct.regnode, ptr %1975, i64 0, i32 1
  store i8 %2583, ptr %2640, align 1, !tbaa !164
  %2641 = getelementptr inbounds %struct.regnode, ptr %1975, i64 0, i32 2
  store i16 0, ptr %2641, align 2, !tbaa !168
  %2642 = shl nuw nsw i64 %2589, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %2639, i8 0, i64 %2642, i1 false)
  %2643 = load ptr, ptr %2591, align 8, !tbaa !145
  store i8 %2585, ptr %1975, align 2, !tbaa !169
  %2644 = icmp eq ptr %2643, %2593
  br i1 %2644, label %2645, label %2652

2645:                                             ; preds = %2638
  %2646 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2647 = load i64, ptr %2646, align 8, !tbaa !144
  br label %2648

2648:                                             ; preds = %2645, %2595
  %2649 = phi i64 [ %2647, %2645 ], [ %2598, %2595 ]
  %2650 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2651 = add i64 %2649, 1
  store i64 %2651, ptr %2650, align 8, !tbaa !144
  br label %2707

2652:                                             ; preds = %2638
  %2653 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %2654 = load ptr, ptr %2653, align 8, !tbaa !158
  %2655 = icmp ult ptr %2643, %2654
  br i1 %2655, label %2658, label %2656

2656:                                             ; preds = %2652
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 41, ptr noundef %2643, ptr noundef %2654) #21
  %2657 = load ptr, ptr %2591, align 8, !tbaa !145
  br label %2658

2658:                                             ; preds = %2652, %2656
  %2659 = phi ptr [ %2657, %2656 ], [ %2643, %2652 ]
  store i8 0, ptr %2643, align 2, !tbaa !169
  %2660 = icmp eq ptr %2659, %2593
  br i1 %2660, label %2707, label %2661

2661:                                             ; preds = %2658
  %2662 = getelementptr inbounds %struct.regnode, ptr %2643, i64 0, i32 1
  store i8 41, ptr %2662, align 1, !tbaa !164
  %2663 = getelementptr inbounds %struct.regnode, ptr %2643, i64 0, i32 2
  store i16 0, ptr %2663, align 2, !tbaa !168
  %2664 = getelementptr inbounds %struct.regnode, ptr %2643, i64 1
  store ptr %2664, ptr %2591, align 8, !tbaa !145
  %2665 = icmp eq ptr %2664, %2593
  br i1 %2665, label %2707, label %2666

2666:                                             ; preds = %2661, %2689
  %2667 = phi ptr [ %2692, %2689 ], [ %1975, %2661 ]
  %2668 = getelementptr inbounds %struct.regnode, ptr %2667, i64 0, i32 1
  %2669 = load i8, ptr %2668, align 1, !tbaa !164
  %2670 = icmp ugt i8 %2669, 93
  br i1 %2670, label %2671, label %2674

2671:                                             ; preds = %2666
  %2672 = zext i8 %2669 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2672, i32 noundef 93) #21
  %2673 = load i8, ptr %2668, align 1, !tbaa !164
  br label %2674

2674:                                             ; preds = %2671, %2666
  %2675 = phi i8 [ %2673, %2671 ], [ %2669, %2666 ]
  %2676 = zext i8 %2675 to i64
  %2677 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2676
  %2678 = load i8, ptr %2677, align 1, !tbaa !9
  %2679 = icmp eq i8 %2678, 0
  br i1 %2679, label %2680, label %2685

2680:                                             ; preds = %2674
  %2681 = getelementptr inbounds %struct.regnode, ptr %2667, i64 0, i32 2
  %2682 = load i16, ptr %2681, align 2, !tbaa !168
  %2683 = zext i16 %2682 to i32
  %2684 = icmp eq i16 %2682, 0
  br i1 %2684, label %2700, label %2689

2685:                                             ; preds = %2674
  %2686 = getelementptr inbounds %struct.regnode_1, ptr %2667, i64 0, i32 3
  %2687 = load i32, ptr %2686, align 4, !tbaa !166
  %2688 = icmp eq i32 %2687, 0
  br i1 %2688, label %2693, label %2689

2689:                                             ; preds = %2685, %2680
  %2690 = phi i32 [ %2687, %2685 ], [ %2683, %2680 ]
  %2691 = sext i32 %2690 to i64
  %2692 = getelementptr inbounds %struct.regnode, ptr %2667, i64 %2691
  br label %2666

2693:                                             ; preds = %2685
  %2694 = getelementptr inbounds %struct.regnode_1, ptr %2667, i64 0, i32 3
  %2695 = ptrtoint ptr %2643 to i64
  %2696 = ptrtoint ptr %2667 to i64
  %2697 = sub i64 %2695, %2696
  %2698 = lshr exact i64 %2697, 2
  %2699 = trunc i64 %2698 to i32
  store i32 %2699, ptr %2694, align 4, !tbaa !166
  br label %2707

2700:                                             ; preds = %2680
  %2701 = getelementptr inbounds %struct.regnode, ptr %2667, i64 0, i32 2
  %2702 = ptrtoint ptr %2643 to i64
  %2703 = ptrtoint ptr %2667 to i64
  %2704 = sub i64 %2702, %2703
  %2705 = lshr exact i64 %2704, 2
  %2706 = trunc i64 %2705 to i16
  store i16 %2706, ptr %2701, align 2, !tbaa !168
  br label %2707

2707:                                             ; preds = %2648, %2658, %2572, %2661, %2693, %2700
  %2708 = load i32, ptr %0, align 8, !tbaa !109
  %2709 = and i32 %2708, 64
  %2710 = or i32 %2709, %11
  store i32 %2710, ptr %0, align 8, !tbaa !109
  %2711 = load ptr, ptr %12, align 8, !tbaa !138
  %2712 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2713 = load ptr, ptr %2712, align 8, !tbaa !140
  %2714 = icmp ult ptr %2711, %2713
  br i1 %2714, label %2715, label %2719

2715:                                             ; preds = %2707
  %2716 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %2717 = load i8, ptr %2716, align 1, !tbaa !9
  %2718 = icmp eq i8 %2717, 41
  br i1 %2718, label %2800, label %2719

2719:                                             ; preds = %2715, %2707
  store ptr %13, ptr %12, align 8, !tbaa !138
  %2720 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2721 = load ptr, ptr %2720, align 8, !tbaa !145
  %2722 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2723 = icmp eq ptr %2721, %2722
  br i1 %2723, label %2728, label %2724

2724:                                             ; preds = %2719
  %2725 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2726 = load ptr, ptr %2725, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %2726, i32 noundef 11) #21
  %2727 = load ptr, ptr %12, align 8, !tbaa !138
  br label %2728

2728:                                             ; preds = %2719, %2724
  %2729 = phi ptr [ %13, %2719 ], [ %2727, %2724 ]
  %2730 = load ptr, ptr %2712, align 8, !tbaa !140
  %2731 = icmp ugt ptr %2729, %2730
  %2732 = select i1 %2731, ptr %2730, ptr %2729
  %2733 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2734 = load ptr, ptr %2733, align 8, !tbaa !108
  %2735 = ptrtoint ptr %2732 to i64
  %2736 = ptrtoint ptr %2734 to i64
  %2737 = sub i64 %2735, %2736
  %2738 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2739 = load i32, ptr %2738, align 8, !tbaa !98
  %2740 = icmp ne i32 %2739, 0
  %2741 = zext i1 %2740 to i32
  %2742 = ptrtoint ptr %2730 to i64
  %2743 = sub i64 %2742, %2735
  %2744 = getelementptr inbounds i8, ptr %2734, i64 %2737
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.265, i32 noundef %2741, i64 noundef %2737, ptr noundef %2734, i32 noundef %2741, i64 noundef %2743, ptr noundef %2744) #21
  br label %2800

2745:                                             ; preds = %2570
  %2746 = load ptr, ptr %12, align 8, !tbaa !138
  %2747 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2748 = load ptr, ptr %2747, align 8, !tbaa !140
  %2749 = icmp ult ptr %2746, %2748
  br i1 %2749, label %2750, label %2800

2750:                                             ; preds = %2745
  %2751 = load i8, ptr %2746, align 1, !tbaa !9
  %2752 = icmp eq i8 %2751, 41
  br i1 %2752, label %2753, label %2779

2753:                                             ; preds = %2750
  %2754 = getelementptr inbounds i8, ptr %2746, i64 1
  store ptr %2754, ptr %12, align 8, !tbaa !138
  %2755 = load ptr, ptr %2316, align 8, !tbaa !145
  %2756 = icmp eq ptr %2755, %2318
  br i1 %2756, label %2762, label %2757

2757:                                             ; preds = %2753
  %2758 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2759 = load ptr, ptr %2758, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %2759, i32 noundef 11) #21
  %2760 = load ptr, ptr %12, align 8, !tbaa !138
  %2761 = load ptr, ptr %2747, align 8, !tbaa !140
  br label %2762

2762:                                             ; preds = %2753, %2757
  %2763 = phi ptr [ %2748, %2753 ], [ %2761, %2757 ]
  %2764 = phi ptr [ %2754, %2753 ], [ %2760, %2757 ]
  %2765 = icmp ugt ptr %2764, %2763
  %2766 = select i1 %2765, ptr %2763, ptr %2764
  %2767 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2768 = load ptr, ptr %2767, align 8, !tbaa !108
  %2769 = ptrtoint ptr %2766 to i64
  %2770 = ptrtoint ptr %2768 to i64
  %2771 = sub i64 %2769, %2770
  %2772 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2773 = load i32, ptr %2772, align 8, !tbaa !98
  %2774 = icmp ne i32 %2773, 0
  %2775 = zext i1 %2774 to i32
  %2776 = ptrtoint ptr %2763 to i64
  %2777 = sub i64 %2776, %2769
  %2778 = getelementptr inbounds i8, ptr %2768, i64 %2771
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.266, i32 noundef %2775, i64 noundef %2771, ptr noundef %2768, i32 noundef %2775, i64 noundef %2777, ptr noundef %2778) #21
  br label %2800

2779:                                             ; preds = %2750
  %2780 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2781 = load ptr, ptr %2780, align 8, !tbaa !108
  %2782 = ptrtoint ptr %2748 to i64
  %2783 = ptrtoint ptr %2781 to i64
  %2784 = sub i64 %2782, %2783
  %2785 = load ptr, ptr %2316, align 8, !tbaa !145
  %2786 = icmp eq ptr %2785, %2318
  br i1 %2786, label %2791, label %2787

2787:                                             ; preds = %2779
  %2788 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2789 = load ptr, ptr %2788, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %2789, i32 noundef 11) #21
  %2790 = load ptr, ptr %2780, align 8, !tbaa !108
  br label %2791

2791:                                             ; preds = %2787, %2779
  %2792 = phi ptr [ %2790, %2787 ], [ %2781, %2779 ]
  %2793 = icmp sgt i64 %2784, 127
  %2794 = select i1 %2793, ptr @.str.182, ptr @.str.178
  %2795 = select i1 %2793, i64 117, i64 %2784
  %2796 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2797 = load i32, ptr %2796, align 8, !tbaa !98
  %2798 = icmp ne i32 %2797, 0
  %2799 = zext i1 %2798 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.267, i32 noundef %2799, i64 noundef %2795, ptr noundef %2792, ptr noundef nonnull %2794) #21
  br label %2800

2800:                                             ; preds = %2745, %2791, %2762, %2715, %2728
  %2801 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 33
  %2802 = load i32, ptr %2801, align 4, !tbaa !133
  %2803 = icmp eq i32 %2802, 0
  br i1 %2803, label %2806, label %2804

2804:                                             ; preds = %2800
  %2805 = add nsw i32 %2802, -1
  store i32 %2805, ptr %2801, align 4, !tbaa !133
  br label %2806

2806:                                             ; preds = %2804, %2800
  %2807 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %2808 = load i32, ptr %2807, align 8, !tbaa !142
  %2809 = icmp sgt i32 %2198, %2808
  br i1 %2809, label %2810, label %2811

2810:                                             ; preds = %2806
  store i32 %2198, ptr %2807, align 8, !tbaa !142
  br label %2811

2811:                                             ; preds = %1764, %410, %2806, %2810, %2125, %1781
  %2812 = phi ptr [ null, %1781 ], [ null, %2125 ], [ %1975, %2810 ], [ %1975, %2806 ], [ %411, %410 ], [ %1765, %1764 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  ret ptr %2812
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

declare ptr @Perl_safesyscalloc(i64 noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_regnext(ptr noundef readonly %0) local_unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.regnode, ptr %0, i64 0, i32 1
  %5 = load i8, ptr %4, align 1, !tbaa !164
  %6 = icmp ugt i8 %5, 93
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = zext i8 %5 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %8, i32 noundef 93) #21
  %9 = load i8, ptr %4, align 1, !tbaa !164
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi i8 [ %9, %7 ], [ %5, %3 ]
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.regnode_1, ptr %0, i64 0, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !166
  br label %23

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.regnode, ptr %0, i64 0, i32 2
  %21 = load i16, ptr %20, align 2, !tbaa !168
  %22 = zext i16 %21 to i32
  br label %23

23:                                               ; preds = %19, %16
  %24 = phi i32 [ %18, %16 ], [ %22, %19 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = sext i32 %24 to i64
  %28 = getelementptr inbounds %struct.regnode, ptr %0, i64 %27
  br label %29

29:                                               ; preds = %23, %1, %26
  %30 = phi ptr [ %28, %26 ], [ null, %1 ], [ null, %23 ]
  ret ptr %30
}

declare ptr @Perl_newSVpvn(ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @Perl_push_scope() local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_init(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) unnamed_addr #0 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(56) %1, i8 0, i64 56, i1 false)
  %3 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 1
  store i8 19, ptr %3, align 1, !tbaa !193
  %4 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  store i16 1, ptr %4, align 2, !tbaa !194
  %5 = getelementptr inbounds %struct.regnode_1, ptr %1, i64 0, i32 3
  store i32 -1, ptr %5, align 4, !tbaa !166
  %6 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !62
  %9 = and i32 %8, 268435456
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load ptr, ptr %6, align 8, !tbaa !63
  %13 = getelementptr inbounds %struct.xpv, ptr %12, i64 0, i32 3
  %14 = load i64, ptr %13, align 8, !tbaa !9
  %15 = icmp ult i64 %14, 25
  br i1 %15, label %16, label %19

16:                                               ; preds = %11, %2
  %17 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %6, i64 noundef 25) #21
  %18 = load ptr, ptr %6, align 8, !tbaa !63
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi ptr [ %12, %11 ], [ %18, %16 ]
  %21 = getelementptr inbounds %struct.xpv, ptr %20, i64 0, i32 2
  store i64 0, ptr %21, align 8, !tbaa !72
  %22 = getelementptr inbounds %struct.xpvinvlist, ptr %20, i64 0, i32 5
  store i64 -1, ptr %22, align 8, !tbaa !71
  %23 = getelementptr inbounds %struct.xpvinvlist, ptr %20, i64 0, i32 4
  store i64 0, ptr %23, align 8, !tbaa !71
  %24 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %6) #21
  %25 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  store ptr %24, ptr %25, align 8, !tbaa !195
  tail call fastcc void @S__append_range_to_invlist(ptr noundef %24, i64 noundef 0, i64 noundef -1)
  %26 = load i8, ptr %1, align 8, !tbaa !196
  %27 = or i8 %26, 1
  store i8 %27, ptr %1, align 8, !tbaa !196
  %28 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %29 = load i32, ptr %28, align 8, !tbaa !100
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i32 0, i32 536870911
  %32 = getelementptr inbounds %struct.regnode_charclass_class, ptr %1, i64 0, i32 5
  store i32 %31, ptr %32, align 4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @S_study_chunk(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr nocapture noundef writeonly %3, ptr noundef %4, ptr noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #0 {
  %11 = alloca [14 x i8], align 1
  %12 = alloca ptr, align 8
  %13 = alloca [40 x i8], align 16
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca %struct.scan_data_t, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca %struct.regnode_ssc, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca %struct.regnode_ssc, align 8
  %25 = alloca i64, align 8
  %26 = alloca %struct.regnode_ssc, align 8
  %27 = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = alloca ptr, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca ptr, align 8
  %33 = alloca %struct.regnode_ssc, align 8
  %34 = alloca %struct.regnode_ssc, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  %37 = alloca %struct.regnode_ssc, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #21
  %38 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %38, ptr %16, align 8, !tbaa !5
  %39 = and i32 %8, 1024
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %10
  %42 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 16
  %43 = load i32, ptr %42, align 8, !tbaa !199
  %44 = lshr i32 %43, 6
  %45 = and i32 %44, 1
  br label %46

46:                                               ; preds = %41, %10
  %47 = phi i32 [ 0, %10 ], [ %45, %41 ]
  %48 = getelementptr inbounds %struct.regnode, ptr %38, i64 0, i32 1
  %49 = load i8, ptr %48, align 1, !tbaa !164
  %50 = icmp eq i8 %49, 49
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.regnode_1, ptr %38, i64 0, i32 3
  %53 = load i32, ptr %52, align 4, !tbaa !166
  br label %54

54:                                               ; preds = %46, %51
  %55 = phi i32 [ %53, %51 ], [ 0, %46 ]
  call void @llvm.lifetime.start.p0(i64 152, ptr nonnull %17) #21
  %56 = icmp eq i32 %9, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %54, %62
  %58 = phi ptr [ %67, %62 ], [ %38, %54 ]
  %59 = getelementptr inbounds %struct.regnode, ptr %58, i64 0, i32 1
  %60 = load i8, ptr %59, align 1, !tbaa !164
  %61 = icmp eq i8 %60, 49
  br i1 %61, label %62, label %68

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.regnode, ptr %58, i64 0, i32 2
  %64 = load i16, ptr %63, align 2, !tbaa !168
  %65 = icmp eq i16 %64, 0
  %66 = zext i16 %64 to i64
  %67 = getelementptr inbounds %struct.regnode, ptr %58, i64 %66
  br i1 %65, label %68, label %57

68:                                               ; preds = %62, %57, %54
  %69 = phi ptr [ %38, %54 ], [ null, %62 ], [ %58, %57 ]
  %70 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %71 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %72 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 24
  %73 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 29
  %74 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  %75 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %76 = icmp eq ptr %5, null
  %77 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 16
  %78 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 31
  %79 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 32
  %80 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 11
  %81 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 6
  %82 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 19
  %83 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 43
  %84 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 44
  %85 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 42
  %86 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 3
  %87 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 4
  %88 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 1
  %89 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 5
  %90 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 2
  %91 = getelementptr inbounds %struct.regnode_ssc, ptr %21, i64 0, i32 1
  %92 = getelementptr inbounds %struct.regnode_ssc, ptr %21, i64 0, i32 2
  %93 = getelementptr inbounds %struct.regnode_1, ptr %21, i64 0, i32 3
  %94 = getelementptr inbounds %struct.regnode_ssc, ptr %21, i64 0, i32 6
  %95 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %96 = getelementptr inbounds %struct.regnode_charclass_class, ptr %21, i64 0, i32 5
  %97 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 17
  %98 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 17
  %99 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 18
  %100 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 18
  %101 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 1
  %102 = getelementptr inbounds %struct.regnode_ssc, ptr %24, i64 0, i32 1
  %103 = getelementptr inbounds %struct.regnode_ssc, ptr %24, i64 0, i32 2
  %104 = getelementptr inbounds %struct.regnode_1, ptr %24, i64 0, i32 3
  %105 = getelementptr inbounds %struct.regnode_ssc, ptr %24, i64 0, i32 6
  %106 = getelementptr inbounds %struct.regnode_charclass_class, ptr %24, i64 0, i32 5
  %107 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 19
  %108 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 16
  %109 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %110 = icmp ne ptr %5, null
  %111 = getelementptr inbounds %struct.regnode_ssc, ptr %26, i64 0, i32 1
  %112 = getelementptr inbounds %struct.regnode_ssc, ptr %26, i64 0, i32 2
  %113 = getelementptr inbounds %struct.regnode_1, ptr %26, i64 0, i32 3
  %114 = getelementptr inbounds %struct.regnode_ssc, ptr %26, i64 0, i32 6
  %115 = getelementptr inbounds %struct.regnode_charclass_class, ptr %26, i64 0, i32 5
  %116 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %117 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %118 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %119 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 9
  %120 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %121 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %122 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %123 = getelementptr inbounds i8, ptr %21, i64 8
  br label %124

124:                                              ; preds = %5320, %68
  %125 = phi ptr [ %38, %68 ], [ %5324, %5320 ]
  %126 = phi ptr [ null, %68 ], [ %5332, %5320 ]
  %127 = phi i64 [ 9223372036854775807, %68 ], [ %5308, %5320 ]
  %128 = phi ptr [ null, %68 ], [ %5309, %5320 ]
  %129 = phi i32 [ %55, %68 ], [ %5310, %5320 ]
  %130 = phi i32 [ 0, %68 ], [ %5311, %5320 ]
  %131 = phi i32 [ %47, %68 ], [ %5312, %5320 ]
  %132 = phi i64 [ 0, %68 ], [ %5313, %5320 ]
  %133 = phi i32 [ 0, %68 ], [ %5314, %5320 ]
  %134 = phi i64 [ 0, %68 ], [ %5315, %5320 ]
  %135 = phi i32 [ %9, %68 ], [ %5321, %5320 ]
  %136 = phi i32 [ %8, %68 ], [ %5317, %5320 ]
  %137 = phi ptr [ null, %68 ], [ %5318, %5320 ]
  %138 = phi i32 [ %7, %68 ], [ %5328, %5320 ]
  %139 = phi i32 [ %6, %68 ], [ %5326, %5320 ]
  %140 = phi ptr [ %4, %68 ], [ %5322, %5320 ]
  %141 = icmp eq ptr %125, null
  br i1 %141, label %5306, label %142

142:                                              ; preds = %124, %5288
  %143 = phi ptr [ %5304, %5288 ], [ %125, %124 ]
  %144 = phi ptr [ %5289, %5288 ], [ %140, %124 ]
  %145 = phi i32 [ %5290, %5288 ], [ %139, %124 ]
  %146 = phi i32 [ %5291, %5288 ], [ %138, %124 ]
  %147 = phi ptr [ %5292, %5288 ], [ %137, %124 ]
  %148 = phi i32 [ %5293, %5288 ], [ %136, %124 ]
  %149 = phi i32 [ %5294, %5288 ], [ %135, %124 ]
  %150 = phi i64 [ %5295, %5288 ], [ %134, %124 ]
  %151 = phi i32 [ %5296, %5288 ], [ %133, %124 ]
  %152 = phi i64 [ %5297, %5288 ], [ %132, %124 ]
  %153 = phi i32 [ %5298, %5288 ], [ %131, %124 ]
  %154 = phi i32 [ %5299, %5288 ], [ %130, %124 ]
  %155 = phi i32 [ %5300, %5288 ], [ %129, %124 ]
  %156 = phi ptr [ %5301, %5288 ], [ %128, %124 ]
  %157 = phi i64 [ %5302, %5288 ], [ %127, %124 ]
  %158 = phi ptr [ %5303, %5288 ], [ %126, %124 ]
  %159 = getelementptr inbounds %struct.regnode, ptr %143, i64 0, i32 1
  %160 = load i8, ptr %159, align 1, !tbaa !164
  %161 = icmp ne i8 %160, 0
  %162 = icmp ult ptr %143, %144
  %163 = select i1 %161, i1 %162, i1 false
  br i1 %163, label %164, label %5306

164:                                              ; preds = %142
  %165 = zext i8 %160 to i64
  %166 = add nsw i64 %165, -31
  %167 = icmp ult i64 %166, 9
  br i1 %167, label %168, label %1492

168:                                              ; preds = %164
  %169 = icmp ugt i8 %160, 93
  br i1 %169, label %170, label %174

170:                                              ; preds = %168
  %171 = zext i8 %160 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %171, i32 noundef 93) #21
  %172 = load i8, ptr %159, align 1, !tbaa !164
  %173 = zext i8 %172 to i64
  br label %174

174:                                              ; preds = %170, %168
  %175 = phi i64 [ %173, %170 ], [ %165, %168 ]
  %176 = phi i8 [ %172, %170 ], [ %160, %168 ]
  %177 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %175
  %178 = load i8, ptr %177, align 1, !tbaa !9
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %struct.regnode_1, ptr %143, i64 0, i32 3
  %182 = load i32, ptr %181, align 4
  br label %187

183:                                              ; preds = %174
  %184 = getelementptr inbounds %struct.regnode, ptr %143, i64 0, i32 2
  %185 = load i16, ptr %184, align 2, !tbaa !168
  %186 = zext i16 %185 to i32
  br label %187

187:                                              ; preds = %183, %180
  %188 = phi i32 [ %182, %180 ], [ %186, %183 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %306, label %190

190:                                              ; preds = %187
  %191 = sext i32 %188 to i64
  %192 = getelementptr inbounds %struct.regnode, ptr %143, i64 %191
  %193 = load i8, ptr %143, align 2, !tbaa !218
  %194 = zext i8 %193 to i64
  %195 = add nuw nsw i64 %194, 3
  %196 = lshr i64 %195, 2
  %197 = add nuw nsw i64 %196, 1
  %198 = getelementptr inbounds %struct.regnode, ptr %143, i64 %197
  %199 = getelementptr inbounds %struct.regnode, ptr %143, i64 0, i32 2
  %200 = getelementptr inbounds %struct.regnode_string, ptr %143, i64 0, i32 3
  br label %201

201:                                              ; preds = %300, %190
  %202 = phi ptr [ %192, %190 ], [ %302, %300 ]
  %203 = phi i32 [ 1, %190 ], [ %230, %300 ]
  %204 = phi ptr [ %198, %190 ], [ %301, %300 ]
  %205 = getelementptr inbounds %struct.regnode, ptr %202, i64 0, i32 1
  %206 = load i8, ptr %205, align 1, !tbaa !164
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %207
  %209 = load i8, ptr %208, align 1, !tbaa !9
  %210 = icmp eq i8 %209, 40
  br i1 %210, label %216, label %211

211:                                              ; preds = %201
  %212 = icmp eq i32 %203, 0
  br i1 %212, label %304, label %213

213:                                              ; preds = %211
  %214 = load i8, ptr %159, align 1, !tbaa !164
  %215 = icmp eq i8 %206, %214
  br i1 %215, label %216, label %306

216:                                              ; preds = %213, %201
  %217 = getelementptr inbounds %struct.regnode, ptr %202, i64 0, i32 2
  %218 = load i16, ptr %217, align 2, !tbaa !168
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %304, label %220

220:                                              ; preds = %216
  %221 = zext i16 %218 to i32
  %222 = load i16, ptr %199, align 2, !tbaa !168
  %223 = zext i16 %222 to i32
  %224 = add nuw nsw i32 %223, %221
  %225 = icmp ult i32 %224, 32767
  br i1 %225, label %226, label %304

226:                                              ; preds = %220
  %227 = icmp eq i8 %206, 41
  %228 = icmp ugt ptr %202, %204
  %229 = select i1 %227, i1 true, i1 %228
  %230 = select i1 %229, i32 0, i32 %203
  br i1 %210, label %231, label %255

231:                                              ; preds = %226
  %232 = add i16 %222, %218
  store i16 %232, ptr %199, align 2, !tbaa !168
  %233 = getelementptr inbounds %struct.regnode, ptr %202, i64 1
  %234 = icmp ugt i8 %206, 93
  br i1 %234, label %235, label %239

235:                                              ; preds = %231
  %236 = zext i8 %206 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %236, i32 noundef 93) #21
  %237 = load i8, ptr %205, align 1, !tbaa !164
  %238 = zext i8 %237 to i64
  br label %239

239:                                              ; preds = %235, %231
  %240 = phi i64 [ %238, %235 ], [ %207, %231 ]
  %241 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !9
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %239
  %245 = load i32, ptr %233, align 4, !tbaa !166
  br label %249

246:                                              ; preds = %239
  %247 = load i16, ptr %217, align 2, !tbaa !168
  %248 = zext i16 %247 to i32
  br label %249

249:                                              ; preds = %246, %244
  %250 = phi i32 [ %245, %244 ], [ %248, %246 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %304, label %252

252:                                              ; preds = %249
  %253 = sext i32 %250 to i64
  %254 = getelementptr inbounds %struct.regnode, ptr %202, i64 %253
  br label %300

255:                                              ; preds = %226
  %256 = icmp eq i32 %230, 0
  br i1 %256, label %300, label %257

257:                                              ; preds = %255
  %258 = load i8, ptr %143, align 2, !tbaa !218
  %259 = zext i8 %258 to i32
  %260 = icmp ugt i8 %206, 93
  br i1 %260, label %261, label %265

261:                                              ; preds = %257
  %262 = zext i8 %206 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %262, i32 noundef 93) #21
  %263 = load i8, ptr %205, align 1, !tbaa !164
  %264 = zext i8 %263 to i64
  br label %265

265:                                              ; preds = %261, %257
  %266 = phi i64 [ %264, %261 ], [ %207, %257 ]
  %267 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %266
  %268 = load i8, ptr %267, align 1, !tbaa !9
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %273, label %270

270:                                              ; preds = %265
  %271 = getelementptr inbounds %struct.regnode_1, ptr %202, i64 0, i32 3
  %272 = load i32, ptr %271, align 4, !tbaa !166
  br label %276

273:                                              ; preds = %265
  %274 = load i16, ptr %217, align 2, !tbaa !168
  %275 = zext i16 %274 to i32
  br label %276

276:                                              ; preds = %273, %270
  %277 = phi i32 [ %272, %270 ], [ %275, %273 ]
  %278 = load i8, ptr %202, align 2, !tbaa !218
  %279 = zext i8 %278 to i32
  %280 = add nuw nsw i32 %279, %259
  %281 = icmp ugt i32 %280, 255
  br i1 %281, label %304, label %282

282:                                              ; preds = %276
  %283 = icmp eq i32 %277, 0
  %284 = sext i32 %277 to i64
  %285 = getelementptr inbounds %struct.regnode, ptr %202, i64 %284
  %286 = load i16, ptr %217, align 2, !tbaa !168
  %287 = load i16, ptr %199, align 2, !tbaa !168
  %288 = add i16 %287, %286
  store i16 %288, ptr %199, align 2, !tbaa !168
  %289 = load i8, ptr %143, align 2, !tbaa !218
  %290 = add i8 %289, %278
  store i8 %290, ptr %143, align 2, !tbaa !218
  %291 = load i8, ptr %202, align 2, !tbaa !218
  %292 = zext i8 %291 to i64
  %293 = zext i8 %258 to i64
  %294 = getelementptr inbounds i8, ptr %200, i64 %293
  %295 = getelementptr inbounds %struct.regnode_string, ptr %202, i64 0, i32 3
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %294, ptr nonnull align 2 %295, i64 %292, i1 false)
  %296 = add nuw nsw i64 %292, 3
  %297 = lshr i64 %296, 2
  %298 = add nuw nsw i64 %297, 1
  %299 = getelementptr inbounds %struct.regnode, ptr %202, i64 %298
  br i1 %283, label %304, label %300

300:                                              ; preds = %282, %255, %252
  %301 = phi ptr [ %204, %255 ], [ %233, %252 ], [ %299, %282 ]
  %302 = phi ptr [ %202, %255 ], [ %254, %252 ], [ %285, %282 ]
  %303 = icmp eq ptr %302, null
  br i1 %303, label %304, label %201, !llvm.loop !241

304:                                              ; preds = %211, %216, %220, %249, %276, %282, %300
  %305 = load i8, ptr %159, align 1, !tbaa !164
  br label %306

306:                                              ; preds = %213, %187, %304
  %307 = phi i8 [ %305, %304 ], [ %176, %187 ], [ %214, %213 ]
  %308 = add i8 %307, -31
  %309 = icmp ult i8 %308, 2
  br i1 %309, label %1492, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %struct.regnode_string, ptr %143, i64 0, i32 3
  %312 = load i8, ptr %143, align 2, !tbaa !218
  %313 = zext i8 %312 to i64
  %314 = getelementptr inbounds i8, ptr %311, i64 %313
  %315 = load i32, ptr %70, align 8, !tbaa !98
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %1395, label %317

317:                                              ; preds = %310
  %318 = icmp eq i8 %307, 34
  br i1 %318, label %319, label %474

319:                                              ; preds = %317
  %320 = mul nuw nsw i64 %313, 3
  %321 = add nuw nsw i64 %320, 1
  %322 = call ptr @Perl_safesysmalloc(i64 noundef %321) #21
  %323 = icmp eq i8 %312, 0
  br i1 %323, label %474, label %324

324:                                              ; preds = %319, %469
  %325 = phi i8 [ %470, %469 ], [ 0, %319 ]
  %326 = phi ptr [ %472, %469 ], [ %311, %319 ]
  %327 = phi ptr [ %471, %469 ], [ %322, %319 ]
  %328 = load i8, ptr %326, align 1, !tbaa !9
  %329 = zext i8 %328 to i64
  %330 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %329
  %331 = load i8, ptr %330, align 1, !tbaa !9
  %332 = zext i8 %331 to i64
  %333 = icmp sgt i8 %328, -1
  %334 = and i8 %328, -2
  %335 = icmp eq i8 %334, -62
  %336 = or i1 %333, %335
  br i1 %336, label %378, label %337

337:                                              ; preds = %324
  switch i8 %328, label %376 [
    i8 -60, label %338
    i8 -57, label %338
    i8 -59, label %342
    i8 -50, label %345
    i8 -31, label %350
    i8 -30, label %359
    i8 -17, label %368
  ]

338:                                              ; preds = %337, %337
  %339 = getelementptr inbounds i8, ptr %326, i64 1
  %340 = load i8, ptr %339, align 1, !tbaa !9
  %341 = icmp eq i8 %340, -80
  br i1 %341, label %378, label %376

342:                                              ; preds = %337
  %343 = getelementptr inbounds i8, ptr %326, i64 1
  %344 = load i8, ptr %343, align 1, !tbaa !9
  switch i8 %344, label %376 [
    i8 -119, label %390
    i8 -72, label %390
    i8 -65, label %390
  ]

345:                                              ; preds = %337
  %346 = getelementptr inbounds i8, ptr %326, i64 1
  %347 = load i8, ptr %346, align 1, !tbaa !9
  %348 = and i8 %347, -33
  %349 = icmp eq i8 %348, -100
  br i1 %349, label %465, label %376

350:                                              ; preds = %337
  %351 = getelementptr inbounds i8, ptr %326, i64 1
  %352 = load i8, ptr %351, align 1, !tbaa !9
  %353 = icmp eq i8 %352, -70
  br i1 %353, label %354, label %376

354:                                              ; preds = %350
  %355 = getelementptr inbounds i8, ptr %326, i64 2
  %356 = load i8, ptr %355, align 1, !tbaa !9
  %357 = add i8 %356, 106
  %358 = icmp ult i8 %357, 9
  br i1 %358, label %407, label %376

359:                                              ; preds = %337
  %360 = getelementptr inbounds i8, ptr %326, i64 1
  %361 = load i8, ptr %360, align 1, !tbaa !9
  %362 = icmp eq i8 %361, -124
  br i1 %362, label %363, label %376

363:                                              ; preds = %359
  %364 = getelementptr inbounds i8, ptr %326, i64 2
  %365 = load i8, ptr %364, align 1, !tbaa !9
  %366 = and i8 %365, -2
  %367 = icmp eq i8 %366, -86
  br i1 %367, label %465, label %376

368:                                              ; preds = %337
  %369 = getelementptr inbounds i8, ptr %326, i64 1
  %370 = load i8, ptr %369, align 1, !tbaa !9
  %371 = icmp eq i8 %370, -84
  br i1 %371, label %372, label %376

372:                                              ; preds = %368
  %373 = getelementptr inbounds i8, ptr %326, i64 2
  %374 = load i8, ptr %373, align 1, !tbaa !9
  %375 = icmp ult i8 %374, -121
  br i1 %375, label %454, label %376

376:                                              ; preds = %407, %354, %372, %368, %363, %359, %350, %345, %342, %338, %337
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %327, ptr nonnull align 1 %326, i64 %332, i1 false)
  %377 = getelementptr inbounds i8, ptr %327, i64 %332
  br label %469

378:                                              ; preds = %338, %324
  switch i8 %328, label %456 [
    i8 -61, label %382
    i8 -60, label %386
    i8 -57, label %386
    i8 -59, label %379
    i8 -50, label %393
    i8 -42, label %398
    i8 -31, label %402
    i8 -17, label %443
  ]

379:                                              ; preds = %378
  %380 = getelementptr inbounds i8, ptr %326, i64 1
  %381 = load i8, ptr %380, align 1, !tbaa !9
  br label %390

382:                                              ; preds = %378
  %383 = getelementptr inbounds i8, ptr %326, i64 1
  %384 = load i8, ptr %383, align 1, !tbaa !9
  %385 = icmp eq i8 %384, -97
  br i1 %385, label %454, label %465

386:                                              ; preds = %378, %378
  %387 = getelementptr inbounds i8, ptr %326, i64 1
  %388 = load i8, ptr %387, align 1, !tbaa !9
  %389 = icmp eq i8 %388, -80
  br i1 %389, label %454, label %465

390:                                              ; preds = %379, %342, %342, %342
  %391 = phi i8 [ %381, %379 ], [ %344, %342 ], [ %344, %342 ], [ %344, %342 ]
  %392 = icmp eq i8 %391, -119
  br i1 %392, label %454, label %465

393:                                              ; preds = %378
  %394 = getelementptr inbounds i8, ptr %326, i64 1
  %395 = load i8, ptr %394, align 1, !tbaa !9
  %396 = and i8 %395, -33
  %397 = icmp eq i8 %396, -112
  br i1 %397, label %454, label %465

398:                                              ; preds = %378
  %399 = getelementptr inbounds i8, ptr %326, i64 1
  %400 = load i8, ptr %399, align 1, !tbaa !9
  %401 = icmp eq i8 %400, -121
  br i1 %401, label %454, label %465

402:                                              ; preds = %378
  %403 = getelementptr inbounds i8, ptr %326, i64 1
  %404 = load i8, ptr %403, align 1, !tbaa !9
  switch i8 %404, label %465 [
    i8 -70, label %405
    i8 -67, label %418
    i8 -66, label %423
    i8 -65, label %433
  ]

405:                                              ; preds = %402
  %406 = getelementptr inbounds i8, ptr %326, i64 2
  br label %415

407:                                              ; preds = %354
  %408 = zext i8 %357 to i16
  %409 = lshr i16 287, %408
  %410 = and i16 %409, 1
  %411 = icmp eq i16 %410, 0
  br i1 %411, label %376, label %412

412:                                              ; preds = %407
  %413 = sext i8 %357 to i64
  %414 = getelementptr inbounds [9 x i8], ptr @switch.table.S_study_chunk, i64 0, i64 %413
  br label %415

415:                                              ; preds = %412, %405
  %416 = phi ptr [ %414, %412 ], [ %406, %405 ]
  %417 = load i8, ptr %416, align 1
  switch i8 %417, label %465 [
    i8 -98, label %454
    i8 -102, label %454
    i8 -103, label %454
    i8 -104, label %454
    i8 -105, label %454
    i8 -106, label %454
  ]

418:                                              ; preds = %402
  %419 = getelementptr inbounds i8, ptr %326, i64 2
  %420 = load i8, ptr %419, align 1, !tbaa !9
  %421 = and i8 %420, -7
  %422 = icmp eq i8 %421, -112
  br i1 %422, label %454, label %465

423:                                              ; preds = %402
  %424 = getelementptr inbounds i8, ptr %326, i64 2
  %425 = load i8, ptr %424, align 1, !tbaa !9
  %426 = zext i8 %425 to i32
  %427 = insertelement <4 x i32> poison, i32 %426, i64 0
  %428 = shufflevector <4 x i32> %427, <4 x i32> poison, <4 x i32> zeroinitializer
  %429 = and <4 x i32> %428, <i32 240, i32 224, i32 250, i32 247>
  %430 = icmp eq <4 x i32> %429, <i32 160, i32 128, i32 178, i32 180>
  %431 = bitcast <4 x i1> %430 to i4
  %432 = icmp eq i4 %431, 0
  br i1 %432, label %465, label %454

433:                                              ; preds = %402
  %434 = getelementptr inbounds i8, ptr %326, i64 2
  %435 = load i8, ptr %434, align 1, !tbaa !9
  %436 = freeze i8 %435
  %437 = and i8 %436, -54
  %438 = icmp eq i8 %437, -126
  %439 = icmp eq i8 %436, -92
  %440 = or i1 %439, %438
  br i1 %440, label %454, label %441

441:                                              ; preds = %433
  %442 = and i8 %436, -9
  switch i8 %442, label %465 [
    i8 -76, label %454
    i8 -124, label %454
  ]

443:                                              ; preds = %378
  %444 = getelementptr inbounds i8, ptr %326, i64 1
  %445 = load i8, ptr %444, align 1, !tbaa !9
  %446 = icmp eq i8 %445, -84
  br i1 %446, label %447, label %465

447:                                              ; preds = %443
  %448 = getelementptr inbounds i8, ptr %326, i64 2
  %449 = load i8, ptr %448, align 1, !tbaa !9
  %450 = icmp ult i8 %449, -121
  %451 = add i8 %449, 109
  %452 = icmp ult i8 %451, 5
  %453 = or i1 %450, %452
  br i1 %453, label %454, label %465

454:                                              ; preds = %372, %447, %441, %441, %433, %423, %418, %415, %415, %415, %415, %415, %415, %398, %393, %390, %386, %382
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %327, ptr nonnull align 1 %326, i64 %332, i1 false)
  %455 = getelementptr inbounds i8, ptr %327, i64 %332
  br label %469

456:                                              ; preds = %378
  br i1 %333, label %457, label %465

457:                                              ; preds = %456
  %458 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %329
  %459 = load i32, ptr %458, align 4, !tbaa !150
  %460 = and i32 %459, 16400
  %461 = icmp eq i32 %460, 16400
  %462 = add nuw i8 %328, 32
  %463 = select i1 %461, i8 %462, i8 %328
  %464 = getelementptr inbounds i8, ptr %327, i64 1
  store i8 %463, ptr %327, align 1, !tbaa !9
  br label %469

465:                                              ; preds = %456, %447, %443, %441, %423, %418, %415, %402, %398, %393, %390, %386, %382, %363, %345
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #21
  %466 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull %326, ptr noundef %327, ptr noundef nonnull %15, i8 noundef zeroext 2) #21
  %467 = load i64, ptr %15, align 8, !tbaa !71
  %468 = getelementptr inbounds i8, ptr %327, i64 %467
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #21
  br label %469

469:                                              ; preds = %465, %457, %454, %376
  %470 = phi i8 [ %325, %457 ], [ %325, %465 ], [ 1, %454 ], [ %325, %376 ]
  %471 = phi ptr [ %464, %457 ], [ %468, %465 ], [ %455, %454 ], [ %377, %376 ]
  %472 = getelementptr inbounds i8, ptr %326, i64 %332
  %473 = icmp ult ptr %472, %314
  br i1 %473, label %324, label %474, !llvm.loop !242

474:                                              ; preds = %469, %319, %317
  %475 = phi i8 [ 0, %319 ], [ 0, %317 ], [ %470, %469 ]
  %476 = phi ptr [ %322, %319 ], [ %314, %317 ], [ %471, %469 ]
  %477 = phi ptr [ %322, %319 ], [ null, %317 ], [ %322, %469 ]
  %478 = phi ptr [ %322, %319 ], [ %311, %317 ], [ %322, %469 ]
  %479 = getelementptr inbounds i8, ptr %476, i64 -1
  %480 = icmp ult ptr %478, %479
  br i1 %480, label %481, label %1381

481:                                              ; preds = %474
  %482 = ptrtoint ptr %476 to i64
  br label %483

483:                                              ; preds = %1377, %481
  %484 = phi ptr [ %478, %481 ], [ %1379, %1377 ]
  %485 = phi i32 [ 0, %481 ], [ %1378, %1377 ]
  %486 = ptrtoint ptr %484 to i64
  %487 = sub i64 %482, %486
  %488 = icmp sgt i64 %487, 5
  br i1 %488, label %489, label %791

489:                                              ; preds = %483
  %490 = load i8, ptr %484, align 1, !tbaa !9
  switch i8 %490, label %1331 [
    i8 97, label %491
    i8 102, label %500
    i8 104, label %510
    i8 105, label %519
    i8 106, label %528
    i8 115, label %537
    i8 116, label %542
    i8 119, label %551
    i8 121, label %551
    i8 -59, label %560
    i8 -54, label %573
    i8 -50, label %582
    i8 -49, label %644
    i8 -43, label %726
    i8 -31, label %754
  ]

491:                                              ; preds = %489
  %492 = getelementptr inbounds i8, ptr %484, i64 1
  %493 = load i8, ptr %492, align 1, !tbaa !9
  %494 = icmp eq i8 %493, -54
  br i1 %494, label %495, label %1331

495:                                              ; preds = %491
  %496 = getelementptr inbounds i8, ptr %484, i64 2
  %497 = load i8, ptr %496, align 1, !tbaa !9
  %498 = freeze i8 %497
  %499 = icmp eq i8 %498, -66
  br i1 %499, label %1346, label %1331

500:                                              ; preds = %489
  %501 = getelementptr inbounds i8, ptr %484, i64 1
  %502 = load i8, ptr %501, align 1, !tbaa !9
  switch i8 %502, label %1331 [
    i8 102, label %503
    i8 105, label %1346
    i8 108, label %1346
  ]

503:                                              ; preds = %500
  %504 = getelementptr inbounds i8, ptr %484, i64 2
  %505 = load i8, ptr %504, align 1, !tbaa !9
  %506 = icmp eq i8 %505, 108
  %507 = icmp eq i8 %505, 105
  %508 = or i1 %506, %507
  %509 = select i1 %508, i64 3, i64 2
  br label %1346

510:                                              ; preds = %489
  %511 = getelementptr inbounds i8, ptr %484, i64 1
  %512 = load i8, ptr %511, align 1, !tbaa !9
  %513 = icmp eq i8 %512, -52
  br i1 %513, label %514, label %1331

514:                                              ; preds = %510
  %515 = getelementptr inbounds i8, ptr %484, i64 2
  %516 = load i8, ptr %515, align 1, !tbaa !9
  %517 = freeze i8 %516
  %518 = icmp eq i8 %517, -79
  br i1 %518, label %1346, label %1331

519:                                              ; preds = %489
  %520 = getelementptr inbounds i8, ptr %484, i64 1
  %521 = load i8, ptr %520, align 1, !tbaa !9
  %522 = icmp eq i8 %521, -52
  br i1 %522, label %523, label %1331

523:                                              ; preds = %519
  %524 = getelementptr inbounds i8, ptr %484, i64 2
  %525 = load i8, ptr %524, align 1, !tbaa !9
  %526 = freeze i8 %525
  %527 = icmp eq i8 %526, -121
  br i1 %527, label %1346, label %1331

528:                                              ; preds = %489
  %529 = getelementptr inbounds i8, ptr %484, i64 1
  %530 = load i8, ptr %529, align 1, !tbaa !9
  %531 = icmp eq i8 %530, -52
  br i1 %531, label %532, label %1331

532:                                              ; preds = %528
  %533 = getelementptr inbounds i8, ptr %484, i64 2
  %534 = load i8, ptr %533, align 1, !tbaa !9
  %535 = freeze i8 %534
  %536 = icmp eq i8 %535, -116
  br i1 %536, label %1346, label %1331

537:                                              ; preds = %489
  %538 = getelementptr inbounds i8, ptr %484, i64 1
  %539 = load i8, ptr %538, align 1, !tbaa !9
  %540 = add i8 %539, -115
  %541 = icmp ult i8 %540, 2
  br i1 %541, label %1338, label %1331

542:                                              ; preds = %489
  %543 = getelementptr inbounds i8, ptr %484, i64 1
  %544 = load i8, ptr %543, align 1, !tbaa !9
  %545 = icmp eq i8 %544, -52
  br i1 %545, label %546, label %1331

546:                                              ; preds = %542
  %547 = getelementptr inbounds i8, ptr %484, i64 2
  %548 = load i8, ptr %547, align 1, !tbaa !9
  %549 = freeze i8 %548
  %550 = icmp eq i8 %549, -120
  br i1 %550, label %1346, label %1331

551:                                              ; preds = %489, %489
  %552 = getelementptr inbounds i8, ptr %484, i64 1
  %553 = load i8, ptr %552, align 1, !tbaa !9
  %554 = icmp eq i8 %553, -52
  br i1 %554, label %555, label %1331

555:                                              ; preds = %551
  %556 = getelementptr inbounds i8, ptr %484, i64 2
  %557 = load i8, ptr %556, align 1, !tbaa !9
  %558 = freeze i8 %557
  %559 = icmp eq i8 %558, -118
  br i1 %559, label %1346, label %1331

560:                                              ; preds = %489
  %561 = getelementptr inbounds i8, ptr %484, i64 1
  %562 = load i8, ptr %561, align 1, !tbaa !9
  %563 = icmp eq i8 %562, -65
  br i1 %563, label %564, label %1331

564:                                              ; preds = %560
  %565 = getelementptr inbounds i8, ptr %484, i64 2
  %566 = load i8, ptr %565, align 1, !tbaa !9
  %567 = icmp eq i8 %566, -59
  br i1 %567, label %568, label %1331

568:                                              ; preds = %564
  %569 = getelementptr inbounds i8, ptr %484, i64 3
  %570 = load i8, ptr %569, align 1, !tbaa !9
  %571 = freeze i8 %570
  %572 = icmp eq i8 %571, -65
  br i1 %572, label %1346, label %1331

573:                                              ; preds = %489
  %574 = getelementptr inbounds i8, ptr %484, i64 1
  %575 = load i8, ptr %574, align 1, !tbaa !9
  %576 = icmp eq i8 %575, -68
  br i1 %576, label %577, label %1331

577:                                              ; preds = %573
  %578 = getelementptr inbounds i8, ptr %484, i64 2
  %579 = load i8, ptr %578, align 1, !tbaa !9
  %580 = freeze i8 %579
  %581 = icmp eq i8 %580, 110
  br i1 %581, label %1346, label %1331

582:                                              ; preds = %489
  %583 = getelementptr inbounds i8, ptr %484, i64 1
  %584 = load i8, ptr %583, align 1, !tbaa !9
  %585 = and i8 %584, -3
  %586 = icmp eq i8 %585, -84
  br i1 %586, label %587, label %596

587:                                              ; preds = %582
  %588 = getelementptr inbounds i8, ptr %484, i64 2
  %589 = load i8, ptr %588, align 1, !tbaa !9
  %590 = icmp eq i8 %589, -50
  br i1 %590, label %591, label %1331

591:                                              ; preds = %587
  %592 = getelementptr inbounds i8, ptr %484, i64 3
  %593 = load i8, ptr %592, align 1, !tbaa !9
  %594 = freeze i8 %593
  %595 = icmp eq i8 %594, -71
  br i1 %595, label %1346, label %1331

596:                                              ; preds = %582
  switch i8 %584, label %1331 [
    i8 -79, label %597
    i8 -73, label %597
    i8 -71, label %619
  ]

597:                                              ; preds = %596, %596
  %598 = getelementptr inbounds i8, ptr %484, i64 2
  %599 = load i8, ptr %598, align 1, !tbaa !9
  switch i8 %599, label %1331 [
    i8 -51, label %600
    i8 -50, label %614
  ]

600:                                              ; preds = %597
  %601 = getelementptr inbounds i8, ptr %484, i64 3
  %602 = load i8, ptr %601, align 1, !tbaa !9
  %603 = icmp eq i8 %602, -126
  br i1 %603, label %604, label %1331

604:                                              ; preds = %600
  %605 = getelementptr inbounds i8, ptr %484, i64 4
  %606 = load i8, ptr %605, align 1, !tbaa !9
  %607 = icmp eq i8 %606, -50
  br i1 %607, label %608, label %1346

608:                                              ; preds = %604
  %609 = getelementptr inbounds i8, ptr %484, i64 5
  %610 = load i8, ptr %609, align 1, !tbaa !9
  %611 = freeze i8 %610
  %612 = icmp eq i8 %611, -71
  %613 = select i1 %612, i64 6, i64 4
  br label %1346

614:                                              ; preds = %597
  %615 = getelementptr inbounds i8, ptr %484, i64 3
  %616 = load i8, ptr %615, align 1, !tbaa !9
  %617 = freeze i8 %616
  %618 = icmp eq i8 %617, -71
  br i1 %618, label %1346, label %1331

619:                                              ; preds = %596
  %620 = getelementptr inbounds i8, ptr %484, i64 2
  %621 = load i8, ptr %620, align 1, !tbaa !9
  switch i8 %621, label %1331 [
    i8 -52, label %622
    i8 -51, label %639
  ]

622:                                              ; preds = %619
  %623 = getelementptr inbounds i8, ptr %484, i64 3
  %624 = load i8, ptr %623, align 1, !tbaa !9
  %625 = icmp eq i8 %624, -120
  br i1 %625, label %626, label %1331

626:                                              ; preds = %622
  %627 = getelementptr inbounds i8, ptr %484, i64 4
  %628 = load i8, ptr %627, align 1, !tbaa !9
  switch i8 %628, label %1331 [
    i8 -52, label %629
    i8 -51, label %634
  ]

629:                                              ; preds = %626
  %630 = getelementptr inbounds i8, ptr %484, i64 5
  %631 = load i8, ptr %630, align 1, !tbaa !9
  %632 = and i8 %631, -2
  %633 = icmp eq i8 %632, -128
  br i1 %633, label %1346, label %1331

634:                                              ; preds = %626
  %635 = getelementptr inbounds i8, ptr %484, i64 5
  %636 = load i8, ptr %635, align 1, !tbaa !9
  %637 = freeze i8 %636
  %638 = icmp eq i8 %637, -126
  br i1 %638, label %1346, label %1331

639:                                              ; preds = %619
  %640 = getelementptr inbounds i8, ptr %484, i64 3
  %641 = load i8, ptr %640, align 1, !tbaa !9
  %642 = freeze i8 %641
  %643 = icmp eq i8 %642, -126
  br i1 %643, label %1346, label %1331

644:                                              ; preds = %489
  %645 = getelementptr inbounds i8, ptr %484, i64 1
  %646 = load i8, ptr %645, align 1, !tbaa !9
  switch i8 %646, label %1331 [
    i8 -127, label %647
    i8 -123, label %656
    i8 -119, label %695
    i8 -114, label %717
  ]

647:                                              ; preds = %644
  %648 = getelementptr inbounds i8, ptr %484, i64 2
  %649 = load i8, ptr %648, align 1, !tbaa !9
  %650 = icmp eq i8 %649, -52
  br i1 %650, label %651, label %1331

651:                                              ; preds = %647
  %652 = getelementptr inbounds i8, ptr %484, i64 3
  %653 = load i8, ptr %652, align 1, !tbaa !9
  %654 = freeze i8 %653
  %655 = icmp eq i8 %654, -109
  br i1 %655, label %1346, label %1331

656:                                              ; preds = %644
  %657 = getelementptr inbounds i8, ptr %484, i64 2
  %658 = load i8, ptr %657, align 1, !tbaa !9
  switch i8 %658, label %1331 [
    i8 -52, label %659
    i8 -51, label %690
  ]

659:                                              ; preds = %656
  %660 = getelementptr inbounds i8, ptr %484, i64 3
  %661 = load i8, ptr %660, align 1, !tbaa !9
  switch i8 %661, label %1331 [
    i8 -120, label %662
    i8 -109, label %675
  ]

662:                                              ; preds = %659
  %663 = getelementptr inbounds i8, ptr %484, i64 4
  %664 = load i8, ptr %663, align 1, !tbaa !9
  switch i8 %664, label %1331 [
    i8 -52, label %665
    i8 -51, label %670
  ]

665:                                              ; preds = %662
  %666 = getelementptr inbounds i8, ptr %484, i64 5
  %667 = load i8, ptr %666, align 1, !tbaa !9
  %668 = and i8 %667, -2
  %669 = icmp eq i8 %668, -128
  br i1 %669, label %1346, label %1331

670:                                              ; preds = %662
  %671 = getelementptr inbounds i8, ptr %484, i64 5
  %672 = load i8, ptr %671, align 1, !tbaa !9
  %673 = freeze i8 %672
  %674 = icmp eq i8 %673, -126
  br i1 %674, label %1346, label %1331

675:                                              ; preds = %659
  %676 = getelementptr inbounds i8, ptr %484, i64 4
  %677 = load i8, ptr %676, align 1, !tbaa !9
  switch i8 %677, label %1346 [
    i8 -52, label %678
    i8 -51, label %684
  ]

678:                                              ; preds = %675
  %679 = getelementptr inbounds i8, ptr %484, i64 5
  %680 = load i8, ptr %679, align 1, !tbaa !9
  %681 = and i8 %680, -2
  %682 = icmp eq i8 %681, -128
  %683 = select i1 %682, i64 6, i64 4
  br label %1346

684:                                              ; preds = %675
  %685 = getelementptr inbounds i8, ptr %484, i64 5
  %686 = load i8, ptr %685, align 1, !tbaa !9
  %687 = freeze i8 %686
  %688 = icmp eq i8 %687, -126
  %689 = select i1 %688, i64 6, i64 4
  br label %1346

690:                                              ; preds = %656
  %691 = getelementptr inbounds i8, ptr %484, i64 3
  %692 = load i8, ptr %691, align 1, !tbaa !9
  %693 = freeze i8 %692
  %694 = icmp eq i8 %693, -126
  br i1 %694, label %1346, label %1331

695:                                              ; preds = %644
  %696 = getelementptr inbounds i8, ptr %484, i64 2
  %697 = load i8, ptr %696, align 1, !tbaa !9
  switch i8 %697, label %1331 [
    i8 -51, label %698
    i8 -50, label %712
  ]

698:                                              ; preds = %695
  %699 = getelementptr inbounds i8, ptr %484, i64 3
  %700 = load i8, ptr %699, align 1, !tbaa !9
  %701 = icmp eq i8 %700, -126
  br i1 %701, label %702, label %1331

702:                                              ; preds = %698
  %703 = getelementptr inbounds i8, ptr %484, i64 4
  %704 = load i8, ptr %703, align 1, !tbaa !9
  %705 = icmp eq i8 %704, -50
  br i1 %705, label %706, label %1346

706:                                              ; preds = %702
  %707 = getelementptr inbounds i8, ptr %484, i64 5
  %708 = load i8, ptr %707, align 1, !tbaa !9
  %709 = freeze i8 %708
  %710 = icmp eq i8 %709, -71
  %711 = select i1 %710, i64 6, i64 4
  br label %1346

712:                                              ; preds = %695
  %713 = getelementptr inbounds i8, ptr %484, i64 3
  %714 = load i8, ptr %713, align 1, !tbaa !9
  %715 = freeze i8 %714
  %716 = icmp eq i8 %715, -71
  br i1 %716, label %1346, label %1331

717:                                              ; preds = %644
  %718 = getelementptr inbounds i8, ptr %484, i64 2
  %719 = load i8, ptr %718, align 1, !tbaa !9
  %720 = icmp eq i8 %719, -50
  br i1 %720, label %721, label %1331

721:                                              ; preds = %717
  %722 = getelementptr inbounds i8, ptr %484, i64 3
  %723 = load i8, ptr %722, align 1, !tbaa !9
  %724 = freeze i8 %723
  %725 = icmp eq i8 %724, -71
  br i1 %725, label %1346, label %1331

726:                                              ; preds = %489
  %727 = getelementptr inbounds i8, ptr %484, i64 1
  %728 = load i8, ptr %727, align 1, !tbaa !9
  switch i8 %728, label %1331 [
    i8 -91, label %729
    i8 -76, label %738
    i8 -66, label %745
  ]

729:                                              ; preds = %726
  %730 = getelementptr inbounds i8, ptr %484, i64 2
  %731 = load i8, ptr %730, align 1, !tbaa !9
  %732 = icmp eq i8 %731, -42
  br i1 %732, label %733, label %1331

733:                                              ; preds = %729
  %734 = getelementptr inbounds i8, ptr %484, i64 3
  %735 = load i8, ptr %734, align 1, !tbaa !9
  %736 = freeze i8 %735
  %737 = icmp eq i8 %736, -126
  br i1 %737, label %1346, label %1331

738:                                              ; preds = %726
  %739 = getelementptr inbounds i8, ptr %484, i64 2
  %740 = load i8, ptr %739, align 1, !tbaa !9
  %741 = icmp eq i8 %740, -43
  br i1 %741, label %742, label %1331

742:                                              ; preds = %738
  %743 = getelementptr inbounds i8, ptr %484, i64 3
  %744 = load i8, ptr %743, align 1, !tbaa !9
  switch i8 %744, label %1331 [
    i8 -83, label %1346
    i8 -85, label %1346
    i8 -91, label %1346
    i8 -74, label %1346
  ]

745:                                              ; preds = %726
  %746 = getelementptr inbounds i8, ptr %484, i64 2
  %747 = load i8, ptr %746, align 1, !tbaa !9
  %748 = icmp eq i8 %747, -43
  br i1 %748, label %749, label %1331

749:                                              ; preds = %745
  %750 = getelementptr inbounds i8, ptr %484, i64 3
  %751 = load i8, ptr %750, align 1, !tbaa !9
  %752 = freeze i8 %751
  %753 = icmp eq i8 %752, -74
  br i1 %753, label %1346, label %1331

754:                                              ; preds = %489
  %755 = getelementptr inbounds i8, ptr %484, i64 1
  %756 = load i8, ptr %755, align 1, !tbaa !9
  switch i8 %756, label %1331 [
    i8 -68, label %757
    i8 -67, label %771
  ]

757:                                              ; preds = %754
  %758 = getelementptr inbounds i8, ptr %484, i64 2
  %759 = load i8, ptr %758, align 1, !tbaa !9
  %760 = and i8 %759, -40
  %761 = icmp eq i8 %760, -128
  br i1 %761, label %762, label %1331

762:                                              ; preds = %757
  %763 = getelementptr inbounds i8, ptr %484, i64 3
  %764 = load i8, ptr %763, align 1, !tbaa !9
  %765 = icmp eq i8 %764, -50
  br i1 %765, label %766, label %1331

766:                                              ; preds = %762
  %767 = getelementptr inbounds i8, ptr %484, i64 4
  %768 = load i8, ptr %767, align 1, !tbaa !9
  %769 = freeze i8 %768
  %770 = icmp eq i8 %769, -71
  br i1 %770, label %1346, label %1331

771:                                              ; preds = %754
  %772 = getelementptr inbounds i8, ptr %484, i64 2
  %773 = load i8, ptr %772, align 1, !tbaa !9
  %774 = zext i8 %773 to i32
  %775 = and i32 %774, 248
  %776 = icmp eq i32 %775, 160
  %777 = and i32 %774, 251
  %778 = icmp eq i32 %777, 176
  %779 = or i1 %776, %778
  %780 = icmp eq i8 %773, -68
  %781 = or i1 %780, %779
  br i1 %781, label %782, label %1331

782:                                              ; preds = %771
  %783 = getelementptr inbounds i8, ptr %484, i64 3
  %784 = load i8, ptr %783, align 1, !tbaa !9
  %785 = icmp eq i8 %784, -50
  br i1 %785, label %786, label %1331

786:                                              ; preds = %782
  %787 = getelementptr inbounds i8, ptr %484, i64 4
  %788 = load i8, ptr %787, align 1, !tbaa !9
  %789 = freeze i8 %788
  %790 = icmp eq i8 %789, -71
  br i1 %790, label %1346, label %1331

791:                                              ; preds = %483
  %792 = icmp eq i64 %487, 5
  br i1 %792, label %793, label %1032

793:                                              ; preds = %791
  %794 = load i8, ptr %484, align 1, !tbaa !9
  switch i8 %794, label %1331 [
    i8 97, label %795
    i8 102, label %804
    i8 104, label %814
    i8 105, label %823
    i8 106, label %832
    i8 115, label %841
    i8 116, label %846
    i8 119, label %855
    i8 121, label %855
    i8 -59, label %864
    i8 -54, label %877
    i8 -50, label %886
    i8 -49, label %922
    i8 -43, label %967
    i8 -31, label %995
  ]

795:                                              ; preds = %793
  %796 = getelementptr inbounds i8, ptr %484, i64 1
  %797 = load i8, ptr %796, align 1, !tbaa !9
  %798 = icmp eq i8 %797, -54
  br i1 %798, label %799, label %1331

799:                                              ; preds = %795
  %800 = getelementptr inbounds i8, ptr %484, i64 2
  %801 = load i8, ptr %800, align 1, !tbaa !9
  %802 = freeze i8 %801
  %803 = icmp eq i8 %802, -66
  br i1 %803, label %1346, label %1331

804:                                              ; preds = %793
  %805 = getelementptr inbounds i8, ptr %484, i64 1
  %806 = load i8, ptr %805, align 1, !tbaa !9
  switch i8 %806, label %1331 [
    i8 102, label %807
    i8 105, label %1346
    i8 108, label %1346
  ]

807:                                              ; preds = %804
  %808 = getelementptr inbounds i8, ptr %484, i64 2
  %809 = load i8, ptr %808, align 1, !tbaa !9
  %810 = icmp eq i8 %809, 108
  %811 = icmp eq i8 %809, 105
  %812 = or i1 %810, %811
  %813 = select i1 %812, i64 3, i64 2
  br label %1346

814:                                              ; preds = %793
  %815 = getelementptr inbounds i8, ptr %484, i64 1
  %816 = load i8, ptr %815, align 1, !tbaa !9
  %817 = icmp eq i8 %816, -52
  br i1 %817, label %818, label %1331

818:                                              ; preds = %814
  %819 = getelementptr inbounds i8, ptr %484, i64 2
  %820 = load i8, ptr %819, align 1, !tbaa !9
  %821 = freeze i8 %820
  %822 = icmp eq i8 %821, -79
  br i1 %822, label %1346, label %1331

823:                                              ; preds = %793
  %824 = getelementptr inbounds i8, ptr %484, i64 1
  %825 = load i8, ptr %824, align 1, !tbaa !9
  %826 = icmp eq i8 %825, -52
  br i1 %826, label %827, label %1331

827:                                              ; preds = %823
  %828 = getelementptr inbounds i8, ptr %484, i64 2
  %829 = load i8, ptr %828, align 1, !tbaa !9
  %830 = freeze i8 %829
  %831 = icmp eq i8 %830, -121
  br i1 %831, label %1346, label %1331

832:                                              ; preds = %793
  %833 = getelementptr inbounds i8, ptr %484, i64 1
  %834 = load i8, ptr %833, align 1, !tbaa !9
  %835 = icmp eq i8 %834, -52
  br i1 %835, label %836, label %1331

836:                                              ; preds = %832
  %837 = getelementptr inbounds i8, ptr %484, i64 2
  %838 = load i8, ptr %837, align 1, !tbaa !9
  %839 = freeze i8 %838
  %840 = icmp eq i8 %839, -116
  br i1 %840, label %1346, label %1331

841:                                              ; preds = %793
  %842 = getelementptr inbounds i8, ptr %484, i64 1
  %843 = load i8, ptr %842, align 1, !tbaa !9
  %844 = add i8 %843, -115
  %845 = icmp ult i8 %844, 2
  br i1 %845, label %1338, label %1331

846:                                              ; preds = %793
  %847 = getelementptr inbounds i8, ptr %484, i64 1
  %848 = load i8, ptr %847, align 1, !tbaa !9
  %849 = icmp eq i8 %848, -52
  br i1 %849, label %850, label %1331

850:                                              ; preds = %846
  %851 = getelementptr inbounds i8, ptr %484, i64 2
  %852 = load i8, ptr %851, align 1, !tbaa !9
  %853 = freeze i8 %852
  %854 = icmp eq i8 %853, -120
  br i1 %854, label %1346, label %1331

855:                                              ; preds = %793, %793
  %856 = getelementptr inbounds i8, ptr %484, i64 1
  %857 = load i8, ptr %856, align 1, !tbaa !9
  %858 = icmp eq i8 %857, -52
  br i1 %858, label %859, label %1331

859:                                              ; preds = %855
  %860 = getelementptr inbounds i8, ptr %484, i64 2
  %861 = load i8, ptr %860, align 1, !tbaa !9
  %862 = freeze i8 %861
  %863 = icmp eq i8 %862, -118
  br i1 %863, label %1346, label %1331

864:                                              ; preds = %793
  %865 = getelementptr inbounds i8, ptr %484, i64 1
  %866 = load i8, ptr %865, align 1, !tbaa !9
  %867 = icmp eq i8 %866, -65
  br i1 %867, label %868, label %1331

868:                                              ; preds = %864
  %869 = getelementptr inbounds i8, ptr %484, i64 2
  %870 = load i8, ptr %869, align 1, !tbaa !9
  %871 = icmp eq i8 %870, -59
  br i1 %871, label %872, label %1331

872:                                              ; preds = %868
  %873 = getelementptr inbounds i8, ptr %484, i64 3
  %874 = load i8, ptr %873, align 1, !tbaa !9
  %875 = freeze i8 %874
  %876 = icmp eq i8 %875, -65
  br i1 %876, label %1346, label %1331

877:                                              ; preds = %793
  %878 = getelementptr inbounds i8, ptr %484, i64 1
  %879 = load i8, ptr %878, align 1, !tbaa !9
  %880 = icmp eq i8 %879, -68
  br i1 %880, label %881, label %1331

881:                                              ; preds = %877
  %882 = getelementptr inbounds i8, ptr %484, i64 2
  %883 = load i8, ptr %882, align 1, !tbaa !9
  %884 = freeze i8 %883
  %885 = icmp eq i8 %884, 110
  br i1 %885, label %1346, label %1331

886:                                              ; preds = %793
  %887 = getelementptr inbounds i8, ptr %484, i64 1
  %888 = load i8, ptr %887, align 1, !tbaa !9
  %889 = and i8 %888, -3
  %890 = icmp eq i8 %889, -84
  br i1 %890, label %891, label %900

891:                                              ; preds = %886
  %892 = getelementptr inbounds i8, ptr %484, i64 2
  %893 = load i8, ptr %892, align 1, !tbaa !9
  %894 = icmp eq i8 %893, -50
  br i1 %894, label %895, label %1331

895:                                              ; preds = %891
  %896 = getelementptr inbounds i8, ptr %484, i64 3
  %897 = load i8, ptr %896, align 1, !tbaa !9
  %898 = freeze i8 %897
  %899 = icmp eq i8 %898, -71
  br i1 %899, label %1346, label %1331

900:                                              ; preds = %886
  switch i8 %888, label %1331 [
    i8 -79, label %901
    i8 -73, label %901
    i8 -71, label %913
  ]

901:                                              ; preds = %900, %900
  %902 = getelementptr inbounds i8, ptr %484, i64 2
  %903 = load i8, ptr %902, align 1, !tbaa !9
  switch i8 %903, label %1331 [
    i8 -51, label %904
    i8 -50, label %908
  ]

904:                                              ; preds = %901
  %905 = getelementptr inbounds i8, ptr %484, i64 3
  %906 = load i8, ptr %905, align 1, !tbaa !9
  %907 = icmp eq i8 %906, -126
  br i1 %907, label %1346, label %1331

908:                                              ; preds = %901
  %909 = getelementptr inbounds i8, ptr %484, i64 3
  %910 = load i8, ptr %909, align 1, !tbaa !9
  %911 = freeze i8 %910
  %912 = icmp eq i8 %911, -71
  br i1 %912, label %1346, label %1331

913:                                              ; preds = %900
  %914 = getelementptr inbounds i8, ptr %484, i64 2
  %915 = load i8, ptr %914, align 1, !tbaa !9
  %916 = icmp eq i8 %915, -51
  br i1 %916, label %917, label %1331

917:                                              ; preds = %913
  %918 = getelementptr inbounds i8, ptr %484, i64 3
  %919 = load i8, ptr %918, align 1, !tbaa !9
  %920 = freeze i8 %919
  %921 = icmp eq i8 %920, -126
  br i1 %921, label %1346, label %1331

922:                                              ; preds = %793
  %923 = getelementptr inbounds i8, ptr %484, i64 1
  %924 = load i8, ptr %923, align 1, !tbaa !9
  switch i8 %924, label %1331 [
    i8 -127, label %925
    i8 -123, label %934
    i8 -119, label %946
    i8 -114, label %958
  ]

925:                                              ; preds = %922
  %926 = getelementptr inbounds i8, ptr %484, i64 2
  %927 = load i8, ptr %926, align 1, !tbaa !9
  %928 = icmp eq i8 %927, -52
  br i1 %928, label %929, label %1331

929:                                              ; preds = %925
  %930 = getelementptr inbounds i8, ptr %484, i64 3
  %931 = load i8, ptr %930, align 1, !tbaa !9
  %932 = freeze i8 %931
  %933 = icmp eq i8 %932, -109
  br i1 %933, label %1346, label %1331

934:                                              ; preds = %922
  %935 = getelementptr inbounds i8, ptr %484, i64 2
  %936 = load i8, ptr %935, align 1, !tbaa !9
  switch i8 %936, label %1331 [
    i8 -52, label %937
    i8 -51, label %941
  ]

937:                                              ; preds = %934
  %938 = getelementptr inbounds i8, ptr %484, i64 3
  %939 = load i8, ptr %938, align 1, !tbaa !9
  %940 = icmp eq i8 %939, -109
  br i1 %940, label %1346, label %1331

941:                                              ; preds = %934
  %942 = getelementptr inbounds i8, ptr %484, i64 3
  %943 = load i8, ptr %942, align 1, !tbaa !9
  %944 = freeze i8 %943
  %945 = icmp eq i8 %944, -126
  br i1 %945, label %1346, label %1331

946:                                              ; preds = %922
  %947 = getelementptr inbounds i8, ptr %484, i64 2
  %948 = load i8, ptr %947, align 1, !tbaa !9
  switch i8 %948, label %1331 [
    i8 -51, label %949
    i8 -50, label %953
  ]

949:                                              ; preds = %946
  %950 = getelementptr inbounds i8, ptr %484, i64 3
  %951 = load i8, ptr %950, align 1, !tbaa !9
  %952 = icmp eq i8 %951, -126
  br i1 %952, label %1346, label %1331

953:                                              ; preds = %946
  %954 = getelementptr inbounds i8, ptr %484, i64 3
  %955 = load i8, ptr %954, align 1, !tbaa !9
  %956 = freeze i8 %955
  %957 = icmp eq i8 %956, -71
  br i1 %957, label %1346, label %1331

958:                                              ; preds = %922
  %959 = getelementptr inbounds i8, ptr %484, i64 2
  %960 = load i8, ptr %959, align 1, !tbaa !9
  %961 = icmp eq i8 %960, -50
  br i1 %961, label %962, label %1331

962:                                              ; preds = %958
  %963 = getelementptr inbounds i8, ptr %484, i64 3
  %964 = load i8, ptr %963, align 1, !tbaa !9
  %965 = freeze i8 %964
  %966 = icmp eq i8 %965, -71
  br i1 %966, label %1346, label %1331

967:                                              ; preds = %793
  %968 = getelementptr inbounds i8, ptr %484, i64 1
  %969 = load i8, ptr %968, align 1, !tbaa !9
  switch i8 %969, label %1331 [
    i8 -91, label %970
    i8 -76, label %979
    i8 -66, label %986
  ]

970:                                              ; preds = %967
  %971 = getelementptr inbounds i8, ptr %484, i64 2
  %972 = load i8, ptr %971, align 1, !tbaa !9
  %973 = icmp eq i8 %972, -42
  br i1 %973, label %974, label %1331

974:                                              ; preds = %970
  %975 = getelementptr inbounds i8, ptr %484, i64 3
  %976 = load i8, ptr %975, align 1, !tbaa !9
  %977 = freeze i8 %976
  %978 = icmp eq i8 %977, -126
  br i1 %978, label %1346, label %1331

979:                                              ; preds = %967
  %980 = getelementptr inbounds i8, ptr %484, i64 2
  %981 = load i8, ptr %980, align 1, !tbaa !9
  %982 = icmp eq i8 %981, -43
  br i1 %982, label %983, label %1331

983:                                              ; preds = %979
  %984 = getelementptr inbounds i8, ptr %484, i64 3
  %985 = load i8, ptr %984, align 1, !tbaa !9
  switch i8 %985, label %1331 [
    i8 -83, label %1346
    i8 -85, label %1346
    i8 -91, label %1346
    i8 -74, label %1346
  ]

986:                                              ; preds = %967
  %987 = getelementptr inbounds i8, ptr %484, i64 2
  %988 = load i8, ptr %987, align 1, !tbaa !9
  %989 = icmp eq i8 %988, -43
  br i1 %989, label %990, label %1331

990:                                              ; preds = %986
  %991 = getelementptr inbounds i8, ptr %484, i64 3
  %992 = load i8, ptr %991, align 1, !tbaa !9
  %993 = freeze i8 %992
  %994 = icmp eq i8 %993, -74
  br i1 %994, label %1346, label %1331

995:                                              ; preds = %793
  %996 = getelementptr inbounds i8, ptr %484, i64 1
  %997 = load i8, ptr %996, align 1, !tbaa !9
  switch i8 %997, label %1331 [
    i8 -68, label %998
    i8 -67, label %1012
  ]

998:                                              ; preds = %995
  %999 = getelementptr inbounds i8, ptr %484, i64 2
  %1000 = load i8, ptr %999, align 1, !tbaa !9
  %1001 = and i8 %1000, -40
  %1002 = icmp eq i8 %1001, -128
  br i1 %1002, label %1003, label %1331

1003:                                             ; preds = %998
  %1004 = getelementptr inbounds i8, ptr %484, i64 3
  %1005 = load i8, ptr %1004, align 1, !tbaa !9
  %1006 = icmp eq i8 %1005, -50
  br i1 %1006, label %1007, label %1331

1007:                                             ; preds = %1003
  %1008 = getelementptr inbounds i8, ptr %484, i64 4
  %1009 = load i8, ptr %1008, align 1, !tbaa !9
  %1010 = freeze i8 %1009
  %1011 = icmp eq i8 %1010, -71
  br i1 %1011, label %1346, label %1331

1012:                                             ; preds = %995
  %1013 = getelementptr inbounds i8, ptr %484, i64 2
  %1014 = load i8, ptr %1013, align 1, !tbaa !9
  %1015 = zext i8 %1014 to i32
  %1016 = and i32 %1015, 248
  %1017 = icmp eq i32 %1016, 160
  %1018 = and i32 %1015, 251
  %1019 = icmp eq i32 %1018, 176
  %1020 = or i1 %1017, %1019
  %1021 = icmp eq i8 %1014, -68
  %1022 = or i1 %1021, %1020
  br i1 %1022, label %1023, label %1331

1023:                                             ; preds = %1012
  %1024 = getelementptr inbounds i8, ptr %484, i64 3
  %1025 = load i8, ptr %1024, align 1, !tbaa !9
  %1026 = icmp eq i8 %1025, -50
  br i1 %1026, label %1027, label %1331

1027:                                             ; preds = %1023
  %1028 = getelementptr inbounds i8, ptr %484, i64 4
  %1029 = load i8, ptr %1028, align 1, !tbaa !9
  %1030 = freeze i8 %1029
  %1031 = icmp eq i8 %1030, -71
  br i1 %1031, label %1346, label %1331

1032:                                             ; preds = %791
  %1033 = icmp sgt i64 %487, 3
  br i1 %1033, label %1034, label %1236

1034:                                             ; preds = %1032
  %1035 = load i8, ptr %484, align 1, !tbaa !9
  switch i8 %1035, label %1331 [
    i8 97, label %1036
    i8 102, label %1045
    i8 104, label %1055
    i8 105, label %1064
    i8 106, label %1073
    i8 115, label %1082
    i8 116, label %1087
    i8 119, label %1096
    i8 121, label %1096
    i8 -59, label %1105
    i8 -54, label %1118
    i8 -50, label %1127
    i8 -49, label %1163
    i8 -43, label %1208
  ]

1036:                                             ; preds = %1034
  %1037 = getelementptr inbounds i8, ptr %484, i64 1
  %1038 = load i8, ptr %1037, align 1, !tbaa !9
  %1039 = icmp eq i8 %1038, -54
  br i1 %1039, label %1040, label %1331

1040:                                             ; preds = %1036
  %1041 = getelementptr inbounds i8, ptr %484, i64 2
  %1042 = load i8, ptr %1041, align 1, !tbaa !9
  %1043 = freeze i8 %1042
  %1044 = icmp eq i8 %1043, -66
  br i1 %1044, label %1346, label %1331

1045:                                             ; preds = %1034
  %1046 = getelementptr inbounds i8, ptr %484, i64 1
  %1047 = load i8, ptr %1046, align 1, !tbaa !9
  switch i8 %1047, label %1331 [
    i8 102, label %1048
    i8 105, label %1346
    i8 108, label %1346
  ]

1048:                                             ; preds = %1045
  %1049 = getelementptr inbounds i8, ptr %484, i64 2
  %1050 = load i8, ptr %1049, align 1, !tbaa !9
  %1051 = icmp eq i8 %1050, 108
  %1052 = icmp eq i8 %1050, 105
  %1053 = or i1 %1051, %1052
  %1054 = select i1 %1053, i64 3, i64 2
  br label %1346

1055:                                             ; preds = %1034
  %1056 = getelementptr inbounds i8, ptr %484, i64 1
  %1057 = load i8, ptr %1056, align 1, !tbaa !9
  %1058 = icmp eq i8 %1057, -52
  br i1 %1058, label %1059, label %1331

1059:                                             ; preds = %1055
  %1060 = getelementptr inbounds i8, ptr %484, i64 2
  %1061 = load i8, ptr %1060, align 1, !tbaa !9
  %1062 = freeze i8 %1061
  %1063 = icmp eq i8 %1062, -79
  br i1 %1063, label %1346, label %1331

1064:                                             ; preds = %1034
  %1065 = getelementptr inbounds i8, ptr %484, i64 1
  %1066 = load i8, ptr %1065, align 1, !tbaa !9
  %1067 = icmp eq i8 %1066, -52
  br i1 %1067, label %1068, label %1331

1068:                                             ; preds = %1064
  %1069 = getelementptr inbounds i8, ptr %484, i64 2
  %1070 = load i8, ptr %1069, align 1, !tbaa !9
  %1071 = freeze i8 %1070
  %1072 = icmp eq i8 %1071, -121
  br i1 %1072, label %1346, label %1331

1073:                                             ; preds = %1034
  %1074 = getelementptr inbounds i8, ptr %484, i64 1
  %1075 = load i8, ptr %1074, align 1, !tbaa !9
  %1076 = icmp eq i8 %1075, -52
  br i1 %1076, label %1077, label %1331

1077:                                             ; preds = %1073
  %1078 = getelementptr inbounds i8, ptr %484, i64 2
  %1079 = load i8, ptr %1078, align 1, !tbaa !9
  %1080 = freeze i8 %1079
  %1081 = icmp eq i8 %1080, -116
  br i1 %1081, label %1346, label %1331

1082:                                             ; preds = %1034
  %1083 = getelementptr inbounds i8, ptr %484, i64 1
  %1084 = load i8, ptr %1083, align 1, !tbaa !9
  %1085 = add i8 %1084, -115
  %1086 = icmp ult i8 %1085, 2
  br i1 %1086, label %1338, label %1331

1087:                                             ; preds = %1034
  %1088 = getelementptr inbounds i8, ptr %484, i64 1
  %1089 = load i8, ptr %1088, align 1, !tbaa !9
  %1090 = icmp eq i8 %1089, -52
  br i1 %1090, label %1091, label %1331

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds i8, ptr %484, i64 2
  %1093 = load i8, ptr %1092, align 1, !tbaa !9
  %1094 = freeze i8 %1093
  %1095 = icmp eq i8 %1094, -120
  br i1 %1095, label %1346, label %1331

1096:                                             ; preds = %1034, %1034
  %1097 = getelementptr inbounds i8, ptr %484, i64 1
  %1098 = load i8, ptr %1097, align 1, !tbaa !9
  %1099 = icmp eq i8 %1098, -52
  br i1 %1099, label %1100, label %1331

1100:                                             ; preds = %1096
  %1101 = getelementptr inbounds i8, ptr %484, i64 2
  %1102 = load i8, ptr %1101, align 1, !tbaa !9
  %1103 = freeze i8 %1102
  %1104 = icmp eq i8 %1103, -118
  br i1 %1104, label %1346, label %1331

1105:                                             ; preds = %1034
  %1106 = getelementptr inbounds i8, ptr %484, i64 1
  %1107 = load i8, ptr %1106, align 1, !tbaa !9
  %1108 = icmp eq i8 %1107, -65
  br i1 %1108, label %1109, label %1331

1109:                                             ; preds = %1105
  %1110 = getelementptr inbounds i8, ptr %484, i64 2
  %1111 = load i8, ptr %1110, align 1, !tbaa !9
  %1112 = icmp eq i8 %1111, -59
  br i1 %1112, label %1113, label %1331

1113:                                             ; preds = %1109
  %1114 = getelementptr inbounds i8, ptr %484, i64 3
  %1115 = load i8, ptr %1114, align 1, !tbaa !9
  %1116 = freeze i8 %1115
  %1117 = icmp eq i8 %1116, -65
  br i1 %1117, label %1346, label %1331

1118:                                             ; preds = %1034
  %1119 = getelementptr inbounds i8, ptr %484, i64 1
  %1120 = load i8, ptr %1119, align 1, !tbaa !9
  %1121 = icmp eq i8 %1120, -68
  br i1 %1121, label %1122, label %1331

1122:                                             ; preds = %1118
  %1123 = getelementptr inbounds i8, ptr %484, i64 2
  %1124 = load i8, ptr %1123, align 1, !tbaa !9
  %1125 = freeze i8 %1124
  %1126 = icmp eq i8 %1125, 110
  br i1 %1126, label %1346, label %1331

1127:                                             ; preds = %1034
  %1128 = getelementptr inbounds i8, ptr %484, i64 1
  %1129 = load i8, ptr %1128, align 1, !tbaa !9
  %1130 = and i8 %1129, -3
  %1131 = icmp eq i8 %1130, -84
  br i1 %1131, label %1132, label %1141

1132:                                             ; preds = %1127
  %1133 = getelementptr inbounds i8, ptr %484, i64 2
  %1134 = load i8, ptr %1133, align 1, !tbaa !9
  %1135 = icmp eq i8 %1134, -50
  br i1 %1135, label %1136, label %1331

1136:                                             ; preds = %1132
  %1137 = getelementptr inbounds i8, ptr %484, i64 3
  %1138 = load i8, ptr %1137, align 1, !tbaa !9
  %1139 = freeze i8 %1138
  %1140 = icmp eq i8 %1139, -71
  br i1 %1140, label %1346, label %1331

1141:                                             ; preds = %1127
  switch i8 %1129, label %1331 [
    i8 -79, label %1142
    i8 -73, label %1142
    i8 -71, label %1154
  ]

1142:                                             ; preds = %1141, %1141
  %1143 = getelementptr inbounds i8, ptr %484, i64 2
  %1144 = load i8, ptr %1143, align 1, !tbaa !9
  switch i8 %1144, label %1331 [
    i8 -51, label %1145
    i8 -50, label %1149
  ]

1145:                                             ; preds = %1142
  %1146 = getelementptr inbounds i8, ptr %484, i64 3
  %1147 = load i8, ptr %1146, align 1, !tbaa !9
  %1148 = icmp eq i8 %1147, -126
  br i1 %1148, label %1346, label %1331

1149:                                             ; preds = %1142
  %1150 = getelementptr inbounds i8, ptr %484, i64 3
  %1151 = load i8, ptr %1150, align 1, !tbaa !9
  %1152 = freeze i8 %1151
  %1153 = icmp eq i8 %1152, -71
  br i1 %1153, label %1346, label %1331

1154:                                             ; preds = %1141
  %1155 = getelementptr inbounds i8, ptr %484, i64 2
  %1156 = load i8, ptr %1155, align 1, !tbaa !9
  %1157 = icmp eq i8 %1156, -51
  br i1 %1157, label %1158, label %1331

1158:                                             ; preds = %1154
  %1159 = getelementptr inbounds i8, ptr %484, i64 3
  %1160 = load i8, ptr %1159, align 1, !tbaa !9
  %1161 = freeze i8 %1160
  %1162 = icmp eq i8 %1161, -126
  br i1 %1162, label %1346, label %1331

1163:                                             ; preds = %1034
  %1164 = getelementptr inbounds i8, ptr %484, i64 1
  %1165 = load i8, ptr %1164, align 1, !tbaa !9
  switch i8 %1165, label %1331 [
    i8 -127, label %1166
    i8 -123, label %1175
    i8 -119, label %1187
    i8 -114, label %1199
  ]

1166:                                             ; preds = %1163
  %1167 = getelementptr inbounds i8, ptr %484, i64 2
  %1168 = load i8, ptr %1167, align 1, !tbaa !9
  %1169 = icmp eq i8 %1168, -52
  br i1 %1169, label %1170, label %1331

1170:                                             ; preds = %1166
  %1171 = getelementptr inbounds i8, ptr %484, i64 3
  %1172 = load i8, ptr %1171, align 1, !tbaa !9
  %1173 = freeze i8 %1172
  %1174 = icmp eq i8 %1173, -109
  br i1 %1174, label %1346, label %1331

1175:                                             ; preds = %1163
  %1176 = getelementptr inbounds i8, ptr %484, i64 2
  %1177 = load i8, ptr %1176, align 1, !tbaa !9
  switch i8 %1177, label %1331 [
    i8 -52, label %1178
    i8 -51, label %1182
  ]

1178:                                             ; preds = %1175
  %1179 = getelementptr inbounds i8, ptr %484, i64 3
  %1180 = load i8, ptr %1179, align 1, !tbaa !9
  %1181 = icmp eq i8 %1180, -109
  br i1 %1181, label %1346, label %1331

1182:                                             ; preds = %1175
  %1183 = getelementptr inbounds i8, ptr %484, i64 3
  %1184 = load i8, ptr %1183, align 1, !tbaa !9
  %1185 = freeze i8 %1184
  %1186 = icmp eq i8 %1185, -126
  br i1 %1186, label %1346, label %1331

1187:                                             ; preds = %1163
  %1188 = getelementptr inbounds i8, ptr %484, i64 2
  %1189 = load i8, ptr %1188, align 1, !tbaa !9
  switch i8 %1189, label %1331 [
    i8 -51, label %1190
    i8 -50, label %1194
  ]

1190:                                             ; preds = %1187
  %1191 = getelementptr inbounds i8, ptr %484, i64 3
  %1192 = load i8, ptr %1191, align 1, !tbaa !9
  %1193 = icmp eq i8 %1192, -126
  br i1 %1193, label %1346, label %1331

1194:                                             ; preds = %1187
  %1195 = getelementptr inbounds i8, ptr %484, i64 3
  %1196 = load i8, ptr %1195, align 1, !tbaa !9
  %1197 = freeze i8 %1196
  %1198 = icmp eq i8 %1197, -71
  br i1 %1198, label %1346, label %1331

1199:                                             ; preds = %1163
  %1200 = getelementptr inbounds i8, ptr %484, i64 2
  %1201 = load i8, ptr %1200, align 1, !tbaa !9
  %1202 = icmp eq i8 %1201, -50
  br i1 %1202, label %1203, label %1331

1203:                                             ; preds = %1199
  %1204 = getelementptr inbounds i8, ptr %484, i64 3
  %1205 = load i8, ptr %1204, align 1, !tbaa !9
  %1206 = freeze i8 %1205
  %1207 = icmp eq i8 %1206, -71
  br i1 %1207, label %1346, label %1331

1208:                                             ; preds = %1034
  %1209 = getelementptr inbounds i8, ptr %484, i64 1
  %1210 = load i8, ptr %1209, align 1, !tbaa !9
  switch i8 %1210, label %1331 [
    i8 -91, label %1211
    i8 -76, label %1220
    i8 -66, label %1227
  ]

1211:                                             ; preds = %1208
  %1212 = getelementptr inbounds i8, ptr %484, i64 2
  %1213 = load i8, ptr %1212, align 1, !tbaa !9
  %1214 = icmp eq i8 %1213, -42
  br i1 %1214, label %1215, label %1331

1215:                                             ; preds = %1211
  %1216 = getelementptr inbounds i8, ptr %484, i64 3
  %1217 = load i8, ptr %1216, align 1, !tbaa !9
  %1218 = freeze i8 %1217
  %1219 = icmp eq i8 %1218, -126
  br i1 %1219, label %1346, label %1331

1220:                                             ; preds = %1208
  %1221 = getelementptr inbounds i8, ptr %484, i64 2
  %1222 = load i8, ptr %1221, align 1, !tbaa !9
  %1223 = icmp eq i8 %1222, -43
  br i1 %1223, label %1224, label %1331

1224:                                             ; preds = %1220
  %1225 = getelementptr inbounds i8, ptr %484, i64 3
  %1226 = load i8, ptr %1225, align 1, !tbaa !9
  switch i8 %1226, label %1331 [
    i8 -83, label %1346
    i8 -85, label %1346
    i8 -91, label %1346
    i8 -74, label %1346
  ]

1227:                                             ; preds = %1208
  %1228 = getelementptr inbounds i8, ptr %484, i64 2
  %1229 = load i8, ptr %1228, align 1, !tbaa !9
  %1230 = icmp eq i8 %1229, -43
  br i1 %1230, label %1231, label %1331

1231:                                             ; preds = %1227
  %1232 = getelementptr inbounds i8, ptr %484, i64 3
  %1233 = load i8, ptr %1232, align 1, !tbaa !9
  %1234 = freeze i8 %1233
  %1235 = icmp eq i8 %1234, -74
  br i1 %1235, label %1346, label %1331

1236:                                             ; preds = %1032
  %1237 = icmp eq i64 %487, 3
  br i1 %1237, label %1238, label %1318

1238:                                             ; preds = %1236
  %1239 = load i8, ptr %484, align 1, !tbaa !9
  switch i8 %1239, label %1331 [
    i8 97, label %1240
    i8 102, label %1249
    i8 104, label %1259
    i8 105, label %1268
    i8 106, label %1277
    i8 115, label %1286
    i8 116, label %1291
    i8 119, label %1300
    i8 121, label %1300
    i8 -54, label %1309
  ]

1240:                                             ; preds = %1238
  %1241 = getelementptr inbounds i8, ptr %484, i64 1
  %1242 = load i8, ptr %1241, align 1, !tbaa !9
  %1243 = icmp eq i8 %1242, -54
  br i1 %1243, label %1244, label %1331

1244:                                             ; preds = %1240
  %1245 = getelementptr inbounds i8, ptr %484, i64 2
  %1246 = load i8, ptr %1245, align 1, !tbaa !9
  %1247 = freeze i8 %1246
  %1248 = icmp eq i8 %1247, -66
  br i1 %1248, label %1346, label %1331

1249:                                             ; preds = %1238
  %1250 = getelementptr inbounds i8, ptr %484, i64 1
  %1251 = load i8, ptr %1250, align 1, !tbaa !9
  switch i8 %1251, label %1331 [
    i8 102, label %1252
    i8 105, label %1346
    i8 108, label %1346
  ]

1252:                                             ; preds = %1249
  %1253 = getelementptr inbounds i8, ptr %484, i64 2
  %1254 = load i8, ptr %1253, align 1, !tbaa !9
  %1255 = icmp eq i8 %1254, 108
  %1256 = icmp eq i8 %1254, 105
  %1257 = or i1 %1255, %1256
  %1258 = select i1 %1257, i64 3, i64 2
  br label %1346

1259:                                             ; preds = %1238
  %1260 = getelementptr inbounds i8, ptr %484, i64 1
  %1261 = load i8, ptr %1260, align 1, !tbaa !9
  %1262 = icmp eq i8 %1261, -52
  br i1 %1262, label %1263, label %1331

1263:                                             ; preds = %1259
  %1264 = getelementptr inbounds i8, ptr %484, i64 2
  %1265 = load i8, ptr %1264, align 1, !tbaa !9
  %1266 = freeze i8 %1265
  %1267 = icmp eq i8 %1266, -79
  br i1 %1267, label %1346, label %1331

1268:                                             ; preds = %1238
  %1269 = getelementptr inbounds i8, ptr %484, i64 1
  %1270 = load i8, ptr %1269, align 1, !tbaa !9
  %1271 = icmp eq i8 %1270, -52
  br i1 %1271, label %1272, label %1331

1272:                                             ; preds = %1268
  %1273 = getelementptr inbounds i8, ptr %484, i64 2
  %1274 = load i8, ptr %1273, align 1, !tbaa !9
  %1275 = freeze i8 %1274
  %1276 = icmp eq i8 %1275, -121
  br i1 %1276, label %1346, label %1331

1277:                                             ; preds = %1238
  %1278 = getelementptr inbounds i8, ptr %484, i64 1
  %1279 = load i8, ptr %1278, align 1, !tbaa !9
  %1280 = icmp eq i8 %1279, -52
  br i1 %1280, label %1281, label %1331

1281:                                             ; preds = %1277
  %1282 = getelementptr inbounds i8, ptr %484, i64 2
  %1283 = load i8, ptr %1282, align 1, !tbaa !9
  %1284 = freeze i8 %1283
  %1285 = icmp eq i8 %1284, -116
  br i1 %1285, label %1346, label %1331

1286:                                             ; preds = %1238
  %1287 = getelementptr inbounds i8, ptr %484, i64 1
  %1288 = load i8, ptr %1287, align 1, !tbaa !9
  %1289 = add i8 %1288, -115
  %1290 = icmp ult i8 %1289, 2
  br i1 %1290, label %1338, label %1331

1291:                                             ; preds = %1238
  %1292 = getelementptr inbounds i8, ptr %484, i64 1
  %1293 = load i8, ptr %1292, align 1, !tbaa !9
  %1294 = icmp eq i8 %1293, -52
  br i1 %1294, label %1295, label %1331

1295:                                             ; preds = %1291
  %1296 = getelementptr inbounds i8, ptr %484, i64 2
  %1297 = load i8, ptr %1296, align 1, !tbaa !9
  %1298 = freeze i8 %1297
  %1299 = icmp eq i8 %1298, -120
  br i1 %1299, label %1346, label %1331

1300:                                             ; preds = %1238, %1238
  %1301 = getelementptr inbounds i8, ptr %484, i64 1
  %1302 = load i8, ptr %1301, align 1, !tbaa !9
  %1303 = icmp eq i8 %1302, -52
  br i1 %1303, label %1304, label %1331

1304:                                             ; preds = %1300
  %1305 = getelementptr inbounds i8, ptr %484, i64 2
  %1306 = load i8, ptr %1305, align 1, !tbaa !9
  %1307 = freeze i8 %1306
  %1308 = icmp eq i8 %1307, -118
  br i1 %1308, label %1346, label %1331

1309:                                             ; preds = %1238
  %1310 = getelementptr inbounds i8, ptr %484, i64 1
  %1311 = load i8, ptr %1310, align 1, !tbaa !9
  %1312 = icmp eq i8 %1311, -68
  br i1 %1312, label %1313, label %1331

1313:                                             ; preds = %1309
  %1314 = getelementptr inbounds i8, ptr %484, i64 2
  %1315 = load i8, ptr %1314, align 1, !tbaa !9
  %1316 = freeze i8 %1315
  %1317 = icmp eq i8 %1316, 110
  br i1 %1317, label %1346, label %1331

1318:                                             ; preds = %1236
  %1319 = icmp sgt i64 %487, 1
  %1320 = load i8, ptr %484, align 1, !tbaa !9
  br i1 %1319, label %1321, label %1331

1321:                                             ; preds = %1318
  switch i8 %1320, label %1331 [
    i8 102, label %1322
    i8 115, label %1325
  ]

1322:                                             ; preds = %1321
  %1323 = getelementptr inbounds i8, ptr %484, i64 1
  %1324 = load i8, ptr %1323, align 1, !tbaa !9
  switch i8 %1324, label %1331 [
    i8 102, label %1346
    i8 105, label %1346
    i8 108, label %1346
  ]

1325:                                             ; preds = %1321
  %1326 = getelementptr inbounds i8, ptr %484, i64 1
  %1327 = load i8, ptr %1326, align 1, !tbaa !9
  %1328 = freeze i8 %1327
  %1329 = add i8 %1328, -115
  %1330 = icmp ult i8 %1329, 2
  br i1 %1330, label %1338, label %1331

1331:                                             ; preds = %1325, %1322, %1321, %1318, %1313, %1309, %1304, %1300, %1295, %1291, %1286, %1281, %1277, %1272, %1268, %1263, %1259, %1249, %1244, %1240, %1238, %1231, %1227, %1224, %1220, %1215, %1211, %1208, %1203, %1199, %1194, %1190, %1187, %1182, %1178, %1175, %1170, %1166, %1163, %1158, %1154, %1149, %1145, %1142, %1141, %1136, %1132, %1122, %1118, %1113, %1109, %1105, %1100, %1096, %1091, %1087, %1082, %1077, %1073, %1068, %1064, %1059, %1055, %1045, %1040, %1036, %1034, %1027, %1023, %1012, %1007, %1003, %998, %995, %990, %986, %983, %979, %974, %970, %967, %962, %958, %953, %949, %946, %941, %937, %934, %929, %925, %922, %917, %913, %908, %904, %901, %900, %895, %891, %881, %877, %872, %868, %864, %859, %855, %850, %846, %841, %836, %832, %827, %823, %818, %814, %804, %799, %795, %793, %786, %782, %771, %766, %762, %757, %754, %749, %745, %742, %738, %733, %729, %726, %721, %717, %712, %698, %695, %690, %670, %665, %662, %659, %656, %651, %647, %644, %639, %634, %629, %626, %622, %619, %614, %600, %597, %596, %591, %587, %577, %573, %568, %564, %560, %555, %551, %546, %542, %537, %532, %528, %523, %519, %514, %510, %500, %495, %491, %489
  %1332 = phi i8 [ 115, %1286 ], [ 115, %1082 ], [ 115, %841 ], [ 115, %537 ], [ %1320, %1321 ], [ %1239, %1238 ], [ -54, %1309 ], [ %1239, %1300 ], [ 116, %1291 ], [ 106, %1277 ], [ 105, %1268 ], [ 104, %1259 ], [ 97, %1240 ], [ -43, %1208 ], [ -43, %1227 ], [ -43, %1224 ], [ -43, %1220 ], [ -43, %1211 ], [ -49, %1163 ], [ -49, %1199 ], [ -49, %1187 ], [ -49, %1175 ], [ -49, %1166 ], [ -50, %1141 ], [ -50, %1154 ], [ -50, %1142 ], [ -50, %1132 ], [ -54, %1118 ], [ -59, %1105 ], [ -59, %1109 ], [ %1035, %1096 ], [ 116, %1087 ], [ 106, %1073 ], [ 105, %1064 ], [ 104, %1055 ], [ 97, %1036 ], [ -31, %1012 ], [ -31, %995 ], [ -31, %1023 ], [ -31, %998 ], [ -31, %1003 ], [ -43, %967 ], [ -43, %986 ], [ -43, %983 ], [ -43, %979 ], [ -43, %970 ], [ -49, %922 ], [ -49, %958 ], [ -49, %946 ], [ -49, %934 ], [ -49, %925 ], [ -50, %900 ], [ -50, %913 ], [ -50, %901 ], [ -50, %891 ], [ -54, %877 ], [ -59, %864 ], [ -59, %868 ], [ %794, %855 ], [ 116, %846 ], [ 106, %832 ], [ 105, %823 ], [ 104, %814 ], [ 97, %795 ], [ -31, %771 ], [ -31, %754 ], [ -31, %782 ], [ -31, %757 ], [ -31, %762 ], [ -43, %726 ], [ -43, %745 ], [ -43, %742 ], [ -43, %738 ], [ -43, %729 ], [ -49, %644 ], [ -49, %717 ], [ -49, %695 ], [ -49, %662 ], [ -49, %656 ], [ -49, %647 ], [ -50, %626 ], [ -50, %619 ], [ -50, %597 ], [ -50, %587 ], [ -54, %573 ], [ -59, %560 ], [ -59, %564 ], [ %490, %551 ], [ 116, %542 ], [ 106, %528 ], [ 105, %519 ], [ 104, %510 ], [ 97, %491 ], [ -50, %600 ], [ -50, %629 ], [ -50, %622 ], [ -49, %665 ], [ -49, %698 ], [ -50, %904 ], [ -49, %937 ], [ -49, %949 ], [ -50, %1145 ], [ -49, %1178 ], [ -49, %1190 ], [ %1320, %1318 ], [ -50, %596 ], [ -49, %659 ], [ %490, %489 ], [ %794, %793 ], [ %1035, %1034 ], [ 97, %495 ], [ 102, %500 ], [ 104, %514 ], [ 105, %523 ], [ 106, %532 ], [ 116, %546 ], [ %490, %555 ], [ -59, %568 ], [ -54, %577 ], [ -50, %591 ], [ -50, %614 ], [ -50, %634 ], [ -50, %639 ], [ -49, %651 ], [ -49, %670 ], [ -49, %690 ], [ -49, %712 ], [ -49, %721 ], [ -43, %733 ], [ -43, %749 ], [ -31, %766 ], [ -31, %786 ], [ 97, %799 ], [ 102, %804 ], [ 104, %818 ], [ 105, %827 ], [ 106, %836 ], [ 116, %850 ], [ %794, %859 ], [ -59, %872 ], [ -54, %881 ], [ -50, %895 ], [ -50, %908 ], [ -50, %917 ], [ -49, %929 ], [ -49, %941 ], [ -49, %953 ], [ -49, %962 ], [ -43, %974 ], [ -43, %990 ], [ -31, %1007 ], [ -31, %1027 ], [ 97, %1040 ], [ 102, %1045 ], [ 104, %1059 ], [ 105, %1068 ], [ 106, %1077 ], [ 116, %1091 ], [ %1035, %1100 ], [ -59, %1113 ], [ -54, %1122 ], [ -50, %1136 ], [ -50, %1149 ], [ -50, %1158 ], [ -49, %1170 ], [ -49, %1182 ], [ -49, %1194 ], [ -49, %1203 ], [ -43, %1215 ], [ -43, %1231 ], [ 97, %1244 ], [ 102, %1249 ], [ 104, %1263 ], [ 105, %1272 ], [ 106, %1281 ], [ 116, %1295 ], [ %1239, %1304 ], [ -54, %1313 ], [ 102, %1322 ], [ 115, %1325 ]
  %1333 = zext i8 %1332 to i64
  %1334 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1333
  %1335 = load i8, ptr %1334, align 1, !tbaa !9
  %1336 = zext i8 %1335 to i64
  %1337 = getelementptr inbounds i8, ptr %484, i64 %1336
  br label %1377, !llvm.loop !243

1338:                                             ; preds = %1325, %1286, %1082, %841, %537
  %1339 = phi i8 [ %1328, %1325 ], [ %539, %537 ], [ %843, %841 ], [ %1084, %1082 ], [ %1288, %1286 ]
  %1340 = icmp eq i8 %1339, 115
  br i1 %1340, label %1341, label %1346

1341:                                             ; preds = %1338
  %1342 = load i8, ptr %159, align 1, !tbaa !164
  switch i8 %1342, label %1343 [
    i8 36, label %1349
    i8 39, label %1349
    i8 34, label %1344
  ]

1343:                                             ; preds = %1341
  store i8 37, ptr %159, align 1, !tbaa !164
  br label %1344

1344:                                             ; preds = %1343, %1341
  %1345 = getelementptr inbounds i8, ptr %484, i64 2
  br label %1372

1346:                                             ; preds = %1338, %1322, %1322, %1322, %1313, %1304, %1295, %1281, %1272, %1263, %1252, %1249, %1249, %1244, %1231, %1224, %1224, %1224, %1224, %1215, %1203, %1194, %1190, %1182, %1178, %1170, %1158, %1149, %1145, %1136, %1122, %1113, %1100, %1091, %1077, %1068, %1059, %1048, %1045, %1045, %1040, %1027, %1007, %990, %983, %983, %983, %983, %974, %962, %953, %949, %941, %937, %929, %917, %908, %904, %895, %881, %872, %859, %850, %836, %827, %818, %807, %804, %804, %799, %786, %766, %749, %742, %742, %742, %742, %733, %721, %712, %706, %702, %690, %684, %678, %675, %670, %665, %651, %639, %634, %629, %614, %608, %604, %591, %577, %568, %555, %546, %532, %523, %514, %503, %500, %500, %495
  %1347 = phi i64 [ 2, %1338 ], [ 4, %1224 ], [ 4, %1224 ], [ 4, %1224 ], [ 4, %1224 ], [ 4, %983 ], [ 4, %983 ], [ 4, %983 ], [ 4, %983 ], [ 4, %742 ], [ 4, %742 ], [ 4, %742 ], [ 4, %742 ], [ 3, %495 ], [ 3, %514 ], [ 3, %523 ], [ 3, %532 ], [ 3, %546 ], [ 3, %555 ], [ 4, %568 ], [ 3, %577 ], [ 4, %591 ], [ 4, %604 ], [ 4, %614 ], [ 6, %634 ], [ 4, %639 ], [ 4, %651 ], [ 6, %670 ], [ 4, %675 ], [ 4, %690 ], [ 4, %702 ], [ 4, %712 ], [ 4, %721 ], [ 4, %733 ], [ 4, %749 ], [ 5, %766 ], [ 5, %786 ], [ 3, %799 ], [ 3, %818 ], [ 3, %827 ], [ 3, %836 ], [ 3, %850 ], [ 3, %859 ], [ 4, %872 ], [ 3, %881 ], [ 4, %895 ], [ 4, %908 ], [ 4, %917 ], [ 4, %929 ], [ 4, %941 ], [ 4, %953 ], [ 4, %962 ], [ 4, %974 ], [ 4, %990 ], [ 5, %1007 ], [ 5, %1027 ], [ 3, %1040 ], [ 3, %1059 ], [ 3, %1068 ], [ 3, %1077 ], [ 3, %1091 ], [ 3, %1100 ], [ 4, %1113 ], [ 3, %1122 ], [ 4, %1136 ], [ 4, %1149 ], [ 4, %1158 ], [ 4, %1170 ], [ 4, %1182 ], [ 4, %1194 ], [ 4, %1203 ], [ 4, %1215 ], [ 4, %1231 ], [ 3, %1244 ], [ 3, %1263 ], [ 3, %1272 ], [ 3, %1281 ], [ 3, %1295 ], [ 3, %1304 ], [ 3, %1313 ], [ 6, %629 ], [ 6, %665 ], [ 4, %904 ], [ 4, %937 ], [ 4, %949 ], [ 4, %1145 ], [ 4, %1178 ], [ 4, %1190 ], [ 2, %1322 ], [ 2, %1322 ], [ 2, %1322 ], [ 2, %1249 ], [ 2, %1249 ], [ 2, %1045 ], [ 2, %1045 ], [ 2, %804 ], [ 2, %804 ], [ 2, %500 ], [ 2, %500 ], [ %613, %608 ], [ %689, %684 ], [ %711, %706 ], [ %683, %678 ], [ %509, %503 ], [ %813, %807 ], [ %1054, %1048 ], [ %1258, %1252 ]
  %1348 = load i8, ptr %159, align 1, !tbaa !164
  br label %1349

1349:                                             ; preds = %1346, %1341, %1341
  %1350 = phi i8 [ %1348, %1346 ], [ %1342, %1341 ], [ %1342, %1341 ]
  %1351 = phi i64 [ %1347, %1346 ], [ 2, %1341 ], [ 2, %1341 ]
  %1352 = getelementptr inbounds i8, ptr %484, i64 %1351
  switch i8 %1350, label %1354 [
    i8 36, label %1353
    i8 39, label %1353
  ]

1353:                                             ; preds = %1349, %1349
  br label %1357

1354:                                             ; preds = %1349
  %1355 = call i64 @Perl_utf8_length(ptr noundef nonnull %484, ptr noundef nonnull %1352) #21
  %1356 = trunc i64 %1355 to i32
  br label %1372

1357:                                             ; preds = %1353, %1362
  %1358 = phi i32 [ %1368, %1362 ], [ 0, %1353 ]
  %1359 = phi ptr [ %1367, %1362 ], [ %484, %1353 ]
  %1360 = load i8, ptr %1359, align 1, !tbaa !9
  %1361 = icmp sgt i8 %1360, -1
  br i1 %1361, label %1370, label %1362

1362:                                             ; preds = %1357
  %1363 = zext i8 %1360 to i64
  %1364 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1363
  %1365 = load i8, ptr %1364, align 1, !tbaa !9
  %1366 = zext i8 %1365 to i64
  %1367 = getelementptr inbounds i8, ptr %1359, i64 %1366
  %1368 = add nuw nsw i32 %1358, 1
  %1369 = icmp ult ptr %1367, %1352
  br i1 %1369, label %1357, label %1372, !llvm.loop !244

1370:                                             ; preds = %1357
  %1371 = getelementptr inbounds i8, ptr %1359, i64 1
  br label %1377

1372:                                             ; preds = %1362, %1354, %1344
  %1373 = phi ptr [ %1345, %1344 ], [ %1352, %1354 ], [ %1367, %1362 ]
  %1374 = phi i32 [ 2, %1344 ], [ %1356, %1354 ], [ %1368, %1362 ]
  %1375 = add i32 %485, -1
  %1376 = add i32 %1375, %1374
  br label %1377

1377:                                             ; preds = %1372, %1370, %1331
  %1378 = phi i32 [ %485, %1331 ], [ %1376, %1372 ], [ %485, %1370 ]
  %1379 = phi ptr [ %1337, %1331 ], [ %1373, %1372 ], [ %1371, %1370 ]
  %1380 = icmp ult ptr %1379, %479
  br i1 %1380, label %483, label %1381

1381:                                             ; preds = %1377, %474
  %1382 = phi i32 [ 0, %474 ], [ %1378, %1377 ]
  %1383 = load i8, ptr %159, align 1, !tbaa !164
  %1384 = icmp eq i8 %1383, 34
  br i1 %1384, label %1385, label %1392

1385:                                             ; preds = %1381
  %1386 = load i8, ptr %143, align 2, !tbaa !218
  %1387 = zext i8 %1386 to i64
  %1388 = getelementptr inbounds i8, ptr %311, i64 %1387
  %1389 = call i64 @Perl_utf8_length(ptr noundef nonnull %311, ptr noundef nonnull %1388) #21
  %1390 = trunc i64 %1389 to i32
  %1391 = call i32 @llvm.smin.i32(i32 %1382, i32 %1390)
  br label %1392

1392:                                             ; preds = %1385, %1381
  %1393 = phi i32 [ %1391, %1385 ], [ %1382, %1381 ]
  %1394 = sext i32 %1393 to i64
  call void @Perl_safesysfree(ptr noundef %477) #21
  br label %1492

1395:                                             ; preds = %310
  switch i8 %307, label %1406 [
    i8 36, label %1396
    i8 33, label %1408
    i8 34, label %1408
  ]

1396:                                             ; preds = %1395
  %1397 = icmp eq i8 %312, 0
  br i1 %1397, label %1492, label %1401

1398:                                             ; preds = %1401
  %1399 = getelementptr inbounds i8, ptr %1402, i64 1
  %1400 = icmp ult ptr %1399, %314
  br i1 %1400, label %1401, label %1492, !llvm.loop !245

1401:                                             ; preds = %1396, %1398
  %1402 = phi ptr [ %1399, %1398 ], [ %311, %1396 ]
  %1403 = load i8, ptr %1402, align 1, !tbaa !9
  %1404 = icmp eq i8 %1403, -33
  br i1 %1404, label %1405, label %1398

1405:                                             ; preds = %1401
  store i8 39, ptr %159, align 1, !tbaa !164
  br label %1492

1406:                                             ; preds = %1395
  %1407 = getelementptr inbounds i8, ptr %314, i64 -1
  br label %1408

1408:                                             ; preds = %1406, %1395, %1395
  %1409 = phi ptr [ %1407, %1406 ], [ %314, %1395 ], [ %314, %1395 ]
  %1410 = icmp ult ptr %311, %1409
  br i1 %1410, label %1411, label %1492

1411:                                             ; preds = %1408
  %1412 = ptrtoint ptr %314 to i64
  br label %1413

1413:                                             ; preds = %1483, %1411
  %1414 = phi i64 [ 0, %1411 ], [ %1484, %1483 ]
  %1415 = phi i8 [ 0, %1411 ], [ %1485, %1483 ]
  %1416 = phi i8 [ %307, %1411 ], [ %1487, %1483 ]
  %1417 = phi i64 [ 0, %1411 ], [ %1488, %1483 ]
  %1418 = phi i8 [ %307, %1411 ], [ %1489, %1483 ]
  %1419 = phi ptr [ %311, %1411 ], [ %1490, %1483 ]
  %1420 = ptrtoint ptr %1419 to i64
  %1421 = sub i64 %1412, %1420
  %1422 = icmp sgt i64 %1421, 2
  br i1 %1422, label %1423, label %1440

1423:                                             ; preds = %1413
  %1424 = load i8, ptr %1419, align 1, !tbaa !9
  %1425 = and i8 %1424, -33
  switch i8 %1425, label %1456 [
    i8 70, label %1426
    i8 83, label %1433
  ]

1426:                                             ; preds = %1423
  %1427 = getelementptr inbounds i8, ptr %1419, i64 1
  %1428 = load i8, ptr %1427, align 1, !tbaa !9
  %1429 = and i8 %1428, -33
  switch i8 %1429, label %1456 [
    i8 70, label %1430
    i8 73, label %1463
    i8 76, label %1463
  ]

1430:                                             ; preds = %1426
  %1431 = getelementptr inbounds i8, ptr %1419, i64 2
  %1432 = load i8, ptr %1431, align 1, !tbaa !9
  switch i8 %1432, label %1463 [
    i8 108, label %1475
    i8 105, label %1475
    i8 76, label %1475
    i8 73, label %1475
  ]

1433:                                             ; preds = %1423
  %1434 = getelementptr inbounds i8, ptr %1419, i64 1
  %1435 = load i8, ptr %1434, align 1, !tbaa !9
  %1436 = freeze i8 %1435
  %1437 = and i8 %1436, -33
  %1438 = add i8 %1437, -83
  %1439 = icmp ult i8 %1438, 2
  br i1 %1439, label %1463, label %1456

1440:                                             ; preds = %1413
  %1441 = icmp eq i64 %1421, 2
  %1442 = load i8, ptr %1419, align 1, !tbaa !9
  br i1 %1441, label %1443, label %1456

1443:                                             ; preds = %1440
  %1444 = and i8 %1442, -33
  switch i8 %1444, label %1456 [
    i8 70, label %1445
    i8 83, label %1449
  ]

1445:                                             ; preds = %1443
  %1446 = getelementptr inbounds i8, ptr %1419, i64 1
  %1447 = load i8, ptr %1446, align 1, !tbaa !9
  %1448 = and i8 %1447, -33
  switch i8 %1448, label %1456 [
    i8 70, label %1463
    i8 73, label %1463
    i8 76, label %1463
  ]

1449:                                             ; preds = %1443
  %1450 = getelementptr inbounds i8, ptr %1419, i64 1
  %1451 = load i8, ptr %1450, align 1, !tbaa !9
  %1452 = freeze i8 %1451
  %1453 = and i8 %1452, -33
  %1454 = add i8 %1453, -83
  %1455 = icmp ult i8 %1454, 2
  br i1 %1455, label %1463, label %1456

1456:                                             ; preds = %1426, %1433, %1440, %1445, %1449, %1443, %1423
  %1457 = phi i8 [ %1424, %1423 ], [ %1442, %1443 ], [ %1442, %1449 ], [ %1442, %1445 ], [ %1442, %1440 ], [ %1424, %1433 ], [ %1424, %1426 ]
  %1458 = icmp eq i8 %1457, -33
  br i1 %1458, label %1459, label %1483, !llvm.loop !246

1459:                                             ; preds = %1456
  %1460 = add i8 %1416, -33
  %1461 = icmp ult i8 %1460, 2
  %1462 = select i1 %1461, i8 1, i8 %1415
  br label %1483, !llvm.loop !246

1463:                                             ; preds = %1449, %1445, %1445, %1445, %1433, %1430, %1426, %1426
  %1464 = phi i8 [ %1428, %1430 ], [ %1452, %1449 ], [ %1447, %1445 ], [ %1447, %1445 ], [ %1447, %1445 ], [ %1436, %1433 ], [ %1428, %1426 ], [ %1428, %1426 ]
  %1465 = phi i8 [ %1424, %1430 ], [ %1442, %1449 ], [ %1442, %1445 ], [ %1442, %1445 ], [ %1442, %1445 ], [ %1424, %1433 ], [ %1424, %1426 ], [ %1424, %1426 ]
  %1466 = and i8 %1465, -33
  %1467 = icmp ne i8 %1466, 83
  %1468 = and i8 %1464, -33
  %1469 = icmp ne i8 %1468, 83
  %1470 = or i1 %1469, %1467
  %1471 = add i8 %1418, -33
  %1472 = icmp ult i8 %1471, 2
  %1473 = select i1 %1470, i1 true, i1 %1472
  br i1 %1473, label %1475, label %1474

1474:                                             ; preds = %1463
  store i8 37, ptr %159, align 1, !tbaa !164
  br label %1475

1475:                                             ; preds = %1474, %1463, %1430, %1430, %1430, %1430
  %1476 = phi i8 [ 37, %1474 ], [ %1416, %1463 ], [ %1416, %1430 ], [ %1416, %1430 ], [ %1416, %1430 ], [ %1416, %1430 ]
  %1477 = phi i8 [ 37, %1474 ], [ %1418, %1463 ], [ %1418, %1430 ], [ %1418, %1430 ], [ %1418, %1430 ], [ %1418, %1430 ]
  %1478 = phi i32 [ 2, %1474 ], [ 2, %1463 ], [ 3, %1430 ], [ 3, %1430 ], [ 3, %1430 ], [ 3, %1430 ]
  %1479 = add nsw i32 %1478, -1
  %1480 = zext i32 %1479 to i64
  %1481 = add i64 %1417, %1480
  %1482 = zext i32 %1478 to i64
  br label %1483

1483:                                             ; preds = %1459, %1475, %1456
  %1484 = phi i64 [ %1414, %1456 ], [ %1481, %1475 ], [ %1414, %1459 ]
  %1485 = phi i8 [ %1415, %1456 ], [ %1415, %1475 ], [ %1462, %1459 ]
  %1486 = phi i64 [ 1, %1456 ], [ %1482, %1475 ], [ 1, %1459 ]
  %1487 = phi i8 [ %1416, %1456 ], [ %1476, %1475 ], [ %1416, %1459 ]
  %1488 = phi i64 [ %1417, %1456 ], [ %1481, %1475 ], [ %1417, %1459 ]
  %1489 = phi i8 [ %1418, %1456 ], [ %1477, %1475 ], [ %1416, %1459 ]
  %1490 = getelementptr inbounds i8, ptr %1419, i64 %1486
  %1491 = icmp ult ptr %1490, %1409
  br i1 %1491, label %1413, label %1492

1492:                                             ; preds = %1398, %1483, %1408, %1405, %1396, %1392, %306, %164
  %1493 = phi i64 [ 0, %164 ], [ 0, %306 ], [ 0, %1408 ], [ 0, %1396 ], [ 0, %1405 ], [ %1394, %1392 ], [ %1484, %1483 ], [ 0, %1398 ]
  %1494 = phi i8 [ 0, %164 ], [ 0, %306 ], [ 0, %1408 ], [ 0, %1396 ], [ 1, %1405 ], [ %475, %1392 ], [ %1485, %1483 ], [ 0, %1398 ]
  %1495 = load ptr, ptr %16, align 8
  %1496 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 1
  %1497 = load i8, ptr %1496, align 1, !tbaa !164
  %1498 = icmp eq i8 %1497, 47
  br i1 %1498, label %3695, label %1499

1499:                                             ; preds = %1492
  %1500 = zext i8 %1497 to i64
  %1501 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1500
  %1502 = load i8, ptr %1501, align 1, !tbaa !9
  %1503 = icmp eq i8 %1502, 0
  %1504 = select i1 %1503, i32 65535, i32 2147483647
  br i1 %1503, label %1508, label %1505

1505:                                             ; preds = %1499
  %1506 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %1507 = load i32, ptr %1506, align 4, !tbaa !166
  br label %1512

1508:                                             ; preds = %1499
  %1509 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %1510 = load i16, ptr %1509, align 2, !tbaa !168
  %1511 = zext i16 %1510 to i32
  br label %1512

1512:                                             ; preds = %1508, %1505
  %1513 = phi i32 [ %1507, %1505 ], [ %1511, %1508 ]
  br label %1514

1514:                                             ; preds = %1512, %1559
  %1515 = phi ptr [ %1541, %1559 ], [ %1495, %1512 ]
  %1516 = phi i32 [ %1561, %1559 ], [ %1513, %1512 ]
  %1517 = getelementptr inbounds %struct.regnode, ptr %1515, i64 0, i32 1
  %1518 = load i8, ptr %1517, align 1, !tbaa !164
  %1519 = icmp ugt i8 %1518, 93
  br i1 %1519, label %1520, label %1523

1520:                                             ; preds = %1514
  %1521 = zext i8 %1518 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1521, i32 noundef 93) #21
  %1522 = load i8, ptr %1517, align 1, !tbaa !164
  br label %1523

1523:                                             ; preds = %1520, %1514
  %1524 = phi i8 [ %1522, %1520 ], [ %1518, %1514 ]
  %1525 = zext i8 %1524 to i64
  %1526 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1525
  %1527 = load i8, ptr %1526, align 1, !tbaa !9
  %1528 = icmp eq i8 %1527, 0
  br i1 %1528, label %1532, label %1529

1529:                                             ; preds = %1523
  %1530 = getelementptr inbounds %struct.regnode_1, ptr %1515, i64 0, i32 3
  %1531 = load i32, ptr %1530, align 4, !tbaa !166
  br label %1536

1532:                                             ; preds = %1523
  %1533 = getelementptr inbounds %struct.regnode, ptr %1515, i64 0, i32 2
  %1534 = load i16, ptr %1533, align 2, !tbaa !168
  %1535 = zext i16 %1534 to i32
  br label %1536

1536:                                             ; preds = %1532, %1529
  %1537 = phi i32 [ %1531, %1529 ], [ %1535, %1532 ]
  %1538 = icmp eq i32 %1537, 0
  br i1 %1538, label %1563, label %1539

1539:                                             ; preds = %1536
  %1540 = sext i32 %1537 to i64
  %1541 = getelementptr inbounds %struct.regnode, ptr %1515, i64 %1540
  %1542 = getelementptr inbounds %struct.regnode, ptr %1515, i64 %1540, i32 1
  %1543 = load i8, ptr %1542, align 1, !tbaa !164
  %1544 = zext i8 %1543 to i64
  %1545 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %1544
  %1546 = load i8, ptr %1545, align 1, !tbaa !9
  %1547 = icmp eq i8 %1546, 40
  br i1 %1547, label %1548, label %1553

1548:                                             ; preds = %1539
  %1549 = getelementptr inbounds %struct.regnode, ptr %1515, i64 %1540, i32 2
  %1550 = load i16, ptr %1549, align 2, !tbaa !168
  %1551 = zext i16 %1550 to i32
  %1552 = icmp eq i16 %1550, 0
  br i1 %1552, label %1553, label %1559

1553:                                             ; preds = %1548, %1539
  %1554 = icmp eq i8 %1543, 61
  br i1 %1554, label %1555, label %1563

1555:                                             ; preds = %1553
  %1556 = getelementptr inbounds %struct.regnode_1, ptr %1541, i64 0, i32 3
  %1557 = load i32, ptr %1556, align 4, !tbaa !166
  %1558 = icmp eq i32 %1557, 0
  br i1 %1558, label %1563, label %1559

1559:                                             ; preds = %1555, %1548
  %1560 = phi i32 [ %1551, %1548 ], [ %1557, %1555 ]
  %1561 = add nsw i32 %1560, %1516
  %1562 = icmp slt i32 %1561, %1504
  br i1 %1562, label %1514, label %1563, !llvm.loop !247

1563:                                             ; preds = %1536, %1555, %1553, %1559
  %1564 = load i8, ptr %1496, align 1, !tbaa !164
  %1565 = zext i8 %1564 to i64
  %1566 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1565
  %1567 = load i8, ptr %1566, align 1, !tbaa !9
  %1568 = icmp eq i8 %1567, 0
  br i1 %1568, label %1571, label %1569

1569:                                             ; preds = %1563
  %1570 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  store i32 %1516, ptr %1570, align 4, !tbaa !166
  br label %1574

1571:                                             ; preds = %1563
  %1572 = trunc i32 %1516 to i16
  %1573 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  store i16 %1572, ptr %1573, align 2, !tbaa !168
  br label %1574

1574:                                             ; preds = %1569, %1571
  switch i8 %1564, label %2647 [
    i8 80, label %1575
    i8 30, label %1634
    i8 62, label %1634
    i8 66, label %1634
    i8 32, label %2526
    i8 31, label %2526
    i8 65, label %2452
    i8 76, label %2337
    i8 77, label %2352
  ]

1575:                                             ; preds = %1574
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #21
  store i64 0, ptr %18, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #21
  store i64 0, ptr %20, align 8, !tbaa !71
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  %1576 = load i8, ptr %1496, align 1, !tbaa !164
  %1577 = icmp ugt i8 %1576, 93
  br i1 %1577, label %1578, label %1581

1578:                                             ; preds = %1575
  %1579 = zext i8 %1576 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1579, i32 noundef 93) #21
  %1580 = load i8, ptr %1496, align 1, !tbaa !164
  br label %1581

1581:                                             ; preds = %1578, %1575
  %1582 = phi i8 [ %1580, %1578 ], [ %1576, %1575 ]
  %1583 = zext i8 %1582 to i64
  %1584 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1583
  %1585 = load i8, ptr %1584, align 1, !tbaa !9
  %1586 = icmp eq i8 %1585, 0
  br i1 %1586, label %1590, label %1587

1587:                                             ; preds = %1581
  %1588 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %1589 = load i32, ptr %1588, align 4, !tbaa !166
  br label %1594

1590:                                             ; preds = %1581
  %1591 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %1592 = load i16, ptr %1591, align 2, !tbaa !168
  %1593 = zext i16 %1592 to i32
  br label %1594

1594:                                             ; preds = %1590, %1587
  %1595 = phi i32 [ %1589, %1587 ], [ %1593, %1590 ]
  %1596 = icmp eq i32 %1595, 0
  br i1 %1596, label %1597, label %1599

1597:                                             ; preds = %1594
  store ptr %20, ptr %100, align 8, !tbaa !198
  %1598 = load i64, ptr %2, align 8, !tbaa !71
  store i64 %1598, ptr %18, align 8, !tbaa !71
  br label %1628

1599:                                             ; preds = %1594
  %1600 = sext i32 %1595 to i64
  %1601 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %1600
  store ptr %20, ptr %100, align 8, !tbaa !198
  %1602 = load i64, ptr %2, align 8, !tbaa !71
  store i64 %1602, ptr %18, align 8, !tbaa !71
  %1603 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %1600, i32 1
  %1604 = load i8, ptr %1603, align 1, !tbaa !164
  %1605 = icmp ugt i8 %1604, 93
  br i1 %1605, label %1606, label %1609

1606:                                             ; preds = %1599
  %1607 = zext i8 %1604 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1607, i32 noundef 93) #21
  %1608 = load i8, ptr %1603, align 1, !tbaa !164
  br label %1609

1609:                                             ; preds = %1606, %1599
  %1610 = phi i8 [ %1608, %1606 ], [ %1604, %1599 ]
  %1611 = zext i8 %1610 to i64
  %1612 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1611
  %1613 = load i8, ptr %1612, align 1, !tbaa !9
  %1614 = icmp eq i8 %1613, 0
  br i1 %1614, label %1618, label %1615

1615:                                             ; preds = %1609
  %1616 = getelementptr inbounds %struct.regnode_1, ptr %1601, i64 0, i32 3
  %1617 = load i32, ptr %1616, align 4, !tbaa !166
  br label %1622

1618:                                             ; preds = %1609
  %1619 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %1600, i32 2
  %1620 = load i16, ptr %1619, align 2, !tbaa !168
  %1621 = zext i16 %1620 to i32
  br label %1622

1622:                                             ; preds = %1618, %1615
  %1623 = phi i32 [ %1617, %1615 ], [ %1621, %1618 ]
  %1624 = icmp eq i32 %1623, 0
  br i1 %1624, label %1628, label %1625

1625:                                             ; preds = %1622
  %1626 = sext i32 %1623 to i64
  %1627 = getelementptr inbounds %struct.regnode, ptr %1601, i64 %1626
  br label %1628

1628:                                             ; preds = %1597, %1622, %1625
  %1629 = phi ptr [ %1601, %1625 ], [ %1601, %1622 ], [ null, %1597 ]
  %1630 = phi ptr [ %1627, %1625 ], [ null, %1622 ], [ null, %1597 ]
  %1631 = getelementptr inbounds %struct.regnode, ptr %1629, i64 2
  store ptr %1631, ptr %16, align 8, !tbaa !5
  %1632 = add i32 %149, 1
  %1633 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef nonnull %18, ptr noundef nonnull %19, ptr noundef %1630, ptr noundef nonnull %17, i32 noundef %145, i32 noundef %146, i32 noundef 131072, i32 noundef %1632)
  store ptr %1630, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #21
  br label %5248

1634:                                             ; preds = %1574, %1574, %1574
  br i1 %1568, label %1638, label %1635

1635:                                             ; preds = %1634
  %1636 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %1637 = load i32, ptr %1636, align 4, !tbaa !166
  br label %1642

1638:                                             ; preds = %1634
  %1639 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %1640 = load i16, ptr %1639, align 2, !tbaa !168
  %1641 = zext i16 %1640 to i32
  br label %1642

1642:                                             ; preds = %1638, %1635
  %1643 = phi i32 [ %1637, %1635 ], [ %1641, %1638 ]
  %1644 = icmp ne i32 %1643, 0
  call void @llvm.assume(i1 %1644)
  %1645 = sext i32 %1643 to i64
  %1646 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %1645, i32 1
  %1647 = load i8, ptr %1646, align 1, !tbaa !164
  %1648 = icmp eq i8 %1647, %1564
  %1649 = icmp eq i8 %1564, 66
  %1650 = or i1 %1649, %1648
  br i1 %1650, label %1651, label %2331

1651:                                             ; preds = %1642
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %21) #21
  %1652 = and i32 %148, 1024
  %1653 = icmp eq i32 %1652, 0
  br i1 %1653, label %1655, label %1654

1654:                                             ; preds = %1651
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  br label %1655

1655:                                             ; preds = %1654, %1651
  %1656 = and i32 %148, 6144
  %1657 = icmp eq i32 %1656, 0
  br i1 %1657, label %1681, label %1658

1658:                                             ; preds = %1655
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %123, i8 0, i64 40, i1 false)
  store i8 19, ptr %91, align 1, !tbaa !193
  store i16 1, ptr %92, align 2, !tbaa !194
  store i32 -1, ptr %93, align 4, !tbaa !166
  %1659 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %1660 = getelementptr inbounds %struct.sv, ptr %1659, i64 0, i32 2
  %1661 = load i32, ptr %1660, align 4, !tbaa !62
  %1662 = and i32 %1661, 268435456
  %1663 = icmp eq i32 %1662, 0
  br i1 %1663, label %1664, label %1669

1664:                                             ; preds = %1658
  %1665 = load ptr, ptr %1659, align 8, !tbaa !63
  %1666 = getelementptr inbounds %struct.xpv, ptr %1665, i64 0, i32 3
  %1667 = load i64, ptr %1666, align 8, !tbaa !9
  %1668 = icmp ult i64 %1667, 25
  br i1 %1668, label %1669, label %1672

1669:                                             ; preds = %1664, %1658
  %1670 = call ptr @Perl_sv_grow(ptr noundef nonnull %1659, i64 noundef 25) #21
  %1671 = load ptr, ptr %1659, align 8, !tbaa !63
  br label %1672

1672:                                             ; preds = %1664, %1669
  %1673 = phi ptr [ %1665, %1664 ], [ %1671, %1669 ]
  %1674 = getelementptr inbounds %struct.xpv, ptr %1673, i64 0, i32 2
  store i64 0, ptr %1674, align 8, !tbaa !72
  %1675 = getelementptr inbounds %struct.xpvinvlist, ptr %1673, i64 0, i32 5
  store i64 -1, ptr %1675, align 8, !tbaa !71
  %1676 = getelementptr inbounds %struct.xpvinvlist, ptr %1673, i64 0, i32 4
  store i64 0, ptr %1676, align 8, !tbaa !71
  %1677 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %1659) #21
  store ptr %1677, ptr %94, align 8, !tbaa !195
  call fastcc void @S__append_range_to_invlist(ptr noundef %1677, i64 noundef 0, i64 noundef -1)
  store i8 1, ptr %21, align 8, !tbaa !196
  %1678 = load i32, ptr %95, align 8, !tbaa !100
  %1679 = icmp eq i32 %1678, 0
  %1680 = select i1 %1679, i32 0, i32 536870911
  store i32 %1680, ptr %96, align 8
  br label %1681

1681:                                             ; preds = %1672, %1655
  %1682 = load i8, ptr %1496, align 1, !tbaa !164
  %1683 = icmp eq i8 %1682, %1564
  br i1 %1683, label %1684, label %2073

1684:                                             ; preds = %1681
  %1685 = icmp eq i8 %1564, 30
  %1686 = select i1 %1685, i64 1, i64 2
  %1687 = add i32 %149, 1
  br label %1688

1688:                                             ; preds = %1684, %2067
  %1689 = phi ptr [ %1496, %1684 ], [ %2068, %2067 ]
  %1690 = phi i64 [ 0, %1684 ], [ %1728, %2067 ]
  %1691 = phi i32 [ %148, %1684 ], [ %1901, %2067 ]
  %1692 = phi i32 [ %151, %1684 ], [ %1878, %2067 ]
  %1693 = phi i32 [ %153, %1684 ], [ %1873, %2067 ]
  %1694 = phi i32 [ %154, %1684 ], [ %1872, %2067 ]
  %1695 = phi i64 [ %157, %1684 ], [ %1902, %2067 ]
  %1696 = phi i64 [ 0, %1684 ], [ %1871, %2067 ]
  %1697 = phi i64 [ 9223372036854775807, %1684 ], [ %1866, %2067 ]
  %1698 = phi i64 [ 0, %1684 ], [ %1700, %2067 ]
  %1699 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %1690
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %22) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #21
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %24) #21
  %1700 = add nuw nsw i64 %1698, 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  br i1 %76, label %1704, label %1701

1701:                                             ; preds = %1688
  %1702 = load i32, ptr %97, align 4, !tbaa !248
  store i32 %1702, ptr %98, align 4, !tbaa !248
  %1703 = load ptr, ptr %99, align 8, !tbaa !198
  br label %1704

1704:                                             ; preds = %1688, %1701
  %1705 = phi ptr [ %1703, %1701 ], [ %23, %1688 ]
  store ptr %1705, ptr %100, align 8, !tbaa !198
  store i64 %152, ptr %101, align 8, !tbaa !249
  %1706 = load i8, ptr %1689, align 1, !tbaa !164
  %1707 = icmp ugt i8 %1706, 93
  br i1 %1707, label %1708, label %1711

1708:                                             ; preds = %1704
  %1709 = zext i8 %1706 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1709, i32 noundef 93) #21
  %1710 = load i8, ptr %1689, align 1, !tbaa !164
  br label %1711

1711:                                             ; preds = %1708, %1704
  %1712 = phi i8 [ %1710, %1708 ], [ %1706, %1704 ]
  %1713 = zext i8 %1712 to i64
  %1714 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1713
  %1715 = load i8, ptr %1714, align 1, !tbaa !9
  %1716 = icmp eq i8 %1715, 0
  br i1 %1716, label %1720, label %1717

1717:                                             ; preds = %1711
  %1718 = getelementptr inbounds %struct.regnode_1, ptr %1699, i64 0, i32 3
  %1719 = load i32, ptr %1718, align 4, !tbaa !166
  br label %1724

1720:                                             ; preds = %1711
  %1721 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %1690, i32 2
  %1722 = load i16, ptr %1721, align 2, !tbaa !168
  %1723 = zext i16 %1722 to i32
  br label %1724

1724:                                             ; preds = %1720, %1717
  %1725 = phi i32 [ %1719, %1717 ], [ %1723, %1720 ]
  %1726 = icmp eq i32 %1725, 0
  %1727 = sext i32 %1725 to i64
  %1728 = add nsw i64 %1690, %1727
  %1729 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %1728
  %1730 = select i1 %1726, ptr null, ptr %1729
  %1731 = getelementptr inbounds %struct.regnode, ptr %1699, i64 %1686
  store ptr %1731, ptr %16, align 8, !tbaa !5
  %1732 = and i32 %1691, 6144
  %1733 = icmp eq i32 %1732, 0
  br i1 %1733, label %1861, label %1734

1734:                                             ; preds = %1724
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %24, i8 0, i64 56, i1 false)
  store i8 19, ptr %102, align 1, !tbaa !193
  store i16 1, ptr %103, align 2, !tbaa !194
  store i32 -1, ptr %104, align 4, !tbaa !166
  %1735 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %1736 = getelementptr inbounds %struct.sv, ptr %1735, i64 0, i32 2
  %1737 = load i32, ptr %1736, align 4, !tbaa !62
  %1738 = and i32 %1737, 268435456
  %1739 = icmp eq i32 %1738, 0
  br i1 %1739, label %1740, label %1745

1740:                                             ; preds = %1734
  %1741 = load ptr, ptr %1735, align 8, !tbaa !63
  %1742 = getelementptr inbounds %struct.xpv, ptr %1741, i64 0, i32 3
  %1743 = load i64, ptr %1742, align 8, !tbaa !9
  %1744 = icmp ult i64 %1743, 25
  br i1 %1744, label %1745, label %1748

1745:                                             ; preds = %1740, %1734
  %1746 = call ptr @Perl_sv_grow(ptr noundef nonnull %1735, i64 noundef 25) #21
  %1747 = load ptr, ptr %1735, align 8, !tbaa !63
  br label %1748

1748:                                             ; preds = %1740, %1745
  %1749 = phi ptr [ %1741, %1740 ], [ %1747, %1745 ]
  %1750 = getelementptr inbounds %struct.xpv, ptr %1749, i64 0, i32 2
  store i64 0, ptr %1750, align 8, !tbaa !72
  %1751 = getelementptr inbounds %struct.xpvinvlist, ptr %1749, i64 0, i32 5
  store i64 -1, ptr %1751, align 8, !tbaa !71
  %1752 = getelementptr inbounds %struct.xpvinvlist, ptr %1749, i64 0, i32 4
  store i64 0, ptr %1752, align 8, !tbaa !71
  %1753 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %1735) #21
  store ptr %1753, ptr %105, align 8, !tbaa !195
  %1754 = load ptr, ptr %1753, align 8, !tbaa !63
  %1755 = getelementptr inbounds %struct.xpv, ptr %1754, i64 0, i32 3
  %1756 = load i64, ptr %1755, align 8, !tbaa !9
  %1757 = icmp eq i64 %1756, 0
  %1758 = getelementptr inbounds %struct.xpv, ptr %1754, i64 0, i32 2
  %1759 = load i64, ptr %1758, align 8, !tbaa !72
  %1760 = select i1 %1757, i64 %1759, i64 %1756
  %1761 = lshr i64 %1760, 3
  %1762 = add nsw i64 %1761, -1
  %1763 = icmp eq i64 %1759, 0
  br i1 %1763, label %1771, label %1764

1764:                                             ; preds = %1748
  %1765 = lshr i64 %1759, 3
  %1766 = getelementptr %struct.xpvinvlist, ptr %1754, i64 0, i32 6
  %1767 = load i8, ptr %1766, align 1, !tbaa !57, !range !59, !noundef !60
  %1768 = zext i8 %1767 to i64
  %1769 = sub nsw i64 %1765, %1768
  %1770 = icmp eq i64 %1769, 0
  br i1 %1770, label %1771, label %1775

1771:                                             ; preds = %1764, %1748
  %1772 = getelementptr i8, ptr %1753, i64 16
  %1773 = load ptr, ptr %1772, align 8, !tbaa !9
  %1774 = getelementptr inbounds %struct.xpvinvlist, ptr %1754, i64 0, i32 6
  store i64 0, ptr %1773, align 8, !tbaa !71
  store i8 0, ptr %1774, align 1, !tbaa !57
  br label %1799

1775:                                             ; preds = %1764
  %1776 = add nsw i64 %1769, -1
  %1777 = getelementptr i8, ptr %1753, i64 16
  %1778 = load ptr, ptr %1777, align 8, !tbaa !9
  %1779 = getelementptr inbounds i64, ptr %1778, i64 %1768
  %1780 = getelementptr inbounds i64, ptr %1779, i64 %1776
  %1781 = load i64, ptr %1780, align 8, !tbaa !71
  %1782 = icmp ne i64 %1781, 0
  %1783 = and i64 %1776, 1
  %1784 = icmp eq i64 %1783, 0
  %1785 = or i1 %1784, %1782
  br i1 %1785, label %1786, label %1795

1786:                                             ; preds = %1775
  %1787 = select i1 %1784, i32 116, i32 102
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.226, i64 noundef %1781, i64 noundef 0, i32 noundef %1787) #21
  %1788 = load ptr, ptr %1753, align 8, !tbaa !63
  %1789 = getelementptr inbounds %struct.xpvinvlist, ptr %1788, i64 0, i32 6
  %1790 = load i8, ptr %1789, align 1, !tbaa !57, !range !59
  %1791 = load i64, ptr %1780, align 8, !tbaa !71
  %1792 = icmp eq i64 %1791, 0
  br i1 %1792, label %1793, label %1799

1793:                                             ; preds = %1786
  %1794 = zext i8 %1790 to i64
  br label %1795

1795:                                             ; preds = %1793, %1775
  %1796 = phi i64 [ %1794, %1793 ], [ %1768, %1775 ]
  %1797 = phi ptr [ %1788, %1793 ], [ %1754, %1775 ]
  %1798 = add nsw i64 %1776, %1796
  br label %1848

1799:                                             ; preds = %1786, %1771
  %1800 = phi ptr [ %1754, %1771 ], [ %1788, %1786 ]
  %1801 = phi i64 [ 0, %1771 ], [ %1769, %1786 ]
  %1802 = phi i8 [ 0, %1771 ], [ %1790, %1786 ]
  %1803 = phi ptr [ %1773, %1771 ], [ %1779, %1786 ]
  %1804 = add nsw i64 %1801, 2
  %1805 = icmp ult i64 %1762, %1804
  br i1 %1805, label %1806, label %1836

1806:                                             ; preds = %1799
  %1807 = getelementptr inbounds %struct.sv, ptr %1753, i64 0, i32 2
  %1808 = load i32, ptr %1807, align 4, !tbaa !62
  %1809 = and i32 %1808, 268435456
  %1810 = icmp eq i32 %1809, 0
  br i1 %1810, label %1814, label %1811

1811:                                             ; preds = %1806
  %1812 = shl i64 %1804, 3
  %1813 = add i64 %1812, 8
  br label %1820

1814:                                             ; preds = %1806
  %1815 = getelementptr inbounds %struct.xpv, ptr %1800, i64 0, i32 3
  %1816 = load i64, ptr %1815, align 8, !tbaa !9
  %1817 = shl i64 %1804, 3
  %1818 = add i64 %1817, 8
  %1819 = icmp ult i64 %1816, %1818
  br i1 %1819, label %1820, label %1824

1820:                                             ; preds = %1814, %1811
  %1821 = phi i64 [ %1813, %1811 ], [ %1818, %1814 ]
  %1822 = call ptr @Perl_sv_grow(ptr noundef nonnull %1753, i64 noundef %1821) #21
  %1823 = load ptr, ptr %1753, align 8, !tbaa !63
  br label %1824

1824:                                             ; preds = %1820, %1814
  %1825 = phi ptr [ %1800, %1814 ], [ %1823, %1820 ]
  %1826 = zext i8 %1802 to i64
  %1827 = add nuw nsw i64 %1804, %1826
  %1828 = shl i64 %1827, 3
  %1829 = getelementptr inbounds %struct.xpv, ptr %1825, i64 0, i32 2
  store i64 %1828, ptr %1829, align 8, !tbaa !72
  %1830 = getelementptr i8, ptr %1753, i64 16
  %1831 = load ptr, ptr %1830, align 8, !tbaa !9
  %1832 = getelementptr i8, ptr %1825, i64 48
  %1833 = load i8, ptr %1832, align 1, !tbaa !57, !range !59, !noundef !60
  %1834 = zext i8 %1833 to i64
  %1835 = getelementptr inbounds i64, ptr %1831, i64 %1834
  br label %1841

1836:                                             ; preds = %1799
  %1837 = zext i8 %1802 to i64
  %1838 = add nuw nsw i64 %1804, %1837
  %1839 = shl i64 %1838, 3
  %1840 = getelementptr inbounds %struct.xpv, ptr %1800, i64 0, i32 2
  store i64 %1839, ptr %1840, align 8, !tbaa !72
  br label %1841

1841:                                             ; preds = %1836, %1824
  %1842 = phi i64 [ %1837, %1836 ], [ %1826, %1824 ]
  %1843 = phi ptr [ %1800, %1836 ], [ %1825, %1824 ]
  %1844 = phi ptr [ %1803, %1836 ], [ %1835, %1824 ]
  %1845 = getelementptr inbounds i64, ptr %1844, i64 %1801
  store i64 0, ptr %1845, align 8, !tbaa !71
  %1846 = add nsw i64 %1801, 1
  %1847 = add nuw nsw i64 %1846, %1842
  br label %1848

1848:                                             ; preds = %1795, %1841
  %1849 = phi i64 [ %1798, %1795 ], [ %1847, %1841 ]
  %1850 = phi i64 [ %1776, %1795 ], [ %1846, %1841 ]
  %1851 = phi ptr [ %1797, %1795 ], [ %1843, %1841 ]
  %1852 = icmp eq i64 %1850, 0
  %1853 = shl i64 %1849, 3
  %1854 = select i1 %1852, i64 0, i64 %1853
  %1855 = getelementptr inbounds %struct.xpv, ptr %1851, i64 0, i32 2
  store i64 %1854, ptr %1855, align 8, !tbaa !72
  %1856 = load i8, ptr %24, align 8, !tbaa !196
  %1857 = or i8 %1856, 1
  store i8 %1857, ptr %24, align 8, !tbaa !196
  %1858 = load i32, ptr %95, align 8, !tbaa !100
  %1859 = icmp eq i32 %1858, 0
  %1860 = select i1 %1859, i32 0, i32 536870911
  store i32 %1860, ptr %106, align 8
  store ptr %24, ptr %107, align 8, !tbaa !197
  br label %1861

1861:                                             ; preds = %1848, %1724
  %1862 = phi i32 [ 2048, %1848 ], [ 0, %1724 ]
  %1863 = and i32 %1691, 8192
  %1864 = or i32 %1862, %1863
  %1865 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef %2, ptr noundef nonnull %22, ptr noundef %1730, ptr noundef nonnull %17, i32 noundef %145, i32 noundef %146, i32 noundef %1864, i32 noundef %1687)
  %1866 = call i64 @llvm.smin.i64(i64 %1697, i64 %1865)
  %1867 = load i64, ptr %22, align 8, !tbaa !71
  %1868 = icmp eq i64 %1867, 9223372036854775807
  %1869 = add nsw i64 %1867, %1865
  %1870 = call i64 @llvm.smax.i64(i64 %1696, i64 %1869)
  %1871 = select i1 %1868, i64 9223372036854775807, i64 %1870
  %1872 = select i1 %1868, i32 1, i32 %1694
  %1873 = select i1 %1868, i32 1, i32 %1693
  store ptr %1730, ptr %16, align 8, !tbaa !5
  %1874 = load i32, ptr %108, align 8, !tbaa !199
  %1875 = and i32 %1874, 384
  %1876 = icmp ne i32 %1875, 0
  %1877 = zext i1 %1876 to i32
  %1878 = add nsw i32 %1692, %1877
  %1879 = and i32 %1874, 32768
  %1880 = icmp eq i32 %1879, 0
  br i1 %1880, label %1889, label %1881

1881:                                             ; preds = %1861
  %1882 = icmp sgt i64 %1695, %1865
  %1883 = add nsw i64 %1866, %150
  %1884 = select i1 %1882, i64 %1883, i64 %1695
  %1885 = and i32 %1691, -1025
  br i1 %76, label %1900, label %1886

1886:                                             ; preds = %1881
  %1887 = load i32, ptr %77, align 8, !tbaa !199
  %1888 = or i32 %1887, 32768
  store i32 %1888, ptr %77, align 8, !tbaa !199
  br label %1890

1889:                                             ; preds = %1861
  br i1 %76, label %1900, label %1890

1890:                                             ; preds = %1886, %1889
  %1891 = phi i32 [ %1885, %1886 ], [ %1691, %1889 ]
  %1892 = phi i64 [ %1884, %1886 ], [ %1695, %1889 ]
  %1893 = and i32 %1874, 512
  %1894 = icmp eq i32 %1893, 0
  br i1 %1894, label %1898, label %1895

1895:                                             ; preds = %1890
  %1896 = load i32, ptr %77, align 8, !tbaa !199
  %1897 = or i32 %1896, 512
  store i32 %1897, ptr %77, align 8, !tbaa !199
  br label %1898

1898:                                             ; preds = %1895, %1890
  %1899 = load i32, ptr %98, align 4, !tbaa !248
  store i32 %1899, ptr %97, align 4, !tbaa !248
  br label %1900

1900:                                             ; preds = %1881, %1898, %1889
  %1901 = phi i32 [ %1891, %1898 ], [ %1691, %1889 ], [ %1885, %1881 ]
  %1902 = phi i64 [ %1892, %1898 ], [ %1695, %1889 ], [ %1884, %1881 ]
  %1903 = and i32 %1901, 6144
  %1904 = icmp eq i32 %1903, 0
  br i1 %1904, label %2067, label %1905

1905:                                             ; preds = %1900
  %1906 = load i8, ptr %102, align 1, !tbaa !250
  %1907 = icmp eq i8 %1906, 19
  %1908 = load i16, ptr %103, align 2
  %1909 = icmp eq i16 %1908, 1
  %1910 = select i1 %1907, i1 %1909, i1 false
  br i1 %1910, label %1911, label %1914

1911:                                             ; preds = %1905
  %1912 = load ptr, ptr %105, align 8, !tbaa !195
  %1913 = load i8, ptr %24, align 8, !tbaa !252
  br label %1918

1914:                                             ; preds = %1905
  %1915 = call fastcc ptr @S_get_ANYOF_cp_list_for_ssc(ptr noundef %0, ptr noundef nonnull %24)
  %1916 = load i8, ptr %24, align 8, !tbaa !252
  %1917 = and i8 %1916, 18
  br label %1918

1918:                                             ; preds = %1914, %1911
  %1919 = phi i8 [ %1913, %1911 ], [ %1916, %1914 ]
  %1920 = phi ptr [ %1912, %1911 ], [ %1915, %1914 ]
  %1921 = phi i8 [ %1913, %1911 ], [ %1917, %1914 ]
  %1922 = load i8, ptr %21, align 8, !tbaa !196
  %1923 = or i8 %1922, %1921
  store i8 %1923, ptr %21, align 8, !tbaa !196
  %1924 = and i8 %1919, 1
  %1925 = icmp eq i8 %1924, 0
  br i1 %1925, label %1935, label %1926

1926:                                             ; preds = %1918
  %1927 = load i8, ptr %102, align 1, !tbaa !250
  %1928 = icmp eq i8 %1927, 19
  br i1 %1928, label %1929, label %2065

1929:                                             ; preds = %1926
  %1930 = load i16, ptr %103, align 2, !tbaa !253
  %1931 = icmp ne i16 %1930, 1
  %1932 = and i8 %1919, 8
  %1933 = icmp eq i8 %1932, 0
  %1934 = or i1 %1933, %1931
  br i1 %1934, label %2065, label %1938

1935:                                             ; preds = %1918
  %1936 = and i8 %1919, 8
  %1937 = icmp eq i8 %1936, 0
  br i1 %1937, label %2065, label %1938

1938:                                             ; preds = %1935, %1929
  %1939 = load i32, ptr %106, align 8, !tbaa !254
  %1940 = load i32, ptr %96, align 8, !tbaa !256
  %1941 = or i32 %1940, %1939
  store i32 %1941, ptr %96, align 8, !tbaa !256
  %1942 = icmp eq i32 %1941, 0
  br i1 %1942, label %2065, label %1943

1943:                                             ; preds = %1938
  %1944 = load ptr, ptr %94, align 8, !tbaa !195
  %1945 = and i32 %1941, 3
  %1946 = icmp eq i32 %1945, 3
  br i1 %1946, label %1947, label %1950

1947:                                             ; preds = %1943
  %1948 = call ptr @Perl__add_range_to_invlist(ptr noundef %1944, i64 noundef 0, i64 noundef -1)
  %1949 = and i32 %1941, -4
  br label %1950

1950:                                             ; preds = %1947, %1943
  %1951 = phi i32 [ %1941, %1943 ], [ %1949, %1947 ]
  %1952 = phi ptr [ %1944, %1943 ], [ %1948, %1947 ]
  %1953 = and i32 %1951, 12
  %1954 = icmp eq i32 %1953, 12
  br i1 %1954, label %1955, label %1958

1955:                                             ; preds = %1950
  %1956 = call ptr @Perl__add_range_to_invlist(ptr noundef %1952, i64 noundef 0, i64 noundef -1)
  %1957 = and i32 %1951, -13
  br label %1958

1958:                                             ; preds = %1955, %1950
  %1959 = phi i32 [ %1951, %1950 ], [ %1957, %1955 ]
  %1960 = phi ptr [ %1952, %1950 ], [ %1956, %1955 ]
  %1961 = and i32 %1959, 48
  %1962 = icmp eq i32 %1961, 48
  br i1 %1962, label %1963, label %1966

1963:                                             ; preds = %1958
  %1964 = call ptr @Perl__add_range_to_invlist(ptr noundef %1960, i64 noundef 0, i64 noundef -1)
  %1965 = and i32 %1959, -49
  br label %1966

1966:                                             ; preds = %1963, %1958
  %1967 = phi i32 [ %1959, %1958 ], [ %1965, %1963 ]
  %1968 = phi ptr [ %1960, %1958 ], [ %1964, %1963 ]
  %1969 = and i32 %1967, 192
  %1970 = icmp eq i32 %1969, 192
  br i1 %1970, label %1971, label %1974

1971:                                             ; preds = %1966
  %1972 = call ptr @Perl__add_range_to_invlist(ptr noundef %1968, i64 noundef 0, i64 noundef -1)
  %1973 = and i32 %1967, -193
  br label %1974

1974:                                             ; preds = %1971, %1966
  %1975 = phi i32 [ %1967, %1966 ], [ %1973, %1971 ]
  %1976 = phi ptr [ %1968, %1966 ], [ %1972, %1971 ]
  %1977 = and i32 %1975, 768
  %1978 = icmp eq i32 %1977, 768
  br i1 %1978, label %1979, label %1982

1979:                                             ; preds = %1974
  %1980 = call ptr @Perl__add_range_to_invlist(ptr noundef %1976, i64 noundef 0, i64 noundef -1)
  %1981 = and i32 %1975, -769
  br label %1982

1982:                                             ; preds = %1979, %1974
  %1983 = phi i32 [ %1975, %1974 ], [ %1981, %1979 ]
  %1984 = phi ptr [ %1976, %1974 ], [ %1980, %1979 ]
  %1985 = and i32 %1983, 3072
  %1986 = icmp eq i32 %1985, 3072
  br i1 %1986, label %1987, label %1990

1987:                                             ; preds = %1982
  %1988 = call ptr @Perl__add_range_to_invlist(ptr noundef %1984, i64 noundef 0, i64 noundef -1)
  %1989 = and i32 %1983, -3073
  br label %1990

1990:                                             ; preds = %1987, %1982
  %1991 = phi i32 [ %1983, %1982 ], [ %1989, %1987 ]
  %1992 = phi ptr [ %1984, %1982 ], [ %1988, %1987 ]
  %1993 = and i32 %1991, 12288
  %1994 = icmp eq i32 %1993, 12288
  br i1 %1994, label %1995, label %1998

1995:                                             ; preds = %1990
  %1996 = call ptr @Perl__add_range_to_invlist(ptr noundef %1992, i64 noundef 0, i64 noundef -1)
  %1997 = and i32 %1991, -12289
  br label %1998

1998:                                             ; preds = %1995, %1990
  %1999 = phi i32 [ %1991, %1990 ], [ %1997, %1995 ]
  %2000 = phi ptr [ %1992, %1990 ], [ %1996, %1995 ]
  %2001 = and i32 %1999, 49152
  %2002 = icmp eq i32 %2001, 49152
  br i1 %2002, label %2003, label %2006

2003:                                             ; preds = %1998
  %2004 = call ptr @Perl__add_range_to_invlist(ptr noundef %2000, i64 noundef 0, i64 noundef -1)
  %2005 = and i32 %1999, -49153
  br label %2006

2006:                                             ; preds = %2003, %1998
  %2007 = phi i32 [ %1999, %1998 ], [ %2005, %2003 ]
  %2008 = phi ptr [ %2000, %1998 ], [ %2004, %2003 ]
  %2009 = and i32 %2007, 196608
  %2010 = icmp eq i32 %2009, 196608
  br i1 %2010, label %2011, label %2014

2011:                                             ; preds = %2006
  %2012 = call ptr @Perl__add_range_to_invlist(ptr noundef %2008, i64 noundef 0, i64 noundef -1)
  %2013 = and i32 %2007, -196609
  br label %2014

2014:                                             ; preds = %2011, %2006
  %2015 = phi i32 [ %2007, %2006 ], [ %2013, %2011 ]
  %2016 = phi ptr [ %2008, %2006 ], [ %2012, %2011 ]
  %2017 = and i32 %2015, 786432
  %2018 = icmp eq i32 %2017, 786432
  br i1 %2018, label %2019, label %2022

2019:                                             ; preds = %2014
  %2020 = call ptr @Perl__add_range_to_invlist(ptr noundef %2016, i64 noundef 0, i64 noundef -1)
  %2021 = and i32 %2015, -786433
  br label %2022

2022:                                             ; preds = %2019, %2014
  %2023 = phi i32 [ %2015, %2014 ], [ %2021, %2019 ]
  %2024 = phi ptr [ %2016, %2014 ], [ %2020, %2019 ]
  %2025 = and i32 %2023, 3145728
  %2026 = icmp eq i32 %2025, 3145728
  br i1 %2026, label %2027, label %2030

2027:                                             ; preds = %2022
  %2028 = call ptr @Perl__add_range_to_invlist(ptr noundef %2024, i64 noundef 0, i64 noundef -1)
  %2029 = and i32 %2023, -3145729
  br label %2030

2030:                                             ; preds = %2027, %2022
  %2031 = phi i32 [ %2023, %2022 ], [ %2029, %2027 ]
  %2032 = phi ptr [ %2024, %2022 ], [ %2028, %2027 ]
  %2033 = and i32 %2031, 12582912
  %2034 = icmp eq i32 %2033, 12582912
  br i1 %2034, label %2035, label %2038

2035:                                             ; preds = %2030
  %2036 = call ptr @Perl__add_range_to_invlist(ptr noundef %2032, i64 noundef 0, i64 noundef -1)
  %2037 = and i32 %2031, -12582913
  br label %2038

2038:                                             ; preds = %2035, %2030
  %2039 = phi i32 [ %2031, %2030 ], [ %2037, %2035 ]
  %2040 = phi ptr [ %2032, %2030 ], [ %2036, %2035 ]
  %2041 = and i32 %2039, 50331648
  %2042 = icmp eq i32 %2041, 50331648
  br i1 %2042, label %2043, label %2046

2043:                                             ; preds = %2038
  %2044 = call ptr @Perl__add_range_to_invlist(ptr noundef %2040, i64 noundef 0, i64 noundef -1)
  %2045 = and i32 %2039, -50331649
  br label %2046

2046:                                             ; preds = %2043, %2038
  %2047 = phi i32 [ %2039, %2038 ], [ %2045, %2043 ]
  %2048 = phi ptr [ %2040, %2038 ], [ %2044, %2043 ]
  %2049 = and i32 %2047, 201326592
  %2050 = icmp eq i32 %2049, 201326592
  br i1 %2050, label %2051, label %2054

2051:                                             ; preds = %2046
  %2052 = call ptr @Perl__add_range_to_invlist(ptr noundef %2048, i64 noundef 0, i64 noundef -1)
  %2053 = and i32 %2047, -201326593
  br label %2054

2054:                                             ; preds = %2051, %2046
  %2055 = phi i32 [ %2047, %2046 ], [ %2053, %2051 ]
  %2056 = phi ptr [ %2048, %2046 ], [ %2052, %2051 ]
  %2057 = and i32 %2055, 805306368
  %2058 = icmp eq i32 %2057, 805306368
  br i1 %2058, label %2059, label %2062

2059:                                             ; preds = %2054
  %2060 = call ptr @Perl__add_range_to_invlist(ptr noundef %2056, i64 noundef 0, i64 noundef -1)
  %2061 = and i32 %2055, -805306369
  br label %2062

2062:                                             ; preds = %2059, %2054
  %2063 = phi i32 [ %2055, %2054 ], [ %2061, %2059 ]
  %2064 = phi ptr [ %2056, %2054 ], [ %2060, %2059 ]
  store ptr %2064, ptr %94, align 8, !tbaa !195
  store i32 %2063, ptr %96, align 8, !tbaa !254
  br label %2065

2065:                                             ; preds = %2062, %1926, %1929, %1935, %1938
  %2066 = load ptr, ptr %94, align 8, !tbaa !195
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %2066, ptr noundef %1920, i1 noundef zeroext false, ptr noundef nonnull %94)
  br label %2067

2067:                                             ; preds = %2065, %1900
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %24) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %22) #21
  %2068 = getelementptr inbounds %struct.regnode, ptr %1730, i64 0, i32 1
  %2069 = load i8, ptr %2068, align 1, !tbaa !164
  %2070 = icmp eq i8 %2069, %1564
  br i1 %2070, label %1688, label %2071, !llvm.loop !257

2071:                                             ; preds = %2067
  %2072 = and i32 %1901, 1024
  br label %2073

2073:                                             ; preds = %2071, %1681
  %2074 = phi i32 [ %2072, %2071 ], [ %1652, %1681 ]
  %2075 = phi i64 [ %1728, %2071 ], [ 0, %1681 ]
  %2076 = phi i64 [ %1700, %2071 ], [ 0, %1681 ]
  %2077 = phi i64 [ %1866, %2071 ], [ 9223372036854775807, %1681 ]
  %2078 = phi i64 [ %1871, %2071 ], [ 0, %1681 ]
  %2079 = phi i64 [ %1902, %2071 ], [ %157, %1681 ]
  %2080 = phi i32 [ %1872, %2071 ], [ %154, %1681 ]
  %2081 = phi i32 [ %1873, %2071 ], [ %153, %1681 ]
  %2082 = phi i32 [ %1878, %2071 ], [ %151, %1681 ]
  %2083 = phi i32 [ %1901, %2071 ], [ %148, %1681 ]
  %2084 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2075
  %2085 = icmp ult i64 %2076, 2
  %2086 = select i1 %1649, i1 %2085, i1 false
  %2087 = select i1 %2086, i64 0, i64 %2077
  %2088 = icmp eq i32 %2074, 0
  br i1 %2088, label %2102, label %2089

2089:                                             ; preds = %2073
  %2090 = load i64, ptr %5, align 8, !tbaa !258
  %2091 = add nsw i64 %2090, %2087
  store i64 %2091, ptr %5, align 8, !tbaa !258
  %2092 = load i64, ptr %88, align 8, !tbaa !249
  %2093 = sub nsw i64 %2078, %2087
  %2094 = sub nsw i64 9223372036854775807, %2093
  %2095 = icmp slt i64 %2092, %2094
  %2096 = add nsw i64 %2092, %2093
  %2097 = select i1 %2095, i64 %2096, i64 9223372036854775807
  store i64 %2097, ptr %88, align 8, !tbaa !249
  %2098 = icmp ne i64 %2078, %2087
  %2099 = icmp ne i32 %2081, 0
  %2100 = select i1 %2098, i1 true, i1 %2099
  br i1 %2100, label %2101, label %2102

2101:                                             ; preds = %2089
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %2102

2102:                                             ; preds = %2101, %2089, %2073
  %2103 = add nsw i64 %2087, %150
  %2104 = icmp eq i64 %152, 9223372036854775807
  %2105 = add i64 %2078, %152
  %2106 = sub i64 %2105, %2087
  %2107 = call i64 @llvm.umin.i64(i64 %2106, i64 9223372036854775807)
  %2108 = select i1 %2104, i64 9223372036854775807, i64 %2107
  %2109 = and i32 %2083, 4096
  %2110 = icmp eq i32 %2109, 0
  br i1 %2110, label %2117, label %2111

2111:                                             ; preds = %2102
  %2112 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %2112, ptr noundef nonnull %21)
  %2113 = icmp eq i64 %2087, 0
  br i1 %2113, label %2131, label %2114

2114:                                             ; preds = %2111
  %2115 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %2115, ptr noundef %147)
  %2116 = and i32 %2083, -6145
  br label %2131

2117:                                             ; preds = %2102
  %2118 = and i32 %2083, 2048
  %2119 = icmp eq i32 %2118, 0
  br i1 %2119, label %2131, label %2120

2120:                                             ; preds = %2117
  %2121 = icmp eq i64 %2087, 0
  br i1 %2121, label %2125, label %2122

2122:                                             ; preds = %2120
  %2123 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %2123, ptr noundef nonnull %21)
  %2124 = and i32 %2083, -6145
  br label %2131

2125:                                             ; preds = %2120
  %2126 = call ptr @Perl_safesysmalloc(i64 noundef 56) #21
  call void @Perl_save_pushptr(ptr noundef %2126, i32 noundef 10) #21
  %2127 = load ptr, ptr %82, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2126, ptr noundef nonnull align 8 dereferenceable(56) %2127, i64 56, i1 false), !tbaa.struct !212
  %2128 = and i32 %2083, -6145
  %2129 = load ptr, ptr %82, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2129, ptr noundef nonnull align 8 dereferenceable(56) %21, i64 56, i1 false), !tbaa.struct !212
  %2130 = or i32 %2128, 4096
  br label %2131

2131:                                             ; preds = %2117, %2125, %2122, %2111, %2114
  %2132 = phi i32 [ %2116, %2114 ], [ %2083, %2111 ], [ %2124, %2122 ], [ %2130, %2125 ], [ %2083, %2117 ]
  %2133 = phi ptr [ %147, %2114 ], [ %147, %2111 ], [ %147, %2122 ], [ %2126, %2125 ], [ %147, %2117 ]
  %2134 = load i8, ptr %1496, align 1, !tbaa !164
  %2135 = icmp eq i8 %2134, 30
  br i1 %2135, label %2136, label %2328

2136:                                             ; preds = %2131
  %2137 = icmp eq ptr %156, null
  br i1 %2137, label %2138, label %2145

2138:                                             ; preds = %2136
  %2139 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.216, i32 noundef 1) #21
  %2140 = getelementptr inbounds %struct.sv, ptr %2139, i64 0, i32 2
  %2141 = load i32, ptr %2140, align 4, !tbaa !62
  %2142 = and i32 %2141, 256
  %2143 = icmp eq i32 %2142, 0
  br i1 %2143, label %2144, label %2145

2144:                                             ; preds = %2138
  call void @Perl_sv_setiv(ptr noundef nonnull %2139, i64 noundef 65536) #21
  br label %2145

2145:                                             ; preds = %2138, %2144, %2136
  %2146 = phi ptr [ %156, %2136 ], [ %2139, %2138 ], [ %2139, %2144 ]
  %2147 = getelementptr inbounds %struct.sv, ptr %2146, i64 0, i32 2
  %2148 = load i32, ptr %2147, align 4, !tbaa !62
  %2149 = and i32 %2148, 2097408
  %2150 = icmp eq i32 %2149, 256
  br i1 %2150, label %2151, label %2155

2151:                                             ; preds = %2145
  %2152 = load ptr, ptr %2146, align 8, !tbaa !63
  %2153 = getelementptr inbounds %struct.xpviv, ptr %2152, i64 0, i32 4
  %2154 = load i64, ptr %2153, align 8, !tbaa !9
  br label %2157

2155:                                             ; preds = %2145
  %2156 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %2146, i32 noundef 2) #21
  br label %2157

2157:                                             ; preds = %2155, %2151
  %2158 = phi i64 [ %2154, %2151 ], [ %2156, %2155 ]
  %2159 = icmp sgt i64 %2158, -1
  br i1 %2159, label %2160, label %2328

2160:                                             ; preds = %2157
  %2161 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2075, i32 1
  %2162 = load i8, ptr %2161, align 1, !tbaa !164
  %2163 = icmp eq i8 %2162, 41
  br i1 %2163, label %2168, label %2164

2164:                                             ; preds = %2168, %2160
  %2165 = phi i64 [ %2075, %2160 ], [ %2174, %2168 ]
  %2166 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2165
  %2167 = icmp eq i64 %2075, 0
  br i1 %2167, label %2328, label %2180

2168:                                             ; preds = %2160, %2168
  %2169 = phi i64 [ %2174, %2168 ], [ %2075, %2160 ]
  %2170 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2169, i32 2
  %2171 = load i16, ptr %2170, align 2, !tbaa !168
  %2172 = icmp eq i16 %2171, 0
  %2173 = zext i16 %2171 to i64
  %2174 = add nsw i64 %2169, %2173
  %2175 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2174
  %2176 = select i1 %2172, ptr null, ptr %2175
  %2177 = getelementptr inbounds %struct.regnode, ptr %2176, i64 0, i32 1
  %2178 = load i8, ptr %2177, align 1, !tbaa !164
  %2179 = icmp eq i8 %2178, 41
  br i1 %2179, label %2168, label %2164, !llvm.loop !259

2180:                                             ; preds = %2164, %2282
  %2181 = phi ptr [ %2287, %2282 ], [ %1495, %2164 ]
  %2182 = phi ptr [ %2263, %2282 ], [ null, %2164 ]
  %2183 = phi ptr [ %2262, %2282 ], [ null, %2164 ]
  %2184 = phi i8 [ %2261, %2282 ], [ 0, %2164 ]
  %2185 = phi i32 [ %2260, %2282 ], [ 0, %2164 ]
  %2186 = getelementptr inbounds %struct.regnode, ptr %2181, i64 1
  %2187 = getelementptr inbounds %struct.regnode, ptr %2181, i64 1, i32 1
  %2188 = load i8, ptr %2187, align 1, !tbaa !164
  switch i8 %2188, label %2246 [
    i8 40, label %2189
    i8 31, label %2192
    i8 37, label %2191
    i8 35, label %2191
    i8 36, label %2192
    i8 32, label %2192
    i8 38, label %2192
  ]

2189:                                             ; preds = %2180
  %2190 = icmp eq i8 %2184, 40
  br label %2199

2191:                                             ; preds = %2180, %2180
  br label %2192

2192:                                             ; preds = %2180, %2180, %2180, %2180, %2191
  %2193 = phi i8 [ 35, %2191 ], [ %2188, %2180 ], [ %2188, %2180 ], [ %2188, %2180 ], [ %2188, %2180 ]
  %2194 = icmp eq i8 %2184, 40
  br i1 %2194, label %2199, label %2195

2195:                                             ; preds = %2192
  %2196 = icmp eq i8 %2184, %2193
  %2197 = icmp ult i32 %2185, 65535
  %2198 = select i1 %2196, i1 %2197, i1 false
  br i1 %2198, label %2206, label %2246

2199:                                             ; preds = %2189, %2192
  %2200 = phi i1 [ %2190, %2189 ], [ true, %2192 ]
  %2201 = phi i1 [ true, %2189 ], [ false, %2192 ]
  %2202 = phi i8 [ 40, %2189 ], [ %2193, %2192 ]
  %2203 = icmp ult i32 %2185, 65535
  br i1 %2203, label %2204, label %2246

2204:                                             ; preds = %2199
  %2205 = icmp eq ptr %2182, null
  br i1 %2205, label %2210, label %2236

2206:                                             ; preds = %2195
  %2207 = icmp eq ptr %2182, null
  %2208 = select i1 %2207, ptr %2183, ptr %2181
  %2209 = select i1 %2207, ptr %2181, ptr %2182
  br label %2239

2210:                                             ; preds = %2204
  br i1 %2201, label %2211, label %2239

2211:                                             ; preds = %2210
  %2212 = zext i8 %2188 to i64
  %2213 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2212
  %2214 = load i8, ptr %2213, align 1, !tbaa !9
  %2215 = icmp eq i8 %2214, 0
  br i1 %2215, label %2219, label %2216

2216:                                             ; preds = %2211
  %2217 = getelementptr inbounds %struct.regnode, ptr %2181, i64 2
  %2218 = load i32, ptr %2217, align 4, !tbaa !166
  br label %2223

2219:                                             ; preds = %2211
  %2220 = getelementptr inbounds %struct.regnode, ptr %2181, i64 1, i32 2
  %2221 = load i16, ptr %2220, align 2, !tbaa !168
  %2222 = zext i16 %2221 to i32
  br label %2223

2223:                                             ; preds = %2219, %2216
  %2224 = phi i32 [ %2218, %2216 ], [ %2222, %2219 ]
  %2225 = icmp eq i32 %2224, 0
  br i1 %2225, label %2235, label %2226

2226:                                             ; preds = %2223
  %2227 = sext i32 %2224 to i64
  %2228 = getelementptr inbounds %struct.regnode, ptr %2186, i64 %2227
  %2229 = icmp eq ptr %2228, %2166
  br i1 %2229, label %2235, label %2230

2230:                                             ; preds = %2226
  %2231 = getelementptr inbounds %struct.regnode, ptr %2186, i64 %2227, i32 1
  %2232 = load i8, ptr %2231, align 1, !tbaa !164
  switch i8 %2232, label %2234 [
    i8 0, label %2235
    i8 40, label %2239
    i8 31, label %2239
    i8 37, label %2233
    i8 35, label %2233
    i8 36, label %2239
    i8 32, label %2239
    i8 38, label %2239
  ]

2233:                                             ; preds = %2230, %2230
  br label %2239

2234:                                             ; preds = %2230
  br label %2239

2235:                                             ; preds = %2230, %2223, %2226
  br label %2239

2236:                                             ; preds = %2204
  %2237 = freeze i1 %2200
  %2238 = select i1 %2237, i8 %2202, i8 %2184
  br label %2239

2239:                                             ; preds = %2230, %2230, %2230, %2230, %2236, %2206, %2234, %2230, %2233, %2235, %2210
  %2240 = phi i8 [ %2202, %2210 ], [ %2184, %2234 ], [ %2184, %2235 ], [ 35, %2233 ], [ %2232, %2230 ], [ %2184, %2206 ], [ %2238, %2236 ], [ %2232, %2230 ], [ %2232, %2230 ], [ %2232, %2230 ], [ %2232, %2230 ]
  %2241 = phi ptr [ %2183, %2210 ], [ %2183, %2234 ], [ %2183, %2235 ], [ %2183, %2233 ], [ %2183, %2230 ], [ %2208, %2206 ], [ %2181, %2236 ], [ %2183, %2230 ], [ %2183, %2230 ], [ %2183, %2230 ], [ %2183, %2230 ]
  %2242 = phi ptr [ %2181, %2210 ], [ null, %2234 ], [ %2181, %2235 ], [ %2181, %2233 ], [ %2181, %2230 ], [ %2209, %2206 ], [ %2182, %2236 ], [ %2181, %2230 ], [ %2181, %2230 ], [ %2181, %2230 ], [ %2181, %2230 ]
  %2243 = icmp ne ptr %2242, null
  %2244 = zext i1 %2243 to i32
  %2245 = add nuw nsw i32 %2185, %2244
  br label %2259

2246:                                             ; preds = %2180, %2199, %2195
  %2247 = phi i1 [ false, %2199 ], [ false, %2195 ], [ true, %2180 ]
  %2248 = phi i8 [ %2202, %2199 ], [ %2193, %2195 ], [ 0, %2180 ]
  %2249 = icmp eq ptr %2183, null
  br i1 %2249, label %2254, label %2250

2250:                                             ; preds = %2246
  switch i8 %2184, label %2251 [
    i8 40, label %2254
    i8 0, label %2254
  ]

2251:                                             ; preds = %2250
  %2252 = zext i8 %2184 to i32
  %2253 = call fastcc i32 @S_make_trie(ptr noundef %0, ptr noundef %1495, ptr noundef %2182, ptr noundef nonnull %2181, ptr noundef %2166, i32 noundef %2185, i32 noundef %2252)
  br label %2254

2254:                                             ; preds = %2251, %2250, %2250, %2246
  br i1 %2247, label %2255, label %2259

2255:                                             ; preds = %2254
  %2256 = icmp eq ptr %2182, null
  %2257 = select i1 %2256, i32 %2185, i32 0
  %2258 = select i1 %2256, i8 %2184, i8 0
  br label %2259

2259:                                             ; preds = %2254, %2239, %2255
  %2260 = phi i32 [ %2245, %2239 ], [ 1, %2254 ], [ %2257, %2255 ]
  %2261 = phi i8 [ %2240, %2239 ], [ %2248, %2254 ], [ %2258, %2255 ]
  %2262 = phi ptr [ %2241, %2239 ], [ null, %2254 ], [ null, %2255 ]
  %2263 = phi ptr [ %2242, %2239 ], [ %2181, %2254 ], [ null, %2255 ]
  %2264 = getelementptr inbounds %struct.regnode, ptr %2181, i64 0, i32 1
  %2265 = load i8, ptr %2264, align 1, !tbaa !164
  %2266 = icmp ugt i8 %2265, 93
  br i1 %2266, label %2267, label %2270

2267:                                             ; preds = %2259
  %2268 = zext i8 %2265 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2268, i32 noundef 93) #21
  %2269 = load i8, ptr %2264, align 1, !tbaa !164
  br label %2270

2270:                                             ; preds = %2267, %2259
  %2271 = phi i8 [ %2269, %2267 ], [ %2265, %2259 ]
  %2272 = zext i8 %2271 to i64
  %2273 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2272
  %2274 = load i8, ptr %2273, align 1, !tbaa !9
  %2275 = icmp eq i8 %2274, 0
  br i1 %2275, label %2278, label %2276

2276:                                             ; preds = %2270
  %2277 = load i32, ptr %2186, align 4, !tbaa !166
  br label %2282

2278:                                             ; preds = %2270
  %2279 = getelementptr inbounds %struct.regnode, ptr %2181, i64 0, i32 2
  %2280 = load i16, ptr %2279, align 2, !tbaa !168
  %2281 = zext i16 %2280 to i32
  br label %2282

2282:                                             ; preds = %2278, %2276
  %2283 = phi i32 [ %2277, %2276 ], [ %2281, %2278 ]
  %2284 = icmp eq i32 %2283, 0
  %2285 = sext i32 %2283 to i64
  %2286 = getelementptr inbounds %struct.regnode, ptr %2181, i64 %2285
  %2287 = select i1 %2284, ptr null, ptr %2286
  %2288 = icmp eq ptr %2287, %2084
  br i1 %2288, label %2289, label %2180, !llvm.loop !260

2289:                                             ; preds = %2282
  %2290 = icmp ne ptr %2262, null
  %2291 = zext i8 %2261 to i32
  %2292 = icmp ne i8 %2261, 0
  %2293 = select i1 %2290, i1 %2292, i1 false
  br i1 %2293, label %2294, label %2328

2294:                                             ; preds = %2289
  %2295 = icmp eq i8 %2261, 40
  br i1 %2295, label %2314, label %2296

2296:                                             ; preds = %2294
  %2297 = call fastcc i32 @S_make_trie(ptr noundef %0, ptr noundef %1495, ptr noundef %2263, ptr noundef nonnull %2084, ptr noundef %2166, i32 noundef %2260, i32 noundef %2291)
  %2298 = icmp eq i32 %2297, 4
  %2299 = icmp eq ptr %1495, %2263
  %2300 = select i1 %2298, i1 %2299, i1 false
  br i1 %2300, label %2305, label %2301

2301:                                             ; preds = %2296
  %2302 = icmp eq ptr %69, %2263
  %2303 = icmp eq i32 %149, 0
  %2304 = select i1 %2302, i1 %2303, i1 false
  br i1 %2304, label %2307, label %2328

2305:                                             ; preds = %2296
  %2306 = icmp eq i32 %149, 0
  br i1 %2306, label %2307, label %2328

2307:                                             ; preds = %2301, %2305
  %2308 = or i32 %2132, 16384
  %2309 = icmp eq i64 %2075, %2165
  %2310 = select i1 %2299, i1 %2309, i1 false
  br i1 %2310, label %2311, label %2328

2311:                                             ; preds = %2307
  %2312 = load i32, ptr %109, align 8, !tbaa !131
  %2313 = and i32 %2312, -65
  store i32 %2313, ptr %109, align 8, !tbaa !131
  br label %2328

2314:                                             ; preds = %2294
  %2315 = icmp eq ptr %1495, %2263
  br i1 %2315, label %2316, label %2328

2316:                                             ; preds = %2314
  store i8 40, ptr %1496, align 1, !tbaa !164
  %2317 = trunc i64 %2165 to i16
  %2318 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  store i16 %2317, ptr %2318, align 2, !tbaa !168
  %2319 = icmp sgt i64 %2165, 1
  br i1 %2319, label %2320, label %2328

2320:                                             ; preds = %2316
  %2321 = getelementptr inbounds %struct.regnode, ptr %1495, i64 1
  br label %2322

2322:                                             ; preds = %2320, %2322
  %2323 = phi ptr [ %2326, %2322 ], [ %2321, %2320 ]
  %2324 = phi ptr [ %2323, %2322 ], [ %1495, %2320 ]
  %2325 = getelementptr inbounds %struct.regnode, ptr %2324, i64 1, i32 1
  store i8 92, ptr %2325, align 1, !tbaa !164
  %2326 = getelementptr inbounds %struct.regnode, ptr %2323, i64 1
  %2327 = icmp ult ptr %2326, %2166
  br i1 %2327, label %2322, label %2328, !llvm.loop !261

2328:                                             ; preds = %2322, %2164, %2316, %2157, %2307, %2311, %2305, %2301, %2314, %2289, %2131
  %2329 = phi ptr [ %156, %2131 ], [ %2146, %2289 ], [ %2146, %2314 ], [ %2146, %2301 ], [ %2146, %2305 ], [ %2146, %2311 ], [ %2146, %2307 ], [ %2146, %2157 ], [ %2146, %2316 ], [ %2146, %2164 ], [ %2146, %2322 ]
  %2330 = phi i32 [ %2132, %2131 ], [ %2132, %2289 ], [ %2132, %2314 ], [ %2132, %2301 ], [ %2132, %2305 ], [ %2308, %2311 ], [ %2308, %2307 ], [ %2132, %2157 ], [ %2132, %2316 ], [ %2132, %2164 ], [ %2132, %2322 ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %21) #21
  br label %5288, !llvm.loop !262

2331:                                             ; preds = %1642
  %2332 = icmp eq i8 %1564, 62
  br i1 %2332, label %2333, label %2335

2333:                                             ; preds = %2331
  %2334 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2
  store ptr %2334, ptr %16, align 8, !tbaa !5
  br label %5288, !llvm.loop !262

2335:                                             ; preds = %2331
  %2336 = getelementptr inbounds %struct.regnode, ptr %1495, i64 1
  store ptr %2336, ptr %16, align 8, !tbaa !5
  br label %5288, !llvm.loop !262

2337:                                             ; preds = %1574
  %2338 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %2339 = load i32, ptr %2338, align 4, !tbaa !166
  %2340 = load ptr, ptr %73, align 8, !tbaa !160
  %2341 = getelementptr inbounds %struct.regnode_2L, ptr %1495, i64 0, i32 4
  %2342 = load i32, ptr %2341, align 4, !tbaa !221
  %2343 = sext i32 %2342 to i64
  %2344 = getelementptr inbounds ptr, ptr %2340, i64 %2343
  store ptr %1495, ptr %2344, align 8, !tbaa !5
  %2345 = load ptr, ptr %74, align 8, !tbaa !153
  %2346 = add nsw i32 %2339, -1
  %2347 = sext i32 %2346 to i64
  %2348 = getelementptr inbounds ptr, ptr %2345, i64 %2347
  %2349 = load ptr, ptr %2348, align 8, !tbaa !5
  %2350 = load ptr, ptr %75, align 8, !tbaa !154
  %2351 = getelementptr inbounds ptr, ptr %2350, i64 %2347
  br label %2355

2352:                                             ; preds = %1574
  %2353 = load ptr, ptr %71, align 8, !tbaa !156
  %2354 = getelementptr inbounds %struct.regexp_internal, ptr %2353, i64 1
  br label %2355

2355:                                             ; preds = %2352, %2337
  %2356 = phi i32 [ %2339, %2337 ], [ 0, %2352 ]
  %2357 = phi ptr [ %2349, %2337 ], [ %2354, %2352 ]
  %2358 = phi ptr [ %2351, %2337 ], [ %72, %2352 ]
  %2359 = load ptr, ptr %2358, align 8, !tbaa !5
  %2360 = and i32 %148, 131072
  %2361 = icmp eq i32 %2360, 0
  br i1 %2361, label %2362, label %2377

2362:                                             ; preds = %2355
  %2363 = icmp ne i32 %154, 0
  %2364 = icmp ne i32 %153, 0
  %2365 = select i1 %2363, i1 true, i1 %2364
  br i1 %2365, label %2374, label %2366

2366:                                             ; preds = %2362
  br i1 %76, label %2391, label %2367

2367:                                             ; preds = %2366
  %2368 = load i32, ptr %77, align 8, !tbaa !199
  %2369 = and i32 %2368, 64
  %2370 = icmp ne i32 %2369, 0
  %2371 = and i32 %148, 7168
  %2372 = icmp eq i32 %2371, 0
  %2373 = select i1 %2370, i1 %2372, i1 false
  br i1 %2373, label %2377, label %2391

2374:                                             ; preds = %2362
  %2375 = and i32 %148, 7168
  %2376 = icmp eq i32 %2375, 0
  br i1 %2376, label %2377, label %2391

2377:                                             ; preds = %2367, %2374, %2355
  br i1 %1568, label %2381, label %2378

2378:                                             ; preds = %2377
  %2379 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %2380 = load i32, ptr %2379, align 4, !tbaa !166
  br label %2385

2381:                                             ; preds = %2377
  %2382 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %2383 = load i16, ptr %2382, align 2, !tbaa !168
  %2384 = zext i16 %2383 to i32
  br label %2385

2385:                                             ; preds = %2381, %2378
  %2386 = phi i32 [ %2380, %2378 ], [ %2384, %2381 ]
  %2387 = icmp eq i32 %2386, 0
  %2388 = sext i32 %2386 to i64
  %2389 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2388
  %2390 = select i1 %2387, ptr null, ptr %2389
  store ptr %2390, ptr %16, align 8, !tbaa !5
  br label %5288, !llvm.loop !262

2391:                                             ; preds = %2374, %2367, %2366
  %2392 = icmp eq i32 %146, 0
  %2393 = load ptr, ptr %78, align 8, !tbaa !147
  %2394 = ashr i32 %2356, 3
  %2395 = sext i32 %2394 to i64
  br i1 %2392, label %2409, label %2396

2396:                                             ; preds = %2391
  %2397 = add i32 %146, -1
  %2398 = load i32, ptr %79, align 8, !tbaa !148
  %2399 = mul i32 %2398, %2397
  %2400 = zext i32 %2399 to i64
  %2401 = getelementptr inbounds i8, ptr %2393, i64 %2400
  %2402 = getelementptr inbounds i8, ptr %2401, i64 %2395
  %2403 = load i8, ptr %2402, align 1, !tbaa !9
  %2404 = zext i8 %2403 to i32
  %2405 = and i32 %2356, 7
  %2406 = shl nuw nsw i32 1, %2405
  %2407 = and i32 %2406, %2404
  %2408 = icmp eq i32 %2407, 0
  br i1 %2408, label %2414, label %2419

2409:                                             ; preds = %2391
  %2410 = load i32, ptr %79, align 8, !tbaa !148
  %2411 = zext i32 %2410 to i64
  call void @llvm.memset.p0.i64(ptr align 1 %2393, i8 0, i64 %2411, i1 false)
  %2412 = and i32 %2356, 7
  %2413 = shl nuw nsw i32 1, %2412
  br label %2460

2414:                                             ; preds = %2396
  %2415 = mul i32 %2398, %146
  %2416 = zext i32 %2415 to i64
  %2417 = getelementptr inbounds i8, ptr %2393, i64 %2416
  %2418 = zext i32 %2398 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %2417, ptr nonnull align 1 %2401, i64 %2418, i1 false)
  br label %2460

2419:                                             ; preds = %2396
  %2420 = and i32 %148, 1024
  %2421 = icmp eq i32 %2420, 0
  br i1 %2421, label %2423, label %2422

2422:                                             ; preds = %2419
  call fastcc void @S_scan_commit(ptr noundef nonnull %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %2423

2423:                                             ; preds = %2422, %2419
  %2424 = and i32 %148, 4096
  %2425 = icmp eq i32 %2424, 0
  br i1 %2425, label %2450, label %2426

2426:                                             ; preds = %2423
  %2427 = load ptr, ptr %82, align 8, !tbaa !197
  %2428 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %2429 = getelementptr inbounds %struct.sv, ptr %2428, i64 0, i32 2
  %2430 = load i32, ptr %2429, align 4, !tbaa !62
  %2431 = and i32 %2430, 268435456
  %2432 = icmp eq i32 %2431, 0
  br i1 %2432, label %2433, label %2438

2433:                                             ; preds = %2426
  %2434 = load ptr, ptr %2428, align 8, !tbaa !63
  %2435 = getelementptr inbounds %struct.xpv, ptr %2434, i64 0, i32 3
  %2436 = load i64, ptr %2435, align 8, !tbaa !9
  %2437 = icmp ult i64 %2436, 25
  br i1 %2437, label %2438, label %2441

2438:                                             ; preds = %2433, %2426
  %2439 = call ptr @Perl_sv_grow(ptr noundef nonnull %2428, i64 noundef 25) #21
  %2440 = load ptr, ptr %2428, align 8, !tbaa !63
  br label %2441

2441:                                             ; preds = %2433, %2438
  %2442 = phi ptr [ %2434, %2433 ], [ %2440, %2438 ]
  %2443 = getelementptr inbounds %struct.xpv, ptr %2442, i64 0, i32 2
  store i64 0, ptr %2443, align 8, !tbaa !72
  %2444 = getelementptr inbounds %struct.xpvinvlist, ptr %2442, i64 0, i32 5
  store i64 -1, ptr %2444, align 8, !tbaa !71
  %2445 = getelementptr inbounds %struct.xpvinvlist, ptr %2442, i64 0, i32 4
  store i64 0, ptr %2445, align 8, !tbaa !71
  %2446 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %2428) #21
  %2447 = getelementptr inbounds %struct.regnode_ssc, ptr %2427, i64 0, i32 6
  store ptr %2446, ptr %2447, align 8, !tbaa !195
  call fastcc void @S__append_range_to_invlist(ptr noundef %2446, i64 noundef 0, i64 noundef -1)
  %2448 = load i8, ptr %2427, align 8, !tbaa !196
  %2449 = or i8 %2448, 1
  store i8 %2449, ptr %2427, align 8, !tbaa !196
  br label %2450

2450:                                             ; preds = %2423, %2441
  %2451 = and i32 %148, -6145
  br label %5248

2452:                                             ; preds = %1574
  %2453 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2
  %2454 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %2455 = load i32, ptr %2454, align 4, !tbaa !166
  %2456 = icmp eq i32 %2455, 0
  br i1 %2456, label %2473, label %2457

2457:                                             ; preds = %2452
  %2458 = sext i32 %2455 to i64
  %2459 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2458
  br label %2473

2460:                                             ; preds = %2409, %2414
  %2461 = phi i32 [ %2413, %2409 ], [ %2406, %2414 ]
  %2462 = load ptr, ptr %78, align 8, !tbaa !147
  %2463 = load i32, ptr %79, align 8, !tbaa !148
  %2464 = mul i32 %2463, %146
  %2465 = zext i32 %2464 to i64
  %2466 = getelementptr inbounds i8, ptr %2462, i64 %2465
  %2467 = getelementptr inbounds i8, ptr %2466, i64 %2395
  %2468 = load i8, ptr %2467, align 1, !tbaa !9
  %2469 = trunc i32 %2461 to i8
  %2470 = or i8 %2468, %2469
  store i8 %2470, ptr %2467, align 1, !tbaa !9
  %2471 = add i32 %146, 1
  %2472 = icmp eq ptr %2357, null
  br i1 %2472, label %5248, label %2473

2473:                                             ; preds = %2457, %2452, %2460
  %2474 = phi i32 [ %2471, %2460 ], [ %146, %2452 ], [ %146, %2457 ]
  %2475 = phi ptr [ %2359, %2460 ], [ null, %2452 ], [ %2459, %2457 ]
  %2476 = phi ptr [ %2357, %2460 ], [ %2453, %2452 ], [ %2453, %2457 ]
  %2477 = phi i32 [ %2356, %2460 ], [ %145, %2452 ], [ %145, %2457 ]
  %2478 = load ptr, ptr %83, align 8, !tbaa !263
  %2479 = icmp eq ptr %2478, null
  br i1 %2479, label %2480, label %2482

2480:                                             ; preds = %2473
  %2481 = call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 56) #21
  call void @Perl_save_destructor_x(ptr noundef nonnull @S_unwind_scan_frames, ptr noundef %2481) #21
  store ptr %2481, ptr %85, align 8, !tbaa !264
  br label %2491

2482:                                             ; preds = %2473
  %2483 = getelementptr inbounds %struct.scan_frame, ptr %2478, i64 0, i32 7
  %2484 = load ptr, ptr %2483, align 8, !tbaa !265
  %2485 = icmp eq ptr %2484, null
  br i1 %2485, label %2486, label %2495

2486:                                             ; preds = %2482
  %2487 = call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 56) #21
  %2488 = load ptr, ptr %83, align 8, !tbaa !263
  %2489 = getelementptr inbounds %struct.scan_frame, ptr %2488, i64 0, i32 7
  store ptr %2487, ptr %2489, align 8, !tbaa !265
  %2490 = getelementptr inbounds %struct.scan_frame, ptr %2487, i64 0, i32 6
  store ptr %2488, ptr %2490, align 8, !tbaa !267
  br label %2491

2491:                                             ; preds = %2486, %2480
  %2492 = phi ptr [ %2481, %2480 ], [ %2487, %2486 ]
  %2493 = load i32, ptr %84, align 8, !tbaa !268
  %2494 = add i32 %2493, 1
  store i32 %2494, ptr %84, align 8, !tbaa !268
  br label %2495

2495:                                             ; preds = %2491, %2482
  %2496 = phi ptr [ %2484, %2482 ], [ %2492, %2491 ]
  store ptr %2496, ptr %83, align 8, !tbaa !263
  %2497 = load i8, ptr %1496, align 1, !tbaa !164
  %2498 = icmp ugt i8 %2497, 93
  br i1 %2498, label %2499, label %2502

2499:                                             ; preds = %2495
  %2500 = zext i8 %2497 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2500, i32 noundef 93) #21
  %2501 = load i8, ptr %1496, align 1, !tbaa !164
  br label %2502

2502:                                             ; preds = %2499, %2495
  %2503 = phi i8 [ %2501, %2499 ], [ %2497, %2495 ]
  %2504 = zext i8 %2503 to i64
  %2505 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2504
  %2506 = load i8, ptr %2505, align 1, !tbaa !9
  %2507 = icmp eq i8 %2506, 0
  br i1 %2507, label %2511, label %2508

2508:                                             ; preds = %2502
  %2509 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %2510 = load i32, ptr %2509, align 4, !tbaa !166
  br label %2515

2511:                                             ; preds = %2502
  %2512 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %2513 = load i16, ptr %2512, align 2, !tbaa !168
  %2514 = zext i16 %2513 to i32
  br label %2515

2515:                                             ; preds = %2511, %2508
  %2516 = phi i32 [ %2510, %2508 ], [ %2514, %2511 ]
  %2517 = icmp eq i32 %2516, 0
  %2518 = sext i32 %2516 to i64
  %2519 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %2518
  %2520 = select i1 %2517, ptr null, ptr %2519
  %2521 = getelementptr inbounds %struct.scan_frame, ptr %2496, i64 0, i32 1
  store ptr %2520, ptr %2521, align 8, !tbaa !269
  store ptr %144, ptr %2496, align 8, !tbaa !270
  %2522 = getelementptr inbounds %struct.scan_frame, ptr %2496, i64 0, i32 3
  store i32 %145, ptr %2522, align 4, !tbaa !271
  %2523 = getelementptr inbounds %struct.scan_frame, ptr %2496, i64 0, i32 2
  store i32 %146, ptr %2523, align 8, !tbaa !272
  %2524 = getelementptr inbounds %struct.scan_frame, ptr %2496, i64 0, i32 5
  store ptr %158, ptr %2524, align 8, !tbaa !273
  store ptr %2476, ptr %16, align 8, !tbaa !5
  %2525 = add i32 %149, 1
  br label %5288

2526:                                             ; preds = %1574, %1574
  %2527 = load i8, ptr %1495, align 2, !tbaa !218
  %2528 = zext i8 %2527 to i64
  %2529 = load i32, ptr %70, align 8, !tbaa !98
  %2530 = icmp eq i32 %2529, 0
  %2531 = getelementptr inbounds %struct.regnode_string, ptr %1495, i64 0, i32 3
  br i1 %2530, label %2538, label %2532

2532:                                             ; preds = %2526
  %2533 = getelementptr inbounds i8, ptr %2531, i64 %2528
  %2534 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 44) #21
  %2535 = select i1 %2534, i32 0, i32 -8161
  %2536 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %2531, i64 noundef %2528, ptr noundef null, i32 noundef %2535) #21
  %2537 = call i64 @Perl_utf8_length(ptr noundef nonnull %2531, ptr noundef nonnull %2533) #21
  br label %2541

2538:                                             ; preds = %2526
  %2539 = load i8, ptr %2531, align 2, !tbaa !9
  %2540 = zext i8 %2539 to i64
  br label %2541

2541:                                             ; preds = %2538, %2532
  %2542 = phi i64 [ %2537, %2532 ], [ %2528, %2538 ]
  %2543 = phi i64 [ %2536, %2532 ], [ %2540, %2538 ]
  %2544 = add nsw i64 %2542, %150
  %2545 = and i32 %148, 1024
  %2546 = icmp eq i32 %2545, 0
  br i1 %2546, label %2596, label %2547

2547:                                             ; preds = %2541
  %2548 = load i64, ptr %86, align 8, !tbaa !274
  %2549 = icmp eq i64 %2548, -1
  br i1 %2549, label %2550, label %2558

2550:                                             ; preds = %2547
  %2551 = load i64, ptr %5, align 8, !tbaa !258
  store i64 %2551, ptr %87, align 8, !tbaa !275
  %2552 = icmp eq i32 %153, 0
  br i1 %2552, label %2553, label %2556

2553:                                             ; preds = %2550
  %2554 = load i64, ptr %88, align 8, !tbaa !249
  %2555 = add nsw i64 %2554, %2551
  br label %2556

2556:                                             ; preds = %2550, %2553
  %2557 = phi i64 [ %2555, %2553 ], [ 9223372036854775807, %2550 ]
  store i64 %2557, ptr %89, align 8, !tbaa !276
  br label %2558

2558:                                             ; preds = %2556, %2547
  %2559 = load ptr, ptr %90, align 8, !tbaa !191
  %2560 = getelementptr inbounds %struct.regnode_string, ptr %1495, i64 0, i32 3
  %2561 = load i8, ptr %1495, align 2, !tbaa !218
  %2562 = zext i8 %2561 to i64
  call void @Perl_sv_catpvn_flags(ptr noundef %2559, ptr noundef nonnull %2560, i64 noundef %2562, i32 noundef 2) #21
  %2563 = load i32, ptr %70, align 8, !tbaa !98
  %2564 = icmp eq i32 %2563, 0
  %2565 = load ptr, ptr %90, align 8, !tbaa !191
  %2566 = getelementptr inbounds %struct.sv, ptr %2565, i64 0, i32 2
  %2567 = load i32, ptr %2566, align 4, !tbaa !62
  br i1 %2564, label %2570, label %2568

2568:                                             ; preds = %2558
  %2569 = or i32 %2567, 536870912
  store i32 %2569, ptr %2566, align 4, !tbaa !62
  br label %2570

2570:                                             ; preds = %2558, %2568
  %2571 = phi i32 [ %2569, %2568 ], [ %2567, %2558 ]
  %2572 = and i32 %2571, 536870912
  %2573 = icmp eq i32 %2572, 0
  %2574 = and i32 %2571, 14680064
  %2575 = icmp eq i32 %2574, 0
  %2576 = or i1 %2573, %2575
  br i1 %2576, label %2591, label %2577

2577:                                             ; preds = %2570
  %2578 = call ptr @Perl_mg_find(ptr noundef nonnull %2565, i32 noundef 119) #21
  %2579 = icmp eq ptr %2578, null
  br i1 %2579, label %2591, label %2580

2580:                                             ; preds = %2577
  %2581 = getelementptr inbounds %struct.magic, ptr %2578, i64 0, i32 5
  %2582 = load i64, ptr %2581, align 8, !tbaa !277
  %2583 = icmp sgt i64 %2582, -1
  br i1 %2583, label %2584, label %2591

2584:                                             ; preds = %2580
  %2585 = load i8, ptr %1495, align 2, !tbaa !218
  %2586 = zext i8 %2585 to i64
  %2587 = getelementptr inbounds i8, ptr %2560, i64 %2586
  %2588 = call i64 @Perl_utf8_length(ptr noundef nonnull %2560, ptr noundef nonnull %2587) #21
  %2589 = load i64, ptr %2581, align 8, !tbaa !277
  %2590 = add i64 %2589, %2588
  store i64 %2590, ptr %2581, align 8, !tbaa !277
  br label %2591

2591:                                             ; preds = %2570, %2584, %2580, %2577
  %2592 = load i64, ptr %5, align 8, !tbaa !258
  %2593 = add nsw i64 %2592, %2542
  store i64 %2593, ptr %86, align 8, !tbaa !274
  store i64 %2593, ptr %5, align 8, !tbaa !258
  %2594 = load i32, ptr %77, align 8, !tbaa !199
  %2595 = and i32 %2594, -4
  store i32 %2595, ptr %77, align 8, !tbaa !199
  br label %2596

2596:                                             ; preds = %2591, %2541
  %2597 = and i32 %148, 2048
  %2598 = icmp eq i32 %2597, 0
  br i1 %2598, label %2633, label %2599

2599:                                             ; preds = %2596
  %2600 = load ptr, ptr %82, align 8, !tbaa !197
  %2601 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %2602 = getelementptr inbounds %struct.sv, ptr %2601, i64 0, i32 2
  %2603 = load i32, ptr %2602, align 4, !tbaa !62
  %2604 = and i32 %2603, 268435456
  %2605 = icmp eq i32 %2604, 0
  br i1 %2605, label %2606, label %2611

2606:                                             ; preds = %2599
  %2607 = load ptr, ptr %2601, align 8, !tbaa !63
  %2608 = getelementptr inbounds %struct.xpv, ptr %2607, i64 0, i32 3
  %2609 = load i64, ptr %2608, align 8, !tbaa !9
  %2610 = icmp ult i64 %2609, 25
  br i1 %2610, label %2611, label %2614

2611:                                             ; preds = %2606, %2599
  %2612 = call ptr @Perl_sv_grow(ptr noundef nonnull %2601, i64 noundef 25) #21
  %2613 = load ptr, ptr %2601, align 8, !tbaa !63
  br label %2614

2614:                                             ; preds = %2611, %2606
  %2615 = phi ptr [ %2607, %2606 ], [ %2613, %2611 ]
  %2616 = getelementptr inbounds %struct.xpv, ptr %2615, i64 0, i32 2
  store i64 0, ptr %2616, align 8, !tbaa !72
  %2617 = getelementptr inbounds %struct.xpvinvlist, ptr %2615, i64 0, i32 5
  store i64 -1, ptr %2617, align 8, !tbaa !71
  %2618 = getelementptr inbounds %struct.xpvinvlist, ptr %2615, i64 0, i32 4
  store i64 0, ptr %2618, align 8, !tbaa !71
  %2619 = call ptr @Perl__add_range_to_invlist(ptr noundef nonnull %2601, i64 noundef %2543, i64 noundef %2543)
  %2620 = getelementptr inbounds %struct.regnode_ssc, ptr %2600, i64 0, i32 6
  %2621 = load ptr, ptr %2620, align 8, !tbaa !195
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %2621, ptr noundef %2619, i1 noundef zeroext false, ptr noundef nonnull %2620)
  %2622 = getelementptr inbounds %struct.sv, ptr %2619, i64 0, i32 1
  %2623 = load i32, ptr %2622, align 8, !tbaa !22
  %2624 = icmp ugt i32 %2623, 1
  br i1 %2624, label %2625, label %2627

2625:                                             ; preds = %2614
  %2626 = add i32 %2623, -1
  store i32 %2626, ptr %2622, align 8, !tbaa !22
  br label %2628

2627:                                             ; preds = %2614
  call void @Perl_sv_free2(ptr noundef nonnull %2619, i32 noundef %2623) #21
  br label %2628

2628:                                             ; preds = %2625, %2627
  %2629 = load ptr, ptr %82, align 8, !tbaa !197
  %2630 = load i8, ptr %2629, align 8, !tbaa !196
  %2631 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2629, i64 0, i32 5
  store i32 0, ptr %2631, align 4, !tbaa !254
  %2632 = and i8 %2630, -14
  store i8 %2632, ptr %2629, align 8, !tbaa !196
  br label %2645

2633:                                             ; preds = %2596
  %2634 = and i32 %148, 4096
  %2635 = icmp eq i32 %2634, 0
  br i1 %2635, label %2645, label %2636

2636:                                             ; preds = %2633
  %2637 = load ptr, ptr %82, align 8, !tbaa !197
  %2638 = getelementptr inbounds %struct.regnode_ssc, ptr %2637, i64 0, i32 6
  %2639 = load ptr, ptr %2638, align 8, !tbaa !195
  %2640 = call ptr @Perl__add_range_to_invlist(ptr noundef %2639, i64 noundef %2543, i64 noundef %2543)
  store ptr %2640, ptr %2638, align 8, !tbaa !195
  %2641 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef nonnull %0, ptr noundef %2641, ptr noundef %147)
  %2642 = load ptr, ptr %82, align 8, !tbaa !197
  %2643 = load i8, ptr %2642, align 8, !tbaa !196
  %2644 = and i8 %2643, -2
  store i8 %2644, ptr %2642, align 8, !tbaa !196
  br label %2645

2645:                                             ; preds = %2633, %2636, %2628
  %2646 = and i32 %148, -6145
  br label %5248

2647:                                             ; preds = %1574
  %2648 = zext i8 %1564 to i32
  %2649 = add nsw i64 %1565, -31
  %2650 = icmp ult i64 %2649, 9
  br i1 %2650, label %2651, label %3695

2651:                                             ; preds = %2647
  %2652 = load i8, ptr %1495, align 2, !tbaa !218
  %2653 = zext i8 %2652 to i64
  %2654 = getelementptr inbounds %struct.regnode_string, ptr %1495, i64 0, i32 3
  %2655 = and i32 %148, 1024
  %2656 = icmp eq i32 %2655, 0
  br i1 %2656, label %2658, label %2657

2657:                                             ; preds = %2651
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  br label %2658

2658:                                             ; preds = %2657, %2651
  %2659 = load i32, ptr %70, align 8, !tbaa !98
  %2660 = icmp eq i32 %2659, 0
  br i1 %2660, label %2664, label %2661

2661:                                             ; preds = %2658
  %2662 = getelementptr inbounds i8, ptr %2654, i64 %2653
  %2663 = call i64 @Perl_utf8_length(ptr noundef nonnull %2654, ptr noundef nonnull %2662) #21
  br label %2664

2664:                                             ; preds = %2658, %2661
  %2665 = phi i64 [ %2663, %2661 ], [ %2653, %2658 ]
  %2666 = icmp eq i8 %1494, 0
  br i1 %2666, label %2670, label %2667

2667:                                             ; preds = %2664
  %2668 = load i32, ptr %109, align 8, !tbaa !131
  %2669 = or i32 %2668, 1024
  store i32 %2669, ptr %109, align 8, !tbaa !131
  br label %2670

2670:                                             ; preds = %2667, %2664
  %2671 = sub i64 %2665, %1493
  %2672 = add i64 %2671, %150
  %2673 = add i64 %1493, %152
  br i1 %2656, label %2682, label %2674

2674:                                             ; preds = %2670
  %2675 = load i64, ptr %5, align 8, !tbaa !258
  %2676 = add i64 %2675, %2671
  %2677 = call i64 @llvm.smax.i64(i64 %2676, i64 0)
  store i64 %2677, ptr %5, align 8, !tbaa !258
  %2678 = load i64, ptr %88, align 8, !tbaa !249
  %2679 = add i64 %2678, %1493
  store i64 %2679, ptr %88, align 8, !tbaa !249
  %2680 = icmp eq i64 %1493, 0
  br i1 %2680, label %2682, label %2681

2681:                                             ; preds = %2674
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %2682

2682:                                             ; preds = %2674, %2681, %2670
  %2683 = and i32 %148, 6144
  %2684 = icmp eq i32 %2683, 0
  br i1 %2684, label %5248, label %2685

2685:                                             ; preds = %2682
  %2686 = load i8, ptr %1495, align 2, !tbaa !218
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #21
  %2687 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %2688 = getelementptr inbounds %struct.sv, ptr %2687, i64 0, i32 2
  %2689 = load i32, ptr %2688, align 4, !tbaa !62
  %2690 = and i32 %2689, 268435456
  %2691 = icmp eq i32 %2690, 0
  br i1 %2691, label %2692, label %2697

2692:                                             ; preds = %2685
  %2693 = load ptr, ptr %2687, align 8, !tbaa !63
  %2694 = getelementptr inbounds %struct.xpv, ptr %2693, i64 0, i32 3
  %2695 = load i64, ptr %2694, align 8, !tbaa !9
  %2696 = icmp ult i64 %2695, 41
  br i1 %2696, label %2697, label %2700

2697:                                             ; preds = %2692, %2685
  %2698 = call ptr @Perl_sv_grow(ptr noundef nonnull %2687, i64 noundef 41) #21
  %2699 = load ptr, ptr %2687, align 8, !tbaa !63
  br label %2700

2700:                                             ; preds = %2697, %2692
  %2701 = phi ptr [ %2693, %2692 ], [ %2699, %2697 ]
  %2702 = getelementptr inbounds %struct.xpv, ptr %2701, i64 0, i32 2
  store i64 0, ptr %2702, align 8, !tbaa !72
  %2703 = getelementptr inbounds %struct.xpvinvlist, ptr %2701, i64 0, i32 5
  store i64 -1, ptr %2703, align 8, !tbaa !71
  %2704 = getelementptr inbounds %struct.xpvinvlist, ptr %2701, i64 0, i32 4
  store i64 0, ptr %2704, align 8, !tbaa !71
  store ptr %2687, ptr %12, align 8, !tbaa !5
  %2705 = load i32, ptr %70, align 8, !tbaa !98
  %2706 = icmp eq i32 %2705, 0
  br i1 %2706, label %2707, label %2765

2707:                                             ; preds = %2700
  %2708 = load i8, ptr %2654, align 1, !tbaa !9
  %2709 = zext i8 %2708 to i64
  %2710 = icmp ugt i8 %2686, 2
  br i1 %2710, label %2711, label %2723

2711:                                             ; preds = %2707
  %2712 = and i8 %2708, -33
  switch i8 %2712, label %2739 [
    i8 70, label %2713
    i8 83, label %2717
  ]

2713:                                             ; preds = %2711
  %2714 = getelementptr inbounds %struct.regnode_string, ptr %1495, i64 0, i32 3, i64 1
  %2715 = load i8, ptr %2714, align 1, !tbaa !9
  %2716 = and i8 %2715, -33
  switch i8 %2716, label %2739 [
    i8 70, label %2737
    i8 73, label %2737
    i8 76, label %2737
  ]

2717:                                             ; preds = %2711
  %2718 = getelementptr inbounds %struct.regnode_string, ptr %1495, i64 0, i32 3, i64 1
  %2719 = load i8, ptr %2718, align 1, !tbaa !9
  %2720 = and i8 %2719, -33
  %2721 = add i8 %2720, -83
  %2722 = icmp ult i8 %2721, 2
  br i1 %2722, label %2737, label %2739

2723:                                             ; preds = %2707
  %2724 = icmp eq i8 %2686, 2
  br i1 %2724, label %2725, label %2739

2725:                                             ; preds = %2723
  %2726 = and i8 %2708, -33
  switch i8 %2726, label %2739 [
    i8 70, label %2727
    i8 83, label %2731
  ]

2727:                                             ; preds = %2725
  %2728 = getelementptr inbounds %struct.regnode_string, ptr %1495, i64 0, i32 3, i64 1
  %2729 = load i8, ptr %2728, align 1, !tbaa !9
  %2730 = and i8 %2729, -33
  switch i8 %2730, label %2739 [
    i8 70, label %2737
    i8 73, label %2737
    i8 76, label %2737
  ]

2731:                                             ; preds = %2725
  %2732 = getelementptr inbounds %struct.regnode_string, ptr %1495, i64 0, i32 3, i64 1
  %2733 = load i8, ptr %2732, align 1, !tbaa !9
  %2734 = and i8 %2733, -33
  %2735 = add i8 %2734, -83
  %2736 = icmp ult i8 %2735, 2
  br i1 %2736, label %2737, label %2739

2737:                                             ; preds = %2731, %2727, %2727, %2727, %2717, %2713, %2713, %2713
  %2738 = call ptr @Perl__add_range_to_invlist(ptr noundef nonnull %2687, i64 noundef 0, i64 noundef -1)
  br label %3660

2739:                                             ; preds = %2731, %2727, %2725, %2723, %2717, %2713, %2711
  %2740 = load i8, ptr %1496, align 1, !tbaa !164
  %2741 = icmp eq i8 %2740, 34
  %2742 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2709
  br i1 %2741, label %2743, label %2746

2743:                                             ; preds = %2739
  %2744 = load ptr, ptr @PL_Latin1, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %2687, ptr noundef %2744, i1 noundef zeroext false, ptr noundef nonnull %12)
  %2745 = load i32, ptr %2742, align 4, !tbaa !150
  br label %2756

2746:                                             ; preds = %2739
  %2747 = call ptr @Perl__add_range_to_invlist(ptr noundef nonnull %2687, i64 noundef %2709, i64 noundef %2709)
  store ptr %2747, ptr %12, align 8, !tbaa !5
  %2748 = load i32, ptr %2742, align 4, !tbaa !150
  %2749 = and i32 %2748, 4194304
  %2750 = icmp eq i32 %2749, 0
  br i1 %2750, label %2756, label %2751

2751:                                             ; preds = %2746
  %2752 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %2709
  %2753 = load i8, ptr %2752, align 1, !tbaa !9
  %2754 = zext i8 %2753 to i64
  %2755 = call ptr @Perl__add_range_to_invlist(ptr noundef %2747, i64 noundef %2754, i64 noundef %2754)
  store ptr %2755, ptr %12, align 8, !tbaa !5
  br label %2756

2756:                                             ; preds = %2751, %2746, %2743
  %2757 = phi i32 [ %2745, %2743 ], [ %2748, %2746 ], [ %2748, %2751 ]
  %2758 = and i32 %2757, 524288
  %2759 = icmp eq i32 %2758, 0
  br i1 %2759, label %3658, label %2760

2760:                                             ; preds = %2756
  %2761 = icmp sgt i8 %2708, -1
  br i1 %2761, label %2762, label %2764

2762:                                             ; preds = %2760
  %2763 = load i8, ptr %1496, align 1, !tbaa !164
  switch i8 %2763, label %2764 [
    i8 36, label %3658
    i8 39, label %3658
  ]

2764:                                             ; preds = %2762, %2760
  call fastcc void @S_add_above_Latin1_folds(ptr noundef nonnull %0, i8 noundef zeroext %2708, ptr noundef nonnull %12)
  br label %3658

2765:                                             ; preds = %2700
  %2766 = zext i8 %2686 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %13) #21
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(40) %13, i8 0, i64 40, i1 false)
  %2767 = load i8, ptr %2654, align 1, !tbaa !9
  %2768 = zext i8 %2767 to i64
  %2769 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2768
  %2770 = load i8, ptr %2769, align 1, !tbaa !9
  %2771 = getelementptr inbounds i8, ptr %2654, i64 %2766
  %2772 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 44) #21
  %2773 = select i1 %2772, i32 0, i32 -8161
  %2774 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %2654, i64 noundef %2766, ptr noundef null, i32 noundef %2773) #21
  %2775 = load i8, ptr %1496, align 1, !tbaa !164
  %2776 = icmp eq i8 %2775, 34
  br i1 %2776, label %2777, label %2868

2777:                                             ; preds = %2765
  %2778 = icmp ult i64 %2774, 256
  %2779 = icmp eq i64 %2774, 304
  %2780 = or i1 %2778, %2779
  br i1 %2780, label %2825, label %2781

2781:                                             ; preds = %2777
  %2782 = icmp ugt i64 %2774, 304
  br i1 %2782, label %2783, label %2868

2783:                                             ; preds = %2781
  %2784 = icmp eq i64 %2774, 329
  br i1 %2784, label %2825, label %2785

2785:                                             ; preds = %2783
  %2786 = icmp ugt i64 %2774, 329
  br i1 %2786, label %2787, label %2868

2787:                                             ; preds = %2785
  %2788 = icmp eq i64 %2774, 376
  br i1 %2788, label %2825, label %2789

2789:                                             ; preds = %2787
  %2790 = icmp ugt i64 %2774, 376
  br i1 %2790, label %2791, label %2868

2791:                                             ; preds = %2789
  %2792 = icmp eq i64 %2774, 383
  br i1 %2792, label %2825, label %2793

2793:                                             ; preds = %2791
  %2794 = icmp ugt i64 %2774, 383
  br i1 %2794, label %2795, label %2868

2795:                                             ; preds = %2793
  %2796 = icmp eq i64 %2774, 496
  br i1 %2796, label %2825, label %2797

2797:                                             ; preds = %2795
  %2798 = icmp ugt i64 %2774, 496
  br i1 %2798, label %2799, label %2868

2799:                                             ; preds = %2797
  %2800 = icmp eq i64 %2774, 700
  br i1 %2800, label %2825, label %2801

2801:                                             ; preds = %2799
  %2802 = icmp ugt i64 %2774, 700
  br i1 %2802, label %2803, label %2868

2803:                                             ; preds = %2801
  %2804 = icmp eq i64 %2774, 924
  br i1 %2804, label %2825, label %2805

2805:                                             ; preds = %2803
  %2806 = icmp ugt i64 %2774, 924
  br i1 %2806, label %2807, label %2868

2807:                                             ; preds = %2805
  %2808 = icmp eq i64 %2774, 956
  br i1 %2808, label %2825, label %2809

2809:                                             ; preds = %2807
  %2810 = icmp ugt i64 %2774, 956
  br i1 %2810, label %2811, label %2868

2811:                                             ; preds = %2809
  %2812 = add i64 %2774, -7830
  %2813 = icmp ult i64 %2812, 5
  br i1 %2813, label %2825, label %2814

2814:                                             ; preds = %2811
  %2815 = icmp ugt i64 %2774, 7834
  br i1 %2815, label %2816, label %2868

2816:                                             ; preds = %2814
  %2817 = icmp eq i64 %2774, 7838
  br i1 %2817, label %2825, label %2818

2818:                                             ; preds = %2816
  %2819 = icmp ugt i64 %2774, 7838
  br i1 %2819, label %2820, label %2868

2820:                                             ; preds = %2818
  %2821 = icmp eq i64 %2774, 8490
  br i1 %2821, label %2825, label %2822

2822:                                             ; preds = %2820
  %2823 = icmp ugt i64 %2774, 8490
  br i1 %2823, label %2824, label %2868

2824:                                             ; preds = %2822
  switch i64 %2774, label %2868 [
    i64 64262, label %2825
    i64 64261, label %2825
    i64 64260, label %2825
    i64 64259, label %2825
    i64 64258, label %2825
    i64 64257, label %2825
    i64 64256, label %2825
    i64 8491, label %2825
  ]

2825:                                             ; preds = %2824, %2824, %2824, %2824, %2824, %2824, %2824, %2824, %2820, %2816, %2811, %2807, %2803, %2799, %2795, %2791, %2787, %2783, %2777
  %2826 = icmp eq i8 %2686, 0
  br i1 %2826, label %2862, label %2827

2827:                                             ; preds = %2825, %2853
  %2828 = phi ptr [ %2855, %2853 ], [ %2654, %2825 ]
  %2829 = phi i32 [ %2856, %2853 ], [ 0, %2825 ]
  %2830 = phi ptr [ %2854, %2853 ], [ %13, %2825 ]
  %2831 = load i8, ptr %2828, align 1, !tbaa !9
  %2832 = icmp sgt i8 %2831, -1
  br i1 %2832, label %2833, label %2843

2833:                                             ; preds = %2827
  %2834 = zext i8 %2831 to i64
  %2835 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2834
  %2836 = load i32, ptr %2835, align 4, !tbaa !150
  %2837 = and i32 %2836, 16400
  %2838 = icmp eq i32 %2837, 16400
  %2839 = add nuw i8 %2831, 32
  %2840 = select i1 %2838, i8 %2839, i8 %2831
  %2841 = getelementptr inbounds i8, ptr %2830, i64 1
  store i8 %2840, ptr %2830, align 1, !tbaa !9
  %2842 = getelementptr inbounds i8, ptr %2828, i64 1
  br label %2853

2843:                                             ; preds = %2827
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #21
  %2844 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull %2828, ptr noundef %2830, ptr noundef nonnull %14, i8 noundef zeroext 2) #21
  %2845 = load i64, ptr %14, align 8, !tbaa !71
  %2846 = getelementptr inbounds i8, ptr %2830, i64 %2845
  %2847 = load i8, ptr %2828, align 1, !tbaa !9
  %2848 = zext i8 %2847 to i64
  %2849 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2848
  %2850 = load i8, ptr %2849, align 1, !tbaa !9
  %2851 = zext i8 %2850 to i64
  %2852 = getelementptr inbounds i8, ptr %2828, i64 %2851
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #21
  br label %2853

2853:                                             ; preds = %2843, %2833
  %2854 = phi ptr [ %2841, %2833 ], [ %2846, %2843 ]
  %2855 = phi ptr [ %2842, %2833 ], [ %2852, %2843 ]
  %2856 = add nuw nsw i32 %2829, 1
  %2857 = icmp ult i32 %2829, 2
  %2858 = icmp ult ptr %2855, %2771
  %2859 = select i1 %2857, i1 %2858, i1 false
  br i1 %2859, label %2827, label %2860, !llvm.loop !278

2860:                                             ; preds = %2853
  %2861 = load i8, ptr %13, align 16, !tbaa !9
  br label %2862

2862:                                             ; preds = %2860, %2825
  %2863 = phi i8 [ 0, %2825 ], [ %2861, %2860 ]
  %2864 = phi ptr [ %13, %2825 ], [ %2854, %2860 ]
  %2865 = zext i8 %2863 to i64
  %2866 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2865
  %2867 = load i8, ptr %2866, align 1, !tbaa !9
  br label %2868

2868:                                             ; preds = %2862, %2824, %2822, %2818, %2814, %2809, %2805, %2801, %2797, %2793, %2789, %2785, %2781, %2765
  %2869 = phi ptr [ %2864, %2862 ], [ %2771, %2822 ], [ %2771, %2818 ], [ %2771, %2814 ], [ %2771, %2809 ], [ %2771, %2805 ], [ %2771, %2801 ], [ %2771, %2797 ], [ %2771, %2793 ], [ %2771, %2789 ], [ %2771, %2785 ], [ %2771, %2781 ], [ %2771, %2765 ], [ %2771, %2824 ]
  %2870 = phi i8 [ %2867, %2862 ], [ %2770, %2822 ], [ %2770, %2818 ], [ %2770, %2814 ], [ %2770, %2809 ], [ %2770, %2805 ], [ %2770, %2801 ], [ %2770, %2797 ], [ %2770, %2793 ], [ %2770, %2789 ], [ %2770, %2785 ], [ %2770, %2781 ], [ %2770, %2765 ], [ %2770, %2824 ]
  %2871 = phi ptr [ %13, %2862 ], [ %2654, %2822 ], [ %2654, %2818 ], [ %2654, %2814 ], [ %2654, %2809 ], [ %2654, %2805 ], [ %2654, %2801 ], [ %2654, %2797 ], [ %2654, %2793 ], [ %2654, %2789 ], [ %2654, %2785 ], [ %2654, %2781 ], [ %2654, %2765 ], [ %2654, %2824 ]
  %2872 = ptrtoint ptr %2869 to i64
  %2873 = ptrtoint ptr %2871 to i64
  %2874 = sub i64 %2872, %2873
  %2875 = icmp sgt i64 %2874, 5
  br i1 %2875, label %2876, label %3115

2876:                                             ; preds = %2868
  %2877 = load i8, ptr %2871, align 1, !tbaa !9
  switch i8 %2877, label %3593 [
    i8 97, label %2878
    i8 102, label %2886
    i8 104, label %2889
    i8 105, label %2897
    i8 106, label %2905
    i8 115, label %2913
    i8 116, label %2918
    i8 119, label %2926
    i8 121, label %2926
    i8 -59, label %2934
    i8 -54, label %2946
    i8 -50, label %2954
    i8 -49, label %3002
    i8 -43, label %3054
    i8 -31, label %3080
  ]

2878:                                             ; preds = %2876
  %2879 = getelementptr inbounds i8, ptr %2871, i64 1
  %2880 = load i8, ptr %2879, align 1, !tbaa !9
  %2881 = icmp eq i8 %2880, -54
  br i1 %2881, label %2882, label %3593

2882:                                             ; preds = %2878
  %2883 = getelementptr inbounds i8, ptr %2871, i64 2
  %2884 = load i8, ptr %2883, align 1, !tbaa !9
  %2885 = icmp eq i8 %2884, -66
  br i1 %2885, label %3590, label %3593

2886:                                             ; preds = %2876
  %2887 = getelementptr inbounds i8, ptr %2871, i64 1
  %2888 = load i8, ptr %2887, align 1, !tbaa !9
  switch i8 %2888, label %3593 [
    i8 102, label %3590
    i8 105, label %3590
    i8 108, label %3590
  ]

2889:                                             ; preds = %2876
  %2890 = getelementptr inbounds i8, ptr %2871, i64 1
  %2891 = load i8, ptr %2890, align 1, !tbaa !9
  %2892 = icmp eq i8 %2891, -52
  br i1 %2892, label %2893, label %3593

2893:                                             ; preds = %2889
  %2894 = getelementptr inbounds i8, ptr %2871, i64 2
  %2895 = load i8, ptr %2894, align 1, !tbaa !9
  %2896 = icmp eq i8 %2895, -79
  br i1 %2896, label %3590, label %3593

2897:                                             ; preds = %2876
  %2898 = getelementptr inbounds i8, ptr %2871, i64 1
  %2899 = load i8, ptr %2898, align 1, !tbaa !9
  %2900 = icmp eq i8 %2899, -52
  br i1 %2900, label %2901, label %3593

2901:                                             ; preds = %2897
  %2902 = getelementptr inbounds i8, ptr %2871, i64 2
  %2903 = load i8, ptr %2902, align 1, !tbaa !9
  %2904 = icmp eq i8 %2903, -121
  br i1 %2904, label %3590, label %3593

2905:                                             ; preds = %2876
  %2906 = getelementptr inbounds i8, ptr %2871, i64 1
  %2907 = load i8, ptr %2906, align 1, !tbaa !9
  %2908 = icmp eq i8 %2907, -52
  br i1 %2908, label %2909, label %3593

2909:                                             ; preds = %2905
  %2910 = getelementptr inbounds i8, ptr %2871, i64 2
  %2911 = load i8, ptr %2910, align 1, !tbaa !9
  %2912 = icmp eq i8 %2911, -116
  br i1 %2912, label %3590, label %3593

2913:                                             ; preds = %2876
  %2914 = getelementptr inbounds i8, ptr %2871, i64 1
  %2915 = load i8, ptr %2914, align 1, !tbaa !9
  %2916 = add i8 %2915, -115
  %2917 = icmp ult i8 %2916, 2
  br i1 %2917, label %3590, label %3593

2918:                                             ; preds = %2876
  %2919 = getelementptr inbounds i8, ptr %2871, i64 1
  %2920 = load i8, ptr %2919, align 1, !tbaa !9
  %2921 = icmp eq i8 %2920, -52
  br i1 %2921, label %2922, label %3593

2922:                                             ; preds = %2918
  %2923 = getelementptr inbounds i8, ptr %2871, i64 2
  %2924 = load i8, ptr %2923, align 1, !tbaa !9
  %2925 = icmp eq i8 %2924, -120
  br i1 %2925, label %3590, label %3593

2926:                                             ; preds = %2876, %2876
  %2927 = getelementptr inbounds i8, ptr %2871, i64 1
  %2928 = load i8, ptr %2927, align 1, !tbaa !9
  %2929 = icmp eq i8 %2928, -52
  br i1 %2929, label %2930, label %3593

2930:                                             ; preds = %2926
  %2931 = getelementptr inbounds i8, ptr %2871, i64 2
  %2932 = load i8, ptr %2931, align 1, !tbaa !9
  %2933 = icmp eq i8 %2932, -118
  br i1 %2933, label %3590, label %3593

2934:                                             ; preds = %2876
  %2935 = getelementptr inbounds i8, ptr %2871, i64 1
  %2936 = load i8, ptr %2935, align 1, !tbaa !9
  %2937 = icmp eq i8 %2936, -65
  br i1 %2937, label %2938, label %3593

2938:                                             ; preds = %2934
  %2939 = getelementptr inbounds i8, ptr %2871, i64 2
  %2940 = load i8, ptr %2939, align 1, !tbaa !9
  %2941 = icmp eq i8 %2940, -59
  br i1 %2941, label %2942, label %3593

2942:                                             ; preds = %2938
  %2943 = getelementptr inbounds i8, ptr %2871, i64 3
  %2944 = load i8, ptr %2943, align 1, !tbaa !9
  %2945 = icmp eq i8 %2944, -65
  br i1 %2945, label %3590, label %3593

2946:                                             ; preds = %2876
  %2947 = getelementptr inbounds i8, ptr %2871, i64 1
  %2948 = load i8, ptr %2947, align 1, !tbaa !9
  %2949 = icmp eq i8 %2948, -68
  br i1 %2949, label %2950, label %3593

2950:                                             ; preds = %2946
  %2951 = getelementptr inbounds i8, ptr %2871, i64 2
  %2952 = load i8, ptr %2951, align 1, !tbaa !9
  %2953 = icmp eq i8 %2952, 110
  br i1 %2953, label %3590, label %3593

2954:                                             ; preds = %2876
  %2955 = getelementptr inbounds i8, ptr %2871, i64 1
  %2956 = load i8, ptr %2955, align 1, !tbaa !9
  %2957 = and i8 %2956, -3
  %2958 = icmp eq i8 %2957, -84
  br i1 %2958, label %2959, label %2967

2959:                                             ; preds = %2954
  %2960 = getelementptr inbounds i8, ptr %2871, i64 2
  %2961 = load i8, ptr %2960, align 1, !tbaa !9
  %2962 = icmp eq i8 %2961, -50
  br i1 %2962, label %2963, label %3593

2963:                                             ; preds = %2959
  %2964 = getelementptr inbounds i8, ptr %2871, i64 3
  %2965 = load i8, ptr %2964, align 1, !tbaa !9
  %2966 = icmp eq i8 %2965, -71
  br i1 %2966, label %3590, label %3593

2967:                                             ; preds = %2954
  switch i8 %2956, label %3593 [
    i8 -79, label %2968
    i8 -73, label %2968
    i8 -71, label %2979
  ]

2968:                                             ; preds = %2967, %2967
  %2969 = getelementptr inbounds i8, ptr %2871, i64 2
  %2970 = load i8, ptr %2969, align 1, !tbaa !9
  switch i8 %2970, label %3593 [
    i8 -51, label %2971
    i8 -50, label %2975
  ]

2971:                                             ; preds = %2968
  %2972 = getelementptr inbounds i8, ptr %2871, i64 3
  %2973 = load i8, ptr %2972, align 1, !tbaa !9
  %2974 = icmp eq i8 %2973, -126
  br i1 %2974, label %3590, label %3593

2975:                                             ; preds = %2968
  %2976 = getelementptr inbounds i8, ptr %2871, i64 3
  %2977 = load i8, ptr %2976, align 1, !tbaa !9
  %2978 = icmp eq i8 %2977, -71
  br i1 %2978, label %3590, label %3593

2979:                                             ; preds = %2967
  %2980 = getelementptr inbounds i8, ptr %2871, i64 2
  %2981 = load i8, ptr %2980, align 1, !tbaa !9
  switch i8 %2981, label %3593 [
    i8 -52, label %2982
    i8 -51, label %2998
  ]

2982:                                             ; preds = %2979
  %2983 = getelementptr inbounds i8, ptr %2871, i64 3
  %2984 = load i8, ptr %2983, align 1, !tbaa !9
  %2985 = icmp eq i8 %2984, -120
  br i1 %2985, label %2986, label %3593

2986:                                             ; preds = %2982
  %2987 = getelementptr inbounds i8, ptr %2871, i64 4
  %2988 = load i8, ptr %2987, align 1, !tbaa !9
  switch i8 %2988, label %3593 [
    i8 -52, label %2989
    i8 -51, label %2994
  ]

2989:                                             ; preds = %2986
  %2990 = getelementptr inbounds i8, ptr %2871, i64 5
  %2991 = load i8, ptr %2990, align 1, !tbaa !9
  %2992 = and i8 %2991, -2
  %2993 = icmp eq i8 %2992, -128
  br i1 %2993, label %3590, label %3593

2994:                                             ; preds = %2986
  %2995 = getelementptr inbounds i8, ptr %2871, i64 5
  %2996 = load i8, ptr %2995, align 1, !tbaa !9
  %2997 = icmp eq i8 %2996, -126
  br i1 %2997, label %3590, label %3593

2998:                                             ; preds = %2979
  %2999 = getelementptr inbounds i8, ptr %2871, i64 3
  %3000 = load i8, ptr %2999, align 1, !tbaa !9
  %3001 = icmp eq i8 %3000, -126
  br i1 %3001, label %3590, label %3593

3002:                                             ; preds = %2876
  %3003 = getelementptr inbounds i8, ptr %2871, i64 1
  %3004 = load i8, ptr %3003, align 1, !tbaa !9
  switch i8 %3004, label %3593 [
    i8 -127, label %3005
    i8 -123, label %3013
    i8 -119, label %3035
    i8 -114, label %3046
  ]

3005:                                             ; preds = %3002
  %3006 = getelementptr inbounds i8, ptr %2871, i64 2
  %3007 = load i8, ptr %3006, align 1, !tbaa !9
  %3008 = icmp eq i8 %3007, -52
  br i1 %3008, label %3009, label %3593

3009:                                             ; preds = %3005
  %3010 = getelementptr inbounds i8, ptr %2871, i64 3
  %3011 = load i8, ptr %3010, align 1, !tbaa !9
  %3012 = icmp eq i8 %3011, -109
  br i1 %3012, label %3590, label %3593

3013:                                             ; preds = %3002
  %3014 = getelementptr inbounds i8, ptr %2871, i64 2
  %3015 = load i8, ptr %3014, align 1, !tbaa !9
  switch i8 %3015, label %3593 [
    i8 -52, label %3016
    i8 -51, label %3031
  ]

3016:                                             ; preds = %3013
  %3017 = getelementptr inbounds i8, ptr %2871, i64 3
  %3018 = load i8, ptr %3017, align 1, !tbaa !9
  switch i8 %3018, label %3593 [
    i8 -120, label %3019
    i8 -109, label %3590
  ]

3019:                                             ; preds = %3016
  %3020 = getelementptr inbounds i8, ptr %2871, i64 4
  %3021 = load i8, ptr %3020, align 1, !tbaa !9
  switch i8 %3021, label %3593 [
    i8 -52, label %3022
    i8 -51, label %3027
  ]

3022:                                             ; preds = %3019
  %3023 = getelementptr inbounds i8, ptr %2871, i64 5
  %3024 = load i8, ptr %3023, align 1, !tbaa !9
  %3025 = and i8 %3024, -2
  %3026 = icmp eq i8 %3025, -128
  br i1 %3026, label %3590, label %3593

3027:                                             ; preds = %3019
  %3028 = getelementptr inbounds i8, ptr %2871, i64 5
  %3029 = load i8, ptr %3028, align 1, !tbaa !9
  %3030 = icmp eq i8 %3029, -126
  br i1 %3030, label %3590, label %3593

3031:                                             ; preds = %3013
  %3032 = getelementptr inbounds i8, ptr %2871, i64 3
  %3033 = load i8, ptr %3032, align 1, !tbaa !9
  %3034 = icmp eq i8 %3033, -126
  br i1 %3034, label %3590, label %3593

3035:                                             ; preds = %3002
  %3036 = getelementptr inbounds i8, ptr %2871, i64 2
  %3037 = load i8, ptr %3036, align 1, !tbaa !9
  switch i8 %3037, label %3593 [
    i8 -51, label %3038
    i8 -50, label %3042
  ]

3038:                                             ; preds = %3035
  %3039 = getelementptr inbounds i8, ptr %2871, i64 3
  %3040 = load i8, ptr %3039, align 1, !tbaa !9
  %3041 = icmp eq i8 %3040, -126
  br i1 %3041, label %3590, label %3593

3042:                                             ; preds = %3035
  %3043 = getelementptr inbounds i8, ptr %2871, i64 3
  %3044 = load i8, ptr %3043, align 1, !tbaa !9
  %3045 = icmp eq i8 %3044, -71
  br i1 %3045, label %3590, label %3593

3046:                                             ; preds = %3002
  %3047 = getelementptr inbounds i8, ptr %2871, i64 2
  %3048 = load i8, ptr %3047, align 1, !tbaa !9
  %3049 = icmp eq i8 %3048, -50
  br i1 %3049, label %3050, label %3593

3050:                                             ; preds = %3046
  %3051 = getelementptr inbounds i8, ptr %2871, i64 3
  %3052 = load i8, ptr %3051, align 1, !tbaa !9
  %3053 = icmp eq i8 %3052, -71
  br i1 %3053, label %3590, label %3593

3054:                                             ; preds = %2876
  %3055 = getelementptr inbounds i8, ptr %2871, i64 1
  %3056 = load i8, ptr %3055, align 1, !tbaa !9
  switch i8 %3056, label %3593 [
    i8 -91, label %3057
    i8 -76, label %3065
    i8 -66, label %3072
  ]

3057:                                             ; preds = %3054
  %3058 = getelementptr inbounds i8, ptr %2871, i64 2
  %3059 = load i8, ptr %3058, align 1, !tbaa !9
  %3060 = icmp eq i8 %3059, -42
  br i1 %3060, label %3061, label %3593

3061:                                             ; preds = %3057
  %3062 = getelementptr inbounds i8, ptr %2871, i64 3
  %3063 = load i8, ptr %3062, align 1, !tbaa !9
  %3064 = icmp eq i8 %3063, -126
  br i1 %3064, label %3590, label %3593

3065:                                             ; preds = %3054
  %3066 = getelementptr inbounds i8, ptr %2871, i64 2
  %3067 = load i8, ptr %3066, align 1, !tbaa !9
  %3068 = icmp eq i8 %3067, -43
  br i1 %3068, label %3069, label %3593

3069:                                             ; preds = %3065
  %3070 = getelementptr inbounds i8, ptr %2871, i64 3
  %3071 = load i8, ptr %3070, align 1, !tbaa !9
  switch i8 %3071, label %3593 [
    i8 -74, label %3590
    i8 -83, label %3590
    i8 -85, label %3590
    i8 -91, label %3590
  ]

3072:                                             ; preds = %3054
  %3073 = getelementptr inbounds i8, ptr %2871, i64 2
  %3074 = load i8, ptr %3073, align 1, !tbaa !9
  %3075 = icmp eq i8 %3074, -43
  br i1 %3075, label %3076, label %3593

3076:                                             ; preds = %3072
  %3077 = getelementptr inbounds i8, ptr %2871, i64 3
  %3078 = load i8, ptr %3077, align 1, !tbaa !9
  %3079 = icmp eq i8 %3078, -74
  br i1 %3079, label %3590, label %3593

3080:                                             ; preds = %2876
  %3081 = getelementptr inbounds i8, ptr %2871, i64 1
  %3082 = load i8, ptr %3081, align 1, !tbaa !9
  switch i8 %3082, label %3593 [
    i8 -68, label %3083
    i8 -67, label %3096
  ]

3083:                                             ; preds = %3080
  %3084 = getelementptr inbounds i8, ptr %2871, i64 2
  %3085 = load i8, ptr %3084, align 1, !tbaa !9
  %3086 = and i8 %3085, -40
  %3087 = icmp eq i8 %3086, -128
  br i1 %3087, label %3088, label %3593

3088:                                             ; preds = %3083
  %3089 = getelementptr inbounds i8, ptr %2871, i64 3
  %3090 = load i8, ptr %3089, align 1, !tbaa !9
  %3091 = icmp eq i8 %3090, -50
  br i1 %3091, label %3092, label %3593

3092:                                             ; preds = %3088
  %3093 = getelementptr inbounds i8, ptr %2871, i64 4
  %3094 = load i8, ptr %3093, align 1, !tbaa !9
  %3095 = icmp eq i8 %3094, -71
  br i1 %3095, label %3590, label %3593

3096:                                             ; preds = %3080
  %3097 = getelementptr inbounds i8, ptr %2871, i64 2
  %3098 = load i8, ptr %3097, align 1, !tbaa !9
  %3099 = zext i8 %3098 to i32
  %3100 = and i32 %3099, 248
  %3101 = icmp eq i32 %3100, 160
  %3102 = and i32 %3099, 251
  %3103 = icmp eq i32 %3102, 176
  %3104 = or i1 %3101, %3103
  %3105 = icmp eq i8 %3098, -68
  %3106 = or i1 %3105, %3104
  br i1 %3106, label %3107, label %3593

3107:                                             ; preds = %3096
  %3108 = getelementptr inbounds i8, ptr %2871, i64 3
  %3109 = load i8, ptr %3108, align 1, !tbaa !9
  %3110 = icmp eq i8 %3109, -50
  br i1 %3110, label %3111, label %3593

3111:                                             ; preds = %3107
  %3112 = getelementptr inbounds i8, ptr %2871, i64 4
  %3113 = load i8, ptr %3112, align 1, !tbaa !9
  %3114 = icmp eq i8 %3113, -71
  br i1 %3114, label %3590, label %3593

3115:                                             ; preds = %2868
  %3116 = icmp eq i64 %2874, 5
  br i1 %3116, label %3117, label %3330

3117:                                             ; preds = %3115
  %3118 = load i8, ptr %2871, align 1, !tbaa !9
  switch i8 %3118, label %3593 [
    i8 97, label %3119
    i8 102, label %3127
    i8 104, label %3130
    i8 105, label %3138
    i8 106, label %3146
    i8 115, label %3154
    i8 116, label %3159
    i8 119, label %3167
    i8 121, label %3167
    i8 -59, label %3175
    i8 -54, label %3187
    i8 -50, label %3195
    i8 -49, label %3228
    i8 -43, label %3269
    i8 -31, label %3295
  ]

3119:                                             ; preds = %3117
  %3120 = getelementptr inbounds i8, ptr %2871, i64 1
  %3121 = load i8, ptr %3120, align 1, !tbaa !9
  %3122 = icmp eq i8 %3121, -54
  br i1 %3122, label %3123, label %3593

3123:                                             ; preds = %3119
  %3124 = getelementptr inbounds i8, ptr %2871, i64 2
  %3125 = load i8, ptr %3124, align 1, !tbaa !9
  %3126 = icmp eq i8 %3125, -66
  br i1 %3126, label %3590, label %3593

3127:                                             ; preds = %3117
  %3128 = getelementptr inbounds i8, ptr %2871, i64 1
  %3129 = load i8, ptr %3128, align 1, !tbaa !9
  switch i8 %3129, label %3593 [
    i8 102, label %3590
    i8 105, label %3590
    i8 108, label %3590
  ]

3130:                                             ; preds = %3117
  %3131 = getelementptr inbounds i8, ptr %2871, i64 1
  %3132 = load i8, ptr %3131, align 1, !tbaa !9
  %3133 = icmp eq i8 %3132, -52
  br i1 %3133, label %3134, label %3593

3134:                                             ; preds = %3130
  %3135 = getelementptr inbounds i8, ptr %2871, i64 2
  %3136 = load i8, ptr %3135, align 1, !tbaa !9
  %3137 = icmp eq i8 %3136, -79
  br i1 %3137, label %3590, label %3593

3138:                                             ; preds = %3117
  %3139 = getelementptr inbounds i8, ptr %2871, i64 1
  %3140 = load i8, ptr %3139, align 1, !tbaa !9
  %3141 = icmp eq i8 %3140, -52
  br i1 %3141, label %3142, label %3593

3142:                                             ; preds = %3138
  %3143 = getelementptr inbounds i8, ptr %2871, i64 2
  %3144 = load i8, ptr %3143, align 1, !tbaa !9
  %3145 = icmp eq i8 %3144, -121
  br i1 %3145, label %3590, label %3593

3146:                                             ; preds = %3117
  %3147 = getelementptr inbounds i8, ptr %2871, i64 1
  %3148 = load i8, ptr %3147, align 1, !tbaa !9
  %3149 = icmp eq i8 %3148, -52
  br i1 %3149, label %3150, label %3593

3150:                                             ; preds = %3146
  %3151 = getelementptr inbounds i8, ptr %2871, i64 2
  %3152 = load i8, ptr %3151, align 1, !tbaa !9
  %3153 = icmp eq i8 %3152, -116
  br i1 %3153, label %3590, label %3593

3154:                                             ; preds = %3117
  %3155 = getelementptr inbounds i8, ptr %2871, i64 1
  %3156 = load i8, ptr %3155, align 1, !tbaa !9
  %3157 = add i8 %3156, -115
  %3158 = icmp ult i8 %3157, 2
  br i1 %3158, label %3590, label %3593

3159:                                             ; preds = %3117
  %3160 = getelementptr inbounds i8, ptr %2871, i64 1
  %3161 = load i8, ptr %3160, align 1, !tbaa !9
  %3162 = icmp eq i8 %3161, -52
  br i1 %3162, label %3163, label %3593

3163:                                             ; preds = %3159
  %3164 = getelementptr inbounds i8, ptr %2871, i64 2
  %3165 = load i8, ptr %3164, align 1, !tbaa !9
  %3166 = icmp eq i8 %3165, -120
  br i1 %3166, label %3590, label %3593

3167:                                             ; preds = %3117, %3117
  %3168 = getelementptr inbounds i8, ptr %2871, i64 1
  %3169 = load i8, ptr %3168, align 1, !tbaa !9
  %3170 = icmp eq i8 %3169, -52
  br i1 %3170, label %3171, label %3593

3171:                                             ; preds = %3167
  %3172 = getelementptr inbounds i8, ptr %2871, i64 2
  %3173 = load i8, ptr %3172, align 1, !tbaa !9
  %3174 = icmp eq i8 %3173, -118
  br i1 %3174, label %3590, label %3593

3175:                                             ; preds = %3117
  %3176 = getelementptr inbounds i8, ptr %2871, i64 1
  %3177 = load i8, ptr %3176, align 1, !tbaa !9
  %3178 = icmp eq i8 %3177, -65
  br i1 %3178, label %3179, label %3593

3179:                                             ; preds = %3175
  %3180 = getelementptr inbounds i8, ptr %2871, i64 2
  %3181 = load i8, ptr %3180, align 1, !tbaa !9
  %3182 = icmp eq i8 %3181, -59
  br i1 %3182, label %3183, label %3593

3183:                                             ; preds = %3179
  %3184 = getelementptr inbounds i8, ptr %2871, i64 3
  %3185 = load i8, ptr %3184, align 1, !tbaa !9
  %3186 = icmp eq i8 %3185, -65
  br i1 %3186, label %3590, label %3593

3187:                                             ; preds = %3117
  %3188 = getelementptr inbounds i8, ptr %2871, i64 1
  %3189 = load i8, ptr %3188, align 1, !tbaa !9
  %3190 = icmp eq i8 %3189, -68
  br i1 %3190, label %3191, label %3593

3191:                                             ; preds = %3187
  %3192 = getelementptr inbounds i8, ptr %2871, i64 2
  %3193 = load i8, ptr %3192, align 1, !tbaa !9
  %3194 = icmp eq i8 %3193, 110
  br i1 %3194, label %3590, label %3593

3195:                                             ; preds = %3117
  %3196 = getelementptr inbounds i8, ptr %2871, i64 1
  %3197 = load i8, ptr %3196, align 1, !tbaa !9
  %3198 = and i8 %3197, -3
  %3199 = icmp eq i8 %3198, -84
  br i1 %3199, label %3200, label %3208

3200:                                             ; preds = %3195
  %3201 = getelementptr inbounds i8, ptr %2871, i64 2
  %3202 = load i8, ptr %3201, align 1, !tbaa !9
  %3203 = icmp eq i8 %3202, -50
  br i1 %3203, label %3204, label %3593

3204:                                             ; preds = %3200
  %3205 = getelementptr inbounds i8, ptr %2871, i64 3
  %3206 = load i8, ptr %3205, align 1, !tbaa !9
  %3207 = icmp eq i8 %3206, -71
  br i1 %3207, label %3590, label %3593

3208:                                             ; preds = %3195
  switch i8 %3197, label %3593 [
    i8 -79, label %3209
    i8 -73, label %3209
    i8 -71, label %3220
  ]

3209:                                             ; preds = %3208, %3208
  %3210 = getelementptr inbounds i8, ptr %2871, i64 2
  %3211 = load i8, ptr %3210, align 1, !tbaa !9
  switch i8 %3211, label %3593 [
    i8 -51, label %3212
    i8 -50, label %3216
  ]

3212:                                             ; preds = %3209
  %3213 = getelementptr inbounds i8, ptr %2871, i64 3
  %3214 = load i8, ptr %3213, align 1, !tbaa !9
  %3215 = icmp eq i8 %3214, -126
  br i1 %3215, label %3590, label %3593

3216:                                             ; preds = %3209
  %3217 = getelementptr inbounds i8, ptr %2871, i64 3
  %3218 = load i8, ptr %3217, align 1, !tbaa !9
  %3219 = icmp eq i8 %3218, -71
  br i1 %3219, label %3590, label %3593

3220:                                             ; preds = %3208
  %3221 = getelementptr inbounds i8, ptr %2871, i64 2
  %3222 = load i8, ptr %3221, align 1, !tbaa !9
  %3223 = icmp eq i8 %3222, -51
  br i1 %3223, label %3224, label %3593

3224:                                             ; preds = %3220
  %3225 = getelementptr inbounds i8, ptr %2871, i64 3
  %3226 = load i8, ptr %3225, align 1, !tbaa !9
  %3227 = icmp eq i8 %3226, -126
  br i1 %3227, label %3590, label %3593

3228:                                             ; preds = %3117
  %3229 = getelementptr inbounds i8, ptr %2871, i64 1
  %3230 = load i8, ptr %3229, align 1, !tbaa !9
  switch i8 %3230, label %3593 [
    i8 -127, label %3231
    i8 -123, label %3239
    i8 -119, label %3250
    i8 -114, label %3261
  ]

3231:                                             ; preds = %3228
  %3232 = getelementptr inbounds i8, ptr %2871, i64 2
  %3233 = load i8, ptr %3232, align 1, !tbaa !9
  %3234 = icmp eq i8 %3233, -52
  br i1 %3234, label %3235, label %3593

3235:                                             ; preds = %3231
  %3236 = getelementptr inbounds i8, ptr %2871, i64 3
  %3237 = load i8, ptr %3236, align 1, !tbaa !9
  %3238 = icmp eq i8 %3237, -109
  br i1 %3238, label %3590, label %3593

3239:                                             ; preds = %3228
  %3240 = getelementptr inbounds i8, ptr %2871, i64 2
  %3241 = load i8, ptr %3240, align 1, !tbaa !9
  switch i8 %3241, label %3593 [
    i8 -52, label %3242
    i8 -51, label %3246
  ]

3242:                                             ; preds = %3239
  %3243 = getelementptr inbounds i8, ptr %2871, i64 3
  %3244 = load i8, ptr %3243, align 1, !tbaa !9
  %3245 = icmp eq i8 %3244, -109
  br i1 %3245, label %3590, label %3593

3246:                                             ; preds = %3239
  %3247 = getelementptr inbounds i8, ptr %2871, i64 3
  %3248 = load i8, ptr %3247, align 1, !tbaa !9
  %3249 = icmp eq i8 %3248, -126
  br i1 %3249, label %3590, label %3593

3250:                                             ; preds = %3228
  %3251 = getelementptr inbounds i8, ptr %2871, i64 2
  %3252 = load i8, ptr %3251, align 1, !tbaa !9
  switch i8 %3252, label %3593 [
    i8 -51, label %3253
    i8 -50, label %3257
  ]

3253:                                             ; preds = %3250
  %3254 = getelementptr inbounds i8, ptr %2871, i64 3
  %3255 = load i8, ptr %3254, align 1, !tbaa !9
  %3256 = icmp eq i8 %3255, -126
  br i1 %3256, label %3590, label %3593

3257:                                             ; preds = %3250
  %3258 = getelementptr inbounds i8, ptr %2871, i64 3
  %3259 = load i8, ptr %3258, align 1, !tbaa !9
  %3260 = icmp eq i8 %3259, -71
  br i1 %3260, label %3590, label %3593

3261:                                             ; preds = %3228
  %3262 = getelementptr inbounds i8, ptr %2871, i64 2
  %3263 = load i8, ptr %3262, align 1, !tbaa !9
  %3264 = icmp eq i8 %3263, -50
  br i1 %3264, label %3265, label %3593

3265:                                             ; preds = %3261
  %3266 = getelementptr inbounds i8, ptr %2871, i64 3
  %3267 = load i8, ptr %3266, align 1, !tbaa !9
  %3268 = icmp eq i8 %3267, -71
  br i1 %3268, label %3590, label %3593

3269:                                             ; preds = %3117
  %3270 = getelementptr inbounds i8, ptr %2871, i64 1
  %3271 = load i8, ptr %3270, align 1, !tbaa !9
  switch i8 %3271, label %3593 [
    i8 -91, label %3272
    i8 -76, label %3280
    i8 -66, label %3287
  ]

3272:                                             ; preds = %3269
  %3273 = getelementptr inbounds i8, ptr %2871, i64 2
  %3274 = load i8, ptr %3273, align 1, !tbaa !9
  %3275 = icmp eq i8 %3274, -42
  br i1 %3275, label %3276, label %3593

3276:                                             ; preds = %3272
  %3277 = getelementptr inbounds i8, ptr %2871, i64 3
  %3278 = load i8, ptr %3277, align 1, !tbaa !9
  %3279 = icmp eq i8 %3278, -126
  br i1 %3279, label %3590, label %3593

3280:                                             ; preds = %3269
  %3281 = getelementptr inbounds i8, ptr %2871, i64 2
  %3282 = load i8, ptr %3281, align 1, !tbaa !9
  %3283 = icmp eq i8 %3282, -43
  br i1 %3283, label %3284, label %3593

3284:                                             ; preds = %3280
  %3285 = getelementptr inbounds i8, ptr %2871, i64 3
  %3286 = load i8, ptr %3285, align 1, !tbaa !9
  switch i8 %3286, label %3593 [
    i8 -74, label %3590
    i8 -83, label %3590
    i8 -85, label %3590
    i8 -91, label %3590
  ]

3287:                                             ; preds = %3269
  %3288 = getelementptr inbounds i8, ptr %2871, i64 2
  %3289 = load i8, ptr %3288, align 1, !tbaa !9
  %3290 = icmp eq i8 %3289, -43
  br i1 %3290, label %3291, label %3593

3291:                                             ; preds = %3287
  %3292 = getelementptr inbounds i8, ptr %2871, i64 3
  %3293 = load i8, ptr %3292, align 1, !tbaa !9
  %3294 = icmp eq i8 %3293, -74
  br i1 %3294, label %3590, label %3593

3295:                                             ; preds = %3117
  %3296 = getelementptr inbounds i8, ptr %2871, i64 1
  %3297 = load i8, ptr %3296, align 1, !tbaa !9
  switch i8 %3297, label %3593 [
    i8 -68, label %3298
    i8 -67, label %3311
  ]

3298:                                             ; preds = %3295
  %3299 = getelementptr inbounds i8, ptr %2871, i64 2
  %3300 = load i8, ptr %3299, align 1, !tbaa !9
  %3301 = and i8 %3300, -40
  %3302 = icmp eq i8 %3301, -128
  br i1 %3302, label %3303, label %3593

3303:                                             ; preds = %3298
  %3304 = getelementptr inbounds i8, ptr %2871, i64 3
  %3305 = load i8, ptr %3304, align 1, !tbaa !9
  %3306 = icmp eq i8 %3305, -50
  br i1 %3306, label %3307, label %3593

3307:                                             ; preds = %3303
  %3308 = getelementptr inbounds i8, ptr %2871, i64 4
  %3309 = load i8, ptr %3308, align 1, !tbaa !9
  %3310 = icmp eq i8 %3309, -71
  br i1 %3310, label %3590, label %3593

3311:                                             ; preds = %3295
  %3312 = getelementptr inbounds i8, ptr %2871, i64 2
  %3313 = load i8, ptr %3312, align 1, !tbaa !9
  %3314 = zext i8 %3313 to i32
  %3315 = and i32 %3314, 248
  %3316 = icmp eq i32 %3315, 160
  %3317 = and i32 %3314, 251
  %3318 = icmp eq i32 %3317, 176
  %3319 = or i1 %3316, %3318
  %3320 = icmp eq i8 %3313, -68
  %3321 = or i1 %3320, %3319
  br i1 %3321, label %3322, label %3593

3322:                                             ; preds = %3311
  %3323 = getelementptr inbounds i8, ptr %2871, i64 3
  %3324 = load i8, ptr %3323, align 1, !tbaa !9
  %3325 = icmp eq i8 %3324, -50
  br i1 %3325, label %3326, label %3593

3326:                                             ; preds = %3322
  %3327 = getelementptr inbounds i8, ptr %2871, i64 4
  %3328 = load i8, ptr %3327, align 1, !tbaa !9
  %3329 = icmp eq i8 %3328, -71
  br i1 %3329, label %3590, label %3593

3330:                                             ; preds = %3115
  %3331 = icmp sgt i64 %2874, 3
  br i1 %3331, label %3332, label %3510

3332:                                             ; preds = %3330
  %3333 = load i8, ptr %2871, align 1, !tbaa !9
  switch i8 %3333, label %3593 [
    i8 97, label %3334
    i8 102, label %3342
    i8 104, label %3345
    i8 105, label %3353
    i8 106, label %3361
    i8 115, label %3369
    i8 116, label %3374
    i8 119, label %3382
    i8 121, label %3382
    i8 -59, label %3390
    i8 -54, label %3402
    i8 -50, label %3410
    i8 -49, label %3443
    i8 -43, label %3484
  ]

3334:                                             ; preds = %3332
  %3335 = getelementptr inbounds i8, ptr %2871, i64 1
  %3336 = load i8, ptr %3335, align 1, !tbaa !9
  %3337 = icmp eq i8 %3336, -54
  br i1 %3337, label %3338, label %3593

3338:                                             ; preds = %3334
  %3339 = getelementptr inbounds i8, ptr %2871, i64 2
  %3340 = load i8, ptr %3339, align 1, !tbaa !9
  %3341 = icmp eq i8 %3340, -66
  br i1 %3341, label %3590, label %3593

3342:                                             ; preds = %3332
  %3343 = getelementptr inbounds i8, ptr %2871, i64 1
  %3344 = load i8, ptr %3343, align 1, !tbaa !9
  switch i8 %3344, label %3593 [
    i8 102, label %3590
    i8 105, label %3590
    i8 108, label %3590
  ]

3345:                                             ; preds = %3332
  %3346 = getelementptr inbounds i8, ptr %2871, i64 1
  %3347 = load i8, ptr %3346, align 1, !tbaa !9
  %3348 = icmp eq i8 %3347, -52
  br i1 %3348, label %3349, label %3593

3349:                                             ; preds = %3345
  %3350 = getelementptr inbounds i8, ptr %2871, i64 2
  %3351 = load i8, ptr %3350, align 1, !tbaa !9
  %3352 = icmp eq i8 %3351, -79
  br i1 %3352, label %3590, label %3593

3353:                                             ; preds = %3332
  %3354 = getelementptr inbounds i8, ptr %2871, i64 1
  %3355 = load i8, ptr %3354, align 1, !tbaa !9
  %3356 = icmp eq i8 %3355, -52
  br i1 %3356, label %3357, label %3593

3357:                                             ; preds = %3353
  %3358 = getelementptr inbounds i8, ptr %2871, i64 2
  %3359 = load i8, ptr %3358, align 1, !tbaa !9
  %3360 = icmp eq i8 %3359, -121
  br i1 %3360, label %3590, label %3593

3361:                                             ; preds = %3332
  %3362 = getelementptr inbounds i8, ptr %2871, i64 1
  %3363 = load i8, ptr %3362, align 1, !tbaa !9
  %3364 = icmp eq i8 %3363, -52
  br i1 %3364, label %3365, label %3593

3365:                                             ; preds = %3361
  %3366 = getelementptr inbounds i8, ptr %2871, i64 2
  %3367 = load i8, ptr %3366, align 1, !tbaa !9
  %3368 = icmp eq i8 %3367, -116
  br i1 %3368, label %3590, label %3593

3369:                                             ; preds = %3332
  %3370 = getelementptr inbounds i8, ptr %2871, i64 1
  %3371 = load i8, ptr %3370, align 1, !tbaa !9
  %3372 = add i8 %3371, -115
  %3373 = icmp ult i8 %3372, 2
  br i1 %3373, label %3590, label %3593

3374:                                             ; preds = %3332
  %3375 = getelementptr inbounds i8, ptr %2871, i64 1
  %3376 = load i8, ptr %3375, align 1, !tbaa !9
  %3377 = icmp eq i8 %3376, -52
  br i1 %3377, label %3378, label %3593

3378:                                             ; preds = %3374
  %3379 = getelementptr inbounds i8, ptr %2871, i64 2
  %3380 = load i8, ptr %3379, align 1, !tbaa !9
  %3381 = icmp eq i8 %3380, -120
  br i1 %3381, label %3590, label %3593

3382:                                             ; preds = %3332, %3332
  %3383 = getelementptr inbounds i8, ptr %2871, i64 1
  %3384 = load i8, ptr %3383, align 1, !tbaa !9
  %3385 = icmp eq i8 %3384, -52
  br i1 %3385, label %3386, label %3593

3386:                                             ; preds = %3382
  %3387 = getelementptr inbounds i8, ptr %2871, i64 2
  %3388 = load i8, ptr %3387, align 1, !tbaa !9
  %3389 = icmp eq i8 %3388, -118
  br i1 %3389, label %3590, label %3593

3390:                                             ; preds = %3332
  %3391 = getelementptr inbounds i8, ptr %2871, i64 1
  %3392 = load i8, ptr %3391, align 1, !tbaa !9
  %3393 = icmp eq i8 %3392, -65
  br i1 %3393, label %3394, label %3593

3394:                                             ; preds = %3390
  %3395 = getelementptr inbounds i8, ptr %2871, i64 2
  %3396 = load i8, ptr %3395, align 1, !tbaa !9
  %3397 = icmp eq i8 %3396, -59
  br i1 %3397, label %3398, label %3593

3398:                                             ; preds = %3394
  %3399 = getelementptr inbounds i8, ptr %2871, i64 3
  %3400 = load i8, ptr %3399, align 1, !tbaa !9
  %3401 = icmp eq i8 %3400, -65
  br i1 %3401, label %3590, label %3593

3402:                                             ; preds = %3332
  %3403 = getelementptr inbounds i8, ptr %2871, i64 1
  %3404 = load i8, ptr %3403, align 1, !tbaa !9
  %3405 = icmp eq i8 %3404, -68
  br i1 %3405, label %3406, label %3593

3406:                                             ; preds = %3402
  %3407 = getelementptr inbounds i8, ptr %2871, i64 2
  %3408 = load i8, ptr %3407, align 1, !tbaa !9
  %3409 = icmp eq i8 %3408, 110
  br i1 %3409, label %3590, label %3593

3410:                                             ; preds = %3332
  %3411 = getelementptr inbounds i8, ptr %2871, i64 1
  %3412 = load i8, ptr %3411, align 1, !tbaa !9
  %3413 = and i8 %3412, -3
  %3414 = icmp eq i8 %3413, -84
  br i1 %3414, label %3415, label %3423

3415:                                             ; preds = %3410
  %3416 = getelementptr inbounds i8, ptr %2871, i64 2
  %3417 = load i8, ptr %3416, align 1, !tbaa !9
  %3418 = icmp eq i8 %3417, -50
  br i1 %3418, label %3419, label %3593

3419:                                             ; preds = %3415
  %3420 = getelementptr inbounds i8, ptr %2871, i64 3
  %3421 = load i8, ptr %3420, align 1, !tbaa !9
  %3422 = icmp eq i8 %3421, -71
  br i1 %3422, label %3590, label %3593

3423:                                             ; preds = %3410
  switch i8 %3412, label %3593 [
    i8 -79, label %3424
    i8 -73, label %3424
    i8 -71, label %3435
  ]

3424:                                             ; preds = %3423, %3423
  %3425 = getelementptr inbounds i8, ptr %2871, i64 2
  %3426 = load i8, ptr %3425, align 1, !tbaa !9
  switch i8 %3426, label %3593 [
    i8 -51, label %3427
    i8 -50, label %3431
  ]

3427:                                             ; preds = %3424
  %3428 = getelementptr inbounds i8, ptr %2871, i64 3
  %3429 = load i8, ptr %3428, align 1, !tbaa !9
  %3430 = icmp eq i8 %3429, -126
  br i1 %3430, label %3590, label %3593

3431:                                             ; preds = %3424
  %3432 = getelementptr inbounds i8, ptr %2871, i64 3
  %3433 = load i8, ptr %3432, align 1, !tbaa !9
  %3434 = icmp eq i8 %3433, -71
  br i1 %3434, label %3590, label %3593

3435:                                             ; preds = %3423
  %3436 = getelementptr inbounds i8, ptr %2871, i64 2
  %3437 = load i8, ptr %3436, align 1, !tbaa !9
  %3438 = icmp eq i8 %3437, -51
  br i1 %3438, label %3439, label %3593

3439:                                             ; preds = %3435
  %3440 = getelementptr inbounds i8, ptr %2871, i64 3
  %3441 = load i8, ptr %3440, align 1, !tbaa !9
  %3442 = icmp eq i8 %3441, -126
  br i1 %3442, label %3590, label %3593

3443:                                             ; preds = %3332
  %3444 = getelementptr inbounds i8, ptr %2871, i64 1
  %3445 = load i8, ptr %3444, align 1, !tbaa !9
  switch i8 %3445, label %3593 [
    i8 -127, label %3446
    i8 -123, label %3454
    i8 -119, label %3465
    i8 -114, label %3476
  ]

3446:                                             ; preds = %3443
  %3447 = getelementptr inbounds i8, ptr %2871, i64 2
  %3448 = load i8, ptr %3447, align 1, !tbaa !9
  %3449 = icmp eq i8 %3448, -52
  br i1 %3449, label %3450, label %3593

3450:                                             ; preds = %3446
  %3451 = getelementptr inbounds i8, ptr %2871, i64 3
  %3452 = load i8, ptr %3451, align 1, !tbaa !9
  %3453 = icmp eq i8 %3452, -109
  br i1 %3453, label %3590, label %3593

3454:                                             ; preds = %3443
  %3455 = getelementptr inbounds i8, ptr %2871, i64 2
  %3456 = load i8, ptr %3455, align 1, !tbaa !9
  switch i8 %3456, label %3593 [
    i8 -52, label %3457
    i8 -51, label %3461
  ]

3457:                                             ; preds = %3454
  %3458 = getelementptr inbounds i8, ptr %2871, i64 3
  %3459 = load i8, ptr %3458, align 1, !tbaa !9
  %3460 = icmp eq i8 %3459, -109
  br i1 %3460, label %3590, label %3593

3461:                                             ; preds = %3454
  %3462 = getelementptr inbounds i8, ptr %2871, i64 3
  %3463 = load i8, ptr %3462, align 1, !tbaa !9
  %3464 = icmp eq i8 %3463, -126
  br i1 %3464, label %3590, label %3593

3465:                                             ; preds = %3443
  %3466 = getelementptr inbounds i8, ptr %2871, i64 2
  %3467 = load i8, ptr %3466, align 1, !tbaa !9
  switch i8 %3467, label %3593 [
    i8 -51, label %3468
    i8 -50, label %3472
  ]

3468:                                             ; preds = %3465
  %3469 = getelementptr inbounds i8, ptr %2871, i64 3
  %3470 = load i8, ptr %3469, align 1, !tbaa !9
  %3471 = icmp eq i8 %3470, -126
  br i1 %3471, label %3590, label %3593

3472:                                             ; preds = %3465
  %3473 = getelementptr inbounds i8, ptr %2871, i64 3
  %3474 = load i8, ptr %3473, align 1, !tbaa !9
  %3475 = icmp eq i8 %3474, -71
  br i1 %3475, label %3590, label %3593

3476:                                             ; preds = %3443
  %3477 = getelementptr inbounds i8, ptr %2871, i64 2
  %3478 = load i8, ptr %3477, align 1, !tbaa !9
  %3479 = icmp eq i8 %3478, -50
  br i1 %3479, label %3480, label %3593

3480:                                             ; preds = %3476
  %3481 = getelementptr inbounds i8, ptr %2871, i64 3
  %3482 = load i8, ptr %3481, align 1, !tbaa !9
  %3483 = icmp eq i8 %3482, -71
  br i1 %3483, label %3590, label %3593

3484:                                             ; preds = %3332
  %3485 = getelementptr inbounds i8, ptr %2871, i64 1
  %3486 = load i8, ptr %3485, align 1, !tbaa !9
  switch i8 %3486, label %3593 [
    i8 -91, label %3487
    i8 -76, label %3495
    i8 -66, label %3502
  ]

3487:                                             ; preds = %3484
  %3488 = getelementptr inbounds i8, ptr %2871, i64 2
  %3489 = load i8, ptr %3488, align 1, !tbaa !9
  %3490 = icmp eq i8 %3489, -42
  br i1 %3490, label %3491, label %3593

3491:                                             ; preds = %3487
  %3492 = getelementptr inbounds i8, ptr %2871, i64 3
  %3493 = load i8, ptr %3492, align 1, !tbaa !9
  %3494 = icmp eq i8 %3493, -126
  br i1 %3494, label %3590, label %3593

3495:                                             ; preds = %3484
  %3496 = getelementptr inbounds i8, ptr %2871, i64 2
  %3497 = load i8, ptr %3496, align 1, !tbaa !9
  %3498 = icmp eq i8 %3497, -43
  br i1 %3498, label %3499, label %3593

3499:                                             ; preds = %3495
  %3500 = getelementptr inbounds i8, ptr %2871, i64 3
  %3501 = load i8, ptr %3500, align 1, !tbaa !9
  switch i8 %3501, label %3593 [
    i8 -74, label %3590
    i8 -83, label %3590
    i8 -85, label %3590
    i8 -91, label %3590
  ]

3502:                                             ; preds = %3484
  %3503 = getelementptr inbounds i8, ptr %2871, i64 2
  %3504 = load i8, ptr %3503, align 1, !tbaa !9
  %3505 = icmp eq i8 %3504, -43
  br i1 %3505, label %3506, label %3593

3506:                                             ; preds = %3502
  %3507 = getelementptr inbounds i8, ptr %2871, i64 3
  %3508 = load i8, ptr %3507, align 1, !tbaa !9
  %3509 = icmp eq i8 %3508, -74
  br i1 %3509, label %3590, label %3593

3510:                                             ; preds = %3330
  %3511 = icmp eq i64 %2874, 3
  br i1 %3511, label %3512, label %3578

3512:                                             ; preds = %3510
  %3513 = load i8, ptr %2871, align 1, !tbaa !9
  switch i8 %3513, label %3593 [
    i8 97, label %3514
    i8 102, label %3522
    i8 104, label %3525
    i8 105, label %3533
    i8 106, label %3541
    i8 115, label %3549
    i8 116, label %3554
    i8 119, label %3562
    i8 121, label %3562
    i8 -54, label %3570
  ]

3514:                                             ; preds = %3512
  %3515 = getelementptr inbounds i8, ptr %2871, i64 1
  %3516 = load i8, ptr %3515, align 1, !tbaa !9
  %3517 = icmp eq i8 %3516, -54
  br i1 %3517, label %3518, label %3593

3518:                                             ; preds = %3514
  %3519 = getelementptr inbounds i8, ptr %2871, i64 2
  %3520 = load i8, ptr %3519, align 1, !tbaa !9
  %3521 = icmp eq i8 %3520, -66
  br i1 %3521, label %3590, label %3593

3522:                                             ; preds = %3512
  %3523 = getelementptr inbounds i8, ptr %2871, i64 1
  %3524 = load i8, ptr %3523, align 1, !tbaa !9
  switch i8 %3524, label %3593 [
    i8 102, label %3590
    i8 105, label %3590
    i8 108, label %3590
  ]

3525:                                             ; preds = %3512
  %3526 = getelementptr inbounds i8, ptr %2871, i64 1
  %3527 = load i8, ptr %3526, align 1, !tbaa !9
  %3528 = icmp eq i8 %3527, -52
  br i1 %3528, label %3529, label %3593

3529:                                             ; preds = %3525
  %3530 = getelementptr inbounds i8, ptr %2871, i64 2
  %3531 = load i8, ptr %3530, align 1, !tbaa !9
  %3532 = icmp eq i8 %3531, -79
  br i1 %3532, label %3590, label %3593

3533:                                             ; preds = %3512
  %3534 = getelementptr inbounds i8, ptr %2871, i64 1
  %3535 = load i8, ptr %3534, align 1, !tbaa !9
  %3536 = icmp eq i8 %3535, -52
  br i1 %3536, label %3537, label %3593

3537:                                             ; preds = %3533
  %3538 = getelementptr inbounds i8, ptr %2871, i64 2
  %3539 = load i8, ptr %3538, align 1, !tbaa !9
  %3540 = icmp eq i8 %3539, -121
  br i1 %3540, label %3590, label %3593

3541:                                             ; preds = %3512
  %3542 = getelementptr inbounds i8, ptr %2871, i64 1
  %3543 = load i8, ptr %3542, align 1, !tbaa !9
  %3544 = icmp eq i8 %3543, -52
  br i1 %3544, label %3545, label %3593

3545:                                             ; preds = %3541
  %3546 = getelementptr inbounds i8, ptr %2871, i64 2
  %3547 = load i8, ptr %3546, align 1, !tbaa !9
  %3548 = icmp eq i8 %3547, -116
  br i1 %3548, label %3590, label %3593

3549:                                             ; preds = %3512
  %3550 = getelementptr inbounds i8, ptr %2871, i64 1
  %3551 = load i8, ptr %3550, align 1, !tbaa !9
  %3552 = add i8 %3551, -115
  %3553 = icmp ult i8 %3552, 2
  br i1 %3553, label %3590, label %3593

3554:                                             ; preds = %3512
  %3555 = getelementptr inbounds i8, ptr %2871, i64 1
  %3556 = load i8, ptr %3555, align 1, !tbaa !9
  %3557 = icmp eq i8 %3556, -52
  br i1 %3557, label %3558, label %3593

3558:                                             ; preds = %3554
  %3559 = getelementptr inbounds i8, ptr %2871, i64 2
  %3560 = load i8, ptr %3559, align 1, !tbaa !9
  %3561 = icmp eq i8 %3560, -120
  br i1 %3561, label %3590, label %3593

3562:                                             ; preds = %3512, %3512
  %3563 = getelementptr inbounds i8, ptr %2871, i64 1
  %3564 = load i8, ptr %3563, align 1, !tbaa !9
  %3565 = icmp eq i8 %3564, -52
  br i1 %3565, label %3566, label %3593

3566:                                             ; preds = %3562
  %3567 = getelementptr inbounds i8, ptr %2871, i64 2
  %3568 = load i8, ptr %3567, align 1, !tbaa !9
  %3569 = icmp eq i8 %3568, -118
  br i1 %3569, label %3590, label %3593

3570:                                             ; preds = %3512
  %3571 = getelementptr inbounds i8, ptr %2871, i64 1
  %3572 = load i8, ptr %3571, align 1, !tbaa !9
  %3573 = icmp eq i8 %3572, -68
  br i1 %3573, label %3574, label %3593

3574:                                             ; preds = %3570
  %3575 = getelementptr inbounds i8, ptr %2871, i64 2
  %3576 = load i8, ptr %3575, align 1, !tbaa !9
  %3577 = icmp eq i8 %3576, 110
  br i1 %3577, label %3590, label %3593

3578:                                             ; preds = %3510
  %3579 = icmp sgt i64 %2874, 1
  br i1 %3579, label %3580, label %3593

3580:                                             ; preds = %3578
  %3581 = load i8, ptr %2871, align 1, !tbaa !9
  switch i8 %3581, label %3593 [
    i8 102, label %3582
    i8 115, label %3585
  ]

3582:                                             ; preds = %3580
  %3583 = getelementptr inbounds i8, ptr %2871, i64 1
  %3584 = load i8, ptr %3583, align 1, !tbaa !9
  switch i8 %3584, label %3593 [
    i8 102, label %3590
    i8 105, label %3590
    i8 108, label %3590
  ]

3585:                                             ; preds = %3580
  %3586 = getelementptr inbounds i8, ptr %2871, i64 1
  %3587 = load i8, ptr %3586, align 1, !tbaa !9
  %3588 = add i8 %3587, -115
  %3589 = icmp ult i8 %3588, 2
  br i1 %3589, label %3590, label %3593

3590:                                             ; preds = %3585, %3582, %3582, %3582, %3574, %3566, %3558, %3549, %3545, %3537, %3529, %3522, %3522, %3522, %3518, %3506, %3499, %3499, %3499, %3499, %3491, %3480, %3472, %3468, %3461, %3457, %3450, %3439, %3431, %3427, %3419, %3406, %3398, %3386, %3378, %3369, %3365, %3357, %3349, %3342, %3342, %3342, %3338, %3326, %3307, %3291, %3284, %3284, %3284, %3284, %3276, %3265, %3257, %3253, %3246, %3242, %3235, %3224, %3216, %3212, %3204, %3191, %3183, %3171, %3163, %3154, %3150, %3142, %3134, %3127, %3127, %3127, %3123, %3111, %3092, %3076, %3069, %3069, %3069, %3069, %3061, %3050, %3042, %3038, %3031, %3027, %3022, %3016, %3009, %2998, %2994, %2989, %2975, %2971, %2963, %2950, %2942, %2930, %2922, %2913, %2909, %2901, %2893, %2886, %2886, %2886, %2882
  %3591 = load ptr, ptr %12, align 8, !tbaa !5
  %3592 = call ptr @Perl__add_range_to_invlist(ptr noundef %3591, i64 noundef 0, i64 noundef -1)
  store ptr %3592, ptr %12, align 8, !tbaa !5
  br label %3657

3593:                                             ; preds = %3585, %3582, %3580, %3578, %3574, %3570, %3566, %3562, %3558, %3554, %3549, %3545, %3541, %3537, %3533, %3529, %3525, %3522, %3518, %3514, %3512, %3506, %3502, %3499, %3495, %3491, %3487, %3484, %3480, %3476, %3472, %3468, %3465, %3461, %3457, %3454, %3450, %3446, %3443, %3439, %3435, %3431, %3427, %3424, %3423, %3419, %3415, %3406, %3402, %3398, %3394, %3390, %3386, %3382, %3378, %3374, %3369, %3365, %3361, %3357, %3353, %3349, %3345, %3342, %3338, %3334, %3332, %3326, %3322, %3311, %3307, %3303, %3298, %3295, %3291, %3287, %3284, %3280, %3276, %3272, %3269, %3265, %3261, %3257, %3253, %3250, %3246, %3242, %3239, %3235, %3231, %3228, %3224, %3220, %3216, %3212, %3209, %3208, %3204, %3200, %3191, %3187, %3183, %3179, %3175, %3171, %3167, %3163, %3159, %3154, %3150, %3146, %3142, %3138, %3134, %3130, %3127, %3123, %3119, %3117, %3111, %3107, %3096, %3092, %3088, %3083, %3080, %3076, %3072, %3069, %3065, %3061, %3057, %3054, %3050, %3046, %3042, %3038, %3035, %3031, %3027, %3022, %3019, %3016, %3013, %3009, %3005, %3002, %2998, %2994, %2989, %2986, %2982, %2979, %2975, %2971, %2968, %2967, %2963, %2959, %2950, %2946, %2942, %2938, %2934, %2930, %2926, %2922, %2918, %2913, %2909, %2905, %2901, %2897, %2893, %2889, %2886, %2882, %2878, %2876
  %3594 = load ptr, ptr %12, align 8, !tbaa !5
  %3595 = call ptr @Perl__add_range_to_invlist(ptr noundef %3594, i64 noundef %2774, i64 noundef %2774)
  store ptr %3595, ptr %12, align 8, !tbaa !5
  %3596 = load ptr, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  %3597 = icmp eq ptr %3596, null
  br i1 %3597, label %3598, label %3607

3598:                                             ; preds = %3593
  %3599 = load ptr, ptr @PL_utf8_tofold, align 8, !tbaa !5
  %3600 = icmp eq ptr %3599, null
  br i1 %3600, label %3601, label %3604

3601:                                             ; preds = %3598
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %11) #21
  %3602 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull @.str.201, ptr noundef nonnull %11, ptr noundef null, i8 noundef zeroext 2) #21
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %11) #21
  %3603 = load ptr, ptr @PL_utf8_tofold, align 8, !tbaa !5
  br label %3604

3604:                                             ; preds = %3601, %3598
  %3605 = phi ptr [ %3603, %3601 ], [ %3599, %3598 ]
  %3606 = call ptr @Perl__swash_inversion_hash(ptr noundef %3605) #21
  store ptr %3606, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  br label %3607

3607:                                             ; preds = %3604, %3593
  %3608 = phi ptr [ %3606, %3604 ], [ %3596, %3593 ]
  %3609 = zext i8 %2870 to i32
  %3610 = call ptr @Perl_hv_common_key_len(ptr noundef %3608, ptr noundef nonnull %2871, i32 noundef %3609, i32 noundef 32, ptr noundef null, i32 noundef 0) #21
  %3611 = icmp eq ptr %3610, null
  br i1 %3611, label %3657, label %3612

3612:                                             ; preds = %3607
  %3613 = load ptr, ptr %3610, align 8, !tbaa !5
  %3614 = getelementptr inbounds %struct.sv, ptr %3613, i64 0, i32 2
  %3615 = icmp ult i64 %2774, 128
  br label %3616

3616:                                             ; preds = %3653, %3612
  %3617 = phi ptr [ %3595, %3612 ], [ %3654, %3653 ]
  %3618 = phi i64 [ 0, %3612 ], [ %3655, %3653 ]
  %3619 = load i32, ptr %3614, align 4, !tbaa !62
  %3620 = and i32 %3619, 8388608
  %3621 = icmp eq i32 %3620, 0
  br i1 %3621, label %3625, label %3622

3622:                                             ; preds = %3616
  %3623 = call i32 @Perl_mg_size(ptr noundef nonnull %3613) #21
  %3624 = sext i32 %3623 to i64
  br label %3629

3625:                                             ; preds = %3616
  %3626 = load ptr, ptr %3613, align 8, !tbaa !122
  %3627 = getelementptr inbounds %struct.xpvav, ptr %3626, i64 0, i32 2
  %3628 = load i64, ptr %3627, align 8, !tbaa !124
  br label %3629

3629:                                             ; preds = %3625, %3622
  %3630 = phi i64 [ %3624, %3622 ], [ %3628, %3625 ]
  %3631 = icmp sgt i64 %3618, %3630
  br i1 %3631, label %3656, label %3632

3632:                                             ; preds = %3629
  %3633 = call ptr @Perl_av_fetch(ptr noundef %3613, i64 noundef %3618, i32 noundef 0) #21
  %3634 = load ptr, ptr %3633, align 8, !tbaa !5
  %3635 = getelementptr inbounds %struct.sv, ptr %3634, i64 0, i32 2
  %3636 = load i32, ptr %3635, align 4, !tbaa !62
  %3637 = and i32 %3636, -2145386240
  %3638 = icmp eq i32 %3637, -2147483392
  br i1 %3638, label %3639, label %3643

3639:                                             ; preds = %3632
  %3640 = load ptr, ptr %3634, align 8, !tbaa !63
  %3641 = getelementptr inbounds %struct.xpvuv, ptr %3640, i64 0, i32 4
  %3642 = load i64, ptr %3641, align 8, !tbaa !9
  br label %3645

3643:                                             ; preds = %3632
  %3644 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %3634, i32 noundef 2) #21
  br label %3645

3645:                                             ; preds = %3643, %3639
  %3646 = phi i64 [ %3642, %3639 ], [ %3644, %3643 ]
  %3647 = load i8, ptr %1496, align 1, !tbaa !164
  switch i8 %3647, label %3651 [
    i8 36, label %3648
    i8 39, label %3648
  ]

3648:                                             ; preds = %3645, %3645
  %3649 = icmp ugt i64 %3646, 127
  %3650 = xor i1 %3615, %3649
  br i1 %3650, label %3651, label %3653

3651:                                             ; preds = %3648, %3645
  %3652 = call ptr @Perl__add_range_to_invlist(ptr noundef %3617, i64 noundef %3646, i64 noundef %3646)
  br label %3653

3653:                                             ; preds = %3651, %3648
  %3654 = phi ptr [ %3617, %3648 ], [ %3652, %3651 ]
  %3655 = add nuw nsw i64 %3618, 1
  br label %3616, !llvm.loop !279

3656:                                             ; preds = %3629
  store ptr %3617, ptr %12, align 8, !tbaa !5
  br label %3657

3657:                                             ; preds = %3656, %3607, %3590
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %13) #21
  br label %3658

3658:                                             ; preds = %3657, %2764, %2762, %2762, %2756
  %3659 = load ptr, ptr %12, align 8, !tbaa !5
  br label %3660

3660:                                             ; preds = %3658, %2737
  %3661 = phi ptr [ %3659, %3658 ], [ %2738, %2737 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #21
  %3662 = and i32 %148, 2048
  %3663 = icmp eq i32 %3662, 0
  br i1 %3663, label %3677, label %3664

3664:                                             ; preds = %3660
  %3665 = load ptr, ptr %16, align 8, !tbaa !5
  %3666 = getelementptr inbounds %struct.regnode, ptr %3665, i64 0, i32 1
  %3667 = load i8, ptr %3666, align 1, !tbaa !164
  %3668 = icmp eq i8 %3667, 34
  %3669 = load ptr, ptr %82, align 8, !tbaa !197
  %3670 = load i8, ptr %3669, align 8, !tbaa !196
  %3671 = and i8 %3670, -14
  %3672 = select i1 %3668, i8 %3670, i8 %3671
  %3673 = and i8 %3672, -2
  store i8 %3673, ptr %3669, align 8, !tbaa !196
  %3674 = getelementptr inbounds %struct.regnode_charclass_class, ptr %3669, i64 0, i32 5
  store i32 0, ptr %3674, align 4, !tbaa !254
  %3675 = getelementptr inbounds %struct.regnode_ssc, ptr %3669, i64 0, i32 6
  %3676 = load ptr, ptr %3675, align 8, !tbaa !195
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %3676, ptr noundef %3661, i1 noundef zeroext false, ptr noundef nonnull %3675)
  br label %3685

3677:                                             ; preds = %3660
  %3678 = load ptr, ptr %82, align 8, !tbaa !197
  %3679 = getelementptr inbounds %struct.regnode_ssc, ptr %3678, i64 0, i32 6
  %3680 = load ptr, ptr %3679, align 8, !tbaa !195
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %3680, ptr noundef %3661, i1 noundef zeroext false, ptr noundef nonnull %3679)
  %3681 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %3681, ptr noundef %147)
  %3682 = load ptr, ptr %82, align 8, !tbaa !197
  %3683 = load i8, ptr %3682, align 8, !tbaa !196
  %3684 = and i8 %3683, -2
  store i8 %3684, ptr %3682, align 8, !tbaa !196
  br label %3685

3685:                                             ; preds = %3677, %3664
  %3686 = and i32 %148, -6145
  %3687 = icmp eq ptr %3661, null
  br i1 %3687, label %5248, label %3688

3688:                                             ; preds = %3685
  %3689 = getelementptr inbounds %struct.sv, ptr %3661, i64 0, i32 1
  %3690 = load i32, ptr %3689, align 8, !tbaa !22
  %3691 = icmp ugt i32 %3690, 1
  br i1 %3691, label %3692, label %3694

3692:                                             ; preds = %3688
  %3693 = add i32 %3690, -1
  store i32 %3693, ptr %3689, align 8, !tbaa !22
  br label %5248

3694:                                             ; preds = %3688
  call void @Perl_sv_free2(ptr noundef nonnull %3661, i32 noundef %3690) #21
  br label %5248

3695:                                             ; preds = %1492, %2647
  %3696 = phi i8 [ %1564, %2647 ], [ 47, %1492 ]
  %3697 = phi i64 [ %1565, %2647 ], [ 47, %1492 ]
  %3698 = phi i32 [ %2648, %2647 ], [ 47, %1492 ]
  %3699 = lshr i32 %3698, 3
  %3700 = zext i32 %3699 to i64
  %3701 = getelementptr inbounds [12 x i8], ptr @PL_varies_bitmask, i64 0, i64 %3700
  %3702 = load i8, ptr %3701, align 1, !tbaa !9
  %3703 = zext i8 %3702 to i32
  %3704 = and i32 %3698, 7
  %3705 = shl nuw nsw i32 1, %3704
  %3706 = and i32 %3705, %3703
  %3707 = icmp eq i32 %3706, 0
  br i1 %3707, label %4592, label %3708

3708:                                             ; preds = %3695
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %25) #21
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %26) #21
  %3709 = zext i8 %3696 to i64
  %3710 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %3709
  %3711 = load i8, ptr %3710, align 1, !tbaa !9
  switch i8 %3711, label %4552 [
    i8 48, label %5333
    i8 43, label %3712
    i8 42, label %3758
    i8 44, label %3810
  ]

3712:                                             ; preds = %3708
  %3713 = and i32 %148, 7168
  %3714 = icmp eq i32 %3713, 0
  br i1 %3714, label %3750, label %3715

3715:                                             ; preds = %3712
  %3716 = getelementptr inbounds %struct.regnode, ptr %1495, i64 1, i32 1
  %3717 = load i8, ptr %3716, align 1, !tbaa !164
  %3718 = add i8 %3717, -33
  %3719 = icmp ult i8 %3718, -2
  %3720 = and i32 %148, 6144
  %3721 = icmp eq i32 %3720, 0
  %3722 = select i1 %3719, i1 %3721, i1 false
  br i1 %3722, label %3750, label %3723

3723:                                             ; preds = %3715
  %3724 = icmp ugt i8 %3696, 93
  br i1 %3724, label %3725, label %3729

3725:                                             ; preds = %3723
  %3726 = zext i8 %3696 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %3726, i32 noundef 93) #21
  %3727 = load i8, ptr %1496, align 1, !tbaa !164
  %3728 = zext i8 %3727 to i64
  br label %3729

3729:                                             ; preds = %3725, %3723
  %3730 = phi i64 [ %3728, %3725 ], [ %3709, %3723 ]
  %3731 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %3730
  %3732 = load i8, ptr %3731, align 1, !tbaa !9
  %3733 = icmp eq i8 %3732, 0
  br i1 %3733, label %3737, label %3734

3734:                                             ; preds = %3729
  %3735 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %3736 = load i32, ptr %3735, align 4, !tbaa !166
  br label %3741

3737:                                             ; preds = %3729
  %3738 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %3739 = load i16, ptr %3738, align 2, !tbaa !168
  %3740 = zext i16 %3739 to i32
  br label %3741

3741:                                             ; preds = %3737, %3734
  %3742 = phi i32 [ %3736, %3734 ], [ %3740, %3737 ]
  %3743 = icmp eq i32 %3742, 0
  %3744 = sext i32 %3742 to i64
  %3745 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %3744
  %3746 = select i1 %3743, ptr null, ptr %3745
  %3747 = getelementptr inbounds %struct.regnode, ptr %1495, i64 1
  store ptr %3747, ptr %16, align 8, !tbaa !5
  %3748 = and i32 %148, 1024
  %3749 = icmp eq i32 %3748, 0
  br i1 %3749, label %3899, label %3892

3750:                                             ; preds = %3715, %3712
  %3751 = and i32 %148, 1024
  %3752 = icmp eq i32 %3751, 0
  br i1 %3752, label %3756, label %3753

3753:                                             ; preds = %3750
  %3754 = load i64, ptr %5, align 8, !tbaa !258
  %3755 = add nsw i64 %3754, 1
  store i64 %3755, ptr %5, align 8, !tbaa !258
  br label %3756

3756:                                             ; preds = %3753, %3750
  %3757 = add nsw i64 %150, 1
  br label %3758

3758:                                             ; preds = %3708, %3756
  %3759 = phi i64 [ %150, %3708 ], [ %3757, %3756 ]
  %3760 = and i32 %148, 6144
  %3761 = icmp eq i32 %3760, 0
  br i1 %3761, label %3780, label %3762

3762:                                             ; preds = %3758
  %3763 = icmp ugt i8 %3696, 93
  br i1 %3763, label %3764, label %3768

3764:                                             ; preds = %3762
  %3765 = zext i8 %3696 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %3765, i32 noundef 93) #21
  %3766 = load i8, ptr %1496, align 1, !tbaa !164
  %3767 = zext i8 %3766 to i64
  br label %3768

3768:                                             ; preds = %3764, %3762
  %3769 = phi i64 [ %3767, %3764 ], [ %3709, %3762 ]
  %3770 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %3769
  %3771 = load i8, ptr %3770, align 1, !tbaa !9
  %3772 = icmp eq i8 %3771, 0
  br i1 %3772, label %3776, label %3773

3773:                                             ; preds = %3768
  %3774 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %3775 = load i32, ptr %3774, align 4, !tbaa !166
  br label %3876

3776:                                             ; preds = %3768
  %3777 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %3778 = load i16, ptr %3777, align 2, !tbaa !168
  %3779 = zext i16 %3778 to i32
  br label %3876

3780:                                             ; preds = %3758
  %3781 = and i32 %148, 1024
  %3782 = icmp eq i32 %3781, 0
  br i1 %3782, label %3785, label %3783

3783:                                             ; preds = %3780
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  store ptr %80, ptr %81, align 8, !tbaa !192
  %3784 = load i8, ptr %1496, align 1, !tbaa !164
  br label %3785

3785:                                             ; preds = %3780, %3783
  %3786 = phi i8 [ %3696, %3780 ], [ %3784, %3783 ]
  %3787 = icmp ugt i8 %3786, 93
  br i1 %3787, label %3788, label %3791

3788:                                             ; preds = %3785
  %3789 = zext i8 %3786 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %3789, i32 noundef 93) #21
  %3790 = load i8, ptr %1496, align 1, !tbaa !164
  br label %3791

3791:                                             ; preds = %3788, %3785
  %3792 = phi i8 [ %3790, %3788 ], [ %3786, %3785 ]
  %3793 = zext i8 %3792 to i64
  %3794 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %3793
  %3795 = load i8, ptr %3794, align 1, !tbaa !9
  %3796 = icmp eq i8 %3795, 0
  br i1 %3796, label %3800, label %3797

3797:                                             ; preds = %3791
  %3798 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %3799 = load i32, ptr %3798, align 4, !tbaa !166
  br label %3804

3800:                                             ; preds = %3791
  %3801 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %3802 = load i16, ptr %3801, align 2, !tbaa !168
  %3803 = zext i16 %3802 to i32
  br label %3804

3804:                                             ; preds = %3800, %3797
  %3805 = phi i32 [ %3799, %3797 ], [ %3803, %3800 ]
  %3806 = icmp eq i32 %3805, 0
  %3807 = sext i32 %3805 to i64
  %3808 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %3807
  %3809 = select i1 %3806, ptr null, ptr %3808
  store ptr %3809, ptr %16, align 8, !tbaa !5
  br label %4505

3810:                                             ; preds = %3708
  %3811 = icmp sgt i32 %145, 0
  %3812 = add i8 %3696, -45
  %3813 = icmp ult i8 %3812, 2
  %3814 = and i1 %3811, %3813
  br i1 %3814, label %3815, label %3824

3815:                                             ; preds = %3810
  %3816 = load i8, ptr %1495, align 2, !tbaa !169
  %3817 = zext i8 %3816 to i32
  %3818 = icmp eq i32 %145, %3817
  br i1 %3818, label %3834, label %3819

3819:                                             ; preds = %3815
  %3820 = getelementptr inbounds %struct.regnode_2, ptr %1495, i64 0, i32 3
  %3821 = load i16, ptr %3820, align 2, !tbaa !170
  %3822 = getelementptr inbounds %struct.regnode_2, ptr %1495, i64 0, i32 4
  %3823 = load i16, ptr %3822, align 2, !tbaa !280
  br label %3834

3824:                                             ; preds = %3810
  %3825 = getelementptr inbounds %struct.regnode_2, ptr %1495, i64 0, i32 3
  %3826 = load i16, ptr %3825, align 2, !tbaa !170
  %3827 = getelementptr inbounds %struct.regnode_2, ptr %1495, i64 0, i32 4
  %3828 = load i16, ptr %3827, align 2, !tbaa !280
  %3829 = icmp ugt i8 %3696, 93
  br i1 %3829, label %3830, label %3834

3830:                                             ; preds = %3824
  %3831 = zext i8 %3696 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %3831, i32 noundef 93) #21
  %3832 = load i8, ptr %1496, align 1, !tbaa !164
  %3833 = zext i8 %3832 to i64
  br label %3834

3834:                                             ; preds = %3815, %3819, %3830, %3824
  %3835 = phi i64 [ %3709, %3815 ], [ %3709, %3819 ], [ %3833, %3830 ], [ %3709, %3824 ]
  %3836 = phi i16 [ 1, %3815 ], [ %3823, %3819 ], [ %3828, %3830 ], [ %3828, %3824 ]
  %3837 = phi i16 [ 1, %3815 ], [ %3821, %3819 ], [ %3826, %3830 ], [ %3826, %3824 ]
  %3838 = phi i8 [ %3696, %3815 ], [ %3696, %3819 ], [ %3832, %3830 ], [ %3696, %3824 ]
  %3839 = zext i16 %3837 to i64
  %3840 = zext i16 %3836 to i64
  %3841 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %3835
  %3842 = load i8, ptr %3841, align 1, !tbaa !9
  %3843 = icmp eq i8 %3842, 0
  br i1 %3843, label %3847, label %3844

3844:                                             ; preds = %3834
  %3845 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %3846 = load i32, ptr %3845, align 4, !tbaa !166
  br label %3851

3847:                                             ; preds = %3834
  %3848 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %3849 = load i16, ptr %3848, align 2, !tbaa !168
  %3850 = zext i16 %3849 to i32
  br label %3851

3851:                                             ; preds = %3847, %3844
  %3852 = phi i32 [ %3846, %3844 ], [ %3850, %3847 ]
  %3853 = icmp eq i32 %3852, 0
  %3854 = sext i32 %3852 to i64
  %3855 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %3854
  %3856 = select i1 %3853, ptr null, ptr %3855
  %3857 = icmp eq i8 %3838, 47
  br i1 %3857, label %3858, label %3868

3858:                                             ; preds = %3851
  br i1 %76, label %3862, label %3859

3859:                                             ; preds = %3858
  %3860 = load ptr, ptr %99, align 8, !tbaa !198
  %3861 = load i64, ptr %3860, align 8, !tbaa !71
  br label %3862

3862:                                             ; preds = %3858, %3859
  %3863 = phi i64 [ %3861, %3859 ], [ 0, %3858 ]
  %3864 = trunc i64 %3863 to i32
  %3865 = trunc i64 %3863 to i8
  %3866 = icmp sgt i32 %3864, 255
  %3867 = select i1 %3866, i8 -1, i8 %3865
  store i8 %3867, ptr %1495, align 2, !tbaa !169
  br label %3868

3868:                                             ; preds = %3851, %3862
  %3869 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2
  store ptr %3869, ptr %16, align 8, !tbaa !5
  %3870 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2, i32 1
  %3871 = load i8, ptr %3870, align 1, !tbaa !164
  %3872 = icmp eq i8 %3871, 68
  %3873 = zext i1 %3872 to i32
  %3874 = and i32 %148, 1024
  %3875 = icmp eq i32 %3874, 0
  br i1 %3875, label %3899, label %3885

3876:                                             ; preds = %3773, %3776
  %3877 = phi i32 [ %3775, %3773 ], [ %3779, %3776 ]
  %3878 = icmp eq i32 %3877, 0
  %3879 = sext i32 %3877 to i64
  %3880 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %3879
  %3881 = select i1 %3878, ptr null, ptr %3880
  %3882 = getelementptr inbounds %struct.regnode, ptr %1495, i64 1
  store ptr %3882, ptr %16, align 8, !tbaa !5
  %3883 = and i32 %148, 1024
  %3884 = icmp eq i32 %3883, 0
  br i1 %3884, label %3899, label %3887

3885:                                             ; preds = %3868
  %3886 = icmp eq i16 %3837, 0
  br i1 %3886, label %3887, label %3892

3887:                                             ; preds = %3876, %3885
  %3888 = phi i64 [ %3840, %3885 ], [ 32767, %3876 ]
  %3889 = phi i32 [ %3873, %3885 ], [ 0, %3876 ]
  %3890 = phi ptr [ %3856, %3885 ], [ %3881, %3876 ]
  %3891 = phi i64 [ %150, %3885 ], [ %3759, %3876 ]
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  br label %3892

3892:                                             ; preds = %3885, %3887, %3741
  %3893 = phi i64 [ 0, %3887 ], [ %3839, %3885 ], [ 1, %3741 ]
  %3894 = phi i64 [ %3888, %3887 ], [ %3840, %3885 ], [ 32767, %3741 ]
  %3895 = phi i32 [ %3889, %3887 ], [ %3873, %3885 ], [ 0, %3741 ]
  %3896 = phi ptr [ %3890, %3887 ], [ %3856, %3885 ], [ %3746, %3741 ]
  %3897 = phi i64 [ %3891, %3887 ], [ %150, %3885 ], [ %150, %3741 ]
  %3898 = load i64, ptr %5, align 8, !tbaa !258
  br label %3905

3899:                                             ; preds = %3876, %3741, %3868
  %3900 = phi i64 [ %150, %3868 ], [ %150, %3741 ], [ %3759, %3876 ]
  %3901 = phi ptr [ %3856, %3868 ], [ %3746, %3741 ], [ %3881, %3876 ]
  %3902 = phi i32 [ %3873, %3868 ], [ 0, %3741 ], [ 0, %3876 ]
  %3903 = phi i64 [ %3840, %3868 ], [ 32767, %3741 ], [ 32767, %3876 ]
  %3904 = phi i64 [ %3839, %3868 ], [ 1, %3741 ], [ 0, %3876 ]
  br i1 %76, label %3918, label %3905

3905:                                             ; preds = %3892, %3899
  %3906 = phi i1 [ %110, %3892 ], [ true, %3899 ]
  %3907 = phi i64 [ %3898, %3892 ], [ 0, %3899 ]
  %3908 = phi i64 [ %3893, %3892 ], [ %3904, %3899 ]
  %3909 = phi i64 [ %3894, %3892 ], [ %3903, %3899 ]
  %3910 = phi i32 [ %3895, %3892 ], [ %3902, %3899 ]
  %3911 = phi ptr [ %3896, %3892 ], [ %3901, %3899 ]
  %3912 = phi i64 [ %3897, %3892 ], [ %3900, %3899 ]
  %3913 = load i32, ptr %77, align 8, !tbaa !199
  %3914 = and i32 %3913, -897
  store i32 %3914, ptr %77, align 8, !tbaa !199
  %3915 = icmp eq i32 %153, 0
  br i1 %3915, label %3918, label %3916

3916:                                             ; preds = %3905
  %3917 = or i32 %3914, 64
  store i32 %3917, ptr %77, align 8, !tbaa !199
  br label %3918

3918:                                             ; preds = %3905, %3916, %3899
  %3919 = phi i1 [ %3906, %3916 ], [ %3906, %3905 ], [ false, %3899 ]
  %3920 = phi i64 [ %3907, %3916 ], [ %3907, %3905 ], [ 0, %3899 ]
  %3921 = phi i64 [ %3908, %3916 ], [ %3908, %3905 ], [ %3904, %3899 ]
  %3922 = phi i64 [ %3909, %3916 ], [ %3909, %3905 ], [ %3903, %3899 ]
  %3923 = phi i32 [ %3910, %3916 ], [ %3910, %3905 ], [ %3902, %3899 ]
  %3924 = phi ptr [ %3911, %3916 ], [ %3911, %3905 ], [ %3901, %3899 ]
  %3925 = phi i64 [ %3912, %3916 ], [ %3912, %3905 ], [ %3900, %3899 ]
  %3926 = phi i32 [ %3913, %3916 ], [ %3913, %3905 ], [ 0, %3899 ]
  %3927 = and i32 %148, 6144
  %3928 = icmp eq i32 %3927, 0
  br i1 %3928, label %3957, label %3929

3929:                                             ; preds = %3918
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %26, i8 0, i64 56, i1 false)
  store i8 19, ptr %111, align 1, !tbaa !193
  store i16 1, ptr %112, align 2, !tbaa !194
  store i32 -1, ptr %113, align 4, !tbaa !166
  %3930 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %3931 = getelementptr inbounds %struct.sv, ptr %3930, i64 0, i32 2
  %3932 = load i32, ptr %3931, align 4, !tbaa !62
  %3933 = and i32 %3932, 268435456
  %3934 = icmp eq i32 %3933, 0
  br i1 %3934, label %3935, label %3940

3935:                                             ; preds = %3929
  %3936 = load ptr, ptr %3930, align 8, !tbaa !63
  %3937 = getelementptr inbounds %struct.xpv, ptr %3936, i64 0, i32 3
  %3938 = load i64, ptr %3937, align 8, !tbaa !9
  %3939 = icmp ult i64 %3938, 25
  br i1 %3939, label %3940, label %3943

3940:                                             ; preds = %3935, %3929
  %3941 = call ptr @Perl_sv_grow(ptr noundef nonnull %3930, i64 noundef 25) #21
  %3942 = load ptr, ptr %3930, align 8, !tbaa !63
  br label %3943

3943:                                             ; preds = %3935, %3940
  %3944 = phi ptr [ %3936, %3935 ], [ %3942, %3940 ]
  %3945 = getelementptr inbounds %struct.xpv, ptr %3944, i64 0, i32 2
  store i64 0, ptr %3945, align 8, !tbaa !72
  %3946 = getelementptr inbounds %struct.xpvinvlist, ptr %3944, i64 0, i32 5
  store i64 -1, ptr %3946, align 8, !tbaa !71
  %3947 = getelementptr inbounds %struct.xpvinvlist, ptr %3944, i64 0, i32 4
  store i64 0, ptr %3947, align 8, !tbaa !71
  %3948 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %3930) #21
  store ptr %3948, ptr %114, align 8, !tbaa !195
  call fastcc void @S__append_range_to_invlist(ptr noundef %3948, i64 noundef 0, i64 noundef -1)
  %3949 = load i8, ptr %26, align 8, !tbaa !196
  %3950 = or i8 %3949, 1
  store i8 %3950, ptr %26, align 8, !tbaa !196
  %3951 = load i32, ptr %95, align 8, !tbaa !100
  %3952 = icmp eq i32 %3951, 0
  %3953 = select i1 %3952, i32 0, i32 536870911
  store i32 %3953, ptr %115, align 8
  %3954 = load ptr, ptr %82, align 8, !tbaa !197
  store ptr %26, ptr %82, align 8, !tbaa !197
  %3955 = and i32 %148, -6145
  %3956 = or i32 %3955, 2048
  br label %3957

3957:                                             ; preds = %3943, %3918
  %3958 = phi i32 [ %3956, %3943 ], [ %148, %3918 ]
  %3959 = phi ptr [ %3954, %3943 ], [ null, %3918 ]
  %3960 = icmp ugt i64 %3921, 1
  br i1 %3960, label %3962, label %3961

3961:                                             ; preds = %3957
  switch i64 %3922, label %3962 [
    i64 32767, label %3964
    i64 1, label %3964
    i64 0, label %3964
  ]

3962:                                             ; preds = %3961, %3957
  %3963 = and i32 %3958, -8193
  br label %3964

3964:                                             ; preds = %3961, %3961, %3961, %3962
  %3965 = phi i32 [ %3963, %3962 ], [ %3958, %3961 ], [ %3958, %3961 ], [ %3958, %3961 ]
  %3966 = icmp eq i64 %3921, 0
  %3967 = and i32 %3965, -1025
  %3968 = select i1 %3966, i32 %3967, i32 %3965
  %3969 = add i32 %149, 1
  %3970 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef %2, ptr noundef nonnull %25, ptr noundef nonnull %144, ptr noundef %5, i32 noundef %145, i32 noundef %146, i32 noundef %3968, i32 noundef %3969)
  br i1 %3928, label %3972, label %3971

3971:                                             ; preds = %3964
  store ptr %3959, ptr %82, align 8, !tbaa !197
  br label %3972

3972:                                             ; preds = %3971, %3964
  %3973 = icmp eq i64 %3970, 0
  %3974 = select i1 %3966, i1 true, i1 %3973
  %3975 = and i32 %148, 4096
  %3976 = icmp eq i32 %3975, 0
  br i1 %3974, label %3977, label %3992

3977:                                             ; preds = %3972
  br i1 %3976, label %3980, label %3978

3978:                                             ; preds = %3977
  %3979 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %3979, ptr noundef nonnull %26)
  br label %4003

3980:                                             ; preds = %3977
  %3981 = and i32 %148, 2048
  %3982 = icmp eq i32 %3981, 0
  br i1 %3982, label %4003, label %3983

3983:                                             ; preds = %3980
  %3984 = call ptr @Perl_safesysmalloc(i64 noundef 56) #21
  call void @Perl_save_pushptr(ptr noundef %3984, i32 noundef 10) #21
  %3985 = load ptr, ptr %82, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %3984, ptr noundef nonnull align 8 dereferenceable(56) %3985, i64 56, i1 false), !tbaa.struct !212
  %3986 = and i32 %148, -6145
  %3987 = load ptr, ptr %82, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %3987, ptr noundef nonnull align 8 dereferenceable(56) %26, i64 56, i1 false), !tbaa.struct !212
  %3988 = or i32 %3986, 4096
  %3989 = load ptr, ptr %82, align 8, !tbaa !197
  %3990 = load i8, ptr %3989, align 8, !tbaa !196
  %3991 = or i8 %3990, 1
  store i8 %3991, ptr %3989, align 8, !tbaa !196
  br label %4003

3992:                                             ; preds = %3972
  br i1 %3976, label %3996, label %3993

3993:                                             ; preds = %3992
  %3994 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %3994, ptr noundef nonnull %26)
  %3995 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %3995, ptr noundef %147)
  br label %4001

3996:                                             ; preds = %3992
  %3997 = and i32 %148, 2048
  %3998 = icmp eq i32 %3997, 0
  br i1 %3998, label %4001, label %3999

3999:                                             ; preds = %3996
  %4000 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %4000, ptr noundef nonnull %26)
  br label %4001

4001:                                             ; preds = %3996, %3999, %3993
  %4002 = and i32 %148, -6145
  br label %4003

4003:                                             ; preds = %3978, %3983, %3980, %4001
  %4004 = phi i32 [ %148, %3978 ], [ %3988, %3983 ], [ %148, %3980 ], [ %4002, %4001 ]
  %4005 = phi ptr [ %147, %3978 ], [ %3984, %3983 ], [ %147, %3980 ], [ %147, %4001 ]
  %4006 = load ptr, ptr %16, align 8, !tbaa !5
  %4007 = icmp eq ptr %4006, null
  %4008 = select i1 %4007, ptr %3924, ptr %4006
  store ptr %4008, ptr %16, align 8
  %4009 = and i32 %4004, 65536
  %4010 = icmp eq i32 %4009, 0
  %4011 = load i64, ptr %25, align 8
  br i1 %4010, label %4012, label %4047

4012:                                             ; preds = %4003
  %4013 = icmp eq i32 %3923, 0
  %4014 = and i1 %3966, %4013
  %4015 = icmp ne i64 %3922, 1
  %4016 = xor i1 %4014, true
  %4017 = select i1 %4016, i1 true, i1 %4015
  %4018 = select i1 %4017, i1 %3973, i1 false
  %4019 = icmp eq i64 %4011, 0
  %4020 = select i1 %4018, i1 %4019, i1 false
  %4021 = and i1 %3919, %4020
  br i1 %4021, label %4022, label %4047

4022:                                             ; preds = %4012
  %4023 = load i32, ptr %77, align 8, !tbaa !199
  %4024 = and i32 %4023, 384
  %4025 = icmp eq i32 %4024, 0
  %4026 = icmp ult i64 %3922, 10923
  %4027 = select i1 %4025, i1 %4026, i1 false
  br i1 %4027, label %4028, label %4044

4028:                                             ; preds = %4022
  %4029 = load ptr, ptr %116, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %4029, i32 noundef 11) #21
  %4030 = load i32, ptr %70, align 8, !tbaa !98
  %4031 = icmp ne i32 %4030, 0
  %4032 = zext i1 %4031 to i32
  %4033 = load ptr, ptr %117, align 8, !tbaa !140
  %4034 = load ptr, ptr %118, align 8, !tbaa !108
  %4035 = ptrtoint ptr %4033 to i64
  %4036 = ptrtoint ptr %4034 to i64
  %4037 = sub i64 %4035, %4036
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.217, i32 noundef %4032, i64 noundef %4037, ptr noundef %4034) #21
  %4038 = load ptr, ptr %116, align 8, !tbaa !151
  %4039 = icmp eq ptr %4038, null
  br i1 %4039, label %4044, label %4040

4040:                                             ; preds = %4028
  %4041 = getelementptr inbounds %struct.sv, ptr %4038, i64 0, i32 1
  %4042 = load i32, ptr %4041, align 8, !tbaa !22
  %4043 = add i32 %4042, 1
  store i32 %4043, ptr %4041, align 8, !tbaa !22
  br label %4044

4044:                                             ; preds = %4040, %4028, %4022
  %4045 = mul nuw nsw i64 %3970, %3921
  %4046 = add nuw nsw i64 %4045, %3925
  br label %4051

4047:                                             ; preds = %4003, %4012
  %4048 = mul nsw i64 %3970, %3921
  %4049 = add nsw i64 %4048, %3925
  %4050 = icmp eq i64 %4011, 9223372036854775807
  br i1 %4050, label %4058, label %4051

4051:                                             ; preds = %4044, %4047
  %4052 = phi i64 [ %4046, %4044 ], [ %4049, %4047 ]
  %4053 = phi i64 [ 0, %4044 ], [ %4048, %4047 ]
  %4054 = icmp eq i64 %3922, 32767
  %4055 = add nsw i64 %4011, %3970
  %4056 = icmp sgt i64 %4055, 0
  %4057 = select i1 %4054, i1 %4056, i1 false
  br label %4058

4058:                                             ; preds = %4051, %4047
  %4059 = phi i64 [ %4049, %4047 ], [ %4052, %4051 ]
  %4060 = phi i64 [ %4048, %4047 ], [ %4053, %4051 ]
  %4061 = phi i1 [ true, %4047 ], [ %4057, %4051 ]
  %4062 = zext i1 %4061 to i32
  %4063 = or i32 %154, %4062
  %4064 = or i32 %4063, %153
  %4065 = icmp eq i32 %4064, 0
  br i1 %4065, label %4066, label %4071

4066:                                             ; preds = %4058
  %4067 = add nsw i64 %4011, %3970
  %4068 = mul nsw i64 %4067, %3922
  %4069 = sub i64 %152, %4060
  %4070 = add i64 %4069, %4068
  br label %4071

4071:                                             ; preds = %4058, %4066
  %4072 = phi i64 [ %4070, %4066 ], [ 9223372036854775807, %4058 ]
  %4073 = load i8, ptr %1496, align 1, !tbaa !164
  %4074 = icmp eq i8 %4073, 47
  %4075 = and i1 %3919, %4074
  br i1 %4075, label %4076, label %4176

4076:                                             ; preds = %4071
  %4077 = load i32, ptr %77, align 8, !tbaa !199
  %4078 = and i32 %4077, 256
  %4079 = icmp eq i32 %4078, 0
  br i1 %4079, label %4174, label %4080

4080:                                             ; preds = %4076
  %4081 = and i32 %4077, 512
  %4082 = icmp eq i32 %4081, 0
  %4083 = icmp eq i64 %4011, 0
  %4084 = and i1 %4083, %4082
  %4085 = icmp eq i64 %3970, 1
  %4086 = select i1 %4084, i1 %4085, i1 false
  br i1 %4086, label %4087, label %4174

4087:                                             ; preds = %4080
  %4088 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2
  %4089 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2, i32 1
  %4090 = load i8, ptr %4089, align 1, !tbaa !164
  %4091 = icmp ugt i8 %4090, 93
  br i1 %4091, label %4092, label %4095

4092:                                             ; preds = %4087
  %4093 = zext i8 %4090 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %4093, i32 noundef 93) #21
  %4094 = load i8, ptr %4089, align 1, !tbaa !164
  br label %4095

4095:                                             ; preds = %4092, %4087
  %4096 = phi i8 [ %4094, %4092 ], [ %4090, %4087 ]
  %4097 = zext i8 %4096 to i64
  %4098 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %4097
  %4099 = load i8, ptr %4098, align 1, !tbaa !9
  %4100 = icmp eq i8 %4099, 0
  br i1 %4100, label %4104, label %4101

4101:                                             ; preds = %4095
  %4102 = getelementptr inbounds %struct.regnode, ptr %1495, i64 3
  %4103 = load i32, ptr %4102, align 4, !tbaa !166
  br label %4108

4104:                                             ; preds = %4095
  %4105 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2, i32 2
  %4106 = load i16, ptr %4105, align 2, !tbaa !168
  %4107 = zext i16 %4106 to i32
  br label %4108

4108:                                             ; preds = %4104, %4101
  %4109 = phi i32 [ %4103, %4101 ], [ %4107, %4104 ]
  %4110 = icmp eq i32 %4109, 0
  %4111 = sext i32 %4109 to i64
  %4112 = getelementptr inbounds %struct.regnode, ptr %4088, i64 %4111
  %4113 = select i1 %4110, ptr null, ptr %4112
  %4114 = getelementptr inbounds %struct.regnode, ptr %4113, i64 0, i32 1
  %4115 = load i8, ptr %4114, align 1, !tbaa !164
  %4116 = zext i8 %4115 to i32
  %4117 = lshr i32 %4116, 3
  %4118 = zext i32 %4117 to i64
  %4119 = getelementptr inbounds [12 x i8], ptr @PL_simple_bitmask, i64 0, i64 %4118
  %4120 = load i8, ptr %4119, align 1, !tbaa !9
  %4121 = zext i8 %4120 to i32
  %4122 = and i32 %4116, 7
  %4123 = shl nuw nsw i32 1, %4122
  %4124 = and i32 %4123, %4121
  %4125 = icmp eq i32 %4124, 0
  br i1 %4125, label %4126, label %4133

4126:                                             ; preds = %4108
  %4127 = zext i8 %4115 to i64
  %4128 = add nsw i64 %4127, -31
  %4129 = icmp ult i64 %4128, 9
  br i1 %4129, label %4130, label %4174

4130:                                             ; preds = %4126
  %4131 = load i8, ptr %4113, align 2, !tbaa !218
  %4132 = icmp eq i8 %4131, 1
  br i1 %4132, label %4133, label %4174

4133:                                             ; preds = %4108, %4130
  %4134 = icmp ugt i8 %4115, 93
  br i1 %4134, label %4135, label %4137

4135:                                             ; preds = %4133
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %4116, i32 noundef 93) #21
  %4136 = load i8, ptr %4114, align 1, !tbaa !164
  br label %4137

4137:                                             ; preds = %4135, %4133
  %4138 = phi i8 [ %4136, %4135 ], [ %4115, %4133 ]
  %4139 = zext i8 %4138 to i64
  %4140 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %4139
  %4141 = load i8, ptr %4140, align 1, !tbaa !9
  %4142 = icmp eq i8 %4141, 0
  br i1 %4142, label %4146, label %4143

4143:                                             ; preds = %4137
  %4144 = getelementptr inbounds %struct.regnode_1, ptr %4113, i64 0, i32 3
  %4145 = load i32, ptr %4144, align 4, !tbaa !166
  br label %4150

4146:                                             ; preds = %4137
  %4147 = getelementptr inbounds %struct.regnode, ptr %4113, i64 0, i32 2
  %4148 = load i16, ptr %4147, align 2, !tbaa !168
  %4149 = zext i16 %4148 to i32
  br label %4150

4150:                                             ; preds = %4146, %4143
  %4151 = phi i32 [ %4145, %4143 ], [ %4149, %4146 ]
  %4152 = icmp ne i32 %4151, 0
  call void @llvm.assume(i1 %4152)
  %4153 = sext i32 %4151 to i64
  %4154 = getelementptr inbounds %struct.regnode, ptr %4113, i64 %4153
  %4155 = getelementptr inbounds %struct.regnode, ptr %4113, i64 %4153, i32 1
  %4156 = load i8, ptr %4155, align 1, !tbaa !164
  %4157 = icmp eq i8 %4156, 50
  br i1 %4157, label %4158, label %4174

4158:                                             ; preds = %4150
  %4159 = load ptr, ptr %74, align 8, !tbaa !153
  %4160 = icmp eq ptr %4159, null
  br i1 %4160, label %4170, label %4161

4161:                                             ; preds = %4158
  %4162 = getelementptr inbounds %struct.regnode, ptr %1495, i64 3
  %4163 = load i32, ptr %4162, align 4, !tbaa !166
  %4164 = add i32 %4163, -1
  %4165 = zext i32 %4164 to i64
  %4166 = getelementptr inbounds ptr, ptr %4159, i64 %4165
  store ptr %1495, ptr %4166, align 8, !tbaa !5
  %4167 = getelementptr inbounds %struct.regnode, ptr %4154, i64 2
  %4168 = load ptr, ptr %75, align 8, !tbaa !154
  %4169 = getelementptr inbounds ptr, ptr %4168, i64 %4165
  store ptr %4167, ptr %4169, align 8, !tbaa !5
  br label %4170

4170:                                             ; preds = %4161, %4158
  %4171 = getelementptr inbounds %struct.regnode_1, ptr %4154, i64 0, i32 3
  %4172 = load i32, ptr %4171, align 4, !tbaa !166
  %4173 = trunc i32 %4172 to i8
  store i8 %4173, ptr %1495, align 2, !tbaa !169
  store i8 45, ptr %1496, align 1, !tbaa !164
  store i8 40, ptr %4089, align 1, !tbaa !164
  br label %4287

4174:                                             ; preds = %4080, %4076, %4150, %4126, %4130
  %4175 = load i8, ptr %1496, align 1, !tbaa !164
  br label %4176

4176:                                             ; preds = %4174, %4071
  %4177 = phi i8 [ %4175, %4174 ], [ %4073, %4071 ]
  %4178 = icmp eq i8 %4177, 47
  %4179 = and i1 %3919, %4178
  br i1 %4179, label %4180, label %4255

4180:                                             ; preds = %4176
  %4181 = load i32, ptr %77, align 8, !tbaa !199
  %4182 = and i32 %4181, 128
  %4183 = icmp eq i32 %4182, 0
  br i1 %4183, label %4184, label %4256

4184:                                             ; preds = %4180
  %4185 = and i32 %4181, 512
  %4186 = icmp eq i32 %4185, 0
  %4187 = icmp eq i64 %4011, 0
  %4188 = and i1 %4187, %4186
  %4189 = icmp ne i64 %3970, 0
  %4190 = select i1 %4188, i1 %4189, i1 false
  br i1 %4190, label %4191, label %4256

4191:                                             ; preds = %4184
  %4192 = load i32, ptr %109, align 8, !tbaa !131
  %4193 = and i32 %4192, 1024
  %4194 = icmp eq i32 %4193, 0
  br i1 %4194, label %4195, label %4256

4195:                                             ; preds = %4191
  %4196 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2
  store i8 46, ptr %1496, align 1, !tbaa !164
  br label %4197

4197:                                             ; preds = %4221, %4195
  %4198 = phi ptr [ %4196, %4195 ], [ %4223, %4221 ]
  %4199 = getelementptr inbounds %struct.regnode, ptr %4198, i64 0, i32 1
  %4200 = load i8, ptr %4199, align 1, !tbaa !164
  %4201 = icmp ugt i8 %4200, 93
  br i1 %4201, label %4202, label %4205

4202:                                             ; preds = %4197
  %4203 = zext i8 %4200 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %4203, i32 noundef 93) #21
  %4204 = load i8, ptr %4199, align 1, !tbaa !164
  br label %4205

4205:                                             ; preds = %4202, %4197
  %4206 = phi i8 [ %4204, %4202 ], [ %4200, %4197 ]
  %4207 = zext i8 %4206 to i64
  %4208 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %4207
  %4209 = load i8, ptr %4208, align 1, !tbaa !9
  %4210 = icmp eq i8 %4209, 0
  br i1 %4210, label %4214, label %4211

4211:                                             ; preds = %4205
  %4212 = getelementptr inbounds %struct.regnode_1, ptr %4198, i64 0, i32 3
  %4213 = load i32, ptr %4212, align 4, !tbaa !166
  br label %4218

4214:                                             ; preds = %4205
  %4215 = getelementptr inbounds %struct.regnode, ptr %4198, i64 0, i32 2
  %4216 = load i16, ptr %4215, align 2, !tbaa !168
  %4217 = zext i16 %4216 to i32
  br label %4218

4218:                                             ; preds = %4214, %4211
  %4219 = phi i32 [ %4213, %4211 ], [ %4217, %4214 ]
  %4220 = icmp eq i32 %4219, 0
  br i1 %4220, label %4227, label %4221

4221:                                             ; preds = %4218
  %4222 = sext i32 %4219 to i64
  %4223 = getelementptr inbounds %struct.regnode, ptr %4198, i64 %4222
  %4224 = getelementptr inbounds %struct.regnode, ptr %4198, i64 %4222, i32 1
  %4225 = load i8, ptr %4224, align 1, !tbaa !164
  %4226 = icmp eq i8 %4225, 48
  br i1 %4226, label %4227, label %4197, !llvm.loop !281

4227:                                             ; preds = %4218, %4221
  %4228 = phi ptr [ %4223, %4221 ], [ null, %4218 ]
  %4229 = getelementptr inbounds %struct.regnode, ptr %4228, i64 0, i32 1
  store i8 1, ptr %4229, align 1, !tbaa !164
  %4230 = load i32, ptr %77, align 8, !tbaa !199
  %4231 = and i32 %4230, 256
  %4232 = icmp eq i32 %4231, 0
  br i1 %4232, label %4254, label %4233

4233:                                             ; preds = %4227
  %4234 = load i8, ptr %4199, align 1, !tbaa !164
  %4235 = icmp eq i8 %4234, 50
  br i1 %4235, label %4236, label %4254

4236:                                             ; preds = %4233
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %27) #21
  store ptr %4196, ptr %27, align 8, !tbaa !5
  %4237 = getelementptr inbounds %struct.regnode_1, ptr %4198, i64 0, i32 3
  %4238 = load i32, ptr %4237, align 4, !tbaa !166
  %4239 = trunc i32 %4238 to i8
  store i8 %4239, ptr %1495, align 2, !tbaa !169
  %4240 = load ptr, ptr %74, align 8, !tbaa !153
  %4241 = icmp eq ptr %4240, null
  br i1 %4241, label %4251, label %4242

4242:                                             ; preds = %4236
  %4243 = getelementptr inbounds %struct.regnode, ptr %1495, i64 3
  %4244 = load i32, ptr %4243, align 4, !tbaa !166
  %4245 = add i32 %4244, -1
  %4246 = zext i32 %4245 to i64
  %4247 = getelementptr inbounds ptr, ptr %4240, i64 %4246
  store ptr %1495, ptr %4247, align 8, !tbaa !5
  %4248 = getelementptr inbounds %struct.regnode, ptr %4228, i64 1
  %4249 = load ptr, ptr %75, align 8, !tbaa !154
  %4250 = getelementptr inbounds ptr, ptr %4249, i64 %4246
  store ptr %4248, ptr %4250, align 8, !tbaa !5
  br label %4251

4251:                                             ; preds = %4242, %4236
  %4252 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2, i32 1
  store i8 92, ptr %4252, align 1, !tbaa !164
  store i8 92, ptr %4199, align 1, !tbaa !164
  %4253 = call fastcc i64 @S_study_chunk(ptr noundef nonnull %0, ptr noundef nonnull %27, ptr noundef %2, ptr noundef nonnull %25, ptr noundef nonnull %4198, ptr noundef null, i32 noundef %145, i32 noundef %146, i32 noundef 0, i32 noundef %3969)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %27) #21
  br label %4287

4254:                                             ; preds = %4233, %4227
  store i8 0, ptr %1495, align 2, !tbaa !169
  br label %4287

4255:                                             ; preds = %4176
  br i1 %4178, label %4256, label %4287

4256:                                             ; preds = %4180, %4184, %4191, %4255
  %4257 = and i32 %4004, 8192
  %4258 = icmp ne i32 %4257, 0
  %4259 = icmp eq i64 %3922, 32767
  %4260 = select i1 %4258, i1 %4259, i1 false
  %4261 = and i1 %3919, %4260
  br i1 %4261, label %4262, label %4287

4262:                                             ; preds = %4256
  %4263 = load i32, ptr %97, align 4, !tbaa !248
  %4264 = add nsw i32 %4263, 1
  store i32 %4264, ptr %97, align 4, !tbaa !248
  %4265 = icmp slt i32 %4263, 15
  br i1 %4265, label %4266, label %4287

4266:                                             ; preds = %4262
  %4267 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  %4268 = load i16, ptr %4267, align 2, !tbaa !168
  %4269 = zext i16 %4268 to i64
  %4270 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %4269
  %4271 = getelementptr %struct.regnode, ptr %4270, i64 -1, i32 1
  %4272 = load i8, ptr %4271, align 1, !tbaa !164
  %4273 = icmp eq i8 %4272, 40
  br i1 %4273, label %4274, label %4279

4274:                                             ; preds = %4266
  %4275 = getelementptr inbounds %struct.regnode_1, ptr %4270, i64 0, i32 3
  %4276 = load i32, ptr %4275, align 4, !tbaa !166
  %4277 = zext i32 %4276 to i64
  %4278 = getelementptr inbounds %struct.regnode, ptr %4270, i64 %4277
  br label %4279

4279:                                             ; preds = %4274, %4266
  %4280 = phi ptr [ %4278, %4274 ], [ %4270, %4266 ]
  %4281 = zext i32 %4264 to i64
  %4282 = load i64, ptr %119, align 8, !tbaa !146
  %4283 = shl i64 %4282, 4
  %4284 = or i64 %4283, %4281
  %4285 = trunc i64 %4284 to i8
  %4286 = getelementptr inbounds %struct.regnode, ptr %4280, i64 -1
  store i8 %4285, ptr %4286, align 2, !tbaa !169
  br label %4287

4287:                                             ; preds = %4170, %4251, %4254, %4255, %4256, %4262, %4279
  %4288 = and i32 %3926, 384
  %4289 = icmp ne i32 %4288, 0
  %4290 = select i1 %3919, i1 %4289, i1 false
  %4291 = zext i1 %4290 to i32
  %4292 = add nsw i32 %151, %4291
  %4293 = and i32 %4004, 1024
  %4294 = icmp eq i32 %4293, 0
  br i1 %4294, label %4498, label %4295

4295:                                             ; preds = %4287
  %4296 = icmp ne i64 %3921, 0
  %4297 = load i64, ptr %86, align 8, !tbaa !274
  %4298 = icmp sgt i64 %4297, 0
  %4299 = select i1 %4298, i1 %4296, i1 false
  br i1 %4299, label %4302, label %4300

4300:                                             ; preds = %4295
  %4301 = load i64, ptr %25, align 8, !tbaa !71
  br label %4439

4302:                                             ; preds = %4295
  %4303 = load i64, ptr %87, align 8, !tbaa !275
  %4304 = call i64 @llvm.smax.i64(i64 %3920, i64 %4303)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %28) #21
  %4305 = load ptr, ptr %90, align 8, !tbaa !191
  %4306 = getelementptr inbounds %struct.sv, ptr %4305, i64 0, i32 2
  %4307 = load i32, ptr %4306, align 4, !tbaa !62
  %4308 = and i32 %4307, 2098176
  %4309 = icmp eq i32 %4308, 1024
  br i1 %4309, label %4310, label %4316

4310:                                             ; preds = %4302
  %4311 = load ptr, ptr %4305, align 8, !tbaa !63
  %4312 = getelementptr inbounds %struct.xpv, ptr %4311, i64 0, i32 2
  %4313 = load i64, ptr %4312, align 8, !tbaa !72
  store i64 %4313, ptr %28, align 8, !tbaa !71
  %4314 = getelementptr inbounds %struct.sv, ptr %4305, i64 0, i32 3
  %4315 = load ptr, ptr %4314, align 8, !tbaa !9
  br label %4319

4316:                                             ; preds = %4302
  %4317 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %4305, ptr noundef nonnull %28, i32 noundef 34) #21
  %4318 = load i64, ptr %87, align 8, !tbaa !275
  br label %4319

4319:                                             ; preds = %4316, %4310
  %4320 = phi i64 [ %4303, %4310 ], [ %4318, %4316 ]
  %4321 = phi ptr [ %4315, %4310 ], [ %4317, %4316 ]
  %4322 = sub nsw i64 %4304, %4320
  %4323 = load i32, ptr %70, align 8, !tbaa !98
  %4324 = icmp eq i32 %4323, 0
  br i1 %4324, label %4325, label %4329

4325:                                             ; preds = %4319
  %4326 = load i64, ptr %28, align 8, !tbaa !71
  %4327 = sub i64 %4326, %4322
  store i64 %4327, ptr %28, align 8, !tbaa !71
  %4328 = getelementptr inbounds i8, ptr %4321, i64 %4322
  br label %4341

4329:                                             ; preds = %4319
  %4330 = trunc i64 %4322 to i32
  %4331 = call ptr @Perl_utf8_hop(ptr noundef %4321, i32 noundef %4330) #21
  %4332 = ptrtoint ptr %4331 to i64
  %4333 = ptrtoint ptr %4321 to i64
  %4334 = sub i64 %4332, %4333
  %4335 = load i32, ptr %70, align 8, !tbaa !98
  %4336 = load i64, ptr %28, align 8, !tbaa !71
  %4337 = sub i64 %4336, %4334
  store i64 %4337, ptr %28, align 8, !tbaa !71
  %4338 = getelementptr inbounds i8, ptr %4321, i64 %4334
  %4339 = freeze i32 %4335
  %4340 = icmp eq i32 %4339, 0
  br i1 %4340, label %4341, label %4344

4341:                                             ; preds = %4325, %4329
  %4342 = phi ptr [ %4328, %4325 ], [ %4338, %4329 ]
  %4343 = phi i64 [ %4327, %4325 ], [ %4337, %4329 ]
  br label %4344

4344:                                             ; preds = %4329, %4341
  %4345 = phi ptr [ %4342, %4341 ], [ %4338, %4329 ]
  %4346 = phi i64 [ %4343, %4341 ], [ %4337, %4329 ]
  %4347 = phi i32 [ 0, %4341 ], [ 536870912, %4329 ]
  %4348 = call ptr @Perl_newSVpvn_flags(ptr noundef %4345, i64 noundef %4346, i32 noundef %4347) #21
  %4349 = load i32, ptr %70, align 8, !tbaa !98
  %4350 = icmp eq i32 %4349, 0
  %4351 = load i64, ptr %28, align 8, !tbaa !71
  br i1 %4350, label %4355, label %4352

4352:                                             ; preds = %4344
  %4353 = getelementptr inbounds i8, ptr %4345, i64 %4351
  %4354 = call i64 @Perl_utf8_length(ptr noundef %4345, ptr noundef %4353) #21
  br label %4355

4355:                                             ; preds = %4344, %4352
  %4356 = phi i64 [ %4354, %4352 ], [ %4351, %4344 ]
  %4357 = load i64, ptr %25, align 8, !tbaa !71
  %4358 = icmp eq i64 %4357, 0
  %4359 = icmp sge i64 %3920, %4303
  %4360 = select i1 %4358, i1 %4359, i1 false
  br i1 %4360, label %4361, label %4423

4361:                                             ; preds = %4355
  br i1 %3960, label %4362, label %4437

4362:                                             ; preds = %4361
  %4363 = getelementptr inbounds %struct.sv, ptr %4348, i64 0, i32 2
  %4364 = load i32, ptr %4363, align 4, !tbaa !62
  %4365 = and i32 %4364, 268435456
  %4366 = icmp eq i32 %4365, 0
  %4367 = load i64, ptr %28, align 8, !tbaa !71
  br i1 %4366, label %4371, label %4368

4368:                                             ; preds = %4362
  %4369 = mul i64 %4367, %3921
  %4370 = add i64 %4369, 1
  br label %4378

4371:                                             ; preds = %4362
  %4372 = load ptr, ptr %4348, align 8, !tbaa !63
  %4373 = getelementptr inbounds %struct.xpv, ptr %4372, i64 0, i32 3
  %4374 = load i64, ptr %4373, align 8, !tbaa !9
  %4375 = mul i64 %4367, %3921
  %4376 = add i64 %4375, 1
  %4377 = icmp ult i64 %4374, %4376
  br i1 %4377, label %4378, label %4382

4378:                                             ; preds = %4368, %4371
  %4379 = phi i64 [ %4370, %4368 ], [ %4376, %4371 ]
  %4380 = call ptr @Perl_sv_grow(ptr noundef nonnull %4348, i64 noundef %4379) #21
  %4381 = load i64, ptr %28, align 8, !tbaa !71
  br label %4382

4382:                                             ; preds = %4371, %4378
  %4383 = phi i64 [ %4367, %4371 ], [ %4381, %4378 ]
  %4384 = getelementptr inbounds %struct.sv, ptr %4348, i64 0, i32 3
  %4385 = load ptr, ptr %4384, align 8, !tbaa !9
  %4386 = getelementptr inbounds i8, ptr %4385, i64 %4383
  %4387 = trunc i64 %4383 to i32
  %4388 = add nsw i64 %3921, -1
  call void @Perl_repeatcpy(ptr noundef %4386, ptr noundef %4385, i32 noundef %4387, i64 noundef %4388) #21
  %4389 = load ptr, ptr %4348, align 8, !tbaa !63
  %4390 = getelementptr inbounds %struct.xpv, ptr %4389, i64 0, i32 2
  %4391 = load i64, ptr %4390, align 8, !tbaa !72
  %4392 = mul i64 %4391, %3921
  store i64 %4392, ptr %4390, align 8, !tbaa !72
  %4393 = load ptr, ptr %90, align 8, !tbaa !191
  %4394 = load ptr, ptr %4393, align 8, !tbaa !63
  %4395 = getelementptr inbounds %struct.xpv, ptr %4394, i64 0, i32 2
  %4396 = load i64, ptr %4395, align 8, !tbaa !72
  %4397 = load i64, ptr %28, align 8, !tbaa !71
  %4398 = sub i64 %4396, %4397
  store i64 %4398, ptr %4395, align 8, !tbaa !72
  call void @Perl_sv_catsv_flags(ptr noundef nonnull %4393, ptr noundef nonnull %4348, i32 noundef 2) #21
  %4399 = load ptr, ptr %90, align 8, !tbaa !191
  %4400 = getelementptr inbounds %struct.sv, ptr %4399, i64 0, i32 2
  %4401 = load i32, ptr %4400, align 4, !tbaa !62
  %4402 = and i32 %4401, 536870912
  %4403 = icmp eq i32 %4402, 0
  %4404 = and i32 %4401, 14680064
  %4405 = icmp eq i32 %4404, 0
  %4406 = or i1 %4403, %4405
  br i1 %4406, label %4417, label %4407

4407:                                             ; preds = %4382
  %4408 = call ptr @Perl_mg_find(ptr noundef nonnull %4399, i32 noundef 119) #21
  %4409 = icmp eq ptr %4408, null
  br i1 %4409, label %4417, label %4410

4410:                                             ; preds = %4407
  %4411 = getelementptr inbounds %struct.magic, ptr %4408, i64 0, i32 5
  %4412 = load i64, ptr %4411, align 8, !tbaa !277
  %4413 = icmp sgt i64 %4412, -1
  br i1 %4413, label %4414, label %4417

4414:                                             ; preds = %4410
  %4415 = mul i64 %4356, %4388
  %4416 = add i64 %4412, %4415
  store i64 %4416, ptr %4411, align 8, !tbaa !277
  br label %4417

4417:                                             ; preds = %4382, %4414, %4410, %4407
  %4418 = mul i64 %4356, %3921
  %4419 = load i64, ptr %28, align 8, !tbaa !71
  %4420 = mul i64 %4419, %4388
  %4421 = load i64, ptr %86, align 8, !tbaa !274
  %4422 = add i64 %4421, %4420
  store i64 %4422, ptr %86, align 8, !tbaa !274
  br label %4437

4423:                                             ; preds = %4355
  %4424 = add nsw i64 %3921, -1
  %4425 = mul nsw i64 %3970, %4424
  %4426 = load i64, ptr %87, align 8, !tbaa !275
  %4427 = add nsw i64 %4426, %4425
  store i64 %4427, ptr %87, align 8, !tbaa !275
  br i1 %4065, label %4428, label %4435

4428:                                             ; preds = %4423
  %4429 = load i64, ptr %89, align 8, !tbaa !276
  %4430 = add nsw i64 %3922, -1
  %4431 = load i64, ptr %88, align 8, !tbaa !249
  %4432 = add nsw i64 %4431, %3970
  %4433 = mul nsw i64 %4432, %4430
  %4434 = add nsw i64 %4433, %4429
  br label %4435

4435:                                             ; preds = %4423, %4428
  %4436 = phi i64 [ %4434, %4428 ], [ 9223372036854775807, %4423 ]
  store i64 %4436, ptr %89, align 8, !tbaa !276
  br label %4437

4437:                                             ; preds = %4361, %4417, %4435
  %4438 = phi i64 [ %4418, %4417 ], [ %4356, %4361 ], [ %4356, %4435 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %28) #21
  br label %4439

4439:                                             ; preds = %4300, %4437
  %4440 = phi i64 [ %4357, %4437 ], [ %4301, %4300 ]
  %4441 = phi ptr [ %4348, %4437 ], [ null, %4300 ]
  %4442 = phi i64 [ %4438, %4437 ], [ 0, %4300 ]
  %4443 = sext i1 %4296 to i64
  %4444 = add nsw i64 %3921, %4443
  %4445 = mul nsw i64 %3970, %4444
  %4446 = load i64, ptr %5, align 8, !tbaa !258
  %4447 = add nsw i64 %4446, %4445
  store i64 %4447, ptr %5, align 8, !tbaa !258
  %4448 = icmp eq i64 %4440, 9223372036854775807
  br i1 %4448, label %4460, label %4449

4449:                                             ; preds = %4439
  %4450 = mul nsw i64 %4440, %4443
  %4451 = add nsw i64 %4440, %3970
  %4452 = mul nsw i64 %4451, %3922
  %4453 = sub i64 %4450, %4060
  %4454 = add i64 %4453, %4452
  %4455 = load i64, ptr %88, align 8, !tbaa !249
  %4456 = sub nsw i64 9223372036854775807, %4455
  %4457 = icmp slt i64 %4454, %4456
  %4458 = add nsw i64 %4455, %4454
  %4459 = select i1 %4457, i64 %4458, i64 9223372036854775807
  br label %4460

4460:                                             ; preds = %4449, %4439
  %4461 = phi i64 [ 9223372036854775807, %4439 ], [ %4459, %4449 ]
  store i64 %4461, ptr %88, align 8, !tbaa !249
  %4462 = icmp eq i64 %3921, %3922
  br i1 %4462, label %4489, label %4463

4463:                                             ; preds = %4460
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef nonnull %5, ptr noundef %2, i32 noundef %4064)
  %4464 = icmp ne ptr %4441, null
  %4465 = select i1 %4296, i1 %4464, i1 false
  br i1 %4465, label %4466, label %4488

4466:                                             ; preds = %4463
  %4467 = load ptr, ptr %90, align 8, !tbaa !191
  %4468 = getelementptr inbounds %struct.sv, ptr %4467, i64 0, i32 2
  %4469 = load i32, ptr %4468, align 4, !tbaa !62
  %4470 = and i32 %4469, 536870912
  %4471 = icmp eq i32 %4470, 0
  %4472 = and i32 %4469, 14680064
  %4473 = icmp eq i32 %4472, 0
  %4474 = or i1 %4471, %4473
  br i1 %4474, label %4480, label %4475

4475:                                             ; preds = %4466
  %4476 = call ptr @Perl_mg_find(ptr noundef nonnull %4467, i32 noundef 119) #21
  %4477 = icmp eq ptr %4476, null
  br i1 %4477, label %4480, label %4478

4478:                                             ; preds = %4475
  %4479 = getelementptr inbounds %struct.magic, ptr %4476, i64 0, i32 5
  store i64 -1, ptr %4479, align 8, !tbaa !277
  br label %4480

4480:                                             ; preds = %4466, %4478, %4475
  call void @Perl_sv_setsv_flags(ptr noundef nonnull %4467, ptr noundef nonnull %4441, i32 noundef 1538) #21
  %4481 = load i64, ptr %5, align 8, !tbaa !258
  store i64 %4481, ptr %86, align 8, !tbaa !274
  %4482 = sub i64 %4481, %4442
  store i64 %4482, ptr %87, align 8, !tbaa !275
  br i1 %4065, label %4483, label %4486

4483:                                             ; preds = %4480
  %4484 = load i64, ptr %88, align 8, !tbaa !249
  %4485 = add i64 %4482, %4484
  br label %4486

4486:                                             ; preds = %4480, %4483
  %4487 = phi i64 [ %4485, %4483 ], [ 9223372036854775807, %4480 ]
  store i64 %4487, ptr %89, align 8, !tbaa !276
  br label %4488

4488:                                             ; preds = %4486, %4463
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %4489

4489:                                             ; preds = %4488, %4460
  %4490 = icmp eq ptr %4441, null
  br i1 %4490, label %4498, label %4491

4491:                                             ; preds = %4489
  %4492 = getelementptr inbounds %struct.sv, ptr %4441, i64 0, i32 1
  %4493 = load i32, ptr %4492, align 8, !tbaa !22
  %4494 = icmp ugt i32 %4493, 1
  br i1 %4494, label %4495, label %4497

4495:                                             ; preds = %4491
  %4496 = add i32 %4493, -1
  store i32 %4496, ptr %4492, align 8, !tbaa !22
  br label %4498

4497:                                             ; preds = %4491
  call void @Perl_sv_free2(ptr noundef nonnull %4441, i32 noundef %4493) #21
  br label %4498

4498:                                             ; preds = %4497, %4495, %4489, %4287
  %4499 = and i32 %3926, 512
  %4500 = icmp ne i32 %4499, 0
  %4501 = select i1 %3919, i1 %4500, i1 false
  br i1 %4501, label %4502, label %4505

4502:                                             ; preds = %4498
  %4503 = load i32, ptr %77, align 8, !tbaa !199
  %4504 = or i32 %4503, 512
  store i32 %4504, ptr %77, align 8, !tbaa !199
  br label %4505

4505:                                             ; preds = %4498, %4502, %3804
  %4506 = phi i32 [ %4063, %4502 ], [ %4063, %4498 ], [ 1, %3804 ]
  %4507 = phi i32 [ %4064, %4502 ], [ %4064, %4498 ], [ 1, %3804 ]
  %4508 = phi i64 [ %4072, %4502 ], [ %4072, %4498 ], [ %152, %3804 ]
  %4509 = phi i32 [ %4292, %4502 ], [ %4292, %4498 ], [ %151, %3804 ]
  %4510 = phi i64 [ %4059, %4502 ], [ %4059, %4498 ], [ %3759, %3804 ]
  %4511 = phi i32 [ %4004, %4502 ], [ %4004, %4498 ], [ %148, %3804 ]
  %4512 = phi ptr [ %4005, %4502 ], [ %4005, %4498 ], [ %147, %3804 ]
  %4513 = load i8, ptr %1496, align 1, !tbaa !164
  %4514 = icmp eq i8 %4513, 47
  br i1 %4514, label %5287, label %4515, !llvm.loop !262

4515:                                             ; preds = %4505
  %4516 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %4517 = getelementptr inbounds %struct.regnode, ptr %1495, i64 0, i32 2
  br label %4518

4518:                                             ; preds = %4515, %4549
  %4519 = phi i8 [ %4525, %4549 ], [ %4513, %4515 ]
  %4520 = icmp ugt i8 %4519, 93
  br i1 %4520, label %4521, label %4524

4521:                                             ; preds = %4518
  %4522 = zext i8 %4519 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %4522, i32 noundef 93) #21
  %4523 = load i8, ptr %1496, align 1, !tbaa !164
  br label %4524

4524:                                             ; preds = %4521, %4518
  %4525 = phi i8 [ %4523, %4521 ], [ %4519, %4518 ]
  %4526 = zext i8 %4525 to i64
  %4527 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %4526
  %4528 = load i8, ptr %4527, align 1, !tbaa !9
  %4529 = icmp eq i8 %4528, 0
  br i1 %4529, label %4532, label %4530

4530:                                             ; preds = %4524
  %4531 = load i32, ptr %4516, align 4, !tbaa !166
  br label %4535

4532:                                             ; preds = %4524
  %4533 = load i16, ptr %4517, align 2, !tbaa !168
  %4534 = zext i16 %4533 to i32
  br label %4535

4535:                                             ; preds = %4532, %4530
  %4536 = phi i32 [ %4531, %4530 ], [ %4534, %4532 ]
  %4537 = icmp ne i32 %4536, 0
  call void @llvm.assume(i1 %4537)
  %4538 = sext i32 %4536 to i64
  %4539 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %4538, i32 1
  %4540 = load i8, ptr %4539, align 1, !tbaa !164
  %4541 = zext i8 %4540 to i64
  %4542 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %4541
  %4543 = load i8, ptr %4542, align 1, !tbaa !9
  %4544 = icmp eq i8 %4543, 40
  br i1 %4544, label %4545, label %5287, !llvm.loop !262

4545:                                             ; preds = %4535
  %4546 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %4538, i32 2
  %4547 = load i16, ptr %4546, align 2, !tbaa !168
  %4548 = icmp eq i16 %4547, 0
  br i1 %4548, label %5287, label %4549, !llvm.loop !262

4549:                                             ; preds = %4545
  %4550 = load i16, ptr %4517, align 2, !tbaa !168
  %4551 = add i16 %4550, %4547
  store i16 %4551, ptr %4517, align 2, !tbaa !168
  br label %4518, !llvm.loop !282

4552:                                             ; preds = %3708
  %4553 = and i32 %148, 1024
  %4554 = icmp eq i32 %4553, 0
  br i1 %4554, label %4556, label %4555

4555:                                             ; preds = %4552
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %4556

4556:                                             ; preds = %4555, %4552
  %4557 = and i32 %148, 4096
  %4558 = icmp eq i32 %4557, 0
  br i1 %4558, label %4590, label %4559

4559:                                             ; preds = %4556
  %4560 = load i8, ptr %1496, align 1, !tbaa !164
  %4561 = icmp eq i8 %4560, 29
  %4562 = load ptr, ptr %82, align 8, !tbaa !197
  br i1 %4561, label %4563, label %4567

4563:                                             ; preds = %4559
  %4564 = getelementptr inbounds %struct.regnode_ssc, ptr %4562, i64 0, i32 6
  %4565 = load ptr, ptr %4564, align 8, !tbaa !195
  %4566 = call ptr @Perl__add_range_to_invlist(ptr noundef %4565, i64 noundef 0, i64 noundef -1)
  store ptr %4566, ptr %4564, align 8, !tbaa !195
  br label %4590

4567:                                             ; preds = %4559
  %4568 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %4569 = getelementptr inbounds %struct.sv, ptr %4568, i64 0, i32 2
  %4570 = load i32, ptr %4569, align 4, !tbaa !62
  %4571 = and i32 %4570, 268435456
  %4572 = icmp eq i32 %4571, 0
  br i1 %4572, label %4573, label %4578

4573:                                             ; preds = %4567
  %4574 = load ptr, ptr %4568, align 8, !tbaa !63
  %4575 = getelementptr inbounds %struct.xpv, ptr %4574, i64 0, i32 3
  %4576 = load i64, ptr %4575, align 8, !tbaa !9
  %4577 = icmp ult i64 %4576, 25
  br i1 %4577, label %4578, label %4581

4578:                                             ; preds = %4573, %4567
  %4579 = call ptr @Perl_sv_grow(ptr noundef nonnull %4568, i64 noundef 25) #21
  %4580 = load ptr, ptr %4568, align 8, !tbaa !63
  br label %4581

4581:                                             ; preds = %4573, %4578
  %4582 = phi ptr [ %4574, %4573 ], [ %4580, %4578 ]
  %4583 = getelementptr inbounds %struct.xpv, ptr %4582, i64 0, i32 2
  store i64 0, ptr %4583, align 8, !tbaa !72
  %4584 = getelementptr inbounds %struct.xpvinvlist, ptr %4582, i64 0, i32 5
  store i64 -1, ptr %4584, align 8, !tbaa !71
  %4585 = getelementptr inbounds %struct.xpvinvlist, ptr %4582, i64 0, i32 4
  store i64 0, ptr %4585, align 8, !tbaa !71
  %4586 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %4568) #21
  %4587 = getelementptr inbounds %struct.regnode_ssc, ptr %4562, i64 0, i32 6
  store ptr %4586, ptr %4587, align 8, !tbaa !195
  call fastcc void @S__append_range_to_invlist(ptr noundef %4586, i64 noundef 0, i64 noundef -1)
  %4588 = load i8, ptr %4562, align 8, !tbaa !196
  %4589 = or i8 %4588, 1
  store i8 %4589, ptr %4562, align 8, !tbaa !196
  br label %4590

4590:                                             ; preds = %4556, %4581, %4563
  %4591 = and i32 %148, -6145
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %26) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #21
  br label %5248

4592:                                             ; preds = %3695
  %4593 = icmp eq i8 %3696, 91
  br i1 %4593, label %4594, label %4635

4594:                                             ; preds = %4592
  %4595 = and i32 %148, 6144
  %4596 = icmp eq i32 %4595, 0
  br i1 %4596, label %4624, label %4597

4597:                                             ; preds = %4594
  %4598 = and i32 %148, 2048
  %4599 = icmp eq i32 %4598, 0
  br i1 %4599, label %4607, label %4600

4600:                                             ; preds = %4597
  %4601 = load ptr, ptr %82, align 8, !tbaa !197
  %4602 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 15), align 8, !tbaa !5
  %4603 = getelementptr inbounds %struct.regnode_ssc, ptr %4601, i64 0, i32 6
  %4604 = load ptr, ptr %4603, align 8, !tbaa !195
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %4604, ptr noundef %4602, i1 noundef zeroext false, ptr noundef nonnull %4603)
  %4605 = load ptr, ptr %82, align 8, !tbaa !197
  %4606 = getelementptr inbounds %struct.regnode_charclass_class, ptr %4605, i64 0, i32 5
  store i32 0, ptr %4606, align 4, !tbaa !254
  br label %4617

4607:                                             ; preds = %4597
  %4608 = and i32 %148, 4096
  %4609 = icmp eq i32 %4608, 0
  br i1 %4609, label %4622, label %4610

4610:                                             ; preds = %4607
  %4611 = load ptr, ptr %82, align 8, !tbaa !197
  %4612 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 15), align 8, !tbaa !5
  %4613 = getelementptr inbounds %struct.regnode_ssc, ptr %4611, i64 0, i32 6
  %4614 = load ptr, ptr %4613, align 8, !tbaa !195
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %4614, ptr noundef %4612, i1 noundef zeroext false, ptr noundef nonnull %4613)
  %4615 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %4615, ptr noundef %147)
  %4616 = load ptr, ptr %82, align 8, !tbaa !197
  br label %4617

4617:                                             ; preds = %4600, %4610
  %4618 = phi ptr [ %4616, %4610 ], [ %4605, %4600 ]
  %4619 = phi i8 [ -2, %4610 ], [ -14, %4600 ]
  %4620 = load i8, ptr %4618, align 8, !tbaa !196
  %4621 = and i8 %4620, %4619
  store i8 %4621, ptr %4618, align 8, !tbaa !196
  br label %4622

4622:                                             ; preds = %4617, %4607
  %4623 = and i32 %148, -6145
  br label %4624

4624:                                             ; preds = %4622, %4594
  %4625 = phi i32 [ %4623, %4622 ], [ %148, %4594 ]
  %4626 = add nsw i64 %150, 1
  %4627 = icmp eq i64 %152, 9223372036854775807
  %4628 = add nsw i64 %152, 1
  %4629 = select i1 %4627, i64 9223372036854775807, i64 %4628
  %4630 = and i32 %4625, 1024
  %4631 = icmp eq i32 %4630, 0
  br i1 %4631, label %5248, label %4632

4632:                                             ; preds = %4624
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  %4633 = load <2 x i64>, ptr %5, align 8, !tbaa !71
  %4634 = add nsw <2 x i64> %4633, <i64 1, i64 1>
  store <2 x i64> %4634, ptr %5, align 8, !tbaa !71
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %5248

4635:                                             ; preds = %4592
  %4636 = getelementptr inbounds [12 x i8], ptr @PL_simple_bitmask, i64 0, i64 %3700
  %4637 = load i8, ptr %4636, align 1, !tbaa !9
  %4638 = zext i8 %4637 to i32
  %4639 = and i32 %3705, %4638
  %4640 = icmp eq i32 %4639, 0
  br i1 %4640, label %4850, label %4641

4641:                                             ; preds = %4635
  %4642 = and i32 %148, 1024
  %4643 = icmp eq i32 %4642, 0
  br i1 %4643, label %4647, label %4644

4644:                                             ; preds = %4641
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  %4645 = load i64, ptr %5, align 8, !tbaa !258
  %4646 = add nsw i64 %4645, 1
  store i64 %4646, ptr %5, align 8, !tbaa !258
  br label %4647

4647:                                             ; preds = %4644, %4641
  %4648 = add nsw i64 %150, 1
  %4649 = and i32 %148, 6144
  %4650 = icmp eq i32 %4649, 0
  br i1 %4650, label %5248, label %4651

4651:                                             ; preds = %4647
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %29) #21
  store ptr null, ptr %29, align 8, !tbaa !5
  %4652 = load ptr, ptr %82, align 8, !tbaa !197
  %4653 = load i8, ptr %4652, align 8, !tbaa !196
  %4654 = and i8 %4653, -2
  store i8 %4654, ptr %4652, align 8, !tbaa !196
  %4655 = load i8, ptr %1496, align 1, !tbaa !164
  switch i8 %4655, label %4656 [
    i8 23, label %4753
    i8 21, label %4753
    i8 16, label %4663
    i8 20, label %4690
    i8 19, label %4690
    i8 26, label %4695
    i8 22, label %4696
    i8 28, label %4739
    i8 24, label %4740
    i8 25, label %4752
    i8 27, label %4752
  ]

4656:                                             ; preds = %4651
  %4657 = and i32 %148, 4096
  %4658 = icmp eq i32 %4657, 0
  br i1 %4658, label %4843, label %4659

4659:                                             ; preds = %4656
  %4660 = getelementptr inbounds %struct.regnode_ssc, ptr %4652, i64 0, i32 6
  %4661 = load ptr, ptr %4660, align 8, !tbaa !195
  %4662 = call ptr @Perl__add_range_to_invlist(ptr noundef %4661, i64 noundef 0, i64 noundef -1)
  store ptr %4662, ptr %4660, align 8, !tbaa !195
  br label %4843

4663:                                             ; preds = %4651
  %4664 = call ptr @Perl__new_invlist(i64 noundef 2)
  %4665 = call ptr @Perl__add_range_to_invlist(ptr noundef %4664, i64 noundef 10, i64 noundef 10)
  %4666 = and i32 %148, 4096
  %4667 = icmp eq i32 %4666, 0
  br i1 %4667, label %4672, label %4668

4668:                                             ; preds = %4663
  %4669 = load ptr, ptr %82, align 8, !tbaa !197
  %4670 = getelementptr inbounds %struct.regnode_ssc, ptr %4669, i64 0, i32 6
  %4671 = load ptr, ptr %4670, align 8, !tbaa !195
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %4671, ptr noundef %4665, i1 noundef zeroext true, ptr noundef nonnull %4670)
  br label %4683

4672:                                             ; preds = %4663
  %4673 = and i32 %148, 2048
  %4674 = icmp eq i32 %4673, 0
  br i1 %4674, label %4683, label %4675

4675:                                             ; preds = %4672
  %4676 = load ptr, ptr %82, align 8, !tbaa !197
  %4677 = getelementptr inbounds %struct.regnode_ssc, ptr %4676, i64 0, i32 6
  %4678 = load ptr, ptr %4677, align 8, !tbaa !195
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %4678, ptr noundef %4665, i1 noundef zeroext true, ptr noundef nonnull %4677)
  %4679 = load ptr, ptr %82, align 8, !tbaa !197
  %4680 = getelementptr inbounds %struct.regnode_charclass_class, ptr %4679, i64 0, i32 5
  store i32 0, ptr %4680, align 4, !tbaa !254
  %4681 = load i8, ptr %4679, align 8, !tbaa !196
  %4682 = and i8 %4681, -13
  store i8 %4682, ptr %4679, align 8, !tbaa !196
  br label %4683

4683:                                             ; preds = %4672, %4675, %4668
  %4684 = getelementptr inbounds %struct.sv, ptr %4665, i64 0, i32 1
  %4685 = load i32, ptr %4684, align 8, !tbaa !22
  %4686 = icmp ugt i32 %4685, 1
  br i1 %4686, label %4687, label %4689

4687:                                             ; preds = %4683
  %4688 = add i32 %4685, -1
  store i32 %4688, ptr %4684, align 8, !tbaa !22
  br label %4843

4689:                                             ; preds = %4683
  call void @Perl_sv_free2(ptr noundef nonnull %4665, i32 noundef %4685) #21
  br label %4843

4690:                                             ; preds = %4651, %4651
  %4691 = and i32 %148, 2048
  %4692 = icmp eq i32 %4691, 0
  br i1 %4692, label %4694, label %4693

4693:                                             ; preds = %4690
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef nonnull %4652, ptr noundef nonnull %1495)
  br label %4843

4694:                                             ; preds = %4690
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef nonnull %4652, ptr noundef nonnull %1495)
  br label %4843

4695:                                             ; preds = %4651
  br label %4696

4696:                                             ; preds = %4651, %4695
  %4697 = phi i1 [ false, %4651 ], [ true, %4695 ]
  %4698 = load i8, ptr %1495, align 2, !tbaa !169
  %4699 = shl i8 %4698, 1
  %4700 = zext i1 %4697 to i8
  %4701 = or i8 %4699, %4700
  %4702 = and i32 %148, 2048
  %4703 = icmp eq i32 %4702, 0
  br i1 %4703, label %4716, label %4704

4704:                                             ; preds = %4696
  %4705 = getelementptr inbounds %struct.regnode_charclass_class, ptr %4652, i64 0, i32 5
  %4706 = load i32, ptr %4705, align 4, !tbaa !254
  %4707 = zext i8 %4701 to i32
  %4708 = shl nuw i32 1, %4707
  %4709 = and i32 %4706, %4708
  %4710 = icmp eq i32 %4709, 0
  %4711 = select i1 %4710, i32 0, i32 %4708
  store i32 %4711, ptr %4705, align 4
  %4712 = call ptr @Perl__new_invlist(i64 noundef 0)
  %4713 = call ptr @Perl_sv_2mortal(ptr noundef %4712) #21
  %4714 = load ptr, ptr %82, align 8, !tbaa !197
  %4715 = getelementptr inbounds %struct.regnode_ssc, ptr %4714, i64 0, i32 6
  store ptr %4713, ptr %4715, align 8, !tbaa !195
  br label %4843

4716:                                             ; preds = %4696
  %4717 = zext i8 %4701 to i32
  %4718 = select i1 %4697, i32 -1, i32 1
  %4719 = add nsw i32 %4718, %4717
  %4720 = getelementptr inbounds %struct.regnode_charclass_class, ptr %4652, i64 0, i32 5
  %4721 = load i32, ptr %4720, align 4, !tbaa !254
  %4722 = shl nuw i32 1, %4719
  %4723 = and i32 %4721, %4722
  %4724 = icmp eq i32 %4723, 0
  br i1 %4724, label %4736, label %4725

4725:                                             ; preds = %4716
  %4726 = getelementptr inbounds %struct.regnode_ssc, ptr %4652, i64 0, i32 6
  %4727 = load ptr, ptr %4726, align 8, !tbaa !195
  %4728 = call ptr @Perl__add_range_to_invlist(ptr noundef %4727, i64 noundef 0, i64 noundef -1)
  store ptr %4728, ptr %4726, align 8, !tbaa !195
  %4729 = shl nuw i32 1, %4717
  %4730 = load ptr, ptr %82, align 8, !tbaa !197
  %4731 = getelementptr inbounds %struct.regnode_charclass_class, ptr %4730, i64 0, i32 5
  %4732 = load i32, ptr %4731, align 4, !tbaa !254
  %4733 = or i32 %4722, %4729
  %4734 = xor i32 %4733, -1
  %4735 = and i32 %4732, %4734
  store i32 %4735, ptr %4731, align 4, !tbaa !254
  br label %4843

4736:                                             ; preds = %4716
  %4737 = shl nuw i32 1, %4717
  %4738 = or i32 %4721, %4737
  store i32 %4738, ptr %4720, align 4, !tbaa !254
  br label %4843

4739:                                             ; preds = %4651
  br label %4740

4740:                                             ; preds = %4651, %4739
  %4741 = phi i8 [ 0, %4651 ], [ 1, %4739 ]
  %4742 = load i8, ptr %1495, align 2, !tbaa !169
  %4743 = icmp eq i8 %4742, 14
  br i1 %4743, label %4744, label %4747

4744:                                             ; preds = %4740
  %4745 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  %4746 = call fastcc ptr @S_invlist_clone(ptr noundef %4745)
  store ptr %4746, ptr %29, align 8, !tbaa !5
  br label %4819

4747:                                             ; preds = %4740
  %4748 = zext i8 %4742 to i64
  %4749 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %4748
  %4750 = load ptr, ptr %4749, align 8, !tbaa !5
  %4751 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %4750, ptr noundef %4751, i1 noundef zeroext false, ptr noundef nonnull %29)
  br label %4819

4752:                                             ; preds = %4651, %4651
  br label %4753

4753:                                             ; preds = %4651, %4651, %4752
  %4754 = phi i8 [ 1, %4752 ], [ 0, %4651 ], [ 0, %4651 ]
  %4755 = load i8, ptr %1495, align 2, !tbaa !169
  %4756 = zext i8 %4755 to i64
  %4757 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %4756
  %4758 = load ptr, ptr %4757, align 8, !tbaa !5
  %4759 = load ptr, ptr %4758, align 8, !tbaa !63
  %4760 = getelementptr inbounds %struct.xpv, ptr %4759, i64 0, i32 2
  %4761 = load i64, ptr %4760, align 8, !tbaa !72
  %4762 = icmp eq i64 %4761, 0
  br i1 %4762, label %4771, label %4763

4763:                                             ; preds = %4753
  %4764 = getelementptr inbounds %struct.xpvinvlist, ptr %4759, i64 0, i32 6
  %4765 = load i8, ptr %4764, align 1, !tbaa !57, !range !59, !noundef !60
  %4766 = shl nuw nsw i8 %4765, 3
  %4767 = zext i8 %4766 to i64
  %4768 = sub i64 %4761, %4767
  %4769 = and i64 %4768, -8
  %4770 = add i64 %4769, 17
  br label %4771

4771:                                             ; preds = %4763, %4753
  %4772 = phi i64 [ %4770, %4763 ], [ 17, %4753 ]
  %4773 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %4774 = getelementptr inbounds %struct.sv, ptr %4773, i64 0, i32 2
  %4775 = load i32, ptr %4774, align 4, !tbaa !62
  %4776 = and i32 %4775, 268435456
  %4777 = icmp eq i32 %4776, 0
  br i1 %4777, label %4778, label %4783

4778:                                             ; preds = %4771
  %4779 = load ptr, ptr %4773, align 8, !tbaa !63
  %4780 = getelementptr inbounds %struct.xpv, ptr %4779, i64 0, i32 3
  %4781 = load i64, ptr %4780, align 8, !tbaa !9
  %4782 = icmp ult i64 %4781, %4772
  br i1 %4782, label %4783, label %4786

4783:                                             ; preds = %4778, %4771
  %4784 = call ptr @Perl_sv_grow(ptr noundef nonnull %4773, i64 noundef %4772) #21
  %4785 = load ptr, ptr %4773, align 8, !tbaa !63
  br label %4786

4786:                                             ; preds = %4783, %4778
  %4787 = phi ptr [ %4779, %4778 ], [ %4785, %4783 ]
  %4788 = getelementptr inbounds %struct.xpv, ptr %4787, i64 0, i32 2
  store i64 0, ptr %4788, align 8, !tbaa !72
  %4789 = getelementptr inbounds %struct.xpvinvlist, ptr %4787, i64 0, i32 5
  store i64 -1, ptr %4789, align 8, !tbaa !71
  %4790 = getelementptr inbounds %struct.xpvinvlist, ptr %4787, i64 0, i32 4
  store i64 0, ptr %4790, align 8, !tbaa !71
  %4791 = load ptr, ptr %4758, align 8, !tbaa !63
  %4792 = getelementptr inbounds %struct.xpv, ptr %4791, i64 0, i32 2
  %4793 = load i64, ptr %4792, align 8, !tbaa !72
  %4794 = freeze i64 %4793
  %4795 = getelementptr inbounds %struct.xpvinvlist, ptr %4791, i64 0, i32 6
  %4796 = load i8, ptr %4795, align 1, !tbaa !57, !range !59, !noundef !60
  %4797 = getelementptr inbounds %struct.xpvinvlist, ptr %4787, i64 0, i32 6
  store i8 %4796, ptr %4797, align 1, !tbaa !57
  %4798 = icmp eq i64 %4794, 0
  br i1 %4798, label %4808, label %4799

4799:                                             ; preds = %4786
  %4800 = lshr i64 %4794, 3
  %4801 = load i8, ptr %4795, align 1, !tbaa !57, !range !59, !noundef !60
  %4802 = zext i8 %4801 to i64
  %4803 = icmp eq i64 %4800, %4802
  %4804 = zext i8 %4796 to i64
  %4805 = add nuw nsw i64 %4800, %4804
  %4806 = sub nsw i64 %4805, %4802
  %4807 = shl i64 %4806, 3
  br i1 %4803, label %4808, label %4809

4808:                                             ; preds = %4799, %4786
  br label %4809

4809:                                             ; preds = %4799, %4808
  %4810 = phi i64 [ 0, %4808 ], [ %4807, %4799 ]
  store i64 %4810, ptr %4788, align 8, !tbaa !72
  %4811 = getelementptr inbounds %struct.sv, ptr %4773, i64 0, i32 3
  %4812 = load ptr, ptr %4811, align 8, !tbaa !9
  %4813 = getelementptr inbounds %struct.sv, ptr %4758, i64 0, i32 3
  %4814 = load ptr, ptr %4813, align 8, !tbaa !9
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %4812, ptr align 1 %4814, i64 %4794, i1 false)
  store ptr %4773, ptr %29, align 8, !tbaa !5
  %4815 = load i8, ptr %1496, align 1, !tbaa !164
  %4816 = icmp eq i8 %4815, 25
  br i1 %4816, label %4817, label %4819

4817:                                             ; preds = %4809
  %4818 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %4773, ptr noundef %4818, i1 noundef zeroext true, ptr noundef nonnull %29)
  br label %4819

4819:                                             ; preds = %4809, %4817, %4744, %4747
  %4820 = phi i8 [ %4754, %4817 ], [ %4754, %4809 ], [ %4741, %4744 ], [ %4741, %4747 ]
  %4821 = and i32 %148, 2048
  %4822 = icmp eq i32 %4821, 0
  %4823 = load ptr, ptr %82, align 8, !tbaa !197
  %4824 = load ptr, ptr %29, align 8, !tbaa !5
  %4825 = icmp ne i8 %4820, 0
  %4826 = getelementptr inbounds %struct.regnode_ssc, ptr %4823, i64 0, i32 6
  %4827 = load ptr, ptr %4826, align 8, !tbaa !195
  br i1 %4822, label %4833, label %4828

4828:                                             ; preds = %4819
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %4827, ptr noundef %4824, i1 noundef zeroext %4825, ptr noundef nonnull %4826)
  %4829 = load ptr, ptr %82, align 8, !tbaa !197
  %4830 = getelementptr inbounds %struct.regnode_charclass_class, ptr %4829, i64 0, i32 5
  store i32 0, ptr %4830, align 4, !tbaa !254
  %4831 = load i8, ptr %4829, align 8, !tbaa !196
  %4832 = and i8 %4831, -13
  store i8 %4832, ptr %4829, align 8, !tbaa !196
  br label %4834

4833:                                             ; preds = %4819
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %4827, ptr noundef %4824, i1 noundef zeroext %4825, ptr noundef nonnull %4826)
  br label %4834

4834:                                             ; preds = %4833, %4828
  %4835 = icmp eq ptr %4824, null
  br i1 %4835, label %4843, label %4836

4836:                                             ; preds = %4834
  %4837 = getelementptr inbounds %struct.sv, ptr %4824, i64 0, i32 1
  %4838 = load i32, ptr %4837, align 8, !tbaa !22
  %4839 = icmp ugt i32 %4838, 1
  br i1 %4839, label %4840, label %4842

4840:                                             ; preds = %4836
  %4841 = add i32 %4838, -1
  store i32 %4841, ptr %4837, align 8, !tbaa !22
  br label %4843

4842:                                             ; preds = %4836
  call void @Perl_sv_free2(ptr noundef nonnull %4824, i32 noundef %4838) #21
  br label %4843

4843:                                             ; preds = %4842, %4840, %4834, %4689, %4687, %4725, %4736, %4704, %4693, %4694, %4656, %4659
  %4844 = and i32 %148, 4096
  %4845 = icmp eq i32 %4844, 0
  br i1 %4845, label %4848, label %4846

4846:                                             ; preds = %4843
  %4847 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %4847, ptr noundef %147)
  br label %4848

4848:                                             ; preds = %4846, %4843
  %4849 = and i32 %148, -6145
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %29) #21
  br label %5248

4850:                                             ; preds = %4635
  %4851 = add nsw i64 %3697, -7
  %4852 = icmp ult i64 %4851, -3
  %4853 = and i32 %148, 1024
  %4854 = icmp eq i32 %4853, 0
  %4855 = select i1 %4852, i1 true, i1 %4854
  br i1 %4855, label %4861, label %4856

4856:                                             ; preds = %4850
  %4857 = icmp eq i8 %3696, 5
  %4858 = select i1 %4857, i32 2, i32 1
  %4859 = load i32, ptr %77, align 8, !tbaa !199
  %4860 = or i32 %4859, %4858
  store i32 %4860, ptr %77, align 8, !tbaa !199
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  br label %5248

4861:                                             ; preds = %4850
  %4862 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %3697
  %4863 = load i8, ptr %4862, align 1, !tbaa !9
  %4864 = icmp eq i8 %4863, 62
  br i1 %4864, label %4865, label %4970

4865:                                             ; preds = %4861
  %4866 = load i8, ptr %1495, align 2, !tbaa !169
  %4867 = icmp eq i8 %4866, 0
  %4868 = and i1 %76, %4867
  %4869 = and i32 %148, 6144
  %4870 = icmp eq i32 %4869, 0
  %4871 = select i1 %4868, i1 %4870, i1 false
  %4872 = add i8 %3696, -65
  %4873 = icmp ult i8 %4872, -2
  %4874 = or i1 %4873, %4871
  br i1 %4874, label %4970, label %4875

4875:                                             ; preds = %4865
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %30) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %31) #21
  store i64 0, ptr %31, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %32) #21
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %33) #21
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  br i1 %76, label %4879, label %4876

4876:                                             ; preds = %4875
  %4877 = load i32, ptr %97, align 4, !tbaa !248
  store i32 %4877, ptr %98, align 4, !tbaa !248
  %4878 = load ptr, ptr %99, align 8, !tbaa !198
  br label %4879

4879:                                             ; preds = %4875, %4876
  %4880 = phi ptr [ %4878, %4876 ], [ %31, %4875 ]
  store ptr %4880, ptr %100, align 8, !tbaa !198
  store i64 %152, ptr %101, align 8, !tbaa !249
  br i1 %4870, label %4888, label %4881

4881:                                             ; preds = %4879
  %4882 = load i8, ptr %1495, align 2, !tbaa !169
  %4883 = icmp eq i8 %4882, 0
  br i1 %4883, label %4884, label %4888

4884:                                             ; preds = %4881
  %4885 = load i8, ptr %1496, align 1, !tbaa !164
  %4886 = icmp eq i8 %4885, 63
  br i1 %4886, label %4887, label %4888

4887:                                             ; preds = %4884
  call fastcc void @S_ssc_init(ptr noundef %0, ptr noundef nonnull %33)
  store ptr %33, ptr %107, align 8, !tbaa !197
  br label %4888

4888:                                             ; preds = %4887, %4884, %4881, %4879
  %4889 = phi i1 [ true, %4881 ], [ false, %4887 ], [ true, %4884 ], [ true, %4879 ]
  %4890 = phi i32 [ 0, %4881 ], [ 2048, %4887 ], [ 0, %4884 ], [ 0, %4879 ]
  %4891 = and i32 %148, 8192
  %4892 = or i32 %4890, %4891
  %4893 = call ptr @Perl_regnext(ptr noundef nonnull %1495)
  %4894 = getelementptr inbounds %struct.regnode, ptr %1495, i64 2
  store ptr %4894, ptr %32, align 8, !tbaa !5
  %4895 = add i32 %149, 1
  %4896 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %32, ptr noundef %2, ptr noundef nonnull %30, ptr noundef nonnull %144, ptr noundef nonnull %17, i32 noundef %145, i32 noundef %146, i32 noundef %4892, i32 noundef %4895)
  %4897 = load i8, ptr %1495, align 2, !tbaa !169
  %4898 = icmp eq i8 %4897, 0
  br i1 %4898, label %4944, label %4899

4899:                                             ; preds = %4888
  %4900 = load i64, ptr %30, align 8, !tbaa !71
  %4901 = icmp eq i64 %4900, 0
  br i1 %4901, label %4921, label %4902

4902:                                             ; preds = %4899
  %4903 = load ptr, ptr %117, align 8, !tbaa !140
  %4904 = load ptr, ptr %118, align 8, !tbaa !108
  %4905 = ptrtoint ptr %4903 to i64
  %4906 = ptrtoint ptr %4904 to i64
  %4907 = sub i64 %4905, %4906
  %4908 = load ptr, ptr %120, align 8, !tbaa !145
  %4909 = icmp eq ptr %4908, %121
  br i1 %4909, label %4913, label %4910

4910:                                             ; preds = %4902
  %4911 = load ptr, ptr %116, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %4911, i32 noundef 11) #21
  %4912 = load ptr, ptr %118, align 8, !tbaa !108
  br label %4913

4913:                                             ; preds = %4910, %4902
  %4914 = phi ptr [ %4912, %4910 ], [ %4904, %4902 ]
  %4915 = icmp sgt i64 %4907, 127
  %4916 = select i1 %4915, ptr @.str.182, ptr @.str.178
  %4917 = select i1 %4915, i64 117, i64 %4907
  %4918 = load i32, ptr %70, align 8, !tbaa !98
  %4919 = icmp ne i32 %4918, 0
  %4920 = zext i1 %4919 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.218, i32 noundef %4920, i64 noundef %4917, ptr noundef %4914, ptr noundef nonnull %4916) #21
  br label %4942

4921:                                             ; preds = %4899
  %4922 = icmp sgt i64 %4896, 255
  br i1 %4922, label %4923, label %4942

4923:                                             ; preds = %4921
  %4924 = load ptr, ptr %117, align 8, !tbaa !140
  %4925 = load ptr, ptr %118, align 8, !tbaa !108
  %4926 = ptrtoint ptr %4924 to i64
  %4927 = ptrtoint ptr %4925 to i64
  %4928 = sub i64 %4926, %4927
  %4929 = load ptr, ptr %120, align 8, !tbaa !145
  %4930 = icmp eq ptr %4929, %121
  br i1 %4930, label %4934, label %4931

4931:                                             ; preds = %4923
  %4932 = load ptr, ptr %116, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %4932, i32 noundef 11) #21
  %4933 = load ptr, ptr %118, align 8, !tbaa !108
  br label %4934

4934:                                             ; preds = %4931, %4923
  %4935 = phi ptr [ %4933, %4931 ], [ %4925, %4923 ]
  %4936 = icmp sgt i64 %4928, 127
  %4937 = select i1 %4936, ptr @.str.182, ptr @.str.178
  %4938 = select i1 %4936, i64 117, i64 %4928
  %4939 = load i32, ptr %70, align 8, !tbaa !98
  %4940 = icmp ne i32 %4939, 0
  %4941 = zext i1 %4940 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.219, i64 noundef 255, i32 noundef %4941, i64 noundef %4938, ptr noundef %4935, ptr noundef nonnull %4937) #21
  br label %4942

4942:                                             ; preds = %4921, %4934, %4913
  %4943 = trunc i64 %4896 to i8
  store i8 %4943, ptr %1495, align 2, !tbaa !169
  br label %4944

4944:                                             ; preds = %4942, %4888
  br i1 %76, label %4958, label %4945

4945:                                             ; preds = %4944
  %4946 = load i32, ptr %108, align 8, !tbaa !199
  %4947 = and i32 %4946, 384
  %4948 = icmp ne i32 %4947, 0
  %4949 = zext i1 %4948 to i32
  %4950 = add nsw i32 %151, %4949
  %4951 = and i32 %4946, 512
  %4952 = icmp eq i32 %4951, 0
  br i1 %4952, label %4956, label %4953

4953:                                             ; preds = %4945
  %4954 = load i32, ptr %77, align 8, !tbaa !199
  %4955 = or i32 %4954, 512
  store i32 %4955, ptr %77, align 8, !tbaa !199
  br label %4956

4956:                                             ; preds = %4953, %4945
  %4957 = load i32, ptr %98, align 4, !tbaa !248
  store i32 %4957, ptr %97, align 4, !tbaa !248
  br label %4958

4958:                                             ; preds = %4956, %4944
  %4959 = phi i32 [ %4950, %4956 ], [ %151, %4944 ]
  br i1 %4889, label %4969, label %4960

4960:                                             ; preds = %4958
  %4961 = and i32 %148, 4096
  %4962 = icmp eq i32 %4961, 0
  %4963 = load ptr, ptr %82, align 8, !tbaa !197
  br i1 %4962, label %4965, label %4964

4964:                                             ; preds = %4960
  call fastcc void @S_ssc_init(ptr noundef %0, ptr noundef %4963)
  br label %4969

4965:                                             ; preds = %4960
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %4963, ptr noundef nonnull %33)
  %4966 = load ptr, ptr %82, align 8, !tbaa !197
  %4967 = load i8, ptr %4966, align 8, !tbaa !196
  %4968 = or i8 %4967, 1
  store i8 %4968, ptr %4966, align 8, !tbaa !196
  br label %4969

4969:                                             ; preds = %4964, %4965, %4958
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %33) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %32) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %31) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %30) #21
  br label %5248

4970:                                             ; preds = %4865, %4861
  switch i8 %3696, label %5003 [
    i8 49, label %4971
    i8 50, label %4977
    i8 68, label %4999
  ]

4971:                                             ; preds = %4970
  %4972 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %4973 = load i32, ptr %4972, align 4, !tbaa !166
  %4974 = icmp ne i32 %145, %4973
  %4975 = zext i1 %4974 to i32
  %4976 = add nsw i32 %151, %4975
  br label %5248

4977:                                             ; preds = %4970
  %4978 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %4979 = load i32, ptr %4978, align 4, !tbaa !166
  %4980 = icmp eq i32 %145, %4979
  br i1 %4980, label %5306, label %4981

4981:                                             ; preds = %4977
  %4982 = icmp eq i32 %4979, %155
  br i1 %4982, label %4983, label %4993

4983:                                             ; preds = %4981
  %4984 = call ptr @Perl_regnext(ptr noundef nonnull %1495)
  %4985 = icmp eq ptr %4984, null
  br i1 %4985, label %4993, label %4986

4986:                                             ; preds = %4983
  %4987 = getelementptr inbounds %struct.regnode, ptr %4984, i64 0, i32 1
  %4988 = load i8, ptr %4987, align 1, !tbaa !164
  %4989 = icmp ne i8 %4988, 48
  %4990 = icmp ult ptr %4984, %144
  %4991 = select i1 %4989, i1 %4990, i1 false
  %4992 = select i1 %4991, i32 0, i32 %155
  br label %4993

4993:                                             ; preds = %4986, %4983, %4981
  %4994 = phi i32 [ %155, %4983 ], [ %155, %4981 ], [ %4992, %4986 ]
  br i1 %76, label %5248, label %4995

4995:                                             ; preds = %4993
  %4996 = load i32, ptr %4978, align 4, !tbaa !166
  %4997 = zext i32 %4996 to i64
  %4998 = load ptr, ptr %99, align 8, !tbaa !198
  store i64 %4997, ptr %4998, align 8, !tbaa !71
  br label %5248

4999:                                             ; preds = %4970
  br i1 %76, label %5248, label %5000

5000:                                             ; preds = %4999
  %5001 = load i32, ptr %77, align 8, !tbaa !199
  %5002 = or i32 %5001, 512
  store i32 %5002, ptr %77, align 8, !tbaa !199
  br label %5248

5003:                                             ; preds = %4970
  %5004 = add nsw i64 %3697, -81
  %5005 = icmp ult i64 %5004, 3
  br i1 %5005, label %5006, label %5018

5006:                                             ; preds = %5003
  br i1 %4854, label %5009, label %5007

5007:                                             ; preds = %5006
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  %5008 = and i32 %148, -1025
  br label %5009

5009:                                             ; preds = %5007, %5006
  %5010 = phi i32 [ %5008, %5007 ], [ %148, %5006 ]
  br i1 %76, label %5248, label %5011

5011:                                             ; preds = %5009
  %5012 = load i8, ptr %1496, align 1, !tbaa !164
  %5013 = icmp eq i8 %5012, 83
  br i1 %5013, label %5014, label %5248

5014:                                             ; preds = %5011
  %5015 = load i32, ptr %77, align 8, !tbaa !199
  %5016 = or i32 %5015, 32768
  store i32 %5016, ptr %77, align 8, !tbaa !199
  %5017 = call i64 @llvm.smin.i64(i64 %157, i64 %150)
  br label %5248

5018:                                             ; preds = %5003
  switch i8 %3696, label %5059 [
    i8 70, label %5019
    i8 7, label %5031
  ]

5019:                                             ; preds = %5018
  %5020 = load i8, ptr %1495, align 2, !tbaa !169
  %5021 = icmp eq i8 %5020, 2
  br i1 %5021, label %5022, label %5059

5022:                                             ; preds = %5019
  br i1 %4854, label %5024, label %5023

5023:                                             ; preds = %5022
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %5024

5024:                                             ; preds = %5023, %5022
  %5025 = and i32 %148, 4096
  %5026 = icmp eq i32 %5025, 0
  br i1 %5026, label %5029, label %5027

5027:                                             ; preds = %5024
  %5028 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_anything(ptr noundef %5028)
  br label %5029

5029:                                             ; preds = %5027, %5024
  %5030 = and i32 %148, -6145
  br label %5248

5031:                                             ; preds = %5018
  %5032 = load ptr, ptr %122, align 8, !tbaa !155
  %5033 = getelementptr inbounds %struct.regexp, ptr %5032, i64 0, i32 13
  %5034 = load i32, ptr %5033, align 4, !tbaa !61
  %5035 = and i32 %5034, 512
  %5036 = icmp ne i32 %5035, 0
  %5037 = icmp ne i64 %152, 0
  %5038 = select i1 %5036, i1 true, i1 %5037
  %5039 = icmp ne i32 %153, 0
  %5040 = select i1 %5038, i1 true, i1 %5039
  br i1 %5040, label %5056, label %5041

5041:                                             ; preds = %5031
  br i1 %76, label %5045, label %5042

5042:                                             ; preds = %5041
  %5043 = load i64, ptr %88, align 8, !tbaa !249
  %5044 = icmp eq i64 %5043, 0
  br i1 %5044, label %5045, label %5056

5045:                                             ; preds = %5042, %5041
  %5046 = and i32 %5034, 7168
  %5047 = icmp ne i32 %5046, 0
  %5048 = select i1 %5047, i1 true, i1 %4854
  br i1 %5048, label %5051, label %5049

5049:                                             ; preds = %5045
  %5050 = or i32 %5034, 4096
  store i32 %5050, ptr %5033, align 4, !tbaa !61
  br label %5051

5051:                                             ; preds = %5049, %5045
  %5052 = getelementptr inbounds %struct.regexp, ptr %5032, i64 0, i32 10
  %5053 = load i64, ptr %5052, align 8, !tbaa !283
  %5054 = icmp ult i64 %5053, %150
  br i1 %5054, label %5055, label %5248

5055:                                             ; preds = %5051
  store i64 %150, ptr %5052, align 8, !tbaa !283
  br label %5248

5056:                                             ; preds = %5042, %5031
  %5057 = or i32 %5034, 512
  store i32 %5057, ptr %5033, align 4, !tbaa !61
  %5058 = getelementptr inbounds %struct.regexp, ptr %5032, i64 0, i32 10
  store i64 0, ptr %5058, align 8, !tbaa !283
  br label %5248

5059:                                             ; preds = %5018, %5019
  %5060 = icmp eq i8 %4863, 72
  br i1 %5060, label %5061, label %5248

5061:                                             ; preds = %5059
  %5062 = call ptr @Perl_regnext(ptr noundef nonnull %1495)
  %5063 = load ptr, ptr %71, align 8, !tbaa !156
  %5064 = getelementptr inbounds %struct.regexp_internal, ptr %5063, i64 0, i32 3
  %5065 = load ptr, ptr %5064, align 8, !tbaa !26
  %5066 = getelementptr inbounds %struct.regnode_1, ptr %1495, i64 0, i32 3
  %5067 = load i32, ptr %5066, align 4, !tbaa !166
  %5068 = zext i32 %5067 to i64
  %5069 = getelementptr inbounds %struct.reg_data, ptr %5065, i64 0, i32 2, i64 %5068
  %5070 = load ptr, ptr %5069, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %34) #21
  br i1 %4854, label %5072, label %5071

5071:                                             ; preds = %5061
  call fastcc void @S_scan_commit(ptr noundef nonnull %0, ptr noundef %5, ptr noundef %2, i32 noundef %153)
  br label %5072

5072:                                             ; preds = %5071, %5061
  %5073 = and i32 %148, 6144
  %5074 = icmp eq i32 %5073, 0
  br i1 %5074, label %5076, label %5075

5075:                                             ; preds = %5072
  call fastcc void @S_ssc_init(ptr noundef nonnull %0, ptr noundef nonnull %34)
  br label %5076

5076:                                             ; preds = %5075, %5072
  %5077 = getelementptr inbounds %struct._reg_trie_data, ptr %5070, i64 0, i32 6
  %5078 = load ptr, ptr %5077, align 8, !tbaa !42
  %5079 = icmp eq ptr %5078, null
  br i1 %5079, label %5088, label %5080

5080:                                             ; preds = %5076
  %5081 = getelementptr inbounds %struct._reg_trie_data, ptr %5070, i64 0, i32 14
  %5082 = load i32, ptr %5081, align 8, !tbaa !284
  %5083 = icmp eq i32 %5082, 0
  br i1 %5083, label %5197, label %5084

5084:                                             ; preds = %5080
  %5085 = add i32 %149, 1
  %5086 = getelementptr inbounds %struct._reg_trie_data, ptr %5070, i64 0, i32 10
  %5087 = getelementptr inbounds %struct._reg_trie_data, ptr %5070, i64 0, i32 11
  br label %5093

5088:                                             ; preds = %5076
  %5089 = getelementptr inbounds %struct._reg_trie_data, ptr %5070, i64 0, i32 10
  %5090 = load i64, ptr %5089, align 8, !tbaa !173
  %5091 = getelementptr inbounds %struct._reg_trie_data, ptr %5070, i64 0, i32 11
  %5092 = load i64, ptr %5091, align 8, !tbaa !285
  br label %5197

5093:                                             ; preds = %5084, %5191
  %5094 = phi i32 [ 1, %5084 ], [ %5192, %5191 ]
  %5095 = phi ptr [ null, %5084 ], [ %5145, %5191 ]
  %5096 = phi i64 [ 9223372036854775807, %5084 ], [ %5148, %5191 ]
  %5097 = phi i64 [ 0, %5084 ], [ %5159, %5191 ]
  %5098 = phi i32 [ %148, %5084 ], [ %5186, %5191 ]
  %5099 = phi i32 [ %151, %5084 ], [ %5164, %5191 ]
  %5100 = phi i32 [ %153, %5084 ], [ %5158, %5191 ]
  %5101 = phi i32 [ %154, %5084 ], [ %5157, %5191 ]
  %5102 = phi i64 [ %157, %5084 ], [ %5187, %5191 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %35) #21
  store i64 0, ptr %35, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %36) #21
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %37) #21
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  br i1 %76, label %5106, label %5103

5103:                                             ; preds = %5093
  %5104 = load i32, ptr %97, align 4, !tbaa !248
  store i32 %5104, ptr %98, align 4, !tbaa !248
  %5105 = load ptr, ptr %99, align 8, !tbaa !198
  br label %5106

5106:                                             ; preds = %5093, %5103
  %5107 = phi ptr [ %5105, %5103 ], [ %36, %5093 ]
  store ptr %5107, ptr %100, align 8, !tbaa !198
  store i64 %152, ptr %101, align 8, !tbaa !249
  %5108 = and i32 %5098, 6144
  %5109 = icmp eq i32 %5108, 0
  br i1 %5109, label %5111, label %5110

5110:                                             ; preds = %5106
  call fastcc void @S_ssc_init(ptr noundef %0, ptr noundef nonnull %37)
  store ptr %37, ptr %107, align 8, !tbaa !197
  br label %5111

5111:                                             ; preds = %5110, %5106
  %5112 = phi i32 [ 2048, %5110 ], [ 0, %5106 ]
  %5113 = and i32 %5098, 8192
  %5114 = or i32 %5112, %5113
  %5115 = load ptr, ptr %5077, align 8, !tbaa !42
  %5116 = zext i32 %5094 to i64
  %5117 = getelementptr inbounds i16, ptr %5115, i64 %5116
  %5118 = load i16, ptr %5117, align 2, !tbaa !163
  %5119 = icmp eq i16 %5118, 0
  br i1 %5119, label %5131, label %5120

5120:                                             ; preds = %5111
  %5121 = icmp eq ptr %5095, null
  br i1 %5121, label %5122, label %5126

5122:                                             ; preds = %5120
  %5123 = load i16, ptr %5115, align 2, !tbaa !163
  %5124 = zext i16 %5123 to i64
  %5125 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %5124
  br label %5126

5126:                                             ; preds = %5122, %5120
  %5127 = phi ptr [ %5095, %5120 ], [ %5125, %5122 ]
  %5128 = zext i16 %5118 to i64
  %5129 = getelementptr inbounds %struct.regnode, ptr %1495, i64 %5128
  store ptr %5129, ptr %16, align 8, !tbaa !5
  %5130 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef %2, ptr noundef nonnull %35, ptr noundef %5127, ptr noundef nonnull %17, i32 noundef %145, i32 noundef %146, i32 noundef %5114, i32 noundef %5085)
  br label %5131

5131:                                             ; preds = %5126, %5111
  %5132 = phi ptr [ %5127, %5126 ], [ %5095, %5111 ]
  %5133 = phi i64 [ %5130, %5126 ], [ 0, %5111 ]
  %5134 = icmp eq ptr %5132, null
  br i1 %5134, label %5144, label %5135

5135:                                             ; preds = %5131
  %5136 = getelementptr inbounds %struct.regnode, ptr %5132, i64 0, i32 1
  %5137 = load i8, ptr %5136, align 1, !tbaa !164
  %5138 = zext i8 %5137 to i64
  %5139 = getelementptr inbounds [134 x i8], ptr @PL_regkind, i64 0, i64 %5138
  %5140 = load i8, ptr %5139, align 1, !tbaa !9
  %5141 = icmp eq i8 %5140, 30
  br i1 %5141, label %5142, label %5144

5142:                                             ; preds = %5135
  %5143 = call ptr @Perl_regnext(ptr noundef nonnull %5132)
  br label %5144

5144:                                             ; preds = %5142, %5135, %5131
  %5145 = phi ptr [ %5143, %5142 ], [ %5132, %5135 ], [ null, %5131 ]
  %5146 = load i64, ptr %5086, align 8, !tbaa !173
  %5147 = add i64 %5146, %5133
  %5148 = call i64 @llvm.smin.i64(i64 %5096, i64 %5147)
  %5149 = load i64, ptr %35, align 8, !tbaa !71
  %5150 = icmp eq i64 %5149, 9223372036854775807
  br i1 %5150, label %5156, label %5151

5151:                                             ; preds = %5144
  %5152 = add nsw i64 %5149, %5133
  %5153 = load i64, ptr %5087, align 8, !tbaa !285
  %5154 = add i64 %5152, %5153
  %5155 = call i64 @llvm.smax.i64(i64 %5097, i64 %5154)
  br label %5156

5156:                                             ; preds = %5151, %5144
  %5157 = phi i32 [ 1, %5144 ], [ %5101, %5151 ]
  %5158 = phi i32 [ 1, %5144 ], [ %5100, %5151 ]
  %5159 = phi i64 [ 9223372036854775807, %5144 ], [ %5155, %5151 ]
  %5160 = load i32, ptr %108, align 8, !tbaa !199
  %5161 = and i32 %5160, 384
  %5162 = icmp ne i32 %5161, 0
  %5163 = zext i1 %5162 to i32
  %5164 = add nsw i32 %5099, %5163
  %5165 = and i32 %5160, 32768
  %5166 = icmp eq i32 %5165, 0
  br i1 %5166, label %5174, label %5167

5167:                                             ; preds = %5156
  %5168 = add nsw i64 %5148, %150
  %5169 = call i64 @llvm.smin.i64(i64 %5102, i64 %5168)
  %5170 = and i32 %5098, -1025
  br i1 %76, label %5185, label %5171

5171:                                             ; preds = %5167
  %5172 = load i32, ptr %77, align 8, !tbaa !199
  %5173 = or i32 %5172, 32768
  store i32 %5173, ptr %77, align 8, !tbaa !199
  br label %5175

5174:                                             ; preds = %5156
  br i1 %76, label %5185, label %5175

5175:                                             ; preds = %5171, %5174
  %5176 = phi i32 [ %5170, %5171 ], [ %5098, %5174 ]
  %5177 = phi i64 [ %5169, %5171 ], [ %5102, %5174 ]
  %5178 = and i32 %5160, 512
  %5179 = icmp eq i32 %5178, 0
  br i1 %5179, label %5183, label %5180

5180:                                             ; preds = %5175
  %5181 = load i32, ptr %77, align 8, !tbaa !199
  %5182 = or i32 %5181, 512
  store i32 %5182, ptr %77, align 8, !tbaa !199
  br label %5183

5183:                                             ; preds = %5180, %5175
  %5184 = load i32, ptr %98, align 4, !tbaa !248
  store i32 %5184, ptr %97, align 4, !tbaa !248
  br label %5185

5185:                                             ; preds = %5167, %5183, %5174
  %5186 = phi i32 [ %5176, %5183 ], [ %5098, %5174 ], [ %5170, %5167 ]
  %5187 = phi i64 [ %5177, %5183 ], [ %5102, %5174 ], [ %5169, %5167 ]
  %5188 = and i32 %5186, 6144
  %5189 = icmp eq i32 %5188, 0
  br i1 %5189, label %5191, label %5190

5190:                                             ; preds = %5185
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef nonnull %34, ptr noundef nonnull %37)
  br label %5191

5191:                                             ; preds = %5190, %5185
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %37) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %36) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %35) #21
  %5192 = add i32 %5094, 1
  %5193 = load i32, ptr %5081, align 8, !tbaa !284
  %5194 = icmp ugt i32 %5192, %5193
  br i1 %5194, label %5195, label %5093, !llvm.loop !286

5195:                                             ; preds = %5191
  %5196 = and i32 %5186, 1024
  br label %5197

5197:                                             ; preds = %5195, %5080, %5088
  %5198 = phi i32 [ %5196, %5195 ], [ %4853, %5080 ], [ %4853, %5088 ]
  %5199 = phi i64 [ %5187, %5195 ], [ %157, %5080 ], [ %157, %5088 ]
  %5200 = phi i32 [ %5157, %5195 ], [ %154, %5080 ], [ %154, %5088 ]
  %5201 = phi i32 [ %5158, %5195 ], [ %153, %5080 ], [ %153, %5088 ]
  %5202 = phi i32 [ %5164, %5195 ], [ %151, %5080 ], [ %151, %5088 ]
  %5203 = phi i32 [ %5186, %5195 ], [ %148, %5080 ], [ %148, %5088 ]
  %5204 = phi i64 [ %5159, %5195 ], [ 0, %5080 ], [ %5092, %5088 ]
  %5205 = phi i64 [ %5148, %5195 ], [ 9223372036854775807, %5080 ], [ %5090, %5088 ]
  %5206 = icmp eq i32 %5198, 0
  br i1 %5206, label %5217, label %5207

5207:                                             ; preds = %5197
  %5208 = sub i64 %5204, %5205
  %5209 = load <2 x i64>, ptr %5, align 8, !tbaa !71
  %5210 = insertelement <2 x i64> poison, i64 %5205, i64 0
  %5211 = insertelement <2 x i64> %5210, i64 %5208, i64 1
  %5212 = add nsw <2 x i64> %5209, %5211
  store <2 x i64> %5212, ptr %5, align 8, !tbaa !71
  %5213 = icmp ne i64 %5204, %5205
  %5214 = icmp ne i32 %5201, 0
  %5215 = select i1 %5213, i1 true, i1 %5214
  br i1 %5215, label %5216, label %5217

5216:                                             ; preds = %5207
  store ptr %80, ptr %81, align 8, !tbaa !192
  br label %5217

5217:                                             ; preds = %5216, %5207, %5197
  %5218 = add nsw i64 %5205, %150
  %5219 = icmp eq i64 %152, 9223372036854775807
  %5220 = add i64 %5204, %152
  %5221 = sub i64 %5220, %5205
  %5222 = select i1 %5219, i64 9223372036854775807, i64 %5221
  %5223 = and i32 %5203, 4096
  %5224 = icmp eq i32 %5223, 0
  br i1 %5224, label %5231, label %5225

5225:                                             ; preds = %5217
  %5226 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %5226, ptr noundef nonnull %34)
  %5227 = icmp eq i64 %5205, 0
  br i1 %5227, label %5245, label %5228

5228:                                             ; preds = %5225
  %5229 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %5229, ptr noundef %147)
  %5230 = and i32 %5203, -6145
  br label %5245

5231:                                             ; preds = %5217
  %5232 = and i32 %5203, 2048
  %5233 = icmp eq i32 %5232, 0
  br i1 %5233, label %5245, label %5234

5234:                                             ; preds = %5231
  %5235 = icmp eq i64 %5205, 0
  br i1 %5235, label %5239, label %5236

5236:                                             ; preds = %5234
  %5237 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %5237, ptr noundef nonnull %34)
  %5238 = and i32 %5203, -6145
  br label %5245

5239:                                             ; preds = %5234
  %5240 = call ptr @Perl_safesysmalloc(i64 noundef 56) #21
  call void @Perl_save_pushptr(ptr noundef %5240, i32 noundef 10) #21
  %5241 = load ptr, ptr %82, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %5240, ptr noundef nonnull align 8 dereferenceable(56) %5241, i64 56, i1 false), !tbaa.struct !212
  %5242 = and i32 %5203, -6145
  %5243 = load ptr, ptr %82, align 8, !tbaa !197
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %5243, ptr noundef nonnull align 8 dereferenceable(56) %34, i64 56, i1 false), !tbaa.struct !212
  %5244 = or i32 %5242, 4096
  br label %5245

5245:                                             ; preds = %5231, %5239, %5236, %5225, %5228
  %5246 = phi i32 [ %5230, %5228 ], [ %5203, %5225 ], [ %5238, %5236 ], [ %5244, %5239 ], [ %5203, %5231 ]
  %5247 = phi ptr [ %147, %5228 ], [ %147, %5225 ], [ %147, %5236 ], [ %5240, %5239 ], [ %147, %5231 ]
  store ptr %5062, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %34) #21
  br label %5288

5248:                                             ; preds = %2450, %2460, %4590, %3694, %3692, %3685, %5014, %4971, %2682, %2645, %4848, %4647, %4969, %4995, %4993, %5011, %5009, %5051, %5055, %5056, %5059, %5029, %4999, %5000, %4856, %4624, %4632, %1628
  %5249 = phi i64 [ %157, %1628 ], [ %157, %2645 ], [ %157, %4590 ], [ %157, %4632 ], [ %157, %4624 ], [ %157, %4848 ], [ %157, %4647 ], [ %157, %4856 ], [ %157, %4969 ], [ %157, %4995 ], [ %157, %4993 ], [ %157, %5000 ], [ %157, %4999 ], [ %157, %5011 ], [ %157, %5009 ], [ %157, %5029 ], [ %157, %5056 ], [ %157, %5055 ], [ %157, %5051 ], [ %157, %5059 ], [ %157, %2682 ], [ %157, %4971 ], [ %5017, %5014 ], [ %157, %3685 ], [ %157, %3692 ], [ %157, %3694 ], [ %157, %2460 ], [ %157, %2450 ]
  %5250 = phi i32 [ %155, %1628 ], [ %155, %2645 ], [ %155, %4590 ], [ %155, %4632 ], [ %155, %4624 ], [ %155, %4848 ], [ %155, %4647 ], [ %155, %4856 ], [ %155, %4969 ], [ %4994, %4995 ], [ %4994, %4993 ], [ %155, %5000 ], [ %155, %4999 ], [ %155, %5011 ], [ %155, %5009 ], [ %155, %5029 ], [ %155, %5056 ], [ %155, %5055 ], [ %155, %5051 ], [ %155, %5059 ], [ %155, %2682 ], [ %155, %4971 ], [ %155, %5014 ], [ %155, %3685 ], [ %155, %3692 ], [ %155, %3694 ], [ %155, %2460 ], [ %155, %2450 ]
  %5251 = phi i32 [ %154, %1628 ], [ %154, %2645 ], [ 1, %4590 ], [ %154, %4632 ], [ %154, %4624 ], [ %154, %4848 ], [ %154, %4647 ], [ %154, %4856 ], [ %154, %4969 ], [ %154, %4995 ], [ %154, %4993 ], [ %154, %5000 ], [ %154, %4999 ], [ %154, %5011 ], [ %154, %5009 ], [ 1, %5029 ], [ %154, %5056 ], [ %154, %5055 ], [ %154, %5051 ], [ %154, %5059 ], [ %154, %2682 ], [ %154, %4971 ], [ %154, %5014 ], [ %154, %3685 ], [ %154, %3692 ], [ %154, %3694 ], [ %154, %2460 ], [ 1, %2450 ]
  %5252 = phi i32 [ %153, %1628 ], [ %153, %2645 ], [ 1, %4590 ], [ %153, %4632 ], [ %153, %4624 ], [ %153, %4848 ], [ %153, %4647 ], [ %153, %4856 ], [ %153, %4969 ], [ %153, %4995 ], [ %153, %4993 ], [ %153, %5000 ], [ %153, %4999 ], [ %153, %5011 ], [ %153, %5009 ], [ 1, %5029 ], [ %153, %5056 ], [ 0, %5055 ], [ 0, %5051 ], [ %153, %5059 ], [ %153, %2682 ], [ %153, %4971 ], [ %153, %5014 ], [ %153, %3685 ], [ %153, %3692 ], [ %153, %3694 ], [ %153, %2460 ], [ 1, %2450 ]
  %5253 = phi i64 [ %152, %1628 ], [ %152, %2645 ], [ %152, %4590 ], [ %4629, %4632 ], [ %4629, %4624 ], [ %152, %4848 ], [ %152, %4647 ], [ %152, %4856 ], [ %152, %4969 ], [ %152, %4995 ], [ %152, %4993 ], [ %152, %5000 ], [ %152, %4999 ], [ %152, %5011 ], [ %152, %5009 ], [ %152, %5029 ], [ %152, %5056 ], [ 0, %5055 ], [ 0, %5051 ], [ %152, %5059 ], [ %2673, %2682 ], [ %152, %4971 ], [ %152, %5014 ], [ %2673, %3685 ], [ %2673, %3692 ], [ %2673, %3694 ], [ %152, %2460 ], [ %152, %2450 ]
  %5254 = phi i32 [ %151, %1628 ], [ %151, %2645 ], [ %151, %4590 ], [ %151, %4632 ], [ %151, %4624 ], [ %151, %4848 ], [ %151, %4647 ], [ %151, %4856 ], [ %4959, %4969 ], [ %151, %4995 ], [ %151, %4993 ], [ %151, %5000 ], [ %151, %4999 ], [ %151, %5011 ], [ %151, %5009 ], [ %151, %5029 ], [ %151, %5056 ], [ %151, %5055 ], [ %151, %5051 ], [ %151, %5059 ], [ %151, %2682 ], [ %4976, %4971 ], [ %151, %5014 ], [ %151, %3685 ], [ %151, %3692 ], [ %151, %3694 ], [ %151, %2460 ], [ %151, %2450 ]
  %5255 = phi i64 [ %150, %1628 ], [ %2544, %2645 ], [ %150, %4590 ], [ %4626, %4632 ], [ %4626, %4624 ], [ %4648, %4848 ], [ %4648, %4647 ], [ %150, %4856 ], [ %150, %4969 ], [ %150, %4995 ], [ %150, %4993 ], [ %150, %5000 ], [ %150, %4999 ], [ %150, %5011 ], [ %150, %5009 ], [ %150, %5029 ], [ %150, %5056 ], [ %150, %5055 ], [ %150, %5051 ], [ %150, %5059 ], [ %2672, %2682 ], [ %150, %4971 ], [ %150, %5014 ], [ %2672, %3685 ], [ %2672, %3692 ], [ %2672, %3694 ], [ %150, %2460 ], [ %150, %2450 ]
  %5256 = phi i32 [ %148, %1628 ], [ %2646, %2645 ], [ %4591, %4590 ], [ %4625, %4632 ], [ %4625, %4624 ], [ %4849, %4848 ], [ %148, %4647 ], [ %148, %4856 ], [ %148, %4969 ], [ %148, %4995 ], [ %148, %4993 ], [ %148, %5000 ], [ %148, %4999 ], [ %5010, %5011 ], [ %5010, %5009 ], [ %5030, %5029 ], [ %148, %5056 ], [ %148, %5055 ], [ %148, %5051 ], [ %148, %5059 ], [ %148, %2682 ], [ %148, %4971 ], [ %5010, %5014 ], [ %3686, %3685 ], [ %3686, %3692 ], [ %3686, %3694 ], [ %148, %2460 ], [ %2451, %2450 ]
  %5257 = load ptr, ptr %16, align 8, !tbaa !5
  %5258 = icmp eq ptr %5257, null
  br i1 %5258, label %5285, label %5259

5259:                                             ; preds = %5248
  %5260 = getelementptr inbounds %struct.regnode, ptr %5257, i64 0, i32 1
  %5261 = load i8, ptr %5260, align 1, !tbaa !164
  %5262 = icmp ugt i8 %5261, 93
  br i1 %5262, label %5263, label %5266

5263:                                             ; preds = %5259
  %5264 = zext i8 %5261 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %5264, i32 noundef 93) #21
  %5265 = load i8, ptr %5260, align 1, !tbaa !164
  br label %5266

5266:                                             ; preds = %5263, %5259
  %5267 = phi i8 [ %5265, %5263 ], [ %5261, %5259 ]
  %5268 = zext i8 %5267 to i64
  %5269 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %5268
  %5270 = load i8, ptr %5269, align 1, !tbaa !9
  %5271 = icmp eq i8 %5270, 0
  br i1 %5271, label %5275, label %5272

5272:                                             ; preds = %5266
  %5273 = getelementptr inbounds %struct.regnode_1, ptr %5257, i64 0, i32 3
  %5274 = load i32, ptr %5273, align 4, !tbaa !166
  br label %5279

5275:                                             ; preds = %5266
  %5276 = getelementptr inbounds %struct.regnode, ptr %5257, i64 0, i32 2
  %5277 = load i16, ptr %5276, align 2, !tbaa !168
  %5278 = zext i16 %5277 to i32
  br label %5279

5279:                                             ; preds = %5275, %5272
  %5280 = phi i32 [ %5274, %5272 ], [ %5278, %5275 ]
  %5281 = icmp eq i32 %5280, 0
  br i1 %5281, label %5285, label %5282

5282:                                             ; preds = %5279
  %5283 = sext i32 %5280 to i64
  %5284 = getelementptr inbounds %struct.regnode, ptr %5257, i64 %5283
  br label %5285

5285:                                             ; preds = %5248, %5279, %5282
  %5286 = phi ptr [ %5284, %5282 ], [ null, %5248 ], [ null, %5279 ]
  store ptr %5286, ptr %16, align 8, !tbaa !5
  br label %5288

5287:                                             ; preds = %4535, %4545, %4505
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %26) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #21
  br label %5288

5288:                                             ; preds = %2515, %2385, %2328, %2335, %2333, %5245, %5285, %5287
  %5289 = phi ptr [ %144, %5287 ], [ %2475, %2515 ], [ %144, %2385 ], [ %144, %2328 ], [ %144, %2335 ], [ %144, %2333 ], [ %144, %5245 ], [ %144, %5285 ]
  %5290 = phi i32 [ %145, %5287 ], [ %2477, %2515 ], [ %145, %2385 ], [ %145, %2328 ], [ %145, %2335 ], [ %145, %2333 ], [ %145, %5245 ], [ %145, %5285 ]
  %5291 = phi i32 [ %146, %5287 ], [ %2474, %2515 ], [ %146, %2385 ], [ %146, %2328 ], [ %146, %2335 ], [ %146, %2333 ], [ %146, %5245 ], [ %146, %5285 ]
  %5292 = phi ptr [ %4512, %5287 ], [ %147, %2515 ], [ %147, %2385 ], [ %2133, %2328 ], [ %147, %2335 ], [ %147, %2333 ], [ %5247, %5245 ], [ %147, %5285 ]
  %5293 = phi i32 [ %4511, %5287 ], [ %148, %2515 ], [ %148, %2385 ], [ %2330, %2328 ], [ %148, %2335 ], [ %148, %2333 ], [ %5246, %5245 ], [ %5256, %5285 ]
  %5294 = phi i32 [ %149, %5287 ], [ %2525, %2515 ], [ %149, %2385 ], [ %149, %2328 ], [ %149, %2335 ], [ %149, %2333 ], [ %149, %5245 ], [ %149, %5285 ]
  %5295 = phi i64 [ %4510, %5287 ], [ %150, %2515 ], [ %150, %2385 ], [ %2103, %2328 ], [ %150, %2335 ], [ %150, %2333 ], [ %5218, %5245 ], [ %5255, %5285 ]
  %5296 = phi i32 [ %4509, %5287 ], [ %151, %2515 ], [ %151, %2385 ], [ %2082, %2328 ], [ %151, %2335 ], [ %151, %2333 ], [ %5202, %5245 ], [ %5254, %5285 ]
  %5297 = phi i64 [ %4508, %5287 ], [ %152, %2515 ], [ %152, %2385 ], [ %2108, %2328 ], [ %152, %2335 ], [ %152, %2333 ], [ %5222, %5245 ], [ %5253, %5285 ]
  %5298 = phi i32 [ %4507, %5287 ], [ %153, %2515 ], [ %153, %2385 ], [ %2081, %2328 ], [ %153, %2335 ], [ %153, %2333 ], [ %5201, %5245 ], [ %5252, %5285 ]
  %5299 = phi i32 [ %4506, %5287 ], [ %154, %2515 ], [ %154, %2385 ], [ %2080, %2328 ], [ %154, %2335 ], [ %154, %2333 ], [ %5200, %5245 ], [ %5251, %5285 ]
  %5300 = phi i32 [ %155, %5287 ], [ %155, %2515 ], [ %155, %2385 ], [ %155, %2328 ], [ %155, %2335 ], [ %155, %2333 ], [ %155, %5245 ], [ %5250, %5285 ]
  %5301 = phi ptr [ %156, %5287 ], [ %156, %2515 ], [ %156, %2385 ], [ %2329, %2328 ], [ %156, %2335 ], [ %156, %2333 ], [ %156, %5245 ], [ %156, %5285 ]
  %5302 = phi i64 [ %157, %5287 ], [ %157, %2515 ], [ %157, %2385 ], [ %2079, %2328 ], [ %157, %2335 ], [ %157, %2333 ], [ %5199, %5245 ], [ %5249, %5285 ]
  %5303 = phi ptr [ %158, %5287 ], [ %2496, %2515 ], [ %158, %2385 ], [ %158, %2328 ], [ %158, %2335 ], [ %158, %2333 ], [ %158, %5245 ], [ %158, %5285 ]
  %5304 = load ptr, ptr %16, align 8, !tbaa !5
  %5305 = icmp eq ptr %5304, null
  br i1 %5305, label %5306, label %142, !llvm.loop !262

5306:                                             ; preds = %5288, %142, %4977, %124
  %5307 = phi ptr [ %126, %124 ], [ %158, %4977 ], [ %158, %142 ], [ %5303, %5288 ]
  %5308 = phi i64 [ %127, %124 ], [ %157, %4977 ], [ %157, %142 ], [ %5302, %5288 ]
  %5309 = phi ptr [ %128, %124 ], [ %156, %4977 ], [ %156, %142 ], [ %5301, %5288 ]
  %5310 = phi i32 [ %129, %124 ], [ %155, %4977 ], [ %155, %142 ], [ %5300, %5288 ]
  %5311 = phi i32 [ %130, %124 ], [ %154, %4977 ], [ %154, %142 ], [ %5299, %5288 ]
  %5312 = phi i32 [ %131, %124 ], [ %153, %4977 ], [ %153, %142 ], [ %5298, %5288 ]
  %5313 = phi i64 [ %132, %124 ], [ %152, %4977 ], [ %152, %142 ], [ %5297, %5288 ]
  %5314 = phi i32 [ %133, %124 ], [ %151, %4977 ], [ %151, %142 ], [ %5296, %5288 ]
  %5315 = phi i64 [ %134, %124 ], [ %150, %4977 ], [ %150, %142 ], [ %5295, %5288 ]
  %5316 = phi i32 [ %135, %124 ], [ %149, %4977 ], [ %149, %142 ], [ %5294, %5288 ]
  %5317 = phi i32 [ %136, %124 ], [ %148, %4977 ], [ %148, %142 ], [ %5293, %5288 ]
  %5318 = phi ptr [ %137, %124 ], [ %147, %4977 ], [ %147, %142 ], [ %5292, %5288 ]
  %5319 = icmp eq ptr %5307, null
  br i1 %5319, label %5335, label %5320

5320:                                             ; preds = %5306
  %5321 = add i32 %5316, -1
  %5322 = load ptr, ptr %5307, align 8, !tbaa !270
  %5323 = getelementptr inbounds %struct.scan_frame, ptr %5307, i64 0, i32 1
  %5324 = load ptr, ptr %5323, align 8, !tbaa !269
  store ptr %5324, ptr %16, align 8, !tbaa !5
  %5325 = getelementptr inbounds %struct.scan_frame, ptr %5307, i64 0, i32 3
  %5326 = load i32, ptr %5325, align 4, !tbaa !271
  %5327 = getelementptr inbounds %struct.scan_frame, ptr %5307, i64 0, i32 2
  %5328 = load i32, ptr %5327, align 8, !tbaa !272
  %5329 = getelementptr inbounds %struct.scan_frame, ptr %5307, i64 0, i32 6
  %5330 = load ptr, ptr %5329, align 8, !tbaa !267
  store ptr %5330, ptr %83, align 8, !tbaa !263
  %5331 = getelementptr inbounds %struct.scan_frame, ptr %5307, i64 0, i32 5
  %5332 = load ptr, ptr %5331, align 8, !tbaa !273
  br label %124

5333:                                             ; preds = %3708
  %5334 = getelementptr inbounds %struct.regnode, ptr %1495, i64 1
  store ptr %5334, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %26) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #21
  br label %5335

5335:                                             ; preds = %5306, %5333
  %5336 = phi i64 [ %157, %5333 ], [ %5308, %5306 ]
  %5337 = phi i32 [ %155, %5333 ], [ %5310, %5306 ]
  %5338 = phi i32 [ %154, %5333 ], [ %5311, %5306 ]
  %5339 = phi i32 [ %153, %5333 ], [ %5312, %5306 ]
  %5340 = phi i64 [ %152, %5333 ], [ %5313, %5306 ]
  %5341 = phi i32 [ %151, %5333 ], [ %5314, %5306 ]
  %5342 = phi i64 [ %150, %5333 ], [ %5315, %5306 ]
  %5343 = phi i32 [ %148, %5333 ], [ %5317, %5306 ]
  %5344 = phi ptr [ %147, %5333 ], [ %5318, %5306 ]
  %5345 = load ptr, ptr %16, align 8, !tbaa !5
  store ptr %5345, ptr %1, align 8, !tbaa !5
  %5346 = icmp eq i32 %5338, 0
  %5347 = select i1 %5346, i64 %5340, i64 9223372036854775807
  store i64 %5347, ptr %3, align 8, !tbaa !71
  %5348 = and i32 %5343, 1024
  %5349 = icmp ne i32 %5348, 0
  %5350 = icmp ne i32 %5339, 0
  %5351 = select i1 %5349, i1 %5350, i1 false
  br i1 %5351, label %5352, label %5355

5352:                                             ; preds = %5335
  %5353 = load i64, ptr %5, align 8, !tbaa !258
  %5354 = sub nsw i64 9223372036854775807, %5353
  store i64 %5354, ptr %88, align 8, !tbaa !249
  br label %5355

5355:                                             ; preds = %5352, %5335
  %5356 = icmp slt i32 %5337, 256
  %5357 = icmp ne i32 %5337, 0
  %5358 = and i1 %5356, %5357
  %5359 = icmp eq i32 %5341, 1
  %5360 = select i1 %5358, i1 %5359, i1 false
  %5361 = and i1 %110, %5360
  br i1 %5361, label %5365, label %5362

5362:                                             ; preds = %5355
  %5363 = icmp ne i32 %5341, 0
  %5364 = and i1 %110, %5363
  br i1 %5364, label %5365, label %5370

5365:                                             ; preds = %5362, %5355
  %5366 = phi i32 [ 256, %5355 ], [ 128, %5362 ]
  %5367 = load i32, ptr %77, align 8, !tbaa !199
  %5368 = and i32 %5367, -385
  %5369 = or i32 %5368, %5366
  store i32 %5369, ptr %77, align 8, !tbaa !199
  br label %5370

5370:                                             ; preds = %5365, %5362
  %5371 = and i32 %5343, 4096
  %5372 = icmp eq i32 %5371, 0
  br i1 %5372, label %5375, label %5373

5373:                                             ; preds = %5370
  %5374 = load ptr, ptr %82, align 8, !tbaa !197
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %5374, ptr noundef %5344)
  br label %5375

5375:                                             ; preds = %5373, %5370
  %5376 = and i32 %5343, 16384
  %5377 = icmp eq i32 %5376, 0
  br i1 %5377, label %5381, label %5378

5378:                                             ; preds = %5375
  %5379 = load i32, ptr %77, align 8, !tbaa !199
  %5380 = or i32 %5379, 16384
  store i32 %5380, ptr %77, align 8, !tbaa !199
  br label %5381

5381:                                             ; preds = %5378, %5375
  %5382 = call i64 @llvm.smin.i64(i64 %5342, i64 %5336)
  %5383 = load i32, ptr %109, align 8, !tbaa !131
  %5384 = and i32 %5383, 4096
  %5385 = icmp eq i32 %5384, 0
  br i1 %5385, label %5386, label %5396

5386:                                             ; preds = %5381
  %5387 = sub nsw i64 9223372036854775807, %5340
  %5388 = icmp sgt i64 %5382, %5387
  %5389 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 41
  br i1 %5388, label %5394, label %5390

5390:                                             ; preds = %5386
  %5391 = load i64, ptr %5389, align 8, !tbaa !132
  %5392 = add nsw i64 %5382, %5340
  %5393 = icmp slt i64 %5391, %5392
  br i1 %5393, label %5394, label %5396

5394:                                             ; preds = %5390, %5386
  %5395 = phi i64 [ 9223372036854775807, %5386 ], [ %5392, %5390 ]
  store i64 %5395, ptr %5389, align 8, !tbaa !132
  br label %5396

5396:                                             ; preds = %5394, %5381, %5390
  call void @llvm.lifetime.end.p0(i64 152, ptr nonnull %17) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #21
  ret i64 %5382
}

declare void @Perl_pop_scope() local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_scan_commit(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %6 = load i32, ptr %5, align 8, !tbaa !98
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !191
  br i1 %7, label %10, label %14

10:                                               ; preds = %4
  %11 = load ptr, ptr %9, align 8, !tbaa !63
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !72
  br label %23

14:                                               ; preds = %4
  %15 = tail call i64 @Perl_sv_len_utf8(ptr noundef %9) #21
  %16 = load i32, ptr %5, align 8, !tbaa !98
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 6
  %20 = load ptr, ptr %19, align 8, !tbaa !192
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %22 = tail call i64 @Perl_sv_len_utf8(ptr noundef %21) #21
  br label %31

23:                                               ; preds = %10, %14
  %24 = phi i64 [ %13, %10 ], [ %15, %14 ]
  %25 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 6
  %26 = load ptr, ptr %25, align 8, !tbaa !192
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  %28 = load ptr, ptr %27, align 8, !tbaa !63
  %29 = getelementptr inbounds %struct.xpv, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !72
  br label %31

31:                                               ; preds = %23, %18
  %32 = phi i64 [ %15, %18 ], [ %24, %23 ]
  %33 = phi i64 [ %22, %18 ], [ %30, %23 ]
  %34 = icmp ult i64 %32, %33
  br i1 %34, label %111, label %35

35:                                               ; preds = %31
  %36 = icmp ugt i64 %32, %33
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %39 = load i32, ptr %38, align 8, !tbaa !199
  %40 = and i32 %39, 3
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %35, %37
  %43 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 6
  %44 = load ptr, ptr %43, align 8, !tbaa !192
  %45 = load ptr, ptr %44, align 8, !tbaa !5
  %46 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !191
  %48 = icmp eq ptr %45, %47
  br i1 %48, label %60, label %49

49:                                               ; preds = %42
  tail call void @Perl_sv_setsv_flags(ptr noundef %45, ptr noundef %47, i32 noundef 1538) #21
  %50 = load ptr, ptr %43, align 8, !tbaa !192
  %51 = load ptr, ptr %50, align 8, !tbaa !5
  %52 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !62
  %54 = and i32 %53, 4194304
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = tail call i32 @Perl_mg_set(ptr noundef nonnull %51) #21
  %58 = load ptr, ptr %43, align 8, !tbaa !192
  %59 = load ptr, ptr %58, align 8, !tbaa !5
  br label %60

60:                                               ; preds = %56, %49, %42
  %61 = phi ptr [ %59, %56 ], [ %51, %49 ], [ %45, %42 ]
  %62 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 7
  %63 = load ptr, ptr %62, align 8, !tbaa !188
  %64 = icmp eq ptr %61, %63
  %65 = icmp eq i64 %32, 0
  %66 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 4
  %67 = select i1 %65, ptr %1, ptr %66
  %68 = load i64, ptr %67, align 8, !tbaa !71
  br i1 %64, label %69, label %81

69:                                               ; preds = %60
  %70 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 8
  store i64 %68, ptr %70, align 8, !tbaa !201
  %71 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %72 = load i32, ptr %71, align 8, !tbaa !199
  %73 = and i32 %72, 3
  %74 = icmp eq i32 %73, 0
  %75 = and i32 %72, -13
  %76 = shl nuw nsw i32 %73, 2
  %77 = or i32 %76, %72
  %78 = select i1 %74, i32 %75, i32 %77
  store i32 %78, ptr %71, align 8, !tbaa !199
  %79 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 9
  store ptr %2, ptr %79, align 8, !tbaa !209
  %80 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 10
  store i32 0, ptr %80, align 8, !tbaa !208
  br label %111

81:                                               ; preds = %60
  %82 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 12
  store i64 %68, ptr %82, align 8, !tbaa !200
  br i1 %65, label %86, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 5
  %85 = load i64, ptr %84, align 8, !tbaa !276
  br label %94

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 1
  %88 = load i64, ptr %87, align 8, !tbaa !249
  %89 = load i64, ptr %1, align 8, !tbaa !258
  %90 = sub nsw i64 9223372036854775807, %89
  %91 = icmp sgt i64 %88, %90
  %92 = add nsw i64 %89, %88
  %93 = select i1 %91, i64 9223372036854775807, i64 %92
  br label %94

94:                                               ; preds = %86, %83
  %95 = phi i64 [ %85, %83 ], [ %93, %86 ]
  %96 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 13
  %97 = icmp ne i32 %3, 0
  %98 = icmp slt i64 %95, 0
  %99 = select i1 %97, i1 true, i1 %98
  %100 = select i1 %99, i64 9223372036854775807, i64 %95
  store i64 %100, ptr %96, align 8
  %101 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %102 = load i32, ptr %101, align 8, !tbaa !199
  %103 = and i32 %102, 3
  %104 = icmp eq i32 %103, 0
  %105 = and i32 %102, -49
  %106 = shl nuw nsw i32 %103, 4
  %107 = or i32 %106, %102
  %108 = select i1 %104, i32 %105, i32 %107
  store i32 %108, ptr %101, align 8, !tbaa !199
  %109 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 14
  store ptr %2, ptr %109, align 8, !tbaa !203
  %110 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 15
  store i64 0, ptr %110, align 8, !tbaa !202
  br label %111

111:                                              ; preds = %31, %37, %94, %69
  %112 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 2
  %113 = load ptr, ptr %112, align 8, !tbaa !191
  %114 = load ptr, ptr %113, align 8, !tbaa !63
  %115 = getelementptr inbounds %struct.xpv, ptr %114, i64 0, i32 2
  store i64 0, ptr %115, align 8, !tbaa !72
  %116 = getelementptr inbounds %struct.sv, ptr %113, i64 0, i32 2
  %117 = load i32, ptr %116, align 4, !tbaa !62
  %118 = and i32 %117, 536870912
  %119 = icmp eq i32 %118, 0
  %120 = and i32 %117, 14680064
  %121 = icmp eq i32 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %128, label %123

123:                                              ; preds = %111
  %124 = tail call ptr @Perl_mg_find(ptr noundef nonnull %113, i32 noundef 119) #21
  %125 = icmp eq ptr %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.magic, ptr %124, i64 0, i32 5
  store i64 0, ptr %127, align 8, !tbaa !277
  br label %128

128:                                              ; preds = %123, %126, %111
  %129 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 3
  store i64 -1, ptr %129, align 8, !tbaa !274
  %130 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %131 = load i32, ptr %130, align 8, !tbaa !199
  %132 = and i32 %131, -4
  store i32 %132, ptr %130, align 8, !tbaa !199
  ret void
}

declare i64 @Perl_sv_len_utf8(ptr noundef) local_unnamed_addr #1

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc zeroext i1 @S_is_ssc_worth_it(i32 %0, ptr nocapture noundef readonly %1) unnamed_addr #7 {
  %3 = lshr i32 %0, 7
  %4 = and i32 %3, 7
  switch i32 %4, label %43 [
    i32 1, label %75
    i32 2, label %5
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %7 = load ptr, ptr %6, align 8, !tbaa !195
  %8 = load ptr, ptr %7, align 8, !tbaa !63
  %9 = getelementptr inbounds %struct.xpv, ptr %8, i64 0, i32 2
  %10 = load i64, ptr %9, align 8, !tbaa !72
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %5
  %13 = lshr i64 %10, 3
  %14 = getelementptr %struct.xpvinvlist, ptr %8, i64 0, i32 6
  %15 = load i8, ptr %14, align 1, !tbaa !57, !range !59, !noundef !60
  %16 = zext i8 %15 to i64
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = xor i64 %16, -1
  %20 = add nsw i64 %13, %19
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %18
  %24 = getelementptr i8, ptr %7, i64 16
  %25 = load ptr, ptr %24, align 8, !tbaa !9
  %26 = getelementptr inbounds i64, ptr %25, i64 %16
  %27 = getelementptr inbounds i64, ptr %26, i64 %20
  %28 = load i64, ptr %27, align 8, !tbaa !71
  %29 = freeze i64 %28
  %30 = add i64 %29, -1
  %31 = icmp ult i64 %30, 256
  br i1 %31, label %32, label %33

32:                                               ; preds = %5, %12, %23
  br label %33

33:                                               ; preds = %18, %32, %23
  %34 = phi i32 [ 56402, %18 ], [ 56402, %23 ], [ 127, %32 ]
  %35 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %36 = load ptr, ptr %35, align 8, !tbaa !195
  %37 = load ptr, ptr %36, align 8, !tbaa !63
  %38 = getelementptr inbounds %struct.xpvinvlist, ptr %37, i64 0, i32 5
  store i64 0, ptr %38, align 8, !tbaa !71
  %39 = getelementptr inbounds %struct.xpv, ptr %37, i64 0, i32 2
  %40 = getelementptr i8, ptr %36, i64 16
  %41 = load i64, ptr %39, align 8, !tbaa !72
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %119, label %44

43:                                               ; preds = %2
  br label %75

44:                                               ; preds = %33
  %45 = getelementptr %struct.xpvinvlist, ptr %37, i64 0, i32 6
  %46 = load i8, ptr %45, align 1, !tbaa !57, !range !59, !noundef !60
  %47 = zext i8 %46 to i64
  %48 = lshr i64 %41, 3
  %49 = sub nsw i64 %48, %47
  br label %50

50:                                               ; preds = %66, %44
  %51 = phi i64 [ 0, %44 ], [ %67, %66 ]
  %52 = phi i64 [ 0, %44 ], [ %72, %66 ]
  %53 = icmp uge i64 %51, %49
  br i1 %53, label %119, label %54

54:                                               ; preds = %50
  %55 = load ptr, ptr %40, align 8, !tbaa !9
  %56 = getelementptr inbounds i64, ptr %55, i64 %47
  %57 = add nuw i64 %51, 1
  store i64 %57, ptr %38, align 8, !tbaa !71
  %58 = getelementptr inbounds i64, ptr %56, i64 %51
  %59 = load i64, ptr %58, align 8, !tbaa !71
  %60 = icmp ult i64 %57, %49
  br i1 %60, label %61, label %66

61:                                               ; preds = %54
  %62 = add nuw i64 %51, 2
  store i64 %62, ptr %38, align 8, !tbaa !71
  %63 = getelementptr inbounds i64, ptr %56, i64 %57
  %64 = load i64, ptr %63, align 8, !tbaa !71
  %65 = add i64 %64, -1
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %57, %54 ], [ %62, %61 ]
  %68 = phi i64 [ -1, %54 ], [ %65, %61 ]
  %69 = and i64 %52, 4294967295
  %70 = add nuw nsw i64 %69, 1
  %71 = sub i64 %70, %59
  %72 = add i64 %71, %68
  %73 = trunc i64 %72 to i32
  %74 = icmp ult i32 %34, %73
  br i1 %74, label %119, label %50, !llvm.loop !287

75:                                               ; preds = %2, %43
  %76 = phi i32 [ 63, %43 ], [ 127, %2 ]
  %77 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %78 = load ptr, ptr %77, align 8, !tbaa !195
  %79 = load ptr, ptr %78, align 8, !tbaa !63
  %80 = getelementptr inbounds %struct.xpvinvlist, ptr %79, i64 0, i32 5
  store i64 0, ptr %80, align 8, !tbaa !71
  %81 = getelementptr inbounds %struct.xpv, ptr %79, i64 0, i32 2
  %82 = getelementptr i8, ptr %78, i64 16
  %83 = load i64, ptr %81, align 8, !tbaa !72
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %119, label %85

85:                                               ; preds = %75
  %86 = getelementptr %struct.xpvinvlist, ptr %79, i64 0, i32 6
  %87 = load i8, ptr %86, align 1, !tbaa !57, !range !59, !noundef !60
  %88 = zext i8 %87 to i64
  %89 = lshr i64 %83, 3
  %90 = sub nsw i64 %89, %88
  br label %91

91:                                               ; preds = %111, %85
  %92 = phi i64 [ 0, %85 ], [ %108, %111 ]
  %93 = phi i64 [ 0, %85 ], [ %116, %111 ]
  %94 = icmp uge i64 %92, %90
  br i1 %94, label %119, label %95

95:                                               ; preds = %91
  %96 = load ptr, ptr %82, align 8, !tbaa !9
  %97 = getelementptr inbounds i64, ptr %96, i64 %88
  %98 = add nuw i64 %92, 1
  store i64 %98, ptr %80, align 8, !tbaa !71
  %99 = getelementptr inbounds i64, ptr %97, i64 %92
  %100 = load i64, ptr %99, align 8, !tbaa !71
  %101 = icmp ult i64 %98, %90
  br i1 %101, label %102, label %107

102:                                              ; preds = %95
  %103 = add nuw i64 %92, 2
  store i64 %103, ptr %80, align 8, !tbaa !71
  %104 = getelementptr inbounds i64, ptr %97, i64 %98
  %105 = load i64, ptr %104, align 8, !tbaa !71
  %106 = add i64 %105, -1
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi i64 [ %98, %95 ], [ %103, %102 ]
  %109 = phi i64 [ -1, %95 ], [ %106, %102 ]
  %110 = icmp ugt i64 %100, 255
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = tail call i64 @llvm.umin.i64(i64 %109, i64 255)
  %113 = and i64 %93, 4294967295
  %114 = add nuw nsw i64 %113, 1
  %115 = sub nsw i64 %114, %100
  %116 = add nsw i64 %115, %112
  %117 = trunc i64 %116 to i32
  %118 = icmp ult i32 %76, %117
  br i1 %118, label %119, label %91, !llvm.loop !287

119:                                              ; preds = %66, %50, %111, %91, %33, %75
  %120 = phi ptr [ %38, %33 ], [ %80, %75 ], [ %80, %91 ], [ %80, %111 ], [ %38, %50 ], [ %38, %66 ]
  %121 = phi i1 [ true, %33 ], [ true, %75 ], [ %94, %91 ], [ %94, %111 ], [ %53, %50 ], [ %53, %66 ]
  store i64 -1, ptr %120, align 8, !tbaa !71
  br label %122

122:                                              ; preds = %107, %119
  %123 = phi i1 [ %121, %119 ], [ true, %107 ]
  ret i1 %123
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_add_data(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %4, align 8, !tbaa !156
  %6 = getelementptr inbounds %struct.regexp_internal, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !26
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = load i32, ptr %7, align 8, !tbaa !27
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %3 ]
  %13 = add i32 %12, %2
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = shl nuw nsw i64 %15, 3
  %17 = add nuw nsw i64 %16, 24
  %18 = tail call ptr @Perl_safesysrealloc(ptr noundef %7, i64 noundef %17) #21
  %19 = load ptr, ptr %4, align 8, !tbaa !156
  %20 = getelementptr inbounds %struct.regexp_internal, ptr %19, i64 0, i32 3
  store ptr %18, ptr %20, align 8, !tbaa !26
  %21 = icmp eq i32 %12, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.reg_data, ptr %18, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !29
  %25 = zext i32 %13 to i64
  %26 = tail call ptr @Perl_safesysrealloc(ptr noundef %24, i64 noundef %25) #21
  %27 = load ptr, ptr %4, align 8, !tbaa !156
  %28 = getelementptr inbounds %struct.regexp_internal, ptr %27, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !26
  %30 = getelementptr inbounds %struct.reg_data, ptr %29, i64 0, i32 1
  store ptr %26, ptr %30, align 8, !tbaa !29
  %31 = zext i32 %2 to i64
  br label %39

32:                                               ; preds = %11
  %33 = zext i32 %2 to i64
  %34 = tail call ptr @Perl_safesysmalloc(i64 noundef %33) #21
  %35 = load ptr, ptr %4, align 8, !tbaa !156
  %36 = getelementptr inbounds %struct.regexp_internal, ptr %35, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.reg_data, ptr %37, i64 0, i32 1
  store ptr %34, ptr %38, align 8, !tbaa !29
  br label %39

39:                                               ; preds = %32, %22
  %40 = phi i64 [ %33, %32 ], [ %31, %22 ]
  %41 = phi ptr [ %34, %32 ], [ %26, %22 ]
  %42 = phi ptr [ %37, %32 ], [ %29, %22 ]
  store i32 %13, ptr %42, align 8, !tbaa !27
  %43 = zext i32 %12 to i64
  %44 = getelementptr inbounds i8, ptr %41, i64 %43
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %44, ptr align 1 %1, i64 %40, i1 false)
  ret i32 %12
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_finalize(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) unnamed_addr #0 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  %4 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %5 = load ptr, ptr %4, align 8, !tbaa !195
  %6 = load ptr, ptr %5, align 8, !tbaa !63
  %7 = getelementptr inbounds %struct.xpv, ptr %6, i64 0, i32 2
  %8 = load i64, ptr %7, align 8, !tbaa !72
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.xpvinvlist, ptr %6, i64 0, i32 6
  %12 = load i8, ptr %11, align 1, !tbaa !57, !range !59, !noundef !60
  %13 = shl nuw nsw i8 %12, 3
  %14 = zext i8 %13 to i64
  %15 = sub i64 %8, %14
  %16 = and i64 %15, -8
  %17 = add i64 %16, 17
  br label %18

18:                                               ; preds = %10, %2
  %19 = phi i64 [ %17, %10 ], [ 17, %2 ]
  %20 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !62
  %23 = and i32 %22, 268435456
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = load ptr, ptr %20, align 8, !tbaa !63
  %27 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 3
  %28 = load i64, ptr %27, align 8, !tbaa !9
  %29 = icmp ult i64 %28, %19
  br i1 %29, label %30, label %33

30:                                               ; preds = %25, %18
  %31 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %20, i64 noundef %19) #21
  %32 = load ptr, ptr %20, align 8, !tbaa !63
  br label %33

33:                                               ; preds = %30, %25
  %34 = phi ptr [ %26, %25 ], [ %32, %30 ]
  %35 = getelementptr inbounds %struct.xpv, ptr %34, i64 0, i32 2
  store i64 0, ptr %35, align 8, !tbaa !72
  %36 = getelementptr inbounds %struct.xpvinvlist, ptr %34, i64 0, i32 5
  store i64 -1, ptr %36, align 8, !tbaa !71
  %37 = getelementptr inbounds %struct.xpvinvlist, ptr %34, i64 0, i32 4
  store i64 0, ptr %37, align 8, !tbaa !71
  %38 = load ptr, ptr %5, align 8, !tbaa !63
  %39 = getelementptr inbounds %struct.xpv, ptr %38, i64 0, i32 2
  %40 = load i64, ptr %39, align 8, !tbaa !72
  %41 = freeze i64 %40
  %42 = getelementptr inbounds %struct.xpvinvlist, ptr %38, i64 0, i32 6
  %43 = load i8, ptr %42, align 1, !tbaa !57, !range !59, !noundef !60
  %44 = getelementptr inbounds %struct.xpvinvlist, ptr %34, i64 0, i32 6
  store i8 %43, ptr %44, align 1, !tbaa !57
  %45 = icmp eq i64 %41, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %33
  %47 = lshr i64 %41, 3
  %48 = load i8, ptr %42, align 1, !tbaa !57, !range !59, !noundef !60
  %49 = zext i8 %48 to i64
  %50 = icmp eq i64 %47, %49
  %51 = zext i8 %43 to i64
  %52 = add nuw nsw i64 %47, %51
  %53 = sub nsw i64 %52, %49
  %54 = shl i64 %53, 3
  br i1 %50, label %55, label %56

55:                                               ; preds = %46, %33
  br label %56

56:                                               ; preds = %46, %55
  %57 = phi i64 [ 0, %55 ], [ %54, %46 ]
  store i64 %57, ptr %35, align 8, !tbaa !72
  %58 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !9
  %60 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !9
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %59, ptr align 1 %61, i64 %41, i1 false)
  store ptr %20, ptr %3, align 8, !tbaa !5
  call fastcc void @S_populate_ANYOF_from_invlist(ptr noundef nonnull %1, ptr noundef nonnull %3)
  %62 = load ptr, ptr %3, align 8, !tbaa !5
  tail call fastcc void @S_set_ANYOF_arg(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %62, ptr noundef null, ptr noundef null, ptr noundef null, i1 noundef zeroext false)
  store ptr null, ptr %4, align 8, !tbaa !195
  %63 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %64 = load i32, ptr %63, align 8, !tbaa !256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %56
  %67 = load i8, ptr %1, align 8, !tbaa !196
  %68 = or i8 %67, 8
  store i8 %68, ptr %1, align 8, !tbaa !196
  br label %69

69:                                               ; preds = %56, %66
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_named_buff_fetch(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr i8, ptr %0, i64 16
  %5 = load ptr, ptr %4, align 8, !tbaa !9
  %6 = and i32 %2, 512
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = tail call ptr @Perl_newSV_type(i32 noundef 11) #21
  %10 = freeze ptr %9
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi ptr [ %10, %8 ], [ null, %3 ]
  %13 = icmp eq ptr %5, null
  br i1 %13, label %100, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 6
  %16 = load ptr, ptr %15, align 8, !tbaa !66
  %17 = icmp eq ptr %16, null
  br i1 %17, label %100, label %18

18:                                               ; preds = %14
  %19 = tail call ptr @Perl_hv_common(ptr noundef nonnull %16, ptr noundef %1, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #21
  %20 = icmp eq ptr %19, null
  br i1 %20, label %100, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.he, ptr %19, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  %24 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !9
  %26 = load ptr, ptr %23, align 8, !tbaa !63
  %27 = getelementptr inbounds %struct.xpviv, ptr %26, i64 0, i32 4
  %28 = load i64, ptr %27, align 8, !tbaa !9
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %30, label %96

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 12
  %32 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 17
  %33 = icmp eq ptr %12, null
  br i1 %33, label %34, label %63

34:                                               ; preds = %30
  %35 = load i32, ptr %31, align 8, !tbaa !56
  br label %36

36:                                               ; preds = %60, %34
  %37 = phi i64 [ 0, %34 ], [ %61, %60 ]
  %38 = getelementptr inbounds i32, ptr %25, i64 %37
  %39 = load i32, ptr %38, align 4, !tbaa !150
  %40 = icmp slt i32 %35, %39
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = load ptr, ptr %32, align 8, !tbaa !50
  %43 = sext i32 %39 to i64
  %44 = getelementptr inbounds %struct.regexp_paren_pair, ptr %42, i64 %43
  %45 = load i64, ptr %44, align 8, !tbaa !51
  %46 = icmp eq i64 %45, -1
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.regexp_paren_pair, ptr %42, i64 %43, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !53
  %50 = icmp eq i64 %49, -1
  br i1 %50, label %60, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i32, ptr %25, i64 %37
  %53 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  %54 = load ptr, ptr %4, align 8, !tbaa !9
  %55 = getelementptr inbounds %struct.regexp, ptr %54, i64 0, i32 4
  %56 = load ptr, ptr %55, align 8, !tbaa !67
  %57 = getelementptr inbounds %struct.regexp_engine, ptr %56, i64 0, i32 5
  %58 = load ptr, ptr %57, align 8, !tbaa !288
  %59 = load i32, ptr %52, align 4, !tbaa !150
  tail call void %58(ptr noundef %0, i32 noundef %59, ptr noundef %53) #21
  br label %100

60:                                               ; preds = %47, %41, %36
  %61 = add nuw nsw i64 %37, 1
  %62 = icmp slt i64 %61, %28
  br i1 %62, label %36, label %96, !llvm.loop !289

63:                                               ; preds = %30, %89
  %64 = phi i64 [ %91, %89 ], [ 0, %30 ]
  %65 = load i32, ptr %31, align 8, !tbaa !56
  %66 = getelementptr inbounds i32, ptr %25, i64 %64
  %67 = load i32, ptr %66, align 4, !tbaa !150
  %68 = icmp slt i32 %65, %67
  br i1 %68, label %87, label %69

69:                                               ; preds = %63
  %70 = load ptr, ptr %32, align 8, !tbaa !50
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds %struct.regexp_paren_pair, ptr %70, i64 %71
  %73 = load i64, ptr %72, align 8, !tbaa !51
  %74 = icmp eq i64 %73, -1
  br i1 %74, label %87, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.regexp_paren_pair, ptr %70, i64 %71, i32 1
  %77 = load i64, ptr %76, align 8, !tbaa !53
  %78 = icmp eq i64 %77, -1
  br i1 %78, label %87, label %79

79:                                               ; preds = %75
  %80 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  %81 = load ptr, ptr %4, align 8, !tbaa !9
  %82 = getelementptr inbounds %struct.regexp, ptr %81, i64 0, i32 4
  %83 = load ptr, ptr %82, align 8, !tbaa !67
  %84 = getelementptr inbounds %struct.regexp_engine, ptr %83, i64 0, i32 5
  %85 = load ptr, ptr %84, align 8, !tbaa !288
  %86 = load i32, ptr %66, align 4, !tbaa !150
  tail call void %85(ptr noundef %0, i32 noundef %86, ptr noundef %80) #21
  br label %89

87:                                               ; preds = %75, %69, %63
  %88 = tail call ptr @Perl_newSVsv(ptr noundef nonnull @PL_sv_undef) #21
  br label %89

89:                                               ; preds = %79, %87
  %90 = phi ptr [ %88, %87 ], [ %80, %79 ]
  tail call void @Perl_av_push(ptr noundef nonnull %12, ptr noundef %90) #21
  %91 = add nuw nsw i64 %64, 1
  %92 = load ptr, ptr %23, align 8, !tbaa !63
  %93 = getelementptr inbounds %struct.xpviv, ptr %92, i64 0, i32 4
  %94 = load i64, ptr %93, align 8, !tbaa !9
  %95 = icmp slt i64 %91, %94
  br i1 %95, label %63, label %96, !llvm.loop !289

96:                                               ; preds = %89, %60, %21
  %97 = icmp eq ptr %12, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = tail call ptr @Perl_newRV_noinc(ptr noundef nonnull %12) #21
  br label %100

100:                                              ; preds = %51, %18, %96, %11, %14, %98
  %101 = phi ptr [ %99, %98 ], [ null, %14 ], [ null, %11 ], [ null, %96 ], [ null, %18 ], [ %53, %51 ]
  ret ptr %101
}

declare void @Perl_croak_no_modify() local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i1 @Perl_reg_named_buff_exists(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr i8, ptr %0, i64 16
  %5 = load ptr, ptr %4, align 8, !tbaa !9
  %6 = icmp eq ptr %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 6
  %9 = load ptr, ptr %8, align 8, !tbaa !66
  %10 = icmp eq ptr %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = and i32 %2, 512
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = tail call ptr @Perl_hv_common(ptr noundef nonnull %9, ptr noundef %1, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #21
  %16 = icmp ne ptr %15, null
  br label %32

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.regexp, ptr %5, i64 0, i32 4
  %19 = load ptr, ptr %18, align 8, !tbaa !67
  %20 = getelementptr inbounds %struct.regexp_engine, ptr %19, i64 0, i32 8
  %21 = load ptr, ptr %20, align 8, !tbaa !68
  %22 = or i32 %2, 1
  %23 = tail call ptr %21(ptr noundef nonnull %0, ptr noundef %1, ptr noundef null, i32 noundef %22) #21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 1
  %27 = load i32, ptr %26, align 8, !tbaa !22
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = add i32 %27, -1
  store i32 %30, ptr %26, align 8, !tbaa !22
  br label %32

31:                                               ; preds = %25
  tail call void @Perl_sv_free2(ptr noundef nonnull %23, i32 noundef %27) #21
  br label %32

32:                                               ; preds = %31, %29, %3, %7, %17, %14
  %33 = phi i1 [ %16, %14 ], [ false, %17 ], [ false, %7 ], [ false, %3 ], [ true, %29 ], [ true, %31 ]
  ret i1 %33
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_named_buff_all(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !9
  %5 = tail call ptr @Perl_newSV_type(i32 noundef 11) #21
  %6 = icmp eq ptr %4, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 6
  %9 = load ptr, ptr %8, align 8, !tbaa !66
  %10 = icmp eq ptr %9, null
  br i1 %10, label %66, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %9) #21
  %13 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %9, i32 noundef 0) #21
  %14 = icmp eq ptr %13, null
  br i1 %14, label %66, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 15
  %17 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 17
  %18 = and i32 %1, 512
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %20
  %21 = phi ptr [ %25, %20 ], [ %13, %15 ]
  %22 = getelementptr inbounds %struct.he, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !290
  %24 = tail call ptr @Perl_newSVhek(ptr noundef %23) #21
  tail call void @Perl_av_push(ptr noundef %5, ptr noundef %24) #21
  %25 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %9, i32 noundef 0) #21
  %26 = icmp eq ptr %25, null
  br i1 %26, label %66, label %20, !llvm.loop !292

27:                                               ; preds = %15, %63
  %28 = phi ptr [ %64, %63 ], [ %13, %15 ]
  %29 = getelementptr inbounds %struct.he, ptr %28, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !9
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  %33 = load ptr, ptr %30, align 8, !tbaa !63
  %34 = getelementptr inbounds %struct.xpviv, ptr %33, i64 0, i32 4
  %35 = load i64, ptr %34, align 8, !tbaa !9
  %36 = icmp sgt i64 %35, 0
  br i1 %36, label %37, label %63

37:                                               ; preds = %27
  %38 = load i32, ptr %16, align 8, !tbaa !293
  br label %39

39:                                               ; preds = %37, %54
  %40 = phi i64 [ 0, %37 ], [ %55, %54 ]
  %41 = getelementptr inbounds i32, ptr %32, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !150
  %43 = icmp slt i32 %38, %42
  br i1 %43, label %54, label %44

44:                                               ; preds = %39
  %45 = load ptr, ptr %17, align 8, !tbaa !50
  %46 = sext i32 %42 to i64
  %47 = getelementptr inbounds %struct.regexp_paren_pair, ptr %45, i64 %46
  %48 = load i64, ptr %47, align 8, !tbaa !51
  %49 = icmp eq i64 %48, -1
  br i1 %49, label %54, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.regexp_paren_pair, ptr %45, i64 %46, i32 1
  %52 = load i64, ptr %51, align 8, !tbaa !53
  %53 = icmp eq i64 %52, -1
  br i1 %53, label %54, label %57

54:                                               ; preds = %39, %44, %50
  %55 = add nuw nsw i64 %40, 1
  %56 = icmp eq i64 %55, %35
  br i1 %56, label %63, label %39, !llvm.loop !294

57:                                               ; preds = %50
  %58 = icmp eq i32 %42, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.he, ptr %28, i64 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !290
  %62 = tail call ptr @Perl_newSVhek(ptr noundef %61) #21
  tail call void @Perl_av_push(ptr noundef %5, ptr noundef %62) #21
  br label %63

63:                                               ; preds = %54, %27, %57, %59
  %64 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %9, i32 noundef 0) #21
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %27, !llvm.loop !292

66:                                               ; preds = %20, %63, %11, %7, %2
  %67 = tail call ptr @Perl_newRV_noinc(ptr noundef %5) #21
  ret ptr %67
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_named_buff_scalar(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !66
  %9 = icmp eq ptr %8, null
  br i1 %9, label %53, label %10

10:                                               ; preds = %6
  %11 = and i32 %1, 4608
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %10
  %14 = load ptr, ptr %8, align 8, !tbaa !295
  %15 = getelementptr inbounds %struct.xpvhv, ptr %14, i64 0, i32 2
  %16 = load i64, ptr %15, align 8, !tbaa !296
  %17 = tail call ptr @Perl_newSViv(i64 noundef %16) #21
  br label %53

18:                                               ; preds = %10
  %19 = and i32 %1, 256
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %52, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 4
  %23 = load ptr, ptr %22, align 8, !tbaa !67
  %24 = getelementptr inbounds %struct.regexp_engine, ptr %23, i64 0, i32 8
  %25 = load ptr, ptr %24, align 8, !tbaa !68
  %26 = or i32 %1, 2048
  %27 = tail call ptr %25(ptr noundef nonnull %0, ptr noundef null, ptr noundef null, i32 noundef %26) #21
  %28 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !9
  %30 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !62
  %32 = and i32 %31, 8388608
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %21
  %35 = tail call i32 @Perl_mg_size(ptr noundef nonnull %29) #21
  %36 = sext i32 %35 to i64
  br label %41

37:                                               ; preds = %21
  %38 = load ptr, ptr %29, align 8, !tbaa !122
  %39 = getelementptr inbounds %struct.xpvav, ptr %38, i64 0, i32 2
  %40 = load i64, ptr %39, align 8, !tbaa !124
  br label %41

41:                                               ; preds = %34, %37
  %42 = phi i64 [ %36, %34 ], [ %40, %37 ]
  %43 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 1
  %44 = load i32, ptr %43, align 8, !tbaa !22
  %45 = icmp ugt i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = add i32 %44, -1
  store i32 %47, ptr %43, align 8, !tbaa !22
  br label %49

48:                                               ; preds = %41
  tail call void @Perl_sv_free2(ptr noundef nonnull %27, i32 noundef %44) #21
  br label %49

49:                                               ; preds = %46, %48
  %50 = add nsw i64 %42, 1
  %51 = tail call ptr @Perl_newSViv(i64 noundef %50) #21
  br label %53

52:                                               ; preds = %18
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.190, i32 noundef %1) #21
  br label %53

53:                                               ; preds = %2, %6, %52, %49, %13
  %54 = phi ptr [ %17, %13 ], [ %51, %49 ], [ null, %52 ], [ @PL_sv_undef, %6 ], [ @PL_sv_undef, %2 ]
  ret ptr %54
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_named_buff_firstkey(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !66
  %9 = icmp eq ptr %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %8) #21
  %12 = load ptr, ptr %3, align 8, !tbaa !9
  %13 = getelementptr inbounds %struct.regexp, ptr %12, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !67
  %15 = getelementptr inbounds %struct.regexp_engine, ptr %14, i64 0, i32 9
  %16 = load ptr, ptr %15, align 8, !tbaa !70
  %17 = and i32 %1, -193
  %18 = or i32 %17, 128
  %19 = tail call ptr %16(ptr noundef nonnull %0, ptr noundef null, i32 noundef %18) #21
  br label %20

20:                                               ; preds = %2, %6, %10
  %21 = phi ptr [ %19, %10 ], [ null, %6 ], [ null, %2 ]
  ret ptr %21
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_named_buff_nextkey(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !66
  %9 = icmp eq ptr %8, null
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 15
  %12 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 17
  %13 = and i32 %1, 512
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %8, i32 noundef 0) #21
  %17 = icmp eq ptr %16, null
  br i1 %17, label %58, label %53

18:                                               ; preds = %10, %50
  %19 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %8, i32 noundef 0) #21
  %20 = icmp eq ptr %19, null
  br i1 %20, label %58, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.he, ptr %19, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  %24 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !9
  %26 = load ptr, ptr %23, align 8, !tbaa !63
  %27 = getelementptr inbounds %struct.xpviv, ptr %26, i64 0, i32 4
  %28 = load i64, ptr %27, align 8, !tbaa !9
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %30, label %50

30:                                               ; preds = %21
  %31 = load i32, ptr %11, align 8, !tbaa !293
  br label %32

32:                                               ; preds = %30, %47
  %33 = phi i64 [ 0, %30 ], [ %48, %47 ]
  %34 = getelementptr inbounds i32, ptr %25, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !150
  %36 = icmp slt i32 %31, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  %38 = load ptr, ptr %12, align 8, !tbaa !50
  %39 = sext i32 %35 to i64
  %40 = getelementptr inbounds %struct.regexp_paren_pair, ptr %38, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !51
  %42 = icmp eq i64 %41, -1
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.regexp_paren_pair, ptr %38, i64 %39, i32 1
  %45 = load i64, ptr %44, align 8, !tbaa !53
  %46 = icmp eq i64 %45, -1
  br i1 %46, label %47, label %50

47:                                               ; preds = %32, %37, %43
  %48 = add nuw nsw i64 %33, 1
  %49 = icmp eq i64 %48, %28
  br i1 %49, label %50, label %32, !llvm.loop !298

50:                                               ; preds = %47, %43, %21
  %51 = phi i64 [ 0, %21 ], [ %39, %43 ], [ 0, %47 ]
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %18, label %53, !llvm.loop !299

53:                                               ; preds = %50, %15
  %54 = phi ptr [ %16, %15 ], [ %19, %50 ]
  %55 = getelementptr inbounds %struct.he, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !290
  %57 = tail call ptr @Perl_newSVhek(ptr noundef %56) #21
  br label %58

58:                                               ; preds = %18, %15, %2, %6, %53
  %59 = phi ptr [ %57, %53 ], [ null, %6 ], [ null, %2 ], [ null, %15 ], [ null, %18 ]
  ret ptr %59
}

declare ptr @Perl_newSVsv(ptr noundef) local_unnamed_addr #1

declare void @Perl_av_push(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @Perl_newRV_noinc(ptr noundef) local_unnamed_addr #1

declare i32 @Perl_hv_iterinit(ptr noundef) local_unnamed_addr #1

declare ptr @Perl_hv_iternext_flags(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_newSVhek(ptr noundef) local_unnamed_addr #1

declare ptr @Perl_newSViv(i64 noundef) local_unnamed_addr #1

declare void @Perl_sv_setpvn(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1

declare zeroext i1 @Perl_is_utf8_string(ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @Perl_sv_magic(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @Perl_sv_untaint(ptr noundef) local_unnamed_addr #1

declare void @Perl_sv_setsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare zeroext i1 @Perl_ckwarn(i32 noundef) local_unnamed_addr #1

declare void @Perl_report_uninit(ptr noundef) local_unnamed_addr #1

declare zeroext i1 @Perl_is_utf8_string_loclen(ptr noundef, i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @Perl_sv_grow(ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i64 @Perl__invlist_search(ptr nocapture noundef readonly %0, i64 noundef %1) local_unnamed_addr #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !63
  %4 = getelementptr inbounds %struct.xpv, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !72
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %60, label %7

7:                                                ; preds = %2
  %8 = lshr i64 %5, 3
  %9 = getelementptr %struct.xpvinvlist, ptr %3, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !57, !range !59, !noundef !60
  %11 = zext i8 %10 to i64
  %12 = xor i64 %11, -1
  %13 = add nsw i64 %8, %12
  %14 = icmp eq i64 %8, %11
  br i1 %14, label %60, label %15

15:                                               ; preds = %7
  %16 = getelementptr i8, ptr %0, i64 16
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = getelementptr inbounds i64, ptr %17, i64 %11
  %19 = getelementptr i8, ptr %3, i64 32
  %20 = load i64, ptr %19, align 8, !tbaa !71
  %21 = getelementptr inbounds i64, ptr %18, i64 %20
  %22 = load i64, ptr %21, align 8, !tbaa !71
  %23 = icmp ugt i64 %22, %1
  br i1 %23, label %33, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds i64, ptr %18, i64 %13
  %26 = load i64, ptr %25, align 8, !tbaa !71
  %27 = icmp ugt i64 %26, %1
  br i1 %27, label %28, label %60

28:                                               ; preds = %24
  %29 = add nsw i64 %20, 1
  %30 = getelementptr inbounds i64, ptr %18, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !71
  %32 = icmp ugt i64 %31, %1
  br i1 %32, label %60, label %41

33:                                               ; preds = %15
  %34 = load i64, ptr %18, align 8, !tbaa !71
  %35 = icmp ugt i64 %34, %1
  br i1 %35, label %60, label %36

36:                                               ; preds = %33
  %37 = add nsw i64 %20, -1
  %38 = getelementptr inbounds i64, ptr %18, i64 %37
  %39 = load i64, ptr %38, align 8, !tbaa !71
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %41, label %57

41:                                               ; preds = %28, %36
  %42 = phi i64 [ %20, %36 ], [ %13, %28 ]
  %43 = phi i64 [ 0, %36 ], [ %29, %28 ]
  %44 = icmp slt i64 %43, %42
  br i1 %44, label %45, label %57

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %55, %45 ], [ %43, %41 ]
  %47 = phi i64 [ %54, %45 ], [ %42, %41 ]
  %48 = add nsw i64 %46, %47
  %49 = sdiv i64 %48, 2
  %50 = getelementptr inbounds i64, ptr %18, i64 %49
  %51 = load i64, ptr %50, align 8, !tbaa !71
  %52 = icmp ugt i64 %51, %1
  %53 = add nsw i64 %49, 1
  %54 = select i1 %52, i64 %49, i64 %47
  %55 = select i1 %52, i64 %46, i64 %53
  %56 = icmp slt i64 %55, %54
  br i1 %56, label %45, label %57, !llvm.loop !300

57:                                               ; preds = %45, %41, %36
  %58 = phi i64 [ %20, %36 ], [ %42, %41 ], [ %54, %45 ]
  %59 = add nsw i64 %58, -1
  store i64 %59, ptr %19, align 8, !tbaa !71
  br label %60

60:                                               ; preds = %2, %33, %28, %24, %7, %57
  %61 = phi i64 [ %59, %57 ], [ -1, %7 ], [ %13, %24 ], [ %20, %28 ], [ -1, %33 ], [ -1, %2 ]
  ret i64 %61
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @Perl__invlist_populate_swatch(ptr nocapture noundef readonly %0, i64 noundef %1, i64 noundef %2, ptr nocapture noundef %3) local_unnamed_addr #8 {
  %5 = load ptr, ptr %0, align 8, !tbaa !63
  %6 = getelementptr inbounds %struct.xpv, ptr %5, i64 0, i32 2
  %7 = load i64, ptr %6, align 8, !tbaa !72
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %151, label %9

9:                                                ; preds = %4
  %10 = lshr i64 %7, 3
  %11 = getelementptr %struct.xpvinvlist, ptr %5, i64 0, i32 6
  %12 = load i8, ptr %11, align 1, !tbaa !57, !range !59, !noundef !60
  %13 = zext i8 %12 to i64
  %14 = sub nsw i64 %10, %13
  %15 = icmp eq i64 %10, %13
  br i1 %15, label %151, label %16

16:                                               ; preds = %9
  %17 = getelementptr i8, ptr %0, i64 16
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = getelementptr inbounds i64, ptr %18, i64 %13
  %20 = xor i64 %13, -1
  %21 = add nsw i64 %10, %20
  %22 = getelementptr i8, ptr %5, i64 32
  %23 = load i64, ptr %22, align 8, !tbaa !71
  %24 = getelementptr inbounds i64, ptr %19, i64 %23
  %25 = load i64, ptr %24, align 8, !tbaa !71
  %26 = icmp ugt i64 %25, %1
  br i1 %26, label %36, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds i64, ptr %19, i64 %21
  %29 = load i64, ptr %28, align 8, !tbaa !71
  %30 = icmp ugt i64 %29, %1
  br i1 %30, label %31, label %63

31:                                               ; preds = %27
  %32 = add nsw i64 %23, 1
  %33 = getelementptr inbounds i64, ptr %19, i64 %32
  %34 = load i64, ptr %33, align 8, !tbaa !71
  %35 = icmp ugt i64 %34, %1
  br i1 %35, label %63, label %44

36:                                               ; preds = %16
  %37 = load i64, ptr %19, align 8, !tbaa !71
  %38 = icmp ugt i64 %37, %1
  br i1 %38, label %63, label %39

39:                                               ; preds = %36
  %40 = add nsw i64 %23, -1
  %41 = getelementptr inbounds i64, ptr %19, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !71
  %43 = icmp ugt i64 %42, %1
  br i1 %43, label %44, label %60

44:                                               ; preds = %39, %31
  %45 = phi i64 [ %23, %39 ], [ %21, %31 ]
  %46 = phi i64 [ 0, %39 ], [ %32, %31 ]
  %47 = icmp slt i64 %46, %45
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %48
  %49 = phi i64 [ %58, %48 ], [ %46, %44 ]
  %50 = phi i64 [ %57, %48 ], [ %45, %44 ]
  %51 = add nsw i64 %50, %49
  %52 = sdiv i64 %51, 2
  %53 = getelementptr inbounds i64, ptr %19, i64 %52
  %54 = load i64, ptr %53, align 8, !tbaa !71
  %55 = icmp ugt i64 %54, %1
  %56 = add nsw i64 %52, 1
  %57 = select i1 %55, i64 %52, i64 %50
  %58 = select i1 %55, i64 %49, i64 %56
  %59 = icmp slt i64 %58, %57
  br i1 %59, label %48, label %60, !llvm.loop !300

60:                                               ; preds = %48, %44, %39
  %61 = phi i64 [ %23, %39 ], [ %45, %44 ], [ %57, %48 ]
  %62 = add nsw i64 %61, -1
  store i64 %62, ptr %22, align 8, !tbaa !71
  br label %63

63:                                               ; preds = %27, %31, %36, %60
  %64 = phi i64 [ %62, %60 ], [ %21, %27 ], [ %23, %31 ], [ -1, %36 ]
  %65 = icmp ult i64 %1, %2
  br i1 %65, label %66, label %151

66:                                               ; preds = %63, %147
  %67 = phi i64 [ %149, %147 ], [ %1, %63 ]
  %68 = phi i64 [ %83, %147 ], [ %64, %63 ]
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %80, label %71

71:                                               ; preds = %66
  %72 = add nsw i64 %68, 1
  %73 = icmp slt i64 %72, %14
  br i1 %73, label %74, label %151

74:                                               ; preds = %71
  %75 = getelementptr inbounds i64, ptr %19, i64 %72
  %76 = load i64, ptr %75, align 8, !tbaa !71
  %77 = icmp ult i64 %76, %2
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = icmp eq i64 %2, -1
  br i1 %79, label %133, label %151

80:                                               ; preds = %66, %74
  %81 = phi i64 [ %72, %74 ], [ %68, %66 ]
  %82 = phi i64 [ %76, %74 ], [ %67, %66 ]
  %83 = add nsw i64 %81, 1
  %84 = icmp slt i64 %83, %14
  br i1 %84, label %85, label %89

85:                                               ; preds = %80
  %86 = getelementptr inbounds i64, ptr %19, i64 %83
  %87 = load i64, ptr %86, align 8, !tbaa !71
  %88 = icmp ult i64 %87, %2
  br i1 %88, label %90, label %89

89:                                               ; preds = %85, %80
  br label %90

90:                                               ; preds = %85, %89
  %91 = phi i64 [ %2, %89 ], [ %87, %85 ]
  %92 = icmp ult i64 %82, %91
  br i1 %92, label %93, label %132

93:                                               ; preds = %90
  %94 = sub i64 %91, %82
  %95 = add i64 %82, 1
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %93
  %99 = sub i64 %82, %1
  %100 = trunc i64 %99 to i8
  %101 = and i8 %100, 7
  %102 = shl nuw i8 1, %101
  %103 = lshr i64 %99, 3
  %104 = getelementptr inbounds i8, ptr %3, i64 %103
  %105 = load i8, ptr %104, align 1, !tbaa !9
  %106 = or i8 %105, %102
  store i8 %106, ptr %104, align 1, !tbaa !9
  %107 = add nuw i64 %82, 1
  br label %108

108:                                              ; preds = %98, %93
  %109 = phi i64 [ %82, %93 ], [ %107, %98 ]
  %110 = icmp eq i64 %91, %95
  br i1 %110, label %132, label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %130, %111 ], [ %109, %108 ]
  %113 = sub i64 %112, %1
  %114 = trunc i64 %113 to i8
  %115 = and i8 %114, 7
  %116 = shl nuw i8 1, %115
  %117 = lshr i64 %113, 3
  %118 = getelementptr inbounds i8, ptr %3, i64 %117
  %119 = load i8, ptr %118, align 1, !tbaa !9
  %120 = or i8 %119, %116
  store i8 %120, ptr %118, align 1, !tbaa !9
  %121 = add nuw i64 %112, 1
  %122 = sub i64 %121, %1
  %123 = trunc i64 %122 to i8
  %124 = and i8 %123, 7
  %125 = shl nuw i8 1, %124
  %126 = lshr i64 %122, 3
  %127 = getelementptr inbounds i8, ptr %3, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !9
  %129 = or i8 %128, %125
  store i8 %129, ptr %127, align 1, !tbaa !9
  %130 = add nuw i64 %112, 2
  %131 = icmp eq i64 %130, %91
  br i1 %131, label %132, label %111, !llvm.loop !301

132:                                              ; preds = %108, %111, %90
  br i1 %84, label %147, label %133

133:                                              ; preds = %132, %78
  %134 = icmp ne i64 %2, -1
  %135 = and i64 %14, 1
  %136 = icmp eq i64 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %151, label %138

138:                                              ; preds = %133
  %139 = xor i64 %1, -1
  %140 = trunc i64 %139 to i8
  %141 = and i8 %140, 7
  %142 = shl nuw i8 1, %141
  %143 = lshr i64 %139, 3
  %144 = getelementptr inbounds i8, ptr %3, i64 %143
  %145 = load i8, ptr %144, align 1, !tbaa !9
  %146 = or i8 %145, %142
  store i8 %146, ptr %144, align 1, !tbaa !9
  br label %151

147:                                              ; preds = %132
  %148 = getelementptr inbounds i64, ptr %19, i64 %83
  %149 = load i64, ptr %148, align 8, !tbaa !71
  %150 = icmp ult i64 %149, %2
  br i1 %150, label %66, label %151, !llvm.loop !302

151:                                              ; preds = %147, %71, %63, %138, %133, %78, %4, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2, ptr nocapture noundef %3) local_unnamed_addr #0 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %4
  %7 = load ptr, ptr %0, align 8, !tbaa !63
  %8 = getelementptr inbounds %struct.xpv, ptr %7, i64 0, i32 2
  %9 = load i64, ptr %8, align 8, !tbaa !72
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = lshr i64 %9, 3
  %13 = getelementptr %struct.xpvinvlist, ptr %7, i64 0, i32 6
  %14 = load i8, ptr %13, align 1, !tbaa !57, !range !59, !noundef !60
  %15 = zext i8 %14 to i64
  %16 = sub nsw i64 %12, %15
  %17 = icmp eq i64 %12, %15
  br i1 %17, label %18, label %112

18:                                               ; preds = %6, %11
  %19 = load ptr, ptr %3, align 8, !tbaa !5
  %20 = icmp eq ptr %19, %0
  br i1 %20, label %21, label %33

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !62
  %24 = and i32 %23, 524288
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !22
  %29 = icmp ugt i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = add i32 %28, -1
  store i32 %31, ptr %27, align 8, !tbaa !22
  br label %33

32:                                               ; preds = %26
  tail call void @Perl_sv_free2(ptr noundef nonnull %0, i32 noundef %28) #21
  br label %33

33:                                               ; preds = %4, %32, %30, %21, %18
  %34 = phi i1 [ true, %21 ], [ false, %18 ], [ false, %30 ], [ false, %32 ], [ false, %4 ]
  %35 = load ptr, ptr %3, align 8, !tbaa !5
  %36 = icmp eq ptr %35, %1
  br i1 %36, label %108, label %37

37:                                               ; preds = %33
  %38 = load ptr, ptr %1, align 8, !tbaa !63
  %39 = getelementptr inbounds %struct.xpv, ptr %38, i64 0, i32 2
  %40 = load i64, ptr %39, align 8, !tbaa !72
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.xpvinvlist, ptr %38, i64 0, i32 6
  %44 = load i8, ptr %43, align 1, !tbaa !57, !range !59, !noundef !60
  %45 = shl nuw nsw i8 %44, 3
  %46 = zext i8 %45 to i64
  %47 = sub i64 %40, %46
  %48 = and i64 %47, -8
  %49 = add i64 %48, 17
  br label %50

50:                                               ; preds = %42, %37
  %51 = phi i64 [ %49, %42 ], [ 17, %37 ]
  %52 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %53 = getelementptr inbounds %struct.sv, ptr %52, i64 0, i32 2
  %54 = load i32, ptr %53, align 4, !tbaa !62
  %55 = and i32 %54, 268435456
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %50
  %58 = load ptr, ptr %52, align 8, !tbaa !63
  %59 = getelementptr inbounds %struct.xpv, ptr %58, i64 0, i32 3
  %60 = load i64, ptr %59, align 8, !tbaa !9
  %61 = icmp ult i64 %60, %51
  br i1 %61, label %62, label %65

62:                                               ; preds = %57, %50
  %63 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %52, i64 noundef %51) #21
  %64 = load ptr, ptr %52, align 8, !tbaa !63
  br label %65

65:                                               ; preds = %62, %57
  %66 = phi ptr [ %58, %57 ], [ %64, %62 ]
  %67 = getelementptr inbounds %struct.xpv, ptr %66, i64 0, i32 2
  store i64 0, ptr %67, align 8, !tbaa !72
  %68 = getelementptr inbounds %struct.xpvinvlist, ptr %66, i64 0, i32 5
  store i64 -1, ptr %68, align 8, !tbaa !71
  %69 = getelementptr inbounds %struct.xpvinvlist, ptr %66, i64 0, i32 4
  store i64 0, ptr %69, align 8, !tbaa !71
  %70 = load ptr, ptr %1, align 8, !tbaa !63
  %71 = getelementptr inbounds %struct.xpv, ptr %70, i64 0, i32 2
  %72 = load i64, ptr %71, align 8, !tbaa !72
  %73 = freeze i64 %72
  %74 = getelementptr inbounds %struct.xpvinvlist, ptr %70, i64 0, i32 6
  %75 = load i8, ptr %74, align 1, !tbaa !57, !range !59, !noundef !60
  %76 = getelementptr inbounds %struct.xpvinvlist, ptr %66, i64 0, i32 6
  store i8 %75, ptr %76, align 1, !tbaa !57
  %77 = icmp eq i64 %73, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %65
  %79 = lshr i64 %73, 3
  %80 = load i8, ptr %74, align 1, !tbaa !57, !range !59, !noundef !60
  %81 = zext i8 %80 to i64
  %82 = icmp eq i64 %79, %81
  %83 = zext i8 %75 to i64
  %84 = add nuw nsw i64 %79, %83
  %85 = sub nsw i64 %84, %81
  %86 = shl i64 %85, 3
  br i1 %82, label %87, label %88

87:                                               ; preds = %78, %65
  br label %88

88:                                               ; preds = %78, %87
  %89 = phi i64 [ 0, %87 ], [ %86, %78 ]
  store i64 %89, ptr %67, align 8, !tbaa !72
  %90 = getelementptr inbounds %struct.sv, ptr %52, i64 0, i32 3
  %91 = load ptr, ptr %90, align 8, !tbaa !9
  %92 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %93 = load ptr, ptr %92, align 8, !tbaa !9
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %91, ptr align 1 %93, i64 %73, i1 false)
  store ptr %52, ptr %3, align 8, !tbaa !5
  br i1 %2, label %94, label %108

94:                                               ; preds = %88
  %95 = load ptr, ptr %52, align 8, !tbaa !63
  %96 = getelementptr inbounds %struct.xpv, ptr %95, i64 0, i32 2
  %97 = load i64, ptr %96, align 8, !tbaa !72
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = lshr i64 %97, 3
  %101 = getelementptr inbounds %struct.xpvinvlist, ptr %95, i64 0, i32 6
  %102 = load i8, ptr %101, align 1, !tbaa !57, !range !59, !noundef !60
  %103 = zext i8 %102 to i64
  %104 = icmp eq i64 %100, %103
  br i1 %104, label %105, label %106

105:                                              ; preds = %99, %94
  tail call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %52, i64 noundef 0, i64 noundef -1)
  br label %108

106:                                              ; preds = %99
  %107 = xor i8 %102, 1
  store i8 %107, ptr %101, align 1, !tbaa !57
  br label %108

108:                                              ; preds = %106, %105, %88, %33
  br i1 %34, label %109, label %435

109:                                              ; preds = %108
  %110 = load ptr, ptr %3, align 8, !tbaa !5
  %111 = tail call ptr @Perl_sv_2mortal(ptr noundef %110) #21
  br label %435

112:                                              ; preds = %11
  %113 = load ptr, ptr %1, align 8, !tbaa !63
  %114 = getelementptr inbounds %struct.xpv, ptr %113, i64 0, i32 2
  %115 = load i64, ptr %114, align 8, !tbaa !72
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %112
  %118 = lshr i64 %115, 3
  %119 = getelementptr %struct.xpvinvlist, ptr %113, i64 0, i32 6
  %120 = load i8, ptr %119, align 1, !tbaa !57, !range !59, !noundef !60
  %121 = zext i8 %120 to i64
  %122 = sub nsw i64 %118, %121
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %240

124:                                              ; preds = %112, %117
  %125 = load ptr, ptr %3, align 8, !tbaa !5
  %126 = icmp eq ptr %125, %1
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %129 = load i32, ptr %128, align 4, !tbaa !62
  %130 = and i32 %129, 524288
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %139

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %134 = load i32, ptr %133, align 8, !tbaa !22
  %135 = icmp ugt i32 %134, 1
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = add i32 %134, -1
  store i32 %137, ptr %133, align 8, !tbaa !22
  br label %139

138:                                              ; preds = %132
  tail call void @Perl_sv_free2(ptr noundef nonnull %1, i32 noundef %134) #21
  br label %139

139:                                              ; preds = %138, %136, %127, %124
  %140 = phi i1 [ true, %127 ], [ false, %124 ], [ false, %136 ], [ false, %138 ]
  %141 = load ptr, ptr %3, align 8, !tbaa !5
  %142 = icmp eq ptr %141, %0
  br i1 %2, label %143, label %178

143:                                              ; preds = %139
  br i1 %142, label %144, label %156

144:                                              ; preds = %143
  %145 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %146 = load i32, ptr %145, align 4, !tbaa !62
  %147 = and i32 %146, 524288
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %144
  %150 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %151 = load i32, ptr %150, align 8, !tbaa !22
  %152 = icmp ugt i32 %151, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = add i32 %151, -1
  store i32 %154, ptr %150, align 8, !tbaa !22
  br label %156

155:                                              ; preds = %149
  tail call void @Perl_sv_free2(ptr noundef nonnull %0, i32 noundef %151) #21
  br label %156

156:                                              ; preds = %155, %153, %144, %143
  %157 = phi i1 [ true, %144 ], [ %140, %143 ], [ false, %153 ], [ false, %155 ]
  %158 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %159 = getelementptr inbounds %struct.sv, ptr %158, i64 0, i32 2
  %160 = load i32, ptr %159, align 4, !tbaa !62
  %161 = and i32 %160, 268435456
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %168

163:                                              ; preds = %156
  %164 = load ptr, ptr %158, align 8, !tbaa !63
  %165 = getelementptr inbounds %struct.xpv, ptr %164, i64 0, i32 3
  %166 = load i64, ptr %165, align 8, !tbaa !9
  %167 = icmp ult i64 %166, 17
  br i1 %167, label %168, label %171

168:                                              ; preds = %156, %163
  %169 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %158, i64 noundef 17) #21
  %170 = load ptr, ptr %158, align 8, !tbaa !63
  br label %171

171:                                              ; preds = %163, %168
  %172 = phi ptr [ %164, %163 ], [ %170, %168 ]
  %173 = getelementptr inbounds %struct.xpv, ptr %172, i64 0, i32 2
  store i64 0, ptr %173, align 8, !tbaa !72
  %174 = getelementptr inbounds %struct.xpvinvlist, ptr %172, i64 0, i32 5
  store i64 -1, ptr %174, align 8, !tbaa !71
  %175 = getelementptr inbounds %struct.xpvinvlist, ptr %172, i64 0, i32 4
  store i64 0, ptr %175, align 8, !tbaa !71
  store ptr %158, ptr %3, align 8, !tbaa !5
  tail call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %158, i64 noundef 0, i64 noundef -1)
  br i1 %157, label %176, label %435

176:                                              ; preds = %171
  %177 = load ptr, ptr %3, align 8, !tbaa !5
  br label %237

178:                                              ; preds = %139
  br i1 %142, label %236, label %179

179:                                              ; preds = %178
  %180 = load ptr, ptr %0, align 8, !tbaa !63
  %181 = getelementptr inbounds %struct.xpv, ptr %180, i64 0, i32 2
  %182 = load i64, ptr %181, align 8, !tbaa !72
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %192, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.xpvinvlist, ptr %180, i64 0, i32 6
  %186 = load i8, ptr %185, align 1, !tbaa !57, !range !59, !noundef !60
  %187 = shl nuw nsw i8 %186, 3
  %188 = zext i8 %187 to i64
  %189 = sub i64 %182, %188
  %190 = and i64 %189, -8
  %191 = add i64 %190, 17
  br label %192

192:                                              ; preds = %184, %179
  %193 = phi i64 [ %191, %184 ], [ 17, %179 ]
  %194 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %195 = getelementptr inbounds %struct.sv, ptr %194, i64 0, i32 2
  %196 = load i32, ptr %195, align 4, !tbaa !62
  %197 = and i32 %196, 268435456
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %192
  %200 = load ptr, ptr %194, align 8, !tbaa !63
  %201 = getelementptr inbounds %struct.xpv, ptr %200, i64 0, i32 3
  %202 = load i64, ptr %201, align 8, !tbaa !9
  %203 = icmp ult i64 %202, %193
  br i1 %203, label %204, label %207

204:                                              ; preds = %199, %192
  %205 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %194, i64 noundef %193) #21
  %206 = load ptr, ptr %194, align 8, !tbaa !63
  br label %207

207:                                              ; preds = %204, %199
  %208 = phi ptr [ %200, %199 ], [ %206, %204 ]
  %209 = getelementptr inbounds %struct.xpv, ptr %208, i64 0, i32 2
  store i64 0, ptr %209, align 8, !tbaa !72
  %210 = getelementptr inbounds %struct.xpvinvlist, ptr %208, i64 0, i32 5
  store i64 -1, ptr %210, align 8, !tbaa !71
  %211 = getelementptr inbounds %struct.xpvinvlist, ptr %208, i64 0, i32 4
  store i64 0, ptr %211, align 8, !tbaa !71
  %212 = load ptr, ptr %0, align 8, !tbaa !63
  %213 = getelementptr inbounds %struct.xpv, ptr %212, i64 0, i32 2
  %214 = load i64, ptr %213, align 8, !tbaa !72
  %215 = freeze i64 %214
  %216 = getelementptr inbounds %struct.xpvinvlist, ptr %212, i64 0, i32 6
  %217 = load i8, ptr %216, align 1, !tbaa !57, !range !59, !noundef !60
  %218 = getelementptr inbounds %struct.xpvinvlist, ptr %208, i64 0, i32 6
  store i8 %217, ptr %218, align 1, !tbaa !57
  %219 = icmp eq i64 %215, 0
  br i1 %219, label %229, label %220

220:                                              ; preds = %207
  %221 = lshr i64 %215, 3
  %222 = load i8, ptr %216, align 1, !tbaa !57, !range !59, !noundef !60
  %223 = zext i8 %222 to i64
  %224 = icmp eq i64 %221, %223
  %225 = zext i8 %217 to i64
  %226 = add nuw nsw i64 %221, %225
  %227 = sub nsw i64 %226, %223
  %228 = shl i64 %227, 3
  br i1 %224, label %229, label %230

229:                                              ; preds = %220, %207
  br label %230

230:                                              ; preds = %220, %229
  %231 = phi i64 [ 0, %229 ], [ %228, %220 ]
  store i64 %231, ptr %209, align 8, !tbaa !72
  %232 = getelementptr inbounds %struct.sv, ptr %194, i64 0, i32 3
  %233 = load ptr, ptr %232, align 8, !tbaa !9
  %234 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %235 = load ptr, ptr %234, align 8, !tbaa !9
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %233, ptr align 1 %235, i64 %215, i1 false)
  store ptr %194, ptr %3, align 8, !tbaa !5
  br i1 %140, label %237, label %435

236:                                              ; preds = %178
  br i1 %140, label %237, label %435

237:                                              ; preds = %176, %230, %236
  %238 = phi ptr [ %177, %176 ], [ %194, %230 ], [ %0, %236 ]
  %239 = tail call ptr @Perl_sv_2mortal(ptr noundef %238) #21
  br label %435

240:                                              ; preds = %117
  %241 = getelementptr i8, ptr %0, i64 16
  %242 = load ptr, ptr %241, align 8, !tbaa !9
  %243 = getelementptr inbounds i64, ptr %242, i64 %15
  %244 = getelementptr i8, ptr %1, i64 16
  %245 = load ptr, ptr %244, align 8, !tbaa !9
  %246 = getelementptr inbounds i64, ptr %245, i64 %121
  br i1 %2, label %247, label %256

247:                                              ; preds = %240
  %248 = load i64, ptr %246, align 8, !tbaa !71
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %253

250:                                              ; preds = %247
  %251 = getelementptr inbounds i64, ptr %246, i64 1
  %252 = add nsw i64 %122, -1
  br label %256

253:                                              ; preds = %247
  %254 = getelementptr inbounds i64, ptr %246, i64 -1
  %255 = add nsw i64 %122, 1
  br label %256

256:                                              ; preds = %250, %253, %240
  %257 = phi i64 [ %252, %250 ], [ %255, %253 ], [ %122, %240 ]
  %258 = phi ptr [ %251, %250 ], [ %254, %253 ], [ %246, %240 ]
  %259 = add nsw i64 %257, %16
  %260 = icmp slt i64 %259, 0
  %261 = select i1 %260, i64 10, i64 %259
  %262 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %263 = getelementptr inbounds %struct.sv, ptr %262, i64 0, i32 2
  %264 = load i32, ptr %263, align 4, !tbaa !62
  %265 = and i32 %264, 268435456
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %270, label %267

267:                                              ; preds = %256
  %268 = shl i64 %261, 3
  %269 = add i64 %268, 9
  br label %277

270:                                              ; preds = %256
  %271 = load ptr, ptr %262, align 8, !tbaa !63
  %272 = getelementptr inbounds %struct.xpv, ptr %271, i64 0, i32 3
  %273 = load i64, ptr %272, align 8, !tbaa !9
  %274 = shl i64 %261, 3
  %275 = add i64 %274, 9
  %276 = icmp ult i64 %273, %275
  br i1 %276, label %277, label %281

277:                                              ; preds = %270, %267
  %278 = phi i64 [ %269, %267 ], [ %275, %270 ]
  %279 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %262, i64 noundef %278) #21
  %280 = load ptr, ptr %262, align 8, !tbaa !63
  br label %281

281:                                              ; preds = %270, %277
  %282 = phi ptr [ %271, %270 ], [ %280, %277 ]
  %283 = getelementptr inbounds %struct.xpv, ptr %282, i64 0, i32 2
  store i64 0, ptr %283, align 8, !tbaa !72
  %284 = getelementptr inbounds %struct.xpvinvlist, ptr %282, i64 0, i32 5
  store i64 -1, ptr %284, align 8, !tbaa !71
  %285 = getelementptr inbounds %struct.xpvinvlist, ptr %282, i64 0, i32 4
  store i64 0, ptr %285, align 8, !tbaa !71
  %286 = load i64, ptr %243, align 8, !tbaa !71
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %298, label %288

288:                                              ; preds = %281
  %289 = icmp eq i64 %257, 0
  br i1 %289, label %290, label %295

290:                                              ; preds = %288
  %291 = getelementptr i8, ptr %262, i64 16
  %292 = load ptr, ptr %291, align 8, !tbaa !9
  %293 = getelementptr inbounds %struct.xpvinvlist, ptr %282, i64 0, i32 6
  store i64 0, ptr %292, align 8, !tbaa !71
  store i8 1, ptr %293, align 1, !tbaa !57
  %294 = getelementptr inbounds i64, ptr %292, i64 1
  br label %365

295:                                              ; preds = %288
  %296 = load i64, ptr %258, align 8, !tbaa !71
  %297 = icmp ne i64 %296, 0
  br label %298

298:                                              ; preds = %295, %281
  %299 = phi i1 [ false, %281 ], [ %297, %295 ]
  %300 = getelementptr i8, ptr %262, i64 16
  %301 = load ptr, ptr %300, align 8, !tbaa !9
  %302 = getelementptr inbounds %struct.xpvinvlist, ptr %282, i64 0, i32 6
  store i64 0, ptr %301, align 8, !tbaa !71
  %303 = zext i1 %299 to i8
  store i8 %303, ptr %302, align 1, !tbaa !57
  %304 = zext i1 %299 to i64
  %305 = getelementptr inbounds i64, ptr %301, i64 %304
  %306 = icmp eq i64 %257, 0
  br i1 %306, label %365, label %307

307:                                              ; preds = %298, %347
  %308 = phi i64 [ %349, %347 ], [ 0, %298 ]
  %309 = phi i64 [ %348, %347 ], [ 0, %298 ]
  %310 = phi i64 [ %329, %347 ], [ 0, %298 ]
  %311 = phi i64 [ %328, %347 ], [ 0, %298 ]
  %312 = getelementptr inbounds i64, ptr %243, i64 %311
  %313 = load i64, ptr %312, align 8, !tbaa !71
  %314 = getelementptr inbounds i64, ptr %258, i64 %310
  %315 = load i64, ptr %314, align 8, !tbaa !71
  %316 = icmp ult i64 %313, %315
  br i1 %316, label %322, label %317

317:                                              ; preds = %307
  %318 = icmp eq i64 %313, %315
  %319 = and i64 %311, 1
  %320 = icmp eq i64 %319, 0
  %321 = and i1 %320, %318
  br i1 %321, label %322, label %324

322:                                              ; preds = %317, %307
  %323 = add i64 %311, 1
  br label %326

324:                                              ; preds = %317
  %325 = add nuw i64 %310, 1
  br label %326

326:                                              ; preds = %324, %322
  %327 = phi i64 [ %313, %322 ], [ %315, %324 ]
  %328 = phi i64 [ %323, %322 ], [ %311, %324 ]
  %329 = phi i64 [ %310, %322 ], [ %325, %324 ]
  %330 = phi i64 [ %311, %322 ], [ %310, %324 ]
  %331 = and i64 %330, 1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %341

333:                                              ; preds = %326
  %334 = icmp eq i64 %308, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %333
  %336 = add i64 %309, 1
  %337 = getelementptr inbounds i64, ptr %305, i64 %309
  store i64 %327, ptr %337, align 8, !tbaa !71
  br label %338

338:                                              ; preds = %335, %333
  %339 = phi i64 [ %336, %335 ], [ %309, %333 ]
  %340 = add i64 %308, 1
  br label %347

341:                                              ; preds = %326
  %342 = add i64 %308, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %347

344:                                              ; preds = %341
  %345 = add i64 %309, 1
  %346 = getelementptr inbounds i64, ptr %305, i64 %309
  store i64 %327, ptr %346, align 8, !tbaa !71
  br label %347

347:                                              ; preds = %341, %344, %338
  %348 = phi i64 [ %339, %338 ], [ %345, %344 ], [ %309, %341 ]
  %349 = phi i64 [ %340, %338 ], [ 0, %344 ], [ %342, %341 ]
  %350 = icmp ult i64 %328, %16
  %351 = icmp ult i64 %329, %257
  %352 = select i1 %350, i1 %351, i1 false
  br i1 %352, label %307, label %353, !llvm.loop !303

353:                                              ; preds = %347
  %354 = icmp eq i64 %328, %16
  %355 = and i64 %328, 1
  %356 = icmp eq i64 %355, 0
  %357 = or i1 %354, %356
  br i1 %357, label %358, label %363

358:                                              ; preds = %353
  %359 = icmp eq i64 %329, %257
  %360 = and i64 %329, 1
  %361 = icmp eq i64 %360, 0
  %362 = or i1 %359, %361
  br i1 %362, label %365, label %363

363:                                              ; preds = %358, %353
  %364 = add i64 %349, -1
  br label %365

365:                                              ; preds = %298, %290, %363, %358
  %366 = phi i64 [ %348, %363 ], [ %348, %358 ], [ 0, %290 ], [ 0, %298 ]
  %367 = phi i64 [ %329, %363 ], [ %329, %358 ], [ 0, %290 ], [ 0, %298 ]
  %368 = phi i64 [ %328, %363 ], [ %328, %358 ], [ 0, %290 ], [ 0, %298 ]
  %369 = phi i1 [ %299, %363 ], [ %299, %358 ], [ true, %290 ], [ %299, %298 ]
  %370 = phi ptr [ %300, %363 ], [ %300, %358 ], [ %291, %290 ], [ %300, %298 ]
  %371 = phi i64 [ %304, %363 ], [ %304, %358 ], [ 1, %290 ], [ %304, %298 ]
  %372 = phi ptr [ %305, %363 ], [ %305, %358 ], [ %294, %290 ], [ %305, %298 ]
  %373 = phi i64 [ %364, %363 ], [ %349, %358 ], [ 0, %290 ], [ 0, %298 ]
  %374 = icmp eq i64 %373, 0
  %375 = sub i64 %16, %368
  %376 = sub i64 %257, %367
  %377 = add i64 %376, %375
  %378 = select i1 %374, i64 %377, i64 0
  %379 = add i64 %378, %366
  %380 = load i64, ptr %283, align 8, !tbaa !72
  %381 = icmp eq i64 %380, 0
  %382 = lshr i64 %380, 3
  %383 = sext i1 %369 to i64
  %384 = add nsw i64 %382, %383
  %385 = select i1 %381, i64 0, i64 %384
  %386 = icmp eq i64 %379, %385
  br i1 %386, label %401, label %387

387:                                              ; preds = %365
  %388 = icmp eq i64 %379, 0
  %389 = add i64 %379, %371
  %390 = shl i64 %389, 3
  %391 = select i1 %388, i64 0, i64 %390
  store i64 %391, ptr %283, align 8, !tbaa !72
  %392 = or i64 %391, 1
  %393 = getelementptr inbounds %struct.xpv, ptr %282, i64 0, i32 3
  store i64 %392, ptr %393, align 8, !tbaa !9
  %394 = load ptr, ptr %370, align 8, !tbaa !9
  %395 = tail call ptr @Perl_safesysrealloc(ptr noundef %394, i64 noundef %392) #21
  store ptr %395, ptr %370, align 8, !tbaa !9
  %396 = load ptr, ptr %262, align 8, !tbaa !63
  %397 = getelementptr i8, ptr %396, i64 48
  %398 = load i8, ptr %397, align 1, !tbaa !57, !range !59, !noundef !60
  %399 = zext i8 %398 to i64
  %400 = getelementptr inbounds i64, ptr %395, i64 %399
  br label %401

401:                                              ; preds = %387, %365
  %402 = phi ptr [ %400, %387 ], [ %372, %365 ]
  br i1 %374, label %403, label %415

403:                                              ; preds = %401
  %404 = icmp sgt i64 %375, 0
  br i1 %404, label %405, label %409

405:                                              ; preds = %403
  %406 = getelementptr inbounds i64, ptr %402, i64 %366
  %407 = getelementptr inbounds i64, ptr %243, i64 %368
  %408 = shl i64 %375, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %406, ptr nonnull align 1 %407, i64 %408, i1 false)
  br label %415

409:                                              ; preds = %403
  %410 = icmp sgt i64 %376, 0
  br i1 %410, label %411, label %415

411:                                              ; preds = %409
  %412 = getelementptr inbounds i64, ptr %402, i64 %366
  %413 = getelementptr inbounds i64, ptr %258, i64 %367
  %414 = shl i64 %376, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %412, ptr align 1 %413, i64 %414, i1 false)
  br label %415

415:                                              ; preds = %405, %411, %409, %401
  %416 = load ptr, ptr %3, align 8, !tbaa !5
  %417 = icmp eq ptr %416, %0
  %418 = icmp eq ptr %416, %1
  %419 = or i1 %417, %418
  br i1 %419, label %420, label %434

420:                                              ; preds = %415
  %421 = getelementptr inbounds %struct.sv, ptr %416, i64 0, i32 2
  %422 = load i32, ptr %421, align 4, !tbaa !62
  %423 = and i32 %422, 524288
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %427, label %425

425:                                              ; preds = %420
  %426 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %262) #21
  br label %434

427:                                              ; preds = %420
  %428 = getelementptr inbounds %struct.sv, ptr %416, i64 0, i32 1
  %429 = load i32, ptr %428, align 8, !tbaa !22
  %430 = icmp ugt i32 %429, 1
  br i1 %430, label %431, label %433

431:                                              ; preds = %427
  %432 = add i32 %429, -1
  store i32 %432, ptr %428, align 8, !tbaa !22
  br label %434

433:                                              ; preds = %427
  tail call void @Perl_sv_free2(ptr noundef nonnull %416, i32 noundef %429) #21
  br label %434

434:                                              ; preds = %433, %431, %415, %425
  store ptr %262, ptr %3, align 8, !tbaa !5
  br label %435

435:                                              ; preds = %230, %171, %236, %237, %108, %109, %434
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_invlist_clone(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !63
  %3 = getelementptr inbounds %struct.xpv, ptr %2, i64 0, i32 2
  %4 = load i64, ptr %3, align 8, !tbaa !72
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.xpvinvlist, ptr %2, i64 0, i32 6
  %8 = load i8, ptr %7, align 1, !tbaa !57, !range !59, !noundef !60
  %9 = shl nuw nsw i8 %8, 3
  %10 = zext i8 %9 to i64
  %11 = sub i64 %4, %10
  %12 = and i64 %11, -8
  %13 = add i64 %12, 17
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi i64 [ %13, %6 ], [ 17, %1 ]
  %16 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !62
  %19 = and i32 %18, 268435456
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = load ptr, ptr %16, align 8, !tbaa !63
  %23 = getelementptr inbounds %struct.xpv, ptr %22, i64 0, i32 3
  %24 = load i64, ptr %23, align 8, !tbaa !9
  %25 = icmp ult i64 %24, %15
  br i1 %25, label %26, label %29

26:                                               ; preds = %14, %21
  %27 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %16, i64 noundef %15) #21
  %28 = load ptr, ptr %16, align 8, !tbaa !63
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi ptr [ %22, %21 ], [ %28, %26 ]
  %31 = getelementptr inbounds %struct.xpv, ptr %30, i64 0, i32 2
  store i64 0, ptr %31, align 8, !tbaa !72
  %32 = getelementptr inbounds %struct.xpvinvlist, ptr %30, i64 0, i32 5
  store i64 -1, ptr %32, align 8, !tbaa !71
  %33 = getelementptr inbounds %struct.xpvinvlist, ptr %30, i64 0, i32 4
  store i64 0, ptr %33, align 8, !tbaa !71
  %34 = load ptr, ptr %0, align 8, !tbaa !63
  %35 = getelementptr inbounds %struct.xpv, ptr %34, i64 0, i32 2
  %36 = load i64, ptr %35, align 8, !tbaa !72
  %37 = freeze i64 %36
  %38 = getelementptr inbounds %struct.xpvinvlist, ptr %34, i64 0, i32 6
  %39 = load i8, ptr %38, align 1, !tbaa !57, !range !59, !noundef !60
  %40 = getelementptr inbounds %struct.xpvinvlist, ptr %30, i64 0, i32 6
  store i8 %39, ptr %40, align 1, !tbaa !57
  %41 = icmp eq i64 %37, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %29
  %43 = lshr i64 %37, 3
  %44 = load i8, ptr %38, align 1, !tbaa !57, !range !59, !noundef !60
  %45 = zext i8 %44 to i64
  %46 = icmp eq i64 %43, %45
  %47 = zext i8 %39 to i64
  %48 = add nuw nsw i64 %43, %47
  %49 = sub nsw i64 %48, %45
  %50 = shl i64 %49, 3
  br i1 %46, label %51, label %52

51:                                               ; preds = %29, %42
  br label %52

52:                                               ; preds = %42, %51
  %53 = phi i64 [ 0, %51 ], [ %50, %42 ]
  store i64 %53, ptr %31, align 8, !tbaa !72
  %54 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !9
  %56 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !9
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %55, ptr align 1 %57, i64 %37, i1 false)
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl__invlist_invert(ptr noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !63
  %3 = getelementptr inbounds %struct.xpv, ptr %2, i64 0, i32 2
  %4 = load i64, ptr %3, align 8, !tbaa !72
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = lshr i64 %4, 3
  %8 = getelementptr inbounds %struct.xpvinvlist, ptr %2, i64 0, i32 6
  %9 = load i8, ptr %8, align 1, !tbaa !57, !range !59, !noundef !60
  %10 = zext i8 %9 to i64
  %11 = icmp eq i64 %7, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %1, %6
  tail call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %0, i64 noundef 0, i64 noundef -1)
  br label %15

13:                                               ; preds = %6
  %14 = xor i8 %9, 1
  store i8 %14, ptr %8, align 1, !tbaa !57
  br label %15

15:                                               ; preds = %13, %12
  ret void
}

declare ptr @Perl_sv_2mortal(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S__append_range_to_invlist(ptr noundef %0, i64 noundef %1, i64 noundef %2) unnamed_addr #0 {
  %4 = load ptr, ptr %0, align 8, !tbaa !63
  %5 = getelementptr inbounds %struct.xpv, ptr %4, i64 0, i32 3
  %6 = load i64, ptr %5, align 8, !tbaa !9
  %7 = icmp eq i64 %6, 0
  %8 = getelementptr inbounds %struct.xpv, ptr %4, i64 0, i32 2
  %9 = load i64, ptr %8, align 8, !tbaa !72
  %10 = select i1 %7, i64 %9, i64 %6
  %11 = lshr i64 %10, 3
  %12 = add nsw i64 %11, -1
  %13 = icmp eq i64 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %3
  %15 = lshr i64 %9, 3
  %16 = getelementptr %struct.xpvinvlist, ptr %4, i64 0, i32 6
  %17 = load i8, ptr %16, align 1, !tbaa !57, !range !59, !noundef !60
  %18 = zext i8 %17 to i64
  %19 = sub nsw i64 %15, %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %3, %14
  %22 = icmp ne i64 %1, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr i8, ptr %0, i64 16
  %25 = load ptr, ptr %24, align 8, !tbaa !9
  %26 = getelementptr inbounds %struct.xpvinvlist, ptr %4, i64 0, i32 6
  store i64 0, ptr %25, align 8, !tbaa !71
  store i8 %23, ptr %26, align 1, !tbaa !57
  %27 = zext i1 %22 to i64
  %28 = getelementptr inbounds i64, ptr %25, i64 %27
  br label %62

29:                                               ; preds = %14
  %30 = add nsw i64 %19, -1
  %31 = getelementptr i8, ptr %0, i64 16
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  %33 = getelementptr inbounds i64, ptr %32, i64 %18
  %34 = getelementptr inbounds i64, ptr %33, i64 %30
  %35 = load i64, ptr %34, align 8, !tbaa !71
  %36 = icmp ugt i64 %35, %1
  %37 = and i64 %30, 1
  %38 = icmp eq i64 %37, 0
  %39 = or i1 %38, %36
  br i1 %39, label %40, label %46

40:                                               ; preds = %29
  %41 = select i1 %38, i32 116, i32 102
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.226, i64 noundef %35, i64 noundef %1, i32 noundef %41) #21
  %42 = load ptr, ptr %0, align 8, !tbaa !63
  %43 = getelementptr inbounds %struct.xpvinvlist, ptr %42, i64 0, i32 6
  %44 = load i8, ptr %43, align 1, !tbaa !57, !range !59
  %45 = load i64, ptr %34, align 8, !tbaa !71
  br label %46

46:                                               ; preds = %29, %40
  %47 = phi i64 [ %35, %29 ], [ %45, %40 ]
  %48 = phi i8 [ %17, %29 ], [ %44, %40 ]
  %49 = phi ptr [ %4, %29 ], [ %42, %40 ]
  %50 = icmp eq i64 %47, %1
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = icmp eq i64 %2, -1
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = add nuw i64 %2, 1
  store i64 %54, ptr %34, align 8, !tbaa !71
  br label %121

55:                                               ; preds = %51
  %56 = icmp eq i64 %30, 0
  %57 = zext i8 %48 to i64
  %58 = add nsw i64 %30, %57
  %59 = shl i64 %58, 3
  %60 = select i1 %56, i64 0, i64 %59
  %61 = getelementptr inbounds %struct.xpv, ptr %49, i64 0, i32 2
  store i64 %60, ptr %61, align 8, !tbaa !72
  br label %121

62:                                               ; preds = %46, %21
  %63 = phi ptr [ %4, %21 ], [ %49, %46 ]
  %64 = phi i64 [ 0, %21 ], [ %19, %46 ]
  %65 = phi i8 [ %23, %21 ], [ %48, %46 ]
  %66 = phi ptr [ %28, %21 ], [ %33, %46 ]
  %67 = add nsw i64 %64, 2
  %68 = icmp ult i64 %12, %67
  br i1 %68, label %69, label %99

69:                                               ; preds = %62
  %70 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !62
  %72 = and i32 %71, 268435456
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = shl i64 %67, 3
  %76 = add i64 %75, 8
  br label %83

77:                                               ; preds = %69
  %78 = getelementptr inbounds %struct.xpv, ptr %63, i64 0, i32 3
  %79 = load i64, ptr %78, align 8, !tbaa !9
  %80 = shl i64 %67, 3
  %81 = add i64 %80, 8
  %82 = icmp ult i64 %79, %81
  br i1 %82, label %83, label %87

83:                                               ; preds = %77, %74
  %84 = phi i64 [ %76, %74 ], [ %81, %77 ]
  %85 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %84) #21
  %86 = load ptr, ptr %0, align 8, !tbaa !63
  br label %87

87:                                               ; preds = %77, %83
  %88 = phi ptr [ %63, %77 ], [ %86, %83 ]
  %89 = zext i8 %65 to i64
  %90 = add nuw nsw i64 %67, %89
  %91 = shl i64 %90, 3
  %92 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 2
  store i64 %91, ptr %92, align 8, !tbaa !72
  %93 = getelementptr i8, ptr %0, i64 16
  %94 = load ptr, ptr %93, align 8, !tbaa !9
  %95 = getelementptr i8, ptr %88, i64 48
  %96 = load i8, ptr %95, align 1, !tbaa !57, !range !59, !noundef !60
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds i64, ptr %94, i64 %97
  br label %104

99:                                               ; preds = %62
  %100 = zext i8 %65 to i64
  %101 = add nuw nsw i64 %67, %100
  %102 = shl i64 %101, 3
  %103 = getelementptr inbounds %struct.xpv, ptr %63, i64 0, i32 2
  store i64 %102, ptr %103, align 8, !tbaa !72
  br label %104

104:                                              ; preds = %99, %87
  %105 = phi ptr [ %88, %87 ], [ %63, %99 ]
  %106 = phi ptr [ %98, %87 ], [ %66, %99 ]
  %107 = getelementptr inbounds i64, ptr %106, i64 %64
  store i64 %1, ptr %107, align 8, !tbaa !71
  %108 = icmp eq i64 %2, -1
  br i1 %108, label %113, label %109

109:                                              ; preds = %104
  %110 = add nuw i64 %2, 1
  %111 = add nsw i64 %64, 1
  %112 = getelementptr inbounds i64, ptr %106, i64 %111
  store i64 %110, ptr %112, align 8, !tbaa !71
  br label %121

113:                                              ; preds = %104
  %114 = add nsw i64 %64, 1
  %115 = icmp eq i64 %114, 0
  %116 = zext i8 %65 to i64
  %117 = add nuw nsw i64 %114, %116
  %118 = shl i64 %117, 3
  %119 = select i1 %115, i64 0, i64 %118
  %120 = getelementptr inbounds %struct.xpv, ptr %105, i64 0, i32 2
  store i64 %119, ptr %120, align 8, !tbaa !72
  br label %121

121:                                              ; preds = %55, %53, %109, %113
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2, ptr nocapture noundef %3) local_unnamed_addr #0 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %4
  %7 = load ptr, ptr %0, align 8, !tbaa !63
  %8 = getelementptr inbounds %struct.xpv, ptr %7, i64 0, i32 2
  %9 = load i64, ptr %8, align 8, !tbaa !72
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %53, label %11

11:                                               ; preds = %6
  %12 = lshr i64 %9, 3
  %13 = getelementptr %struct.xpvinvlist, ptr %7, i64 0, i32 6
  %14 = load i8, ptr %13, align 1, !tbaa !57, !range !59, !noundef !60
  %15 = zext i8 %14 to i64
  %16 = sub nsw i64 %12, %15
  %17 = icmp eq i64 %12, %15
  br i1 %17, label %53, label %18

18:                                               ; preds = %11
  %19 = load ptr, ptr %1, align 8, !tbaa !63
  %20 = getelementptr inbounds %struct.xpv, ptr %19, i64 0, i32 2
  %21 = load i64, ptr %20, align 8, !tbaa !72
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = lshr i64 %21, 3
  %25 = getelementptr %struct.xpvinvlist, ptr %19, i64 0, i32 6
  %26 = load i8, ptr %25, align 1, !tbaa !57, !range !59, !noundef !60
  %27 = zext i8 %26 to i64
  %28 = sub nsw i64 %24, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %104

30:                                               ; preds = %18, %23
  br i1 %2, label %31, label %53

31:                                               ; preds = %30
  %32 = load ptr, ptr %3, align 8, !tbaa !5
  %33 = icmp eq ptr %32, %0
  br i1 %33, label %337, label %34

34:                                               ; preds = %31
  %35 = icmp eq ptr %32, %1
  br i1 %35, label %36, label %289

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !62
  %39 = and i32 %38, 524288
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !22
  %44 = icmp ugt i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = add i32 %43, -1
  store i32 %46, ptr %42, align 8, !tbaa !22
  br label %48

47:                                               ; preds = %41
  tail call void @Perl_sv_free2(ptr noundef nonnull %1, i32 noundef %43) #21
  br label %48

48:                                               ; preds = %45, %47
  %49 = tail call fastcc ptr @S_invlist_clone(ptr noundef nonnull %0)
  store ptr %49, ptr %3, align 8, !tbaa !5
  br label %337

50:                                               ; preds = %36
  %51 = tail call fastcc ptr @S_invlist_clone(ptr noundef nonnull %0)
  store ptr %51, ptr %3, align 8, !tbaa !5
  %52 = tail call ptr @Perl_sv_2mortal(ptr noundef %51) #21
  br label %337

53:                                               ; preds = %6, %4, %11, %30
  %54 = load ptr, ptr %3, align 8, !tbaa !5
  %55 = icmp eq ptr %54, %0
  br i1 %55, label %56, label %68

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !62
  %59 = and i32 %58, 524288
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %82

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %63 = load i32, ptr %62, align 8, !tbaa !22
  %64 = icmp ugt i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = add i32 %63, -1
  store i32 %66, ptr %62, align 8, !tbaa !22
  br label %82

67:                                               ; preds = %61
  tail call void @Perl_sv_free2(ptr noundef nonnull %0, i32 noundef %63) #21
  br label %82

68:                                               ; preds = %53
  %69 = icmp eq ptr %54, %1
  br i1 %69, label %70, label %82

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %72 = load i32, ptr %71, align 4, !tbaa !62
  %73 = and i32 %72, 524288
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %77 = load i32, ptr %76, align 8, !tbaa !22
  %78 = icmp ugt i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = add i32 %77, -1
  store i32 %80, ptr %76, align 8, !tbaa !22
  br label %82

81:                                               ; preds = %75
  tail call void @Perl_sv_free2(ptr noundef nonnull %1, i32 noundef %77) #21
  br label %82

82:                                               ; preds = %81, %79, %67, %65, %68, %70, %56
  %83 = phi i1 [ true, %56 ], [ true, %70 ], [ false, %68 ], [ false, %65 ], [ false, %67 ], [ false, %79 ], [ false, %81 ]
  %84 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %85 = getelementptr inbounds %struct.sv, ptr %84, i64 0, i32 2
  %86 = load i32, ptr %85, align 4, !tbaa !62
  %87 = and i32 %86, 268435456
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %82
  %90 = load ptr, ptr %84, align 8, !tbaa !63
  %91 = getelementptr inbounds %struct.xpv, ptr %90, i64 0, i32 3
  %92 = load i64, ptr %91, align 8, !tbaa !9
  %93 = icmp ult i64 %92, 9
  br i1 %93, label %94, label %97

94:                                               ; preds = %82, %89
  %95 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %84, i64 noundef 9) #21
  %96 = load ptr, ptr %84, align 8, !tbaa !63
  br label %97

97:                                               ; preds = %89, %94
  %98 = phi ptr [ %90, %89 ], [ %96, %94 ]
  %99 = getelementptr inbounds %struct.xpv, ptr %98, i64 0, i32 2
  store i64 0, ptr %99, align 8, !tbaa !72
  %100 = getelementptr inbounds %struct.xpvinvlist, ptr %98, i64 0, i32 5
  store i64 -1, ptr %100, align 8, !tbaa !71
  %101 = getelementptr inbounds %struct.xpvinvlist, ptr %98, i64 0, i32 4
  store i64 0, ptr %101, align 8, !tbaa !71
  store ptr %84, ptr %3, align 8, !tbaa !5
  br i1 %83, label %102, label %337

102:                                              ; preds = %97
  %103 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %84) #21
  br label %337

104:                                              ; preds = %23
  %105 = getelementptr i8, ptr %0, i64 16
  %106 = load ptr, ptr %105, align 8, !tbaa !9
  %107 = getelementptr inbounds i64, ptr %106, i64 %15
  %108 = getelementptr i8, ptr %1, i64 16
  %109 = load ptr, ptr %108, align 8, !tbaa !9
  %110 = getelementptr inbounds i64, ptr %109, i64 %27
  br i1 %2, label %111, label %120

111:                                              ; preds = %104
  %112 = load i64, ptr %110, align 8, !tbaa !71
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %111
  %115 = getelementptr inbounds i64, ptr %110, i64 1
  %116 = add nsw i64 %28, -1
  br label %120

117:                                              ; preds = %111
  %118 = getelementptr inbounds i64, ptr %110, i64 -1
  %119 = add nsw i64 %28, 1
  br label %120

120:                                              ; preds = %114, %117, %104
  %121 = phi i64 [ %116, %114 ], [ %119, %117 ], [ %28, %104 ]
  %122 = phi ptr [ %115, %114 ], [ %118, %117 ], [ %110, %104 ]
  %123 = add nsw i64 %121, %16
  %124 = icmp slt i64 %123, 0
  %125 = select i1 %124, i64 10, i64 %123
  %126 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %127 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 2
  %128 = load i32, ptr %127, align 4, !tbaa !62
  %129 = and i32 %128, 268435456
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %120
  %132 = shl i64 %125, 3
  %133 = add i64 %132, 9
  br label %141

134:                                              ; preds = %120
  %135 = load ptr, ptr %126, align 8, !tbaa !63
  %136 = getelementptr inbounds %struct.xpv, ptr %135, i64 0, i32 3
  %137 = load i64, ptr %136, align 8, !tbaa !9
  %138 = shl i64 %125, 3
  %139 = add i64 %138, 9
  %140 = icmp ult i64 %137, %139
  br i1 %140, label %141, label %145

141:                                              ; preds = %134, %131
  %142 = phi i64 [ %133, %131 ], [ %139, %134 ]
  %143 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %126, i64 noundef %142) #21
  %144 = load ptr, ptr %126, align 8, !tbaa !63
  br label %145

145:                                              ; preds = %134, %141
  %146 = phi ptr [ %135, %134 ], [ %144, %141 ]
  %147 = getelementptr inbounds %struct.xpv, ptr %146, i64 0, i32 2
  store i64 0, ptr %147, align 8, !tbaa !72
  %148 = getelementptr inbounds %struct.xpvinvlist, ptr %146, i64 0, i32 5
  store i64 -1, ptr %148, align 8, !tbaa !71
  %149 = getelementptr inbounds %struct.xpvinvlist, ptr %146, i64 0, i32 4
  store i64 0, ptr %149, align 8, !tbaa !71
  %150 = load i64, ptr %107, align 8, !tbaa !71
  %151 = icmp eq i64 %150, 0
  %152 = icmp ne i64 %121, 0
  %153 = and i1 %152, %151
  br i1 %153, label %154, label %157

154:                                              ; preds = %145
  %155 = load i64, ptr %122, align 8, !tbaa !71
  %156 = icmp ne i64 %155, 0
  br label %157

157:                                              ; preds = %154, %145
  %158 = phi i1 [ true, %145 ], [ %156, %154 ]
  %159 = getelementptr i8, ptr %126, i64 16
  %160 = load ptr, ptr %159, align 8, !tbaa !9
  %161 = getelementptr inbounds %struct.xpvinvlist, ptr %146, i64 0, i32 6
  store i64 0, ptr %160, align 8, !tbaa !71
  %162 = zext i1 %158 to i8
  store i8 %162, ptr %161, align 1, !tbaa !57
  %163 = zext i1 %158 to i64
  %164 = getelementptr inbounds i64, ptr %160, i64 %163
  br i1 %152, label %165, label %223

165:                                              ; preds = %157, %205
  %166 = phi i64 [ %207, %205 ], [ 0, %157 ]
  %167 = phi i64 [ %206, %205 ], [ 0, %157 ]
  %168 = phi i64 [ %187, %205 ], [ 0, %157 ]
  %169 = phi i64 [ %186, %205 ], [ 0, %157 ]
  %170 = getelementptr inbounds i64, ptr %107, i64 %169
  %171 = load i64, ptr %170, align 8, !tbaa !71
  %172 = getelementptr inbounds i64, ptr %122, i64 %168
  %173 = load i64, ptr %172, align 8, !tbaa !71
  %174 = icmp ult i64 %171, %173
  br i1 %174, label %180, label %175

175:                                              ; preds = %165
  %176 = icmp ne i64 %171, %173
  %177 = and i64 %169, 1
  %178 = icmp eq i64 %177, 0
  %179 = or i1 %178, %176
  br i1 %179, label %182, label %180

180:                                              ; preds = %175, %165
  %181 = add nuw i64 %169, 1
  br label %184

182:                                              ; preds = %175
  %183 = add nuw i64 %168, 1
  br label %184

184:                                              ; preds = %182, %180
  %185 = phi i64 [ %171, %180 ], [ %173, %182 ]
  %186 = phi i64 [ %181, %180 ], [ %169, %182 ]
  %187 = phi i64 [ %168, %180 ], [ %183, %182 ]
  %188 = phi i64 [ %169, %180 ], [ %168, %182 ]
  %189 = and i64 %188, 1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %197

191:                                              ; preds = %184
  %192 = add i64 %166, 1
  %193 = icmp eq i64 %192, 2
  br i1 %193, label %194, label %205

194:                                              ; preds = %191
  %195 = add i64 %167, 1
  %196 = getelementptr inbounds i64, ptr %164, i64 %167
  store i64 %185, ptr %196, align 8, !tbaa !71
  br label %205

197:                                              ; preds = %184
  %198 = icmp eq i64 %166, 2
  br i1 %198, label %199, label %202

199:                                              ; preds = %197
  %200 = add i64 %167, 1
  %201 = getelementptr inbounds i64, ptr %164, i64 %167
  store i64 %185, ptr %201, align 8, !tbaa !71
  br label %202

202:                                              ; preds = %199, %197
  %203 = phi i64 [ %200, %199 ], [ %167, %197 ]
  %204 = add i64 %166, -1
  br label %205

205:                                              ; preds = %191, %194, %202
  %206 = phi i64 [ %195, %194 ], [ %167, %191 ], [ %203, %202 ]
  %207 = phi i64 [ 2, %194 ], [ %192, %191 ], [ %204, %202 ]
  %208 = icmp ult i64 %186, %16
  %209 = icmp ult i64 %187, %121
  %210 = select i1 %208, i1 %209, i1 false
  br i1 %210, label %165, label %211, !llvm.loop !304

211:                                              ; preds = %205
  %212 = icmp ne i64 %186, %16
  %213 = and i64 %186, 1
  %214 = icmp eq i64 %213, 0
  %215 = or i1 %212, %214
  br i1 %215, label %216, label %221

216:                                              ; preds = %211
  %217 = icmp ne i64 %187, %121
  %218 = and i64 %187, 1
  %219 = icmp eq i64 %218, 0
  %220 = or i1 %217, %219
  br i1 %220, label %223, label %221

221:                                              ; preds = %216, %211
  %222 = add i64 %207, 1
  br label %223

223:                                              ; preds = %157, %221, %216
  %224 = phi i64 [ %206, %221 ], [ %206, %216 ], [ 0, %157 ]
  %225 = phi i64 [ %187, %221 ], [ %187, %216 ], [ 0, %157 ]
  %226 = phi i64 [ %186, %221 ], [ %186, %216 ], [ 0, %157 ]
  %227 = phi i64 [ %222, %221 ], [ %207, %216 ], [ 0, %157 ]
  %228 = icmp ugt i64 %227, 1
  %229 = sub i64 %16, %226
  %230 = sub i64 %121, %225
  %231 = add i64 %230, %229
  %232 = select i1 %228, i64 %231, i64 0
  %233 = add i64 %232, %224
  %234 = load i64, ptr %147, align 8, !tbaa !72
  %235 = icmp eq i64 %234, 0
  %236 = lshr i64 %234, 3
  %237 = sext i1 %158 to i64
  %238 = add nsw i64 %236, %237
  %239 = select i1 %235, i64 0, i64 %238
  %240 = icmp eq i64 %233, %239
  br i1 %240, label %255, label %241

241:                                              ; preds = %223
  %242 = icmp eq i64 %233, 0
  %243 = add i64 %233, %163
  %244 = shl i64 %243, 3
  %245 = select i1 %242, i64 0, i64 %244
  store i64 %245, ptr %147, align 8, !tbaa !72
  %246 = or i64 %245, 1
  %247 = getelementptr inbounds %struct.xpv, ptr %146, i64 0, i32 3
  store i64 %246, ptr %247, align 8, !tbaa !9
  %248 = load ptr, ptr %159, align 8, !tbaa !9
  %249 = tail call ptr @Perl_safesysrealloc(ptr noundef %248, i64 noundef %246) #21
  store ptr %249, ptr %159, align 8, !tbaa !9
  %250 = load ptr, ptr %126, align 8, !tbaa !63
  %251 = getelementptr i8, ptr %250, i64 48
  %252 = load i8, ptr %251, align 1, !tbaa !57, !range !59, !noundef !60
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds i64, ptr %249, i64 %253
  br label %255

255:                                              ; preds = %241, %223
  %256 = phi ptr [ %254, %241 ], [ %164, %223 ]
  br i1 %228, label %257, label %269

257:                                              ; preds = %255
  %258 = icmp sgt i64 %229, 0
  br i1 %258, label %259, label %263

259:                                              ; preds = %257
  %260 = getelementptr inbounds i64, ptr %256, i64 %224
  %261 = getelementptr inbounds i64, ptr %107, i64 %226
  %262 = shl i64 %229, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %260, ptr nonnull align 1 %261, i64 %262, i1 false)
  br label %269

263:                                              ; preds = %257
  %264 = icmp sgt i64 %230, 0
  br i1 %264, label %265, label %269

265:                                              ; preds = %263
  %266 = getelementptr inbounds i64, ptr %256, i64 %224
  %267 = getelementptr inbounds i64, ptr %122, i64 %225
  %268 = shl i64 %230, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %266, ptr align 1 %267, i64 %268, i1 false)
  br label %269

269:                                              ; preds = %259, %265, %263, %255
  %270 = load ptr, ptr %3, align 8, !tbaa !5
  %271 = icmp eq ptr %270, %0
  %272 = icmp eq ptr %270, %1
  %273 = or i1 %271, %272
  br i1 %273, label %274, label %288

274:                                              ; preds = %269
  %275 = getelementptr inbounds %struct.sv, ptr %270, i64 0, i32 2
  %276 = load i32, ptr %275, align 4, !tbaa !62
  %277 = and i32 %276, 524288
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %281, label %279

279:                                              ; preds = %274
  %280 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %126) #21
  br label %288

281:                                              ; preds = %274
  %282 = getelementptr inbounds %struct.sv, ptr %270, i64 0, i32 1
  %283 = load i32, ptr %282, align 8, !tbaa !22
  %284 = icmp ugt i32 %283, 1
  br i1 %284, label %285, label %287

285:                                              ; preds = %281
  %286 = add i32 %283, -1
  store i32 %286, ptr %282, align 8, !tbaa !22
  br label %288

287:                                              ; preds = %281
  tail call void @Perl_sv_free2(ptr noundef nonnull %270, i32 noundef %283) #21
  br label %288

288:                                              ; preds = %287, %285, %269, %279
  store ptr %126, ptr %3, align 8, !tbaa !5
  br label %337

289:                                              ; preds = %34
  %290 = shl nuw nsw i8 %14, 3
  %291 = zext i8 %290 to i64
  %292 = sub i64 %9, %291
  %293 = and i64 %292, -8
  %294 = add i64 %293, 17
  %295 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %296 = getelementptr inbounds %struct.sv, ptr %295, i64 0, i32 2
  %297 = load i32, ptr %296, align 4, !tbaa !62
  %298 = and i32 %297, 268435456
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %305

300:                                              ; preds = %289
  %301 = load ptr, ptr %295, align 8, !tbaa !63
  %302 = getelementptr inbounds %struct.xpv, ptr %301, i64 0, i32 3
  %303 = load i64, ptr %302, align 8, !tbaa !9
  %304 = icmp ult i64 %303, %294
  br i1 %304, label %305, label %308

305:                                              ; preds = %300, %289
  %306 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %295, i64 noundef %294) #21
  %307 = load ptr, ptr %295, align 8, !tbaa !63
  br label %308

308:                                              ; preds = %305, %300
  %309 = phi ptr [ %301, %300 ], [ %307, %305 ]
  %310 = getelementptr inbounds %struct.xpv, ptr %309, i64 0, i32 2
  store i64 0, ptr %310, align 8, !tbaa !72
  %311 = getelementptr inbounds %struct.xpvinvlist, ptr %309, i64 0, i32 5
  store i64 -1, ptr %311, align 8, !tbaa !71
  %312 = getelementptr inbounds %struct.xpvinvlist, ptr %309, i64 0, i32 4
  store i64 0, ptr %312, align 8, !tbaa !71
  %313 = load ptr, ptr %0, align 8, !tbaa !63
  %314 = getelementptr inbounds %struct.xpv, ptr %313, i64 0, i32 2
  %315 = load i64, ptr %314, align 8, !tbaa !72
  %316 = freeze i64 %315
  %317 = getelementptr inbounds %struct.xpvinvlist, ptr %313, i64 0, i32 6
  %318 = load i8, ptr %317, align 1, !tbaa !57, !range !59, !noundef !60
  %319 = getelementptr inbounds %struct.xpvinvlist, ptr %309, i64 0, i32 6
  store i8 %318, ptr %319, align 1, !tbaa !57
  %320 = icmp eq i64 %316, 0
  br i1 %320, label %330, label %321

321:                                              ; preds = %308
  %322 = lshr i64 %316, 3
  %323 = load i8, ptr %317, align 1, !tbaa !57, !range !59, !noundef !60
  %324 = zext i8 %323 to i64
  %325 = icmp eq i64 %322, %324
  %326 = zext i8 %318 to i64
  %327 = add nuw nsw i64 %322, %326
  %328 = sub nsw i64 %327, %324
  %329 = shl i64 %328, 3
  br i1 %325, label %330, label %331

330:                                              ; preds = %321, %308
  br label %331

331:                                              ; preds = %321, %330
  %332 = phi i64 [ 0, %330 ], [ %329, %321 ]
  store i64 %332, ptr %310, align 8, !tbaa !72
  %333 = getelementptr inbounds %struct.sv, ptr %295, i64 0, i32 3
  %334 = load ptr, ptr %333, align 8, !tbaa !9
  %335 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %336 = load ptr, ptr %335, align 8, !tbaa !9
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %334, ptr align 1 %336, i64 %316, i1 false)
  store ptr %295, ptr %3, align 8, !tbaa !5
  br label %337

337:                                              ; preds = %48, %331, %31, %50, %102, %97, %288
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl__setup_canned_invlist(i64 noundef %0, i64 noundef %1, ptr nocapture noundef writeonly %2) local_unnamed_addr #0 {
  %4 = icmp slt i64 %0, 0
  %5 = select i1 %4, i64 10, i64 %0
  %6 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !62
  %9 = and i32 %8, 268435456
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = shl i64 %5, 3
  %13 = add i64 %12, 9
  br label %21

14:                                               ; preds = %3
  %15 = load ptr, ptr %6, align 8, !tbaa !63
  %16 = getelementptr inbounds %struct.xpv, ptr %15, i64 0, i32 3
  %17 = load i64, ptr %16, align 8, !tbaa !9
  %18 = shl i64 %5, 3
  %19 = add i64 %18, 9
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %14, %11
  %22 = phi i64 [ %13, %11 ], [ %19, %14 ]
  %23 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %6, i64 noundef %22) #21
  %24 = load ptr, ptr %6, align 8, !tbaa !63
  br label %25

25:                                               ; preds = %14, %21
  %26 = phi ptr [ %15, %14 ], [ %24, %21 ]
  %27 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 2
  store i64 0, ptr %27, align 8, !tbaa !72
  %28 = getelementptr inbounds %struct.xpvinvlist, ptr %26, i64 0, i32 5
  store i64 -1, ptr %28, align 8, !tbaa !71
  %29 = getelementptr inbounds %struct.xpvinvlist, ptr %26, i64 0, i32 4
  store i64 0, ptr %29, align 8, !tbaa !71
  tail call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %6, i64 noundef %1, i64 noundef %1)
  %30 = load ptr, ptr %6, align 8, !tbaa !63
  %31 = getelementptr %struct.xpvinvlist, ptr %30, i64 0, i32 6
  %32 = load i8, ptr %31, align 1, !tbaa !57, !range !59, !noundef !60
  %33 = icmp eq i64 %0, 0
  %34 = zext i8 %32 to i64
  %35 = add i64 %34, %0
  %36 = shl i64 %35, 3
  %37 = select i1 %33, i64 0, i64 %36
  %38 = getelementptr inbounds %struct.xpv, ptr %30, i64 0, i32 2
  store i64 %37, ptr %38, align 8, !tbaa !72
  %39 = getelementptr i8, ptr %6, i64 16
  %40 = load ptr, ptr %39, align 8, !tbaa !9
  %41 = getelementptr inbounds i64, ptr %40, i64 %34
  %42 = getelementptr inbounds i64, ptr %41, i64 1
  store ptr %42, ptr %2, align 8, !tbaa !5
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl__invlist_contents(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.193, i64 noundef 1) #21
  %3 = load ptr, ptr %0, align 8, !tbaa !63
  %4 = getelementptr inbounds %struct.xpvinvlist, ptr %3, i64 0, i32 5
  store i64 0, ptr %4, align 8, !tbaa !71
  %5 = getelementptr inbounds %struct.xpv, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %5, align 8, !tbaa !72
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %1
  %9 = getelementptr i8, ptr %0, i64 16
  br label %10

10:                                               ; preds = %8, %39
  %11 = phi i64 [ %6, %8 ], [ %43, %39 ]
  %12 = phi ptr [ %4, %8 ], [ %41, %39 ]
  %13 = phi ptr [ %3, %8 ], [ %40, %39 ]
  %14 = lshr i64 %11, 3
  %15 = getelementptr %struct.xpvinvlist, ptr %13, i64 0, i32 6
  %16 = load i8, ptr %15, align 1, !tbaa !57, !range !59, !noundef !60
  %17 = zext i8 %16 to i64
  %18 = sub nsw i64 %14, %17
  %19 = load i64, ptr %12, align 8, !tbaa !71
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %21, label %45

21:                                               ; preds = %10
  %22 = load ptr, ptr %9, align 8, !tbaa !9
  %23 = getelementptr inbounds i64, ptr %22, i64 %17
  %24 = add nuw i64 %19, 1
  store i64 %24, ptr %12, align 8, !tbaa !71
  %25 = getelementptr inbounds i64, ptr %23, i64 %19
  %26 = load i64, ptr %25, align 8, !tbaa !71
  %27 = icmp ult i64 %24, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  %29 = add nuw i64 %19, 2
  store i64 %29, ptr %12, align 8, !tbaa !71
  %30 = getelementptr inbounds i64, ptr %23, i64 %24
  %31 = load i64, ptr %30, align 8, !tbaa !71
  %32 = add i64 %31, -1
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %21, %28
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %2, ptr noundef nonnull @.str.194, i64 noundef %26) #21
  br label %39

35:                                               ; preds = %28
  %36 = icmp eq i64 %32, %26
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %2, ptr noundef nonnull @.str.195, i64 noundef %26, i64 noundef %32) #21
  br label %39

38:                                               ; preds = %35
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %2, ptr noundef nonnull @.str.196, i64 noundef %26) #21
  br label %39

39:                                               ; preds = %37, %38, %34
  %40 = load ptr, ptr %0, align 8, !tbaa !63
  %41 = getelementptr inbounds %struct.xpvinvlist, ptr %40, i64 0, i32 5
  %42 = getelementptr inbounds %struct.xpv, ptr %40, i64 0, i32 2
  %43 = load i64, ptr %42, align 8, !tbaa !72
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %10, !llvm.loop !305

45:                                               ; preds = %39, %10, %1
  %46 = phi ptr [ %4, %1 ], [ %12, %10 ], [ %41, %39 ]
  store i64 -1, ptr %46, align 8, !tbaa !71
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc zeroext i1 @S_invlist_iternext(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2) unnamed_addr #9 {
  %4 = load ptr, ptr %0, align 8, !tbaa !63
  %5 = getelementptr inbounds %struct.xpvinvlist, ptr %4, i64 0, i32 5
  %6 = getelementptr inbounds %struct.xpv, ptr %4, i64 0, i32 2
  %7 = load i64, ptr %6, align 8, !tbaa !72
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = lshr i64 %7, 3
  %11 = getelementptr %struct.xpvinvlist, ptr %4, i64 0, i32 6
  %12 = load i8, ptr %11, align 1, !tbaa !57, !range !59, !noundef !60
  %13 = zext i8 %12 to i64
  %14 = sub nsw i64 %10, %13
  %15 = load i64, ptr %5, align 8, !tbaa !71
  %16 = icmp ult i64 %15, %14
  br i1 %16, label %18, label %17

17:                                               ; preds = %3, %9
  store i64 -1, ptr %5, align 8, !tbaa !71
  br label %34

18:                                               ; preds = %9
  %19 = getelementptr i8, ptr %0, i64 16
  %20 = load ptr, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds i64, ptr %20, i64 %13
  %22 = add nuw i64 %15, 1
  store i64 %22, ptr %5, align 8, !tbaa !71
  %23 = getelementptr inbounds i64, ptr %21, i64 %15
  %24 = load i64, ptr %23, align 8, !tbaa !71
  store i64 %24, ptr %1, align 8, !tbaa !71
  %25 = load i64, ptr %5, align 8, !tbaa !71
  %26 = icmp ult i64 %25, %14
  br i1 %26, label %27, label %32

27:                                               ; preds = %18
  %28 = add nuw i64 %25, 1
  store i64 %28, ptr %5, align 8, !tbaa !71
  %29 = getelementptr inbounds i64, ptr %21, i64 %25
  %30 = load i64, ptr %29, align 8, !tbaa !71
  %31 = add i64 %30, -1
  br label %32

32:                                               ; preds = %18, %27
  %33 = phi i64 [ %31, %27 ], [ -1, %18 ]
  store i64 %33, ptr %2, align 8, !tbaa !71
  br label %34

34:                                               ; preds = %32, %17
  %35 = phi i1 [ true, %32 ], [ false, %17 ]
  ret i1 %35
}

declare void @Perl_sv_catpvf(ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl__invlist_dump(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr nocapture noundef readonly %3) local_unnamed_addr #0 {
  %5 = load ptr, ptr %3, align 8, !tbaa !63
  %6 = getelementptr i8, ptr %5, i64 40
  %7 = load i64, ptr %6, align 8, !tbaa !71
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void (i32, ptr, ptr, ...) @Perl_dump_indent(i32 noundef %1, ptr noundef %0, ptr noundef nonnull @.str.197, ptr noundef %2) #21
  br label %55

10:                                               ; preds = %4
  store i64 0, ptr %6, align 8, !tbaa !71
  %11 = getelementptr inbounds %struct.xpv, ptr %5, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !72
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %35, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %3, i64 16
  br label %16

16:                                               ; preds = %14, %48
  %17 = phi i64 [ %12, %14 ], [ %53, %48 ]
  %18 = phi ptr [ %6, %14 ], [ %51, %48 ]
  %19 = phi ptr [ %5, %14 ], [ %50, %48 ]
  %20 = phi i64 [ 0, %14 ], [ %49, %48 ]
  %21 = lshr i64 %17, 3
  %22 = getelementptr %struct.xpvinvlist, ptr %19, i64 0, i32 6
  %23 = load i8, ptr %22, align 1, !tbaa !57, !range !59, !noundef !60
  %24 = zext i8 %23 to i64
  %25 = sub nsw i64 %21, %24
  %26 = load i64, ptr %18, align 8, !tbaa !71
  %27 = icmp ult i64 %26, %25
  br i1 %27, label %28, label %35

28:                                               ; preds = %16
  %29 = load ptr, ptr %15, align 8, !tbaa !9
  %30 = getelementptr inbounds i64, ptr %29, i64 %24
  %31 = add nuw i64 %26, 1
  store i64 %31, ptr %18, align 8, !tbaa !71
  %32 = getelementptr inbounds i64, ptr %30, i64 %26
  %33 = load i64, ptr %32, align 8, !tbaa !71
  %34 = icmp ult i64 %31, %25
  br i1 %34, label %37, label %43

35:                                               ; preds = %16, %48, %10
  %36 = phi ptr [ %6, %10 ], [ %51, %48 ], [ %18, %16 ]
  store i64 -1, ptr %36, align 8, !tbaa !71
  br label %55

37:                                               ; preds = %28
  %38 = add nuw i64 %26, 2
  store i64 %38, ptr %18, align 8, !tbaa !71
  %39 = getelementptr inbounds i64, ptr %30, i64 %31
  %40 = load i64, ptr %39, align 8, !tbaa !71
  %41 = add i64 %40, -1
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %28, %37
  tail call void (i32, ptr, ptr, ...) @Perl_dump_indent(i32 noundef %1, ptr noundef %0, ptr noundef nonnull @.str.198, ptr noundef %2, i64 noundef %20, i64 noundef %33) #21
  br label %48

44:                                               ; preds = %37
  %45 = icmp eq i64 %41, %33
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  tail call void (i32, ptr, ptr, ...) @Perl_dump_indent(i32 noundef %1, ptr noundef %0, ptr noundef nonnull @.str.199, ptr noundef %2, i64 noundef %20, i64 noundef %33, i64 noundef %41) #21
  br label %48

47:                                               ; preds = %44
  tail call void (i32, ptr, ptr, ...) @Perl_dump_indent(i32 noundef %1, ptr noundef %0, ptr noundef nonnull @.str.200, ptr noundef %2, i64 noundef %20, i64 noundef %33) #21
  br label %48

48:                                               ; preds = %46, %47, %43
  %49 = add i64 %20, 2
  %50 = load ptr, ptr %3, align 8, !tbaa !63
  %51 = getelementptr inbounds %struct.xpvinvlist, ptr %50, i64 0, i32 5
  %52 = getelementptr inbounds %struct.xpv, ptr %50, i64 0, i32 2
  %53 = load i64, ptr %52, align 8, !tbaa !72
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %35, label %16, !llvm.loop !306

55:                                               ; preds = %35, %9
  ret void
}

declare void @Perl_dump_indent(i32 noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl__load_PL_utf8_foldclosures() local_unnamed_addr #0 {
  %1 = alloca [14 x i8], align 1
  %2 = load ptr, ptr @PL_utf8_tofold, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %7

4:                                                ; preds = %0
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %1) #21
  %5 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull @.str.201, ptr noundef nonnull %1, ptr noundef null, i8 noundef zeroext 2) #21
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %1) #21
  %6 = load ptr, ptr @PL_utf8_tofold, align 8, !tbaa !5
  br label %7

7:                                                ; preds = %4, %0
  %8 = phi ptr [ %6, %4 ], [ %2, %0 ]
  %9 = call ptr @Perl__swash_inversion_hash(ptr noundef %8) #21
  store ptr %9, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  ret void
}

declare i64 @Perl__to_utf8_fold_flags(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

declare ptr @Perl__swash_inversion_hash(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl__get_regclass_nonbitmap_data(ptr noundef readonly %0, ptr nocapture noundef readonly %1, i1 noundef zeroext %2, ptr noundef writeonly %3, ptr noundef writeonly %4, ptr noundef %5) local_unnamed_addr #0 {
  %7 = alloca i8, align 1
  %8 = alloca ptr, align 8
  %9 = icmp eq ptr %0, null
  br i1 %9, label %118, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 14
  %12 = load ptr, ptr %11, align 8, !tbaa !16
  %13 = getelementptr inbounds %struct.regexp_internal, ptr %12, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %118, label %16

16:                                               ; preds = %10
  %17 = load i32, ptr %14, align 8, !tbaa !27
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %118, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.regnode_1, ptr %1, i64 0, i32 3
  %21 = load i32, ptr %20, align 4, !tbaa !166
  %22 = getelementptr inbounds %struct.reg_data, ptr %14, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !29
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds i8, ptr %23, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !9
  %27 = icmp eq i8 %26, 115
  br i1 %27, label %28, label %118

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.reg_data, ptr %14, i64 0, i32 2, i64 %24
  %30 = load ptr, ptr %29, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.av, ptr %32, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #21
  store i8 4, ptr %7, align 1, !tbaa !9
  %35 = load ptr, ptr %34, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.sv, ptr %32, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !62
  %38 = and i32 %37, 8388608
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %28
  %41 = tail call i32 @Perl_mg_size(ptr noundef nonnull %32) #21
  %42 = sext i32 %41 to i64
  br label %47

43:                                               ; preds = %28
  %44 = load ptr, ptr %32, align 8, !tbaa !122
  %45 = getelementptr inbounds %struct.xpvav, ptr %44, i64 0, i32 2
  %46 = load i64, ptr %45, align 8, !tbaa !124
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %42, %40 ], [ %46, %43 ]
  %49 = icmp sgt i64 %48, 1
  br i1 %49, label %50, label %92

50:                                               ; preds = %47
  %51 = icmp eq ptr %4, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds ptr, ptr %34, i64 2
  %54 = load ptr, ptr %53, align 8, !tbaa !5
  %55 = icmp eq ptr %54, null
  %56 = icmp eq ptr %54, @PL_sv_undef
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %52, %50
  br label %59

59:                                               ; preds = %52, %58
  %60 = phi ptr [ null, %58 ], [ %54, %52 ]
  store ptr %60, ptr %4, align 8, !tbaa !5
  %61 = load i32, ptr %36, align 4, !tbaa !62
  %62 = and i32 %61, 8388608
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = tail call i32 @Perl_mg_size(ptr noundef nonnull %32) #21
  %66 = sext i32 %65 to i64
  br label %71

67:                                               ; preds = %59
  %68 = load ptr, ptr %32, align 8, !tbaa !122
  %69 = getelementptr inbounds %struct.xpvav, ptr %68, i64 0, i32 2
  %70 = load i64, ptr %69, align 8, !tbaa !124
  br label %71

71:                                               ; preds = %64, %67
  %72 = phi i64 [ %66, %64 ], [ %70, %67 ]
  %73 = icmp sgt i64 %72, 2
  br i1 %73, label %74, label %92

74:                                               ; preds = %71
  %75 = getelementptr inbounds ptr, ptr %34, i64 3
  %76 = load ptr, ptr %75, align 8, !tbaa !5
  %77 = getelementptr inbounds ptr, ptr %34, i64 4
  %78 = load ptr, ptr %77, align 8, !tbaa !5
  %79 = getelementptr inbounds %struct.sv, ptr %78, i64 0, i32 2
  %80 = load i32, ptr %79, align 4, !tbaa !62
  %81 = and i32 %80, -2145386240
  %82 = icmp eq i32 %81, -2147483392
  br i1 %82, label %83, label %88

83:                                               ; preds = %74
  %84 = load ptr, ptr %78, align 8, !tbaa !63
  %85 = getelementptr inbounds %struct.xpvuv, ptr %84, i64 0, i32 4
  %86 = load i64, ptr %85, align 8, !tbaa !9
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %92, label %91

88:                                               ; preds = %74
  %89 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %78, i32 noundef 2) #21
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %88, %83
  store i8 5, ptr %7, align 1, !tbaa !9
  br label %92

92:                                               ; preds = %71, %91, %88, %83, %47
  %93 = phi ptr [ %76, %91 ], [ %76, %83 ], [ %76, %88 ], [ null, %47 ], [ null, %71 ]
  %94 = getelementptr inbounds ptr, ptr %34, i64 1
  %95 = load ptr, ptr %94, align 8, !tbaa !5
  %96 = icmp eq ptr %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.sv, ptr %95, i64 0, i32 2
  %99 = load i32, ptr %98, align 4, !tbaa !62
  %100 = and i32 %99, 2048
  %101 = icmp eq i32 %100, 0
  %102 = and i1 %101, %2
  %103 = select i1 %101, ptr null, ptr %95
  br i1 %102, label %105, label %116

104:                                              ; preds = %92
  br i1 %2, label %105, label %116

105:                                              ; preds = %97, %104
  %106 = icmp ne ptr %35, null
  %107 = icmp ne ptr %35, @PL_sv_undef
  %108 = and i1 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = icmp ne ptr %93, null
  %111 = icmp ne ptr %93, @PL_sv_undef
  %112 = and i1 %110, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %109, %105
  %114 = call ptr @Perl__core_swash_init(ptr noundef nonnull @.str.202, ptr noundef nonnull @.str.178, ptr noundef %35, i32 noundef 1, i32 noundef 0, ptr noundef %93, ptr noundef nonnull %7) #21
  %115 = call ptr @Perl_av_store(ptr noundef nonnull %32, i64 noundef 1, ptr noundef %114) #21
  br label %116

116:                                              ; preds = %97, %104, %109, %113
  %117 = phi ptr [ %114, %113 ], [ null, %109 ], [ null, %104 ], [ %103, %97 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #21
  br label %118

118:                                              ; preds = %6, %19, %116, %16, %10
  %119 = phi ptr [ null, %16 ], [ null, %10 ], [ %93, %116 ], [ null, %19 ], [ null, %6 ]
  %120 = phi ptr [ null, %16 ], [ null, %10 ], [ %35, %116 ], [ null, %19 ], [ null, %6 ]
  %121 = phi ptr [ null, %16 ], [ null, %10 ], [ %117, %116 ], [ null, %19 ], [ null, %6 ]
  %122 = icmp eq ptr %3, null
  br i1 %122, label %211, label %123

123:                                              ; preds = %118
  %124 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  %125 = icmp eq ptr %121, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %123
  %127 = call ptr @Perl__get_swash_invlist(ptr noundef nonnull %121) #21
  %128 = icmp eq ptr %127, null
  %129 = icmp ne ptr %120, null
  %130 = select i1 %128, i1 %129, i1 false
  br i1 %130, label %133, label %137

131:                                              ; preds = %123
  %132 = icmp eq ptr %120, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %126, %131
  %134 = phi ptr [ null, %126 ], [ %119, %131 ]
  %135 = icmp eq ptr %120, @PL_sv_undef
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  call void @Perl_sv_catsv_flags(ptr noundef %124, ptr noundef %120, i32 noundef 2) #21
  br label %137

137:                                              ; preds = %136, %133, %131, %126
  %138 = phi ptr [ %134, %136 ], [ %134, %133 ], [ %127, %126 ], [ %119, %131 ]
  %139 = icmp eq ptr %138, null
  br i1 %139, label %210, label %140

140:                                              ; preds = %137
  %141 = icmp eq ptr %5, null
  br i1 %141, label %208, label %142

142:                                              ; preds = %140
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  %143 = load ptr, ptr %138, align 8, !tbaa !63
  %144 = getelementptr inbounds %struct.xpv, ptr %143, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !72
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %struct.xpvinvlist, ptr %143, i64 0, i32 6
  %149 = load i8, ptr %148, align 1, !tbaa !57, !range !59, !noundef !60
  %150 = shl nuw nsw i8 %149, 3
  %151 = zext i8 %150 to i64
  %152 = sub i64 %145, %151
  %153 = and i64 %152, -8
  %154 = add i64 %153, 17
  br label %155

155:                                              ; preds = %147, %142
  %156 = phi i64 [ %154, %147 ], [ 17, %142 ]
  %157 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %158 = getelementptr inbounds %struct.sv, ptr %157, i64 0, i32 2
  %159 = load i32, ptr %158, align 4, !tbaa !62
  %160 = and i32 %159, 268435456
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %155
  %163 = load ptr, ptr %157, align 8, !tbaa !63
  %164 = getelementptr inbounds %struct.xpv, ptr %163, i64 0, i32 3
  %165 = load i64, ptr %164, align 8, !tbaa !9
  %166 = icmp ult i64 %165, %156
  br i1 %166, label %167, label %170

167:                                              ; preds = %162, %155
  %168 = call ptr @Perl_sv_grow(ptr noundef nonnull %157, i64 noundef %156) #21
  %169 = load ptr, ptr %157, align 8, !tbaa !63
  br label %170

170:                                              ; preds = %167, %162
  %171 = phi ptr [ %163, %162 ], [ %169, %167 ]
  %172 = getelementptr inbounds %struct.xpv, ptr %171, i64 0, i32 2
  store i64 0, ptr %172, align 8, !tbaa !72
  %173 = getelementptr inbounds %struct.xpvinvlist, ptr %171, i64 0, i32 5
  store i64 -1, ptr %173, align 8, !tbaa !71
  %174 = getelementptr inbounds %struct.xpvinvlist, ptr %171, i64 0, i32 4
  store i64 0, ptr %174, align 8, !tbaa !71
  %175 = load ptr, ptr %138, align 8, !tbaa !63
  %176 = getelementptr inbounds %struct.xpv, ptr %175, i64 0, i32 2
  %177 = load i64, ptr %176, align 8, !tbaa !72
  %178 = freeze i64 %177
  %179 = getelementptr inbounds %struct.xpvinvlist, ptr %175, i64 0, i32 6
  %180 = load i8, ptr %179, align 1, !tbaa !57, !range !59, !noundef !60
  %181 = getelementptr inbounds %struct.xpvinvlist, ptr %171, i64 0, i32 6
  store i8 %180, ptr %181, align 1, !tbaa !57
  %182 = icmp eq i64 %178, 0
  br i1 %182, label %192, label %183

183:                                              ; preds = %170
  %184 = lshr i64 %178, 3
  %185 = load i8, ptr %179, align 1, !tbaa !57, !range !59, !noundef !60
  %186 = zext i8 %185 to i64
  %187 = icmp eq i64 %184, %186
  %188 = zext i8 %180 to i64
  %189 = add nuw nsw i64 %184, %188
  %190 = sub nsw i64 %189, %186
  %191 = shl i64 %190, 3
  br i1 %187, label %192, label %193

192:                                              ; preds = %183, %170
  br label %193

193:                                              ; preds = %183, %192
  %194 = phi i64 [ 0, %192 ], [ %191, %183 ]
  store i64 %194, ptr %172, align 8, !tbaa !72
  %195 = getelementptr inbounds %struct.sv, ptr %157, i64 0, i32 3
  %196 = load ptr, ptr %195, align 8, !tbaa !9
  %197 = getelementptr inbounds %struct.sv, ptr %138, i64 0, i32 3
  %198 = load ptr, ptr %197, align 8, !tbaa !9
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %196, ptr align 1 %198, i64 %178, i1 false)
  store ptr %157, ptr %8, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %157, ptr noundef nonnull %5, i1 noundef zeroext true, ptr noundef nonnull %8)
  %199 = load ptr, ptr %8, align 8, !tbaa !5
  %200 = call ptr @Perl__invlist_contents(ptr noundef %199)
  call void @Perl_sv_catsv_flags(ptr noundef %124, ptr noundef %200, i32 noundef 2) #21
  %201 = getelementptr inbounds %struct.sv, ptr %199, i64 0, i32 1
  %202 = load i32, ptr %201, align 8, !tbaa !22
  %203 = icmp ugt i32 %202, 1
  br i1 %203, label %204, label %206

204:                                              ; preds = %193
  %205 = add i32 %202, -1
  store i32 %205, ptr %201, align 8, !tbaa !22
  br label %207

206:                                              ; preds = %193
  call void @Perl_sv_free2(ptr noundef nonnull %199, i32 noundef %202) #21
  br label %207

207:                                              ; preds = %204, %206
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  br label %210

208:                                              ; preds = %140
  %209 = call ptr @Perl__invlist_contents(ptr noundef nonnull %138)
  call void @Perl_sv_catsv_flags(ptr noundef %124, ptr noundef %209, i32 noundef 2) #21
  br label %210

210:                                              ; preds = %207, %208, %137
  store ptr %124, ptr %3, align 8, !tbaa !5
  br label %211

211:                                              ; preds = %210, %118
  ret ptr %121
}

declare i64 @Perl_sv_2uv_flags(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl__core_swash_init(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @Perl_av_store(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #1

declare ptr @Perl__get_swash_invlist(ptr noundef) local_unnamed_addr #1

declare void @Perl_sv_catsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @Perl_regdump(ptr nocapture noundef %0) local_unnamed_addr #10 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @Perl_regprop(ptr nocapture noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr nocapture noundef %3, ptr nocapture noundef %4) local_unnamed_addr #10 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_pregfree(ptr noundef %0) local_unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !22
  %6 = icmp ugt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = add i32 %5, -1
  store i32 %8, ptr %4, align 8, !tbaa !22
  br label %10

9:                                                ; preds = %3
  tail call void @Perl_sv_free2(ptr noundef nonnull %0, i32 noundef %5) #21
  br label %10

10:                                               ; preds = %1, %7, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_pregfree2(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 5
  %5 = load ptr, ptr %4, align 8, !tbaa !307
  %6 = icmp eq ptr %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !22
  %10 = icmp ugt i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = add i32 %9, -1
  store i32 %12, ptr %8, align 8, !tbaa !22
  br label %32

13:                                               ; preds = %7
  tail call void @Perl_sv_free2(ptr noundef nonnull %5, i32 noundef %9) #21
  br label %32

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !67
  %17 = getelementptr inbounds %struct.regexp_engine, ptr %16, i64 0, i32 4
  %18 = load ptr, ptr %17, align 8, !tbaa !308
  tail call void %18(ptr noundef nonnull %0) #21
  %19 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 6
  %20 = load ptr, ptr %19, align 8, !tbaa !66
  %21 = icmp eq ptr %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !22
  %25 = icmp ugt i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = add i32 %24, -1
  store i32 %27, ptr %23, align 8, !tbaa !22
  br label %29

28:                                               ; preds = %22
  tail call void @Perl_sv_free2(ptr noundef nonnull %20, i32 noundef %24) #21
  br label %29

29:                                               ; preds = %14, %26, %28
  %30 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !9
  tail call void @Perl_safesysfree(ptr noundef %31) #21
  br label %32

32:                                               ; preds = %13, %11, %29
  %33 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 11
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  %35 = icmp eq ptr %34, null
  br i1 %35, label %89, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.reg_substr_data, ptr %34, i64 0, i32 1, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !210
  %39 = icmp eq ptr %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 1
  %42 = load i32, ptr %41, align 8, !tbaa !22
  %43 = icmp ugt i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = add i32 %42, -1
  store i32 %45, ptr %41, align 8, !tbaa !22
  br label %48

46:                                               ; preds = %40
  tail call void @Perl_sv_free2(ptr noundef nonnull %38, i32 noundef %42) #21
  %47 = load ptr, ptr %33, align 8, !tbaa !13
  br label %48

48:                                               ; preds = %36, %44, %46
  %49 = phi ptr [ %34, %36 ], [ %34, %44 ], [ %47, %46 ]
  %50 = getelementptr inbounds %struct.reg_substr_data, ptr %49, i64 0, i32 1, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !211
  %52 = icmp eq ptr %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 1
  %55 = load i32, ptr %54, align 8, !tbaa !22
  %56 = icmp ugt i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = add i32 %55, -1
  store i32 %58, ptr %54, align 8, !tbaa !22
  br label %61

59:                                               ; preds = %53
  tail call void @Perl_sv_free2(ptr noundef nonnull %51, i32 noundef %55) #21
  %60 = load ptr, ptr %33, align 8, !tbaa !13
  br label %61

61:                                               ; preds = %48, %57, %59
  %62 = phi ptr [ %49, %48 ], [ %49, %57 ], [ %60, %59 ]
  %63 = getelementptr inbounds %struct.reg_substr_data, ptr %62, i64 0, i32 1, i64 1, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !210
  %65 = icmp eq ptr %64, null
  br i1 %65, label %74, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.sv, ptr %64, i64 0, i32 1
  %68 = load i32, ptr %67, align 8, !tbaa !22
  %69 = icmp ugt i32 %68, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = add i32 %68, -1
  store i32 %71, ptr %67, align 8, !tbaa !22
  br label %74

72:                                               ; preds = %66
  tail call void @Perl_sv_free2(ptr noundef nonnull %64, i32 noundef %68) #21
  %73 = load ptr, ptr %33, align 8, !tbaa !13
  br label %74

74:                                               ; preds = %61, %70, %72
  %75 = phi ptr [ %62, %61 ], [ %62, %70 ], [ %73, %72 ]
  %76 = getelementptr inbounds %struct.reg_substr_data, ptr %75, i64 0, i32 1, i64 1, i32 3
  %77 = load ptr, ptr %76, align 8, !tbaa !211
  %78 = icmp eq ptr %77, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.sv, ptr %77, i64 0, i32 1
  %81 = load i32, ptr %80, align 8, !tbaa !22
  %82 = icmp ugt i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = add i32 %81, -1
  store i32 %84, ptr %80, align 8, !tbaa !22
  br label %87

85:                                               ; preds = %79
  tail call void @Perl_sv_free2(ptr noundef nonnull %77, i32 noundef %81) #21
  %86 = load ptr, ptr %33, align 8, !tbaa !13
  br label %87

87:                                               ; preds = %74, %83, %85
  %88 = phi ptr [ %75, %74 ], [ %75, %83 ], [ %86, %85 ]
  tail call void @Perl_safesysfree(ptr noundef %88) #21
  br label %89

89:                                               ; preds = %32, %87
  %90 = load ptr, ptr %2, align 8, !tbaa !9
  %91 = getelementptr inbounds %struct.regexp, ptr %90, i64 0, i32 19
  %92 = load ptr, ptr %91, align 8, !tbaa !309
  %93 = icmp eq ptr %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 2
  %96 = load i32, ptr %95, align 4, !tbaa !62
  %97 = and i32 %96, 427886592
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %92, i32 noundef 4) #21
  %100 = load ptr, ptr %2, align 8, !tbaa !9
  br label %101

101:                                              ; preds = %94, %99, %89
  %102 = phi ptr [ %90, %94 ], [ %100, %99 ], [ %90, %89 ]
  %103 = getelementptr inbounds %struct.regexp, ptr %102, i64 0, i32 7
  %104 = load i32, ptr %103, align 8, !tbaa !45
  %105 = and i32 %104, 33554432
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %struct.regexp, ptr %102, i64 0, i32 18
  %109 = load ptr, ptr %108, align 8, !tbaa !49
  tail call void @Perl_safesysfree(ptr noundef %109) #21
  %110 = load ptr, ptr %2, align 8, !tbaa !9
  %111 = getelementptr inbounds %struct.regexp, ptr %110, i64 0, i32 7
  %112 = load i32, ptr %111, align 8, !tbaa !45
  %113 = and i32 %112, -33554433
  store i32 %113, ptr %111, align 8, !tbaa !45
  br label %114

114:                                              ; preds = %107, %101
  %115 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 19
  %116 = load ptr, ptr %115, align 8, !tbaa !309
  %117 = icmp eq ptr %116, null
  br i1 %117, label %125, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.sv, ptr %116, i64 0, i32 1
  %120 = load i32, ptr %119, align 8, !tbaa !22
  %121 = icmp ugt i32 %120, 1
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = add i32 %120, -1
  store i32 %123, ptr %119, align 8, !tbaa !22
  br label %125

124:                                              ; preds = %118
  tail call void @Perl_sv_free2(ptr noundef nonnull %116, i32 noundef %120) #21
  br label %125

125:                                              ; preds = %114, %122, %124
  %126 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 17
  %127 = load ptr, ptr %126, align 8, !tbaa !50
  tail call void @Perl_safesysfree(ptr noundef %127) #21
  %128 = getelementptr inbounds %struct.regexp, ptr %3, i64 0, i32 25
  %129 = load ptr, ptr %128, align 8, !tbaa !310
  %130 = icmp eq ptr %129, null
  br i1 %130, label %138, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.sv, ptr %129, i64 0, i32 1
  %133 = load i32, ptr %132, align 8, !tbaa !22
  %134 = icmp ugt i32 %133, 1
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = add i32 %133, -1
  store i32 %136, ptr %132, align 8, !tbaa !22
  br label %138

137:                                              ; preds = %131
  tail call void @Perl_sv_free2(ptr noundef nonnull %129, i32 noundef %133) #21
  br label %138

138:                                              ; preds = %125, %135, %137
  store ptr null, ptr %2, align 8, !tbaa !9
  ret void
}

declare void @Perl_sv_force_normal_flags(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_reg_temp_copy(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr i8, ptr %1, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !9
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call ptr @Perl_newSV_type(i32 noundef 8) #21
  br label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !150
  %11 = and i32 %10, 255
  %12 = icmp eq i32 %11, 10
  %13 = and i32 %10, 1610547455
  store i32 %13, ptr %9, align 4, !tbaa !62
  %14 = and i32 %10, 33554432
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %0) #21
  br label %18

18:                                               ; preds = %16, %8
  br i1 %12, label %19, label %38

19:                                               ; preds = %18
  %20 = tail call ptr @Perl_newSV_type(i32 noundef 8) #21
  %21 = load ptr, ptr %20, align 8, !tbaa !107
  %22 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  store ptr %21, ptr %22, align 8, !tbaa !9
  store ptr null, ptr %20, align 8, !tbaa !107
  %23 = getelementptr inbounds %struct.p5rx, ptr %20, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !10
  %25 = and i32 %24, -256
  store i32 %25, ptr %23, align 4, !tbaa !10
  %26 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 1
  %27 = load i32, ptr %26, align 8, !tbaa !22
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  %30 = add i32 %27, -1
  store i32 %30, ptr %26, align 8, !tbaa !22
  br label %32

31:                                               ; preds = %19
  tail call void @Perl_sv_free2(ptr noundef nonnull %20, i32 noundef %27) #21
  br label %32

32:                                               ; preds = %29, %31
  %33 = load ptr, ptr %1, align 8, !tbaa !107
  %34 = getelementptr inbounds %struct.xpv, ptr %33, i64 0, i32 2
  %35 = load i64, ptr %34, align 8, !tbaa !72
  %36 = load ptr, ptr %0, align 8, !tbaa !107
  %37 = getelementptr inbounds %struct.xpv, ptr %36, i64 0, i32 2
  store i64 %35, ptr %37, align 8, !tbaa !72
  br label %38

38:                                               ; preds = %18, %32, %6
  %39 = phi ptr [ %0, %32 ], [ %0, %18 ], [ %7, %6 ]
  %40 = getelementptr inbounds %struct.p5rx, ptr %39, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !10
  %42 = or i32 %41, 16777216
  store i32 %42, ptr %40, align 4, !tbaa !10
  %43 = getelementptr i8, ptr %39, i64 16
  %44 = load ptr, ptr %43, align 8, !tbaa !9
  %45 = getelementptr inbounds %struct.p5rx, ptr %1, i64 0, i32 2
  %46 = load i32, ptr %45, align 4, !tbaa !10
  %47 = and i32 %46, 536870912
  %48 = or i32 %47, %42
  store i32 %48, ptr %40, align 4, !tbaa !10
  %49 = getelementptr inbounds %struct.regexp, ptr %44, i64 0, i32 2
  %50 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(176) %49, ptr noundef nonnull align 8 dereferenceable(176) %50, i64 176, i1 false)
  %51 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 17
  %52 = load ptr, ptr %51, align 8, !tbaa !50
  %53 = icmp eq ptr %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %38
  %55 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 12
  %56 = load i32, ptr %55, align 8, !tbaa !56
  %57 = add i32 %56, 1
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %58, 24
  %60 = tail call ptr @Perl_safesysmalloc(i64 noundef %59) #21
  %61 = getelementptr inbounds %struct.regexp, ptr %44, i64 0, i32 17
  store ptr %60, ptr %61, align 8, !tbaa !50
  %62 = load ptr, ptr %51, align 8, !tbaa !50
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %60, ptr align 1 %62, i64 %59, i1 false)
  br label %63

63:                                               ; preds = %54, %38
  %64 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 11
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  %66 = icmp eq ptr %65, null
  br i1 %66, label %103, label %67

67:                                               ; preds = %63
  %68 = tail call ptr @Perl_safesysmalloc(i64 noundef 128) #21
  %69 = getelementptr inbounds %struct.regexp, ptr %44, i64 0, i32 11
  store ptr %68, ptr %69, align 8, !tbaa !13
  %70 = load ptr, ptr %64, align 8, !tbaa !13
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %68, ptr noundef nonnull align 8 dereferenceable(128) %70, i64 128, i1 false), !tbaa.struct !311
  %71 = load ptr, ptr %69, align 8, !tbaa !13
  %72 = getelementptr inbounds %struct.reg_substr_data, ptr %71, i64 0, i32 1, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !210
  %74 = icmp eq ptr %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.sv, ptr %73, i64 0, i32 1
  %77 = load i32, ptr %76, align 8, !tbaa !22
  %78 = add i32 %77, 1
  store i32 %78, ptr %76, align 8, !tbaa !22
  br label %79

79:                                               ; preds = %67, %75
  %80 = getelementptr inbounds %struct.reg_substr_data, ptr %71, i64 0, i32 1, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !211
  %82 = icmp eq ptr %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.sv, ptr %81, i64 0, i32 1
  %85 = load i32, ptr %84, align 8, !tbaa !22
  %86 = add i32 %85, 1
  store i32 %86, ptr %84, align 8, !tbaa !22
  br label %87

87:                                               ; preds = %79, %83
  %88 = getelementptr inbounds %struct.reg_substr_data, ptr %71, i64 0, i32 1, i64 1, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !210
  %90 = icmp eq ptr %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.sv, ptr %89, i64 0, i32 1
  %93 = load i32, ptr %92, align 8, !tbaa !22
  %94 = add i32 %93, 1
  store i32 %94, ptr %92, align 8, !tbaa !22
  br label %95

95:                                               ; preds = %87, %91
  %96 = getelementptr inbounds %struct.reg_substr_data, ptr %71, i64 0, i32 1, i64 1, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !211
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 1
  %101 = load i32, ptr %100, align 8, !tbaa !22
  %102 = add i32 %101, 1
  store i32 %102, ptr %100, align 8, !tbaa !22
  br label %103

103:                                              ; preds = %99, %95, %63
  %104 = load ptr, ptr %43, align 8, !tbaa !9
  %105 = getelementptr inbounds %struct.regexp, ptr %104, i64 0, i32 7
  %106 = load i32, ptr %105, align 8, !tbaa !45
  %107 = and i32 %106, -33554433
  store i32 %107, ptr %105, align 8, !tbaa !45
  %108 = getelementptr inbounds %struct.regexp, ptr %44, i64 0, i32 19
  store ptr null, ptr %108, align 8, !tbaa !309
  %109 = getelementptr inbounds %struct.regexp, ptr %4, i64 0, i32 5
  %110 = load ptr, ptr %109, align 8, !tbaa !307
  %111 = icmp eq ptr %110, null
  %112 = select i1 %111, ptr %1, ptr %110
  %113 = icmp eq ptr %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %103
  %115 = getelementptr inbounds %struct.sv, ptr %112, i64 0, i32 1
  %116 = load i32, ptr %115, align 8, !tbaa !22
  %117 = add i32 %116, 1
  store i32 %117, ptr %115, align 8, !tbaa !22
  br label %118

118:                                              ; preds = %103, %114
  %119 = getelementptr inbounds %struct.regexp, ptr %44, i64 0, i32 5
  store ptr %112, ptr %119, align 8, !tbaa !307
  %120 = getelementptr inbounds %struct.regexp, ptr %44, i64 0, i32 25
  %121 = load ptr, ptr %120, align 8, !tbaa !310
  %122 = icmp eq ptr %121, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %struct.sv, ptr %121, i64 0, i32 1
  %125 = load i32, ptr %124, align 8, !tbaa !22
  %126 = add i32 %125, 1
  store i32 %126, ptr %124, align 8, !tbaa !22
  br label %127

127:                                              ; preds = %118, %123
  ret ptr %39
}

declare i32 @Perl_sv_backoff(ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_save_re_context() local_unnamed_addr #0 {
  %1 = alloca [22 x i8], align 16
  %2 = load ptr, ptr @PL_curpm, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct.pmop, ptr %2, i64 0, i32 9
  %6 = load ptr, ptr %5, align 8, !tbaa !46
  %7 = icmp eq ptr %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr i8, ptr %6, i64 16
  %10 = load ptr, ptr %9, align 8, !tbaa !9
  %11 = getelementptr inbounds %struct.regexp, ptr %10, i64 0, i32 12
  %12 = load i32, ptr %11, align 8, !tbaa !56
  %13 = freeze i32 %12
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = icmp slt i32 %13, 1
  br i1 %16, label %43, label %17

17:                                               ; preds = %4, %0, %8, %15
  %18 = phi i32 [ %13, %15 ], [ 3, %8 ], [ 3, %0 ], [ 3, %4 ]
  %19 = add nuw i32 %18, 1
  %20 = zext i32 %19 to i64
  br label %21

21:                                               ; preds = %17, %40
  %22 = phi i64 [ 1, %17 ], [ %41, %40 ]
  call void @llvm.lifetime.start.p0(i64 22, ptr nonnull %1) #21
  %23 = call i32 (ptr, i64, ptr, ...) @Perl_my_snprintf(ptr noundef nonnull %1, i64 noundef 22, ptr noundef nonnull @.str.205, i64 noundef %22) #21
  %24 = load ptr, ptr @PL_defstash, align 8, !tbaa !5
  %25 = call ptr @Perl_hv_common_key_len(ptr noundef %24, ptr noundef nonnull %1, i32 noundef %23, i32 noundef 32, ptr noundef null, i32 noundef 0) #21
  %26 = icmp eq ptr %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %21
  %28 = load ptr, ptr %25, align 8, !tbaa !5
  %29 = getelementptr inbounds %struct.gv, ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !312
  %31 = and i32 %30, 255
  %32 = icmp eq i32 %31, 9
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.gv, ptr %28, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !9
  %36 = load ptr, ptr %35, align 8, !tbaa !229
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = call ptr @Perl_save_scalar(ptr noundef nonnull %28) #21
  br label %40

40:                                               ; preds = %27, %33, %38, %21
  call void @llvm.lifetime.end.p0(i64 22, ptr nonnull %1) #21
  %41 = add nuw nsw i64 %22, 1
  %42 = icmp eq i64 %41, %20
  br i1 %42, label %43, label %21, !llvm.loop !314

43:                                               ; preds = %40, %15
  ret void
}

declare i32 @Perl_my_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #1

declare ptr @Perl_hv_common_key_len(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_save_scalar(ptr noundef) local_unnamed_addr #1

declare i32 @Perl_mg_size(ptr noundef) local_unnamed_addr #1

declare ptr @Perl_av_fetch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_gv_fetchpvn_flags(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

declare i32 @Perl_mg_get(ptr noundef) local_unnamed_addr #1

declare ptr @Perl_amagic_call(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_sv_pvn_force_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_safesysrealloc(ptr noundef, i64 noundef) local_unnamed_addr #1

declare i32 @Perl_mg_set(ptr noundef) local_unnamed_addr #1

declare void @Perl_save_strlen(ptr noundef) local_unnamed_addr #1

declare ptr @Perl_new_stackinfo(i32 noundef, i32 noundef) local_unnamed_addr #1

declare i32 @Perl_eval_sv(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_gv_add_by_type(ptr noundef, i32 noundef) local_unnamed_addr #1

declare zeroext i1 @Perl_sv_2bool_flags(ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @Perl_croak_popstack() local_unnamed_addr #1

declare void @Perl_free_tmps() local_unnamed_addr #1

declare void @Perl_sv_free2(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #12

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #13

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_anything(ptr nocapture noundef %0) unnamed_addr #0 {
  %2 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %3 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !62
  %5 = and i32 %4, 268435456
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load ptr, ptr %2, align 8, !tbaa !63
  %9 = getelementptr inbounds %struct.xpv, ptr %8, i64 0, i32 3
  %10 = load i64, ptr %9, align 8, !tbaa !9
  %11 = icmp ult i64 %10, 25
  br i1 %11, label %12, label %15

12:                                               ; preds = %1, %7
  %13 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %2, i64 noundef 25) #21
  %14 = load ptr, ptr %2, align 8, !tbaa !63
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi ptr [ %8, %7 ], [ %14, %12 ]
  %17 = getelementptr inbounds %struct.xpv, ptr %16, i64 0, i32 2
  store i64 0, ptr %17, align 8, !tbaa !72
  %18 = getelementptr inbounds %struct.xpvinvlist, ptr %16, i64 0, i32 5
  store i64 -1, ptr %18, align 8, !tbaa !71
  %19 = getelementptr inbounds %struct.xpvinvlist, ptr %16, i64 0, i32 4
  store i64 0, ptr %19, align 8, !tbaa !71
  %20 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %2) #21
  %21 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 6
  store ptr %20, ptr %21, align 8, !tbaa !195
  tail call fastcc void @S__append_range_to_invlist(ptr noundef %20, i64 noundef 0, i64 noundef -1)
  %22 = load i8, ptr %0, align 8, !tbaa !196
  %23 = or i8 %22, 1
  store i8 %23, ptr %0, align 8, !tbaa !196
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_or(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 1
  %5 = load i8, ptr %4, align 1, !tbaa !250
  %6 = icmp eq i8 %5, 19
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %9 = load i16, ptr %8, align 2, !tbaa !253
  %10 = icmp eq i16 %9, 1
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 6
  %13 = load ptr, ptr %12, align 8, !tbaa !195
  %14 = load i8, ptr %2, align 4, !tbaa !252
  br label %19

15:                                               ; preds = %7, %3
  %16 = tail call fastcc ptr @S_get_ANYOF_cp_list_for_ssc(ptr noundef %0, ptr noundef nonnull %2)
  %17 = load i8, ptr %2, align 4, !tbaa !252
  %18 = and i8 %17, 18
  br label %19

19:                                               ; preds = %15, %11
  %20 = phi i8 [ %14, %11 ], [ %17, %15 ]
  %21 = phi ptr [ %13, %11 ], [ %16, %15 ]
  %22 = phi i8 [ %14, %11 ], [ %18, %15 ]
  %23 = load i8, ptr %1, align 8, !tbaa !196
  %24 = or i8 %23, %22
  store i8 %24, ptr %1, align 8, !tbaa !196
  %25 = and i8 %20, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = load i8, ptr %4, align 1, !tbaa !250
  %29 = icmp eq i8 %28, 19
  br i1 %29, label %30, label %71

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %32 = load i16, ptr %31, align 2, !tbaa !253
  %33 = icmp ne i16 %32, 1
  %34 = and i8 %20, 8
  %35 = icmp eq i8 %34, 0
  %36 = or i1 %35, %33
  br i1 %36, label %71, label %40

37:                                               ; preds = %19
  %38 = and i8 %20, 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %71, label %40

40:                                               ; preds = %30, %37
  %41 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %42 = load i32, ptr %41, align 4, !tbaa !254
  %43 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %44 = load i32, ptr %43, align 8, !tbaa !256
  %45 = or i32 %44, %42
  store i32 %45, ptr %43, align 8, !tbaa !256
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %71, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  br label %49

49:                                               ; preds = %47, %67
  %50 = phi i32 [ %45, %47 ], [ %68, %67 ]
  %51 = phi i32 [ 0, %47 ], [ %69, %67 ]
  %52 = shl nuw nsw i32 1, %51
  %53 = and i32 %50, %52
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %67, label %55

55:                                               ; preds = %49
  %56 = or i32 %51, 1
  %57 = shl nuw nsw i32 1, %56
  %58 = and i32 %50, %57
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %55
  %61 = load ptr, ptr %48, align 8, !tbaa !195
  %62 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %61, i64 noundef 0, i64 noundef -1)
  store ptr %62, ptr %48, align 8, !tbaa !195
  %63 = load i32, ptr %43, align 4, !tbaa !254
  %64 = or i32 %57, %52
  %65 = xor i32 %64, -1
  %66 = and i32 %63, %65
  store i32 %66, ptr %43, align 4, !tbaa !254
  br label %67

67:                                               ; preds = %49, %55, %60
  %68 = phi i32 [ %50, %49 ], [ %50, %55 ], [ %66, %60 ]
  %69 = add nuw nsw i32 %51, 2
  %70 = icmp ult i32 %51, 28
  br i1 %70, label %49, label %71, !llvm.loop !315

71:                                               ; preds = %67, %37, %40, %27, %30
  %72 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %73 = load ptr, ptr %72, align 8, !tbaa !195
  tail call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %73, ptr noundef %21, i1 noundef zeroext false, ptr noundef nonnull %72)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_and(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 1
  %5 = load i8, ptr %4, align 1, !tbaa !250
  %6 = icmp eq i8 %5, 19
  br i1 %6, label %7, label %78

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %9 = load i16, ptr %8, align 2, !tbaa !253
  %10 = icmp eq i16 %9, 1
  br i1 %10, label %11, label %78

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 6
  %13 = load ptr, ptr %12, align 8, !tbaa !195
  %14 = load i8, ptr %2, align 4, !tbaa !9
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %77, label %17

17:                                               ; preds = %11
  %18 = load ptr, ptr %13, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct.xpvinvlist, ptr %18, i64 0, i32 5
  store i64 0, ptr %19, align 8, !tbaa !71
  %20 = getelementptr inbounds %struct.xpv, ptr %18, i64 0, i32 2
  %21 = load i64, ptr %20, align 8, !tbaa !72
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %45, label %23

23:                                               ; preds = %17
  %24 = lshr i64 %21, 3
  %25 = getelementptr %struct.xpvinvlist, ptr %18, i64 0, i32 6
  %26 = load i8, ptr %25, align 1, !tbaa !57, !range !59, !noundef !60
  %27 = zext i8 %26 to i64
  %28 = icmp eq i64 %24, %27
  br i1 %28, label %45, label %29

29:                                               ; preds = %23
  %30 = sub nsw i64 %24, %27
  %31 = getelementptr i8, ptr %13, i64 16
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  %33 = getelementptr inbounds i64, ptr %32, i64 %27
  store i64 1, ptr %19, align 8, !tbaa !71
  %34 = load i64, ptr %33, align 8, !tbaa !71
  %35 = icmp ugt i64 %30, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  store i64 2, ptr %19, align 8, !tbaa !71
  %37 = icmp eq i64 %34, 0
  br i1 %37, label %41, label %45

38:                                               ; preds = %29
  %39 = icmp eq i64 %34, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %38
  store i64 -1, ptr %19, align 8, !tbaa !71
  br label %71

41:                                               ; preds = %36
  %42 = getelementptr inbounds i64, ptr %33, i64 1
  %43 = load i64, ptr %42, align 8, !tbaa !71
  %44 = icmp eq i64 %43, 0
  store i64 -1, ptr %19, align 8, !tbaa !71
  br i1 %44, label %71, label %46

45:                                               ; preds = %38, %36, %23, %17
  store i64 -1, ptr %19, align 8, !tbaa !71
  br label %46

46:                                               ; preds = %45, %41
  %47 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 5
  %48 = load i32, ptr %47, align 8, !tbaa !150
  %49 = freeze i32 %48
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %77, label %51

51:                                               ; preds = %46
  %52 = insertelement <8 x i32> poison, i32 %49, i64 0
  %53 = shufflevector <8 x i32> %52, <8 x i32> poison, <8 x i32> zeroinitializer
  %54 = and <8 x i32> %53, <i32 12, i32 3, i32 48, i32 192, i32 768, i32 3072, i32 12288, i32 49152>
  %55 = icmp eq <8 x i32> %54, <i32 12, i32 3, i32 48, i32 192, i32 768, i32 3072, i32 12288, i32 49152>
  %56 = insertelement <4 x i32> poison, i32 %49, i64 0
  %57 = shufflevector <4 x i32> %56, <4 x i32> poison, <4 x i32> zeroinitializer
  %58 = and <4 x i32> %57, <i32 196608, i32 786432, i32 3145728, i32 12582912>
  %59 = icmp eq <4 x i32> %58, <i32 196608, i32 786432, i32 3145728, i32 12582912>
  %60 = and i32 %49, 50331648
  %61 = icmp eq i32 %60, 50331648
  %62 = and i32 %49, 201326592
  %63 = icmp eq i32 %62, 201326592
  %64 = bitcast <8 x i1> %55 to i8
  %65 = icmp ne i8 %64, 0
  %66 = bitcast <4 x i1> %59 to i4
  %67 = icmp ne i4 %66, 0
  %68 = or i1 %65, %67
  %69 = or i1 %68, %61
  %70 = or i1 %69, %63
  br i1 %70, label %71, label %73

71:                                               ; preds = %41, %40, %51
  %72 = or i8 %14, 16
  br label %83

73:                                               ; preds = %51
  %74 = and i32 %49, 805306368
  %75 = icmp eq i32 %74, 805306368
  %76 = or i8 %14, 16
  br i1 %75, label %83, label %77

77:                                               ; preds = %46, %11, %73
  br label %83

78:                                               ; preds = %7, %3
  %79 = tail call fastcc ptr @S_get_ANYOF_cp_list_for_ssc(ptr noundef %0, ptr noundef nonnull %2)
  %80 = load i8, ptr %2, align 4, !tbaa !252
  %81 = and i8 %80, 18
  %82 = load i8, ptr %4, align 1, !tbaa !250
  br label %83

83:                                               ; preds = %77, %73, %71, %78
  %84 = phi i8 [ %82, %78 ], [ 19, %77 ], [ 19, %73 ], [ 19, %71 ]
  %85 = phi i8 [ %81, %78 ], [ %14, %77 ], [ %76, %73 ], [ %72, %71 ]
  %86 = phi ptr [ %79, %78 ], [ %13, %77 ], [ %13, %73 ], [ %13, %71 ]
  %87 = load i8, ptr %1, align 8, !tbaa !196
  %88 = and i8 %87, %85
  store i8 %88, ptr %1, align 8, !tbaa !196
  %89 = load i8, ptr %2, align 4, !tbaa !252
  %90 = and i8 %89, 1
  %91 = icmp eq i8 %90, 0
  %92 = icmp eq i8 %84, 19
  br i1 %91, label %201, label %93

93:                                               ; preds = %83
  br i1 %92, label %94, label %98

94:                                               ; preds = %93
  %95 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %96 = load i16, ptr %95, align 2, !tbaa !253
  %97 = icmp eq i16 %96, 1
  br i1 %97, label %202, label %98

98:                                               ; preds = %94, %93
  %99 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %100 = load ptr, ptr %99, align 8, !tbaa !195
  tail call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %100, ptr noundef %86, i1 noundef zeroext false, ptr noundef nonnull %99)
  %101 = load i8, ptr %2, align 4, !tbaa !252
  %102 = and i8 %101, 8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.regnode_charclass_class, ptr %1, i64 0, i32 5
  store i32 0, ptr %105, align 4, !tbaa !254
  br label %312

106:                                              ; preds = %98
  %107 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %108 = load i32, ptr %107, align 8, !tbaa !256
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %312, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %112 = load i32, ptr %111, align 4, !tbaa !254
  %113 = trunc i32 %112 to i2
  %114 = tail call i2 @llvm.bitreverse.i2(i2 %113)
  %115 = zext i2 %114 to i32
  %116 = shl i32 %112, 1
  %117 = and i32 %116, 8
  %118 = or i32 %117, %115
  %119 = lshr i32 %112, 1
  %120 = and i32 %119, 4
  %121 = or i32 %120, %118
  %122 = shl i32 %112, 1
  %123 = and i32 %122, 32
  %124 = or i32 %123, %121
  %125 = lshr i32 %112, 1
  %126 = and i32 %125, 16
  %127 = or i32 %126, %124
  %128 = shl i32 %112, 1
  %129 = and i32 %128, 128
  %130 = or i32 %129, %127
  %131 = lshr i32 %112, 1
  %132 = and i32 %131, 64
  %133 = or i32 %132, %130
  %134 = shl i32 %112, 1
  %135 = and i32 %134, 512
  %136 = or i32 %135, %133
  %137 = lshr i32 %112, 1
  %138 = and i32 %137, 256
  %139 = or i32 %138, %136
  %140 = shl i32 %112, 1
  %141 = and i32 %140, 2048
  %142 = or i32 %141, %139
  %143 = lshr i32 %112, 1
  %144 = and i32 %143, 1024
  %145 = or i32 %144, %142
  %146 = shl i32 %112, 1
  %147 = and i32 %146, 8192
  %148 = or i32 %147, %145
  %149 = lshr i32 %112, 1
  %150 = and i32 %149, 4096
  %151 = or i32 %150, %148
  %152 = shl i32 %112, 1
  %153 = and i32 %152, 32768
  %154 = or i32 %153, %151
  %155 = lshr i32 %112, 1
  %156 = and i32 %155, 16384
  %157 = or i32 %156, %154
  %158 = shl i32 %112, 1
  %159 = and i32 %158, 131072
  %160 = or i32 %159, %157
  %161 = lshr i32 %112, 1
  %162 = and i32 %161, 65536
  %163 = or i32 %162, %160
  %164 = shl i32 %112, 1
  %165 = and i32 %164, 524288
  %166 = or i32 %165, %163
  %167 = lshr i32 %112, 1
  %168 = and i32 %167, 262144
  %169 = or i32 %168, %166
  %170 = shl i32 %112, 1
  %171 = and i32 %170, 2097152
  %172 = or i32 %171, %169
  %173 = lshr i32 %112, 1
  %174 = and i32 %173, 1048576
  %175 = or i32 %174, %172
  %176 = shl i32 %112, 1
  %177 = and i32 %176, 8388608
  %178 = or i32 %177, %175
  %179 = lshr i32 %112, 1
  %180 = and i32 %179, 4194304
  %181 = or i32 %180, %178
  %182 = shl i32 %112, 1
  %183 = and i32 %182, 33554432
  %184 = or i32 %183, %181
  %185 = lshr i32 %112, 1
  %186 = and i32 %185, 16777216
  %187 = or i32 %186, %184
  %188 = shl i32 %112, 1
  %189 = and i32 %188, 134217728
  %190 = or i32 %189, %187
  %191 = lshr i32 %112, 1
  %192 = and i32 %191, 67108864
  %193 = or i32 %192, %190
  %194 = shl i32 %112, 1
  %195 = and i32 %194, 536870912
  %196 = or i32 %195, %193
  %197 = lshr i32 %112, 1
  %198 = and i32 %197, 268435456
  %199 = or i32 %198, %196
  %200 = and i32 %199, %108
  store i32 %200, ptr %107, align 8, !tbaa !256
  br label %312

201:                                              ; preds = %83
  br i1 %92, label %202, label %245

202:                                              ; preds = %94, %201
  %203 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %204 = load i16, ptr %203, align 2, !tbaa !253
  %205 = icmp eq i16 %204, 1
  br i1 %205, label %206, label %245

206:                                              ; preds = %202
  %207 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 6
  %208 = load ptr, ptr %207, align 8, !tbaa !195
  %209 = load ptr, ptr %208, align 8, !tbaa !63
  %210 = getelementptr inbounds %struct.xpvinvlist, ptr %209, i64 0, i32 5
  store i64 0, ptr %210, align 8, !tbaa !71
  %211 = getelementptr inbounds %struct.xpv, ptr %209, i64 0, i32 2
  %212 = load i64, ptr %211, align 8, !tbaa !72
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %236, label %214

214:                                              ; preds = %206
  %215 = lshr i64 %212, 3
  %216 = getelementptr %struct.xpvinvlist, ptr %209, i64 0, i32 6
  %217 = load i8, ptr %216, align 1, !tbaa !57, !range !59, !noundef !60
  %218 = zext i8 %217 to i64
  %219 = icmp eq i64 %215, %218
  br i1 %219, label %236, label %220

220:                                              ; preds = %214
  %221 = sub nsw i64 %215, %218
  %222 = getelementptr i8, ptr %208, i64 16
  %223 = load ptr, ptr %222, align 8, !tbaa !9
  %224 = getelementptr inbounds i64, ptr %223, i64 %218
  store i64 1, ptr %210, align 8, !tbaa !71
  %225 = load i64, ptr %224, align 8, !tbaa !71
  %226 = icmp ugt i64 %221, 1
  br i1 %226, label %227, label %229

227:                                              ; preds = %220
  store i64 2, ptr %210, align 8, !tbaa !71
  %228 = icmp eq i64 %225, 0
  br i1 %228, label %232, label %236

229:                                              ; preds = %220
  %230 = icmp eq i64 %225, 0
  br i1 %230, label %231, label %236

231:                                              ; preds = %229
  store i64 -1, ptr %210, align 8, !tbaa !71
  br label %237

232:                                              ; preds = %227
  %233 = getelementptr inbounds i64, ptr %224, i64 1
  %234 = load i64, ptr %233, align 8, !tbaa !71
  %235 = icmp eq i64 %234, 0
  store i64 -1, ptr %210, align 8, !tbaa !71
  br i1 %235, label %237, label %245

236:                                              ; preds = %229, %227, %214, %206
  store i64 -1, ptr %210, align 8, !tbaa !71
  br label %245

237:                                              ; preds = %232, %231
  %238 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %239 = load i32, ptr %238, align 8, !tbaa !100
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %312, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 5
  %243 = load i32, ptr %242, align 8, !tbaa !256
  %244 = icmp eq i32 %243, 536870911
  br i1 %244, label %312, label %245

245:                                              ; preds = %241, %232, %236, %202, %201
  %246 = phi i1 [ true, %241 ], [ true, %232 ], [ true, %236 ], [ true, %202 ], [ false, %201 ]
  %247 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %248 = load ptr, ptr %247, align 8, !tbaa !195
  %249 = load ptr, ptr %248, align 8, !tbaa !63
  %250 = getelementptr inbounds %struct.xpvinvlist, ptr %249, i64 0, i32 5
  store i64 0, ptr %250, align 8, !tbaa !71
  %251 = getelementptr inbounds %struct.xpv, ptr %249, i64 0, i32 2
  %252 = load i64, ptr %251, align 8, !tbaa !72
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %276, label %254

254:                                              ; preds = %245
  %255 = lshr i64 %252, 3
  %256 = getelementptr %struct.xpvinvlist, ptr %249, i64 0, i32 6
  %257 = load i8, ptr %256, align 1, !tbaa !57, !range !59, !noundef !60
  %258 = zext i8 %257 to i64
  %259 = icmp eq i64 %255, %258
  br i1 %259, label %276, label %260

260:                                              ; preds = %254
  %261 = sub nsw i64 %255, %258
  %262 = getelementptr i8, ptr %248, i64 16
  %263 = load ptr, ptr %262, align 8, !tbaa !9
  %264 = getelementptr inbounds i64, ptr %263, i64 %258
  store i64 1, ptr %250, align 8, !tbaa !71
  %265 = load i64, ptr %264, align 8, !tbaa !71
  %266 = icmp ugt i64 %261, 1
  br i1 %266, label %267, label %269

267:                                              ; preds = %260
  store i64 2, ptr %250, align 8, !tbaa !71
  %268 = icmp eq i64 %265, 0
  br i1 %268, label %272, label %276

269:                                              ; preds = %260
  %270 = icmp eq i64 %265, 0
  br i1 %270, label %271, label %276

271:                                              ; preds = %269
  store i64 -1, ptr %250, align 8, !tbaa !71
  br label %277

272:                                              ; preds = %267
  %273 = getelementptr inbounds i64, ptr %264, i64 1
  %274 = load i64, ptr %273, align 8, !tbaa !71
  %275 = icmp eq i64 %274, 0
  store i64 -1, ptr %250, align 8, !tbaa !71
  br i1 %275, label %277, label %298

276:                                              ; preds = %269, %267, %254, %245
  store i64 -1, ptr %250, align 8, !tbaa !71
  br label %298

277:                                              ; preds = %272, %271
  %278 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %279 = load i32, ptr %278, align 8, !tbaa !100
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %285, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %283 = load i32, ptr %282, align 8, !tbaa !256
  %284 = icmp eq i32 %283, 536870911
  br i1 %284, label %285, label %298

285:                                              ; preds = %281, %277
  br i1 %246, label %286, label %291

286:                                              ; preds = %285
  %287 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %288 = load i16, ptr %287, align 2, !tbaa !253
  %289 = icmp eq i16 %288, 1
  br i1 %289, label %290, label %291

290:                                              ; preds = %286
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %1, ptr noundef nonnull align 8 dereferenceable(56) %2, i64 56, i1 false), !tbaa.struct !212
  br label %312

291:                                              ; preds = %286, %285
  store ptr %86, ptr %247, align 8, !tbaa !195
  %292 = getelementptr inbounds %struct.regnode_charclass_class, ptr %1, i64 0, i32 5
  store i32 0, ptr %292, align 4, !tbaa !254
  %293 = and i8 %89, 8
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %312, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %297 = load i32, ptr %296, align 4, !tbaa !254
  store i32 %297, ptr %292, align 8, !tbaa !256
  br label %312

298:                                              ; preds = %276, %272, %281
  %299 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %300 = load i32, ptr %299, align 8, !tbaa !256
  %301 = icmp eq i32 %300, 0
  %302 = and i8 %89, 8
  %303 = icmp eq i8 %302, 0
  %304 = and i1 %303, %301
  br i1 %304, label %311, label %305

305:                                              ; preds = %298
  br i1 %303, label %310, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %308 = load i32, ptr %307, align 4, !tbaa !254
  %309 = and i32 %308, %300
  store i32 %309, ptr %299, align 8, !tbaa !256
  br label %310

310:                                              ; preds = %306, %305
  tail call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %248, ptr noundef %86, i1 noundef zeroext false, ptr noundef nonnull %247)
  br label %312

311:                                              ; preds = %298
  tail call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %248, ptr noundef %86, i1 noundef zeroext false, ptr noundef nonnull %247)
  br label %312

312:                                              ; preds = %241, %237, %104, %106, %110, %310, %311, %290, %295, %291
  ret void
}

declare ptr @Perl_get_sv(ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @Perl_sv_setiv(ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_make_trie(ptr nocapture noundef readonly %0, ptr noundef readnone %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = tail call ptr @Perl_newSV_type(i32 noundef 11) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  store i64 0, ptr %8, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #21
  store i64 0, ptr %9, align 8, !tbaa !71
  %15 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !156
  %17 = getelementptr inbounds %struct.regexp_internal, ptr %16, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !26
  %19 = icmp eq ptr %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %7
  %21 = load i32, ptr %18, align 8, !tbaa !27
  br label %22

22:                                               ; preds = %20, %7
  %23 = phi i32 [ %21, %20 ], [ 0, %7 ]
  %24 = add i32 %23, 2
  %25 = add i32 %23, 1
  %26 = zext i32 %25 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = add nuw nsw i64 %27, 24
  %29 = tail call ptr @Perl_safesysrealloc(ptr noundef %18, i64 noundef %28) #21
  %30 = load ptr, ptr %15, align 8, !tbaa !156
  %31 = getelementptr inbounds %struct.regexp_internal, ptr %30, i64 0, i32 3
  store ptr %29, ptr %31, align 8, !tbaa !26
  %32 = icmp eq i32 %23, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %struct.reg_data, ptr %29, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !29
  %36 = zext i32 %24 to i64
  %37 = tail call ptr @Perl_safesysrealloc(ptr noundef %35, i64 noundef %36) #21
  br label %40

38:                                               ; preds = %22
  %39 = tail call ptr @Perl_safesysmalloc(i64 noundef 2) #21
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi ptr [ %37, %33 ], [ %39, %38 ]
  %42 = load ptr, ptr %15, align 8, !tbaa !156
  %43 = getelementptr inbounds %struct.regexp_internal, ptr %42, i64 0, i32 3
  %44 = load ptr, ptr %43, align 8, !tbaa !26
  %45 = getelementptr inbounds %struct.reg_data, ptr %44, i64 0, i32 1
  store ptr %41, ptr %45, align 8, !tbaa !29
  store i32 %24, ptr %44, align 8, !tbaa !27
  %46 = zext i32 %23 to i64
  %47 = getelementptr inbounds i8, ptr %41, i64 %46
  store i16 30068, ptr %47, align 1
  switch i32 %6, label %50 [
    i32 31, label %54
    i32 32, label %54
    i32 36, label %48
    i32 37, label %48
    i32 35, label %48
    i32 38, label %48
    i32 33, label %49
  ]

48:                                               ; preds = %40, %40, %40, %40
  br label %54

49:                                               ; preds = %40
  br label %54

50:                                               ; preds = %40
  %51 = zext i32 %6 to i64
  %52 = getelementptr inbounds [134 x ptr], ptr @PL_reg_name, i64 0, i64 %51
  %53 = load ptr, ptr %52, align 8, !tbaa !5
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.221, i32 noundef %6, ptr noundef %53) #21
  br label %54

54:                                               ; preds = %40, %40, %50, %49, %48
  %55 = phi i1 [ true, %50 ], [ false, %49 ], [ false, %48 ], [ true, %40 ], [ true, %40 ]
  %56 = phi i1 [ false, %50 ], [ icmp eq (ptr @PL_fold, ptr @PL_fold_latin1), %49 ], [ true, %48 ], [ false, %40 ], [ false, %40 ]
  %57 = phi ptr [ null, %50 ], [ @PL_fold, %49 ], [ @PL_fold_latin1, %48 ], [ null, %40 ], [ null, %40 ]
  %58 = tail call noalias dereferenceable_or_null(96) ptr @calloc(i64 noundef 1, i64 noundef 96) #22
  store i32 1, ptr %58, align 8, !tbaa !35
  %59 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 9
  store i32 1, ptr %59, align 4, !tbaa !316
  %60 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 14
  store i32 %5, ptr %60, align 8, !tbaa !284
  %61 = load ptr, ptr %15, align 8, !tbaa !156
  %62 = getelementptr inbounds %struct.regexp_internal, ptr %61, i64 0, i32 3
  %63 = load ptr, ptr %62, align 8, !tbaa !26
  %64 = getelementptr inbounds %struct.reg_data, ptr %63, i64 0, i32 2, i64 %46
  store ptr %58, ptr %64, align 8, !tbaa !5
  %65 = tail call noalias dereferenceable_or_null(512) ptr @calloc(i64 noundef 256, i64 noundef 2) #22
  %66 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 2
  store ptr %65, ptr %66, align 8, !tbaa !38
  %67 = add i32 %6, -31
  %68 = icmp ult i32 %67, 2
  br i1 %68, label %69, label %72

69:                                               ; preds = %54
  %70 = tail call noalias dereferenceable_or_null(32) ptr @calloc(i64 noundef 32, i64 noundef 1) #22
  %71 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 5
  store ptr %70, ptr %71, align 8, !tbaa !41
  br label %72

72:                                               ; preds = %54, %69
  %73 = add i32 %5, 1
  %74 = zext i32 %73 to i64
  %75 = tail call noalias ptr @calloc(i64 noundef %74, i64 noundef 12) #22
  %76 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 7
  store ptr %75, ptr %76, align 8, !tbaa !43
  %77 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.216, i32 noundef 1) #21
  %78 = getelementptr inbounds %struct.sv, ptr %77, i64 0, i32 2
  %79 = load i32, ptr %78, align 4, !tbaa !62
  %80 = and i32 %79, 256
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %72
  tail call void @Perl_sv_setiv(ptr noundef nonnull %77, i64 noundef 65536) #21
  br label %83

83:                                               ; preds = %82, %72
  %84 = icmp eq ptr %2, %1
  br i1 %84, label %85, label %89

85:                                               ; preds = %83
  %86 = getelementptr inbounds %struct.regnode, ptr %3, i64 0, i32 1
  %87 = load i8, ptr %86, align 1, !tbaa !164
  %88 = icmp eq i8 %87, 30
  br i1 %88, label %89, label %91

89:                                               ; preds = %85, %83
  %90 = getelementptr inbounds %struct.regnode, ptr %2, i64 1
  br label %91

91:                                               ; preds = %85, %89
  %92 = phi ptr [ %90, %89 ], [ %2, %85 ]
  %93 = icmp ult ptr %2, %3
  br i1 %93, label %94, label %1363

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 5
  %96 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 10
  %97 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %98 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 8
  %99 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 11
  br label %100

100:                                              ; preds = %94, %1358
  %101 = phi ptr [ null, %94 ], [ %1359, %1358 ]
  %102 = phi ptr [ %2, %94 ], [ %1361, %1358 ]
  %103 = phi i64 [ 0, %94 ], [ %1360, %1358 ]
  %104 = getelementptr inbounds %struct.regnode, ptr %102, i64 1
  %105 = getelementptr inbounds %struct.regnode, ptr %102, i64 2
  %106 = load i8, ptr %104, align 2, !tbaa !218
  %107 = zext i8 %106 to i64
  %108 = getelementptr inbounds i8, ptr %105, i64 %107
  %109 = load ptr, ptr %95, align 8, !tbaa !41
  %110 = icmp ne ptr %109, null
  %111 = zext i1 %110 to i8
  %112 = getelementptr inbounds %struct.regnode, ptr %102, i64 1, i32 1
  %113 = load i8, ptr %112, align 1, !tbaa !164
  %114 = icmp eq i8 %113, 40
  br i1 %114, label %115, label %134

115:                                              ; preds = %100
  %116 = getelementptr inbounds %struct.regnode, ptr %102, i64 1, i32 2
  %117 = load i16, ptr %116, align 2, !tbaa !168
  %118 = icmp eq i16 %117, 0
  %119 = zext i16 %117 to i64
  %120 = getelementptr inbounds %struct.regnode, ptr %104, i64 %119
  %121 = select i1 %118, ptr null, ptr %120
  %122 = icmp eq ptr %121, %4
  br i1 %122, label %133, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %struct.regnode, ptr %121, i64 0, i32 1
  %125 = load i8, ptr %124, align 1, !tbaa !164
  %126 = zext i8 %125 to i32
  %127 = icmp eq i32 %126, %6
  br i1 %127, label %128, label %133

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.regnode_string, ptr %121, i64 0, i32 3
  %130 = load i8, ptr %121, align 2, !tbaa !218
  %131 = zext i8 %130 to i64
  %132 = getelementptr inbounds i8, ptr %129, i64 %131
  store i64 %131, ptr %96, align 8, !tbaa !173
  br label %134

133:                                              ; preds = %123, %115
  store i64 0, ptr %96, align 8, !tbaa !173
  br label %1331

134:                                              ; preds = %128, %100
  %135 = phi ptr [ %108, %100 ], [ %132, %128 ]
  %136 = phi ptr [ %105, %100 ], [ %129, %128 ]
  %137 = phi ptr [ %104, %100 ], [ %120, %128 ]
  br i1 %110, label %138, label %155

138:                                              ; preds = %134
  %139 = load i8, ptr %136, align 1, !tbaa !9
  %140 = and i8 %139, 7
  %141 = shl nuw i8 1, %140
  %142 = lshr i8 %139, 3
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds i8, ptr %109, i64 %143
  %145 = load i8, ptr %144, align 1, !tbaa !9
  %146 = or i8 %141, %145
  store i8 %146, ptr %144, align 1, !tbaa !9
  %147 = getelementptr inbounds %struct.regnode, ptr %137, i64 0, i32 1
  %148 = load i8, ptr %147, align 1, !tbaa !164
  %149 = icmp eq i8 %148, 37
  br i1 %149, label %150, label %155

150:                                              ; preds = %138
  %151 = load ptr, ptr %95, align 8, !tbaa !41
  %152 = getelementptr inbounds i8, ptr %151, i64 27
  %153 = load i8, ptr %152, align 1, !tbaa !9
  %154 = or i8 %153, -128
  store i8 %154, ptr %152, align 1, !tbaa !9
  br label %155

155:                                              ; preds = %138, %150, %134
  %156 = icmp ult ptr %136, %135
  br i1 %156, label %157, label %1314

157:                                              ; preds = %155
  %158 = ptrtoint ptr %135 to i64
  br label %159

159:                                              ; preds = %157, %1306
  %160 = phi ptr [ %101, %157 ], [ %1310, %1306 ]
  %161 = phi i64 [ %103, %157 ], [ %167, %1306 ]
  %162 = phi ptr [ %136, %157 ], [ %1312, %1306 ]
  %163 = phi i32 [ 0, %157 ], [ %1307, %1306 ]
  %164 = phi i64 [ 0, %157 ], [ %1308, %1306 ]
  %165 = phi i64 [ 0, %157 ], [ %184, %1306 ]
  %166 = phi i8 [ %111, %157 ], [ %1309, %1306 ]
  %167 = add i64 %161, 1
  %168 = load i32, ptr %97, align 8, !tbaa !98
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %159
  %171 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef %162, ptr noundef nonnull %8) #21
  store i64 %171, ptr %9, align 8, !tbaa !71
  br label %182

172:                                              ; preds = %159
  %173 = load i8, ptr %162, align 1, !tbaa !9
  %174 = zext i8 %173 to i64
  br i1 %56, label %175, label %181

175:                                              ; preds = %172
  %176 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %174
  %177 = load i8, ptr %176, align 1, !tbaa !9
  %178 = zext i8 %177 to i64
  %179 = icmp eq i8 %177, -75
  %180 = select i1 %179, i64 956, i64 %178
  store i64 %180, ptr %9, align 8
  store i64 1, ptr %8, align 8, !tbaa !71
  br label %182

181:                                              ; preds = %172
  store i64 %174, ptr %9, align 8, !tbaa !71
  store i64 1, ptr %8, align 8, !tbaa !71
  br label %182

182:                                              ; preds = %175, %181, %170
  %183 = phi i64 [ %180, %175 ], [ %174, %181 ], [ %171, %170 ]
  %184 = add i64 %165, 1
  br i1 %55, label %1105, label %185

185:                                              ; preds = %182
  %186 = icmp sgt i32 %163, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %185
  %188 = load i32, ptr %97, align 8, !tbaa !98
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %196, label %190

190:                                              ; preds = %187
  %191 = load i8, ptr %162, align 1, !tbaa !9
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !9
  %195 = zext i8 %194 to i32
  br label %196

196:                                              ; preds = %187, %190
  %197 = phi i32 [ %195, %190 ], [ 1, %187 ]
  %198 = sub nsw i32 %163, %197
  br label %1100

199:                                              ; preds = %185
  %200 = add i64 %164, 1
  %201 = load i32, ptr %97, align 8, !tbaa !98
  %202 = icmp eq i32 %201, 0
  %203 = ptrtoint ptr %162 to i64
  %204 = sub i64 %158, %203
  br i1 %202, label %1057, label %205

205:                                              ; preds = %199
  %206 = icmp sgt i64 %204, 5
  br i1 %206, label %207, label %509

207:                                              ; preds = %205
  %208 = load i8, ptr %162, align 1, !tbaa !9
  switch i8 %208, label %1100 [
    i8 97, label %209
    i8 102, label %218
    i8 104, label %228
    i8 105, label %237
    i8 106, label %246
    i8 115, label %255
    i8 116, label %260
    i8 119, label %269
    i8 121, label %269
    i8 -59, label %278
    i8 -54, label %291
    i8 -50, label %300
    i8 -49, label %362
    i8 -43, label %444
    i8 -31, label %472
  ]

209:                                              ; preds = %207
  %210 = getelementptr inbounds i8, ptr %162, i64 1
  %211 = load i8, ptr %210, align 1, !tbaa !9
  %212 = icmp eq i8 %211, -54
  br i1 %212, label %213, label %1100

213:                                              ; preds = %209
  %214 = getelementptr inbounds i8, ptr %162, i64 2
  %215 = load i8, ptr %214, align 1, !tbaa !9
  %216 = freeze i8 %215
  %217 = icmp eq i8 %216, -66
  br i1 %217, label %1049, label %1100

218:                                              ; preds = %207
  %219 = getelementptr inbounds i8, ptr %162, i64 1
  %220 = load i8, ptr %219, align 1, !tbaa !9
  switch i8 %220, label %1100 [
    i8 102, label %221
    i8 105, label %1049
    i8 108, label %1049
  ]

221:                                              ; preds = %218
  %222 = getelementptr inbounds i8, ptr %162, i64 2
  %223 = load i8, ptr %222, align 1, !tbaa !9
  %224 = icmp eq i8 %223, 105
  %225 = icmp eq i8 %223, 108
  %226 = or i1 %224, %225
  %227 = select i1 %226, i32 3, i32 2
  br label %1049

228:                                              ; preds = %207
  %229 = getelementptr inbounds i8, ptr %162, i64 1
  %230 = load i8, ptr %229, align 1, !tbaa !9
  %231 = icmp eq i8 %230, -52
  br i1 %231, label %232, label %1100

232:                                              ; preds = %228
  %233 = getelementptr inbounds i8, ptr %162, i64 2
  %234 = load i8, ptr %233, align 1, !tbaa !9
  %235 = freeze i8 %234
  %236 = icmp eq i8 %235, -79
  br i1 %236, label %1049, label %1100

237:                                              ; preds = %207
  %238 = getelementptr inbounds i8, ptr %162, i64 1
  %239 = load i8, ptr %238, align 1, !tbaa !9
  %240 = icmp eq i8 %239, -52
  br i1 %240, label %241, label %1100

241:                                              ; preds = %237
  %242 = getelementptr inbounds i8, ptr %162, i64 2
  %243 = load i8, ptr %242, align 1, !tbaa !9
  %244 = freeze i8 %243
  %245 = icmp eq i8 %244, -121
  br i1 %245, label %1049, label %1100

246:                                              ; preds = %207
  %247 = getelementptr inbounds i8, ptr %162, i64 1
  %248 = load i8, ptr %247, align 1, !tbaa !9
  %249 = icmp eq i8 %248, -52
  br i1 %249, label %250, label %1100

250:                                              ; preds = %246
  %251 = getelementptr inbounds i8, ptr %162, i64 2
  %252 = load i8, ptr %251, align 1, !tbaa !9
  %253 = freeze i8 %252
  %254 = icmp eq i8 %253, -116
  br i1 %254, label %1049, label %1100

255:                                              ; preds = %207
  %256 = getelementptr inbounds i8, ptr %162, i64 1
  %257 = load i8, ptr %256, align 1, !tbaa !9
  %258 = add i8 %257, -115
  %259 = icmp ult i8 %258, 2
  br i1 %259, label %1049, label %1100

260:                                              ; preds = %207
  %261 = getelementptr inbounds i8, ptr %162, i64 1
  %262 = load i8, ptr %261, align 1, !tbaa !9
  %263 = icmp eq i8 %262, -52
  br i1 %263, label %264, label %1100

264:                                              ; preds = %260
  %265 = getelementptr inbounds i8, ptr %162, i64 2
  %266 = load i8, ptr %265, align 1, !tbaa !9
  %267 = freeze i8 %266
  %268 = icmp eq i8 %267, -120
  br i1 %268, label %1049, label %1100

269:                                              ; preds = %207, %207
  %270 = getelementptr inbounds i8, ptr %162, i64 1
  %271 = load i8, ptr %270, align 1, !tbaa !9
  %272 = icmp eq i8 %271, -52
  br i1 %272, label %273, label %1100

273:                                              ; preds = %269
  %274 = getelementptr inbounds i8, ptr %162, i64 2
  %275 = load i8, ptr %274, align 1, !tbaa !9
  %276 = freeze i8 %275
  %277 = icmp eq i8 %276, -118
  br i1 %277, label %1049, label %1100

278:                                              ; preds = %207
  %279 = getelementptr inbounds i8, ptr %162, i64 1
  %280 = load i8, ptr %279, align 1, !tbaa !9
  %281 = icmp eq i8 %280, -65
  br i1 %281, label %282, label %1100

282:                                              ; preds = %278
  %283 = getelementptr inbounds i8, ptr %162, i64 2
  %284 = load i8, ptr %283, align 1, !tbaa !9
  %285 = icmp eq i8 %284, -59
  br i1 %285, label %286, label %1100

286:                                              ; preds = %282
  %287 = getelementptr inbounds i8, ptr %162, i64 3
  %288 = load i8, ptr %287, align 1, !tbaa !9
  %289 = freeze i8 %288
  %290 = icmp eq i8 %289, -65
  br i1 %290, label %1049, label %1100

291:                                              ; preds = %207
  %292 = getelementptr inbounds i8, ptr %162, i64 1
  %293 = load i8, ptr %292, align 1, !tbaa !9
  %294 = icmp eq i8 %293, -68
  br i1 %294, label %295, label %1100

295:                                              ; preds = %291
  %296 = getelementptr inbounds i8, ptr %162, i64 2
  %297 = load i8, ptr %296, align 1, !tbaa !9
  %298 = freeze i8 %297
  %299 = icmp eq i8 %298, 110
  br i1 %299, label %1049, label %1100

300:                                              ; preds = %207
  %301 = getelementptr inbounds i8, ptr %162, i64 1
  %302 = load i8, ptr %301, align 1, !tbaa !9
  %303 = and i8 %302, -3
  %304 = icmp eq i8 %303, -84
  br i1 %304, label %305, label %314

305:                                              ; preds = %300
  %306 = getelementptr inbounds i8, ptr %162, i64 2
  %307 = load i8, ptr %306, align 1, !tbaa !9
  %308 = icmp eq i8 %307, -50
  br i1 %308, label %309, label %1100

309:                                              ; preds = %305
  %310 = getelementptr inbounds i8, ptr %162, i64 3
  %311 = load i8, ptr %310, align 1, !tbaa !9
  %312 = freeze i8 %311
  %313 = icmp eq i8 %312, -71
  br i1 %313, label %1049, label %1100

314:                                              ; preds = %300
  switch i8 %302, label %1100 [
    i8 -79, label %315
    i8 -73, label %315
    i8 -71, label %337
  ]

315:                                              ; preds = %314, %314
  %316 = getelementptr inbounds i8, ptr %162, i64 2
  %317 = load i8, ptr %316, align 1, !tbaa !9
  switch i8 %317, label %1100 [
    i8 -51, label %318
    i8 -50, label %332
  ]

318:                                              ; preds = %315
  %319 = getelementptr inbounds i8, ptr %162, i64 3
  %320 = load i8, ptr %319, align 1, !tbaa !9
  %321 = icmp eq i8 %320, -126
  br i1 %321, label %322, label %1100

322:                                              ; preds = %318
  %323 = getelementptr inbounds i8, ptr %162, i64 4
  %324 = load i8, ptr %323, align 1, !tbaa !9
  %325 = icmp eq i8 %324, -50
  br i1 %325, label %326, label %1049

326:                                              ; preds = %322
  %327 = getelementptr inbounds i8, ptr %162, i64 5
  %328 = load i8, ptr %327, align 1, !tbaa !9
  %329 = freeze i8 %328
  %330 = icmp eq i8 %329, -71
  %331 = select i1 %330, i32 6, i32 4
  br label %1049

332:                                              ; preds = %315
  %333 = getelementptr inbounds i8, ptr %162, i64 3
  %334 = load i8, ptr %333, align 1, !tbaa !9
  %335 = freeze i8 %334
  %336 = icmp eq i8 %335, -71
  br i1 %336, label %1049, label %1100

337:                                              ; preds = %314
  %338 = getelementptr inbounds i8, ptr %162, i64 2
  %339 = load i8, ptr %338, align 1, !tbaa !9
  switch i8 %339, label %1100 [
    i8 -52, label %340
    i8 -51, label %357
  ]

340:                                              ; preds = %337
  %341 = getelementptr inbounds i8, ptr %162, i64 3
  %342 = load i8, ptr %341, align 1, !tbaa !9
  %343 = icmp eq i8 %342, -120
  br i1 %343, label %344, label %1100

344:                                              ; preds = %340
  %345 = getelementptr inbounds i8, ptr %162, i64 4
  %346 = load i8, ptr %345, align 1, !tbaa !9
  switch i8 %346, label %1100 [
    i8 -52, label %347
    i8 -51, label %352
  ]

347:                                              ; preds = %344
  %348 = getelementptr inbounds i8, ptr %162, i64 5
  %349 = load i8, ptr %348, align 1, !tbaa !9
  %350 = and i8 %349, -2
  %351 = icmp eq i8 %350, -128
  br i1 %351, label %1049, label %1100

352:                                              ; preds = %344
  %353 = getelementptr inbounds i8, ptr %162, i64 5
  %354 = load i8, ptr %353, align 1, !tbaa !9
  %355 = freeze i8 %354
  %356 = icmp eq i8 %355, -126
  br i1 %356, label %1049, label %1100

357:                                              ; preds = %337
  %358 = getelementptr inbounds i8, ptr %162, i64 3
  %359 = load i8, ptr %358, align 1, !tbaa !9
  %360 = freeze i8 %359
  %361 = icmp eq i8 %360, -126
  br i1 %361, label %1049, label %1100

362:                                              ; preds = %207
  %363 = getelementptr inbounds i8, ptr %162, i64 1
  %364 = load i8, ptr %363, align 1, !tbaa !9
  switch i8 %364, label %1100 [
    i8 -127, label %365
    i8 -123, label %374
    i8 -119, label %413
    i8 -114, label %435
  ]

365:                                              ; preds = %362
  %366 = getelementptr inbounds i8, ptr %162, i64 2
  %367 = load i8, ptr %366, align 1, !tbaa !9
  %368 = icmp eq i8 %367, -52
  br i1 %368, label %369, label %1100

369:                                              ; preds = %365
  %370 = getelementptr inbounds i8, ptr %162, i64 3
  %371 = load i8, ptr %370, align 1, !tbaa !9
  %372 = freeze i8 %371
  %373 = icmp eq i8 %372, -109
  br i1 %373, label %1049, label %1100

374:                                              ; preds = %362
  %375 = getelementptr inbounds i8, ptr %162, i64 2
  %376 = load i8, ptr %375, align 1, !tbaa !9
  switch i8 %376, label %1100 [
    i8 -52, label %377
    i8 -51, label %408
  ]

377:                                              ; preds = %374
  %378 = getelementptr inbounds i8, ptr %162, i64 3
  %379 = load i8, ptr %378, align 1, !tbaa !9
  switch i8 %379, label %1100 [
    i8 -120, label %380
    i8 -109, label %393
  ]

380:                                              ; preds = %377
  %381 = getelementptr inbounds i8, ptr %162, i64 4
  %382 = load i8, ptr %381, align 1, !tbaa !9
  switch i8 %382, label %1100 [
    i8 -52, label %383
    i8 -51, label %388
  ]

383:                                              ; preds = %380
  %384 = getelementptr inbounds i8, ptr %162, i64 5
  %385 = load i8, ptr %384, align 1, !tbaa !9
  %386 = and i8 %385, -2
  %387 = icmp eq i8 %386, -128
  br i1 %387, label %1049, label %1100

388:                                              ; preds = %380
  %389 = getelementptr inbounds i8, ptr %162, i64 5
  %390 = load i8, ptr %389, align 1, !tbaa !9
  %391 = freeze i8 %390
  %392 = icmp eq i8 %391, -126
  br i1 %392, label %1049, label %1100

393:                                              ; preds = %377
  %394 = getelementptr inbounds i8, ptr %162, i64 4
  %395 = load i8, ptr %394, align 1, !tbaa !9
  switch i8 %395, label %1049 [
    i8 -52, label %396
    i8 -51, label %402
  ]

396:                                              ; preds = %393
  %397 = getelementptr inbounds i8, ptr %162, i64 5
  %398 = load i8, ptr %397, align 1, !tbaa !9
  %399 = and i8 %398, -2
  %400 = icmp eq i8 %399, -128
  %401 = select i1 %400, i32 6, i32 4
  br label %1049

402:                                              ; preds = %393
  %403 = getelementptr inbounds i8, ptr %162, i64 5
  %404 = load i8, ptr %403, align 1, !tbaa !9
  %405 = freeze i8 %404
  %406 = icmp eq i8 %405, -126
  %407 = select i1 %406, i32 6, i32 4
  br label %1049

408:                                              ; preds = %374
  %409 = getelementptr inbounds i8, ptr %162, i64 3
  %410 = load i8, ptr %409, align 1, !tbaa !9
  %411 = freeze i8 %410
  %412 = icmp eq i8 %411, -126
  br i1 %412, label %1049, label %1100

413:                                              ; preds = %362
  %414 = getelementptr inbounds i8, ptr %162, i64 2
  %415 = load i8, ptr %414, align 1, !tbaa !9
  switch i8 %415, label %1100 [
    i8 -51, label %416
    i8 -50, label %430
  ]

416:                                              ; preds = %413
  %417 = getelementptr inbounds i8, ptr %162, i64 3
  %418 = load i8, ptr %417, align 1, !tbaa !9
  %419 = icmp eq i8 %418, -126
  br i1 %419, label %420, label %1100

420:                                              ; preds = %416
  %421 = getelementptr inbounds i8, ptr %162, i64 4
  %422 = load i8, ptr %421, align 1, !tbaa !9
  %423 = icmp eq i8 %422, -50
  br i1 %423, label %424, label %1049

424:                                              ; preds = %420
  %425 = getelementptr inbounds i8, ptr %162, i64 5
  %426 = load i8, ptr %425, align 1, !tbaa !9
  %427 = freeze i8 %426
  %428 = icmp eq i8 %427, -71
  %429 = select i1 %428, i32 6, i32 4
  br label %1049

430:                                              ; preds = %413
  %431 = getelementptr inbounds i8, ptr %162, i64 3
  %432 = load i8, ptr %431, align 1, !tbaa !9
  %433 = freeze i8 %432
  %434 = icmp eq i8 %433, -71
  br i1 %434, label %1049, label %1100

435:                                              ; preds = %362
  %436 = getelementptr inbounds i8, ptr %162, i64 2
  %437 = load i8, ptr %436, align 1, !tbaa !9
  %438 = icmp eq i8 %437, -50
  br i1 %438, label %439, label %1100

439:                                              ; preds = %435
  %440 = getelementptr inbounds i8, ptr %162, i64 3
  %441 = load i8, ptr %440, align 1, !tbaa !9
  %442 = freeze i8 %441
  %443 = icmp eq i8 %442, -71
  br i1 %443, label %1049, label %1100

444:                                              ; preds = %207
  %445 = getelementptr inbounds i8, ptr %162, i64 1
  %446 = load i8, ptr %445, align 1, !tbaa !9
  switch i8 %446, label %1100 [
    i8 -91, label %447
    i8 -76, label %456
    i8 -66, label %463
  ]

447:                                              ; preds = %444
  %448 = getelementptr inbounds i8, ptr %162, i64 2
  %449 = load i8, ptr %448, align 1, !tbaa !9
  %450 = icmp eq i8 %449, -42
  br i1 %450, label %451, label %1100

451:                                              ; preds = %447
  %452 = getelementptr inbounds i8, ptr %162, i64 3
  %453 = load i8, ptr %452, align 1, !tbaa !9
  %454 = freeze i8 %453
  %455 = icmp eq i8 %454, -126
  br i1 %455, label %1049, label %1100

456:                                              ; preds = %444
  %457 = getelementptr inbounds i8, ptr %162, i64 2
  %458 = load i8, ptr %457, align 1, !tbaa !9
  %459 = icmp eq i8 %458, -43
  br i1 %459, label %460, label %1100

460:                                              ; preds = %456
  %461 = getelementptr inbounds i8, ptr %162, i64 3
  %462 = load i8, ptr %461, align 1, !tbaa !9
  switch i8 %462, label %1100 [
    i8 -83, label %1049
    i8 -85, label %1049
    i8 -91, label %1049
    i8 -74, label %1049
  ]

463:                                              ; preds = %444
  %464 = getelementptr inbounds i8, ptr %162, i64 2
  %465 = load i8, ptr %464, align 1, !tbaa !9
  %466 = icmp eq i8 %465, -43
  br i1 %466, label %467, label %1100

467:                                              ; preds = %463
  %468 = getelementptr inbounds i8, ptr %162, i64 3
  %469 = load i8, ptr %468, align 1, !tbaa !9
  %470 = freeze i8 %469
  %471 = icmp eq i8 %470, -74
  br i1 %471, label %1049, label %1100

472:                                              ; preds = %207
  %473 = getelementptr inbounds i8, ptr %162, i64 1
  %474 = load i8, ptr %473, align 1, !tbaa !9
  switch i8 %474, label %1100 [
    i8 -68, label %475
    i8 -67, label %489
  ]

475:                                              ; preds = %472
  %476 = getelementptr inbounds i8, ptr %162, i64 2
  %477 = load i8, ptr %476, align 1, !tbaa !9
  %478 = and i8 %477, -40
  %479 = icmp eq i8 %478, -128
  br i1 %479, label %480, label %1100

480:                                              ; preds = %475
  %481 = getelementptr inbounds i8, ptr %162, i64 3
  %482 = load i8, ptr %481, align 1, !tbaa !9
  %483 = icmp eq i8 %482, -50
  br i1 %483, label %484, label %1100

484:                                              ; preds = %480
  %485 = getelementptr inbounds i8, ptr %162, i64 4
  %486 = load i8, ptr %485, align 1, !tbaa !9
  %487 = freeze i8 %486
  %488 = icmp eq i8 %487, -71
  br i1 %488, label %1049, label %1100

489:                                              ; preds = %472
  %490 = getelementptr inbounds i8, ptr %162, i64 2
  %491 = load i8, ptr %490, align 1, !tbaa !9
  %492 = zext i8 %491 to i32
  %493 = and i32 %492, 248
  %494 = icmp eq i32 %493, 160
  %495 = and i32 %492, 251
  %496 = icmp eq i32 %495, 176
  %497 = or i1 %494, %496
  %498 = icmp eq i8 %491, -68
  %499 = or i1 %498, %497
  br i1 %499, label %500, label %1100

500:                                              ; preds = %489
  %501 = getelementptr inbounds i8, ptr %162, i64 3
  %502 = load i8, ptr %501, align 1, !tbaa !9
  %503 = icmp eq i8 %502, -50
  br i1 %503, label %504, label %1100

504:                                              ; preds = %500
  %505 = getelementptr inbounds i8, ptr %162, i64 4
  %506 = load i8, ptr %505, align 1, !tbaa !9
  %507 = freeze i8 %506
  %508 = icmp eq i8 %507, -71
  br i1 %508, label %1049, label %1100

509:                                              ; preds = %205
  %510 = icmp eq i64 %204, 5
  br i1 %510, label %511, label %750

511:                                              ; preds = %509
  %512 = load i8, ptr %162, align 1, !tbaa !9
  switch i8 %512, label %1100 [
    i8 97, label %513
    i8 102, label %522
    i8 104, label %532
    i8 105, label %541
    i8 106, label %550
    i8 115, label %559
    i8 116, label %564
    i8 119, label %573
    i8 121, label %573
    i8 -59, label %582
    i8 -54, label %595
    i8 -50, label %604
    i8 -49, label %640
    i8 -43, label %685
    i8 -31, label %713
  ]

513:                                              ; preds = %511
  %514 = getelementptr inbounds i8, ptr %162, i64 1
  %515 = load i8, ptr %514, align 1, !tbaa !9
  %516 = icmp eq i8 %515, -54
  br i1 %516, label %517, label %1100

517:                                              ; preds = %513
  %518 = getelementptr inbounds i8, ptr %162, i64 2
  %519 = load i8, ptr %518, align 1, !tbaa !9
  %520 = freeze i8 %519
  %521 = icmp eq i8 %520, -66
  br i1 %521, label %1049, label %1100

522:                                              ; preds = %511
  %523 = getelementptr inbounds i8, ptr %162, i64 1
  %524 = load i8, ptr %523, align 1, !tbaa !9
  switch i8 %524, label %1100 [
    i8 102, label %525
    i8 105, label %1049
    i8 108, label %1049
  ]

525:                                              ; preds = %522
  %526 = getelementptr inbounds i8, ptr %162, i64 2
  %527 = load i8, ptr %526, align 1, !tbaa !9
  %528 = icmp eq i8 %527, 105
  %529 = icmp eq i8 %527, 108
  %530 = or i1 %528, %529
  %531 = select i1 %530, i32 3, i32 2
  br label %1049

532:                                              ; preds = %511
  %533 = getelementptr inbounds i8, ptr %162, i64 1
  %534 = load i8, ptr %533, align 1, !tbaa !9
  %535 = icmp eq i8 %534, -52
  br i1 %535, label %536, label %1100

536:                                              ; preds = %532
  %537 = getelementptr inbounds i8, ptr %162, i64 2
  %538 = load i8, ptr %537, align 1, !tbaa !9
  %539 = freeze i8 %538
  %540 = icmp eq i8 %539, -79
  br i1 %540, label %1049, label %1100

541:                                              ; preds = %511
  %542 = getelementptr inbounds i8, ptr %162, i64 1
  %543 = load i8, ptr %542, align 1, !tbaa !9
  %544 = icmp eq i8 %543, -52
  br i1 %544, label %545, label %1100

545:                                              ; preds = %541
  %546 = getelementptr inbounds i8, ptr %162, i64 2
  %547 = load i8, ptr %546, align 1, !tbaa !9
  %548 = freeze i8 %547
  %549 = icmp eq i8 %548, -121
  br i1 %549, label %1049, label %1100

550:                                              ; preds = %511
  %551 = getelementptr inbounds i8, ptr %162, i64 1
  %552 = load i8, ptr %551, align 1, !tbaa !9
  %553 = icmp eq i8 %552, -52
  br i1 %553, label %554, label %1100

554:                                              ; preds = %550
  %555 = getelementptr inbounds i8, ptr %162, i64 2
  %556 = load i8, ptr %555, align 1, !tbaa !9
  %557 = freeze i8 %556
  %558 = icmp eq i8 %557, -116
  br i1 %558, label %1049, label %1100

559:                                              ; preds = %511
  %560 = getelementptr inbounds i8, ptr %162, i64 1
  %561 = load i8, ptr %560, align 1, !tbaa !9
  %562 = add i8 %561, -115
  %563 = icmp ult i8 %562, 2
  br i1 %563, label %1049, label %1100

564:                                              ; preds = %511
  %565 = getelementptr inbounds i8, ptr %162, i64 1
  %566 = load i8, ptr %565, align 1, !tbaa !9
  %567 = icmp eq i8 %566, -52
  br i1 %567, label %568, label %1100

568:                                              ; preds = %564
  %569 = getelementptr inbounds i8, ptr %162, i64 2
  %570 = load i8, ptr %569, align 1, !tbaa !9
  %571 = freeze i8 %570
  %572 = icmp eq i8 %571, -120
  br i1 %572, label %1049, label %1100

573:                                              ; preds = %511, %511
  %574 = getelementptr inbounds i8, ptr %162, i64 1
  %575 = load i8, ptr %574, align 1, !tbaa !9
  %576 = icmp eq i8 %575, -52
  br i1 %576, label %577, label %1100

577:                                              ; preds = %573
  %578 = getelementptr inbounds i8, ptr %162, i64 2
  %579 = load i8, ptr %578, align 1, !tbaa !9
  %580 = freeze i8 %579
  %581 = icmp eq i8 %580, -118
  br i1 %581, label %1049, label %1100

582:                                              ; preds = %511
  %583 = getelementptr inbounds i8, ptr %162, i64 1
  %584 = load i8, ptr %583, align 1, !tbaa !9
  %585 = icmp eq i8 %584, -65
  br i1 %585, label %586, label %1100

586:                                              ; preds = %582
  %587 = getelementptr inbounds i8, ptr %162, i64 2
  %588 = load i8, ptr %587, align 1, !tbaa !9
  %589 = icmp eq i8 %588, -59
  br i1 %589, label %590, label %1100

590:                                              ; preds = %586
  %591 = getelementptr inbounds i8, ptr %162, i64 3
  %592 = load i8, ptr %591, align 1, !tbaa !9
  %593 = freeze i8 %592
  %594 = icmp eq i8 %593, -65
  br i1 %594, label %1049, label %1100

595:                                              ; preds = %511
  %596 = getelementptr inbounds i8, ptr %162, i64 1
  %597 = load i8, ptr %596, align 1, !tbaa !9
  %598 = icmp eq i8 %597, -68
  br i1 %598, label %599, label %1100

599:                                              ; preds = %595
  %600 = getelementptr inbounds i8, ptr %162, i64 2
  %601 = load i8, ptr %600, align 1, !tbaa !9
  %602 = freeze i8 %601
  %603 = icmp eq i8 %602, 110
  br i1 %603, label %1049, label %1100

604:                                              ; preds = %511
  %605 = getelementptr inbounds i8, ptr %162, i64 1
  %606 = load i8, ptr %605, align 1, !tbaa !9
  %607 = and i8 %606, -3
  %608 = icmp eq i8 %607, -84
  br i1 %608, label %609, label %618

609:                                              ; preds = %604
  %610 = getelementptr inbounds i8, ptr %162, i64 2
  %611 = load i8, ptr %610, align 1, !tbaa !9
  %612 = icmp eq i8 %611, -50
  br i1 %612, label %613, label %1100

613:                                              ; preds = %609
  %614 = getelementptr inbounds i8, ptr %162, i64 3
  %615 = load i8, ptr %614, align 1, !tbaa !9
  %616 = freeze i8 %615
  %617 = icmp eq i8 %616, -71
  br i1 %617, label %1049, label %1100

618:                                              ; preds = %604
  switch i8 %606, label %1100 [
    i8 -79, label %619
    i8 -73, label %619
    i8 -71, label %631
  ]

619:                                              ; preds = %618, %618
  %620 = getelementptr inbounds i8, ptr %162, i64 2
  %621 = load i8, ptr %620, align 1, !tbaa !9
  switch i8 %621, label %1100 [
    i8 -51, label %622
    i8 -50, label %626
  ]

622:                                              ; preds = %619
  %623 = getelementptr inbounds i8, ptr %162, i64 3
  %624 = load i8, ptr %623, align 1, !tbaa !9
  %625 = icmp eq i8 %624, -126
  br i1 %625, label %1049, label %1100

626:                                              ; preds = %619
  %627 = getelementptr inbounds i8, ptr %162, i64 3
  %628 = load i8, ptr %627, align 1, !tbaa !9
  %629 = freeze i8 %628
  %630 = icmp eq i8 %629, -71
  br i1 %630, label %1049, label %1100

631:                                              ; preds = %618
  %632 = getelementptr inbounds i8, ptr %162, i64 2
  %633 = load i8, ptr %632, align 1, !tbaa !9
  %634 = icmp eq i8 %633, -51
  br i1 %634, label %635, label %1100

635:                                              ; preds = %631
  %636 = getelementptr inbounds i8, ptr %162, i64 3
  %637 = load i8, ptr %636, align 1, !tbaa !9
  %638 = freeze i8 %637
  %639 = icmp eq i8 %638, -126
  br i1 %639, label %1049, label %1100

640:                                              ; preds = %511
  %641 = getelementptr inbounds i8, ptr %162, i64 1
  %642 = load i8, ptr %641, align 1, !tbaa !9
  switch i8 %642, label %1100 [
    i8 -127, label %643
    i8 -123, label %652
    i8 -119, label %664
    i8 -114, label %676
  ]

643:                                              ; preds = %640
  %644 = getelementptr inbounds i8, ptr %162, i64 2
  %645 = load i8, ptr %644, align 1, !tbaa !9
  %646 = icmp eq i8 %645, -52
  br i1 %646, label %647, label %1100

647:                                              ; preds = %643
  %648 = getelementptr inbounds i8, ptr %162, i64 3
  %649 = load i8, ptr %648, align 1, !tbaa !9
  %650 = freeze i8 %649
  %651 = icmp eq i8 %650, -109
  br i1 %651, label %1049, label %1100

652:                                              ; preds = %640
  %653 = getelementptr inbounds i8, ptr %162, i64 2
  %654 = load i8, ptr %653, align 1, !tbaa !9
  switch i8 %654, label %1100 [
    i8 -52, label %655
    i8 -51, label %659
  ]

655:                                              ; preds = %652
  %656 = getelementptr inbounds i8, ptr %162, i64 3
  %657 = load i8, ptr %656, align 1, !tbaa !9
  %658 = icmp eq i8 %657, -109
  br i1 %658, label %1049, label %1100

659:                                              ; preds = %652
  %660 = getelementptr inbounds i8, ptr %162, i64 3
  %661 = load i8, ptr %660, align 1, !tbaa !9
  %662 = freeze i8 %661
  %663 = icmp eq i8 %662, -126
  br i1 %663, label %1049, label %1100

664:                                              ; preds = %640
  %665 = getelementptr inbounds i8, ptr %162, i64 2
  %666 = load i8, ptr %665, align 1, !tbaa !9
  switch i8 %666, label %1100 [
    i8 -51, label %667
    i8 -50, label %671
  ]

667:                                              ; preds = %664
  %668 = getelementptr inbounds i8, ptr %162, i64 3
  %669 = load i8, ptr %668, align 1, !tbaa !9
  %670 = icmp eq i8 %669, -126
  br i1 %670, label %1049, label %1100

671:                                              ; preds = %664
  %672 = getelementptr inbounds i8, ptr %162, i64 3
  %673 = load i8, ptr %672, align 1, !tbaa !9
  %674 = freeze i8 %673
  %675 = icmp eq i8 %674, -71
  br i1 %675, label %1049, label %1100

676:                                              ; preds = %640
  %677 = getelementptr inbounds i8, ptr %162, i64 2
  %678 = load i8, ptr %677, align 1, !tbaa !9
  %679 = icmp eq i8 %678, -50
  br i1 %679, label %680, label %1100

680:                                              ; preds = %676
  %681 = getelementptr inbounds i8, ptr %162, i64 3
  %682 = load i8, ptr %681, align 1, !tbaa !9
  %683 = freeze i8 %682
  %684 = icmp eq i8 %683, -71
  br i1 %684, label %1049, label %1100

685:                                              ; preds = %511
  %686 = getelementptr inbounds i8, ptr %162, i64 1
  %687 = load i8, ptr %686, align 1, !tbaa !9
  switch i8 %687, label %1100 [
    i8 -91, label %688
    i8 -76, label %697
    i8 -66, label %704
  ]

688:                                              ; preds = %685
  %689 = getelementptr inbounds i8, ptr %162, i64 2
  %690 = load i8, ptr %689, align 1, !tbaa !9
  %691 = icmp eq i8 %690, -42
  br i1 %691, label %692, label %1100

692:                                              ; preds = %688
  %693 = getelementptr inbounds i8, ptr %162, i64 3
  %694 = load i8, ptr %693, align 1, !tbaa !9
  %695 = freeze i8 %694
  %696 = icmp eq i8 %695, -126
  br i1 %696, label %1049, label %1100

697:                                              ; preds = %685
  %698 = getelementptr inbounds i8, ptr %162, i64 2
  %699 = load i8, ptr %698, align 1, !tbaa !9
  %700 = icmp eq i8 %699, -43
  br i1 %700, label %701, label %1100

701:                                              ; preds = %697
  %702 = getelementptr inbounds i8, ptr %162, i64 3
  %703 = load i8, ptr %702, align 1, !tbaa !9
  switch i8 %703, label %1100 [
    i8 -83, label %1049
    i8 -85, label %1049
    i8 -91, label %1049
    i8 -74, label %1049
  ]

704:                                              ; preds = %685
  %705 = getelementptr inbounds i8, ptr %162, i64 2
  %706 = load i8, ptr %705, align 1, !tbaa !9
  %707 = icmp eq i8 %706, -43
  br i1 %707, label %708, label %1100

708:                                              ; preds = %704
  %709 = getelementptr inbounds i8, ptr %162, i64 3
  %710 = load i8, ptr %709, align 1, !tbaa !9
  %711 = freeze i8 %710
  %712 = icmp eq i8 %711, -74
  br i1 %712, label %1049, label %1100

713:                                              ; preds = %511
  %714 = getelementptr inbounds i8, ptr %162, i64 1
  %715 = load i8, ptr %714, align 1, !tbaa !9
  switch i8 %715, label %1100 [
    i8 -68, label %716
    i8 -67, label %730
  ]

716:                                              ; preds = %713
  %717 = getelementptr inbounds i8, ptr %162, i64 2
  %718 = load i8, ptr %717, align 1, !tbaa !9
  %719 = and i8 %718, -40
  %720 = icmp eq i8 %719, -128
  br i1 %720, label %721, label %1100

721:                                              ; preds = %716
  %722 = getelementptr inbounds i8, ptr %162, i64 3
  %723 = load i8, ptr %722, align 1, !tbaa !9
  %724 = icmp eq i8 %723, -50
  br i1 %724, label %725, label %1100

725:                                              ; preds = %721
  %726 = getelementptr inbounds i8, ptr %162, i64 4
  %727 = load i8, ptr %726, align 1, !tbaa !9
  %728 = freeze i8 %727
  %729 = icmp eq i8 %728, -71
  br i1 %729, label %1049, label %1100

730:                                              ; preds = %713
  %731 = getelementptr inbounds i8, ptr %162, i64 2
  %732 = load i8, ptr %731, align 1, !tbaa !9
  %733 = zext i8 %732 to i32
  %734 = and i32 %733, 248
  %735 = icmp eq i32 %734, 160
  %736 = and i32 %733, 251
  %737 = icmp eq i32 %736, 176
  %738 = or i1 %735, %737
  %739 = icmp eq i8 %732, -68
  %740 = or i1 %739, %738
  br i1 %740, label %741, label %1100

741:                                              ; preds = %730
  %742 = getelementptr inbounds i8, ptr %162, i64 3
  %743 = load i8, ptr %742, align 1, !tbaa !9
  %744 = icmp eq i8 %743, -50
  br i1 %744, label %745, label %1100

745:                                              ; preds = %741
  %746 = getelementptr inbounds i8, ptr %162, i64 4
  %747 = load i8, ptr %746, align 1, !tbaa !9
  %748 = freeze i8 %747
  %749 = icmp eq i8 %748, -71
  br i1 %749, label %1049, label %1100

750:                                              ; preds = %509
  %751 = icmp sgt i64 %204, 3
  br i1 %751, label %752, label %954

752:                                              ; preds = %750
  %753 = load i8, ptr %162, align 1, !tbaa !9
  switch i8 %753, label %1100 [
    i8 97, label %754
    i8 102, label %763
    i8 104, label %773
    i8 105, label %782
    i8 106, label %791
    i8 115, label %800
    i8 116, label %805
    i8 119, label %814
    i8 121, label %814
    i8 -59, label %823
    i8 -54, label %836
    i8 -50, label %845
    i8 -49, label %881
    i8 -43, label %926
  ]

754:                                              ; preds = %752
  %755 = getelementptr inbounds i8, ptr %162, i64 1
  %756 = load i8, ptr %755, align 1, !tbaa !9
  %757 = icmp eq i8 %756, -54
  br i1 %757, label %758, label %1100

758:                                              ; preds = %754
  %759 = getelementptr inbounds i8, ptr %162, i64 2
  %760 = load i8, ptr %759, align 1, !tbaa !9
  %761 = freeze i8 %760
  %762 = icmp eq i8 %761, -66
  br i1 %762, label %1049, label %1100

763:                                              ; preds = %752
  %764 = getelementptr inbounds i8, ptr %162, i64 1
  %765 = load i8, ptr %764, align 1, !tbaa !9
  switch i8 %765, label %1100 [
    i8 102, label %766
    i8 105, label %1049
    i8 108, label %1049
  ]

766:                                              ; preds = %763
  %767 = getelementptr inbounds i8, ptr %162, i64 2
  %768 = load i8, ptr %767, align 1, !tbaa !9
  %769 = icmp eq i8 %768, 105
  %770 = icmp eq i8 %768, 108
  %771 = or i1 %769, %770
  %772 = select i1 %771, i32 3, i32 2
  br label %1049

773:                                              ; preds = %752
  %774 = getelementptr inbounds i8, ptr %162, i64 1
  %775 = load i8, ptr %774, align 1, !tbaa !9
  %776 = icmp eq i8 %775, -52
  br i1 %776, label %777, label %1100

777:                                              ; preds = %773
  %778 = getelementptr inbounds i8, ptr %162, i64 2
  %779 = load i8, ptr %778, align 1, !tbaa !9
  %780 = freeze i8 %779
  %781 = icmp eq i8 %780, -79
  br i1 %781, label %1049, label %1100

782:                                              ; preds = %752
  %783 = getelementptr inbounds i8, ptr %162, i64 1
  %784 = load i8, ptr %783, align 1, !tbaa !9
  %785 = icmp eq i8 %784, -52
  br i1 %785, label %786, label %1100

786:                                              ; preds = %782
  %787 = getelementptr inbounds i8, ptr %162, i64 2
  %788 = load i8, ptr %787, align 1, !tbaa !9
  %789 = freeze i8 %788
  %790 = icmp eq i8 %789, -121
  br i1 %790, label %1049, label %1100

791:                                              ; preds = %752
  %792 = getelementptr inbounds i8, ptr %162, i64 1
  %793 = load i8, ptr %792, align 1, !tbaa !9
  %794 = icmp eq i8 %793, -52
  br i1 %794, label %795, label %1100

795:                                              ; preds = %791
  %796 = getelementptr inbounds i8, ptr %162, i64 2
  %797 = load i8, ptr %796, align 1, !tbaa !9
  %798 = freeze i8 %797
  %799 = icmp eq i8 %798, -116
  br i1 %799, label %1049, label %1100

800:                                              ; preds = %752
  %801 = getelementptr inbounds i8, ptr %162, i64 1
  %802 = load i8, ptr %801, align 1, !tbaa !9
  %803 = add i8 %802, -115
  %804 = icmp ult i8 %803, 2
  br i1 %804, label %1049, label %1100

805:                                              ; preds = %752
  %806 = getelementptr inbounds i8, ptr %162, i64 1
  %807 = load i8, ptr %806, align 1, !tbaa !9
  %808 = icmp eq i8 %807, -52
  br i1 %808, label %809, label %1100

809:                                              ; preds = %805
  %810 = getelementptr inbounds i8, ptr %162, i64 2
  %811 = load i8, ptr %810, align 1, !tbaa !9
  %812 = freeze i8 %811
  %813 = icmp eq i8 %812, -120
  br i1 %813, label %1049, label %1100

814:                                              ; preds = %752, %752
  %815 = getelementptr inbounds i8, ptr %162, i64 1
  %816 = load i8, ptr %815, align 1, !tbaa !9
  %817 = icmp eq i8 %816, -52
  br i1 %817, label %818, label %1100

818:                                              ; preds = %814
  %819 = getelementptr inbounds i8, ptr %162, i64 2
  %820 = load i8, ptr %819, align 1, !tbaa !9
  %821 = freeze i8 %820
  %822 = icmp eq i8 %821, -118
  br i1 %822, label %1049, label %1100

823:                                              ; preds = %752
  %824 = getelementptr inbounds i8, ptr %162, i64 1
  %825 = load i8, ptr %824, align 1, !tbaa !9
  %826 = icmp eq i8 %825, -65
  br i1 %826, label %827, label %1100

827:                                              ; preds = %823
  %828 = getelementptr inbounds i8, ptr %162, i64 2
  %829 = load i8, ptr %828, align 1, !tbaa !9
  %830 = icmp eq i8 %829, -59
  br i1 %830, label %831, label %1100

831:                                              ; preds = %827
  %832 = getelementptr inbounds i8, ptr %162, i64 3
  %833 = load i8, ptr %832, align 1, !tbaa !9
  %834 = freeze i8 %833
  %835 = icmp eq i8 %834, -65
  br i1 %835, label %1049, label %1100

836:                                              ; preds = %752
  %837 = getelementptr inbounds i8, ptr %162, i64 1
  %838 = load i8, ptr %837, align 1, !tbaa !9
  %839 = icmp eq i8 %838, -68
  br i1 %839, label %840, label %1100

840:                                              ; preds = %836
  %841 = getelementptr inbounds i8, ptr %162, i64 2
  %842 = load i8, ptr %841, align 1, !tbaa !9
  %843 = freeze i8 %842
  %844 = icmp eq i8 %843, 110
  br i1 %844, label %1049, label %1100

845:                                              ; preds = %752
  %846 = getelementptr inbounds i8, ptr %162, i64 1
  %847 = load i8, ptr %846, align 1, !tbaa !9
  %848 = and i8 %847, -3
  %849 = icmp eq i8 %848, -84
  br i1 %849, label %850, label %859

850:                                              ; preds = %845
  %851 = getelementptr inbounds i8, ptr %162, i64 2
  %852 = load i8, ptr %851, align 1, !tbaa !9
  %853 = icmp eq i8 %852, -50
  br i1 %853, label %854, label %1100

854:                                              ; preds = %850
  %855 = getelementptr inbounds i8, ptr %162, i64 3
  %856 = load i8, ptr %855, align 1, !tbaa !9
  %857 = freeze i8 %856
  %858 = icmp eq i8 %857, -71
  br i1 %858, label %1049, label %1100

859:                                              ; preds = %845
  switch i8 %847, label %1100 [
    i8 -79, label %860
    i8 -73, label %860
    i8 -71, label %872
  ]

860:                                              ; preds = %859, %859
  %861 = getelementptr inbounds i8, ptr %162, i64 2
  %862 = load i8, ptr %861, align 1, !tbaa !9
  switch i8 %862, label %1100 [
    i8 -51, label %863
    i8 -50, label %867
  ]

863:                                              ; preds = %860
  %864 = getelementptr inbounds i8, ptr %162, i64 3
  %865 = load i8, ptr %864, align 1, !tbaa !9
  %866 = icmp eq i8 %865, -126
  br i1 %866, label %1049, label %1100

867:                                              ; preds = %860
  %868 = getelementptr inbounds i8, ptr %162, i64 3
  %869 = load i8, ptr %868, align 1, !tbaa !9
  %870 = freeze i8 %869
  %871 = icmp eq i8 %870, -71
  br i1 %871, label %1049, label %1100

872:                                              ; preds = %859
  %873 = getelementptr inbounds i8, ptr %162, i64 2
  %874 = load i8, ptr %873, align 1, !tbaa !9
  %875 = icmp eq i8 %874, -51
  br i1 %875, label %876, label %1100

876:                                              ; preds = %872
  %877 = getelementptr inbounds i8, ptr %162, i64 3
  %878 = load i8, ptr %877, align 1, !tbaa !9
  %879 = freeze i8 %878
  %880 = icmp eq i8 %879, -126
  br i1 %880, label %1049, label %1100

881:                                              ; preds = %752
  %882 = getelementptr inbounds i8, ptr %162, i64 1
  %883 = load i8, ptr %882, align 1, !tbaa !9
  switch i8 %883, label %1100 [
    i8 -127, label %884
    i8 -123, label %893
    i8 -119, label %905
    i8 -114, label %917
  ]

884:                                              ; preds = %881
  %885 = getelementptr inbounds i8, ptr %162, i64 2
  %886 = load i8, ptr %885, align 1, !tbaa !9
  %887 = icmp eq i8 %886, -52
  br i1 %887, label %888, label %1100

888:                                              ; preds = %884
  %889 = getelementptr inbounds i8, ptr %162, i64 3
  %890 = load i8, ptr %889, align 1, !tbaa !9
  %891 = freeze i8 %890
  %892 = icmp eq i8 %891, -109
  br i1 %892, label %1049, label %1100

893:                                              ; preds = %881
  %894 = getelementptr inbounds i8, ptr %162, i64 2
  %895 = load i8, ptr %894, align 1, !tbaa !9
  switch i8 %895, label %1100 [
    i8 -52, label %896
    i8 -51, label %900
  ]

896:                                              ; preds = %893
  %897 = getelementptr inbounds i8, ptr %162, i64 3
  %898 = load i8, ptr %897, align 1, !tbaa !9
  %899 = icmp eq i8 %898, -109
  br i1 %899, label %1049, label %1100

900:                                              ; preds = %893
  %901 = getelementptr inbounds i8, ptr %162, i64 3
  %902 = load i8, ptr %901, align 1, !tbaa !9
  %903 = freeze i8 %902
  %904 = icmp eq i8 %903, -126
  br i1 %904, label %1049, label %1100

905:                                              ; preds = %881
  %906 = getelementptr inbounds i8, ptr %162, i64 2
  %907 = load i8, ptr %906, align 1, !tbaa !9
  switch i8 %907, label %1100 [
    i8 -51, label %908
    i8 -50, label %912
  ]

908:                                              ; preds = %905
  %909 = getelementptr inbounds i8, ptr %162, i64 3
  %910 = load i8, ptr %909, align 1, !tbaa !9
  %911 = icmp eq i8 %910, -126
  br i1 %911, label %1049, label %1100

912:                                              ; preds = %905
  %913 = getelementptr inbounds i8, ptr %162, i64 3
  %914 = load i8, ptr %913, align 1, !tbaa !9
  %915 = freeze i8 %914
  %916 = icmp eq i8 %915, -71
  br i1 %916, label %1049, label %1100

917:                                              ; preds = %881
  %918 = getelementptr inbounds i8, ptr %162, i64 2
  %919 = load i8, ptr %918, align 1, !tbaa !9
  %920 = icmp eq i8 %919, -50
  br i1 %920, label %921, label %1100

921:                                              ; preds = %917
  %922 = getelementptr inbounds i8, ptr %162, i64 3
  %923 = load i8, ptr %922, align 1, !tbaa !9
  %924 = freeze i8 %923
  %925 = icmp eq i8 %924, -71
  br i1 %925, label %1049, label %1100

926:                                              ; preds = %752
  %927 = getelementptr inbounds i8, ptr %162, i64 1
  %928 = load i8, ptr %927, align 1, !tbaa !9
  switch i8 %928, label %1100 [
    i8 -91, label %929
    i8 -76, label %938
    i8 -66, label %945
  ]

929:                                              ; preds = %926
  %930 = getelementptr inbounds i8, ptr %162, i64 2
  %931 = load i8, ptr %930, align 1, !tbaa !9
  %932 = icmp eq i8 %931, -42
  br i1 %932, label %933, label %1100

933:                                              ; preds = %929
  %934 = getelementptr inbounds i8, ptr %162, i64 3
  %935 = load i8, ptr %934, align 1, !tbaa !9
  %936 = freeze i8 %935
  %937 = icmp eq i8 %936, -126
  br i1 %937, label %1049, label %1100

938:                                              ; preds = %926
  %939 = getelementptr inbounds i8, ptr %162, i64 2
  %940 = load i8, ptr %939, align 1, !tbaa !9
  %941 = icmp eq i8 %940, -43
  br i1 %941, label %942, label %1100

942:                                              ; preds = %938
  %943 = getelementptr inbounds i8, ptr %162, i64 3
  %944 = load i8, ptr %943, align 1, !tbaa !9
  switch i8 %944, label %1100 [
    i8 -83, label %1049
    i8 -85, label %1049
    i8 -91, label %1049
    i8 -74, label %1049
  ]

945:                                              ; preds = %926
  %946 = getelementptr inbounds i8, ptr %162, i64 2
  %947 = load i8, ptr %946, align 1, !tbaa !9
  %948 = icmp eq i8 %947, -43
  br i1 %948, label %949, label %1100

949:                                              ; preds = %945
  %950 = getelementptr inbounds i8, ptr %162, i64 3
  %951 = load i8, ptr %950, align 1, !tbaa !9
  %952 = freeze i8 %951
  %953 = icmp eq i8 %952, -74
  br i1 %953, label %1049, label %1100

954:                                              ; preds = %750
  %955 = icmp eq i64 %204, 3
  br i1 %955, label %956, label %1036

956:                                              ; preds = %954
  %957 = load i8, ptr %162, align 1, !tbaa !9
  switch i8 %957, label %1100 [
    i8 97, label %958
    i8 102, label %967
    i8 104, label %977
    i8 105, label %986
    i8 106, label %995
    i8 115, label %1004
    i8 116, label %1009
    i8 119, label %1018
    i8 121, label %1018
    i8 -54, label %1027
  ]

958:                                              ; preds = %956
  %959 = getelementptr inbounds i8, ptr %162, i64 1
  %960 = load i8, ptr %959, align 1, !tbaa !9
  %961 = icmp eq i8 %960, -54
  br i1 %961, label %962, label %1100

962:                                              ; preds = %958
  %963 = getelementptr inbounds i8, ptr %162, i64 2
  %964 = load i8, ptr %963, align 1, !tbaa !9
  %965 = freeze i8 %964
  %966 = icmp eq i8 %965, -66
  br i1 %966, label %1049, label %1100

967:                                              ; preds = %956
  %968 = getelementptr inbounds i8, ptr %162, i64 1
  %969 = load i8, ptr %968, align 1, !tbaa !9
  switch i8 %969, label %1100 [
    i8 102, label %970
    i8 105, label %1049
    i8 108, label %1049
  ]

970:                                              ; preds = %967
  %971 = getelementptr inbounds i8, ptr %162, i64 2
  %972 = load i8, ptr %971, align 1, !tbaa !9
  %973 = icmp eq i8 %972, 105
  %974 = icmp eq i8 %972, 108
  %975 = or i1 %973, %974
  %976 = select i1 %975, i32 3, i32 2
  br label %1049

977:                                              ; preds = %956
  %978 = getelementptr inbounds i8, ptr %162, i64 1
  %979 = load i8, ptr %978, align 1, !tbaa !9
  %980 = icmp eq i8 %979, -52
  br i1 %980, label %981, label %1100

981:                                              ; preds = %977
  %982 = getelementptr inbounds i8, ptr %162, i64 2
  %983 = load i8, ptr %982, align 1, !tbaa !9
  %984 = freeze i8 %983
  %985 = icmp eq i8 %984, -79
  br i1 %985, label %1049, label %1100

986:                                              ; preds = %956
  %987 = getelementptr inbounds i8, ptr %162, i64 1
  %988 = load i8, ptr %987, align 1, !tbaa !9
  %989 = icmp eq i8 %988, -52
  br i1 %989, label %990, label %1100

990:                                              ; preds = %986
  %991 = getelementptr inbounds i8, ptr %162, i64 2
  %992 = load i8, ptr %991, align 1, !tbaa !9
  %993 = freeze i8 %992
  %994 = icmp eq i8 %993, -121
  br i1 %994, label %1049, label %1100

995:                                              ; preds = %956
  %996 = getelementptr inbounds i8, ptr %162, i64 1
  %997 = load i8, ptr %996, align 1, !tbaa !9
  %998 = icmp eq i8 %997, -52
  br i1 %998, label %999, label %1100

999:                                              ; preds = %995
  %1000 = getelementptr inbounds i8, ptr %162, i64 2
  %1001 = load i8, ptr %1000, align 1, !tbaa !9
  %1002 = freeze i8 %1001
  %1003 = icmp eq i8 %1002, -116
  br i1 %1003, label %1049, label %1100

1004:                                             ; preds = %956
  %1005 = getelementptr inbounds i8, ptr %162, i64 1
  %1006 = load i8, ptr %1005, align 1, !tbaa !9
  %1007 = add i8 %1006, -115
  %1008 = icmp ult i8 %1007, 2
  br i1 %1008, label %1049, label %1100

1009:                                             ; preds = %956
  %1010 = getelementptr inbounds i8, ptr %162, i64 1
  %1011 = load i8, ptr %1010, align 1, !tbaa !9
  %1012 = icmp eq i8 %1011, -52
  br i1 %1012, label %1013, label %1100

1013:                                             ; preds = %1009
  %1014 = getelementptr inbounds i8, ptr %162, i64 2
  %1015 = load i8, ptr %1014, align 1, !tbaa !9
  %1016 = freeze i8 %1015
  %1017 = icmp eq i8 %1016, -120
  br i1 %1017, label %1049, label %1100

1018:                                             ; preds = %956, %956
  %1019 = getelementptr inbounds i8, ptr %162, i64 1
  %1020 = load i8, ptr %1019, align 1, !tbaa !9
  %1021 = icmp eq i8 %1020, -52
  br i1 %1021, label %1022, label %1100

1022:                                             ; preds = %1018
  %1023 = getelementptr inbounds i8, ptr %162, i64 2
  %1024 = load i8, ptr %1023, align 1, !tbaa !9
  %1025 = freeze i8 %1024
  %1026 = icmp eq i8 %1025, -118
  br i1 %1026, label %1049, label %1100

1027:                                             ; preds = %956
  %1028 = getelementptr inbounds i8, ptr %162, i64 1
  %1029 = load i8, ptr %1028, align 1, !tbaa !9
  %1030 = icmp eq i8 %1029, -68
  br i1 %1030, label %1031, label %1100

1031:                                             ; preds = %1027
  %1032 = getelementptr inbounds i8, ptr %162, i64 2
  %1033 = load i8, ptr %1032, align 1, !tbaa !9
  %1034 = freeze i8 %1033
  %1035 = icmp eq i8 %1034, 110
  br i1 %1035, label %1049, label %1100

1036:                                             ; preds = %954
  %1037 = icmp sgt i64 %204, 1
  br i1 %1037, label %1038, label %1100

1038:                                             ; preds = %1036
  %1039 = load i8, ptr %162, align 1, !tbaa !9
  switch i8 %1039, label %1100 [
    i8 102, label %1040
    i8 115, label %1043
  ]

1040:                                             ; preds = %1038
  %1041 = getelementptr inbounds i8, ptr %162, i64 1
  %1042 = load i8, ptr %1041, align 1, !tbaa !9
  switch i8 %1042, label %1100 [
    i8 102, label %1049
    i8 105, label %1049
    i8 108, label %1049
  ]

1043:                                             ; preds = %1038
  %1044 = getelementptr inbounds i8, ptr %162, i64 1
  %1045 = load i8, ptr %1044, align 1, !tbaa !9
  %1046 = freeze i8 %1045
  %1047 = add i8 %1046, -115
  %1048 = icmp ult i8 %1047, 2
  br i1 %1048, label %1049, label %1100

1049:                                             ; preds = %1004, %800, %559, %424, %402, %326, %255, %908, %896, %863, %667, %655, %622, %383, %347, %1043, %1040, %1040, %1040, %1031, %1022, %1013, %999, %990, %981, %967, %967, %962, %949, %933, %921, %912, %900, %888, %876, %867, %854, %840, %831, %818, %809, %795, %786, %777, %763, %763, %758, %745, %725, %708, %692, %680, %671, %659, %647, %635, %626, %613, %599, %590, %577, %568, %554, %545, %536, %522, %522, %517, %504, %484, %467, %451, %439, %430, %420, %408, %393, %388, %369, %357, %352, %332, %322, %309, %295, %286, %273, %264, %250, %241, %232, %218, %218, %213, %221, %396, %766, %970, %525, %460, %460, %460, %460, %701, %701, %701, %701, %942, %942, %942, %942
  %1050 = phi i8 [ 102, %221 ], [ -49, %396 ], [ 102, %525 ], [ 102, %766 ], [ 102, %970 ], [ -43, %460 ], [ -43, %460 ], [ -43, %460 ], [ -43, %460 ], [ -43, %701 ], [ -43, %701 ], [ -43, %701 ], [ -43, %701 ], [ -43, %942 ], [ -43, %942 ], [ -43, %942 ], [ -43, %942 ], [ 97, %213 ], [ 102, %218 ], [ 102, %218 ], [ 104, %232 ], [ 105, %241 ], [ 106, %250 ], [ 116, %264 ], [ %208, %273 ], [ -59, %286 ], [ -54, %295 ], [ -50, %309 ], [ -50, %322 ], [ -50, %332 ], [ -50, %352 ], [ -50, %357 ], [ -49, %369 ], [ -49, %388 ], [ -49, %393 ], [ -49, %408 ], [ -49, %420 ], [ -49, %430 ], [ -49, %439 ], [ -43, %451 ], [ -43, %467 ], [ -31, %484 ], [ -31, %504 ], [ 97, %517 ], [ 102, %522 ], [ 102, %522 ], [ 104, %536 ], [ 105, %545 ], [ 106, %554 ], [ 116, %568 ], [ %512, %577 ], [ -59, %590 ], [ -54, %599 ], [ -50, %613 ], [ -50, %626 ], [ -50, %635 ], [ -49, %647 ], [ -49, %659 ], [ -49, %671 ], [ -49, %680 ], [ -43, %692 ], [ -43, %708 ], [ -31, %725 ], [ -31, %745 ], [ 97, %758 ], [ 102, %763 ], [ 102, %763 ], [ 104, %777 ], [ 105, %786 ], [ 106, %795 ], [ 116, %809 ], [ %753, %818 ], [ -59, %831 ], [ -54, %840 ], [ -50, %854 ], [ -50, %867 ], [ -50, %876 ], [ -49, %888 ], [ -49, %900 ], [ -49, %912 ], [ -49, %921 ], [ -43, %933 ], [ -43, %949 ], [ 97, %962 ], [ 102, %967 ], [ 102, %967 ], [ 104, %981 ], [ 105, %990 ], [ 106, %999 ], [ 116, %1013 ], [ %957, %1022 ], [ -54, %1031 ], [ 102, %1040 ], [ 102, %1040 ], [ 102, %1040 ], [ 115, %1043 ], [ -50, %347 ], [ -49, %383 ], [ -50, %622 ], [ -49, %655 ], [ -49, %667 ], [ -50, %863 ], [ -49, %896 ], [ -49, %908 ], [ 115, %255 ], [ -50, %326 ], [ -49, %402 ], [ -49, %424 ], [ 115, %559 ], [ 115, %800 ], [ 115, %1004 ]
  %1051 = phi i32 [ %227, %221 ], [ %401, %396 ], [ %531, %525 ], [ %772, %766 ], [ %976, %970 ], [ 4, %460 ], [ 4, %460 ], [ 4, %460 ], [ 4, %460 ], [ 4, %701 ], [ 4, %701 ], [ 4, %701 ], [ 4, %701 ], [ 4, %942 ], [ 4, %942 ], [ 4, %942 ], [ 4, %942 ], [ 3, %213 ], [ 2, %218 ], [ 2, %218 ], [ 3, %232 ], [ 3, %241 ], [ 3, %250 ], [ 3, %264 ], [ 3, %273 ], [ 4, %286 ], [ 3, %295 ], [ 4, %309 ], [ 4, %322 ], [ 4, %332 ], [ 6, %352 ], [ 4, %357 ], [ 4, %369 ], [ 6, %388 ], [ 4, %393 ], [ 4, %408 ], [ 4, %420 ], [ 4, %430 ], [ 4, %439 ], [ 4, %451 ], [ 4, %467 ], [ 5, %484 ], [ 5, %504 ], [ 3, %517 ], [ 2, %522 ], [ 2, %522 ], [ 3, %536 ], [ 3, %545 ], [ 3, %554 ], [ 3, %568 ], [ 3, %577 ], [ 4, %590 ], [ 3, %599 ], [ 4, %613 ], [ 4, %626 ], [ 4, %635 ], [ 4, %647 ], [ 4, %659 ], [ 4, %671 ], [ 4, %680 ], [ 4, %692 ], [ 4, %708 ], [ 5, %725 ], [ 5, %745 ], [ 3, %758 ], [ 2, %763 ], [ 2, %763 ], [ 3, %777 ], [ 3, %786 ], [ 3, %795 ], [ 3, %809 ], [ 3, %818 ], [ 4, %831 ], [ 3, %840 ], [ 4, %854 ], [ 4, %867 ], [ 4, %876 ], [ 4, %888 ], [ 4, %900 ], [ 4, %912 ], [ 4, %921 ], [ 4, %933 ], [ 4, %949 ], [ 3, %962 ], [ 2, %967 ], [ 2, %967 ], [ 3, %981 ], [ 3, %990 ], [ 3, %999 ], [ 3, %1013 ], [ 3, %1022 ], [ 3, %1031 ], [ 2, %1040 ], [ 2, %1040 ], [ 2, %1040 ], [ 2, %1043 ], [ 6, %347 ], [ 6, %383 ], [ 4, %622 ], [ 4, %655 ], [ 4, %667 ], [ 4, %863 ], [ 4, %896 ], [ 4, %908 ], [ 2, %255 ], [ %331, %326 ], [ %407, %402 ], [ %429, %424 ], [ 2, %559 ], [ 2, %800 ], [ 2, %1004 ]
  %1052 = zext i8 %1050 to i64
  %1053 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1052
  %1054 = load i8, ptr %1053, align 1, !tbaa !9
  %1055 = zext i8 %1054 to i32
  %1056 = sub nsw i32 %1051, %1055
  br label %1100

1057:                                             ; preds = %199
  %1058 = icmp sgt i64 %204, 2
  br i1 %1058, label %1059, label %1081

1059:                                             ; preds = %1057
  %1060 = load i8, ptr %162, align 1, !tbaa !9
  %1061 = and i8 %1060, -33
  switch i8 %1061, label %1100 [
    i8 70, label %1062
    i8 83, label %1074
  ]

1062:                                             ; preds = %1059
  %1063 = getelementptr inbounds i8, ptr %162, i64 1
  %1064 = load i8, ptr %1063, align 1, !tbaa !9
  %1065 = and i8 %1064, -33
  switch i8 %1065, label %1100 [
    i8 70, label %1066
    i8 73, label %1097
    i8 76, label %1097
  ]

1066:                                             ; preds = %1062
  %1067 = getelementptr inbounds i8, ptr %162, i64 2
  %1068 = load i8, ptr %1067, align 1, !tbaa !9
  %1069 = and i8 %1068, -33
  %1070 = icmp eq i8 %1069, 73
  %1071 = icmp eq i8 %1069, 76
  %1072 = or i1 %1070, %1071
  %1073 = select i1 %1072, i32 3, i32 2
  br label %1097

1074:                                             ; preds = %1059
  %1075 = getelementptr inbounds i8, ptr %162, i64 1
  %1076 = load i8, ptr %1075, align 1, !tbaa !9
  %1077 = freeze i8 %1076
  %1078 = and i8 %1077, -33
  %1079 = add i8 %1078, -83
  %1080 = icmp ult i8 %1079, 2
  br i1 %1080, label %1097, label %1100

1081:                                             ; preds = %1057
  %1082 = icmp eq i64 %204, 2
  br i1 %1082, label %1083, label %1100

1083:                                             ; preds = %1081
  %1084 = load i8, ptr %162, align 1, !tbaa !9
  %1085 = and i8 %1084, -33
  switch i8 %1085, label %1100 [
    i8 70, label %1086
    i8 83, label %1090
  ]

1086:                                             ; preds = %1083
  %1087 = getelementptr inbounds i8, ptr %162, i64 1
  %1088 = load i8, ptr %1087, align 1, !tbaa !9
  %1089 = and i8 %1088, -33
  switch i8 %1089, label %1100 [
    i8 70, label %1097
    i8 73, label %1097
    i8 76, label %1097
  ]

1090:                                             ; preds = %1083
  %1091 = getelementptr inbounds i8, ptr %162, i64 1
  %1092 = load i8, ptr %1091, align 1, !tbaa !9
  %1093 = freeze i8 %1092
  %1094 = and i8 %1093, -33
  %1095 = add i8 %1094, -83
  %1096 = icmp ult i8 %1095, 2
  br i1 %1096, label %1097, label %1100

1097:                                             ; preds = %1090, %1086, %1086, %1086, %1074, %1062, %1062, %1066
  %1098 = phi i32 [ %1073, %1066 ], [ 2, %1062 ], [ 2, %1062 ], [ 2, %1074 ], [ 2, %1086 ], [ 2, %1086 ], [ 2, %1086 ], [ 2, %1090 ]
  %1099 = add nsw i32 %1098, -1
  br label %1100

1100:                                             ; preds = %1004, %800, %559, %255, %1083, %1059, %1038, %956, %1027, %1018, %1009, %995, %986, %977, %958, %926, %945, %942, %938, %929, %881, %917, %905, %893, %884, %859, %872, %860, %850, %836, %823, %827, %814, %805, %791, %782, %773, %754, %730, %713, %741, %716, %721, %685, %704, %701, %697, %688, %640, %676, %664, %652, %643, %618, %631, %619, %609, %595, %582, %586, %573, %564, %550, %541, %532, %513, %489, %472, %500, %475, %480, %444, %463, %460, %456, %447, %362, %435, %413, %380, %374, %365, %344, %337, %315, %305, %291, %278, %282, %269, %260, %246, %237, %228, %209, %1043, %1040, %1031, %1022, %1013, %999, %990, %981, %967, %962, %949, %933, %921, %912, %900, %888, %876, %867, %854, %840, %831, %818, %809, %795, %786, %777, %763, %758, %745, %725, %708, %692, %680, %671, %659, %647, %635, %626, %613, %599, %590, %577, %568, %554, %545, %536, %522, %517, %504, %484, %467, %451, %439, %430, %408, %388, %369, %357, %352, %332, %309, %295, %286, %273, %264, %250, %241, %232, %218, %213, %752, %511, %207, %377, %314, %1036, %908, %896, %863, %667, %655, %622, %416, %383, %340, %347, %318, %1097, %1081, %1062, %1074, %1086, %1090, %196, %1049
  %1101 = phi i64 [ %164, %196 ], [ %200, %1049 ], [ %200, %1090 ], [ %200, %1086 ], [ %200, %1074 ], [ %200, %1062 ], [ %200, %1081 ], [ %200, %1097 ], [ %200, %255 ], [ %200, %318 ], [ %200, %347 ], [ %200, %340 ], [ %200, %383 ], [ %200, %416 ], [ %200, %559 ], [ %200, %622 ], [ %200, %655 ], [ %200, %667 ], [ %200, %800 ], [ %200, %863 ], [ %200, %896 ], [ %200, %908 ], [ %200, %1004 ], [ %200, %1036 ], [ %200, %314 ], [ %200, %377 ], [ %200, %207 ], [ %200, %511 ], [ %200, %752 ], [ %200, %213 ], [ %200, %218 ], [ %200, %232 ], [ %200, %241 ], [ %200, %250 ], [ %200, %264 ], [ %200, %273 ], [ %200, %286 ], [ %200, %295 ], [ %200, %309 ], [ %200, %332 ], [ %200, %352 ], [ %200, %357 ], [ %200, %369 ], [ %200, %388 ], [ %200, %408 ], [ %200, %430 ], [ %200, %439 ], [ %200, %451 ], [ %200, %467 ], [ %200, %484 ], [ %200, %504 ], [ %200, %517 ], [ %200, %522 ], [ %200, %536 ], [ %200, %545 ], [ %200, %554 ], [ %200, %568 ], [ %200, %577 ], [ %200, %590 ], [ %200, %599 ], [ %200, %613 ], [ %200, %626 ], [ %200, %635 ], [ %200, %647 ], [ %200, %659 ], [ %200, %671 ], [ %200, %680 ], [ %200, %692 ], [ %200, %708 ], [ %200, %725 ], [ %200, %745 ], [ %200, %758 ], [ %200, %763 ], [ %200, %777 ], [ %200, %786 ], [ %200, %795 ], [ %200, %809 ], [ %200, %818 ], [ %200, %831 ], [ %200, %840 ], [ %200, %854 ], [ %200, %867 ], [ %200, %876 ], [ %200, %888 ], [ %200, %900 ], [ %200, %912 ], [ %200, %921 ], [ %200, %933 ], [ %200, %949 ], [ %200, %962 ], [ %200, %967 ], [ %200, %981 ], [ %200, %990 ], [ %200, %999 ], [ %200, %1013 ], [ %200, %1022 ], [ %200, %1031 ], [ %200, %1040 ], [ %200, %1043 ], [ %200, %209 ], [ %200, %228 ], [ %200, %237 ], [ %200, %246 ], [ %200, %260 ], [ %200, %269 ], [ %200, %282 ], [ %200, %278 ], [ %200, %291 ], [ %200, %305 ], [ %200, %315 ], [ %200, %337 ], [ %200, %344 ], [ %200, %365 ], [ %200, %374 ], [ %200, %380 ], [ %200, %413 ], [ %200, %435 ], [ %200, %362 ], [ %200, %447 ], [ %200, %456 ], [ %200, %460 ], [ %200, %463 ], [ %200, %444 ], [ %200, %480 ], [ %200, %475 ], [ %200, %500 ], [ %200, %472 ], [ %200, %489 ], [ %200, %513 ], [ %200, %532 ], [ %200, %541 ], [ %200, %550 ], [ %200, %564 ], [ %200, %573 ], [ %200, %586 ], [ %200, %582 ], [ %200, %595 ], [ %200, %609 ], [ %200, %619 ], [ %200, %631 ], [ %200, %618 ], [ %200, %643 ], [ %200, %652 ], [ %200, %664 ], [ %200, %676 ], [ %200, %640 ], [ %200, %688 ], [ %200, %697 ], [ %200, %701 ], [ %200, %704 ], [ %200, %685 ], [ %200, %721 ], [ %200, %716 ], [ %200, %741 ], [ %200, %713 ], [ %200, %730 ], [ %200, %754 ], [ %200, %773 ], [ %200, %782 ], [ %200, %791 ], [ %200, %805 ], [ %200, %814 ], [ %200, %827 ], [ %200, %823 ], [ %200, %836 ], [ %200, %850 ], [ %200, %860 ], [ %200, %872 ], [ %200, %859 ], [ %200, %884 ], [ %200, %893 ], [ %200, %905 ], [ %200, %917 ], [ %200, %881 ], [ %200, %929 ], [ %200, %938 ], [ %200, %942 ], [ %200, %945 ], [ %200, %926 ], [ %200, %958 ], [ %200, %977 ], [ %200, %986 ], [ %200, %995 ], [ %200, %1009 ], [ %200, %1018 ], [ %200, %1027 ], [ %200, %956 ], [ %200, %1038 ], [ %200, %1059 ], [ %200, %1083 ]
  %1102 = phi i32 [ %198, %196 ], [ %1056, %1049 ], [ 0, %1090 ], [ 0, %1086 ], [ 0, %1074 ], [ 0, %1062 ], [ 0, %1081 ], [ %1099, %1097 ], [ 0, %255 ], [ 0, %318 ], [ 0, %347 ], [ 0, %340 ], [ 0, %383 ], [ 0, %416 ], [ 0, %559 ], [ 0, %622 ], [ 0, %655 ], [ 0, %667 ], [ 0, %800 ], [ 0, %863 ], [ 0, %896 ], [ 0, %908 ], [ 0, %1004 ], [ 0, %1036 ], [ 0, %314 ], [ 0, %377 ], [ 0, %207 ], [ 0, %511 ], [ 0, %752 ], [ 0, %213 ], [ 0, %218 ], [ 0, %232 ], [ 0, %241 ], [ 0, %250 ], [ 0, %264 ], [ 0, %273 ], [ 0, %286 ], [ 0, %295 ], [ 0, %309 ], [ 0, %332 ], [ 0, %352 ], [ 0, %357 ], [ 0, %369 ], [ 0, %388 ], [ 0, %408 ], [ 0, %430 ], [ 0, %439 ], [ 0, %451 ], [ 0, %467 ], [ 0, %484 ], [ 0, %504 ], [ 0, %517 ], [ 0, %522 ], [ 0, %536 ], [ 0, %545 ], [ 0, %554 ], [ 0, %568 ], [ 0, %577 ], [ 0, %590 ], [ 0, %599 ], [ 0, %613 ], [ 0, %626 ], [ 0, %635 ], [ 0, %647 ], [ 0, %659 ], [ 0, %671 ], [ 0, %680 ], [ 0, %692 ], [ 0, %708 ], [ 0, %725 ], [ 0, %745 ], [ 0, %758 ], [ 0, %763 ], [ 0, %777 ], [ 0, %786 ], [ 0, %795 ], [ 0, %809 ], [ 0, %818 ], [ 0, %831 ], [ 0, %840 ], [ 0, %854 ], [ 0, %867 ], [ 0, %876 ], [ 0, %888 ], [ 0, %900 ], [ 0, %912 ], [ 0, %921 ], [ 0, %933 ], [ 0, %949 ], [ 0, %962 ], [ 0, %967 ], [ 0, %981 ], [ 0, %990 ], [ 0, %999 ], [ 0, %1013 ], [ 0, %1022 ], [ 0, %1031 ], [ 0, %1040 ], [ 0, %1043 ], [ 0, %209 ], [ 0, %228 ], [ 0, %237 ], [ 0, %246 ], [ 0, %260 ], [ 0, %269 ], [ 0, %282 ], [ 0, %278 ], [ 0, %291 ], [ 0, %305 ], [ 0, %315 ], [ 0, %337 ], [ 0, %344 ], [ 0, %365 ], [ 0, %374 ], [ 0, %380 ], [ 0, %413 ], [ 0, %435 ], [ 0, %362 ], [ 0, %447 ], [ 0, %456 ], [ 0, %460 ], [ 0, %463 ], [ 0, %444 ], [ 0, %480 ], [ 0, %475 ], [ 0, %500 ], [ 0, %472 ], [ 0, %489 ], [ 0, %513 ], [ 0, %532 ], [ 0, %541 ], [ 0, %550 ], [ 0, %564 ], [ 0, %573 ], [ 0, %586 ], [ 0, %582 ], [ 0, %595 ], [ 0, %609 ], [ 0, %619 ], [ 0, %631 ], [ 0, %618 ], [ 0, %643 ], [ 0, %652 ], [ 0, %664 ], [ 0, %676 ], [ 0, %640 ], [ 0, %688 ], [ 0, %697 ], [ 0, %701 ], [ 0, %704 ], [ 0, %685 ], [ 0, %721 ], [ 0, %716 ], [ 0, %741 ], [ 0, %713 ], [ 0, %730 ], [ 0, %754 ], [ 0, %773 ], [ 0, %782 ], [ 0, %791 ], [ 0, %805 ], [ 0, %814 ], [ 0, %827 ], [ 0, %823 ], [ 0, %836 ], [ 0, %850 ], [ 0, %860 ], [ 0, %872 ], [ 0, %859 ], [ 0, %884 ], [ 0, %893 ], [ 0, %905 ], [ 0, %917 ], [ 0, %881 ], [ 0, %929 ], [ 0, %938 ], [ 0, %942 ], [ 0, %945 ], [ 0, %926 ], [ 0, %958 ], [ 0, %977 ], [ 0, %986 ], [ 0, %995 ], [ 0, %1009 ], [ 0, %1018 ], [ 0, %1027 ], [ 0, %956 ], [ 0, %1038 ], [ 0, %1059 ], [ 0, %1083 ]
  %1103 = load i64, ptr %9, align 8, !tbaa !71
  %1104 = icmp ult i64 %1103, 256
  br i1 %1104, label %1108, label %1212

1105:                                             ; preds = %182
  %1106 = add i64 %164, 1
  %1107 = icmp ult i64 %183, 256
  br i1 %1107, label %1136, label %1212

1108:                                             ; preds = %1100
  %1109 = getelementptr inbounds i8, ptr %57, i64 %1103
  %1110 = load i8, ptr %1109, align 1, !tbaa !9
  %1111 = load ptr, ptr %66, align 8, !tbaa !38
  %1112 = zext i8 %1110 to i64
  %1113 = getelementptr inbounds i16, ptr %1111, i64 %1112
  %1114 = load i16, ptr %1113, align 2, !tbaa !163
  %1115 = icmp eq i16 %1114, 0
  br i1 %1115, label %1116, label %1136

1116:                                             ; preds = %1108
  %1117 = load i16, ptr %98, align 8, !tbaa !174
  %1118 = add i16 %1117, 1
  store i16 %1118, ptr %98, align 8, !tbaa !174
  store i16 %1118, ptr %1113, align 2, !tbaa !163
  %1119 = load i32, ptr %97, align 8, !tbaa !98
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1134, label %1121

1121:                                             ; preds = %1116
  %1122 = call ptr @Perl_newSV(i64 noundef 7) #21
  %1123 = getelementptr inbounds %struct.sv, ptr %1122, i64 0, i32 3
  %1124 = load ptr, ptr %1123, align 8, !tbaa !9
  %1125 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1124, i64 noundef %1112, i64 noundef 0) #21
  %1126 = ptrtoint ptr %1125 to i64
  %1127 = ptrtoint ptr %1124 to i64
  %1128 = sub i64 %1126, %1127
  %1129 = load ptr, ptr %1122, align 8, !tbaa !63
  %1130 = getelementptr inbounds %struct.xpv, ptr %1129, i64 0, i32 2
  store i64 %1128, ptr %1130, align 8, !tbaa !72
  %1131 = getelementptr inbounds %struct.sv, ptr %1122, i64 0, i32 2
  %1132 = load i32, ptr %1131, align 4, !tbaa !62
  %1133 = or i32 %1132, 536888320
  store i32 %1133, ptr %1131, align 4, !tbaa !62
  call void @Perl_av_push(ptr noundef %14, ptr noundef nonnull %1122) #21
  br label %1136

1134:                                             ; preds = %1116
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %10) #21
  store i8 %1110, ptr %10, align 1, !tbaa !9
  %1135 = call ptr @Perl_newSVpvn(ptr noundef nonnull %10, i64 noundef 1) #21
  call void @Perl_av_push(ptr noundef %14, ptr noundef %1135) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10) #21
  br label %1136

1136:                                             ; preds = %1105, %1108, %1134, %1121
  %1137 = phi i64 [ %1101, %1108 ], [ %1101, %1134 ], [ %1101, %1121 ], [ %1106, %1105 ]
  %1138 = phi i32 [ %1102, %1108 ], [ %1102, %1134 ], [ %1102, %1121 ], [ %163, %1105 ]
  %1139 = load ptr, ptr %66, align 8, !tbaa !38
  %1140 = load i64, ptr %9, align 8, !tbaa !71
  %1141 = getelementptr inbounds i16, ptr %1139, i64 %1140
  %1142 = load i16, ptr %1141, align 2, !tbaa !163
  %1143 = icmp eq i16 %1142, 0
  br i1 %1143, label %1144, label %1166

1144:                                             ; preds = %1136
  %1145 = load i16, ptr %98, align 8, !tbaa !174
  %1146 = add i16 %1145, 1
  store i16 %1146, ptr %98, align 8, !tbaa !174
  store i16 %1146, ptr %1141, align 2, !tbaa !163
  %1147 = load i32, ptr %97, align 8, !tbaa !98
  %1148 = icmp eq i32 %1147, 0
  br i1 %1148, label %1163, label %1149

1149:                                             ; preds = %1144
  %1150 = call ptr @Perl_newSV(i64 noundef 7) #21
  %1151 = getelementptr inbounds %struct.sv, ptr %1150, i64 0, i32 3
  %1152 = load ptr, ptr %1151, align 8, !tbaa !9
  %1153 = load i64, ptr %9, align 8, !tbaa !71
  %1154 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1152, i64 noundef %1153, i64 noundef 0) #21
  %1155 = ptrtoint ptr %1154 to i64
  %1156 = ptrtoint ptr %1152 to i64
  %1157 = sub i64 %1155, %1156
  %1158 = load ptr, ptr %1150, align 8, !tbaa !63
  %1159 = getelementptr inbounds %struct.xpv, ptr %1158, i64 0, i32 2
  store i64 %1157, ptr %1159, align 8, !tbaa !72
  %1160 = getelementptr inbounds %struct.sv, ptr %1150, i64 0, i32 2
  %1161 = load i32, ptr %1160, align 4, !tbaa !62
  %1162 = or i32 %1161, 536888320
  store i32 %1162, ptr %1160, align 4, !tbaa !62
  call void @Perl_av_push(ptr noundef %14, ptr noundef nonnull %1150) #21
  br label %1166

1163:                                             ; preds = %1144
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #21
  %1164 = trunc i64 %1140 to i8
  store i8 %1164, ptr %11, align 1, !tbaa !9
  %1165 = call ptr @Perl_newSVpvn(ptr noundef nonnull %11, i64 noundef 1) #21
  call void @Perl_av_push(ptr noundef %14, ptr noundef %1165) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #21
  br label %1166

1166:                                             ; preds = %1149, %1163, %1136
  %1167 = and i8 %166, 1
  %1168 = icmp eq i8 %1167, 0
  br i1 %1168, label %1306, label %1169

1169:                                             ; preds = %1166
  %1170 = load i64, ptr %9, align 8, !tbaa !71
  %1171 = trunc i64 %1170 to i8
  %1172 = and i8 %1171, 7
  %1173 = shl nuw i8 1, %1172
  %1174 = load ptr, ptr %95, align 8, !tbaa !41
  %1175 = lshr i64 %1170, 3
  %1176 = and i64 %1175, 31
  %1177 = getelementptr inbounds i8, ptr %1174, i64 %1176
  %1178 = load i8, ptr %1177, align 1, !tbaa !9
  %1179 = or i8 %1173, %1178
  store i8 %1179, ptr %1177, align 1, !tbaa !9
  br i1 %55, label %1193, label %1180

1180:                                             ; preds = %1169
  %1181 = load i64, ptr %9, align 8, !tbaa !71
  %1182 = and i64 %1181, 255
  %1183 = getelementptr inbounds i8, ptr %57, i64 %1182
  %1184 = load i8, ptr %1183, align 1, !tbaa !9
  %1185 = and i8 %1184, 7
  %1186 = shl nuw i8 1, %1185
  %1187 = load ptr, ptr %95, align 8, !tbaa !41
  %1188 = lshr i8 %1184, 3
  %1189 = zext i8 %1188 to i64
  %1190 = getelementptr inbounds i8, ptr %1187, i64 %1189
  %1191 = load i8, ptr %1190, align 1, !tbaa !9
  %1192 = or i8 %1186, %1191
  store i8 %1192, ptr %1190, align 1, !tbaa !9
  br label %1193

1193:                                             ; preds = %1180, %1169
  %1194 = load i32, ptr %97, align 8, !tbaa !98
  %1195 = icmp ne i32 %1194, 0
  %1196 = load i64, ptr %9, align 8
  %1197 = icmp ult i64 %1196, 128
  %1198 = select i1 %1195, i1 true, i1 %1197
  br i1 %1198, label %1306, label %1199

1199:                                             ; preds = %1193
  %1200 = trunc i64 %1196 to i32
  %1201 = lshr i32 %1200, 6
  %1202 = and i32 %1201, 7
  %1203 = shl nuw nsw i32 1, %1202
  %1204 = load ptr, ptr %95, align 8, !tbaa !41
  %1205 = lshr i64 %1196, 9
  %1206 = and i64 %1205, 7
  %1207 = or i64 %1206, 24
  %1208 = getelementptr inbounds i8, ptr %1204, i64 %1207
  %1209 = load i8, ptr %1208, align 1, !tbaa !9
  %1210 = trunc i32 %1203 to i8
  %1211 = or i8 %1209, %1210
  store i8 %1211, ptr %1208, align 1, !tbaa !9
  br label %1306

1212:                                             ; preds = %1105, %1100
  %1213 = phi i32 [ %163, %1105 ], [ %1102, %1100 ]
  %1214 = phi i64 [ %1106, %1105 ], [ %1101, %1100 ]
  %1215 = icmp eq ptr %160, null
  br i1 %1215, label %1216, label %1218

1216:                                             ; preds = %1212
  %1217 = call ptr @Perl_newSV_type(i32 noundef 12) #21
  br label %1218

1218:                                             ; preds = %1216, %1212
  %1219 = phi ptr [ %160, %1212 ], [ %1217, %1216 ]
  %1220 = call ptr @Perl_hv_common_key_len(ptr noundef %1219, ptr noundef nonnull %9, i32 noundef 8, i32 noundef 48, ptr noundef null, i32 noundef 0) #21
  %1221 = icmp eq ptr %1220, null
  br i1 %1221, label %1222, label %1224

1222:                                             ; preds = %1218
  %1223 = load i64, ptr %9, align 8, !tbaa !71
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.222, i64 noundef %1223) #21
  br label %1224

1224:                                             ; preds = %1222, %1218
  %1225 = load ptr, ptr %1220, align 8, !tbaa !5
  %1226 = icmp eq ptr %1225, null
  br i1 %1226, label %1281, label %1227

1227:                                             ; preds = %1224
  %1228 = getelementptr inbounds %struct.sv, ptr %1225, i64 0, i32 2
  %1229 = load i32, ptr %1228, align 4, !tbaa !62
  %1230 = and i32 %1229, 2097152
  %1231 = icmp eq i32 %1230, 0
  br i1 %1231, label %1234, label %1232

1232:                                             ; preds = %1227
  %1233 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %1225, i32 noundef 2) #21
  br i1 %1233, label %1306, label %1281

1234:                                             ; preds = %1227
  %1235 = and i32 %1229, 65280
  %1236 = icmp ne i32 %1235, 0
  %1237 = and i32 %1229, 255
  %1238 = icmp eq i32 %1237, 8
  %1239 = or i1 %1236, %1238
  %1240 = and i32 %1229, 16826623
  %1241 = icmp eq i32 %1240, 16777226
  %1242 = or i1 %1241, %1239
  br i1 %1242, label %1243, label %1281

1243:                                             ; preds = %1234
  %1244 = and i32 %1229, 1024
  %1245 = icmp eq i32 %1244, 0
  br i1 %1245, label %1260, label %1246

1246:                                             ; preds = %1243
  %1247 = load ptr, ptr %1225, align 8, !tbaa !63
  %1248 = icmp eq ptr %1247, null
  br i1 %1248, label %1281, label %1249

1249:                                             ; preds = %1246
  %1250 = getelementptr inbounds %struct.xpv, ptr %1247, i64 0, i32 2
  %1251 = load i64, ptr %1250, align 8, !tbaa !72
  %1252 = icmp ugt i64 %1251, 1
  br i1 %1252, label %1306, label %1253

1253:                                             ; preds = %1249
  %1254 = icmp eq i64 %1251, 0
  br i1 %1254, label %1281, label %1255

1255:                                             ; preds = %1253
  %1256 = getelementptr inbounds %struct.sv, ptr %1225, i64 0, i32 3
  %1257 = load ptr, ptr %1256, align 8, !tbaa !9
  %1258 = load i8, ptr %1257, align 1, !tbaa !9
  %1259 = icmp eq i8 %1258, 48
  br i1 %1259, label %1281, label %1306

1260:                                             ; preds = %1243
  %1261 = and i32 %1229, 768
  %1262 = icmp eq i32 %1261, 0
  br i1 %1262, label %1279, label %1263

1263:                                             ; preds = %1260
  %1264 = and i32 %1229, 256
  %1265 = icmp eq i32 %1264, 0
  br i1 %1265, label %1271, label %1266

1266:                                             ; preds = %1263
  %1267 = load ptr, ptr %1225, align 8, !tbaa !63
  %1268 = getelementptr inbounds %struct.xpviv, ptr %1267, i64 0, i32 4
  %1269 = load i64, ptr %1268, align 8, !tbaa !9
  %1270 = icmp eq i64 %1269, 0
  br i1 %1270, label %1271, label %1306

1271:                                             ; preds = %1266, %1263
  %1272 = and i32 %1229, 512
  %1273 = icmp eq i32 %1272, 0
  br i1 %1273, label %1281, label %1274

1274:                                             ; preds = %1271
  %1275 = load ptr, ptr %1225, align 8, !tbaa !63
  %1276 = getelementptr inbounds %struct.xpvnv, ptr %1275, i64 0, i32 5
  %1277 = load double, ptr %1276, align 8, !tbaa !9
  %1278 = fcmp une double %1277, 0.000000e+00
  br i1 %1278, label %1306, label %1281

1279:                                             ; preds = %1260
  %1280 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %1225, i32 noundef 0) #21
  br i1 %1280, label %1306, label %1281

1281:                                             ; preds = %1274, %1234, %1224, %1279, %1271, %1255, %1253, %1246, %1232
  %1282 = load ptr, ptr %1220, align 8, !tbaa !5
  %1283 = load i16, ptr %98, align 8, !tbaa !174
  %1284 = add i16 %1283, 1
  store i16 %1284, ptr %98, align 8, !tbaa !174
  %1285 = zext i16 %1284 to i64
  call void @Perl_sv_setiv(ptr noundef %1282, i64 noundef %1285) #21
  %1286 = load i32, ptr %97, align 8, !tbaa !98
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1302, label %1288

1288:                                             ; preds = %1281
  %1289 = call ptr @Perl_newSV(i64 noundef 7) #21
  %1290 = getelementptr inbounds %struct.sv, ptr %1289, i64 0, i32 3
  %1291 = load ptr, ptr %1290, align 8, !tbaa !9
  %1292 = load i64, ptr %9, align 8, !tbaa !71
  %1293 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1291, i64 noundef %1292, i64 noundef 0) #21
  %1294 = ptrtoint ptr %1293 to i64
  %1295 = ptrtoint ptr %1291 to i64
  %1296 = sub i64 %1294, %1295
  %1297 = load ptr, ptr %1289, align 8, !tbaa !63
  %1298 = getelementptr inbounds %struct.xpv, ptr %1297, i64 0, i32 2
  store i64 %1296, ptr %1298, align 8, !tbaa !72
  %1299 = getelementptr inbounds %struct.sv, ptr %1289, i64 0, i32 2
  %1300 = load i32, ptr %1299, align 4, !tbaa !62
  %1301 = or i32 %1300, 536888320
  store i32 %1301, ptr %1299, align 4, !tbaa !62
  call void @Perl_av_push(ptr noundef %14, ptr noundef nonnull %1289) #21
  br label %1306

1302:                                             ; preds = %1281
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #21
  %1303 = load i64, ptr %9, align 8, !tbaa !71
  %1304 = trunc i64 %1303 to i8
  store i8 %1304, ptr %12, align 1, !tbaa !9
  %1305 = call ptr @Perl_newSVpvn(ptr noundef nonnull %12, i64 noundef 1) #21
  call void @Perl_av_push(ptr noundef %14, ptr noundef %1305) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #21
  br label %1306

1306:                                             ; preds = %1232, %1249, %1255, %1266, %1274, %1279, %1302, %1288, %1193, %1199, %1166
  %1307 = phi i32 [ %1138, %1166 ], [ %1138, %1199 ], [ %1138, %1193 ], [ %1213, %1288 ], [ %1213, %1302 ], [ %1213, %1279 ], [ %1213, %1274 ], [ %1213, %1266 ], [ %1213, %1255 ], [ %1213, %1249 ], [ %1213, %1232 ]
  %1308 = phi i64 [ %1137, %1166 ], [ %1137, %1199 ], [ %1137, %1193 ], [ %1214, %1288 ], [ %1214, %1302 ], [ %1214, %1279 ], [ %1214, %1274 ], [ %1214, %1266 ], [ %1214, %1255 ], [ %1214, %1249 ], [ %1214, %1232 ]
  %1309 = phi i8 [ %166, %1166 ], [ 0, %1199 ], [ 0, %1193 ], [ %166, %1288 ], [ %166, %1302 ], [ %166, %1279 ], [ %166, %1274 ], [ %166, %1266 ], [ %166, %1255 ], [ %166, %1249 ], [ %166, %1232 ]
  %1310 = phi ptr [ %160, %1166 ], [ %160, %1199 ], [ %160, %1193 ], [ %1219, %1288 ], [ %1219, %1302 ], [ %1219, %1279 ], [ %1219, %1274 ], [ %1219, %1266 ], [ %1219, %1255 ], [ %1219, %1249 ], [ %1219, %1232 ]
  %1311 = load i64, ptr %8, align 8, !tbaa !71
  %1312 = getelementptr inbounds i8, ptr %162, i64 %1311
  %1313 = icmp ult ptr %1312, %135
  br i1 %1313, label %159, label %1314, !llvm.loop !317

1314:                                             ; preds = %1306, %155
  %1315 = phi i64 [ 0, %155 ], [ %184, %1306 ]
  %1316 = phi i64 [ 0, %155 ], [ %1308, %1306 ]
  %1317 = phi i64 [ %103, %155 ], [ %167, %1306 ]
  %1318 = phi ptr [ %101, %155 ], [ %1310, %1306 ]
  %1319 = icmp eq ptr %102, %2
  br i1 %1319, label %1320, label %1321

1320:                                             ; preds = %1314
  store i64 %1316, ptr %96, align 8, !tbaa !173
  store i64 %1315, ptr %99, align 8, !tbaa !285
  br label %1329

1321:                                             ; preds = %1314
  %1322 = load i64, ptr %96, align 8, !tbaa !173
  %1323 = icmp ult i64 %1316, %1322
  br i1 %1323, label %1324, label %1325

1324:                                             ; preds = %1321
  store i64 %1316, ptr %96, align 8, !tbaa !173
  br label %1329

1325:                                             ; preds = %1321
  %1326 = load i64, ptr %99, align 8, !tbaa !285
  %1327 = icmp ugt i64 %1315, %1326
  br i1 %1327, label %1328, label %1329

1328:                                             ; preds = %1325
  store i64 %1315, ptr %99, align 8, !tbaa !285
  br label %1329

1329:                                             ; preds = %1320, %1325, %1328, %1324
  %1330 = icmp eq ptr %102, null
  br i1 %1330, label %1358, label %1331

1331:                                             ; preds = %133, %1329
  %1332 = phi ptr [ %101, %133 ], [ %1318, %1329 ]
  %1333 = phi i64 [ %103, %133 ], [ %1317, %1329 ]
  %1334 = getelementptr inbounds %struct.regnode, ptr %102, i64 0, i32 1
  %1335 = load i8, ptr %1334, align 1, !tbaa !164
  %1336 = icmp ugt i8 %1335, 93
  br i1 %1336, label %1337, label %1340

1337:                                             ; preds = %1331
  %1338 = zext i8 %1335 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1338, i32 noundef 93) #21
  %1339 = load i8, ptr %1334, align 1, !tbaa !164
  br label %1340

1340:                                             ; preds = %1337, %1331
  %1341 = phi i8 [ %1339, %1337 ], [ %1335, %1331 ]
  %1342 = zext i8 %1341 to i64
  %1343 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1342
  %1344 = load i8, ptr %1343, align 1, !tbaa !9
  %1345 = icmp eq i8 %1344, 0
  br i1 %1345, label %1348, label %1346

1346:                                             ; preds = %1340
  %1347 = load i32, ptr %104, align 4, !tbaa !166
  br label %1352

1348:                                             ; preds = %1340
  %1349 = getelementptr inbounds %struct.regnode, ptr %102, i64 0, i32 2
  %1350 = load i16, ptr %1349, align 2, !tbaa !168
  %1351 = zext i16 %1350 to i32
  br label %1352

1352:                                             ; preds = %1348, %1346
  %1353 = phi i32 [ %1347, %1346 ], [ %1351, %1348 ]
  %1354 = icmp eq i32 %1353, 0
  br i1 %1354, label %1358, label %1355

1355:                                             ; preds = %1352
  %1356 = sext i32 %1353 to i64
  %1357 = getelementptr inbounds %struct.regnode, ptr %102, i64 %1356
  br label %1358

1358:                                             ; preds = %1329, %1352, %1355
  %1359 = phi ptr [ %1332, %1355 ], [ %1318, %1329 ], [ %1332, %1352 ]
  %1360 = phi i64 [ %1333, %1355 ], [ %1317, %1329 ], [ %1333, %1352 ]
  %1361 = phi ptr [ %1357, %1355 ], [ null, %1329 ], [ null, %1352 ]
  %1362 = icmp ult ptr %1361, %3
  br i1 %1362, label %100, label %1363, !llvm.loop !318

1363:                                             ; preds = %1358, %91
  %1364 = phi i64 [ 0, %91 ], [ %1360, %1358 ]
  %1365 = phi ptr [ null, %91 ], [ %1359, %1358 ]
  %1366 = add i64 %1364, 2
  %1367 = shl i64 %1366, 2
  %1368 = call ptr @Perl_safesysmalloc(i64 noundef %1367) #21
  %1369 = getelementptr inbounds i32, ptr %1368, i64 1
  store i32 0, ptr %1369, align 4, !tbaa !150
  %1370 = add i64 %1364, 1
  %1371 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 8
  %1372 = load i16, ptr %1371, align 8, !tbaa !174
  %1373 = zext i16 %1372 to i64
  %1374 = mul i64 %1370, %1373
  %1375 = add i64 %1374, 1
  %1376 = load i32, ptr %78, align 4, !tbaa !62
  %1377 = and i32 %1376, 2097408
  %1378 = icmp eq i32 %1377, 256
  br i1 %1378, label %1379, label %1383

1379:                                             ; preds = %1363
  %1380 = load ptr, ptr %77, align 8, !tbaa !63
  %1381 = getelementptr inbounds %struct.xpviv, ptr %1380, i64 0, i32 4
  %1382 = load i64, ptr %1381, align 8, !tbaa !9
  br label %1385

1383:                                             ; preds = %1363
  %1384 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %77, i32 noundef 2) #21
  br label %1385

1385:                                             ; preds = %1383, %1379
  %1386 = phi i64 [ %1382, %1379 ], [ %1384, %1383 ]
  %1387 = icmp sgt i64 %1375, %1386
  br i1 %1387, label %1388, label %1895

1388:                                             ; preds = %1385
  %1389 = call noalias ptr @calloc(i64 noundef %1366, i64 noundef 16) #22
  %1390 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 3
  store ptr %1389, ptr %1390, align 8, !tbaa !39
  %1391 = call ptr @Perl_safesyscalloc(i64 noundef 4, i64 noundef 8) #21
  %1392 = load ptr, ptr %1390, align 8, !tbaa !39
  %1393 = getelementptr inbounds %struct._reg_trie_state, ptr %1392, i64 1, i32 1
  store ptr %1391, ptr %1393, align 8, !tbaa !9
  %1394 = load ptr, ptr %1390, align 8, !tbaa !39
  %1395 = getelementptr inbounds %struct._reg_trie_state, ptr %1394, i64 1, i32 1
  %1396 = load ptr, ptr %1395, align 8, !tbaa !9
  store i16 1, ptr %1396, align 4, !tbaa !319
  %1397 = load ptr, ptr %1395, align 8, !tbaa !9
  %1398 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1397, i64 0, i32 1
  store i32 4, ptr %1398, align 4, !tbaa !321
  br i1 %93, label %1399, label %1712

1399:                                             ; preds = %1388
  %1400 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1401 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 6
  %1402 = ptrtoint ptr %92 to i64
  br label %1403

1403:                                             ; preds = %1399, %1707
  %1404 = phi ptr [ %2, %1399 ], [ %1708, %1707 ]
  %1405 = phi i16 [ 0, %1399 ], [ %1618, %1707 ]
  %1406 = phi i32 [ 2, %1399 ], [ %1590, %1707 ]
  %1407 = phi ptr [ null, %1399 ], [ %1669, %1707 ]
  %1408 = phi ptr [ null, %1399 ], [ %1668, %1707 ]
  %1409 = phi i64 [ 1, %1399 ], [ %1589, %1707 ]
  %1410 = getelementptr inbounds %struct.regnode, ptr %1404, i64 1
  %1411 = getelementptr inbounds %struct.regnode, ptr %1404, i64 2
  %1412 = load i8, ptr %1410, align 2, !tbaa !218
  %1413 = zext i8 %1412 to i64
  %1414 = getelementptr inbounds i8, ptr %1411, i64 %1413
  %1415 = getelementptr inbounds %struct.regnode, ptr %1404, i64 1, i32 1
  %1416 = load i8, ptr %1415, align 1, !tbaa !164
  %1417 = icmp eq i8 %1416, 40
  br i1 %1417, label %1418, label %1436

1418:                                             ; preds = %1403
  %1419 = getelementptr inbounds %struct.regnode, ptr %1404, i64 1, i32 2
  %1420 = load i16, ptr %1419, align 2, !tbaa !168
  %1421 = icmp eq i16 %1420, 0
  %1422 = zext i16 %1420 to i64
  %1423 = getelementptr inbounds %struct.regnode, ptr %1410, i64 %1422
  %1424 = select i1 %1421, ptr null, ptr %1423
  %1425 = icmp eq ptr %1424, %4
  br i1 %1425, label %1436, label %1426

1426:                                             ; preds = %1418
  %1427 = getelementptr inbounds %struct.regnode, ptr %1424, i64 0, i32 1
  %1428 = load i8, ptr %1427, align 1, !tbaa !164
  %1429 = zext i8 %1428 to i32
  %1430 = icmp eq i32 %1429, %6
  br i1 %1430, label %1431, label %1436

1431:                                             ; preds = %1426
  %1432 = getelementptr inbounds %struct.regnode_string, ptr %1424, i64 0, i32 3
  %1433 = load i8, ptr %1424, align 2, !tbaa !218
  %1434 = zext i8 %1433 to i64
  %1435 = getelementptr inbounds i8, ptr %1432, i64 %1434
  br label %1436

1436:                                             ; preds = %1418, %1426, %1431, %1403
  %1437 = phi ptr [ %1414, %1403 ], [ %1435, %1431 ], [ %1414, %1426 ], [ %1414, %1418 ]
  %1438 = phi ptr [ %1411, %1403 ], [ %1432, %1431 ], [ %1411, %1426 ], [ %1411, %1418 ]
  %1439 = phi ptr [ %1410, %1403 ], [ %1423, %1431 ], [ %1410, %1426 ], [ %1410, %1418 ]
  %1440 = getelementptr inbounds %struct.regnode, ptr %1439, i64 0, i32 1
  %1441 = load i8, ptr %1440, align 1, !tbaa !164
  %1442 = icmp ne i8 %1441, 40
  %1443 = icmp ult ptr %1438, %1437
  %1444 = select i1 %1442, i1 %1443, i1 false
  br i1 %1444, label %1445, label %1585

1445:                                             ; preds = %1436, %1576
  %1446 = phi i32 [ %1579, %1576 ], [ %1406, %1436 ]
  %1447 = phi i64 [ %1578, %1576 ], [ %1409, %1436 ]
  %1448 = phi ptr [ %1581, %1576 ], [ %1438, %1436 ]
  %1449 = phi i32 [ %1451, %1576 ], [ 0, %1436 ]
  %1450 = phi i32 [ %1577, %1576 ], [ 1, %1436 ]
  %1451 = add i32 %1449, 1
  %1452 = load i32, ptr %1400, align 8, !tbaa !98
  %1453 = icmp eq i32 %1452, 0
  br i1 %1453, label %1456, label %1454

1454:                                             ; preds = %1445
  %1455 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef %1448, ptr noundef nonnull %8) #21
  store i64 %1455, ptr %9, align 8, !tbaa !71
  br label %1466

1456:                                             ; preds = %1445
  %1457 = load i8, ptr %1448, align 1, !tbaa !9
  %1458 = zext i8 %1457 to i64
  br i1 %56, label %1459, label %1465

1459:                                             ; preds = %1456
  %1460 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %1458
  %1461 = load i8, ptr %1460, align 1, !tbaa !9
  %1462 = zext i8 %1461 to i64
  %1463 = icmp eq i8 %1461, -75
  %1464 = select i1 %1463, i64 956, i64 %1462
  store i64 %1464, ptr %9, align 8
  store i64 1, ptr %8, align 8, !tbaa !71
  br label %1466

1465:                                             ; preds = %1456
  store i64 %1458, ptr %9, align 8, !tbaa !71
  store i64 1, ptr %8, align 8, !tbaa !71
  br label %1469

1466:                                             ; preds = %1459, %1454
  %1467 = phi i64 [ %1464, %1459 ], [ %1455, %1454 ]
  %1468 = icmp ult i64 %1467, 256
  br i1 %1468, label %1469, label %1474

1469:                                             ; preds = %1465, %1466
  %1470 = phi i64 [ %1458, %1465 ], [ %1467, %1466 ]
  %1471 = load ptr, ptr %66, align 8, !tbaa !38
  %1472 = getelementptr inbounds i16, ptr %1471, i64 %1470
  %1473 = load i16, ptr %1472, align 2, !tbaa !163
  br label %1492

1474:                                             ; preds = %1466
  %1475 = call ptr @Perl_hv_common_key_len(ptr noundef %1365, ptr noundef nonnull %9, i32 noundef 8, i32 noundef 32, ptr noundef null, i32 noundef 0) #21
  %1476 = icmp eq ptr %1475, null
  br i1 %1476, label %1574, label %1477

1477:                                             ; preds = %1474
  %1478 = load ptr, ptr %1475, align 8, !tbaa !5
  %1479 = getelementptr inbounds %struct.sv, ptr %1478, i64 0, i32 2
  %1480 = load i32, ptr %1479, align 4, !tbaa !62
  %1481 = and i32 %1480, 2097408
  %1482 = icmp eq i32 %1481, 256
  br i1 %1482, label %1483, label %1487

1483:                                             ; preds = %1477
  %1484 = load ptr, ptr %1478, align 8, !tbaa !63
  %1485 = getelementptr inbounds %struct.xpviv, ptr %1484, i64 0, i32 4
  %1486 = load i64, ptr %1485, align 8, !tbaa !9
  br label %1489

1487:                                             ; preds = %1477
  %1488 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1478, i32 noundef 2) #21
  br label %1489

1489:                                             ; preds = %1487, %1483
  %1490 = phi i64 [ %1486, %1483 ], [ %1488, %1487 ]
  %1491 = trunc i64 %1490 to i16
  br label %1492

1492:                                             ; preds = %1489, %1469
  %1493 = phi i16 [ %1473, %1469 ], [ %1491, %1489 ]
  %1494 = icmp eq i16 %1493, 0
  br i1 %1494, label %1574, label %1495

1495:                                             ; preds = %1492
  %1496 = add i16 %1493, -1
  %1497 = load ptr, ptr %1390, align 8, !tbaa !39
  %1498 = zext i32 %1450 to i64
  %1499 = getelementptr inbounds %struct._reg_trie_state, ptr %1497, i64 %1498, i32 1
  %1500 = load ptr, ptr %1499, align 8, !tbaa !9
  %1501 = icmp eq ptr %1500, null
  br i1 %1501, label %1504, label %1502

1502:                                             ; preds = %1495
  %1503 = getelementptr inbounds %struct._reg_trie_state, ptr %1497, i64 %1498, i32 1
  br label %1516

1504:                                             ; preds = %1495
  %1505 = call ptr @Perl_safesyscalloc(i64 noundef 4, i64 noundef 8) #21
  %1506 = load ptr, ptr %1390, align 8, !tbaa !39
  %1507 = getelementptr inbounds %struct._reg_trie_state, ptr %1506, i64 %1498, i32 1
  store ptr %1505, ptr %1507, align 8, !tbaa !9
  %1508 = load ptr, ptr %1390, align 8, !tbaa !39
  %1509 = getelementptr inbounds %struct._reg_trie_state, ptr %1508, i64 %1498, i32 1
  %1510 = load ptr, ptr %1509, align 8, !tbaa !9
  store i16 1, ptr %1510, align 4, !tbaa !319
  %1511 = load ptr, ptr %1509, align 8, !tbaa !9
  %1512 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1511, i64 0, i32 1
  store i32 4, ptr %1512, align 4, !tbaa !321
  %1513 = load ptr, ptr %1509, align 8, !tbaa !9
  %1514 = getelementptr inbounds %struct._reg_trie_state, ptr %1508, i64 %1498, i32 1
  %1515 = icmp eq ptr %1513, null
  br i1 %1515, label %1535, label %1516

1516:                                             ; preds = %1502, %1504
  %1517 = phi ptr [ %1503, %1502 ], [ %1514, %1504 ]
  %1518 = phi ptr [ %1497, %1502 ], [ %1508, %1504 ]
  %1519 = phi ptr [ %1500, %1502 ], [ %1513, %1504 ]
  %1520 = load i16, ptr %1519, align 4, !tbaa !319
  %1521 = call i16 @llvm.umax.i16(i16 %1520, i16 1)
  br label %1522

1522:                                             ; preds = %1525, %1516
  %1523 = phi i16 [ 1, %1516 ], [ %1530, %1525 ]
  %1524 = icmp eq i16 %1523, %1521
  br i1 %1524, label %1535, label %1525

1525:                                             ; preds = %1522
  %1526 = zext i16 %1523 to i64
  %1527 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1519, i64 %1526
  %1528 = load i16, ptr %1527, align 4, !tbaa !319
  %1529 = icmp eq i16 %1528, %1496
  %1530 = add i16 %1523, 1
  br i1 %1529, label %1531, label %1522, !llvm.loop !322

1531:                                             ; preds = %1525
  %1532 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1519, i64 %1526, i32 1
  %1533 = load i32, ptr %1532, align 4, !tbaa !321
  %1534 = icmp eq i32 %1533, 0
  br i1 %1534, label %1535, label %1576

1535:                                             ; preds = %1522, %1504, %1531
  %1536 = phi ptr [ %1517, %1531 ], [ %1514, %1504 ], [ %1517, %1522 ]
  %1537 = phi ptr [ %1518, %1531 ], [ %1508, %1504 ], [ %1518, %1522 ]
  %1538 = add i32 %1446, 1
  %1539 = zext i32 %1446 to i64
  %1540 = getelementptr inbounds i32, ptr %1368, i64 %1539
  store i32 %1450, ptr %1540, align 4, !tbaa !150
  %1541 = load ptr, ptr %1536, align 8, !tbaa !9
  %1542 = load i16, ptr %1541, align 4, !tbaa !319
  %1543 = zext i16 %1542 to i32
  %1544 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1541, i64 0, i32 1
  %1545 = load i32, ptr %1544, align 4, !tbaa !321
  %1546 = icmp ugt i32 %1545, %1543
  br i1 %1546, label %1559, label %1547

1547:                                             ; preds = %1535
  %1548 = shl nuw nsw i32 %1545, 1
  store i32 %1548, ptr %1544, align 4, !tbaa !321
  %1549 = load ptr, ptr %1536, align 8, !tbaa !9
  %1550 = zext i32 %1548 to i64
  %1551 = shl nuw nsw i64 %1550, 3
  %1552 = call ptr @Perl_safesysrealloc(ptr noundef %1549, i64 noundef %1551) #21
  %1553 = load ptr, ptr %1390, align 8, !tbaa !39
  %1554 = getelementptr inbounds %struct._reg_trie_state, ptr %1553, i64 %1498, i32 1
  store ptr %1552, ptr %1554, align 8, !tbaa !9
  %1555 = load ptr, ptr %1390, align 8, !tbaa !39
  %1556 = getelementptr inbounds %struct._reg_trie_state, ptr %1555, i64 %1498, i32 1
  %1557 = load ptr, ptr %1556, align 8, !tbaa !9
  %1558 = load i16, ptr %1557, align 4, !tbaa !319
  br label %1559

1559:                                             ; preds = %1547, %1535
  %1560 = phi i16 [ %1558, %1547 ], [ %1542, %1535 ]
  %1561 = phi ptr [ %1557, %1547 ], [ %1541, %1535 ]
  %1562 = phi ptr [ %1555, %1547 ], [ %1537, %1535 ]
  %1563 = getelementptr inbounds %struct._reg_trie_state, ptr %1562, i64 %1498, i32 1
  %1564 = zext i16 %1560 to i64
  %1565 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1561, i64 %1564
  store i16 %1496, ptr %1565, align 4, !tbaa !319
  %1566 = load ptr, ptr %1563, align 8, !tbaa !9
  %1567 = load i16, ptr %1566, align 4, !tbaa !319
  %1568 = zext i16 %1567 to i64
  %1569 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1566, i64 %1568, i32 1
  store i32 %1446, ptr %1569, align 4, !tbaa !321
  %1570 = load ptr, ptr %1563, align 8, !tbaa !9
  %1571 = load i16, ptr %1570, align 4, !tbaa !319
  %1572 = add i16 %1571, 1
  store i16 %1572, ptr %1570, align 4, !tbaa !319
  %1573 = add i64 %1447, 1
  br label %1576

1574:                                             ; preds = %1474, %1492
  %1575 = load i64, ptr %9, align 8, !tbaa !71
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.223, i64 noundef %1575) #21
  br label %1576

1576:                                             ; preds = %1531, %1559, %1574
  %1577 = phi i32 [ %1450, %1574 ], [ %1533, %1531 ], [ %1446, %1559 ]
  %1578 = phi i64 [ %1447, %1574 ], [ %1447, %1531 ], [ %1573, %1559 ]
  %1579 = phi i32 [ %1446, %1574 ], [ %1446, %1531 ], [ %1538, %1559 ]
  %1580 = load i64, ptr %8, align 8, !tbaa !71
  %1581 = getelementptr inbounds i8, ptr %1448, i64 %1580
  %1582 = icmp ult ptr %1581, %1437
  br i1 %1582, label %1445, label %1583, !llvm.loop !323

1583:                                             ; preds = %1576
  %1584 = load i8, ptr %1440, align 1, !tbaa !164
  br label %1585

1585:                                             ; preds = %1583, %1436
  %1586 = phi i8 [ %1441, %1436 ], [ %1584, %1583 ]
  %1587 = phi i32 [ 1, %1436 ], [ %1577, %1583 ]
  %1588 = phi i32 [ 0, %1436 ], [ %1451, %1583 ]
  %1589 = phi i64 [ %1409, %1436 ], [ %1578, %1583 ]
  %1590 = phi i32 [ %1406, %1436 ], [ %1579, %1583 ]
  %1591 = load ptr, ptr %1390, align 8, !tbaa !39
  %1592 = zext i32 %1587 to i64
  %1593 = getelementptr inbounds %struct._reg_trie_state, ptr %1591, i64 %1592
  %1594 = load i16, ptr %1593, align 8, !tbaa !183
  %1595 = icmp ugt i8 %1586, 93
  br i1 %1595, label %1596, label %1599

1596:                                             ; preds = %1585
  %1597 = zext i8 %1586 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1597, i32 noundef 93) #21
  %1598 = load i8, ptr %1440, align 1, !tbaa !164
  br label %1599

1599:                                             ; preds = %1596, %1585
  %1600 = phi i8 [ %1598, %1596 ], [ %1586, %1585 ]
  %1601 = zext i8 %1600 to i64
  %1602 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1601
  %1603 = load i8, ptr %1602, align 1, !tbaa !9
  %1604 = icmp eq i8 %1603, 0
  br i1 %1604, label %1608, label %1605

1605:                                             ; preds = %1599
  %1606 = getelementptr inbounds %struct.regnode_1, ptr %1439, i64 0, i32 3
  %1607 = load i32, ptr %1606, align 4, !tbaa !166
  br label %1612

1608:                                             ; preds = %1599
  %1609 = getelementptr inbounds %struct.regnode, ptr %1439, i64 0, i32 2
  %1610 = load i16, ptr %1609, align 2, !tbaa !168
  %1611 = zext i16 %1610 to i32
  br label %1612

1612:                                             ; preds = %1608, %1605
  %1613 = phi i32 [ %1607, %1605 ], [ %1611, %1608 ]
  %1614 = icmp eq i32 %1613, 0
  %1615 = sext i32 %1613 to i64
  %1616 = getelementptr inbounds %struct.regnode, ptr %1439, i64 %1615
  %1617 = select i1 %1614, ptr null, ptr %1616
  %1618 = add i16 %1405, 1
  %1619 = load ptr, ptr %76, align 8, !tbaa !43
  %1620 = zext i16 %1618 to i64
  %1621 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1619, i64 %1620
  store i16 0, ptr %1621, align 4, !tbaa !324
  %1622 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1619, i64 %1620, i32 1
  store i32 %1588, ptr %1622, align 4, !tbaa !326
  %1623 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1619, i64 %1620, i32 2
  store i32 %1587, ptr %1623, align 4, !tbaa !327
  %1624 = icmp ult ptr %1617, %4
  br i1 %1624, label %1625, label %1667

1625:                                             ; preds = %1612
  %1626 = load ptr, ptr %1401, align 8, !tbaa !42
  %1627 = icmp eq ptr %1626, null
  br i1 %1627, label %1628, label %1630

1628:                                             ; preds = %1625
  %1629 = call noalias ptr @calloc(i64 noundef %74, i64 noundef 2) #22
  store ptr %1629, ptr %1401, align 8, !tbaa !42
  br label %1630

1630:                                             ; preds = %1628, %1625
  %1631 = phi ptr [ %1629, %1628 ], [ %1626, %1625 ]
  %1632 = ptrtoint ptr %1617 to i64
  %1633 = sub i64 %1632, %1402
  %1634 = lshr exact i64 %1633, 2
  %1635 = trunc i64 %1634 to i16
  %1636 = getelementptr inbounds i16, ptr %1631, i64 %1620
  store i16 %1635, ptr %1636, align 2, !tbaa !163
  %1637 = icmp eq ptr %1407, null
  %1638 = select i1 %1637, ptr %1617, ptr %1407
  %1639 = icmp eq ptr %1408, null
  br i1 %1639, label %1640, label %1667

1640:                                             ; preds = %1630
  %1641 = icmp eq ptr %1404, null
  br i1 %1641, label %1667, label %1642

1642:                                             ; preds = %1640
  %1643 = getelementptr inbounds %struct.regnode, ptr %1404, i64 0, i32 1
  %1644 = load i8, ptr %1643, align 1, !tbaa !164
  %1645 = icmp ugt i8 %1644, 93
  br i1 %1645, label %1646, label %1649

1646:                                             ; preds = %1642
  %1647 = zext i8 %1644 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1647, i32 noundef 93) #21
  %1648 = load i8, ptr %1643, align 1, !tbaa !164
  br label %1649

1649:                                             ; preds = %1646, %1642
  %1650 = phi i8 [ %1648, %1646 ], [ %1644, %1642 ]
  %1651 = zext i8 %1650 to i64
  %1652 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1651
  %1653 = load i8, ptr %1652, align 1, !tbaa !9
  %1654 = icmp eq i8 %1653, 0
  br i1 %1654, label %1657, label %1655

1655:                                             ; preds = %1649
  %1656 = load i32, ptr %1410, align 4, !tbaa !166
  br label %1661

1657:                                             ; preds = %1649
  %1658 = getelementptr inbounds %struct.regnode, ptr %1404, i64 0, i32 2
  %1659 = load i16, ptr %1658, align 2, !tbaa !168
  %1660 = zext i16 %1659 to i32
  br label %1661

1661:                                             ; preds = %1657, %1655
  %1662 = phi i32 [ %1656, %1655 ], [ %1660, %1657 ]
  %1663 = icmp eq i32 %1662, 0
  br i1 %1663, label %1667, label %1664

1664:                                             ; preds = %1661
  %1665 = sext i32 %1662 to i64
  %1666 = getelementptr inbounds %struct.regnode, ptr %1404, i64 %1665
  br label %1667

1667:                                             ; preds = %1664, %1661, %1640, %1630, %1612
  %1668 = phi ptr [ %1408, %1630 ], [ %1408, %1612 ], [ %1666, %1664 ], [ null, %1640 ], [ null, %1661 ]
  %1669 = phi ptr [ %1638, %1630 ], [ %1407, %1612 ], [ %1638, %1664 ], [ %1638, %1640 ], [ %1638, %1661 ]
  %1670 = icmp eq i16 %1594, 0
  br i1 %1670, label %1677, label %1671

1671:                                             ; preds = %1667
  %1672 = load ptr, ptr %76, align 8, !tbaa !43
  %1673 = zext i16 %1594 to i64
  %1674 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1672, i64 %1673
  %1675 = load i16, ptr %1674, align 4, !tbaa !324
  %1676 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1672, i64 %1620
  store i16 %1675, ptr %1676, align 4, !tbaa !324
  store i16 %1618, ptr %1674, align 4, !tbaa !324
  br label %1680

1677:                                             ; preds = %1667
  %1678 = load ptr, ptr %1390, align 8, !tbaa !39
  %1679 = getelementptr inbounds %struct._reg_trie_state, ptr %1678, i64 %1592
  store i16 %1618, ptr %1679, align 8, !tbaa !183
  br label %1680

1680:                                             ; preds = %1677, %1671
  %1681 = icmp eq ptr %1404, null
  br i1 %1681, label %1707, label %1682

1682:                                             ; preds = %1680
  %1683 = getelementptr inbounds %struct.regnode, ptr %1404, i64 0, i32 1
  %1684 = load i8, ptr %1683, align 1, !tbaa !164
  %1685 = icmp ugt i8 %1684, 93
  br i1 %1685, label %1686, label %1689

1686:                                             ; preds = %1682
  %1687 = zext i8 %1684 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1687, i32 noundef 93) #21
  %1688 = load i8, ptr %1683, align 1, !tbaa !164
  br label %1689

1689:                                             ; preds = %1686, %1682
  %1690 = phi i8 [ %1688, %1686 ], [ %1684, %1682 ]
  %1691 = zext i8 %1690 to i64
  %1692 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1691
  %1693 = load i8, ptr %1692, align 1, !tbaa !9
  %1694 = icmp eq i8 %1693, 0
  br i1 %1694, label %1697, label %1695

1695:                                             ; preds = %1689
  %1696 = load i32, ptr %1410, align 4, !tbaa !166
  br label %1701

1697:                                             ; preds = %1689
  %1698 = getelementptr inbounds %struct.regnode, ptr %1404, i64 0, i32 2
  %1699 = load i16, ptr %1698, align 2, !tbaa !168
  %1700 = zext i16 %1699 to i32
  br label %1701

1701:                                             ; preds = %1697, %1695
  %1702 = phi i32 [ %1696, %1695 ], [ %1700, %1697 ]
  %1703 = icmp eq i32 %1702, 0
  br i1 %1703, label %1707, label %1704

1704:                                             ; preds = %1701
  %1705 = sext i32 %1702 to i64
  %1706 = getelementptr inbounds %struct.regnode, ptr %1404, i64 %1705
  br label %1707

1707:                                             ; preds = %1680, %1701, %1704
  %1708 = phi ptr [ %1706, %1704 ], [ null, %1680 ], [ null, %1701 ]
  %1709 = icmp ult ptr %1708, %3
  br i1 %1709, label %1403, label %1710, !llvm.loop !328

1710:                                             ; preds = %1707
  %1711 = load ptr, ptr %1390, align 8, !tbaa !39
  br label %1712

1712:                                             ; preds = %1710, %1388
  %1713 = phi ptr [ %1394, %1388 ], [ %1711, %1710 ]
  %1714 = phi i64 [ 1, %1388 ], [ %1589, %1710 ]
  %1715 = phi ptr [ null, %1388 ], [ %1668, %1710 ]
  %1716 = phi ptr [ null, %1388 ], [ %1669, %1710 ]
  %1717 = phi i32 [ 2, %1388 ], [ %1590, %1710 ]
  %1718 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 13
  store i32 %1717, ptr %1718, align 4, !tbaa !175
  %1719 = zext i32 %1717 to i64
  %1720 = shl nuw nsw i64 %1719, 4
  %1721 = call ptr @realloc(ptr noundef %1713, i64 noundef %1720) #25
  store ptr %1721, ptr %1390, align 8, !tbaa !39
  %1722 = call noalias ptr @calloc(i64 noundef %1714, i64 noundef 8) #22
  %1723 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 4
  store ptr %1722, ptr %1723, align 8, !tbaa !40
  %1724 = icmp ugt i32 %1717, 1
  br i1 %1724, label %1725, label %1891

1725:                                             ; preds = %1712, %1882
  %1726 = phi i64 [ %1889, %1882 ], [ 1, %1712 ]
  %1727 = phi i32 [ %1886, %1882 ], [ 0, %1712 ]
  %1728 = phi i32 [ %1885, %1882 ], [ 0, %1712 ]
  %1729 = phi i64 [ %1884, %1882 ], [ %1714, %1712 ]
  %1730 = load ptr, ptr %1390, align 8, !tbaa !39
  %1731 = getelementptr inbounds %struct._reg_trie_state, ptr %1730, i64 %1726, i32 1
  %1732 = load ptr, ptr %1731, align 8, !tbaa !9
  %1733 = icmp eq ptr %1732, null
  br i1 %1733, label %1882, label %1734

1734:                                             ; preds = %1725
  %1735 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1732, i64 1
  %1736 = load i16, ptr %1735, align 4, !tbaa !319
  %1737 = load i16, ptr %1732, align 4, !tbaa !319
  %1738 = icmp ugt i16 %1737, 2
  br i1 %1738, label %1739, label %1781

1739:                                             ; preds = %1734
  %1740 = zext i16 %1737 to i64
  %1741 = and i64 %1740, 1
  %1742 = icmp eq i16 %1737, 3
  br i1 %1742, label %1767, label %1743

1743:                                             ; preds = %1739
  %1744 = and i64 %1740, 65534
  %1745 = add nsw i64 %1744, -4
  br label %1746

1746:                                             ; preds = %1746, %1743
  %1747 = phi i64 [ 2, %1743 ], [ %1764, %1746 ]
  %1748 = phi i16 [ %1736, %1743 ], [ %1763, %1746 ]
  %1749 = phi i16 [ %1736, %1743 ], [ %1762, %1746 ]
  %1750 = phi i64 [ 0, %1743 ], [ %1765, %1746 ]
  %1751 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1732, i64 %1747
  %1752 = load i16, ptr %1751, align 4, !tbaa !319
  %1753 = icmp ult i16 %1752, %1749
  %1754 = call i16 @llvm.umax.i16(i16 %1752, i16 %1748)
  %1755 = call i16 @llvm.umin.i16(i16 %1752, i16 %1749)
  %1756 = select i1 %1753, i16 %1748, i16 %1754
  %1757 = or i64 %1747, 1
  %1758 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1732, i64 %1757
  %1759 = load i16, ptr %1758, align 4, !tbaa !319
  %1760 = icmp ult i16 %1759, %1755
  %1761 = call i16 @llvm.umax.i16(i16 %1759, i16 %1756)
  %1762 = call i16 @llvm.umin.i16(i16 %1759, i16 %1755)
  %1763 = select i1 %1760, i16 %1756, i16 %1761
  %1764 = add nuw nsw i64 %1747, 2
  %1765 = add i64 %1750, 2
  %1766 = icmp eq i64 %1750, %1745
  br i1 %1766, label %1767, label %1746, !llvm.loop !329

1767:                                             ; preds = %1746, %1739
  %1768 = phi i16 [ undef, %1739 ], [ %1762, %1746 ]
  %1769 = phi i16 [ undef, %1739 ], [ %1763, %1746 ]
  %1770 = phi i64 [ 2, %1739 ], [ %1764, %1746 ]
  %1771 = phi i16 [ %1736, %1739 ], [ %1763, %1746 ]
  %1772 = phi i16 [ %1736, %1739 ], [ %1762, %1746 ]
  %1773 = icmp eq i64 %1741, 0
  br i1 %1773, label %1781, label %1774

1774:                                             ; preds = %1767
  %1775 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1732, i64 %1770
  %1776 = load i16, ptr %1775, align 4, !tbaa !319
  %1777 = icmp ult i16 %1776, %1772
  %1778 = call i16 @llvm.umax.i16(i16 %1776, i16 %1771)
  %1779 = call i16 @llvm.umin.i16(i16 %1776, i16 %1772)
  %1780 = select i1 %1777, i16 %1771, i16 %1778
  br label %1781

1781:                                             ; preds = %1774, %1767, %1734
  %1782 = phi i16 [ %1736, %1734 ], [ %1768, %1767 ], [ %1779, %1774 ]
  %1783 = phi i16 [ %1736, %1734 ], [ %1769, %1767 ], [ %1780, %1774 ]
  %1784 = zext i16 %1783 to i32
  %1785 = zext i16 %1782 to i32
  %1786 = add i32 %1728, 1
  %1787 = sub i32 %1786, %1785
  %1788 = add i32 %1787, %1784
  %1789 = zext i32 %1788 to i64
  %1790 = icmp ult i64 %1729, %1789
  br i1 %1790, label %1791, label %1798

1791:                                             ; preds = %1781
  %1792 = shl nuw nsw i64 %1729, 1
  %1793 = load ptr, ptr %1723, align 8, !tbaa !40
  %1794 = shl nuw nsw i64 %1729, 4
  %1795 = call ptr @realloc(ptr noundef %1793, i64 noundef %1794) #25
  store ptr %1795, ptr %1723, align 8, !tbaa !40
  %1796 = getelementptr inbounds %struct._reg_trie_trans, ptr %1795, i64 %1729
  %1797 = shl nuw nsw i64 %1729, 3
  call void @llvm.memset.p0.i64(ptr align 1 %1796, i8 0, i64 %1797, i1 false)
  br label %1798

1798:                                             ; preds = %1791, %1781
  %1799 = phi i64 [ %1792, %1791 ], [ %1729, %1781 ]
  %1800 = load i16, ptr %1371, align 8, !tbaa !174
  %1801 = zext i16 %1800 to i32
  %1802 = sub i32 %1728, %1785
  %1803 = add i32 %1802, %1801
  %1804 = icmp eq i16 %1783, %1782
  br i1 %1804, label %1809, label %1805

1805:                                             ; preds = %1798
  %1806 = load ptr, ptr %1390, align 8, !tbaa !39
  %1807 = getelementptr inbounds %struct._reg_trie_state, ptr %1806, i64 %1726, i32 1
  %1808 = trunc i64 %1726 to i32
  br label %1841

1809:                                             ; preds = %1798
  %1810 = icmp ult i32 %1727, %1728
  %1811 = load ptr, ptr %1723, align 8, !tbaa !40
  br i1 %1810, label %1812, label %1833

1812:                                             ; preds = %1809
  %1813 = zext i32 %1727 to i64
  br label %1814

1814:                                             ; preds = %1812, %1829
  %1815 = phi i64 [ %1813, %1812 ], [ %1830, %1829 ]
  %1816 = getelementptr inbounds %struct._reg_trie_trans, ptr %1811, i64 %1815
  %1817 = load i32, ptr %1816, align 4, !tbaa !181
  %1818 = icmp eq i32 %1817, 0
  br i1 %1818, label %1819, label %1829

1819:                                             ; preds = %1814
  %1820 = getelementptr inbounds %struct._reg_trie_trans, ptr %1811, i64 %1815
  %1821 = trunc i64 %1815 to i32
  %1822 = sub nsw i32 %1801, %1785
  %1823 = add i32 %1822, %1821
  %1824 = load ptr, ptr %1390, align 8, !tbaa !39
  %1825 = getelementptr inbounds %struct._reg_trie_state, ptr %1824, i64 %1726, i32 1
  %1826 = load ptr, ptr %1825, align 8, !tbaa !9
  %1827 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1826, i64 1, i32 1
  %1828 = load i32, ptr %1827, align 4, !tbaa !321
  store i32 %1828, ptr %1820, align 4, !tbaa !181
  br label %1866

1829:                                             ; preds = %1814
  %1830 = add nuw nsw i64 %1815, 1
  %1831 = trunc i64 %1830 to i32
  %1832 = icmp eq i32 %1728, %1831
  br i1 %1832, label %1833, label %1814, !llvm.loop !330

1833:                                             ; preds = %1829, %1809
  %1834 = load ptr, ptr %1390, align 8, !tbaa !39
  %1835 = getelementptr inbounds %struct._reg_trie_state, ptr %1834, i64 %1726, i32 1
  %1836 = load ptr, ptr %1835, align 8, !tbaa !9
  %1837 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1836, i64 1, i32 1
  %1838 = load i32, ptr %1837, align 4, !tbaa !321
  %1839 = zext i32 %1728 to i64
  %1840 = getelementptr inbounds %struct._reg_trie_trans, ptr %1811, i64 %1839
  store i32 %1838, ptr %1840, align 4, !tbaa !181
  br label %1866

1841:                                             ; preds = %1805, %1853
  %1842 = phi i16 [ %1865, %1853 ], [ 1, %1805 ]
  %1843 = zext i16 %1842 to i32
  %1844 = load ptr, ptr %1807, align 8, !tbaa !9
  %1845 = icmp eq ptr %1844, null
  br i1 %1845, label %1850, label %1846

1846:                                             ; preds = %1841
  %1847 = load i16, ptr %1844, align 4, !tbaa !319
  %1848 = zext i16 %1847 to i32
  %1849 = add nsw i32 %1848, -1
  br label %1850

1850:                                             ; preds = %1841, %1846
  %1851 = phi i32 [ %1849, %1846 ], [ 0, %1841 ]
  %1852 = icmp slt i32 %1851, %1843
  br i1 %1852, label %1874, label %1853

1853:                                             ; preds = %1850
  %1854 = zext i16 %1842 to i64
  %1855 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1844, i64 %1854
  %1856 = load i16, ptr %1855, align 4, !tbaa !319
  %1857 = zext i16 %1856 to i32
  %1858 = add i32 %1802, %1857
  %1859 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1844, i64 %1854, i32 1
  %1860 = load i32, ptr %1859, align 4, !tbaa !321
  %1861 = load ptr, ptr %1723, align 8, !tbaa !40
  %1862 = zext i32 %1858 to i64
  %1863 = getelementptr inbounds %struct._reg_trie_trans, ptr %1861, i64 %1862
  store i32 %1860, ptr %1863, align 4, !tbaa !181
  %1864 = getelementptr inbounds %struct._reg_trie_trans, ptr %1861, i64 %1862, i32 1
  store i32 %1808, ptr %1864, align 4, !tbaa !179
  %1865 = add i16 %1842, 1
  br label %1841, !llvm.loop !331

1866:                                             ; preds = %1833, %1819
  %1867 = phi i64 [ %1815, %1819 ], [ %1839, %1833 ]
  %1868 = phi ptr [ %1824, %1819 ], [ %1834, %1833 ]
  %1869 = phi i32 [ %1728, %1819 ], [ %1786, %1833 ]
  %1870 = phi i32 [ %1821, %1819 ], [ %1786, %1833 ]
  %1871 = phi i32 [ %1823, %1819 ], [ %1803, %1833 ]
  %1872 = getelementptr inbounds %struct._reg_trie_trans, ptr %1811, i64 %1867, i32 1
  %1873 = trunc i64 %1726 to i32
  store i32 %1873, ptr %1872, align 4, !tbaa !179
  br label %1874

1874:                                             ; preds = %1850, %1866
  %1875 = phi ptr [ %1868, %1866 ], [ %1806, %1850 ]
  %1876 = phi i32 [ %1869, %1866 ], [ %1788, %1850 ]
  %1877 = phi i32 [ %1870, %1866 ], [ %1727, %1850 ]
  %1878 = phi i32 [ %1871, %1866 ], [ %1803, %1850 ]
  %1879 = getelementptr inbounds %struct._reg_trie_state, ptr %1875, i64 %1726, i32 1
  %1880 = load ptr, ptr %1879, align 8, !tbaa !9
  call void @Perl_safesysfree(ptr noundef %1880) #21
  %1881 = load ptr, ptr %1390, align 8, !tbaa !39
  br label %1882

1882:                                             ; preds = %1874, %1725
  %1883 = phi ptr [ %1881, %1874 ], [ %1730, %1725 ]
  %1884 = phi i64 [ %1799, %1874 ], [ %1729, %1725 ]
  %1885 = phi i32 [ %1876, %1874 ], [ %1728, %1725 ]
  %1886 = phi i32 [ %1877, %1874 ], [ %1727, %1725 ]
  %1887 = phi i32 [ %1878, %1874 ], [ 0, %1725 ]
  %1888 = getelementptr inbounds %struct._reg_trie_state, ptr %1883, i64 %1726, i32 1
  store i32 %1887, ptr %1888, align 8, !tbaa !9
  %1889 = add nuw nsw i64 %1726, 1
  %1890 = icmp eq i64 %1889, %1719
  br i1 %1890, label %1891, label %1725, !llvm.loop !332

1891:                                             ; preds = %1882, %1712
  %1892 = phi i32 [ 0, %1712 ], [ %1885, %1882 ]
  %1893 = add i32 %1892, 1
  %1894 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 1
  store i32 %1893, ptr %1894, align 4, !tbaa !176
  br label %2313

1895:                                             ; preds = %1385
  %1896 = load i16, ptr %1371, align 8, !tbaa !174
  %1897 = zext i16 %1896 to i64
  %1898 = mul i64 %1370, %1897
  %1899 = add i64 %1898, 1
  %1900 = call noalias ptr @calloc(i64 noundef %1899, i64 noundef 8) #22
  %1901 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 4
  store ptr %1900, ptr %1901, align 8, !tbaa !40
  %1902 = call noalias ptr @calloc(i64 noundef %1366, i64 noundef 16) #22
  %1903 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 3
  store ptr %1902, ptr %1903, align 8, !tbaa !39
  %1904 = zext i16 %1896 to i32
  %1905 = add nuw nsw i32 %1904, 1
  br i1 %93, label %1906, label %2168

1906:                                             ; preds = %1895
  %1907 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1908 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 6
  %1909 = ptrtoint ptr %92 to i64
  br label %1910

1910:                                             ; preds = %1906, %2162
  %1911 = phi ptr [ %2, %1906 ], [ %2163, %2162 ]
  %1912 = phi i16 [ 0, %1906 ], [ %2073, %2162 ]
  %1913 = phi i32 [ %1905, %1906 ], [ %2040, %2162 ]
  %1914 = phi ptr [ null, %1906 ], [ %2124, %2162 ]
  %1915 = phi ptr [ null, %1906 ], [ %2123, %2162 ]
  %1916 = getelementptr inbounds %struct.regnode, ptr %1911, i64 1
  %1917 = getelementptr inbounds %struct.regnode, ptr %1911, i64 2
  %1918 = load i8, ptr %1916, align 2, !tbaa !218
  %1919 = zext i8 %1918 to i64
  %1920 = getelementptr inbounds i8, ptr %1917, i64 %1919
  %1921 = getelementptr inbounds %struct.regnode, ptr %1911, i64 1, i32 1
  %1922 = load i8, ptr %1921, align 1, !tbaa !164
  %1923 = icmp eq i8 %1922, 40
  br i1 %1923, label %1924, label %1942

1924:                                             ; preds = %1910
  %1925 = getelementptr inbounds %struct.regnode, ptr %1911, i64 1, i32 2
  %1926 = load i16, ptr %1925, align 2, !tbaa !168
  %1927 = icmp eq i16 %1926, 0
  %1928 = zext i16 %1926 to i64
  %1929 = getelementptr inbounds %struct.regnode, ptr %1916, i64 %1928
  %1930 = select i1 %1927, ptr null, ptr %1929
  %1931 = icmp eq ptr %1930, %4
  br i1 %1931, label %1942, label %1932

1932:                                             ; preds = %1924
  %1933 = getelementptr inbounds %struct.regnode, ptr %1930, i64 0, i32 1
  %1934 = load i8, ptr %1933, align 1, !tbaa !164
  %1935 = zext i8 %1934 to i32
  %1936 = icmp eq i32 %1935, %6
  br i1 %1936, label %1937, label %1942

1937:                                             ; preds = %1932
  %1938 = getelementptr inbounds %struct.regnode_string, ptr %1930, i64 0, i32 3
  %1939 = load i8, ptr %1930, align 2, !tbaa !218
  %1940 = zext i8 %1939 to i64
  %1941 = getelementptr inbounds i8, ptr %1938, i64 %1940
  br label %1942

1942:                                             ; preds = %1924, %1932, %1937, %1910
  %1943 = phi ptr [ %1916, %1910 ], [ %1929, %1937 ], [ %1916, %1932 ], [ %1916, %1924 ]
  %1944 = phi ptr [ %1917, %1910 ], [ %1938, %1937 ], [ %1917, %1932 ], [ %1917, %1924 ]
  %1945 = phi ptr [ %1920, %1910 ], [ %1941, %1937 ], [ %1920, %1932 ], [ %1920, %1924 ]
  %1946 = getelementptr inbounds %struct.regnode, ptr %1943, i64 0, i32 1
  %1947 = load i8, ptr %1946, align 1, !tbaa !164
  %1948 = icmp ne i8 %1947, 40
  %1949 = icmp ult ptr %1944, %1945
  %1950 = select i1 %1948, i1 %1949, i1 false
  br i1 %1950, label %1951, label %2036

1951:                                             ; preds = %1942, %2028
  %1952 = phi i32 [ %2030, %2028 ], [ %1913, %1942 ]
  %1953 = phi i32 [ %1956, %2028 ], [ 0, %1942 ]
  %1954 = phi i32 [ %2029, %2028 ], [ 1, %1942 ]
  %1955 = phi ptr [ %2032, %2028 ], [ %1944, %1942 ]
  %1956 = add i32 %1953, 1
  %1957 = load i32, ptr %1907, align 8, !tbaa !98
  %1958 = icmp eq i32 %1957, 0
  br i1 %1958, label %1961, label %1959

1959:                                             ; preds = %1951
  %1960 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef %1955, ptr noundef nonnull %8) #21
  store i64 %1960, ptr %9, align 8, !tbaa !71
  br label %1971

1961:                                             ; preds = %1951
  %1962 = load i8, ptr %1955, align 1, !tbaa !9
  %1963 = zext i8 %1962 to i64
  br i1 %56, label %1964, label %1970

1964:                                             ; preds = %1961
  %1965 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %1963
  %1966 = load i8, ptr %1965, align 1, !tbaa !9
  %1967 = zext i8 %1966 to i64
  %1968 = icmp eq i8 %1966, -75
  %1969 = select i1 %1968, i64 956, i64 %1967
  store i64 %1969, ptr %9, align 8
  store i64 1, ptr %8, align 8, !tbaa !71
  br label %1971

1970:                                             ; preds = %1961
  store i64 %1963, ptr %9, align 8, !tbaa !71
  store i64 1, ptr %8, align 8, !tbaa !71
  br label %1974

1971:                                             ; preds = %1964, %1959
  %1972 = phi i64 [ %1969, %1964 ], [ %1960, %1959 ]
  %1973 = icmp ult i64 %1972, 256
  br i1 %1973, label %1974, label %1979

1974:                                             ; preds = %1970, %1971
  %1975 = phi i64 [ %1963, %1970 ], [ %1972, %1971 ]
  %1976 = load ptr, ptr %66, align 8, !tbaa !38
  %1977 = getelementptr inbounds i16, ptr %1976, i64 %1975
  %1978 = load i16, ptr %1977, align 2, !tbaa !163
  br label %1997

1979:                                             ; preds = %1971
  %1980 = call ptr @Perl_hv_common_key_len(ptr noundef %1365, ptr noundef nonnull %9, i32 noundef 8, i32 noundef 32, ptr noundef null, i32 noundef 0) #21
  %1981 = icmp eq ptr %1980, null
  br i1 %1981, label %2026, label %1982

1982:                                             ; preds = %1979
  %1983 = load ptr, ptr %1980, align 8, !tbaa !5
  %1984 = getelementptr inbounds %struct.sv, ptr %1983, i64 0, i32 2
  %1985 = load i32, ptr %1984, align 4, !tbaa !62
  %1986 = and i32 %1985, 2097408
  %1987 = icmp eq i32 %1986, 256
  br i1 %1987, label %1988, label %1992

1988:                                             ; preds = %1982
  %1989 = load ptr, ptr %1983, align 8, !tbaa !63
  %1990 = getelementptr inbounds %struct.xpviv, ptr %1989, i64 0, i32 4
  %1991 = load i64, ptr %1990, align 8, !tbaa !9
  br label %1994

1992:                                             ; preds = %1982
  %1993 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1983, i32 noundef 2) #21
  br label %1994

1994:                                             ; preds = %1992, %1988
  %1995 = phi i64 [ %1991, %1988 ], [ %1993, %1992 ]
  %1996 = trunc i64 %1995 to i16
  br label %1997

1997:                                             ; preds = %1994, %1974
  %1998 = phi i16 [ %1978, %1974 ], [ %1996, %1994 ]
  %1999 = icmp eq i16 %1998, 0
  br i1 %1999, label %2026, label %2000

2000:                                             ; preds = %1997
  %2001 = add i16 %1998, -1
  %2002 = load ptr, ptr %1901, align 8, !tbaa !40
  %2003 = zext i16 %2001 to i32
  %2004 = add i32 %1954, %2003
  %2005 = zext i32 %2004 to i64
  %2006 = getelementptr inbounds %struct._reg_trie_trans, ptr %2002, i64 %2005
  %2007 = load i32, ptr %2006, align 4, !tbaa !181
  %2008 = icmp eq i32 %2007, 0
  br i1 %2008, label %2009, label %2028

2009:                                             ; preds = %2000
  store i32 %1952, ptr %2006, align 4, !tbaa !181
  %2010 = zext i32 %1954 to i64
  %2011 = getelementptr inbounds %struct._reg_trie_trans, ptr %2002, i64 %2010, i32 1
  %2012 = load i32, ptr %2011, align 4, !tbaa !179
  %2013 = add i32 %2012, 1
  store i32 %2013, ptr %2011, align 4, !tbaa !179
  %2014 = add i32 %1954, -1
  %2015 = load i16, ptr %1371, align 8, !tbaa !174
  %2016 = zext i16 %2015 to i32
  %2017 = udiv i32 %2014, %2016
  %2018 = add i32 %2017, 1
  %2019 = add i32 %1952, -1
  %2020 = udiv i32 %2019, %2016
  %2021 = add i32 %2020, 1
  %2022 = zext i32 %2021 to i64
  %2023 = getelementptr inbounds i32, ptr %1368, i64 %2022
  store i32 %2018, ptr %2023, align 4, !tbaa !150
  %2024 = add i32 %1952, %2016
  %2025 = load i32, ptr %2006, align 4, !tbaa !181
  br label %2028

2026:                                             ; preds = %1979, %1997
  %2027 = load i64, ptr %9, align 8, !tbaa !71
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.223, i64 noundef %2027) #21
  br label %2028

2028:                                             ; preds = %2000, %2009, %2026
  %2029 = phi i32 [ %1954, %2026 ], [ %2007, %2000 ], [ %2025, %2009 ]
  %2030 = phi i32 [ %1952, %2026 ], [ %1952, %2000 ], [ %2024, %2009 ]
  %2031 = load i64, ptr %8, align 8, !tbaa !71
  %2032 = getelementptr inbounds i8, ptr %1955, i64 %2031
  %2033 = icmp ult ptr %2032, %1945
  br i1 %2033, label %1951, label %2034, !llvm.loop !333

2034:                                             ; preds = %2028
  %2035 = load i8, ptr %1946, align 1, !tbaa !164
  br label %2036

2036:                                             ; preds = %2034, %1942
  %2037 = phi i8 [ %1947, %1942 ], [ %2035, %2034 ]
  %2038 = phi i32 [ 1, %1942 ], [ %2029, %2034 ]
  %2039 = phi i32 [ 0, %1942 ], [ %1956, %2034 ]
  %2040 = phi i32 [ %1913, %1942 ], [ %2030, %2034 ]
  %2041 = add i32 %2038, -1
  %2042 = load i16, ptr %1371, align 8, !tbaa !174
  %2043 = zext i16 %2042 to i32
  %2044 = udiv i32 %2041, %2043
  %2045 = add i32 %2044, 1
  %2046 = load ptr, ptr %1903, align 8, !tbaa !39
  %2047 = zext i32 %2045 to i64
  %2048 = getelementptr inbounds %struct._reg_trie_state, ptr %2046, i64 %2047
  %2049 = load i16, ptr %2048, align 8, !tbaa !183
  %2050 = icmp ugt i8 %2037, 93
  br i1 %2050, label %2051, label %2054

2051:                                             ; preds = %2036
  %2052 = zext i8 %2037 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2052, i32 noundef 93) #21
  %2053 = load i8, ptr %1946, align 1, !tbaa !164
  br label %2054

2054:                                             ; preds = %2051, %2036
  %2055 = phi i8 [ %2053, %2051 ], [ %2037, %2036 ]
  %2056 = zext i8 %2055 to i64
  %2057 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2056
  %2058 = load i8, ptr %2057, align 1, !tbaa !9
  %2059 = icmp eq i8 %2058, 0
  br i1 %2059, label %2063, label %2060

2060:                                             ; preds = %2054
  %2061 = getelementptr inbounds %struct.regnode_1, ptr %1943, i64 0, i32 3
  %2062 = load i32, ptr %2061, align 4, !tbaa !166
  br label %2067

2063:                                             ; preds = %2054
  %2064 = getelementptr inbounds %struct.regnode, ptr %1943, i64 0, i32 2
  %2065 = load i16, ptr %2064, align 2, !tbaa !168
  %2066 = zext i16 %2065 to i32
  br label %2067

2067:                                             ; preds = %2063, %2060
  %2068 = phi i32 [ %2062, %2060 ], [ %2066, %2063 ]
  %2069 = icmp eq i32 %2068, 0
  %2070 = sext i32 %2068 to i64
  %2071 = getelementptr inbounds %struct.regnode, ptr %1943, i64 %2070
  %2072 = select i1 %2069, ptr null, ptr %2071
  %2073 = add i16 %1912, 1
  %2074 = load ptr, ptr %76, align 8, !tbaa !43
  %2075 = zext i16 %2073 to i64
  %2076 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2074, i64 %2075
  store i16 0, ptr %2076, align 4, !tbaa !324
  %2077 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2074, i64 %2075, i32 1
  store i32 %2039, ptr %2077, align 4, !tbaa !326
  %2078 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2074, i64 %2075, i32 2
  store i32 %2045, ptr %2078, align 4, !tbaa !327
  %2079 = icmp ult ptr %2072, %4
  br i1 %2079, label %2080, label %2122

2080:                                             ; preds = %2067
  %2081 = load ptr, ptr %1908, align 8, !tbaa !42
  %2082 = icmp eq ptr %2081, null
  br i1 %2082, label %2083, label %2085

2083:                                             ; preds = %2080
  %2084 = call noalias ptr @calloc(i64 noundef %74, i64 noundef 2) #22
  store ptr %2084, ptr %1908, align 8, !tbaa !42
  br label %2085

2085:                                             ; preds = %2083, %2080
  %2086 = phi ptr [ %2084, %2083 ], [ %2081, %2080 ]
  %2087 = ptrtoint ptr %2072 to i64
  %2088 = sub i64 %2087, %1909
  %2089 = lshr exact i64 %2088, 2
  %2090 = trunc i64 %2089 to i16
  %2091 = getelementptr inbounds i16, ptr %2086, i64 %2075
  store i16 %2090, ptr %2091, align 2, !tbaa !163
  %2092 = icmp eq ptr %1914, null
  %2093 = select i1 %2092, ptr %2072, ptr %1914
  %2094 = icmp eq ptr %1915, null
  br i1 %2094, label %2095, label %2122

2095:                                             ; preds = %2085
  %2096 = icmp eq ptr %1911, null
  br i1 %2096, label %2122, label %2097

2097:                                             ; preds = %2095
  %2098 = getelementptr inbounds %struct.regnode, ptr %1911, i64 0, i32 1
  %2099 = load i8, ptr %2098, align 1, !tbaa !164
  %2100 = icmp ugt i8 %2099, 93
  br i1 %2100, label %2101, label %2104

2101:                                             ; preds = %2097
  %2102 = zext i8 %2099 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2102, i32 noundef 93) #21
  %2103 = load i8, ptr %2098, align 1, !tbaa !164
  br label %2104

2104:                                             ; preds = %2101, %2097
  %2105 = phi i8 [ %2103, %2101 ], [ %2099, %2097 ]
  %2106 = zext i8 %2105 to i64
  %2107 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2106
  %2108 = load i8, ptr %2107, align 1, !tbaa !9
  %2109 = icmp eq i8 %2108, 0
  br i1 %2109, label %2112, label %2110

2110:                                             ; preds = %2104
  %2111 = load i32, ptr %1916, align 4, !tbaa !166
  br label %2116

2112:                                             ; preds = %2104
  %2113 = getelementptr inbounds %struct.regnode, ptr %1911, i64 0, i32 2
  %2114 = load i16, ptr %2113, align 2, !tbaa !168
  %2115 = zext i16 %2114 to i32
  br label %2116

2116:                                             ; preds = %2112, %2110
  %2117 = phi i32 [ %2111, %2110 ], [ %2115, %2112 ]
  %2118 = icmp eq i32 %2117, 0
  br i1 %2118, label %2122, label %2119

2119:                                             ; preds = %2116
  %2120 = sext i32 %2117 to i64
  %2121 = getelementptr inbounds %struct.regnode, ptr %1911, i64 %2120
  br label %2122

2122:                                             ; preds = %2119, %2116, %2095, %2085, %2067
  %2123 = phi ptr [ %1915, %2085 ], [ %1915, %2067 ], [ %2121, %2119 ], [ null, %2095 ], [ null, %2116 ]
  %2124 = phi ptr [ %2093, %2085 ], [ %1914, %2067 ], [ %2093, %2119 ], [ %2093, %2095 ], [ %2093, %2116 ]
  %2125 = icmp eq i16 %2049, 0
  br i1 %2125, label %2132, label %2126

2126:                                             ; preds = %2122
  %2127 = load ptr, ptr %76, align 8, !tbaa !43
  %2128 = zext i16 %2049 to i64
  %2129 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2127, i64 %2128
  %2130 = load i16, ptr %2129, align 4, !tbaa !324
  %2131 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2127, i64 %2075
  store i16 %2130, ptr %2131, align 4, !tbaa !324
  store i16 %2073, ptr %2129, align 4, !tbaa !324
  br label %2135

2132:                                             ; preds = %2122
  %2133 = load ptr, ptr %1903, align 8, !tbaa !39
  %2134 = getelementptr inbounds %struct._reg_trie_state, ptr %2133, i64 %2047
  store i16 %2073, ptr %2134, align 8, !tbaa !183
  br label %2135

2135:                                             ; preds = %2132, %2126
  %2136 = icmp eq ptr %1911, null
  br i1 %2136, label %2162, label %2137

2137:                                             ; preds = %2135
  %2138 = getelementptr inbounds %struct.regnode, ptr %1911, i64 0, i32 1
  %2139 = load i8, ptr %2138, align 1, !tbaa !164
  %2140 = icmp ugt i8 %2139, 93
  br i1 %2140, label %2141, label %2144

2141:                                             ; preds = %2137
  %2142 = zext i8 %2139 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %2142, i32 noundef 93) #21
  %2143 = load i8, ptr %2138, align 1, !tbaa !164
  br label %2144

2144:                                             ; preds = %2141, %2137
  %2145 = phi i8 [ %2143, %2141 ], [ %2139, %2137 ]
  %2146 = zext i8 %2145 to i64
  %2147 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2146
  %2148 = load i8, ptr %2147, align 1, !tbaa !9
  %2149 = icmp eq i8 %2148, 0
  br i1 %2149, label %2152, label %2150

2150:                                             ; preds = %2144
  %2151 = load i32, ptr %1916, align 4, !tbaa !166
  br label %2156

2152:                                             ; preds = %2144
  %2153 = getelementptr inbounds %struct.regnode, ptr %1911, i64 0, i32 2
  %2154 = load i16, ptr %2153, align 2, !tbaa !168
  %2155 = zext i16 %2154 to i32
  br label %2156

2156:                                             ; preds = %2152, %2150
  %2157 = phi i32 [ %2151, %2150 ], [ %2155, %2152 ]
  %2158 = icmp eq i32 %2157, 0
  br i1 %2158, label %2162, label %2159

2159:                                             ; preds = %2156
  %2160 = sext i32 %2157 to i64
  %2161 = getelementptr inbounds %struct.regnode, ptr %1911, i64 %2160
  br label %2162

2162:                                             ; preds = %2135, %2156, %2159
  %2163 = phi ptr [ %2161, %2159 ], [ null, %2135 ], [ null, %2156 ]
  %2164 = icmp ult ptr %2163, %3
  br i1 %2164, label %1910, label %2165, !llvm.loop !334

2165:                                             ; preds = %2162
  %2166 = load i16, ptr %1371, align 8, !tbaa !174
  %2167 = zext i16 %2166 to i32
  br label %2168

2168:                                             ; preds = %2165, %1895
  %2169 = phi i32 [ %2167, %2165 ], [ %1904, %1895 ]
  %2170 = phi ptr [ %2123, %2165 ], [ null, %1895 ]
  %2171 = phi ptr [ %2124, %2165 ], [ null, %1895 ]
  %2172 = phi i32 [ %2040, %2165 ], [ %1905, %1895 ]
  %2173 = add i32 %2172, -1
  %2174 = udiv i32 %2173, %2169
  %2175 = add i32 %2174, 1
  %2176 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 13
  store i32 %2175, ptr %2176, align 4, !tbaa !175
  %2177 = icmp ugt i32 %2175, 1
  %2178 = zext i32 %2175 to i64
  br i1 %2177, label %2179, label %2305

2179:                                             ; preds = %2168, %2300
  %2180 = phi i64 [ %2303, %2300 ], [ 1, %2168 ]
  %2181 = phi i32 [ %2302, %2300 ], [ 0, %2168 ]
  %2182 = phi i32 [ %2301, %2300 ], [ 0, %2168 ]
  %2183 = load i16, ptr %1371, align 8, !tbaa !174
  %2184 = zext i16 %2183 to i32
  %2185 = trunc i64 %2180 to i32
  %2186 = add i32 %2185, -1
  %2187 = mul i32 %2186, %2184
  %2188 = add i32 %2187, 1
  %2189 = load ptr, ptr %1901, align 8, !tbaa !40
  %2190 = zext i32 %2188 to i64
  %2191 = getelementptr inbounds %struct._reg_trie_trans, ptr %2189, i64 %2190, i32 1
  %2192 = load i32, ptr %2191, align 4, !tbaa !179
  store i32 0, ptr %2191, align 4, !tbaa !179
  %2193 = icmp eq i32 %2192, 0
  br i1 %2193, label %2300, label %2194

2194:                                             ; preds = %2179
  %2195 = icmp eq i32 %2192, 1
  %2196 = trunc i64 %2180 to i32
  br label %2197

2197:                                             ; preds = %2194, %2290
  %2198 = phi ptr [ %2189, %2194 ], [ %2291, %2290 ]
  %2199 = phi ptr [ %2189, %2194 ], [ %2292, %2290 ]
  %2200 = phi i64 [ 0, %2194 ], [ %2296, %2290 ]
  %2201 = phi i32 [ 0, %2194 ], [ %2298, %2290 ]
  %2202 = phi i32 [ %2192, %2194 ], [ %2295, %2290 ]
  %2203 = phi i8 [ 0, %2194 ], [ %2294, %2290 ]
  %2204 = phi i32 [ %2182, %2194 ], [ %2293, %2290 ]
  %2205 = phi i32 [ 0, %2194 ], [ %2297, %2290 ]
  %2206 = load i16, ptr %1371, align 8, !tbaa !174
  %2207 = zext i16 %2206 to i32
  %2208 = zext i16 %2206 to i64
  %2209 = icmp ult i64 %2200, %2208
  br i1 %2209, label %2210, label %2300

2210:                                             ; preds = %2197
  %2211 = icmp eq i8 %2203, 0
  %2212 = trunc i64 %2200 to i32
  %2213 = add i32 %2188, %2212
  %2214 = zext i32 %2213 to i64
  br i1 %2211, label %2215, label %2219

2215:                                             ; preds = %2210
  %2216 = getelementptr inbounds %struct._reg_trie_trans, ptr %2199, i64 %2214
  %2217 = load i32, ptr %2216, align 4, !tbaa !181
  %2218 = icmp eq i32 %2217, 0
  br i1 %2218, label %2290, label %2219

2219:                                             ; preds = %2210, %2215
  %2220 = getelementptr inbounds %struct._reg_trie_trans, ptr %2199, i64 %2214
  %2221 = load i32, ptr %2220, align 4, !tbaa !181
  %2222 = icmp eq i32 %2221, 0
  br i1 %2222, label %2265, label %2223

2223:                                             ; preds = %2219
  br i1 %2195, label %2224, label %2263

2224:                                             ; preds = %2223
  %2225 = icmp ult i32 %2181, %2204
  br i1 %2225, label %2226, label %2239

2226:                                             ; preds = %2224
  %2227 = zext i32 %2181 to i64
  %2228 = zext i32 %2204 to i64
  br label %2229

2229:                                             ; preds = %2226, %2234
  %2230 = phi i64 [ %2227, %2226 ], [ %2235, %2234 ]
  %2231 = getelementptr inbounds %struct._reg_trie_trans, ptr %2199, i64 %2230
  %2232 = load i32, ptr %2231, align 4, !tbaa !181
  %2233 = icmp eq i32 %2232, 0
  br i1 %2233, label %2237, label %2234

2234:                                             ; preds = %2229
  %2235 = add nuw nsw i64 %2230, 1
  %2236 = icmp eq i64 %2235, %2228
  br i1 %2236, label %2239, label %2229, !llvm.loop !335

2237:                                             ; preds = %2229
  %2238 = trunc i64 %2230 to i32
  br label %2239

2239:                                             ; preds = %2234, %2237, %2224
  %2240 = phi i32 [ %2181, %2224 ], [ %2238, %2237 ], [ %2204, %2234 ]
  %2241 = add i32 %2201, %2207
  %2242 = add i32 %2241, %2240
  %2243 = load ptr, ptr %1903, align 8, !tbaa !39
  %2244 = getelementptr inbounds %struct._reg_trie_state, ptr %2243, i64 %2180, i32 1
  store i32 %2242, ptr %2244, align 8, !tbaa !9
  %2245 = load ptr, ptr %1901, align 8, !tbaa !40
  %2246 = getelementptr inbounds %struct._reg_trie_trans, ptr %2245, i64 %2214
  %2247 = load i32, ptr %2246, align 4, !tbaa !181
  %2248 = icmp eq i32 %2247, 0
  br i1 %2248, label %2255, label %2249

2249:                                             ; preds = %2239
  %2250 = add i32 %2247, -1
  %2251 = load i16, ptr %1371, align 8, !tbaa !174
  %2252 = zext i16 %2251 to i32
  %2253 = udiv i32 %2250, %2252
  %2254 = add nuw i32 %2253, 1
  br label %2255

2255:                                             ; preds = %2239, %2249
  %2256 = phi i32 [ %2254, %2249 ], [ 0, %2239 ]
  %2257 = zext i32 %2240 to i64
  %2258 = getelementptr inbounds %struct._reg_trie_trans, ptr %2245, i64 %2257
  store i32 %2256, ptr %2258, align 4, !tbaa !181
  %2259 = getelementptr inbounds %struct._reg_trie_trans, ptr %2245, i64 %2257, i32 1
  %2260 = trunc i64 %2180 to i32
  store i32 %2260, ptr %2259, align 4, !tbaa !179
  %2261 = add i32 %2240, 1
  %2262 = call i32 @llvm.umax.i32(i32 %2261, i32 %2204)
  br label %2300

2263:                                             ; preds = %2223
  %2264 = add i32 %2202, -1
  br label %2265

2265:                                             ; preds = %2263, %2219
  %2266 = phi i32 [ %2264, %2263 ], [ %2202, %2219 ]
  br i1 %2211, label %2267, label %2273

2267:                                             ; preds = %2265
  %2268 = add i32 %2204, %2201
  %2269 = add i32 %2268, %2207
  %2270 = load ptr, ptr %1903, align 8, !tbaa !39
  %2271 = getelementptr inbounds %struct._reg_trie_state, ptr %2270, i64 %2180, i32 1
  store i32 %2269, ptr %2271, align 8, !tbaa !9
  %2272 = load ptr, ptr %1901, align 8, !tbaa !40
  br label %2273

2273:                                             ; preds = %2267, %2265
  %2274 = phi ptr [ %2272, %2267 ], [ %2198, %2265 ]
  %2275 = getelementptr inbounds %struct._reg_trie_trans, ptr %2274, i64 %2214
  %2276 = load i32, ptr %2275, align 4, !tbaa !181
  %2277 = icmp eq i32 %2276, 0
  br i1 %2277, label %2284, label %2278

2278:                                             ; preds = %2273
  %2279 = add i32 %2276, -1
  %2280 = load i16, ptr %1371, align 8, !tbaa !174
  %2281 = zext i16 %2280 to i32
  %2282 = udiv i32 %2279, %2281
  %2283 = add nuw i32 %2282, 1
  br label %2284

2284:                                             ; preds = %2273, %2278
  %2285 = phi i32 [ %2283, %2278 ], [ 0, %2273 ]
  %2286 = zext i32 %2204 to i64
  %2287 = getelementptr inbounds %struct._reg_trie_trans, ptr %2274, i64 %2286
  store i32 %2285, ptr %2287, align 4, !tbaa !181
  %2288 = getelementptr inbounds %struct._reg_trie_trans, ptr %2274, i64 %2286, i32 1
  store i32 %2196, ptr %2288, align 4, !tbaa !179
  %2289 = add i32 %2204, 1
  br label %2290

2290:                                             ; preds = %2215, %2284
  %2291 = phi ptr [ %2274, %2284 ], [ %2198, %2215 ]
  %2292 = phi ptr [ %2274, %2284 ], [ %2199, %2215 ]
  %2293 = phi i32 [ %2289, %2284 ], [ %2204, %2215 ]
  %2294 = phi i8 [ 1, %2284 ], [ 0, %2215 ]
  %2295 = phi i32 [ %2266, %2284 ], [ %2202, %2215 ]
  %2296 = add nuw nsw i64 %2200, 1
  %2297 = add nuw nsw i32 %2205, 1
  %2298 = xor i32 %2205, -1
  %2299 = icmp eq i32 %2295, 0
  br i1 %2299, label %2300, label %2197, !llvm.loop !336

2300:                                             ; preds = %2197, %2290, %2179, %2255
  %2301 = phi i32 [ %2262, %2255 ], [ %2182, %2179 ], [ %2204, %2197 ], [ %2293, %2290 ]
  %2302 = phi i32 [ %2261, %2255 ], [ %2181, %2179 ], [ %2181, %2290 ], [ %2181, %2197 ]
  %2303 = add nuw nsw i64 %2180, 1
  %2304 = icmp eq i64 %2303, %2178
  br i1 %2304, label %2305, label %2179, !llvm.loop !337

2305:                                             ; preds = %2300, %2168
  %2306 = phi i32 [ 0, %2168 ], [ %2301, %2300 ]
  %2307 = add i32 %2306, 1
  %2308 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 1
  store i32 %2307, ptr %2308, align 4, !tbaa !176
  %2309 = load ptr, ptr %1903, align 8, !tbaa !39
  %2310 = shl nuw nsw i64 %2178, 4
  %2311 = call ptr @realloc(ptr noundef %2309, i64 noundef %2310) #25
  store ptr %2311, ptr %1903, align 8, !tbaa !39
  %2312 = load i32, ptr %2308, align 4, !tbaa !176
  br label %2313

2313:                                             ; preds = %2305, %1891
  %2314 = phi i32 [ %1893, %1891 ], [ %2312, %2305 ]
  %2315 = phi ptr [ %1715, %1891 ], [ %2170, %2305 ]
  %2316 = phi ptr [ %1716, %1891 ], [ %2171, %2305 ]
  %2317 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 4
  %2318 = load ptr, ptr %2317, align 8, !tbaa !40
  %2319 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 1
  %2320 = zext i32 %2314 to i64
  %2321 = shl nuw nsw i64 %2320, 3
  %2322 = call ptr @realloc(ptr noundef %2318, i64 noundef %2321) #25
  store ptr %2322, ptr %2317, align 8, !tbaa !40
  %2323 = trunc i32 %6 to i8
  br i1 %84, label %2324, label %2328

2324:                                             ; preds = %2313
  %2325 = getelementptr inbounds %struct.regnode, ptr %3, i64 0, i32 1
  %2326 = load i8, ptr %2325, align 1, !tbaa !164
  %2327 = icmp eq i8 %2326, 30
  br i1 %2327, label %2328, label %2335

2328:                                             ; preds = %2324, %2313
  %2329 = ptrtoint ptr %3 to i64
  %2330 = ptrtoint ptr %2 to i64
  %2331 = sub i64 %2329, %2330
  %2332 = lshr exact i64 %2331, 2
  %2333 = trunc i64 %2332 to i16
  %2334 = getelementptr inbounds %struct.regnode, ptr %2, i64 0, i32 2
  store i16 %2333, ptr %2334, align 2, !tbaa !168
  br label %2335

2335:                                             ; preds = %2328, %2324
  store i32 1, ptr %59, align 4, !tbaa !316
  %2336 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 5
  %2337 = load ptr, ptr %2336, align 8, !tbaa !41
  %2338 = icmp eq ptr %2337, null
  %2339 = icmp ne ptr %1365, null
  %2340 = select i1 %2338, i1 true, i1 %2339
  br i1 %2340, label %2566, label %2341

2341:                                             ; preds = %2335
  %2342 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 6
  %2343 = load ptr, ptr %2342, align 8, !tbaa !42
  %2344 = icmp eq ptr %2343, null
  br i1 %2344, label %2345, label %2566

2345:                                             ; preds = %2341
  %2346 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 13
  %2347 = load i32, ptr %2346, align 4, !tbaa !175
  %2348 = add i32 %2347, -3
  %2349 = icmp ult i32 %2348, -2
  br i1 %2349, label %2352, label %2350

2350:                                             ; preds = %2345
  %2351 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 12
  store i32 0, ptr %2351, align 8, !tbaa !338
  br label %2566

2352:                                             ; preds = %2345
  %2353 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 3
  %2354 = getelementptr inbounds %struct.regnode, ptr %92, i64 0, i32 1
  %2355 = getelementptr inbounds %struct.regnode_string, ptr %92, i64 0, i32 3
  br label %2356

2356:                                             ; preds = %2352, %2525
  %2357 = phi i64 [ 1, %2352 ], [ %2527, %2525 ]
  %2358 = phi ptr [ null, %2352 ], [ %2526, %2525 ]
  %2359 = load ptr, ptr %2353, align 8, !tbaa !39
  %2360 = getelementptr inbounds %struct._reg_trie_state, ptr %2359, i64 %2357
  %2361 = getelementptr inbounds %struct._reg_trie_state, ptr %2359, i64 %2357, i32 1
  %2362 = load i32, ptr %2361, align 8, !tbaa !9
  %2363 = load i16, ptr %2360, align 8, !tbaa !183
  %2364 = icmp ne i16 %2363, 0
  %2365 = zext i1 %2364 to i32
  %2366 = load i16, ptr %1371, align 8, !tbaa !174
  %2367 = icmp eq i16 %2366, 0
  br i1 %2367, label %2482, label %2368

2368:                                             ; preds = %2356
  %2369 = icmp eq i64 %2357, 1
  br label %2370

2370:                                             ; preds = %2368, %2475
  %2371 = phi i64 [ 0, %2368 ], [ %2478, %2475 ]
  %2372 = phi i16 [ %2366, %2368 ], [ %2479, %2475 ]
  %2373 = phi i32 [ %2365, %2368 ], [ %2477, %2475 ]
  %2374 = phi i32 [ -1, %2368 ], [ %2476, %2475 ]
  %2375 = zext i16 %2372 to i32
  %2376 = trunc i64 %2371 to i32
  %2377 = add i32 %2362, %2376
  %2378 = icmp ult i32 %2377, %2375
  br i1 %2378, label %2475, label %2379

2379:                                             ; preds = %2370
  %2380 = sub i32 %2377, %2375
  %2381 = load i32, ptr %2319, align 4, !tbaa !176
  %2382 = icmp ult i32 %2380, %2381
  br i1 %2382, label %2383, label %2475

2383:                                             ; preds = %2379
  %2384 = load ptr, ptr %2317, align 8, !tbaa !40
  %2385 = zext i32 %2380 to i64
  %2386 = getelementptr inbounds %struct._reg_trie_trans, ptr %2384, i64 %2385, i32 1
  %2387 = load i32, ptr %2386, align 4, !tbaa !179
  %2388 = zext i32 %2387 to i64
  %2389 = icmp eq i64 %2357, %2388
  br i1 %2389, label %2390, label %2475

2390:                                             ; preds = %2383
  %2391 = add i32 %2373, 1
  %2392 = icmp ugt i32 %2391, 1
  br i1 %2392, label %2393, label %2475

2393:                                             ; preds = %2390
  %2394 = call ptr @Perl_av_fetch(ptr noundef %14, i64 noundef %2371, i32 noundef 0) #21
  %2395 = load ptr, ptr %2394, align 8, !tbaa !5
  %2396 = getelementptr inbounds %struct.sv, ptr %2395, i64 0, i32 2
  %2397 = load i32, ptr %2396, align 4, !tbaa !62
  %2398 = and i32 %2397, 2098176
  %2399 = icmp eq i32 %2398, 1024
  br i1 %2399, label %2400, label %2403

2400:                                             ; preds = %2393
  %2401 = getelementptr inbounds %struct.sv, ptr %2395, i64 0, i32 3
  %2402 = load ptr, ptr %2401, align 8, !tbaa !9
  br label %2405

2403:                                             ; preds = %2393
  %2404 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2395, ptr noundef null, i32 noundef 34) #21
  br label %2405

2405:                                             ; preds = %2403, %2400
  %2406 = phi ptr [ %2402, %2400 ], [ %2404, %2403 ]
  br i1 %2369, label %2536, label %2407

2407:                                             ; preds = %2405
  %2408 = icmp eq i32 %2391, 2
  br i1 %2408, label %2409, label %2449

2409:                                             ; preds = %2407
  %2410 = load ptr, ptr %2336, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %2410, i8 0, i64 32, i1 false)
  %2411 = icmp sgt i32 %2374, -1
  br i1 %2411, label %2412, label %2449

2412:                                             ; preds = %2409
  %2413 = zext i32 %2374 to i64
  %2414 = call ptr @Perl_av_fetch(ptr noundef %14, i64 noundef %2413, i32 noundef 0) #21
  %2415 = load ptr, ptr %2414, align 8, !tbaa !5
  %2416 = getelementptr inbounds %struct.sv, ptr %2415, i64 0, i32 2
  %2417 = load i32, ptr %2416, align 4, !tbaa !62
  %2418 = and i32 %2417, 2098176
  %2419 = icmp eq i32 %2418, 1024
  br i1 %2419, label %2420, label %2423

2420:                                             ; preds = %2412
  %2421 = getelementptr inbounds %struct.sv, ptr %2415, i64 0, i32 3
  %2422 = load ptr, ptr %2421, align 8, !tbaa !9
  br label %2425

2423:                                             ; preds = %2412
  %2424 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2415, ptr noundef null, i32 noundef 34) #21
  br label %2425

2425:                                             ; preds = %2423, %2420
  %2426 = phi ptr [ %2422, %2420 ], [ %2424, %2423 ]
  %2427 = load i8, ptr %2426, align 1, !tbaa !9
  %2428 = and i8 %2427, 7
  %2429 = shl nuw i8 1, %2428
  %2430 = load ptr, ptr %2336, align 8, !tbaa !41
  %2431 = lshr i8 %2427, 3
  %2432 = zext i8 %2431 to i64
  %2433 = getelementptr inbounds i8, ptr %2430, i64 %2432
  %2434 = load i8, ptr %2433, align 1, !tbaa !9
  %2435 = or i8 %2429, %2434
  store i8 %2435, ptr %2433, align 1, !tbaa !9
  br i1 %55, label %2463, label %2436

2436:                                             ; preds = %2425
  %2437 = load i8, ptr %2426, align 1, !tbaa !9
  %2438 = zext i8 %2437 to i64
  %2439 = getelementptr inbounds i8, ptr %57, i64 %2438
  %2440 = load i8, ptr %2439, align 1, !tbaa !9
  %2441 = and i8 %2440, 7
  %2442 = shl nuw i8 1, %2441
  %2443 = load ptr, ptr %2336, align 8, !tbaa !41
  %2444 = lshr i8 %2440, 3
  %2445 = zext i8 %2444 to i64
  %2446 = getelementptr inbounds i8, ptr %2443, i64 %2445
  %2447 = load i8, ptr %2446, align 1, !tbaa !9
  %2448 = or i8 %2442, %2447
  store i8 %2448, ptr %2446, align 1, !tbaa !9
  br label %2449

2449:                                             ; preds = %2436, %2409, %2407
  %2450 = load i8, ptr %2406, align 1, !tbaa !9
  %2451 = and i8 %2450, 7
  %2452 = shl nuw i8 1, %2451
  %2453 = load ptr, ptr %2336, align 8, !tbaa !41
  %2454 = lshr i8 %2450, 3
  %2455 = zext i8 %2454 to i64
  %2456 = getelementptr inbounds i8, ptr %2453, i64 %2455
  %2457 = load i8, ptr %2456, align 1, !tbaa !9
  %2458 = or i8 %2452, %2457
  store i8 %2458, ptr %2456, align 1, !tbaa !9
  br i1 %55, label %2475, label %2459

2459:                                             ; preds = %2449
  %2460 = load i8, ptr %2406, align 1, !tbaa !9
  %2461 = zext i8 %2460 to i64
  %2462 = getelementptr inbounds i8, ptr %57, i64 %2461
  br label %2463

2463:                                             ; preds = %2425, %2459
  %2464 = phi ptr [ %2462, %2459 ], [ %2406, %2425 ]
  %2465 = phi i32 [ %2391, %2459 ], [ 2, %2425 ]
  %2466 = load i8, ptr %2464, align 1, !tbaa !9
  %2467 = and i8 %2466, 7
  %2468 = shl nuw i8 1, %2467
  %2469 = load ptr, ptr %2336, align 8, !tbaa !41
  %2470 = lshr i8 %2466, 3
  %2471 = zext i8 %2470 to i64
  %2472 = getelementptr inbounds i8, ptr %2469, i64 %2471
  %2473 = load i8, ptr %2472, align 1, !tbaa !9
  %2474 = or i8 %2468, %2473
  store i8 %2474, ptr %2472, align 1, !tbaa !9
  br label %2475

2475:                                             ; preds = %2463, %2449, %2390, %2370, %2379, %2383
  %2476 = phi i32 [ %2374, %2383 ], [ %2374, %2379 ], [ %2374, %2370 ], [ %2376, %2390 ], [ %2376, %2449 ], [ %2376, %2463 ]
  %2477 = phi i32 [ %2373, %2383 ], [ %2373, %2379 ], [ %2373, %2370 ], [ %2391, %2390 ], [ %2391, %2449 ], [ %2465, %2463 ]
  %2478 = add nuw nsw i64 %2371, 1
  %2479 = load i16, ptr %1371, align 8, !tbaa !174
  %2480 = zext i16 %2479 to i64
  %2481 = icmp ult i64 %2478, %2480
  br i1 %2481, label %2370, label %2482, !llvm.loop !339

2482:                                             ; preds = %2475, %2356
  %2483 = phi i32 [ -1, %2356 ], [ %2476, %2475 ]
  %2484 = phi i32 [ %2365, %2356 ], [ %2477, %2475 ]
  %2485 = icmp eq i32 %2484, 1
  br i1 %2485, label %2486, label %2532

2486:                                             ; preds = %2482
  %2487 = sext i32 %2483 to i64
  %2488 = call ptr @Perl_av_fetch(ptr noundef %14, i64 noundef %2487, i32 noundef 0) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #21
  %2489 = load ptr, ptr %2488, align 8, !tbaa !5
  %2490 = getelementptr inbounds %struct.sv, ptr %2489, i64 0, i32 2
  %2491 = load i32, ptr %2490, align 4, !tbaa !62
  %2492 = and i32 %2491, 2098176
  %2493 = icmp eq i32 %2492, 1024
  br i1 %2493, label %2494, label %2500

2494:                                             ; preds = %2486
  %2495 = load ptr, ptr %2489, align 8, !tbaa !63
  %2496 = getelementptr inbounds %struct.xpv, ptr %2495, i64 0, i32 2
  %2497 = load i64, ptr %2496, align 8, !tbaa !72
  store i64 %2497, ptr %13, align 8, !tbaa !71
  %2498 = getelementptr inbounds %struct.sv, ptr %2489, i64 0, i32 3
  %2499 = load ptr, ptr %2498, align 8, !tbaa !9
  br label %2502

2500:                                             ; preds = %2486
  %2501 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2489, ptr noundef nonnull %13, i32 noundef 2) #21
  br label %2502

2502:                                             ; preds = %2500, %2494
  %2503 = phi ptr [ %2499, %2494 ], [ %2501, %2500 ]
  %2504 = icmp eq i64 %2357, 1
  br i1 %2504, label %2507, label %2505

2505:                                             ; preds = %2502
  %2506 = load i8, ptr %92, align 2, !tbaa !218
  br label %2508

2507:                                             ; preds = %2502
  store i8 %2323, ptr %2354, align 1, !tbaa !164
  br label %2508

2508:                                             ; preds = %2505, %2507
  %2509 = phi i8 [ 0, %2507 ], [ %2506, %2505 ]
  %2510 = phi ptr [ %2355, %2507 ], [ %2358, %2505 ]
  %2511 = load i64, ptr %13, align 8, !tbaa !71
  %2512 = trunc i64 %2511 to i8
  %2513 = add i8 %2509, %2512
  store i8 %2513, ptr %92, align 2, !tbaa !218
  %2514 = add i64 %2511, -1
  store i64 %2514, ptr %13, align 8, !tbaa !71
  %2515 = icmp eq i64 %2511, 0
  br i1 %2515, label %2525, label %2516

2516:                                             ; preds = %2508, %2516
  %2517 = phi ptr [ %2519, %2516 ], [ %2503, %2508 ]
  %2518 = phi ptr [ %2521, %2516 ], [ %2510, %2508 ]
  %2519 = getelementptr inbounds i8, ptr %2517, i64 1
  %2520 = load i8, ptr %2517, align 1, !tbaa !9
  %2521 = getelementptr inbounds i8, ptr %2518, i64 1
  store i8 %2520, ptr %2518, align 1, !tbaa !9
  %2522 = load i64, ptr %13, align 8, !tbaa !71
  %2523 = add i64 %2522, -1
  store i64 %2523, ptr %13, align 8, !tbaa !71
  %2524 = icmp eq i64 %2522, 0
  br i1 %2524, label %2525, label %2516, !llvm.loop !340

2525:                                             ; preds = %2516, %2508
  %2526 = phi ptr [ %2510, %2508 ], [ %2521, %2516 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #21
  %2527 = add nuw nsw i64 %2357, 1
  %2528 = load i32, ptr %2346, align 4, !tbaa !175
  %2529 = add i32 %2528, -1
  %2530 = zext i32 %2529 to i64
  %2531 = icmp ult i64 %2527, %2530
  br i1 %2531, label %2356, label %2532, !llvm.loop !341

2532:                                             ; preds = %2482, %2525
  %2533 = phi ptr [ %2358, %2482 ], [ %2526, %2525 ]
  %2534 = phi i64 [ %2357, %2482 ], [ %2527, %2525 ]
  %2535 = trunc i64 %2534 to i32
  br label %2536

2536:                                             ; preds = %2405, %2532
  %2537 = phi ptr [ %2533, %2532 ], [ %2358, %2405 ]
  %2538 = phi i32 [ %2535, %2532 ], [ 1, %2405 ]
  %2539 = add i32 %2538, -1
  %2540 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 12
  store i32 %2539, ptr %2540, align 8, !tbaa !338
  %2541 = icmp eq ptr %2537, null
  br i1 %2541, label %2566, label %2542

2542:                                             ; preds = %2536
  %2543 = load i8, ptr %92, align 2, !tbaa !218
  %2544 = zext i8 %2543 to i64
  %2545 = add nuw nsw i64 %2544, 3
  %2546 = lshr i64 %2545, 2
  %2547 = add nuw nsw i64 %2546, 1
  %2548 = trunc i64 %2547 to i16
  %2549 = getelementptr inbounds %struct.regnode, ptr %92, i64 0, i32 2
  store i16 %2548, ptr %2549, align 2, !tbaa !168
  store i32 %2538, ptr %59, align 4, !tbaa !316
  %2550 = zext i32 %2539 to i64
  %2551 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 10
  %2552 = load i64, ptr %2551, align 8, !tbaa !173
  %2553 = sub i64 %2552, %2550
  store i64 %2553, ptr %2551, align 8, !tbaa !173
  %2554 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 11
  %2555 = load i64, ptr %2554, align 8, !tbaa !285
  %2556 = sub i64 %2555, %2550
  store i64 %2556, ptr %2554, align 8, !tbaa !285
  %2557 = icmp eq i64 %2555, %2550
  br i1 %2557, label %2560, label %2558

2558:                                             ; preds = %2542
  %2559 = getelementptr inbounds %struct.regnode, ptr %92, i64 %2547
  br label %2566

2560:                                             ; preds = %2542
  %2561 = ptrtoint ptr %4 to i64
  %2562 = ptrtoint ptr %92 to i64
  %2563 = sub i64 %2561, %2562
  %2564 = lshr exact i64 %2563, 2
  %2565 = trunc i64 %2564 to i16
  store i16 %2565, ptr %2549, align 2, !tbaa !168
  br label %2566

2566:                                             ; preds = %2350, %2536, %2560, %2558, %2341, %2335
  %2567 = phi ptr [ %92, %2335 ], [ %92, %2341 ], [ %92, %2536 ], [ %2559, %2558 ], [ %92, %2560 ], [ %92, %2350 ]
  %2568 = icmp eq ptr %2316, null
  %2569 = select i1 %2568, ptr %3, ptr %2316
  %2570 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 11
  %2571 = load i64, ptr %2570, align 8, !tbaa !285
  %2572 = icmp eq i64 %2571, 0
  br i1 %2572, label %2611, label %2573

2573:                                             ; preds = %2566
  %2574 = ptrtoint ptr %4 to i64
  %2575 = ptrtoint ptr %2567 to i64
  %2576 = sub i64 %2574, %2575
  %2577 = lshr exact i64 %2576, 2
  %2578 = trunc i64 %2577 to i16
  %2579 = getelementptr inbounds %struct.regnode, ptr %2567, i64 0, i32 2
  store i16 %2578, ptr %2579, align 2, !tbaa !168
  %2580 = getelementptr inbounds %struct.regnode_1, ptr %2567, i64 0, i32 3
  store i32 %23, ptr %2580, align 4, !tbaa !166
  %2581 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 6
  %2582 = load ptr, ptr %2581, align 8, !tbaa !42
  %2583 = icmp eq ptr %2582, null
  br i1 %2583, label %2589, label %2584

2584:                                             ; preds = %2573
  %2585 = ptrtoint ptr %2315 to i64
  %2586 = sub i64 %2585, %2575
  %2587 = lshr exact i64 %2586, 2
  %2588 = trunc i64 %2587 to i16
  store i16 %2588, ptr %2582, align 2, !tbaa !163
  br label %2589

2589:                                             ; preds = %2584, %2573
  %2590 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 3
  %2591 = load ptr, ptr %2590, align 8, !tbaa !39
  %2592 = load i32, ptr %59, align 4, !tbaa !316
  %2593 = zext i32 %2592 to i64
  %2594 = getelementptr inbounds %struct._reg_trie_state, ptr %2591, i64 %2593
  %2595 = load i16, ptr %2594, align 8, !tbaa !183
  %2596 = icmp eq i16 %2595, 0
  br i1 %2596, label %2597, label %2608

2597:                                             ; preds = %2589
  %2598 = load ptr, ptr %2336, align 8, !tbaa !41
  %2599 = icmp ne ptr %2598, null
  %2600 = ptrtoint ptr %2569 to i64
  %2601 = sub i64 %2600, %2575
  %2602 = icmp sgt i64 %2601, 39
  %2603 = select i1 %2599, i1 %2602, i1 false
  br i1 %2603, label %2604, label %2608

2604:                                             ; preds = %2597
  %2605 = getelementptr inbounds %struct.regnode, ptr %2567, i64 0, i32 1
  store i8 73, ptr %2605, align 1, !tbaa !164
  %2606 = getelementptr inbounds %struct.regnode_charclass, ptr %2567, i64 0, i32 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %2606, ptr noundef nonnull align 1 dereferenceable(32) %2598, i64 32, i1 false)
  %2607 = load ptr, ptr %2336, align 8, !tbaa !41
  call void @free(ptr noundef %2607) #21
  store ptr null, ptr %2336, align 8, !tbaa !41
  br label %2610

2608:                                             ; preds = %2597, %2589
  %2609 = getelementptr inbounds %struct.regnode, ptr %2567, i64 0, i32 1
  store i8 72, ptr %2609, align 1, !tbaa !164
  br label %2610

2610:                                             ; preds = %2608, %2604
  store i8 %2323, ptr %2567, align 2, !tbaa !169
  br label %2611

2611:                                             ; preds = %2610, %2566
  %2612 = load i32, ptr %60, align 8, !tbaa !284
  %2613 = icmp eq i32 %2612, 0
  br i1 %2613, label %2645, label %2614

2614:                                             ; preds = %2611
  %2615 = load ptr, ptr %76, align 8, !tbaa !43
  %2616 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 3
  br label %2617

2617:                                             ; preds = %2614, %2641
  %2618 = phi i16 [ 1, %2614 ], [ %2642, %2641 ]
  %2619 = zext i16 %2618 to i64
  %2620 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2615, i64 %2619
  %2621 = load i16, ptr %2620, align 4, !tbaa !324
  %2622 = icmp eq i16 %2621, 0
  br i1 %2622, label %2623, label %2641

2623:                                             ; preds = %2617
  %2624 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2615, i64 %2619, i32 2
  %2625 = load i32, ptr %2624, align 4, !tbaa !327
  %2626 = icmp eq i32 %2625, 0
  br i1 %2626, label %2639, label %2627

2627:                                             ; preds = %2623, %2633
  %2628 = phi i32 [ %2631, %2633 ], [ %2625, %2623 ]
  %2629 = zext i32 %2628 to i64
  %2630 = getelementptr inbounds i32, ptr %1368, i64 %2629
  %2631 = load i32, ptr %2630, align 4, !tbaa !150
  %2632 = icmp eq i32 %2631, 0
  br i1 %2632, label %2639, label %2633

2633:                                             ; preds = %2627
  %2634 = load ptr, ptr %2616, align 8, !tbaa !39
  %2635 = zext i32 %2631 to i64
  %2636 = getelementptr inbounds %struct._reg_trie_state, ptr %2634, i64 %2635
  %2637 = load i16, ptr %2636, align 8, !tbaa !183
  %2638 = icmp eq i16 %2637, 0
  br i1 %2638, label %2627, label %2639, !llvm.loop !342

2639:                                             ; preds = %2633, %2627, %2623
  %2640 = phi i16 [ 0, %2623 ], [ 0, %2627 ], [ %2637, %2633 ]
  store i16 %2640, ptr %2620, align 4, !tbaa !324
  br label %2641

2641:                                             ; preds = %2617, %2639
  %2642 = add i16 %2618, 1
  %2643 = zext i16 %2642 to i32
  %2644 = icmp ult i32 %2612, %2643
  br i1 %2644, label %2645, label %2617, !llvm.loop !343

2645:                                             ; preds = %2641, %2611
  call void @Perl_safesysfree(ptr noundef %1368) #21
  %2646 = load ptr, ptr %15, align 8, !tbaa !156
  %2647 = getelementptr inbounds %struct.regexp_internal, ptr %2646, i64 0, i32 3
  %2648 = load ptr, ptr %2647, align 8, !tbaa !26
  %2649 = getelementptr inbounds %struct.reg_data, ptr %2648, i64 0, i32 2, i64 %26
  store ptr %1365, ptr %2649, align 8, !tbaa !5
  %2650 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 1
  %2651 = load i32, ptr %2650, align 8, !tbaa !22
  %2652 = icmp ugt i32 %2651, 1
  br i1 %2652, label %2653, label %2655

2653:                                             ; preds = %2645
  %2654 = add i32 %2651, -1
  store i32 %2654, ptr %2650, align 8, !tbaa !22
  br label %2656

2655:                                             ; preds = %2645
  call void @Perl_sv_free2(ptr noundef nonnull %14, i32 noundef %2651) #21
  br label %2656

2656:                                             ; preds = %2653, %2655
  %2657 = getelementptr inbounds %struct._reg_trie_data, ptr %58, i64 0, i32 6
  %2658 = load ptr, ptr %2657, align 8, !tbaa !42
  %2659 = icmp eq ptr %2658, null
  br i1 %2659, label %2660, label %2664

2660:                                             ; preds = %2656
  %2661 = load i32, ptr %59, align 4, !tbaa !316
  %2662 = icmp ugt i32 %2661, 1
  %2663 = select i1 %2662, i32 4, i32 1
  br label %2664

2664:                                             ; preds = %2656, %2660
  %2665 = phi i32 [ %2663, %2660 ], [ 2, %2656 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  ret i32 %2665
}

declare void @Perl_save_destructor_x(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal void @S_unwind_scan_frames(ptr noundef %0) #0 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi ptr [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %struct.scan_frame, ptr %3, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !265
  tail call void @Perl_safesysfree(ptr noundef %3) #21
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %2, !llvm.loop !344

7:                                                ; preds = %2
  ret void
}

declare i64 @Perl_utf8n_to_uvchr(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare zeroext i1 @Perl_ckwarn_d(i32 noundef) local_unnamed_addr #1

declare i64 @Perl_utf8_length(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @Perl_sv_catpvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1

declare ptr @Perl_mg_find(ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @Perl_ck_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #1

declare ptr @Perl_utf8_hop(ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @Perl_repeatcpy(ptr noundef, ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_get_ANYOF_cp_list_for_ssc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  %4 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %5 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !62
  %7 = and i32 %6, 268435456
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8, !tbaa !63
  %11 = getelementptr inbounds %struct.xpv, ptr %10, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !9
  %13 = icmp ult i64 %12, 9
  br i1 %13, label %14, label %17

14:                                               ; preds = %2, %9
  %15 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %4, i64 noundef 9) #21
  %16 = load ptr, ptr %4, align 8, !tbaa !63
  br label %17

17:                                               ; preds = %9, %14
  %18 = phi ptr [ %10, %9 ], [ %16, %14 ]
  %19 = getelementptr inbounds %struct.xpv, ptr %18, i64 0, i32 2
  store i64 0, ptr %19, align 8, !tbaa !72
  %20 = getelementptr inbounds %struct.xpvinvlist, ptr %18, i64 0, i32 5
  store i64 -1, ptr %20, align 8, !tbaa !71
  %21 = getelementptr inbounds %struct.xpvinvlist, ptr %18, i64 0, i32 4
  store i64 0, ptr %21, align 8, !tbaa !71
  %22 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %4) #21
  store ptr %22, ptr %3, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.regnode_1, ptr %1, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !166
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = load i8, ptr %1, align 4, !tbaa !252
  br label %187

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %30 = load ptr, ptr %29, align 8, !tbaa !156
  %31 = getelementptr inbounds %struct.regexp_internal, ptr %30, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !26
  %33 = zext i32 %24 to i64
  %34 = getelementptr inbounds %struct.reg_data, ptr %32, i64 0, i32 2, i64 %33
  %35 = load ptr, ptr %34, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !9
  %38 = getelementptr inbounds %struct.av, ptr %37, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !9
  %40 = getelementptr inbounds ptr, ptr %39, i64 1
  %41 = load ptr, ptr %40, align 8, !tbaa !5
  %42 = icmp eq ptr %41, null
  %43 = icmp eq ptr %41, @PL_sv_undef
  %44 = or i1 %42, %43
  br i1 %44, label %104, label %45

45:                                               ; preds = %28
  %46 = tail call ptr @Perl__get_swash_invlist(ptr noundef nonnull %41) #21
  %47 = load ptr, ptr %46, align 8, !tbaa !63
  %48 = getelementptr inbounds %struct.xpv, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %48, align 8, !tbaa !72
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.xpvinvlist, ptr %47, i64 0, i32 6
  %53 = load i8, ptr %52, align 1, !tbaa !57, !range !59, !noundef !60
  %54 = shl nuw nsw i8 %53, 3
  %55 = zext i8 %54 to i64
  %56 = sub i64 %49, %55
  %57 = and i64 %56, -8
  %58 = add i64 %57, 17
  br label %59

59:                                               ; preds = %51, %45
  %60 = phi i64 [ %58, %51 ], [ 17, %45 ]
  %61 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %62 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 2
  %63 = load i32, ptr %62, align 4, !tbaa !62
  %64 = and i32 %63, 268435456
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %59
  %67 = load ptr, ptr %61, align 8, !tbaa !63
  %68 = getelementptr inbounds %struct.xpv, ptr %67, i64 0, i32 3
  %69 = load i64, ptr %68, align 8, !tbaa !9
  %70 = icmp ult i64 %69, %60
  br i1 %70, label %71, label %74

71:                                               ; preds = %66, %59
  %72 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %61, i64 noundef %60) #21
  %73 = load ptr, ptr %61, align 8, !tbaa !63
  br label %74

74:                                               ; preds = %71, %66
  %75 = phi ptr [ %67, %66 ], [ %73, %71 ]
  %76 = getelementptr inbounds %struct.xpv, ptr %75, i64 0, i32 2
  store i64 0, ptr %76, align 8, !tbaa !72
  %77 = getelementptr inbounds %struct.xpvinvlist, ptr %75, i64 0, i32 5
  store i64 -1, ptr %77, align 8, !tbaa !71
  %78 = getelementptr inbounds %struct.xpvinvlist, ptr %75, i64 0, i32 4
  store i64 0, ptr %78, align 8, !tbaa !71
  %79 = load ptr, ptr %46, align 8, !tbaa !63
  %80 = getelementptr inbounds %struct.xpv, ptr %79, i64 0, i32 2
  %81 = load i64, ptr %80, align 8, !tbaa !72
  %82 = freeze i64 %81
  %83 = getelementptr inbounds %struct.xpvinvlist, ptr %79, i64 0, i32 6
  %84 = load i8, ptr %83, align 1, !tbaa !57, !range !59, !noundef !60
  %85 = getelementptr inbounds %struct.xpvinvlist, ptr %75, i64 0, i32 6
  store i8 %84, ptr %85, align 1, !tbaa !57
  %86 = icmp eq i64 %82, 0
  br i1 %86, label %96, label %87

87:                                               ; preds = %74
  %88 = lshr i64 %82, 3
  %89 = load i8, ptr %83, align 1, !tbaa !57, !range !59, !noundef !60
  %90 = zext i8 %89 to i64
  %91 = icmp eq i64 %88, %90
  %92 = zext i8 %84 to i64
  %93 = add nuw nsw i64 %88, %92
  %94 = sub nsw i64 %93, %90
  %95 = shl i64 %94, 3
  br i1 %91, label %96, label %97

96:                                               ; preds = %87, %74
  br label %97

97:                                               ; preds = %87, %96
  %98 = phi i64 [ 0, %96 ], [ %95, %87 ]
  store i64 %98, ptr %76, align 8, !tbaa !72
  %99 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !9
  %101 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !9
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %100, ptr align 1 %102, i64 %82, i1 false)
  %103 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %61) #21
  store ptr %103, ptr %3, align 8, !tbaa !5
  br label %173

104:                                              ; preds = %28
  %105 = load ptr, ptr %39, align 8, !tbaa !5
  %106 = icmp eq ptr %105, null
  %107 = icmp eq ptr %105, @PL_sv_undef
  %108 = or i1 %106, %107
  br i1 %108, label %109, label %185

109:                                              ; preds = %104
  %110 = getelementptr inbounds ptr, ptr %39, i64 3
  %111 = load ptr, ptr %110, align 8, !tbaa !5
  %112 = icmp eq ptr %111, null
  %113 = icmp eq ptr %111, @PL_sv_undef
  %114 = or i1 %112, %113
  br i1 %114, label %173, label %115

115:                                              ; preds = %109
  %116 = load ptr, ptr %111, align 8, !tbaa !63
  %117 = getelementptr inbounds %struct.xpv, ptr %116, i64 0, i32 2
  %118 = load i64, ptr %117, align 8, !tbaa !72
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.xpvinvlist, ptr %116, i64 0, i32 6
  %122 = load i8, ptr %121, align 1, !tbaa !57, !range !59, !noundef !60
  %123 = shl nuw nsw i8 %122, 3
  %124 = zext i8 %123 to i64
  %125 = sub i64 %118, %124
  %126 = and i64 %125, -8
  %127 = add i64 %126, 17
  br label %128

128:                                              ; preds = %120, %115
  %129 = phi i64 [ %127, %120 ], [ 17, %115 ]
  %130 = tail call ptr @Perl_newSV_type(i32 noundef 4) #21
  %131 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 2
  %132 = load i32, ptr %131, align 4, !tbaa !62
  %133 = and i32 %132, 268435456
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %128
  %136 = load ptr, ptr %130, align 8, !tbaa !63
  %137 = getelementptr inbounds %struct.xpv, ptr %136, i64 0, i32 3
  %138 = load i64, ptr %137, align 8, !tbaa !9
  %139 = icmp ult i64 %138, %129
  br i1 %139, label %140, label %143

140:                                              ; preds = %135, %128
  %141 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %130, i64 noundef %129) #21
  %142 = load ptr, ptr %130, align 8, !tbaa !63
  br label %143

143:                                              ; preds = %140, %135
  %144 = phi ptr [ %136, %135 ], [ %142, %140 ]
  %145 = getelementptr inbounds %struct.xpv, ptr %144, i64 0, i32 2
  store i64 0, ptr %145, align 8, !tbaa !72
  %146 = getelementptr inbounds %struct.xpvinvlist, ptr %144, i64 0, i32 5
  store i64 -1, ptr %146, align 8, !tbaa !71
  %147 = getelementptr inbounds %struct.xpvinvlist, ptr %144, i64 0, i32 4
  store i64 0, ptr %147, align 8, !tbaa !71
  %148 = load ptr, ptr %111, align 8, !tbaa !63
  %149 = getelementptr inbounds %struct.xpv, ptr %148, i64 0, i32 2
  %150 = load i64, ptr %149, align 8, !tbaa !72
  %151 = freeze i64 %150
  %152 = getelementptr inbounds %struct.xpvinvlist, ptr %148, i64 0, i32 6
  %153 = load i8, ptr %152, align 1, !tbaa !57, !range !59, !noundef !60
  %154 = getelementptr inbounds %struct.xpvinvlist, ptr %144, i64 0, i32 6
  store i8 %153, ptr %154, align 1, !tbaa !57
  %155 = icmp eq i64 %151, 0
  br i1 %155, label %165, label %156

156:                                              ; preds = %143
  %157 = lshr i64 %151, 3
  %158 = load i8, ptr %152, align 1, !tbaa !57, !range !59, !noundef !60
  %159 = zext i8 %158 to i64
  %160 = icmp eq i64 %157, %159
  %161 = zext i8 %153 to i64
  %162 = add nuw nsw i64 %157, %161
  %163 = sub nsw i64 %162, %159
  %164 = shl i64 %163, 3
  br i1 %160, label %165, label %166

165:                                              ; preds = %156, %143
  br label %166

166:                                              ; preds = %156, %165
  %167 = phi i64 [ 0, %165 ], [ %164, %156 ]
  store i64 %167, ptr %145, align 8, !tbaa !72
  %168 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 3
  %169 = load ptr, ptr %168, align 8, !tbaa !9
  %170 = getelementptr inbounds %struct.sv, ptr %111, i64 0, i32 3
  %171 = load ptr, ptr %170, align 8, !tbaa !9
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %169, ptr align 1 %171, i64 %151, i1 false)
  %172 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %130) #21
  store ptr %172, ptr %3, align 8, !tbaa !5
  br label %173

173:                                              ; preds = %166, %109, %97
  %174 = phi ptr [ %172, %166 ], [ %22, %109 ], [ %103, %97 ]
  %175 = load i8, ptr %1, align 4, !tbaa !252
  %176 = and i8 %175, 4
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds ptr, ptr %39, i64 2
  %180 = load ptr, ptr %179, align 8, !tbaa !5
  %181 = icmp eq ptr %180, null
  %182 = icmp eq ptr %180, @PL_sv_undef
  %183 = or i1 %181, %182
  %184 = select i1 %183, ptr null, ptr %180
  br label %187

185:                                              ; preds = %104
  %186 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %22, i64 noundef 0, i64 noundef -1)
  br label %271

187:                                              ; preds = %26, %178, %173
  %188 = phi ptr [ %22, %26 ], [ %174, %178 ], [ %174, %173 ]
  %189 = phi i8 [ %27, %26 ], [ %175, %178 ], [ %175, %173 ]
  %190 = phi ptr [ null, %26 ], [ %184, %178 ], [ null, %173 ]
  %191 = and i8 %189, 1
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %188, ptr noundef %194, i1 noundef zeroext true, ptr noundef nonnull %3)
  %195 = load ptr, ptr %3, align 8, !tbaa !5
  br label %196

196:                                              ; preds = %193, %187
  %197 = phi ptr [ %188, %187 ], [ %195, %193 ]
  br label %198

198:                                              ; preds = %196, %214
  %199 = phi i64 [ %217, %214 ], [ 0, %196 ]
  %200 = phi i8 [ %216, %214 ], [ 0, %196 ]
  %201 = phi ptr [ %215, %214 ], [ %197, %196 ]
  %202 = trunc i64 %199 to i32
  %203 = lshr i64 %199, 3
  %204 = and i64 %203, 536870911
  %205 = getelementptr inbounds %struct.regnode_charclass, ptr %1, i64 0, i32 4, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !9
  %207 = zext i8 %206 to i32
  %208 = and i32 %202, 7
  %209 = shl nuw nsw i32 1, %208
  %210 = and i32 %209, %207
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %198
  %213 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %201, i64 noundef %199, i64 noundef %199)
  br label %214

214:                                              ; preds = %212, %198
  %215 = phi ptr [ %213, %212 ], [ %201, %198 ]
  %216 = phi i8 [ 1, %212 ], [ %200, %198 ]
  %217 = add nuw nsw i64 %199, 1
  %218 = icmp eq i64 %217, 256
  br i1 %218, label %219, label %198, !llvm.loop !345

219:                                              ; preds = %214
  store ptr %215, ptr %3, align 8, !tbaa !5
  %220 = load i8, ptr %1, align 4, !tbaa !252
  %221 = icmp sgt i8 %220, -1
  br i1 %221, label %225, label %222

222:                                              ; preds = %219
  %223 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %215, ptr noundef %223, i1 noundef zeroext false, ptr noundef nonnull %3)
  %224 = load i8, ptr %1, align 4, !tbaa !252
  br label %225

225:                                              ; preds = %222, %219
  %226 = phi i8 [ %224, %222 ], [ %220, %219 ]
  %227 = and i8 %226, 64
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %225
  %230 = load ptr, ptr %3, align 8, !tbaa !5
  %231 = load ptr, ptr @PL_InBitmap, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %230, ptr noundef %231, i1 noundef zeroext true, ptr noundef nonnull %3)
  %232 = load i8, ptr %1, align 4, !tbaa !252
  br label %233

233:                                              ; preds = %229, %225
  %234 = phi i8 [ %232, %229 ], [ %226, %225 ]
  %235 = zext i8 %234 to i32
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %253, label %238

238:                                              ; preds = %233
  %239 = load ptr, ptr %3, align 8, !tbaa !5
  %240 = load ptr, ptr %239, align 8, !tbaa !63
  %241 = getelementptr inbounds %struct.xpv, ptr %240, i64 0, i32 2
  %242 = load i64, ptr %241, align 8, !tbaa !72
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %250, label %244

244:                                              ; preds = %238
  %245 = lshr i64 %242, 3
  %246 = getelementptr inbounds %struct.xpvinvlist, ptr %240, i64 0, i32 6
  %247 = load i8, ptr %246, align 1, !tbaa !57, !range !59, !noundef !60
  %248 = zext i8 %247 to i64
  %249 = icmp eq i64 %245, %248
  br i1 %249, label %250, label %251

250:                                              ; preds = %244, %238
  tail call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %239, i64 noundef 0, i64 noundef -1)
  br label %263

251:                                              ; preds = %244
  %252 = xor i8 %247, 1
  store i8 %252, ptr %246, align 1, !tbaa !57
  br label %263

253:                                              ; preds = %233
  %254 = and i8 %216, 1
  %255 = icmp eq i8 %254, 0
  %256 = and i32 %235, 4
  %257 = icmp eq i32 %256, 0
  %258 = or i1 %255, %257
  %259 = load ptr, ptr %3, align 8, !tbaa !5
  br i1 %258, label %263, label %260

260:                                              ; preds = %253
  %261 = load ptr, ptr @PL_Latin1, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %259, ptr noundef %261, i1 noundef zeroext false, ptr noundef nonnull %3)
  %262 = load ptr, ptr %3, align 8, !tbaa !5
  br label %263

263:                                              ; preds = %251, %250, %253, %260
  %264 = phi ptr [ %239, %251 ], [ %239, %250 ], [ %259, %253 ], [ %262, %260 ]
  %265 = icmp eq ptr %190, null
  br i1 %265, label %271, label %266

266:                                              ; preds = %263
  %267 = load i8, ptr %1, align 4, !tbaa !252
  %268 = and i8 %267, 1
  %269 = icmp ne i8 %268, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %264, ptr noundef nonnull %190, i1 noundef zeroext %269, ptr noundef nonnull %3)
  %270 = load ptr, ptr %3, align 8, !tbaa !5
  br label %271

271:                                              ; preds = %263, %266, %185
  %272 = phi ptr [ %186, %185 ], [ %270, %266 ], [ %264, %263 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #21
  ret ptr %272
}

declare i64 @Perl_valid_utf8_to_uvchr(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @Perl_newSV(i64 noundef) local_unnamed_addr #1

declare ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #14

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_add_above_Latin1_folds(ptr noundef readonly %0, i8 noundef zeroext %1, ptr nocapture noundef %2) unnamed_addr #0 {
  %4 = zext i8 %1 to i32
  switch i8 %1, label %24 [
    i8 107, label %5
    i8 75, label %5
    i8 115, label %8
    i8 83, label %8
    i8 -75, label %11
    i8 -59, label %15
    i8 -27, label %15
    i8 -1, label %18
    i8 -33, label %21
  ]

5:                                                ; preds = %3, %3
  %6 = load ptr, ptr %2, align 8, !tbaa !5
  %7 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %6, i64 noundef 8490, i64 noundef 8490)
  store ptr %7, ptr %2, align 8, !tbaa !5
  br label %46

8:                                                ; preds = %3, %3
  %9 = load ptr, ptr %2, align 8, !tbaa !5
  %10 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %9, i64 noundef 383, i64 noundef 383)
  store ptr %10, ptr %2, align 8, !tbaa !5
  br label %46

11:                                               ; preds = %3
  %12 = load ptr, ptr %2, align 8, !tbaa !5
  %13 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %12, i64 noundef 924, i64 noundef 924)
  store ptr %13, ptr %2, align 8, !tbaa !5
  %14 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %13, i64 noundef 956, i64 noundef 956)
  store ptr %14, ptr %2, align 8, !tbaa !5
  br label %46

15:                                               ; preds = %3, %3
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  %17 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %16, i64 noundef 8491, i64 noundef 8491)
  store ptr %17, ptr %2, align 8, !tbaa !5
  br label %46

18:                                               ; preds = %3
  %19 = load ptr, ptr %2, align 8, !tbaa !5
  %20 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %19, i64 noundef 376, i64 noundef 376)
  store ptr %20, ptr %2, align 8, !tbaa !5
  br label %46

21:                                               ; preds = %3
  %22 = load ptr, ptr %2, align 8, !tbaa !5
  %23 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %22, i64 noundef 7838, i64 noundef 7838)
  store ptr %23, ptr %2, align 8, !tbaa !5
  br label %46

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %26 = load ptr, ptr %25, align 8, !tbaa !145
  %27 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !138
  %32 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !108
  %34 = ptrtoint ptr %31 to i64
  %35 = ptrtoint ptr %33 to i64
  %36 = sub i64 %34, %35
  %37 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %38 = load i32, ptr %37, align 8, !tbaa !98
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i32
  %41 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %42 = load ptr, ptr %41, align 8, !tbaa !140
  %43 = ptrtoint ptr %42 to i64
  %44 = sub i64 %43, %34
  %45 = getelementptr inbounds i8, ptr %33, i64 %36
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 20, ptr noundef nonnull @.str.224, i32 noundef %4, i32 noundef %40, i64 noundef %36, ptr noundef %33, i32 noundef %40, i64 noundef %44, ptr noundef %45) #21
  br label %46

46:                                               ; preds = %24, %29, %21, %18, %15, %11, %8, %5
  ret void
}

declare void @Perl_ck_warner_d(i32 noundef, ptr noundef, ...) local_unnamed_addr #1

declare void @Perl_fbm_compile(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_populate_ANYOF_from_invlist(ptr nocapture noundef %0, ptr nocapture noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %3, i8 0, i64 32, i1 false)
  %4 = load ptr, ptr %1, align 8, !tbaa !5
  %5 = icmp eq ptr %4, null
  br i1 %5, label %166, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %4, align 8, !tbaa !63
  %8 = getelementptr inbounds %struct.xpvinvlist, ptr %7, i64 0, i32 5
  store i64 0, ptr %8, align 8, !tbaa !71
  %9 = getelementptr inbounds %struct.xpv, ptr %7, i64 0, i32 2
  %10 = load i64, ptr %9, align 8, !tbaa !72
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.xpvinvlist, ptr %7, i64 0, i32 5
  store i64 -1, ptr %13, align 8, !tbaa !71
  br label %138

14:                                               ; preds = %129, %96
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %15, align 8, !tbaa !63
  br label %17

17:                                               ; preds = %14, %71
  %18 = phi ptr [ %16, %14 ], [ %27, %71 ]
  %19 = phi ptr [ %15, %14 ], [ %28, %71 ]
  %20 = getelementptr inbounds %struct.xpvinvlist, ptr %18, i64 0, i32 5
  %21 = getelementptr inbounds %struct.xpv, ptr %18, i64 0, i32 2
  %22 = load i64, ptr %21, align 8, !tbaa !72
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.xpvinvlist, ptr %18, i64 0, i32 5
  store i64 -1, ptr %25, align 8, !tbaa !71
  br label %134

26:                                               ; preds = %6, %17
  %27 = phi ptr [ %18, %17 ], [ %7, %6 ]
  %28 = phi ptr [ %19, %17 ], [ %4, %6 ]
  %29 = phi i64 [ %22, %17 ], [ %10, %6 ]
  %30 = phi ptr [ %20, %17 ], [ %8, %6 ]
  %31 = phi i1 [ false, %17 ], [ true, %6 ]
  %32 = lshr i64 %29, 3
  %33 = getelementptr %struct.xpvinvlist, ptr %27, i64 0, i32 6
  %34 = load i8, ptr %33, align 1, !tbaa !57, !range !59, !noundef !60
  %35 = zext i8 %34 to i64
  %36 = sub nsw i64 %32, %35
  %37 = load i64, ptr %30, align 8, !tbaa !71
  %38 = icmp ult i64 %37, %36
  br i1 %38, label %39, label %47

39:                                               ; preds = %26
  %40 = getelementptr i8, ptr %28, i64 16
  %41 = load ptr, ptr %40, align 8, !tbaa !9
  %42 = getelementptr inbounds i64, ptr %41, i64 %35
  %43 = add nuw i64 %37, 1
  store i64 %43, ptr %30, align 8, !tbaa !71
  %44 = getelementptr inbounds i64, ptr %42, i64 %37
  %45 = load i64, ptr %44, align 8, !tbaa !71
  %46 = icmp ult i64 %43, %36
  br i1 %46, label %49, label %56

47:                                               ; preds = %26
  store i64 -1, ptr %30, align 8, !tbaa !71
  %48 = getelementptr inbounds %struct.xpvinvlist, ptr %27, i64 0, i32 5
  store i64 -1, ptr %48, align 8, !tbaa !71
  br i1 %31, label %138, label %134

49:                                               ; preds = %39
  %50 = add nuw i64 %37, 2
  store i64 %50, ptr %30, align 8, !tbaa !71
  %51 = getelementptr inbounds i64, ptr %42, i64 %43
  %52 = load i64, ptr %51, align 8, !tbaa !71
  %53 = icmp eq i64 %52, 0
  %54 = icmp ult i64 %45, 257
  %55 = select i1 %53, i1 %54, i1 false
  br i1 %55, label %63, label %58

56:                                               ; preds = %39
  %57 = icmp ult i64 %45, 257
  br i1 %57, label %63, label %61

58:                                               ; preds = %49
  %59 = add i64 %52, -1
  %60 = icmp ugt i64 %59, 255
  br i1 %60, label %61, label %68

61:                                               ; preds = %56, %58
  %62 = phi i64 [ %59, %58 ], [ -1, %56 ]
  br label %63

63:                                               ; preds = %49, %56, %61
  %64 = phi i8 [ 2, %61 ], [ 64, %56 ], [ 64, %49 ]
  %65 = phi i64 [ %62, %61 ], [ -1, %56 ], [ -1, %49 ]
  %66 = load i8, ptr %0, align 2, !tbaa !169
  %67 = or i8 %66, %64
  store i8 %67, ptr %0, align 2, !tbaa !169
  br label %68

68:                                               ; preds = %63, %58
  %69 = phi i64 [ %59, %58 ], [ %65, %63 ]
  %70 = icmp ugt i64 %45, 255
  br i1 %70, label %132, label %71

71:                                               ; preds = %68
  %72 = tail call i64 @llvm.umin.i64(i64 %69, i64 255)
  %73 = trunc i64 %45 to i32
  %74 = trunc i64 %72 to i32
  %75 = icmp ugt i32 %73, %74
  br i1 %75, label %17, label %76

76:                                               ; preds = %71
  %77 = add nuw nsw i32 %74, 1
  %78 = sub i32 %77, %73
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %96, label %81

81:                                               ; preds = %76
  %82 = lshr i64 %45, 3
  %83 = and i64 %82, 31
  %84 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4, i64 %83
  %85 = load i8, ptr %84, align 1, !tbaa !9
  %86 = zext i8 %85 to i32
  %87 = and i32 %73, 7
  %88 = shl nuw nsw i32 1, %87
  %89 = and i32 %88, %86
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %81
  %92 = trunc i32 %88 to i8
  %93 = or i8 %85, %92
  store i8 %93, ptr %84, align 1, !tbaa !9
  br label %94

94:                                               ; preds = %91, %81
  %95 = add i32 %73, 1
  br label %96

96:                                               ; preds = %94, %76
  %97 = phi i32 [ %73, %76 ], [ %95, %94 ]
  %98 = icmp eq i32 %74, %73
  br i1 %98, label %14, label %99

99:                                               ; preds = %96, %129
  %100 = phi i32 [ %130, %129 ], [ %97, %96 ]
  %101 = lshr i32 %100, 3
  %102 = and i32 %101, 31
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4, i64 %103
  %105 = load i8, ptr %104, align 1, !tbaa !9
  %106 = zext i8 %105 to i32
  %107 = and i32 %100, 7
  %108 = shl nuw nsw i32 1, %107
  %109 = and i32 %108, %106
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %99
  %112 = trunc i32 %108 to i8
  %113 = or i8 %105, %112
  store i8 %113, ptr %104, align 1, !tbaa !9
  br label %114

114:                                              ; preds = %111, %99
  %115 = add i32 %100, 1
  %116 = lshr i32 %115, 3
  %117 = and i32 %116, 31
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !9
  %121 = zext i8 %120 to i32
  %122 = and i32 %115, 7
  %123 = shl nuw nsw i32 1, %122
  %124 = and i32 %123, %121
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %114
  %127 = trunc i32 %123 to i8
  %128 = or i8 %120, %127
  store i8 %128, ptr %119, align 1, !tbaa !9
  br label %129

129:                                              ; preds = %126, %114
  %130 = add i32 %100, 2
  %131 = icmp eq i32 %115, %74
  br i1 %131, label %14, label %99, !llvm.loop !346

132:                                              ; preds = %68
  %133 = getelementptr inbounds %struct.xpvinvlist, ptr %27, i64 0, i32 5
  store i64 -1, ptr %133, align 8, !tbaa !71
  br i1 %31, label %138, label %134

134:                                              ; preds = %24, %47, %132
  %135 = phi ptr [ %28, %47 ], [ %28, %132 ], [ %19, %24 ]
  %136 = load ptr, ptr @PL_InBitmap, align 8, !tbaa !5
  tail call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %135, ptr noundef %136, i1 noundef zeroext true, ptr noundef nonnull %1)
  %137 = load ptr, ptr %1, align 8, !tbaa !5
  br label %138

138:                                              ; preds = %12, %47, %134, %132
  %139 = phi ptr [ %137, %134 ], [ %28, %132 ], [ %28, %47 ], [ %4, %12 ]
  %140 = load i8, ptr %0, align 2, !tbaa !169
  %141 = and i8 %140, 64
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = load ptr, ptr @PL_InBitmap, align 8, !tbaa !5
  tail call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %139, ptr noundef %144, i1 noundef zeroext false, ptr noundef nonnull %1)
  %145 = load ptr, ptr %1, align 8, !tbaa !5
  br label %146

146:                                              ; preds = %143, %138
  %147 = phi ptr [ %145, %143 ], [ %139, %138 ]
  %148 = load ptr, ptr %147, align 8, !tbaa !63
  %149 = getelementptr inbounds %struct.xpv, ptr %148, i64 0, i32 2
  %150 = load i64, ptr %149, align 8, !tbaa !72
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %146
  %153 = lshr i64 %150, 3
  %154 = getelementptr inbounds %struct.xpvinvlist, ptr %148, i64 0, i32 6
  %155 = load i8, ptr %154, align 1, !tbaa !57, !range !59, !noundef !60
  %156 = zext i8 %155 to i64
  %157 = icmp eq i64 %153, %156
  br i1 %157, label %158, label %166

158:                                              ; preds = %146, %152
  %159 = getelementptr inbounds %struct.sv, ptr %147, i64 0, i32 1
  %160 = load i32, ptr %159, align 8, !tbaa !22
  %161 = icmp ugt i32 %160, 1
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = add i32 %160, -1
  store i32 %163, ptr %159, align 8, !tbaa !22
  br label %165

164:                                              ; preds = %158
  tail call void @Perl_sv_free2(ptr noundef nonnull %147, i32 noundef %160) #21
  br label %165

165:                                              ; preds = %162, %164
  store ptr null, ptr %1, align 8, !tbaa !5
  br label %166

166:                                              ; preds = %152, %165, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_set_ANYOF_arg(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i1 noundef zeroext %6) unnamed_addr #0 {
  %8 = icmp ne ptr %2, null
  %9 = icmp ne ptr %3, null
  %10 = or i1 %8, %9
  %11 = icmp ne ptr %4, null
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %77

13:                                               ; preds = %7
  %14 = tail call ptr @Perl_newSV_type(i32 noundef 11) #21
  br i1 %9, label %15, label %19

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 1
  %17 = load i32, ptr %16, align 8, !tbaa !22
  %18 = add i32 %17, 1
  store i32 %18, ptr %16, align 8, !tbaa !22
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi ptr [ %3, %15 ], [ @PL_sv_undef, %13 ]
  %21 = tail call ptr @Perl_av_store(ptr noundef %14, i64 noundef 0, ptr noundef nonnull %20) #21
  %22 = icmp eq ptr %5, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = tail call ptr @Perl_av_store(ptr noundef %14, i64 noundef 1, ptr noundef nonnull %5) #21
  %25 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 1
  %26 = load i32, ptr %25, align 8, !tbaa !22
  %27 = icmp ugt i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = add i32 %26, -1
  store i32 %29, ptr %25, align 8, !tbaa !22
  br label %38

30:                                               ; preds = %23
  tail call void @Perl_sv_free2(ptr noundef nonnull %2, i32 noundef %26) #21
  br label %38

31:                                               ; preds = %19
  %32 = tail call ptr @Perl_av_store(ptr noundef %14, i64 noundef 1, ptr noundef nonnull @PL_sv_undef) #21
  br i1 %8, label %33, label %38

33:                                               ; preds = %31
  %34 = tail call ptr @Perl_av_store(ptr noundef %14, i64 noundef 3, ptr noundef nonnull %2) #21
  %35 = zext i1 %6 to i64
  %36 = tail call ptr @Perl_newSVuv(i64 noundef %35) #21
  %37 = tail call ptr @Perl_av_store(ptr noundef %14, i64 noundef 4, ptr noundef %36) #21
  br label %38

38:                                               ; preds = %30, %28, %31, %33
  %39 = select i1 %11, ptr %4, ptr @PL_sv_undef
  %40 = tail call ptr @Perl_av_store(ptr noundef %14, i64 noundef 2, ptr noundef nonnull %39) #21
  %41 = tail call ptr @Perl_newRV_noinc(ptr noundef %14) #21
  %42 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %43 = load ptr, ptr %42, align 8, !tbaa !156
  %44 = getelementptr inbounds %struct.regexp_internal, ptr %43, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !26
  %46 = icmp eq ptr %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %38
  %48 = load i32, ptr %45, align 8, !tbaa !27
  br label %49

49:                                               ; preds = %47, %38
  %50 = phi i32 [ %48, %47 ], [ 0, %38 ]
  %51 = add i32 %50, 1
  %52 = zext i32 %50 to i64
  %53 = shl nuw nsw i64 %52, 3
  %54 = add nuw nsw i64 %53, 24
  %55 = tail call ptr @Perl_safesysrealloc(ptr noundef %45, i64 noundef %54) #21
  %56 = load ptr, ptr %42, align 8, !tbaa !156
  %57 = getelementptr inbounds %struct.regexp_internal, ptr %56, i64 0, i32 3
  store ptr %55, ptr %57, align 8, !tbaa !26
  %58 = icmp eq i32 %50, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %struct.reg_data, ptr %55, i64 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !29
  %62 = zext i32 %51 to i64
  %63 = tail call ptr @Perl_safesysrealloc(ptr noundef %61, i64 noundef %62) #21
  br label %66

64:                                               ; preds = %49
  %65 = tail call ptr @Perl_safesysmalloc(i64 noundef 1) #21
  br label %66

66:                                               ; preds = %59, %64
  %67 = phi ptr [ %63, %59 ], [ %65, %64 ]
  %68 = load ptr, ptr %42, align 8, !tbaa !156
  %69 = getelementptr inbounds %struct.regexp_internal, ptr %68, i64 0, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !26
  %71 = getelementptr inbounds %struct.reg_data, ptr %70, i64 0, i32 1
  store ptr %67, ptr %71, align 8, !tbaa !29
  store i32 %51, ptr %70, align 8, !tbaa !27
  %72 = getelementptr inbounds i8, ptr %67, i64 %52
  store i8 115, ptr %72, align 1
  %73 = load ptr, ptr %42, align 8, !tbaa !156
  %74 = getelementptr inbounds %struct.regexp_internal, ptr %73, i64 0, i32 3
  %75 = load ptr, ptr %74, align 8, !tbaa !26
  %76 = getelementptr inbounds %struct.reg_data, ptr %75, i64 0, i32 2, i64 %52
  store ptr %41, ptr %76, align 8, !tbaa !5
  br label %77

77:                                               ; preds = %7, %66
  %78 = phi i32 [ %50, %66 ], [ -1, %7 ]
  %79 = getelementptr inbounds %struct.regnode_1, ptr %1, i64 0, i32 3
  store i32 %78, ptr %79, align 4, !tbaa !166
  ret void
}

declare ptr @Perl_newSVuv(i64 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal void @S_re_croak2(i1 noundef zeroext %0, ptr nocapture noundef readonly %1, ptr nocapture readnone %2, ...) unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = alloca i64, align 8
  %6 = alloca [512 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  %7 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #24
  store i64 %7, ptr %5, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %6) #21
  %8 = icmp ugt i64 %7, 510
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i64 510, ptr %5, align 8, !tbaa !71
  br label %10

10:                                               ; preds = %9, %3
  %11 = phi i64 [ 510, %9 ], [ %7, %3 ]
  %12 = add nsw i64 %11, -449
  %13 = icmp ult i64 %12, -511
  %14 = sub nuw nsw i64 510, %11
  %15 = select i1 %13, i64 %14, i64 62
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %6, ptr align 1 %1, i64 %11, i1 false)
  %16 = getelementptr inbounds i8, ptr %6, i64 %11
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %16, ptr nonnull align 1 @.str.235, i64 %15, i1 false)
  %17 = add nuw nsw i64 %15, %11
  %18 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %17
  store i8 10, ptr %18, align 1, !tbaa !9
  %19 = add nuw nsw i64 %17, 1
  %20 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %19
  store i8 0, ptr %20, align 1, !tbaa !9
  call void @llvm.va_start(ptr nonnull %4)
  %21 = call ptr @Perl_vmess(ptr noundef nonnull %6, ptr noundef nonnull %4) #21
  call void @llvm.va_end(ptr nonnull %4)
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !62
  %24 = and i32 %23, 2098176
  %25 = icmp eq i32 %24, 1024
  br i1 %25, label %26, label %32

26:                                               ; preds = %10
  %27 = load ptr, ptr %21, align 8, !tbaa !63
  %28 = getelementptr inbounds %struct.xpv, ptr %27, i64 0, i32 2
  %29 = load i64, ptr %28, align 8, !tbaa !72
  store i64 %29, ptr %5, align 8, !tbaa !71
  %30 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !9
  br label %35

32:                                               ; preds = %10
  %33 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %21, ptr noundef nonnull %5, i32 noundef 34) #21
  %34 = load i64, ptr %5, align 8, !tbaa !71
  br label %35

35:                                               ; preds = %32, %26
  %36 = phi i64 [ %34, %32 ], [ %29, %26 ]
  %37 = phi ptr [ %33, %32 ], [ %31, %26 ]
  %38 = icmp ugt i64 %36, 512
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i64 512, ptr %5, align 8, !tbaa !71
  br label %40

40:                                               ; preds = %39, %35
  %41 = phi i64 [ 512, %39 ], [ %36, %35 ]
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %6, ptr align 1 %37, i64 %41, i1 false)
  %42 = zext i1 %0 to i32
  %43 = add nsw i64 %41, -1
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.268, i32 noundef %42, i64 noundef %43, ptr noundef nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reganode(ptr noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %5 = load ptr, ptr %4, align 8, !tbaa !145
  %6 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = zext i8 %1 to i64
  %10 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %9
  %11 = load i8, ptr %10, align 1, !tbaa !9
  %12 = zext i8 %11 to i64
  %13 = add nuw nsw i64 %12, 1
  %14 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %15 = load i64, ptr %14, align 8, !tbaa !144
  %16 = add i64 %13, %15
  store i64 %16, ptr %14, align 8, !tbaa !144
  br label %26

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %19 = load ptr, ptr %18, align 8, !tbaa !158
  %20 = icmp ult ptr %5, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = zext i8 %1 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef %22, ptr noundef %5, ptr noundef %19) #21
  %23 = load ptr, ptr %4, align 8, !tbaa !145
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi ptr [ %23, %21 ], [ %5, %17 ]
  store i8 0, ptr %5, align 2, !tbaa !169
  br label %26

26:                                               ; preds = %8, %24
  %27 = phi ptr [ %5, %8 ], [ %25, %24 ]
  %28 = icmp eq ptr %27, %6
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.regnode_1, ptr %5, i64 0, i32 3
  store i32 %2, ptr %30, align 4, !tbaa !166
  %31 = getelementptr inbounds %struct.regnode, ptr %5, i64 0, i32 1
  store i8 %1, ptr %31, align 1, !tbaa !164
  %32 = getelementptr inbounds %struct.regnode, ptr %5, i64 0, i32 2
  store i16 0, ptr %32, align 2, !tbaa !168
  %33 = getelementptr inbounds %struct.regnode, ptr %5, i64 2
  store ptr %33, ptr %4, align 8, !tbaa !145
  br label %34

34:                                               ; preds = %29, %26
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg_node(ptr noundef %0, i8 noundef zeroext %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %4 = load ptr, ptr %3, align 8, !tbaa !145
  %5 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = zext i8 %1 to i64
  %9 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !9
  %11 = zext i8 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %14 = load i64, ptr %13, align 8, !tbaa !144
  %15 = add i64 %12, %14
  store i64 %15, ptr %13, align 8, !tbaa !144
  br label %25

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %18 = load ptr, ptr %17, align 8, !tbaa !158
  %19 = icmp ult ptr %4, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = zext i8 %1 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef %21, ptr noundef %4, ptr noundef %18) #21
  %22 = load ptr, ptr %3, align 8, !tbaa !145
  br label %23

23:                                               ; preds = %20, %16
  %24 = phi ptr [ %22, %20 ], [ %4, %16 ]
  store i8 0, ptr %4, align 2, !tbaa !169
  br label %25

25:                                               ; preds = %7, %23
  %26 = phi ptr [ %4, %7 ], [ %24, %23 ]
  %27 = icmp eq ptr %26, %5
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.regnode, ptr %4, i64 0, i32 1
  store i8 %1, ptr %29, align 1, !tbaa !164
  %30 = getelementptr inbounds %struct.regnode, ptr %4, i64 0, i32 2
  store i16 0, ptr %30, align 2, !tbaa !168
  %31 = getelementptr inbounds %struct.regnode, ptr %4, i64 1
  store ptr %31, ptr %3, align 8, !tbaa !145
  br label %32

32:                                               ; preds = %28, %25
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_nextchar(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %3 = load ptr, ptr %2, align 8, !tbaa !138
  %4 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %4, ptr %2, align 8, !tbaa !138
  %5 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %6 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %7 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %8 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %10 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %11 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  br label %12

12:                                               ; preds = %60, %1
  %13 = phi ptr [ %61, %60 ], [ %4, %1 ]
  %14 = load ptr, ptr %5, align 8, !tbaa !140
  %15 = ptrtoint ptr %14 to i64
  %16 = ptrtoint ptr %13 to i64
  %17 = sub i64 %15, %16
  %18 = icmp sgt i64 %17, 2
  br i1 %18, label %19, label %62

19:                                               ; preds = %12
  %20 = load i8, ptr %13, align 1, !tbaa !9
  %21 = icmp eq i8 %20, 40
  br i1 %21, label %22, label %62

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, ptr %13, i64 1
  %24 = load i8, ptr %23, align 1, !tbaa !9
  %25 = icmp eq i8 %24, 63
  br i1 %25, label %26, label %62

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, ptr %13, i64 2
  %28 = load i8, ptr %27, align 1, !tbaa !9
  %29 = icmp eq i8 %28, 35
  br i1 %29, label %30, label %62

30:                                               ; preds = %26, %53
  %31 = phi ptr [ %55, %53 ], [ %13, %26 ]
  %32 = load ptr, ptr %5, align 8, !tbaa !140
  %33 = icmp eq ptr %31, %32
  br i1 %33, label %34, label %53

34:                                               ; preds = %30
  %35 = load ptr, ptr %8, align 8, !tbaa !108
  %36 = ptrtoint ptr %31 to i64
  %37 = ptrtoint ptr %35 to i64
  %38 = sub i64 %36, %37
  %39 = load ptr, ptr %9, align 8, !tbaa !145
  %40 = icmp eq ptr %39, %10
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = load ptr, ptr %11, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %42, i32 noundef 11) #21
  %43 = load ptr, ptr %8, align 8, !tbaa !108
  br label %44

44:                                               ; preds = %41, %34
  %45 = phi ptr [ %43, %41 ], [ %35, %34 ]
  %46 = icmp sgt i64 %38, 127
  %47 = select i1 %46, i64 117, i64 %38
  %48 = select i1 %46, ptr @.str.182, ptr @.str.178
  %49 = load i32, ptr %6, align 8, !tbaa !98
  %50 = icmp ne i32 %49, 0
  %51 = zext i1 %50 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.272, i32 noundef %51, i64 noundef %47, ptr noundef %45, ptr noundef nonnull %48) #21
  %52 = load ptr, ptr %2, align 8, !tbaa !138
  br label %53

53:                                               ; preds = %44, %30
  %54 = phi ptr [ %52, %44 ], [ %31, %30 ]
  %55 = getelementptr inbounds i8, ptr %54, i64 1
  store ptr %55, ptr %2, align 8, !tbaa !138
  %56 = load i8, ptr %55, align 1, !tbaa !9
  %57 = icmp eq i8 %56, 41
  br i1 %57, label %58, label %30, !llvm.loop !347

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, ptr %54, i64 2
  br label %60

60:                                               ; preds = %121, %58
  %61 = phi ptr [ %59, %58 ], [ %122, %121 ]
  store ptr %61, ptr %2, align 8, !tbaa !138
  br label %12

62:                                               ; preds = %26, %22, %19, %12
  %63 = load i32, ptr %0, align 8, !tbaa !109
  %64 = and i32 %63, 8
  %65 = icmp ne i32 %64, 0
  %66 = icmp ugt ptr %14, %13
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %124

68:                                               ; preds = %62, %118
  %69 = phi ptr [ %119, %118 ], [ %13, %62 ]
  %70 = load i8, ptr %69, align 1, !tbaa !9
  switch i8 %70, label %71 [
    i8 32, label %100
    i8 13, label %100
    i8 12, label %100
    i8 11, label %100
    i8 10, label %100
    i8 9, label %100
  ]

71:                                               ; preds = %68
  %72 = load i32, ptr %6, align 8, !tbaa !98
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %99, label %74

74:                                               ; preds = %71
  %75 = ptrtoint ptr %69 to i64
  %76 = sub i64 %15, %75
  %77 = zext i8 %70 to i64
  %78 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %77
  %79 = load i8, ptr %78, align 1, !tbaa !9
  %80 = zext i8 %79 to i64
  %81 = icmp slt i64 %76, %80
  br i1 %81, label %103, label %82

82:                                               ; preds = %74
  switch i8 %70, label %121 [
    i8 -62, label %83
    i8 -30, label %87
    i8 35, label %105
  ]

83:                                               ; preds = %82
  %84 = getelementptr inbounds i8, ptr %69, i64 1
  %85 = load i8, ptr %84, align 1, !tbaa !9
  %86 = icmp eq i8 %85, -123
  br i1 %86, label %100, label %121

87:                                               ; preds = %82
  %88 = getelementptr inbounds i8, ptr %69, i64 1
  %89 = load i8, ptr %88, align 1, !tbaa !9
  %90 = icmp eq i8 %89, -128
  br i1 %90, label %91, label %121

91:                                               ; preds = %87
  %92 = getelementptr inbounds i8, ptr %69, i64 2
  %93 = load i8, ptr %92, align 1, !tbaa !9
  %94 = and i8 %93, -2
  %95 = icmp eq i8 %94, -114
  %96 = icmp eq i8 %94, -88
  %97 = or i1 %95, %96
  %98 = freeze i1 %97
  br i1 %98, label %100, label %121

99:                                               ; preds = %71
  switch i8 %70, label %121 [
    i8 -123, label %100
    i8 35, label %105
  ]

100:                                              ; preds = %99, %91, %83, %68, %68, %68, %68, %68, %68
  %101 = phi i64 [ 1, %99 ], [ 1, %68 ], [ 3, %91 ], [ 2, %83 ], [ 1, %68 ], [ 1, %68 ], [ 1, %68 ], [ 1, %68 ], [ 1, %68 ]
  %102 = getelementptr inbounds i8, ptr %69, i64 %101
  br label %118

103:                                              ; preds = %74
  %104 = icmp eq i8 %70, 35
  br i1 %104, label %105, label %121

105:                                              ; preds = %103, %99, %82
  br label %106

106:                                              ; preds = %105, %109
  %107 = phi ptr [ %110, %109 ], [ %69, %105 ]
  %108 = icmp ult ptr %107, %14
  br i1 %108, label %109, label %115

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, ptr %107, i64 1
  %111 = load i8, ptr %110, align 1, !tbaa !9
  %112 = icmp eq i8 %111, 10
  br i1 %112, label %113, label %106, !llvm.loop !348

113:                                              ; preds = %109
  %114 = getelementptr inbounds i8, ptr %107, i64 2
  br label %118

115:                                              ; preds = %106
  %116 = load i32, ptr %7, align 8, !tbaa !131
  %117 = or i32 %116, 512
  store i32 %117, ptr %7, align 8, !tbaa !131
  br label %118

118:                                              ; preds = %115, %113, %100
  %119 = phi ptr [ %102, %100 ], [ %114, %113 ], [ %107, %115 ]
  %120 = icmp ult ptr %119, %14
  br i1 %120, label %68, label %121

121:                                              ; preds = %82, %83, %87, %91, %99, %103, %118
  %122 = phi ptr [ %69, %83 ], [ %69, %91 ], [ %69, %87 ], [ %69, %103 ], [ %69, %99 ], [ %69, %82 ], [ %119, %118 ]
  %123 = icmp eq ptr %122, %13
  br i1 %123, label %124, label %60

124:                                              ; preds = %121, %62
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg_scan_name(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %3, align 8, !tbaa !138
  %5 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %6 = load ptr, ptr %5, align 8, !tbaa !140
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %141, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.cop, ptr %9, i64 0, i32 10
  %11 = load i32, ptr %10, align 8, !tbaa !90
  %12 = and i32 %11, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %16 = load i32, ptr %15, align 8, !tbaa !98
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %14, %8
  %19 = load i8, ptr %4, align 1, !tbaa !9
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !150
  %23 = and i32 %22, 81920
  %24 = icmp eq i32 %23, 81920
  br i1 %24, label %56, label %113

25:                                               ; preds = %14
  %26 = load i8, ptr %4, align 1, !tbaa !9
  %27 = icmp sgt i8 %26, -1
  br i1 %27, label %28, label %34

28:                                               ; preds = %25
  %29 = zext i8 %26 to i64
  %30 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !150
  %32 = and i32 %31, 65536
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %113, label %56

34:                                               ; preds = %25
  %35 = zext i8 %26 to i32
  %36 = and i32 %35, 254
  %37 = icmp eq i32 %36, 194
  br i1 %37, label %38, label %52

38:                                               ; preds = %34
  %39 = and i32 %35, 28
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %113

41:                                               ; preds = %38
  %42 = shl i8 %26, 6
  %43 = getelementptr inbounds i8, ptr %4, i64 1
  %44 = load i8, ptr %43, align 1, !tbaa !9
  %45 = and i8 %44, 63
  %46 = or i8 %45, %42
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !150
  %50 = and i32 %49, 65536
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %113, label %56

52:                                               ; preds = %34
  %53 = tail call zeroext i1 @Perl__is_utf8_perl_idstart(ptr noundef nonnull %4) #21
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = load ptr, ptr %3, align 8, !tbaa !138
  br label %113

56:                                               ; preds = %41, %28, %52, %18
  %57 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %58 = load i32, ptr %57, align 8, !tbaa !98
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = load ptr, ptr %3, align 8, !tbaa !138
  br label %104

62:                                               ; preds = %56, %101
  %63 = load ptr, ptr %3, align 8, !tbaa !138
  %64 = load i8, ptr %63, align 1, !tbaa !9
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !9
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds i8, ptr %63, i64 %68
  store ptr %69, ptr %3, align 8, !tbaa !138
  %70 = load i8, ptr %69, align 1, !tbaa !9
  %71 = icmp sgt i8 %70, -1
  br i1 %71, label %72, label %77

72:                                               ; preds = %62
  %73 = zext i8 %70 to i64
  %74 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !150
  %76 = and i32 %75, 1
  br label %101

77:                                               ; preds = %62
  %78 = zext i8 %70 to i32
  %79 = and i32 %78, 254
  %80 = icmp eq i32 %79, 194
  br i1 %80, label %81, label %98

81:                                               ; preds = %77
  %82 = and i32 %78, 28
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %95

84:                                               ; preds = %81
  %85 = shl i8 %70, 6
  %86 = getelementptr inbounds i8, ptr %69, i64 1
  %87 = load i8, ptr %86, align 1, !tbaa !9
  %88 = and i8 %87, 63
  %89 = or i8 %88, %85
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !150
  %93 = and i32 %92, 1
  %94 = icmp ne i32 %93, 0
  br label %95

95:                                               ; preds = %84, %81
  %96 = phi i1 [ false, %81 ], [ %94, %84 ]
  %97 = zext i1 %96 to i32
  br label %101

98:                                               ; preds = %77
  %99 = tail call zeroext i1 @Perl__is_utf8_FOO(i8 noundef zeroext 0, ptr noundef nonnull %69) #21
  %100 = zext i1 %99 to i32
  br label %101

101:                                              ; preds = %95, %98, %72
  %102 = phi i32 [ %76, %72 ], [ %97, %95 ], [ %100, %98 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %141, label %62, !llvm.loop !349

104:                                              ; preds = %60, %104
  %105 = phi ptr [ %61, %60 ], [ %106, %104 ]
  %106 = getelementptr inbounds i8, ptr %105, i64 1
  store ptr %106, ptr %3, align 8, !tbaa !138
  %107 = load i8, ptr %106, align 1, !tbaa !9
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !150
  %111 = and i32 %110, 16385
  %112 = icmp eq i32 %111, 16385
  br i1 %112, label %104, label %141, !llvm.loop !350

113:                                              ; preds = %54, %38, %41, %28, %18
  %114 = phi ptr [ %55, %54 ], [ %4, %38 ], [ %4, %41 ], [ %4, %28 ], [ %4, %18 ]
  %115 = getelementptr inbounds i8, ptr %114, i64 1
  store ptr %115, ptr %3, align 8, !tbaa !138
  %116 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %117 = load ptr, ptr %116, align 8, !tbaa !145
  %118 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %119 = icmp eq ptr %117, %118
  br i1 %119, label %124, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %122 = load ptr, ptr %121, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %122, i32 noundef 11) #21
  %123 = load ptr, ptr %3, align 8, !tbaa !138
  br label %124

124:                                              ; preds = %113, %120
  %125 = phi ptr [ %115, %113 ], [ %123, %120 ]
  %126 = load ptr, ptr %5, align 8, !tbaa !140
  %127 = icmp ugt ptr %125, %126
  %128 = select i1 %127, ptr %126, ptr %125
  %129 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %130 = load ptr, ptr %129, align 8, !tbaa !108
  %131 = ptrtoint ptr %128 to i64
  %132 = ptrtoint ptr %130 to i64
  %133 = sub i64 %131, %132
  %134 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %135 = load i32, ptr %134, align 8, !tbaa !98
  %136 = icmp ne i32 %135, 0
  %137 = zext i1 %136 to i32
  %138 = ptrtoint ptr %126 to i64
  %139 = sub i64 %138, %131
  %140 = getelementptr inbounds i8, ptr %130, i64 %133
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.273, i32 noundef %137, i64 noundef %133, ptr noundef %130, i32 noundef %137, i64 noundef %139, ptr noundef %140) #21
  br label %141

141:                                              ; preds = %101, %104, %124, %2
  %142 = icmp eq i32 %1, 0
  br i1 %142, label %194, label %143

143:                                              ; preds = %141
  %144 = load ptr, ptr %3, align 8, !tbaa !138
  %145 = ptrtoint ptr %144 to i64
  %146 = ptrtoint ptr %4 to i64
  %147 = sub i64 %145, %146
  %148 = shl i64 %147, 32
  %149 = ashr exact i64 %148, 32
  %150 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %151 = load i32, ptr %150, align 8, !tbaa !98
  %152 = icmp eq i32 %151, 0
  %153 = select i1 %152, i32 524288, i32 537395200
  %154 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %4, i64 noundef %149, i32 noundef %153) #21
  %155 = icmp eq i32 %1, 1
  br i1 %155, label %194, label %156

156:                                              ; preds = %143
  %157 = icmp eq ptr %154, null
  br i1 %157, label %158, label %159

158:                                              ; preds = %156
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.274) #21
  br label %159

159:                                              ; preds = %158, %156
  %160 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 28
  %161 = load ptr, ptr %160, align 8, !tbaa !217
  %162 = icmp eq ptr %161, null
  br i1 %162, label %170, label %163

163:                                              ; preds = %159
  %164 = tail call ptr @Perl_hv_common(ptr noundef nonnull %161, ptr noundef %154, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #21
  %165 = icmp eq ptr %164, null
  br i1 %165, label %170, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %struct.he, ptr %164, i64 0, i32 2
  %168 = load ptr, ptr %167, align 8, !tbaa !9
  %169 = icmp eq ptr %168, null
  br i1 %169, label %170, label %194

170:                                              ; preds = %159, %163, %166
  %171 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %172 = load ptr, ptr %171, align 8, !tbaa !145
  %173 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %174 = icmp eq ptr %172, %173
  br i1 %174, label %178, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %177 = load ptr, ptr %176, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %177, i32 noundef 11) #21
  br label %178

178:                                              ; preds = %170, %175
  %179 = load ptr, ptr %3, align 8, !tbaa !138
  %180 = load ptr, ptr %5, align 8, !tbaa !140
  %181 = icmp ugt ptr %179, %180
  %182 = select i1 %181, ptr %180, ptr %179
  %183 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %184 = load ptr, ptr %183, align 8, !tbaa !108
  %185 = ptrtoint ptr %182 to i64
  %186 = ptrtoint ptr %184 to i64
  %187 = sub i64 %185, %186
  %188 = load i32, ptr %150, align 8, !tbaa !98
  %189 = icmp ne i32 %188, 0
  %190 = zext i1 %189 to i32
  %191 = ptrtoint ptr %180 to i64
  %192 = sub i64 %191, %185
  %193 = getelementptr inbounds i8, ptr %184, i64 %187
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.275, i32 noundef %190, i64 noundef %187, ptr noundef %184, i32 noundef %190, i64 noundef %192, ptr noundef %193) #21
  br label %194

194:                                              ; preds = %141, %143, %178, %166
  %195 = phi ptr [ %154, %143 ], [ null, %178 ], [ %168, %166 ], [ null, %141 ]
  ret ptr %195
}

declare void @Perl_sv_upgrade(ptr noundef, i32 noundef) local_unnamed_addr #1

declare zeroext i1 @Perl_grok_atoUV(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg2Lanode(ptr noundef %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %6 = load ptr, ptr %5, align 8, !tbaa !145
  %7 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %8 = icmp eq ptr %6, %7
  br i1 %8, label %9, label %18

9:                                                ; preds = %4
  %10 = zext i8 %1 to i64
  %11 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !9
  %13 = zext i8 %12 to i64
  %14 = add nuw nsw i64 %13, 1
  %15 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %16 = load i64, ptr %15, align 8, !tbaa !144
  %17 = add i64 %14, %16
  store i64 %17, ptr %15, align 8, !tbaa !144
  br label %27

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %20 = load ptr, ptr %19, align 8, !tbaa !158
  %21 = icmp ult ptr %6, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = zext i8 %1 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef %23, ptr noundef %6, ptr noundef %20) #21
  %24 = load ptr, ptr %5, align 8, !tbaa !145
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi ptr [ %24, %22 ], [ %6, %18 ]
  store i8 0, ptr %6, align 2, !tbaa !169
  br label %27

27:                                               ; preds = %9, %25
  %28 = phi ptr [ %6, %9 ], [ %26, %25 ]
  %29 = icmp eq ptr %28, %7
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.regnode_1, ptr %6, i64 0, i32 3
  store i32 %2, ptr %31, align 4, !tbaa !166
  %32 = getelementptr inbounds %struct.regnode_2L, ptr %6, i64 0, i32 4
  store i32 %3, ptr %32, align 4, !tbaa !221
  %33 = getelementptr inbounds %struct.regnode, ptr %6, i64 0, i32 1
  store i8 %1, ptr %33, align 1, !tbaa !164
  %34 = getelementptr inbounds %struct.regnode, ptr %6, i64 0, i32 2
  store i16 0, ptr %34, align 2, !tbaa !168
  %35 = getelementptr inbounds %struct.regnode, ptr %6, i64 3
  store ptr %35, ptr %5, align 8, !tbaa !145
  br label %36

36:                                               ; preds = %30, %27
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_regtail(ptr noundef readonly %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %5 = load ptr, ptr %4, align 8, !tbaa !145
  %6 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %50, label %8

8:                                                ; preds = %3, %32
  %9 = phi ptr [ %35, %32 ], [ %1, %3 ]
  %10 = icmp ne ptr %9, null
  tail call void @llvm.assume(i1 %10)
  %11 = getelementptr inbounds %struct.regnode, ptr %9, i64 0, i32 1
  %12 = load i8, ptr %11, align 1, !tbaa !164
  %13 = icmp ugt i8 %12, 93
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = zext i8 %12 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %15, i32 noundef 93) #21
  %16 = load i8, ptr %11, align 1, !tbaa !164
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi i8 [ %16, %14 ], [ %12, %8 ]
  %19 = zext i8 %18 to i64
  %20 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !9
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.regnode, ptr %9, i64 0, i32 2
  %25 = load i16, ptr %24, align 2, !tbaa !168
  %26 = zext i16 %25 to i32
  %27 = icmp eq i16 %25, 0
  br i1 %27, label %43, label %32

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.regnode_1, ptr %9, i64 0, i32 3
  %30 = load i32, ptr %29, align 4, !tbaa !166
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %28, %23
  %33 = phi i32 [ %30, %28 ], [ %26, %23 ]
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.regnode, ptr %9, i64 %34
  br label %8

36:                                               ; preds = %28
  %37 = ptrtoint ptr %2 to i64
  %38 = ptrtoint ptr %9 to i64
  %39 = sub i64 %37, %38
  %40 = lshr exact i64 %39, 2
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %struct.regnode_1, ptr %9, i64 0, i32 3
  store i32 %41, ptr %42, align 4, !tbaa !166
  br label %50

43:                                               ; preds = %23
  %44 = ptrtoint ptr %2 to i64
  %45 = ptrtoint ptr %9 to i64
  %46 = sub i64 %44, %45
  %47 = lshr exact i64 %46, 2
  %48 = trunc i64 %47 to i16
  %49 = getelementptr inbounds %struct.regnode, ptr %9, i64 0, i32 2
  store i16 %48, ptr %49, align 2, !tbaa !168
  br label %50

50:                                               ; preds = %36, %43, %3
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #15

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regbranch(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %9, label %52

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %11 = load ptr, ptr %10, align 8, !tbaa !145
  %12 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %13 = icmp eq ptr %11, %12
  br i1 %13, label %29, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %16 = load i32, ptr %15, align 8, !tbaa !135
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %19 = load ptr, ptr %18, align 8, !tbaa !158
  %20 = icmp ult ptr %11, %19
  br i1 %17, label %33, label %21

21:                                               ; preds = %14
  br i1 %20, label %24, label %22

22:                                               ; preds = %21
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 62, ptr noundef %11, ptr noundef %19) #21
  %23 = load ptr, ptr %10, align 8, !tbaa !145
  br label %24

24:                                               ; preds = %21, %22
  %25 = phi ptr [ %23, %22 ], [ %11, %21 ]
  store i8 0, ptr %11, align 2, !tbaa !169
  %26 = icmp eq ptr %25, %12
  br i1 %26, label %48, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.regnode_1, ptr %11, i64 0, i32 3
  store i32 0, ptr %28, align 4, !tbaa !166
  br label %41

29:                                               ; preds = %9
  %30 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %31 = load i64, ptr %30, align 8, !tbaa !144
  %32 = add i64 %31, 1
  store i64 %32, ptr %30, align 8, !tbaa !144
  br label %38

33:                                               ; preds = %14
  br i1 %20, label %36, label %34

34:                                               ; preds = %33
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 30, ptr noundef %11, ptr noundef %19) #21
  %35 = load ptr, ptr %10, align 8, !tbaa !145
  br label %36

36:                                               ; preds = %34, %33
  %37 = phi ptr [ %35, %34 ], [ %11, %33 ]
  store i8 0, ptr %11, align 2, !tbaa !169
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi ptr [ %11, %29 ], [ %37, %36 ]
  %40 = icmp eq ptr %39, %12
  br i1 %40, label %48, label %41

41:                                               ; preds = %38, %27
  %42 = phi i8 [ 62, %27 ], [ 30, %38 ]
  %43 = phi i64 [ 2, %27 ], [ 1, %38 ]
  %44 = getelementptr inbounds %struct.regnode, ptr %11, i64 0, i32 1
  store i8 %42, ptr %44, align 1, !tbaa !164
  %45 = getelementptr inbounds %struct.regnode, ptr %11, i64 0, i32 2
  store i16 0, ptr %45, align 2, !tbaa !168
  %46 = getelementptr inbounds %struct.regnode, ptr %11, i64 %43
  store ptr %46, ptr %10, align 8, !tbaa !145
  %47 = icmp eq ptr %46, %12
  br i1 %47, label %48, label %52

48:                                               ; preds = %24, %38, %41
  %49 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %50 = load i32, ptr %49, align 8, !tbaa !135
  %51 = add nsw i32 %50, 1
  store i32 %51, ptr %49, align 8, !tbaa !135
  br label %52

52:                                               ; preds = %4, %48, %41
  %53 = phi ptr [ %11, %48 ], [ %11, %41 ], [ null, %4 ]
  store i32 0, ptr %1, align 4, !tbaa !150
  %54 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %55 = load ptr, ptr %54, align 8, !tbaa !138
  %56 = getelementptr inbounds i8, ptr %55, i64 -1
  store ptr %56, ptr %54, align 8, !tbaa !138
  %57 = tail call fastcc ptr @S_nextchar(ptr noundef %0)
  %58 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %59 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %60 = add i32 %3, 2
  %61 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %62 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  %63 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %64 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %65 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %66 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %67 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %68 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %69 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %70 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %71 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %72 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %73 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 9
  br label %74

74:                                               ; preds = %1298, %52
  %75 = phi i32 [ %1240, %1298 ], [ 0, %52 ]
  %76 = phi ptr [ %1241, %1298 ], [ %53, %52 ]
  %77 = phi ptr [ %1239, %1298 ], [ null, %52 ]
  %78 = phi i32 [ %1299, %1298 ], [ 0, %52 ]
  br label %79

79:                                               ; preds = %74, %1206
  %80 = phi i32 [ %1207, %1206 ], [ %75, %74 ]
  %81 = load ptr, ptr %54, align 8, !tbaa !138
  %82 = load ptr, ptr %58, align 8, !tbaa !140
  %83 = icmp ult ptr %81, %82
  br i1 %83, label %84, label %1300

84:                                               ; preds = %79
  %85 = load i8, ptr %81, align 1, !tbaa !9
  switch i8 %85, label %86 [
    i8 124, label %1300
    i8 41, label %1300
  ]

86:                                               ; preds = %84
  %87 = and i32 %80, -17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #21
  %88 = load ptr, ptr %59, align 8, !tbaa !145
  %89 = call fastcc ptr @S_regatom(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef %60)
  %90 = icmp eq ptr %89, null
  br i1 %90, label %91, label %117

91:                                               ; preds = %86
  %92 = load i32, ptr %5, align 4, !tbaa !150
  %93 = and i32 %92, 48
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = or i32 %93, %87
  br label %1201

97:                                               ; preds = %91
  %98 = load ptr, ptr %58, align 8, !tbaa !140
  %99 = load ptr, ptr %69, align 8, !tbaa !108
  %100 = ptrtoint ptr %98 to i64
  %101 = ptrtoint ptr %99 to i64
  %102 = sub i64 %100, %101
  %103 = load ptr, ptr %59, align 8, !tbaa !145
  %104 = icmp eq ptr %103, %61
  br i1 %104, label %108, label %105

105:                                              ; preds = %97
  %106 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %106, i32 noundef 11) #21
  %107 = load ptr, ptr %69, align 8, !tbaa !108
  br label %108

108:                                              ; preds = %105, %97
  %109 = phi ptr [ %107, %105 ], [ %99, %97 ]
  %110 = icmp sgt i64 %102, 127
  %111 = select i1 %110, i64 117, i64 %102
  %112 = select i1 %110, ptr @.str.182, ptr @.str.178
  %113 = sext i32 %92 to i64
  %114 = load i32, ptr %70, align 8, !tbaa !98
  %115 = icmp ne i32 %114, 0
  %116 = zext i1 %115 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.279, i64 noundef %113, i32 noundef %116, i64 noundef %111, ptr noundef %109, ptr noundef nonnull %112) #21
  br label %1201

117:                                              ; preds = %86
  %118 = load ptr, ptr %54, align 8, !tbaa !138
  %119 = load i8, ptr %118, align 1, !tbaa !9
  %120 = icmp eq i8 %119, 123
  br i1 %120, label %121, label %713

121:                                              ; preds = %117
  %122 = getelementptr inbounds i8, ptr %118, i64 1
  %123 = load i8, ptr %122, align 1, !tbaa !9
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !150
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %716, label %129

129:                                              ; preds = %121, %129
  %130 = phi ptr [ %137, %129 ], [ %122, %121 ]
  %131 = load i8, ptr %130, align 1, !tbaa !9
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %132
  %134 = load i32, ptr %133, align 4, !tbaa !150
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds i8, ptr %130, i64 1
  br i1 %136, label %138, label %129, !llvm.loop !351

138:                                              ; preds = %129
  %139 = icmp eq i8 %131, 44
  br i1 %139, label %140, label %149

140:                                              ; preds = %138, %140
  %141 = phi ptr [ %142, %140 ], [ %130, %138 ]
  %142 = getelementptr inbounds i8, ptr %141, i64 1
  %143 = load i8, ptr %142, align 1, !tbaa !9
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %144
  %146 = load i32, ptr %145, align 4, !tbaa !150
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %140, !llvm.loop !352

149:                                              ; preds = %140, %138
  %150 = phi i8 [ %131, %138 ], [ %143, %140 ]
  %151 = icmp eq i8 %150, 125
  br i1 %151, label %152, label %713

152:                                              ; preds = %149
  %153 = icmp eq i8 %123, 44
  br label %154

154:                                              ; preds = %152, %160
  %155 = phi i1 [ %169, %160 ], [ %153, %152 ]
  %156 = phi ptr [ %162, %160 ], [ %122, %152 ]
  %157 = phi ptr [ %161, %160 ], [ null, %152 ]
  br i1 %155, label %158, label %160

158:                                              ; preds = %154
  %159 = icmp eq ptr %157, null
  br i1 %159, label %160, label %713

160:                                              ; preds = %158, %154
  %161 = phi ptr [ %157, %154 ], [ %156, %158 ]
  %162 = getelementptr inbounds i8, ptr %156, i64 1
  %163 = load i8, ptr %162, align 1, !tbaa !9
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %164
  %166 = load i32, ptr %165, align 4, !tbaa !150
  %167 = and i32 %166, 2
  %168 = icmp ne i32 %167, 0
  %169 = icmp eq i8 %163, 44
  %170 = or i1 %169, %168
  br i1 %170, label %154, label %171, !llvm.loop !353

171:                                              ; preds = %160
  %172 = icmp eq i8 %163, 125
  br i1 %172, label %173, label %713

173:                                              ; preds = %171
  %174 = icmp eq ptr %161, null
  %175 = select i1 %174, ptr %162, ptr %161
  store ptr %122, ptr %54, align 8, !tbaa !138
  %176 = load i8, ptr %122, align 1, !tbaa !9
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %177
  %179 = load i32, ptr %178, align 4, !tbaa !150
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %229, label %182

182:                                              ; preds = %173
  %183 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %122, ptr noundef nonnull %6, ptr noundef nonnull %7) #21
  br i1 %183, label %204, label %184

184:                                              ; preds = %182
  %185 = load ptr, ptr %59, align 8, !tbaa !145
  %186 = icmp eq ptr %185, %61
  br i1 %186, label %189, label %187

187:                                              ; preds = %184
  %188 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %188, i32 noundef 11) #21
  br label %189

189:                                              ; preds = %187, %184
  %190 = load ptr, ptr %54, align 8, !tbaa !138
  %191 = load ptr, ptr %58, align 8, !tbaa !140
  %192 = icmp ugt ptr %190, %191
  %193 = select i1 %192, ptr %191, ptr %190
  %194 = load ptr, ptr %69, align 8, !tbaa !108
  %195 = ptrtoint ptr %193 to i64
  %196 = ptrtoint ptr %194 to i64
  %197 = sub i64 %195, %196
  %198 = load i32, ptr %70, align 8, !tbaa !98
  %199 = icmp ne i32 %198, 0
  %200 = zext i1 %199 to i32
  %201 = ptrtoint ptr %191 to i64
  %202 = sub i64 %201, %195
  %203 = getelementptr inbounds i8, ptr %194, i64 %197
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.280, i32 noundef %200, i64 noundef %197, ptr noundef %194, i32 noundef %200, i64 noundef %202, ptr noundef %203) #21
  br label %204

204:                                              ; preds = %189, %182
  %205 = load i64, ptr %6, align 8, !tbaa !71
  %206 = icmp ugt i64 %205, 32766
  br i1 %206, label %207, label %226

207:                                              ; preds = %204
  %208 = load ptr, ptr %59, align 8, !tbaa !145
  %209 = icmp eq ptr %208, %61
  br i1 %209, label %212, label %210

210:                                              ; preds = %207
  %211 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %211, i32 noundef 11) #21
  br label %212

212:                                              ; preds = %210, %207
  %213 = load ptr, ptr %54, align 8, !tbaa !138
  %214 = load ptr, ptr %69, align 8, !tbaa !108
  %215 = ptrtoint ptr %213 to i64
  %216 = ptrtoint ptr %214 to i64
  %217 = sub i64 %215, %216
  %218 = load i32, ptr %70, align 8, !tbaa !98
  %219 = icmp ne i32 %218, 0
  %220 = zext i1 %219 to i32
  %221 = load ptr, ptr %58, align 8, !tbaa !140
  %222 = ptrtoint ptr %221 to i64
  %223 = sub i64 %222, %215
  %224 = getelementptr inbounds i8, ptr %214, i64 %217
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %219, ptr noundef nonnull @.str.281, ptr nonnull poison, i32 noundef 32766, i32 noundef %220, i64 noundef %217, ptr noundef %214, i32 noundef %220, i64 noundef %223, ptr noundef %224)
  %225 = load i64, ptr %6, align 8, !tbaa !71
  br label %226

226:                                              ; preds = %212, %204
  %227 = phi i64 [ %225, %212 ], [ %205, %204 ]
  %228 = trunc i64 %227 to i32
  br label %229

229:                                              ; preds = %226, %173
  %230 = phi i32 [ %228, %226 ], [ 0, %173 ]
  %231 = load i8, ptr %175, align 1, !tbaa !9
  %232 = icmp eq i8 %231, 44
  br i1 %232, label %233, label %235

233:                                              ; preds = %229
  %234 = getelementptr inbounds i8, ptr %175, i64 1
  br label %237

235:                                              ; preds = %229
  %236 = load ptr, ptr %54, align 8, !tbaa !138
  br label %237

237:                                              ; preds = %235, %233
  %238 = phi ptr [ %234, %233 ], [ %236, %235 ]
  %239 = load i8, ptr %238, align 1, !tbaa !9
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %240
  %242 = load i32, ptr %241, align 4, !tbaa !150
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %292, label %245

245:                                              ; preds = %237
  %246 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %238, ptr noundef nonnull %6, ptr noundef nonnull %7) #21
  br i1 %246, label %267, label %247

247:                                              ; preds = %245
  %248 = load ptr, ptr %59, align 8, !tbaa !145
  %249 = icmp eq ptr %248, %61
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %251, i32 noundef 11) #21
  br label %252

252:                                              ; preds = %250, %247
  %253 = load ptr, ptr %54, align 8, !tbaa !138
  %254 = load ptr, ptr %58, align 8, !tbaa !140
  %255 = icmp ugt ptr %253, %254
  %256 = select i1 %255, ptr %254, ptr %253
  %257 = load ptr, ptr %69, align 8, !tbaa !108
  %258 = ptrtoint ptr %256 to i64
  %259 = ptrtoint ptr %257 to i64
  %260 = sub i64 %258, %259
  %261 = load i32, ptr %70, align 8, !tbaa !98
  %262 = icmp ne i32 %261, 0
  %263 = zext i1 %262 to i32
  %264 = ptrtoint ptr %254 to i64
  %265 = sub i64 %264, %258
  %266 = getelementptr inbounds i8, ptr %257, i64 %260
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.280, i32 noundef %263, i64 noundef %260, ptr noundef %257, i32 noundef %263, i64 noundef %265, ptr noundef %266) #21
  br label %267

267:                                              ; preds = %252, %245
  %268 = load i64, ptr %6, align 8, !tbaa !71
  %269 = icmp ugt i64 %268, 32766
  br i1 %269, label %270, label %289

270:                                              ; preds = %267
  %271 = load ptr, ptr %59, align 8, !tbaa !145
  %272 = icmp eq ptr %271, %61
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %274, i32 noundef 11) #21
  br label %275

275:                                              ; preds = %273, %270
  %276 = load ptr, ptr %54, align 8, !tbaa !138
  %277 = load ptr, ptr %69, align 8, !tbaa !108
  %278 = ptrtoint ptr %276 to i64
  %279 = ptrtoint ptr %277 to i64
  %280 = sub i64 %278, %279
  %281 = load i32, ptr %70, align 8, !tbaa !98
  %282 = icmp ne i32 %281, 0
  %283 = zext i1 %282 to i32
  %284 = load ptr, ptr %58, align 8, !tbaa !140
  %285 = ptrtoint ptr %284 to i64
  %286 = sub i64 %285, %278
  %287 = getelementptr inbounds i8, ptr %277, i64 %280
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %282, ptr noundef nonnull @.str.281, ptr nonnull poison, i32 noundef 32766, i32 noundef %283, i64 noundef %280, ptr noundef %277, i32 noundef %283, i64 noundef %286, ptr noundef %287)
  %288 = load i64, ptr %6, align 8, !tbaa !71
  br label %289

289:                                              ; preds = %275, %267
  %290 = phi i64 [ %288, %275 ], [ %268, %267 ]
  %291 = trunc i64 %290 to i32
  br label %292

292:                                              ; preds = %289, %237
  %293 = phi i32 [ %291, %289 ], [ 32767, %237 ]
  store ptr %162, ptr %54, align 8, !tbaa !138
  %294 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %295 = icmp slt i32 %293, %230
  br i1 %295, label %296, label %334

296:                                              ; preds = %292
  %297 = load ptr, ptr %59, align 8, !tbaa !145
  %298 = icmp eq ptr %297, %61
  br i1 %298, label %299, label %302

299:                                              ; preds = %296
  %300 = load i64, ptr %65, align 8, !tbaa !144
  %301 = add nsw i64 %300, -1
  br label %318

302:                                              ; preds = %296
  %303 = load ptr, ptr %54, align 8, !tbaa !138
  %304 = load ptr, ptr %69, align 8, !tbaa !108
  %305 = ptrtoint ptr %303 to i64
  %306 = ptrtoint ptr %304 to i64
  %307 = sub i64 %305, %306
  %308 = load i32, ptr %70, align 8, !tbaa !98
  %309 = icmp ne i32 %308, 0
  %310 = zext i1 %309 to i32
  %311 = load ptr, ptr %58, align 8, !tbaa !140
  %312 = ptrtoint ptr %311 to i64
  %313 = sub i64 %312, %305
  %314 = getelementptr inbounds i8, ptr %304, i64 %307
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.282, i32 noundef %310, i64 noundef %307, ptr noundef %304, i32 noundef %310, i64 noundef %313, ptr noundef %314) #21
  store ptr %88, ptr %59, align 8, !tbaa !145
  %315 = icmp eq ptr %88, %61
  br i1 %315, label %316, label %321

316:                                              ; preds = %302
  %317 = load i64, ptr %65, align 8, !tbaa !144
  br label %318

318:                                              ; preds = %299, %316
  %319 = phi i64 [ %317, %316 ], [ %301, %299 ]
  %320 = add i64 %319, 1
  store i64 %320, ptr %65, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  br label %1233

321:                                              ; preds = %302
  %322 = load ptr, ptr %71, align 8, !tbaa !158
  %323 = icmp ult ptr %88, %322
  br i1 %323, label %326, label %324

324:                                              ; preds = %321
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 82, ptr noundef %88, ptr noundef %322) #21
  %325 = load ptr, ptr %59, align 8, !tbaa !145
  br label %326

326:                                              ; preds = %321, %324
  %327 = phi ptr [ %325, %324 ], [ %88, %321 ]
  store i8 0, ptr %88, align 2, !tbaa !169
  %328 = icmp eq ptr %327, %61
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  br label %1233

330:                                              ; preds = %326
  %331 = getelementptr inbounds %struct.regnode, ptr %88, i64 0, i32 1
  store i8 82, ptr %331, align 1, !tbaa !164
  %332 = getelementptr inbounds %struct.regnode, ptr %88, i64 0, i32 2
  store i16 0, ptr %332, align 2, !tbaa !168
  %333 = getelementptr inbounds %struct.regnode, ptr %88, i64 1
  store ptr %333, ptr %59, align 8, !tbaa !145
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  br label %1233

334:                                              ; preds = %292
  %335 = icmp eq i32 %230, %293
  br i1 %335, label %336, label %358

336:                                              ; preds = %334
  %337 = load ptr, ptr %54, align 8, !tbaa !138
  %338 = load ptr, ptr %58, align 8, !tbaa !140
  %339 = icmp ult ptr %337, %338
  br i1 %339, label %340, label %358

340:                                              ; preds = %336
  %341 = load i8, ptr %337, align 1, !tbaa !9
  %342 = icmp eq i8 %341, 63
  br i1 %342, label %343, label %358

343:                                              ; preds = %340
  %344 = load ptr, ptr %59, align 8, !tbaa !145
  %345 = icmp eq ptr %344, %61
  br i1 %345, label %358, label %346

346:                                              ; preds = %343
  %347 = getelementptr inbounds i8, ptr %337, i64 1
  %348 = load ptr, ptr %69, align 8, !tbaa !108
  %349 = ptrtoint ptr %347 to i64
  %350 = ptrtoint ptr %348 to i64
  %351 = sub i64 %349, %350
  %352 = load i32, ptr %70, align 8, !tbaa !98
  %353 = icmp ne i32 %352, 0
  %354 = zext i1 %353 to i32
  %355 = ptrtoint ptr %338 to i64
  %356 = sub i64 %355, %349
  %357 = getelementptr inbounds i8, ptr %348, i64 %351
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.283, i32 noundef 63, i32 noundef %354, i64 noundef %351, ptr noundef %348, i32 noundef %354, i64 noundef %356, ptr noundef %357) #21
  br label %358

358:                                              ; preds = %777, %722, %831, %346, %343, %340, %336, %334
  %359 = phi i32 [ 5, %831 ], [ %87, %343 ], [ %87, %346 ], [ %87, %340 ], [ %87, %336 ], [ %87, %334 ], [ %721, %722 ], [ 1, %777 ]
  %360 = phi i32 [ 1, %831 ], [ %230, %343 ], [ %230, %346 ], [ %230, %340 ], [ %230, %336 ], [ %293, %334 ], [ 32767, %722 ], [ 32767, %777 ]
  %361 = phi i32 [ 0, %831 ], [ %230, %343 ], [ %230, %346 ], [ %230, %340 ], [ %230, %336 ], [ %230, %334 ], [ 0, %722 ], [ 1, %777 ]
  %362 = load i32, ptr %5, align 4, !tbaa !150
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %419, label %365

365:                                              ; preds = %358
  %366 = load i32, ptr %66, align 8, !tbaa !141
  %367 = icmp slt i32 %366, 10
  br i1 %367, label %368, label %372

368:                                              ; preds = %365
  %369 = sdiv i32 %366, 2
  %370 = add nsw i32 %366, 2
  %371 = add i32 %370, %369
  store i32 %371, ptr %66, align 8, !tbaa !141
  br label %372

372:                                              ; preds = %368, %365
  %373 = load ptr, ptr %59, align 8, !tbaa !145
  %374 = icmp eq ptr %373, %61
  br i1 %374, label %375, label %378

375:                                              ; preds = %372
  %376 = load i64, ptr %65, align 8, !tbaa !144
  %377 = add nsw i64 %376, 2
  store i64 %377, ptr %65, align 8, !tbaa !144
  br label %698

378:                                              ; preds = %372
  %379 = getelementptr inbounds %struct.regnode, ptr %373, i64 2
  store ptr %379, ptr %59, align 8, !tbaa !145
  %380 = load ptr, ptr %62, align 8, !tbaa !153
  %381 = icmp eq ptr %380, null
  br i1 %381, label %405, label %382

382:                                              ; preds = %378
  %383 = load i32, ptr %63, align 8, !tbaa !142
  %384 = icmp sgt i32 %383, 0
  br i1 %384, label %385, label %405

385:                                              ; preds = %382
  %386 = zext i32 %383 to i64
  br label %387

387:                                              ; preds = %402, %385
  %388 = phi i64 [ 0, %385 ], [ %403, %402 ]
  %389 = load ptr, ptr %62, align 8, !tbaa !153
  %390 = getelementptr inbounds ptr, ptr %389, i64 %388
  %391 = load ptr, ptr %390, align 8, !tbaa !5
  %392 = icmp ult ptr %391, %89
  br i1 %392, label %395, label %393

393:                                              ; preds = %387
  %394 = getelementptr inbounds %struct.regnode, ptr %391, i64 2
  store ptr %394, ptr %390, align 8, !tbaa !5
  br label %395

395:                                              ; preds = %393, %387
  %396 = load ptr, ptr %64, align 8, !tbaa !154
  %397 = getelementptr inbounds ptr, ptr %396, i64 %388
  %398 = load ptr, ptr %397, align 8, !tbaa !5
  %399 = icmp ult ptr %398, %89
  br i1 %399, label %402, label %400

400:                                              ; preds = %395
  %401 = getelementptr inbounds %struct.regnode, ptr %398, i64 2
  store ptr %401, ptr %397, align 8, !tbaa !5
  br label %402

402:                                              ; preds = %400, %395
  %403 = add nuw nsw i64 %388, 1
  %404 = icmp eq i64 %403, %386
  br i1 %404, label %405, label %387, !llvm.loop !235

405:                                              ; preds = %402, %382, %378
  %406 = icmp ugt ptr %373, %89
  br i1 %406, label %407, label %414

407:                                              ; preds = %405, %407
  %408 = phi ptr [ %411, %407 ], [ %373, %405 ]
  %409 = phi ptr [ %410, %407 ], [ %379, %405 ]
  %410 = getelementptr inbounds %struct.regnode, ptr %409, i64 -1
  %411 = getelementptr inbounds %struct.regnode, ptr %408, i64 -1
  %412 = load i32, ptr %411, align 2
  store i32 %412, ptr %410, align 2
  %413 = icmp ugt ptr %411, %89
  br i1 %413, label %407, label %414, !llvm.loop !236

414:                                              ; preds = %407, %405
  %415 = getelementptr inbounds %struct.regnode, ptr %89, i64 1
  %416 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 1
  store i8 44, ptr %416, align 1, !tbaa !164
  %417 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 2
  store i16 0, ptr %417, align 2, !tbaa !168
  store i32 0, ptr %415, align 1
  %418 = load ptr, ptr %59, align 8, !tbaa !145
  br label %698

419:                                              ; preds = %358
  %420 = load ptr, ptr %59, align 8, !tbaa !145
  %421 = icmp eq ptr %420, %61
  br i1 %421, label %422, label %425

422:                                              ; preds = %419
  %423 = load i64, ptr %65, align 8, !tbaa !144
  %424 = add i64 %423, 1
  store i64 %424, ptr %65, align 8, !tbaa !144
  br label %433

425:                                              ; preds = %419
  %426 = load ptr, ptr %71, align 8, !tbaa !158
  %427 = icmp ult ptr %420, %426
  br i1 %427, label %430, label %428

428:                                              ; preds = %425
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 48, ptr noundef %420, ptr noundef %426) #21
  %429 = load ptr, ptr %59, align 8, !tbaa !145
  br label %430

430:                                              ; preds = %425, %428
  %431 = phi ptr [ %429, %428 ], [ %420, %425 ]
  %432 = icmp eq ptr %431, %61
  br i1 %432, label %433, label %434

433:                                              ; preds = %430, %422
  store i8 0, ptr %420, align 2, !tbaa !169
  br label %481

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.regnode, ptr %420, i64 0, i32 1
  store i8 48, ptr %435, align 1, !tbaa !164
  %436 = getelementptr inbounds %struct.regnode, ptr %420, i64 0, i32 2
  store i16 0, ptr %436, align 2, !tbaa !168
  %437 = getelementptr inbounds %struct.regnode, ptr %420, i64 1
  store ptr %437, ptr %59, align 8, !tbaa !145
  store i8 0, ptr %420, align 2, !tbaa !169
  %438 = icmp eq ptr %437, %61
  br i1 %438, label %481, label %439

439:                                              ; preds = %434, %463
  %440 = phi ptr [ %466, %463 ], [ %89, %434 ]
  %441 = icmp ne ptr %440, null
  call void @llvm.assume(i1 %441)
  %442 = getelementptr inbounds %struct.regnode, ptr %440, i64 0, i32 1
  %443 = load i8, ptr %442, align 1, !tbaa !164
  %444 = icmp ugt i8 %443, 93
  br i1 %444, label %445, label %448

445:                                              ; preds = %439
  %446 = zext i8 %443 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %446, i32 noundef 93) #21
  %447 = load i8, ptr %442, align 1, !tbaa !164
  br label %448

448:                                              ; preds = %445, %439
  %449 = phi i8 [ %447, %445 ], [ %443, %439 ]
  %450 = zext i8 %449 to i64
  %451 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %450
  %452 = load i8, ptr %451, align 1, !tbaa !9
  %453 = icmp eq i8 %452, 0
  br i1 %453, label %454, label %459

454:                                              ; preds = %448
  %455 = getelementptr inbounds %struct.regnode, ptr %440, i64 0, i32 2
  %456 = load i16, ptr %455, align 2, !tbaa !168
  %457 = zext i16 %456 to i32
  %458 = icmp eq i16 %456, 0
  br i1 %458, label %474, label %463

459:                                              ; preds = %448
  %460 = getelementptr inbounds %struct.regnode_1, ptr %440, i64 0, i32 3
  %461 = load i32, ptr %460, align 4, !tbaa !166
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %467, label %463

463:                                              ; preds = %459, %454
  %464 = phi i32 [ %461, %459 ], [ %457, %454 ]
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds %struct.regnode, ptr %440, i64 %465
  br label %439

467:                                              ; preds = %459
  %468 = getelementptr inbounds %struct.regnode_1, ptr %440, i64 0, i32 3
  %469 = ptrtoint ptr %420 to i64
  %470 = ptrtoint ptr %440 to i64
  %471 = sub i64 %469, %470
  %472 = lshr exact i64 %471, 2
  %473 = trunc i64 %472 to i32
  store i32 %473, ptr %468, align 4, !tbaa !166
  br label %481

474:                                              ; preds = %454
  %475 = getelementptr inbounds %struct.regnode, ptr %440, i64 0, i32 2
  %476 = ptrtoint ptr %420 to i64
  %477 = ptrtoint ptr %440 to i64
  %478 = sub i64 %476, %477
  %479 = lshr exact i64 %478, 2
  %480 = trunc i64 %479 to i16
  store i16 %480, ptr %475, align 2, !tbaa !168
  br label %481

481:                                              ; preds = %433, %434, %467, %474
  %482 = load ptr, ptr %59, align 8, !tbaa !145
  %483 = icmp eq ptr %482, %61
  br i1 %483, label %575, label %484

484:                                              ; preds = %481
  %485 = load i32, ptr %72, align 8, !tbaa !135
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %572, label %487

487:                                              ; preds = %484
  %488 = getelementptr inbounds %struct.regnode, ptr %482, i64 2
  store ptr %488, ptr %59, align 8, !tbaa !145
  %489 = load ptr, ptr %62, align 8, !tbaa !153
  %490 = icmp eq ptr %489, null
  br i1 %490, label %514, label %491

491:                                              ; preds = %487
  %492 = load i32, ptr %63, align 8, !tbaa !142
  %493 = icmp sgt i32 %492, 0
  br i1 %493, label %494, label %514

494:                                              ; preds = %491
  %495 = zext i32 %492 to i64
  br label %496

496:                                              ; preds = %511, %494
  %497 = phi i64 [ 0, %494 ], [ %512, %511 ]
  %498 = load ptr, ptr %62, align 8, !tbaa !153
  %499 = getelementptr inbounds ptr, ptr %498, i64 %497
  %500 = load ptr, ptr %499, align 8, !tbaa !5
  %501 = icmp ult ptr %500, %89
  br i1 %501, label %504, label %502

502:                                              ; preds = %496
  %503 = getelementptr inbounds %struct.regnode, ptr %500, i64 2
  store ptr %503, ptr %499, align 8, !tbaa !5
  br label %504

504:                                              ; preds = %502, %496
  %505 = load ptr, ptr %64, align 8, !tbaa !154
  %506 = getelementptr inbounds ptr, ptr %505, i64 %497
  %507 = load ptr, ptr %506, align 8, !tbaa !5
  %508 = icmp ult ptr %507, %89
  br i1 %508, label %511, label %509

509:                                              ; preds = %504
  %510 = getelementptr inbounds %struct.regnode, ptr %507, i64 2
  store ptr %510, ptr %506, align 8, !tbaa !5
  br label %511

511:                                              ; preds = %509, %504
  %512 = add nuw nsw i64 %497, 1
  %513 = icmp eq i64 %512, %495
  br i1 %513, label %514, label %496, !llvm.loop !235

514:                                              ; preds = %511, %491, %487
  %515 = icmp ugt ptr %482, %89
  br i1 %515, label %516, label %523

516:                                              ; preds = %514, %516
  %517 = phi ptr [ %520, %516 ], [ %482, %514 ]
  %518 = phi ptr [ %519, %516 ], [ %488, %514 ]
  %519 = getelementptr inbounds %struct.regnode, ptr %518, i64 -1
  %520 = getelementptr inbounds %struct.regnode, ptr %517, i64 -1
  %521 = load i32, ptr %520, align 2
  store i32 %521, ptr %519, align 2
  %522 = icmp ugt ptr %520, %89
  br i1 %522, label %516, label %523, !llvm.loop !236

523:                                              ; preds = %516, %514
  %524 = getelementptr inbounds %struct.regnode, ptr %89, i64 1
  %525 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 1
  store i8 61, ptr %525, align 1, !tbaa !164
  %526 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 2
  store i16 0, ptr %526, align 2, !tbaa !168
  store i32 0, ptr %524, align 1
  %527 = load ptr, ptr %59, align 8, !tbaa !145
  %528 = icmp eq ptr %527, %61
  br i1 %528, label %529, label %532

529:                                              ; preds = %523
  %530 = load i64, ptr %65, align 8, !tbaa !144
  %531 = add nsw i64 %530, 1
  store i64 %531, ptr %65, align 8, !tbaa !144
  br label %570

532:                                              ; preds = %523
  %533 = getelementptr inbounds %struct.regnode, ptr %527, i64 1
  store ptr %533, ptr %59, align 8, !tbaa !145
  %534 = load ptr, ptr %62, align 8, !tbaa !153
  %535 = icmp eq ptr %534, null
  br i1 %535, label %559, label %536

536:                                              ; preds = %532
  %537 = load i32, ptr %63, align 8, !tbaa !142
  %538 = icmp sgt i32 %537, 0
  br i1 %538, label %539, label %559

539:                                              ; preds = %536
  %540 = zext i32 %537 to i64
  br label %541

541:                                              ; preds = %556, %539
  %542 = phi i64 [ 0, %539 ], [ %557, %556 ]
  %543 = load ptr, ptr %62, align 8, !tbaa !153
  %544 = getelementptr inbounds ptr, ptr %543, i64 %542
  %545 = load ptr, ptr %544, align 8, !tbaa !5
  %546 = icmp ult ptr %545, %89
  br i1 %546, label %549, label %547

547:                                              ; preds = %541
  %548 = getelementptr inbounds %struct.regnode, ptr %545, i64 1
  store ptr %548, ptr %544, align 8, !tbaa !5
  br label %549

549:                                              ; preds = %547, %541
  %550 = load ptr, ptr %64, align 8, !tbaa !154
  %551 = getelementptr inbounds ptr, ptr %550, i64 %542
  %552 = load ptr, ptr %551, align 8, !tbaa !5
  %553 = icmp ult ptr %552, %89
  br i1 %553, label %556, label %554

554:                                              ; preds = %549
  %555 = getelementptr inbounds %struct.regnode, ptr %552, i64 1
  store ptr %555, ptr %551, align 8, !tbaa !5
  br label %556

556:                                              ; preds = %554, %549
  %557 = add nuw nsw i64 %542, 1
  %558 = icmp eq i64 %557, %540
  br i1 %558, label %559, label %541, !llvm.loop !235

559:                                              ; preds = %556, %536, %532
  %560 = icmp ugt ptr %527, %89
  br i1 %560, label %561, label %568

561:                                              ; preds = %559, %561
  %562 = phi ptr [ %565, %561 ], [ %527, %559 ]
  %563 = phi ptr [ %564, %561 ], [ %533, %559 ]
  %564 = getelementptr inbounds %struct.regnode, ptr %563, i64 -1
  %565 = getelementptr inbounds %struct.regnode, ptr %562, i64 -1
  %566 = load i32, ptr %565, align 2
  store i32 %566, ptr %564, align 2
  %567 = icmp ugt ptr %565, %89
  br i1 %567, label %561, label %568, !llvm.loop !236

568:                                              ; preds = %561, %559
  store i8 40, ptr %525, align 1, !tbaa !164
  %569 = load ptr, ptr %59, align 8, !tbaa !145
  br label %570

570:                                              ; preds = %529, %568
  %571 = phi ptr [ %61, %529 ], [ %569, %568 ]
  store i16 3, ptr %526, align 2, !tbaa !168
  br label %572

572:                                              ; preds = %570, %484
  %573 = phi ptr [ %571, %570 ], [ %482, %484 ]
  %574 = icmp eq ptr %573, %61
  br i1 %574, label %575, label %578

575:                                              ; preds = %572, %481
  %576 = load i64, ptr %65, align 8, !tbaa !144
  %577 = add nsw i64 %576, 2
  br label %626

578:                                              ; preds = %572
  %579 = getelementptr inbounds %struct.regnode, ptr %573, i64 2
  store ptr %579, ptr %59, align 8, !tbaa !145
  %580 = load ptr, ptr %62, align 8, !tbaa !153
  %581 = icmp eq ptr %580, null
  br i1 %581, label %605, label %582

582:                                              ; preds = %578
  %583 = load i32, ptr %63, align 8, !tbaa !142
  %584 = icmp sgt i32 %583, 0
  br i1 %584, label %585, label %605

585:                                              ; preds = %582
  %586 = zext i32 %583 to i64
  br label %587

587:                                              ; preds = %602, %585
  %588 = phi i64 [ 0, %585 ], [ %603, %602 ]
  %589 = load ptr, ptr %62, align 8, !tbaa !153
  %590 = getelementptr inbounds ptr, ptr %589, i64 %588
  %591 = load ptr, ptr %590, align 8, !tbaa !5
  %592 = icmp ult ptr %591, %89
  br i1 %592, label %595, label %593

593:                                              ; preds = %587
  %594 = getelementptr inbounds %struct.regnode, ptr %591, i64 2
  store ptr %594, ptr %590, align 8, !tbaa !5
  br label %595

595:                                              ; preds = %593, %587
  %596 = load ptr, ptr %64, align 8, !tbaa !154
  %597 = getelementptr inbounds ptr, ptr %596, i64 %588
  %598 = load ptr, ptr %597, align 8, !tbaa !5
  %599 = icmp ult ptr %598, %89
  br i1 %599, label %602, label %600

600:                                              ; preds = %595
  %601 = getelementptr inbounds %struct.regnode, ptr %598, i64 2
  store ptr %601, ptr %597, align 8, !tbaa !5
  br label %602

602:                                              ; preds = %600, %595
  %603 = add nuw nsw i64 %588, 1
  %604 = icmp eq i64 %603, %586
  br i1 %604, label %605, label %587, !llvm.loop !235

605:                                              ; preds = %602, %582, %578
  %606 = icmp ugt ptr %573, %89
  br i1 %606, label %607, label %614

607:                                              ; preds = %605, %607
  %608 = phi ptr [ %611, %607 ], [ %573, %605 ]
  %609 = phi ptr [ %610, %607 ], [ %579, %605 ]
  %610 = getelementptr inbounds %struct.regnode, ptr %609, i64 -1
  %611 = getelementptr inbounds %struct.regnode, ptr %608, i64 -1
  %612 = load i32, ptr %611, align 2
  store i32 %612, ptr %610, align 2
  %613 = icmp ugt ptr %611, %89
  br i1 %613, label %607, label %614, !llvm.loop !236

614:                                              ; preds = %607, %605
  %615 = getelementptr inbounds %struct.regnode, ptr %89, i64 1
  %616 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 1
  store i8 47, ptr %616, align 1, !tbaa !164
  %617 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 2
  store i16 0, ptr %617, align 2, !tbaa !168
  store i32 0, ptr %615, align 1
  %618 = load ptr, ptr %59, align 8, !tbaa !145
  %619 = icmp eq ptr %618, %61
  br i1 %619, label %620, label %622

620:                                              ; preds = %614
  %621 = load i64, ptr %65, align 8, !tbaa !144
  br label %626

622:                                              ; preds = %614
  %623 = load i32, ptr %72, align 8, !tbaa !135
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %629, label %625

625:                                              ; preds = %622
  store i16 3, ptr %617, align 2, !tbaa !168
  br label %629

626:                                              ; preds = %620, %575
  %627 = phi i64 [ %621, %620 ], [ %577, %575 ]
  %628 = add i64 %627, 1
  store i64 %628, ptr %65, align 8, !tbaa !144
  br label %684

629:                                              ; preds = %625, %622
  %630 = load ptr, ptr %71, align 8, !tbaa !158
  %631 = icmp ult ptr %618, %630
  br i1 %631, label %634, label %632

632:                                              ; preds = %629
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 40, ptr noundef %618, ptr noundef %630) #21
  %633 = load ptr, ptr %59, align 8, !tbaa !145
  br label %634

634:                                              ; preds = %629, %632
  %635 = phi ptr [ %633, %632 ], [ %618, %629 ]
  store i8 0, ptr %618, align 2, !tbaa !169
  %636 = icmp eq ptr %635, %61
  br i1 %636, label %684, label %637

637:                                              ; preds = %634
  %638 = getelementptr inbounds %struct.regnode, ptr %618, i64 0, i32 1
  store i8 40, ptr %638, align 1, !tbaa !164
  %639 = getelementptr inbounds %struct.regnode, ptr %618, i64 0, i32 2
  store i16 0, ptr %639, align 2, !tbaa !168
  %640 = getelementptr inbounds %struct.regnode, ptr %618, i64 1
  store ptr %640, ptr %59, align 8, !tbaa !145
  %641 = icmp eq ptr %640, %61
  br i1 %641, label %684, label %642

642:                                              ; preds = %637, %666
  %643 = phi ptr [ %669, %666 ], [ %89, %637 ]
  %644 = icmp ne ptr %643, null
  call void @llvm.assume(i1 %644)
  %645 = getelementptr inbounds %struct.regnode, ptr %643, i64 0, i32 1
  %646 = load i8, ptr %645, align 1, !tbaa !164
  %647 = icmp ugt i8 %646, 93
  br i1 %647, label %648, label %651

648:                                              ; preds = %642
  %649 = zext i8 %646 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %649, i32 noundef 93) #21
  %650 = load i8, ptr %645, align 1, !tbaa !164
  br label %651

651:                                              ; preds = %648, %642
  %652 = phi i8 [ %650, %648 ], [ %646, %642 ]
  %653 = zext i8 %652 to i64
  %654 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %653
  %655 = load i8, ptr %654, align 1, !tbaa !9
  %656 = icmp eq i8 %655, 0
  br i1 %656, label %657, label %662

657:                                              ; preds = %651
  %658 = getelementptr inbounds %struct.regnode, ptr %643, i64 0, i32 2
  %659 = load i16, ptr %658, align 2, !tbaa !168
  %660 = zext i16 %659 to i32
  %661 = icmp eq i16 %659, 0
  br i1 %661, label %677, label %666

662:                                              ; preds = %651
  %663 = getelementptr inbounds %struct.regnode_1, ptr %643, i64 0, i32 3
  %664 = load i32, ptr %663, align 4, !tbaa !166
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %670, label %666

666:                                              ; preds = %662, %657
  %667 = phi i32 [ %664, %662 ], [ %660, %657 ]
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds %struct.regnode, ptr %643, i64 %668
  br label %642

670:                                              ; preds = %662
  %671 = getelementptr inbounds %struct.regnode_1, ptr %643, i64 0, i32 3
  %672 = ptrtoint ptr %618 to i64
  %673 = ptrtoint ptr %643 to i64
  %674 = sub i64 %672, %673
  %675 = lshr exact i64 %674, 2
  %676 = trunc i64 %675 to i32
  store i32 %676, ptr %671, align 4, !tbaa !166
  br label %684

677:                                              ; preds = %657
  %678 = getelementptr inbounds %struct.regnode, ptr %643, i64 0, i32 2
  %679 = ptrtoint ptr %618 to i64
  %680 = ptrtoint ptr %643 to i64
  %681 = sub i64 %679, %680
  %682 = lshr exact i64 %681, 2
  %683 = trunc i64 %682 to i16
  store i16 %683, ptr %678, align 2, !tbaa !168
  br label %684

684:                                              ; preds = %626, %634, %637, %670, %677
  %685 = load ptr, ptr %59, align 8, !tbaa !145
  %686 = icmp eq ptr %685, %61
  br i1 %686, label %687, label %692

687:                                              ; preds = %684
  %688 = load i64, ptr %73, align 8, !tbaa !146
  %689 = add nsw i64 %688, 1
  store i64 %689, ptr %73, align 8, !tbaa !146
  %690 = load i32, ptr %72, align 8, !tbaa !135
  %691 = add nsw i32 %690, 3
  store i32 %691, ptr %72, align 8, !tbaa !135
  br label %692

692:                                              ; preds = %687, %684
  %693 = load i32, ptr %66, align 8, !tbaa !141
  %694 = icmp slt i32 %693, 10
  br i1 %694, label %695, label %698

695:                                              ; preds = %692
  %696 = shl i32 %693, 1
  %697 = add i32 %696, 4
  store i32 %697, ptr %66, align 8, !tbaa !141
  br label %698

698:                                              ; preds = %414, %375, %695, %692
  %699 = phi ptr [ %418, %414 ], [ %61, %375 ], [ %685, %695 ], [ %685, %692 ]
  store i8 0, ptr %89, align 2, !tbaa !169
  %700 = icmp sgt i32 %361, 0
  %701 = select i1 %700, i32 0, i32 %359
  %702 = icmp sgt i32 %360, 0
  %703 = zext i1 %702 to i32
  %704 = or i32 %701, %703
  %705 = icmp eq ptr %699, %61
  br i1 %705, label %711, label %706

706:                                              ; preds = %698
  %707 = trunc i32 %361 to i16
  %708 = getelementptr inbounds %struct.regnode_2, ptr %89, i64 0, i32 3
  store i16 %707, ptr %708, align 2, !tbaa !170
  %709 = trunc i32 %360 to i16
  %710 = getelementptr inbounds %struct.regnode_2, ptr %89, i64 0, i32 4
  store i16 %709, ptr %710, align 2, !tbaa !280
  br label %711

711:                                              ; preds = %706, %698
  %712 = icmp eq i32 %360, 32767
  br i1 %712, label %834, label %838

713:                                              ; preds = %158, %171, %149, %117
  %714 = icmp eq i8 %119, 43
  %715 = icmp eq i8 %119, 63
  switch i8 %119, label %716 [
    i8 63, label %718
    i8 43, label %718
    i8 42, label %718
  ]

716:                                              ; preds = %121, %713
  %717 = load i32, ptr %5, align 4, !tbaa !150
  br label %1203

718:                                              ; preds = %713, %713, %713
  %719 = icmp eq i8 %119, 42
  %720 = call fastcc ptr @S_nextchar(ptr noundef %0)
  %721 = select i1 %714, i32 1, i32 5
  br i1 %719, label %722, label %776

722:                                              ; preds = %718
  %723 = load i32, ptr %5, align 4, !tbaa !150
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %358, label %726

726:                                              ; preds = %722
  %727 = load ptr, ptr %59, align 8, !tbaa !145
  %728 = icmp eq ptr %727, %61
  br i1 %728, label %729, label %732

729:                                              ; preds = %726
  %730 = load i64, ptr %65, align 8, !tbaa !144
  %731 = add nsw i64 %730, 1
  store i64 %731, ptr %65, align 8, !tbaa !144
  br label %771

732:                                              ; preds = %726
  %733 = getelementptr inbounds %struct.regnode, ptr %727, i64 1
  store ptr %733, ptr %59, align 8, !tbaa !145
  %734 = load ptr, ptr %62, align 8, !tbaa !153
  %735 = icmp eq ptr %734, null
  br i1 %735, label %759, label %736

736:                                              ; preds = %732
  %737 = load i32, ptr %63, align 8, !tbaa !142
  %738 = icmp sgt i32 %737, 0
  br i1 %738, label %739, label %759

739:                                              ; preds = %736
  %740 = zext i32 %737 to i64
  br label %741

741:                                              ; preds = %756, %739
  %742 = phi i64 [ 0, %739 ], [ %757, %756 ]
  %743 = load ptr, ptr %62, align 8, !tbaa !153
  %744 = getelementptr inbounds ptr, ptr %743, i64 %742
  %745 = load ptr, ptr %744, align 8, !tbaa !5
  %746 = icmp ult ptr %745, %89
  br i1 %746, label %749, label %747

747:                                              ; preds = %741
  %748 = getelementptr inbounds %struct.regnode, ptr %745, i64 1
  store ptr %748, ptr %744, align 8, !tbaa !5
  br label %749

749:                                              ; preds = %747, %741
  %750 = load ptr, ptr %64, align 8, !tbaa !154
  %751 = getelementptr inbounds ptr, ptr %750, i64 %742
  %752 = load ptr, ptr %751, align 8, !tbaa !5
  %753 = icmp ult ptr %752, %89
  br i1 %753, label %756, label %754

754:                                              ; preds = %749
  %755 = getelementptr inbounds %struct.regnode, ptr %752, i64 1
  store ptr %755, ptr %751, align 8, !tbaa !5
  br label %756

756:                                              ; preds = %754, %749
  %757 = add nuw nsw i64 %742, 1
  %758 = icmp eq i64 %757, %740
  br i1 %758, label %759, label %741, !llvm.loop !235

759:                                              ; preds = %756, %736, %732
  %760 = icmp ugt ptr %727, %89
  br i1 %760, label %761, label %768

761:                                              ; preds = %759, %761
  %762 = phi ptr [ %765, %761 ], [ %727, %759 ]
  %763 = phi ptr [ %764, %761 ], [ %733, %759 ]
  %764 = getelementptr inbounds %struct.regnode, ptr %763, i64 -1
  %765 = getelementptr inbounds %struct.regnode, ptr %762, i64 -1
  %766 = load i32, ptr %765, align 2
  store i32 %766, ptr %764, align 2
  %767 = icmp ugt ptr %765, %89
  br i1 %767, label %761, label %768, !llvm.loop !236

768:                                              ; preds = %761, %759
  %769 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 1
  store i8 42, ptr %769, align 1, !tbaa !164
  %770 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 2
  store i16 0, ptr %770, align 2, !tbaa !168
  br label %771

771:                                              ; preds = %729, %768
  store i8 0, ptr %89, align 2, !tbaa !169
  %772 = load i32, ptr %66, align 8, !tbaa !141
  %773 = icmp slt i32 %772, 10
  br i1 %773, label %774, label %834

774:                                              ; preds = %771
  %775 = add nsw i32 %772, 4
  br label %832

776:                                              ; preds = %718
  br i1 %714, label %777, label %831

777:                                              ; preds = %776
  %778 = load i32, ptr %5, align 4, !tbaa !150
  %779 = and i32 %778, 2
  %780 = icmp eq i32 %779, 0
  br i1 %780, label %358, label %781

781:                                              ; preds = %777
  %782 = load ptr, ptr %59, align 8, !tbaa !145
  %783 = icmp eq ptr %782, %61
  br i1 %783, label %784, label %787

784:                                              ; preds = %781
  %785 = load i64, ptr %65, align 8, !tbaa !144
  %786 = add nsw i64 %785, 1
  store i64 %786, ptr %65, align 8, !tbaa !144
  br label %826

787:                                              ; preds = %781
  %788 = getelementptr inbounds %struct.regnode, ptr %782, i64 1
  store ptr %788, ptr %59, align 8, !tbaa !145
  %789 = load ptr, ptr %62, align 8, !tbaa !153
  %790 = icmp eq ptr %789, null
  br i1 %790, label %814, label %791

791:                                              ; preds = %787
  %792 = load i32, ptr %63, align 8, !tbaa !142
  %793 = icmp sgt i32 %792, 0
  br i1 %793, label %794, label %814

794:                                              ; preds = %791
  %795 = zext i32 %792 to i64
  br label %796

796:                                              ; preds = %811, %794
  %797 = phi i64 [ 0, %794 ], [ %812, %811 ]
  %798 = load ptr, ptr %62, align 8, !tbaa !153
  %799 = getelementptr inbounds ptr, ptr %798, i64 %797
  %800 = load ptr, ptr %799, align 8, !tbaa !5
  %801 = icmp ult ptr %800, %89
  br i1 %801, label %804, label %802

802:                                              ; preds = %796
  %803 = getelementptr inbounds %struct.regnode, ptr %800, i64 1
  store ptr %803, ptr %799, align 8, !tbaa !5
  br label %804

804:                                              ; preds = %802, %796
  %805 = load ptr, ptr %64, align 8, !tbaa !154
  %806 = getelementptr inbounds ptr, ptr %805, i64 %797
  %807 = load ptr, ptr %806, align 8, !tbaa !5
  %808 = icmp ult ptr %807, %89
  br i1 %808, label %811, label %809

809:                                              ; preds = %804
  %810 = getelementptr inbounds %struct.regnode, ptr %807, i64 1
  store ptr %810, ptr %806, align 8, !tbaa !5
  br label %811

811:                                              ; preds = %809, %804
  %812 = add nuw nsw i64 %797, 1
  %813 = icmp eq i64 %812, %795
  br i1 %813, label %814, label %796, !llvm.loop !235

814:                                              ; preds = %811, %791, %787
  %815 = icmp ugt ptr %782, %89
  br i1 %815, label %816, label %823

816:                                              ; preds = %814, %816
  %817 = phi ptr [ %820, %816 ], [ %782, %814 ]
  %818 = phi ptr [ %819, %816 ], [ %788, %814 ]
  %819 = getelementptr inbounds %struct.regnode, ptr %818, i64 -1
  %820 = getelementptr inbounds %struct.regnode, ptr %817, i64 -1
  %821 = load i32, ptr %820, align 2
  store i32 %821, ptr %819, align 2
  %822 = icmp ugt ptr %820, %89
  br i1 %822, label %816, label %823, !llvm.loop !236

823:                                              ; preds = %816, %814
  %824 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 1
  store i8 43, ptr %824, align 1, !tbaa !164
  %825 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 2
  store i16 0, ptr %825, align 2, !tbaa !168
  br label %826

826:                                              ; preds = %784, %823
  store i8 0, ptr %89, align 2, !tbaa !169
  %827 = load i32, ptr %66, align 8, !tbaa !141
  %828 = icmp slt i32 %827, 10
  br i1 %828, label %829, label %834

829:                                              ; preds = %826
  %830 = add nsw i32 %827, 3
  br label %832

831:                                              ; preds = %776
  br i1 %715, label %358, label %838

832:                                              ; preds = %774, %829
  %833 = phi i32 [ %830, %829 ], [ %775, %774 ]
  store i32 %833, ptr %66, align 8, !tbaa !141
  br label %834

834:                                              ; preds = %832, %826, %771, %711
  %835 = phi i32 [ %704, %711 ], [ %721, %771 ], [ %721, %826 ], [ %721, %832 ]
  %836 = load i32, ptr %67, align 8, !tbaa !131
  %837 = or i32 %836, 4096
  store i32 %837, ptr %67, align 8, !tbaa !131
  br label %838

838:                                              ; preds = %834, %831, %711
  %839 = phi i32 [ %704, %711 ], [ 5, %831 ], [ %835, %834 ]
  %840 = phi i32 [ %360, %711 ], [ 32767, %831 ], [ 32767, %834 ]
  %841 = load ptr, ptr %59, align 8, !tbaa !145
  %842 = icmp eq ptr %841, %61
  br i1 %842, label %873, label %843

843:                                              ; preds = %838
  %844 = load i32, ptr %5, align 4, !tbaa !150
  %845 = and i32 %844, 9
  %846 = icmp eq i32 %845, 0
  %847 = icmp sgt i32 %840, 10922
  %848 = select i1 %846, i1 %847, i1 false
  br i1 %848, label %849, label %873

849:                                              ; preds = %843
  %850 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %850, i32 noundef 11) #21
  %851 = load ptr, ptr %54, align 8, !tbaa !138
  %852 = load ptr, ptr %69, align 8, !tbaa !108
  %853 = ptrtoint ptr %851 to i64
  %854 = ptrtoint ptr %852 to i64
  %855 = sub i64 %853, %854
  %856 = load i32, ptr %70, align 8, !tbaa !98
  %857 = icmp ne i32 %856, 0
  %858 = zext i1 %857 to i32
  %859 = icmp ult ptr %851, %81
  %860 = ptrtoint ptr %81 to i64
  %861 = sub i64 %853, %860
  %862 = select i1 %859, i64 0, i64 %861
  %863 = load ptr, ptr %58, align 8, !tbaa !140
  %864 = ptrtoint ptr %863 to i64
  %865 = sub i64 %864, %853
  %866 = getelementptr inbounds i8, ptr %852, i64 %855
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.284, i32 noundef %858, i64 noundef %862, ptr noundef nonnull %81, i32 noundef %858, i64 noundef %855, ptr noundef %852, i32 noundef %858, i64 noundef %865, ptr noundef %866) #21
  %867 = load ptr, ptr %68, align 8, !tbaa !151
  %868 = icmp eq ptr %867, null
  br i1 %868, label %873, label %869

869:                                              ; preds = %849
  %870 = getelementptr inbounds %struct.sv, ptr %867, i64 0, i32 1
  %871 = load i32, ptr %870, align 8, !tbaa !22
  %872 = add i32 %871, 1
  store i32 %872, ptr %870, align 8, !tbaa !22
  br label %873

873:                                              ; preds = %869, %849, %843, %838
  %874 = load ptr, ptr %54, align 8, !tbaa !138
  %875 = load ptr, ptr %58, align 8, !tbaa !140
  %876 = icmp ult ptr %874, %875
  br i1 %876, label %877, label %1141

877:                                              ; preds = %873
  %878 = load i8, ptr %874, align 1, !tbaa !9
  switch i8 %878, label %1141 [
    i8 63, label %879
    i8 43, label %971
  ]

879:                                              ; preds = %877
  %880 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %881 = load ptr, ptr %59, align 8, !tbaa !145
  %882 = icmp eq ptr %881, %61
  br i1 %882, label %883, label %886

883:                                              ; preds = %879
  %884 = load i64, ptr %65, align 8, !tbaa !144
  %885 = add nsw i64 %884, 1
  store i64 %885, ptr %65, align 8, !tbaa !144
  br label %1141

886:                                              ; preds = %879
  %887 = getelementptr inbounds %struct.regnode, ptr %881, i64 1
  store ptr %887, ptr %59, align 8, !tbaa !145
  %888 = load ptr, ptr %62, align 8, !tbaa !153
  %889 = icmp eq ptr %888, null
  br i1 %889, label %913, label %890

890:                                              ; preds = %886
  %891 = load i32, ptr %63, align 8, !tbaa !142
  %892 = icmp sgt i32 %891, 0
  br i1 %892, label %893, label %913

893:                                              ; preds = %890
  %894 = zext i32 %891 to i64
  br label %895

895:                                              ; preds = %910, %893
  %896 = phi i64 [ 0, %893 ], [ %911, %910 ]
  %897 = load ptr, ptr %62, align 8, !tbaa !153
  %898 = getelementptr inbounds ptr, ptr %897, i64 %896
  %899 = load ptr, ptr %898, align 8, !tbaa !5
  %900 = icmp ult ptr %899, %89
  br i1 %900, label %903, label %901

901:                                              ; preds = %895
  %902 = getelementptr inbounds %struct.regnode, ptr %899, i64 1
  store ptr %902, ptr %898, align 8, !tbaa !5
  br label %903

903:                                              ; preds = %901, %895
  %904 = load ptr, ptr %64, align 8, !tbaa !154
  %905 = getelementptr inbounds ptr, ptr %904, i64 %896
  %906 = load ptr, ptr %905, align 8, !tbaa !5
  %907 = icmp ult ptr %906, %89
  br i1 %907, label %910, label %908

908:                                              ; preds = %903
  %909 = getelementptr inbounds %struct.regnode, ptr %906, i64 1
  store ptr %909, ptr %905, align 8, !tbaa !5
  br label %910

910:                                              ; preds = %908, %903
  %911 = add nuw nsw i64 %896, 1
  %912 = icmp eq i64 %911, %894
  br i1 %912, label %913, label %895, !llvm.loop !235

913:                                              ; preds = %910, %890, %886
  %914 = icmp ugt ptr %881, %89
  br i1 %914, label %915, label %922

915:                                              ; preds = %913, %915
  %916 = phi ptr [ %919, %915 ], [ %881, %913 ]
  %917 = phi ptr [ %918, %915 ], [ %887, %913 ]
  %918 = getelementptr inbounds %struct.regnode, ptr %917, i64 -1
  %919 = getelementptr inbounds %struct.regnode, ptr %916, i64 -1
  %920 = load i32, ptr %919, align 2
  store i32 %920, ptr %918, align 2
  %921 = icmp ugt ptr %919, %89
  br i1 %921, label %915, label %922, !llvm.loop !236

922:                                              ; preds = %915, %913
  %923 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 1
  store i8 69, ptr %923, align 1, !tbaa !164
  %924 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 2
  store i16 0, ptr %924, align 2, !tbaa !168
  %925 = load ptr, ptr %59, align 8, !tbaa !145
  %926 = getelementptr inbounds %struct.regnode, ptr %89, i64 1
  %927 = icmp eq ptr %925, %61
  br i1 %927, label %1141, label %928

928:                                              ; preds = %922, %951
  %929 = phi i8 [ %956, %951 ], [ 69, %922 ]
  %930 = phi ptr [ %954, %951 ], [ %89, %922 ]
  %931 = icmp ugt i8 %929, 93
  br i1 %931, label %932, label %936

932:                                              ; preds = %928
  %933 = getelementptr inbounds %struct.regnode, ptr %930, i64 0, i32 1
  %934 = zext i8 %929 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %934, i32 noundef 93) #21
  %935 = load i8, ptr %933, align 1, !tbaa !164
  br label %936

936:                                              ; preds = %932, %928
  %937 = phi i8 [ %935, %932 ], [ %929, %928 ]
  %938 = zext i8 %937 to i64
  %939 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %938
  %940 = load i8, ptr %939, align 1, !tbaa !9
  %941 = icmp eq i8 %940, 0
  br i1 %941, label %942, label %947

942:                                              ; preds = %936
  %943 = getelementptr inbounds %struct.regnode, ptr %930, i64 0, i32 2
  %944 = load i16, ptr %943, align 2, !tbaa !168
  %945 = zext i16 %944 to i32
  %946 = icmp eq i16 %944, 0
  br i1 %946, label %964, label %951

947:                                              ; preds = %936
  %948 = getelementptr inbounds %struct.regnode_1, ptr %930, i64 0, i32 3
  %949 = load i32, ptr %948, align 4, !tbaa !166
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %957, label %951

951:                                              ; preds = %947, %942
  %952 = phi i32 [ %949, %947 ], [ %945, %942 ]
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds %struct.regnode, ptr %930, i64 %953
  %955 = getelementptr inbounds %struct.regnode, ptr %930, i64 %953, i32 1
  %956 = load i8, ptr %955, align 1, !tbaa !164
  br label %928

957:                                              ; preds = %947
  %958 = getelementptr inbounds %struct.regnode_1, ptr %930, i64 0, i32 3
  %959 = ptrtoint ptr %926 to i64
  %960 = ptrtoint ptr %930 to i64
  %961 = sub i64 %959, %960
  %962 = lshr exact i64 %961, 2
  %963 = trunc i64 %962 to i32
  store i32 %963, ptr %958, align 4, !tbaa !166
  br label %1141

964:                                              ; preds = %942
  %965 = getelementptr inbounds %struct.regnode, ptr %930, i64 0, i32 2
  %966 = ptrtoint ptr %926 to i64
  %967 = ptrtoint ptr %930 to i64
  %968 = sub i64 %966, %967
  %969 = lshr exact i64 %968, 2
  %970 = trunc i64 %969 to i16
  store i16 %970, ptr %965, align 2, !tbaa !168
  br label %1141

971:                                              ; preds = %877
  %972 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %973 = load ptr, ptr %59, align 8, !tbaa !145
  %974 = icmp eq ptr %973, %61
  br i1 %974, label %975, label %978

975:                                              ; preds = %971
  %976 = load i64, ptr %65, align 8, !tbaa !144
  %977 = add i64 %976, 1
  store i64 %977, ptr %65, align 8, !tbaa !144
  br label %1033

978:                                              ; preds = %971
  %979 = load ptr, ptr %71, align 8, !tbaa !158
  %980 = icmp ult ptr %973, %979
  br i1 %980, label %983, label %981

981:                                              ; preds = %978
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 1, ptr noundef %973, ptr noundef %979) #21
  %982 = load ptr, ptr %59, align 8, !tbaa !145
  br label %983

983:                                              ; preds = %978, %981
  %984 = phi ptr [ %982, %981 ], [ %973, %978 ]
  store i8 0, ptr %973, align 2, !tbaa !169
  %985 = icmp eq ptr %984, %61
  br i1 %985, label %1033, label %986

986:                                              ; preds = %983
  %987 = getelementptr inbounds %struct.regnode, ptr %973, i64 0, i32 1
  store i8 1, ptr %987, align 1, !tbaa !164
  %988 = getelementptr inbounds %struct.regnode, ptr %973, i64 0, i32 2
  store i16 0, ptr %988, align 2, !tbaa !168
  %989 = getelementptr inbounds %struct.regnode, ptr %973, i64 1
  store ptr %989, ptr %59, align 8, !tbaa !145
  %990 = icmp eq ptr %989, %61
  br i1 %990, label %1033, label %991

991:                                              ; preds = %986, %1015
  %992 = phi ptr [ %1018, %1015 ], [ %89, %986 ]
  %993 = icmp ne ptr %992, null
  call void @llvm.assume(i1 %993)
  %994 = getelementptr inbounds %struct.regnode, ptr %992, i64 0, i32 1
  %995 = load i8, ptr %994, align 1, !tbaa !164
  %996 = icmp ugt i8 %995, 93
  br i1 %996, label %997, label %1000

997:                                              ; preds = %991
  %998 = zext i8 %995 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %998, i32 noundef 93) #21
  %999 = load i8, ptr %994, align 1, !tbaa !164
  br label %1000

1000:                                             ; preds = %997, %991
  %1001 = phi i8 [ %999, %997 ], [ %995, %991 ]
  %1002 = zext i8 %1001 to i64
  %1003 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1002
  %1004 = load i8, ptr %1003, align 1, !tbaa !9
  %1005 = icmp eq i8 %1004, 0
  br i1 %1005, label %1006, label %1011

1006:                                             ; preds = %1000
  %1007 = getelementptr inbounds %struct.regnode, ptr %992, i64 0, i32 2
  %1008 = load i16, ptr %1007, align 2, !tbaa !168
  %1009 = zext i16 %1008 to i32
  %1010 = icmp eq i16 %1008, 0
  br i1 %1010, label %1026, label %1015

1011:                                             ; preds = %1000
  %1012 = getelementptr inbounds %struct.regnode_1, ptr %992, i64 0, i32 3
  %1013 = load i32, ptr %1012, align 4, !tbaa !166
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1019, label %1015

1015:                                             ; preds = %1011, %1006
  %1016 = phi i32 [ %1013, %1011 ], [ %1009, %1006 ]
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds %struct.regnode, ptr %992, i64 %1017
  br label %991

1019:                                             ; preds = %1011
  %1020 = getelementptr inbounds %struct.regnode_1, ptr %992, i64 0, i32 3
  %1021 = ptrtoint ptr %973 to i64
  %1022 = ptrtoint ptr %992 to i64
  %1023 = sub i64 %1021, %1022
  %1024 = lshr exact i64 %1023, 2
  %1025 = trunc i64 %1024 to i32
  store i32 %1025, ptr %1020, align 4, !tbaa !166
  br label %1033

1026:                                             ; preds = %1006
  %1027 = getelementptr inbounds %struct.regnode, ptr %992, i64 0, i32 2
  %1028 = ptrtoint ptr %973 to i64
  %1029 = ptrtoint ptr %992 to i64
  %1030 = sub i64 %1028, %1029
  %1031 = lshr exact i64 %1030, 2
  %1032 = trunc i64 %1031 to i16
  store i16 %1032, ptr %1027, align 2, !tbaa !168
  br label %1033

1033:                                             ; preds = %975, %983, %986, %1019, %1026
  %1034 = load ptr, ptr %59, align 8, !tbaa !145
  %1035 = icmp eq ptr %1034, %61
  br i1 %1035, label %1036, label %1039

1036:                                             ; preds = %1033
  %1037 = load i64, ptr %65, align 8, !tbaa !144
  %1038 = add nsw i64 %1037, 2
  store i8 0, ptr %89, align 2, !tbaa !169
  br label %1083

1039:                                             ; preds = %1033
  %1040 = getelementptr inbounds %struct.regnode, ptr %1034, i64 2
  store ptr %1040, ptr %59, align 8, !tbaa !145
  %1041 = load ptr, ptr %62, align 8, !tbaa !153
  %1042 = icmp eq ptr %1041, null
  br i1 %1042, label %1066, label %1043

1043:                                             ; preds = %1039
  %1044 = load i32, ptr %63, align 8, !tbaa !142
  %1045 = icmp sgt i32 %1044, 0
  br i1 %1045, label %1046, label %1066

1046:                                             ; preds = %1043
  %1047 = zext i32 %1044 to i64
  br label %1048

1048:                                             ; preds = %1063, %1046
  %1049 = phi i64 [ 0, %1046 ], [ %1064, %1063 ]
  %1050 = load ptr, ptr %62, align 8, !tbaa !153
  %1051 = getelementptr inbounds ptr, ptr %1050, i64 %1049
  %1052 = load ptr, ptr %1051, align 8, !tbaa !5
  %1053 = icmp ult ptr %1052, %89
  br i1 %1053, label %1056, label %1054

1054:                                             ; preds = %1048
  %1055 = getelementptr inbounds %struct.regnode, ptr %1052, i64 2
  store ptr %1055, ptr %1051, align 8, !tbaa !5
  br label %1056

1056:                                             ; preds = %1054, %1048
  %1057 = load ptr, ptr %64, align 8, !tbaa !154
  %1058 = getelementptr inbounds ptr, ptr %1057, i64 %1049
  %1059 = load ptr, ptr %1058, align 8, !tbaa !5
  %1060 = icmp ult ptr %1059, %89
  br i1 %1060, label %1063, label %1061

1061:                                             ; preds = %1056
  %1062 = getelementptr inbounds %struct.regnode, ptr %1059, i64 2
  store ptr %1062, ptr %1058, align 8, !tbaa !5
  br label %1063

1063:                                             ; preds = %1061, %1056
  %1064 = add nuw nsw i64 %1049, 1
  %1065 = icmp eq i64 %1064, %1047
  br i1 %1065, label %1066, label %1048, !llvm.loop !235

1066:                                             ; preds = %1063, %1043, %1039
  %1067 = icmp ugt ptr %1034, %89
  br i1 %1067, label %1068, label %1075

1068:                                             ; preds = %1066, %1068
  %1069 = phi ptr [ %1072, %1068 ], [ %1034, %1066 ]
  %1070 = phi ptr [ %1071, %1068 ], [ %1040, %1066 ]
  %1071 = getelementptr inbounds %struct.regnode, ptr %1070, i64 -1
  %1072 = getelementptr inbounds %struct.regnode, ptr %1069, i64 -1
  %1073 = load i32, ptr %1072, align 2
  store i32 %1073, ptr %1071, align 2
  %1074 = icmp ugt ptr %1072, %89
  br i1 %1074, label %1068, label %1075, !llvm.loop !236

1075:                                             ; preds = %1068, %1066
  %1076 = getelementptr inbounds %struct.regnode, ptr %89, i64 1
  %1077 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 1
  store i8 65, ptr %1077, align 1, !tbaa !164
  %1078 = getelementptr inbounds %struct.regnode, ptr %89, i64 0, i32 2
  store i16 0, ptr %1078, align 2, !tbaa !168
  store i32 0, ptr %1076, align 1
  %1079 = load ptr, ptr %59, align 8, !tbaa !145
  store i8 0, ptr %89, align 2, !tbaa !169
  %1080 = icmp eq ptr %1079, %61
  br i1 %1080, label %1081, label %1086

1081:                                             ; preds = %1075
  %1082 = load i64, ptr %65, align 8, !tbaa !144
  br label %1083

1083:                                             ; preds = %1081, %1036
  %1084 = phi i64 [ %1082, %1081 ], [ %1038, %1036 ]
  %1085 = add i64 %1084, 1
  store i64 %1085, ptr %65, align 8, !tbaa !144
  br label %1141

1086:                                             ; preds = %1075
  %1087 = load ptr, ptr %71, align 8, !tbaa !158
  %1088 = icmp ult ptr %1079, %1087
  br i1 %1088, label %1091, label %1089

1089:                                             ; preds = %1086
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 41, ptr noundef %1079, ptr noundef %1087) #21
  %1090 = load ptr, ptr %59, align 8, !tbaa !145
  br label %1091

1091:                                             ; preds = %1086, %1089
  %1092 = phi ptr [ %1090, %1089 ], [ %1079, %1086 ]
  store i8 0, ptr %1079, align 2, !tbaa !169
  %1093 = icmp eq ptr %1092, %61
  br i1 %1093, label %1141, label %1094

1094:                                             ; preds = %1091
  %1095 = getelementptr inbounds %struct.regnode, ptr %1079, i64 0, i32 1
  store i8 41, ptr %1095, align 1, !tbaa !164
  %1096 = getelementptr inbounds %struct.regnode, ptr %1079, i64 0, i32 2
  store i16 0, ptr %1096, align 2, !tbaa !168
  %1097 = getelementptr inbounds %struct.regnode, ptr %1079, i64 1
  store ptr %1097, ptr %59, align 8, !tbaa !145
  %1098 = icmp eq ptr %1097, %61
  br i1 %1098, label %1141, label %1099

1099:                                             ; preds = %1094, %1123
  %1100 = phi ptr [ %1126, %1123 ], [ %89, %1094 ]
  %1101 = icmp ne ptr %1100, null
  call void @llvm.assume(i1 %1101)
  %1102 = getelementptr inbounds %struct.regnode, ptr %1100, i64 0, i32 1
  %1103 = load i8, ptr %1102, align 1, !tbaa !164
  %1104 = icmp ugt i8 %1103, 93
  br i1 %1104, label %1105, label %1108

1105:                                             ; preds = %1099
  %1106 = zext i8 %1103 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1106, i32 noundef 93) #21
  %1107 = load i8, ptr %1102, align 1, !tbaa !164
  br label %1108

1108:                                             ; preds = %1105, %1099
  %1109 = phi i8 [ %1107, %1105 ], [ %1103, %1099 ]
  %1110 = zext i8 %1109 to i64
  %1111 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1110
  %1112 = load i8, ptr %1111, align 1, !tbaa !9
  %1113 = icmp eq i8 %1112, 0
  br i1 %1113, label %1114, label %1119

1114:                                             ; preds = %1108
  %1115 = getelementptr inbounds %struct.regnode, ptr %1100, i64 0, i32 2
  %1116 = load i16, ptr %1115, align 2, !tbaa !168
  %1117 = zext i16 %1116 to i32
  %1118 = icmp eq i16 %1116, 0
  br i1 %1118, label %1134, label %1123

1119:                                             ; preds = %1108
  %1120 = getelementptr inbounds %struct.regnode_1, ptr %1100, i64 0, i32 3
  %1121 = load i32, ptr %1120, align 4, !tbaa !166
  %1122 = icmp eq i32 %1121, 0
  br i1 %1122, label %1127, label %1123

1123:                                             ; preds = %1119, %1114
  %1124 = phi i32 [ %1121, %1119 ], [ %1117, %1114 ]
  %1125 = sext i32 %1124 to i64
  %1126 = getelementptr inbounds %struct.regnode, ptr %1100, i64 %1125
  br label %1099

1127:                                             ; preds = %1119
  %1128 = getelementptr inbounds %struct.regnode_1, ptr %1100, i64 0, i32 3
  %1129 = ptrtoint ptr %1079 to i64
  %1130 = ptrtoint ptr %1100 to i64
  %1131 = sub i64 %1129, %1130
  %1132 = lshr exact i64 %1131, 2
  %1133 = trunc i64 %1132 to i32
  store i32 %1133, ptr %1128, align 4, !tbaa !166
  br label %1141

1134:                                             ; preds = %1114
  %1135 = getelementptr inbounds %struct.regnode, ptr %1100, i64 0, i32 2
  %1136 = ptrtoint ptr %1079 to i64
  %1137 = ptrtoint ptr %1100 to i64
  %1138 = sub i64 %1136, %1137
  %1139 = lshr exact i64 %1138, 2
  %1140 = trunc i64 %1139 to i16
  store i16 %1140, ptr %1135, align 2, !tbaa !168
  br label %1141

1141:                                             ; preds = %877, %1083, %1091, %883, %1134, %1127, %1094, %873, %964, %957, %922
  %1142 = load ptr, ptr %54, align 8, !tbaa !138
  %1143 = load ptr, ptr %58, align 8, !tbaa !140
  %1144 = icmp ult ptr %1142, %1143
  br i1 %1144, label %1145, label %1203

1145:                                             ; preds = %1141
  %1146 = load i8, ptr %1142, align 1, !tbaa !9
  switch i8 %1146, label %1203 [
    i8 42, label %1178
    i8 43, label %1178
    i8 63, label %1178
    i8 123, label %1147
  ]

1147:                                             ; preds = %1145
  %1148 = getelementptr inbounds i8, ptr %1142, i64 1
  %1149 = load i8, ptr %1148, align 1, !tbaa !9
  %1150 = zext i8 %1149 to i64
  %1151 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1150
  %1152 = load i32, ptr %1151, align 4, !tbaa !150
  %1153 = and i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  br i1 %1154, label %1203, label %1155

1155:                                             ; preds = %1147, %1155
  %1156 = phi ptr [ %1163, %1155 ], [ %1148, %1147 ]
  %1157 = load i8, ptr %1156, align 1, !tbaa !9
  %1158 = zext i8 %1157 to i64
  %1159 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1158
  %1160 = load i32, ptr %1159, align 4, !tbaa !150
  %1161 = and i32 %1160, 2
  %1162 = icmp eq i32 %1161, 0
  %1163 = getelementptr inbounds i8, ptr %1156, i64 1
  br i1 %1162, label %1164, label %1155, !llvm.loop !351

1164:                                             ; preds = %1155
  %1165 = icmp eq i8 %1157, 44
  br i1 %1165, label %1166, label %1175

1166:                                             ; preds = %1164, %1166
  %1167 = phi ptr [ %1168, %1166 ], [ %1156, %1164 ]
  %1168 = getelementptr inbounds i8, ptr %1167, i64 1
  %1169 = load i8, ptr %1168, align 1, !tbaa !9
  %1170 = zext i8 %1169 to i64
  %1171 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1170
  %1172 = load i32, ptr %1171, align 4, !tbaa !150
  %1173 = and i32 %1172, 2
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1175, label %1166, !llvm.loop !352

1175:                                             ; preds = %1166, %1164
  %1176 = phi i8 [ %1157, %1164 ], [ %1169, %1166 ]
  %1177 = icmp eq i8 %1176, 125
  br i1 %1177, label %1178, label %1203

1178:                                             ; preds = %1175, %1145, %1145, %1145
  %1179 = getelementptr inbounds i8, ptr %1142, i64 1
  store ptr %1179, ptr %54, align 8, !tbaa !138
  %1180 = load ptr, ptr %59, align 8, !tbaa !145
  %1181 = icmp eq ptr %1180, %61
  br i1 %1181, label %1186, label %1182

1182:                                             ; preds = %1178
  %1183 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1183, i32 noundef 11) #21
  %1184 = load ptr, ptr %54, align 8, !tbaa !138
  %1185 = load ptr, ptr %58, align 8, !tbaa !140
  br label %1186

1186:                                             ; preds = %1182, %1178
  %1187 = phi ptr [ %1185, %1182 ], [ %1143, %1178 ]
  %1188 = phi ptr [ %1184, %1182 ], [ %1179, %1178 ]
  %1189 = icmp ugt ptr %1188, %1187
  %1190 = select i1 %1189, ptr %1187, ptr %1188
  %1191 = load ptr, ptr %69, align 8, !tbaa !108
  %1192 = ptrtoint ptr %1190 to i64
  %1193 = ptrtoint ptr %1191 to i64
  %1194 = sub i64 %1192, %1193
  %1195 = load i32, ptr %70, align 8, !tbaa !98
  %1196 = icmp ne i32 %1195, 0
  %1197 = zext i1 %1196 to i32
  %1198 = ptrtoint ptr %1187 to i64
  %1199 = sub i64 %1198, %1192
  %1200 = getelementptr inbounds i8, ptr %1191, i64 %1194
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.285, i32 noundef %1197, i64 noundef %1194, ptr noundef %1191, i32 noundef %1197, i64 noundef %1199, ptr noundef %1200) #21
  br label %1203

1201:                                             ; preds = %108, %95
  %1202 = phi i32 [ %96, %95 ], [ %87, %108 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  br label %1206

1203:                                             ; preds = %1147, %716, %1141, %1145, %1175, %1186
  %1204 = phi i32 [ %717, %716 ], [ %839, %1145 ], [ %839, %1175 ], [ %839, %1186 ], [ %839, %1141 ], [ %839, %1147 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  %1205 = icmp eq ptr %89, null
  br i1 %1205, label %1206, label %1233

1206:                                             ; preds = %1201, %1203
  %1207 = phi i32 [ %1202, %1201 ], [ %1204, %1203 ]
  %1208 = and i32 %1207, 16
  %1209 = icmp eq i32 %1208, 0
  br i1 %1209, label %1210, label %79, !llvm.loop !354

1210:                                             ; preds = %1206
  %1211 = and i32 %1207, 32
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1213, label %1330

1213:                                             ; preds = %1210
  %1214 = load ptr, ptr %58, align 8, !tbaa !140
  %1215 = load ptr, ptr %69, align 8, !tbaa !108
  %1216 = ptrtoint ptr %1214 to i64
  %1217 = ptrtoint ptr %1215 to i64
  %1218 = sub i64 %1216, %1217
  %1219 = load ptr, ptr %59, align 8, !tbaa !145
  %1220 = icmp eq ptr %1219, %61
  br i1 %1220, label %1224, label %1221

1221:                                             ; preds = %1213
  %1222 = load ptr, ptr %68, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1222, i32 noundef 11) #21
  %1223 = load ptr, ptr %69, align 8, !tbaa !108
  br label %1224

1224:                                             ; preds = %1221, %1213
  %1225 = phi ptr [ %1223, %1221 ], [ %1215, %1213 ]
  %1226 = icmp sgt i64 %1218, 127
  %1227 = select i1 %1226, ptr @.str.182, ptr @.str.178
  %1228 = select i1 %1226, i64 117, i64 %1218
  %1229 = sext i32 %1207 to i64
  %1230 = load i32, ptr %70, align 8, !tbaa !98
  %1231 = icmp ne i32 %1230, 0
  %1232 = zext i1 %1231 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.278, i64 noundef %1229, i32 noundef %1232, i64 noundef %1228, ptr noundef %1225, ptr noundef nonnull %1227) #21
  br label %1238

1233:                                             ; preds = %1203, %318, %329, %330
  %1234 = phi ptr [ %88, %330 ], [ %88, %329 ], [ %61, %318 ], [ %89, %1203 ]
  %1235 = phi i32 [ %87, %330 ], [ %87, %329 ], [ %87, %318 ], [ %1204, %1203 ]
  %1236 = icmp eq ptr %76, null
  %1237 = select i1 %1236, ptr %1234, ptr %76
  br label %1238

1238:                                             ; preds = %1233, %1224
  %1239 = phi ptr [ null, %1224 ], [ %1234, %1233 ]
  %1240 = phi i32 [ %1207, %1224 ], [ %1235, %1233 ]
  %1241 = phi ptr [ %76, %1224 ], [ %1237, %1233 ]
  %1242 = and i32 %1240, 9
  %1243 = load i32, ptr %1, align 4, !tbaa !150
  %1244 = or i32 %1243, %1242
  store i32 %1244, ptr %1, align 4, !tbaa !150
  %1245 = icmp eq ptr %77, null
  br i1 %1245, label %1246, label %1249

1246:                                             ; preds = %1238
  %1247 = and i32 %1240, 4
  %1248 = or i32 %1244, %1247
  store i32 %1248, ptr %1, align 4, !tbaa !150
  br label %1298

1249:                                             ; preds = %1238
  %1250 = load i32, ptr %66, align 8, !tbaa !141
  %1251 = icmp slt i32 %1250, 10
  br i1 %1251, label %1252, label %1254

1252:                                             ; preds = %1249
  %1253 = add nsw i32 %1250, 1
  store i32 %1253, ptr %66, align 8, !tbaa !141
  br label %1254

1254:                                             ; preds = %1252, %1249
  %1255 = load ptr, ptr %59, align 8, !tbaa !145
  %1256 = icmp eq ptr %1255, %61
  br i1 %1256, label %1298, label %1257

1257:                                             ; preds = %1254, %1280
  %1258 = phi ptr [ %1283, %1280 ], [ %77, %1254 ]
  %1259 = getelementptr inbounds %struct.regnode, ptr %1258, i64 0, i32 1
  %1260 = load i8, ptr %1259, align 1, !tbaa !164
  %1261 = icmp ugt i8 %1260, 93
  br i1 %1261, label %1262, label %1265

1262:                                             ; preds = %1257
  %1263 = zext i8 %1260 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.204, i32 noundef %1263, i32 noundef 93) #21
  %1264 = load i8, ptr %1259, align 1, !tbaa !164
  br label %1265

1265:                                             ; preds = %1262, %1257
  %1266 = phi i8 [ %1264, %1262 ], [ %1260, %1257 ]
  %1267 = zext i8 %1266 to i64
  %1268 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %1267
  %1269 = load i8, ptr %1268, align 1, !tbaa !9
  %1270 = icmp eq i8 %1269, 0
  br i1 %1270, label %1271, label %1276

1271:                                             ; preds = %1265
  %1272 = getelementptr inbounds %struct.regnode, ptr %1258, i64 0, i32 2
  %1273 = load i16, ptr %1272, align 2, !tbaa !168
  %1274 = zext i16 %1273 to i32
  %1275 = icmp eq i16 %1273, 0
  br i1 %1275, label %1291, label %1280

1276:                                             ; preds = %1265
  %1277 = getelementptr inbounds %struct.regnode_1, ptr %1258, i64 0, i32 3
  %1278 = load i32, ptr %1277, align 4, !tbaa !166
  %1279 = icmp eq i32 %1278, 0
  br i1 %1279, label %1284, label %1280

1280:                                             ; preds = %1276, %1271
  %1281 = phi i32 [ %1278, %1276 ], [ %1274, %1271 ]
  %1282 = sext i32 %1281 to i64
  %1283 = getelementptr inbounds %struct.regnode, ptr %1258, i64 %1282
  br label %1257

1284:                                             ; preds = %1276
  %1285 = getelementptr inbounds %struct.regnode_1, ptr %1258, i64 0, i32 3
  %1286 = ptrtoint ptr %1239 to i64
  %1287 = ptrtoint ptr %1258 to i64
  %1288 = sub i64 %1286, %1287
  %1289 = lshr exact i64 %1288, 2
  %1290 = trunc i64 %1289 to i32
  store i32 %1290, ptr %1285, align 4, !tbaa !166
  br label %1298

1291:                                             ; preds = %1271
  %1292 = getelementptr inbounds %struct.regnode, ptr %1258, i64 0, i32 2
  %1293 = ptrtoint ptr %1239 to i64
  %1294 = ptrtoint ptr %1258 to i64
  %1295 = sub i64 %1293, %1294
  %1296 = lshr exact i64 %1295, 2
  %1297 = trunc i64 %1296 to i16
  store i16 %1297, ptr %1292, align 2, !tbaa !168
  br label %1298

1298:                                             ; preds = %1291, %1284, %1254, %1246
  %1299 = add nuw nsw i32 %78, 1
  br label %74, !llvm.loop !354

1300:                                             ; preds = %84, %84, %79
  %1301 = icmp eq ptr %77, null
  br i1 %1301, label %1302, label %1323

1302:                                             ; preds = %1300
  %1303 = load ptr, ptr %59, align 8, !tbaa !145
  %1304 = icmp eq ptr %1303, %61
  br i1 %1304, label %1305, label %1308

1305:                                             ; preds = %1302
  %1306 = load i64, ptr %65, align 8, !tbaa !144
  %1307 = add i64 %1306, 1
  store i64 %1307, ptr %65, align 8, !tbaa !144
  br label %1320

1308:                                             ; preds = %1302
  %1309 = load ptr, ptr %71, align 8, !tbaa !158
  %1310 = icmp ult ptr %1303, %1309
  br i1 %1310, label %1313, label %1311

1311:                                             ; preds = %1308
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 40, ptr noundef %1303, ptr noundef %1309) #21
  %1312 = load ptr, ptr %59, align 8, !tbaa !145
  br label %1313

1313:                                             ; preds = %1308, %1311
  %1314 = phi ptr [ %1312, %1311 ], [ %1303, %1308 ]
  store i8 0, ptr %1303, align 2, !tbaa !169
  %1315 = icmp eq ptr %1314, %61
  br i1 %1315, label %1320, label %1316

1316:                                             ; preds = %1313
  %1317 = getelementptr inbounds %struct.regnode, ptr %1303, i64 0, i32 1
  store i8 40, ptr %1317, align 1, !tbaa !164
  %1318 = getelementptr inbounds %struct.regnode, ptr %1303, i64 0, i32 2
  store i16 0, ptr %1318, align 2, !tbaa !168
  %1319 = getelementptr inbounds %struct.regnode, ptr %1303, i64 1
  store ptr %1319, ptr %59, align 8, !tbaa !145
  br label %1320

1320:                                             ; preds = %1305, %1313, %1316
  %1321 = icmp eq ptr %76, null
  %1322 = select i1 %1321, ptr %1303, ptr %76
  br label %1323

1323:                                             ; preds = %1320, %1300
  %1324 = phi ptr [ %76, %1300 ], [ %1322, %1320 ]
  %1325 = icmp eq i32 %78, 1
  br i1 %1325, label %1326, label %1333

1326:                                             ; preds = %1323
  %1327 = and i32 %80, 2
  %1328 = load i32, ptr %1, align 4, !tbaa !150
  %1329 = or i32 %1328, %1327
  br label %1330

1330:                                             ; preds = %1210, %1326
  %1331 = phi i32 [ %1329, %1326 ], [ 32, %1210 ]
  %1332 = phi ptr [ %1324, %1326 ], [ null, %1210 ]
  store i32 %1331, ptr %1, align 4, !tbaa !150
  br label %1333

1333:                                             ; preds = %1330, %1323
  %1334 = phi ptr [ %1324, %1323 ], [ %1332, %1330 ]
  ret ptr %1334
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_handle_regex_sets(ptr noundef %0, ptr noundef writeonly %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  %11 = load i32, ptr %0, align 8, !tbaa !109
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  %14 = and i32 %11, 896
  %15 = icmp eq i32 %14, 128
  br i1 %15, label %16, label %43

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %18 = load ptr, ptr %17, align 8, !tbaa !145
  %19 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %20 = icmp eq ptr %18, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %23, i32 noundef 11) #21
  br label %24

24:                                               ; preds = %16, %21
  %25 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !138
  %27 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !140
  %29 = icmp ugt ptr %26, %28
  %30 = select i1 %29, ptr %28, ptr %26
  %31 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !108
  %33 = ptrtoint ptr %30 to i64
  %34 = ptrtoint ptr %32 to i64
  %35 = sub i64 %33, %34
  %36 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %37 = load i32, ptr %36, align 8, !tbaa !98
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  %40 = ptrtoint ptr %28 to i64
  %41 = sub i64 %40, %33
  %42 = getelementptr inbounds i8, ptr %32, i64 %35
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.389, i32 noundef %39, i64 noundef %35, ptr noundef %32, i32 noundef %39, i64 noundef %41, ptr noundef %42) #21
  br label %43

43:                                               ; preds = %24, %4
  %44 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %44, align 8, !tbaa !99
  %45 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %46 = load ptr, ptr %45, align 8, !tbaa !145
  %47 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %48 = icmp eq ptr %46, %47
  br i1 %48, label %49, label %286

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %51 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %52 = load ptr, ptr %50, align 8, !tbaa !138
  %53 = load ptr, ptr %51, align 8, !tbaa !140
  %54 = icmp ult ptr %52, %53
  br i1 %54, label %55, label %259

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %57 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %58 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %59 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  br label %60

60:                                               ; preds = %55, %253
  %61 = phi ptr [ %53, %55 ], [ %257, %253 ]
  %62 = phi ptr [ %52, %55 ], [ %256, %253 ]
  %63 = phi i64 [ 0, %55 ], [ %254, %253 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #21
  store ptr null, ptr %6, align 8, !tbaa !5
  %64 = ptrtoint ptr %61 to i64
  br label %65

65:                                               ; preds = %115, %60
  %66 = phi ptr [ %116, %115 ], [ %62, %60 ]
  %67 = load i8, ptr %66, align 1, !tbaa !9
  switch i8 %67, label %68 [
    i8 32, label %97
    i8 13, label %97
    i8 12, label %97
    i8 11, label %97
    i8 10, label %97
    i8 9, label %97
  ]

68:                                               ; preds = %65
  %69 = load i32, ptr %56, align 8, !tbaa !98
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %96, label %71

71:                                               ; preds = %68
  %72 = ptrtoint ptr %66 to i64
  %73 = sub i64 %64, %72
  %74 = zext i8 %67 to i64
  %75 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !9
  %77 = zext i8 %76 to i64
  %78 = icmp slt i64 %73, %77
  br i1 %78, label %100, label %79

79:                                               ; preds = %71
  switch i8 %67, label %118 [
    i8 -62, label %80
    i8 -30, label %84
    i8 35, label %102
  ]

80:                                               ; preds = %79
  %81 = getelementptr inbounds i8, ptr %66, i64 1
  %82 = load i8, ptr %81, align 1, !tbaa !9
  %83 = icmp eq i8 %82, -123
  br i1 %83, label %97, label %118

84:                                               ; preds = %79
  %85 = getelementptr inbounds i8, ptr %66, i64 1
  %86 = load i8, ptr %85, align 1, !tbaa !9
  %87 = icmp eq i8 %86, -128
  br i1 %87, label %88, label %118

88:                                               ; preds = %84
  %89 = getelementptr inbounds i8, ptr %66, i64 2
  %90 = load i8, ptr %89, align 1, !tbaa !9
  %91 = and i8 %90, -2
  %92 = icmp eq i8 %91, -114
  %93 = icmp eq i8 %91, -88
  %94 = or i1 %92, %93
  %95 = freeze i1 %94
  br i1 %95, label %97, label %118

96:                                               ; preds = %68
  switch i8 %67, label %118 [
    i8 -123, label %97
    i8 35, label %102
  ]

97:                                               ; preds = %96, %88, %80, %65, %65, %65, %65, %65, %65
  %98 = phi i64 [ 1, %96 ], [ 1, %65 ], [ 3, %88 ], [ 2, %80 ], [ 1, %65 ], [ 1, %65 ], [ 1, %65 ], [ 1, %65 ], [ 1, %65 ]
  %99 = getelementptr inbounds i8, ptr %66, i64 %98
  br label %115

100:                                              ; preds = %71
  %101 = icmp eq i8 %67, 35
  br i1 %101, label %102, label %118

102:                                              ; preds = %100, %96, %79
  br label %103

103:                                              ; preds = %102, %106
  %104 = phi ptr [ %107, %106 ], [ %66, %102 ]
  %105 = icmp ult ptr %104, %61
  br i1 %105, label %106, label %112

106:                                              ; preds = %103
  %107 = getelementptr inbounds i8, ptr %104, i64 1
  %108 = load i8, ptr %107, align 1, !tbaa !9
  %109 = icmp eq i8 %108, 10
  br i1 %109, label %110, label %103, !llvm.loop !348

110:                                              ; preds = %106
  %111 = getelementptr inbounds i8, ptr %104, i64 2
  br label %115

112:                                              ; preds = %103
  %113 = load i32, ptr %57, align 8, !tbaa !131
  %114 = or i32 %113, 512
  store i32 %114, ptr %57, align 8, !tbaa !131
  br label %115

115:                                              ; preds = %112, %110, %97
  %116 = phi ptr [ %99, %97 ], [ %111, %110 ], [ %104, %112 ]
  %117 = icmp ult ptr %116, %61
  br i1 %117, label %65, label %118

118:                                              ; preds = %79, %80, %84, %88, %96, %100, %115
  %119 = phi ptr [ %66, %80 ], [ %66, %88 ], [ %66, %84 ], [ %66, %100 ], [ %66, %96 ], [ %66, %79 ], [ %116, %115 ]
  store ptr %119, ptr %50, align 8, !tbaa !138
  %120 = load i8, ptr %119, align 1, !tbaa !9
  %121 = sext i8 %120 to i32
  switch i32 %121, label %253 [
    i32 63, label %122
    i32 92, label %128
    i32 91, label %134
    i32 93, label %222
  ]

122:                                              ; preds = %118
  %123 = getelementptr inbounds i8, ptr %119, i64 1
  %124 = load i8, ptr %123, align 1, !tbaa !9
  %125 = icmp eq i8 %124, 91
  br i1 %125, label %126, label %253

126:                                              ; preds = %122
  %127 = add i64 %63, 1
  store ptr %123, ptr %50, align 8, !tbaa !138
  br label %253

128:                                              ; preds = %118
  %129 = getelementptr inbounds i8, ptr %119, i64 1
  store ptr %129, ptr %50, align 8, !tbaa !138
  %130 = load i8, ptr %129, align 1, !tbaa !9
  %131 = icmp eq i8 %130, 99
  br i1 %131, label %132, label %253

132:                                              ; preds = %128
  %133 = getelementptr inbounds i8, ptr %119, i64 2
  store ptr %133, ptr %50, align 8, !tbaa !138
  br label %253

134:                                              ; preds = %118
  %135 = ptrtoint ptr %119 to i64
  %136 = getelementptr inbounds i8, ptr %119, i64 1
  %137 = load i8, ptr %136, align 1, !tbaa !9
  switch i8 %137, label %180 [
    i8 61, label %138
    i8 58, label %138
    i8 46, label %138
  ]

138:                                              ; preds = %134, %134, %134
  %139 = getelementptr inbounds i8, ptr %119, i64 2
  %140 = icmp ult ptr %139, %61
  br i1 %140, label %141, label %180

141:                                              ; preds = %138
  %142 = sub i64 %64, %135
  %143 = getelementptr i8, ptr %119, i64 %142
  br label %144

144:                                              ; preds = %152, %141
  %145 = phi ptr [ %153, %152 ], [ %139, %141 ]
  %146 = load i8, ptr %145, align 1, !tbaa !9
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %147
  %149 = load i32, ptr %148, align 4, !tbaa !150
  %150 = and i32 %149, 16385
  %151 = icmp eq i32 %150, 16385
  br i1 %151, label %152, label %155

152:                                              ; preds = %144
  %153 = getelementptr inbounds i8, ptr %145, i64 1
  %154 = icmp eq ptr %153, %143
  br i1 %154, label %180, label %144, !llvm.loop !355

155:                                              ; preds = %144
  %156 = ptrtoint ptr %145 to i64
  %157 = sub i64 %156, %135
  %158 = icmp sgt i64 %157, 2
  br i1 %158, label %159, label %169

159:                                              ; preds = %155
  %160 = icmp eq i8 %146, %137
  br i1 %160, label %181, label %161

161:                                              ; preds = %159
  %162 = icmp eq i8 %146, 93
  br i1 %162, label %163, label %169

163:                                              ; preds = %161
  %164 = getelementptr inbounds i8, ptr %145, i64 1
  %165 = icmp ult ptr %164, %61
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load i8, ptr %164, align 1, !tbaa !9
  %168 = icmp eq i8 %167, 41
  br i1 %168, label %169, label %181

169:                                              ; preds = %166, %163, %161, %155
  %170 = call ptr @memchr(ptr noundef nonnull %119, i32 noundef 93, i64 noundef %142) #24
  %171 = icmp ne ptr %170, null
  %172 = ptrtoint ptr %170 to i64
  %173 = sub i64 %172, %135
  %174 = icmp sgt i64 %173, 2
  %175 = and i1 %171, %174
  br i1 %175, label %176, label %180

176:                                              ; preds = %169
  %177 = getelementptr inbounds i8, ptr %170, i64 -1
  %178 = load i8, ptr %177, align 1, !tbaa !9
  %179 = icmp eq i8 %137, %178
  br i1 %179, label %181, label %180

180:                                              ; preds = %152, %138, %169, %134, %176
  store ptr %136, ptr %50, align 8, !tbaa !138
  br label %181

181:                                              ; preds = %159, %166, %180, %176
  %182 = phi i1 [ false, %180 ], [ true, %176 ], [ true, %166 ], [ true, %159 ]
  %183 = trunc i64 %63 to i32
  %184 = add i32 %183, 1
  %185 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %184, i1 noundef zeroext %182, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext true, ptr noundef nonnull %6)
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %208

187:                                              ; preds = %181
  %188 = load ptr, ptr %51, align 8, !tbaa !140
  %189 = load ptr, ptr %58, align 8, !tbaa !108
  %190 = ptrtoint ptr %188 to i64
  %191 = ptrtoint ptr %189 to i64
  %192 = sub i64 %190, %191
  %193 = load ptr, ptr %45, align 8, !tbaa !145
  %194 = icmp eq ptr %193, %47
  br i1 %194, label %198, label %195

195:                                              ; preds = %187
  %196 = load ptr, ptr %59, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %196, i32 noundef 11) #21
  %197 = load ptr, ptr %58, align 8, !tbaa !108
  br label %198

198:                                              ; preds = %195, %187
  %199 = phi ptr [ %197, %195 ], [ %189, %187 ]
  %200 = icmp sgt i64 %192, 127
  %201 = select i1 %200, i64 117, i64 %192
  %202 = select i1 %200, ptr @.str.182, ptr @.str.178
  %203 = load i32, ptr %2, align 4, !tbaa !150
  %204 = sext i32 %203 to i64
  %205 = load i32, ptr %56, align 8, !tbaa !98
  %206 = icmp ne i32 %205, 0
  %207 = zext i1 %206 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.390, i64 noundef %204, i32 noundef %207, i64 noundef %201, ptr noundef %199, ptr noundef nonnull %202) #21
  br label %208

208:                                              ; preds = %198, %181
  br i1 %182, label %209, label %212

209:                                              ; preds = %208
  %210 = load ptr, ptr %50, align 8, !tbaa !138
  %211 = getelementptr inbounds i8, ptr %210, i64 -1
  store ptr %211, ptr %50, align 8, !tbaa !138
  br label %212

212:                                              ; preds = %209, %208
  %213 = load ptr, ptr %6, align 8, !tbaa !5
  %214 = icmp eq ptr %213, null
  br i1 %214, label %253, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.sv, ptr %213, i64 0, i32 1
  %217 = load i32, ptr %216, align 8, !tbaa !22
  %218 = icmp ugt i32 %217, 1
  br i1 %218, label %219, label %221

219:                                              ; preds = %215
  %220 = add i32 %217, -1
  store i32 %220, ptr %216, align 8, !tbaa !22
  br label %253

221:                                              ; preds = %215
  call void @Perl_sv_free2(ptr noundef nonnull %213, i32 noundef %217) #21
  br label %253

222:                                              ; preds = %118
  %223 = add i64 %63, -1
  %224 = icmp eq i64 %63, 0
  br i1 %224, label %225, label %253

225:                                              ; preds = %222
  %226 = getelementptr inbounds i8, ptr %119, i64 1
  store ptr %226, ptr %50, align 8, !tbaa !138
  %227 = icmp ult ptr %226, %61
  br i1 %227, label %228, label %252

228:                                              ; preds = %225
  %229 = load i8, ptr %226, align 1, !tbaa !9
  %230 = icmp eq i8 %229, 41
  br i1 %230, label %231, label %252

231:                                              ; preds = %228
  %232 = load ptr, ptr %45, align 8, !tbaa !145
  %233 = icmp eq ptr %232, %47
  br i1 %233, label %234, label %238

234:                                              ; preds = %231
  %235 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %236 = load i64, ptr %235, align 8, !tbaa !144
  %237 = add i64 %236, 2
  store i64 %237, ptr %235, align 8, !tbaa !144
  br label %281

238:                                              ; preds = %231
  %239 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %240 = load ptr, ptr %239, align 8, !tbaa !158
  %241 = icmp ult ptr %232, %240
  br i1 %241, label %244, label %242

242:                                              ; preds = %238
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 19, ptr noundef %232, ptr noundef %240) #21
  %243 = load ptr, ptr %45, align 8, !tbaa !145
  br label %244

244:                                              ; preds = %238, %242
  %245 = phi ptr [ %243, %242 ], [ %232, %238 ]
  store i8 0, ptr %232, align 2, !tbaa !169
  %246 = icmp eq ptr %245, %47
  br i1 %246, label %281, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %struct.regnode_1, ptr %232, i64 0, i32 3
  store i32 0, ptr %248, align 4, !tbaa !166
  %249 = getelementptr inbounds %struct.regnode, ptr %232, i64 0, i32 1
  store i8 19, ptr %249, align 1, !tbaa !164
  %250 = getelementptr inbounds %struct.regnode, ptr %232, i64 0, i32 2
  store i16 0, ptr %250, align 2, !tbaa !168
  %251 = getelementptr inbounds %struct.regnode, ptr %232, i64 2
  store ptr %251, ptr %45, align 8, !tbaa !145
  br label %281

252:                                              ; preds = %228, %225
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  br label %259

253:                                              ; preds = %122, %126, %118, %132, %128, %222, %212, %219, %221
  %254 = phi i64 [ %63, %118 ], [ %223, %222 ], [ %63, %132 ], [ %63, %128 ], [ %127, %126 ], [ %63, %122 ], [ %63, %212 ], [ %63, %219 ], [ %63, %221 ]
  %255 = load ptr, ptr %50, align 8, !tbaa !138
  %256 = getelementptr inbounds i8, ptr %255, i64 1
  store ptr %256, ptr %50, align 8, !tbaa !138
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  %257 = load ptr, ptr %51, align 8, !tbaa !140
  %258 = icmp ult ptr %256, %257
  br i1 %258, label %60, label %259

259:                                              ; preds = %253, %49, %252
  %260 = phi ptr [ %53, %49 ], [ %61, %252 ], [ %257, %253 ]
  %261 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !108
  %263 = ptrtoint ptr %260 to i64
  %264 = ptrtoint ptr %262 to i64
  %265 = sub i64 %263, %264
  %266 = load ptr, ptr %45, align 8, !tbaa !145
  %267 = icmp eq ptr %266, %47
  br i1 %267, label %272, label %268

268:                                              ; preds = %259
  %269 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %270 = load ptr, ptr %269, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %270, i32 noundef 11) #21
  %271 = load ptr, ptr %261, align 8, !tbaa !108
  br label %272

272:                                              ; preds = %259, %268
  %273 = phi ptr [ %262, %259 ], [ %271, %268 ]
  %274 = icmp sgt i64 %265, 127
  %275 = select i1 %274, i64 117, i64 %265
  %276 = select i1 %274, ptr @.str.182, ptr @.str.178
  %277 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %278 = load i32, ptr %277, align 8, !tbaa !98
  %279 = icmp ne i32 %278, 0
  %280 = zext i1 %279 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.391, i32 noundef %280, i64 noundef %275, ptr noundef %273, ptr noundef nonnull %276) #21
  br label %286

281:                                              ; preds = %234, %247, %244
  %282 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %283 = load i64, ptr %282, align 8, !tbaa !144
  %284 = add i64 %283, 9
  store i64 %284, ptr %282, align 8, !tbaa !144
  %285 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  br label %1355

286:                                              ; preds = %272, %43
  %287 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %288 = load i32, ptr %287, align 8, !tbaa !98
  %289 = icmp ne i32 %288, 0
  %290 = zext i1 %289 to i32
  %291 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %292 = load ptr, ptr %291, align 8, !tbaa !138
  %293 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %294 = load ptr, ptr %293, align 8, !tbaa !108
  %295 = ptrtoint ptr %292 to i64
  %296 = ptrtoint ptr %294 to i64
  %297 = sub i64 %295, %296
  %298 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %299 = load ptr, ptr %298, align 8, !tbaa !140
  %300 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %301 = load ptr, ptr %300, align 8, !tbaa !139
  %302 = ptrtoint ptr %299 to i64
  %303 = ptrtoint ptr %301 to i64
  %304 = add i64 %297, %303
  %305 = sub i64 %302, %304
  %306 = getelementptr inbounds i8, ptr %294, i64 %297
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 54, ptr noundef nonnull @.str.392, i32 noundef %290, i64 noundef %297, ptr noundef %294, i32 noundef %290, i64 noundef %305, ptr noundef %306) #21
  %307 = call ptr @Perl_newSV_type(i32 noundef 11) #21
  %308 = call ptr @Perl_sv_2mortal(ptr noundef %307) #21
  %309 = call ptr @Perl_newSV_type(i32 noundef 11) #21
  %310 = call ptr @Perl_sv_2mortal(ptr noundef %309) #21
  %311 = load ptr, ptr %291, align 8, !tbaa !138
  %312 = load ptr, ptr %298, align 8, !tbaa !140
  %313 = icmp ult ptr %311, %312
  br i1 %313, label %314, label %1136

314:                                              ; preds = %286
  %315 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %316 = getelementptr inbounds %struct.sv, ptr %307, i64 0, i32 2
  %317 = getelementptr inbounds %struct.sv, ptr %309, i64 0, i32 2
  %318 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %319 = add i32 %3, 1
  br label %320

320:                                              ; preds = %314, %1131
  %321 = phi ptr [ %312, %314 ], [ %1134, %1131 ]
  %322 = phi ptr [ %311, %314 ], [ %1133, %1131 ]
  %323 = phi i64 [ 0, %314 ], [ %1119, %1131 ]
  %324 = phi ptr [ undef, %314 ], [ %1118, %1131 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #21
  store ptr null, ptr %7, align 8, !tbaa !5
  %325 = ptrtoint ptr %321 to i64
  br label %326

326:                                              ; preds = %376, %320
  %327 = phi ptr [ %377, %376 ], [ %322, %320 ]
  %328 = load i8, ptr %327, align 1, !tbaa !9
  switch i8 %328, label %329 [
    i8 32, label %358
    i8 13, label %358
    i8 12, label %358
    i8 11, label %358
    i8 10, label %358
    i8 9, label %358
  ]

329:                                              ; preds = %326
  %330 = load i32, ptr %287, align 8, !tbaa !98
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %357, label %332

332:                                              ; preds = %329
  %333 = ptrtoint ptr %327 to i64
  %334 = sub i64 %325, %333
  %335 = zext i8 %328 to i64
  %336 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %335
  %337 = load i8, ptr %336, align 1, !tbaa !9
  %338 = zext i8 %337 to i64
  %339 = icmp slt i64 %334, %338
  br i1 %339, label %361, label %340

340:                                              ; preds = %332
  switch i8 %328, label %379 [
    i8 -62, label %341
    i8 -30, label %345
    i8 35, label %363
  ]

341:                                              ; preds = %340
  %342 = getelementptr inbounds i8, ptr %327, i64 1
  %343 = load i8, ptr %342, align 1, !tbaa !9
  %344 = icmp eq i8 %343, -123
  br i1 %344, label %358, label %379

345:                                              ; preds = %340
  %346 = getelementptr inbounds i8, ptr %327, i64 1
  %347 = load i8, ptr %346, align 1, !tbaa !9
  %348 = icmp eq i8 %347, -128
  br i1 %348, label %349, label %379

349:                                              ; preds = %345
  %350 = getelementptr inbounds i8, ptr %327, i64 2
  %351 = load i8, ptr %350, align 1, !tbaa !9
  %352 = and i8 %351, -2
  %353 = icmp eq i8 %352, -114
  %354 = icmp eq i8 %352, -88
  %355 = or i1 %353, %354
  %356 = freeze i1 %355
  br i1 %356, label %358, label %379

357:                                              ; preds = %329
  switch i8 %328, label %379 [
    i8 -123, label %358
    i8 35, label %363
  ]

358:                                              ; preds = %357, %349, %341, %326, %326, %326, %326, %326, %326
  %359 = phi i64 [ 1, %357 ], [ 1, %326 ], [ 3, %349 ], [ 2, %341 ], [ 1, %326 ], [ 1, %326 ], [ 1, %326 ], [ 1, %326 ], [ 1, %326 ]
  %360 = getelementptr inbounds i8, ptr %327, i64 %359
  br label %376

361:                                              ; preds = %332
  %362 = icmp eq i8 %328, 35
  br i1 %362, label %363, label %379

363:                                              ; preds = %361, %357, %340
  br label %364

364:                                              ; preds = %363, %367
  %365 = phi ptr [ %368, %367 ], [ %327, %363 ]
  %366 = icmp ult ptr %365, %321
  br i1 %366, label %367, label %373

367:                                              ; preds = %364
  %368 = getelementptr inbounds i8, ptr %365, i64 1
  %369 = load i8, ptr %368, align 1, !tbaa !9
  %370 = icmp eq i8 %369, 10
  br i1 %370, label %371, label %364, !llvm.loop !348

371:                                              ; preds = %367
  %372 = getelementptr inbounds i8, ptr %365, i64 2
  br label %376

373:                                              ; preds = %364
  %374 = load i32, ptr %315, align 8, !tbaa !131
  %375 = or i32 %374, 512
  store i32 %375, ptr %315, align 8, !tbaa !131
  br label %376

376:                                              ; preds = %373, %371, %358
  %377 = phi ptr [ %360, %358 ], [ %372, %371 ], [ %365, %373 ]
  %378 = icmp ult ptr %377, %321
  br i1 %378, label %326, label %379

379:                                              ; preds = %340, %341, %345, %349, %357, %361, %376
  %380 = phi ptr [ %327, %341 ], [ %327, %349 ], [ %327, %345 ], [ %327, %361 ], [ %327, %357 ], [ %327, %340 ], [ %377, %376 ]
  store ptr %380, ptr %291, align 8, !tbaa !138
  %381 = icmp ult ptr %380, %321
  br i1 %381, label %384, label %382

382:                                              ; preds = %379
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.393) #21
  %383 = load ptr, ptr %291, align 8, !tbaa !138
  br label %384

384:                                              ; preds = %382, %379
  %385 = phi ptr [ %383, %382 ], [ %380, %379 ]
  %386 = load i8, ptr %385, align 1, !tbaa !9
  %387 = zext i8 %386 to i32
  %388 = icmp eq i8 %386, 93
  br label %389

389:                                              ; preds = %893, %384
  %390 = phi ptr [ %324, %384 ], [ %806, %893 ]
  %391 = load i32, ptr %316, align 4, !tbaa !62
  %392 = and i32 %391, 8388608
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %397, label %394

394:                                              ; preds = %389
  %395 = call i32 @Perl_mg_size(ptr noundef nonnull %307) #21
  %396 = zext i32 %395 to i64
  br label %401

397:                                              ; preds = %389
  %398 = load ptr, ptr %307, align 8, !tbaa !122
  %399 = getelementptr inbounds %struct.xpvav, ptr %398, i64 0, i32 2
  %400 = load i64, ptr %399, align 8, !tbaa !124
  br label %401

401:                                              ; preds = %394, %397
  %402 = phi i64 [ %396, %394 ], [ %400, %397 ]
  switch i8 %386, label %930 [
    i8 40, label %403
    i8 92, label %560
    i8 91, label %587
    i8 93, label %666
    i8 41, label %671
    i8 38, label %743
    i8 124, label %743
    i8 43, label %743
    i8 45, label %743
    i8 94, label %743
    i8 33, label %895
  ]

403:                                              ; preds = %401
  %404 = load ptr, ptr %291, align 8, !tbaa !138
  %405 = load ptr, ptr %298, align 8, !tbaa !140
  %406 = icmp ult ptr %404, %405
  br i1 %406, label %407, label %485

407:                                              ; preds = %403
  %408 = getelementptr inbounds i8, ptr %404, i64 1
  %409 = load i8, ptr %408, align 1, !tbaa !9
  %410 = icmp eq i8 %409, 63
  br i1 %410, label %411, label %485

411:                                              ; preds = %407
  %412 = load i32, ptr %0, align 8, !tbaa !109
  %413 = getelementptr inbounds i8, ptr %404, i64 2
  store ptr %413, ptr %291, align 8, !tbaa !138
  call fastcc void @S_parse_lparen_question_flags(ptr noundef nonnull %0)
  %414 = load ptr, ptr %291, align 8, !tbaa !138
  %415 = icmp eq ptr %414, %413
  %416 = load ptr, ptr %298, align 8, !tbaa !140
  br i1 %415, label %435, label %417

417:                                              ; preds = %411
  %418 = getelementptr inbounds i8, ptr %416, i64 -4
  %419 = icmp ult ptr %414, %418
  br i1 %419, label %420, label %435

420:                                              ; preds = %417
  %421 = load i8, ptr %414, align 1, !tbaa !9
  %422 = icmp eq i8 %421, 58
  br i1 %422, label %423, label %435

423:                                              ; preds = %420
  %424 = getelementptr inbounds i8, ptr %414, i64 1
  store ptr %424, ptr %291, align 8, !tbaa !138
  %425 = load i8, ptr %424, align 1, !tbaa !9
  %426 = icmp eq i8 %425, 40
  br i1 %426, label %427, label %435

427:                                              ; preds = %423
  %428 = getelementptr inbounds i8, ptr %414, i64 2
  store ptr %428, ptr %291, align 8, !tbaa !138
  %429 = load i8, ptr %428, align 1, !tbaa !9
  %430 = icmp eq i8 %429, 63
  br i1 %430, label %431, label %435

431:                                              ; preds = %427
  %432 = getelementptr inbounds i8, ptr %414, i64 3
  store ptr %432, ptr %291, align 8, !tbaa !138
  %433 = load i8, ptr %432, align 1, !tbaa !9
  %434 = icmp eq i8 %433, 91
  br i1 %434, label %479, label %435

435:                                              ; preds = %431, %427, %423, %420, %417, %411
  %436 = phi ptr [ %432, %431 ], [ %428, %427 ], [ %424, %423 ], [ %414, %420 ], [ %414, %417 ], [ %413, %411 ]
  %437 = getelementptr inbounds i8, ptr %416, i64 -4
  %438 = icmp ult ptr %436, %437
  br i1 %438, label %439, label %453

439:                                              ; preds = %435
  %440 = icmp eq ptr %436, %413
  br i1 %440, label %455, label %441

441:                                              ; preds = %439
  %442 = load i32, ptr %287, align 8, !tbaa !98
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %450, label %444

444:                                              ; preds = %441
  %445 = load i8, ptr %436, align 1, !tbaa !9
  %446 = zext i8 %445 to i64
  %447 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %446
  %448 = load i8, ptr %447, align 1, !tbaa !9
  %449 = zext i8 %448 to i64
  br label %450

450:                                              ; preds = %441, %444
  %451 = phi i64 [ %449, %444 ], [ 1, %441 ]
  %452 = getelementptr inbounds i8, ptr %436, i64 %451
  br label %453

453:                                              ; preds = %435, %450
  %454 = phi ptr [ %452, %450 ], [ %416, %435 ]
  store ptr %454, ptr %291, align 8, !tbaa !138
  br label %455

455:                                              ; preds = %453, %439
  %456 = phi ptr [ %413, %439 ], [ %454, %453 ]
  %457 = load ptr, ptr %45, align 8, !tbaa !145
  %458 = icmp eq ptr %457, %47
  br i1 %458, label %463, label %459

459:                                              ; preds = %455
  %460 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %460, i32 noundef 11) #21
  %461 = load ptr, ptr %291, align 8, !tbaa !138
  %462 = load ptr, ptr %298, align 8, !tbaa !140
  br label %463

463:                                              ; preds = %455, %459
  %464 = phi ptr [ %416, %455 ], [ %462, %459 ]
  %465 = phi ptr [ %456, %455 ], [ %461, %459 ]
  %466 = icmp ugt ptr %465, %464
  %467 = select i1 %466, ptr %464, ptr %465
  %468 = load ptr, ptr %293, align 8, !tbaa !108
  %469 = ptrtoint ptr %467 to i64
  %470 = ptrtoint ptr %468 to i64
  %471 = sub i64 %469, %470
  %472 = load i32, ptr %287, align 8, !tbaa !98
  %473 = icmp ne i32 %472, 0
  %474 = zext i1 %473 to i32
  %475 = ptrtoint ptr %464 to i64
  %476 = sub i64 %475, %469
  %477 = getelementptr inbounds i8, ptr %468, i64 %471
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.394, i32 noundef %474, i64 noundef %471, ptr noundef %468, i32 noundef %474, i64 noundef %476, ptr noundef %477) #21
  %478 = load ptr, ptr %291, align 8, !tbaa !138
  br label %479

479:                                              ; preds = %463, %431
  %480 = phi ptr [ %478, %463 ], [ %432, %431 ]
  %481 = getelementptr inbounds i8, ptr %480, i64 1
  store ptr %481, ptr %291, align 8, !tbaa !138
  %482 = call fastcc ptr @S_handle_regex_sets(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef %2, i32 noundef %319)
  %483 = load ptr, ptr %291, align 8, !tbaa !138
  %484 = getelementptr inbounds i8, ptr %483, i64 3
  store ptr %484, ptr %291, align 8, !tbaa !138
  store i32 %412, ptr %0, align 8, !tbaa !109
  br label %964

485:                                              ; preds = %407, %403
  %486 = shl i64 %402, 32
  %487 = ashr exact i64 %486, 32
  %488 = icmp slt i64 %487, %323
  br i1 %488, label %555, label %489

489:                                              ; preds = %485
  %490 = call ptr @Perl_av_fetch(ptr noundef %307, i64 noundef %487, i32 noundef 0) #21
  %491 = icmp eq ptr %490, null
  br i1 %491, label %531, label %492

492:                                              ; preds = %489
  %493 = load ptr, ptr %490, align 8, !tbaa !5
  %494 = getelementptr inbounds %struct.sv, ptr %493, i64 0, i32 2
  %495 = load i32, ptr %494, align 4, !tbaa !62
  %496 = and i32 %495, 256
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %514, label %498

498:                                              ; preds = %492
  %499 = and i32 %495, -2145386240
  %500 = icmp eq i32 %499, -2147483392
  br i1 %500, label %501, label %505

501:                                              ; preds = %498
  %502 = load ptr, ptr %493, align 8, !tbaa !63
  %503 = getelementptr inbounds %struct.xpvuv, ptr %502, i64 0, i32 4
  %504 = load i64, ptr %503, align 8, !tbaa !9
  br label %507

505:                                              ; preds = %498
  %506 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %493, i32 noundef 2) #21
  br label %507

507:                                              ; preds = %505, %501
  %508 = phi i64 [ %504, %501 ], [ %506, %505 ]
  %509 = icmp eq i64 %508, 33
  br i1 %509, label %510, label %531

510:                                              ; preds = %507
  %511 = load ptr, ptr %490, align 8, !tbaa !5
  %512 = getelementptr inbounds %struct.sv, ptr %511, i64 0, i32 2
  %513 = load i32, ptr %512, align 4, !tbaa !62
  br label %514

514:                                              ; preds = %510, %492
  %515 = phi i32 [ %513, %510 ], [ %495, %492 ]
  %516 = and i32 %515, 256
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %555

518:                                              ; preds = %514
  %519 = icmp eq i64 %487, %323
  br i1 %519, label %531, label %520

520:                                              ; preds = %518
  %521 = add i64 %486, -4294967296
  %522 = ashr exact i64 %521, 32
  %523 = call ptr @Perl_av_fetch(ptr noundef %307, i64 noundef %522, i32 noundef 0) #21
  %524 = icmp eq ptr %523, null
  br i1 %524, label %531, label %525

525:                                              ; preds = %520
  %526 = load ptr, ptr %523, align 8, !tbaa !5
  %527 = getelementptr inbounds %struct.sv, ptr %526, i64 0, i32 2
  %528 = load i32, ptr %527, align 4, !tbaa !62
  %529 = and i32 %528, 256
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %555

531:                                              ; preds = %525, %520, %518, %507, %489
  %532 = phi ptr [ %324, %507 ], [ %324, %518 ], [ %523, %525 ], [ null, %520 ], [ %324, %489 ]
  %533 = load ptr, ptr %291, align 8, !tbaa !138
  %534 = getelementptr inbounds i8, ptr %533, i64 1
  store ptr %534, ptr %291, align 8, !tbaa !138
  %535 = load ptr, ptr %45, align 8, !tbaa !145
  %536 = icmp eq ptr %535, %47
  br i1 %536, label %540, label %537

537:                                              ; preds = %531
  %538 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %538, i32 noundef 11) #21
  %539 = load ptr, ptr %291, align 8, !tbaa !138
  br label %540

540:                                              ; preds = %531, %537
  %541 = phi ptr [ %534, %531 ], [ %539, %537 ]
  %542 = load ptr, ptr %298, align 8, !tbaa !140
  %543 = icmp ugt ptr %541, %542
  %544 = select i1 %543, ptr %542, ptr %541
  %545 = load ptr, ptr %293, align 8, !tbaa !108
  %546 = ptrtoint ptr %544 to i64
  %547 = ptrtoint ptr %545 to i64
  %548 = sub i64 %546, %547
  %549 = load i32, ptr %287, align 8, !tbaa !98
  %550 = icmp ne i32 %549, 0
  %551 = zext i1 %550 to i32
  %552 = ptrtoint ptr %542 to i64
  %553 = sub i64 %552, %546
  %554 = getelementptr inbounds i8, ptr %545, i64 %548
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.395, i32 noundef %551, i64 noundef %548, ptr noundef %545, i32 noundef %551, i64 noundef %553, ptr noundef %554) #21
  br label %555

555:                                              ; preds = %514, %525, %540, %485
  %556 = phi ptr [ %532, %540 ], [ %324, %514 ], [ %523, %525 ], [ %324, %485 ]
  %557 = add i64 %486, 4294967296
  %558 = ashr exact i64 %557, 32
  %559 = call ptr @Perl_newSViv(i64 noundef %558) #21
  call void @Perl_av_push(ptr noundef %309, ptr noundef %559) #21
  br label %1117

560:                                              ; preds = %401
  %561 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %319, i1 noundef zeroext true, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext true, ptr noundef nonnull %7)
  %562 = icmp eq ptr %561, null
  br i1 %562, label %563, label %584

563:                                              ; preds = %560
  %564 = load ptr, ptr %298, align 8, !tbaa !140
  %565 = load ptr, ptr %293, align 8, !tbaa !108
  %566 = ptrtoint ptr %564 to i64
  %567 = ptrtoint ptr %565 to i64
  %568 = sub i64 %566, %567
  %569 = load ptr, ptr %45, align 8, !tbaa !145
  %570 = icmp eq ptr %569, %47
  br i1 %570, label %574, label %571

571:                                              ; preds = %563
  %572 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %572, i32 noundef 11) #21
  %573 = load ptr, ptr %293, align 8, !tbaa !108
  br label %574

574:                                              ; preds = %571, %563
  %575 = phi ptr [ %573, %571 ], [ %565, %563 ]
  %576 = icmp sgt i64 %568, 127
  %577 = select i1 %576, ptr @.str.182, ptr @.str.178
  %578 = select i1 %576, i64 117, i64 %568
  %579 = load i32, ptr %2, align 4, !tbaa !150
  %580 = sext i32 %579 to i64
  %581 = load i32, ptr %287, align 8, !tbaa !98
  %582 = icmp ne i32 %581, 0
  %583 = zext i1 %582 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.390, i64 noundef %580, i32 noundef %583, i64 noundef %578, ptr noundef %575, ptr noundef nonnull %577) #21
  br label %584

584:                                              ; preds = %574, %560
  %585 = load ptr, ptr %291, align 8, !tbaa !138
  %586 = getelementptr inbounds i8, ptr %585, i64 -1
  store ptr %586, ptr %291, align 8, !tbaa !138
  br label %964

587:                                              ; preds = %401
  %588 = load ptr, ptr %291, align 8, !tbaa !138
  %589 = ptrtoint ptr %588 to i64
  %590 = getelementptr inbounds i8, ptr %588, i64 1
  %591 = load i8, ptr %590, align 1, !tbaa !9
  switch i8 %591, label %636 [
    i8 61, label %592
    i8 58, label %592
    i8 46, label %592
  ]

592:                                              ; preds = %587, %587, %587
  %593 = getelementptr inbounds i8, ptr %588, i64 2
  %594 = load ptr, ptr %298, align 8, !tbaa !140
  %595 = icmp ult ptr %593, %594
  br i1 %595, label %596, label %636

596:                                              ; preds = %592
  %597 = ptrtoint ptr %594 to i64
  %598 = sub i64 %597, %589
  %599 = getelementptr i8, ptr %588, i64 %598
  br label %600

600:                                              ; preds = %608, %596
  %601 = phi ptr [ %609, %608 ], [ %593, %596 ]
  %602 = load i8, ptr %601, align 1, !tbaa !9
  %603 = zext i8 %602 to i64
  %604 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %603
  %605 = load i32, ptr %604, align 4, !tbaa !150
  %606 = and i32 %605, 16385
  %607 = icmp eq i32 %606, 16385
  br i1 %607, label %608, label %611

608:                                              ; preds = %600
  %609 = getelementptr inbounds i8, ptr %601, i64 1
  %610 = icmp eq ptr %609, %599
  br i1 %610, label %636, label %600, !llvm.loop !355

611:                                              ; preds = %600
  %612 = ptrtoint ptr %601 to i64
  %613 = sub i64 %612, %589
  %614 = icmp sgt i64 %613, 2
  br i1 %614, label %615, label %625

615:                                              ; preds = %611
  %616 = icmp eq i8 %602, %591
  br i1 %616, label %637, label %617

617:                                              ; preds = %615
  %618 = icmp eq i8 %602, 93
  br i1 %618, label %619, label %625

619:                                              ; preds = %617
  %620 = getelementptr inbounds i8, ptr %601, i64 1
  %621 = icmp ult ptr %620, %594
  br i1 %621, label %622, label %625

622:                                              ; preds = %619
  %623 = load i8, ptr %620, align 1, !tbaa !9
  %624 = icmp eq i8 %623, 41
  br i1 %624, label %625, label %637

625:                                              ; preds = %622, %619, %617, %611
  %626 = call ptr @memchr(ptr noundef %588, i32 noundef 93, i64 noundef %598) #24
  %627 = icmp ne ptr %626, null
  %628 = ptrtoint ptr %626 to i64
  %629 = sub i64 %628, %589
  %630 = icmp sgt i64 %629, 2
  %631 = and i1 %627, %630
  br i1 %631, label %632, label %636

632:                                              ; preds = %625
  %633 = getelementptr inbounds i8, ptr %626, i64 -1
  %634 = load i8, ptr %633, align 1, !tbaa !9
  %635 = icmp eq i8 %591, %634
  br i1 %635, label %637, label %636

636:                                              ; preds = %608, %592, %625, %587, %632
  store ptr %590, ptr %291, align 8, !tbaa !138
  br label %637

637:                                              ; preds = %615, %622, %636, %632
  %638 = phi i1 [ false, %636 ], [ true, %632 ], [ true, %622 ], [ true, %615 ]
  %639 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %319, i1 noundef zeroext %638, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext true, ptr noundef nonnull %7)
  %640 = icmp eq ptr %639, null
  br i1 %640, label %641, label %662

641:                                              ; preds = %637
  %642 = load ptr, ptr %298, align 8, !tbaa !140
  %643 = load ptr, ptr %293, align 8, !tbaa !108
  %644 = ptrtoint ptr %642 to i64
  %645 = ptrtoint ptr %643 to i64
  %646 = sub i64 %644, %645
  %647 = load ptr, ptr %45, align 8, !tbaa !145
  %648 = icmp eq ptr %647, %47
  br i1 %648, label %652, label %649

649:                                              ; preds = %641
  %650 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %650, i32 noundef 11) #21
  %651 = load ptr, ptr %293, align 8, !tbaa !108
  br label %652

652:                                              ; preds = %649, %641
  %653 = phi ptr [ %651, %649 ], [ %643, %641 ]
  %654 = icmp sgt i64 %646, 127
  %655 = select i1 %654, ptr @.str.182, ptr @.str.178
  %656 = select i1 %654, i64 117, i64 %646
  %657 = load i32, ptr %2, align 4, !tbaa !150
  %658 = sext i32 %657 to i64
  %659 = load i32, ptr %287, align 8, !tbaa !98
  %660 = icmp ne i32 %659, 0
  %661 = zext i1 %660 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.390, i64 noundef %658, i32 noundef %661, i64 noundef %656, ptr noundef %653, ptr noundef nonnull %655) #21
  br label %662

662:                                              ; preds = %652, %637
  br i1 %638, label %663, label %964

663:                                              ; preds = %662
  %664 = load ptr, ptr %291, align 8, !tbaa !138
  %665 = getelementptr inbounds i8, ptr %664, i64 -1
  store ptr %665, ptr %291, align 8, !tbaa !138
  br label %964

666:                                              ; preds = %401
  %667 = trunc i64 %402 to i32
  %668 = icmp sgt i32 %667, 0
  br i1 %668, label %669, label %1130

669:                                              ; preds = %666
  %670 = shl i64 %402, 32
  br label %765

671:                                              ; preds = %401
  %672 = load i32, ptr %317, align 4, !tbaa !62
  %673 = and i32 %672, 8388608
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %678, label %675

675:                                              ; preds = %671
  %676 = call i32 @Perl_mg_size(ptr noundef nonnull %309) #21
  %677 = sext i32 %676 to i64
  br label %682

678:                                              ; preds = %671
  %679 = load ptr, ptr %309, align 8, !tbaa !122
  %680 = getelementptr inbounds %struct.xpvav, ptr %679, i64 0, i32 2
  %681 = load i64, ptr %680, align 8, !tbaa !124
  br label %682

682:                                              ; preds = %675, %678
  %683 = phi i64 [ %677, %675 ], [ %681, %678 ]
  %684 = icmp slt i64 %683, 0
  br i1 %684, label %685, label %708

685:                                              ; preds = %682
  %686 = load ptr, ptr %291, align 8, !tbaa !138
  %687 = getelementptr inbounds i8, ptr %686, i64 1
  store ptr %687, ptr %291, align 8, !tbaa !138
  %688 = load ptr, ptr %45, align 8, !tbaa !145
  %689 = icmp eq ptr %688, %47
  br i1 %689, label %693, label %690

690:                                              ; preds = %685
  %691 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %691, i32 noundef 11) #21
  %692 = load ptr, ptr %291, align 8, !tbaa !138
  br label %693

693:                                              ; preds = %685, %690
  %694 = phi ptr [ %687, %685 ], [ %692, %690 ]
  %695 = load ptr, ptr %298, align 8, !tbaa !140
  %696 = icmp ugt ptr %694, %695
  %697 = select i1 %696, ptr %695, ptr %694
  %698 = load ptr, ptr %293, align 8, !tbaa !108
  %699 = ptrtoint ptr %697 to i64
  %700 = ptrtoint ptr %698 to i64
  %701 = sub i64 %699, %700
  %702 = load i32, ptr %287, align 8, !tbaa !98
  %703 = icmp ne i32 %702, 0
  %704 = zext i1 %703 to i32
  %705 = ptrtoint ptr %695 to i64
  %706 = sub i64 %705, %699
  %707 = getelementptr inbounds i8, ptr %698, i64 %701
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.396, i32 noundef %704, i64 noundef %701, ptr noundef %698, i32 noundef %704, i64 noundef %706, ptr noundef %707) #21
  br label %708

708:                                              ; preds = %693, %682
  %709 = shl i64 %402, 32
  %710 = ashr exact i64 %709, 32
  %711 = icmp sgt i64 %710, %323
  br i1 %711, label %765, label %712

712:                                              ; preds = %708
  %713 = call ptr @Perl_av_pop(ptr noundef nonnull %309) #21
  %714 = getelementptr inbounds %struct.sv, ptr %713, i64 0, i32 2
  %715 = load i32, ptr %714, align 4, !tbaa !62
  %716 = and i32 %715, 2097408
  %717 = icmp eq i32 %716, 256
  br i1 %717, label %718, label %722

718:                                              ; preds = %712
  %719 = load ptr, ptr %713, align 8, !tbaa !63
  %720 = getelementptr inbounds %struct.xpviv, ptr %719, i64 0, i32 4
  %721 = load i64, ptr %720, align 8, !tbaa !9
  br label %724

722:                                              ; preds = %712
  %723 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %713, i32 noundef 2) #21
  br label %724

724:                                              ; preds = %722, %718
  %725 = phi i64 [ %721, %718 ], [ %723, %722 ]
  %726 = getelementptr inbounds %struct.sv, ptr %713, i64 0, i32 1
  %727 = load i32, ptr %726, align 8, !tbaa !22
  %728 = icmp ugt i32 %727, 1
  br i1 %728, label %729, label %731

729:                                              ; preds = %724
  %730 = add i32 %727, -1
  store i32 %730, ptr %726, align 8, !tbaa !22
  br label %732

731:                                              ; preds = %724
  call void @Perl_sv_free2(ptr noundef nonnull %713, i32 noundef %727) #21
  br label %732

732:                                              ; preds = %729, %731
  %733 = call i64 @llvm.smax.i64(i64 %725, i64 1)
  %734 = add nsw i64 %733, -1
  %735 = call ptr @Perl_av_pop(ptr noundef %307) #21
  store ptr %735, ptr %7, align 8, !tbaa !5
  %736 = getelementptr inbounds %struct.sv, ptr %735, i64 0, i32 2
  %737 = load i32, ptr %736, align 4, !tbaa !62
  %738 = and i32 %737, 256
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %964, label %740

740:                                              ; preds = %732
  %741 = load ptr, ptr %291, align 8, !tbaa !138
  %742 = getelementptr inbounds i8, ptr %741, i64 1
  store ptr %742, ptr %291, align 8, !tbaa !138
  br label %1129

743:                                              ; preds = %401, %401, %401, %401, %401
  %744 = shl i64 %402, 32
  %745 = ashr exact i64 %744, 32
  %746 = sub nsw i64 %745, %323
  %747 = icmp slt i64 %746, 0
  %748 = icmp eq i64 %746, 1
  %749 = or i1 %747, %748
  br i1 %749, label %778, label %750

750:                                              ; preds = %743
  %751 = call ptr @Perl_av_fetch(ptr noundef %307, i64 noundef %745, i32 noundef 0) #21
  %752 = icmp eq ptr %751, null
  br i1 %752, label %778, label %753

753:                                              ; preds = %750
  %754 = load ptr, ptr %751, align 8, !tbaa !5
  %755 = getelementptr inbounds %struct.sv, ptr %754, i64 0, i32 2
  %756 = load i32, ptr %755, align 4, !tbaa !62
  %757 = and i32 %756, 256
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %759, label %778

759:                                              ; preds = %753
  %760 = icmp ult i64 %746, 2
  br i1 %760, label %761, label %765

761:                                              ; preds = %759
  %762 = call ptr @Perl_av_pop(ptr noundef %307) #21
  %763 = zext i8 %386 to i64
  %764 = call ptr @Perl_newSVuv(i64 noundef %763) #21
  call void @Perl_av_push(ptr noundef %307, ptr noundef %764) #21
  call void @Perl_av_push(ptr noundef %307, ptr noundef %762) #21
  br label %1117

765:                                              ; preds = %669, %759, %708
  %766 = phi i64 [ %670, %669 ], [ %744, %759 ], [ %709, %708 ]
  %767 = add i64 %766, -8589934592
  %768 = ashr exact i64 %767, 32
  %769 = call ptr @Perl_av_fetch(ptr noundef %307, i64 noundef %768, i32 noundef 0) #21
  %770 = icmp eq ptr %769, null
  br i1 %770, label %777, label %771

771:                                              ; preds = %765
  %772 = load ptr, ptr %769, align 8, !tbaa !5
  %773 = getelementptr inbounds %struct.sv, ptr %772, i64 0, i32 2
  %774 = load i32, ptr %773, align 4, !tbaa !62
  %775 = and i32 %774, 256
  %776 = icmp eq i32 %775, 0
  br i1 %776, label %777, label %803

777:                                              ; preds = %771, %765
  br i1 %388, label %1130, label %778

778:                                              ; preds = %777, %743, %750, %753
  %779 = phi ptr [ %390, %743 ], [ %390, %753 ], [ %769, %777 ], [ %390, %750 ]
  %780 = load ptr, ptr %291, align 8, !tbaa !138
  %781 = getelementptr inbounds i8, ptr %780, i64 1
  store ptr %781, ptr %291, align 8, !tbaa !138
  %782 = load ptr, ptr %45, align 8, !tbaa !145
  %783 = icmp eq ptr %782, %47
  br i1 %783, label %787, label %784

784:                                              ; preds = %778
  %785 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %785, i32 noundef 11) #21
  %786 = load ptr, ptr %291, align 8, !tbaa !138
  br label %787

787:                                              ; preds = %778, %784
  %788 = phi ptr [ %781, %778 ], [ %786, %784 ]
  %789 = load ptr, ptr %293, align 8, !tbaa !108
  %790 = ptrtoint ptr %788 to i64
  %791 = ptrtoint ptr %789 to i64
  %792 = sub i64 %790, %791
  %793 = load i32, ptr %287, align 8, !tbaa !98
  %794 = icmp ne i32 %793, 0
  %795 = zext i1 %794 to i32
  %796 = load ptr, ptr %298, align 8, !tbaa !140
  %797 = ptrtoint ptr %796 to i64
  %798 = sub i64 %797, %790
  %799 = getelementptr inbounds i8, ptr %789, i64 %792
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %794, ptr noundef nonnull @.str.397, ptr nonnull poison, i32 noundef %387, i32 noundef %795, i64 noundef %792, ptr noundef %789, i32 noundef %795, i64 noundef %798, ptr noundef %799)
  %800 = load ptr, ptr %779, align 8, !tbaa !5
  %801 = getelementptr inbounds %struct.sv, ptr %800, i64 0, i32 2
  %802 = load i32, ptr %801, align 4, !tbaa !62
  br label %803

803:                                              ; preds = %787, %771
  %804 = phi i32 [ %802, %787 ], [ %774, %771 ]
  %805 = phi ptr [ %800, %787 ], [ %772, %771 ]
  %806 = phi ptr [ %779, %787 ], [ %769, %771 ]
  %807 = and i32 %804, -2145386240
  %808 = icmp eq i32 %807, -2147483392
  br i1 %808, label %809, label %813

809:                                              ; preds = %803
  %810 = load ptr, ptr %805, align 8, !tbaa !63
  %811 = getelementptr inbounds %struct.xpvuv, ptr %810, i64 0, i32 4
  %812 = load i64, ptr %811, align 8, !tbaa !9
  br label %815

813:                                              ; preds = %803
  %814 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %805, i32 noundef 2) #21
  br label %815

815:                                              ; preds = %813, %809
  %816 = phi i64 [ %812, %809 ], [ %814, %813 ]
  %817 = trunc i64 %816 to i8
  switch i8 %386, label %821 [
    i8 93, label %820
    i8 38, label %822
    i8 94, label %818
    i8 124, label %818
    i8 43, label %818
    i8 45, label %818
    i8 41, label %819
  ]

818:                                              ; preds = %815, %815, %815, %815
  br label %822

819:                                              ; preds = %815
  br label %822

820:                                              ; preds = %815
  br label %822

821:                                              ; preds = %815
  br label %822

822:                                              ; preds = %815, %818, %819, %820, %821
  %823 = phi i32 [ 0, %821 ], [ 1, %820 ], [ 2, %819 ], [ 3, %818 ], [ 4, %815 ]
  switch i8 %817, label %828 [
    i8 33, label %829
    i8 38, label %824
    i8 94, label %825
    i8 124, label %825
    i8 43, label %825
    i8 45, label %825
    i8 41, label %826
    i8 93, label %827
  ]

824:                                              ; preds = %822
  br label %829

825:                                              ; preds = %822, %822, %822, %822
  br label %829

826:                                              ; preds = %822
  br label %829

827:                                              ; preds = %822
  br label %829

828:                                              ; preds = %822
  br label %829

829:                                              ; preds = %822, %824, %825, %826, %827, %828
  %830 = phi i32 [ 0, %828 ], [ 1, %827 ], [ 2, %826 ], [ 3, %825 ], [ 4, %824 ], [ 5, %822 ]
  %831 = icmp ugt i32 %823, %830
  %832 = call ptr @Perl_av_pop(ptr noundef %307) #21
  br i1 %831, label %833, label %836

833:                                              ; preds = %829
  %834 = zext i8 %386 to i64
  %835 = call ptr @Perl_newSVuv(i64 noundef %834) #21
  call void @Perl_av_push(ptr noundef %307, ptr noundef %835) #21
  call void @Perl_av_push(ptr noundef %307, ptr noundef %832) #21
  br label %1117

836:                                              ; preds = %829
  store ptr %832, ptr %8, align 8, !tbaa !5
  %837 = getelementptr inbounds %struct.sv, ptr %832, i64 0, i32 2
  %838 = load i32, ptr %837, align 4, !tbaa !62
  %839 = and i32 %838, 256
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %1129

841:                                              ; preds = %836
  %842 = call ptr @Perl_av_pop(ptr noundef %307) #21
  %843 = getelementptr inbounds %struct.sv, ptr %842, i64 0, i32 2
  %844 = load i32, ptr %843, align 4, !tbaa !62
  %845 = and i32 %844, 256
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %847, label %1129

847:                                              ; preds = %841
  %848 = sext i8 %817 to i32
  switch i32 %848, label %876 [
    i32 38, label %849
    i32 124, label %850
    i32 43, label %850
    i32 45, label %851
    i32 94, label %852
  ]

849:                                              ; preds = %847
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %842, ptr noundef nonnull %832, i1 noundef zeroext false, ptr noundef nonnull %8)
  br label %876

850:                                              ; preds = %847, %847
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %842, ptr noundef nonnull %832, i1 noundef zeroext false, ptr noundef nonnull %8)
  br label %876

851:                                              ; preds = %847
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %842, ptr noundef nonnull %832, i1 noundef zeroext true, ptr noundef nonnull %8)
  br label %876

852:                                              ; preds = %847
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #21
  store ptr null, ptr %9, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #21
  store ptr null, ptr %10, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %842, ptr noundef nonnull %832, i1 noundef zeroext false, ptr noundef nonnull %10)
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %842, ptr noundef nonnull %832, i1 noundef zeroext false, ptr noundef nonnull %9)
  %853 = load ptr, ptr %10, align 8, !tbaa !5
  %854 = load ptr, ptr %9, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %853, ptr noundef %854, i1 noundef zeroext true, ptr noundef nonnull %8)
  %855 = getelementptr inbounds %struct.sv, ptr %854, i64 0, i32 1
  %856 = load i32, ptr %855, align 8, !tbaa !22
  %857 = icmp ugt i32 %856, 1
  br i1 %857, label %858, label %860

858:                                              ; preds = %852
  %859 = add i32 %856, -1
  store i32 %859, ptr %855, align 8, !tbaa !22
  br label %861

860:                                              ; preds = %852
  call void @Perl_sv_free2(ptr noundef nonnull %854, i32 noundef %856) #21
  br label %861

861:                                              ; preds = %858, %860
  %862 = getelementptr inbounds %struct.sv, ptr %853, i64 0, i32 1
  %863 = load i32, ptr %862, align 8, !tbaa !22
  %864 = icmp ugt i32 %863, 1
  br i1 %864, label %865, label %867

865:                                              ; preds = %861
  %866 = add i32 %863, -1
  store i32 %866, ptr %862, align 8, !tbaa !22
  br label %868

867:                                              ; preds = %861
  call void @Perl_sv_free2(ptr noundef nonnull %853, i32 noundef %863) #21
  br label %868

868:                                              ; preds = %865, %867
  %869 = getelementptr inbounds %struct.sv, ptr %832, i64 0, i32 1
  %870 = load i32, ptr %869, align 8, !tbaa !22
  %871 = icmp ugt i32 %870, 1
  br i1 %871, label %872, label %874

872:                                              ; preds = %868
  %873 = add i32 %870, -1
  store i32 %873, ptr %869, align 8, !tbaa !22
  br label %875

874:                                              ; preds = %868
  call void @Perl_sv_free2(ptr noundef nonnull %832, i32 noundef %870) #21
  br label %875

875:                                              ; preds = %872, %874
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #21
  br label %876

876:                                              ; preds = %849, %850, %851, %875, %847
  %877 = getelementptr inbounds %struct.sv, ptr %842, i64 0, i32 1
  %878 = load i32, ptr %877, align 8, !tbaa !22
  %879 = icmp ugt i32 %878, 1
  br i1 %879, label %880, label %882

880:                                              ; preds = %876
  %881 = add i32 %878, -1
  store i32 %881, ptr %877, align 8, !tbaa !22
  br label %883

882:                                              ; preds = %876
  call void @Perl_sv_free2(ptr noundef nonnull %842, i32 noundef %878) #21
  br label %883

883:                                              ; preds = %880, %882
  %884 = call ptr @Perl_av_pop(ptr noundef %307) #21
  %885 = icmp eq ptr %884, null
  br i1 %885, label %893, label %886

886:                                              ; preds = %883
  %887 = getelementptr inbounds %struct.sv, ptr %884, i64 0, i32 1
  %888 = load i32, ptr %887, align 8, !tbaa !22
  %889 = icmp ugt i32 %888, 1
  br i1 %889, label %890, label %892

890:                                              ; preds = %886
  %891 = add i32 %888, -1
  store i32 %891, ptr %887, align 8, !tbaa !22
  br label %893

892:                                              ; preds = %886
  call void @Perl_sv_free2(ptr noundef nonnull %884, i32 noundef %888) #21
  br label %893

893:                                              ; preds = %883, %890, %892
  %894 = load ptr, ptr %8, align 8, !tbaa !5
  call void @Perl_av_push(ptr noundef %307, ptr noundef %894) #21
  br label %389

895:                                              ; preds = %401
  %896 = shl i64 %402, 32
  %897 = ashr exact i64 %896, 32
  %898 = call ptr @Perl_av_fetch(ptr noundef %307, i64 noundef %897, i32 noundef 0) #21
  %899 = icmp eq ptr %898, null
  br i1 %899, label %928, label %900

900:                                              ; preds = %895
  %901 = load ptr, ptr %898, align 8, !tbaa !5
  %902 = getelementptr inbounds %struct.sv, ptr %901, i64 0, i32 2
  %903 = load i32, ptr %902, align 4, !tbaa !62
  %904 = and i32 %903, 256
  %905 = icmp eq i32 %904, 0
  br i1 %905, label %928, label %906

906:                                              ; preds = %900
  %907 = and i32 %903, -2145386240
  %908 = icmp eq i32 %907, -2147483392
  br i1 %908, label %909, label %913

909:                                              ; preds = %906
  %910 = load ptr, ptr %901, align 8, !tbaa !63
  %911 = getelementptr inbounds %struct.xpvuv, ptr %910, i64 0, i32 4
  %912 = load i64, ptr %911, align 8, !tbaa !9
  br label %915

913:                                              ; preds = %906
  %914 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %901, i32 noundef 2) #21
  br label %915

915:                                              ; preds = %913, %909
  %916 = phi i64 [ %912, %909 ], [ %914, %913 ]
  %917 = icmp eq i64 %916, 33
  br i1 %917, label %918, label %928

918:                                              ; preds = %915
  %919 = call ptr @Perl_av_pop(ptr noundef %307) #21
  %920 = icmp eq ptr %919, null
  br i1 %920, label %1117, label %921

921:                                              ; preds = %918
  %922 = getelementptr inbounds %struct.sv, ptr %919, i64 0, i32 1
  %923 = load i32, ptr %922, align 8, !tbaa !22
  %924 = icmp ugt i32 %923, 1
  br i1 %924, label %925, label %927

925:                                              ; preds = %921
  %926 = add i32 %923, -1
  store i32 %926, ptr %922, align 8, !tbaa !22
  br label %1117

927:                                              ; preds = %921
  call void @Perl_sv_free2(ptr noundef nonnull %919, i32 noundef %923) #21
  br label %1117

928:                                              ; preds = %915, %900, %895
  %929 = call ptr @Perl_newSVuv(i64 noundef 33) #21
  call void @Perl_av_push(ptr noundef %307, ptr noundef %929) #21
  br label %1117

930:                                              ; preds = %401
  %931 = load i32, ptr %287, align 8, !tbaa !98
  %932 = icmp eq i32 %931, 0
  %933 = load ptr, ptr %291, align 8, !tbaa !138
  br i1 %932, label %940, label %934

934:                                              ; preds = %930
  %935 = load i8, ptr %933, align 1, !tbaa !9
  %936 = zext i8 %935 to i64
  %937 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %936
  %938 = load i8, ptr %937, align 1, !tbaa !9
  %939 = zext i8 %938 to i64
  br label %940

940:                                              ; preds = %930, %934
  %941 = phi i64 [ %939, %934 ], [ 1, %930 ]
  %942 = getelementptr inbounds i8, ptr %933, i64 %941
  store ptr %942, ptr %291, align 8, !tbaa !138
  %943 = load ptr, ptr %45, align 8, !tbaa !145
  %944 = icmp eq ptr %943, %47
  br i1 %944, label %949, label %945

945:                                              ; preds = %940
  %946 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %946, i32 noundef 11) #21
  %947 = load ptr, ptr %291, align 8, !tbaa !138
  %948 = load i32, ptr %287, align 8, !tbaa !98
  br label %949

949:                                              ; preds = %940, %945
  %950 = phi i32 [ %931, %940 ], [ %948, %945 ]
  %951 = phi ptr [ %942, %940 ], [ %947, %945 ]
  %952 = load ptr, ptr %298, align 8, !tbaa !140
  %953 = icmp ugt ptr %951, %952
  %954 = select i1 %953, ptr %952, ptr %951
  %955 = load ptr, ptr %293, align 8, !tbaa !108
  %956 = ptrtoint ptr %954 to i64
  %957 = ptrtoint ptr %955 to i64
  %958 = sub i64 %956, %957
  %959 = icmp ne i32 %950, 0
  %960 = zext i1 %959 to i32
  %961 = ptrtoint ptr %952 to i64
  %962 = sub i64 %961, %956
  %963 = getelementptr inbounds i8, ptr %955, i64 %958
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.398, i32 noundef %960, i64 noundef %958, ptr noundef %955, i32 noundef %960, i64 noundef %962, ptr noundef %963) #21
  br label %964

964:                                              ; preds = %662, %663, %584, %949, %732, %479
  %965 = phi ptr [ %324, %479 ], [ %324, %584 ], [ %390, %732 ], [ %324, %949 ], [ %324, %663 ], [ %324, %662 ]
  %966 = phi i64 [ %323, %479 ], [ %323, %584 ], [ %734, %732 ], [ %323, %949 ], [ %323, %663 ], [ %323, %662 ]
  %967 = phi i8 [ 40, %479 ], [ 92, %584 ], [ 41, %732 ], [ %386, %949 ], [ 91, %663 ], [ 91, %662 ]
  br label %968

968:                                              ; preds = %1064, %964
  %969 = phi i8 [ %967, %964 ], [ %1003, %1064 ]
  %970 = load i32, ptr %316, align 4, !tbaa !62
  %971 = and i32 %970, 8388608
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %976, label %973

973:                                              ; preds = %968
  %974 = call i32 @Perl_mg_size(ptr noundef nonnull %307) #21
  %975 = zext i32 %974 to i64
  br label %980

976:                                              ; preds = %968
  %977 = load ptr, ptr %307, align 8, !tbaa !122
  %978 = getelementptr inbounds %struct.xpvav, ptr %977, i64 0, i32 2
  %979 = load i64, ptr %978, align 8, !tbaa !124
  br label %980

980:                                              ; preds = %973, %976
  %981 = phi i64 [ %975, %973 ], [ %979, %976 ]
  %982 = shl i64 %981, 32
  %983 = ashr exact i64 %982, 32
  %984 = icmp slt i64 %983, %966
  br i1 %984, label %1114, label %985

985:                                              ; preds = %980
  %986 = call ptr @Perl_av_fetch(ptr noundef nonnull %307, i64 noundef %983, i32 noundef 0) #21
  %987 = load ptr, ptr %986, align 8, !tbaa !5
  %988 = getelementptr inbounds %struct.sv, ptr %987, i64 0, i32 2
  %989 = load i32, ptr %988, align 4, !tbaa !62
  %990 = and i32 %989, 256
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %1067, label %992

992:                                              ; preds = %985
  %993 = and i32 %989, -2145386240
  %994 = icmp eq i32 %993, -2147483392
  br i1 %994, label %995, label %999

995:                                              ; preds = %992
  %996 = load ptr, ptr %987, align 8, !tbaa !63
  %997 = getelementptr inbounds %struct.xpvuv, ptr %996, i64 0, i32 4
  %998 = load i64, ptr %997, align 8, !tbaa !9
  br label %1001

999:                                              ; preds = %992
  %1000 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %987, i32 noundef 2) #21
  br label %1001

1001:                                             ; preds = %999, %995
  %1002 = phi i64 [ %998, %995 ], [ %1000, %999 ]
  %1003 = trunc i64 %1002 to i8
  %1004 = trunc i64 %1002 to i32
  %1005 = and i32 %1004, 255
  %1006 = icmp eq i32 %1005, 33
  br i1 %1006, label %1035, label %1007

1007:                                             ; preds = %1001
  %1008 = load ptr, ptr %7, align 8, !tbaa !5
  %1009 = icmp eq ptr %1008, null
  br i1 %1009, label %1017, label %1010

1010:                                             ; preds = %1007
  %1011 = getelementptr inbounds %struct.sv, ptr %1008, i64 0, i32 1
  %1012 = load i32, ptr %1011, align 8, !tbaa !22
  %1013 = icmp ugt i32 %1012, 1
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %1010
  %1015 = add i32 %1012, -1
  store i32 %1015, ptr %1011, align 8, !tbaa !22
  br label %1017

1016:                                             ; preds = %1010
  call void @Perl_sv_free2(ptr noundef nonnull %1008, i32 noundef %1012) #21
  br label %1017

1017:                                             ; preds = %1007, %1014, %1016
  %1018 = load ptr, ptr %45, align 8, !tbaa !145
  %1019 = icmp eq ptr %1018, %47
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1017
  %1021 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1021, i32 noundef 11) #21
  br label %1022

1022:                                             ; preds = %1017, %1020
  %1023 = load ptr, ptr %291, align 8, !tbaa !138
  %1024 = load ptr, ptr %293, align 8, !tbaa !108
  %1025 = ptrtoint ptr %1023 to i64
  %1026 = ptrtoint ptr %1024 to i64
  %1027 = sub i64 %1025, %1026
  %1028 = load i32, ptr %287, align 8, !tbaa !98
  %1029 = icmp ne i32 %1028, 0
  %1030 = zext i1 %1029 to i32
  %1031 = load ptr, ptr %298, align 8, !tbaa !140
  %1032 = ptrtoint ptr %1031 to i64
  %1033 = sub i64 %1032, %1025
  %1034 = getelementptr inbounds i8, ptr %1024, i64 %1027
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1029, ptr noundef nonnull @.str.397, ptr nonnull poison, i32 noundef %1005, i32 noundef %1030, i64 noundef %1027, ptr noundef %1024, i32 noundef %1030, i64 noundef %1033, ptr noundef %1034)
  br label %1035

1035:                                             ; preds = %1022, %1001
  %1036 = load ptr, ptr %7, align 8, !tbaa !5
  %1037 = load ptr, ptr %1036, align 8, !tbaa !63
  %1038 = getelementptr inbounds %struct.xpv, ptr %1037, i64 0, i32 2
  %1039 = load i64, ptr %1038, align 8, !tbaa !72
  %1040 = icmp eq i64 %1039, 0
  br i1 %1040, label %1047, label %1041

1041:                                             ; preds = %1035
  %1042 = lshr i64 %1039, 3
  %1043 = getelementptr inbounds %struct.xpvinvlist, ptr %1037, i64 0, i32 6
  %1044 = load i8, ptr %1043, align 1, !tbaa !57, !range !59, !noundef !60
  %1045 = zext i8 %1044 to i64
  %1046 = icmp eq i64 %1042, %1045
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1041, %1035
  call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %1036, i64 noundef 0, i64 noundef -1)
  br label %1050

1048:                                             ; preds = %1041
  %1049 = xor i8 %1044, 1
  store i8 %1049, ptr %1043, align 1, !tbaa !57
  br label %1050

1050:                                             ; preds = %1047, %1048
  %1051 = call ptr @Perl_av_pop(ptr noundef nonnull %307) #21
  %1052 = icmp eq ptr %1051, null
  br i1 %1052, label %1060, label %1053

1053:                                             ; preds = %1050
  %1054 = getelementptr inbounds %struct.sv, ptr %1051, i64 0, i32 1
  %1055 = load i32, ptr %1054, align 8, !tbaa !22
  %1056 = icmp ugt i32 %1055, 1
  br i1 %1056, label %1057, label %1059

1057:                                             ; preds = %1053
  %1058 = add i32 %1055, -1
  store i32 %1058, ptr %1054, align 8, !tbaa !22
  br label %1060

1059:                                             ; preds = %1053
  call void @Perl_sv_free2(ptr noundef nonnull %1051, i32 noundef %1055) #21
  br label %1060

1060:                                             ; preds = %1050, %1057, %1059
  %1061 = load i32, ptr %316, align 4, !tbaa !62
  %1062 = and i32 %1061, 8388608
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1064, label %1065

1064:                                             ; preds = %1060, %1065
  br label %968

1065:                                             ; preds = %1060
  %1066 = call i32 @Perl_mg_size(ptr noundef nonnull %307) #21
  br label %1064

1067:                                             ; preds = %985
  %1068 = icmp eq i64 %983, %966
  %1069 = icmp ne i8 %969, 41
  %1070 = select i1 %1068, i1 %1069, i1 false
  br i1 %1070, label %1083, label %1071

1071:                                             ; preds = %1067
  br i1 %1068, label %1114, label %1072

1072:                                             ; preds = %1071
  %1073 = add i64 %982, -4294967296
  %1074 = ashr exact i64 %1073, 32
  %1075 = call ptr @Perl_av_fetch(ptr noundef nonnull %307, i64 noundef %1074, i32 noundef 0) #21
  %1076 = icmp eq ptr %1075, null
  br i1 %1076, label %1083, label %1077

1077:                                             ; preds = %1072
  %1078 = load ptr, ptr %1075, align 8, !tbaa !5
  %1079 = getelementptr inbounds %struct.sv, ptr %1078, i64 0, i32 2
  %1080 = load i32, ptr %1079, align 4, !tbaa !62
  %1081 = and i32 %1080, 256
  %1082 = icmp eq i32 %1081, 0
  br i1 %1082, label %1083, label %1114

1083:                                             ; preds = %1067, %1077, %1072
  %1084 = phi ptr [ %965, %1067 ], [ %1075, %1077 ], [ null, %1072 ]
  %1085 = load ptr, ptr %7, align 8, !tbaa !5
  %1086 = icmp eq ptr %1085, null
  br i1 %1086, label %1094, label %1087

1087:                                             ; preds = %1083
  %1088 = getelementptr inbounds %struct.sv, ptr %1085, i64 0, i32 1
  %1089 = load i32, ptr %1088, align 8, !tbaa !22
  %1090 = icmp ugt i32 %1089, 1
  br i1 %1090, label %1091, label %1093

1091:                                             ; preds = %1087
  %1092 = add i32 %1089, -1
  store i32 %1092, ptr %1088, align 8, !tbaa !22
  br label %1094

1093:                                             ; preds = %1087
  call void @Perl_sv_free2(ptr noundef nonnull %1085, i32 noundef %1089) #21
  br label %1094

1094:                                             ; preds = %1083, %1091, %1093
  %1095 = load ptr, ptr %45, align 8, !tbaa !145
  %1096 = icmp eq ptr %1095, %47
  br i1 %1096, label %1099, label %1097

1097:                                             ; preds = %1094
  %1098 = load ptr, ptr %318, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1098, i32 noundef 11) #21
  br label %1099

1099:                                             ; preds = %1094, %1097
  %1100 = load ptr, ptr %291, align 8, !tbaa !138
  %1101 = load ptr, ptr %298, align 8, !tbaa !140
  %1102 = icmp ugt ptr %1100, %1101
  %1103 = select i1 %1102, ptr %1101, ptr %1100
  %1104 = load ptr, ptr %293, align 8, !tbaa !108
  %1105 = ptrtoint ptr %1103 to i64
  %1106 = ptrtoint ptr %1104 to i64
  %1107 = sub i64 %1105, %1106
  %1108 = load i32, ptr %287, align 8, !tbaa !98
  %1109 = icmp ne i32 %1108, 0
  %1110 = zext i1 %1109 to i32
  %1111 = ptrtoint ptr %1101 to i64
  %1112 = sub i64 %1111, %1105
  %1113 = getelementptr inbounds i8, ptr %1104, i64 %1107
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.399, i32 noundef %1110, i64 noundef %1107, ptr noundef %1104, i32 noundef %1110, i64 noundef %1112, ptr noundef %1113) #21
  br label %1114

1114:                                             ; preds = %980, %1099, %1077, %1071
  %1115 = phi ptr [ %1084, %1099 ], [ %1075, %1077 ], [ %965, %1071 ], [ %965, %980 ]
  %1116 = load ptr, ptr %7, align 8, !tbaa !5
  call void @Perl_av_push(ptr noundef nonnull %307, ptr noundef %1116) #21
  br label %1117

1117:                                             ; preds = %927, %925, %918, %928, %1114, %833, %761, %555
  %1118 = phi ptr [ %1115, %1114 ], [ %324, %928 ], [ %806, %833 ], [ %390, %761 ], [ %556, %555 ], [ %324, %918 ], [ %324, %925 ], [ %324, %927 ]
  %1119 = phi i64 [ %966, %1114 ], [ %323, %928 ], [ %323, %833 ], [ %323, %761 ], [ %558, %555 ], [ %323, %918 ], [ %323, %925 ], [ %323, %927 ]
  %1120 = load i32, ptr %287, align 8, !tbaa !98
  %1121 = icmp eq i32 %1120, 0
  %1122 = load ptr, ptr %291, align 8, !tbaa !138
  br i1 %1121, label %1131, label %1123

1123:                                             ; preds = %1117
  %1124 = load i8, ptr %1122, align 1, !tbaa !9
  %1125 = zext i8 %1124 to i64
  %1126 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1125
  %1127 = load i8, ptr %1126, align 1, !tbaa !9
  %1128 = zext i8 %1127 to i64
  br label %1131

1129:                                             ; preds = %836, %841, %740
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  br label %1216

1130:                                             ; preds = %666, %777
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  br label %1136

1131:                                             ; preds = %1123, %1117
  %1132 = phi i64 [ %1128, %1123 ], [ 1, %1117 ]
  %1133 = getelementptr inbounds i8, ptr %1122, i64 %1132
  store ptr %1133, ptr %291, align 8, !tbaa !138
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  %1134 = load ptr, ptr %298, align 8, !tbaa !140
  %1135 = icmp ult ptr %1133, %1134
  br i1 %1135, label %320, label %1136

1136:                                             ; preds = %1131, %286, %1130
  %1137 = getelementptr inbounds %struct.sv, ptr %309, i64 0, i32 2
  %1138 = load i32, ptr %1137, align 4, !tbaa !62
  %1139 = and i32 %1138, 8388608
  %1140 = icmp eq i32 %1139, 0
  br i1 %1140, label %1144, label %1141

1141:                                             ; preds = %1136
  %1142 = call i32 @Perl_mg_size(ptr noundef nonnull %309) #21
  %1143 = sext i32 %1142 to i64
  br label %1148

1144:                                             ; preds = %1136
  %1145 = load ptr, ptr %309, align 8, !tbaa !122
  %1146 = getelementptr inbounds %struct.xpvav, ptr %1145, i64 0, i32 2
  %1147 = load i64, ptr %1146, align 8, !tbaa !124
  br label %1148

1148:                                             ; preds = %1141, %1144
  %1149 = phi i64 [ %1143, %1141 ], [ %1147, %1144 ]
  %1150 = icmp sgt i64 %1149, -1
  br i1 %1150, label %1151, label %1172

1151:                                             ; preds = %1148
  %1152 = load ptr, ptr %45, align 8, !tbaa !145
  %1153 = icmp eq ptr %1152, %47
  br i1 %1153, label %1157, label %1154

1154:                                             ; preds = %1151
  %1155 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1156 = load ptr, ptr %1155, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1156, i32 noundef 11) #21
  br label %1157

1157:                                             ; preds = %1151, %1154
  %1158 = load ptr, ptr %291, align 8, !tbaa !138
  %1159 = load ptr, ptr %298, align 8, !tbaa !140
  %1160 = icmp ugt ptr %1158, %1159
  %1161 = select i1 %1160, ptr %1159, ptr %1158
  %1162 = load ptr, ptr %293, align 8, !tbaa !108
  %1163 = ptrtoint ptr %1161 to i64
  %1164 = ptrtoint ptr %1162 to i64
  %1165 = sub i64 %1163, %1164
  %1166 = load i32, ptr %287, align 8, !tbaa !98
  %1167 = icmp ne i32 %1166, 0
  %1168 = zext i1 %1167 to i32
  %1169 = ptrtoint ptr %1159 to i64
  %1170 = sub i64 %1169, %1163
  %1171 = getelementptr inbounds i8, ptr %1162, i64 %1165
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.265, i32 noundef %1168, i64 noundef %1165, ptr noundef %1162, i32 noundef %1168, i64 noundef %1170, ptr noundef %1171) #21
  br label %1172

1172:                                             ; preds = %1157, %1148
  %1173 = getelementptr inbounds %struct.sv, ptr %307, i64 0, i32 2
  %1174 = load i32, ptr %1173, align 4, !tbaa !62
  %1175 = and i32 %1174, 8388608
  %1176 = icmp eq i32 %1175, 0
  br i1 %1176, label %1180, label %1177

1177:                                             ; preds = %1172
  %1178 = call i32 @Perl_mg_size(ptr noundef nonnull %307) #21
  %1179 = sext i32 %1178 to i64
  br label %1184

1180:                                             ; preds = %1172
  %1181 = load ptr, ptr %307, align 8, !tbaa !122
  %1182 = getelementptr inbounds %struct.xpvav, ptr %1181, i64 0, i32 2
  %1183 = load i64, ptr %1182, align 8, !tbaa !124
  br label %1184

1184:                                             ; preds = %1177, %1180
  %1185 = phi i64 [ %1179, %1177 ], [ %1183, %1180 ]
  %1186 = icmp slt i64 %1185, 0
  br i1 %1186, label %1216, label %1187

1187:                                             ; preds = %1184
  %1188 = call ptr @Perl_av_pop(ptr noundef nonnull %307) #21
  %1189 = icmp eq ptr %1188, null
  br i1 %1189, label %1216, label %1190

1190:                                             ; preds = %1187
  %1191 = getelementptr inbounds %struct.sv, ptr %1188, i64 0, i32 2
  %1192 = load i32, ptr %1191, align 4, !tbaa !62
  %1193 = and i32 %1192, 511
  %1194 = icmp eq i32 %1193, 4
  br i1 %1194, label %1195, label %1209

1195:                                             ; preds = %1190
  %1196 = load i32, ptr %1173, align 4, !tbaa !62
  %1197 = and i32 %1196, 8388608
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1202, label %1199

1199:                                             ; preds = %1195
  %1200 = call i32 @Perl_mg_size(ptr noundef nonnull %307) #21
  %1201 = sext i32 %1200 to i64
  br label %1206

1202:                                             ; preds = %1195
  %1203 = load ptr, ptr %307, align 8, !tbaa !122
  %1204 = getelementptr inbounds %struct.xpvav, ptr %1203, i64 0, i32 2
  %1205 = load i64, ptr %1204, align 8, !tbaa !124
  br label %1206

1206:                                             ; preds = %1199, %1202
  %1207 = phi i64 [ %1201, %1199 ], [ %1205, %1202 ]
  %1208 = icmp sgt i64 %1207, -1
  br i1 %1208, label %1209, label %1238

1209:                                             ; preds = %1206, %1190
  %1210 = getelementptr inbounds %struct.sv, ptr %1188, i64 0, i32 1
  %1211 = load i32, ptr %1210, align 8, !tbaa !22
  %1212 = icmp ugt i32 %1211, 1
  br i1 %1212, label %1213, label %1215

1213:                                             ; preds = %1209
  %1214 = add i32 %1211, -1
  store i32 %1214, ptr %1210, align 8, !tbaa !22
  br label %1216

1215:                                             ; preds = %1209
  call void @Perl_sv_free2(ptr noundef nonnull %1188, i32 noundef %1211) #21
  br label %1216

1216:                                             ; preds = %1129, %1187, %1184, %1213, %1215
  %1217 = phi ptr [ %1188, %1213 ], [ %1188, %1215 ], [ null, %1184 ], [ null, %1187 ], [ null, %1129 ]
  %1218 = load ptr, ptr %45, align 8, !tbaa !145
  %1219 = icmp eq ptr %1218, %47
  br i1 %1219, label %1223, label %1220

1220:                                             ; preds = %1216
  %1221 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1222 = load ptr, ptr %1221, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1222, i32 noundef 11) #21
  br label %1223

1223:                                             ; preds = %1216, %1220
  %1224 = load ptr, ptr %291, align 8, !tbaa !138
  %1225 = load ptr, ptr %298, align 8, !tbaa !140
  %1226 = icmp ugt ptr %1224, %1225
  %1227 = select i1 %1226, ptr %1225, ptr %1224
  %1228 = load ptr, ptr %293, align 8, !tbaa !108
  %1229 = ptrtoint ptr %1227 to i64
  %1230 = ptrtoint ptr %1228 to i64
  %1231 = sub i64 %1229, %1230
  %1232 = load i32, ptr %287, align 8, !tbaa !98
  %1233 = icmp ne i32 %1232, 0
  %1234 = zext i1 %1233 to i32
  %1235 = ptrtoint ptr %1225 to i64
  %1236 = sub i64 %1235, %1229
  %1237 = getelementptr inbounds i8, ptr %1228, i64 %1231
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.400, i32 noundef %1234, i64 noundef %1231, ptr noundef %1228, i32 noundef %1234, i64 noundef %1236, ptr noundef %1237) #21
  br label %1238

1238:                                             ; preds = %1223, %1206
  %1239 = phi ptr [ %1217, %1223 ], [ %1188, %1206 ]
  %1240 = icmp eq ptr %1, null
  br i1 %1240, label %1242, label %1241

1241:                                             ; preds = %1238
  store ptr %1239, ptr %1, align 8, !tbaa !5
  br label %1355

1242:                                             ; preds = %1238
  %1243 = load ptr, ptr %1239, align 8, !tbaa !63
  %1244 = getelementptr inbounds %struct.xpvinvlist, ptr %1243, i64 0, i32 5
  store i64 0, ptr %1244, align 8, !tbaa !71
  %1245 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  %1246 = load ptr, ptr %1239, align 8, !tbaa !63
  %1247 = getelementptr inbounds %struct.xpvinvlist, ptr %1246, i64 0, i32 5
  %1248 = getelementptr inbounds %struct.xpv, ptr %1246, i64 0, i32 2
  %1249 = load i64, ptr %1248, align 8, !tbaa !72
  %1250 = icmp eq i64 %1249, 0
  br i1 %1250, label %1287, label %1251

1251:                                             ; preds = %1242
  %1252 = getelementptr i8, ptr %1239, i64 16
  br label %1253

1253:                                             ; preds = %1251, %1281
  %1254 = phi i64 [ %1249, %1251 ], [ %1285, %1281 ]
  %1255 = phi ptr [ %1247, %1251 ], [ %1283, %1281 ]
  %1256 = phi ptr [ %1246, %1251 ], [ %1282, %1281 ]
  %1257 = lshr i64 %1254, 3
  %1258 = getelementptr %struct.xpvinvlist, ptr %1256, i64 0, i32 6
  %1259 = load i8, ptr %1258, align 1, !tbaa !57, !range !59, !noundef !60
  %1260 = zext i8 %1259 to i64
  %1261 = sub nsw i64 %1257, %1260
  %1262 = load i64, ptr %1255, align 8, !tbaa !71
  %1263 = icmp ult i64 %1262, %1261
  br i1 %1263, label %1264, label %1287

1264:                                             ; preds = %1253
  %1265 = load ptr, ptr %1252, align 8, !tbaa !9
  %1266 = getelementptr inbounds i64, ptr %1265, i64 %1260
  %1267 = add nuw i64 %1262, 1
  store i64 %1267, ptr %1255, align 8, !tbaa !71
  %1268 = getelementptr inbounds i64, ptr %1266, i64 %1262
  %1269 = load i64, ptr %1268, align 8, !tbaa !71
  %1270 = icmp ult i64 %1267, %1261
  br i1 %1270, label %1271, label %1276

1271:                                             ; preds = %1264
  %1272 = add nuw i64 %1262, 2
  store i64 %1272, ptr %1255, align 8, !tbaa !71
  %1273 = getelementptr inbounds i64, ptr %1266, i64 %1267
  %1274 = load i64, ptr %1273, align 8, !tbaa !71
  %1275 = add i64 %1274, -1
  br label %1276

1276:                                             ; preds = %1271, %1264
  %1277 = phi i64 [ -1, %1264 ], [ %1275, %1271 ]
  %1278 = icmp eq i64 %1269, %1277
  br i1 %1278, label %1279, label %1280

1279:                                             ; preds = %1276
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1245, ptr noundef nonnull @.str.332, i64 noundef %1269) #21
  br label %1281

1280:                                             ; preds = %1276
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1245, ptr noundef nonnull @.str.401, i64 noundef %1269, i64 noundef %1277) #21
  br label %1281

1281:                                             ; preds = %1280, %1279
  %1282 = load ptr, ptr %1239, align 8, !tbaa !63
  %1283 = getelementptr inbounds %struct.xpvinvlist, ptr %1282, i64 0, i32 5
  %1284 = getelementptr inbounds %struct.xpv, ptr %1282, i64 0, i32 2
  %1285 = load i64, ptr %1284, align 8, !tbaa !72
  %1286 = icmp eq i64 %1285, 0
  br i1 %1286, label %1287, label %1253, !llvm.loop !356

1287:                                             ; preds = %1281, %1253, %1242
  %1288 = phi ptr [ %1247, %1242 ], [ %1255, %1253 ], [ %1283, %1281 ]
  store i64 -1, ptr %1288, align 8, !tbaa !71
  %1289 = load ptr, ptr %291, align 8, !tbaa !138
  %1290 = getelementptr inbounds %struct.sv, ptr %1245, i64 0, i32 2
  %1291 = load i32, ptr %1290, align 4, !tbaa !62
  %1292 = and i32 %1291, 2098176
  %1293 = icmp eq i32 %1292, 1024
  br i1 %1293, label %1294, label %1300

1294:                                             ; preds = %1287
  %1295 = load ptr, ptr %1245, align 8, !tbaa !63
  %1296 = getelementptr inbounds %struct.xpv, ptr %1295, i64 0, i32 2
  %1297 = load i64, ptr %1296, align 8, !tbaa !72
  store i64 %1297, ptr %5, align 8, !tbaa !71
  %1298 = getelementptr inbounds %struct.sv, ptr %1245, i64 0, i32 3
  %1299 = load ptr, ptr %1298, align 8, !tbaa !9
  br label %1303

1300:                                             ; preds = %1287
  %1301 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1245, ptr noundef nonnull %5, i32 noundef 2) #21
  %1302 = load i64, ptr %5, align 8, !tbaa !71
  br label %1303

1303:                                             ; preds = %1300, %1294
  %1304 = phi i64 [ %1297, %1294 ], [ %1302, %1300 ]
  %1305 = phi ptr [ %1299, %1294 ], [ %1301, %1300 ]
  store ptr %1305, ptr %291, align 8, !tbaa !138
  %1306 = load ptr, ptr %298, align 8, !tbaa !140
  %1307 = getelementptr inbounds i8, ptr %1305, i64 %1304
  store ptr %1307, ptr %298, align 8, !tbaa !140
  %1308 = load i32, ptr %0, align 8, !tbaa !109
  %1309 = and i32 %1308, -5
  store i32 %1309, ptr %0, align 8, !tbaa !109
  %1310 = add i32 %3, 1
  %1311 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %1310, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext false, ptr noundef null)
  %1312 = icmp eq ptr %1311, null
  br i1 %1312, label %1313, label %1334

1313:                                             ; preds = %1303
  %1314 = load ptr, ptr %298, align 8, !tbaa !140
  %1315 = load ptr, ptr %293, align 8, !tbaa !108
  %1316 = ptrtoint ptr %1314 to i64
  %1317 = ptrtoint ptr %1315 to i64
  %1318 = sub i64 %1316, %1317
  %1319 = load ptr, ptr %45, align 8, !tbaa !145
  %1320 = icmp eq ptr %1319, %47
  br i1 %1320, label %1325, label %1321

1321:                                             ; preds = %1313
  %1322 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1323 = load ptr, ptr %1322, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1323, i32 noundef 11) #21
  %1324 = load ptr, ptr %293, align 8, !tbaa !108
  br label %1325

1325:                                             ; preds = %1321, %1313
  %1326 = phi ptr [ %1324, %1321 ], [ %1315, %1313 ]
  %1327 = icmp sgt i64 %1318, 127
  %1328 = select i1 %1327, ptr @.str.182, ptr @.str.178
  %1329 = select i1 %1327, i64 117, i64 %1318
  %1330 = ptrtoint ptr %2 to i64
  %1331 = load i32, ptr %287, align 8, !tbaa !98
  %1332 = icmp ne i32 %1331, 0
  %1333 = zext i1 %1332 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.390, i64 noundef %1330, i32 noundef %1333, i64 noundef %1329, ptr noundef %1326, ptr noundef nonnull %1328) #21
  br label %1334

1334:                                             ; preds = %1325, %1303
  br i1 %13, label %1338, label %1335

1335:                                             ; preds = %1334
  %1336 = load i32, ptr %0, align 8, !tbaa !109
  %1337 = or i32 %1336, 4
  store i32 %1337, ptr %0, align 8, !tbaa !109
  br label %1338

1338:                                             ; preds = %1335, %1334
  %1339 = getelementptr inbounds i8, ptr %1289, i64 1
  store ptr %1339, ptr %291, align 8, !tbaa !138
  store ptr %1306, ptr %298, align 8, !tbaa !140
  %1340 = getelementptr inbounds %struct.sv, ptr %1239, i64 0, i32 1
  %1341 = load i32, ptr %1340, align 8, !tbaa !22
  %1342 = icmp ugt i32 %1341, 1
  br i1 %1342, label %1343, label %1345

1343:                                             ; preds = %1338
  %1344 = add i32 %1341, -1
  store i32 %1344, ptr %1340, align 8, !tbaa !22
  br label %1346

1345:                                             ; preds = %1338
  call void @Perl_sv_free2(ptr noundef nonnull %1239, i32 noundef %1341) #21
  br label %1346

1346:                                             ; preds = %1343, %1345
  %1347 = getelementptr inbounds %struct.sv, ptr %1245, i64 0, i32 1
  %1348 = load i32, ptr %1347, align 8, !tbaa !22
  %1349 = icmp ugt i32 %1348, 1
  br i1 %1349, label %1350, label %1352

1350:                                             ; preds = %1346
  %1351 = add i32 %1348, -1
  store i32 %1351, ptr %1347, align 8, !tbaa !22
  br label %1353

1352:                                             ; preds = %1346
  call void @Perl_sv_free2(ptr noundef nonnull %1245, i32 noundef %1348) #21
  br label %1353

1353:                                             ; preds = %1350, %1352
  %1354 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %1355

1355:                                             ; preds = %281, %1353, %1241
  %1356 = phi ptr [ null, %1241 ], [ %1311, %1353 ], [ %232, %281 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  ret ptr %1356
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_parse_lparen_question_flags(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #21
  store i32 0, ptr %2, align 4, !tbaa !150
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #21
  store i32 0, ptr %3, align 4, !tbaa !150
  %4 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !138
  %6 = getelementptr inbounds i8, ptr %5, i64 -1
  %7 = load i8, ptr %5, align 1, !tbaa !9
  %8 = icmp eq i8 %7, 94
  %9 = load i32, ptr %0, align 8, !tbaa !109
  br i1 %8, label %10, label %24

10:                                               ; preds = %1
  %11 = getelementptr inbounds i8, ptr %5, i64 1
  store ptr %11, ptr %4, align 8, !tbaa !138
  %12 = and i32 %9, -944
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %14 = load i32, ptr %13, align 8, !tbaa !98
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  %18 = load i32, ptr %17, align 8, !tbaa !99
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i32 0, i32 256
  br label %21

21:                                               ; preds = %16, %10
  %22 = phi i32 [ 256, %10 ], [ %20, %16 ]
  %23 = or i32 %22, %12
  store i32 %23, ptr %0, align 4, !tbaa !150
  br label %24

24:                                               ; preds = %21, %1
  %25 = phi ptr [ %11, %21 ], [ %5, %1 ]
  %26 = phi i32 [ %23, %21 ], [ %9, %1 ]
  %27 = lshr i32 %26, 7
  %28 = and i32 %27, 7
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %32 = load i32, ptr %31, align 8, !tbaa !98
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  %36 = load i32, ptr %35, align 8, !tbaa !99
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %34, %30
  br label %39

39:                                               ; preds = %38, %34, %24
  %40 = phi i32 [ 2, %38 ], [ 0, %34 ], [ %28, %24 ]
  %41 = load i8, ptr %25, align 1, !tbaa !9
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %344, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %45 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %47 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %48 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %49 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  %50 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %51 = ptrtoint ptr %6 to i64
  br label %52

52:                                               ; preds = %43, %334
  %53 = phi i8 [ %41, %43 ], [ %342, %334 ]
  %54 = phi ptr [ %25, %43 ], [ %341, %334 ]
  %55 = phi i32 [ 0, %43 ], [ %339, %334 ]
  %56 = phi ptr [ %2, %43 ], [ %338, %334 ]
  %57 = phi i8 [ 0, %43 ], [ %337, %334 ]
  %58 = phi i32 [ %40, %43 ], [ %336, %334 ]
  %59 = phi i32 [ 0, %43 ], [ %335, %334 ]
  %60 = sext i8 %53 to i32
  switch i32 %60, label %297 [
    i32 105, label %61
    i32 109, label %64
    i32 115, label %67
    i32 120, label %70
    i32 110, label %74
    i32 108, label %77
    i32 117, label %81
    i32 97, label %85
    i32 100, label %91
    i32 111, label %197
    i32 103, label %197
    i32 99, label %227
    i32 112, label %253
    i32 45, label %274
    i32 58, label %277
    i32 41, label %277
  ]

61:                                               ; preds = %52
  %62 = load i32, ptr %56, align 4, !tbaa !150
  %63 = or i32 %62, 4
  store i32 %63, ptr %56, align 4, !tbaa !150
  br label %334

64:                                               ; preds = %52
  %65 = load i32, ptr %56, align 4, !tbaa !150
  %66 = or i32 %65, 1
  store i32 %66, ptr %56, align 4, !tbaa !150
  br label %334

67:                                               ; preds = %52
  %68 = load i32, ptr %56, align 4, !tbaa !150
  %69 = or i32 %68, 2
  store i32 %69, ptr %56, align 4, !tbaa !150
  br label %334

70:                                               ; preds = %52
  %71 = load i32, ptr %56, align 4, !tbaa !150
  %72 = or i32 %71, 8
  store i32 %72, ptr %56, align 4, !tbaa !150
  %73 = add nsw i32 %59, 1
  br label %334

74:                                               ; preds = %52
  %75 = load i32, ptr %56, align 4, !tbaa !150
  %76 = or i32 %75, 32
  store i32 %76, ptr %56, align 4, !tbaa !150
  br label %334

77:                                               ; preds = %52
  %78 = icmp eq i8 %57, 0
  br i1 %78, label %79, label %104

79:                                               ; preds = %77
  %80 = icmp eq ptr %56, %3
  br i1 %80, label %173, label %334

81:                                               ; preds = %52
  %82 = icmp eq i8 %57, 0
  br i1 %82, label %83, label %104

83:                                               ; preds = %81
  %84 = icmp eq ptr %56, %3
  br i1 %84, label %173, label %334

85:                                               ; preds = %52
  %86 = icmp eq ptr %56, %3
  br i1 %86, label %173, label %87

87:                                               ; preds = %85
  %88 = icmp eq i8 %57, 0
  br i1 %88, label %334, label %89

89:                                               ; preds = %87
  %90 = icmp eq i32 %58, 3
  br i1 %90, label %334, label %104

91:                                               ; preds = %52
  br i1 %8, label %297, label %92

92:                                               ; preds = %91
  %93 = icmp eq ptr %56, %3
  br i1 %93, label %173, label %94

94:                                               ; preds = %92
  %95 = icmp eq i8 %57, 0
  br i1 %95, label %96, label %104

96:                                               ; preds = %94
  %97 = load i32, ptr %47, align 8, !tbaa !98
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = load i32, ptr %49, align 8, !tbaa !99
  %101 = freeze i32 %100
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %334, label %103

103:                                              ; preds = %96, %99
  br label %334

104:                                              ; preds = %94, %89, %81, %77
  %105 = getelementptr inbounds i8, ptr %54, i64 1
  store ptr %105, ptr %4, align 8, !tbaa !138
  %106 = zext i8 %57 to i32
  %107 = icmp eq i8 %57, 97
  br i1 %107, label %108, label %127

108:                                              ; preds = %104
  %109 = load ptr, ptr %44, align 8, !tbaa !145
  %110 = icmp eq ptr %109, %45
  br i1 %110, label %114, label %111

111:                                              ; preds = %108
  %112 = load ptr, ptr %50, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %112, i32 noundef 11) #21
  %113 = load ptr, ptr %4, align 8, !tbaa !138
  br label %114

114:                                              ; preds = %108, %111
  %115 = phi ptr [ %105, %108 ], [ %113, %111 ]
  %116 = load ptr, ptr %46, align 8, !tbaa !108
  %117 = ptrtoint ptr %115 to i64
  %118 = ptrtoint ptr %116 to i64
  %119 = sub i64 %117, %118
  %120 = load i32, ptr %47, align 8, !tbaa !98
  %121 = icmp ne i32 %120, 0
  %122 = zext i1 %121 to i32
  %123 = load ptr, ptr %48, align 8, !tbaa !140
  %124 = ptrtoint ptr %123 to i64
  %125 = sub i64 %124, %117
  %126 = getelementptr inbounds i8, ptr %116, i64 %119
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %121, ptr noundef nonnull @.str.402, ptr nonnull poison, i32 noundef 97, i32 noundef %122, i64 noundef %119, ptr noundef %116, i32 noundef %122, i64 noundef %125, ptr noundef %126)
  br label %173

127:                                              ; preds = %104
  %128 = load i8, ptr %54, align 1, !tbaa !9
  %129 = sext i8 %128 to i32
  %130 = icmp eq i32 %106, %129
  %131 = load ptr, ptr %44, align 8, !tbaa !145
  %132 = icmp eq ptr %131, %45
  br i1 %130, label %133, label %153

133:                                              ; preds = %127
  br i1 %132, label %137, label %134

134:                                              ; preds = %133
  %135 = load ptr, ptr %50, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %135, i32 noundef 11) #21
  %136 = load ptr, ptr %4, align 8, !tbaa !138
  br label %137

137:                                              ; preds = %133, %134
  %138 = phi ptr [ %105, %133 ], [ %136, %134 ]
  %139 = load ptr, ptr %46, align 8, !tbaa !108
  %140 = ptrtoint ptr %138 to i64
  %141 = ptrtoint ptr %139 to i64
  %142 = sub i64 %140, %141
  %143 = load i32, ptr %47, align 8, !tbaa !98
  %144 = icmp ne i32 %143, 0
  %145 = zext i1 %144 to i32
  %146 = getelementptr inbounds i8, ptr %138, i64 -1
  %147 = load i8, ptr %146, align 1, !tbaa !9
  %148 = sext i8 %147 to i32
  %149 = load ptr, ptr %48, align 8, !tbaa !140
  %150 = ptrtoint ptr %149 to i64
  %151 = sub i64 %150, %140
  %152 = getelementptr inbounds i8, ptr %139, i64 %142
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %144, ptr noundef nonnull @.str.403, ptr nonnull poison, i32 noundef %148, i32 noundef %145, i64 noundef %142, ptr noundef %139, i32 noundef %145, i64 noundef %151, ptr noundef %152)
  br label %173

153:                                              ; preds = %127
  br i1 %132, label %157, label %154

154:                                              ; preds = %153
  %155 = load ptr, ptr %50, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %155, i32 noundef 11) #21
  %156 = load ptr, ptr %4, align 8, !tbaa !138
  br label %157

157:                                              ; preds = %153, %154
  %158 = phi ptr [ %105, %153 ], [ %156, %154 ]
  %159 = load ptr, ptr %46, align 8, !tbaa !108
  %160 = ptrtoint ptr %158 to i64
  %161 = ptrtoint ptr %159 to i64
  %162 = sub i64 %160, %161
  %163 = load i32, ptr %47, align 8, !tbaa !98
  %164 = icmp ne i32 %163, 0
  %165 = zext i1 %164 to i32
  %166 = getelementptr inbounds i8, ptr %158, i64 -1
  %167 = load i8, ptr %166, align 1, !tbaa !9
  %168 = sext i8 %167 to i32
  %169 = load ptr, ptr %48, align 8, !tbaa !140
  %170 = ptrtoint ptr %169 to i64
  %171 = sub i64 %170, %160
  %172 = getelementptr inbounds i8, ptr %159, i64 %162
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %164, ptr noundef nonnull @.str.404, ptr nonnull poison, i32 noundef %106, i32 noundef %168, i32 noundef %165, i64 noundef %162, ptr noundef %159, i32 noundef %165, i64 noundef %171, ptr noundef %172)
  br label %173

173:                                              ; preds = %114, %157, %137, %92, %85, %83, %79
  %174 = load ptr, ptr %4, align 8, !tbaa !138
  %175 = getelementptr inbounds i8, ptr %174, i64 1
  store ptr %175, ptr %4, align 8, !tbaa !138
  %176 = load ptr, ptr %44, align 8, !tbaa !145
  %177 = icmp eq ptr %176, %45
  br i1 %177, label %181, label %178

178:                                              ; preds = %173
  %179 = load ptr, ptr %50, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %179, i32 noundef 11) #21
  %180 = load ptr, ptr %4, align 8, !tbaa !138
  br label %181

181:                                              ; preds = %173, %178
  %182 = phi ptr [ %175, %173 ], [ %180, %178 ]
  %183 = load ptr, ptr %46, align 8, !tbaa !108
  %184 = ptrtoint ptr %182 to i64
  %185 = ptrtoint ptr %183 to i64
  %186 = sub i64 %184, %185
  %187 = load i32, ptr %47, align 8, !tbaa !98
  %188 = icmp ne i32 %187, 0
  %189 = zext i1 %188 to i32
  %190 = getelementptr inbounds i8, ptr %182, i64 -1
  %191 = load i8, ptr %190, align 1, !tbaa !9
  %192 = sext i8 %191 to i32
  %193 = load ptr, ptr %48, align 8, !tbaa !140
  %194 = ptrtoint ptr %193 to i64
  %195 = sub i64 %194, %184
  %196 = getelementptr inbounds i8, ptr %183, i64 %186
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %188, ptr noundef nonnull @.str.405, ptr nonnull poison, i32 noundef %192, i32 noundef %189, i64 noundef %186, ptr noundef %183, i32 noundef %189, i64 noundef %195, ptr noundef %196)
  br label %197

197:                                              ; preds = %52, %52, %181
  %198 = load ptr, ptr %44, align 8, !tbaa !145
  %199 = icmp eq ptr %198, %45
  br i1 %199, label %334, label %200

200:                                              ; preds = %197
  %201 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #21
  br i1 %201, label %202, label %334

202:                                              ; preds = %200
  %203 = load ptr, ptr %4, align 8, !tbaa !138
  %204 = load i8, ptr %203, align 1, !tbaa !9
  %205 = icmp eq i8 %204, 111
  %206 = select i1 %205, i32 1, i32 2
  %207 = and i32 %206, %55
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %334

209:                                              ; preds = %202
  %210 = sext i8 %204 to i32
  %211 = or i32 %206, %55
  %212 = getelementptr inbounds i8, ptr %203, i64 1
  %213 = load ptr, ptr %46, align 8, !tbaa !108
  %214 = ptrtoint ptr %212 to i64
  %215 = ptrtoint ptr %213 to i64
  %216 = sub i64 %214, %215
  %217 = icmp eq ptr %56, %3
  %218 = select i1 %217, ptr @.str.407, ptr @.str.214
  %219 = select i1 %217, ptr @.str.408, ptr @.str.178
  %220 = load i32, ptr %47, align 8, !tbaa !98
  %221 = icmp ne i32 %220, 0
  %222 = zext i1 %221 to i32
  %223 = load ptr, ptr %48, align 8, !tbaa !140
  %224 = ptrtoint ptr %223 to i64
  %225 = sub i64 %224, %214
  %226 = getelementptr inbounds i8, ptr %213, i64 %216
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.406, ptr noundef nonnull %218, i32 noundef %210, ptr noundef nonnull %219, i32 noundef %210, i32 noundef %222, i64 noundef %216, ptr noundef %213, i32 noundef %222, i64 noundef %225, ptr noundef %226) #21
  br label %334

227:                                              ; preds = %52
  %228 = load ptr, ptr %44, align 8, !tbaa !145
  %229 = icmp eq ptr %228, %45
  br i1 %229, label %334, label %230

230:                                              ; preds = %227
  %231 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #21
  %232 = and i32 %55, 4
  %233 = icmp eq i32 %232, 0
  %234 = select i1 %231, i1 %233, i1 false
  br i1 %234, label %235, label %334

235:                                              ; preds = %230
  %236 = or i32 %55, 6
  %237 = load ptr, ptr %4, align 8, !tbaa !138
  %238 = getelementptr inbounds i8, ptr %237, i64 1
  %239 = load ptr, ptr %46, align 8, !tbaa !108
  %240 = ptrtoint ptr %238 to i64
  %241 = ptrtoint ptr %239 to i64
  %242 = sub i64 %240, %241
  %243 = icmp eq ptr %56, %3
  %244 = select i1 %243, ptr @.str.407, ptr @.str.214
  %245 = select i1 %243, ptr @.str.408, ptr @.str.178
  %246 = load i32, ptr %47, align 8, !tbaa !98
  %247 = icmp ne i32 %246, 0
  %248 = zext i1 %247 to i32
  %249 = load ptr, ptr %48, align 8, !tbaa !140
  %250 = ptrtoint ptr %249 to i64
  %251 = sub i64 %250, %240
  %252 = getelementptr inbounds i8, ptr %239, i64 %242
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.409, ptr noundef nonnull %244, ptr noundef nonnull %245, i32 noundef %248, i64 noundef %242, ptr noundef %239, i32 noundef %248, i64 noundef %251, ptr noundef %252) #21
  br label %334

253:                                              ; preds = %52
  %254 = icmp eq ptr %56, %3
  br i1 %254, label %255, label %271

255:                                              ; preds = %253
  %256 = load ptr, ptr %44, align 8, !tbaa !145
  %257 = icmp eq ptr %256, %45
  br i1 %257, label %334, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds i8, ptr %54, i64 1
  %260 = load ptr, ptr %46, align 8, !tbaa !108
  %261 = ptrtoint ptr %259 to i64
  %262 = ptrtoint ptr %260 to i64
  %263 = sub i64 %261, %262
  %264 = load i32, ptr %47, align 8, !tbaa !98
  %265 = icmp ne i32 %264, 0
  %266 = zext i1 %265 to i32
  %267 = load ptr, ptr %48, align 8, !tbaa !140
  %268 = ptrtoint ptr %267 to i64
  %269 = sub i64 %268, %261
  %270 = getelementptr inbounds i8, ptr %260, i64 %263
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.410, i32 noundef %266, i64 noundef %263, ptr noundef %260, i32 noundef %266, i64 noundef %269, ptr noundef %270) #21
  br label %334

271:                                              ; preds = %253
  %272 = load i32, ptr %56, align 4, !tbaa !150
  %273 = or i32 %272, 64
  store i32 %273, ptr %56, align 4, !tbaa !150
  br label %334

274:                                              ; preds = %52
  %275 = icmp eq ptr %56, %3
  %276 = select i1 %8, i1 true, i1 %275
  br i1 %276, label %297, label %334

277:                                              ; preds = %52, %52
  %278 = load i32, ptr %2, align 4, !tbaa !150
  %279 = load i32, ptr %0, align 8, !tbaa !109
  %280 = or i32 %279, %278
  %281 = load i32, ptr %3, align 4, !tbaa !150
  %282 = xor i32 %281, -1
  %283 = and i32 %280, %282
  %284 = and i32 %283, -897
  %285 = shl nuw nsw i32 %58, 7
  %286 = or i32 %284, %285
  store i32 %286, ptr %0, align 4, !tbaa !150
  %287 = and i32 %283, 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %291, label %289

289:                                              ; preds = %277
  %290 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 35
  store i32 1, ptr %290, align 4, !tbaa !101
  br label %291

291:                                              ; preds = %289, %277
  %292 = load ptr, ptr %44, align 8, !tbaa !145
  %293 = icmp ne ptr %292, %45
  %294 = icmp sgt i32 %59, 1
  %295 = select i1 %293, i1 %294, i1 false
  br i1 %295, label %296, label %372

296:                                              ; preds = %291
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 5122, ptr noundef nonnull @.str.411, i32 noundef 120) #21
  br label %372

297:                                              ; preds = %91, %274, %52
  %298 = load i32, ptr %47, align 8, !tbaa !98
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %305, label %300

300:                                              ; preds = %297
  %301 = zext i8 %53 to i64
  %302 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %301
  %303 = load i8, ptr %302, align 1, !tbaa !9
  %304 = zext i8 %303 to i64
  br label %305

305:                                              ; preds = %300, %297
  %306 = phi i64 [ %304, %300 ], [ 1, %297 ]
  %307 = getelementptr inbounds i8, ptr %54, i64 %306
  store ptr %307, ptr %4, align 8, !tbaa !138
  %308 = load ptr, ptr %46, align 8, !tbaa !108
  %309 = ptrtoint ptr %307 to i64
  %310 = ptrtoint ptr %308 to i64
  %311 = sub i64 %309, %310
  %312 = load ptr, ptr %44, align 8, !tbaa !145
  %313 = icmp eq ptr %312, %45
  br i1 %313, label %321, label %314

314:                                              ; preds = %305
  %315 = load ptr, ptr %50, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %315, i32 noundef 11) #21
  %316 = load i32, ptr %47, align 8, !tbaa !98
  %317 = load ptr, ptr %4, align 8, !tbaa !138
  %318 = load ptr, ptr %46, align 8, !tbaa !108
  %319 = ptrtoint ptr %317 to i64
  %320 = ptrtoint ptr %318 to i64
  br label %321

321:                                              ; preds = %314, %305
  %322 = phi i64 [ %320, %314 ], [ %310, %305 ]
  %323 = phi i64 [ %319, %314 ], [ %309, %305 ]
  %324 = phi ptr [ %318, %314 ], [ %308, %305 ]
  %325 = phi i32 [ %316, %314 ], [ %298, %305 ]
  %326 = icmp ne i32 %325, 0
  %327 = zext i1 %326 to i32
  %328 = sub i64 %323, %51
  %329 = load ptr, ptr %48, align 8, !tbaa !140
  %330 = ptrtoint ptr %329 to i64
  %331 = add i64 %311, %322
  %332 = sub i64 %330, %331
  %333 = getelementptr inbounds i8, ptr %324, i64 %311
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %326, ptr noundef nonnull @.str.251, ptr nonnull poison, i32 noundef %327, i64 noundef %328, ptr noundef nonnull %6, i32 noundef %327, i64 noundef %311, ptr noundef %324, i32 noundef %327, i64 noundef %332, ptr noundef %333)
  br label %334

334:                                              ; preds = %103, %99, %274, %202, %209, %89, %87, %83, %79, %271, %258, %255, %227, %230, %235, %197, %200, %321, %74, %70, %67, %64, %61
  %335 = phi i32 [ %59, %321 ], [ %59, %255 ], [ %59, %258 ], [ %59, %271 ], [ %59, %227 ], [ %59, %235 ], [ %59, %230 ], [ %59, %197 ], [ %59, %200 ], [ %59, %74 ], [ %73, %70 ], [ %59, %67 ], [ %59, %64 ], [ %59, %61 ], [ %59, %79 ], [ %59, %83 ], [ %59, %87 ], [ %59, %89 ], [ %59, %209 ], [ %59, %202 ], [ %59, %274 ], [ %59, %99 ], [ %59, %103 ]
  %336 = phi i32 [ %58, %321 ], [ %58, %255 ], [ %58, %258 ], [ %58, %271 ], [ %58, %227 ], [ %58, %235 ], [ %58, %230 ], [ %58, %197 ], [ %58, %200 ], [ %58, %74 ], [ %58, %70 ], [ %58, %67 ], [ %58, %64 ], [ %58, %61 ], [ 1, %79 ], [ 2, %83 ], [ 3, %87 ], [ 4, %89 ], [ %58, %209 ], [ %58, %202 ], [ %58, %274 ], [ 0, %99 ], [ 2, %103 ]
  %337 = phi i8 [ %57, %321 ], [ %57, %255 ], [ %57, %258 ], [ %57, %271 ], [ %57, %227 ], [ %57, %235 ], [ %57, %230 ], [ %57, %197 ], [ %57, %200 ], [ %57, %74 ], [ %57, %70 ], [ %57, %67 ], [ %57, %64 ], [ %57, %61 ], [ 108, %79 ], [ 117, %83 ], [ 97, %87 ], [ 97, %89 ], [ %57, %209 ], [ %57, %202 ], [ %57, %274 ], [ 100, %99 ], [ 100, %103 ]
  %338 = phi ptr [ %56, %321 ], [ %3, %255 ], [ %3, %258 ], [ %56, %271 ], [ %56, %227 ], [ %56, %235 ], [ %56, %230 ], [ %56, %197 ], [ %56, %200 ], [ %56, %74 ], [ %56, %70 ], [ %56, %67 ], [ %56, %64 ], [ %56, %61 ], [ %56, %79 ], [ %56, %83 ], [ %56, %87 ], [ %56, %89 ], [ %56, %209 ], [ %56, %202 ], [ %3, %274 ], [ %56, %99 ], [ %56, %103 ]
  %339 = phi i32 [ %55, %321 ], [ %55, %255 ], [ %55, %258 ], [ %55, %271 ], [ %55, %227 ], [ %236, %235 ], [ %55, %230 ], [ %55, %197 ], [ %55, %200 ], [ %55, %74 ], [ %55, %70 ], [ %55, %67 ], [ %55, %64 ], [ %55, %61 ], [ %55, %79 ], [ %55, %83 ], [ %55, %87 ], [ %55, %89 ], [ %211, %209 ], [ %55, %202 ], [ 0, %274 ], [ %55, %99 ], [ %55, %103 ]
  %340 = load ptr, ptr %4, align 8, !tbaa !138
  %341 = getelementptr inbounds i8, ptr %340, i64 1
  store ptr %341, ptr %4, align 8, !tbaa !138
  %342 = load i8, ptr %341, align 1, !tbaa !9
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %344, label %52, !llvm.loop !357

344:                                              ; preds = %334, %39
  %345 = phi ptr [ %25, %39 ], [ %341, %334 ]
  %346 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %347 = load ptr, ptr %346, align 8, !tbaa !145
  %348 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %349 = icmp eq ptr %347, %348
  br i1 %349, label %354, label %350

350:                                              ; preds = %344
  %351 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %352 = load ptr, ptr %351, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %352, i32 noundef 11) #21
  %353 = load ptr, ptr %4, align 8, !tbaa !138
  br label %354

354:                                              ; preds = %344, %350
  %355 = phi ptr [ %345, %344 ], [ %353, %350 ]
  %356 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %357 = load ptr, ptr %356, align 8, !tbaa !140
  %358 = icmp ugt ptr %355, %357
  %359 = select i1 %358, ptr %357, ptr %355
  %360 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %361 = load ptr, ptr %360, align 8, !tbaa !108
  %362 = ptrtoint ptr %359 to i64
  %363 = ptrtoint ptr %361 to i64
  %364 = sub i64 %362, %363
  %365 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %366 = load i32, ptr %365, align 8, !tbaa !98
  %367 = icmp ne i32 %366, 0
  %368 = zext i1 %367 to i32
  %369 = ptrtoint ptr %357 to i64
  %370 = sub i64 %369, %362
  %371 = getelementptr inbounds i8, ptr %361, i64 %364
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.412, i32 noundef %368, i64 noundef %364, ptr noundef %361, i32 noundef %368, i64 noundef %370, ptr noundef %371) #21
  br label %372

372:                                              ; preds = %291, %296, %354
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #21
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #16

declare ptr @Perl_vmess(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #16

declare zeroext i1 @Perl__is_utf8_perl_idstart(ptr noundef) local_unnamed_addr #1

declare zeroext i1 @Perl__is_utf8_FOO(i8 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regatom(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca [140 x i8], align 16
  %19 = alloca i64, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #21
  store ptr null, ptr %14, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #21
  store i32 0, ptr %15, align 4, !tbaa !150
  %25 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !138
  store i32 0, ptr %1, align 4, !tbaa !150
  %27 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %28 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %29 = add i32 %2, 1
  br label %30

30:                                               ; preds = %274, %3
  %31 = phi i32 [ %271, %274 ], [ 0, %3 ]
  %32 = phi ptr [ %275, %274 ], [ %26, %3 ]
  br label %33

33:                                               ; preds = %30, %1165
  %34 = phi ptr [ %1166, %1165 ], [ %32, %30 ]
  %35 = load i8, ptr %34, align 1, !tbaa !9
  switch i8 %35, label %1168 [
    i8 94, label %36
    i8 36, label %86
    i8 46, label %141
    i8 91, label %194
    i8 40, label %266
    i8 124, label %317
    i8 41, label %317
    i8 63, label %349
    i8 43, label %349
    i8 42, label %349
    i8 92, label %376
    i8 35, label %1147
  ]

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %38 = load i32, ptr %37, align 4, !tbaa !134
  %39 = add nsw i32 %38, 1
  store i32 %39, ptr %37, align 4, !tbaa !134
  %40 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %41 = load i32, ptr %0, align 8, !tbaa !109
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %45 = load ptr, ptr %44, align 8, !tbaa !145
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %47 = icmp eq ptr %45, %46
  br i1 %43, label %67, label %48

48:                                               ; preds = %36
  br i1 %47, label %49, label %53

49:                                               ; preds = %48
  %50 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %51 = load i64, ptr %50, align 8, !tbaa !144
  %52 = add i64 %51, 1
  store i64 %52, ptr %50, align 8, !tbaa !144
  br label %66

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %55 = load ptr, ptr %54, align 8, !tbaa !158
  %56 = icmp ult ptr %45, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 3, ptr noundef %45, ptr noundef %55) #21
  %58 = load ptr, ptr %44, align 8, !tbaa !145
  br label %59

59:                                               ; preds = %53, %57
  %60 = phi ptr [ %58, %57 ], [ %45, %53 ]
  store i8 0, ptr %45, align 2, !tbaa !169
  %61 = icmp eq ptr %60, %46
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.regnode, ptr %45, i64 0, i32 1
  store i8 3, ptr %63, align 1, !tbaa !164
  %64 = getelementptr inbounds %struct.regnode, ptr %45, i64 0, i32 2
  store i16 0, ptr %64, align 2, !tbaa !168
  %65 = getelementptr inbounds %struct.regnode, ptr %45, i64 1
  store ptr %65, ptr %44, align 8, !tbaa !145
  br label %66

66:                                               ; preds = %49, %59, %62
  store ptr %45, ptr %14, align 8, !tbaa !5
  br label %2407

67:                                               ; preds = %36
  br i1 %47, label %68, label %72

68:                                               ; preds = %67
  %69 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %70 = load i64, ptr %69, align 8, !tbaa !144
  %71 = add i64 %70, 1
  store i64 %71, ptr %69, align 8, !tbaa !144
  br label %85

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %74 = load ptr, ptr %73, align 8, !tbaa !158
  %75 = icmp ult ptr %45, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 2, ptr noundef %45, ptr noundef %74) #21
  %77 = load ptr, ptr %44, align 8, !tbaa !145
  br label %78

78:                                               ; preds = %72, %76
  %79 = phi ptr [ %77, %76 ], [ %45, %72 ]
  store i8 0, ptr %45, align 2, !tbaa !169
  %80 = icmp eq ptr %79, %46
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.regnode, ptr %45, i64 0, i32 1
  store i8 2, ptr %82, align 1, !tbaa !164
  %83 = getelementptr inbounds %struct.regnode, ptr %45, i64 0, i32 2
  store i16 0, ptr %83, align 2, !tbaa !168
  %84 = getelementptr inbounds %struct.regnode, ptr %45, i64 1
  store ptr %84, ptr %44, align 8, !tbaa !145
  br label %85

85:                                               ; preds = %68, %78, %81
  store ptr %45, ptr %14, align 8, !tbaa !5
  br label %2407

86:                                               ; preds = %33
  %87 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %88 = load ptr, ptr %25, align 8, !tbaa !138
  %89 = load i8, ptr %88, align 1, !tbaa !9
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %93 = load i32, ptr %92, align 4, !tbaa !134
  %94 = add nsw i32 %93, 1
  store i32 %94, ptr %92, align 4, !tbaa !134
  br label %95

95:                                               ; preds = %91, %86
  %96 = load i32, ptr %0, align 8, !tbaa !109
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %100 = load ptr, ptr %99, align 8, !tbaa !145
  %101 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %102 = icmp eq ptr %100, %101
  br i1 %98, label %122, label %103

103:                                              ; preds = %95
  br i1 %102, label %104, label %108

104:                                              ; preds = %103
  %105 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %106 = load i64, ptr %105, align 8, !tbaa !144
  %107 = add i64 %106, 1
  store i64 %107, ptr %105, align 8, !tbaa !144
  br label %121

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %110 = load ptr, ptr %109, align 8, !tbaa !158
  %111 = icmp ult ptr %100, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 5, ptr noundef %100, ptr noundef %110) #21
  %113 = load ptr, ptr %99, align 8, !tbaa !145
  br label %114

114:                                              ; preds = %108, %112
  %115 = phi ptr [ %113, %112 ], [ %100, %108 ]
  store i8 0, ptr %100, align 2, !tbaa !169
  %116 = icmp eq ptr %115, %101
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.regnode, ptr %100, i64 0, i32 1
  store i8 5, ptr %118, align 1, !tbaa !164
  %119 = getelementptr inbounds %struct.regnode, ptr %100, i64 0, i32 2
  store i16 0, ptr %119, align 2, !tbaa !168
  %120 = getelementptr inbounds %struct.regnode, ptr %100, i64 1
  store ptr %120, ptr %99, align 8, !tbaa !145
  br label %121

121:                                              ; preds = %104, %114, %117
  store ptr %100, ptr %14, align 8, !tbaa !5
  br label %2407

122:                                              ; preds = %95
  br i1 %102, label %123, label %127

123:                                              ; preds = %122
  %124 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %125 = load i64, ptr %124, align 8, !tbaa !144
  %126 = add i64 %125, 1
  store i64 %126, ptr %124, align 8, !tbaa !144
  br label %140

127:                                              ; preds = %122
  %128 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %129 = load ptr, ptr %128, align 8, !tbaa !158
  %130 = icmp ult ptr %100, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 4, ptr noundef %100, ptr noundef %129) #21
  %132 = load ptr, ptr %99, align 8, !tbaa !145
  br label %133

133:                                              ; preds = %127, %131
  %134 = phi ptr [ %132, %131 ], [ %100, %127 ]
  store i8 0, ptr %100, align 2, !tbaa !169
  %135 = icmp eq ptr %134, %101
  br i1 %135, label %140, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.regnode, ptr %100, i64 0, i32 1
  store i8 4, ptr %137, align 1, !tbaa !164
  %138 = getelementptr inbounds %struct.regnode, ptr %100, i64 0, i32 2
  store i16 0, ptr %138, align 2, !tbaa !168
  %139 = getelementptr inbounds %struct.regnode, ptr %100, i64 1
  store ptr %139, ptr %99, align 8, !tbaa !145
  br label %140

140:                                              ; preds = %123, %133, %136
  store ptr %100, ptr %14, align 8, !tbaa !5
  br label %2407

141:                                              ; preds = %33
  %142 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %143 = load i32, ptr %0, align 8, !tbaa !109
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %147 = load ptr, ptr %146, align 8, !tbaa !145
  %148 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %149 = icmp eq ptr %147, %148
  br i1 %145, label %168, label %150

150:                                              ; preds = %141
  br i1 %149, label %151, label %155

151:                                              ; preds = %150
  %152 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %153 = load i64, ptr %152, align 8, !tbaa !144
  %154 = add i64 %153, 1
  store i64 %154, ptr %152, align 8, !tbaa !144
  br label %186

155:                                              ; preds = %150
  %156 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %157 = load ptr, ptr %156, align 8, !tbaa !158
  %158 = icmp ult ptr %147, %157
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 17, ptr noundef %147, ptr noundef %157) #21
  %160 = load ptr, ptr %146, align 8, !tbaa !145
  br label %161

161:                                              ; preds = %155, %159
  %162 = phi ptr [ %160, %159 ], [ %147, %155 ]
  store i8 0, ptr %147, align 2, !tbaa !169
  %163 = icmp eq ptr %162, %148
  br i1 %163, label %186, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %struct.regnode, ptr %147, i64 0, i32 1
  store i8 17, ptr %165, align 1, !tbaa !164
  %166 = getelementptr inbounds %struct.regnode, ptr %147, i64 0, i32 2
  store i16 0, ptr %166, align 2, !tbaa !168
  %167 = getelementptr inbounds %struct.regnode, ptr %147, i64 1
  store ptr %167, ptr %146, align 8, !tbaa !145
  br label %186

168:                                              ; preds = %141
  br i1 %149, label %169, label %173

169:                                              ; preds = %168
  %170 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %171 = load i64, ptr %170, align 8, !tbaa !144
  %172 = add i64 %171, 1
  store i64 %172, ptr %170, align 8, !tbaa !144
  br label %186

173:                                              ; preds = %168
  %174 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %175 = load ptr, ptr %174, align 8, !tbaa !158
  %176 = icmp ult ptr %147, %175
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 16, ptr noundef %147, ptr noundef %175) #21
  %178 = load ptr, ptr %146, align 8, !tbaa !145
  br label %179

179:                                              ; preds = %173, %177
  %180 = phi ptr [ %178, %177 ], [ %147, %173 ]
  store i8 0, ptr %147, align 2, !tbaa !169
  %181 = icmp eq ptr %180, %148
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.regnode, ptr %147, i64 0, i32 1
  store i8 16, ptr %183, align 1, !tbaa !164
  %184 = getelementptr inbounds %struct.regnode, ptr %147, i64 0, i32 2
  store i16 0, ptr %184, align 2, !tbaa !168
  %185 = getelementptr inbounds %struct.regnode, ptr %147, i64 1
  store ptr %185, ptr %146, align 8, !tbaa !145
  br label %186

186:                                              ; preds = %169, %151, %182, %179, %164, %161
  store ptr %147, ptr %14, align 8, !tbaa !5
  %187 = load i32, ptr %1, align 4, !tbaa !150
  %188 = or i32 %187, 3
  store i32 %188, ptr %1, align 4, !tbaa !150
  %189 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %190 = load i32, ptr %189, align 8, !tbaa !141
  %191 = icmp slt i32 %190, 10
  br i1 %191, label %192, label %2407

192:                                              ; preds = %186
  %193 = add nsw i32 %190, 1
  store i32 %193, ptr %189, align 8, !tbaa !141
  br label %2407

194:                                              ; preds = %33
  %195 = getelementptr inbounds i8, ptr %34, i64 1
  store ptr %195, ptr %25, align 8, !tbaa !138
  %196 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 45
  %197 = load i32, ptr %196, align 4, !tbaa !102
  %198 = icmp ne i32 %197, 0
  %199 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %29, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext false, i1 noundef zeroext %198, ptr noundef null)
  store ptr %199, ptr %14, align 8, !tbaa !5
  %200 = load ptr, ptr %25, align 8, !tbaa !138
  %201 = load i8, ptr %200, align 1, !tbaa !9
  %202 = icmp eq i8 %201, 93
  br i1 %202, label %230, label %203

203:                                              ; preds = %194
  store ptr %195, ptr %25, align 8, !tbaa !138
  %204 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %205 = load ptr, ptr %204, align 8, !tbaa !145
  %206 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %207 = icmp eq ptr %205, %206
  br i1 %207, label %212, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %210 = load ptr, ptr %209, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %210, i32 noundef 11) #21
  %211 = load ptr, ptr %25, align 8, !tbaa !138
  br label %212

212:                                              ; preds = %203, %208
  %213 = phi ptr [ %195, %203 ], [ %211, %208 ]
  %214 = load ptr, ptr %27, align 8, !tbaa !140
  %215 = icmp ugt ptr %213, %214
  %216 = select i1 %215, ptr %214, ptr %213
  %217 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %218 = load ptr, ptr %217, align 8, !tbaa !108
  %219 = ptrtoint ptr %216 to i64
  %220 = ptrtoint ptr %218 to i64
  %221 = sub i64 %219, %220
  %222 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %223 = load i32, ptr %222, align 8, !tbaa !98
  %224 = icmp ne i32 %223, 0
  %225 = zext i1 %224 to i32
  %226 = ptrtoint ptr %214 to i64
  %227 = sub i64 %226, %219
  %228 = getelementptr inbounds i8, ptr %218, i64 %221
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.286, i32 noundef %225, i64 noundef %221, ptr noundef %218, i32 noundef %225, i64 noundef %227, ptr noundef %228) #21
  %229 = load ptr, ptr %14, align 8, !tbaa !5
  br label %230

230:                                              ; preds = %212, %194
  %231 = phi ptr [ %229, %212 ], [ %199, %194 ]
  %232 = icmp eq ptr %231, null
  br i1 %232, label %233, label %264

233:                                              ; preds = %230
  %234 = load i32, ptr %1, align 4, !tbaa !150
  %235 = and i32 %234, 32
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %2409

237:                                              ; preds = %233
  %238 = load ptr, ptr %27, align 8, !tbaa !140
  %239 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %240 = load ptr, ptr %239, align 8, !tbaa !108
  %241 = ptrtoint ptr %238 to i64
  %242 = ptrtoint ptr %240 to i64
  %243 = sub i64 %241, %242
  %244 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %245 = load ptr, ptr %244, align 8, !tbaa !145
  %246 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %247 = icmp eq ptr %245, %246
  br i1 %247, label %253, label %248

248:                                              ; preds = %237
  %249 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %250 = load ptr, ptr %249, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %250, i32 noundef 11) #21
  %251 = load i32, ptr %1, align 4, !tbaa !150
  %252 = load ptr, ptr %239, align 8, !tbaa !108
  br label %253

253:                                              ; preds = %248, %237
  %254 = phi ptr [ %252, %248 ], [ %240, %237 ]
  %255 = phi i32 [ %251, %248 ], [ %234, %237 ]
  %256 = icmp sgt i64 %243, 127
  %257 = select i1 %256, i64 117, i64 %243
  %258 = select i1 %256, ptr @.str.182, ptr @.str.178
  %259 = sext i32 %255 to i64
  %260 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %261 = load i32, ptr %260, align 8, !tbaa !98
  %262 = icmp ne i32 %261, 0
  %263 = zext i1 %262 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.287, i64 noundef %259, i32 noundef %263, i64 noundef %257, ptr noundef %254, ptr noundef nonnull %258) #21
  br label %264

264:                                              ; preds = %253, %230
  %265 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2407

266:                                              ; preds = %33
  %267 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %268 = call fastcc ptr @S_reg(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %15, i32 noundef %29)
  store ptr %268, ptr %14, align 8, !tbaa !5
  %269 = icmp eq ptr %268, null
  br i1 %269, label %270, label %312

270:                                              ; preds = %266
  %271 = load i32, ptr %15, align 4, !tbaa !150
  %272 = and i32 %271, 16
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %281, label %274

274:                                              ; preds = %270
  %275 = load ptr, ptr %25, align 8, !tbaa !138
  %276 = load ptr, ptr %27, align 8, !tbaa !140
  %277 = icmp eq ptr %275, %276
  br i1 %277, label %278, label %30

278:                                              ; preds = %274
  %279 = load i32, ptr %1, align 4, !tbaa !150
  %280 = or i32 %279, 16
  store i32 %280, ptr %1, align 4, !tbaa !150
  br label %2409

281:                                              ; preds = %270
  %282 = and i32 %271, 32
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284

284:                                              ; preds = %281
  store i32 32, ptr %1, align 4, !tbaa !150
  br label %2409

285:                                              ; preds = %281
  %286 = load ptr, ptr %27, align 8, !tbaa !140
  %287 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %288 = load ptr, ptr %287, align 8, !tbaa !108
  %289 = ptrtoint ptr %286 to i64
  %290 = ptrtoint ptr %288 to i64
  %291 = sub i64 %289, %290
  %292 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %293 = load ptr, ptr %292, align 8, !tbaa !145
  %294 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %295 = icmp eq ptr %293, %294
  br i1 %295, label %301, label %296

296:                                              ; preds = %285
  %297 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %298 = load ptr, ptr %297, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %298, i32 noundef 11) #21
  %299 = load i32, ptr %15, align 4, !tbaa !150
  %300 = load ptr, ptr %287, align 8, !tbaa !108
  br label %301

301:                                              ; preds = %296, %285
  %302 = phi ptr [ %300, %296 ], [ %288, %285 ]
  %303 = phi i32 [ %299, %296 ], [ %271, %285 ]
  %304 = icmp sgt i64 %291, 127
  %305 = select i1 %304, i64 117, i64 %291
  %306 = select i1 %304, ptr @.str.182, ptr @.str.178
  %307 = sext i32 %303 to i64
  %308 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %309 = load i32, ptr %308, align 8, !tbaa !98
  %310 = icmp ne i32 %309, 0
  %311 = zext i1 %310 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.288, i64 noundef %307, i32 noundef %311, i64 noundef %305, ptr noundef %302, ptr noundef nonnull %306) #21
  br label %312

312:                                              ; preds = %266, %301
  %313 = load i32, ptr %15, align 4, !tbaa !150
  %314 = and i32 %313, 15
  %315 = load i32, ptr %1, align 4, !tbaa !150
  %316 = or i32 %315, %314
  store i32 %316, ptr %1, align 4, !tbaa !150
  br label %2407

317:                                              ; preds = %33, %33
  %318 = and i32 %31, 16
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %323, label %320

320:                                              ; preds = %317
  %321 = load i32, ptr %1, align 4, !tbaa !150
  %322 = or i32 %321, 16
  store i32 %322, ptr %1, align 4, !tbaa !150
  br label %2409

323:                                              ; preds = %317
  %324 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %325 = load ptr, ptr %324, align 8, !tbaa !145
  %326 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %327 = icmp eq ptr %325, %326
  br i1 %327, label %332, label %328

328:                                              ; preds = %323
  %329 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %330 = load ptr, ptr %329, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %330, i32 noundef 11) #21
  %331 = load ptr, ptr %25, align 8, !tbaa !138
  br label %332

332:                                              ; preds = %323, %328
  %333 = phi ptr [ %34, %323 ], [ %331, %328 ]
  %334 = load ptr, ptr %27, align 8, !tbaa !140
  %335 = icmp ugt ptr %333, %334
  %336 = select i1 %335, ptr %334, ptr %333
  %337 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %338 = load ptr, ptr %337, align 8, !tbaa !108
  %339 = ptrtoint ptr %336 to i64
  %340 = ptrtoint ptr %338 to i64
  %341 = sub i64 %339, %340
  %342 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %343 = load i32, ptr %342, align 8, !tbaa !98
  %344 = icmp ne i32 %343, 0
  %345 = zext i1 %344 to i32
  %346 = ptrtoint ptr %334 to i64
  %347 = sub i64 %346, %339
  %348 = getelementptr inbounds i8, ptr %338, i64 %341
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.289, i32 noundef %345, i64 noundef %341, ptr noundef %338, i32 noundef %345, i64 noundef %347, ptr noundef %348) #21
  br label %2407

349:                                              ; preds = %33, %33, %33
  %350 = getelementptr inbounds i8, ptr %34, i64 1
  store ptr %350, ptr %25, align 8, !tbaa !138
  %351 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %352 = load ptr, ptr %351, align 8, !tbaa !145
  %353 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %354 = icmp eq ptr %352, %353
  br i1 %354, label %359, label %355

355:                                              ; preds = %349
  %356 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %357 = load ptr, ptr %356, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %357, i32 noundef 11) #21
  %358 = load ptr, ptr %25, align 8, !tbaa !138
  br label %359

359:                                              ; preds = %349, %355
  %360 = phi ptr [ %350, %349 ], [ %358, %355 ]
  %361 = load ptr, ptr %27, align 8, !tbaa !140
  %362 = icmp ugt ptr %360, %361
  %363 = select i1 %362, ptr %361, ptr %360
  %364 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %365 = load ptr, ptr %364, align 8, !tbaa !108
  %366 = ptrtoint ptr %363 to i64
  %367 = ptrtoint ptr %365 to i64
  %368 = sub i64 %366, %367
  %369 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %370 = load i32, ptr %369, align 8, !tbaa !98
  %371 = icmp ne i32 %370, 0
  %372 = zext i1 %371 to i32
  %373 = ptrtoint ptr %361 to i64
  %374 = sub i64 %373, %366
  %375 = getelementptr inbounds i8, ptr %365, i64 %368
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.290, i32 noundef %372, i64 noundef %368, ptr noundef %365, i32 noundef %372, i64 noundef %374, ptr noundef %375) #21
  br label %2407

376:                                              ; preds = %33
  %377 = getelementptr inbounds i8, ptr %34, i64 1
  store ptr %377, ptr %25, align 8, !tbaa !138
  %378 = load i8, ptr %377, align 1, !tbaa !9
  switch i8 %378, label %1171 [
    i8 65, label %380
    i8 71, label %393
    i8 75, label %399
    i8 90, label %408
    i8 122, label %415
    i8 67, label %422
    i8 88, label %448
    i8 87, label %452
    i8 119, label %662
    i8 66, label %453
    i8 98, label %454
    i8 68, label %648
    i8 100, label %649
    i8 82, label %654
    i8 72, label %684
    i8 104, label %681
    i8 86, label %658
    i8 118, label %379
    i8 83, label %659
    i8 115, label %660
    i8 112, label %699
    i8 80, label %699
    i8 78, label %735
    i8 107, label %745
    i8 0, label %1121
    i8 103, label %850
    i8 49, label %996
    i8 50, label %996
    i8 51, label %996
    i8 52, label %996
    i8 53, label %996
    i8 54, label %996
    i8 55, label %996
    i8 56, label %996
    i8 57, label %996
  ]

379:                                              ; preds = %376
  br label %681

380:                                              ; preds = %376
  %381 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %382 = load i32, ptr %381, align 4, !tbaa !134
  %383 = add nsw i32 %382, 1
  store i32 %383, ptr %381, align 4, !tbaa !134
  %384 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 2)
  store ptr %384, ptr %14, align 8, !tbaa !5
  %385 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %386 = load ptr, ptr %385, align 8, !tbaa !145
  %387 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %388 = icmp eq ptr %386, %387
  br i1 %388, label %390, label %389

389:                                              ; preds = %380
  store i8 1, ptr %384, align 2, !tbaa !169
  br label %390

390:                                              ; preds = %389, %380
  %391 = load i32, ptr %1, align 4, !tbaa !150
  %392 = or i32 %391, 2
  store i32 %392, ptr %1, align 4, !tbaa !150
  br label %697

393:                                              ; preds = %376
  %394 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 7)
  store ptr %394, ptr %14, align 8, !tbaa !5
  %395 = load i32, ptr %28, align 8, !tbaa !131
  %396 = or i32 %395, 4
  store i32 %396, ptr %28, align 8, !tbaa !131
  %397 = load i32, ptr %1, align 4, !tbaa !150
  %398 = or i32 %397, 2
  store i32 %398, ptr %1, align 4, !tbaa !150
  br label %697

399:                                              ; preds = %376
  %400 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %401 = load i32, ptr %400, align 4, !tbaa !134
  %402 = add nsw i32 %401, 1
  store i32 %402, ptr %400, align 4, !tbaa !134
  %403 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 90)
  store ptr %403, ptr %14, align 8, !tbaa !5
  %404 = load i32, ptr %1, align 4, !tbaa !150
  %405 = or i32 %404, 2
  store i32 %405, ptr %1, align 4, !tbaa !150
  %406 = load i32, ptr %28, align 8, !tbaa !131
  %407 = or i32 %406, 2
  store i32 %407, ptr %28, align 8, !tbaa !131
  br label %697

408:                                              ; preds = %376
  %409 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 4)
  store ptr %409, ptr %14, align 8, !tbaa !5
  %410 = load i32, ptr %1, align 4, !tbaa !150
  %411 = or i32 %410, 2
  store i32 %411, ptr %1, align 4, !tbaa !150
  %412 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %413 = load i32, ptr %412, align 4, !tbaa !134
  %414 = add nsw i32 %413, 1
  store i32 %414, ptr %412, align 4, !tbaa !134
  br label %697

415:                                              ; preds = %376
  %416 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 6)
  store ptr %416, ptr %14, align 8, !tbaa !5
  %417 = load i32, ptr %1, align 4, !tbaa !150
  %418 = or i32 %417, 2
  store i32 %418, ptr %1, align 4, !tbaa !150
  %419 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %420 = load i32, ptr %419, align 4, !tbaa !134
  %421 = add nsw i32 %420, 1
  store i32 %421, ptr %419, align 4, !tbaa !134
  br label %697

422:                                              ; preds = %376
  %423 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 18)
  store ptr %423, ptr %14, align 8, !tbaa !5
  %424 = load i32, ptr %28, align 8, !tbaa !131
  %425 = or i32 %424, 16
  store i32 %425, ptr %28, align 8, !tbaa !131
  %426 = load i32, ptr %1, align 4, !tbaa !150
  %427 = or i32 %426, 3
  store i32 %427, ptr %1, align 4, !tbaa !150
  %428 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %429 = load ptr, ptr %428, align 8, !tbaa !145
  %430 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %431 = icmp eq ptr %429, %430
  br i1 %431, label %697, label %432

432:                                              ; preds = %422
  %433 = load ptr, ptr %25, align 8, !tbaa !138
  %434 = getelementptr inbounds i8, ptr %433, i64 1
  %435 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %436 = load ptr, ptr %435, align 8, !tbaa !108
  %437 = ptrtoint ptr %434 to i64
  %438 = ptrtoint ptr %436 to i64
  %439 = sub i64 %437, %438
  %440 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %441 = load i32, ptr %440, align 8, !tbaa !98
  %442 = icmp ne i32 %441, 0
  %443 = zext i1 %442 to i32
  %444 = load ptr, ptr %27, align 8, !tbaa !140
  %445 = ptrtoint ptr %444 to i64
  %446 = sub i64 %445, %437
  %447 = getelementptr inbounds i8, ptr %436, i64 %439
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 2, ptr noundef nonnull @.str.291, i32 noundef %443, i64 noundef %439, ptr noundef %436, i32 noundef %443, i64 noundef %446, ptr noundef %447) #21
  br label %697

448:                                              ; preds = %376
  %449 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 29)
  store ptr %449, ptr %14, align 8, !tbaa !5
  %450 = load i32, ptr %1, align 4, !tbaa !150
  %451 = or i32 %450, 1
  store i32 %451, ptr %1, align 4, !tbaa !150
  br label %697

452:                                              ; preds = %376
  br label %662

453:                                              ; preds = %376
  br label %454

454:                                              ; preds = %376, %453
  %455 = phi i1 [ false, %376 ], [ true, %453 ]
  %456 = load i32, ptr %0, align 8, !tbaa !109
  %457 = lshr i32 %456, 7
  %458 = and i32 %457, 7
  %459 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %460 = load i32, ptr %459, align 4, !tbaa !134
  %461 = add nsw i32 %460, 1
  store i32 %461, ptr %459, align 4, !tbaa !134
  %462 = load i32, ptr %28, align 8, !tbaa !131
  %463 = or i32 %462, 2
  store i32 %463, ptr %28, align 8, !tbaa !131
  %464 = trunc i32 %458 to i8
  %465 = or i8 %464, 8
  %466 = icmp eq i8 %465, 9
  br i1 %466, label %467, label %469

467:                                              ; preds = %454
  %468 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %468, align 8, !tbaa !100
  br label %469

469:                                              ; preds = %467, %454
  %470 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext %465)
  store ptr %470, ptr %14, align 8, !tbaa !5
  %471 = load i32, ptr %1, align 4, !tbaa !150
  %472 = or i32 %471, 2
  store i32 %472, ptr %1, align 4, !tbaa !150
  %473 = load ptr, ptr %25, align 8, !tbaa !138
  %474 = getelementptr inbounds i8, ptr %473, i64 1
  %475 = load i8, ptr %474, align 1, !tbaa !9
  %476 = icmp eq i8 %475, 123
  br i1 %476, label %486, label %477

477:                                              ; preds = %469
  store i8 0, ptr %470, align 2, !tbaa !169
  %478 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %479 = load ptr, ptr %478, align 8, !tbaa !145
  %480 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %481 = icmp ne ptr %479, %480
  %482 = icmp ugt i8 %465, 11
  %483 = and i1 %482, %481
  br i1 %483, label %484, label %638

484:                                              ; preds = %477
  %485 = getelementptr inbounds %struct.regnode, ptr %470, i64 0, i32 1
  store i8 11, ptr %485, align 1, !tbaa !164
  br label %638

486:                                              ; preds = %469
  %487 = load i8, ptr %473, align 1, !tbaa !9
  %488 = getelementptr inbounds i8, ptr %473, i64 2
  store ptr %488, ptr %25, align 8, !tbaa !138
  %489 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %488, i32 noundef 125) #24
  %490 = icmp eq ptr %489, null
  br i1 %490, label %491, label %517

491:                                              ; preds = %486
  %492 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %493 = load ptr, ptr %492, align 8, !tbaa !145
  %494 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %495 = icmp eq ptr %493, %494
  br i1 %495, label %500, label %496

496:                                              ; preds = %491
  %497 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %498 = load ptr, ptr %497, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %498, i32 noundef 11) #21
  %499 = load ptr, ptr %25, align 8, !tbaa !138
  br label %500

500:                                              ; preds = %491, %496
  %501 = phi ptr [ %488, %491 ], [ %499, %496 ]
  %502 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %503 = load ptr, ptr %502, align 8, !tbaa !108
  %504 = ptrtoint ptr %501 to i64
  %505 = ptrtoint ptr %503 to i64
  %506 = sub i64 %504, %505
  %507 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %508 = load i32, ptr %507, align 8, !tbaa !98
  %509 = icmp ne i32 %508, 0
  %510 = zext i1 %509 to i32
  %511 = sext i8 %487 to i32
  %512 = load ptr, ptr %27, align 8, !tbaa !140
  %513 = ptrtoint ptr %512 to i64
  %514 = sub i64 %513, %504
  %515 = getelementptr inbounds i8, ptr %503, i64 %506
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %509, ptr noundef nonnull @.str.292, ptr nonnull poison, i32 noundef %511, i32 noundef %510, i64 noundef %506, ptr noundef %503, i32 noundef %510, i64 noundef %514, ptr noundef %515)
  %516 = load ptr, ptr %25, align 8, !tbaa !138
  br label %517

517:                                              ; preds = %500, %486
  %518 = phi ptr [ %516, %500 ], [ %488, %486 ]
  %519 = icmp eq ptr %489, %518
  br i1 %519, label %520, label %547

520:                                              ; preds = %517
  %521 = getelementptr inbounds i8, ptr %489, i64 1
  store ptr %521, ptr %25, align 8, !tbaa !138
  %522 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %523 = load ptr, ptr %522, align 8, !tbaa !145
  %524 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %525 = icmp eq ptr %523, %524
  br i1 %525, label %530, label %526

526:                                              ; preds = %520
  %527 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %528 = load ptr, ptr %527, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %528, i32 noundef 11) #21
  %529 = load ptr, ptr %25, align 8, !tbaa !138
  br label %530

530:                                              ; preds = %520, %526
  %531 = phi ptr [ %521, %520 ], [ %529, %526 ]
  %532 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %533 = load ptr, ptr %532, align 8, !tbaa !108
  %534 = ptrtoint ptr %531 to i64
  %535 = ptrtoint ptr %533 to i64
  %536 = sub i64 %534, %535
  %537 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %538 = load i32, ptr %537, align 8, !tbaa !98
  %539 = icmp ne i32 %538, 0
  %540 = zext i1 %539 to i32
  %541 = sext i8 %487 to i32
  %542 = load ptr, ptr %27, align 8, !tbaa !140
  %543 = ptrtoint ptr %542 to i64
  %544 = sub i64 %543, %534
  %545 = getelementptr inbounds i8, ptr %533, i64 %536
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %539, ptr noundef nonnull @.str.293, ptr nonnull poison, i32 noundef %541, i32 noundef %540, i64 noundef %536, ptr noundef %533, i32 noundef %540, i64 noundef %544, ptr noundef %545)
  %546 = load ptr, ptr %25, align 8, !tbaa !138
  br label %547

547:                                              ; preds = %530, %517
  %548 = phi ptr [ %546, %530 ], [ %518, %517 ]
  %549 = ptrtoint ptr %489 to i64
  %550 = ptrtoint ptr %548 to i64
  %551 = sub i64 %549, %550
  %552 = load i8, ptr %548, align 1, !tbaa !9
  %553 = sext i8 %552 to i32
  switch i32 %553, label %577 [
    i32 103, label %554
    i32 115, label %561
    i32 119, label %569
  ]

554:                                              ; preds = %547
  switch i64 %551, label %577 [
    i64 1, label %559
    i64 3, label %555
  ]

555:                                              ; preds = %554
  %556 = getelementptr inbounds i8, ptr %548, i64 1
  %557 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %556, ptr noundef nonnull dereferenceable(3) @.str.294, i64 noundef 2) #24
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %577

559:                                              ; preds = %554, %555
  %560 = load ptr, ptr %14, align 8, !tbaa !5
  store i8 1, ptr %560, align 2, !tbaa !169
  br label %605

561:                                              ; preds = %547
  %562 = icmp eq i64 %551, 2
  br i1 %562, label %563, label %577

563:                                              ; preds = %561
  %564 = getelementptr inbounds i8, ptr %548, i64 1
  %565 = load i8, ptr %564, align 1, !tbaa !9
  %566 = icmp eq i8 %565, 98
  br i1 %566, label %567, label %577

567:                                              ; preds = %563
  %568 = load ptr, ptr %14, align 8, !tbaa !5
  store i8 2, ptr %568, align 2, !tbaa !169
  br label %605

569:                                              ; preds = %547
  %570 = icmp eq i64 %551, 2
  br i1 %570, label %571, label %577

571:                                              ; preds = %569
  %572 = getelementptr inbounds i8, ptr %548, i64 1
  %573 = load i8, ptr %572, align 1, !tbaa !9
  %574 = icmp eq i8 %573, 98
  br i1 %574, label %575, label %577

575:                                              ; preds = %571
  %576 = load ptr, ptr %14, align 8, !tbaa !5
  store i8 3, ptr %576, align 2, !tbaa !169
  br label %605

577:                                              ; preds = %554, %547, %569, %571, %561, %563, %555
  store ptr %489, ptr %25, align 8, !tbaa !138
  %578 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %579 = load ptr, ptr %578, align 8, !tbaa !108
  %580 = ptrtoint ptr %579 to i64
  %581 = sub i64 %549, %580
  %582 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %583 = load ptr, ptr %582, align 8, !tbaa !145
  %584 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %585 = icmp eq ptr %583, %584
  br i1 %585, label %591, label %586

586:                                              ; preds = %577
  %587 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %588 = load ptr, ptr %587, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %588, i32 noundef 11) #21
  %589 = load ptr, ptr %578, align 8, !tbaa !108
  %590 = ptrtoint ptr %589 to i64
  br label %591

591:                                              ; preds = %586, %577
  %592 = phi i64 [ %590, %586 ], [ %580, %577 ]
  %593 = phi ptr [ %589, %586 ], [ %579, %577 ]
  %594 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %595 = load i32, ptr %594, align 8, !tbaa !98
  %596 = icmp ne i32 %595, 0
  %597 = zext i1 %596 to i32
  %598 = sub i64 0, %551
  %599 = getelementptr inbounds i8, ptr %489, i64 %598
  %600 = load ptr, ptr %27, align 8, !tbaa !140
  %601 = ptrtoint ptr %600 to i64
  %602 = add i64 %592, %581
  %603 = sub i64 %601, %602
  %604 = getelementptr inbounds i8, ptr %593, i64 %581
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %596, ptr noundef nonnull @.str.295, ptr nonnull poison, i32 noundef %597, i64 noundef %551, ptr noundef %599, i32 noundef %597, i64 noundef %581, ptr noundef %593, i32 noundef %597, i64 noundef %603, ptr noundef %604)
  br label %605

605:                                              ; preds = %591, %575, %567, %559
  store ptr %489, ptr %25, align 8, !tbaa !138
  %606 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %606, align 8, !tbaa !99
  %607 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %608 = load ptr, ptr %607, align 8, !tbaa !145
  %609 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %610 = icmp ne ptr %608, %609
  %611 = icmp ugt i8 %465, 10
  %612 = and i1 %611, %610
  br i1 %612, label %613, label %638

613:                                              ; preds = %605
  %614 = load ptr, ptr %14, align 8, !tbaa !5
  %615 = getelementptr inbounds %struct.regnode, ptr %614, i64 0, i32 1
  store i8 10, ptr %615, align 1, !tbaa !164
  %616 = getelementptr inbounds i8, ptr %489, i64 1
  %617 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %618 = load ptr, ptr %617, align 8, !tbaa !108
  %619 = ptrtoint ptr %616 to i64
  %620 = ptrtoint ptr %618 to i64
  %621 = sub i64 %619, %620
  %622 = trunc i64 %551 to i32
  %623 = add i32 %622, 4
  %624 = sub i64 -4, %551
  %625 = getelementptr inbounds i8, ptr %489, i64 %624
  %626 = getelementptr inbounds i8, ptr %625, i64 1
  %627 = icmp eq i32 %458, 3
  %628 = select i1 %627, ptr @.str.212, ptr @.str.213
  %629 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %630 = load i32, ptr %629, align 8, !tbaa !98
  %631 = icmp ne i32 %630, 0
  %632 = zext i1 %631 to i32
  %633 = load ptr, ptr %27, align 8, !tbaa !140
  %634 = ptrtoint ptr %633 to i64
  %635 = sub i64 %634, %619
  %636 = getelementptr inbounds i8, ptr %618, i64 %621
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.296, i32 noundef %623, ptr noundef nonnull %626, ptr noundef nonnull %628, i32 noundef %632, i64 noundef %621, ptr noundef %618, i32 noundef %632, i64 noundef %635, ptr noundef %636) #21
  %637 = load ptr, ptr %607, align 8, !tbaa !145
  br label %638

638:                                              ; preds = %605, %613, %477, %484
  %639 = phi ptr [ %608, %605 ], [ %637, %613 ], [ %479, %477 ], [ %479, %484 ]
  %640 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %641 = icmp ne ptr %639, %640
  %642 = and i1 %455, %641
  br i1 %642, label %643, label %697

643:                                              ; preds = %638
  %644 = load ptr, ptr %14, align 8, !tbaa !5
  %645 = getelementptr inbounds %struct.regnode, ptr %644, i64 0, i32 1
  %646 = load i8, ptr %645, align 1, !tbaa !164
  %647 = add i8 %646, 4
  store i8 %647, ptr %645, align 1, !tbaa !164
  br label %697

648:                                              ; preds = %376
  br label %649

649:                                              ; preds = %376, %648
  %650 = phi i32 [ 0, %376 ], [ 1, %648 ]
  %651 = load i32, ptr %0, align 8, !tbaa !109
  %652 = and i32 %651, 896
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %675, label %662

654:                                              ; preds = %376
  %655 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 91)
  store ptr %655, ptr %14, align 8, !tbaa !5
  %656 = load i32, ptr %1, align 4, !tbaa !150
  %657 = or i32 %656, 3
  store i32 %657, ptr %1, align 4, !tbaa !150
  br label %697

658:                                              ; preds = %376
  br label %684

659:                                              ; preds = %376
  br label %660

660:                                              ; preds = %376, %659
  %661 = phi i32 [ 0, %376 ], [ 1, %659 ]
  br label %662

662:                                              ; preds = %376, %452, %649, %660
  %663 = phi i8 [ 20, %660 ], [ 2, %649 ], [ 0, %376 ], [ 0, %452 ]
  %664 = phi i32 [ %661, %660 ], [ %650, %649 ], [ 0, %376 ], [ 1, %452 ]
  %665 = load i32, ptr %0, align 8, !tbaa !109
  %666 = lshr i32 %665, 7
  %667 = trunc i32 %666 to i8
  %668 = and i8 %667, 7
  %669 = icmp ugt i8 %668, 3
  br i1 %669, label %675, label %670

670:                                              ; preds = %662
  %671 = add nuw nsw i8 %668, 21
  %672 = icmp eq i8 %671, 22
  br i1 %672, label %673, label %675

673:                                              ; preds = %670
  %674 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %674, align 8, !tbaa !100
  br label %675

675:                                              ; preds = %662, %649, %673, %670
  %676 = phi i8 [ %663, %673 ], [ %663, %670 ], [ 2, %649 ], [ %663, %662 ]
  %677 = phi i32 [ %664, %673 ], [ %664, %670 ], [ %650, %649 ], [ %664, %662 ]
  %678 = phi i8 [ 22, %673 ], [ %671, %670 ], [ 23, %649 ], [ 24, %662 ]
  %679 = icmp eq i32 %677, 0
  %680 = add nuw nsw i8 %678, 4
  br i1 %679, label %681, label %684

681:                                              ; preds = %376, %379, %675
  %682 = phi i8 [ %678, %675 ], [ 23, %376 ], [ 23, %379 ]
  %683 = phi i8 [ %676, %675 ], [ 22, %376 ], [ 30, %379 ]
  br label %684

684:                                              ; preds = %376, %658, %675, %681
  %685 = phi i8 [ %683, %681 ], [ %676, %675 ], [ 22, %376 ], [ 30, %658 ]
  %686 = phi i8 [ %682, %681 ], [ %680, %675 ], [ 27, %376 ], [ 27, %658 ]
  %687 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext %686)
  store ptr %687, ptr %14, align 8, !tbaa !5
  %688 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %689 = load ptr, ptr %688, align 8, !tbaa !145
  %690 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %691 = icmp eq ptr %689, %690
  br i1 %691, label %694, label %692

692:                                              ; preds = %684
  %693 = lshr i8 %685, 1
  store i8 %693, ptr %687, align 2, !tbaa !169
  br label %694

694:                                              ; preds = %692, %684
  %695 = load i32, ptr %1, align 4, !tbaa !150
  %696 = or i32 %695, 3
  store i32 %696, ptr %1, align 4, !tbaa !150
  br label %697

697:                                              ; preds = %638, %643, %422, %432, %694, %654, %448, %415, %408, %399, %393, %390
  %698 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2407

699:                                              ; preds = %376, %376
  store ptr %34, ptr %25, align 8, !tbaa !138
  %700 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 45
  %701 = load i32, ptr %700, align 4, !tbaa !102
  %702 = icmp ne i32 %701, 0
  %703 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %29, i1 noundef zeroext true, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext %702, ptr noundef null)
  store ptr %703, ptr %14, align 8, !tbaa !5
  %704 = icmp eq ptr %703, null
  br i1 %704, label %705, label %731

705:                                              ; preds = %699
  %706 = load ptr, ptr %27, align 8, !tbaa !140
  %707 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %708 = load ptr, ptr %707, align 8, !tbaa !108
  %709 = ptrtoint ptr %706 to i64
  %710 = ptrtoint ptr %708 to i64
  %711 = sub i64 %709, %710
  %712 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %713 = load ptr, ptr %712, align 8, !tbaa !145
  %714 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %715 = icmp eq ptr %713, %714
  br i1 %715, label %720, label %716

716:                                              ; preds = %705
  %717 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %718 = load ptr, ptr %717, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %718, i32 noundef 11) #21
  %719 = load ptr, ptr %707, align 8, !tbaa !108
  br label %720

720:                                              ; preds = %716, %705
  %721 = phi ptr [ %719, %716 ], [ %708, %705 ]
  %722 = icmp sgt i64 %711, 127
  %723 = select i1 %722, i64 117, i64 %711
  %724 = select i1 %722, ptr @.str.182, ptr @.str.178
  %725 = load i32, ptr %1, align 4, !tbaa !150
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %728 = load i32, ptr %727, align 8, !tbaa !98
  %729 = icmp ne i32 %728, 0
  %730 = zext i1 %729 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.287, i64 noundef %726, i32 noundef %730, i64 noundef %723, ptr noundef %721, ptr noundef nonnull %724) #21
  br label %731

731:                                              ; preds = %720, %699
  %732 = load ptr, ptr %25, align 8, !tbaa !138
  %733 = getelementptr inbounds i8, ptr %732, i64 -1
  store ptr %733, ptr %25, align 8, !tbaa !138
  %734 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2407

735:                                              ; preds = %376
  %736 = getelementptr inbounds i8, ptr %34, i64 2
  store ptr %736, ptr %25, align 8, !tbaa !138
  %737 = call fastcc zeroext i1 @S_grok_bslash_N(ptr noundef nonnull %0, ptr noundef nonnull %14, ptr noundef null, ptr noundef null, ptr noundef nonnull %1, i32 noundef %2)
  br i1 %737, label %2407, label %738

738:                                              ; preds = %735
  %739 = load i32, ptr %1, align 4, !tbaa !150
  %740 = and i32 %739, 32
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %742, label %2409

742:                                              ; preds = %738
  %743 = load ptr, ptr %25, align 8, !tbaa !138
  %744 = getelementptr inbounds i8, ptr %743, i64 -1
  store ptr %744, ptr %25, align 8, !tbaa !138
  br label %1171

745:                                              ; preds = %376, %873
  %746 = phi ptr [ %377, %376 ], [ %876, %873 ]
  %747 = getelementptr inbounds i8, ptr %746, i64 1
  %748 = load i8, ptr %747, align 1, !tbaa !9
  switch i8 %748, label %749 [
    i8 123, label %773
    i8 60, label %773
    i8 39, label %773
  ]

749:                                              ; preds = %745
  store ptr %747, ptr %25, align 8, !tbaa !138
  %750 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %751 = load ptr, ptr %750, align 8, !tbaa !145
  %752 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %753 = icmp eq ptr %751, %752
  br i1 %753, label %758, label %754

754:                                              ; preds = %749
  %755 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %756 = load ptr, ptr %755, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %756, i32 noundef 11) #21
  %757 = load ptr, ptr %25, align 8, !tbaa !138
  br label %758

758:                                              ; preds = %749, %754
  %759 = phi ptr [ %747, %749 ], [ %757, %754 ]
  %760 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %761 = load ptr, ptr %760, align 8, !tbaa !108
  %762 = ptrtoint ptr %759 to i64
  %763 = ptrtoint ptr %761 to i64
  %764 = sub i64 %762, %763
  %765 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %766 = load i32, ptr %765, align 8, !tbaa !98
  %767 = icmp ne i32 %766, 0
  %768 = zext i1 %767 to i32
  %769 = load ptr, ptr %27, align 8, !tbaa !140
  %770 = ptrtoint ptr %769 to i64
  %771 = sub i64 %770, %762
  %772 = getelementptr inbounds i8, ptr %761, i64 %764
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %767, ptr noundef nonnull @.str.297, ptr nonnull poison, ptr noundef %26, i32 noundef %768, i64 noundef %764, ptr noundef %761, i32 noundef %768, i64 noundef %771, ptr noundef %772)
  br label %2407

773:                                              ; preds = %745, %745, %745
  %774 = getelementptr inbounds i8, ptr %746, i64 2
  store ptr %774, ptr %25, align 8, !tbaa !138
  %775 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %776 = load ptr, ptr %775, align 8, !tbaa !145
  %777 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %778 = icmp eq ptr %776, %777
  %779 = select i1 %778, i32 0, i32 2
  %780 = call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %779)
  %781 = load ptr, ptr %25, align 8, !tbaa !138
  %782 = icmp eq ptr %781, %774
  br i1 %782, label %791, label %783

783:                                              ; preds = %773
  %784 = icmp eq i8 %748, 60
  %785 = icmp eq i8 %748, 123
  %786 = select i1 %785, i32 125, i32 39
  %787 = select i1 %784, i32 62, i32 %786
  %788 = load i8, ptr %781, align 1, !tbaa !9
  %789 = sext i8 %788 to i32
  %790 = icmp eq i32 %787, %789
  br i1 %790, label %813, label %791

791:                                              ; preds = %773, %783
  %792 = load ptr, ptr %775, align 8, !tbaa !145
  %793 = icmp eq ptr %792, %777
  br i1 %793, label %798, label %794

794:                                              ; preds = %791
  %795 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %796 = load ptr, ptr %795, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %796, i32 noundef 11) #21
  %797 = load ptr, ptr %25, align 8, !tbaa !138
  br label %798

798:                                              ; preds = %791, %794
  %799 = phi ptr [ %781, %791 ], [ %797, %794 ]
  %800 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %801 = load ptr, ptr %800, align 8, !tbaa !108
  %802 = ptrtoint ptr %799 to i64
  %803 = ptrtoint ptr %801 to i64
  %804 = sub i64 %802, %803
  %805 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %806 = load i32, ptr %805, align 8, !tbaa !98
  %807 = icmp ne i32 %806, 0
  %808 = zext i1 %807 to i32
  %809 = load ptr, ptr %27, align 8, !tbaa !140
  %810 = ptrtoint ptr %809 to i64
  %811 = sub i64 %810, %802
  %812 = getelementptr inbounds i8, ptr %801, i64 %804
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %807, ptr noundef nonnull @.str.240, ptr nonnull poison, ptr noundef %26, i32 noundef %808, i64 noundef %804, ptr noundef %801, i32 noundef %808, i64 noundef %811, ptr noundef %812)
  br label %813

813:                                              ; preds = %798, %783
  %814 = load ptr, ptr %775, align 8, !tbaa !145
  %815 = icmp eq ptr %814, %777
  br i1 %815, label %829, label %816

816:                                              ; preds = %813
  %817 = call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.238, i32 noundef 1)
  %818 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %819 = load ptr, ptr %818, align 8, !tbaa !156
  %820 = getelementptr inbounds %struct.regexp_internal, ptr %819, i64 0, i32 3
  %821 = load ptr, ptr %820, align 8, !tbaa !26
  %822 = zext i32 %817 to i64
  %823 = getelementptr inbounds %struct.reg_data, ptr %821, i64 0, i32 2, i64 %822
  store ptr %780, ptr %823, align 8, !tbaa !5
  %824 = icmp eq ptr %780, null
  br i1 %824, label %829, label %825

825:                                              ; preds = %816
  %826 = getelementptr inbounds %struct.sv, ptr %780, i64 0, i32 1
  %827 = load i32, ptr %826, align 8, !tbaa !22
  %828 = add i32 %827, 1
  store i32 %828, ptr %826, align 8, !tbaa !22
  br label %829

829:                                              ; preds = %816, %825, %813
  %830 = phi i32 [ 0, %813 ], [ %817, %825 ], [ %817, %816 ]
  %831 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 15
  store i32 1, ptr %831, align 4, !tbaa !130
  %832 = load i32, ptr %0, align 8, !tbaa !109
  %833 = and i32 %832, 4
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %844, label %835

835:                                              ; preds = %829
  %836 = lshr i32 %832, 7
  %837 = and i32 %836, 7
  %838 = icmp eq i32 %837, 4
  br i1 %838, label %844, label %839

839:                                              ; preds = %835
  %840 = icmp ugt i32 %837, 1
  br i1 %840, label %844, label %841

841:                                              ; preds = %839
  %842 = icmp eq i32 %837, 1
  %843 = select i1 %842, i8 58, i8 57
  br label %844

844:                                              ; preds = %835, %839, %841, %829
  %845 = phi i8 [ 56, %829 ], [ 60, %835 ], [ %843, %841 ], [ 59, %839 ]
  %846 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext %845, i32 noundef %830)
  store ptr %846, ptr %14, align 8, !tbaa !5
  %847 = load i32, ptr %1, align 4, !tbaa !150
  %848 = or i32 %847, 1
  store i32 %848, ptr %1, align 4, !tbaa !150
  %849 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2407

850:                                              ; preds = %376
  %851 = getelementptr inbounds i8, ptr %34, i64 2
  store ptr %851, ptr %25, align 8, !tbaa !138
  %852 = load i8, ptr %851, align 1, !tbaa !9
  %853 = icmp eq i8 %852, 123
  br i1 %853, label %854, label %857

854:                                              ; preds = %850
  %855 = getelementptr inbounds i8, ptr %34, i64 3
  store ptr %855, ptr %25, align 8, !tbaa !138
  %856 = load i8, ptr %855, align 1, !tbaa !9
  br label %857

857:                                              ; preds = %854, %850
  %858 = phi i8 [ %856, %854 ], [ %852, %850 ]
  %859 = phi ptr [ %855, %854 ], [ %851, %850 ]
  %860 = phi i8 [ 1, %854 ], [ 0, %850 ]
  %861 = icmp eq i8 %858, 45
  br i1 %861, label %862, label %864

862:                                              ; preds = %857
  %863 = getelementptr inbounds i8, ptr %859, i64 1
  store ptr %863, ptr %25, align 8, !tbaa !138
  br label %864

864:                                              ; preds = %862, %857
  %865 = phi ptr [ %863, %862 ], [ %859, %857 ]
  br i1 %853, label %866, label %877

866:                                              ; preds = %864
  %867 = load i8, ptr %865, align 1, !tbaa !9
  %868 = zext i8 %867 to i64
  %869 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %868
  %870 = load i32, ptr %869, align 4, !tbaa !150
  %871 = and i32 %870, 2
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %873, label %877

873:                                              ; preds = %866
  %874 = sext i1 %861 to i64
  %875 = getelementptr inbounds i8, ptr %865, i64 %874
  %876 = getelementptr inbounds i8, ptr %875, i64 -2
  store ptr %876, ptr %25, align 8, !tbaa !138
  br label %745

877:                                              ; preds = %866, %864
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #21
  %878 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %865, ptr noundef nonnull %13, ptr noundef nonnull %12) #21
  %879 = load i64, ptr %13, align 8
  %880 = icmp ult i64 %879, 2147483648
  %881 = select i1 %878, i1 %880, i1 false
  %882 = trunc i64 %879 to i32
  %883 = select i1 %881, i32 %882, i32 2147483647
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #21
  switch i32 %883, label %965 [
    i32 0, label %884
    i32 2147483647, label %909
  ]

884:                                              ; preds = %877
  %885 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %886 = load ptr, ptr %885, align 8, !tbaa !145
  %887 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %888 = icmp eq ptr %886, %887
  br i1 %888, label %892, label %889

889:                                              ; preds = %884
  %890 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %891 = load ptr, ptr %890, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %891, i32 noundef 11) #21
  br label %892

892:                                              ; preds = %884, %889
  %893 = load ptr, ptr %25, align 8, !tbaa !138
  %894 = load ptr, ptr %27, align 8, !tbaa !140
  %895 = icmp ugt ptr %893, %894
  %896 = select i1 %895, ptr %894, ptr %893
  %897 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %898 = load ptr, ptr %897, align 8, !tbaa !108
  %899 = ptrtoint ptr %896 to i64
  %900 = ptrtoint ptr %898 to i64
  %901 = sub i64 %899, %900
  %902 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %903 = load i32, ptr %902, align 8, !tbaa !98
  %904 = icmp ne i32 %903, 0
  %905 = zext i1 %904 to i32
  %906 = ptrtoint ptr %894 to i64
  %907 = sub i64 %906, %899
  %908 = getelementptr inbounds i8, ptr %898, i64 %901
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.298, i32 noundef %905, i64 noundef %901, ptr noundef %898, i32 noundef %905, i64 noundef %907, ptr noundef %908) #21
  br label %965

909:                                              ; preds = %877
  %910 = load ptr, ptr %25, align 8, !tbaa !138
  %911 = load i8, ptr %910, align 1, !tbaa !9
  %912 = zext i8 %911 to i64
  %913 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !150
  %915 = and i32 %914, 2
  %916 = icmp eq i32 %915, 0
  %917 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %918 = load ptr, ptr %917, align 8, !tbaa !145
  %919 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %920 = icmp eq ptr %918, %919
  br i1 %916, label %943, label %921

921:                                              ; preds = %909
  br i1 %920, label %926, label %922

922:                                              ; preds = %921
  %923 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %924 = load ptr, ptr %923, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %924, i32 noundef 11) #21
  %925 = load ptr, ptr %25, align 8, !tbaa !138
  br label %926

926:                                              ; preds = %921, %922
  %927 = phi ptr [ %910, %921 ], [ %925, %922 ]
  %928 = load ptr, ptr %27, align 8, !tbaa !140
  %929 = icmp ugt ptr %927, %928
  %930 = select i1 %929, ptr %928, ptr %927
  %931 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %932 = load ptr, ptr %931, align 8, !tbaa !108
  %933 = ptrtoint ptr %930 to i64
  %934 = ptrtoint ptr %932 to i64
  %935 = sub i64 %933, %934
  %936 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %937 = load i32, ptr %936, align 8, !tbaa !98
  %938 = icmp ne i32 %937, 0
  %939 = zext i1 %938 to i32
  %940 = ptrtoint ptr %928 to i64
  %941 = sub i64 %940, %933
  %942 = getelementptr inbounds i8, ptr %932, i64 %935
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.250, i32 noundef %939, i64 noundef %935, ptr noundef %932, i32 noundef %939, i64 noundef %941, ptr noundef %942) #21
  br label %965

943:                                              ; preds = %909
  br i1 %920, label %948, label %944

944:                                              ; preds = %943
  %945 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %946 = load ptr, ptr %945, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %946, i32 noundef 11) #21
  %947 = load ptr, ptr %25, align 8, !tbaa !138
  br label %948

948:                                              ; preds = %943, %944
  %949 = phi ptr [ %910, %943 ], [ %947, %944 ]
  %950 = load ptr, ptr %27, align 8, !tbaa !140
  %951 = icmp ugt ptr %949, %950
  %952 = select i1 %951, ptr %950, ptr %949
  %953 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %954 = load ptr, ptr %953, align 8, !tbaa !108
  %955 = ptrtoint ptr %952 to i64
  %956 = ptrtoint ptr %954 to i64
  %957 = sub i64 %955, %956
  %958 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %959 = load i32, ptr %958, align 8, !tbaa !98
  %960 = icmp ne i32 %959, 0
  %961 = zext i1 %960 to i32
  %962 = ptrtoint ptr %950 to i64
  %963 = sub i64 %962, %955
  %964 = getelementptr inbounds i8, ptr %954, i64 %957
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.299, i32 noundef %961, i64 noundef %957, ptr noundef %954, i32 noundef %961, i64 noundef %963, ptr noundef %964) #21
  br label %965

965:                                              ; preds = %877, %948, %926, %892
  br i1 %861, label %966, label %1013

966:                                              ; preds = %965
  %967 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %968 = load i32, ptr %967, align 8, !tbaa !142
  %969 = sub nsw i32 %968, %883
  %970 = icmp slt i32 %969, 1
  br i1 %970, label %971, label %1013

971:                                              ; preds = %966
  %972 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %973 = load ptr, ptr %972, align 8, !tbaa !145
  %974 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %975 = icmp eq ptr %973, %974
  br i1 %975, label %979, label %976

976:                                              ; preds = %971
  %977 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %978 = load ptr, ptr %977, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %978, i32 noundef 11) #21
  br label %979

979:                                              ; preds = %971, %976
  %980 = load ptr, ptr %25, align 8, !tbaa !138
  %981 = load ptr, ptr %27, align 8, !tbaa !140
  %982 = icmp ugt ptr %980, %981
  %983 = select i1 %982, ptr %981, ptr %980
  %984 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %985 = load ptr, ptr %984, align 8, !tbaa !108
  %986 = ptrtoint ptr %983 to i64
  %987 = ptrtoint ptr %985 to i64
  %988 = sub i64 %986, %987
  %989 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %990 = load i32, ptr %989, align 8, !tbaa !98
  %991 = icmp ne i32 %990, 0
  %992 = zext i1 %991 to i32
  %993 = ptrtoint ptr %981 to i64
  %994 = sub i64 %993, %986
  %995 = getelementptr inbounds i8, ptr %985, i64 %988
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.300, i32 noundef %992, i64 noundef %988, ptr noundef %985, i32 noundef %992, i64 noundef %994, ptr noundef %995) #21
  br label %1013

996:                                              ; preds = %376, %376, %376, %376, %376, %376, %376, %376, %376
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #21
  %997 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %377, ptr noundef nonnull %11, ptr noundef nonnull %10) #21
  %998 = load i64, ptr %11, align 8
  %999 = icmp ult i64 %998, 2147483648
  %1000 = select i1 %997, i1 %999, i1 false
  %1001 = trunc i64 %998 to i32
  %1002 = select i1 %1000, i32 %1001, i32 2147483647
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  %1003 = icmp ugt i32 %1002, 9
  br i1 %1003, label %1004, label %1013

1004:                                             ; preds = %996
  %1005 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1006 = load i32, ptr %1005, align 8, !tbaa !142
  %1007 = icmp slt i32 %1002, %1006
  br i1 %1007, label %1013, label %1008

1008:                                             ; preds = %1004
  %1009 = load ptr, ptr %25, align 8, !tbaa !138
  %1010 = load i8, ptr %1009, align 1, !tbaa !9
  %1011 = and i8 %1010, -2
  %1012 = icmp eq i8 %1011, 56
  br i1 %1012, label %1013, label %1171

1013:                                             ; preds = %965, %979, %966, %1008, %996, %1004
  %1014 = phi i8 [ 0, %1004 ], [ 0, %996 ], [ 0, %1008 ], [ %860, %966 ], [ %860, %979 ], [ %860, %965 ]
  %1015 = phi i32 [ %1002, %1004 ], [ %1001, %996 ], [ %1002, %1008 ], [ %969, %966 ], [ %969, %979 ], [ %883, %965 ]
  %1016 = load ptr, ptr %25, align 8, !tbaa !138
  %1017 = load i8, ptr %1016, align 1, !tbaa !9
  %1018 = zext i8 %1017 to i64
  %1019 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1018
  %1020 = load i32, ptr %1019, align 4, !tbaa !150
  %1021 = and i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  br i1 %1022, label %1032, label %1023

1023:                                             ; preds = %1013, %1023
  %1024 = phi ptr [ %1025, %1023 ], [ %1016, %1013 ]
  %1025 = getelementptr inbounds i8, ptr %1024, i64 1
  store ptr %1025, ptr %25, align 8, !tbaa !138
  %1026 = load i8, ptr %1025, align 1, !tbaa !9
  %1027 = zext i8 %1026 to i64
  %1028 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1027
  %1029 = load i32, ptr %1028, align 4, !tbaa !150
  %1030 = and i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1032, label %1023, !llvm.loop !358

1032:                                             ; preds = %1023, %1013
  %1033 = phi ptr [ %1016, %1013 ], [ %1025, %1023 ]
  %1034 = phi i8 [ %1017, %1013 ], [ %1026, %1023 ]
  %1035 = and i8 %1014, 1
  %1036 = icmp eq i8 %1035, 0
  br i1 %1036, label %1069, label %1037

1037:                                             ; preds = %1032
  %1038 = icmp eq i8 %1034, 125
  br i1 %1038, label %1066, label %1039

1039:                                             ; preds = %1037
  %1040 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1041 = load ptr, ptr %1040, align 8, !tbaa !145
  %1042 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1043 = icmp eq ptr %1041, %1042
  br i1 %1043, label %1048, label %1044

1044:                                             ; preds = %1039
  %1045 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1046 = load ptr, ptr %1045, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1046, i32 noundef 11) #21
  %1047 = load ptr, ptr %25, align 8, !tbaa !138
  br label %1048

1048:                                             ; preds = %1039, %1044
  %1049 = phi ptr [ %1033, %1039 ], [ %1047, %1044 ]
  %1050 = load ptr, ptr %27, align 8, !tbaa !140
  %1051 = icmp ugt ptr %1049, %1050
  %1052 = select i1 %1051, ptr %1050, ptr %1049
  %1053 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1054 = load ptr, ptr %1053, align 8, !tbaa !108
  %1055 = ptrtoint ptr %1052 to i64
  %1056 = ptrtoint ptr %1054 to i64
  %1057 = sub i64 %1055, %1056
  %1058 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1059 = load i32, ptr %1058, align 8, !tbaa !98
  %1060 = icmp ne i32 %1059, 0
  %1061 = zext i1 %1060 to i32
  %1062 = ptrtoint ptr %1050 to i64
  %1063 = sub i64 %1062, %1055
  %1064 = getelementptr inbounds i8, ptr %1054, i64 %1057
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.301, i32 noundef %1061, i64 noundef %1057, ptr noundef %1054, i32 noundef %1061, i64 noundef %1063, ptr noundef %1064) #21
  %1065 = load ptr, ptr %25, align 8, !tbaa !138
  br label %1066

1066:                                             ; preds = %1048, %1037
  %1067 = phi ptr [ %1065, %1048 ], [ %1033, %1037 ]
  %1068 = getelementptr inbounds i8, ptr %1067, i64 1
  store ptr %1068, ptr %25, align 8, !tbaa !138
  br label %1069

1069:                                             ; preds = %1066, %1032
  %1070 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1071 = load ptr, ptr %1070, align 8, !tbaa !145
  %1072 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1073 = icmp eq ptr %1071, %1072
  br i1 %1073, label %1099, label %1074

1074:                                             ; preds = %1069
  %1075 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %1076 = load ptr, ptr %1075, align 8, !tbaa !155
  %1077 = getelementptr inbounds %struct.regexp, ptr %1076, i64 0, i32 12
  %1078 = load i32, ptr %1077, align 8, !tbaa !56
  %1079 = icmp sgt i32 %1015, %1078
  br i1 %1079, label %1080, label %1099

1080:                                             ; preds = %1074
  %1081 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1082 = load ptr, ptr %1081, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1082, i32 noundef 11) #21
  %1083 = load ptr, ptr %25, align 8, !tbaa !138
  %1084 = load ptr, ptr %27, align 8, !tbaa !140
  %1085 = icmp ugt ptr %1083, %1084
  %1086 = select i1 %1085, ptr %1084, ptr %1083
  %1087 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1088 = load ptr, ptr %1087, align 8, !tbaa !108
  %1089 = ptrtoint ptr %1086 to i64
  %1090 = ptrtoint ptr %1088 to i64
  %1091 = sub i64 %1089, %1090
  %1092 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1093 = load i32, ptr %1092, align 8, !tbaa !98
  %1094 = icmp ne i32 %1093, 0
  %1095 = zext i1 %1094 to i32
  %1096 = ptrtoint ptr %1084 to i64
  %1097 = sub i64 %1096, %1089
  %1098 = getelementptr inbounds i8, ptr %1088, i64 %1091
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.250, i32 noundef %1095, i64 noundef %1091, ptr noundef %1088, i32 noundef %1095, i64 noundef %1097, ptr noundef %1098) #21
  br label %1099

1099:                                             ; preds = %1074, %1080, %1069
  %1100 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 15
  store i32 1, ptr %1100, align 4, !tbaa !130
  %1101 = load i32, ptr %0, align 8, !tbaa !109
  %1102 = and i32 %1101, 4
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1113, label %1104

1104:                                             ; preds = %1099
  %1105 = lshr i32 %1101, 7
  %1106 = and i32 %1105, 7
  %1107 = icmp eq i32 %1106, 4
  br i1 %1107, label %1113, label %1108

1108:                                             ; preds = %1104
  %1109 = icmp ugt i32 %1106, 1
  br i1 %1109, label %1113, label %1110

1110:                                             ; preds = %1108
  %1111 = icmp eq i32 %1106, 1
  %1112 = select i1 %1111, i8 53, i8 52
  br label %1113

1113:                                             ; preds = %1099, %1110, %1108, %1104
  %1114 = phi i8 [ 51, %1099 ], [ 55, %1104 ], [ %1112, %1110 ], [ 54, %1108 ]
  %1115 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext %1114, i32 noundef %1015)
  store ptr %1115, ptr %14, align 8, !tbaa !5
  %1116 = load i32, ptr %1, align 4, !tbaa !150
  %1117 = or i32 %1116, 1
  store i32 %1117, ptr %1, align 4, !tbaa !150
  %1118 = load ptr, ptr %25, align 8, !tbaa !138
  %1119 = getelementptr inbounds i8, ptr %1118, i64 -1
  store ptr %1119, ptr %25, align 8, !tbaa !138
  %1120 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2407

1121:                                             ; preds = %376
  %1122 = load ptr, ptr %27, align 8, !tbaa !140
  %1123 = icmp ult ptr %377, %1122
  br i1 %1123, label %1171, label %1124

1124:                                             ; preds = %1121
  %1125 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1126 = load ptr, ptr %1125, align 8, !tbaa !108
  %1127 = ptrtoint ptr %1122 to i64
  %1128 = ptrtoint ptr %1126 to i64
  %1129 = sub i64 %1127, %1128
  %1130 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1131 = load ptr, ptr %1130, align 8, !tbaa !145
  %1132 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1133 = icmp eq ptr %1131, %1132
  br i1 %1133, label %1138, label %1134

1134:                                             ; preds = %1124
  %1135 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1136 = load ptr, ptr %1135, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1136, i32 noundef 11) #21
  %1137 = load ptr, ptr %1125, align 8, !tbaa !108
  br label %1138

1138:                                             ; preds = %1134, %1124
  %1139 = phi ptr [ %1137, %1134 ], [ %1126, %1124 ]
  %1140 = icmp sgt i64 %1129, 127
  %1141 = select i1 %1140, ptr @.str.182, ptr @.str.178
  %1142 = select i1 %1140, i64 117, i64 %1129
  %1143 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1144 = load i32, ptr %1143, align 8, !tbaa !98
  %1145 = icmp ne i32 %1144, 0
  %1146 = zext i1 %1145 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.302, i32 noundef %1146, i64 noundef %1142, ptr noundef %1139, ptr noundef nonnull %1141) #21
  br label %1171

1147:                                             ; preds = %33
  %1148 = load i32, ptr %0, align 8, !tbaa !109
  %1149 = and i32 %1148, 8
  %1150 = icmp eq i32 %1149, 0
  br i1 %1150, label %1168, label %1151

1151:                                             ; preds = %1147
  %1152 = load ptr, ptr %27, align 8, !tbaa !140
  br label %1153

1153:                                             ; preds = %1156, %1151
  %1154 = phi ptr [ %34, %1151 ], [ %1157, %1156 ]
  %1155 = icmp ult ptr %1154, %1152
  br i1 %1155, label %1156, label %1162

1156:                                             ; preds = %1153
  %1157 = getelementptr inbounds i8, ptr %1154, i64 1
  %1158 = load i8, ptr %1157, align 1, !tbaa !9
  %1159 = icmp eq i8 %1158, 10
  br i1 %1159, label %1160, label %1153, !llvm.loop !348

1160:                                             ; preds = %1156
  %1161 = getelementptr inbounds i8, ptr %1154, i64 2
  br label %1165

1162:                                             ; preds = %1153
  %1163 = load i32, ptr %28, align 8, !tbaa !131
  %1164 = or i32 %1163, 512
  store i32 %1164, ptr %28, align 8, !tbaa !131
  br label %1165

1165:                                             ; preds = %1160, %1162
  %1166 = phi ptr [ %1161, %1160 ], [ %1154, %1162 ]
  store ptr %1166, ptr %25, align 8, !tbaa !138
  %1167 = icmp ult ptr %1166, %1152
  br i1 %1167, label %33, label %1168

1168:                                             ; preds = %1147, %1165, %33
  %1169 = phi ptr [ %34, %1147 ], [ %1166, %1165 ], [ %34, %33 ]
  %1170 = getelementptr inbounds i8, ptr %1169, i64 1
  store ptr %1170, ptr %25, align 8, !tbaa !138
  br label %1171

1171:                                             ; preds = %376, %1008, %1138, %1121, %1168, %742
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #21
  store i64 0, ptr %16, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #21
  call void @llvm.lifetime.start.p0(i64 140, ptr nonnull %18) #21
  %1172 = load i32, ptr %0, align 8, !tbaa !109
  %1173 = and i32 %1172, 4
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1175, label %1179

1175:                                             ; preds = %1171
  %1176 = and i32 %1172, 896
  %1177 = icmp eq i32 %1176, 128
  %1178 = select i1 %1177, i8 32, i8 31
  br label %1187

1179:                                             ; preds = %1171
  %1180 = lshr i32 %1172, 7
  %1181 = and i32 %1180, 7
  %1182 = icmp ugt i32 %1181, 2
  %1183 = add nuw nsw i32 %1181, 255
  %1184 = select i1 %1182, i32 %1183, i32 %1181
  %1185 = trunc i32 %1184 to i8
  %1186 = add i8 %1185, 33
  br label %1187

1187:                                             ; preds = %1175, %1179
  %1188 = phi i8 [ %1186, %1179 ], [ %1178, %1175 ]
  %1189 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1190 = load ptr, ptr %1189, align 8, !tbaa !145
  %1191 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1192 = icmp ne ptr %1190, %1191
  %1193 = add i8 %1188, -33
  %1194 = icmp ult i8 %1193, 2
  %1195 = select i1 %1192, i1 %1194, i1 false
  %1196 = zext i1 %1195 to i8
  br i1 %1192, label %1206, label %1197

1197:                                             ; preds = %1187
  %1198 = zext i8 %1188 to i64
  %1199 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %1198
  %1200 = load i8, ptr %1199, align 1, !tbaa !9
  %1201 = zext i8 %1200 to i64
  %1202 = add nuw nsw i64 %1201, 1
  %1203 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %1204 = load i64, ptr %1203, align 8, !tbaa !144
  %1205 = add i64 %1202, %1204
  store i64 %1205, ptr %1203, align 8, !tbaa !144
  br label %1216

1206:                                             ; preds = %1187
  %1207 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %1208 = load ptr, ptr %1207, align 8, !tbaa !158
  %1209 = icmp ult ptr %1190, %1208
  br i1 %1209, label %1213, label %1210

1210:                                             ; preds = %1206
  %1211 = zext i8 %1188 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef %1211, ptr noundef %1190, ptr noundef %1208) #21
  %1212 = load ptr, ptr %1189, align 8, !tbaa !145
  br label %1213

1213:                                             ; preds = %1206, %1210
  %1214 = phi ptr [ %1212, %1210 ], [ %1190, %1206 ]
  store i8 0, ptr %1190, align 2, !tbaa !169
  %1215 = icmp eq ptr %1214, %1191
  br i1 %1215, label %1216, label %1217

1216:                                             ; preds = %1213, %1197
  store ptr %1190, ptr %14, align 8, !tbaa !5
  br label %1222

1217:                                             ; preds = %1213
  %1218 = getelementptr inbounds %struct.regnode, ptr %1190, i64 0, i32 1
  store i8 %1188, ptr %1218, align 1, !tbaa !164
  %1219 = getelementptr inbounds %struct.regnode, ptr %1190, i64 0, i32 2
  store i16 0, ptr %1219, align 2, !tbaa !168
  %1220 = getelementptr inbounds %struct.regnode, ptr %1190, i64 1
  store ptr %1220, ptr %1189, align 8, !tbaa !145
  store ptr %1190, ptr %14, align 8, !tbaa !5
  %1221 = icmp eq ptr %1220, %1191
  br i1 %1221, label %1222, label %1226

1222:                                             ; preds = %1216, %1217
  %1223 = load i32, ptr %0, align 8, !tbaa !109
  %1224 = and i32 %1223, 4
  %1225 = icmp eq i32 %1224, 0
  br i1 %1225, label %1226, label %1228

1226:                                             ; preds = %1222, %1217
  %1227 = getelementptr inbounds %struct.regnode_string, ptr %1190, i64 0, i32 3
  br label %1228

1228:                                             ; preds = %1222, %1226
  %1229 = phi ptr [ %1227, %1226 ], [ %18, %1222 ]
  %1230 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1231 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1232 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1233 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1234 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1235 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 45
  %1236 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  %1237 = icmp eq i8 %1188, 35
  %1238 = ptrtoint ptr %1229 to i64
  br label %1239

1239:                                             ; preds = %2335, %1228
  %1240 = phi i64 [ undef, %1228 ], [ %2153, %2335 ]
  %1241 = phi i8 [ 127, %1228 ], [ %2339, %2335 ]
  %1242 = phi ptr [ null, %1228 ], [ %2156, %2335 ]
  %1243 = phi i8 [ %1196, %1228 ], [ %2157, %2335 ]
  %1244 = load i32, ptr %0, align 8, !tbaa !109
  %1245 = and i32 %1244, 4
  %1246 = icmp eq i32 %1245, 0
  br i1 %1246, label %1250, label %1247

1247:                                             ; preds = %1239
  %1248 = load ptr, ptr %1189, align 8, !tbaa !145
  %1249 = icmp ne ptr %1248, %1191
  br label %1250

1250:                                             ; preds = %1239, %1247
  %1251 = phi i1 [ %1249, %1247 ], [ false, %1239 ]
  %1252 = zext i1 %1251 to i8
  %1253 = load ptr, ptr %25, align 8, !tbaa !138
  %1254 = getelementptr inbounds i8, ptr %1253, i64 -1
  store ptr %1254, ptr %17, align 8, !tbaa !5
  %1255 = zext i8 %1241 to i64
  %1256 = icmp eq i8 %1241, 0
  br i1 %1256, label %2150, label %1257

1257:                                             ; preds = %1250
  %1258 = load ptr, ptr %27, align 8, !tbaa !140
  %1259 = icmp ult ptr %1254, %1258
  br i1 %1259, label %1265, label %2141

1260:                                             ; preds = %2137
  %1261 = load ptr, ptr %17, align 8, !tbaa !5
  %1262 = load ptr, ptr %27, align 8, !tbaa !140
  %1263 = icmp ult ptr %1261, %1262
  %1264 = load i32, ptr %0, align 8, !tbaa !109
  br i1 %1263, label %1265, label %2141, !llvm.loop !359

1265:                                             ; preds = %1257, %1260
  %1266 = phi i32 [ %1264, %1260 ], [ %1244, %1257 ]
  %1267 = phi ptr [ %1262, %1260 ], [ %1258, %1257 ]
  %1268 = phi ptr [ %1261, %1260 ], [ %1254, %1257 ]
  %1269 = phi i64 [ %1791, %1260 ], [ %1240, %1257 ]
  %1270 = phi i64 [ %2136, %1260 ], [ 0, %1257 ]
  %1271 = phi ptr [ %2133, %1260 ], [ %1229, %1257 ]
  %1272 = phi i8 [ %2134, %1260 ], [ %1243, %1257 ]
  %1273 = phi i8 [ %2135, %1260 ], [ %1252, %1257 ]
  %1274 = and i32 %1266, 8
  %1275 = icmp eq i32 %1274, 0
  br i1 %1275, label %1333, label %1276

1276:                                             ; preds = %1265
  %1277 = ptrtoint ptr %1267 to i64
  br label %1278

1278:                                             ; preds = %1328, %1276
  %1279 = phi ptr [ %1329, %1328 ], [ %1268, %1276 ]
  %1280 = load i8, ptr %1279, align 1, !tbaa !9
  switch i8 %1280, label %1281 [
    i8 32, label %1310
    i8 13, label %1310
    i8 12, label %1310
    i8 11, label %1310
    i8 10, label %1310
    i8 9, label %1310
  ]

1281:                                             ; preds = %1278
  %1282 = load i32, ptr %1230, align 8, !tbaa !98
  %1283 = icmp eq i32 %1282, 0
  br i1 %1283, label %1309, label %1284

1284:                                             ; preds = %1281
  %1285 = ptrtoint ptr %1279 to i64
  %1286 = sub i64 %1277, %1285
  %1287 = zext i8 %1280 to i64
  %1288 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1287
  %1289 = load i8, ptr %1288, align 1, !tbaa !9
  %1290 = zext i8 %1289 to i64
  %1291 = icmp slt i64 %1286, %1290
  br i1 %1291, label %1313, label %1292

1292:                                             ; preds = %1284
  switch i8 %1280, label %1331 [
    i8 -62, label %1293
    i8 -30, label %1297
    i8 35, label %1315
  ]

1293:                                             ; preds = %1292
  %1294 = getelementptr inbounds i8, ptr %1279, i64 1
  %1295 = load i8, ptr %1294, align 1, !tbaa !9
  %1296 = icmp eq i8 %1295, -123
  br i1 %1296, label %1310, label %1331

1297:                                             ; preds = %1292
  %1298 = getelementptr inbounds i8, ptr %1279, i64 1
  %1299 = load i8, ptr %1298, align 1, !tbaa !9
  %1300 = icmp eq i8 %1299, -128
  br i1 %1300, label %1301, label %1331

1301:                                             ; preds = %1297
  %1302 = getelementptr inbounds i8, ptr %1279, i64 2
  %1303 = load i8, ptr %1302, align 1, !tbaa !9
  %1304 = and i8 %1303, -2
  %1305 = icmp eq i8 %1304, -114
  %1306 = icmp eq i8 %1304, -88
  %1307 = or i1 %1305, %1306
  %1308 = freeze i1 %1307
  br i1 %1308, label %1310, label %1331

1309:                                             ; preds = %1281
  switch i8 %1280, label %1331 [
    i8 -123, label %1310
    i8 35, label %1315
  ]

1310:                                             ; preds = %1309, %1301, %1293, %1278, %1278, %1278, %1278, %1278, %1278
  %1311 = phi i64 [ 1, %1309 ], [ 1, %1278 ], [ 3, %1301 ], [ 2, %1293 ], [ 1, %1278 ], [ 1, %1278 ], [ 1, %1278 ], [ 1, %1278 ], [ 1, %1278 ]
  %1312 = getelementptr inbounds i8, ptr %1279, i64 %1311
  br label %1328

1313:                                             ; preds = %1284
  %1314 = icmp eq i8 %1280, 35
  br i1 %1314, label %1315, label %1331

1315:                                             ; preds = %1313, %1309, %1292
  br label %1316

1316:                                             ; preds = %1315, %1319
  %1317 = phi ptr [ %1320, %1319 ], [ %1279, %1315 ]
  %1318 = icmp ult ptr %1317, %1267
  br i1 %1318, label %1319, label %1325

1319:                                             ; preds = %1316
  %1320 = getelementptr inbounds i8, ptr %1317, i64 1
  %1321 = load i8, ptr %1320, align 1, !tbaa !9
  %1322 = icmp eq i8 %1321, 10
  br i1 %1322, label %1323, label %1316, !llvm.loop !348

1323:                                             ; preds = %1319
  %1324 = getelementptr inbounds i8, ptr %1317, i64 2
  br label %1328

1325:                                             ; preds = %1316
  %1326 = load i32, ptr %28, align 8, !tbaa !131
  %1327 = or i32 %1326, 512
  store i32 %1327, ptr %28, align 8, !tbaa !131
  br label %1328

1328:                                             ; preds = %1325, %1323, %1310
  %1329 = phi ptr [ %1312, %1310 ], [ %1324, %1323 ], [ %1317, %1325 ]
  %1330 = icmp ult ptr %1329, %1267
  br i1 %1330, label %1278, label %1331

1331:                                             ; preds = %1292, %1293, %1297, %1301, %1309, %1313, %1328
  %1332 = phi ptr [ %1279, %1293 ], [ %1279, %1301 ], [ %1279, %1297 ], [ %1279, %1313 ], [ %1279, %1309 ], [ %1279, %1292 ], [ %1329, %1328 ]
  store ptr %1332, ptr %17, align 8, !tbaa !5
  br label %1333

1333:                                             ; preds = %1331, %1265
  %1334 = phi ptr [ %1332, %1331 ], [ %1268, %1265 ]
  %1335 = load i8, ptr %1334, align 1, !tbaa !9
  switch i8 %1335, label %1767 [
    i8 94, label %2341
    i8 36, label %2341
    i8 46, label %2341
    i8 91, label %2341
    i8 40, label %2341
    i8 41, label %2341
    i8 124, label %2341
    i8 92, label %1336
    i8 123, label %1736
  ]

1336:                                             ; preds = %1333
  %1337 = getelementptr inbounds i8, ptr %1334, i64 1
  store ptr %1337, ptr %17, align 8, !tbaa !5
  %1338 = load i8, ptr %1337, align 1, !tbaa !9
  switch i8 %1338, label %1702 [
    i8 65, label %1339
    i8 98, label %1339
    i8 66, label %1339
    i8 67, label %1339
    i8 100, label %1339
    i8 68, label %1339
    i8 103, label %1339
    i8 71, label %1339
    i8 104, label %1339
    i8 72, label %1339
    i8 107, label %1339
    i8 75, label %1339
    i8 112, label %1339
    i8 80, label %1339
    i8 82, label %1339
    i8 115, label %1339
    i8 83, label %1339
    i8 118, label %1339
    i8 86, label %1339
    i8 119, label %1339
    i8 87, label %1339
    i8 88, label %1339
    i8 122, label %1339
    i8 90, label %1339
    i8 110, label %1340
    i8 78, label %1342
    i8 114, label %1377
    i8 116, label %1379
    i8 102, label %1381
    i8 101, label %1383
    i8 97, label %1385
    i8 111, label %1387
    i8 120, label %1486
    i8 99, label %1535
    i8 56, label %1543
    i8 57, label %1543
    i8 49, label %1544
    i8 50, label %1544
    i8 51, label %1544
    i8 52, label %1544
    i8 53, label %1544
    i8 54, label %1544
    i8 55, label %1544
    i8 48, label %1562
    i8 0, label %1682
  ]

1339:                                             ; preds = %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336, %1336
  store ptr %1334, ptr %17, align 8, !tbaa !5
  br label %2341

1340:                                             ; preds = %1336
  store i64 10, ptr %16, align 8, !tbaa !71
  %1341 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1341, ptr %17, align 8, !tbaa !5
  br label %1790

1342:                                             ; preds = %1336
  %1343 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1343, ptr %25, align 8, !tbaa !138
  %1344 = call fastcc zeroext i1 @S_grok_bslash_N(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %16, ptr noundef null, ptr noundef nonnull %1, i32 noundef %2)
  br i1 %1344, label %1369, label %1345

1345:                                             ; preds = %1342
  %1346 = load i32, ptr %1, align 4, !tbaa !150
  %1347 = and i32 %1346, 32
  %1348 = icmp eq i32 %1347, 0
  br i1 %1348, label %1368, label %1349

1349:                                             ; preds = %1345
  %1350 = load ptr, ptr %27, align 8, !tbaa !140
  %1351 = load ptr, ptr %1232, align 8, !tbaa !108
  %1352 = ptrtoint ptr %1350 to i64
  %1353 = ptrtoint ptr %1351 to i64
  %1354 = sub i64 %1352, %1353
  %1355 = load ptr, ptr %1189, align 8, !tbaa !145
  %1356 = icmp eq ptr %1355, %1191
  br i1 %1356, label %1360, label %1357

1357:                                             ; preds = %1349
  %1358 = load ptr, ptr %1233, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1358, i32 noundef 11) #21
  %1359 = load ptr, ptr %1232, align 8, !tbaa !108
  br label %1360

1360:                                             ; preds = %1357, %1349
  %1361 = phi ptr [ %1359, %1357 ], [ %1351, %1349 ]
  %1362 = icmp sgt i64 %1354, 127
  %1363 = select i1 %1362, ptr @.str.182, ptr @.str.178
  %1364 = select i1 %1362, i64 117, i64 %1354
  %1365 = load i32, ptr %1230, align 8, !tbaa !98
  %1366 = icmp ne i32 %1365, 0
  %1367 = zext i1 %1366 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.303, i32 noundef %1367, i64 noundef %1364, ptr noundef %1361, ptr noundef nonnull %1363) #21
  br label %1368

1368:                                             ; preds = %1360, %1345
  store ptr %1268, ptr %17, align 8, !tbaa !5
  store ptr %1268, ptr %25, align 8, !tbaa !138
  br label %2341

1369:                                             ; preds = %1342
  %1370 = load ptr, ptr %25, align 8, !tbaa !138
  store ptr %1370, ptr %17, align 8, !tbaa !5
  %1371 = load i64, ptr %16, align 8
  %1372 = icmp ugt i64 %1371, 255
  br i1 %1372, label %1373, label %1790

1373:                                             ; preds = %1369
  %1374 = load i32, ptr %1230, align 8, !tbaa !98
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %1790

1376:                                             ; preds = %1373
  store i32 32, ptr %1, align 4, !tbaa !150
  br label %2405

1377:                                             ; preds = %1336
  store i64 13, ptr %16, align 8, !tbaa !71
  %1378 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1378, ptr %17, align 8, !tbaa !5
  br label %1790

1379:                                             ; preds = %1336
  store i64 9, ptr %16, align 8, !tbaa !71
  %1380 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1380, ptr %17, align 8, !tbaa !5
  br label %1790

1381:                                             ; preds = %1336
  store i64 12, ptr %16, align 8, !tbaa !71
  %1382 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1382, ptr %17, align 8, !tbaa !5
  br label %1790

1383:                                             ; preds = %1336
  store i64 27, ptr %16, align 8, !tbaa !71
  %1384 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1384, ptr %17, align 8, !tbaa !5
  br label %1790

1385:                                             ; preds = %1336
  store i64 7, ptr %16, align 8, !tbaa !71
  %1386 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1386, ptr %17, align 8, !tbaa !5
  br label %1790

1387:                                             ; preds = %1336
  %1388 = load ptr, ptr %1189, align 8, !tbaa !145
  %1389 = icmp eq ptr %1388, %1191
  %1390 = load i32, ptr %1235, align 4, !tbaa !102
  %1391 = icmp eq i32 %1390, 0
  %1392 = load i32, ptr %1230, align 8, !tbaa !98
  %1393 = icmp eq i32 %1392, 0
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #21
  store i32 7, ptr %9, align 4, !tbaa !150
  %1394 = getelementptr inbounds i8, ptr %1334, i64 2
  store ptr %1394, ptr %17, align 8, !tbaa !5
  %1395 = load i8, ptr %1394, align 1, !tbaa !9
  %1396 = icmp eq i8 %1395, 123
  br i1 %1396, label %1397, label %1440

1397:                                             ; preds = %1387
  %1398 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %1394, i32 noundef 125) #24
  %1399 = icmp eq ptr %1398, null
  %1400 = getelementptr inbounds i8, ptr %1334, i64 3
  br i1 %1399, label %1401, label %1407

1401:                                             ; preds = %1397, %1401
  %1402 = phi ptr [ %1406, %1401 ], [ %1400, %1397 ]
  %1403 = load i8, ptr %1402, align 1, !tbaa !9
  %1404 = and i8 %1403, -8
  %1405 = icmp eq i8 %1404, 48
  %1406 = getelementptr inbounds i8, ptr %1402, i64 1
  br i1 %1405, label %1401, label %1439, !llvm.loop !360

1407:                                             ; preds = %1397
  store ptr %1400, ptr %17, align 8, !tbaa !5
  %1408 = ptrtoint ptr %1398 to i64
  %1409 = ptrtoint ptr %1400 to i64
  %1410 = sub i64 %1408, %1409
  store i64 %1410, ptr %8, align 8, !tbaa !71
  %1411 = icmp eq ptr %1398, %1400
  br i1 %1411, label %1412, label %1414

1412:                                             ; preds = %1407
  %1413 = getelementptr inbounds i8, ptr %1334, i64 4
  store ptr %1413, ptr %17, align 8, !tbaa !5
  br label %1440

1414:                                             ; preds = %1407
  store i32 15, ptr %9, align 4, !tbaa !150
  %1415 = call i64 @Perl_grok_oct(ptr noundef nonnull %1400, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef null) #21
  %1416 = load i64, ptr %8, align 8, !tbaa !71
  %1417 = icmp eq i64 %1416, %1410
  br i1 %1417, label %1437, label %1418

1418:                                             ; preds = %1414
  br i1 %1391, label %1431, label %1419

1419:                                             ; preds = %1418
  %1420 = getelementptr inbounds i8, ptr %1400, i64 %1416
  store ptr %1420, ptr %17, align 8, !tbaa !5
  br i1 %1393, label %1427, label %1421

1421:                                             ; preds = %1419
  %1422 = load i8, ptr %1420, align 1, !tbaa !9
  %1423 = zext i8 %1422 to i64
  %1424 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1423
  %1425 = load i8, ptr %1424, align 1, !tbaa !9
  %1426 = zext i8 %1425 to i64
  br label %1427

1427:                                             ; preds = %1421, %1419
  %1428 = phi i64 [ %1426, %1421 ], [ 1, %1419 ]
  %1429 = getelementptr inbounds i8, ptr %1420, i64 %1428
  store ptr %1429, ptr %17, align 8, !tbaa !5
  %1430 = load ptr, ptr %1189, align 8, !tbaa !145
  br label %1440

1431:                                             ; preds = %1418
  br i1 %1389, label %1437, label %1432

1432:                                             ; preds = %1431
  %1433 = getelementptr inbounds i8, ptr %1400, i64 %1416
  %1434 = load i8, ptr %1433, align 1, !tbaa !9
  %1435 = sext i8 %1434 to i32
  %1436 = trunc i64 %1416 to i32
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 31, ptr noundef nonnull @.str.379, i32 noundef %1435, i32 noundef %1436, ptr noundef nonnull %1400) #21
  br label %1437

1437:                                             ; preds = %1414, %1431, %1432
  %1438 = getelementptr inbounds i8, ptr %1398, i64 1
  store ptr %1438, ptr %17, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  br label %1464

1439:                                             ; preds = %1401
  store ptr %1402, ptr %17, align 8, !tbaa !5
  br label %1440

1440:                                             ; preds = %1439, %1412, %1427, %1387
  %1441 = phi ptr [ %1388, %1387 ], [ %1430, %1427 ], [ %1388, %1412 ], [ %1388, %1439 ]
  %1442 = phi ptr [ %1394, %1387 ], [ %1429, %1427 ], [ %1413, %1412 ], [ %1402, %1439 ]
  %1443 = phi i64 [ %1269, %1387 ], [ %1415, %1427 ], [ %1269, %1412 ], [ %1269, %1439 ]
  %1444 = phi ptr [ @.str.375, %1387 ], [ @.str.378, %1427 ], [ @.str.377, %1412 ], [ @.str.376, %1439 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  store ptr %1442, ptr %25, align 8, !tbaa !138
  %1445 = icmp eq ptr %1441, %1191
  br i1 %1445, label %1449, label %1446

1446:                                             ; preds = %1440
  %1447 = load ptr, ptr %1233, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1447, i32 noundef 11) #21
  %1448 = load ptr, ptr %25, align 8, !tbaa !138
  br label %1449

1449:                                             ; preds = %1440, %1446
  %1450 = phi ptr [ %1442, %1440 ], [ %1448, %1446 ]
  %1451 = load ptr, ptr %27, align 8, !tbaa !140
  %1452 = icmp ugt ptr %1450, %1451
  %1453 = select i1 %1452, ptr %1451, ptr %1450
  %1454 = load ptr, ptr %1232, align 8, !tbaa !108
  %1455 = ptrtoint ptr %1453 to i64
  %1456 = ptrtoint ptr %1454 to i64
  %1457 = sub i64 %1455, %1456
  %1458 = load i32, ptr %1230, align 8, !tbaa !98
  %1459 = icmp ne i32 %1458, 0
  %1460 = zext i1 %1459 to i32
  %1461 = ptrtoint ptr %1451 to i64
  %1462 = sub i64 %1461, %1455
  %1463 = getelementptr inbounds i8, ptr %1454, i64 %1457
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull %1444, i32 noundef %1460, i64 noundef %1457, ptr noundef %1454, i32 noundef %1460, i64 noundef %1462, ptr noundef %1463) #21
  br label %1464

1464:                                             ; preds = %1437, %1449
  %1465 = phi i64 [ %1443, %1449 ], [ %1415, %1437 ]
  store i64 %1465, ptr %16, align 8, !tbaa !71
  %1466 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1467 = icmp eq ptr %1466, null
  br i1 %1467, label %1468, label %1477

1468:                                             ; preds = %1464
  %1469 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1470 = icmp eq ptr %1469, null
  br i1 %1470, label %1479, label %1471

1471:                                             ; preds = %1468
  %1472 = call ptr @Perl__get_encoding() #21
  %1473 = icmp ne ptr %1472, null
  %1474 = load i64, ptr %16, align 8
  %1475 = icmp ult i64 %1474, 256
  %1476 = select i1 %1473, i1 %1475, i1 false
  br i1 %1476, label %1621, label %1479

1477:                                             ; preds = %1464
  %1478 = icmp ult i64 %1465, 256
  br i1 %1478, label %1621, label %1482

1479:                                             ; preds = %1468, %1471
  %1480 = phi i64 [ %1474, %1471 ], [ %1465, %1468 ]
  %1481 = icmp ugt i64 %1480, 255
  br i1 %1481, label %1482, label %1790

1482:                                             ; preds = %1477, %1479
  %1483 = load i32, ptr %1230, align 8, !tbaa !98
  %1484 = icmp eq i32 %1483, 0
  br i1 %1484, label %1485, label %1790

1485:                                             ; preds = %1482
  store i32 32, ptr %1, align 4, !tbaa !150
  br label %2405

1486:                                             ; preds = %1336
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #21
  store i64 -1, ptr %19, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #21
  %1487 = load ptr, ptr %1189, align 8, !tbaa !145
  %1488 = icmp ne ptr %1487, %1191
  %1489 = load i32, ptr %1235, align 4, !tbaa !102
  %1490 = icmp ne i32 %1489, 0
  %1491 = load i32, ptr %1230, align 8, !tbaa !98
  %1492 = icmp ne i32 %1491, 0
  %1493 = call fastcc zeroext i1 @S_grok_bslash_x(ptr noundef nonnull %17, ptr noundef nonnull %19, ptr noundef nonnull %20, i1 noundef zeroext %1488, i1 noundef zeroext %1490, i1 noundef zeroext true, i1 noundef zeroext %1492)
  br i1 %1493, label %1517, label %1494

1494:                                             ; preds = %1486
  %1495 = load ptr, ptr %17, align 8, !tbaa !5
  store ptr %1495, ptr %25, align 8, !tbaa !138
  %1496 = load ptr, ptr %1189, align 8, !tbaa !145
  %1497 = icmp eq ptr %1496, %1191
  br i1 %1497, label %1501, label %1498

1498:                                             ; preds = %1494
  %1499 = load ptr, ptr %1233, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1499, i32 noundef 11) #21
  %1500 = load ptr, ptr %25, align 8, !tbaa !138
  br label %1501

1501:                                             ; preds = %1494, %1498
  %1502 = phi ptr [ %1495, %1494 ], [ %1500, %1498 ]
  %1503 = load ptr, ptr %27, align 8, !tbaa !140
  %1504 = icmp ugt ptr %1502, %1503
  %1505 = select i1 %1504, ptr %1503, ptr %1502
  %1506 = load ptr, ptr %1232, align 8, !tbaa !108
  %1507 = ptrtoint ptr %1505 to i64
  %1508 = ptrtoint ptr %1506 to i64
  %1509 = sub i64 %1507, %1508
  %1510 = load ptr, ptr %20, align 8, !tbaa !5
  %1511 = load i32, ptr %1230, align 8, !tbaa !98
  %1512 = icmp ne i32 %1511, 0
  %1513 = zext i1 %1512 to i32
  %1514 = ptrtoint ptr %1503 to i64
  %1515 = sub i64 %1514, %1507
  %1516 = getelementptr inbounds i8, ptr %1506, i64 %1509
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef %1510, i32 noundef %1513, i64 noundef %1509, ptr noundef %1506, i32 noundef %1513, i64 noundef %1515, ptr noundef %1516) #21
  br label %1517

1517:                                             ; preds = %1501, %1486
  %1518 = load i64, ptr %19, align 8, !tbaa !71
  store i64 %1518, ptr %16, align 8, !tbaa !71
  %1519 = icmp ult i64 %1518, 256
  br i1 %1519, label %1520, label %1529

1520:                                             ; preds = %1517
  %1521 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1522 = icmp eq ptr %1521, null
  br i1 %1522, label %1523, label %1533

1523:                                             ; preds = %1520
  %1524 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1525 = icmp eq ptr %1524, null
  br i1 %1525, label %1534, label %1526

1526:                                             ; preds = %1523
  %1527 = call ptr @Perl__get_encoding() #21
  %1528 = icmp eq ptr %1527, null
  br i1 %1528, label %1534, label %1533

1529:                                             ; preds = %1517
  %1530 = load i32, ptr %1230, align 8, !tbaa !98
  %1531 = icmp eq i32 %1530, 0
  br i1 %1531, label %1532, label %1534

1532:                                             ; preds = %1529
  store i32 32, ptr %1, align 4, !tbaa !150
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #21
  br label %2405

1533:                                             ; preds = %1520, %1526
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #21
  br label %1621

1534:                                             ; preds = %1523, %1526, %1529
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #21
  br label %1790

1535:                                             ; preds = %1336
  %1536 = getelementptr inbounds i8, ptr %1334, i64 2
  %1537 = getelementptr inbounds i8, ptr %1334, i64 3
  store ptr %1537, ptr %17, align 8, !tbaa !5
  %1538 = load i8, ptr %1536, align 1, !tbaa !9
  %1539 = load ptr, ptr %1189, align 8, !tbaa !145
  %1540 = icmp ne ptr %1539, %1191
  %1541 = call fastcc signext i8 @S_grok_bslash_c(i8 noundef signext %1538, i1 noundef zeroext %1540)
  %1542 = sext i8 %1541 to i64
  store i64 %1542, ptr %16, align 8, !tbaa !71
  br label %1790

1543:                                             ; preds = %1336, %1336
  store ptr %1334, ptr %17, align 8, !tbaa !5
  br label %2341

1544:                                             ; preds = %1336, %1336, %1336, %1336, %1336, %1336, %1336
  %1545 = getelementptr inbounds i8, ptr %1334, i64 2
  %1546 = load i8, ptr %1545, align 1, !tbaa !9
  %1547 = zext i8 %1546 to i64
  %1548 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1547
  %1549 = load i32, ptr %1548, align 4, !tbaa !150
  %1550 = and i32 %1549, 2
  %1551 = icmp eq i32 %1550, 0
  br i1 %1551, label %1561, label %1552

1552:                                             ; preds = %1544
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #21
  %1553 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %1337, ptr noundef nonnull %7, ptr noundef nonnull %6) #21
  %1554 = load i64, ptr %7, align 8
  %1555 = icmp ult i64 %1554, 2147483648
  %1556 = select i1 %1553, i1 %1555, i1 false
  %1557 = trunc i64 %1554 to i32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #21
  %1558 = load i32, ptr %1234, align 8, !tbaa !142
  %1559 = icmp sgt i32 %1558, %1557
  %1560 = select i1 %1556, i1 %1559, i1 false
  br i1 %1560, label %1561, label %1562

1561:                                             ; preds = %1544, %1552
  store ptr %1334, ptr %17, align 8, !tbaa !5
  br label %2341

1562:                                             ; preds = %1552, %1336
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #21
  store i32 4, ptr %21, align 4, !tbaa !150
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %22) #21
  store i64 3, ptr %22, align 8, !tbaa !71
  %1563 = call i64 @Perl_grok_oct(ptr noundef nonnull %1337, ptr noundef nonnull %22, ptr noundef nonnull %21, ptr noundef null) #21
  store i64 %1563, ptr %16, align 8, !tbaa !71
  %1564 = icmp ugt i64 %1563, 255
  br i1 %1564, label %1565, label %1569

1565:                                             ; preds = %1562
  %1566 = load i32, ptr %1230, align 8, !tbaa !98
  %1567 = icmp eq i32 %1566, 0
  br i1 %1567, label %1568, label %1569

1568:                                             ; preds = %1565
  store i32 32, ptr %1, align 4, !tbaa !150
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %22) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #21
  br label %2405

1569:                                             ; preds = %1565, %1562
  %1570 = load i64, ptr %22, align 8
  %1571 = getelementptr inbounds i8, ptr %1337, i64 %1570
  store ptr %1571, ptr %17, align 8, !tbaa !5
  %1572 = load ptr, ptr %1189, align 8, !tbaa !145
  %1573 = icmp ne ptr %1572, %1191
  %1574 = icmp ult i64 %1570, 3
  %1575 = select i1 %1573, i1 %1574, i1 false
  br i1 %1575, label %1576, label %1606

1576:                                             ; preds = %1569
  %1577 = load ptr, ptr %27, align 8, !tbaa !140
  %1578 = icmp ult ptr %1571, %1577
  br i1 %1578, label %1579, label %1606

1579:                                             ; preds = %1576
  %1580 = load i8, ptr %1571, align 1, !tbaa !9
  %1581 = zext i8 %1580 to i64
  %1582 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1581
  %1583 = load i32, ptr %1582, align 4, !tbaa !150
  %1584 = and i32 %1583, 2
  %1585 = icmp eq i32 %1584, 0
  br i1 %1585, label %1606, label %1586

1586:                                             ; preds = %1579
  %1587 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #21
  br i1 %1587, label %1588, label %1606

1588:                                             ; preds = %1586
  %1589 = getelementptr inbounds i8, ptr %1571, i64 1
  %1590 = load ptr, ptr %1232, align 8, !tbaa !108
  %1591 = ptrtoint ptr %1589 to i64
  %1592 = ptrtoint ptr %1590 to i64
  %1593 = sub i64 %1591, %1592
  %1594 = load i64, ptr %22, align 8, !tbaa !71
  %1595 = call fastcc ptr @S_form_short_octal_warning(ptr noundef nonnull %1571, i64 noundef %1594)
  %1596 = load i32, ptr %1230, align 8, !tbaa !98
  %1597 = icmp ne i32 %1596, 0
  %1598 = zext i1 %1597 to i32
  %1599 = load ptr, ptr %1232, align 8, !tbaa !108
  %1600 = load ptr, ptr %27, align 8, !tbaa !140
  %1601 = ptrtoint ptr %1600 to i64
  %1602 = ptrtoint ptr %1599 to i64
  %1603 = add i64 %1593, %1602
  %1604 = sub i64 %1601, %1603
  %1605 = getelementptr inbounds i8, ptr %1599, i64 %1593
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.227, ptr noundef %1595, i32 noundef %1598, i64 noundef %1593, ptr noundef %1599, i32 noundef %1598, i64 noundef %1604, ptr noundef %1605) #21
  br label %1606

1606:                                             ; preds = %1569, %1576, %1586, %1588, %1579
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %22) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #21
  %1607 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1608 = icmp eq ptr %1607, null
  br i1 %1608, label %1609, label %1618

1609:                                             ; preds = %1606
  %1610 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1611 = icmp eq ptr %1610, null
  br i1 %1611, label %1790, label %1612

1612:                                             ; preds = %1609
  %1613 = call ptr @Perl__get_encoding() #21
  %1614 = icmp ne ptr %1613, null
  %1615 = load i64, ptr %16, align 8
  %1616 = icmp ult i64 %1615, 256
  %1617 = select i1 %1614, i1 %1616, i1 false
  br i1 %1617, label %1621, label %1790

1618:                                             ; preds = %1606
  %1619 = load i64, ptr %16, align 8
  %1620 = icmp ult i64 %1619, 256
  br i1 %1620, label %1621, label %1790

1621:                                             ; preds = %1477, %1471, %1533, %1618, %1612
  %1622 = phi i64 [ %1269, %1612 ], [ %1269, %1618 ], [ %1269, %1533 ], [ %1465, %1471 ], [ %1465, %1477 ]
  %1623 = load i32, ptr %1236, align 8, !tbaa !136
  %1624 = icmp eq i32 %1623, 0
  br i1 %1624, label %1625, label %1790

1625:                                             ; preds = %1621
  %1626 = call ptr @Perl__get_encoding() #21
  %1627 = load i64, ptr %16, align 8, !tbaa !71
  %1628 = trunc i64 %1627 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 %1628, ptr %4, align 1, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  store i64 1, ptr %5, align 8, !tbaa !71
  %1629 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %4, i64 noundef 1, i32 noundef 524288) #21
  %1630 = icmp eq ptr %1626, null
  br i1 %1630, label %1633, label %1631

1631:                                             ; preds = %1625
  %1632 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %1629, ptr noundef nonnull %1626) #21
  br label %1636

1633:                                             ; preds = %1625
  %1634 = getelementptr inbounds %struct.sv, ptr %1629, i64 0, i32 3
  %1635 = load ptr, ptr %1634, align 8, !tbaa !9
  br label %1636

1636:                                             ; preds = %1633, %1631
  %1637 = phi ptr [ %1632, %1631 ], [ %1635, %1633 ]
  %1638 = load ptr, ptr %1629, align 8, !tbaa !63
  %1639 = getelementptr inbounds %struct.xpv, ptr %1638, i64 0, i32 2
  %1640 = load i64, ptr %1639, align 8, !tbaa !72
  %1641 = icmp eq i64 %1640, 0
  br i1 %1641, label %1660, label %1642

1642:                                             ; preds = %1636
  %1643 = getelementptr inbounds %struct.sv, ptr %1629, i64 0, i32 2
  %1644 = load i32, ptr %1643, align 4, !tbaa !62
  %1645 = and i32 %1644, 536870912
  %1646 = icmp eq i32 %1645, 0
  br i1 %1646, label %1653, label %1647

1647:                                             ; preds = %1642
  %1648 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #21
  %1649 = xor i1 %1648, true
  %1650 = zext i1 %1649 to i32
  %1651 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %1637, i64 noundef %1640, ptr noundef nonnull %5, i32 noundef %1650) #21
  %1652 = load i64, ptr %5, align 8
  br label %1656

1653:                                             ; preds = %1642
  %1654 = load i8, ptr %1637, align 1, !tbaa !9
  %1655 = zext i8 %1654 to i64
  br label %1656

1656:                                             ; preds = %1653, %1647
  %1657 = phi i64 [ %1652, %1647 ], [ 1, %1653 ]
  %1658 = phi i64 [ %1651, %1647 ], [ %1655, %1653 ]
  %1659 = icmp eq i64 %1657, %1640
  br i1 %1659, label %1661, label %1660

1660:                                             ; preds = %1636, %1656
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  store i64 65533, ptr %16, align 8, !tbaa !71
  br label %1662

1661:                                             ; preds = %1656
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  store i64 %1658, ptr %16, align 8, !tbaa !71
  br i1 %1630, label %1662, label %1678

1662:                                             ; preds = %1660, %1661
  %1663 = load ptr, ptr %1189, align 8, !tbaa !145
  %1664 = icmp eq ptr %1663, %1191
  br i1 %1664, label %1678, label %1665

1665:                                             ; preds = %1662
  %1666 = load ptr, ptr %17, align 8, !tbaa !5
  %1667 = load ptr, ptr %1232, align 8, !tbaa !108
  %1668 = ptrtoint ptr %1666 to i64
  %1669 = ptrtoint ptr %1667 to i64
  %1670 = sub i64 %1668, %1669
  %1671 = load i32, ptr %1230, align 8, !tbaa !98
  %1672 = icmp ne i32 %1671, 0
  %1673 = zext i1 %1672 to i32
  %1674 = load ptr, ptr %27, align 8, !tbaa !140
  %1675 = ptrtoint ptr %1674 to i64
  %1676 = sub i64 %1675, %1668
  %1677 = getelementptr inbounds i8, ptr %1667, i64 %1670
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.304, i32 noundef %1673, i64 noundef %1670, ptr noundef %1667, i32 noundef %1673, i64 noundef %1676, ptr noundef %1677) #21
  br label %1678

1678:                                             ; preds = %1661, %1662, %1665
  %1679 = load i32, ptr %1230, align 8, !tbaa !98
  %1680 = icmp eq i32 %1679, 0
  br i1 %1680, label %1681, label %1790

1681:                                             ; preds = %1678
  store i32 32, ptr %1, align 4, !tbaa !150
  br label %2405

1682:                                             ; preds = %1336
  %1683 = icmp ult ptr %1337, %1267
  br i1 %1683, label %1702, label %1684

1684:                                             ; preds = %1682
  %1685 = load ptr, ptr %1232, align 8, !tbaa !108
  %1686 = ptrtoint ptr %1267 to i64
  %1687 = ptrtoint ptr %1685 to i64
  %1688 = sub i64 %1686, %1687
  %1689 = load ptr, ptr %1189, align 8, !tbaa !145
  %1690 = icmp eq ptr %1689, %1191
  br i1 %1690, label %1694, label %1691

1691:                                             ; preds = %1684
  %1692 = load ptr, ptr %1233, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1692, i32 noundef 11) #21
  %1693 = load ptr, ptr %1232, align 8, !tbaa !108
  br label %1694

1694:                                             ; preds = %1691, %1684
  %1695 = phi ptr [ %1693, %1691 ], [ %1685, %1684 ]
  %1696 = icmp sgt i64 %1688, 127
  %1697 = select i1 %1696, ptr @.str.182, ptr @.str.178
  %1698 = select i1 %1696, i64 117, i64 %1688
  %1699 = load i32, ptr %1230, align 8, !tbaa !98
  %1700 = icmp ne i32 %1699, 0
  %1701 = zext i1 %1700 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.302, i32 noundef %1701, i64 noundef %1698, ptr noundef %1695, ptr noundef nonnull %1697) #21
  br label %1702

1702:                                             ; preds = %1682, %1694, %1336
  %1703 = load ptr, ptr %1189, align 8, !tbaa !145
  %1704 = icmp eq ptr %1703, %1191
  br i1 %1704, label %1764, label %1705

1705:                                             ; preds = %1702
  %1706 = load i8, ptr %1337, align 1, !tbaa !9
  %1707 = zext i8 %1706 to i64
  %1708 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1707
  %1709 = load i32, ptr %1708, align 4, !tbaa !150
  %1710 = and i32 %1709, 16512
  %1711 = icmp eq i32 %1710, 16512
  br i1 %1711, label %1712, label %1764

1712:                                             ; preds = %1705
  %1713 = and i32 %1709, 16388
  %1714 = icmp eq i32 %1713, 16388
  br i1 %1714, label %1715, label %1721

1715:                                             ; preds = %1712
  %1716 = getelementptr inbounds i8, ptr %1334, i64 2
  %1717 = load i8, ptr %1716, align 1, !tbaa !9
  %1718 = freeze i8 %1717
  %1719 = icmp eq i8 %1718, 123
  %1720 = select i1 %1719, i32 2, i32 1
  br label %1721

1721:                                             ; preds = %1715, %1712
  %1722 = phi i32 [ 1, %1712 ], [ %1720, %1715 ]
  %1723 = zext i32 %1722 to i64
  %1724 = getelementptr inbounds i8, ptr %1337, i64 %1723
  %1725 = load ptr, ptr %1232, align 8, !tbaa !108
  %1726 = ptrtoint ptr %1724 to i64
  %1727 = ptrtoint ptr %1725 to i64
  %1728 = sub i64 %1726, %1727
  %1729 = load i32, ptr %1230, align 8, !tbaa !98
  %1730 = icmp ne i32 %1729, 0
  %1731 = zext i1 %1730 to i32
  %1732 = load ptr, ptr %27, align 8, !tbaa !140
  %1733 = ptrtoint ptr %1732 to i64
  %1734 = sub i64 %1733, %1726
  %1735 = getelementptr inbounds i8, ptr %1725, i64 %1728
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.305, i32 noundef %1722, ptr noundef nonnull %1337, i32 noundef %1731, i64 noundef %1728, ptr noundef %1725, i32 noundef %1731, i64 noundef %1734, ptr noundef %1735) #21
  br label %1764

1736:                                             ; preds = %1333
  %1737 = load ptr, ptr %1189, align 8, !tbaa !145
  %1738 = icmp eq ptr %1737, %1191
  br i1 %1738, label %1785, label %1739

1739:                                             ; preds = %1736
  %1740 = icmp eq i64 %1270, 0
  br i1 %1740, label %1741, label %1752

1741:                                             ; preds = %1739
  %1742 = load ptr, ptr %1231, align 8, !tbaa !139
  %1743 = icmp ugt ptr %1334, %1742
  br i1 %1743, label %1744, label %1764

1744:                                             ; preds = %1741
  %1745 = getelementptr inbounds i8, ptr %1334, i64 -1
  %1746 = load i8, ptr %1745, align 1, !tbaa !9
  %1747 = zext i8 %1746 to i64
  %1748 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1747
  %1749 = load i32, ptr %1748, align 4, !tbaa !150
  %1750 = and i32 %1749, 16388
  %1751 = icmp eq i32 %1750, 16388
  br i1 %1751, label %1752, label %1764

1752:                                             ; preds = %1739, %1744
  %1753 = getelementptr inbounds i8, ptr %1334, i64 1
  %1754 = load ptr, ptr %1232, align 8, !tbaa !108
  %1755 = ptrtoint ptr %1753 to i64
  %1756 = ptrtoint ptr %1754 to i64
  %1757 = sub i64 %1755, %1756
  %1758 = load i32, ptr %1230, align 8, !tbaa !98
  %1759 = icmp ne i32 %1758, 0
  %1760 = zext i1 %1759 to i32
  %1761 = ptrtoint ptr %1267 to i64
  %1762 = sub i64 %1761, %1755
  %1763 = getelementptr inbounds i8, ptr %1754, i64 %1757
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 5122, ptr noundef nonnull @.str.306, i32 noundef %1760, i64 noundef %1757, ptr noundef %1754, i32 noundef %1760, i64 noundef %1762, ptr noundef %1763) #21
  br label %1764

1764:                                             ; preds = %1721, %1705, %1702, %1741, %1744, %1752
  %1765 = phi ptr [ %1337, %1721 ], [ %1337, %1705 ], [ %1337, %1702 ], [ %1334, %1741 ], [ %1334, %1744 ], [ %1334, %1752 ]
  %1766 = load i8, ptr %1765, align 1, !tbaa !9
  br label %1767

1767:                                             ; preds = %1764, %1333
  %1768 = phi i8 [ %1766, %1764 ], [ %1335, %1333 ]
  %1769 = phi ptr [ %1765, %1764 ], [ %1334, %1333 ]
  %1770 = icmp ugt i8 %1768, -63
  br i1 %1770, label %1771, label %1785

1771:                                             ; preds = %1767
  %1772 = load i32, ptr %1230, align 8, !tbaa !98
  %1773 = icmp eq i32 %1772, 0
  br i1 %1773, label %1785, label %1774

1774:                                             ; preds = %1771
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #21
  %1775 = load ptr, ptr %27, align 8, !tbaa !140
  %1776 = ptrtoint ptr %1775 to i64
  %1777 = ptrtoint ptr %1769 to i64
  %1778 = sub i64 %1776, %1777
  %1779 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #21
  %1780 = xor i1 %1779, true
  %1781 = zext i1 %1780 to i32
  %1782 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %1769, i64 noundef %1778, ptr noundef nonnull %23, i32 noundef %1781) #21
  store i64 %1782, ptr %16, align 8, !tbaa !71
  %1783 = load i64, ptr %23, align 8, !tbaa !71
  %1784 = getelementptr inbounds i8, ptr %1769, i64 %1783
  store ptr %1784, ptr %17, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #21
  br label %1790

1785:                                             ; preds = %1736, %1771, %1767
  %1786 = phi ptr [ %1769, %1771 ], [ %1769, %1767 ], [ %1334, %1736 ]
  %1787 = phi i8 [ %1768, %1771 ], [ %1768, %1767 ], [ 123, %1736 ]
  %1788 = getelementptr inbounds i8, ptr %1786, i64 1
  store ptr %1788, ptr %17, align 8, !tbaa !5
  %1789 = zext i8 %1787 to i64
  store i64 %1789, ptr %16, align 8, !tbaa !71
  br label %1790

1790:                                             ; preds = %1479, %1482, %1678, %1534, %1774, %1785, %1340, %1377, %1379, %1381, %1383, %1385, %1535, %1373, %1369, %1609, %1612, %1618, %1621
  %1791 = phi i64 [ %1269, %1785 ], [ %1269, %1774 ], [ %1269, %1609 ], [ %1622, %1621 ], [ %1269, %1612 ], [ %1269, %1618 ], [ %1269, %1535 ], [ %1269, %1534 ], [ %1269, %1385 ], [ %1269, %1383 ], [ %1269, %1381 ], [ %1269, %1379 ], [ %1269, %1377 ], [ %1269, %1373 ], [ %1269, %1369 ], [ %1269, %1340 ], [ %1622, %1678 ], [ %1465, %1482 ], [ %1465, %1479 ]
  %1792 = load i32, ptr %0, align 8, !tbaa !109
  %1793 = and i32 %1792, 8
  %1794 = icmp eq i32 %1793, 0
  %1795 = load ptr, ptr %17, align 8, !tbaa !5
  %1796 = load ptr, ptr %27, align 8, !tbaa !140
  br i1 %1794, label %1856, label %1797

1797:                                             ; preds = %1790
  %1798 = icmp ugt ptr %1796, %1795
  br i1 %1798, label %1799, label %1854

1799:                                             ; preds = %1797
  %1800 = ptrtoint ptr %1796 to i64
  br label %1801

1801:                                             ; preds = %1851, %1799
  %1802 = phi ptr [ %1852, %1851 ], [ %1795, %1799 ]
  %1803 = load i8, ptr %1802, align 1, !tbaa !9
  switch i8 %1803, label %1804 [
    i8 32, label %1833
    i8 13, label %1833
    i8 12, label %1833
    i8 11, label %1833
    i8 10, label %1833
    i8 9, label %1833
  ]

1804:                                             ; preds = %1801
  %1805 = load i32, ptr %1230, align 8, !tbaa !98
  %1806 = icmp eq i32 %1805, 0
  br i1 %1806, label %1832, label %1807

1807:                                             ; preds = %1804
  %1808 = ptrtoint ptr %1802 to i64
  %1809 = sub i64 %1800, %1808
  %1810 = zext i8 %1803 to i64
  %1811 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1810
  %1812 = load i8, ptr %1811, align 1, !tbaa !9
  %1813 = zext i8 %1812 to i64
  %1814 = icmp slt i64 %1809, %1813
  br i1 %1814, label %1836, label %1815

1815:                                             ; preds = %1807
  switch i8 %1803, label %1854 [
    i8 -62, label %1816
    i8 -30, label %1820
    i8 35, label %1838
  ]

1816:                                             ; preds = %1815
  %1817 = getelementptr inbounds i8, ptr %1802, i64 1
  %1818 = load i8, ptr %1817, align 1, !tbaa !9
  %1819 = icmp eq i8 %1818, -123
  br i1 %1819, label %1833, label %1854

1820:                                             ; preds = %1815
  %1821 = getelementptr inbounds i8, ptr %1802, i64 1
  %1822 = load i8, ptr %1821, align 1, !tbaa !9
  %1823 = icmp eq i8 %1822, -128
  br i1 %1823, label %1824, label %1854

1824:                                             ; preds = %1820
  %1825 = getelementptr inbounds i8, ptr %1802, i64 2
  %1826 = load i8, ptr %1825, align 1, !tbaa !9
  %1827 = and i8 %1826, -2
  %1828 = icmp eq i8 %1827, -114
  %1829 = icmp eq i8 %1827, -88
  %1830 = or i1 %1828, %1829
  %1831 = freeze i1 %1830
  br i1 %1831, label %1833, label %1854

1832:                                             ; preds = %1804
  switch i8 %1803, label %1854 [
    i8 -123, label %1833
    i8 35, label %1838
  ]

1833:                                             ; preds = %1832, %1824, %1816, %1801, %1801, %1801, %1801, %1801, %1801
  %1834 = phi i64 [ 1, %1832 ], [ 1, %1801 ], [ 3, %1824 ], [ 2, %1816 ], [ 1, %1801 ], [ 1, %1801 ], [ 1, %1801 ], [ 1, %1801 ], [ 1, %1801 ]
  %1835 = getelementptr inbounds i8, ptr %1802, i64 %1834
  br label %1851

1836:                                             ; preds = %1807
  %1837 = icmp eq i8 %1803, 35
  br i1 %1837, label %1838, label %1854

1838:                                             ; preds = %1836, %1832, %1815
  br label %1839

1839:                                             ; preds = %1838, %1842
  %1840 = phi ptr [ %1843, %1842 ], [ %1802, %1838 ]
  %1841 = icmp ult ptr %1840, %1796
  br i1 %1841, label %1842, label %1848

1842:                                             ; preds = %1839
  %1843 = getelementptr inbounds i8, ptr %1840, i64 1
  %1844 = load i8, ptr %1843, align 1, !tbaa !9
  %1845 = icmp eq i8 %1844, 10
  br i1 %1845, label %1846, label %1839, !llvm.loop !348

1846:                                             ; preds = %1842
  %1847 = getelementptr inbounds i8, ptr %1840, i64 2
  br label %1851

1848:                                             ; preds = %1839
  %1849 = load i32, ptr %28, align 8, !tbaa !131
  %1850 = or i32 %1849, 512
  store i32 %1850, ptr %28, align 8, !tbaa !131
  br label %1851

1851:                                             ; preds = %1848, %1846, %1833
  %1852 = phi ptr [ %1835, %1833 ], [ %1847, %1846 ], [ %1840, %1848 ]
  %1853 = icmp ult ptr %1852, %1796
  br i1 %1853, label %1801, label %1854

1854:                                             ; preds = %1815, %1816, %1820, %1824, %1832, %1836, %1851, %1797
  %1855 = phi ptr [ %1795, %1797 ], [ %1802, %1816 ], [ %1802, %1824 ], [ %1802, %1820 ], [ %1802, %1836 ], [ %1802, %1832 ], [ %1802, %1815 ], [ %1852, %1851 ]
  store ptr %1855, ptr %17, align 8, !tbaa !5
  br label %1856

1856:                                             ; preds = %1854, %1790
  %1857 = phi ptr [ %1855, %1854 ], [ %1795, %1790 ]
  %1858 = icmp ult ptr %1857, %1796
  br i1 %1858, label %1859, label %1897

1859:                                             ; preds = %1856
  %1860 = load i8, ptr %1857, align 1, !tbaa !9
  switch i8 %1860, label %1897 [
    i8 42, label %1894
    i8 43, label %1894
    i8 63, label %1894
    i8 123, label %1861
  ]

1861:                                             ; preds = %1859
  %1862 = getelementptr inbounds i8, ptr %1857, i64 1
  %1863 = load i8, ptr %1862, align 1, !tbaa !9
  %1864 = zext i8 %1863 to i64
  %1865 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1864
  %1866 = load i32, ptr %1865, align 4, !tbaa !150
  %1867 = and i32 %1866, 2
  %1868 = icmp eq i32 %1867, 0
  br i1 %1868, label %1897, label %1869

1869:                                             ; preds = %1861, %1869
  %1870 = phi ptr [ %1877, %1869 ], [ %1862, %1861 ]
  %1871 = load i8, ptr %1870, align 1, !tbaa !9
  %1872 = zext i8 %1871 to i64
  %1873 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1872
  %1874 = load i32, ptr %1873, align 4, !tbaa !150
  %1875 = and i32 %1874, 2
  %1876 = icmp eq i32 %1875, 0
  %1877 = getelementptr inbounds i8, ptr %1870, i64 1
  br i1 %1876, label %1878, label %1869, !llvm.loop !351

1878:                                             ; preds = %1869
  %1879 = icmp eq i8 %1871, 44
  br i1 %1879, label %1880, label %1889

1880:                                             ; preds = %1878, %1880
  %1881 = phi ptr [ %1882, %1880 ], [ %1870, %1878 ]
  %1882 = getelementptr inbounds i8, ptr %1881, i64 1
  %1883 = load i8, ptr %1882, align 1, !tbaa !9
  %1884 = zext i8 %1883 to i64
  %1885 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1884
  %1886 = load i32, ptr %1885, align 4, !tbaa !150
  %1887 = and i32 %1886, 2
  %1888 = icmp eq i32 %1887, 0
  br i1 %1888, label %1889, label %1880, !llvm.loop !352

1889:                                             ; preds = %1880, %1878
  %1890 = phi i8 [ %1871, %1878 ], [ %1883, %1880 ]
  %1891 = icmp eq i8 %1890, 125
  %1892 = icmp ne i64 %1270, 0
  %1893 = and i1 %1892, %1891
  br i1 %1893, label %1896, label %1897

1894:                                             ; preds = %1859, %1859, %1859
  %1895 = icmp eq i64 %1270, 0
  br i1 %1895, label %1897, label %1896

1896:                                             ; preds = %1894, %1889
  store ptr %1268, ptr %17, align 8, !tbaa !5
  br label %2349

1897:                                             ; preds = %1861, %1856, %1859, %1894, %1889
  %1898 = phi i1 [ true, %1894 ], [ %1891, %1889 ], [ false, %1859 ], [ false, %1856 ], [ false, %1861 ]
  %1899 = and i32 %1792, 4
  %1900 = icmp eq i32 %1899, 0
  br i1 %1900, label %1901, label %1948

1901:                                             ; preds = %1897
  %1902 = load ptr, ptr %1189, align 8, !tbaa !145
  %1903 = icmp eq ptr %1902, %1191
  br i1 %1903, label %1906, label %1904

1904:                                             ; preds = %1901
  %1905 = load i64, ptr %16, align 8, !tbaa !71
  br label %1932

1906:                                             ; preds = %1901
  %1907 = load i32, ptr %1230, align 8, !tbaa !98
  %1908 = icmp eq i32 %1907, 0
  br i1 %1908, label %1930, label %1909

1909:                                             ; preds = %1906
  %1910 = load i64, ptr %16, align 8, !tbaa !71
  %1911 = icmp ult i64 %1910, 128
  br i1 %1911, label %1925, label %1912

1912:                                             ; preds = %1909
  %1913 = icmp ult i64 %1910, 2048
  br i1 %1913, label %1925, label %1914

1914:                                             ; preds = %1912
  %1915 = icmp ult i64 %1910, 65536
  br i1 %1915, label %1925, label %1916

1916:                                             ; preds = %1914
  %1917 = icmp ult i64 %1910, 2097152
  br i1 %1917, label %1925, label %1918

1918:                                             ; preds = %1916
  %1919 = icmp ult i64 %1910, 67108864
  br i1 %1919, label %1925, label %1920

1920:                                             ; preds = %1918
  %1921 = icmp ult i64 %1910, 2147483648
  br i1 %1921, label %1925, label %1922

1922:                                             ; preds = %1920
  %1923 = icmp ult i64 %1910, 68719476736
  %1924 = select i1 %1923, i64 7, i64 13
  br label %1925

1925:                                             ; preds = %1912, %1916, %1922, %1920, %1918, %1914, %1909
  %1926 = phi i64 [ 1, %1909 ], [ 2, %1912 ], [ 3, %1914 ], [ 4, %1916 ], [ 5, %1918 ], [ %1924, %1922 ], [ 6, %1920 ]
  %1927 = getelementptr inbounds i8, ptr %1271, i64 %1926
  %1928 = add i64 %1270, -1
  %1929 = add i64 %1928, %1926
  br label %2131

1930:                                             ; preds = %1906
  %1931 = getelementptr inbounds i8, ptr %1271, i64 1
  br label %2131

1932:                                             ; preds = %1904, %1996, %1996, %1996, %1996, %1996, %1996, %1996, %1996, %1953, %1959, %1963, %1967, %1971, %1975, %1979, %1988, %1992, %1983
  %1933 = phi i64 [ %1905, %1904 ], [ %1952, %1983 ], [ %1952, %1996 ], [ 8490, %1992 ], [ 7838, %1988 ], [ 956, %1979 ], [ 924, %1975 ], [ 496, %1971 ], [ 383, %1967 ], [ 376, %1963 ], [ 329, %1959 ], [ %1952, %1953 ], [ %1952, %1996 ], [ %1952, %1996 ], [ %1952, %1996 ], [ %1952, %1996 ], [ %1952, %1996 ], [ %1952, %1996 ], [ %1952, %1996 ]
  %1934 = phi i8 [ %1272, %1904 ], [ 0, %1983 ], [ 0, %1996 ], [ 0, %1992 ], [ 0, %1988 ], [ 0, %1979 ], [ 0, %1975 ], [ 0, %1971 ], [ 0, %1967 ], [ 0, %1963 ], [ 0, %1959 ], [ 0, %1953 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ]
  %1935 = phi i8 [ %1273, %1904 ], [ 0, %1983 ], [ 0, %1996 ], [ 0, %1992 ], [ 0, %1988 ], [ 0, %1979 ], [ 0, %1975 ], [ 0, %1971 ], [ 0, %1967 ], [ 0, %1963 ], [ 0, %1959 ], [ 0, %1953 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ], [ 0, %1996 ]
  %1936 = load i32, ptr %1230, align 8, !tbaa !98
  %1937 = icmp eq i32 %1936, 0
  br i1 %1937, label %1945, label %1938

1938:                                             ; preds = %1932
  %1939 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1271, i64 noundef %1933, i64 noundef 0) #21
  %1940 = ptrtoint ptr %1939 to i64
  %1941 = ptrtoint ptr %1271 to i64
  %1942 = xor i64 %1941, -1
  %1943 = add i64 %1270, %1942
  %1944 = add i64 %1943, %1940
  br label %2131

1945:                                             ; preds = %1932
  %1946 = trunc i64 %1933 to i8
  %1947 = getelementptr inbounds i8, ptr %1271, i64 1
  store i8 %1946, ptr %1271, align 1, !tbaa !9
  br label %2131

1948:                                             ; preds = %1897
  %1949 = lshr i32 %1792, 7
  %1950 = and i32 %1949, 7
  %1951 = icmp eq i32 %1950, 1
  %1952 = load i64, ptr %16, align 8
  br i1 %1951, label %1953, label %1997

1953:                                             ; preds = %1948
  %1954 = icmp ult i64 %1952, 256
  %1955 = icmp eq i64 %1952, 304
  %1956 = or i1 %1954, %1955
  br i1 %1956, label %1932, label %1957

1957:                                             ; preds = %1953
  %1958 = icmp ugt i64 %1952, 304
  br i1 %1958, label %1959, label %1997

1959:                                             ; preds = %1957
  %1960 = icmp eq i64 %1952, 329
  br i1 %1960, label %1932, label %1961

1961:                                             ; preds = %1959
  %1962 = icmp ugt i64 %1952, 329
  br i1 %1962, label %1963, label %1997

1963:                                             ; preds = %1961
  %1964 = icmp eq i64 %1952, 376
  br i1 %1964, label %1932, label %1965

1965:                                             ; preds = %1963
  %1966 = icmp ugt i64 %1952, 376
  br i1 %1966, label %1967, label %1997

1967:                                             ; preds = %1965
  %1968 = icmp eq i64 %1952, 383
  br i1 %1968, label %1932, label %1969

1969:                                             ; preds = %1967
  %1970 = icmp ugt i64 %1952, 383
  br i1 %1970, label %1971, label %1997

1971:                                             ; preds = %1969
  %1972 = icmp eq i64 %1952, 496
  br i1 %1972, label %1932, label %1973

1973:                                             ; preds = %1971
  %1974 = icmp ugt i64 %1952, 496
  br i1 %1974, label %1975, label %1997

1975:                                             ; preds = %1973
  %1976 = icmp eq i64 %1952, 924
  br i1 %1976, label %1932, label %1977

1977:                                             ; preds = %1975
  %1978 = icmp ugt i64 %1952, 924
  br i1 %1978, label %1979, label %1997

1979:                                             ; preds = %1977
  %1980 = icmp eq i64 %1952, 956
  br i1 %1980, label %1932, label %1981

1981:                                             ; preds = %1979
  %1982 = icmp ugt i64 %1952, 956
  br i1 %1982, label %1983, label %1997

1983:                                             ; preds = %1981
  %1984 = add i64 %1952, -7830
  %1985 = icmp ult i64 %1984, 5
  br i1 %1985, label %1932, label %1986

1986:                                             ; preds = %1983
  %1987 = icmp ugt i64 %1952, 7834
  br i1 %1987, label %1988, label %1997

1988:                                             ; preds = %1986
  %1989 = icmp eq i64 %1952, 7838
  br i1 %1989, label %1932, label %1990

1990:                                             ; preds = %1988
  %1991 = icmp ugt i64 %1952, 7838
  br i1 %1991, label %1992, label %1997

1992:                                             ; preds = %1990
  %1993 = icmp eq i64 %1952, 8490
  br i1 %1993, label %1932, label %1994

1994:                                             ; preds = %1992
  %1995 = icmp ugt i64 %1952, 8490
  br i1 %1995, label %1996, label %1997

1996:                                             ; preds = %1994
  switch i64 %1952, label %1997 [
    i64 64262, label %1932
    i64 64261, label %1932
    i64 64260, label %1932
    i64 64259, label %1932
    i64 64258, label %1932
    i64 64257, label %1932
    i64 64256, label %1932
    i64 8491, label %1932
  ]

1997:                                             ; preds = %1996, %1994, %1990, %1986, %1981, %1977, %1973, %1969, %1965, %1961, %1957, %1948
  %1998 = load i32, ptr %1230, align 8, !tbaa !98
  %1999 = icmp eq i32 %1998, 0
  br i1 %1999, label %2000, label %2036

2000:                                             ; preds = %1997
  %2001 = icmp eq i64 %1952, 223
  %2002 = select i1 %1237, i1 %2001, i1 false
  br i1 %2002, label %2047, label %2003

2003:                                             ; preds = %2000
  %2004 = icmp ult i64 %1952, 256
  br i1 %2004, label %2005, label %2031

2005:                                             ; preds = %2003
  %2006 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1952
  %2007 = load i32, ptr %2006, align 4, !tbaa !150
  %2008 = and i32 %2007, 4194304
  %2009 = icmp eq i32 %2008, 0
  br i1 %2009, label %2031, label %2010

2010:                                             ; preds = %2005
  %2011 = and i8 %1272, 1
  %2012 = icmp eq i8 %2011, 0
  br i1 %2012, label %2031, label %2013

2013:                                             ; preds = %2010
  %2014 = getelementptr inbounds [0 x i8], ptr @PL_fold, i64 0, i64 %1952
  %2015 = load i8, ptr %2014, align 1, !tbaa !9
  %2016 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %1952
  %2017 = load i8, ptr %2016, align 1, !tbaa !9
  %2018 = icmp ne i8 %2015, %2017
  %2019 = select i1 %2018, i1 true, i1 %2001
  br i1 %2019, label %2030, label %2020

2020:                                             ; preds = %2013
  %2021 = icmp ne i64 %1270, 0
  %2022 = and i64 %1952, -33
  %2023 = icmp eq i64 %2022, 83
  %2024 = select i1 %2021, i1 %2023, i1 false
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2020
  %2026 = getelementptr inbounds i8, ptr %1271, i64 -1
  %2027 = load i8, ptr %2026, align 1, !tbaa !9
  %2028 = and i8 %2027, -33
  %2029 = icmp eq i8 %2028, 83
  br i1 %2029, label %2030, label %2031

2030:                                             ; preds = %2025, %2013
  br label %2031

2031:                                             ; preds = %2010, %2020, %2025, %2030, %2003, %2005
  %2032 = phi i8 [ %1272, %2003 ], [ 0, %2030 ], [ %1272, %2025 ], [ %1272, %2020 ], [ %1272, %2010 ], [ %1272, %2005 ]
  %2033 = phi i8 [ %1273, %2003 ], [ 0, %2030 ], [ 0, %2025 ], [ 0, %2020 ], [ 0, %2010 ], [ %1273, %2005 ]
  %2034 = trunc i64 %1952 to i8
  %2035 = getelementptr inbounds i8, ptr %1271, i64 1
  store i8 %2034, ptr %1271, align 1, !tbaa !9
  br label %2131

2036:                                             ; preds = %1997
  %2037 = icmp ult i64 %1952, 128
  br i1 %2037, label %2038, label %2047

2038:                                             ; preds = %2036
  %2039 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1952
  %2040 = load i32, ptr %2039, align 4, !tbaa !150
  %2041 = and i32 %2040, 16400
  %2042 = icmp eq i32 %2041, 16400
  %2043 = add nuw nsw i64 %1952, 32
  %2044 = select i1 %2042, i64 %2043, i64 %1952
  %2045 = trunc i64 %2044 to i8
  %2046 = getelementptr inbounds i8, ptr %1271, i64 1
  store i8 %2045, ptr %1271, align 1, !tbaa !9
  br label %2056

2047:                                             ; preds = %2000, %2036
  %2048 = phi i64 [ %1952, %2036 ], [ 223, %2000 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %24) #21
  %2049 = icmp eq i32 %1950, 4
  %2050 = select i1 %2049, i8 6, i8 2
  %2051 = call i64 @Perl__to_uni_fold_flags(i64 noundef %2048, ptr noundef %1271, ptr noundef nonnull %24, i8 noundef zeroext %2050) #21
  %2052 = load i64, ptr %24, align 8, !tbaa !71
  %2053 = getelementptr inbounds i8, ptr %1271, i64 %2052
  %2054 = add i64 %1270, -1
  %2055 = add i64 %2054, %2052
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %24) #21
  br label %2056

2056:                                             ; preds = %2047, %2038
  %2057 = phi i64 [ %1270, %2038 ], [ %2055, %2047 ]
  %2058 = phi ptr [ %2046, %2038 ], [ %2053, %2047 ]
  %2059 = phi i64 [ %2044, %2038 ], [ %2051, %2047 ]
  %2060 = and i8 %1273, 1
  %2061 = icmp eq i8 %2060, 0
  br i1 %2061, label %2129, label %2062

2062:                                             ; preds = %2056
  %2063 = load i64, ptr %16, align 8, !tbaa !71
  %2064 = icmp eq i64 %2059, %2063
  br i1 %2064, label %2065, label %2129

2065:                                             ; preds = %2062
  %2066 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %2067 = load ptr, ptr %2066, align 8, !tbaa !63
  %2068 = getelementptr inbounds %struct.xpv, ptr %2067, i64 0, i32 2
  %2069 = load i64, ptr %2068, align 8, !tbaa !72
  %2070 = icmp eq i64 %2069, 0
  br i1 %2070, label %2124, label %2071

2071:                                             ; preds = %2065
  %2072 = lshr i64 %2069, 3
  %2073 = getelementptr %struct.xpvinvlist, ptr %2067, i64 0, i32 6
  %2074 = load i8, ptr %2073, align 1, !tbaa !57, !range !59, !noundef !60
  %2075 = zext i8 %2074 to i64
  %2076 = xor i64 %2075, -1
  %2077 = add nsw i64 %2072, %2076
  %2078 = icmp eq i64 %2072, %2075
  br i1 %2078, label %2124, label %2079

2079:                                             ; preds = %2071
  %2080 = getelementptr i8, ptr %2066, i64 16
  %2081 = load ptr, ptr %2080, align 8, !tbaa !9
  %2082 = getelementptr inbounds i64, ptr %2081, i64 %2075
  %2083 = getelementptr i8, ptr %2067, i64 32
  %2084 = load i64, ptr %2083, align 8, !tbaa !71
  %2085 = getelementptr inbounds i64, ptr %2082, i64 %2084
  %2086 = load i64, ptr %2085, align 8, !tbaa !71
  %2087 = icmp ugt i64 %2086, %2059
  br i1 %2087, label %2097, label %2088

2088:                                             ; preds = %2079
  %2089 = getelementptr inbounds i64, ptr %2082, i64 %2077
  %2090 = load i64, ptr %2089, align 8, !tbaa !71
  %2091 = icmp ugt i64 %2090, %2059
  br i1 %2091, label %2092, label %2124

2092:                                             ; preds = %2088
  %2093 = add nsw i64 %2084, 1
  %2094 = getelementptr inbounds i64, ptr %2082, i64 %2093
  %2095 = load i64, ptr %2094, align 8, !tbaa !71
  %2096 = icmp ugt i64 %2095, %2059
  br i1 %2096, label %2124, label %2105

2097:                                             ; preds = %2079
  %2098 = load i64, ptr %2082, align 8, !tbaa !71
  %2099 = icmp ugt i64 %2098, %2059
  br i1 %2099, label %2124, label %2100

2100:                                             ; preds = %2097
  %2101 = add nsw i64 %2084, -1
  %2102 = getelementptr inbounds i64, ptr %2082, i64 %2101
  %2103 = load i64, ptr %2102, align 8, !tbaa !71
  %2104 = icmp ugt i64 %2103, %2059
  br i1 %2104, label %2105, label %2121

2105:                                             ; preds = %2100, %2092
  %2106 = phi i64 [ %2084, %2100 ], [ %2077, %2092 ]
  %2107 = phi i64 [ 0, %2100 ], [ %2093, %2092 ]
  %2108 = icmp slt i64 %2107, %2106
  br i1 %2108, label %2109, label %2121

2109:                                             ; preds = %2105, %2109
  %2110 = phi i64 [ %2119, %2109 ], [ %2107, %2105 ]
  %2111 = phi i64 [ %2118, %2109 ], [ %2106, %2105 ]
  %2112 = add nsw i64 %2111, %2110
  %2113 = sdiv i64 %2112, 2
  %2114 = getelementptr inbounds i64, ptr %2082, i64 %2113
  %2115 = load i64, ptr %2114, align 8, !tbaa !71
  %2116 = icmp ugt i64 %2115, %2059
  %2117 = add nsw i64 %2113, 1
  %2118 = select i1 %2116, i64 %2113, i64 %2111
  %2119 = select i1 %2116, i64 %2110, i64 %2117
  %2120 = icmp slt i64 %2119, %2118
  br i1 %2120, label %2109, label %2121, !llvm.loop !300

2121:                                             ; preds = %2109, %2105, %2100
  %2122 = phi i64 [ %2084, %2100 ], [ %2106, %2105 ], [ %2118, %2109 ]
  %2123 = add nsw i64 %2122, -1
  store i64 %2123, ptr %2083, align 8, !tbaa !71
  br label %2124

2124:                                             ; preds = %2065, %2071, %2088, %2092, %2097, %2121
  %2125 = phi i64 [ %2123, %2121 ], [ -1, %2071 ], [ %2077, %2088 ], [ %2084, %2092 ], [ -1, %2097 ], [ -1, %2065 ]
  %2126 = and i64 %2125, -9223372036854775807
  %2127 = icmp eq i64 %2126, 0
  %2128 = select i1 %2127, i8 0, i8 %1273
  br label %2129

2129:                                             ; preds = %2124, %2062, %2056
  %2130 = phi i8 [ %1273, %2056 ], [ 0, %2062 ], [ %2128, %2124 ]
  store i64 %2059, ptr %16, align 8, !tbaa !71
  br label %2131

2131:                                             ; preds = %2129, %2031, %1930, %1925, %1945, %1938
  %2132 = phi i64 [ %1944, %1938 ], [ %1270, %1945 ], [ %2057, %2129 ], [ %1270, %2031 ], [ %1929, %1925 ], [ %1270, %1930 ]
  %2133 = phi ptr [ %1939, %1938 ], [ %1947, %1945 ], [ %2058, %2129 ], [ %2035, %2031 ], [ %1927, %1925 ], [ %1931, %1930 ]
  %2134 = phi i8 [ %1934, %1938 ], [ %1934, %1945 ], [ %1272, %2129 ], [ %2032, %2031 ], [ %1272, %1925 ], [ %1272, %1930 ]
  %2135 = phi i8 [ %1935, %1938 ], [ %1935, %1945 ], [ %2130, %2129 ], [ %2033, %2031 ], [ %1273, %1925 ], [ %1273, %1930 ]
  %2136 = add i64 %2132, 1
  br i1 %1898, label %2341, label %2137

2137:                                             ; preds = %2131
  %2138 = icmp ult i64 %2136, %1255
  br i1 %2138, label %1260, label %2139, !llvm.loop !359

2139:                                             ; preds = %2137
  %2140 = load i32, ptr %0, align 8, !tbaa !109
  br label %2141

2141:                                             ; preds = %1260, %1257, %2139
  %2142 = phi i32 [ %2140, %2139 ], [ %1244, %1257 ], [ %1264, %1260 ]
  %2143 = phi i64 [ %1791, %2139 ], [ %1240, %1257 ], [ %1791, %1260 ]
  %2144 = phi i64 [ %2136, %2139 ], [ 0, %1257 ], [ %2136, %1260 ]
  %2145 = phi ptr [ %2133, %2139 ], [ %1229, %1257 ], [ %2133, %1260 ]
  %2146 = phi ptr [ %1268, %2139 ], [ %1242, %1257 ], [ %1268, %1260 ]
  %2147 = phi i8 [ %2134, %2139 ], [ %1243, %1257 ], [ %2134, %1260 ]
  %2148 = phi i8 [ %2135, %2139 ], [ %1252, %1257 ], [ %2135, %1260 ]
  %2149 = and i32 %2142, 4
  br label %2150

2150:                                             ; preds = %2141, %1250
  %2151 = phi i32 [ %2149, %2141 ], [ %1245, %1250 ]
  %2152 = phi i32 [ %2142, %2141 ], [ %1244, %1250 ]
  %2153 = phi i64 [ %2143, %2141 ], [ %1240, %1250 ]
  %2154 = phi i64 [ %2144, %2141 ], [ 0, %1250 ]
  %2155 = phi ptr [ %2145, %2141 ], [ %1229, %1250 ]
  %2156 = phi ptr [ %2146, %2141 ], [ %1242, %1250 ]
  %2157 = phi i8 [ %2147, %2141 ], [ %1243, %1250 ]
  %2158 = phi i8 [ %2148, %2141 ], [ %1252, %1250 ]
  %2159 = icmp eq i32 %2151, 0
  br i1 %2159, label %2341, label %2160

2160:                                             ; preds = %2150
  %2161 = load ptr, ptr %17, align 8, !tbaa !5
  %2162 = load ptr, ptr %27, align 8, !tbaa !140
  %2163 = icmp ult ptr %2161, %2162
  %2164 = icmp eq i8 %1241, 127
  %2165 = and i1 %2164, %2163
  br i1 %2165, label %2166, label %2341

2166:                                             ; preds = %2160
  %2167 = load i32, ptr %1230, align 8, !tbaa !98
  %2168 = icmp eq i32 %2167, 0
  br i1 %2168, label %2169, label %2187

2169:                                             ; preds = %2166
  %2170 = and i32 %2152, 896
  %2171 = icmp eq i32 %2170, 512
  br i1 %2171, label %2341, label %2172

2172:                                             ; preds = %2169, %2176
  %2173 = phi ptr [ %2174, %2176 ], [ %2155, %2169 ]
  %2174 = getelementptr inbounds i8, ptr %2173, i64 -1
  %2175 = icmp ult ptr %2174, %1229
  br i1 %2175, label %2183, label %2176

2176:                                             ; preds = %2172
  %2177 = load i8, ptr %2174, align 1, !tbaa !9
  %2178 = zext i8 %2177 to i64
  %2179 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2178
  %2180 = load i32, ptr %2179, align 4, !tbaa !150
  %2181 = and i32 %2180, 2097152
  %2182 = icmp eq i32 %2181, 0
  br i1 %2182, label %2183, label %2172, !llvm.loop !361

2183:                                             ; preds = %2172, %2176
  %2184 = ptrtoint ptr %2174 to i64
  %2185 = sub i64 %2184, %1238
  %2186 = add i64 %2185, 1
  br label %2312

2187:                                             ; preds = %2166
  %2188 = load ptr, ptr @PL_NonL1NonFinalFold, align 8, !tbaa !5
  %2189 = icmp eq ptr %2188, null
  br i1 %2189, label %2190, label %2203

2190:                                             ; preds = %2187
  %2191 = call ptr @Perl_newSV_type(i32 noundef 4) #21
  %2192 = getelementptr inbounds %struct.sv, ptr %2191, i64 0, i32 3
  store ptr getelementptr inbounds ([48 x i64], ptr @NonL1_Perl_Non_Final_Folds_invlist, i64 0, i64 3), ptr %2192, align 8, !tbaa !9
  %2193 = load ptr, ptr %2191, align 8, !tbaa !63
  %2194 = getelementptr inbounds %struct.xpv, ptr %2193, i64 0, i32 3
  store i64 0, ptr %2194, align 8, !tbaa !9
  %2195 = load ptr, ptr %2191, align 8, !tbaa !63
  %2196 = getelementptr inbounds %struct.xpvinvlist, ptr %2195, i64 0, i32 6
  store i8 1, ptr %2196, align 1, !tbaa !57
  %2197 = getelementptr inbounds %struct.xpv, ptr %2195, i64 0, i32 2
  store i64 360, ptr %2197, align 8, !tbaa !72
  %2198 = getelementptr inbounds %struct.xpvinvlist, ptr %2195, i64 0, i32 4
  store i64 0, ptr %2198, align 8, !tbaa !71
  %2199 = getelementptr inbounds %struct.xpvinvlist, ptr %2195, i64 0, i32 5
  store i64 -1, ptr %2199, align 8, !tbaa !71
  %2200 = getelementptr inbounds %struct.sv, ptr %2191, i64 0, i32 2
  %2201 = load i32, ptr %2200, align 4, !tbaa !62
  %2202 = or i32 %2201, 134283264
  store i32 %2202, ptr %2200, align 4, !tbaa !62
  store ptr %2191, ptr @PL_NonL1NonFinalFold, align 8, !tbaa !5
  br label %2203

2203:                                             ; preds = %2190, %2187
  %2204 = call ptr @Perl_utf8_hop(ptr noundef %2155, i32 noundef -1) #21
  %2205 = icmp ult ptr %2204, %1229
  br i1 %2205, label %2316, label %2206

2206:                                             ; preds = %2203, %2300
  %2207 = phi ptr [ %2301, %2300 ], [ %2204, %2203 ]
  %2208 = load i8, ptr %2207, align 1, !tbaa !9
  %2209 = icmp sgt i8 %2208, -1
  br i1 %2209, label %2210, label %2220

2210:                                             ; preds = %2206
  %2211 = load i32, ptr %0, align 8, !tbaa !109
  %2212 = and i32 %2211, 896
  %2213 = icmp eq i32 %2212, 512
  br i1 %2213, label %2303, label %2214

2214:                                             ; preds = %2210
  %2215 = zext i8 %2208 to i64
  %2216 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2215
  %2217 = load i32, ptr %2216, align 4, !tbaa !150
  %2218 = and i32 %2217, 2097152
  %2219 = icmp eq i32 %2218, 0
  br i1 %2219, label %2303, label %2298

2220:                                             ; preds = %2206
  %2221 = and i8 %2208, -2
  %2222 = icmp eq i8 %2221, -62
  br i1 %2222, label %2223, label %2234

2223:                                             ; preds = %2220
  %2224 = shl i8 %2208, 6
  %2225 = getelementptr inbounds i8, ptr %2207, i64 1
  %2226 = load i8, ptr %2225, align 1, !tbaa !9
  %2227 = and i8 %2226, 63
  %2228 = or i8 %2227, %2224
  %2229 = zext i8 %2228 to i64
  %2230 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2229
  %2231 = load i32, ptr %2230, align 4, !tbaa !150
  %2232 = and i32 %2231, 2097152
  %2233 = icmp eq i32 %2232, 0
  br i1 %2233, label %2303, label %2298

2234:                                             ; preds = %2220
  %2235 = load ptr, ptr @PL_NonL1NonFinalFold, align 8, !tbaa !5
  %2236 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef nonnull %2207, ptr noundef null) #21
  %2237 = load ptr, ptr %2235, align 8, !tbaa !63
  %2238 = getelementptr inbounds %struct.xpv, ptr %2237, i64 0, i32 2
  %2239 = load i64, ptr %2238, align 8, !tbaa !72
  %2240 = icmp eq i64 %2239, 0
  br i1 %2240, label %2303, label %2241

2241:                                             ; preds = %2234
  %2242 = lshr i64 %2239, 3
  %2243 = getelementptr %struct.xpvinvlist, ptr %2237, i64 0, i32 6
  %2244 = load i8, ptr %2243, align 1, !tbaa !57, !range !59, !noundef !60
  %2245 = zext i8 %2244 to i64
  %2246 = xor i64 %2245, -1
  %2247 = add nsw i64 %2242, %2246
  %2248 = icmp eq i64 %2242, %2245
  br i1 %2248, label %2303, label %2249

2249:                                             ; preds = %2241
  %2250 = getelementptr i8, ptr %2235, i64 16
  %2251 = load ptr, ptr %2250, align 8, !tbaa !9
  %2252 = getelementptr inbounds i64, ptr %2251, i64 %2245
  %2253 = getelementptr i8, ptr %2237, i64 32
  %2254 = load i64, ptr %2253, align 8, !tbaa !71
  %2255 = getelementptr inbounds i64, ptr %2252, i64 %2254
  %2256 = load i64, ptr %2255, align 8, !tbaa !71
  %2257 = icmp ugt i64 %2256, %2236
  br i1 %2257, label %2267, label %2258

2258:                                             ; preds = %2249
  %2259 = getelementptr inbounds i64, ptr %2252, i64 %2247
  %2260 = load i64, ptr %2259, align 8, !tbaa !71
  %2261 = icmp ugt i64 %2260, %2236
  br i1 %2261, label %2262, label %2294

2262:                                             ; preds = %2258
  %2263 = add nsw i64 %2254, 1
  %2264 = getelementptr inbounds i64, ptr %2252, i64 %2263
  %2265 = load i64, ptr %2264, align 8, !tbaa !71
  %2266 = icmp ugt i64 %2265, %2236
  br i1 %2266, label %2294, label %2275

2267:                                             ; preds = %2249
  %2268 = load i64, ptr %2252, align 8, !tbaa !71
  %2269 = icmp ugt i64 %2268, %2236
  br i1 %2269, label %2303, label %2270

2270:                                             ; preds = %2267
  %2271 = add nsw i64 %2254, -1
  %2272 = getelementptr inbounds i64, ptr %2252, i64 %2271
  %2273 = load i64, ptr %2272, align 8, !tbaa !71
  %2274 = icmp ugt i64 %2273, %2236
  br i1 %2274, label %2275, label %2291

2275:                                             ; preds = %2270, %2262
  %2276 = phi i64 [ %2254, %2270 ], [ %2247, %2262 ]
  %2277 = phi i64 [ 0, %2270 ], [ %2263, %2262 ]
  %2278 = icmp slt i64 %2277, %2276
  br i1 %2278, label %2279, label %2291

2279:                                             ; preds = %2275, %2279
  %2280 = phi i64 [ %2289, %2279 ], [ %2277, %2275 ]
  %2281 = phi i64 [ %2288, %2279 ], [ %2276, %2275 ]
  %2282 = add nsw i64 %2281, %2280
  %2283 = sdiv i64 %2282, 2
  %2284 = getelementptr inbounds i64, ptr %2252, i64 %2283
  %2285 = load i64, ptr %2284, align 8, !tbaa !71
  %2286 = icmp ugt i64 %2285, %2236
  %2287 = add nsw i64 %2283, 1
  %2288 = select i1 %2286, i64 %2283, i64 %2281
  %2289 = select i1 %2286, i64 %2280, i64 %2287
  %2290 = icmp slt i64 %2289, %2288
  br i1 %2290, label %2279, label %2291, !llvm.loop !300

2291:                                             ; preds = %2279, %2275, %2270
  %2292 = phi i64 [ %2254, %2270 ], [ %2276, %2275 ], [ %2288, %2279 ]
  %2293 = add nsw i64 %2292, -1
  store i64 %2293, ptr %2253, align 8, !tbaa !71
  br label %2294

2294:                                             ; preds = %2258, %2262, %2291
  %2295 = phi i64 [ %2293, %2291 ], [ %2247, %2258 ], [ %2254, %2262 ]
  %2296 = and i64 %2295, -9223372036854775807
  %2297 = icmp eq i64 %2296, 0
  br i1 %2297, label %2298, label %2303

2298:                                             ; preds = %2223, %2294, %2214
  %2299 = icmp eq ptr %2207, %1229
  br i1 %2299, label %2316, label %2300

2300:                                             ; preds = %2298
  %2301 = call ptr @Perl_utf8_hop(ptr noundef nonnull %2207, i32 noundef -1) #21
  %2302 = icmp ult ptr %2301, %1229
  br i1 %2302, label %2316, label %2206, !llvm.loop !362

2303:                                             ; preds = %2294, %2234, %2267, %2241, %2214, %2210, %2223
  %2304 = ptrtoint ptr %2207 to i64
  %2305 = sub i64 %2304, %1238
  %2306 = load i8, ptr %2207, align 1, !tbaa !9
  %2307 = zext i8 %2306 to i64
  %2308 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2307
  %2309 = load i8, ptr %2308, align 1, !tbaa !9
  %2310 = zext i8 %2309 to i64
  %2311 = add nsw i64 %2305, %2310
  br label %2312

2312:                                             ; preds = %2303, %2183
  %2313 = phi i64 [ %2186, %2183 ], [ %2311, %2303 ]
  %2314 = phi ptr [ %2174, %2183 ], [ %2207, %2303 ]
  %2315 = icmp eq i64 %2313, 0
  br i1 %2315, label %2316, label %2324

2316:                                             ; preds = %2312, %2203, %2298, %2300
  %2317 = and i8 %2157, 1
  %2318 = icmp eq i8 %2317, 0
  br i1 %2318, label %2341, label %2319

2319:                                             ; preds = %2316
  %2320 = load i64, ptr %16, align 8, !tbaa !71
  %2321 = and i64 %2320, -33
  %2322 = icmp eq i64 %2321, 83
  %2323 = select i1 %2322, i8 0, i8 %2157
  br label %2341

2324:                                             ; preds = %2312
  %2325 = icmp eq i64 %2313, %2154
  br i1 %2325, label %2349, label %2326

2326:                                             ; preds = %2324
  %2327 = load i32, ptr %1230, align 8, !tbaa !98
  %2328 = icmp eq i32 %2327, 0
  br i1 %2328, label %2335, label %2329

2329:                                             ; preds = %2326
  %2330 = load i8, ptr %2314, align 1, !tbaa !9
  %2331 = zext i8 %2330 to i64
  %2332 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2331
  %2333 = load i8, ptr %2332, align 1, !tbaa !9
  %2334 = zext i8 %2333 to i64
  br label %2335

2335:                                             ; preds = %2326, %2329
  %2336 = phi i64 [ %2334, %2329 ], [ 1, %2326 ]
  %2337 = add i64 %2336, %2313
  %2338 = icmp eq i64 %2337, %2154
  %2339 = trunc i64 %2313 to i8
  br i1 %2338, label %2340, label %1239

2340:                                             ; preds = %2335
  store ptr %2156, ptr %17, align 8, !tbaa !5
  br label %2349

2341:                                             ; preds = %2169, %2160, %2150, %1333, %1333, %1333, %1333, %1333, %1333, %1333, %2131, %2319, %2316, %1561, %1543, %1368, %1339
  %2342 = phi i64 [ %1270, %1561 ], [ %1270, %1543 ], [ %1270, %1368 ], [ %1270, %1339 ], [ %2154, %2319 ], [ %2154, %2316 ], [ %1270, %1333 ], [ %1270, %1333 ], [ %1270, %1333 ], [ %1270, %1333 ], [ %1270, %1333 ], [ %1270, %1333 ], [ %1270, %1333 ], [ %2136, %2131 ], [ %2154, %2150 ], [ %2154, %2160 ], [ %2154, %2169 ]
  %2343 = phi i8 [ %1272, %1561 ], [ %1272, %1543 ], [ %1272, %1368 ], [ %1272, %1339 ], [ %2323, %2319 ], [ %2157, %2316 ], [ %1272, %1333 ], [ %1272, %1333 ], [ %1272, %1333 ], [ %1272, %1333 ], [ %1272, %1333 ], [ %1272, %1333 ], [ %1272, %1333 ], [ %2134, %2131 ], [ %2157, %2150 ], [ %2157, %2160 ], [ %2157, %2169 ]
  %2344 = phi i8 [ %1273, %1561 ], [ %1273, %1543 ], [ %1273, %1368 ], [ %1273, %1339 ], [ %2158, %2319 ], [ %2158, %2316 ], [ %1273, %1333 ], [ %1273, %1333 ], [ %1273, %1333 ], [ %1273, %1333 ], [ %1273, %1333 ], [ %1273, %1333 ], [ %1273, %1333 ], [ %2135, %2131 ], [ %2158, %2150 ], [ %2158, %2160 ], [ %2158, %2169 ]
  %2345 = icmp eq i64 %2342, 0
  br i1 %2345, label %2346, label %2349

2346:                                             ; preds = %2341
  %2347 = load ptr, ptr %14, align 8, !tbaa !5
  %2348 = getelementptr inbounds %struct.regnode, ptr %2347, i64 0, i32 1
  store i8 40, ptr %2348, align 1, !tbaa !164
  br label %2379

2349:                                             ; preds = %2324, %2340, %1896, %2341
  %2350 = phi i8 [ %1273, %1896 ], [ %2344, %2341 ], [ %2158, %2340 ], [ %2158, %2324 ]
  %2351 = phi i8 [ %1272, %1896 ], [ %2343, %2341 ], [ %2157, %2340 ], [ %2157, %2324 ]
  %2352 = phi i64 [ %1270, %1896 ], [ %2342, %2341 ], [ %2313, %2340 ], [ %2154, %2324 ]
  %2353 = load i32, ptr %0, align 8, !tbaa !109
  %2354 = and i32 %2353, 4
  %2355 = icmp eq i32 %2354, 0
  br i1 %2355, label %2356, label %2358

2356:                                             ; preds = %2349
  %2357 = load ptr, ptr %14, align 8, !tbaa !5
  br label %2376

2358:                                             ; preds = %2349
  %2359 = and i8 %2350, 1
  %2360 = icmp eq i8 %2359, 0
  br i1 %2360, label %2367, label %2361

2361:                                             ; preds = %2358
  %2362 = and i32 %2353, 896
  %2363 = icmp eq i32 %2362, 128
  %2364 = select i1 %2363, i8 32, i8 31
  %2365 = load ptr, ptr %14, align 8, !tbaa !5
  %2366 = getelementptr inbounds %struct.regnode, ptr %2365, i64 0, i32 1
  store i8 %2364, ptr %2366, align 1, !tbaa !164
  br label %2376

2367:                                             ; preds = %2358
  %2368 = and i8 %2351, 1
  %2369 = icmp eq i8 %2368, 0
  %2370 = load ptr, ptr %14, align 8, !tbaa !5
  br i1 %2369, label %2376, label %2371

2371:                                             ; preds = %2367
  %2372 = and i32 %2353, 896
  %2373 = icmp eq i32 %2372, 128
  %2374 = select i1 %2373, i8 38, i8 35
  %2375 = getelementptr inbounds %struct.regnode, ptr %2370, i64 0, i32 1
  store i8 %2374, ptr %2375, align 1, !tbaa !164
  br label %2376

2376:                                             ; preds = %2356, %2361, %2371, %2367
  %2377 = phi ptr [ %2357, %2356 ], [ %2365, %2361 ], [ %2370, %2371 ], [ %2370, %2367 ]
  %2378 = load i64, ptr %16, align 8, !tbaa !71
  call fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef nonnull %0, ptr noundef %2377, ptr noundef nonnull %1, i64 noundef %2352, i64 noundef %2378, i1 noundef zeroext false)
  br label %2379

2379:                                             ; preds = %2376, %2346
  %2380 = phi i64 [ %2352, %2376 ], [ 0, %2346 ]
  %2381 = load ptr, ptr %17, align 8, !tbaa !5
  %2382 = getelementptr inbounds i8, ptr %2381, i64 -1
  store ptr %2382, ptr %25, align 8, !tbaa !138
  %2383 = call fastcc ptr @S_nextchar(ptr noundef %0)
  %2384 = icmp slt i64 %2380, 0
  br i1 %2384, label %2385, label %2406

2385:                                             ; preds = %2379
  %2386 = load ptr, ptr %1189, align 8, !tbaa !145
  %2387 = icmp eq ptr %2386, %1191
  br i1 %2387, label %2390, label %2388

2388:                                             ; preds = %2385
  %2389 = load ptr, ptr %1233, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %2389, i32 noundef 11) #21
  br label %2390

2390:                                             ; preds = %2385, %2388
  %2391 = load ptr, ptr %25, align 8, !tbaa !138
  %2392 = load ptr, ptr %27, align 8, !tbaa !140
  %2393 = icmp ugt ptr %2391, %2392
  %2394 = select i1 %2393, ptr %2392, ptr %2391
  %2395 = load ptr, ptr %1232, align 8, !tbaa !108
  %2396 = ptrtoint ptr %2394 to i64
  %2397 = ptrtoint ptr %2395 to i64
  %2398 = sub i64 %2396, %2397
  %2399 = load i32, ptr %1230, align 8, !tbaa !98
  %2400 = icmp ne i32 %2399, 0
  %2401 = zext i1 %2400 to i32
  %2402 = ptrtoint ptr %2392 to i64
  %2403 = sub i64 %2402, %2396
  %2404 = getelementptr inbounds i8, ptr %2395, i64 %2398
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.307, i32 noundef %2401, i64 noundef %2398, ptr noundef %2395, i32 noundef %2401, i64 noundef %2403, ptr noundef %2404) #21
  br label %2406

2405:                                             ; preds = %1681, %1485, %1376, %1568, %1532
  call void @llvm.lifetime.end.p0(i64 140, ptr nonnull %18) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #21
  br label %2409

2406:                                             ; preds = %2379, %2390
  call void @llvm.lifetime.end.p0(i64 140, ptr nonnull %18) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #21
  br label %2407

2407:                                             ; preds = %2406, %1113, %758, %844, %264, %697, %731, %735, %186, %192, %121, %140, %66, %85, %359, %332, %312
  %2408 = load ptr, ptr %14, align 8, !tbaa !5
  br label %2409

2409:                                             ; preds = %2405, %738, %233, %2407, %320, %284, %278
  %2410 = phi ptr [ %2408, %2407 ], [ null, %320 ], [ null, %278 ], [ null, %284 ], [ null, %233 ], [ null, %738 ], [ null, %2405 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #21
  ret ptr %2410
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regclass(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i1 noundef zeroext %5, i1 noundef zeroext %6, ptr noundef writeonly %7) unnamed_addr #0 {
  %9 = alloca [14 x i8], align 1
  %10 = alloca i8, align 1
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca ptr, align 8
  %28 = alloca [13 x i8], align 1
  %29 = alloca i64, align 8
  %30 = alloca [3 x i8], align 1
  %31 = alloca i64, align 8
  %32 = alloca i32, align 4
  %33 = alloca ptr, align 8
  %34 = alloca [14 x i8], align 1
  %35 = alloca i64, align 8
  %36 = alloca ptr, align 8
  %37 = alloca i64, align 8
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #21
  store i64 3735928559, ptr %14, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #21
  store ptr null, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #21
  store ptr null, ptr %17, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #21
  store ptr null, ptr %18, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #21
  store ptr null, ptr %19, align 8, !tbaa !5
  %41 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %42 = load ptr, ptr %41, align 8, !tbaa !140
  %43 = icmp eq ptr %7, null
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #21
  store ptr null, ptr %20, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #21
  store ptr null, ptr %21, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %22) #21
  store ptr null, ptr %22, align 8, !tbaa !5
  %44 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %45 = getelementptr inbounds %struct.cop, ptr %44, i64 0, i32 12
  %46 = load ptr, ptr %45, align 8, !tbaa !363
  %47 = ptrtoint ptr %46 to i64
  switch i64 %47, label %48 [
    i64 0, label %58
    i64 8, label %58
    i64 16, label %58
  ]

48:                                               ; preds = %8
  %49 = getelementptr inbounds i64, ptr %46, i64 1
  %50 = load i8, ptr %49, align 1, !tbaa !9
  %51 = and i8 %50, 2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, ptr %46, i64 20
  %55 = load i8, ptr %54, align 1, !tbaa !9
  %56 = lshr i8 %55, 1
  %57 = and i8 %56, 1
  br label %58

58:                                               ; preds = %53, %8, %8, %8, %48
  %59 = phi i8 [ 0, %8 ], [ 1, %48 ], [ 0, %8 ], [ 0, %8 ], [ %57, %53 ]
  %60 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %61 = load ptr, ptr %60, align 8, !tbaa !145
  %62 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %63 = load ptr, ptr %62, align 8, !tbaa !138
  %64 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %65 = load i64, ptr %64, align 8, !tbaa !144
  %66 = load i32, ptr %0, align 8, !tbaa !109
  %67 = and i32 %66, 896
  %68 = icmp eq i32 %67, 128
  %69 = select i1 %68, i8 20, i8 19
  %70 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %71 = icmp eq ptr %61, %70
  br i1 %71, label %72, label %79

72:                                               ; preds = %58
  %73 = zext i8 %69 to i64
  %74 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !9
  %76 = zext i8 %75 to i64
  %77 = add i64 %65, 1
  %78 = add i64 %77, %76
  store i64 %78, ptr %64, align 8, !tbaa !144
  br label %88

79:                                               ; preds = %58
  %80 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %81 = load ptr, ptr %80, align 8, !tbaa !158
  %82 = icmp ult ptr %61, %81
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = zext i8 %69 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef %84, ptr noundef %61, ptr noundef %81) #21
  %85 = load ptr, ptr %60, align 8, !tbaa !145
  br label %86

86:                                               ; preds = %83, %79
  %87 = phi ptr [ %85, %83 ], [ %61, %79 ]
  store i8 0, ptr %61, align 2, !tbaa !169
  br label %88

88:                                               ; preds = %86, %72
  %89 = phi ptr [ %61, %72 ], [ %87, %86 ]
  %90 = icmp eq ptr %89, %70
  br i1 %90, label %97, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.regnode_1, ptr %61, i64 0, i32 3
  store i32 0, ptr %92, align 4, !tbaa !166
  %93 = getelementptr inbounds %struct.regnode, ptr %61, i64 0, i32 1
  store i8 %69, ptr %93, align 1, !tbaa !164
  %94 = getelementptr inbounds %struct.regnode, ptr %61, i64 0, i32 2
  store i16 0, ptr %94, align 2, !tbaa !168
  %95 = getelementptr inbounds %struct.regnode, ptr %61, i64 2
  store ptr %95, ptr %60, align 8, !tbaa !145
  %96 = icmp eq ptr %95, %70
  br i1 %96, label %97, label %100

97:                                               ; preds = %88, %91
  %98 = load i64, ptr %64, align 8, !tbaa !144
  %99 = add i64 %98, 9
  store i64 %99, ptr %64, align 8, !tbaa !144
  br label %109

100:                                              ; preds = %91
  store i8 0, ptr %61, align 2, !tbaa !169
  %101 = getelementptr inbounds %struct.regnode, ptr %61, i64 11
  store ptr %101, ptr %60, align 8, !tbaa !145
  %102 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.308, i64 noundef 10, i32 noundef 524288) #21
  %103 = load ptr, ptr %102, align 8, !tbaa !63
  %104 = getelementptr inbounds %struct.xpv, ptr %103, i64 0, i32 2
  %105 = load i64, ptr %104, align 8, !tbaa !72
  %106 = getelementptr inbounds %struct.sv, ptr %102, i64 0, i32 2
  %107 = load i32, ptr %106, align 4, !tbaa !62
  %108 = and i32 %107, -524289
  store i32 %108, ptr %106, align 4, !tbaa !62
  br label %109

109:                                              ; preds = %100, %97
  %110 = phi i64 [ 0, %97 ], [ %105, %100 ]
  %111 = phi ptr [ @PL_sv_undef, %97 ], [ %102, %100 ]
  %112 = load ptr, ptr %62, align 8, !tbaa !138
  br i1 %43, label %158, label %113

113:                                              ; preds = %109
  %114 = load ptr, ptr %41, align 8, !tbaa !140
  %115 = icmp ugt ptr %114, %112
  br i1 %115, label %116, label %156

116:                                              ; preds = %113
  %117 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %118 = ptrtoint ptr %114 to i64
  br label %119

119:                                              ; preds = %152, %116
  %120 = phi ptr [ %154, %152 ], [ %112, %116 ]
  %121 = load i8, ptr %120, align 1, !tbaa !9
  switch i8 %121, label %122 [
    i8 32, label %152
    i8 13, label %152
    i8 12, label %152
    i8 11, label %152
    i8 10, label %152
    i8 9, label %152
  ]

122:                                              ; preds = %119
  %123 = load i32, ptr %117, align 8, !tbaa !98
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %150, label %125

125:                                              ; preds = %122
  %126 = ptrtoint ptr %120 to i64
  %127 = sub i64 %118, %126
  %128 = zext i8 %121 to i64
  %129 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !9
  %131 = zext i8 %130 to i64
  %132 = icmp slt i64 %127, %131
  br i1 %132, label %156, label %133

133:                                              ; preds = %125
  switch i8 %121, label %156 [
    i8 -62, label %146
    i8 -30, label %134
  ]

134:                                              ; preds = %133
  %135 = getelementptr inbounds i8, ptr %120, i64 1
  %136 = load i8, ptr %135, align 1, !tbaa !9
  %137 = icmp eq i8 %136, -128
  br i1 %137, label %138, label %156

138:                                              ; preds = %134
  %139 = getelementptr inbounds i8, ptr %120, i64 2
  %140 = load i8, ptr %139, align 1, !tbaa !9
  %141 = and i8 %140, -2
  %142 = icmp eq i8 %141, -114
  %143 = icmp eq i8 %141, -88
  %144 = or i1 %142, %143
  %145 = freeze i1 %144
  br i1 %145, label %152, label %156

146:                                              ; preds = %133
  %147 = getelementptr inbounds i8, ptr %120, i64 1
  %148 = load i8, ptr %147, align 1, !tbaa !9
  %149 = icmp eq i8 %148, -123
  br i1 %149, label %152, label %156

150:                                              ; preds = %122
  %151 = icmp eq i8 %121, -123
  br i1 %151, label %152, label %156

152:                                              ; preds = %150, %146, %138, %119, %119, %119, %119, %119, %119
  %153 = phi i64 [ 1, %150 ], [ 1, %119 ], [ 3, %138 ], [ 2, %146 ], [ 1, %119 ], [ 1, %119 ], [ 1, %119 ], [ 1, %119 ], [ 1, %119 ]
  %154 = getelementptr inbounds i8, ptr %120, i64 %153
  %155 = icmp ult ptr %154, %114
  br i1 %155, label %119, label %156

156:                                              ; preds = %125, %133, %134, %138, %146, %150, %152, %113
  %157 = phi ptr [ %112, %113 ], [ %154, %152 ], [ %120, %125 ], [ %120, %133 ], [ %120, %134 ], [ %120, %138 ], [ %120, %146 ], [ %120, %150 ]
  store ptr %157, ptr %62, align 8, !tbaa !138
  br label %158

158:                                              ; preds = %156, %109
  %159 = phi ptr [ %157, %156 ], [ %112, %109 ]
  %160 = load i8, ptr %159, align 1, !tbaa !9
  %161 = icmp ne i8 %160, 94
  br i1 %161, label %215, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds i8, ptr %159, i64 1
  store ptr %163, ptr %62, align 8, !tbaa !138
  %164 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %165 = load i32, ptr %164, align 8, !tbaa !141
  %166 = icmp slt i32 %165, 10
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  %168 = add nsw i32 %165, 1
  store i32 %168, ptr %164, align 8, !tbaa !141
  br label %169

169:                                              ; preds = %167, %162
  br i1 %43, label %215, label %170

170:                                              ; preds = %169
  %171 = load ptr, ptr %41, align 8, !tbaa !140
  %172 = icmp ugt ptr %171, %163
  br i1 %172, label %173, label %213

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %175 = ptrtoint ptr %171 to i64
  br label %176

176:                                              ; preds = %209, %173
  %177 = phi ptr [ %211, %209 ], [ %163, %173 ]
  %178 = load i8, ptr %177, align 1, !tbaa !9
  switch i8 %178, label %179 [
    i8 32, label %209
    i8 13, label %209
    i8 12, label %209
    i8 11, label %209
    i8 10, label %209
    i8 9, label %209
  ]

179:                                              ; preds = %176
  %180 = load i32, ptr %174, align 8, !tbaa !98
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %207, label %182

182:                                              ; preds = %179
  %183 = ptrtoint ptr %177 to i64
  %184 = sub i64 %175, %183
  %185 = zext i8 %178 to i64
  %186 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %185
  %187 = load i8, ptr %186, align 1, !tbaa !9
  %188 = zext i8 %187 to i64
  %189 = icmp slt i64 %184, %188
  br i1 %189, label %213, label %190

190:                                              ; preds = %182
  switch i8 %178, label %213 [
    i8 -62, label %203
    i8 -30, label %191
  ]

191:                                              ; preds = %190
  %192 = getelementptr inbounds i8, ptr %177, i64 1
  %193 = load i8, ptr %192, align 1, !tbaa !9
  %194 = icmp eq i8 %193, -128
  br i1 %194, label %195, label %213

195:                                              ; preds = %191
  %196 = getelementptr inbounds i8, ptr %177, i64 2
  %197 = load i8, ptr %196, align 1, !tbaa !9
  %198 = and i8 %197, -2
  %199 = icmp eq i8 %198, -114
  %200 = icmp eq i8 %198, -88
  %201 = or i1 %199, %200
  %202 = freeze i1 %201
  br i1 %202, label %209, label %213

203:                                              ; preds = %190
  %204 = getelementptr inbounds i8, ptr %177, i64 1
  %205 = load i8, ptr %204, align 1, !tbaa !9
  %206 = icmp eq i8 %205, -123
  br i1 %206, label %209, label %213

207:                                              ; preds = %179
  %208 = icmp eq i8 %178, -123
  br i1 %208, label %209, label %213

209:                                              ; preds = %207, %203, %195, %176, %176, %176, %176, %176, %176
  %210 = phi i64 [ 1, %207 ], [ 1, %176 ], [ 3, %195 ], [ 2, %203 ], [ 1, %176 ], [ 1, %176 ], [ 1, %176 ], [ 1, %176 ], [ 1, %176 ]
  %211 = getelementptr inbounds i8, ptr %177, i64 %210
  %212 = icmp ult ptr %211, %171
  br i1 %212, label %176, label %213

213:                                              ; preds = %182, %190, %191, %195, %203, %207, %209, %170
  %214 = phi ptr [ %163, %170 ], [ %211, %209 ], [ %177, %182 ], [ %177, %190 ], [ %177, %191 ], [ %177, %195 ], [ %177, %203 ], [ %177, %207 ]
  store ptr %214, ptr %62, align 8, !tbaa !138
  br label %215

215:                                              ; preds = %169, %213, %158
  %216 = phi ptr [ %214, %213 ], [ %163, %169 ], [ %159, %158 ]
  %217 = phi i8 [ 1, %213 ], [ 1, %169 ], [ 0, %158 ]
  %218 = phi i1 [ false, %213 ], [ false, %169 ], [ %4, %158 ]
  %219 = load ptr, ptr %60, align 8, !tbaa !145
  %220 = icmp eq ptr %219, %70
  br i1 %220, label %272, label %221

221:                                              ; preds = %215
  %222 = load ptr, ptr %41, align 8, !tbaa !140
  %223 = icmp ult ptr %216, %222
  br i1 %223, label %224, label %272

224:                                              ; preds = %221
  %225 = load i8, ptr %216, align 1, !tbaa !9
  switch i8 %225, label %272 [
    i8 58, label %226
    i8 61, label %226
    i8 46, label %226
  ]

226:                                              ; preds = %224, %224, %224
  %227 = getelementptr inbounds i8, ptr %216, i64 1
  %228 = load i8, ptr %227, align 1, !tbaa !9
  %229 = icmp eq i8 %228, 94
  %230 = getelementptr inbounds i8, ptr %216, i64 2
  %231 = select i1 %229, ptr %230, ptr %227
  br label %232

232:                                              ; preds = %232, %226
  %233 = phi ptr [ %231, %226 ], [ %240, %232 ]
  %234 = load i8, ptr %233, align 1, !tbaa !9
  %235 = zext i8 %234 to i64
  %236 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %235
  %237 = load i32, ptr %236, align 4, !tbaa !150
  %238 = and i32 %237, 16385
  %239 = icmp eq i32 %238, 16385
  %240 = getelementptr inbounds i8, ptr %233, i64 1
  br i1 %239, label %232, label %241, !llvm.loop !364

241:                                              ; preds = %232
  %242 = icmp eq i8 %234, 0
  br i1 %242, label %272, label %243

243:                                              ; preds = %241
  %244 = sext i8 %225 to i32
  %245 = icmp eq i8 %225, %234
  br i1 %245, label %246, label %272

246:                                              ; preds = %243
  %247 = load i8, ptr %240, align 1, !tbaa !9
  %248 = icmp eq i8 %247, 93
  br i1 %248, label %249, label %272

249:                                              ; preds = %246
  %250 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %251 = load ptr, ptr %250, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %251, i32 noundef 11) #21
  %252 = getelementptr inbounds i8, ptr %233, i64 2
  %253 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %254 = load ptr, ptr %253, align 8, !tbaa !108
  %255 = ptrtoint ptr %252 to i64
  %256 = ptrtoint ptr %254 to i64
  %257 = sub i64 %255, %256
  %258 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %259 = load i32, ptr %258, align 8, !tbaa !98
  %260 = icmp ne i32 %259, 0
  %261 = zext i1 %260 to i32
  %262 = load ptr, ptr %41, align 8, !tbaa !140
  %263 = ptrtoint ptr %262 to i64
  %264 = sub i64 %263, %255
  %265 = getelementptr inbounds i8, ptr %254, i64 %257
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.309, i32 noundef %244, i32 noundef %244, i32 noundef %261, i64 noundef %257, ptr noundef %254, i32 noundef %261, i64 noundef %264, ptr noundef %265) #21
  %266 = load ptr, ptr %250, align 8, !tbaa !151
  %267 = icmp eq ptr %266, null
  br i1 %267, label %272, label %268

268:                                              ; preds = %249
  %269 = getelementptr inbounds %struct.sv, ptr %266, i64 0, i32 1
  %270 = load i32, ptr %269, align 8, !tbaa !22
  %271 = add i32 %270, 1
  store i32 %271, ptr %269, align 8, !tbaa !22
  br label %272

272:                                              ; preds = %268, %249, %241, %243, %246, %224, %221, %215
  %273 = load ptr, ptr %62, align 8, !tbaa !138
  br i1 %3, label %274, label %279

274:                                              ; preds = %272
  %275 = load ptr, ptr %41, align 8, !tbaa !140
  %276 = icmp ugt ptr %275, %273
  %277 = getelementptr inbounds i8, ptr %273, i64 1
  %278 = select i1 %276, ptr %277, ptr %42
  br label %279

279:                                              ; preds = %274, %272
  %280 = phi ptr [ %42, %272 ], [ %278, %274 ]
  %281 = load i8, ptr %273, align 1, !tbaa !9
  %282 = icmp eq i8 %281, 93
  br i1 %282, label %351, label %283

283:                                              ; preds = %2103, %1921, %1984, %1750, %816, %2406, %2409, %1986, %279
  %284 = phi i8 [ %1583, %1750 ], [ %1826, %1986 ], [ %1826, %2406 ], [ %1826, %2409 ], [ %1826, %2103 ], [ %354, %816 ], [ %59, %279 ], [ %1826, %1984 ], [ %1826, %1921 ]
  %285 = phi i8 [ %355, %1750 ], [ %1827, %1986 ], [ %1827, %2406 ], [ %1827, %2409 ], [ %1827, %2103 ], [ %355, %816 ], [ 0, %279 ], [ %1827, %1984 ], [ %1827, %1921 ]
  %286 = phi i32 [ %367, %1750 ], [ %1828, %1986 ], [ %1828, %2406 ], [ %1828, %2409 ], [ %1828, %2103 ], [ %367, %816 ], [ 0, %279 ], [ %1828, %1984 ], [ %1828, %1921 ]
  %287 = phi ptr [ %1645, %1750 ], [ %1825, %1986 ], [ %1825, %2406 ], [ %2411, %2409 ], [ %1825, %2103 ], [ %357, %816 ], [ null, %279 ], [ %1825, %1984 ], [ %1825, %1921 ]
  %288 = phi i8 [ %1582, %1750 ], [ %1829, %1986 ], [ %1829, %2406 ], [ %1829, %2409 ], [ %1829, %2103 ], [ %358, %816 ], [ 0, %279 ], [ %1829, %1984 ], [ %1829, %1921 ]
  %289 = phi ptr [ %1581, %1750 ], [ %1830, %1986 ], [ %1830, %2406 ], [ %1830, %2409 ], [ %1830, %2103 ], [ %359, %816 ], [ null, %279 ], [ %1830, %1984 ], [ %1830, %1921 ]
  %290 = phi ptr [ %360, %1750 ], [ %360, %1986 ], [ %360, %2406 ], [ %360, %2409 ], [ %2104, %2103 ], [ %817, %816 ], [ null, %279 ], [ %360, %1984 ], [ %360, %1921 ]
  %291 = phi i64 [ %1646, %1750 ], [ %1824, %1986 ], [ %1824, %2406 ], [ %1824, %2409 ], [ %2105, %2103 ], [ %818, %816 ], [ 0, %279 ], [ %1985, %1984 ], [ %1824, %1921 ]
  %292 = phi i8 [ %1676, %1750 ], [ %1823, %1986 ], [ %1823, %2406 ], [ %1823, %2409 ], [ %1823, %2103 ], [ %362, %816 ], [ 0, %279 ], [ %1823, %1984 ], [ %1823, %1921 ]
  %293 = phi ptr [ %370, %1750 ], [ %370, %1986 ], [ %370, %2406 ], [ %370, %2409 ], [ %370, %2103 ], [ %370, %816 ], [ null, %279 ], [ %370, %1984 ], [ %370, %1921 ]
  %294 = phi i64 [ %1580, %1750 ], [ %1831, %1986 ], [ %1831, %2406 ], [ %1831, %2409 ], [ %1831, %2103 ], [ -1, %816 ], [ -1, %279 ], [ %1831, %1984 ], [ %1831, %1921 ]
  %295 = phi i64 [ 0, %1750 ], [ %1987, %1986 ], [ 0, %2406 ], [ 0, %2409 ], [ %1987, %2103 ], [ %364, %816 ], [ 0, %279 ], [ 0, %1984 ], [ 1, %1921 ]
  %296 = phi i64 [ %365, %1750 ], [ %1988, %1986 ], [ %1988, %2406 ], [ %1988, %2409 ], [ %365, %2103 ], [ %365, %816 ], [ 3735928559, %279 ], [ %1834, %1984 ], [ %1834, %1921 ]
  %297 = load ptr, ptr %62, align 8, !tbaa !138
  %298 = icmp ult ptr %297, %280
  br i1 %298, label %299, label %2412

299:                                              ; preds = %283
  br i1 %43, label %345, label %300

300:                                              ; preds = %299
  %301 = load ptr, ptr %41, align 8, !tbaa !140
  %302 = icmp ugt ptr %301, %297
  br i1 %302, label %303, label %343

303:                                              ; preds = %300
  %304 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %305 = ptrtoint ptr %301 to i64
  br label %306

306:                                              ; preds = %339, %303
  %307 = phi ptr [ %341, %339 ], [ %297, %303 ]
  %308 = load i8, ptr %307, align 1, !tbaa !9
  switch i8 %308, label %309 [
    i8 32, label %339
    i8 13, label %339
    i8 12, label %339
    i8 11, label %339
    i8 10, label %339
    i8 9, label %339
  ]

309:                                              ; preds = %306
  %310 = load i32, ptr %304, align 8, !tbaa !98
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %337, label %312

312:                                              ; preds = %309
  %313 = ptrtoint ptr %307 to i64
  %314 = sub i64 %305, %313
  %315 = zext i8 %308 to i64
  %316 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %315
  %317 = load i8, ptr %316, align 1, !tbaa !9
  %318 = zext i8 %317 to i64
  %319 = icmp slt i64 %314, %318
  br i1 %319, label %343, label %320

320:                                              ; preds = %312
  switch i8 %308, label %343 [
    i8 -62, label %333
    i8 -30, label %321
  ]

321:                                              ; preds = %320
  %322 = getelementptr inbounds i8, ptr %307, i64 1
  %323 = load i8, ptr %322, align 1, !tbaa !9
  %324 = icmp eq i8 %323, -128
  br i1 %324, label %325, label %343

325:                                              ; preds = %321
  %326 = getelementptr inbounds i8, ptr %307, i64 2
  %327 = load i8, ptr %326, align 1, !tbaa !9
  %328 = and i8 %327, -2
  %329 = icmp eq i8 %328, -114
  %330 = icmp eq i8 %328, -88
  %331 = or i1 %329, %330
  %332 = freeze i1 %331
  br i1 %332, label %339, label %343

333:                                              ; preds = %320
  %334 = getelementptr inbounds i8, ptr %307, i64 1
  %335 = load i8, ptr %334, align 1, !tbaa !9
  %336 = icmp eq i8 %335, -123
  br i1 %336, label %339, label %343

337:                                              ; preds = %309
  %338 = icmp eq i8 %308, -123
  br i1 %338, label %339, label %343

339:                                              ; preds = %337, %333, %325, %306, %306, %306, %306, %306, %306
  %340 = phi i64 [ 1, %337 ], [ 1, %306 ], [ 3, %325 ], [ 2, %333 ], [ 1, %306 ], [ 1, %306 ], [ 1, %306 ], [ 1, %306 ], [ 1, %306 ]
  %341 = getelementptr inbounds i8, ptr %307, i64 %340
  %342 = icmp ult ptr %341, %301
  br i1 %342, label %306, label %343

343:                                              ; preds = %312, %320, %321, %325, %333, %337, %339, %300
  %344 = phi ptr [ %297, %300 ], [ %341, %339 ], [ %307, %312 ], [ %307, %320 ], [ %307, %321 ], [ %307, %325 ], [ %307, %333 ], [ %307, %337 ]
  store ptr %344, ptr %62, align 8, !tbaa !138
  br label %345

345:                                              ; preds = %343, %299
  %346 = phi ptr [ %344, %343 ], [ %297, %299 ]
  %347 = load i8, ptr %346, align 1, !tbaa !9
  %348 = icmp eq i8 %347, 93
  br i1 %348, label %2412, label %349

349:                                              ; preds = %345
  %350 = load i64, ptr %14, align 8, !tbaa !71
  br label %351

351:                                              ; preds = %349, %279
  %352 = phi ptr [ %273, %279 ], [ %346, %349 ]
  %353 = phi i64 [ 3735928559, %279 ], [ %350, %349 ]
  %354 = phi i8 [ %59, %279 ], [ %284, %349 ]
  %355 = phi i8 [ 0, %279 ], [ %285, %349 ]
  %356 = phi i32 [ 0, %279 ], [ %286, %349 ]
  %357 = phi ptr [ null, %279 ], [ %287, %349 ]
  %358 = phi i8 [ 0, %279 ], [ %288, %349 ]
  %359 = phi ptr [ null, %279 ], [ %289, %349 ]
  %360 = phi ptr [ null, %279 ], [ %290, %349 ]
  %361 = phi i64 [ 0, %279 ], [ %291, %349 ]
  %362 = phi i8 [ 0, %279 ], [ %292, %349 ]
  %363 = phi ptr [ null, %279 ], [ %293, %349 ]
  %364 = phi i64 [ 0, %279 ], [ %295, %349 ]
  %365 = phi i64 [ 3735928559, %279 ], [ %296, %349 ]
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i32 0, i32 %356
  %368 = zext i1 %366 to i64
  %369 = add i64 %361, %368
  %370 = select i1 %366, ptr %352, ptr %363
  %371 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %372 = load i32, ptr %371, align 8, !tbaa !98
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %386, label %374

374:                                              ; preds = %351
  %375 = load ptr, ptr %41, align 8, !tbaa !140
  %376 = ptrtoint ptr %375 to i64
  %377 = ptrtoint ptr %352 to i64
  %378 = sub i64 %376, %377
  %379 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #21
  %380 = xor i1 %379, true
  %381 = zext i1 %380 to i32
  %382 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %352, i64 noundef %378, ptr noundef nonnull %15, i32 noundef %381) #21
  %383 = load i64, ptr %15, align 8, !tbaa !71
  %384 = load ptr, ptr %62, align 8, !tbaa !138
  %385 = getelementptr inbounds i8, ptr %384, i64 %383
  store ptr %385, ptr %62, align 8, !tbaa !138
  br label %390

386:                                              ; preds = %351
  %387 = getelementptr inbounds i8, ptr %352, i64 1
  store ptr %387, ptr %62, align 8, !tbaa !138
  %388 = load i8, ptr %352, align 1, !tbaa !9
  %389 = zext i8 %388 to i64
  br label %390

390:                                              ; preds = %386, %374
  %391 = phi ptr [ %387, %386 ], [ %385, %374 ]
  %392 = phi i64 [ %389, %386 ], [ %382, %374 ]
  store i64 %392, ptr %14, align 8
  switch i64 %392, label %1751 [
    i64 91, label %393
    i64 92, label %601
  ]

393:                                              ; preds = %390
  %394 = load ptr, ptr %41, align 8, !tbaa !140
  %395 = icmp ult ptr %391, %394
  br i1 %395, label %396, label %1751

396:                                              ; preds = %393
  %397 = load i8, ptr %391, align 1, !tbaa !9
  switch i8 %397, label %1751 [
    i8 58, label %398
    i8 61, label %398
    i8 46, label %398
  ]

398:                                              ; preds = %396, %396, %396
  %399 = ptrtoint ptr %391 to i64
  %400 = getelementptr inbounds i8, ptr %391, i64 1
  %401 = ptrtoint ptr %394 to i64
  %402 = icmp ult ptr %400, %394
  br i1 %402, label %403, label %1751

403:                                              ; preds = %398
  switch i8 %397, label %1751 [
    i8 58, label %404
    i8 61, label %404
    i8 46, label %404
  ]

404:                                              ; preds = %403, %403, %403
  %405 = zext i8 %397 to i32
  br label %406

406:                                              ; preds = %410, %404
  %407 = phi ptr [ %391, %404 ], [ %408, %410 ]
  %408 = getelementptr inbounds i8, ptr %407, i64 1
  store ptr %408, ptr %62, align 8, !tbaa !138
  %409 = icmp ult ptr %408, %394
  br i1 %409, label %410, label %413

410:                                              ; preds = %406
  %411 = load i8, ptr %408, align 1, !tbaa !9
  %412 = icmp eq i8 %411, %397
  br i1 %412, label %413, label %406, !llvm.loop !365

413:                                              ; preds = %410, %406
  %414 = icmp eq ptr %408, %394
  br i1 %414, label %415, label %450

415:                                              ; preds = %413
  br i1 %6, label %416, label %449

416:                                              ; preds = %415
  store ptr %391, ptr %62, align 8, !tbaa !138
  %417 = sub i64 %401, %399
  %418 = getelementptr i8, ptr %391, i64 %417
  br label %422

419:                                              ; preds = %422
  %420 = getelementptr inbounds i8, ptr %423, i64 1
  store ptr %420, ptr %62, align 8, !tbaa !138
  %421 = icmp eq ptr %420, %418
  br i1 %421, label %426, label %422, !llvm.loop !366

422:                                              ; preds = %419, %416
  %423 = phi ptr [ %420, %419 ], [ %391, %416 ]
  %424 = load i8, ptr %423, align 1, !tbaa !9
  %425 = icmp eq i8 %424, 93
  br i1 %425, label %426, label %419

426:                                              ; preds = %422, %419
  %427 = phi ptr [ %418, %419 ], [ %423, %422 ]
  %428 = load ptr, ptr %60, align 8, !tbaa !145
  %429 = icmp eq ptr %428, %70
  br i1 %429, label %436, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %432 = load ptr, ptr %431, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %432, i32 noundef 11) #21
  %433 = load ptr, ptr %62, align 8, !tbaa !138
  %434 = load ptr, ptr %41, align 8, !tbaa !140
  %435 = ptrtoint ptr %434 to i64
  br label %436

436:                                              ; preds = %430, %426
  %437 = phi i64 [ %401, %426 ], [ %435, %430 ]
  %438 = phi ptr [ %427, %426 ], [ %433, %430 ]
  %439 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %440 = load ptr, ptr %439, align 8, !tbaa !108
  %441 = ptrtoint ptr %438 to i64
  %442 = ptrtoint ptr %440 to i64
  %443 = sub i64 %441, %442
  %444 = load i32, ptr %371, align 8, !tbaa !98
  %445 = icmp ne i32 %444, 0
  %446 = zext i1 %445 to i32
  %447 = sub i64 %437, %441
  %448 = getelementptr inbounds i8, ptr %440, i64 %443
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %445, ptr noundef nonnull @.str.342, ptr nonnull poison, i32 noundef %405, i32 noundef %446, i64 noundef %443, ptr noundef %440, i32 noundef %446, i64 noundef %447, ptr noundef %448)
  br label %449

449:                                              ; preds = %436, %415
  store ptr %391, ptr %62, align 8, !tbaa !138
  br label %1751

450:                                              ; preds = %413
  %451 = getelementptr inbounds i8, ptr %407, i64 2
  store ptr %451, ptr %62, align 8, !tbaa !138
  %452 = load i8, ptr %451, align 1, !tbaa !9
  %453 = icmp eq i8 %452, 93
  br i1 %453, label %454, label %574

454:                                              ; preds = %450
  %455 = getelementptr inbounds i8, ptr %407, i64 3
  store ptr %455, ptr %62, align 8, !tbaa !138
  %456 = load i8, ptr %391, align 1, !tbaa !9
  %457 = icmp eq i8 %456, 58
  br i1 %457, label %458, label %550

458:                                              ; preds = %454
  %459 = load i8, ptr %400, align 1, !tbaa !9
  %460 = icmp eq i8 %459, 94
  %461 = getelementptr inbounds i8, ptr %391, i64 2
  %462 = select i1 %460, ptr %461, ptr %400
  %463 = ptrtoint ptr %408 to i64
  %464 = ptrtoint ptr %462 to i64
  %465 = sub i64 %463, %464
  %466 = trunc i64 %465 to i32
  switch i32 %466, label %523 [
    i32 4, label %467
    i32 5, label %470
    i32 6, label %520
  ]

467:                                              ; preds = %458
  %468 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.343, i64 4)
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %1574, label %523

470:                                              ; preds = %458
  %471 = getelementptr inbounds i8, ptr %462, i64 4
  %472 = load i8, ptr %471, align 1, !tbaa !9
  %473 = sext i8 %472 to i32
  switch i32 %473, label %523 [
    i32 97, label %474
    i32 101, label %477
    i32 104, label %480
    i32 105, label %483
    i32 107, label %486
    i32 108, label %489
    i32 109, label %492
    i32 114, label %495
    i32 116, label %511
  ]

474:                                              ; preds = %470
  %475 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.344, i64 4)
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %1574, label %523

477:                                              ; preds = %470
  %478 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.345, i64 4)
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %1574, label %523

480:                                              ; preds = %470
  %481 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.346, i64 4)
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %1574, label %523

483:                                              ; preds = %470
  %484 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.347, i64 4)
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %1574, label %523

486:                                              ; preds = %470
  %487 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.348, i64 4)
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %1574, label %523

489:                                              ; preds = %470
  %490 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.349, i64 4)
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %1574, label %523

492:                                              ; preds = %470
  %493 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.350, i64 4)
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %1574, label %523

495:                                              ; preds = %470
  %496 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.351, i64 4)
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %503

498:                                              ; preds = %495
  %499 = load i32, ptr %0, align 8, !tbaa !109
  %500 = and i32 %499, 4
  %501 = icmp eq i32 %500, 0
  %502 = select i1 %501, i64 6, i64 18
  br label %1574

503:                                              ; preds = %495
  %504 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.352, i64 4)
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %523

506:                                              ; preds = %503
  %507 = load i32, ptr %0, align 8, !tbaa !109
  %508 = and i32 %507, 4
  %509 = icmp eq i32 %508, 0
  %510 = select i1 %509, i64 8, i64 18
  br label %1574

511:                                              ; preds = %470
  %512 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.353, i64 4)
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %1574, label %514

514:                                              ; preds = %511
  %515 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.354, i64 4)
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %1574, label %517

517:                                              ; preds = %514
  %518 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %462, ptr noundef nonnull dereferenceable(4) @.str.355, i64 4)
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %1574, label %523

520:                                              ; preds = %458
  %521 = call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %462, ptr noundef nonnull dereferenceable(6) @.str.356, i64 6)
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %1574, label %523

523:                                              ; preds = %520, %517, %503, %492, %489, %486, %483, %480, %477, %474, %470, %467, %458
  %524 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %525 = load ptr, ptr %524, align 8, !tbaa !108
  %526 = ptrtoint ptr %455 to i64
  %527 = ptrtoint ptr %525 to i64
  %528 = sub i64 %526, %527
  %529 = load ptr, ptr %60, align 8, !tbaa !145
  %530 = icmp eq ptr %529, %70
  br i1 %530, label %538, label %531

531:                                              ; preds = %523
  %532 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %533 = load ptr, ptr %532, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %533, i32 noundef 11) #21
  %534 = load ptr, ptr %524, align 8, !tbaa !108
  %535 = load ptr, ptr %41, align 8, !tbaa !140
  %536 = ptrtoint ptr %535 to i64
  %537 = ptrtoint ptr %534 to i64
  br label %538

538:                                              ; preds = %531, %523
  %539 = phi i64 [ %537, %531 ], [ %527, %523 ]
  %540 = phi i64 [ %536, %531 ], [ %401, %523 ]
  %541 = phi ptr [ %534, %531 ], [ %525, %523 ]
  %542 = load i32, ptr %371, align 8, !tbaa !98
  %543 = icmp ne i32 %542, 0
  %544 = zext i1 %543 to i32
  %545 = xor i64 %399, -1
  %546 = add i64 %463, %545
  %547 = add i64 %539, %528
  %548 = sub i64 %540, %547
  %549 = getelementptr inbounds i8, ptr %541, i64 %528
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %543, ptr noundef nonnull @.str.357, ptr nonnull poison, i32 noundef %544, i64 noundef %546, ptr noundef nonnull %400, i32 noundef %544, i64 noundef %528, ptr noundef %541, i32 noundef %544, i64 noundef %548, ptr noundef %549)
  br label %1574

550:                                              ; preds = %454
  %551 = load ptr, ptr %60, align 8, !tbaa !145
  %552 = icmp eq ptr %551, %70
  br i1 %552, label %1751, label %553

553:                                              ; preds = %550, %556
  %554 = phi ptr [ %557, %556 ], [ %455, %550 ]
  %555 = load i8, ptr %554, align 1, !tbaa !9
  switch i8 %555, label %556 [
    i8 0, label %558
    i8 93, label %558
  ]

556:                                              ; preds = %553
  %557 = getelementptr inbounds i8, ptr %554, i64 1
  store ptr %557, ptr %62, align 8, !tbaa !138
  br label %553, !llvm.loop !367

558:                                              ; preds = %553, %553
  %559 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %560 = load ptr, ptr %559, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %560, i32 noundef 11) #21
  %561 = load ptr, ptr %41, align 8, !tbaa !140
  %562 = ptrtoint ptr %561 to i64
  %563 = load ptr, ptr %62, align 8, !tbaa !138
  %564 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %565 = load ptr, ptr %564, align 8, !tbaa !108
  %566 = ptrtoint ptr %563 to i64
  %567 = ptrtoint ptr %565 to i64
  %568 = sub i64 %566, %567
  %569 = load i32, ptr %371, align 8, !tbaa !98
  %570 = icmp ne i32 %569, 0
  %571 = zext i1 %570 to i32
  %572 = sub i64 %562, %566
  %573 = getelementptr inbounds i8, ptr %565, i64 %568
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %570, ptr noundef nonnull @.str.358, ptr nonnull poison, i32 noundef %405, i32 noundef %405, i32 noundef %571, i64 noundef %568, ptr noundef %565, i32 noundef %571, i64 noundef %572, ptr noundef %573)
  br label %1751

574:                                              ; preds = %450
  br i1 %6, label %575, label %600

575:                                              ; preds = %574
  %576 = load ptr, ptr %60, align 8, !tbaa !145
  %577 = icmp eq ptr %576, %70
  br i1 %577, label %584, label %578

578:                                              ; preds = %575
  %579 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %580 = load ptr, ptr %579, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %580, i32 noundef 11) #21
  %581 = load ptr, ptr %62, align 8, !tbaa !138
  %582 = load ptr, ptr %41, align 8, !tbaa !140
  %583 = ptrtoint ptr %582 to i64
  br label %584

584:                                              ; preds = %578, %575
  %585 = phi i64 [ %401, %575 ], [ %583, %578 ]
  %586 = phi ptr [ %394, %575 ], [ %582, %578 ]
  %587 = phi ptr [ %451, %575 ], [ %581, %578 ]
  %588 = icmp ugt ptr %587, %586
  %589 = select i1 %588, ptr %586, ptr %587
  %590 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %591 = load ptr, ptr %590, align 8, !tbaa !108
  %592 = ptrtoint ptr %589 to i64
  %593 = ptrtoint ptr %591 to i64
  %594 = sub i64 %592, %593
  %595 = load i32, ptr %371, align 8, !tbaa !98
  %596 = icmp ne i32 %595, 0
  %597 = zext i1 %596 to i32
  %598 = sub i64 %585, %592
  %599 = getelementptr inbounds i8, ptr %591, i64 %594
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.359, i32 noundef %597, i64 noundef %594, ptr noundef %591, i32 noundef %597, i64 noundef %598, ptr noundef %599) #21
  br label %600

600:                                              ; preds = %584, %574
  store ptr %391, ptr %62, align 8, !tbaa !138
  br label %1751

601:                                              ; preds = %390
  %602 = load i32, ptr %371, align 8, !tbaa !98
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %619, label %604

604:                                              ; preds = %601
  %605 = load i8, ptr %391, align 1, !tbaa !9
  %606 = icmp sgt i8 %605, -1
  br i1 %606, label %619, label %607

607:                                              ; preds = %604
  %608 = load ptr, ptr %41, align 8, !tbaa !140
  %609 = ptrtoint ptr %608 to i64
  %610 = ptrtoint ptr %391 to i64
  %611 = sub i64 %609, %610
  %612 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #21
  %613 = xor i1 %612, true
  %614 = zext i1 %613 to i32
  %615 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %391, i64 noundef %611, ptr noundef nonnull %15, i32 noundef %614) #21
  store i64 %615, ptr %14, align 8, !tbaa !71
  %616 = load i64, ptr %15, align 8, !tbaa !71
  %617 = load ptr, ptr %62, align 8, !tbaa !138
  %618 = getelementptr inbounds i8, ptr %617, i64 %616
  store ptr %618, ptr %62, align 8, !tbaa !138
  br label %623

619:                                              ; preds = %601, %604
  %620 = getelementptr inbounds i8, ptr %391, i64 1
  store ptr %620, ptr %62, align 8, !tbaa !138
  %621 = load i8, ptr %391, align 1, !tbaa !9
  %622 = zext i8 %621 to i64
  store i64 %622, ptr %14, align 8, !tbaa !71
  br label %623

623:                                              ; preds = %619, %607
  %624 = phi ptr [ %620, %619 ], [ %618, %607 ]
  %625 = phi i64 [ %622, %619 ], [ %615, %607 ]
  br i1 %43, label %644, label %626

626:                                              ; preds = %623
  %627 = add i64 %625, -9
  %628 = icmp ult i64 %627, 5
  br i1 %628, label %1765, label %629

629:                                              ; preds = %626
  %630 = icmp ugt i64 %625, 13
  br i1 %630, label %631, label %644

631:                                              ; preds = %629
  %632 = icmp eq i64 %625, 32
  br i1 %632, label %1765, label %633

633:                                              ; preds = %631
  %634 = icmp ugt i64 %625, 32
  br i1 %634, label %635, label %644

635:                                              ; preds = %633
  %636 = icmp eq i64 %625, 133
  br i1 %636, label %1765, label %637

637:                                              ; preds = %635
  %638 = icmp ugt i64 %625, 133
  br i1 %638, label %639, label %644

639:                                              ; preds = %637
  %640 = icmp eq i64 %625, 8206
  br i1 %640, label %1765, label %641

641:                                              ; preds = %639
  %642 = icmp ugt i64 %625, 8206
  br i1 %642, label %643, label %644

643:                                              ; preds = %641
  switch i64 %625, label %644 [
    i64 8233, label %1765
    i64 8232, label %1765
    i64 8207, label %1765
  ]

644:                                              ; preds = %643, %641, %637, %633, %629, %623
  %645 = trunc i64 %625 to i32
  switch i32 %645, label %1529 [
    i32 119, label %1579
    i32 87, label %646
    i32 115, label %647
    i32 83, label %648
    i32 100, label %649
    i32 68, label %650
    i32 118, label %651
    i32 86, label %652
    i32 104, label %653
    i32 72, label %654
    i32 78, label %655
    i32 112, label %819
    i32 80, label %819
    i32 110, label %1184
    i32 114, label %1185
    i32 116, label %1186
    i32 102, label %1187
    i32 98, label %1188
    i32 101, label %1189
    i32 97, label %1190
    i32 111, label %1191
    i32 120, label %1286
    i32 99, label %1332
    i32 48, label %1340
    i32 49, label %1340
    i32 50, label %1340
    i32 51, label %1340
    i32 52, label %1340
    i32 53, label %1340
    i32 54, label %1340
    i32 55, label %1340
  ]

646:                                              ; preds = %644
  br label %1579

647:                                              ; preds = %644
  br label %1579

648:                                              ; preds = %644
  br label %1579

649:                                              ; preds = %644
  br label %1579

650:                                              ; preds = %644
  br label %1579

651:                                              ; preds = %644
  br label %1579

652:                                              ; preds = %644
  br label %1579

653:                                              ; preds = %644
  br label %1579

654:                                              ; preds = %644
  br label %1579

655:                                              ; preds = %644
  %656 = getelementptr inbounds i8, ptr %624, i64 -2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %23) #21
  %657 = call fastcc zeroext i1 @S_grok_bslash_N(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %14, ptr noundef nonnull %23, ptr noundef %1, i32 noundef %2)
  br i1 %657, label %814, label %658

658:                                              ; preds = %655
  %659 = load i32, ptr %1, align 4, !tbaa !150
  %660 = and i32 %659, 32
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %683, label %662

662:                                              ; preds = %658
  %663 = load ptr, ptr %41, align 8, !tbaa !140
  %664 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %665 = load ptr, ptr %664, align 8, !tbaa !108
  %666 = ptrtoint ptr %663 to i64
  %667 = ptrtoint ptr %665 to i64
  %668 = sub i64 %666, %667
  %669 = load ptr, ptr %60, align 8, !tbaa !145
  %670 = icmp eq ptr %669, %70
  br i1 %670, label %675, label %671

671:                                              ; preds = %662
  %672 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %673 = load ptr, ptr %672, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %673, i32 noundef 11) #21
  %674 = load ptr, ptr %664, align 8, !tbaa !108
  br label %675

675:                                              ; preds = %671, %662
  %676 = phi ptr [ %674, %671 ], [ %665, %662 ]
  %677 = icmp sgt i64 %668, 127
  %678 = select i1 %677, i64 117, i64 %668
  %679 = select i1 %677, ptr @.str.182, ptr @.str.178
  %680 = load i32, ptr %371, align 8, !tbaa !98
  %681 = icmp ne i32 %680, 0
  %682 = zext i1 %681 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.303, i32 noundef %682, i64 noundef %678, ptr noundef %676, ptr noundef nonnull %679) #21
  br label %683

683:                                              ; preds = %675, %658
  %684 = load i32, ptr %23, align 4, !tbaa !150
  %685 = icmp slt i32 %684, 0
  br i1 %685, label %686, label %708

686:                                              ; preds = %683
  %687 = load ptr, ptr %60, align 8, !tbaa !145
  %688 = icmp eq ptr %687, %70
  br i1 %688, label %692, label %689

689:                                              ; preds = %686
  %690 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %691 = load ptr, ptr %690, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %691, i32 noundef 11) #21
  br label %692

692:                                              ; preds = %686, %689
  %693 = load ptr, ptr %62, align 8, !tbaa !138
  %694 = load ptr, ptr %41, align 8, !tbaa !140
  %695 = icmp ugt ptr %693, %694
  %696 = select i1 %695, ptr %694, ptr %693
  %697 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %698 = load ptr, ptr %697, align 8, !tbaa !108
  %699 = ptrtoint ptr %696 to i64
  %700 = ptrtoint ptr %698 to i64
  %701 = sub i64 %699, %700
  %702 = load i32, ptr %371, align 8, !tbaa !98
  %703 = icmp ne i32 %702, 0
  %704 = zext i1 %703 to i32
  %705 = ptrtoint ptr %694 to i64
  %706 = sub i64 %705, %699
  %707 = getelementptr inbounds i8, ptr %698, i64 %701
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.310, i32 noundef %704, i64 noundef %701, ptr noundef %698, i32 noundef %704, i64 noundef %706, ptr noundef %707) #21
  br label %816

708:                                              ; preds = %683
  %709 = icmp eq i32 %684, 0
  br i1 %709, label %710, label %753

710:                                              ; preds = %708
  br i1 %6, label %711, label %736

711:                                              ; preds = %710
  %712 = load ptr, ptr %62, align 8, !tbaa !138
  %713 = getelementptr inbounds i8, ptr %712, i64 1
  store ptr %713, ptr %62, align 8, !tbaa !138
  %714 = load ptr, ptr %60, align 8, !tbaa !145
  %715 = icmp eq ptr %714, %70
  br i1 %715, label %720, label %716

716:                                              ; preds = %711
  %717 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %718 = load ptr, ptr %717, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %718, i32 noundef 11) #21
  %719 = load ptr, ptr %62, align 8, !tbaa !138
  br label %720

720:                                              ; preds = %711, %716
  %721 = phi ptr [ %713, %711 ], [ %719, %716 ]
  %722 = load ptr, ptr %41, align 8, !tbaa !140
  %723 = icmp ugt ptr %721, %722
  %724 = select i1 %723, ptr %722, ptr %721
  %725 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %726 = load ptr, ptr %725, align 8, !tbaa !108
  %727 = ptrtoint ptr %724 to i64
  %728 = ptrtoint ptr %726 to i64
  %729 = sub i64 %727, %728
  %730 = load i32, ptr %371, align 8, !tbaa !98
  %731 = icmp ne i32 %730, 0
  %732 = zext i1 %731 to i32
  %733 = ptrtoint ptr %722 to i64
  %734 = sub i64 %733, %727
  %735 = getelementptr inbounds i8, ptr %726, i64 %729
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.311, i32 noundef %732, i64 noundef %729, ptr noundef %726, i32 noundef %732, i64 noundef %734, ptr noundef %735) #21
  br label %816

736:                                              ; preds = %710
  %737 = load ptr, ptr %60, align 8, !tbaa !145
  %738 = icmp eq ptr %737, %70
  br i1 %738, label %816, label %739

739:                                              ; preds = %736
  %740 = load ptr, ptr %62, align 8, !tbaa !138
  %741 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %742 = load ptr, ptr %741, align 8, !tbaa !108
  %743 = ptrtoint ptr %740 to i64
  %744 = ptrtoint ptr %742 to i64
  %745 = sub i64 %743, %744
  %746 = load i32, ptr %371, align 8, !tbaa !98
  %747 = icmp ne i32 %746, 0
  %748 = zext i1 %747 to i32
  %749 = load ptr, ptr %41, align 8, !tbaa !140
  %750 = ptrtoint ptr %749 to i64
  %751 = sub i64 %750, %743
  %752 = getelementptr inbounds i8, ptr %742, i64 %745
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.312, i32 noundef %748, i64 noundef %745, ptr noundef %742, i32 noundef %748, i64 noundef %751, ptr noundef %752) #21
  br label %816

753:                                              ; preds = %708
  %754 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 37
  %755 = load i32, ptr %754, align 4, !tbaa !137
  %756 = icmp eq i32 %755, 0
  br i1 %756, label %757, label %816

757:                                              ; preds = %753
  %758 = and i1 %161, %366
  br i1 %758, label %759, label %763

759:                                              ; preds = %757
  %760 = load ptr, ptr %62, align 8, !tbaa !138
  %761 = load i8, ptr %760, align 1, !tbaa !9
  %762 = icmp eq i8 %761, 45
  br i1 %762, label %763, label %806

763:                                              ; preds = %759, %757
  br i1 %6, label %764, label %789

764:                                              ; preds = %763
  %765 = load ptr, ptr %62, align 8, !tbaa !138
  %766 = getelementptr inbounds i8, ptr %765, i64 -1
  store ptr %766, ptr %62, align 8, !tbaa !138
  %767 = load ptr, ptr %60, align 8, !tbaa !145
  %768 = icmp eq ptr %767, %70
  br i1 %768, label %773, label %769

769:                                              ; preds = %764
  %770 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %771 = load ptr, ptr %770, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %771, i32 noundef 11) #21
  %772 = load ptr, ptr %62, align 8, !tbaa !138
  br label %773

773:                                              ; preds = %764, %769
  %774 = phi ptr [ %766, %764 ], [ %772, %769 ]
  %775 = load ptr, ptr %41, align 8, !tbaa !140
  %776 = icmp ugt ptr %774, %775
  %777 = select i1 %776, ptr %775, ptr %774
  %778 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %779 = load ptr, ptr %778, align 8, !tbaa !108
  %780 = ptrtoint ptr %777 to i64
  %781 = ptrtoint ptr %779 to i64
  %782 = sub i64 %780, %781
  %783 = load i32, ptr %371, align 8, !tbaa !98
  %784 = icmp ne i32 %783, 0
  %785 = zext i1 %784 to i32
  %786 = ptrtoint ptr %775 to i64
  %787 = sub i64 %786, %780
  %788 = getelementptr inbounds i8, ptr %779, i64 %782
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.313, i32 noundef %785, i64 noundef %782, ptr noundef %779, i32 noundef %785, i64 noundef %787, ptr noundef %788) #21
  br label %814

789:                                              ; preds = %763
  %790 = load ptr, ptr %60, align 8, !tbaa !145
  %791 = icmp eq ptr %790, %70
  br i1 %791, label %814, label %792

792:                                              ; preds = %789
  %793 = load ptr, ptr %62, align 8, !tbaa !138
  %794 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %795 = load ptr, ptr %794, align 8, !tbaa !108
  %796 = ptrtoint ptr %793 to i64
  %797 = ptrtoint ptr %795 to i64
  %798 = sub i64 %796, %797
  %799 = load i32, ptr %371, align 8, !tbaa !98
  %800 = icmp ne i32 %799, 0
  %801 = zext i1 %800 to i32
  %802 = load ptr, ptr %41, align 8, !tbaa !140
  %803 = ptrtoint ptr %802 to i64
  %804 = sub i64 %803, %796
  %805 = getelementptr inbounds i8, ptr %795, i64 %798
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.314, i32 noundef %801, i64 noundef %798, ptr noundef %795, i32 noundef %801, i64 noundef %804, ptr noundef %805) #21
  br label %814

806:                                              ; preds = %759
  %807 = ptrtoint ptr %760 to i64
  %808 = ptrtoint ptr %656 to i64
  %809 = sub i64 %807, %808
  %810 = call ptr @Perl_newSVpvn(ptr noundef nonnull %656, i64 noundef %809) #21
  %811 = load i32, ptr %23, align 4, !tbaa !150
  %812 = sext i32 %811 to i64
  %813 = call fastcc ptr @S_add_multi_match(ptr noundef %360, ptr noundef %810, i64 noundef %812)
  br label %816

814:                                              ; preds = %789, %792, %773, %655
  %815 = phi i8 [ 1, %655 ], [ %355, %773 ], [ %355, %792 ], [ %355, %789 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #21
  br label %1751

816:                                              ; preds = %692, %753, %806, %720, %739, %736
  %817 = phi ptr [ %360, %692 ], [ %360, %720 ], [ %360, %736 ], [ %360, %739 ], [ %360, %753 ], [ %813, %806 ]
  %818 = add i64 %369, -1
  store i64 %353, ptr %14, align 8, !tbaa !71
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #21
  br label %283

819:                                              ; preds = %644, %644
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %24) #21
  store i8 6, ptr %24, align 1, !tbaa !9
  %820 = load ptr, ptr %41, align 8, !tbaa !140
  %821 = icmp ult ptr %624, %820
  br i1 %821, label %849, label %822

822:                                              ; preds = %819
  %823 = load ptr, ptr %60, align 8, !tbaa !145
  %824 = icmp eq ptr %823, %70
  br i1 %824, label %832, label %825

825:                                              ; preds = %822
  %826 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %827 = load ptr, ptr %826, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %827, i32 noundef 11) #21
  %828 = load ptr, ptr %62, align 8, !tbaa !138
  %829 = load i64, ptr %14, align 8, !tbaa !71
  %830 = load ptr, ptr %41, align 8, !tbaa !140
  %831 = trunc i64 %829 to i32
  br label %832

832:                                              ; preds = %822, %825
  %833 = phi i32 [ %645, %822 ], [ %831, %825 ]
  %834 = phi ptr [ %820, %822 ], [ %830, %825 ]
  %835 = phi ptr [ %624, %822 ], [ %828, %825 ]
  %836 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %837 = load ptr, ptr %836, align 8, !tbaa !108
  %838 = ptrtoint ptr %835 to i64
  %839 = ptrtoint ptr %837 to i64
  %840 = sub i64 %838, %839
  %841 = load i32, ptr %371, align 8, !tbaa !98
  %842 = icmp ne i32 %841, 0
  %843 = zext i1 %842 to i32
  %844 = and i32 %833, 255
  %845 = ptrtoint ptr %834 to i64
  %846 = sub i64 %845, %838
  %847 = getelementptr inbounds i8, ptr %837, i64 %840
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %842, ptr noundef nonnull @.str.293, ptr nonnull poison, i32 noundef %844, i32 noundef %843, i64 noundef %840, ptr noundef %837, i32 noundef %843, i64 noundef %846, ptr noundef %847)
  %848 = load ptr, ptr %62, align 8, !tbaa !138
  br label %849

849:                                              ; preds = %832, %819
  %850 = phi ptr [ %848, %832 ], [ %624, %819 ]
  %851 = load i8, ptr %850, align 1, !tbaa !9
  %852 = icmp eq i8 %851, 123
  br i1 %852, label %853, label %941

853:                                              ; preds = %849
  %854 = load i64, ptr %14, align 8, !tbaa !71
  %855 = trunc i64 %854 to i32
  %856 = getelementptr inbounds i8, ptr %850, i64 1
  store ptr %856, ptr %62, align 8, !tbaa !138
  %857 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %850, i32 noundef 125) #24
  %858 = icmp eq ptr %857, null
  br i1 %858, label %859, label %882

859:                                              ; preds = %853
  %860 = load ptr, ptr %60, align 8, !tbaa !145
  %861 = icmp eq ptr %860, %70
  br i1 %861, label %866, label %862

862:                                              ; preds = %859
  %863 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %864 = load ptr, ptr %863, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %864, i32 noundef 11) #21
  %865 = load ptr, ptr %62, align 8, !tbaa !138
  br label %866

866:                                              ; preds = %859, %862
  %867 = phi ptr [ %856, %859 ], [ %865, %862 ]
  %868 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %869 = load ptr, ptr %868, align 8, !tbaa !108
  %870 = ptrtoint ptr %867 to i64
  %871 = ptrtoint ptr %869 to i64
  %872 = sub i64 %870, %871
  %873 = load i32, ptr %371, align 8, !tbaa !98
  %874 = icmp ne i32 %873, 0
  %875 = zext i1 %874 to i32
  %876 = and i32 %855, 255
  %877 = load ptr, ptr %41, align 8, !tbaa !140
  %878 = ptrtoint ptr %877 to i64
  %879 = sub i64 %878, %870
  %880 = getelementptr inbounds i8, ptr %869, i64 %872
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %874, ptr noundef nonnull @.str.292, ptr nonnull poison, i32 noundef %876, i32 noundef %875, i64 noundef %872, ptr noundef %869, i32 noundef %875, i64 noundef %879, ptr noundef %880)
  %881 = load ptr, ptr %62, align 8, !tbaa !138
  br label %882

882:                                              ; preds = %866, %853
  %883 = phi ptr [ %881, %866 ], [ %856, %853 ]
  %884 = load i8, ptr %883, align 1, !tbaa !9
  %885 = zext i8 %884 to i64
  %886 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %885
  %887 = load i32, ptr %886, align 4, !tbaa !150
  %888 = and i32 %887, 17408
  %889 = icmp eq i32 %888, 17408
  br i1 %889, label %890, label %899

890:                                              ; preds = %882, %890
  %891 = phi ptr [ %892, %890 ], [ %883, %882 ]
  %892 = getelementptr inbounds i8, ptr %891, i64 1
  store ptr %892, ptr %62, align 8, !tbaa !138
  %893 = load i8, ptr %892, align 1, !tbaa !9
  %894 = zext i8 %893 to i64
  %895 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !150
  %897 = and i32 %896, 17408
  %898 = icmp eq i32 %897, 17408
  br i1 %898, label %890, label %899, !llvm.loop !368

899:                                              ; preds = %890, %882
  %900 = phi ptr [ %883, %882 ], [ %892, %890 ]
  %901 = icmp eq ptr %857, %900
  br i1 %901, label %902, label %925

902:                                              ; preds = %899
  %903 = load ptr, ptr %60, align 8, !tbaa !145
  %904 = icmp eq ptr %903, %70
  br i1 %904, label %909, label %905

905:                                              ; preds = %902
  %906 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %907 = load ptr, ptr %906, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %907, i32 noundef 11) #21
  %908 = load ptr, ptr %62, align 8, !tbaa !138
  br label %909

909:                                              ; preds = %902, %905
  %910 = phi ptr [ %857, %902 ], [ %908, %905 ]
  %911 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %912 = load ptr, ptr %911, align 8, !tbaa !108
  %913 = ptrtoint ptr %910 to i64
  %914 = ptrtoint ptr %912 to i64
  %915 = sub i64 %913, %914
  %916 = load i32, ptr %371, align 8, !tbaa !98
  %917 = icmp ne i32 %916, 0
  %918 = zext i1 %917 to i32
  %919 = and i32 %855, 255
  %920 = load ptr, ptr %41, align 8, !tbaa !140
  %921 = ptrtoint ptr %920 to i64
  %922 = sub i64 %921, %913
  %923 = getelementptr inbounds i8, ptr %912, i64 %915
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %917, ptr noundef nonnull @.str.293, ptr nonnull poison, i32 noundef %919, i32 noundef %918, i64 noundef %915, ptr noundef %912, i32 noundef %918, i64 noundef %922, ptr noundef %923)
  %924 = load ptr, ptr %62, align 8, !tbaa !138
  br label %925

925:                                              ; preds = %909, %899
  %926 = phi ptr [ %924, %909 ], [ %900, %899 ]
  %927 = ptrtoint ptr %857 to i64
  %928 = ptrtoint ptr %926 to i64
  %929 = sub i64 %927, %928
  %930 = getelementptr i8, ptr %926, i64 -1
  br label %931

931:                                              ; preds = %931, %925
  %932 = phi i64 [ %929, %925 ], [ %940, %931 ]
  %933 = getelementptr i8, ptr %930, i64 %932
  %934 = load i8, ptr %933, align 1, !tbaa !9
  %935 = zext i8 %934 to i64
  %936 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %935
  %937 = load i32, ptr %936, align 4, !tbaa !150
  %938 = and i32 %937, 17408
  %939 = icmp eq i32 %938, 17408
  %940 = add i64 %932, -1
  br i1 %939, label %931, label %941, !llvm.loop !369

941:                                              ; preds = %931, %849
  %942 = phi ptr [ %850, %849 ], [ %926, %931 ]
  %943 = phi ptr [ %850, %849 ], [ %857, %931 ]
  %944 = phi i64 [ 1, %849 ], [ %932, %931 ]
  %945 = load ptr, ptr %60, align 8, !tbaa !145
  %946 = icmp eq ptr %945, %70
  br i1 %946, label %1178, label %947

947:                                              ; preds = %941
  %948 = load i8, ptr %942, align 1, !tbaa !9
  %949 = icmp eq i8 %948, 94
  br i1 %949, label %950, label %972

950:                                              ; preds = %947
  %951 = getelementptr inbounds i8, ptr %942, i64 1
  store ptr %951, ptr %62, align 8, !tbaa !138
  %952 = load i64, ptr %14, align 8, !tbaa !71
  %953 = xor i64 %952, 32
  store i64 %953, ptr %14, align 8, !tbaa !71
  %954 = add i64 %944, -1
  %955 = load i8, ptr %951, align 1, !tbaa !9
  %956 = zext i8 %955 to i64
  %957 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %956
  %958 = load i32, ptr %957, align 4, !tbaa !150
  %959 = and i32 %958, 17408
  %960 = icmp eq i32 %959, 17408
  br i1 %960, label %961, label %972

961:                                              ; preds = %950, %961
  %962 = phi i64 [ %965, %961 ], [ %954, %950 ]
  %963 = phi ptr [ %964, %961 ], [ %951, %950 ]
  %964 = getelementptr inbounds i8, ptr %963, i64 1
  store ptr %964, ptr %62, align 8, !tbaa !138
  %965 = add i64 %962, -1
  %966 = load i8, ptr %964, align 1, !tbaa !9
  %967 = zext i8 %966 to i64
  %968 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %967
  %969 = load i32, ptr %968, align 4, !tbaa !150
  %970 = and i32 %969, 17408
  %971 = icmp eq i32 %970, 17408
  br i1 %971, label %961, label %972, !llvm.loop !370

972:                                              ; preds = %961, %950, %947
  %973 = phi ptr [ %942, %947 ], [ %951, %950 ], [ %964, %961 ]
  %974 = phi i64 [ %944, %947 ], [ %954, %950 ], [ %965, %961 ]
  %975 = load i32, ptr %0, align 8, !tbaa !109
  %976 = and i32 %975, 4
  %977 = icmp eq i32 %976, 0
  %978 = select i1 %977, ptr @.str.178, ptr @.str.316
  %979 = trunc i64 %974 to i32
  %980 = select i1 %977, ptr @.str.178, ptr @.str.317
  %981 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.315, ptr noundef nonnull %978, i32 noundef %979, ptr noundef nonnull %973, ptr noundef nonnull %980) #21
  %982 = call ptr @Perl_savepv(ptr noundef %981) #21
  %983 = icmp eq ptr %359, null
  br i1 %983, label %991, label %984

984:                                              ; preds = %972
  %985 = getelementptr inbounds %struct.sv, ptr %359, i64 0, i32 1
  %986 = load i32, ptr %985, align 8, !tbaa !22
  %987 = icmp ugt i32 %986, 1
  br i1 %987, label %988, label %990

988:                                              ; preds = %984
  %989 = add i32 %986, -1
  store i32 %989, ptr %985, align 8, !tbaa !22
  br label %991

990:                                              ; preds = %984
  call void @Perl_sv_free2(ptr noundef nonnull %359, i32 noundef %986) #21
  br label %991

991:                                              ; preds = %990, %988, %972
  %992 = call ptr @Perl__core_swash_init(ptr noundef nonnull @.str.202, ptr noundef %982, ptr noundef nonnull @PL_sv_undef, i32 noundef 1, i32 noundef 0, ptr noundef null, ptr noundef nonnull %24) #21
  %993 = icmp eq ptr %992, null
  br i1 %993, label %994, label %1000

994:                                              ; preds = %991
  %995 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %996 = icmp eq ptr %995, @PL_compiling
  %997 = getelementptr inbounds %struct.cop, ptr %995, i64 0, i32 8
  %998 = select i1 %996, ptr @PL_curstash, ptr %997
  %999 = load ptr, ptr %998, align 8, !tbaa !5
  br label %1015

1000:                                             ; preds = %991
  %1001 = call ptr @Perl__get_swash_invlist(ptr noundef nonnull %992) #21
  %1002 = icmp eq ptr %1001, null
  br i1 %1002, label %1003, label %1084

1003:                                             ; preds = %1000
  %1004 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %1005 = icmp eq ptr %1004, @PL_compiling
  %1006 = getelementptr inbounds %struct.cop, ptr %1004, i64 0, i32 8
  %1007 = select i1 %1005, ptr @PL_curstash, ptr %1006
  %1008 = load ptr, ptr %1007, align 8, !tbaa !5
  %1009 = getelementptr inbounds %struct.sv, ptr %992, i64 0, i32 1
  %1010 = load i32, ptr %1009, align 8, !tbaa !22
  %1011 = icmp ugt i32 %1010, 1
  br i1 %1011, label %1012, label %1014

1012:                                             ; preds = %1003
  %1013 = add i32 %1010, -1
  store i32 %1013, ptr %1009, align 8, !tbaa !22
  br label %1015

1014:                                             ; preds = %1003
  call void @Perl_sv_free2(ptr noundef nonnull %992, i32 noundef %1010) #21
  br label %1015

1015:                                             ; preds = %1014, %1012, %994
  %1016 = phi ptr [ %999, %994 ], [ %1008, %1012 ], [ %1008, %1014 ]
  br i1 %43, label %1042, label %1017

1017:                                             ; preds = %1015
  %1018 = getelementptr inbounds i8, ptr %943, i64 1
  store ptr %1018, ptr %62, align 8, !tbaa !138
  %1019 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1020 = load ptr, ptr %1019, align 8, !tbaa !108
  %1021 = ptrtoint ptr %1018 to i64
  %1022 = ptrtoint ptr %1020 to i64
  %1023 = sub i64 %1021, %1022
  %1024 = load ptr, ptr %60, align 8, !tbaa !145
  %1025 = icmp eq ptr %1024, %70
  br i1 %1025, label %1031, label %1026

1026:                                             ; preds = %1017
  %1027 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1028 = load ptr, ptr %1027, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1028, i32 noundef 11) #21
  %1029 = load ptr, ptr %1019, align 8, !tbaa !108
  %1030 = ptrtoint ptr %1029 to i64
  br label %1031

1031:                                             ; preds = %1026, %1017
  %1032 = phi i64 [ %1030, %1026 ], [ %1022, %1017 ]
  %1033 = phi ptr [ %1029, %1026 ], [ %1020, %1017 ]
  %1034 = load i32, ptr %371, align 8, !tbaa !98
  %1035 = icmp ne i32 %1034, 0
  %1036 = zext i1 %1035 to i32
  %1037 = load ptr, ptr %41, align 8, !tbaa !140
  %1038 = ptrtoint ptr %1037 to i64
  %1039 = add i64 %1023, %1032
  %1040 = sub i64 %1038, %1039
  %1041 = getelementptr inbounds i8, ptr %1033, i64 %1023
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1035, ptr noundef nonnull @.str.318, ptr nonnull poison, i32 noundef %1036, i64 noundef %974, ptr noundef %982, i32 noundef %1036, i64 noundef %1023, ptr noundef %1033, i32 noundef %1036, i64 noundef %1040, ptr noundef %1041)
  br label %1042

1042:                                             ; preds = %1031, %1015
  %1043 = icmp eq ptr %1016, null
  br i1 %1043, label %1073, label %1044

1044:                                             ; preds = %1042
  %1045 = call ptr @Perl_instr(ptr noundef %982, ptr noundef nonnull @.str.319) #21
  %1046 = icmp eq ptr %1045, null
  br i1 %1046, label %1047, label %1073

1047:                                             ; preds = %1044
  %1048 = getelementptr inbounds %struct.hv, ptr %1016, i64 0, i32 2
  %1049 = load i32, ptr %1048, align 4, !tbaa !94
  %1050 = and i32 %1049, 33554432
  %1051 = icmp ne i32 %1050, 0
  call void @llvm.assume(i1 %1051)
  %1052 = getelementptr inbounds %struct.hv, ptr %1016, i64 0, i32 3
  %1053 = load ptr, ptr %1052, align 8, !tbaa !9
  %1054 = load ptr, ptr %1016, align 8, !tbaa !295
  %1055 = getelementptr inbounds %struct.xpvhv, ptr %1054, i64 0, i32 3
  %1056 = load i64, ptr %1055, align 8, !tbaa !371
  %1057 = add i64 %1056, 1
  %1058 = getelementptr inbounds ptr, ptr %1053, i64 %1057
  %1059 = load ptr, ptr %1058, align 8, !tbaa !9, !nonnull !60, !noundef !60
  %1060 = getelementptr inbounds %struct.xpvhv_aux, ptr %1058, i64 0, i32 4
  %1061 = load i32, ptr %1060, align 4, !tbaa !372
  %1062 = icmp eq i32 %1061, 0
  %1063 = select i1 %1062, ptr %1058, ptr %1059
  %1064 = load ptr, ptr %1063, align 8, !tbaa !9
  %1065 = getelementptr inbounds %struct.hek, ptr %1064, i64 0, i32 2
  %1066 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1065, ptr noundef nonnull dereferenceable(5) @.str.320) #24
  %1067 = icmp eq i32 %1066, 0
  br i1 %1067, label %1073, label %1068

1068:                                             ; preds = %1047
  %1069 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.321, ptr noundef nonnull %1065, ptr noundef %982) #21
  %1070 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1069) #24
  call void @Perl_safesysfree(ptr noundef %982) #21
  %1071 = trunc i64 %1070 to i32
  %1072 = call ptr @Perl_savepvn(ptr noundef %1069, i32 noundef %1071) #21
  br label %1073

1073:                                             ; preds = %1047, %1068, %1044, %1042
  %1074 = phi ptr [ %982, %1044 ], [ %982, %1042 ], [ %1072, %1068 ], [ %982, %1047 ]
  %1075 = phi i64 [ %974, %1044 ], [ %974, %1042 ], [ %1070, %1068 ], [ %974, %1047 ]
  %1076 = load i64, ptr %14, align 8, !tbaa !71
  %1077 = icmp eq i64 %1076, 112
  %1078 = select i1 %1077, i32 43, i32 33
  %1079 = load i32, ptr %371, align 8, !tbaa !98
  %1080 = icmp ne i32 %1079, 0
  %1081 = zext i1 %1080 to i32
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef nonnull %111, ptr noundef nonnull @.str.322, i32 noundef %1078, i32 noundef %1081, i64 noundef %1075, ptr noundef %1074) #21
  %1082 = load i8, ptr %61, align 2, !tbaa !169
  %1083 = or i8 %1082, 32
  store i8 %1083, ptr %61, align 2, !tbaa !169
  br label %1173

1084:                                             ; preds = %1000
  %1085 = load i8, ptr %24, align 1, !tbaa !9
  %1086 = and i8 %1085, 1
  %1087 = icmp eq i8 %1086, 0
  br i1 %1087, label %1088, label %1159

1088:                                             ; preds = %1084
  %1089 = load ptr, ptr %1001, align 8, !tbaa !63
  %1090 = getelementptr inbounds %struct.xpv, ptr %1089, i64 0, i32 2
  %1091 = load i64, ptr %1090, align 8, !tbaa !72
  %1092 = icmp eq i64 %1091, 0
  br i1 %1092, label %1159, label %1093

1093:                                             ; preds = %1088
  %1094 = lshr i64 %1091, 3
  %1095 = getelementptr %struct.xpvinvlist, ptr %1089, i64 0, i32 6
  %1096 = load i8, ptr %1095, align 1, !tbaa !57, !range !59, !noundef !60
  %1097 = zext i8 %1096 to i64
  %1098 = xor i64 %1097, -1
  %1099 = add nsw i64 %1094, %1098
  %1100 = icmp eq i64 %1094, %1097
  br i1 %1100, label %1159, label %1101

1101:                                             ; preds = %1093
  %1102 = getelementptr i8, ptr %1001, i64 16
  %1103 = load ptr, ptr %1102, align 8, !tbaa !9
  %1104 = getelementptr inbounds i64, ptr %1103, i64 %1097
  %1105 = getelementptr i8, ptr %1089, i64 32
  %1106 = load i64, ptr %1105, align 8, !tbaa !71
  %1107 = getelementptr inbounds i64, ptr %1104, i64 %1106
  %1108 = load i64, ptr %1107, align 8, !tbaa !71
  %1109 = icmp ugt i64 %1108, 1114112
  br i1 %1109, label %1119, label %1110

1110:                                             ; preds = %1101
  %1111 = getelementptr inbounds i64, ptr %1104, i64 %1099
  %1112 = load i64, ptr %1111, align 8, !tbaa !71
  %1113 = icmp ugt i64 %1112, 1114112
  br i1 %1113, label %1114, label %1146

1114:                                             ; preds = %1110
  %1115 = add nsw i64 %1106, 1
  %1116 = getelementptr inbounds i64, ptr %1104, i64 %1115
  %1117 = load i64, ptr %1116, align 8, !tbaa !71
  %1118 = icmp ugt i64 %1117, 1114112
  br i1 %1118, label %1146, label %1127

1119:                                             ; preds = %1101
  %1120 = load i64, ptr %1104, align 8, !tbaa !71
  %1121 = icmp ugt i64 %1120, 1114112
  br i1 %1121, label %1159, label %1122

1122:                                             ; preds = %1119
  %1123 = add nsw i64 %1106, -1
  %1124 = getelementptr inbounds i64, ptr %1104, i64 %1123
  %1125 = load i64, ptr %1124, align 8, !tbaa !71
  %1126 = icmp ugt i64 %1125, 1114112
  br i1 %1126, label %1127, label %1143

1127:                                             ; preds = %1122, %1114
  %1128 = phi i64 [ %1106, %1122 ], [ %1099, %1114 ]
  %1129 = phi i64 [ 0, %1122 ], [ %1115, %1114 ]
  %1130 = icmp slt i64 %1129, %1128
  br i1 %1130, label %1131, label %1143

1131:                                             ; preds = %1127, %1131
  %1132 = phi i64 [ %1141, %1131 ], [ %1129, %1127 ]
  %1133 = phi i64 [ %1140, %1131 ], [ %1128, %1127 ]
  %1134 = add nsw i64 %1133, %1132
  %1135 = sdiv i64 %1134, 2
  %1136 = getelementptr inbounds i64, ptr %1104, i64 %1135
  %1137 = load i64, ptr %1136, align 8, !tbaa !71
  %1138 = icmp ugt i64 %1137, 1114112
  %1139 = add nsw i64 %1135, 1
  %1140 = select i1 %1138, i64 %1135, i64 %1133
  %1141 = select i1 %1138, i64 %1132, i64 %1139
  %1142 = icmp slt i64 %1141, %1140
  br i1 %1142, label %1131, label %1143, !llvm.loop !300

1143:                                             ; preds = %1131, %1127, %1122
  %1144 = phi i64 [ %1106, %1122 ], [ %1128, %1127 ], [ %1140, %1131 ]
  %1145 = add nsw i64 %1144, -1
  store i64 %1145, ptr %1105, align 8, !tbaa !71
  br label %1146

1146:                                             ; preds = %1110, %1114, %1143
  %1147 = phi i64 [ %1145, %1143 ], [ %1099, %1110 ], [ %1106, %1114 ]
  %1148 = and i64 %1147, -9223372036854775807
  %1149 = icmp eq i64 %1148, 0
  br i1 %1149, label %1150, label %1159

1150:                                             ; preds = %1146
  %1151 = sub nsw i64 %1094, %1097
  %1152 = icmp eq i64 %1151, 1
  br i1 %1152, label %1153, label %1158

1153:                                             ; preds = %1150
  %1154 = load ptr, ptr %1102, align 8, !tbaa !9
  %1155 = getelementptr inbounds i64, ptr %1154, i64 %1097
  %1156 = load i64, ptr %1155, align 8, !tbaa !71
  %1157 = icmp eq i64 %1156, 0
  br i1 %1157, label %1159, label %1158

1158:                                             ; preds = %1153, %1150
  br label %1159

1159:                                             ; preds = %1088, %1119, %1093, %1084, %1146, %1153, %1158
  %1160 = phi i8 [ %354, %1153 ], [ 1, %1158 ], [ %354, %1146 ], [ %354, %1084 ], [ %354, %1093 ], [ %354, %1119 ], [ %354, %1088 ]
  %1161 = phi i8 [ %358, %1153 ], [ %358, %1158 ], [ %358, %1146 ], [ 1, %1084 ], [ %358, %1093 ], [ %358, %1119 ], [ %358, %1088 ]
  %1162 = load i64, ptr %14, align 8, !tbaa !71
  %1163 = icmp eq i64 %1162, 80
  %1164 = load ptr, ptr %16, align 8, !tbaa !5
  br i1 %1163, label %1165, label %1172

1165:                                             ; preds = %1159
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1164, ptr noundef nonnull %1001, i1 noundef zeroext true, ptr noundef nonnull %16)
  %1166 = getelementptr inbounds %struct.sv, ptr %992, i64 0, i32 1
  %1167 = load i32, ptr %1166, align 8, !tbaa !22
  %1168 = icmp ugt i32 %1167, 1
  br i1 %1168, label %1169, label %1171

1169:                                             ; preds = %1165
  %1170 = add i32 %1167, -1
  store i32 %1170, ptr %1166, align 8, !tbaa !22
  br label %1173

1171:                                             ; preds = %1165
  call void @Perl_sv_free2(ptr noundef nonnull %992, i32 noundef %1167) #21
  br label %1173

1172:                                             ; preds = %1159
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1164, ptr noundef nonnull %1001, i1 noundef zeroext false, ptr noundef nonnull %16)
  br label %1173

1173:                                             ; preds = %1171, %1169, %1172, %1073
  %1174 = phi ptr [ %982, %1172 ], [ %1074, %1073 ], [ %982, %1169 ], [ %982, %1171 ]
  %1175 = phi i8 [ %1160, %1172 ], [ %354, %1073 ], [ %1160, %1169 ], [ %1160, %1171 ]
  %1176 = phi i8 [ %1161, %1172 ], [ 1, %1073 ], [ %1161, %1169 ], [ %1161, %1171 ]
  %1177 = phi ptr [ %992, %1172 ], [ null, %1073 ], [ null, %1169 ], [ null, %1171 ]
  call void @Perl_safesysfree(ptr noundef %1174) #21
  br label %1178

1178:                                             ; preds = %1173, %941
  %1179 = phi i8 [ %354, %941 ], [ %1175, %1173 ]
  %1180 = phi i8 [ %358, %941 ], [ %1176, %1173 ]
  %1181 = phi ptr [ %359, %941 ], [ %1177, %1173 ]
  %1182 = getelementptr inbounds i8, ptr %943, i64 1
  store ptr %1182, ptr %62, align 8, !tbaa !138
  %1183 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %1183, align 8, !tbaa !99
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %24) #21
  br label %1579

1184:                                             ; preds = %644
  store i64 10, ptr %14, align 8, !tbaa !71
  br label %1751

1185:                                             ; preds = %644
  store i64 13, ptr %14, align 8, !tbaa !71
  br label %1751

1186:                                             ; preds = %644
  store i64 9, ptr %14, align 8, !tbaa !71
  br label %1751

1187:                                             ; preds = %644
  store i64 12, ptr %14, align 8, !tbaa !71
  br label %1751

1188:                                             ; preds = %644
  store i64 8, ptr %14, align 8, !tbaa !71
  br label %1751

1189:                                             ; preds = %644
  store i64 27, ptr %14, align 8, !tbaa !71
  br label %1751

1190:                                             ; preds = %644
  store i64 7, ptr %14, align 8, !tbaa !71
  br label %1751

1191:                                             ; preds = %644
  %1192 = load ptr, ptr %60, align 8, !tbaa !145
  %1193 = icmp eq ptr %1192, %70
  %1194 = load i32, ptr %371, align 8, !tbaa !98
  %1195 = icmp eq i32 %1194, 0
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #21
  store i32 7, ptr %13, align 4, !tbaa !150
  store ptr %624, ptr %62, align 8, !tbaa !5
  %1196 = load i8, ptr %624, align 1, !tbaa !9
  %1197 = icmp eq i8 %1196, 123
  br i1 %1197, label %1198, label %1245

1198:                                             ; preds = %1191
  %1199 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %624, i32 noundef 125) #24
  %1200 = icmp eq ptr %1199, null
  %1201 = getelementptr inbounds i8, ptr %624, i64 1
  br i1 %1200, label %1202, label %1208

1202:                                             ; preds = %1198, %1202
  %1203 = phi ptr [ %1207, %1202 ], [ %1201, %1198 ]
  store ptr %1203, ptr %62, align 8, !tbaa !5
  %1204 = load i8, ptr %1203, align 1, !tbaa !9
  %1205 = and i8 %1204, -8
  %1206 = icmp eq i8 %1205, 48
  %1207 = getelementptr inbounds i8, ptr %1203, i64 1
  br i1 %1206, label %1202, label %1245, !llvm.loop !360

1208:                                             ; preds = %1198
  store ptr %1201, ptr %62, align 8, !tbaa !5
  %1209 = ptrtoint ptr %1199 to i64
  %1210 = ptrtoint ptr %1201 to i64
  %1211 = sub i64 %1209, %1210
  store i64 %1211, ptr %12, align 8, !tbaa !71
  %1212 = icmp eq ptr %1199, %1201
  br i1 %1212, label %1213, label %1215

1213:                                             ; preds = %1208
  %1214 = getelementptr inbounds i8, ptr %624, i64 2
  store ptr %1214, ptr %62, align 8, !tbaa !5
  br label %1245

1215:                                             ; preds = %1208
  br i1 %5, label %1216, label %1217

1216:                                             ; preds = %1215
  store i32 15, ptr %13, align 4, !tbaa !150
  br label %1217

1217:                                             ; preds = %1216, %1215
  %1218 = call i64 @Perl_grok_oct(ptr noundef nonnull %1201, ptr noundef nonnull %12, ptr noundef nonnull %13, ptr noundef null) #21
  store i64 %1218, ptr %14, align 8, !tbaa !71
  %1219 = load i64, ptr %12, align 8, !tbaa !71
  %1220 = load ptr, ptr %62, align 8, !tbaa !5
  %1221 = ptrtoint ptr %1220 to i64
  %1222 = sub i64 %1209, %1221
  %1223 = icmp eq i64 %1219, %1222
  br i1 %1223, label %1243, label %1224

1224:                                             ; preds = %1217
  br i1 %6, label %1225, label %1237

1225:                                             ; preds = %1224
  %1226 = getelementptr inbounds i8, ptr %1220, i64 %1219
  store ptr %1226, ptr %62, align 8, !tbaa !5
  br i1 %1195, label %1233, label %1227

1227:                                             ; preds = %1225
  %1228 = load i8, ptr %1226, align 1, !tbaa !9
  %1229 = zext i8 %1228 to i64
  %1230 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1229
  %1231 = load i8, ptr %1230, align 1, !tbaa !9
  %1232 = zext i8 %1231 to i64
  br label %1233

1233:                                             ; preds = %1227, %1225
  %1234 = phi i64 [ %1232, %1227 ], [ 1, %1225 ]
  %1235 = getelementptr inbounds i8, ptr %1226, i64 %1234
  store ptr %1235, ptr %62, align 8, !tbaa !5
  %1236 = load ptr, ptr %60, align 8, !tbaa !145
  br label %1245

1237:                                             ; preds = %1224
  br i1 %1193, label %1243, label %1238

1238:                                             ; preds = %1237
  %1239 = getelementptr inbounds i8, ptr %1220, i64 %1219
  %1240 = load i8, ptr %1239, align 1, !tbaa !9
  %1241 = sext i8 %1240 to i32
  %1242 = trunc i64 %1219 to i32
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 31, ptr noundef nonnull @.str.379, i32 noundef %1241, i32 noundef %1242, ptr noundef %1220) #21
  br label %1243

1243:                                             ; preds = %1217, %1237, %1238
  %1244 = getelementptr inbounds i8, ptr %1199, i64 1
  store ptr %1244, ptr %62, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #21
  br label %1270

1245:                                             ; preds = %1202, %1213, %1233, %1191
  %1246 = phi ptr [ %624, %1191 ], [ %1235, %1233 ], [ %1214, %1213 ], [ %1203, %1202 ]
  %1247 = phi ptr [ %1192, %1191 ], [ %1236, %1233 ], [ %1192, %1213 ], [ %1192, %1202 ]
  %1248 = phi ptr [ @.str.375, %1191 ], [ @.str.378, %1233 ], [ @.str.377, %1213 ], [ @.str.376, %1202 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #21
  %1249 = icmp eq ptr %1247, %70
  br i1 %1249, label %1254, label %1250

1250:                                             ; preds = %1245
  %1251 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1252 = load ptr, ptr %1251, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1252, i32 noundef 11) #21
  %1253 = load ptr, ptr %62, align 8, !tbaa !138
  br label %1254

1254:                                             ; preds = %1245, %1250
  %1255 = phi ptr [ %1246, %1245 ], [ %1253, %1250 ]
  %1256 = load ptr, ptr %41, align 8, !tbaa !140
  %1257 = icmp ugt ptr %1255, %1256
  %1258 = select i1 %1257, ptr %1256, ptr %1255
  %1259 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1260 = load ptr, ptr %1259, align 8, !tbaa !108
  %1261 = ptrtoint ptr %1258 to i64
  %1262 = ptrtoint ptr %1260 to i64
  %1263 = sub i64 %1261, %1262
  %1264 = load i32, ptr %371, align 8, !tbaa !98
  %1265 = icmp ne i32 %1264, 0
  %1266 = zext i1 %1265 to i32
  %1267 = ptrtoint ptr %1256 to i64
  %1268 = sub i64 %1267, %1261
  %1269 = getelementptr inbounds i8, ptr %1260, i64 %1263
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull %1248, i32 noundef %1266, i64 noundef %1263, ptr noundef %1260, i32 noundef %1266, i64 noundef %1268, ptr noundef %1269) #21
  br label %1270

1270:                                             ; preds = %1243, %1254
  %1271 = add i32 %367, 1
  %1272 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1273 = icmp eq ptr %1272, null
  br i1 %1273, label %1274, label %1283

1274:                                             ; preds = %1270
  %1275 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1276 = icmp eq ptr %1275, null
  br i1 %1276, label %1751, label %1277

1277:                                             ; preds = %1274
  %1278 = call ptr @Perl__get_encoding() #21
  %1279 = icmp ne ptr %1278, null
  %1280 = load i64, ptr %14, align 8
  %1281 = icmp ult i64 %1280, 256
  %1282 = select i1 %1279, i1 %1281, i1 false
  br i1 %1282, label %1448, label %1751

1283:                                             ; preds = %1270
  %1284 = load i64, ptr %14, align 8
  %1285 = icmp ult i64 %1284, 256
  br i1 %1285, label %1448, label %1751

1286:                                             ; preds = %644
  %1287 = getelementptr inbounds i8, ptr %624, i64 -1
  store ptr %1287, ptr %62, align 8, !tbaa !138
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %25) #21
  %1288 = load ptr, ptr %60, align 8, !tbaa !145
  %1289 = icmp ne ptr %1288, %70
  %1290 = load i32, ptr %371, align 8, !tbaa !98
  %1291 = icmp ne i32 %1290, 0
  %1292 = call fastcc zeroext i1 @S_grok_bslash_x(ptr noundef nonnull %62, ptr noundef nonnull %14, ptr noundef nonnull %25, i1 noundef zeroext %1289, i1 noundef zeroext %6, i1 noundef zeroext %5, i1 noundef zeroext %1291)
  br i1 %1292, label %1316, label %1293

1293:                                             ; preds = %1286
  %1294 = load ptr, ptr %60, align 8, !tbaa !145
  %1295 = icmp eq ptr %1294, %70
  br i1 %1295, label %1299, label %1296

1296:                                             ; preds = %1293
  %1297 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1298 = load ptr, ptr %1297, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1298, i32 noundef 11) #21
  br label %1299

1299:                                             ; preds = %1293, %1296
  %1300 = load ptr, ptr %62, align 8, !tbaa !138
  %1301 = load ptr, ptr %41, align 8, !tbaa !140
  %1302 = icmp ugt ptr %1300, %1301
  %1303 = select i1 %1302, ptr %1301, ptr %1300
  %1304 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1305 = load ptr, ptr %1304, align 8, !tbaa !108
  %1306 = ptrtoint ptr %1303 to i64
  %1307 = ptrtoint ptr %1305 to i64
  %1308 = sub i64 %1306, %1307
  %1309 = load ptr, ptr %25, align 8, !tbaa !5
  %1310 = load i32, ptr %371, align 8, !tbaa !98
  %1311 = icmp ne i32 %1310, 0
  %1312 = zext i1 %1311 to i32
  %1313 = ptrtoint ptr %1301 to i64
  %1314 = sub i64 %1313, %1306
  %1315 = getelementptr inbounds i8, ptr %1305, i64 %1308
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef %1309, i32 noundef %1312, i64 noundef %1308, ptr noundef %1305, i32 noundef %1312, i64 noundef %1314, ptr noundef %1315) #21
  br label %1316

1316:                                             ; preds = %1299, %1286
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #21
  %1317 = add i32 %367, 1
  %1318 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1319 = icmp eq ptr %1318, null
  br i1 %1319, label %1320, label %1329

1320:                                             ; preds = %1316
  %1321 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1322 = icmp eq ptr %1321, null
  br i1 %1322, label %1751, label %1323

1323:                                             ; preds = %1320
  %1324 = call ptr @Perl__get_encoding() #21
  %1325 = icmp ne ptr %1324, null
  %1326 = load i64, ptr %14, align 8
  %1327 = icmp ult i64 %1326, 256
  %1328 = select i1 %1325, i1 %1327, i1 false
  br i1 %1328, label %1448, label %1751

1329:                                             ; preds = %1316
  %1330 = load i64, ptr %14, align 8
  %1331 = icmp ult i64 %1330, 256
  br i1 %1331, label %1448, label %1751

1332:                                             ; preds = %644
  %1333 = getelementptr inbounds i8, ptr %624, i64 1
  store ptr %1333, ptr %62, align 8, !tbaa !138
  %1334 = load i8, ptr %624, align 1, !tbaa !9
  %1335 = load ptr, ptr %60, align 8, !tbaa !145
  %1336 = icmp ne ptr %1335, %70
  %1337 = call fastcc signext i8 @S_grok_bslash_c(i8 noundef signext %1334, i1 noundef zeroext %1336)
  %1338 = sext i8 %1337 to i64
  store i64 %1338, ptr %14, align 8, !tbaa !71
  %1339 = add i32 %367, 1
  br label %1751

1340:                                             ; preds = %644, %644, %644, %644, %644, %644, %644, %644
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %26) #21
  store i32 4, ptr %26, align 4, !tbaa !150
  %1341 = select i1 %6, i64 4, i64 3
  store i64 %1341, ptr %15, align 8, !tbaa !71
  %1342 = getelementptr inbounds i8, ptr %624, i64 -1
  store ptr %1342, ptr %62, align 8, !tbaa !138
  %1343 = call i64 @Perl_grok_oct(ptr noundef nonnull %1342, ptr noundef nonnull %15, ptr noundef nonnull %26, ptr noundef null) #21
  store i64 %1343, ptr %14, align 8, !tbaa !71
  %1344 = load i64, ptr %15, align 8
  %1345 = load ptr, ptr %62, align 8, !tbaa !138
  %1346 = getelementptr inbounds i8, ptr %1345, i64 %1344
  store ptr %1346, ptr %62, align 8, !tbaa !138
  %1347 = icmp eq i64 %1344, 3
  br i1 %1347, label %1429, label %1348

1348:                                             ; preds = %1340
  br i1 %6, label %1349, label %1384

1349:                                             ; preds = %1348
  %1350 = load i32, ptr %371, align 8, !tbaa !98
  %1351 = icmp eq i32 %1350, 0
  br i1 %1351, label %1358, label %1352

1352:                                             ; preds = %1349
  %1353 = load i8, ptr %1346, align 1, !tbaa !9
  %1354 = zext i8 %1353 to i64
  %1355 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1354
  %1356 = load i8, ptr %1355, align 1, !tbaa !9
  %1357 = zext i8 %1356 to i64
  br label %1358

1358:                                             ; preds = %1349, %1352
  %1359 = phi i64 [ %1357, %1352 ], [ 1, %1349 ]
  %1360 = getelementptr inbounds i8, ptr %1346, i64 %1359
  store ptr %1360, ptr %62, align 8, !tbaa !138
  %1361 = load ptr, ptr %60, align 8, !tbaa !145
  %1362 = icmp eq ptr %1361, %70
  br i1 %1362, label %1368, label %1363

1363:                                             ; preds = %1358
  %1364 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1365 = load ptr, ptr %1364, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1365, i32 noundef 11) #21
  %1366 = load ptr, ptr %62, align 8, !tbaa !138
  %1367 = load i32, ptr %371, align 8, !tbaa !98
  br label %1368

1368:                                             ; preds = %1358, %1363
  %1369 = phi i32 [ %1350, %1358 ], [ %1367, %1363 ]
  %1370 = phi ptr [ %1360, %1358 ], [ %1366, %1363 ]
  %1371 = load ptr, ptr %41, align 8, !tbaa !140
  %1372 = icmp ugt ptr %1370, %1371
  %1373 = select i1 %1372, ptr %1371, ptr %1370
  %1374 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1375 = load ptr, ptr %1374, align 8, !tbaa !108
  %1376 = ptrtoint ptr %1373 to i64
  %1377 = ptrtoint ptr %1375 to i64
  %1378 = sub i64 %1376, %1377
  %1379 = icmp ne i32 %1369, 0
  %1380 = zext i1 %1379 to i32
  %1381 = ptrtoint ptr %1371 to i64
  %1382 = sub i64 %1381, %1376
  %1383 = getelementptr inbounds i8, ptr %1375, i64 %1378
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.323, i32 noundef %1380, i64 noundef %1378, ptr noundef %1375, i32 noundef %1380, i64 noundef %1382, ptr noundef %1383) #21
  br label %1429

1384:                                             ; preds = %1348
  %1385 = load ptr, ptr %60, align 8, !tbaa !145
  %1386 = icmp ne ptr %1385, %70
  %1387 = icmp ult i64 %1344, 3
  %1388 = and i1 %1387, %1386
  br i1 %1388, label %1389, label %1429

1389:                                             ; preds = %1384
  %1390 = load ptr, ptr %41, align 8, !tbaa !140
  %1391 = icmp ult ptr %1346, %1390
  br i1 %1391, label %1392, label %1429

1392:                                             ; preds = %1389
  %1393 = load i8, ptr %1346, align 1, !tbaa !9
  %1394 = zext i8 %1393 to i64
  %1395 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1394
  %1396 = load i32, ptr %1395, align 4, !tbaa !150
  %1397 = and i32 %1396, 2
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1429, label %1399

1399:                                             ; preds = %1392
  %1400 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #21
  br i1 %1400, label %1401, label %1429

1401:                                             ; preds = %1399
  %1402 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1403 = load ptr, ptr %1402, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1403, i32 noundef 11) #21
  %1404 = load ptr, ptr %62, align 8, !tbaa !138
  %1405 = getelementptr inbounds i8, ptr %1404, i64 1
  %1406 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1407 = load ptr, ptr %1406, align 8, !tbaa !108
  %1408 = ptrtoint ptr %1405 to i64
  %1409 = ptrtoint ptr %1407 to i64
  %1410 = sub i64 %1408, %1409
  %1411 = load i64, ptr %15, align 8, !tbaa !71
  %1412 = call fastcc ptr @S_form_short_octal_warning(ptr noundef %1404, i64 noundef %1411)
  %1413 = load i32, ptr %371, align 8, !tbaa !98
  %1414 = icmp ne i32 %1413, 0
  %1415 = zext i1 %1414 to i32
  %1416 = load ptr, ptr %1406, align 8, !tbaa !108
  %1417 = load ptr, ptr %41, align 8, !tbaa !140
  %1418 = ptrtoint ptr %1417 to i64
  %1419 = ptrtoint ptr %1416 to i64
  %1420 = add i64 %1410, %1419
  %1421 = sub i64 %1418, %1420
  %1422 = getelementptr inbounds i8, ptr %1416, i64 %1410
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.227, ptr noundef %1412, i32 noundef %1415, i64 noundef %1410, ptr noundef %1416, i32 noundef %1415, i64 noundef %1421, ptr noundef %1422) #21
  %1423 = load ptr, ptr %1402, align 8, !tbaa !151
  %1424 = icmp eq ptr %1423, null
  br i1 %1424, label %1429, label %1425

1425:                                             ; preds = %1401
  %1426 = getelementptr inbounds %struct.sv, ptr %1423, i64 0, i32 1
  %1427 = load i32, ptr %1426, align 8, !tbaa !22
  %1428 = add i32 %1427, 1
  store i32 %1428, ptr %1426, align 8, !tbaa !22
  br label %1429

1429:                                             ; preds = %1425, %1401, %1368, %1392, %1399, %1389, %1384, %1340
  %1430 = add i32 %367, 1
  %1431 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1432 = icmp eq ptr %1431, null
  br i1 %1432, label %1433, label %1442

1433:                                             ; preds = %1429
  %1434 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1435 = icmp eq ptr %1434, null
  br i1 %1435, label %1447, label %1436

1436:                                             ; preds = %1433
  %1437 = call ptr @Perl__get_encoding() #21
  %1438 = icmp ne ptr %1437, null
  %1439 = load i64, ptr %14, align 8
  %1440 = icmp ult i64 %1439, 256
  %1441 = select i1 %1438, i1 %1440, i1 false
  br i1 %1441, label %1445, label %1447

1442:                                             ; preds = %1429
  %1443 = load i64, ptr %14, align 8
  %1444 = icmp ult i64 %1443, 256
  br i1 %1444, label %1445, label %1447

1445:                                             ; preds = %1436, %1442
  %1446 = phi i64 [ %1439, %1436 ], [ %1443, %1442 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #21
  br label %1448

1447:                                             ; preds = %1442, %1436, %1433
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #21
  br label %1751

1448:                                             ; preds = %1445, %1329, %1323, %1283, %1277
  %1449 = phi i64 [ %1326, %1323 ], [ %1330, %1329 ], [ %1280, %1277 ], [ %1284, %1283 ], [ %1446, %1445 ]
  %1450 = phi i32 [ %1317, %1323 ], [ %1317, %1329 ], [ %1271, %1277 ], [ %1271, %1283 ], [ %1430, %1445 ]
  %1451 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  %1452 = load i32, ptr %1451, align 8, !tbaa !136
  %1453 = icmp eq i32 %1452, 0
  br i1 %1453, label %1454, label %1529

1454:                                             ; preds = %1448
  %1455 = call ptr @Perl__get_encoding() #21
  %1456 = load i64, ptr %14, align 8, !tbaa !71
  %1457 = trunc i64 %1456 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %10)
  store i8 %1457, ptr %10, align 1, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #21
  store i64 1, ptr %11, align 8, !tbaa !71
  %1458 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %10, i64 noundef 1, i32 noundef 524288) #21
  %1459 = icmp eq ptr %1455, null
  br i1 %1459, label %1462, label %1460

1460:                                             ; preds = %1454
  %1461 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %1458, ptr noundef nonnull %1455) #21
  br label %1465

1462:                                             ; preds = %1454
  %1463 = getelementptr inbounds %struct.sv, ptr %1458, i64 0, i32 3
  %1464 = load ptr, ptr %1463, align 8, !tbaa !9
  br label %1465

1465:                                             ; preds = %1462, %1460
  %1466 = phi ptr [ %1461, %1460 ], [ %1464, %1462 ]
  %1467 = load ptr, ptr %1458, align 8, !tbaa !63
  %1468 = getelementptr inbounds %struct.xpv, ptr %1467, i64 0, i32 2
  %1469 = load i64, ptr %1468, align 8, !tbaa !72
  %1470 = icmp eq i64 %1469, 0
  br i1 %1470, label %1489, label %1471

1471:                                             ; preds = %1465
  %1472 = getelementptr inbounds %struct.sv, ptr %1458, i64 0, i32 2
  %1473 = load i32, ptr %1472, align 4, !tbaa !62
  %1474 = and i32 %1473, 536870912
  %1475 = icmp eq i32 %1474, 0
  br i1 %1475, label %1482, label %1476

1476:                                             ; preds = %1471
  %1477 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #21
  %1478 = xor i1 %1477, true
  %1479 = zext i1 %1478 to i32
  %1480 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %1466, i64 noundef %1469, ptr noundef nonnull %11, i32 noundef %1479) #21
  %1481 = load i64, ptr %11, align 8
  br label %1485

1482:                                             ; preds = %1471
  %1483 = load i8, ptr %1466, align 1, !tbaa !9
  %1484 = zext i8 %1483 to i64
  br label %1485

1485:                                             ; preds = %1482, %1476
  %1486 = phi i64 [ %1481, %1476 ], [ 1, %1482 ]
  %1487 = phi i64 [ %1480, %1476 ], [ %1484, %1482 ]
  %1488 = icmp eq i64 %1486, %1469
  br i1 %1488, label %1490, label %1489

1489:                                             ; preds = %1465, %1485
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10)
  store i64 65533, ptr %14, align 8, !tbaa !71
  br label %1491

1490:                                             ; preds = %1485
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #21
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10)
  store i64 %1487, ptr %14, align 8, !tbaa !71
  br i1 %1459, label %1491, label %1751

1491:                                             ; preds = %1489, %1490
  %1492 = load ptr, ptr %60, align 8, !tbaa !145
  %1493 = icmp eq ptr %1492, %70
  br i1 %6, label %1494, label %1514

1494:                                             ; preds = %1491
  br i1 %1493, label %1498, label %1495

1495:                                             ; preds = %1494
  %1496 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1497 = load ptr, ptr %1496, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1497, i32 noundef 11) #21
  br label %1498

1498:                                             ; preds = %1494, %1495
  %1499 = load ptr, ptr %62, align 8, !tbaa !138
  %1500 = load ptr, ptr %41, align 8, !tbaa !140
  %1501 = icmp ugt ptr %1499, %1500
  %1502 = select i1 %1501, ptr %1500, ptr %1499
  %1503 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1504 = load ptr, ptr %1503, align 8, !tbaa !108
  %1505 = ptrtoint ptr %1502 to i64
  %1506 = ptrtoint ptr %1504 to i64
  %1507 = sub i64 %1505, %1506
  %1508 = load i32, ptr %371, align 8, !tbaa !98
  %1509 = icmp ne i32 %1508, 0
  %1510 = zext i1 %1509 to i32
  %1511 = ptrtoint ptr %1500 to i64
  %1512 = sub i64 %1511, %1505
  %1513 = getelementptr inbounds i8, ptr %1504, i64 %1507
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.324, i32 noundef %1510, i64 noundef %1507, ptr noundef %1504, i32 noundef %1510, i64 noundef %1512, ptr noundef %1513) #21
  br label %1751

1514:                                             ; preds = %1491
  br i1 %1493, label %1751, label %1515

1515:                                             ; preds = %1514
  %1516 = load ptr, ptr %62, align 8, !tbaa !138
  %1517 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1518 = load ptr, ptr %1517, align 8, !tbaa !108
  %1519 = ptrtoint ptr %1516 to i64
  %1520 = ptrtoint ptr %1518 to i64
  %1521 = sub i64 %1519, %1520
  %1522 = load i32, ptr %371, align 8, !tbaa !98
  %1523 = icmp ne i32 %1522, 0
  %1524 = zext i1 %1523 to i32
  %1525 = load ptr, ptr %41, align 8, !tbaa !140
  %1526 = ptrtoint ptr %1525 to i64
  %1527 = sub i64 %1526, %1519
  %1528 = getelementptr inbounds i8, ptr %1518, i64 %1521
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.304, i32 noundef %1524, i64 noundef %1521, ptr noundef %1518, i32 noundef %1524, i64 noundef %1527, ptr noundef %1528) #21
  br label %1751

1529:                                             ; preds = %1448, %644
  %1530 = phi i64 [ %625, %644 ], [ %1449, %1448 ]
  %1531 = phi i32 [ %367, %644 ], [ %1450, %1448 ]
  %1532 = load ptr, ptr %60, align 8, !tbaa !145
  %1533 = icmp ne ptr %1532, %70
  %1534 = icmp ult i64 %1530, 256
  %1535 = select i1 %1533, i1 %1534, i1 false
  br i1 %1535, label %1536, label %1751

1536:                                             ; preds = %1529
  %1537 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1530
  %1538 = load i32, ptr %1537, align 4, !tbaa !150
  %1539 = and i32 %1538, 16385
  %1540 = icmp eq i32 %1539, 16385
  %1541 = icmp ne i64 %1530, 95
  %1542 = and i1 %1541, %1540
  br i1 %1542, label %1543, label %1751

1543:                                             ; preds = %1536
  %1544 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1545 = load ptr, ptr %1544, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1545, i32 noundef 11) #21
  %1546 = load ptr, ptr %62, align 8, !tbaa !138
  %1547 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1548 = load ptr, ptr %1547, align 8, !tbaa !108
  %1549 = ptrtoint ptr %1546 to i64
  %1550 = ptrtoint ptr %1548 to i64
  %1551 = sub i64 %1549, %1550
  %1552 = load ptr, ptr %41, align 8, !tbaa !140
  %1553 = ptrtoint ptr %1552 to i64
  %1554 = sub i64 %1553, %1549
  %1555 = getelementptr inbounds i8, ptr %1548, i64 %1551
  br i1 %6, label %1556, label %1562

1556:                                             ; preds = %1543
  %1557 = load i32, ptr %371, align 8, !tbaa !98
  %1558 = icmp ne i32 %1557, 0
  %1559 = zext i1 %1558 to i32
  %1560 = load i64, ptr %14, align 8, !tbaa !71
  %1561 = trunc i64 %1560 to i32
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1558, ptr noundef nonnull @.str.325, ptr nonnull poison, i32 noundef %1561, i32 noundef %1559, i64 noundef %1551, ptr noundef %1548, i32 noundef %1559, i64 noundef %1554, ptr noundef %1555)
  br label %1751

1562:                                             ; preds = %1543
  %1563 = load i64, ptr %14, align 8, !tbaa !71
  %1564 = trunc i64 %1563 to i32
  %1565 = load i32, ptr %371, align 8, !tbaa !98
  %1566 = icmp ne i32 %1565, 0
  %1567 = zext i1 %1566 to i32
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.326, i32 noundef %1564, i32 noundef %1567, i64 noundef %1551, ptr noundef %1548, i32 noundef %1567, i64 noundef %1554, ptr noundef %1555) #21
  %1568 = load ptr, ptr %1544, align 8, !tbaa !151
  %1569 = icmp eq ptr %1568, null
  br i1 %1569, label %1751, label %1570

1570:                                             ; preds = %1562
  %1571 = getelementptr inbounds %struct.sv, ptr %1568, i64 0, i32 1
  %1572 = load i32, ptr %1571, align 8, !tbaa !22
  %1573 = add i32 %1572, 1
  store i32 %1573, ptr %1571, align 8, !tbaa !22
  br label %1751

1574:                                             ; preds = %467, %474, %477, %480, %483, %486, %489, %492, %498, %506, %511, %514, %517, %520, %538
  %1575 = phi i64 [ -1, %538 ], [ 12, %514 ], [ 2, %511 ], [ %502, %498 ], [ %510, %506 ], [ 0, %467 ], [ 4, %474 ], [ 20, %477 ], [ 16, %480 ], [ 28, %483 ], [ 22, %486 ], [ 26, %489 ], [ 14, %492 ], [ 10, %517 ], [ 24, %520 ]
  %1576 = zext i1 %460 to i64
  %1577 = add nsw i64 %1575, %1576
  %1578 = icmp sgt i64 %1577, -1
  br i1 %1578, label %1579, label %1751

1579:                                             ; preds = %644, %646, %647, %648, %649, %650, %651, %652, %653, %654, %1178, %1574
  %1580 = phi i64 [ %1577, %1574 ], [ 0, %644 ], [ 1, %646 ], [ 20, %647 ], [ 21, %648 ], [ 2, %649 ], [ 3, %650 ], [ 30, %651 ], [ 31, %652 ], [ 32, %653 ], [ 33, %654 ], [ 34, %1178 ]
  %1581 = phi ptr [ %359, %1574 ], [ %359, %644 ], [ %359, %646 ], [ %359, %647 ], [ %359, %648 ], [ %359, %649 ], [ %359, %650 ], [ %359, %651 ], [ %359, %652 ], [ %359, %653 ], [ %359, %654 ], [ %1181, %1178 ]
  %1582 = phi i8 [ %358, %1574 ], [ %358, %644 ], [ %358, %646 ], [ %358, %647 ], [ %358, %648 ], [ %358, %649 ], [ %358, %650 ], [ %358, %651 ], [ %358, %652 ], [ %358, %653 ], [ %358, %654 ], [ %1180, %1178 ]
  %1583 = phi i8 [ %354, %1574 ], [ %354, %644 ], [ %354, %646 ], [ %354, %647 ], [ %354, %648 ], [ %354, %649 ], [ %354, %650 ], [ %354, %651 ], [ %354, %652 ], [ %354, %653 ], [ %354, %654 ], [ %1179, %1178 ]
  br i1 %366, label %1644, label %1584

1584:                                             ; preds = %1579
  %1585 = load ptr, ptr %60, align 8, !tbaa !145
  %1586 = icmp eq ptr %1585, %70
  br i1 %1586, label %1641, label %1587

1587:                                             ; preds = %1584
  %1588 = load ptr, ptr %62, align 8, !tbaa !138
  %1589 = icmp ult ptr %1588, %370
  %1590 = ptrtoint ptr %1588 to i64
  %1591 = ptrtoint ptr %370 to i64
  %1592 = sub i64 %1590, %1591
  %1593 = select i1 %1589, i64 0, i64 %1592
  br i1 %6, label %1594, label %1613

1594:                                             ; preds = %1587
  %1595 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1596 = load ptr, ptr %1595, align 8, !tbaa !108
  %1597 = ptrtoint ptr %1596 to i64
  %1598 = sub i64 %1590, %1597
  %1599 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1600 = load ptr, ptr %1599, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1600, i32 noundef 11) #21
  %1601 = load i32, ptr %371, align 8, !tbaa !98
  %1602 = icmp ne i32 %1601, 0
  %1603 = zext i1 %1602 to i32
  %1604 = shl i64 %1593, 32
  %1605 = ashr exact i64 %1604, 32
  %1606 = load ptr, ptr %1595, align 8, !tbaa !108
  %1607 = load ptr, ptr %41, align 8, !tbaa !140
  %1608 = ptrtoint ptr %1607 to i64
  %1609 = ptrtoint ptr %1606 to i64
  %1610 = add i64 %1598, %1609
  %1611 = sub i64 %1608, %1610
  %1612 = getelementptr inbounds i8, ptr %1606, i64 %1598
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1602, ptr noundef nonnull @.str.327, ptr nonnull poison, i32 noundef %1603, i64 noundef %1605, ptr noundef %370, i32 noundef %1603, i64 noundef %1598, ptr noundef %1606, i32 noundef %1603, i64 noundef %1611, ptr noundef %1612)
  br label %1641

1613:                                             ; preds = %1587
  %1614 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1615 = load ptr, ptr %1614, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1615, i32 noundef 11) #21
  %1616 = load ptr, ptr %62, align 8, !tbaa !138
  %1617 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1618 = load ptr, ptr %1617, align 8, !tbaa !108
  %1619 = ptrtoint ptr %1616 to i64
  %1620 = ptrtoint ptr %1618 to i64
  %1621 = sub i64 %1619, %1620
  %1622 = load i32, ptr %371, align 8, !tbaa !98
  %1623 = icmp ne i32 %1622, 0
  %1624 = zext i1 %1623 to i32
  %1625 = shl i64 %1593, 32
  %1626 = ashr exact i64 %1625, 32
  %1627 = load ptr, ptr %41, align 8, !tbaa !140
  %1628 = ptrtoint ptr %1627 to i64
  %1629 = sub i64 %1628, %1619
  %1630 = getelementptr inbounds i8, ptr %1618, i64 %1621
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.328, i32 noundef %1624, i64 noundef %1626, ptr noundef %370, i32 noundef %1624, i64 noundef %1621, ptr noundef %1618, i32 noundef %1624, i64 noundef %1629, ptr noundef %1630) #21
  %1631 = load ptr, ptr %1614, align 8, !tbaa !151
  %1632 = icmp eq ptr %1631, null
  br i1 %1632, label %1637, label %1633

1633:                                             ; preds = %1613
  %1634 = getelementptr inbounds %struct.sv, ptr %1631, i64 0, i32 1
  %1635 = load i32, ptr %1634, align 8, !tbaa !22
  %1636 = add i32 %1635, 1
  store i32 %1636, ptr %1634, align 8, !tbaa !22
  br label %1637

1637:                                             ; preds = %1613, %1633
  %1638 = load ptr, ptr %21, align 8, !tbaa !5
  %1639 = call ptr @Perl__add_range_to_invlist(ptr noundef %1638, i64 noundef 45, i64 noundef 45)
  store ptr %1639, ptr %21, align 8, !tbaa !5
  %1640 = call ptr @Perl__add_range_to_invlist(ptr noundef %357, i64 noundef %365, i64 noundef %365)
  br label %1641

1641:                                             ; preds = %1594, %1637, %1584
  %1642 = phi ptr [ %357, %1584 ], [ %357, %1594 ], [ %1640, %1637 ]
  %1643 = add i64 %369, 2
  br label %1644

1644:                                             ; preds = %1641, %1579
  %1645 = phi ptr [ %1642, %1641 ], [ %357, %1579 ]
  %1646 = phi i64 [ %1643, %1641 ], [ %369, %1579 ]
  %1647 = lshr i64 %1580, 1
  %1648 = load i32, ptr %0, align 8, !tbaa !109
  %1649 = lshr i32 %1648, 7
  %1650 = and i32 %1649, 7
  %1651 = icmp eq i32 %1650, 1
  %1652 = icmp ult i64 %1580, 30
  %1653 = and i1 %1652, %1651
  %1654 = trunc i64 %1647 to i32
  %1655 = icmp ne i32 %1654, 14
  %1656 = and i1 %1655, %1653
  br i1 %1656, label %1657, label %1714

1657:                                             ; preds = %1644
  %1658 = and i8 %362, 1
  %1659 = icmp eq i8 %1658, 0
  br i1 %1659, label %1662, label %1660

1660:                                             ; preds = %1657
  %1661 = load i8, ptr %61, align 2, !tbaa !169
  br label %1674

1662:                                             ; preds = %1657
  %1663 = load ptr, ptr %60, align 8, !tbaa !145
  %1664 = icmp eq ptr %1663, %70
  br i1 %1664, label %1665, label %1668

1665:                                             ; preds = %1662
  %1666 = load i64, ptr %64, align 8, !tbaa !144
  %1667 = add i64 %1666, 1
  store i64 %1667, ptr %64, align 8, !tbaa !144
  br label %1670

1668:                                             ; preds = %1662
  %1669 = getelementptr inbounds %struct.regnode, ptr %1663, i64 1
  store ptr %1669, ptr %60, align 8, !tbaa !145
  br label %1670

1670:                                             ; preds = %1668, %1665
  %1671 = load i8, ptr %61, align 2, !tbaa !169
  %1672 = or i8 %1671, 8
  store i8 %1672, ptr %61, align 2, !tbaa !169
  %1673 = getelementptr inbounds %struct.regnode_charclass_class, ptr %61, i64 0, i32 5
  store i32 0, ptr %1673, align 4, !tbaa !254
  br label %1674

1674:                                             ; preds = %1660, %1670
  %1675 = phi i8 [ %1661, %1660 ], [ %1672, %1670 ]
  %1676 = phi i8 [ %362, %1660 ], [ 1, %1670 ]
  %1677 = and i8 %1675, 8
  %1678 = icmp eq i8 %1677, 0
  %1679 = getelementptr inbounds %struct.regnode_charclass_class, ptr %61, i64 0, i32 5
  %1680 = load i32, ptr %1679, align 4, !tbaa !254
  br i1 %1678, label %1690, label %1681

1681:                                             ; preds = %1674
  %1682 = and i64 %1580, 1
  %1683 = icmp eq i64 %1682, 0
  %1684 = select i1 %1683, i64 1, i64 4294967295
  %1685 = add nuw nsw i64 %1684, %1580
  %1686 = trunc i64 %1685 to i32
  %1687 = shl nuw nsw i32 1, %1686
  %1688 = and i32 %1680, %1687
  %1689 = icmp eq i32 %1688, 0
  br i1 %1689, label %1690, label %2412

1690:                                             ; preds = %1674, %1681
  %1691 = trunc i64 %1580 to i32
  %1692 = shl nuw nsw i32 1, %1691
  %1693 = getelementptr inbounds %struct.regnode_charclass_class, ptr %61, i64 0, i32 5
  %1694 = or i32 %1680, %1692
  store i32 %1694, ptr %1693, align 4, !tbaa !254
  %1695 = load ptr, ptr %60, align 8, !tbaa !145
  %1696 = icmp eq ptr %1695, %70
  br i1 %1696, label %1751, label %1697

1697:                                             ; preds = %1690
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %27) #21
  store ptr null, ptr %27, align 8, !tbaa !5
  %1698 = load ptr, ptr @PL_AboveLatin1, align 8, !tbaa !5
  %1699 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1647
  %1700 = load ptr, ptr %1699, align 8, !tbaa !5
  %1701 = and i64 %1580, 1
  %1702 = icmp ne i64 %1701, 0
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %1698, ptr noundef %1700, i1 noundef zeroext %1702, ptr noundef nonnull %27)
  %1703 = load ptr, ptr %21, align 8, !tbaa !5
  %1704 = icmp eq ptr %1703, null
  %1705 = load ptr, ptr %27, align 8, !tbaa !5
  br i1 %1704, label %1706, label %1707

1706:                                             ; preds = %1697
  store ptr %1705, ptr %21, align 8, !tbaa !5
  br label %1750

1707:                                             ; preds = %1697
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %1703, ptr noundef %1705, i1 noundef zeroext false, ptr noundef nonnull %21)
  %1708 = getelementptr inbounds %struct.sv, ptr %1705, i64 0, i32 1
  %1709 = load i32, ptr %1708, align 8, !tbaa !22
  %1710 = icmp ugt i32 %1709, 1
  br i1 %1710, label %1711, label %1713

1711:                                             ; preds = %1707
  %1712 = add i32 %1709, -1
  store i32 %1712, ptr %1708, align 8, !tbaa !22
  br label %1750

1713:                                             ; preds = %1707
  call void @Perl_sv_free2(ptr noundef nonnull %1705, i32 noundef %1709) #21
  br label %1750

1714:                                             ; preds = %1644
  %1715 = load ptr, ptr %60, align 8, !tbaa !145
  %1716 = icmp eq ptr %1715, %70
  br i1 %1716, label %1751, label %1717

1717:                                             ; preds = %1714
  %1718 = icmp ugt i64 %1580, 29
  br i1 %1718, label %1719, label %1729

1719:                                             ; preds = %1717
  %1720 = icmp eq i64 %1580, 34
  br i1 %1720, label %1751, label %1721

1721:                                             ; preds = %1719
  %1722 = icmp eq i32 %1654, 15
  %1723 = load ptr, ptr %21, align 8, !tbaa !5
  %1724 = select i1 %1722, i64 %1647, i64 11
  %1725 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1724
  %1726 = load ptr, ptr %1725, align 8, !tbaa !5
  %1727 = and i64 %1580, 1
  %1728 = icmp ne i64 %1727, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1723, ptr noundef %1726, i1 noundef zeroext %1728, ptr noundef nonnull %21)
  br label %1751

1729:                                             ; preds = %1717
  %1730 = icmp eq i32 %1650, 2
  %1731 = icmp eq i32 %1654, 14
  %1732 = or i1 %1731, %1730
  br i1 %1732, label %1736, label %1733

1733:                                             ; preds = %1729
  %1734 = icmp eq i32 %1650, 0
  br i1 %1734, label %1735, label %1742

1735:                                             ; preds = %1733
  switch i32 %1654, label %1742 [
    i32 12, label %1736
    i32 1, label %1736
  ]

1736:                                             ; preds = %1735, %1735, %1729
  %1737 = load ptr, ptr %19, align 8, !tbaa !5
  %1738 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1647
  %1739 = load ptr, ptr %1738, align 8, !tbaa !5
  %1740 = and i64 %1580, 1
  %1741 = icmp ne i64 %1740, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1737, ptr noundef %1739, i1 noundef zeroext %1741, ptr noundef nonnull %19)
  br label %1751

1742:                                             ; preds = %1735, %1733
  %1743 = and i64 %1580, 1
  %1744 = icmp eq i64 %1743, 0
  %1745 = select i1 %1744, ptr %17, ptr %18
  %1746 = load ptr, ptr %1745, align 8, !tbaa !5
  %1747 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1647
  %1748 = load ptr, ptr %1747, align 8, !tbaa !5
  %1749 = icmp ne i64 %1743, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1746, ptr noundef %1748, i1 noundef zeroext %1749, ptr noundef nonnull %1745)
  br label %1751

1750:                                             ; preds = %1706, %1711, %1713
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %27) #21
  br label %283

1751:                                             ; preds = %390, %1690, %1721, %1719, %1742, %1736, %1714, %558, %550, %600, %449, %403, %398, %393, %396, %1570, %1562, %1490, %1514, %1515, %1498, %814, %1184, %1185, %1186, %1187, %1188, %1189, %1190, %1274, %1277, %1283, %1320, %1323, %1329, %1332, %1447, %1536, %1556, %1529, %1574
  %1752 = phi i1 [ false, %1574 ], [ false, %1529 ], [ false, %1556 ], [ false, %1536 ], [ false, %1447 ], [ false, %1332 ], [ false, %1329 ], [ false, %1323 ], [ false, %1320 ], [ false, %1283 ], [ false, %1277 ], [ false, %1274 ], [ false, %1190 ], [ false, %1189 ], [ false, %1188 ], [ false, %1187 ], [ false, %1186 ], [ false, %1185 ], [ false, %1184 ], [ false, %814 ], [ false, %1498 ], [ false, %1515 ], [ false, %1514 ], [ false, %1490 ], [ false, %1562 ], [ false, %1570 ], [ false, %396 ], [ false, %393 ], [ false, %398 ], [ false, %403 ], [ false, %449 ], [ false, %600 ], [ false, %550 ], [ false, %558 ], [ true, %1714 ], [ true, %1736 ], [ true, %1742 ], [ true, %1719 ], [ true, %1721 ], [ true, %1690 ], [ false, %390 ]
  %1753 = phi i64 [ -1, %1574 ], [ -1, %1529 ], [ -1, %1556 ], [ -1, %1536 ], [ -1, %1447 ], [ -1, %1332 ], [ -1, %1329 ], [ -1, %1323 ], [ -1, %1320 ], [ -1, %1283 ], [ -1, %1277 ], [ -1, %1274 ], [ -1, %1190 ], [ -1, %1189 ], [ -1, %1188 ], [ -1, %1187 ], [ -1, %1186 ], [ -1, %1185 ], [ -1, %1184 ], [ -1, %814 ], [ -1, %1498 ], [ -1, %1515 ], [ -1, %1514 ], [ -1, %1490 ], [ -1, %1562 ], [ -1, %1570 ], [ -1, %396 ], [ -1, %393 ], [ -1, %398 ], [ -1, %403 ], [ -1, %449 ], [ -1, %600 ], [ -1, %550 ], [ -1, %558 ], [ %1580, %1714 ], [ %1580, %1736 ], [ %1580, %1742 ], [ 34, %1719 ], [ %1580, %1721 ], [ %1580, %1690 ], [ -1, %390 ]
  %1754 = phi ptr [ %359, %1574 ], [ %359, %1529 ], [ %359, %1556 ], [ %359, %1536 ], [ %359, %1447 ], [ %359, %1332 ], [ %359, %1329 ], [ %359, %1323 ], [ %359, %1320 ], [ %359, %1283 ], [ %359, %1277 ], [ %359, %1274 ], [ %359, %1190 ], [ %359, %1189 ], [ %359, %1188 ], [ %359, %1187 ], [ %359, %1186 ], [ %359, %1185 ], [ %359, %1184 ], [ %359, %814 ], [ %359, %1498 ], [ %359, %1515 ], [ %359, %1514 ], [ %359, %1490 ], [ %359, %1562 ], [ %359, %1570 ], [ %359, %396 ], [ %359, %393 ], [ %359, %398 ], [ %359, %403 ], [ %359, %449 ], [ %359, %600 ], [ %359, %550 ], [ %359, %558 ], [ %1581, %1714 ], [ %1581, %1736 ], [ %1581, %1742 ], [ %1581, %1719 ], [ %1581, %1721 ], [ %1581, %1690 ], [ %359, %390 ]
  %1755 = phi i8 [ %358, %1574 ], [ %358, %1529 ], [ %358, %1556 ], [ %358, %1536 ], [ %358, %1447 ], [ %358, %1332 ], [ %358, %1329 ], [ %358, %1323 ], [ %358, %1320 ], [ %358, %1283 ], [ %358, %1277 ], [ %358, %1274 ], [ %358, %1190 ], [ %358, %1189 ], [ %358, %1188 ], [ %358, %1187 ], [ %358, %1186 ], [ %358, %1185 ], [ %358, %1184 ], [ %358, %814 ], [ %358, %1498 ], [ %358, %1515 ], [ %358, %1514 ], [ %358, %1490 ], [ %358, %1562 ], [ %358, %1570 ], [ %358, %396 ], [ %358, %393 ], [ %358, %398 ], [ %358, %403 ], [ %358, %449 ], [ %358, %600 ], [ %358, %550 ], [ %358, %558 ], [ %1582, %1714 ], [ %1582, %1736 ], [ %1582, %1742 ], [ %1582, %1719 ], [ %1582, %1721 ], [ %1582, %1690 ], [ %358, %390 ]
  %1756 = phi i32 [ %367, %1574 ], [ %1531, %1529 ], [ %1531, %1556 ], [ %1531, %1536 ], [ %1430, %1447 ], [ %1339, %1332 ], [ %1317, %1329 ], [ %1317, %1323 ], [ %1317, %1320 ], [ %1271, %1283 ], [ %1271, %1277 ], [ %1271, %1274 ], [ %367, %1190 ], [ %367, %1189 ], [ %367, %1188 ], [ %367, %1187 ], [ %367, %1186 ], [ %367, %1185 ], [ %367, %1184 ], [ %367, %814 ], [ %1450, %1498 ], [ %1450, %1515 ], [ %1450, %1514 ], [ %1450, %1490 ], [ %1531, %1562 ], [ %1531, %1570 ], [ %367, %396 ], [ %367, %393 ], [ %367, %398 ], [ %367, %403 ], [ %367, %449 ], [ %367, %600 ], [ %367, %550 ], [ %367, %558 ], [ %367, %1714 ], [ %367, %1736 ], [ %367, %1742 ], [ %367, %1719 ], [ %367, %1721 ], [ %367, %1690 ], [ %367, %390 ]
  %1757 = phi i8 [ %355, %1574 ], [ %355, %1529 ], [ %355, %1556 ], [ %355, %1536 ], [ %355, %1447 ], [ %355, %1332 ], [ %355, %1329 ], [ %355, %1323 ], [ %355, %1320 ], [ %355, %1283 ], [ %355, %1277 ], [ %355, %1274 ], [ %355, %1190 ], [ %355, %1189 ], [ %355, %1188 ], [ %355, %1187 ], [ %355, %1186 ], [ %355, %1185 ], [ %355, %1184 ], [ %815, %814 ], [ %355, %1498 ], [ %355, %1515 ], [ %355, %1514 ], [ %355, %1490 ], [ %355, %1562 ], [ %355, %1570 ], [ %355, %396 ], [ %355, %393 ], [ %355, %398 ], [ %355, %403 ], [ %355, %449 ], [ %355, %600 ], [ %355, %550 ], [ %355, %558 ], [ %355, %1714 ], [ %355, %1736 ], [ %355, %1742 ], [ %355, %1719 ], [ %355, %1721 ], [ %355, %1690 ], [ %355, %390 ]
  %1758 = phi i8 [ %354, %1574 ], [ %354, %1529 ], [ %354, %1556 ], [ %354, %1536 ], [ %354, %1447 ], [ %354, %1332 ], [ %354, %1329 ], [ %354, %1323 ], [ %354, %1320 ], [ %354, %1283 ], [ %354, %1277 ], [ %354, %1274 ], [ %354, %1190 ], [ %354, %1189 ], [ %354, %1188 ], [ %354, %1187 ], [ %354, %1186 ], [ %354, %1185 ], [ %354, %1184 ], [ %354, %814 ], [ %354, %1498 ], [ %354, %1515 ], [ %354, %1514 ], [ %354, %1490 ], [ %354, %1562 ], [ %354, %1570 ], [ %354, %396 ], [ %354, %393 ], [ %354, %398 ], [ %354, %403 ], [ %354, %449 ], [ %354, %600 ], [ %354, %550 ], [ %354, %558 ], [ %1583, %1714 ], [ %1583, %1736 ], [ %1583, %1742 ], [ %1583, %1719 ], [ %1583, %1721 ], [ %1583, %1690 ], [ %354, %390 ]
  %1759 = phi ptr [ %357, %1574 ], [ %357, %1529 ], [ %357, %1556 ], [ %357, %1536 ], [ %357, %1447 ], [ %357, %1332 ], [ %357, %1329 ], [ %357, %1323 ], [ %357, %1320 ], [ %357, %1283 ], [ %357, %1277 ], [ %357, %1274 ], [ %357, %1190 ], [ %357, %1189 ], [ %357, %1188 ], [ %357, %1187 ], [ %357, %1186 ], [ %357, %1185 ], [ %357, %1184 ], [ %357, %814 ], [ %357, %1498 ], [ %357, %1515 ], [ %357, %1514 ], [ %357, %1490 ], [ %357, %1562 ], [ %357, %1570 ], [ %357, %396 ], [ %357, %393 ], [ %357, %398 ], [ %357, %403 ], [ %357, %449 ], [ %357, %600 ], [ %357, %550 ], [ %357, %558 ], [ %1645, %1714 ], [ %1645, %1736 ], [ %1645, %1742 ], [ %1645, %1719 ], [ %1645, %1721 ], [ %1645, %1690 ], [ %357, %390 ]
  %1760 = phi i64 [ %369, %1574 ], [ %369, %1529 ], [ %369, %1556 ], [ %369, %1536 ], [ %369, %1447 ], [ %369, %1332 ], [ %369, %1329 ], [ %369, %1323 ], [ %369, %1320 ], [ %369, %1283 ], [ %369, %1277 ], [ %369, %1274 ], [ %369, %1190 ], [ %369, %1189 ], [ %369, %1188 ], [ %369, %1187 ], [ %369, %1186 ], [ %369, %1185 ], [ %369, %1184 ], [ %369, %814 ], [ %369, %1498 ], [ %369, %1515 ], [ %369, %1514 ], [ %369, %1490 ], [ %369, %1562 ], [ %369, %1570 ], [ %369, %396 ], [ %369, %393 ], [ %369, %398 ], [ %369, %403 ], [ %369, %449 ], [ %369, %600 ], [ %369, %550 ], [ %369, %558 ], [ %1646, %1714 ], [ %1646, %1736 ], [ %1646, %1742 ], [ %1646, %1719 ], [ %1646, %1721 ], [ %1646, %1690 ], [ %369, %390 ]
  %1761 = phi i8 [ %362, %1574 ], [ %362, %1529 ], [ %362, %1556 ], [ %362, %1536 ], [ %362, %1447 ], [ %362, %1332 ], [ %362, %1329 ], [ %362, %1323 ], [ %362, %1320 ], [ %362, %1283 ], [ %362, %1277 ], [ %362, %1274 ], [ %362, %1190 ], [ %362, %1189 ], [ %362, %1188 ], [ %362, %1187 ], [ %362, %1186 ], [ %362, %1185 ], [ %362, %1184 ], [ %362, %814 ], [ %362, %1498 ], [ %362, %1515 ], [ %362, %1514 ], [ %362, %1490 ], [ %362, %1562 ], [ %362, %1570 ], [ %362, %396 ], [ %362, %393 ], [ %362, %398 ], [ %362, %403 ], [ %362, %449 ], [ %362, %600 ], [ %362, %550 ], [ %362, %558 ], [ %362, %1714 ], [ %362, %1736 ], [ %362, %1742 ], [ %362, %1719 ], [ %362, %1721 ], [ %1676, %1690 ], [ %362, %390 ]
  %1762 = phi i64 [ %364, %1574 ], [ %364, %1529 ], [ %364, %1556 ], [ %364, %1536 ], [ %364, %1447 ], [ %364, %1332 ], [ %364, %1329 ], [ %364, %1323 ], [ %364, %1320 ], [ %364, %1283 ], [ %364, %1277 ], [ %364, %1274 ], [ %364, %1190 ], [ %364, %1189 ], [ %364, %1188 ], [ %364, %1187 ], [ %364, %1186 ], [ %364, %1185 ], [ %364, %1184 ], [ %364, %814 ], [ %364, %1498 ], [ %364, %1515 ], [ %364, %1514 ], [ %364, %1490 ], [ %364, %1562 ], [ %364, %1570 ], [ %364, %396 ], [ %364, %393 ], [ %364, %398 ], [ %364, %403 ], [ %364, %449 ], [ %364, %600 ], [ %364, %550 ], [ %364, %558 ], [ 0, %1714 ], [ 0, %1736 ], [ 0, %1742 ], [ 0, %1719 ], [ 0, %1721 ], [ 0, %1690 ], [ %364, %390 ]
  br i1 %43, label %1821, label %1763

1763:                                             ; preds = %1751
  %1764 = load ptr, ptr %62, align 8, !tbaa !138
  br label %1765

1765:                                             ; preds = %1763, %626, %631, %635, %639, %643, %643, %643
  %1766 = phi ptr [ %1764, %1763 ], [ %624, %643 ], [ %624, %643 ], [ %624, %643 ], [ %624, %639 ], [ %624, %635 ], [ %624, %631 ], [ %624, %626 ]
  %1767 = phi i64 [ %1762, %1763 ], [ %364, %643 ], [ %364, %643 ], [ %364, %643 ], [ %364, %639 ], [ %364, %635 ], [ %364, %631 ], [ %364, %626 ]
  %1768 = phi i8 [ %1761, %1763 ], [ %362, %643 ], [ %362, %643 ], [ %362, %643 ], [ %362, %639 ], [ %362, %635 ], [ %362, %631 ], [ %362, %626 ]
  %1769 = phi i64 [ %1760, %1763 ], [ %369, %643 ], [ %369, %643 ], [ %369, %643 ], [ %369, %639 ], [ %369, %635 ], [ %369, %631 ], [ %369, %626 ]
  %1770 = phi ptr [ %1759, %1763 ], [ %357, %643 ], [ %357, %643 ], [ %357, %643 ], [ %357, %639 ], [ %357, %635 ], [ %357, %631 ], [ %357, %626 ]
  %1771 = phi i8 [ %1758, %1763 ], [ %354, %643 ], [ %354, %643 ], [ %354, %643 ], [ %354, %639 ], [ %354, %635 ], [ %354, %631 ], [ %354, %626 ]
  %1772 = phi i8 [ %1757, %1763 ], [ %355, %643 ], [ %355, %643 ], [ %355, %643 ], [ %355, %639 ], [ %355, %635 ], [ %355, %631 ], [ %355, %626 ]
  %1773 = phi i32 [ %1756, %1763 ], [ %367, %643 ], [ %367, %643 ], [ %367, %643 ], [ %367, %639 ], [ %367, %635 ], [ %367, %631 ], [ %367, %626 ]
  %1774 = phi i8 [ %1755, %1763 ], [ %358, %643 ], [ %358, %643 ], [ %358, %643 ], [ %358, %639 ], [ %358, %635 ], [ %358, %631 ], [ %358, %626 ]
  %1775 = phi ptr [ %1754, %1763 ], [ %359, %643 ], [ %359, %643 ], [ %359, %643 ], [ %359, %639 ], [ %359, %635 ], [ %359, %631 ], [ %359, %626 ]
  %1776 = phi i64 [ %1753, %1763 ], [ -1, %643 ], [ -1, %643 ], [ -1, %643 ], [ -1, %639 ], [ -1, %635 ], [ -1, %631 ], [ -1, %626 ]
  %1777 = phi i1 [ %1752, %1763 ], [ false, %643 ], [ false, %643 ], [ false, %643 ], [ false, %639 ], [ false, %635 ], [ false, %631 ], [ false, %626 ]
  %1778 = load ptr, ptr %41, align 8, !tbaa !140
  %1779 = icmp ugt ptr %1778, %1766
  br i1 %1779, label %1780, label %1819

1780:                                             ; preds = %1765
  %1781 = ptrtoint ptr %1778 to i64
  br label %1782

1782:                                             ; preds = %1815, %1780
  %1783 = phi ptr [ %1817, %1815 ], [ %1766, %1780 ]
  %1784 = load i8, ptr %1783, align 1, !tbaa !9
  switch i8 %1784, label %1785 [
    i8 32, label %1815
    i8 13, label %1815
    i8 12, label %1815
    i8 11, label %1815
    i8 10, label %1815
    i8 9, label %1815
  ]

1785:                                             ; preds = %1782
  %1786 = load i32, ptr %371, align 8, !tbaa !98
  %1787 = icmp eq i32 %1786, 0
  br i1 %1787, label %1813, label %1788

1788:                                             ; preds = %1785
  %1789 = ptrtoint ptr %1783 to i64
  %1790 = sub i64 %1781, %1789
  %1791 = zext i8 %1784 to i64
  %1792 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1791
  %1793 = load i8, ptr %1792, align 1, !tbaa !9
  %1794 = zext i8 %1793 to i64
  %1795 = icmp slt i64 %1790, %1794
  br i1 %1795, label %1819, label %1796

1796:                                             ; preds = %1788
  switch i8 %1784, label %1819 [
    i8 -62, label %1809
    i8 -30, label %1797
  ]

1797:                                             ; preds = %1796
  %1798 = getelementptr inbounds i8, ptr %1783, i64 1
  %1799 = load i8, ptr %1798, align 1, !tbaa !9
  %1800 = icmp eq i8 %1799, -128
  br i1 %1800, label %1801, label %1819

1801:                                             ; preds = %1797
  %1802 = getelementptr inbounds i8, ptr %1783, i64 2
  %1803 = load i8, ptr %1802, align 1, !tbaa !9
  %1804 = and i8 %1803, -2
  %1805 = icmp eq i8 %1804, -114
  %1806 = icmp eq i8 %1804, -88
  %1807 = or i1 %1805, %1806
  %1808 = freeze i1 %1807
  br i1 %1808, label %1815, label %1819

1809:                                             ; preds = %1796
  %1810 = getelementptr inbounds i8, ptr %1783, i64 1
  %1811 = load i8, ptr %1810, align 1, !tbaa !9
  %1812 = icmp eq i8 %1811, -123
  br i1 %1812, label %1815, label %1819

1813:                                             ; preds = %1785
  %1814 = icmp eq i8 %1784, -123
  br i1 %1814, label %1815, label %1819

1815:                                             ; preds = %1813, %1809, %1801, %1782, %1782, %1782, %1782, %1782, %1782
  %1816 = phi i64 [ 1, %1813 ], [ 1, %1782 ], [ 3, %1801 ], [ 2, %1809 ], [ 1, %1782 ], [ 1, %1782 ], [ 1, %1782 ], [ 1, %1782 ], [ 1, %1782 ]
  %1817 = getelementptr inbounds i8, ptr %1783, i64 %1816
  %1818 = icmp ult ptr %1817, %1778
  br i1 %1818, label %1782, label %1819

1819:                                             ; preds = %1788, %1796, %1797, %1801, %1809, %1813, %1815, %1765
  %1820 = phi ptr [ %1766, %1765 ], [ %1817, %1815 ], [ %1783, %1788 ], [ %1783, %1796 ], [ %1783, %1797 ], [ %1783, %1801 ], [ %1783, %1809 ], [ %1783, %1813 ]
  store ptr %1820, ptr %62, align 8, !tbaa !138
  br label %1821

1821:                                             ; preds = %1819, %1751
  %1822 = phi i64 [ %1767, %1819 ], [ %1762, %1751 ]
  %1823 = phi i8 [ %1768, %1819 ], [ %1761, %1751 ]
  %1824 = phi i64 [ %1769, %1819 ], [ %1760, %1751 ]
  %1825 = phi ptr [ %1770, %1819 ], [ %1759, %1751 ]
  %1826 = phi i8 [ %1771, %1819 ], [ %1758, %1751 ]
  %1827 = phi i8 [ %1772, %1819 ], [ %1757, %1751 ]
  %1828 = phi i32 [ %1773, %1819 ], [ %1756, %1751 ]
  %1829 = phi i8 [ %1774, %1819 ], [ %1755, %1751 ]
  %1830 = phi ptr [ %1775, %1819 ], [ %1754, %1751 ]
  %1831 = phi i64 [ %1776, %1819 ], [ %1753, %1751 ]
  %1832 = phi i1 [ %1777, %1819 ], [ %1752, %1751 ]
  %1833 = icmp eq i64 %1822, 0
  %1834 = load i64, ptr %14, align 8, !tbaa !71
  br i1 %1833, label %1866, label %1835

1835:                                             ; preds = %1821
  %1836 = icmp ugt i64 %365, %1834
  br i1 %1836, label %1837, label %1986

1837:                                             ; preds = %1835
  %1838 = load ptr, ptr %62, align 8, !tbaa !138
  %1839 = ptrtoint ptr %1838 to i64
  %1840 = ptrtoint ptr %370 to i64
  %1841 = sub i64 %1839, %1840
  %1842 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1843 = load ptr, ptr %1842, align 8, !tbaa !108
  %1844 = ptrtoint ptr %1843 to i64
  %1845 = sub i64 %1839, %1844
  %1846 = load ptr, ptr %60, align 8, !tbaa !145
  %1847 = icmp eq ptr %1846, %70
  br i1 %1847, label %1853, label %1848

1848:                                             ; preds = %1837
  %1849 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1850 = load ptr, ptr %1849, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1850, i32 noundef 11) #21
  %1851 = load ptr, ptr %1842, align 8, !tbaa !108
  %1852 = ptrtoint ptr %1851 to i64
  br label %1853

1853:                                             ; preds = %1848, %1837
  %1854 = phi i64 [ %1852, %1848 ], [ %1844, %1837 ]
  %1855 = phi ptr [ %1851, %1848 ], [ %1843, %1837 ]
  %1856 = load i32, ptr %371, align 8, !tbaa !98
  %1857 = icmp ne i32 %1856, 0
  %1858 = zext i1 %1857 to i32
  %1859 = shl i64 %1841, 32
  %1860 = ashr exact i64 %1859, 32
  %1861 = load ptr, ptr %41, align 8, !tbaa !140
  %1862 = ptrtoint ptr %1861 to i64
  %1863 = add i64 %1845, %1854
  %1864 = sub i64 %1862, %1863
  %1865 = getelementptr inbounds i8, ptr %1855, i64 %1845
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1857, ptr noundef nonnull @.str.329, ptr nonnull poison, i32 noundef %1858, i64 noundef %1860, ptr noundef %370, i32 noundef %1858, i64 noundef %1845, ptr noundef %1855, i32 noundef %1858, i64 noundef %1864, ptr noundef %1865)
  br label %1986

1866:                                             ; preds = %1821
  br i1 %3, label %1986, label %1867

1867:                                             ; preds = %1866
  %1868 = load ptr, ptr %62, align 8, !tbaa !138
  %1869 = load i8, ptr %1868, align 1, !tbaa !9
  %1870 = icmp eq i8 %1869, 45
  br i1 %1870, label %1871, label %1986

1871:                                             ; preds = %1867
  %1872 = getelementptr inbounds i8, ptr %1868, i64 1
  %1873 = load ptr, ptr %41, align 8, !tbaa !140
  %1874 = icmp ule ptr %1873, %1872
  %1875 = select i1 %43, i1 true, i1 %1874
  br i1 %1875, label %1915, label %1876

1876:                                             ; preds = %1871
  %1877 = ptrtoint ptr %1873 to i64
  br label %1878

1878:                                             ; preds = %1911, %1876
  %1879 = phi ptr [ %1913, %1911 ], [ %1872, %1876 ]
  %1880 = load i8, ptr %1879, align 1, !tbaa !9
  switch i8 %1880, label %1881 [
    i8 32, label %1911
    i8 13, label %1911
    i8 12, label %1911
    i8 11, label %1911
    i8 10, label %1911
    i8 9, label %1911
  ]

1881:                                             ; preds = %1878
  %1882 = load i32, ptr %371, align 8, !tbaa !98
  %1883 = icmp eq i32 %1882, 0
  br i1 %1883, label %1909, label %1884

1884:                                             ; preds = %1881
  %1885 = ptrtoint ptr %1879 to i64
  %1886 = sub i64 %1877, %1885
  %1887 = zext i8 %1880 to i64
  %1888 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1887
  %1889 = load i8, ptr %1888, align 1, !tbaa !9
  %1890 = zext i8 %1889 to i64
  %1891 = icmp slt i64 %1886, %1890
  br i1 %1891, label %1915, label %1892

1892:                                             ; preds = %1884
  switch i8 %1880, label %1915 [
    i8 -62, label %1905
    i8 -30, label %1893
  ]

1893:                                             ; preds = %1892
  %1894 = getelementptr inbounds i8, ptr %1879, i64 1
  %1895 = load i8, ptr %1894, align 1, !tbaa !9
  %1896 = icmp eq i8 %1895, -128
  br i1 %1896, label %1897, label %1915

1897:                                             ; preds = %1893
  %1898 = getelementptr inbounds i8, ptr %1879, i64 2
  %1899 = load i8, ptr %1898, align 1, !tbaa !9
  %1900 = and i8 %1899, -2
  %1901 = icmp eq i8 %1900, -114
  %1902 = icmp eq i8 %1900, -88
  %1903 = or i1 %1901, %1902
  %1904 = freeze i1 %1903
  br i1 %1904, label %1911, label %1915

1905:                                             ; preds = %1892
  %1906 = getelementptr inbounds i8, ptr %1879, i64 1
  %1907 = load i8, ptr %1906, align 1, !tbaa !9
  %1908 = icmp eq i8 %1907, -123
  br i1 %1908, label %1911, label %1915

1909:                                             ; preds = %1881
  %1910 = icmp eq i8 %1880, -123
  br i1 %1910, label %1911, label %1915

1911:                                             ; preds = %1909, %1905, %1897, %1878, %1878, %1878, %1878, %1878, %1878
  %1912 = phi i64 [ 1, %1909 ], [ 1, %1878 ], [ 3, %1897 ], [ 2, %1905 ], [ 1, %1878 ], [ 1, %1878 ], [ 1, %1878 ], [ 1, %1878 ], [ 1, %1878 ]
  %1913 = getelementptr inbounds i8, ptr %1879, i64 %1912
  %1914 = icmp ult ptr %1913, %1873
  br i1 %1914, label %1878, label %1915

1915:                                             ; preds = %1911, %1909, %1905, %1897, %1893, %1892, %1884, %1871
  %1916 = phi ptr [ %1872, %1871 ], [ %1913, %1911 ], [ %1879, %1884 ], [ %1879, %1892 ], [ %1879, %1893 ], [ %1879, %1897 ], [ %1879, %1905 ], [ %1879, %1909 ]
  %1917 = icmp ult ptr %1916, %1873
  br i1 %1917, label %1918, label %1986

1918:                                             ; preds = %1915
  %1919 = load i8, ptr %1916, align 1, !tbaa !9
  %1920 = icmp eq i8 %1919, 93
  br i1 %1920, label %1986, label %1921

1921:                                             ; preds = %1918
  store ptr %1916, ptr %62, align 8, !tbaa !138
  br i1 %1832, label %1922, label %283

1922:                                             ; preds = %1921
  br i1 %6, label %1928, label %1923

1923:                                             ; preds = %1922
  %1924 = load ptr, ptr %60, align 8, !tbaa !145
  %1925 = icmp eq ptr %1924, %70
  br i1 %1925, label %1978, label %1926

1926:                                             ; preds = %1923
  %1927 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #21
  br i1 %1927, label %1956, label %1978

1928:                                             ; preds = %1922
  %1929 = icmp ult ptr %1916, %370
  %1930 = ptrtoint ptr %1916 to i64
  %1931 = ptrtoint ptr %370 to i64
  %1932 = sub i64 %1930, %1931
  %1933 = trunc i64 %1932 to i32
  %1934 = select i1 %1929, i32 0, i32 %1933
  %1935 = load ptr, ptr %60, align 8, !tbaa !145
  %1936 = icmp eq ptr %1935, %70
  br i1 %1936, label %1943, label %1937

1937:                                             ; preds = %1928
  %1938 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1939 = load ptr, ptr %1938, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %1939, i32 noundef 11) #21
  %1940 = load ptr, ptr %62, align 8, !tbaa !138
  %1941 = load ptr, ptr %41, align 8, !tbaa !140
  %1942 = ptrtoint ptr %1940 to i64
  br label %1943

1943:                                             ; preds = %1928, %1937
  %1944 = phi i64 [ %1930, %1928 ], [ %1942, %1937 ]
  %1945 = phi ptr [ %1873, %1928 ], [ %1941, %1937 ]
  %1946 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1947 = load ptr, ptr %1946, align 8, !tbaa !108
  %1948 = ptrtoint ptr %1947 to i64
  %1949 = sub i64 %1944, %1948
  %1950 = load i32, ptr %371, align 8, !tbaa !98
  %1951 = icmp ne i32 %1950, 0
  %1952 = zext i1 %1951 to i32
  %1953 = ptrtoint ptr %1945 to i64
  %1954 = sub i64 %1953, %1944
  %1955 = getelementptr inbounds i8, ptr %1947, i64 %1949
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1951, ptr noundef nonnull @.str.330, ptr nonnull poison, i32 noundef %1934, i32 noundef %1934, ptr noundef %370, i32 noundef %1952, i64 noundef %1949, ptr noundef %1947, i32 noundef %1952, i64 noundef %1954, ptr noundef %1955)
  br label %1978

1956:                                             ; preds = %1926
  %1957 = load ptr, ptr %60, align 8, !tbaa !145
  %1958 = icmp eq ptr %1957, %70
  br i1 %1958, label %1978, label %1959

1959:                                             ; preds = %1956
  %1960 = load ptr, ptr %62, align 8, !tbaa !138
  %1961 = ptrtoint ptr %1960 to i64
  %1962 = ptrtoint ptr %370 to i64
  %1963 = sub i64 %1961, %1962
  %1964 = icmp ult ptr %1960, %370
  %1965 = trunc i64 %1963 to i32
  %1966 = select i1 %1964, i32 0, i32 %1965
  %1967 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1968 = load ptr, ptr %1967, align 8, !tbaa !108
  %1969 = ptrtoint ptr %1968 to i64
  %1970 = sub i64 %1961, %1969
  %1971 = load i32, ptr %371, align 8, !tbaa !98
  %1972 = icmp ne i32 %1971, 0
  %1973 = zext i1 %1972 to i32
  %1974 = load ptr, ptr %41, align 8, !tbaa !140
  %1975 = ptrtoint ptr %1974 to i64
  %1976 = sub i64 %1975, %1961
  %1977 = getelementptr inbounds i8, ptr %1968, i64 %1970
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.331, i32 noundef %1966, i32 noundef %1966, ptr noundef %370, i32 noundef %1973, i64 noundef %1970, ptr noundef %1968, i32 noundef %1973, i64 noundef %1976, ptr noundef %1977) #21
  br label %1978

1978:                                             ; preds = %1943, %1959, %1956, %1926, %1923
  %1979 = load ptr, ptr %60, align 8, !tbaa !145
  %1980 = icmp eq ptr %1979, %70
  br i1 %1980, label %1984, label %1981

1981:                                             ; preds = %1978
  %1982 = load ptr, ptr %21, align 8, !tbaa !5
  %1983 = call ptr @Perl__add_range_to_invlist(ptr noundef %1982, i64 noundef 45, i64 noundef 45)
  store ptr %1983, ptr %21, align 8, !tbaa !5
  br label %1984

1984:                                             ; preds = %1981, %1978
  %1985 = add i64 %1824, 1
  br label %283

1986:                                             ; preds = %1915, %1918, %1866, %1867, %1835, %1853
  %1987 = phi i64 [ %1822, %1853 ], [ %1822, %1835 ], [ 0, %1866 ], [ 0, %1867 ], [ 0, %1918 ], [ 0, %1915 ]
  %1988 = phi i64 [ %365, %1853 ], [ %365, %1835 ], [ %1834, %1866 ], [ %1834, %1867 ], [ %1834, %1918 ], [ %1834, %1915 ]
  br i1 %1832, label %283, label %1989

1989:                                             ; preds = %1986
  %1990 = load i64, ptr %14, align 8, !tbaa !71
  %1991 = icmp ugt i64 %1990, 255
  br i1 %1991, label %1992, label %1994

1992:                                             ; preds = %1989
  %1993 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %1993, align 8, !tbaa !99
  br label %1994

1994:                                             ; preds = %1992, %1989
  %1995 = load i32, ptr %0, align 8, !tbaa !109
  %1996 = and i32 %1995, 4
  %1997 = icmp ne i32 %1996, 0
  %1998 = and i1 %218, %1997
  %1999 = icmp eq i64 %1990, %1988
  %2000 = select i1 %1998, i1 %1999, i1 false
  br i1 %2000, label %2001, label %2106

2001:                                             ; preds = %1994
  %2002 = icmp eq i64 %1988, 223
  br i1 %2002, label %2069, label %2003

2003:                                             ; preds = %2001
  br i1 %1991, label %2004, label %2106

2004:                                             ; preds = %2003
  %2005 = load ptr, ptr @PL_HasMultiCharFold, align 8, !tbaa !5
  %2006 = load ptr, ptr %2005, align 8, !tbaa !63
  %2007 = getelementptr inbounds %struct.xpv, ptr %2006, i64 0, i32 2
  %2008 = load i64, ptr %2007, align 8, !tbaa !72
  %2009 = icmp eq i64 %2008, 0
  br i1 %2009, label %2106, label %2010

2010:                                             ; preds = %2004
  %2011 = lshr i64 %2008, 3
  %2012 = getelementptr %struct.xpvinvlist, ptr %2006, i64 0, i32 6
  %2013 = load i8, ptr %2012, align 1, !tbaa !57, !range !59, !noundef !60
  %2014 = zext i8 %2013 to i64
  %2015 = xor i64 %2014, -1
  %2016 = add nsw i64 %2011, %2015
  %2017 = icmp eq i64 %2011, %2014
  br i1 %2017, label %2106, label %2018

2018:                                             ; preds = %2010
  %2019 = getelementptr i8, ptr %2005, i64 16
  %2020 = load ptr, ptr %2019, align 8, !tbaa !9
  %2021 = getelementptr inbounds i64, ptr %2020, i64 %2014
  %2022 = getelementptr i8, ptr %2006, i64 32
  %2023 = load i64, ptr %2022, align 8, !tbaa !71
  %2024 = getelementptr inbounds i64, ptr %2021, i64 %2023
  %2025 = load i64, ptr %2024, align 8, !tbaa !71
  %2026 = icmp ugt i64 %2025, %1988
  br i1 %2026, label %2036, label %2027

2027:                                             ; preds = %2018
  %2028 = getelementptr inbounds i64, ptr %2021, i64 %2016
  %2029 = load i64, ptr %2028, align 8, !tbaa !71
  %2030 = icmp ugt i64 %2029, %1988
  br i1 %2030, label %2031, label %2063

2031:                                             ; preds = %2027
  %2032 = add nsw i64 %2023, 1
  %2033 = getelementptr inbounds i64, ptr %2021, i64 %2032
  %2034 = load i64, ptr %2033, align 8, !tbaa !71
  %2035 = icmp ugt i64 %2034, %1988
  br i1 %2035, label %2063, label %2044

2036:                                             ; preds = %2018
  %2037 = load i64, ptr %2021, align 8, !tbaa !71
  %2038 = icmp ugt i64 %2037, %1988
  br i1 %2038, label %2106, label %2039

2039:                                             ; preds = %2036
  %2040 = add nsw i64 %2023, -1
  %2041 = getelementptr inbounds i64, ptr %2021, i64 %2040
  %2042 = load i64, ptr %2041, align 8, !tbaa !71
  %2043 = icmp ugt i64 %2042, %1988
  br i1 %2043, label %2044, label %2060

2044:                                             ; preds = %2039, %2031
  %2045 = phi i64 [ %2023, %2039 ], [ %2016, %2031 ]
  %2046 = phi i64 [ 0, %2039 ], [ %2032, %2031 ]
  %2047 = icmp slt i64 %2046, %2045
  br i1 %2047, label %2048, label %2060

2048:                                             ; preds = %2044, %2048
  %2049 = phi i64 [ %2058, %2048 ], [ %2046, %2044 ]
  %2050 = phi i64 [ %2057, %2048 ], [ %2045, %2044 ]
  %2051 = add nsw i64 %2050, %2049
  %2052 = sdiv i64 %2051, 2
  %2053 = getelementptr inbounds i64, ptr %2021, i64 %2052
  %2054 = load i64, ptr %2053, align 8, !tbaa !71
  %2055 = icmp ugt i64 %2054, %1988
  %2056 = add nsw i64 %2052, 1
  %2057 = select i1 %2055, i64 %2052, i64 %2050
  %2058 = select i1 %2055, i64 %2049, i64 %2056
  %2059 = icmp slt i64 %2058, %2057
  br i1 %2059, label %2048, label %2060, !llvm.loop !300

2060:                                             ; preds = %2048, %2044, %2039
  %2061 = phi i64 [ %2023, %2039 ], [ %2045, %2044 ], [ %2057, %2048 ]
  %2062 = add nsw i64 %2061, -1
  store i64 %2062, ptr %2022, align 8, !tbaa !71
  br label %2063

2063:                                             ; preds = %2027, %2031, %2060
  %2064 = phi i64 [ %2062, %2060 ], [ %2016, %2027 ], [ %2023, %2031 ]
  %2065 = and i64 %2064, -9223372036854775807
  %2066 = icmp eq i64 %2065, 0
  br i1 %2066, label %2067, label %2106

2067:                                             ; preds = %2063
  %2068 = load i64, ptr %14, align 8, !tbaa !71
  br label %2069

2069:                                             ; preds = %2067, %2001
  %2070 = phi i64 [ %2068, %2067 ], [ 223, %2001 ]
  call void @llvm.lifetime.start.p0(i64 13, ptr nonnull %28) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %29) #21
  %2071 = and i32 %1995, 896
  %2072 = icmp eq i32 %2071, 512
  %2073 = select i1 %2072, i8 6, i8 2
  %2074 = call i64 @Perl__to_uni_fold_flags(i64 noundef %2070, ptr noundef nonnull %28, ptr noundef nonnull %29, i8 noundef zeroext %2073) #21
  %2075 = load i64, ptr %14, align 8, !tbaa !71
  %2076 = icmp eq i64 %2074, %2075
  br i1 %2076, label %2077, label %2078

2077:                                             ; preds = %2069
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %29) #21
  call void @llvm.lifetime.end.p0(i64 13, ptr nonnull %28) #21
  br label %2106

2078:                                             ; preds = %2069
  %2079 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 37
  %2080 = load i32, ptr %2079, align 4, !tbaa !137
  %2081 = icmp eq i32 %2080, 0
  br i1 %2081, label %2082, label %2103

2082:                                             ; preds = %2078
  %2083 = load i64, ptr %29, align 8, !tbaa !71
  %2084 = getelementptr inbounds i8, ptr %28, i64 %2083
  %2085 = call i64 @Perl_utf8_length(ptr noundef nonnull %28, ptr noundef nonnull %2084) #21
  %2086 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.178, i64 noundef 0) #21
  %2087 = call ptr @Perl_sv_2mortal(ptr noundef %2086) #21
  %2088 = load i64, ptr %14, align 8, !tbaa !71
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %2087, ptr noundef nonnull @.str.332, i64 noundef %2088) #21
  %2089 = icmp eq ptr %360, null
  br i1 %2089, label %2090, label %2092

2090:                                             ; preds = %2082
  %2091 = call ptr @Perl_newSV_type(i32 noundef 11) #21
  br label %2092

2092:                                             ; preds = %2090, %2082
  %2093 = phi ptr [ %360, %2082 ], [ %2091, %2090 ]
  %2094 = call zeroext i1 @Perl_av_exists(ptr noundef %2093, i64 noundef %2085) #21
  br i1 %2094, label %2095, label %2098

2095:                                             ; preds = %2092
  %2096 = call ptr @Perl_av_fetch(ptr noundef %2093, i64 noundef %2085, i32 noundef 0) #21
  %2097 = load ptr, ptr %2096, align 8, !tbaa !5
  br label %2101

2098:                                             ; preds = %2092
  %2099 = call ptr @Perl_newSV_type(i32 noundef 11) #21
  %2100 = call ptr @Perl_av_store(ptr noundef %2093, i64 noundef %2085, ptr noundef %2099) #21
  br label %2101

2101:                                             ; preds = %2095, %2098
  %2102 = phi ptr [ %2097, %2095 ], [ %2099, %2098 ]
  call void @Perl_av_push(ptr noundef %2102, ptr noundef %2087) #21
  br label %2103

2103:                                             ; preds = %2078, %2101
  %2104 = phi ptr [ %360, %2078 ], [ %2093, %2101 ]
  %2105 = add i64 %1824, -1
  store i64 %353, ptr %14, align 8, !tbaa !71
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %29) #21
  call void @llvm.lifetime.end.p0(i64 13, ptr nonnull %28) #21
  br label %283

2106:                                             ; preds = %2004, %2036, %2010, %2077, %1994, %2003, %2063
  br i1 %6, label %2107, label %2406

2107:                                             ; preds = %2106
  %2108 = load ptr, ptr %60, align 8, !tbaa !145
  %2109 = icmp eq ptr %2108, %70
  br i1 %2109, label %2406, label %2110

2110:                                             ; preds = %2107
  %2111 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #21
  br i1 %2111, label %2112, label %2406

2112:                                             ; preds = %2110
  %2113 = icmp eq i64 %1987, 0
  br i1 %2113, label %2338, label %2114

2114:                                             ; preds = %2112
  %2115 = and i8 %1827, 1
  %2116 = icmp ne i8 %2115, 0
  %2117 = icmp ne i32 %1828, 0
  %2118 = select i1 %2116, i1 %2117, i1 false
  %2119 = icmp ult i64 %1988, 256
  %2120 = select i1 %2118, i1 %2119, i1 false
  br i1 %2120, label %2121, label %2135

2121:                                             ; preds = %2114
  %2122 = load ptr, ptr %62, align 8, !tbaa !138
  %2123 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2124 = load ptr, ptr %2123, align 8, !tbaa !108
  %2125 = ptrtoint ptr %2122 to i64
  %2126 = ptrtoint ptr %2124 to i64
  %2127 = sub i64 %2125, %2126
  %2128 = load i32, ptr %371, align 8, !tbaa !98
  %2129 = icmp ne i32 %2128, 0
  %2130 = zext i1 %2129 to i32
  %2131 = load ptr, ptr %41, align 8, !tbaa !140
  %2132 = ptrtoint ptr %2131 to i64
  %2133 = sub i64 %2132, %2125
  %2134 = getelementptr inbounds i8, ptr %2124, i64 %2127
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.333, i32 noundef %2130, i64 noundef %2127, ptr noundef %2124, i32 noundef %2130, i64 noundef %2133, ptr noundef %2134) #21
  br label %2334

2135:                                             ; preds = %2114
  %2136 = load i64, ptr %14, align 8, !tbaa !71
  %2137 = icmp eq i64 %1988, %2136
  br i1 %2137, label %2334, label %2138

2138:                                             ; preds = %2135
  br i1 %2119, label %2139, label %2144

2139:                                             ; preds = %2138
  %2140 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1988
  %2141 = load i32, ptr %2140, align 4, !tbaa !150
  %2142 = and i32 %2141, 16448
  %2143 = icmp eq i32 %2142, 16448
  br i1 %2143, label %2151, label %2144

2144:                                             ; preds = %2139, %2138
  %2145 = icmp ult i64 %2136, 256
  br i1 %2145, label %2146, label %2198

2146:                                             ; preds = %2144
  %2147 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2136
  %2148 = load i32, ptr %2147, align 4, !tbaa !150
  %2149 = and i32 %2148, 16448
  %2150 = icmp eq i32 %2149, 16448
  br i1 %2150, label %2151, label %2198

2151:                                             ; preds = %2146, %2139
  %2152 = xor i1 %2119, true
  %2153 = or i1 %2117, %2152
  br i1 %2153, label %2184, label %2154

2154:                                             ; preds = %2151
  %2155 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1988
  %2156 = load i32, ptr %2155, align 4, !tbaa !150
  %2157 = and i32 %2156, 2
  %2158 = icmp ne i32 %2157, 0
  %2159 = icmp ult i64 %2136, 256
  %2160 = and i1 %2159, %2158
  br i1 %2160, label %2161, label %2166

2161:                                             ; preds = %2154
  %2162 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2136
  %2163 = load i32, ptr %2162, align 4, !tbaa !150
  %2164 = and i32 %2163, 2
  %2165 = icmp eq i32 %2164, 0
  br i1 %2165, label %2166, label %2406

2166:                                             ; preds = %2154, %2161
  %2167 = and i32 %2156, 16392
  %2168 = icmp eq i32 %2167, 16392
  %2169 = and i1 %2159, %2168
  br i1 %2169, label %2170, label %2175

2170:                                             ; preds = %2166
  %2171 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2136
  %2172 = load i32, ptr %2171, align 4, !tbaa !150
  %2173 = and i32 %2172, 16392
  %2174 = icmp eq i32 %2173, 16392
  br i1 %2174, label %2406, label %2175

2175:                                             ; preds = %2166, %2170
  %2176 = and i32 %2156, 16400
  %2177 = icmp eq i32 %2176, 16400
  %2178 = and i1 %2159, %2177
  br i1 %2178, label %2179, label %2184

2179:                                             ; preds = %2175
  %2180 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2136
  %2181 = load i32, ptr %2180, align 4, !tbaa !150
  %2182 = and i32 %2181, 16400
  %2183 = icmp eq i32 %2182, 16400
  br i1 %2183, label %2406, label %2184

2184:                                             ; preds = %2151, %2175, %2179
  %2185 = load ptr, ptr %62, align 8, !tbaa !138
  %2186 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2187 = load ptr, ptr %2186, align 8, !tbaa !108
  %2188 = ptrtoint ptr %2185 to i64
  %2189 = ptrtoint ptr %2187 to i64
  %2190 = sub i64 %2188, %2189
  %2191 = load i32, ptr %371, align 8, !tbaa !98
  %2192 = icmp ne i32 %2191, 0
  %2193 = zext i1 %2192 to i32
  %2194 = load ptr, ptr %41, align 8, !tbaa !140
  %2195 = ptrtoint ptr %2194 to i64
  %2196 = sub i64 %2195, %2188
  %2197 = getelementptr inbounds i8, ptr %2187, i64 %2190
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.334, i32 noundef %2193, i64 noundef %2190, ptr noundef %2187, i32 noundef %2193, i64 noundef %2196, ptr noundef %2197) #21
  br label %2334

2198:                                             ; preds = %2146, %2144
  %2199 = icmp ugt i64 %1988, 1631
  br i1 %2199, label %2200, label %2334

2200:                                             ; preds = %2198
  %2201 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2202 = load ptr, ptr %2201, align 8, !tbaa !63
  %2203 = getelementptr inbounds %struct.xpv, ptr %2202, i64 0, i32 2
  %2204 = load i64, ptr %2203, align 8, !tbaa !72
  %2205 = icmp eq i64 %2204, 0
  br i1 %2205, label %2334, label %2206

2206:                                             ; preds = %2200
  %2207 = lshr i64 %2204, 3
  %2208 = getelementptr %struct.xpvinvlist, ptr %2202, i64 0, i32 6
  %2209 = load i8, ptr %2208, align 1, !tbaa !57, !range !59, !noundef !60
  %2210 = zext i8 %2209 to i64
  %2211 = xor i64 %2210, -1
  %2212 = add nsw i64 %2207, %2211
  %2213 = icmp eq i64 %2207, %2210
  br i1 %2213, label %2334, label %2214

2214:                                             ; preds = %2206
  %2215 = getelementptr i8, ptr %2201, i64 16
  %2216 = load ptr, ptr %2215, align 8, !tbaa !9
  %2217 = getelementptr inbounds i64, ptr %2216, i64 %2210
  %2218 = getelementptr i8, ptr %2202, i64 32
  %2219 = load i64, ptr %2218, align 8, !tbaa !71
  %2220 = getelementptr inbounds i64, ptr %2217, i64 %2219
  %2221 = load i64, ptr %2220, align 8, !tbaa !71
  %2222 = icmp ugt i64 %2221, %1988
  br i1 %2222, label %2232, label %2223

2223:                                             ; preds = %2214
  %2224 = getelementptr inbounds i64, ptr %2217, i64 %2212
  %2225 = load i64, ptr %2224, align 8, !tbaa !71
  %2226 = icmp ugt i64 %2225, %1988
  br i1 %2226, label %2227, label %2263

2227:                                             ; preds = %2223
  %2228 = add nsw i64 %2219, 1
  %2229 = getelementptr inbounds i64, ptr %2217, i64 %2228
  %2230 = load i64, ptr %2229, align 8, !tbaa !71
  %2231 = icmp ugt i64 %2230, %1988
  br i1 %2231, label %2263, label %2240

2232:                                             ; preds = %2214
  %2233 = load i64, ptr %2217, align 8, !tbaa !71
  %2234 = icmp ugt i64 %2233, %1988
  br i1 %2234, label %2263, label %2235

2235:                                             ; preds = %2232
  %2236 = add nsw i64 %2219, -1
  %2237 = getelementptr inbounds i64, ptr %2217, i64 %2236
  %2238 = load i64, ptr %2237, align 8, !tbaa !71
  %2239 = icmp ugt i64 %2238, %1988
  br i1 %2239, label %2240, label %2256

2240:                                             ; preds = %2235, %2227
  %2241 = phi i64 [ %2219, %2235 ], [ %2212, %2227 ]
  %2242 = phi i64 [ 0, %2235 ], [ %2228, %2227 ]
  %2243 = icmp slt i64 %2242, %2241
  br i1 %2243, label %2244, label %2256

2244:                                             ; preds = %2240, %2244
  %2245 = phi i64 [ %2254, %2244 ], [ %2242, %2240 ]
  %2246 = phi i64 [ %2253, %2244 ], [ %2241, %2240 ]
  %2247 = add nsw i64 %2246, %2245
  %2248 = sdiv i64 %2247, 2
  %2249 = getelementptr inbounds i64, ptr %2217, i64 %2248
  %2250 = load i64, ptr %2249, align 8, !tbaa !71
  %2251 = icmp ugt i64 %2250, %1988
  %2252 = add nsw i64 %2248, 1
  %2253 = select i1 %2251, i64 %2248, i64 %2246
  %2254 = select i1 %2251, i64 %2245, i64 %2252
  %2255 = icmp slt i64 %2254, %2253
  br i1 %2255, label %2244, label %2260, !llvm.loop !300

2256:                                             ; preds = %2235, %2240
  %2257 = phi i64 [ %2241, %2240 ], [ %2219, %2235 ]
  %2258 = add nsw i64 %2257, -1
  store i64 %2258, ptr %2218, align 8, !tbaa !71
  %2259 = load i64, ptr %14, align 8, !tbaa !71
  br label %2263

2260:                                             ; preds = %2244
  %2261 = add nsw i64 %2253, -1
  store i64 %2261, ptr %2218, align 8, !tbaa !71
  %2262 = load i64, ptr %14, align 8, !tbaa !71
  br i1 %2213, label %2310, label %2263

2263:                                             ; preds = %2223, %2227, %2232, %2256, %2260
  %2264 = phi i64 [ %2261, %2260 ], [ %2258, %2256 ], [ %2212, %2223 ], [ %2219, %2227 ], [ -1, %2232 ]
  %2265 = phi i64 [ %2262, %2260 ], [ %2259, %2256 ], [ %2136, %2223 ], [ %2136, %2227 ], [ %2136, %2232 ]
  %2266 = getelementptr i8, ptr %2201, i64 16
  %2267 = load ptr, ptr %2266, align 8, !tbaa !9
  %2268 = getelementptr inbounds i64, ptr %2267, i64 %2210
  %2269 = getelementptr i8, ptr %2202, i64 32
  %2270 = load i64, ptr %2269, align 8, !tbaa !71
  %2271 = getelementptr inbounds i64, ptr %2268, i64 %2270
  %2272 = load i64, ptr %2271, align 8, !tbaa !71
  %2273 = icmp ugt i64 %2272, %2265
  br i1 %2273, label %2283, label %2274

2274:                                             ; preds = %2263
  %2275 = getelementptr inbounds i64, ptr %2268, i64 %2212
  %2276 = load i64, ptr %2275, align 8, !tbaa !71
  %2277 = icmp ugt i64 %2276, %2265
  br i1 %2277, label %2278, label %2310

2278:                                             ; preds = %2274
  %2279 = add nsw i64 %2270, 1
  %2280 = getelementptr inbounds i64, ptr %2268, i64 %2279
  %2281 = load i64, ptr %2280, align 8, !tbaa !71
  %2282 = icmp ugt i64 %2281, %2265
  br i1 %2282, label %2310, label %2291

2283:                                             ; preds = %2263
  %2284 = load i64, ptr %2268, align 8, !tbaa !71
  %2285 = icmp ugt i64 %2284, %2265
  br i1 %2285, label %2310, label %2286

2286:                                             ; preds = %2283
  %2287 = add nsw i64 %2270, -1
  %2288 = getelementptr inbounds i64, ptr %2268, i64 %2287
  %2289 = load i64, ptr %2288, align 8, !tbaa !71
  %2290 = icmp ugt i64 %2289, %2265
  br i1 %2290, label %2291, label %2307

2291:                                             ; preds = %2286, %2278
  %2292 = phi i64 [ %2270, %2286 ], [ %2212, %2278 ]
  %2293 = phi i64 [ 0, %2286 ], [ %2279, %2278 ]
  %2294 = icmp slt i64 %2293, %2292
  br i1 %2294, label %2295, label %2307

2295:                                             ; preds = %2291, %2295
  %2296 = phi i64 [ %2305, %2295 ], [ %2293, %2291 ]
  %2297 = phi i64 [ %2304, %2295 ], [ %2292, %2291 ]
  %2298 = add nsw i64 %2297, %2296
  %2299 = sdiv i64 %2298, 2
  %2300 = getelementptr inbounds i64, ptr %2268, i64 %2299
  %2301 = load i64, ptr %2300, align 8, !tbaa !71
  %2302 = icmp ugt i64 %2301, %2265
  %2303 = add nsw i64 %2299, 1
  %2304 = select i1 %2302, i64 %2299, i64 %2297
  %2305 = select i1 %2302, i64 %2296, i64 %2303
  %2306 = icmp slt i64 %2305, %2304
  br i1 %2306, label %2295, label %2307, !llvm.loop !300

2307:                                             ; preds = %2295, %2291, %2286
  %2308 = phi i64 [ %2270, %2286 ], [ %2292, %2291 ], [ %2304, %2295 ]
  %2309 = add nsw i64 %2308, -1
  store i64 %2309, ptr %2269, align 8, !tbaa !71
  br label %2310

2310:                                             ; preds = %2260, %2274, %2278, %2283, %2307
  %2311 = phi i64 [ %2264, %2307 ], [ %2261, %2260 ], [ %2264, %2274 ], [ %2264, %2278 ], [ %2264, %2283 ]
  %2312 = phi i64 [ %2309, %2307 ], [ -1, %2260 ], [ %2212, %2274 ], [ %2270, %2278 ], [ -1, %2283 ]
  %2313 = icmp eq i64 %2311, %2312
  br i1 %2313, label %2334, label %2314

2314:                                             ; preds = %2310
  %2315 = and i64 %2311, -9223372036854775807
  %2316 = icmp eq i64 %2315, 0
  %2317 = and i64 %2312, -9223372036854775807
  %2318 = icmp eq i64 %2317, 0
  %2319 = or i1 %2316, %2318
  br i1 %2319, label %2320, label %2334

2320:                                             ; preds = %2314
  %2321 = load ptr, ptr %62, align 8, !tbaa !138
  %2322 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2323 = load ptr, ptr %2322, align 8, !tbaa !108
  %2324 = ptrtoint ptr %2321 to i64
  %2325 = ptrtoint ptr %2323 to i64
  %2326 = sub i64 %2324, %2325
  %2327 = load i32, ptr %371, align 8, !tbaa !98
  %2328 = icmp ne i32 %2327, 0
  %2329 = zext i1 %2328 to i32
  %2330 = load ptr, ptr %41, align 8, !tbaa !140
  %2331 = ptrtoint ptr %2330 to i64
  %2332 = sub i64 %2331, %2324
  %2333 = getelementptr inbounds i8, ptr %2323, i64 %2326
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.335, i32 noundef %2329, i64 noundef %2326, ptr noundef %2323, i32 noundef %2329, i64 noundef %2332, ptr noundef %2333) #21
  br label %2334

2334:                                             ; preds = %2206, %2314, %2200, %2135, %2198, %2184, %2121, %2320, %2310
  %2335 = load i64, ptr %14, align 8
  %2336 = icmp eq i64 %1988, %2335
  %2337 = select i1 %2336, i1 %2117, i1 false
  br i1 %2337, label %2342, label %2406

2338:                                             ; preds = %2112
  %2339 = icmp eq i32 %1828, 0
  br i1 %2339, label %2406, label %2340

2340:                                             ; preds = %2338
  %2341 = load i64, ptr %14, align 8
  br label %2342

2342:                                             ; preds = %2340, %2334
  %2343 = phi i64 [ %2341, %2340 ], [ %1988, %2334 ]
  %2344 = icmp ult i64 %2343, 256
  br i1 %2344, label %2345, label %2406

2345:                                             ; preds = %2342
  %2346 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2343
  %2347 = load i32, ptr %2346, align 4, !tbaa !150
  %2348 = and i32 %2347, 16448
  %2349 = icmp eq i32 %2348, 16448
  br i1 %2349, label %2350, label %2376

2350:                                             ; preds = %2345
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %30) #21
  switch i64 %2343, label %2352 [
    i64 94, label %2351
    i64 93, label %2351
    i64 92, label %2351
    i64 45, label %2351
  ]

2351:                                             ; preds = %2350, %2350, %2350, %2350
  store i8 92, ptr %30, align 1, !tbaa !9
  br label %2352

2352:                                             ; preds = %2350, %2351
  %2353 = phi i32 [ 1, %2351 ], [ 0, %2350 ]
  %2354 = trunc i64 %2343 to i8
  %2355 = add nuw nsw i32 %2353, 1
  %2356 = zext i32 %2353 to i64
  %2357 = getelementptr inbounds [3 x i8], ptr %30, i64 0, i64 %2356
  store i8 %2354, ptr %2357, align 1, !tbaa !9
  %2358 = zext i32 %2355 to i64
  %2359 = getelementptr inbounds [3 x i8], ptr %30, i64 0, i64 %2358
  store i8 0, ptr %2359, align 1, !tbaa !9
  %2360 = load ptr, ptr %62, align 8, !tbaa !138
  %2361 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2362 = load ptr, ptr %2361, align 8, !tbaa !108
  %2363 = ptrtoint ptr %2360 to i64
  %2364 = ptrtoint ptr %2362 to i64
  %2365 = sub i64 %2363, %2364
  %2366 = ptrtoint ptr %370 to i64
  %2367 = sub i64 %2363, %2366
  %2368 = trunc i64 %2367 to i32
  %2369 = load i32, ptr %371, align 8, !tbaa !98
  %2370 = icmp ne i32 %2369, 0
  %2371 = zext i1 %2370 to i32
  %2372 = load ptr, ptr %41, align 8, !tbaa !140
  %2373 = ptrtoint ptr %2372 to i64
  %2374 = sub i64 %2373, %2363
  %2375 = getelementptr inbounds i8, ptr %2362, i64 %2365
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.336, i32 noundef %2368, ptr noundef %370, ptr noundef nonnull %30, i32 noundef %2371, i64 noundef %2365, ptr noundef %2362, i32 noundef %2371, i64 noundef %2374, ptr noundef %2375) #21
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %30) #21
  br label %2406

2376:                                             ; preds = %2345
  %2377 = and i32 %2347, 8388608
  %2378 = icmp eq i32 %2377, 0
  br i1 %2378, label %2406, label %2379

2379:                                             ; preds = %2376
  %2380 = trunc i64 %2343 to i8
  %2381 = load ptr, ptr %62, align 8, !tbaa !138
  %2382 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2383 = load ptr, ptr %2382, align 8, !tbaa !108
  %2384 = ptrtoint ptr %2381 to i64
  %2385 = ptrtoint ptr %2383 to i64
  %2386 = sub i64 %2384, %2385
  %2387 = ptrtoint ptr %370 to i64
  %2388 = sub i64 %2384, %2387
  %2389 = trunc i64 %2388 to i32
  switch i8 %2380, label %2396 [
    i8 7, label %2397
    i8 8, label %2390
    i8 27, label %2391
    i8 12, label %2392
    i8 10, label %2393
    i8 13, label %2394
    i8 9, label %2395
  ]

2390:                                             ; preds = %2379
  br label %2397

2391:                                             ; preds = %2379
  br label %2397

2392:                                             ; preds = %2379
  br label %2397

2393:                                             ; preds = %2379
  br label %2397

2394:                                             ; preds = %2379
  br label %2397

2395:                                             ; preds = %2379
  br label %2397

2396:                                             ; preds = %2379
  br label %2397

2397:                                             ; preds = %2379, %2390, %2391, %2392, %2393, %2394, %2395, %2396
  %2398 = phi ptr [ null, %2396 ], [ @.str.366, %2395 ], [ @.str.365, %2394 ], [ @.str.364, %2393 ], [ @.str.363, %2392 ], [ @.str.362, %2391 ], [ @.str.361, %2390 ], [ @.str.360, %2379 ]
  %2399 = load i32, ptr %371, align 8, !tbaa !98
  %2400 = icmp ne i32 %2399, 0
  %2401 = zext i1 %2400 to i32
  %2402 = load ptr, ptr %41, align 8, !tbaa !140
  %2403 = ptrtoint ptr %2402 to i64
  %2404 = sub i64 %2403, %2384
  %2405 = getelementptr inbounds i8, ptr %2383, i64 %2386
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.336, i32 noundef %2389, ptr noundef %370, ptr noundef %2398, i32 noundef %2401, i64 noundef %2386, ptr noundef %2383, i32 noundef %2401, i64 noundef %2404, ptr noundef %2405) #21
  br label %2406

2406:                                             ; preds = %2161, %2179, %2170, %2342, %2334, %2338, %2397, %2376, %2352, %2110, %2107, %2106
  %2407 = load ptr, ptr %60, align 8, !tbaa !145
  %2408 = icmp eq ptr %2407, %70
  br i1 %2408, label %283, label %2409

2409:                                             ; preds = %2406
  %2410 = load i64, ptr %14, align 8, !tbaa !71
  %2411 = call ptr @Perl__add_range_to_invlist(ptr noundef %1825, i64 noundef %1988, i64 noundef %2410)
  br label %283

2412:                                             ; preds = %1681, %345, %283
  %2413 = phi i1 [ false, %283 ], [ false, %345 ], [ true, %1681 ]
  %2414 = phi i8 [ %284, %283 ], [ %284, %345 ], [ %1583, %1681 ]
  %2415 = phi ptr [ %287, %283 ], [ %287, %345 ], [ %1645, %1681 ]
  %2416 = phi i8 [ %288, %283 ], [ %288, %345 ], [ %1582, %1681 ]
  %2417 = phi ptr [ %289, %283 ], [ %289, %345 ], [ %1581, %1681 ]
  %2418 = phi ptr [ %290, %283 ], [ %290, %345 ], [ %360, %1681 ]
  %2419 = phi i64 [ %291, %283 ], [ %291, %345 ], [ %1646, %1681 ]
  %2420 = phi i64 [ %294, %283 ], [ %294, %345 ], [ %1580, %1681 ]
  %2421 = phi i64 [ %296, %283 ], [ %296, %345 ], [ %365, %1681 ]
  %2422 = icmp eq ptr %2418, null
  br i1 %2422, label %2512, label %2423

2423:                                             ; preds = %2412
  %2424 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.337, i64 noundef 2, i32 noundef 524288) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %31) #21
  %2425 = load <2 x ptr>, ptr %41, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %32) #21
  %2426 = getelementptr inbounds %struct.sv, ptr %2418, i64 0, i32 2
  %2427 = load i32, ptr %2426, align 4, !tbaa !62
  %2428 = and i32 %2427, 8388608
  %2429 = icmp eq i32 %2428, 0
  br i1 %2429, label %2432, label %2430

2430:                                             ; preds = %2423
  %2431 = call i32 @Perl_mg_size(ptr noundef nonnull %2418) #21
  br label %2437

2432:                                             ; preds = %2423
  %2433 = load ptr, ptr %2418, align 8, !tbaa !122
  %2434 = getelementptr inbounds %struct.xpvav, ptr %2433, i64 0, i32 2
  %2435 = load i64, ptr %2434, align 8, !tbaa !124
  %2436 = trunc i64 %2435 to i32
  br label %2437

2437:                                             ; preds = %2430, %2432
  %2438 = phi i32 [ %2431, %2430 ], [ %2436, %2432 ]
  %2439 = icmp sgt i32 %2438, 0
  br i1 %2439, label %2440, label %2472

2440:                                             ; preds = %2437
  %2441 = zext i32 %2438 to i64
  br label %2442

2442:                                             ; preds = %2440, %2468
  %2443 = phi i64 [ %2441, %2440 ], [ %2471, %2468 ]
  %2444 = phi i8 [ 1, %2440 ], [ %2469, %2468 ]
  %2445 = call zeroext i1 @Perl_av_exists(ptr noundef nonnull %2418, i64 noundef %2443) #21
  br i1 %2445, label %2446, label %2468

2446:                                             ; preds = %2442
  %2447 = call ptr @Perl_av_fetch(ptr noundef nonnull %2418, i64 noundef %2443, i32 noundef 0) #21
  %2448 = load ptr, ptr %2447, align 8, !tbaa !5
  %2449 = call ptr @Perl_av_pop(ptr noundef %2448) #21
  %2450 = icmp eq ptr %2449, @PL_sv_undef
  br i1 %2450, label %2468, label %2451

2451:                                             ; preds = %2446
  %2452 = and i8 %2444, 1
  %2453 = icmp eq i8 %2452, 0
  br i1 %2453, label %2454, label %2455

2454:                                             ; preds = %2451
  call void @Perl_sv_catpv(ptr noundef %2424, ptr noundef nonnull @.str.338) #21
  br label %2455

2455:                                             ; preds = %2454, %2451
  %2456 = getelementptr inbounds %struct.sv, ptr %2449, i64 0, i32 3
  %2457 = load ptr, ptr %2456, align 8, !tbaa !9
  call void @Perl_sv_catpv(ptr noundef %2424, ptr noundef %2457) #21
  %2458 = load ptr, ptr %2447, align 8, !tbaa !5
  %2459 = call ptr @Perl_av_pop(ptr noundef %2458) #21
  %2460 = icmp eq ptr %2459, @PL_sv_undef
  br i1 %2460, label %2468, label %2461

2461:                                             ; preds = %2455, %2461
  %2462 = phi ptr [ %2466, %2461 ], [ %2459, %2455 ]
  call void @Perl_sv_catpv(ptr noundef %2424, ptr noundef nonnull @.str.338) #21
  %2463 = getelementptr inbounds %struct.sv, ptr %2462, i64 0, i32 3
  %2464 = load ptr, ptr %2463, align 8, !tbaa !9
  call void @Perl_sv_catpv(ptr noundef %2424, ptr noundef %2464) #21
  %2465 = load ptr, ptr %2447, align 8, !tbaa !5
  %2466 = call ptr @Perl_av_pop(ptr noundef %2465) #21
  %2467 = icmp eq ptr %2466, @PL_sv_undef
  br i1 %2467, label %2468, label %2461, !llvm.loop !374

2468:                                             ; preds = %2461, %2455, %2446, %2442
  %2469 = phi i8 [ %2444, %2442 ], [ %2444, %2446 ], [ 0, %2455 ], [ 0, %2461 ]
  %2470 = icmp sgt i64 %2443, 1
  %2471 = add nsw i64 %2443, -1
  br i1 %2470, label %2442, label %2472, !llvm.loop !376

2472:                                             ; preds = %2468, %2437
  %2473 = icmp eq i64 %2419, 0
  br i1 %2473, label %2479, label %2474

2474:                                             ; preds = %2472
  call void @Perl_sv_catpv(ptr noundef %2424, ptr noundef nonnull @.str.339) #21
  %2475 = load ptr, ptr %62, align 8, !tbaa !138
  %2476 = ptrtoint ptr %2475 to i64
  %2477 = ptrtoint ptr %63 to i64
  %2478 = sub i64 %2476, %2477
  call void @Perl_sv_catpvn_flags(ptr noundef %2424, ptr noundef %63, i64 noundef %2478, i32 noundef 2) #21
  call void @Perl_sv_catpv(ptr noundef %2424, ptr noundef nonnull @.str.340) #21
  br label %2479

2479:                                             ; preds = %2474, %2472
  call void @Perl_sv_catpv(ptr noundef %2424, ptr noundef nonnull @.str.341) #21
  %2480 = getelementptr inbounds %struct.sv, ptr %2424, i64 0, i32 2
  %2481 = load i32, ptr %2480, align 4, !tbaa !62
  %2482 = and i32 %2481, 2098176
  %2483 = icmp eq i32 %2482, 1024
  br i1 %2483, label %2484, label %2490

2484:                                             ; preds = %2479
  %2485 = load ptr, ptr %2424, align 8, !tbaa !63
  %2486 = getelementptr inbounds %struct.xpv, ptr %2485, i64 0, i32 2
  %2487 = load i64, ptr %2486, align 8, !tbaa !72
  store i64 %2487, ptr %31, align 8, !tbaa !71
  %2488 = getelementptr inbounds %struct.sv, ptr %2424, i64 0, i32 3
  %2489 = load ptr, ptr %2488, align 8, !tbaa !9
  br label %2493

2490:                                             ; preds = %2479
  %2491 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2424, ptr noundef nonnull %31, i32 noundef 2) #21
  %2492 = load i64, ptr %31, align 8, !tbaa !71
  br label %2493

2493:                                             ; preds = %2490, %2484
  %2494 = phi i64 [ %2487, %2484 ], [ %2492, %2490 ]
  %2495 = phi ptr [ %2489, %2484 ], [ %2491, %2490 ]
  store ptr %2495, ptr %62, align 8, !tbaa !138
  %2496 = getelementptr inbounds i8, ptr %2495, i64 %2494
  store ptr %2496, ptr %41, align 8, !tbaa !140
  %2497 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 37
  store i32 1, ptr %2497, align 4, !tbaa !137
  %2498 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  store i32 1, ptr %2498, align 8, !tbaa !136
  store ptr %61, ptr %60, align 8, !tbaa !145
  %2499 = add i32 %2, 1
  %2500 = call fastcc ptr @S_reg(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %32, i32 noundef %2499)
  %2501 = load i32, ptr %32, align 4, !tbaa !150
  %2502 = and i32 %2501, 47
  %2503 = load i32, ptr %1, align 4, !tbaa !150
  %2504 = or i32 %2503, %2502
  store i32 %2504, ptr %1, align 4, !tbaa !150
  store <2 x ptr> %2425, ptr %41, align 8, !tbaa !5
  store i32 0, ptr %2497, align 4, !tbaa !137
  store i32 0, ptr %2498, align 8, !tbaa !136
  %2505 = getelementptr inbounds %struct.sv, ptr %2418, i64 0, i32 1
  %2506 = load i32, ptr %2505, align 8, !tbaa !22
  %2507 = icmp ugt i32 %2506, 1
  br i1 %2507, label %2508, label %2510

2508:                                             ; preds = %2493
  %2509 = add i32 %2506, -1
  store i32 %2509, ptr %2505, align 8, !tbaa !22
  br label %2511

2510:                                             ; preds = %2493
  call void @Perl_sv_free2(ptr noundef nonnull %2418, i32 noundef %2506) #21
  br label %2511

2511:                                             ; preds = %2508, %2510
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %32) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %31) #21
  br label %3404

2512:                                             ; preds = %2412
  %2513 = icmp eq i64 %2419, 1
  %2514 = select i1 %2413, i1 true, i1 %2513
  %2515 = select i1 %43, i1 %2514, i1 false
  br i1 %2515, label %2516, label %2742

2516:                                             ; preds = %2512
  br i1 %2413, label %2623, label %2517

2517:                                             ; preds = %2516
  %2518 = icmp sgt i64 %2420, -1
  br i1 %2518, label %2519, label %2556

2519:                                             ; preds = %2517
  %2520 = trunc i64 %2420 to i32
  switch i32 %2520, label %2521 [
    i32 34, label %2742
    i32 33, label %2523
    i32 32, label %2523
    i32 31, label %2545
    i32 30, label %2545
    i32 28, label %2525
    i32 29, label %2525
    i32 2, label %2526
    i32 3, label %2526
    i32 24, label %2526
    i32 25, label %2526
    i32 6, label %2530
    i32 7, label %2530
    i32 8, label %2530
    i32 9, label %2530
  ]

2521:                                             ; preds = %2519
  %2522 = load i32, ptr %0, align 8, !tbaa !109
  br label %2537

2523:                                             ; preds = %2519, %2519
  %2524 = add nsw i64 %2420, -10
  br label %2545

2525:                                             ; preds = %2519, %2519
  br label %2545

2526:                                             ; preds = %2519, %2519, %2519, %2519
  %2527 = load i32, ptr %0, align 8, !tbaa !109
  %2528 = and i32 %2527, 896
  %2529 = icmp eq i32 %2528, 0
  br i1 %2529, label %2545, label %2537

2530:                                             ; preds = %2519, %2519, %2519, %2519
  %2531 = load i32, ptr %0, align 8, !tbaa !109
  %2532 = and i32 %2531, 4
  %2533 = icmp eq i32 %2532, 0
  br i1 %2533, label %2537, label %2534

2534:                                             ; preds = %2530
  %2535 = and i64 %2420, 1
  %2536 = or i64 %2535, 18
  br label %2537

2537:                                             ; preds = %2521, %2530, %2534, %2526
  %2538 = phi i32 [ %2522, %2521 ], [ %2531, %2534 ], [ %2531, %2530 ], [ %2527, %2526 ]
  %2539 = phi i64 [ %2420, %2521 ], [ %2536, %2534 ], [ %2420, %2530 ], [ %2420, %2526 ]
  %2540 = lshr i32 %2538, 7
  %2541 = trunc i32 %2540 to i8
  %2542 = and i8 %2541, 7
  %2543 = call i8 @llvm.umin.i8(i8 %2542, i8 3)
  %2544 = add nuw nsw i8 %2543, 21
  br label %2545

2545:                                             ; preds = %2526, %2523, %2519, %2519, %2537, %2525
  %2546 = phi i64 [ %2539, %2537 ], [ %2420, %2525 ], [ %2420, %2519 ], [ %2420, %2519 ], [ %2524, %2523 ], [ %2420, %2526 ]
  %2547 = phi i8 [ %2544, %2537 ], [ 24, %2525 ], [ 23, %2519 ], [ 23, %2519 ], [ 23, %2523 ], [ 23, %2526 ]
  %2548 = and i64 %2546, -9223372036854775807
  %2549 = icmp eq i64 %2548, 1
  %2550 = zext i1 %161 to i8
  %2551 = select i1 %2549, i8 %2550, i8 %217
  %2552 = sext i1 %2549 to i64
  %2553 = add nsw i64 %2546, %2552
  %2554 = sdiv i64 %2553, 2
  %2555 = trunc i64 %2554 to i8
  br label %2623

2556:                                             ; preds = %2517
  %2557 = load i64, ptr %14, align 8
  %2558 = icmp eq i64 %2557, %2421
  br i1 %2558, label %2559, label %2588

2559:                                             ; preds = %2556
  br i1 %161, label %2574, label %2560

2560:                                             ; preds = %2559
  %2561 = load i32, ptr %0, align 8, !tbaa !109
  %2562 = and i32 %2561, 896
  %2563 = icmp ne i32 %2562, 128
  %2564 = icmp eq i64 %2421, 10
  %2565 = and i1 %2564, %2563
  br i1 %2565, label %2566, label %2742

2566:                                             ; preds = %2560
  %2567 = load i32, ptr %1, align 4, !tbaa !150
  %2568 = or i32 %2567, 3
  store i32 %2568, ptr %1, align 4, !tbaa !150
  %2569 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %2570 = load i32, ptr %2569, align 8, !tbaa !141
  %2571 = icmp slt i32 %2570, 10
  br i1 %2571, label %2572, label %2623

2572:                                             ; preds = %2566
  %2573 = add nsw i32 %2570, 1
  store i32 %2573, ptr %2569, align 8, !tbaa !141
  br label %2623

2574:                                             ; preds = %2559
  %2575 = icmp ult i64 %2421, 256
  br i1 %2575, label %2580, label %2576

2576:                                             ; preds = %2574
  %2577 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2578 = load i32, ptr %2577, align 8, !tbaa !98
  %2579 = icmp eq i32 %2578, 0
  br i1 %2579, label %2742, label %2580

2580:                                             ; preds = %2576, %2574
  %2581 = load i32, ptr %0, align 8, !tbaa !109
  %2582 = and i32 %2581, 4
  %2583 = icmp eq i32 %2582, 0
  br i1 %2583, label %2584, label %2614

2584:                                             ; preds = %2580
  %2585 = and i32 %2581, 896
  %2586 = icmp eq i32 %2585, 128
  %2587 = select i1 %2586, i8 32, i8 31
  br label %2623

2588:                                             ; preds = %2556
  %2589 = load i32, ptr %0, align 8, !tbaa !109
  %2590 = lshr i32 %2589, 7
  %2591 = and i32 %2590, 7
  %2592 = icmp eq i32 %2591, 1
  br i1 %2592, label %2742, label %2593

2593:                                             ; preds = %2588
  %2594 = icmp eq i64 %2421, 48
  br i1 %2594, label %2595, label %2597

2595:                                             ; preds = %2593
  %2596 = icmp eq i64 %2557, 57
  br i1 %2596, label %2623, label %2742

2597:                                             ; preds = %2593
  %2598 = and i32 %2589, 4
  %2599 = icmp eq i32 %2598, 0
  %2600 = icmp eq i32 %2591, 4
  %2601 = or i1 %2599, %2600
  br i1 %2601, label %2602, label %2742

2602:                                             ; preds = %2597
  %2603 = icmp eq i64 %2421, 65
  br i1 %2603, label %2604, label %2608

2604:                                             ; preds = %2602
  %2605 = icmp eq i64 %2557, 90
  br i1 %2605, label %2606, label %2742

2606:                                             ; preds = %2604
  %2607 = select i1 %2599, i8 4, i8 2
  br label %2623

2608:                                             ; preds = %2602
  %2609 = icmp eq i64 %2421, 97
  %2610 = icmp eq i64 %2557, 122
  %2611 = and i1 %2609, %2610
  br i1 %2611, label %2612, label %2742

2612:                                             ; preds = %2608
  %2613 = select i1 %2599, i8 3, i8 2
  br label %2623

2614:                                             ; preds = %2580
  %2615 = lshr i32 %2581, 7
  %2616 = and i32 %2615, 7
  %2617 = icmp ugt i32 %2616, 2
  %2618 = add nuw nsw i32 %2616, 255
  %2619 = select i1 %2617, i32 %2618, i32 %2616
  %2620 = trunc i32 %2619 to i8
  %2621 = add i8 %2620, 33
  %2622 = icmp eq i8 %2621, 0
  br i1 %2622, label %2742, label %2623

2623:                                             ; preds = %2595, %2584, %2516, %2612, %2606, %2566, %2572, %2545, %2614
  %2624 = phi i8 [ 0, %2614 ], [ 0, %2584 ], [ 0, %2516 ], [ %2613, %2612 ], [ %2607, %2606 ], [ 0, %2566 ], [ 0, %2572 ], [ %2555, %2545 ], [ 1, %2595 ]
  %2625 = phi i8 [ %2621, %2614 ], [ %2587, %2584 ], [ 17, %2516 ], [ 24, %2612 ], [ 24, %2606 ], [ 16, %2566 ], [ 16, %2572 ], [ %2547, %2545 ], [ 24, %2595 ]
  %2626 = phi i8 [ %217, %2614 ], [ %217, %2584 ], [ %217, %2516 ], [ %217, %2612 ], [ %217, %2606 ], [ %217, %2566 ], [ %217, %2572 ], [ %2551, %2545 ], [ %217, %2595 ]
  %2627 = load ptr, ptr %62, align 8, !tbaa !138
  store ptr %63, ptr %62, align 8, !tbaa !138
  %2628 = load ptr, ptr %60, align 8, !tbaa !145
  %2629 = icmp eq ptr %2628, %70
  br i1 %2629, label %2630, label %2635

2630:                                             ; preds = %2623
  %2631 = load i32, ptr %0, align 8, !tbaa !109
  %2632 = and i32 %2631, 896
  %2633 = icmp eq i32 %2632, 128
  br i1 %2633, label %2651, label %2634

2634:                                             ; preds = %2630
  store i64 %65, ptr %64, align 8, !tbaa !144
  br label %2651

2635:                                             ; preds = %2623
  store ptr %61, ptr %60, align 8, !tbaa !145
  %2636 = zext i8 %2625 to i64
  %2637 = add nsw i64 %2636, -21
  %2638 = icmp ult i64 %2637, 4
  br i1 %2638, label %2639, label %2648

2639:                                             ; preds = %2635
  %2640 = icmp eq i8 %2625, 22
  br i1 %2640, label %2641, label %2643

2641:                                             ; preds = %2639
  %2642 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %2642, align 8, !tbaa !100
  br label %2643

2643:                                             ; preds = %2641, %2639
  %2644 = and i8 %2626, 1
  %2645 = icmp eq i8 %2644, 0
  %2646 = add i8 %2625, 4
  %2647 = select i1 %2645, i8 %2625, i8 %2646
  br label %2648

2648:                                             ; preds = %2643, %2635
  %2649 = phi i8 [ %2625, %2635 ], [ %2647, %2643 ]
  %2650 = icmp eq ptr %61, %70
  br i1 %2650, label %2651, label %2661

2651:                                             ; preds = %2648, %2630, %2634
  %2652 = phi i8 [ %2649, %2648 ], [ %2625, %2630 ], [ %2625, %2634 ]
  %2653 = phi ptr [ %61, %2648 ], [ %70, %2630 ], [ %70, %2634 ]
  %2654 = zext i8 %2652 to i64
  %2655 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %2654
  %2656 = load i8, ptr %2655, align 1, !tbaa !9
  %2657 = zext i8 %2656 to i64
  %2658 = add nuw nsw i64 %2657, 1
  %2659 = load i64, ptr %64, align 8, !tbaa !144
  %2660 = add i64 %2658, %2659
  store i64 %2660, ptr %64, align 8, !tbaa !144
  br label %2675

2661:                                             ; preds = %2648
  %2662 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %2663 = load ptr, ptr %2662, align 8, !tbaa !158
  %2664 = icmp ult ptr %61, %2663
  br i1 %2664, label %2668, label %2665

2665:                                             ; preds = %2661
  %2666 = zext i8 %2649 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef %2666, ptr noundef %61, ptr noundef %2663) #21
  %2667 = load ptr, ptr %60, align 8, !tbaa !145
  br label %2668

2668:                                             ; preds = %2661, %2665
  %2669 = phi ptr [ %2667, %2665 ], [ %61, %2661 ]
  store i8 0, ptr %61, align 2, !tbaa !169
  %2670 = icmp eq ptr %2669, %70
  br i1 %2670, label %2675, label %2671

2671:                                             ; preds = %2668
  %2672 = getelementptr inbounds %struct.regnode, ptr %61, i64 0, i32 1
  store i8 %2649, ptr %2672, align 1, !tbaa !164
  %2673 = getelementptr inbounds %struct.regnode, ptr %61, i64 0, i32 2
  store i16 0, ptr %2673, align 2, !tbaa !168
  %2674 = getelementptr inbounds %struct.regnode, ptr %61, i64 1
  store ptr %2674, ptr %60, align 8, !tbaa !145
  br label %2675

2675:                                             ; preds = %2651, %2668, %2671
  %2676 = phi ptr [ %61, %2668 ], [ %61, %2671 ], [ %2653, %2651 ]
  %2677 = phi i8 [ %2649, %2668 ], [ %2649, %2671 ], [ %2652, %2651 ]
  %2678 = phi ptr [ %70, %2668 ], [ %2674, %2671 ], [ %70, %2651 ]
  %2679 = zext i8 %2677 to i64
  %2680 = add nsw i64 %2679, -21
  %2681 = icmp ult i64 %2680, 8
  br i1 %2681, label %2682, label %2688

2682:                                             ; preds = %2675
  %2683 = icmp eq ptr %2678, %70
  br i1 %2683, label %2685, label %2684

2684:                                             ; preds = %2682
  store i8 %2624, ptr %2676, align 2, !tbaa !169
  br label %2685

2685:                                             ; preds = %2684, %2682
  %2686 = load i32, ptr %1, align 4, !tbaa !150
  %2687 = or i32 %2686, 3
  store i32 %2687, ptr %1, align 4, !tbaa !150
  br label %2693

2688:                                             ; preds = %2675
  %2689 = add nsw i64 %2679, -31
  %2690 = icmp ult i64 %2689, 9
  br i1 %2690, label %2691, label %2693

2691:                                             ; preds = %2688
  %2692 = load i64, ptr %14, align 8, !tbaa !71
  call fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef nonnull %0, ptr noundef %2676, ptr noundef %1, i64 noundef 0, i64 noundef %2692, i1 noundef zeroext true)
  br label %2693

2693:                                             ; preds = %2688, %2691, %2685
  store ptr %2627, ptr %62, align 8, !tbaa !138
  %2694 = load ptr, ptr %17, align 8, !tbaa !5
  %2695 = icmp eq ptr %2694, null
  br i1 %2695, label %2703, label %2696

2696:                                             ; preds = %2693
  %2697 = getelementptr inbounds %struct.sv, ptr %2694, i64 0, i32 1
  %2698 = load i32, ptr %2697, align 8, !tbaa !22
  %2699 = icmp ugt i32 %2698, 1
  br i1 %2699, label %2700, label %2702

2700:                                             ; preds = %2696
  %2701 = add i32 %2698, -1
  store i32 %2701, ptr %2697, align 8, !tbaa !22
  br label %2703

2702:                                             ; preds = %2696
  call void @Perl_sv_free2(ptr noundef nonnull %2694, i32 noundef %2698) #21
  br label %2703

2703:                                             ; preds = %2693, %2700, %2702
  %2704 = load ptr, ptr %18, align 8, !tbaa !5
  %2705 = icmp eq ptr %2704, null
  br i1 %2705, label %2713, label %2706

2706:                                             ; preds = %2703
  %2707 = getelementptr inbounds %struct.sv, ptr %2704, i64 0, i32 1
  %2708 = load i32, ptr %2707, align 8, !tbaa !22
  %2709 = icmp ugt i32 %2708, 1
  br i1 %2709, label %2710, label %2712

2710:                                             ; preds = %2706
  %2711 = add i32 %2708, -1
  store i32 %2711, ptr %2707, align 8, !tbaa !22
  br label %2713

2712:                                             ; preds = %2706
  call void @Perl_sv_free2(ptr noundef nonnull %2704, i32 noundef %2708) #21
  br label %2713

2713:                                             ; preds = %2703, %2710, %2712
  %2714 = load ptr, ptr %19, align 8, !tbaa !5
  %2715 = icmp eq ptr %2714, null
  br i1 %2715, label %2723, label %2716

2716:                                             ; preds = %2713
  %2717 = getelementptr inbounds %struct.sv, ptr %2714, i64 0, i32 1
  %2718 = load i32, ptr %2717, align 8, !tbaa !22
  %2719 = icmp ugt i32 %2718, 1
  br i1 %2719, label %2720, label %2722

2720:                                             ; preds = %2716
  %2721 = add i32 %2718, -1
  store i32 %2721, ptr %2717, align 8, !tbaa !22
  br label %2723

2722:                                             ; preds = %2716
  call void @Perl_sv_free2(ptr noundef nonnull %2714, i32 noundef %2718) #21
  br label %2723

2723:                                             ; preds = %2713, %2720, %2722
  %2724 = load ptr, ptr %21, align 8, !tbaa !5
  %2725 = icmp eq ptr %2724, null
  br i1 %2725, label %2733, label %2726

2726:                                             ; preds = %2723
  %2727 = getelementptr inbounds %struct.sv, ptr %2724, i64 0, i32 1
  %2728 = load i32, ptr %2727, align 8, !tbaa !22
  %2729 = icmp ugt i32 %2728, 1
  br i1 %2729, label %2730, label %2732

2730:                                             ; preds = %2726
  %2731 = add i32 %2728, -1
  store i32 %2731, ptr %2727, align 8, !tbaa !22
  br label %2733

2732:                                             ; preds = %2726
  call void @Perl_sv_free2(ptr noundef nonnull %2724, i32 noundef %2728) #21
  br label %2733

2733:                                             ; preds = %2723, %2730, %2732
  %2734 = icmp eq ptr %2415, null
  br i1 %2734, label %3404, label %2735

2735:                                             ; preds = %2733
  %2736 = getelementptr inbounds %struct.sv, ptr %2415, i64 0, i32 1
  %2737 = load i32, ptr %2736, align 8, !tbaa !22
  %2738 = icmp ugt i32 %2737, 1
  br i1 %2738, label %2739, label %2741

2739:                                             ; preds = %2735
  %2740 = add i32 %2737, -1
  store i32 %2740, ptr %2736, align 8, !tbaa !22
  br label %3404

2741:                                             ; preds = %2735
  call void @Perl_sv_free2(ptr noundef nonnull %2415, i32 noundef %2737) #21
  br label %3404

2742:                                             ; preds = %2597, %2595, %2608, %2604, %2588, %2576, %2560, %2519, %2614, %2512
  %2743 = load ptr, ptr %60, align 8, !tbaa !145
  %2744 = icmp eq ptr %2743, %70
  br i1 %2744, label %3404, label %2745

2745:                                             ; preds = %2742
  %2746 = icmp eq ptr %2415, null
  br i1 %2746, label %2966, label %2747

2747:                                             ; preds = %2745
  %2748 = load i32, ptr %0, align 8, !tbaa !109
  %2749 = and i32 %2748, 4
  %2750 = icmp eq i32 %2749, 0
  br i1 %2750, label %2958, label %2751

2751:                                             ; preds = %2747
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %33) #21
  store ptr null, ptr %33, align 8, !tbaa !5
  %2752 = and i32 %2748, 896
  %2753 = icmp eq i32 %2752, 128
  %2754 = select i1 %2753, ptr %22, ptr %21
  %2755 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %2755, ptr noundef nonnull %2415, i1 noundef zeroext false, ptr noundef nonnull %33)
  %2756 = load ptr, ptr %2415, align 8, !tbaa !63
  %2757 = getelementptr inbounds %struct.xpv, ptr %2756, i64 0, i32 2
  %2758 = load i64, ptr %2757, align 8, !tbaa !72
  %2759 = icmp eq i64 %2758, 0
  br i1 %2759, label %2793, label %2760

2760:                                             ; preds = %2751
  %2761 = lshr i64 %2758, 3
  %2762 = getelementptr %struct.xpvinvlist, ptr %2756, i64 0, i32 6
  %2763 = load i8, ptr %2762, align 1, !tbaa !57, !range !59, !noundef !60
  %2764 = zext i8 %2763 to i64
  %2765 = icmp eq i64 %2761, %2764
  br i1 %2765, label %2793, label %2766

2766:                                             ; preds = %2760
  %2767 = xor i64 %2764, -1
  %2768 = add nsw i64 %2761, %2767
  %2769 = and i64 %2768, 1
  %2770 = icmp eq i64 %2769, 0
  br i1 %2770, label %2778, label %2771

2771:                                             ; preds = %2766
  %2772 = getelementptr i8, ptr %2415, i64 16
  %2773 = load ptr, ptr %2772, align 8, !tbaa !9
  %2774 = getelementptr inbounds i64, ptr %2773, i64 %2764
  %2775 = getelementptr inbounds i64, ptr %2774, i64 %2768
  %2776 = load i64, ptr %2775, align 8, !tbaa !71
  %2777 = add i64 %2776, -1
  br label %2778

2778:                                             ; preds = %2766, %2771
  %2779 = phi i64 [ %2777, %2771 ], [ -1, %2766 ]
  %2780 = icmp ult i64 %2779, 256
  %2781 = load ptr, ptr @PL_utf8_foldclosures, align 8
  %2782 = icmp ne ptr %2781, null
  %2783 = select i1 %2780, i1 true, i1 %2782
  br i1 %2783, label %2793, label %2784

2784:                                             ; preds = %2778
  %2785 = load ptr, ptr @PL_utf8_tofold, align 8, !tbaa !5
  %2786 = icmp eq ptr %2785, null
  br i1 %2786, label %2787, label %2790

2787:                                             ; preds = %2784
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %9) #21
  %2788 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull @.str.201, ptr noundef nonnull %9, ptr noundef null, i8 noundef zeroext 2) #21
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %9) #21
  %2789 = load ptr, ptr @PL_utf8_tofold, align 8, !tbaa !5
  br label %2790

2790:                                             ; preds = %2784, %2787
  %2791 = phi ptr [ %2789, %2787 ], [ %2785, %2784 ]
  %2792 = call ptr @Perl__swash_inversion_hash(ptr noundef %2791) #21
  store ptr %2792, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  br label %2793

2793:                                             ; preds = %2751, %2760, %2790, %2778
  %2794 = load ptr, ptr %33, align 8, !tbaa !5
  %2795 = load ptr, ptr %2794, align 8, !tbaa !63
  %2796 = getelementptr inbounds %struct.xpvinvlist, ptr %2795, i64 0, i32 5
  store i64 0, ptr %2796, align 8, !tbaa !71
  %2797 = getelementptr inbounds %struct.xpv, ptr %2795, i64 0, i32 2
  %2798 = load i64, ptr %2797, align 8, !tbaa !72
  %2799 = icmp eq i64 %2798, 0
  br i1 %2799, label %2949, label %2800

2800:                                             ; preds = %2793
  %2801 = getelementptr i8, ptr %2794, i64 16
  br label %2810

2802:                                             ; preds = %2946
  %2803 = load ptr, ptr %2794, align 8, !tbaa !63
  br label %2804

2804:                                             ; preds = %2802, %2828
  %2805 = phi ptr [ %2803, %2802 ], [ %2811, %2828 ]
  %2806 = getelementptr inbounds %struct.xpvinvlist, ptr %2805, i64 0, i32 5
  %2807 = getelementptr inbounds %struct.xpv, ptr %2805, i64 0, i32 2
  %2808 = load i64, ptr %2807, align 8, !tbaa !72
  %2809 = icmp eq i64 %2808, 0
  br i1 %2809, label %2949, label %2810, !llvm.loop !377

2810:                                             ; preds = %2800, %2804
  %2811 = phi ptr [ %2795, %2800 ], [ %2805, %2804 ]
  %2812 = phi i64 [ %2798, %2800 ], [ %2808, %2804 ]
  %2813 = phi ptr [ %2796, %2800 ], [ %2806, %2804 ]
  %2814 = lshr i64 %2812, 3
  %2815 = getelementptr %struct.xpvinvlist, ptr %2811, i64 0, i32 6
  %2816 = load i8, ptr %2815, align 1, !tbaa !57, !range !59, !noundef !60
  %2817 = zext i8 %2816 to i64
  %2818 = sub nsw i64 %2814, %2817
  %2819 = load i64, ptr %2813, align 8, !tbaa !71
  %2820 = icmp ult i64 %2819, %2818
  br i1 %2820, label %2821, label %2949

2821:                                             ; preds = %2810
  %2822 = load ptr, ptr %2801, align 8, !tbaa !9
  %2823 = getelementptr inbounds i64, ptr %2822, i64 %2817
  %2824 = add nuw i64 %2819, 1
  store i64 %2824, ptr %2813, align 8, !tbaa !71
  %2825 = getelementptr inbounds i64, ptr %2823, i64 %2819
  %2826 = load i64, ptr %2825, align 8, !tbaa !71
  %2827 = icmp ult i64 %2824, %2818
  br i1 %2827, label %2828, label %2834

2828:                                             ; preds = %2821
  %2829 = add nuw i64 %2819, 2
  store i64 %2829, ptr %2813, align 8, !tbaa !71
  %2830 = getelementptr inbounds i64, ptr %2823, i64 %2824
  %2831 = load i64, ptr %2830, align 8, !tbaa !71
  %2832 = add i64 %2831, -1
  %2833 = icmp ugt i64 %2826, %2832
  br i1 %2833, label %2804, label %2834

2834:                                             ; preds = %2821, %2828
  %2835 = phi i64 [ %2832, %2828 ], [ -1, %2821 ]
  br label %2836

2836:                                             ; preds = %2834, %2946
  %2837 = phi i64 [ %2947, %2946 ], [ %2826, %2834 ]
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %34) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %35) #21
  %2838 = icmp ult i64 %2837, 256
  br i1 %2838, label %2839, label %2873

2839:                                             ; preds = %2836
  %2840 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2837
  %2841 = load i32, ptr %2840, align 4, !tbaa !150
  %2842 = and i32 %2841, 4194304
  %2843 = icmp eq i32 %2842, 0
  br i1 %2843, label %2862, label %2844

2844:                                             ; preds = %2839
  %2845 = icmp ult i64 %2837, 128
  br i1 %2845, label %2850, label %2846

2846:                                             ; preds = %2844
  %2847 = load i32, ptr %0, align 8, !tbaa !109
  %2848 = and i32 %2847, 896
  %2849 = icmp eq i32 %2848, 0
  br i1 %2849, label %2856, label %2850

2850:                                             ; preds = %2846, %2844
  %2851 = load ptr, ptr %2754, align 8, !tbaa !5
  %2852 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %2837
  %2853 = load i8, ptr %2852, align 1, !tbaa !9
  %2854 = zext i8 %2853 to i64
  %2855 = call ptr @Perl__add_range_to_invlist(ptr noundef %2851, i64 noundef %2854, i64 noundef %2854)
  store ptr %2855, ptr %2754, align 8, !tbaa !5
  br label %2862

2856:                                             ; preds = %2846
  %2857 = load ptr, ptr %20, align 8, !tbaa !5
  %2858 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %2837
  %2859 = load i8, ptr %2858, align 1, !tbaa !9
  %2860 = zext i8 %2859 to i64
  %2861 = call ptr @Perl__add_range_to_invlist(ptr noundef %2857, i64 noundef %2860, i64 noundef %2860)
  store ptr %2861, ptr %20, align 8, !tbaa !5
  br label %2862

2862:                                             ; preds = %2839, %2856, %2850
  %2863 = and i32 %2841, 524288
  %2864 = icmp eq i32 %2863, 0
  br i1 %2864, label %2946, label %2865

2865:                                             ; preds = %2862
  %2866 = icmp ult i64 %2837, 128
  br i1 %2866, label %2867, label %2871

2867:                                             ; preds = %2865
  %2868 = load i32, ptr %0, align 8, !tbaa !109
  %2869 = and i32 %2868, 896
  %2870 = icmp eq i32 %2869, 512
  br i1 %2870, label %2946, label %2871

2871:                                             ; preds = %2867, %2865
  %2872 = trunc i64 %2837 to i8
  call fastcc void @S_add_above_Latin1_folds(ptr noundef %0, i8 noundef zeroext %2872, ptr noundef nonnull %2754)
  br label %2946

2873:                                             ; preds = %2836
  %2874 = load i32, ptr %0, align 8, !tbaa !109
  %2875 = and i32 %2874, 896
  %2876 = icmp eq i32 %2875, 512
  %2877 = select i1 %2876, i8 4, i8 0
  %2878 = call i64 @Perl__to_uni_fold_flags(i64 noundef %2837, ptr noundef nonnull %34, ptr noundef nonnull %35, i8 noundef zeroext %2877) #21
  %2879 = load ptr, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  %2880 = load i64, ptr %35, align 8, !tbaa !71
  %2881 = trunc i64 %2880 to i32
  %2882 = call ptr @Perl_hv_common_key_len(ptr noundef %2879, ptr noundef nonnull %34, i32 noundef %2881, i32 noundef 32, ptr noundef null, i32 noundef 0) #21
  %2883 = icmp eq ptr %2882, null
  br i1 %2883, label %2946, label %2884

2884:                                             ; preds = %2873
  %2885 = load ptr, ptr %2882, align 8, !tbaa !5
  %2886 = getelementptr inbounds %struct.sv, ptr %2885, i64 0, i32 2
  %2887 = load ptr, ptr %20, align 8, !tbaa !5
  br label %2888

2888:                                             ; preds = %2942, %2884
  %2889 = phi ptr [ %2887, %2884 ], [ %2943, %2942 ]
  %2890 = phi i64 [ 0, %2884 ], [ %2944, %2942 ]
  %2891 = load i32, ptr %2886, align 4, !tbaa !62
  %2892 = and i32 %2891, 8388608
  %2893 = icmp eq i32 %2892, 0
  br i1 %2893, label %2897, label %2894

2894:                                             ; preds = %2888
  %2895 = call i32 @Perl_mg_size(ptr noundef nonnull %2885) #21
  %2896 = sext i32 %2895 to i64
  br label %2901

2897:                                             ; preds = %2888
  %2898 = load ptr, ptr %2885, align 8, !tbaa !122
  %2899 = getelementptr inbounds %struct.xpvav, ptr %2898, i64 0, i32 2
  %2900 = load i64, ptr %2899, align 8, !tbaa !124
  br label %2901

2901:                                             ; preds = %2894, %2897
  %2902 = phi i64 [ %2896, %2894 ], [ %2900, %2897 ]
  %2903 = icmp sgt i64 %2890, %2902
  br i1 %2903, label %2945, label %2904

2904:                                             ; preds = %2901
  %2905 = call ptr @Perl_av_fetch(ptr noundef %2885, i64 noundef %2890, i32 noundef 0) #21
  %2906 = load ptr, ptr %2905, align 8, !tbaa !5
  %2907 = getelementptr inbounds %struct.sv, ptr %2906, i64 0, i32 2
  %2908 = load i32, ptr %2907, align 4, !tbaa !62
  %2909 = and i32 %2908, -2145386240
  %2910 = icmp eq i32 %2909, -2147483392
  br i1 %2910, label %2911, label %2915

2911:                                             ; preds = %2904
  %2912 = load ptr, ptr %2906, align 8, !tbaa !63
  %2913 = getelementptr inbounds %struct.xpvuv, ptr %2912, i64 0, i32 4
  %2914 = load i64, ptr %2913, align 8, !tbaa !9
  br label %2917

2915:                                             ; preds = %2904
  %2916 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %2906, i32 noundef 2) #21
  br label %2917

2917:                                             ; preds = %2915, %2911
  %2918 = phi i64 [ %2914, %2911 ], [ %2916, %2915 ]
  %2919 = load i32, ptr %0, align 8, !tbaa !109
  %2920 = lshr i32 %2919, 7
  %2921 = and i32 %2920, 7
  %2922 = icmp eq i32 %2921, 4
  %2923 = icmp ult i64 %2918, 128
  %2924 = select i1 %2922, i1 %2923, i1 false
  br i1 %2924, label %2942, label %2925

2925:                                             ; preds = %2917
  %2926 = icmp ult i64 %2918, 256
  %2927 = icmp eq i32 %2921, 1
  %2928 = and i1 %2926, %2927
  br i1 %2928, label %2929, label %2932

2929:                                             ; preds = %2925
  %2930 = load ptr, ptr %2754, align 8, !tbaa !5
  %2931 = call ptr @Perl__add_range_to_invlist(ptr noundef %2930, i64 noundef %2918, i64 noundef %2918)
  store ptr %2931, ptr %2754, align 8, !tbaa !5
  br label %2942

2932:                                             ; preds = %2925
  %2933 = and i64 %2918, -128
  %2934 = icmp ne i64 %2933, 128
  %2935 = icmp ugt i32 %2921, 1
  %2936 = or i1 %2934, %2935
  br i1 %2936, label %2937, label %2940

2937:                                             ; preds = %2932
  %2938 = load ptr, ptr %21, align 8, !tbaa !5
  %2939 = call ptr @Perl__add_range_to_invlist(ptr noundef %2938, i64 noundef %2918, i64 noundef %2918)
  store ptr %2939, ptr %21, align 8, !tbaa !5
  br label %2942

2940:                                             ; preds = %2932
  %2941 = call ptr @Perl__add_range_to_invlist(ptr noundef %2889, i64 noundef %2918, i64 noundef %2918)
  br label %2942

2942:                                             ; preds = %2937, %2940, %2917, %2929
  %2943 = phi ptr [ %2889, %2937 ], [ %2941, %2940 ], [ %2889, %2917 ], [ %2889, %2929 ]
  %2944 = add nuw nsw i64 %2890, 1
  br label %2888, !llvm.loop !378

2945:                                             ; preds = %2901
  store ptr %2889, ptr %20, align 8, !tbaa !5
  br label %2946

2946:                                             ; preds = %2945, %2873, %2862, %2867, %2871
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %35) #21
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %34) #21
  %2947 = add i64 %2837, 1
  %2948 = icmp ugt i64 %2947, %2835
  br i1 %2948, label %2802, label %2836, !llvm.loop !379

2949:                                             ; preds = %2804, %2810, %2793
  %2950 = phi ptr [ %2796, %2793 ], [ %2813, %2810 ], [ %2806, %2804 ]
  store i64 -1, ptr %2950, align 8, !tbaa !71
  %2951 = getelementptr inbounds %struct.sv, ptr %2794, i64 0, i32 1
  %2952 = load i32, ptr %2951, align 8, !tbaa !22
  %2953 = icmp ugt i32 %2952, 1
  br i1 %2953, label %2954, label %2956

2954:                                             ; preds = %2949
  %2955 = add i32 %2952, -1
  store i32 %2955, ptr %2951, align 8, !tbaa !22
  br label %2957

2956:                                             ; preds = %2949
  call void @Perl_sv_free2(ptr noundef nonnull %2794, i32 noundef %2952) #21
  br label %2957

2957:                                             ; preds = %2954, %2956
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %33) #21
  br label %2958

2958:                                             ; preds = %2747, %2957
  %2959 = load ptr, ptr %21, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %2959, ptr noundef nonnull %2415, i1 noundef zeroext false, ptr noundef nonnull %21)
  %2960 = getelementptr inbounds %struct.sv, ptr %2415, i64 0, i32 1
  %2961 = load i32, ptr %2960, align 8, !tbaa !22
  %2962 = icmp ugt i32 %2961, 1
  br i1 %2962, label %2963, label %2965

2963:                                             ; preds = %2958
  %2964 = add i32 %2961, -1
  store i32 %2964, ptr %2960, align 8, !tbaa !22
  br label %2966

2965:                                             ; preds = %2958
  call void @Perl_sv_free2(ptr noundef nonnull %2415, i32 noundef %2961) #21
  br label %2966

2966:                                             ; preds = %2965, %2963, %2745
  %2967 = load ptr, ptr %19, align 8, !tbaa !5
  %2968 = icmp eq ptr %2967, null
  br i1 %2968, label %2977, label %2969

2969:                                             ; preds = %2966
  %2970 = load ptr, ptr %21, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %2970, ptr noundef nonnull %2967, i1 noundef zeroext false, ptr noundef nonnull %21)
  %2971 = getelementptr inbounds %struct.sv, ptr %2967, i64 0, i32 1
  %2972 = load i32, ptr %2971, align 8, !tbaa !22
  %2973 = icmp ugt i32 %2972, 1
  br i1 %2973, label %2974, label %2976

2974:                                             ; preds = %2969
  %2975 = add i32 %2972, -1
  store i32 %2975, ptr %2971, align 8, !tbaa !22
  br label %2977

2976:                                             ; preds = %2969
  call void @Perl_sv_free2(ptr noundef nonnull %2967, i32 noundef %2972) #21
  br label %2977

2977:                                             ; preds = %2976, %2974, %2966
  %2978 = load ptr, ptr %17, align 8, !tbaa !5
  %2979 = icmp ne ptr %2978, null
  %2980 = load ptr, ptr %18, align 8
  %2981 = icmp ne ptr %2980, null
  %2982 = select i1 %2979, i1 true, i1 %2981
  br i1 %2982, label %2983, label %3059

2983:                                             ; preds = %2977
  br i1 %2979, label %2984, label %2990

2984:                                             ; preds = %2983
  %2985 = load i32, ptr %0, align 8, !tbaa !109
  %2986 = and i32 %2985, 896
  %2987 = icmp ugt i32 %2986, 256
  br i1 %2987, label %2988, label %2990

2988:                                             ; preds = %2984
  %2989 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %2978, ptr noundef %2989, i1 noundef zeroext false, ptr noundef nonnull %17)
  br label %2990

2990:                                             ; preds = %2988, %2984, %2983
  %2991 = icmp eq ptr %2980, null
  br i1 %2991, label %3016, label %2992

2992:                                             ; preds = %2990
  %2993 = load i32, ptr %0, align 8, !tbaa !109
  %2994 = lshr i32 %2993, 7
  %2995 = and i32 %2994, 7
  %2996 = icmp eq i32 %2995, 0
  br i1 %2996, label %2997, label %3000

2997:                                             ; preds = %2992
  %2998 = load i8, ptr %61, align 2, !tbaa !169
  %2999 = or i8 %2998, -128
  store i8 %2999, ptr %61, align 2, !tbaa !169
  br label %3004

3000:                                             ; preds = %2992
  %3001 = icmp ugt i32 %2995, 2
  br i1 %3001, label %3002, label %3004

3002:                                             ; preds = %3000
  %3003 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %2980, ptr noundef %3003, i1 noundef zeroext true, ptr noundef nonnull %18)
  br label %3004

3004:                                             ; preds = %3000, %3002, %2997
  %3005 = load ptr, ptr %17, align 8, !tbaa !5
  %3006 = icmp eq ptr %3005, null
  %3007 = load ptr, ptr %18, align 8, !tbaa !5
  br i1 %3006, label %3015, label %3008

3008:                                             ; preds = %3004
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3005, ptr noundef %3007, i1 noundef zeroext false, ptr noundef nonnull %17)
  %3009 = getelementptr inbounds %struct.sv, ptr %3007, i64 0, i32 1
  %3010 = load i32, ptr %3009, align 8, !tbaa !22
  %3011 = icmp ugt i32 %3010, 1
  br i1 %3011, label %3012, label %3014

3012:                                             ; preds = %3008
  %3013 = add i32 %3010, -1
  store i32 %3013, ptr %3009, align 8, !tbaa !22
  br label %3016

3014:                                             ; preds = %3008
  call void @Perl_sv_free2(ptr noundef nonnull %3007, i32 noundef %3010) #21
  br label %3016

3015:                                             ; preds = %3004
  store ptr %3007, ptr %17, align 8, !tbaa !5
  br label %3016

3016:                                             ; preds = %3014, %3012, %3015, %2990
  %3017 = load i32, ptr %0, align 8, !tbaa !109
  %3018 = and i32 %3017, 896
  %3019 = icmp eq i32 %3018, 0
  br i1 %3019, label %3032, label %3020

3020:                                             ; preds = %3016
  %3021 = load ptr, ptr %21, align 8, !tbaa !5
  %3022 = icmp eq ptr %3021, null
  %3023 = load ptr, ptr %17, align 8, !tbaa !5
  br i1 %3022, label %3031, label %3024

3024:                                             ; preds = %3020
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3021, ptr noundef %3023, i1 noundef zeroext false, ptr noundef nonnull %21)
  %3025 = getelementptr inbounds %struct.sv, ptr %3023, i64 0, i32 1
  %3026 = load i32, ptr %3025, align 8, !tbaa !22
  %3027 = icmp ugt i32 %3026, 1
  br i1 %3027, label %3028, label %3030

3028:                                             ; preds = %3024
  %3029 = add i32 %3026, -1
  store i32 %3029, ptr %3025, align 8, !tbaa !22
  br label %3059

3030:                                             ; preds = %3024
  call void @Perl_sv_free2(ptr noundef nonnull %3023, i32 noundef %3026) #21
  br label %3059

3031:                                             ; preds = %3020
  store ptr %3023, ptr %21, align 8, !tbaa !5
  br label %3059

3032:                                             ; preds = %3016
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %36) #21
  store ptr null, ptr %36, align 8, !tbaa !5
  %3033 = load ptr, ptr %17, align 8, !tbaa !5
  %3034 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %3033, ptr noundef %3034, i1 noundef zeroext false, ptr noundef nonnull %36)
  %3035 = load ptr, ptr %36, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %3033, ptr noundef %3035, i1 noundef zeroext true, ptr noundef nonnull %17)
  %3036 = load ptr, ptr %21, align 8, !tbaa !5
  %3037 = icmp eq ptr %3036, null
  %3038 = load ptr, ptr %17, align 8, !tbaa !5
  br i1 %3037, label %3046, label %3039

3039:                                             ; preds = %3032
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3036, ptr noundef %3038, i1 noundef zeroext false, ptr noundef nonnull %21)
  %3040 = getelementptr inbounds %struct.sv, ptr %3038, i64 0, i32 1
  %3041 = load i32, ptr %3040, align 8, !tbaa !22
  %3042 = icmp ugt i32 %3041, 1
  br i1 %3042, label %3043, label %3045

3043:                                             ; preds = %3039
  %3044 = add i32 %3041, -1
  store i32 %3044, ptr %3040, align 8, !tbaa !22
  br label %3047

3045:                                             ; preds = %3039
  call void @Perl_sv_free2(ptr noundef nonnull %3038, i32 noundef %3041) #21
  br label %3047

3046:                                             ; preds = %3032
  store ptr %3038, ptr %21, align 8, !tbaa !5
  br label %3047

3047:                                             ; preds = %3045, %3043, %3046
  %3048 = load ptr, ptr %20, align 8, !tbaa !5
  %3049 = icmp eq ptr %3048, null
  br i1 %3049, label %3057, label %3050

3050:                                             ; preds = %3047
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3048, ptr noundef %3035, i1 noundef zeroext false, ptr noundef nonnull %20)
  %3051 = getelementptr inbounds %struct.sv, ptr %3035, i64 0, i32 1
  %3052 = load i32, ptr %3051, align 8, !tbaa !22
  %3053 = icmp ugt i32 %3052, 1
  br i1 %3053, label %3054, label %3056

3054:                                             ; preds = %3050
  %3055 = add i32 %3052, -1
  store i32 %3055, ptr %3051, align 8, !tbaa !22
  br label %3058

3056:                                             ; preds = %3050
  call void @Perl_sv_free2(ptr noundef nonnull %3035, i32 noundef %3052) #21
  br label %3058

3057:                                             ; preds = %3047
  store ptr %3035, ptr %20, align 8, !tbaa !5
  br label %3058

3058:                                             ; preds = %3056, %3054, %3057
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %36) #21
  br label %3059

3059:                                             ; preds = %3030, %3028, %3058, %3031, %2977
  %3060 = load ptr, ptr %16, align 8, !tbaa !5
  %3061 = icmp eq ptr %3060, null
  br i1 %3061, label %3112, label %3062

3062:                                             ; preds = %3059
  %3063 = load ptr, ptr %21, align 8, !tbaa !5
  %3064 = icmp eq ptr %3063, null
  br i1 %3064, label %3104, label %3065

3065:                                             ; preds = %3062
  %3066 = and i8 %2414, 1
  %3067 = icmp eq i8 %3066, 0
  br i1 %3067, label %3096, label %3068

3068:                                             ; preds = %3065
  %3069 = load ptr, ptr %3063, align 8, !tbaa !63
  %3070 = getelementptr inbounds %struct.xpv, ptr %3069, i64 0, i32 2
  %3071 = load i64, ptr %3070, align 8, !tbaa !72
  %3072 = icmp eq i64 %3071, 0
  br i1 %3072, label %3091, label %3073

3073:                                             ; preds = %3068
  %3074 = lshr i64 %3071, 3
  %3075 = getelementptr %struct.xpvinvlist, ptr %3069, i64 0, i32 6
  %3076 = load i8, ptr %3075, align 1, !tbaa !57, !range !59, !noundef !60
  %3077 = zext i8 %3076 to i64
  %3078 = icmp eq i64 %3074, %3077
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3073
  %3080 = xor i64 %3077, -1
  %3081 = add nsw i64 %3074, %3080
  %3082 = and i64 %3081, 1
  %3083 = icmp eq i64 %3082, 0
  br i1 %3083, label %3091, label %3084

3084:                                             ; preds = %3079
  %3085 = getelementptr i8, ptr %3063, i64 16
  %3086 = load ptr, ptr %3085, align 8, !tbaa !9
  %3087 = getelementptr inbounds i64, ptr %3086, i64 %3077
  %3088 = getelementptr inbounds i64, ptr %3087, i64 %3081
  %3089 = load i64, ptr %3088, align 8, !tbaa !71
  %3090 = add i64 %3089, -1
  br label %3091

3091:                                             ; preds = %3068, %3073, %3079, %3084
  %3092 = phi i64 [ 0, %3073 ], [ %3090, %3084 ], [ -1, %3079 ], [ 0, %3068 ]
  %3093 = icmp ugt i64 %3092, 1114111
  %3094 = xor i1 %161, %3093
  %3095 = zext i1 %3094 to i8
  br label %3096

3096:                                             ; preds = %3091, %3065
  %3097 = phi i8 [ %3095, %3091 ], [ %2414, %3065 ]
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3060, ptr noundef nonnull %3063, i1 noundef zeroext false, ptr noundef nonnull %21)
  %3098 = getelementptr inbounds %struct.sv, ptr %3060, i64 0, i32 1
  %3099 = load i32, ptr %3098, align 8, !tbaa !22
  %3100 = icmp ugt i32 %3099, 1
  br i1 %3100, label %3101, label %3103

3101:                                             ; preds = %3096
  %3102 = add i32 %3099, -1
  store i32 %3102, ptr %3098, align 8, !tbaa !22
  br label %3105

3103:                                             ; preds = %3096
  call void @Perl_sv_free2(ptr noundef nonnull %3060, i32 noundef %3099) #21
  br label %3105

3104:                                             ; preds = %3062
  store ptr %3060, ptr %21, align 8, !tbaa !5
  br label %3105

3105:                                             ; preds = %3103, %3101, %3104
  %3106 = phi i8 [ %2414, %3104 ], [ %3097, %3101 ], [ %3097, %3103 ]
  %3107 = and i8 %3106, 1
  %3108 = icmp eq i8 %3107, 0
  br i1 %3108, label %3112, label %3109

3109:                                             ; preds = %3105
  %3110 = load i8, ptr %61, align 2, !tbaa !169
  %3111 = or i8 %3110, 16
  store i8 %3111, ptr %61, align 2, !tbaa !169
  br label %3112

3112:                                             ; preds = %3105, %3109, %3059
  %3113 = load i32, ptr %0, align 8, !tbaa !109
  %3114 = and i32 %3113, 900
  %3115 = icmp eq i32 %3114, 132
  br i1 %3115, label %3116, label %3138

3116:                                             ; preds = %3112
  %3117 = load ptr, ptr %22, align 8, !tbaa !5
  %3118 = icmp eq ptr %3117, null
  br i1 %3118, label %3122, label %3119

3119:                                             ; preds = %3116
  %3120 = load i8, ptr %61, align 2, !tbaa !169
  %3121 = or i8 %3120, 4
  store i8 %3121, ptr %61, align 2, !tbaa !169
  br label %3138

3122:                                             ; preds = %3116
  %3123 = load ptr, ptr %21, align 8, !tbaa !5
  %3124 = icmp eq ptr %3123, null
  br i1 %3124, label %3180, label %3125

3125:                                             ; preds = %3122
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %37) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %38) #21
  %3126 = load ptr, ptr %3123, align 8, !tbaa !63
  %3127 = getelementptr inbounds %struct.xpvinvlist, ptr %3126, i64 0, i32 5
  store i64 0, ptr %3127, align 8, !tbaa !71
  %3128 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef nonnull %3123, ptr noundef nonnull %37, ptr noundef nonnull %38)
  %3129 = load i64, ptr %37, align 8
  %3130 = icmp ult i64 %3129, 256
  %3131 = select i1 %3128, i1 %3130, i1 false
  br i1 %3131, label %3132, label %3135

3132:                                             ; preds = %3125
  %3133 = load i8, ptr %61, align 2, !tbaa !169
  %3134 = or i8 %3133, 4
  store i8 %3134, ptr %61, align 2, !tbaa !169
  br label %3135

3135:                                             ; preds = %3132, %3125
  %3136 = load ptr, ptr %3123, align 8, !tbaa !63
  %3137 = getelementptr inbounds %struct.xpvinvlist, ptr %3136, i64 0, i32 5
  store i64 -1, ptr %3137, align 8, !tbaa !71
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %38) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %37) #21
  br label %3138

3138:                                             ; preds = %3119, %3135, %3112
  %3139 = load ptr, ptr %21, align 8, !tbaa !5
  %3140 = icmp eq ptr %3139, null
  %3141 = or i1 %161, %3140
  br i1 %3141, label %3177, label %3142

3142:                                             ; preds = %3138
  %3143 = load i8, ptr %61, align 2, !tbaa !169
  %3144 = and i8 %3143, 12
  %3145 = icmp ne i8 %3144, 0
  %3146 = load ptr, ptr %20, align 8
  %3147 = icmp ne ptr %3146, null
  %3148 = select i1 %3145, i1 true, i1 %3147
  br i1 %3148, label %3177, label %3149

3149:                                             ; preds = %3142
  %3150 = load ptr, ptr %111, align 8, !tbaa !63
  %3151 = getelementptr inbounds %struct.xpv, ptr %3150, i64 0, i32 2
  %3152 = load i64, ptr %3151, align 8, !tbaa !72
  %3153 = icmp eq i64 %3152, %110
  br i1 %3153, label %3154, label %3177

3154:                                             ; preds = %3149
  %3155 = load ptr, ptr %3139, align 8, !tbaa !63
  %3156 = getelementptr inbounds %struct.xpv, ptr %3155, i64 0, i32 2
  %3157 = load i64, ptr %3156, align 8, !tbaa !72
  %3158 = icmp eq i64 %3157, 0
  br i1 %3158, label %3165, label %3159

3159:                                             ; preds = %3154
  %3160 = lshr i64 %3157, 3
  %3161 = getelementptr inbounds %struct.xpvinvlist, ptr %3155, i64 0, i32 6
  %3162 = load i8, ptr %3161, align 1, !tbaa !57, !range !59, !noundef !60
  %3163 = zext i8 %3162 to i64
  %3164 = icmp eq i64 %3160, %3163
  br i1 %3164, label %3165, label %3166

3165:                                             ; preds = %3159, %3154
  call fastcc void @S__append_range_to_invlist(ptr noundef nonnull %3139, i64 noundef 0, i64 noundef -1)
  br label %3168

3166:                                             ; preds = %3159
  %3167 = xor i8 %3162, 1
  store i8 %3167, ptr %3161, align 1, !tbaa !57
  br label %3168

3168:                                             ; preds = %3165, %3166
  %3169 = icmp eq ptr %2417, null
  br i1 %3169, label %3177, label %3170

3170:                                             ; preds = %3168
  %3171 = getelementptr inbounds %struct.sv, ptr %2417, i64 0, i32 1
  %3172 = load i32, ptr %3171, align 8, !tbaa !22
  %3173 = icmp ugt i32 %3172, 1
  br i1 %3173, label %3174, label %3176

3174:                                             ; preds = %3170
  %3175 = add i32 %3172, -1
  store i32 %3175, ptr %3171, align 8, !tbaa !22
  br label %3177

3176:                                             ; preds = %3170
  call void @Perl_sv_free2(ptr noundef nonnull %2417, i32 noundef %3172) #21
  br label %3177

3177:                                             ; preds = %3176, %3174, %3168, %3149, %3142, %3138
  %3178 = phi i8 [ %217, %3142 ], [ %217, %3149 ], [ %217, %3138 ], [ 0, %3168 ], [ 0, %3174 ], [ 0, %3176 ]
  %3179 = phi ptr [ %2417, %3142 ], [ %2417, %3149 ], [ %2417, %3138 ], [ null, %3168 ], [ null, %3174 ], [ null, %3176 ]
  br i1 %43, label %3197, label %3181

3180:                                             ; preds = %3122
  br i1 %43, label %3198, label %3181

3181:                                             ; preds = %3180, %3177
  %3182 = phi ptr [ %2417, %3180 ], [ %3179, %3177 ]
  %3183 = phi ptr [ null, %3180 ], [ %3139, %3177 ]
  store ptr %3183, ptr %7, align 8, !tbaa !5
  %3184 = icmp eq ptr %3182, null
  br i1 %3184, label %3192, label %3185

3185:                                             ; preds = %3181
  %3186 = getelementptr inbounds %struct.sv, ptr %3182, i64 0, i32 1
  %3187 = load i32, ptr %3186, align 8, !tbaa !22
  %3188 = icmp ugt i32 %3187, 1
  br i1 %3188, label %3189, label %3191

3189:                                             ; preds = %3185
  %3190 = add i32 %3187, -1
  store i32 %3190, ptr %3186, align 8, !tbaa !22
  br label %3192

3191:                                             ; preds = %3185
  call void @Perl_sv_free2(ptr noundef nonnull %3182, i32 noundef %3187) #21
  br label %3192

3192:                                             ; preds = %3181, %3189, %3191
  %3193 = load ptr, ptr %60, align 8, !tbaa !145
  %3194 = icmp eq ptr %3193, %70
  br i1 %3194, label %3195, label %3196

3195:                                             ; preds = %3192
  store i64 %65, ptr %64, align 8, !tbaa !144
  br label %3404

3196:                                             ; preds = %3192
  store ptr %61, ptr %60, align 8, !tbaa !145
  br label %3404

3197:                                             ; preds = %3177
  br i1 %3140, label %3198, label %3202

3198:                                             ; preds = %3180, %3197
  %3199 = phi i8 [ %3178, %3197 ], [ %217, %3180 ]
  %3200 = phi ptr [ %3179, %3197 ], [ %2417, %3180 ]
  %3201 = and i8 %3199, 1
  br label %3350

3202:                                             ; preds = %3197
  %3203 = and i8 %3178, 1
  %3204 = icmp ne i8 %3203, 0
  %3205 = load ptr, ptr %20, align 8
  %3206 = icmp ne ptr %3205, null
  %3207 = select i1 %3204, i1 true, i1 %3206
  br i1 %3207, label %3350, label %3208

3208:                                             ; preds = %3202
  %3209 = load i8, ptr %61, align 2, !tbaa !169
  %3210 = zext i8 %3209 to i32
  %3211 = and i32 %3210, 12
  %3212 = icmp eq i32 %3211, 0
  br i1 %3212, label %3213, label %3349

3213:                                             ; preds = %3208
  %3214 = load ptr, ptr %111, align 8, !tbaa !63
  %3215 = getelementptr inbounds %struct.xpv, ptr %3214, i64 0, i32 2
  %3216 = load i64, ptr %3215, align 8, !tbaa !72
  %3217 = icmp eq i64 %3216, %110
  br i1 %3217, label %3218, label %3349

3218:                                             ; preds = %3213
  %3219 = and i32 %3210, 16
  %3220 = icmp eq i32 %3219, 0
  br i1 %3220, label %3236, label %3221

3221:                                             ; preds = %3218
  %3222 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %3223 = getelementptr inbounds %struct.cop, ptr %3222, i64 0, i32 12
  %3224 = load ptr, ptr %3223, align 8, !tbaa !363
  %3225 = ptrtoint ptr %3224 to i64
  switch i64 %3225, label %3226 [
    i64 0, label %3236
    i64 8, label %3236
    i64 16, label %3236
  ]

3226:                                             ; preds = %3221
  %3227 = getelementptr inbounds i64, ptr %3224, i64 1
  %3228 = load i8, ptr %3227, align 1, !tbaa !9
  %3229 = and i8 %3228, 2
  %3230 = icmp eq i8 %3229, 0
  br i1 %3230, label %3231, label %3349

3231:                                             ; preds = %3226
  %3232 = getelementptr inbounds i8, ptr %3224, i64 20
  %3233 = load i8, ptr %3232, align 1, !tbaa !9
  %3234 = and i8 %3233, 2
  %3235 = icmp eq i8 %3234, 0
  br i1 %3235, label %3236, label %3349

3236:                                             ; preds = %3231, %3221, %3221, %3221, %3218
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %39) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %40) #21
  %3237 = load ptr, ptr %62, align 8, !tbaa !138
  %3238 = load ptr, ptr %3139, align 8, !tbaa !63
  %3239 = getelementptr inbounds %struct.xpvinvlist, ptr %3238, i64 0, i32 5
  store i64 0, ptr %3239, align 8, !tbaa !71
  %3240 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef nonnull %3139, ptr noundef nonnull %39, ptr noundef nonnull %40)
  br i1 %3240, label %3244, label %3241

3241:                                             ; preds = %3236
  %3242 = load i32, ptr %1, align 4, !tbaa !150
  %3243 = or i32 %3242, 3
  store i32 %3243, ptr %1, align 4, !tbaa !150
  br label %3328

3244:                                             ; preds = %3236
  %3245 = load i64, ptr %39, align 8, !tbaa !71
  %3246 = load i64, ptr %40, align 8, !tbaa !71
  %3247 = icmp eq i64 %3245, %3246
  br i1 %3247, label %3248, label %3293

3248:                                             ; preds = %3244
  %3249 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef nonnull %3139, ptr noundef nonnull %39, ptr noundef nonnull %40)
  br i1 %3249, label %3320, label %3250

3250:                                             ; preds = %3248
  %3251 = load i64, ptr %39, align 8, !tbaa !71
  %3252 = icmp ult i64 %3251, 256
  br i1 %3252, label %3257, label %3253

3253:                                             ; preds = %3250
  %3254 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %3255 = load i32, ptr %3254, align 8, !tbaa !98
  %3256 = icmp eq i32 %3255, 0
  br i1 %3256, label %3320, label %3257

3257:                                             ; preds = %3253, %3250
  store i64 %3251, ptr %14, align 8, !tbaa !71
  %3258 = load i32, ptr %0, align 8, !tbaa !109
  %3259 = and i32 %3258, 4
  %3260 = icmp eq i32 %3259, 0
  %3261 = and i32 %3258, 896
  %3262 = icmp eq i32 %3261, 128
  br i1 %3260, label %3263, label %3265

3263:                                             ; preds = %3257
  %3264 = select i1 %3262, i8 32, i8 31
  br label %3328

3265:                                             ; preds = %3257
  br i1 %3262, label %3328, label %3266

3266:                                             ; preds = %3265
  br i1 %3252, label %3267, label %3272

3267:                                             ; preds = %3266
  %3268 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %3251
  %3269 = load i32, ptr %3268, align 4, !tbaa !150
  %3270 = and i32 %3269, 4194304
  %3271 = icmp eq i32 %3270, 0
  br i1 %3271, label %3277, label %3328

3272:                                             ; preds = %3266
  %3273 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %3274 = call fastcc zeroext i1 @S__invlist_contains_cp(ptr noundef %3273, i64 noundef %3251)
  br i1 %3274, label %3323, label %3275

3275:                                             ; preds = %3272
  %3276 = load i32, ptr %0, align 8, !tbaa !109
  br label %3277

3277:                                             ; preds = %3275, %3267
  %3278 = phi i32 [ %3276, %3275 ], [ %3258, %3267 ]
  %3279 = and i32 %3278, 4
  %3280 = icmp eq i32 %3279, 0
  br i1 %3280, label %3281, label %3285

3281:                                             ; preds = %3277
  %3282 = and i32 %3278, 896
  %3283 = icmp eq i32 %3282, 128
  %3284 = select i1 %3283, i8 32, i8 31
  br label %3328

3285:                                             ; preds = %3277
  %3286 = lshr i32 %3278, 7
  %3287 = and i32 %3286, 7
  %3288 = icmp ugt i32 %3287, 2
  %3289 = add nuw nsw i32 %3287, 255
  %3290 = select i1 %3288, i32 %3289, i32 %3287
  %3291 = trunc i32 %3290 to i8
  %3292 = add i8 %3291, 33
  br label %3323

3293:                                             ; preds = %3244
  %3294 = icmp eq i64 %3245, 0
  br i1 %3294, label %3295, label %3320

3295:                                             ; preds = %3293
  switch i64 %3246, label %3320 [
    i64 -1, label %3296
    i64 9, label %3304
  ]

3296:                                             ; preds = %3295
  %3297 = load i32, ptr %1, align 4, !tbaa !150
  %3298 = or i32 %3297, 3
  store i32 %3298, ptr %1, align 4, !tbaa !150
  %3299 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %3300 = load i32, ptr %3299, align 8, !tbaa !141
  %3301 = icmp slt i32 %3300, 10
  br i1 %3301, label %3302, label %3328

3302:                                             ; preds = %3296
  %3303 = add nsw i32 %3300, 1
  store i32 %3303, ptr %3299, align 8, !tbaa !141
  br label %3328

3304:                                             ; preds = %3295
  %3305 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef nonnull %3139, ptr noundef nonnull %39, ptr noundef nonnull %40)
  %3306 = load i64, ptr %39, align 8
  %3307 = icmp eq i64 %3306, 11
  %3308 = select i1 %3305, i1 %3307, i1 false
  %3309 = load i64, ptr %40, align 8
  %3310 = icmp eq i64 %3309, -1
  %3311 = select i1 %3308, i1 %3310, i1 false
  br i1 %3311, label %3312, label %3320

3312:                                             ; preds = %3304
  %3313 = load i32, ptr %1, align 4, !tbaa !150
  %3314 = or i32 %3313, 3
  store i32 %3314, ptr %1, align 4, !tbaa !150
  %3315 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %3316 = load i32, ptr %3315, align 8, !tbaa !141
  %3317 = icmp slt i32 %3316, 10
  br i1 %3317, label %3318, label %3328

3318:                                             ; preds = %3312
  %3319 = add nsw i32 %3316, 1
  store i32 %3319, ptr %3315, align 8, !tbaa !141
  br label %3328

3320:                                             ; preds = %3248, %3253, %3304, %3293, %3295
  %3321 = load ptr, ptr %3139, align 8, !tbaa !63
  %3322 = getelementptr inbounds %struct.xpvinvlist, ptr %3321, i64 0, i32 5
  store i64 -1, ptr %3322, align 8, !tbaa !71
  br label %3347

3323:                                             ; preds = %3285, %3272
  %3324 = phi i8 [ 31, %3272 ], [ %3292, %3285 ]
  %3325 = load ptr, ptr %3139, align 8, !tbaa !63
  %3326 = getelementptr inbounds %struct.xpvinvlist, ptr %3325, i64 0, i32 5
  store i64 -1, ptr %3326, align 8, !tbaa !71
  %3327 = icmp eq i8 %3324, 0
  br i1 %3327, label %3347, label %3332

3328:                                             ; preds = %3281, %3265, %3241, %3312, %3318, %3296, %3302, %3263, %3267
  %3329 = phi i8 [ 31, %3267 ], [ %3284, %3281 ], [ 34, %3265 ], [ 82, %3241 ], [ 16, %3312 ], [ 16, %3318 ], [ 17, %3296 ], [ 17, %3302 ], [ %3264, %3263 ]
  %3330 = load ptr, ptr %3139, align 8, !tbaa !63
  %3331 = getelementptr inbounds %struct.xpvinvlist, ptr %3330, i64 0, i32 5
  store i64 -1, ptr %3331, align 8, !tbaa !71
  br label %3332

3332:                                             ; preds = %3328, %3323
  %3333 = phi i8 [ %3324, %3323 ], [ %3329, %3328 ]
  store ptr %63, ptr %62, align 8, !tbaa !138
  store ptr %61, ptr %60, align 8, !tbaa !145
  %3334 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext %3333)
  store ptr %3237, ptr %62, align 8, !tbaa !138
  %3335 = zext i8 %3333 to i64
  %3336 = add nsw i64 %3335, -31
  %3337 = icmp ult i64 %3336, 9
  br i1 %3337, label %3338, label %3340

3338:                                             ; preds = %3332
  %3339 = load i64, ptr %14, align 8, !tbaa !71
  call fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef nonnull %0, ptr noundef %3334, ptr noundef %1, i64 noundef 0, i64 noundef %3339, i1 noundef zeroext true)
  br label %3340

3340:                                             ; preds = %3338, %3332
  %3341 = getelementptr inbounds %struct.sv, ptr %3139, i64 0, i32 1
  %3342 = load i32, ptr %3341, align 8, !tbaa !22
  %3343 = icmp ugt i32 %3342, 1
  br i1 %3343, label %3344, label %3346

3344:                                             ; preds = %3340
  %3345 = add i32 %3342, -1
  store i32 %3345, ptr %3341, align 8, !tbaa !22
  br label %3348

3346:                                             ; preds = %3340
  call void @Perl_sv_free2(ptr noundef nonnull %3139, i32 noundef %3342) #21
  br label %3348

3347:                                             ; preds = %3323, %3320
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %40) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %39) #21
  br label %3349

3348:                                             ; preds = %3346, %3344
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %40) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %39) #21
  br label %3404

3349:                                             ; preds = %3347, %3231, %3226, %3213, %3208
  call fastcc void @S_populate_ANYOF_from_invlist(ptr noundef nonnull %61, ptr noundef nonnull %21)
  br label %3357

3350:                                             ; preds = %3198, %3202
  %3351 = phi ptr [ %3200, %3198 ], [ %3179, %3202 ]
  %3352 = phi i8 [ %3201, %3198 ], [ %3203, %3202 ]
  call fastcc void @S_populate_ANYOF_from_invlist(ptr noundef %61, ptr noundef nonnull %21)
  %3353 = icmp eq i8 %3352, 0
  br i1 %3353, label %3357, label %3354

3354:                                             ; preds = %3350
  %3355 = load i8, ptr %61, align 2, !tbaa !169
  %3356 = or i8 %3355, 1
  store i8 %3356, ptr %61, align 2, !tbaa !169
  br label %3357

3357:                                             ; preds = %3349, %3354, %3350
  %3358 = phi ptr [ %3179, %3349 ], [ %3351, %3354 ], [ %3351, %3350 ]
  %3359 = load ptr, ptr %20, align 8, !tbaa !5
  %3360 = icmp eq ptr %3359, null
  br i1 %3360, label %3375, label %3361

3361:                                             ; preds = %3357
  %3362 = load ptr, ptr %21, align 8, !tbaa !5
  %3363 = icmp eq ptr %3362, null
  br i1 %3363, label %3371, label %3364

3364:                                             ; preds = %3361
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3362, ptr noundef nonnull %3359, i1 noundef zeroext false, ptr noundef nonnull %21)
  %3365 = getelementptr inbounds %struct.sv, ptr %3359, i64 0, i32 1
  %3366 = load i32, ptr %3365, align 8, !tbaa !22
  %3367 = icmp ugt i32 %3366, 1
  br i1 %3367, label %3368, label %3370

3368:                                             ; preds = %3364
  %3369 = add i32 %3366, -1
  store i32 %3369, ptr %3365, align 8, !tbaa !22
  br label %3372

3370:                                             ; preds = %3364
  call void @Perl_sv_free2(ptr noundef nonnull %3359, i32 noundef %3366) #21
  br label %3372

3371:                                             ; preds = %3361
  store ptr %3359, ptr %21, align 8, !tbaa !5
  br label %3372

3372:                                             ; preds = %3370, %3368, %3371
  %3373 = load i8, ptr %61, align 2, !tbaa !169
  %3374 = or i8 %3373, 2
  store i8 %3374, ptr %61, align 2, !tbaa !169
  br label %3375

3375:                                             ; preds = %3372, %3357
  %3376 = icmp ne ptr %3358, null
  %3377 = icmp ugt i64 %2419, 1
  %3378 = select i1 %3376, i1 %3377, i1 false
  br i1 %3378, label %3379, label %3386

3379:                                             ; preds = %3375
  %3380 = getelementptr inbounds %struct.sv, ptr %3358, i64 0, i32 1
  %3381 = load i32, ptr %3380, align 8, !tbaa !22
  %3382 = icmp ugt i32 %3381, 1
  br i1 %3382, label %3383, label %3385

3383:                                             ; preds = %3379
  %3384 = add i32 %3381, -1
  store i32 %3384, ptr %3380, align 8, !tbaa !22
  br label %3386

3385:                                             ; preds = %3379
  call void @Perl_sv_free2(ptr noundef nonnull %3358, i32 noundef %3381) #21
  br label %3386

3386:                                             ; preds = %3385, %3383, %3375
  %3387 = phi ptr [ %3358, %3375 ], [ null, %3383 ], [ null, %3385 ]
  %3388 = load ptr, ptr %21, align 8, !tbaa !5
  %3389 = load ptr, ptr %111, align 8, !tbaa !63
  %3390 = getelementptr inbounds %struct.xpv, ptr %3389, i64 0, i32 2
  %3391 = load i64, ptr %3390, align 8, !tbaa !72
  %3392 = icmp eq i64 %3391, %110
  %3393 = select i1 %3392, ptr null, ptr %111
  %3394 = load ptr, ptr %22, align 8, !tbaa !5
  %3395 = and i8 %2416, 1
  %3396 = icmp ne i8 %3395, 0
  call fastcc void @S_set_ANYOF_arg(ptr noundef nonnull %0, ptr noundef %61, ptr noundef %3388, ptr noundef %3393, ptr noundef %3394, ptr noundef %3387, i1 noundef zeroext %3396)
  %3397 = load i32, ptr %1, align 4, !tbaa !150
  %3398 = or i32 %3397, 3
  store i32 %3398, ptr %1, align 4, !tbaa !150
  %3399 = load i8, ptr %61, align 2, !tbaa !169
  %3400 = and i8 %3399, 12
  %3401 = icmp eq i8 %3400, 0
  br i1 %3401, label %3404, label %3402

3402:                                             ; preds = %3386
  %3403 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %3403, align 8, !tbaa !100
  br label %3404

3404:                                             ; preds = %2741, %2739, %2733, %3348, %3386, %3402, %3195, %3196, %2742, %2511
  %3405 = phi ptr [ %2500, %2511 ], [ %3334, %3348 ], [ %61, %2742 ], [ %61, %3196 ], [ %61, %3195 ], [ %61, %3402 ], [ %61, %3386 ], [ %2676, %2733 ], [ %2676, %2739 ], [ %2676, %2741 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %22) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #21
  ret ptr %3405
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_grok_bslash_N(ptr noundef %0, ptr noundef writeonly %1, ptr noundef writeonly %2, ptr noundef writeonly %3, ptr nocapture noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = icmp eq ptr %3, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  store i32 1, ptr %3, align 4, !tbaa !150
  br label %13

13:                                               ; preds = %12, %6
  %14 = load i32, ptr %0, align 8, !tbaa !109
  %15 = and i32 %14, 8
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %18 = load ptr, ptr %17, align 8, !tbaa !138
  br i1 %16, label %80, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %21 = load ptr, ptr %20, align 8, !tbaa !140
  %22 = icmp ugt ptr %21, %18
  br i1 %22, label %23, label %80

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %25 = ptrtoint ptr %21 to i64
  %26 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  br label %27

27:                                               ; preds = %77, %23
  %28 = phi ptr [ %78, %77 ], [ %18, %23 ]
  %29 = load i8, ptr %28, align 1, !tbaa !9
  switch i8 %29, label %30 [
    i8 32, label %59
    i8 13, label %59
    i8 12, label %59
    i8 11, label %59
    i8 10, label %59
    i8 9, label %59
  ]

30:                                               ; preds = %27
  %31 = load i32, ptr %24, align 8, !tbaa !98
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %58, label %33

33:                                               ; preds = %30
  %34 = ptrtoint ptr %28 to i64
  %35 = sub i64 %25, %34
  %36 = zext i8 %29 to i64
  %37 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %36
  %38 = load i8, ptr %37, align 1, !tbaa !9
  %39 = zext i8 %38 to i64
  %40 = icmp slt i64 %35, %39
  br i1 %40, label %62, label %41

41:                                               ; preds = %33
  switch i8 %29, label %80 [
    i8 -62, label %42
    i8 -30, label %46
    i8 35, label %64
  ]

42:                                               ; preds = %41
  %43 = getelementptr inbounds i8, ptr %28, i64 1
  %44 = load i8, ptr %43, align 1, !tbaa !9
  %45 = icmp eq i8 %44, -123
  br i1 %45, label %59, label %80

46:                                               ; preds = %41
  %47 = getelementptr inbounds i8, ptr %28, i64 1
  %48 = load i8, ptr %47, align 1, !tbaa !9
  %49 = icmp eq i8 %48, -128
  br i1 %49, label %50, label %80

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, ptr %28, i64 2
  %52 = load i8, ptr %51, align 1, !tbaa !9
  %53 = and i8 %52, -2
  %54 = icmp eq i8 %53, -114
  %55 = icmp eq i8 %53, -88
  %56 = or i1 %54, %55
  %57 = freeze i1 %56
  br i1 %57, label %59, label %80

58:                                               ; preds = %30
  switch i8 %29, label %83 [
    i8 -123, label %59
    i8 35, label %64
  ]

59:                                               ; preds = %58, %50, %42, %27, %27, %27, %27, %27, %27
  %60 = phi i64 [ 1, %58 ], [ 1, %27 ], [ 3, %50 ], [ 2, %42 ], [ 1, %27 ], [ 1, %27 ], [ 1, %27 ], [ 1, %27 ], [ 1, %27 ]
  %61 = getelementptr inbounds i8, ptr %28, i64 %60
  br label %77

62:                                               ; preds = %33
  %63 = icmp eq i8 %29, 35
  br i1 %63, label %64, label %80

64:                                               ; preds = %62, %58, %41
  br label %65

65:                                               ; preds = %64, %68
  %66 = phi ptr [ %69, %68 ], [ %28, %64 ]
  %67 = icmp ult ptr %66, %21
  br i1 %67, label %68, label %74

68:                                               ; preds = %65
  %69 = getelementptr inbounds i8, ptr %66, i64 1
  %70 = load i8, ptr %69, align 1, !tbaa !9
  %71 = icmp eq i8 %70, 10
  br i1 %71, label %72, label %65, !llvm.loop !348

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, ptr %66, i64 2
  br label %77

74:                                               ; preds = %65
  %75 = load i32, ptr %26, align 8, !tbaa !131
  %76 = or i32 %75, 512
  store i32 %76, ptr %26, align 8, !tbaa !131
  br label %77

77:                                               ; preds = %74, %72, %59
  %78 = phi ptr [ %61, %59 ], [ %73, %72 ], [ %66, %74 ]
  %79 = icmp ult ptr %78, %21
  br i1 %79, label %27, label %80

80:                                               ; preds = %41, %42, %46, %50, %62, %77, %13, %19
  %81 = phi ptr [ %18, %19 ], [ %18, %13 ], [ %28, %42 ], [ %28, %50 ], [ %28, %46 ], [ %28, %62 ], [ %28, %41 ], [ %78, %77 ]
  %82 = load i8, ptr %81, align 1, !tbaa !9
  br label %83

83:                                               ; preds = %58, %80
  %84 = phi i8 [ %82, %80 ], [ %29, %58 ]
  %85 = phi ptr [ %81, %80 ], [ %28, %58 ]
  %86 = icmp eq i8 %84, 123
  br i1 %86, label %87, label %118

87:                                               ; preds = %83
  %88 = getelementptr inbounds i8, ptr %85, i64 1
  %89 = load i8, ptr %88, align 1, !tbaa !9
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !150
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %157, label %95

95:                                               ; preds = %87, %95
  %96 = phi ptr [ %103, %95 ], [ %88, %87 ]
  %97 = load i8, ptr %96, align 1, !tbaa !9
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !150
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds i8, ptr %96, i64 1
  br i1 %102, label %104, label %95, !llvm.loop !351

104:                                              ; preds = %95
  %105 = icmp eq i8 %97, 44
  br i1 %105, label %106, label %115

106:                                              ; preds = %104, %106
  %107 = phi ptr [ %108, %106 ], [ %96, %104 ]
  %108 = getelementptr inbounds i8, ptr %107, i64 1
  %109 = load i8, ptr %108, align 1, !tbaa !9
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !150
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %106, !llvm.loop !352

115:                                              ; preds = %106, %104
  %116 = phi i8 [ %97, %104 ], [ %109, %106 ]
  %117 = icmp eq i8 %116, 125
  br i1 %117, label %118, label %157

118:                                              ; preds = %115, %83
  %119 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  store ptr %85, ptr %119, align 8, !tbaa !138
  br i1 %11, label %121, label %120

120:                                              ; preds = %118
  store i32 -1, ptr %3, align 4, !tbaa !150
  br label %121

121:                                              ; preds = %120, %118
  %122 = icmp eq ptr %1, null
  br i1 %122, label %467, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds i8, ptr %85, i64 -1
  store ptr %124, ptr %119, align 8, !tbaa !138
  %125 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %126 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %127 = load ptr, ptr %126, align 8, !tbaa !145
  %128 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %129 = icmp eq ptr %127, %128
  br i1 %129, label %130, label %134

130:                                              ; preds = %123
  %131 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %132 = load i64, ptr %131, align 8, !tbaa !144
  %133 = add i64 %132, 1
  store i64 %133, ptr %131, align 8, !tbaa !144
  br label %142

134:                                              ; preds = %123
  %135 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %136 = load ptr, ptr %135, align 8, !tbaa !158
  %137 = icmp ult ptr %127, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 16, ptr noundef %127, ptr noundef %136) #21
  %139 = load ptr, ptr %126, align 8, !tbaa !145
  br label %140

140:                                              ; preds = %138, %134
  %141 = phi ptr [ %139, %138 ], [ %127, %134 ]
  store i8 0, ptr %127, align 2, !tbaa !169
  br label %142

142:                                              ; preds = %140, %130
  %143 = phi ptr [ %127, %130 ], [ %141, %140 ]
  %144 = icmp eq ptr %143, %128
  br i1 %144, label %149, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %struct.regnode, ptr %127, i64 0, i32 1
  store i8 16, ptr %146, align 1, !tbaa !164
  %147 = getelementptr inbounds %struct.regnode, ptr %127, i64 0, i32 2
  store i16 0, ptr %147, align 2, !tbaa !168
  %148 = getelementptr inbounds %struct.regnode, ptr %127, i64 1
  store ptr %148, ptr %126, align 8, !tbaa !145
  br label %149

149:                                              ; preds = %142, %145
  store ptr %127, ptr %1, align 8, !tbaa !5
  %150 = load i32, ptr %4, align 4, !tbaa !150
  %151 = or i32 %150, 3
  store i32 %151, ptr %4, align 4, !tbaa !150
  %152 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %153 = load i32, ptr %152, align 8, !tbaa !141
  %154 = icmp slt i32 %153, 10
  br i1 %154, label %155, label %467

155:                                              ; preds = %149
  %156 = add nsw i32 %153, 1
  store i32 %156, ptr %152, align 8, !tbaa !141
  br label %467

157:                                              ; preds = %87, %115
  %158 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %159 = load i8, ptr %18, align 1, !tbaa !9
  %160 = icmp eq i8 %159, 123
  br i1 %160, label %189, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %163 = load ptr, ptr %162, align 8, !tbaa !145
  %164 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %165 = icmp eq ptr %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %168 = load ptr, ptr %167, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %168, i32 noundef 11) #21
  %169 = load ptr, ptr %158, align 8, !tbaa !138
  br label %170

170:                                              ; preds = %161, %166
  %171 = phi ptr [ %18, %161 ], [ %169, %166 ]
  %172 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %173 = load ptr, ptr %172, align 8, !tbaa !140
  %174 = icmp ugt ptr %171, %173
  %175 = select i1 %174, ptr %173, ptr %171
  %176 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %177 = load ptr, ptr %176, align 8, !tbaa !108
  %178 = ptrtoint ptr %175 to i64
  %179 = ptrtoint ptr %177 to i64
  %180 = sub i64 %178, %179
  %181 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %182 = load i32, ptr %181, align 8, !tbaa !98
  %183 = icmp ne i32 %182, 0
  %184 = zext i1 %183 to i32
  %185 = ptrtoint ptr %173 to i64
  %186 = sub i64 %185, %178
  %187 = getelementptr inbounds i8, ptr %177, i64 %180
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.367, i32 noundef %184, i64 noundef %180, ptr noundef %177, i32 noundef %184, i64 noundef %186, ptr noundef %187) #21
  %188 = load ptr, ptr %158, align 8, !tbaa !138
  br label %189

189:                                              ; preds = %170, %157
  %190 = phi ptr [ %188, %170 ], [ %18, %157 ]
  %191 = getelementptr inbounds i8, ptr %190, i64 1
  store ptr %191, ptr %158, align 8, !tbaa !138
  %192 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %191, i32 noundef 125) #24
  %193 = icmp eq ptr %192, null
  br i1 %193, label %205, label %194

194:                                              ; preds = %189
  %195 = icmp eq ptr %192, %191
  br i1 %195, label %234, label %196

196:                                              ; preds = %194
  %197 = ptrtoint ptr %192 to i64
  %198 = ptrtoint ptr %191 to i64
  %199 = sub i64 %197, %198
  %200 = icmp sgt i64 %199, 1
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %191, ptr noundef nonnull dereferenceable(3) @.str.368, i64 noundef 2) #24
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %234, label %204

204:                                              ; preds = %196, %201
  store ptr %192, ptr %158, align 8, !tbaa !138
  br label %205

205:                                              ; preds = %189, %204
  %206 = phi ptr [ %191, %189 ], [ %192, %204 ]
  %207 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %208 = load ptr, ptr %207, align 8, !tbaa !145
  %209 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %210 = icmp eq ptr %208, %209
  br i1 %210, label %215, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %213 = load ptr, ptr %212, align 8, !tbaa !151
  tail call void @Perl_save_pushptr(ptr noundef %213, i32 noundef 11) #21
  %214 = load ptr, ptr %158, align 8, !tbaa !138
  br label %215

215:                                              ; preds = %205, %211
  %216 = phi ptr [ %206, %205 ], [ %214, %211 ]
  %217 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %218 = load ptr, ptr %217, align 8, !tbaa !140
  %219 = icmp ugt ptr %216, %218
  %220 = select i1 %219, ptr %218, ptr %216
  %221 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %222 = load ptr, ptr %221, align 8, !tbaa !108
  %223 = ptrtoint ptr %220 to i64
  %224 = ptrtoint ptr %222 to i64
  %225 = sub i64 %223, %224
  %226 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %227 = load i32, ptr %226, align 8, !tbaa !98
  %228 = icmp ne i32 %227, 0
  %229 = zext i1 %228 to i32
  %230 = ptrtoint ptr %218 to i64
  %231 = sub i64 %230, %223
  %232 = getelementptr inbounds i8, ptr %222, i64 %225
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.369, i32 noundef %229, i64 noundef %225, ptr noundef %222, i32 noundef %229, i64 noundef %231, ptr noundef %232) #21
  %233 = load ptr, ptr %158, align 8, !tbaa !138
  br label %234

234:                                              ; preds = %215, %201, %194
  %235 = phi ptr [ %233, %215 ], [ %191, %201 ], [ %191, %194 ]
  %236 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %236, align 8, !tbaa !99
  %237 = icmp eq ptr %192, %235
  br i1 %237, label %238, label %266

238:                                              ; preds = %234
  br i1 %11, label %240, label %239

239:                                              ; preds = %238
  store i32 0, ptr %3, align 4, !tbaa !150
  br label %240

240:                                              ; preds = %239, %238
  %241 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %242 = icmp eq ptr %1, null
  br i1 %242, label %467, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %245 = load ptr, ptr %244, align 8, !tbaa !145
  %246 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %247 = icmp eq ptr %245, %246
  br i1 %247, label %248, label %252

248:                                              ; preds = %243
  %249 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %250 = load i64, ptr %249, align 8, !tbaa !144
  %251 = add i64 %250, 1
  store i64 %251, ptr %249, align 8, !tbaa !144
  br label %265

252:                                              ; preds = %243
  %253 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %254 = load ptr, ptr %253, align 8, !tbaa !158
  %255 = icmp ult ptr %245, %254
  br i1 %255, label %258, label %256

256:                                              ; preds = %252
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.270, i32 noundef 40, ptr noundef %245, ptr noundef %254) #21
  %257 = load ptr, ptr %244, align 8, !tbaa !145
  br label %258

258:                                              ; preds = %252, %256
  %259 = phi ptr [ %257, %256 ], [ %245, %252 ]
  store i8 0, ptr %245, align 2, !tbaa !169
  %260 = icmp eq ptr %259, %246
  br i1 %260, label %265, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %struct.regnode, ptr %245, i64 0, i32 1
  store i8 40, ptr %262, align 1, !tbaa !164
  %263 = getelementptr inbounds %struct.regnode, ptr %245, i64 0, i32 2
  store i16 0, ptr %263, align 2, !tbaa !168
  %264 = getelementptr inbounds %struct.regnode, ptr %245, i64 1
  store ptr %264, ptr %244, align 8, !tbaa !145
  br label %265

265:                                              ; preds = %248, %258, %261
  store ptr %245, ptr %1, align 8, !tbaa !5
  br label %467

266:                                              ; preds = %234
  %267 = getelementptr inbounds i8, ptr %235, i64 2
  store ptr %267, ptr %158, align 8, !tbaa !138
  %268 = tail call i64 @strcspn(ptr noundef nonnull %267, ptr noundef nonnull @.str.370) #24
  %269 = getelementptr inbounds i8, ptr %267, i64 %268
  %270 = icmp ult ptr %269, %192
  br i1 %270, label %332, label %271

271:                                              ; preds = %266
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #21
  %272 = icmp ne ptr %2, null
  br i1 %272, label %273, label %330

273:                                              ; preds = %271
  store i64 %268, ptr %7, align 8, !tbaa !71
  %274 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %275 = load ptr, ptr %274, align 8, !tbaa !145
  %276 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %277 = icmp eq ptr %275, %276
  %278 = select i1 %277, i32 7, i32 3
  store i32 %278, ptr %8, align 4, !tbaa !150
  %279 = call i64 @Perl_grok_hex(ptr noundef nonnull %267, ptr noundef nonnull %7, ptr noundef nonnull %8, ptr noundef null) #21
  store i64 %279, ptr %2, align 8, !tbaa !71
  %280 = load i64, ptr %7, align 8, !tbaa !71
  %281 = icmp ne i64 %280, 0
  %282 = load ptr, ptr %158, align 8, !tbaa !138
  %283 = ptrtoint ptr %269 to i64
  %284 = ptrtoint ptr %282 to i64
  %285 = sub i64 %283, %284
  %286 = icmp eq i64 %280, %285
  %287 = select i1 %281, i1 %286, i1 false
  br i1 %287, label %328, label %288

288:                                              ; preds = %273
  %289 = getelementptr inbounds i8, ptr %282, i64 %280
  store ptr %289, ptr %158, align 8, !tbaa !138
  %290 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 26
  %291 = load i32, ptr %290, align 4, !tbaa !97
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %299, label %293

293:                                              ; preds = %288
  %294 = load i8, ptr %289, align 1, !tbaa !9
  %295 = zext i8 %294 to i64
  %296 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %295
  %297 = load i8, ptr %296, align 1, !tbaa !9
  %298 = zext i8 %297 to i64
  br label %299

299:                                              ; preds = %288, %293
  %300 = phi i64 [ %298, %293 ], [ 1, %288 ]
  %301 = getelementptr inbounds i8, ptr %289, i64 %300
  %302 = icmp ult ptr %301, %269
  %303 = select i1 %302, ptr %301, ptr %269
  store ptr %303, ptr %158, align 8, !tbaa !138
  %304 = load ptr, ptr %274, align 8, !tbaa !145
  %305 = icmp eq ptr %304, %276
  br i1 %305, label %310, label %306

306:                                              ; preds = %299
  %307 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %308 = load ptr, ptr %307, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %308, i32 noundef 11) #21
  %309 = load ptr, ptr %158, align 8, !tbaa !138
  br label %310

310:                                              ; preds = %299, %306
  %311 = phi ptr [ %303, %299 ], [ %309, %306 ]
  %312 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %313 = load ptr, ptr %312, align 8, !tbaa !140
  %314 = icmp ugt ptr %311, %313
  %315 = select i1 %314, ptr %313, ptr %311
  %316 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %317 = load ptr, ptr %316, align 8, !tbaa !108
  %318 = ptrtoint ptr %315 to i64
  %319 = ptrtoint ptr %317 to i64
  %320 = sub i64 %318, %319
  %321 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %322 = load i32, ptr %321, align 8, !tbaa !98
  %323 = icmp ne i32 %322, 0
  %324 = zext i1 %323 to i32
  %325 = ptrtoint ptr %313 to i64
  %326 = sub i64 %325, %318
  %327 = getelementptr inbounds i8, ptr %317, i64 %320
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.371, i32 noundef %324, i64 noundef %320, ptr noundef %317, i32 noundef %324, i64 noundef %326, ptr noundef %327) #21
  br label %328

328:                                              ; preds = %273, %310
  %329 = getelementptr inbounds i8, ptr %192, i64 1
  br label %330

330:                                              ; preds = %271, %328
  %331 = phi ptr [ %329, %328 ], [ %85, %271 ]
  store ptr %331, ptr %158, align 8, !tbaa !138
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  br label %467

332:                                              ; preds = %266
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #21
  %333 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %334 = load ptr, ptr %333, align 8, !tbaa !140
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #21
  br i1 %11, label %348, label %335

335:                                              ; preds = %332
  store i32 0, ptr %3, align 4, !tbaa !150
  %336 = icmp ult ptr %267, %192
  br i1 %336, label %337, label %345

337:                                              ; preds = %335, %337
  %338 = phi ptr [ %342, %337 ], [ %269, %335 ]
  %339 = phi i32 [ %343, %337 ], [ 0, %335 ]
  %340 = getelementptr inbounds i8, ptr %338, i64 1
  store ptr %340, ptr %158, align 8, !tbaa !138
  %341 = tail call i64 @strcspn(ptr noundef nonnull %340, ptr noundef nonnull @.str.370) #24
  %342 = getelementptr inbounds i8, ptr %340, i64 %341
  %343 = add nuw nsw i32 %339, 1
  store i32 %343, ptr %3, align 4, !tbaa !150
  %344 = icmp ult ptr %340, %192
  br i1 %344, label %337, label %345, !llvm.loop !380

345:                                              ; preds = %337, %335
  %346 = phi ptr [ %269, %335 ], [ %342, %337 ]
  %347 = icmp eq ptr %1, null
  br i1 %347, label %465, label %351

348:                                              ; preds = %332
  %349 = icmp eq ptr %1, null
  br i1 %349, label %350, label %351

350:                                              ; preds = %348
  store ptr %85, ptr %158, align 8, !tbaa !138
  br label %465

351:                                              ; preds = %348, %345
  %352 = phi ptr [ %269, %348 ], [ %346, %345 ]
  %353 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.337, i64 noundef 2) #21
  %354 = load ptr, ptr %158, align 8, !tbaa !138
  %355 = icmp ult ptr %354, %192
  br i1 %355, label %356, label %366

356:                                              ; preds = %351, %356
  %357 = phi ptr [ %364, %356 ], [ %352, %351 ]
  tail call void @Perl_sv_catpv(ptr noundef %353, ptr noundef nonnull @.str.372) #21
  %358 = load ptr, ptr %158, align 8, !tbaa !138
  %359 = ptrtoint ptr %357 to i64
  %360 = ptrtoint ptr %358 to i64
  %361 = sub i64 %359, %360
  tail call void @Perl_sv_catpvn_flags(ptr noundef %353, ptr noundef %358, i64 noundef %361, i32 noundef 2) #21
  tail call void @Perl_sv_catpv(ptr noundef %353, ptr noundef nonnull @.str.373) #21
  %362 = getelementptr inbounds i8, ptr %357, i64 1
  store ptr %362, ptr %158, align 8, !tbaa !138
  %363 = tail call i64 @strcspn(ptr noundef nonnull %362, ptr noundef nonnull @.str.370) #24
  %364 = getelementptr inbounds i8, ptr %362, i64 %363
  %365 = icmp ult ptr %362, %192
  br i1 %365, label %356, label %366, !llvm.loop !381

366:                                              ; preds = %356, %351
  tail call void @Perl_sv_catpv(ptr noundef %353, ptr noundef nonnull @.str.341) #21
  %367 = getelementptr inbounds %struct.sv, ptr %353, i64 0, i32 2
  %368 = load i32, ptr %367, align 4, !tbaa !62
  %369 = and i32 %368, 2098176
  %370 = icmp eq i32 %369, 1024
  br i1 %370, label %371, label %377

371:                                              ; preds = %366
  %372 = load ptr, ptr %353, align 8, !tbaa !63
  %373 = getelementptr inbounds %struct.xpv, ptr %372, i64 0, i32 2
  %374 = load i64, ptr %373, align 8, !tbaa !72
  store i64 %374, ptr %9, align 8, !tbaa !71
  %375 = getelementptr inbounds %struct.sv, ptr %353, i64 0, i32 3
  %376 = load ptr, ptr %375, align 8, !tbaa !9
  br label %380

377:                                              ; preds = %366
  %378 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %353, ptr noundef nonnull %9, i32 noundef 2) #21
  %379 = load i64, ptr %9, align 8, !tbaa !71
  br label %380

380:                                              ; preds = %377, %371
  %381 = phi i64 [ %379, %377 ], [ %374, %371 ]
  %382 = phi ptr [ %378, %377 ], [ %376, %371 ]
  store ptr %382, ptr %158, align 8, !tbaa !138
  %383 = icmp ult i64 %381, 8
  br i1 %383, label %384, label %412

384:                                              ; preds = %380
  store ptr %192, ptr %158, align 8, !tbaa !138
  %385 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %386 = load ptr, ptr %385, align 8, !tbaa !145
  %387 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %388 = icmp eq ptr %386, %387
  br i1 %388, label %393, label %389

389:                                              ; preds = %384
  %390 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %391 = load ptr, ptr %390, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %391, i32 noundef 11) #21
  %392 = load ptr, ptr %158, align 8, !tbaa !138
  br label %393

393:                                              ; preds = %384, %389
  %394 = phi ptr [ %192, %384 ], [ %392, %389 ]
  %395 = load ptr, ptr %333, align 8, !tbaa !140
  %396 = icmp ugt ptr %394, %395
  %397 = select i1 %396, ptr %395, ptr %394
  %398 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %399 = load ptr, ptr %398, align 8, !tbaa !108
  %400 = ptrtoint ptr %397 to i64
  %401 = ptrtoint ptr %399 to i64
  %402 = sub i64 %400, %401
  %403 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %404 = load i32, ptr %403, align 8, !tbaa !98
  %405 = icmp ne i32 %404, 0
  %406 = zext i1 %405 to i32
  %407 = ptrtoint ptr %395 to i64
  %408 = sub i64 %407, %400
  %409 = getelementptr inbounds i8, ptr %399, i64 %402
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.371, i32 noundef %406, i64 noundef %402, ptr noundef %399, i32 noundef %406, i64 noundef %408, ptr noundef %409) #21
  %410 = load ptr, ptr %158, align 8, !tbaa !138
  %411 = load i64, ptr %9, align 8, !tbaa !71
  br label %412

412:                                              ; preds = %393, %380
  %413 = phi i64 [ %411, %393 ], [ %381, %380 ]
  %414 = phi ptr [ %410, %393 ], [ %382, %380 ]
  %415 = getelementptr inbounds i8, ptr %414, i64 %413
  store ptr %415, ptr %333, align 8, !tbaa !140
  %416 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  store i32 1, ptr %416, align 8, !tbaa !136
  %417 = add i32 %5, 1
  %418 = call fastcc ptr @S_reg(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull %10, i32 noundef %417)
  store ptr %418, ptr %1, align 8, !tbaa !5
  %419 = icmp eq ptr %418, null
  br i1 %419, label %420, label %452

420:                                              ; preds = %412
  %421 = load i32, ptr %10, align 4, !tbaa !150
  %422 = and i32 %421, 32
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %425, label %424

424:                                              ; preds = %420
  store i32 32, ptr %4, align 4, !tbaa !150
  br label %465

425:                                              ; preds = %420
  %426 = load ptr, ptr %333, align 8, !tbaa !140
  %427 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %428 = load ptr, ptr %427, align 8, !tbaa !108
  %429 = ptrtoint ptr %426 to i64
  %430 = ptrtoint ptr %428 to i64
  %431 = sub i64 %429, %430
  %432 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %433 = load ptr, ptr %432, align 8, !tbaa !145
  %434 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %435 = icmp eq ptr %433, %434
  br i1 %435, label %441, label %436

436:                                              ; preds = %425
  %437 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %438 = load ptr, ptr %437, align 8, !tbaa !151
  call void @Perl_save_pushptr(ptr noundef %438, i32 noundef 11) #21
  %439 = load i32, ptr %10, align 4, !tbaa !150
  %440 = load ptr, ptr %427, align 8, !tbaa !108
  br label %441

441:                                              ; preds = %436, %425
  %442 = phi ptr [ %440, %436 ], [ %428, %425 ]
  %443 = phi i32 [ %439, %436 ], [ %421, %425 ]
  %444 = icmp sgt i64 %431, 127
  %445 = select i1 %444, ptr @.str.182, ptr @.str.178
  %446 = select i1 %444, i64 117, i64 %431
  %447 = sext i32 %443 to i64
  %448 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %449 = load i32, ptr %448, align 8, !tbaa !98
  %450 = icmp ne i32 %449, 0
  %451 = zext i1 %450 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.374, i64 noundef %447, i32 noundef %451, i64 noundef %446, ptr noundef %442, ptr noundef nonnull %445) #21
  br label %452

452:                                              ; preds = %441, %412
  %453 = load i32, ptr %10, align 4, !tbaa !150
  %454 = and i32 %453, 15
  %455 = load i32, ptr %4, align 4, !tbaa !150
  %456 = or i32 %455, %454
  store i32 %456, ptr %4, align 4, !tbaa !150
  store ptr %192, ptr %158, align 8, !tbaa !138
  store ptr %334, ptr %333, align 8, !tbaa !140
  store i32 0, ptr %416, align 8, !tbaa !136
  %457 = getelementptr inbounds %struct.sv, ptr %353, i64 0, i32 1
  %458 = load i32, ptr %457, align 8, !tbaa !22
  %459 = icmp ugt i32 %458, 1
  br i1 %459, label %460, label %462

460:                                              ; preds = %452
  %461 = add i32 %458, -1
  store i32 %461, ptr %457, align 8, !tbaa !22
  br label %463

462:                                              ; preds = %452
  call void @Perl_sv_free2(ptr noundef nonnull %353, i32 noundef %458) #21
  br label %463

463:                                              ; preds = %460, %462
  %464 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %465

465:                                              ; preds = %345, %350, %463, %424
  %466 = phi i1 [ true, %463 ], [ false, %424 ], [ false, %350 ], [ false, %345 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #21
  br label %467

467:                                              ; preds = %240, %149, %155, %121, %465, %330, %265
  %468 = phi i1 [ true, %265 ], [ %272, %330 ], [ %466, %465 ], [ false, %121 ], [ true, %155 ], [ true, %149 ], [ false, %240 ]
  ret i1 %468
}

declare ptr @Perl__get_encoding() local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_grok_bslash_x(ptr nocapture noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i1 noundef zeroext %5, i1 noundef zeroext %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #21
  store i32 2, ptr %9, align 4, !tbaa !150
  %11 = load ptr, ptr %0, align 8, !tbaa !5
  %12 = getelementptr inbounds i8, ptr %11, i64 1
  store ptr %12, ptr %0, align 8, !tbaa !5
  %13 = xor i1 %3, true
  %14 = or i1 %13, %4
  br i1 %14, label %15, label %16

15:                                               ; preds = %7
  store i32 6, ptr %9, align 4, !tbaa !150
  br label %16

16:                                               ; preds = %7, %15
  %17 = phi i32 [ 2, %7 ], [ 6, %15 ]
  %18 = load i8, ptr %12, align 1, !tbaa !9
  %19 = icmp eq i8 %18, 123
  br i1 %19, label %42, label %20

20:                                               ; preds = %16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #21
  %21 = select i1 %4, i64 3, i64 2
  store i64 %21, ptr %10, align 8, !tbaa !71
  %22 = call i64 @Perl_grok_hex(ptr noundef nonnull %12, ptr noundef nonnull %10, ptr noundef nonnull %9, ptr noundef null) #21
  store i64 %22, ptr %1, align 8, !tbaa !71
  %23 = load i64, ptr %10, align 8
  %24 = load ptr, ptr %0, align 8, !tbaa !5
  %25 = getelementptr inbounds i8, ptr %24, i64 %23
  store ptr %25, ptr %0, align 8, !tbaa !5
  %26 = icmp ne i64 %23, 2
  %27 = select i1 %4, i1 %26, i1 false
  br i1 %27, label %28, label %89

28:                                               ; preds = %20
  %29 = icmp ult i64 %23, 2
  br i1 %29, label %30, label %40

30:                                               ; preds = %28
  br i1 %6, label %31, label %37

31:                                               ; preds = %30
  %32 = load i8, ptr %25, align 1, !tbaa !9
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !9
  %36 = zext i8 %35 to i64
  br label %37

37:                                               ; preds = %30, %31
  %38 = phi i64 [ %36, %31 ], [ 1, %30 ]
  %39 = getelementptr inbounds i8, ptr %25, i64 %38
  store ptr %39, ptr %0, align 8, !tbaa !5
  br label %40

40:                                               ; preds = %28, %37
  %41 = phi ptr [ @.str.380, %37 ], [ @.str.381, %28 ]
  store ptr %41, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  br label %90

42:                                               ; preds = %16
  %43 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %12, i32 noundef 125) #24
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %55

45:                                               ; preds = %42, %45
  %46 = phi ptr [ %47, %45 ], [ %12, %42 ]
  %47 = getelementptr inbounds i8, ptr %46, i64 1
  store ptr %47, ptr %0, align 8, !tbaa !5
  %48 = load i8, ptr %47, align 1, !tbaa !9
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !150
  %52 = and i32 %51, 4096
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %45, !llvm.loop !382

54:                                               ; preds = %45
  store ptr @.str.382, ptr %2, align 8, !tbaa !5
  br label %90

55:                                               ; preds = %42
  %56 = getelementptr inbounds i8, ptr %11, i64 2
  store ptr %56, ptr %0, align 8, !tbaa !5
  %57 = ptrtoint ptr %43 to i64
  %58 = ptrtoint ptr %56 to i64
  %59 = sub i64 %57, %58
  store i64 %59, ptr %8, align 8, !tbaa !71
  %60 = icmp eq ptr %43, %56
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  br i1 %4, label %62, label %64

62:                                               ; preds = %61
  %63 = getelementptr inbounds i8, ptr %11, i64 3
  store ptr %63, ptr %0, align 8, !tbaa !5
  store ptr @.str.377, ptr %2, align 8, !tbaa !5
  br label %90

64:                                               ; preds = %61
  %65 = getelementptr inbounds i8, ptr %43, i64 1
  store ptr %65, ptr %0, align 8, !tbaa !5
  store i64 0, ptr %1, align 8, !tbaa !71
  br label %90

66:                                               ; preds = %55
  %67 = select i1 %5, i32 9, i32 1
  %68 = or i32 %17, %67
  store i32 %68, ptr %9, align 4, !tbaa !150
  %69 = call i64 @Perl_grok_hex(ptr noundef nonnull %56, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef null) #21
  store i64 %69, ptr %1, align 8, !tbaa !71
  br i1 %4, label %70, label %87

70:                                               ; preds = %66
  %71 = load i64, ptr %8, align 8, !tbaa !71
  %72 = load ptr, ptr %0, align 8, !tbaa !5
  %73 = ptrtoint ptr %72 to i64
  %74 = sub i64 %57, %73
  %75 = icmp eq i64 %71, %74
  br i1 %75, label %87, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, ptr %72, i64 %71
  store ptr %77, ptr %0, align 8, !tbaa !5
  br i1 %6, label %78, label %84

78:                                               ; preds = %76
  %79 = load i8, ptr %77, align 1, !tbaa !9
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !9
  %83 = zext i8 %82 to i64
  br label %84

84:                                               ; preds = %76, %78
  %85 = phi i64 [ %83, %78 ], [ 1, %76 ]
  %86 = getelementptr inbounds i8, ptr %77, i64 %85
  store ptr %86, ptr %0, align 8, !tbaa !5
  store ptr @.str.380, ptr %2, align 8, !tbaa !5
  br label %90

87:                                               ; preds = %70, %66
  %88 = getelementptr inbounds i8, ptr %43, i64 1
  store ptr %88, ptr %0, align 8, !tbaa !5
  br label %90

89:                                               ; preds = %20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  br label %90

90:                                               ; preds = %64, %87, %89, %40, %84, %62, %54
  %91 = phi i1 [ false, %40 ], [ false, %62 ], [ false, %84 ], [ false, %54 ], [ true, %89 ], [ true, %87 ], [ true, %64 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  ret i1 %91
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc signext i8 @S_grok_bslash_c(i8 noundef signext %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca [3 x i8], align 1
  %4 = zext i8 %0 to i64
  %5 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4
  %6 = load i32, ptr %5, align 4, !tbaa !150
  %7 = and i32 %6, 16448
  %8 = icmp eq i32 %7, 16448
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.383, ptr noundef nonnull @.str.384) #21
  br label %25

10:                                               ; preds = %2
  %11 = icmp eq i8 %0, 123
  br i1 %11, label %12, label %25

12:                                               ; preds = %10
  %13 = load i32, ptr getelementptr inbounds ([0 x i32], ptr @PL_charclass, i64 0, i64 123), align 4, !tbaa !150
  %14 = and i32 %13, 16392
  %15 = icmp eq i32 %14, 16392
  %16 = select i1 %15, i8 27, i8 59
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %17
  %19 = load i32, ptr %18, align 4, !tbaa !150
  %20 = and i32 %19, 16448
  %21 = icmp eq i32 %20, 16448
  br i1 %21, label %22, label %24

22:                                               ; preds = %12
  %23 = zext i8 %16 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.385, i32 noundef %23) #21
  br label %25

24:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.386) #21
  br label %25

25:                                               ; preds = %22, %24, %10, %9
  %26 = and i32 %6, 16392
  %27 = icmp eq i32 %26, 16392
  %28 = add i8 %0, -32
  %29 = select i1 %27, i8 %28, i8 %0
  %30 = xor i8 %29, 64
  br i1 %1, label %31, label %49

31:                                               ; preds = %25
  %32 = zext i8 %30 to i64
  %33 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !150
  %35 = and i32 %34, 16448
  %36 = icmp eq i32 %35, 16448
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %3) #21
  %38 = and i32 %34, 16385
  %39 = icmp eq i32 %38, 16385
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  store i8 92, ptr %3, align 1, !tbaa !9
  br label %41

41:                                               ; preds = %40, %37
  %42 = phi i8 [ 0, %37 ], [ 1, %40 ]
  %43 = add nuw nsw i8 %42, 1
  %44 = zext i8 %42 to i64
  %45 = getelementptr inbounds [3 x i8], ptr %3, i64 0, i64 %44
  store i8 %30, ptr %45, align 1, !tbaa !9
  %46 = zext i8 %43 to i64
  %47 = getelementptr inbounds [3 x i8], ptr %3, i64 0, i64 %46
  store i8 0, ptr %47, align 1, !tbaa !9
  %48 = sext i8 %0 to i32
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 28, ptr noundef nonnull @.str.387, i32 noundef %48, ptr noundef nonnull %3) #21
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %3) #21
  br label %49

49:                                               ; preds = %41, %31, %25
  ret i8 %30
}

declare i64 @Perl_grok_oct(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @Perl_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_form_short_octal_warning(ptr noundef %0, i64 noundef %1) unnamed_addr #0 {
  %3 = sub i64 0, %1
  %4 = getelementptr inbounds i8, ptr %0, i64 %3
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %4, %2 ], [ %9, %5 ]
  %7 = load i8, ptr %6, align 1, !tbaa !9
  %8 = icmp eq i8 %7, 48
  %9 = getelementptr inbounds i8, ptr %6, i64 1
  br i1 %8, label %5, label %10, !llvm.loop !383

10:                                               ; preds = %5
  %11 = icmp eq ptr %6, %0
  %12 = sext i1 %11 to i64
  %13 = getelementptr inbounds i8, ptr %6, i64 %12
  %14 = trunc i64 %1 to i32
  %15 = add i32 %14, 2
  %16 = getelementptr inbounds i8, ptr %4, i64 -1
  %17 = ptrtoint ptr %0 to i64
  %18 = ptrtoint ptr %13 to i64
  %19 = sub i64 %17, %18
  %20 = trunc i64 %19 to i32
  %21 = load i8, ptr %0, align 1, !tbaa !9
  %22 = sext i8 %21 to i32
  %23 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.388, i32 noundef %15, ptr noundef nonnull %16, i32 noundef %20, ptr noundef nonnull %13, i32 noundef %22) #21
  ret ptr %23
}

declare i64 @Perl__to_uni_fold_flags(i64 noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc zeroext i1 @S__invlist_contains_cp(ptr nocapture noundef readonly %0, i64 noundef %1) unnamed_addr #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !63
  %4 = getelementptr inbounds %struct.xpv, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !72
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %60, label %7

7:                                                ; preds = %2
  %8 = lshr i64 %5, 3
  %9 = getelementptr %struct.xpvinvlist, ptr %3, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !57, !range !59, !noundef !60
  %11 = zext i8 %10 to i64
  %12 = xor i64 %11, -1
  %13 = add nsw i64 %8, %12
  %14 = icmp eq i64 %8, %11
  br i1 %14, label %60, label %15

15:                                               ; preds = %7
  %16 = getelementptr i8, ptr %0, i64 16
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = getelementptr inbounds i64, ptr %17, i64 %11
  %19 = getelementptr i8, ptr %3, i64 32
  %20 = load i64, ptr %19, align 8, !tbaa !71
  %21 = getelementptr inbounds i64, ptr %18, i64 %20
  %22 = load i64, ptr %21, align 8, !tbaa !71
  %23 = icmp ugt i64 %22, %1
  br i1 %23, label %33, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds i64, ptr %18, i64 %13
  %26 = load i64, ptr %25, align 8, !tbaa !71
  %27 = icmp ugt i64 %26, %1
  br i1 %27, label %28, label %60

28:                                               ; preds = %24
  %29 = add nsw i64 %20, 1
  %30 = getelementptr inbounds i64, ptr %18, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !71
  %32 = icmp ugt i64 %31, %1
  br i1 %32, label %60, label %41

33:                                               ; preds = %15
  %34 = load i64, ptr %18, align 8, !tbaa !71
  %35 = icmp ugt i64 %34, %1
  br i1 %35, label %60, label %36

36:                                               ; preds = %33
  %37 = add nsw i64 %20, -1
  %38 = getelementptr inbounds i64, ptr %18, i64 %37
  %39 = load i64, ptr %38, align 8, !tbaa !71
  %40 = icmp ugt i64 %39, %1
  br i1 %40, label %41, label %57

41:                                               ; preds = %36, %28
  %42 = phi i64 [ %20, %36 ], [ %13, %28 ]
  %43 = phi i64 [ 0, %36 ], [ %29, %28 ]
  %44 = icmp slt i64 %43, %42
  br i1 %44, label %45, label %57

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %55, %45 ], [ %43, %41 ]
  %47 = phi i64 [ %54, %45 ], [ %42, %41 ]
  %48 = add nsw i64 %47, %46
  %49 = sdiv i64 %48, 2
  %50 = getelementptr inbounds i64, ptr %18, i64 %49
  %51 = load i64, ptr %50, align 8, !tbaa !71
  %52 = icmp ugt i64 %51, %1
  %53 = add nsw i64 %49, 1
  %54 = select i1 %52, i64 %49, i64 %47
  %55 = select i1 %52, i64 %46, i64 %53
  %56 = icmp slt i64 %55, %54
  br i1 %56, label %45, label %57, !llvm.loop !300

57:                                               ; preds = %45, %41, %36
  %58 = phi i64 [ %20, %36 ], [ %42, %41 ], [ %54, %45 ]
  %59 = add nsw i64 %58, -1
  store i64 %59, ptr %19, align 8, !tbaa !71
  br label %60

60:                                               ; preds = %2, %7, %24, %28, %33, %57
  %61 = phi i64 [ %59, %57 ], [ -1, %7 ], [ %13, %24 ], [ %20, %28 ], [ -1, %33 ], [ -1, %2 ]
  %62 = and i64 %61, -9223372036854775807
  %63 = icmp eq i64 %62, 0
  ret i1 %63
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, i64 noundef %3, i64 noundef %4, i1 noundef zeroext %5) unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca [14 x i8], align 1
  store i64 %3, ptr %7, align 8, !tbaa !71
  %9 = icmp eq i64 %3, 0
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %8) #21
  br i1 %5, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %12 = load ptr, ptr %11, align 8, !tbaa !145
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %14 = icmp ne ptr %12, %13
  br label %15

15:                                               ; preds = %10, %6
  %16 = phi i1 [ false, %6 ], [ %14, %10 ]
  br i1 %9, label %17, label %169

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %19 = load i32, ptr %18, align 8, !tbaa !98
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %131, label %21

21:                                               ; preds = %17
  %22 = icmp ult i64 %4, 128
  %23 = load i32, ptr %0, align 8, !tbaa !109
  br i1 %22, label %24, label %48

24:                                               ; preds = %21
  %25 = and i32 %23, 896
  %26 = icmp eq i32 %25, 128
  %27 = and i32 %23, 4
  %28 = icmp eq i32 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = trunc i64 %4 to i8
  store i8 %31, ptr %8, align 1, !tbaa !9
  br label %47

32:                                               ; preds = %24
  %33 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4
  %34 = load i32, ptr %33, align 4, !tbaa !150
  %35 = and i32 %34, 16400
  %36 = icmp eq i32 %35, 16400
  %37 = trunc i64 %4 to i8
  %38 = add nuw i8 %37, 32
  %39 = select i1 %36, i8 %38, i8 %37
  store i8 %39, ptr %8, align 1, !tbaa !9
  br i1 %16, label %40, label %47

40:                                               ; preds = %32
  %41 = getelementptr inbounds [0 x i8], ptr @PL_fold, i64 0, i64 %4
  %42 = load i8, ptr %41, align 1, !tbaa !9
  %43 = zext i8 %42 to i64
  %44 = icmp eq i64 %43, %4
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  store i8 31, ptr %46, align 1, !tbaa !164
  br label %47

47:                                               ; preds = %32, %40, %45, %30
  store i64 1, ptr %7, align 8, !tbaa !71
  br label %169

48:                                               ; preds = %21
  %49 = and i32 %23, 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %114, label %51

51:                                               ; preds = %48
  %52 = lshr i32 %23, 7
  %53 = and i32 %52, 7
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %99

55:                                               ; preds = %51
  %56 = icmp ult i64 %4, 256
  %57 = icmp eq i64 %4, 304
  %58 = or i1 %56, %57
  br i1 %58, label %116, label %59

59:                                               ; preds = %55
  %60 = icmp ugt i64 %4, 304
  br i1 %60, label %61, label %99

61:                                               ; preds = %59
  %62 = icmp eq i64 %4, 329
  br i1 %62, label %116, label %63

63:                                               ; preds = %61
  %64 = icmp ugt i64 %4, 329
  br i1 %64, label %65, label %99

65:                                               ; preds = %63
  %66 = icmp eq i64 %4, 376
  br i1 %66, label %116, label %67

67:                                               ; preds = %65
  %68 = icmp ugt i64 %4, 376
  br i1 %68, label %69, label %99

69:                                               ; preds = %67
  %70 = icmp eq i64 %4, 383
  br i1 %70, label %116, label %71

71:                                               ; preds = %69
  %72 = icmp ugt i64 %4, 383
  br i1 %72, label %73, label %99

73:                                               ; preds = %71
  %74 = icmp eq i64 %4, 496
  br i1 %74, label %116, label %75

75:                                               ; preds = %73
  %76 = icmp ugt i64 %4, 496
  br i1 %76, label %77, label %99

77:                                               ; preds = %75
  %78 = icmp eq i64 %4, 924
  br i1 %78, label %116, label %79

79:                                               ; preds = %77
  %80 = icmp ugt i64 %4, 924
  br i1 %80, label %81, label %99

81:                                               ; preds = %79
  %82 = icmp eq i64 %4, 956
  br i1 %82, label %116, label %83

83:                                               ; preds = %81
  %84 = icmp ugt i64 %4, 956
  br i1 %84, label %85, label %99

85:                                               ; preds = %83
  %86 = add i64 %4, -7830
  %87 = icmp ult i64 %86, 5
  br i1 %87, label %124, label %88

88:                                               ; preds = %85
  %89 = icmp ugt i64 %4, 7834
  br i1 %89, label %90, label %99

90:                                               ; preds = %88
  %91 = icmp eq i64 %4, 7838
  br i1 %91, label %124, label %92

92:                                               ; preds = %90
  %93 = icmp ugt i64 %4, 7838
  br i1 %93, label %94, label %99

94:                                               ; preds = %92
  %95 = icmp eq i64 %4, 8490
  br i1 %95, label %124, label %96

96:                                               ; preds = %94
  %97 = icmp ugt i64 %4, 8490
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  switch i64 %4, label %99 [
    i64 64262, label %124
    i64 64261, label %124
    i64 64260, label %124
    i64 64259, label %124
    i64 64258, label %124
    i64 64257, label %124
    i64 64256, label %124
    i64 8491, label %124
  ]

99:                                               ; preds = %98, %96, %92, %88, %83, %79, %75, %71, %67, %63, %59, %51
  %100 = icmp eq i32 %53, 4
  %101 = select i1 %100, i8 6, i8 2
  %102 = call i64 @Perl__to_uni_fold_flags(i64 noundef %4, ptr noundef nonnull %8, ptr noundef nonnull %7, i8 noundef zeroext %101) #21
  %103 = icmp eq i64 %102, %4
  %104 = select i1 %16, i1 %103, i1 false
  br i1 %104, label %105, label %169

105:                                              ; preds = %99
  %106 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %107 = call fastcc zeroext i1 @S__invlist_contains_cp(ptr noundef %106, i64 noundef %4)
  br i1 %107, label %169, label %108

108:                                              ; preds = %105
  %109 = load i32, ptr %0, align 8, !tbaa !109
  %110 = and i32 %109, 896
  %111 = icmp eq i32 %110, 128
  %112 = select i1 %111, i8 32, i8 31
  %113 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  store i8 %112, ptr %113, align 1, !tbaa !164
  br label %169

114:                                              ; preds = %48
  %115 = icmp ult i64 %4, 2048
  br i1 %115, label %116, label %124

116:                                              ; preds = %55, %61, %65, %69, %73, %77, %81, %114
  %117 = lshr i64 %4, 6
  %118 = trunc i64 %117 to i8
  %119 = or i8 %118, -64
  store i8 %119, ptr %8, align 1, !tbaa !9
  %120 = trunc i64 %4 to i8
  %121 = and i8 %120, 63
  %122 = or i8 %121, -128
  %123 = getelementptr inbounds i8, ptr %8, i64 1
  store i8 %122, ptr %123, align 1, !tbaa !9
  store i64 2, ptr %7, align 8, !tbaa !71
  br label %169

124:                                              ; preds = %90, %94, %85, %98, %98, %98, %98, %98, %98, %98, %98, %114
  %125 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef nonnull %8, i64 noundef %4, i64 noundef 0) #21
  %126 = load i8, ptr %8, align 1, !tbaa !9
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %127
  %129 = load i8, ptr %128, align 1, !tbaa !9
  %130 = zext i8 %129 to i64
  store i64 %130, ptr %7, align 8, !tbaa !71
  br label %169

131:                                              ; preds = %17
  %132 = load i32, ptr %0, align 8, !tbaa !109
  %133 = and i32 %132, 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = trunc i64 %4 to i8
  store i8 %136, ptr %8, align 1, !tbaa !9
  store i64 1, ptr %7, align 8, !tbaa !71
  br label %169

137:                                              ; preds = %131
  %138 = icmp eq i64 %4, 223
  br i1 %138, label %163, label %139

139:                                              ; preds = %137
  %140 = trunc i64 %4 to i8
  store i8 %140, ptr %8, align 1, !tbaa !9
  store i64 1, ptr %7, align 8, !tbaa !71
  br i1 %16, label %141, label %169

141:                                              ; preds = %139
  %142 = lshr i32 %132, 7
  %143 = and i32 %142, 7
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %169, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %4
  %147 = load i8, ptr %146, align 1, !tbaa !9
  %148 = zext i8 %147 to i64
  %149 = icmp eq i64 %148, %4
  %150 = icmp ult i64 %4, 256
  %151 = and i1 %150, %149
  br i1 %151, label %152, label %169

152:                                              ; preds = %145
  %153 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4
  %154 = load i32, ptr %153, align 4, !tbaa !150
  %155 = and i32 %154, 262144
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %152
  %158 = icmp ult i64 %4, 128
  %159 = icmp eq i32 %143, 4
  %160 = and i1 %158, %159
  br i1 %160, label %161, label %169

161:                                              ; preds = %157, %152
  %162 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  store i8 31, ptr %162, align 1, !tbaa !164
  br label %169

163:                                              ; preds = %137
  %164 = lshr i32 %132, 7
  %165 = and i32 %164, 7
  switch i32 %165, label %166 [
    i32 4, label %168
    i32 1, label %168
    i32 0, label %168
  ]

166:                                              ; preds = %163
  store i8 115, ptr %8, align 1, !tbaa !9
  %167 = getelementptr inbounds i8, ptr %8, i64 1
  store i8 115, ptr %167, align 1, !tbaa !9
  store i64 2, ptr %7, align 8, !tbaa !71
  br label %169

168:                                              ; preds = %163, %163, %163
  store i8 -33, ptr %8, align 1, !tbaa !9
  store i64 1, ptr %7, align 8, !tbaa !71
  br label %169

169:                                              ; preds = %99, %105, %108, %124, %116, %47, %161, %157, %145, %141, %139, %168, %166, %135, %15
  %170 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %171 = load ptr, ptr %170, align 8, !tbaa !145
  %172 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %173 = icmp eq ptr %171, %172
  %174 = load i64, ptr %7, align 8, !tbaa !71
  %175 = add i64 %174, 3
  %176 = lshr i64 %175, 2
  br i1 %173, label %177, label %181

177:                                              ; preds = %169
  %178 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %179 = load i64, ptr %178, align 8, !tbaa !144
  %180 = add i64 %176, %179
  store i64 %180, ptr %178, align 8, !tbaa !144
  br label %186

181:                                              ; preds = %169
  %182 = getelementptr inbounds %struct.regnode, ptr %171, i64 %176
  store ptr %182, ptr %170, align 8, !tbaa !145
  %183 = trunc i64 %174 to i8
  store i8 %183, ptr %1, align 2, !tbaa !218
  br i1 %9, label %184, label %186

184:                                              ; preds = %181
  %185 = getelementptr inbounds %struct.regnode_string, ptr %1, i64 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %185, ptr nonnull align 1 %8, i64 %174, i1 false)
  br label %186

186:                                              ; preds = %181, %184, %177
  %187 = load i32, ptr %2, align 4, !tbaa !150
  %188 = or i32 %187, 1
  store i32 %188, ptr %2, align 4, !tbaa !150
  %189 = icmp eq i64 %174, 1
  br i1 %189, label %212, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %192 = load i32, ptr %191, align 8, !tbaa !98
  %193 = icmp eq i32 %192, 0
  %194 = icmp ult i64 %4, 128
  %195 = or i1 %194, %193
  br i1 %195, label %220, label %196

196:                                              ; preds = %190
  %197 = icmp ult i64 %4, 2048
  br i1 %197, label %209, label %198

198:                                              ; preds = %196
  %199 = icmp ult i64 %4, 65536
  br i1 %199, label %209, label %200

200:                                              ; preds = %198
  %201 = icmp ult i64 %4, 2097152
  br i1 %201, label %209, label %202

202:                                              ; preds = %200
  %203 = icmp ult i64 %4, 67108864
  br i1 %203, label %209, label %204

204:                                              ; preds = %202
  %205 = icmp ult i64 %4, 2147483648
  br i1 %205, label %209, label %206

206:                                              ; preds = %204
  %207 = icmp ult i64 %4, 68719476736
  %208 = select i1 %207, i64 7, i64 13
  br label %209

209:                                              ; preds = %196, %200, %206, %204, %202, %198
  %210 = phi i64 [ 2, %196 ], [ 3, %198 ], [ 4, %200 ], [ 5, %202 ], [ %208, %206 ], [ 6, %204 ]
  %211 = icmp eq i64 %174, %210
  br i1 %211, label %212, label %220

212:                                              ; preds = %209, %186
  %213 = icmp eq i64 %4, 223
  br i1 %213, label %214, label %218

214:                                              ; preds = %212
  %215 = load i32, ptr %0, align 8, !tbaa !109
  %216 = and i32 %215, 900
  %217 = icmp eq i32 %216, 4
  br i1 %217, label %220, label %218

218:                                              ; preds = %214, %212
  %219 = or i32 %187, 3
  store i32 %219, ptr %2, align 4, !tbaa !150
  br label %220

220:                                              ; preds = %214, %190, %218, %209
  %221 = load ptr, ptr %170, align 8, !tbaa !145
  %222 = icmp eq ptr %221, %172
  br i1 %222, label %229, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  %225 = load i8, ptr %224, align 1, !tbaa !164
  %226 = icmp eq i8 %225, 34
  br i1 %226, label %227, label %229

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %228, align 8, !tbaa !100
  br label %229

229:                                              ; preds = %227, %223, %220
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %8) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_add_multi_match(ptr noundef %0, ptr noundef %1, i64 noundef %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call ptr @Perl_newSV_type(i32 noundef 11) #21
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi ptr [ %0, %3 ], [ %6, %5 ]
  %9 = tail call zeroext i1 @Perl_av_exists(ptr noundef %8, i64 noundef %2) #21
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = tail call ptr @Perl_av_fetch(ptr noundef %8, i64 noundef %2, i32 noundef 0) #21
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  br label %16

13:                                               ; preds = %7
  %14 = tail call ptr @Perl_newSV_type(i32 noundef 11) #21
  %15 = tail call ptr @Perl_av_store(ptr noundef %8, i64 noundef %2, ptr noundef %14) #21
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi ptr [ %12, %10 ], [ %14, %13 ]
  tail call void @Perl_av_push(ptr noundef %17, ptr noundef %1) #21
  ret ptr %8
}

declare ptr @Perl_savepv(ptr noundef) local_unnamed_addr #1

declare ptr @Perl_form(ptr noundef, ...) local_unnamed_addr #1

declare ptr @Perl_instr(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #15

declare ptr @Perl_savepvn(ptr noundef, i32 noundef) local_unnamed_addr #1

declare zeroext i1 @Perl_av_exists(ptr noundef, i64 noundef) local_unnamed_addr #1

declare ptr @Perl_av_pop(ptr noundef) local_unnamed_addr #1

declare void @Perl_sv_catpv(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strcspn(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #15

declare i64 @Perl_grok_hex(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @Perl_sv_recode_to_utf8(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #15

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #17

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umin.i8(i8, i8) #18

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #19

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i2 @llvm.bitreverse.i2(i2) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.umax.i16(i16, i16) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.umin.i16(i16, i16) #18

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.load.relative.i64(ptr, i64) #20

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #6 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { mustprogress nocallback nofree nosync nounwind willreturn }
attributes #17 = { nofree nounwind willreturn memory(argmem: read) }
attributes #18 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #19 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #20 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #21 = { nounwind }
attributes #22 = { nounwind allocsize(0,1) }
attributes #23 = { nounwind allocsize(0) }
attributes #24 = { nounwind willreturn memory(read) }
attributes #25 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = !{!11, !12, i64 12}
!11 = !{!"p5rx", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!12 = !{!"int", !7, i64 0}
!13 = !{!14, !6, i64 88}
!14 = !{!"regexp", !6, i64 0, !7, i64 8, !15, i64 16, !7, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !12, i64 56, !15, i64 64, !15, i64 72, !15, i64 80, !6, i64 88, !12, i64 96, !12, i64 100, !6, i64 104, !12, i64 112, !12, i64 116, !6, i64 120, !6, i64 128, !6, i64 136, !15, i64 144, !15, i64 152, !15, i64 160, !15, i64 168, !12, i64 176, !12, i64 176, !6, i64 184}
!15 = !{!"long", !7, i64 0}
!16 = !{!14, !6, i64 104}
!17 = !{!18, !6, i64 32}
!18 = !{!"regexp_internal", !12, i64 0, !7, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !12, i64 40, !7, i64 44}
!19 = !{!18, !12, i64 40}
!20 = !{!21, !6, i64 24}
!21 = !{!"reg_code_block", !15, i64 0, !15, i64 8, !6, i64 16, !6, i64 24}
!22 = !{!23, !12, i64 8}
!23 = !{!"sv", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.mustprogress"}
!26 = !{!18, !6, i64 24}
!27 = !{!28, !12, i64 0}
!28 = !{!"reg_data", !12, i64 0, !6, i64 8, !7, i64 16}
!29 = !{!28, !6, i64 8}
!30 = !{!31, !12, i64 0}
!31 = !{!"_reg_ac_data", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!32 = !{!31, !6, i64 16}
!33 = !{!31, !6, i64 8}
!34 = !{!18, !6, i64 16}
!35 = !{!36, !12, i64 0}
!36 = !{!"_reg_trie_data", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !37, i64 56, !12, i64 60, !15, i64 64, !15, i64 72, !12, i64 80, !12, i64 84, !12, i64 88}
!37 = !{!"short", !7, i64 0}
!38 = !{!36, !6, i64 8}
!39 = !{!36, !6, i64 16}
!40 = !{!36, !6, i64 24}
!41 = !{!36, !6, i64 32}
!42 = !{!36, !6, i64 40}
!43 = !{!36, !6, i64 48}
!44 = distinct !{!44, !25}
!45 = !{!14, !12, i64 56}
!46 = !{!47, !6, i64 56}
!47 = !{!"pmop", !6, i64 0, !6, i64 8, !6, i64 16, !15, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !6, i64 40, !6, i64 48, !6, i64 56, !12, i64 64, !7, i64 72, !7, i64 80, !6, i64 88}
!48 = !{!47, !12, i64 64}
!49 = !{!14, !6, i64 128}
!50 = !{!14, !6, i64 120}
!51 = !{!52, !15, i64 0}
!52 = !{!"regexp_paren_pair", !15, i64 0, !15, i64 8, !15, i64 16}
!53 = !{!52, !15, i64 8}
!54 = !{!14, !15, i64 152}
!55 = !{!14, !15, i64 144}
!56 = !{!14, !12, i64 96}
!57 = !{!58, !58, i64 0}
!58 = !{!"_Bool", !7, i64 0}
!59 = !{i8 0, i8 2}
!60 = !{}
!61 = !{!14, !12, i64 100}
!62 = !{!23, !12, i64 12}
!63 = !{!23, !6, i64 0}
!64 = !{!65, !6, i64 0}
!65 = !{!"magic", !6, i64 0, !6, i64 8, !37, i64 16, !7, i64 18, !7, i64 19, !15, i64 24, !6, i64 32, !6, i64 40}
!66 = !{!14, !6, i64 48}
!67 = !{!14, !6, i64 32}
!68 = !{!69, !6, i64 64}
!69 = !{!"regexp_engine", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88}
!70 = !{!69, !6, i64 72}
!71 = !{!15, !15, i64 0}
!72 = !{!73, !15, i64 16}
!73 = !{!"xpv", !6, i64 0, !7, i64 8, !15, i64 16, !7, i64 24}
!74 = !{!75, !6, i64 288}
!75 = !{!"RExC_state_t", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !15, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !76, i64 96, !12, i64 152, !12, i64 156, !12, i64 160, !15, i64 168, !12, i64 176, !12, i64 180, !12, i64 184, !12, i64 188, !6, i64 192, !6, i64 200, !6, i64 208, !12, i64 216, !12, i64 220, !12, i64 224, !6, i64 232, !6, i64 240, !12, i64 248, !6, i64 256, !12, i64 264, !12, i64 268, !12, i64 272, !12, i64 276, !12, i64 280, !12, i64 284, !6, i64 288, !12, i64 296, !12, i64 300, !15, i64 304, !6, i64 312, !6, i64 320, !12, i64 328, !12, i64 332, !6, i64 336}
!76 = !{!"regnode_ssc", !7, i64 0, !7, i64 1, !37, i64 2, !12, i64 4, !7, i64 8, !12, i64 40, !6, i64 48}
!77 = !{!75, !12, i64 296}
!78 = !{!79, !15, i64 24}
!79 = !{!"op", !6, i64 0, !6, i64 8, !6, i64 16, !15, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35}
!80 = !{!79, !7, i64 34}
!81 = distinct !{!81, !25}
!82 = distinct !{!82, !25}
!83 = !{!84, !6, i64 40}
!84 = !{!"svop", !6, i64 0, !6, i64 8, !6, i64 16, !15, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !6, i64 40}
!85 = distinct !{!85, !25}
!86 = !{!87, !6, i64 40}
!87 = !{!"listop", !6, i64 0, !6, i64 8, !6, i64 16, !15, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !6, i64 40, !6, i64 48}
!88 = !{!79, !6, i64 8}
!89 = !{!69, !6, i64 88}
!90 = !{!91, !12, i64 56}
!91 = !{!"cop", !6, i64 0, !6, i64 8, !6, i64 16, !15, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !12, i64 36, !6, i64 40, !6, i64 48, !12, i64 56, !12, i64 60, !6, i64 64, !6, i64 72}
!92 = !{!93, !6, i64 0}
!93 = !{!"xpvmg", !6, i64 0, !7, i64 8, !15, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!94 = !{!95, !12, i64 12}
!95 = !{!"hv", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!96 = !{!69, !6, i64 0}
!97 = !{!75, !12, i64 220}
!98 = !{!75, !12, i64 216}
!99 = !{!75, !12, i64 224}
!100 = !{!75, !12, i64 272}
!101 = !{!75, !12, i64 276}
!102 = !{!75, !12, i64 332}
!103 = !{!75, !6, i64 336}
!104 = !{!21, !15, i64 0}
!105 = !{!21, !15, i64 8}
!106 = distinct !{!106, !25}
!107 = !{!11, !6, i64 0}
!108 = !{!75, !6, i64 8}
!109 = !{!75, !12, i64 0}
!110 = !{!75, !12, i64 4}
!111 = distinct !{!111, !25}
!112 = distinct !{!112, !113}
!113 = !{!"llvm.loop.unroll.disable"}
!114 = distinct !{!114, !25}
!115 = distinct !{!115, !25}
!116 = !{!117, !6, i64 24}
!117 = !{!"stackinfo", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44}
!118 = !{!117, !6, i64 16}
!119 = !{!117, !12, i64 40}
!120 = !{!117, !12, i64 32}
!121 = !{!117, !6, i64 0}
!122 = !{!123, !6, i64 0}
!123 = !{!"av", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!124 = !{!125, !15, i64 16}
!125 = !{!"xpvav", !6, i64 0, !7, i64 8, !15, i64 16, !15, i64 24, !6, i64 32}
!126 = !{!125, !15, i64 24}
!127 = !{!21, !6, i64 16}
!128 = distinct !{!128, !25}
!129 = distinct !{!129, !25}
!130 = !{!75, !12, i64 156}
!131 = !{!75, !12, i64 160}
!132 = !{!75, !15, i64 304}
!133 = !{!75, !12, i64 268}
!134 = !{!75, !12, i64 188}
!135 = !{!75, !12, i64 184}
!136 = !{!75, !12, i64 280}
!137 = !{!75, !12, i64 284}
!138 = !{!75, !6, i64 56}
!139 = !{!75, !6, i64 40}
!140 = !{!75, !6, i64 48}
!141 = !{!75, !12, i64 152}
!142 = !{!75, !12, i64 176}
!143 = !{!75, !12, i64 180}
!144 = !{!75, !15, i64 168}
!145 = !{!75, !6, i64 88}
!146 = !{!75, !15, i64 64}
!147 = !{!75, !6, i64 256}
!148 = !{!75, !12, i64 264}
!149 = !{!75, !12, i64 300}
!150 = !{!12, !12, i64 0}
!151 = !{!75, !6, i64 16}
!152 = distinct !{!152, !25}
!153 = !{!75, !6, i64 192}
!154 = !{!75, !6, i64 200}
!155 = !{!75, !6, i64 24}
!156 = !{!75, !6, i64 32}
!157 = !{!75, !6, i64 72}
!158 = !{!75, !6, i64 80}
!159 = !{!75, !12, i64 248}
!160 = !{!75, !6, i64 240}
!161 = !{!14, !15, i64 64}
!162 = !{i64 0, i64 4, !150, i64 4, i64 4, !150, i64 8, i64 8, !5, i64 16, i64 8, !5, i64 24, i64 8, !5, i64 32, i64 8, !5, i64 40, i64 8, !5, i64 48, i64 8, !5, i64 56, i64 8, !5, i64 64, i64 8, !71, i64 72, i64 8, !5, i64 80, i64 8, !5, i64 88, i64 8, !5, i64 96, i64 1, !9, i64 97, i64 1, !9, i64 98, i64 2, !163, i64 100, i64 4, !150, i64 104, i64 32, !9, i64 136, i64 4, !150, i64 144, i64 8, !5, i64 152, i64 4, !150, i64 156, i64 4, !150, i64 160, i64 4, !150, i64 168, i64 8, !71, i64 176, i64 4, !150, i64 180, i64 4, !150, i64 184, i64 4, !150, i64 188, i64 4, !150, i64 192, i64 8, !5, i64 200, i64 8, !5, i64 208, i64 8, !5, i64 216, i64 4, !150, i64 220, i64 4, !150, i64 224, i64 4, !150, i64 232, i64 8, !5, i64 240, i64 8, !5, i64 248, i64 4, !150, i64 256, i64 8, !5, i64 264, i64 4, !150, i64 268, i64 4, !150, i64 272, i64 4, !150, i64 276, i64 4, !150, i64 280, i64 4, !150, i64 284, i64 4, !150, i64 288, i64 8, !5, i64 296, i64 4, !150, i64 300, i64 4, !150, i64 304, i64 8, !71, i64 312, i64 8, !5, i64 320, i64 8, !5, i64 328, i64 4, !150, i64 332, i64 4, !150, i64 336, i64 8, !5}
!163 = !{!37, !37, i64 0}
!164 = !{!165, !7, i64 1}
!165 = !{!"regnode", !7, i64 0, !7, i64 1, !37, i64 2}
!166 = !{!167, !12, i64 4}
!167 = !{!"regnode_1", !7, i64 0, !7, i64 1, !37, i64 2, !12, i64 4}
!168 = !{!165, !37, i64 2}
!169 = !{!165, !7, i64 0}
!170 = !{!171, !37, i64 4}
!171 = !{!"regnode_2", !7, i64 0, !7, i64 1, !37, i64 2, !37, i64 4, !37, i64 6}
!172 = distinct !{!172, !25}
!173 = !{!36, !15, i64 64}
!174 = !{!36, !37, i64 56}
!175 = !{!36, !12, i64 84}
!176 = !{!36, !12, i64 4}
!177 = !{i64 0, i64 1, !9, i64 1, i64 1, !9, i64 2, i64 2, !163, i64 4, i64 4, !150, i64 8, i64 32, !9}
!178 = !{!31, !12, i64 4}
!179 = !{!180, !12, i64 4}
!180 = !{!"_reg_trie_trans", !12, i64 0, !12, i64 4}
!181 = !{!180, !12, i64 0}
!182 = distinct !{!182, !25}
!183 = !{!184, !37, i64 0}
!184 = !{!"_reg_trie_state", !37, i64 0, !7, i64 8}
!185 = distinct !{!185, !25}
!186 = distinct !{!186, !25}
!187 = distinct !{!187, !25}
!188 = !{!189, !6, i64 56}
!189 = !{!"scan_data_t", !15, i64 0, !15, i64 8, !6, i64 16, !15, i64 24, !15, i64 32, !15, i64 40, !6, i64 48, !6, i64 56, !15, i64 64, !6, i64 72, !12, i64 80, !6, i64 88, !15, i64 96, !15, i64 104, !6, i64 112, !15, i64 120, !12, i64 128, !12, i64 132, !6, i64 136, !6, i64 144}
!190 = !{!189, !6, i64 88}
!191 = !{!189, !6, i64 16}
!192 = !{!189, !6, i64 48}
!193 = !{!76, !7, i64 1}
!194 = !{!76, !37, i64 2}
!195 = !{!76, !6, i64 48}
!196 = !{!76, !7, i64 0}
!197 = !{!189, !6, i64 144}
!198 = !{!189, !6, i64 136}
!199 = !{!189, !12, i64 128}
!200 = !{!189, !15, i64 96}
!201 = !{!189, !15, i64 64}
!202 = !{!189, !15, i64 120}
!203 = !{!189, !6, i64 112}
!204 = !{!205, !15, i64 0}
!205 = !{!"reg_substr_datum", !15, i64 0, !15, i64 8, !6, i64 16, !6, i64 24, !15, i64 32}
!206 = !{!189, !15, i64 104}
!207 = !{!205, !15, i64 8}
!208 = !{!189, !12, i64 80}
!209 = !{!189, !6, i64 72}
!210 = !{!205, !6, i64 16}
!211 = !{!205, !6, i64 24}
!212 = !{i64 0, i64 1, !9, i64 1, i64 1, !9, i64 2, i64 2, !163, i64 4, i64 4, !150, i64 8, i64 32, !9, i64 40, i64 4, !150, i64 48, i64 8, !5}
!213 = !{!214, !7, i64 0}
!214 = !{!"reg_substr_data", !7, i64 0, !7, i64 8}
!215 = !{!205, !15, i64 32}
!216 = !{!14, !15, i64 72}
!217 = !{!75, !6, i64 232}
!218 = !{!219, !7, i64 0}
!219 = !{!"regnode_string", !7, i64 0, !7, i64 1, !37, i64 2, !7, i64 4}
!220 = !{!18, !12, i64 0}
!221 = !{!222, !12, i64 8}
!222 = !{!"regnode_2L", !7, i64 0, !7, i64 1, !37, i64 2, !12, i64 4, !12, i64 8}
!223 = distinct !{!223, !25}
!224 = !{!225, !6, i64 32}
!225 = !{!"gp", !6, i64 0, !6, i64 8, !6, i64 16, !12, i64 24, !12, i64 28, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !12, i64 64, !12, i64 67, !6, i64 72}
!226 = !{!91, !6, i64 72}
!227 = !{!123, !12, i64 12}
!228 = distinct !{!228, !25}
!229 = !{!225, !6, i64 0}
!230 = distinct !{!230, !25}
!231 = distinct !{!231, !25}
!232 = distinct !{!232, !25}
!233 = distinct !{!233, !25}
!234 = distinct !{!234, !25}
!235 = distinct !{!235, !25}
!236 = distinct !{!236, !25}
!237 = distinct !{!237, !25}
!238 = !{!75, !6, i64 208}
!239 = distinct !{!239, !25}
!240 = distinct !{!240, !25}
!241 = distinct !{!241, !25}
!242 = distinct !{!242, !25}
!243 = distinct !{!243, !25}
!244 = distinct !{!244, !25}
!245 = distinct !{!245, !25}
!246 = distinct !{!246, !25}
!247 = distinct !{!247, !25}
!248 = !{!189, !12, i64 132}
!249 = !{!189, !15, i64 8}
!250 = !{!251, !7, i64 1}
!251 = !{!"regnode_charclass", !7, i64 0, !7, i64 1, !37, i64 2, !12, i64 4, !7, i64 8}
!252 = !{!251, !7, i64 0}
!253 = !{!251, !37, i64 2}
!254 = !{!255, !12, i64 40}
!255 = !{!"regnode_charclass_class", !7, i64 0, !7, i64 1, !37, i64 2, !12, i64 4, !7, i64 8, !12, i64 40}
!256 = !{!76, !12, i64 40}
!257 = distinct !{!257, !25}
!258 = !{!189, !15, i64 0}
!259 = distinct !{!259, !25}
!260 = distinct !{!260, !25}
!261 = distinct !{!261, !25}
!262 = distinct !{!262, !25}
!263 = !{!75, !6, i64 320}
!264 = !{!75, !6, i64 312}
!265 = !{!266, !6, i64 48}
!266 = !{!"scan_frame", !6, i64 0, !6, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !6, i64 32, !6, i64 40, !6, i64 48}
!267 = !{!266, !6, i64 40}
!268 = !{!75, !12, i64 328}
!269 = !{!266, !6, i64 8}
!270 = !{!266, !6, i64 0}
!271 = !{!266, !12, i64 20}
!272 = !{!266, !12, i64 16}
!273 = !{!266, !6, i64 32}
!274 = !{!189, !15, i64 24}
!275 = !{!189, !15, i64 32}
!276 = !{!189, !15, i64 40}
!277 = !{!65, !15, i64 24}
!278 = distinct !{!278, !25}
!279 = distinct !{!279, !25}
!280 = !{!171, !37, i64 6}
!281 = distinct !{!281, !25}
!282 = distinct !{!282, !25}
!283 = !{!14, !15, i64 80}
!284 = !{!36, !12, i64 88}
!285 = !{!36, !15, i64 72}
!286 = distinct !{!286, !25}
!287 = distinct !{!287, !25}
!288 = !{!69, !6, i64 40}
!289 = distinct !{!289, !25}
!290 = !{!291, !6, i64 8}
!291 = !{!"he", !6, i64 0, !6, i64 8, !7, i64 16}
!292 = distinct !{!292, !25}
!293 = !{!14, !12, i64 112}
!294 = distinct !{!294, !25}
!295 = !{!95, !6, i64 0}
!296 = !{!297, !15, i64 16}
!297 = !{!"xpvhv", !6, i64 0, !7, i64 8, !15, i64 16, !15, i64 24}
!298 = distinct !{!298, !25}
!299 = distinct !{!299, !25}
!300 = distinct !{!300, !25}
!301 = distinct !{!301, !25}
!302 = distinct !{!302, !25}
!303 = distinct !{!303, !25}
!304 = distinct !{!304, !25}
!305 = distinct !{!305, !25}
!306 = distinct !{!306, !25}
!307 = !{!14, !6, i64 40}
!308 = !{!69, !6, i64 32}
!309 = !{!14, !6, i64 136}
!310 = !{!14, !6, i64 184}
!311 = !{i64 0, i64 1, !9, i64 8, i64 120, !9}
!312 = !{!313, !12, i64 12}
!313 = !{!"gv", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!314 = distinct !{!314, !25}
!315 = distinct !{!315, !25}
!316 = !{!36, !12, i64 60}
!317 = distinct !{!317, !25}
!318 = distinct !{!318, !25}
!319 = !{!320, !37, i64 0}
!320 = !{!"_reg_trie_trans_list_elem", !37, i64 0, !12, i64 4}
!321 = !{!320, !12, i64 4}
!322 = distinct !{!322, !25}
!323 = distinct !{!323, !25}
!324 = !{!325, !37, i64 0}
!325 = !{!"", !37, i64 0, !12, i64 4, !12, i64 8}
!326 = !{!325, !12, i64 4}
!327 = !{!325, !12, i64 8}
!328 = distinct !{!328, !25}
!329 = distinct !{!329, !25}
!330 = distinct !{!330, !25}
!331 = distinct !{!331, !25}
!332 = distinct !{!332, !25}
!333 = distinct !{!333, !25}
!334 = distinct !{!334, !25}
!335 = distinct !{!335, !25}
!336 = distinct !{!336, !25}
!337 = distinct !{!337, !25}
!338 = !{!36, !12, i64 80}
!339 = distinct !{!339, !25}
!340 = distinct !{!340, !25}
!341 = distinct !{!341, !25}
!342 = distinct !{!342, !25}
!343 = distinct !{!343, !25}
!344 = distinct !{!344, !25}
!345 = distinct !{!345, !25}
!346 = distinct !{!346, !25}
!347 = distinct !{!347, !25}
!348 = distinct !{!348, !25}
!349 = distinct !{!349, !25}
!350 = distinct !{!350, !25}
!351 = distinct !{!351, !25}
!352 = distinct !{!352, !25}
!353 = distinct !{!353, !25}
!354 = distinct !{!354, !25}
!355 = distinct !{!355, !25}
!356 = distinct !{!356, !25}
!357 = distinct !{!357, !25}
!358 = distinct !{!358, !25}
!359 = distinct !{!359, !25}
!360 = distinct !{!360, !25}
!361 = distinct !{!361, !25}
!362 = distinct !{!362, !25}
!363 = !{!91, !6, i64 64}
!364 = distinct !{!364, !25}
!365 = distinct !{!365, !25}
!366 = distinct !{!366, !25}
!367 = distinct !{!367, !25}
!368 = distinct !{!368, !25}
!369 = distinct !{!369, !25}
!370 = distinct !{!370, !25}
!371 = !{!297, !15, i64 24}
!372 = !{!373, !12, i64 28}
!373 = !{!"xpvhv_aux", !7, i64 0, !6, i64 8, !6, i64 16, !12, i64 24, !12, i64 28, !6, i64 32, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52}
!374 = distinct !{!374, !25, !375}
!375 = !{!"llvm.loop.peeled.count", i32 1}
!376 = distinct !{!376, !25}
!377 = distinct !{!377, !25}
!378 = distinct !{!378, !25}
!379 = distinct !{!379, !25}
!380 = distinct !{!380, !25}
!381 = distinct !{!381, !25}
!382 = distinct !{!382, !25}
!383 = distinct !{!383, !25}
